public￨1￨d class￨1￨d GenericController￨1￨d extends￨1￨d AbstractTestElement￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d Controller￨1￨d ,￨1￨d PerThreadClonable￨1￨d {￨1￨d protected￨2￨e List￨2￨e subControllersAndSamplers￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e int￨2￨e current￨2￨e ;￨2￨e protected￨2￨e Iterator￨2￨e controlIt￨2￨e ;￨2￨e private￨2￨e List￨2￨e configs￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e returnedNull￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e done￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e timeForNext￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e List￨2￨e assertions￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f GenericController￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNextFirst￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f List￨2￨f getConfigElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addConfigElement￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reInitialize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f removeCurrentController￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f resetCurrent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f incrementCurrent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f hasNextAtEnd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f nextAtEnd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasNext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f currentHasNextIsFalse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f shortCircuitIsDone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setShortCircuit￨2￨f (￨2￨f boolean￨3￨p done￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f TestElement￨2￨f getCurrentController￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f List￨2￨f getSubControllers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTestElement￨2￨f (￨2￨f TestElement￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addController￨2￨f (￨2￨f TestElement￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Sampler￨2￨f next￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Test￨2￨d extends￨2￨d TestCase￨2￨d {￨2￨d public￨3￨f Test￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f testProcessing￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f GenericController￨4￨e controller￨4￨e =￨4￨e new￨4￨e GenericController￨4￨e (￨4￨e )￨4￨e ;￨4￨e GenericController￨4￨e sub_1￨4￨e =￨4￨e new￨4￨e GenericController￨4￨e (￨4￨e )￨4￨e ;￨4￨e sub_1￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "one"￨4￨e )￨4￨e )￨4￨e ;￨4￨e sub_1￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "two"￨4￨e )￨4￨e )￨4￨e ;￨4￨e controller￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e sub_1￨4￨e )￨4￨e ;￨4￨e controller￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "three"￨4￨e )￨4￨e )￨4￨e ;￨4￨e GenericController￨4￨e sub_2￨4￨e =￨4￨e new￨4￨e GenericController￨4￨e (￨4￨e )￨4￨e ;￨4￨e GenericController￨4￨e sub_3￨4￨e =￨4￨e new￨4￨e GenericController￨4￨e (￨4￨e )￨4￨e ;￨4￨e sub_2￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "four"￨4￨e )￨4￨e )￨4￨e ;￨4￨e sub_3￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "five"￨4￨e )￨4￨e )￨4￨e ;￨4￨e sub_3￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "six"￨4￨e )￨4￨e )￨4￨e ;￨4￨e sub_2￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e sub_3￨4￨e )￨4￨e ;￨4￨e sub_2￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e makeSampler￨4￨e (￨4￨e "seven"￨4￨e )￨4￨e )￨4￨e ;￨4￨e controller￨4￨e .￨4￨e addTestElement￨4￨e (￨4￨e sub_2￨4￨e )￨4￨e ;￨4￨e String￨4￨f [￨4￨f ]￨4￨f order￨4￨f =￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ;￨4￨e int￨4￨e counter￨4￨e =￨4￨e 7￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c 2￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l assertEquals￨5￨e (￨5￨e 7￨5￨e ,￨5￨e counter￨5￨e )￨5￨e ;￨5￨e counter￨5￨e =￨5￨e 0￨5￨e ;￨5￨e while￨5￨l (￨5￨l controller￨6￨c .￨6￨c hasNext￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l TestElement￨6￨e sampler￨6￨e =￨6￨e controller￨6￨e .￨6￨e next￨6￨e (￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b assertEquals￨6￨b (￨6￨b order￨6￨b [￨6￨b (￨6￨b counter￨6￨b ++￨6￨b )￨6￨b ]￨6￨b ,￨6￨b sampler￨6￨b .￨6￨b getProperty￨6￨b (￨6￨b NAME￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨l }￨4￨l }￨3￨f private￨3￨f TestElement￨3￨f makeSampler￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f class￨3￨d TestSampler￨3￨d extends￨3￨d AbstractSampler￨3￨d implements￨3￨d PerSampleClonable￨3￨d {￨3￨d public￨4￨f void￨4￨f addCustomTestElement￨4￨f (￨4￨f TestElement￨5￨p t￨5￨p )￨4￨f {￨4￨f }￨4￨f public￨4￨f SampleResult￨4￨f sample￨4￨f (￨4￨f Entry￨5￨p e￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨d }￨2￨d }￨1￨d
public￨1￨d class￨1￨d RenameFolderAction￨1￨d extends￨1￨d AbstractColumbaAction￨1￨d implements￨1￨d ISelectionListener￨1￨d {￨1￨d public￨2￨f RenameFolderAction￨2￨f (￨2￨f FrameMediator￨3￨p frameMediator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectionChanged￨2￨f (￨2￨f SelectionChangedEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b org￨3￨b .￨3￨b columba￨3￨b .￨3￨b mail￨3￨b .￨3￨b gui￨3￨b .￨3￨b tree￨3￨b .￨3￨b selection￨3￨b .￨3￨b TreeSelectionChangedEvent￨3￨b )￨3￨b (￨3￨b evt￨3￨b )￨3￨b )￨3￨b .￨3￨b getSelected￨3￨b (￨3￨b )￨3￨b .￨3￨b length￨3￨b )￨3￨b >￨3￨b 0￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b AbstractFolder￨3￨e folder￨3￨e =￨3￨e (￨3￨e (￨3￨e org￨3￨e .￨3￨e columba￨3￨e .￨3￨e mail￨3￨e .￨3￨e gui￨3￨e .￨3￨e tree￨3￨e .￨3￨e selection￨3￨e .￨3￨e TreeSelectionChangedEvent￨3￨e )￨3￨e (￨3￨e evt￨3￨e )￨3￨e )￨3￨e .￨3￨e getSelected￨3￨e (￨3￨e )￨3￨e [￨3￨e 0￨3￨e ]￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c folder￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c folder￨4￨c instanceof￨4￨c AbstractMessageFolder￨4￨c )￨4￨c )￨3￨j {￨3￨j IFolderItem￨4￨e item￨4￨e =￨4￨e folder￨4￨e .￨4￨e getConfiguration￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j item￨5￨c .￨5￨c getString￨5￨c (￨5￨c "property"￨5￨c ,￨5￨c "accessrights"￨5￨c )￨5￨c .￨5￨c equals￨5￨c (￨5￨c "user"￨5￨c )￨5￨c )￨4￨j {￨4￨j setEnabled￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j setEnabled￨5￨e (￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j setEnabled￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ResourceUrlEncodingFilter￨1￨d extends￨1￨d OncePerRequestFilter￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Log￨2￨d logger￨2￨d =￨2￨d LogFactory￨2￨d .￨2￨d getLog￨2￨d (￨2￨d ResourceUrlEncodingFilter￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d @￨2￨d Override￨2￨d protected￨2￨d void￨2￨d doFilterInternal￨2￨d (￨2￨d HttpServletRequest￨2￨d request￨2￨d ,￨2￨d HttpServletResponse￨2￨d response￨2￨d ,￨2￨d FilterChain￨2￨d filterChain￨2￨d )￨2￨d throws￨2￨d IOException￨2￨d ,￨2￨d ServletException￨2￨d {￨2￨d }￨2￨d private￨2￨d static￨2￨d class￨2￨d ResourceUrlEncodingResponseWrapper￨2￨d extends￨2￨d HttpServletResponseWrapper￨2￨d {￨2￨d private￨3￨e HttpServletRequest￨3￨e request￨3￨e ;￨3￨e private￨3￨e Integer￨3￨e indexLookupPath￨3￨e ;￨3￨e private￨3￨f ResourceUrlEncodingResponseWrapper￨3￨f (￨3￨f HttpServletRequest￨4￨p request￨4￨p ,￨4￨p HttpServletResponse￨4￨p wrapped￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f encodeURL￨3￨f (￨3￨f String￨4￨p url￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f ResourceUrlProvider￨3￨f getResourceUrlProvider￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f initIndexLookupPath￨3￨f (￨3￨f ResourceUrlProvider￨4￨p urlProvider￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c indexLookupPath￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j String￨5￨e requestUri￨5￨e =￨5￨e urlProvider￨5￨e .￨5￨e getPathHelper￨5￨e (￨5￨e )￨5￨e .￨5￨e getRequestUri￨5￨e (￨5￨e this￨5￨e .￨5￨e request￨5￨e )￨5￨e ;￨5￨e String￨5￨e lookupPath￨5￨e =￨5￨e urlProvider￨5￨e .￨5￨e getPathHelper￨5￨e (￨5￨e )￨5￨e .￨5￨e getLookupPathForRequest￨5￨e (￨5￨e this￨5￨e .￨5￨e request￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b this￨5￨b .￨5￨b indexLookupPath￨5￨b =￨5￨b requestUri￨5￨b .￨5￨b indexOf￨5￨b (￨5￨b lookupPath￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TextFile￨1￨d extends￨1￨d File￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e encoding￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TextFile￨2￨f (￨2￨f File￨3￨p filename￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TextFile￨2￨f (￨2￨f File￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TextFile￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TextFile￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e lineEnd￨3￨e =￨3￨e System￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "line.separator"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b StringBuffer￨3￨b sb￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Reader￨3￨e reader￨3￨e =￨3￨e null￨3￨e ;￨3￨e BufferedReader￨3￨e br￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c encoding￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j reader￨5￨e =￨5￨e new￨5￨e FileReader￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j reader￨5￨e =￨5￨e new￨5￨e InputStreamReader￨5￨e (￨5￨e new￨5￨e FileInputStream￨5￨e (￨5￨e this￨5￨e )￨5￨e ,￨5￨e encoding￨5￨e )￨5￨e ;￨5￨e }￨4￨j br￨4￨e =￨4￨e new￨4￨e BufferedReader￨4￨e (￨4￨e reader￨4￨e )￨4￨e ;￨4￨e String￨4￨e line￨4￨e =￨4￨e "NOTNULL"￨4￨e ;￨4￨e while￨4￨l (￨4￨l line￨5￨c !=￨5￨c null￨5￨c )￨4￨l {￨4￨l line￨5￨e =￨5￨e br￨5￨e .￨5￨e readLine￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j line￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j sb￨6￨e .￨6￨e append￨6￨e (￨6￨e (￨6￨e line￨6￨e +￨6￨e lineEnd￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ioe￨4￨p )￨3￨f {￨3￨f TextFile￨4￨e .￨4￨e log￨4￨e .￨4￨e error￨4￨e (￨4￨e ""￨4￨e ,￨4￨e ioe￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f JOrphanUtils￨4￨e .￨4￨e closeQuietly￨4￨e (￨4￨e br￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e sb￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f getEncoding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEncoding￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DigestAlgorithm￨1￨d implements￨1￨d Algorithm￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e BYTE_MASK￨2￨e =￨2￨e 255￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e BUFFER_SIZE￨2￨e =￨2￨e 8192￨2￨e ;￨2￨e private￨2￨e String￨2￨e algorithm￨2￨e =￨2￨e "MD5"￨2￨e ;￨2￨e private￨2￨e String￨2￨e provider￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e MessageDigest￨2￨e messageDigest￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e int￨2￨e readBufferSize￨2￨e =￨2￨e DigestAlgorithm￨2￨e .￨2￨e BUFFER_SIZE￨2￨e ;￨2￨e public￨2￨f void￨2￨f setAlgorithm￨2￨f (￨2￨f String￨3￨p algorithm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProvider￨2￨f (￨2￨f String￨3￨p provider￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initMessageDigest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getValue￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b StringBuffer￨3￨b buf￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "<DigestAlgorithm:"￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "algorithm="￨3￨e )￨3￨e .￨3￨e append￨3￨e (￨3￨e algorithm￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e ";provider="￨3￨e )￨3￨e .￨3￨e append￨3￨e (￨3￨e provider￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e ">"￨3￨e )￨3￨e ;￨3￨e return￨3￨e buf￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ChangePassword￨1￨d extends￨1￨d ScarabTemplateAction￨1￨d {￨1￨d public￨2￨f void￨2￨f doChangepassword￨2￨f (￨2￨f RunData￨2￨f data￨2￨f ,￨2￨f TemplateContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e template￨3￨e =￨3￨e getCurrentTemplate￨3￨e (￨3￨e data￨3￨e ,￨3￨e null￨3￨e )￨3￨e ;￨3￨e String￨3￨e nextTemplate￨3￨e =￨3￨e getNextTemplate￨3￨e (￨3￨e data￨3￨e ,￨3￨e template￨3￨e )￨3￨e ;￨3￨e IntakeTool￨3￨e intake￨3￨e =￨3￨e getIntakeTool￨3￨e (￨3￨e context￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j intake￨4￨c .￨4￨c isAllValid￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j Object￨4￨e user￨4￨e =￨4￨e data￨4￨e .￨4￨e getUser￨4￨e (￨4￨e )￨4￨e .￨4￨e getTemp￨4￨e (￨4￨e SESSION_REGISTER￨4￨e )￨4￨e ;￨4￨e Group￨4￨e register￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c user￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c user￨5￨c instanceof￨5￨c ScarabUser￨5￨c )￨5￨c )￨4￨j {￨4￨j register￨5￨e =￨5￨e intake￨5￨e .￨5￨e get￨5￨e (￨5￨e "Register"￨5￨e ,￨5￨e (￨5￨e (￨5￨e ScarabUser￨5￨e )￨5￨e (￨5￨e user￨5￨e )￨5￨e )￨5￨e .￨5￨e getQueryKey￨5￨e (￨5￨e )￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j register￨5￨e =￨5￨e intake￨5￨e .￨5￨e get￨5￨e (￨5￨e "Register"￨5￨e ,￨5￨e DEFAULT_KEY￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b String￨4￨b username￨4￨b =￨4￨b register￨4￨b .￨4￨b get￨4￨b (￨4￨b "Email"￨4￨b )￨4￨b .￨4￨b toString￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b String￨4￨e oldPassword￨4￨e =￨4￨e register￨4￨e .￨4￨e get￨4￨e (￨4￨e "OldPassword"￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e password￨4￨e =￨4￨e register￨4￨e .￨4￨e get￨4￨e (￨4￨e "Password"￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e passwordConfirm￨4￨e =￨4￨e register￨4￨e .￨4￨e get￨4￨e (￨4￨e "PasswordConfirm"￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j oldPassword￨5￨c .￨5￨c equals￨5￨c (￨5￨c password￨5￨c )￨5￨c )￨4￨j {￨4￨j getScarabRequestTool￨5￨e (￨5￨e context￨5￨e )￨5￨e .￨5￨e setInfoMessage￨5￨e (￨5￨e (￨5￨e "Your<seq2seq4repair_space>new<seq2seq4repair_space>password<seq2seq4repair_space>was<seq2seq4repair_space>the<seq2seq4repair_space>same<seq2seq4repair_space>as<seq2seq4repair_space>your<seq2seq4repair_space>old<seq2seq4repair_space>one.<seq2seq4repair_space>"￨5￨e +￨5￨e "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>not<seq2seq4repair_space>been<seq2seq4repair_space>changed!"￨5￨e )￨5￨e )￨5￨e ;￨5￨e setTarget￨5￨e (￨5￨e data￨5￨e ,￨5￨e template￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j password￨5￨c .￨5￨c equals￨5￨c (￨5￨c passwordConfirm￨5￨c )￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f ScarabUser￨6￨e confirmedUser￨6￨e =￨6￨e (￨6￨e (￨6￨e ScarabUser￨6￨e )￨6￨e (￨6￨e TurbineSecurity￨6￨e .￨6￨e getUser￨6￨e (￨6￨e username￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e confirmedUser￨6￨e .￨6￨e setPasswordExpire￨6￨e (￨6￨e )￨6￨e ;￨6￨e confirmedUser￨6￨e .￨6￨e setHasLoggedIn￨6￨e (￨6￨e Boolean￨6￨e .￨6￨e FALSE￨6￨e )￨6￨e ;￨6￨e data￨6￨e .￨6￨e setUser￨6￨e (￨6￨e confirmedUser￨6￨e )￨6￨e ;￨6￨e data￨6￨e .￨6￨e save￨6￨e (￨6￨e )￨6￨e ;￨6￨e TurbineSecurity￨6￨e .￨6￨e changePassword￨6￨e (￨6￨e confirmedUser￨6￨e ,￨6￨e oldPassword￨6￨e ,￨6￨e password￨6￨e )￨6￨e ;￨6￨e getScarabRequestTool￨6￨e (￨6￨e context￨6￨e )￨6￨e .￨6￨e setConfirmMessage￨6￨e (￨6￨e (￨6￨e "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>been<seq2seq4repair_space>changed."￨6￨e +￨6￨e "<seq2seq4repair_space>Please<seq2seq4repair_space>login<seq2seq4repair_space>with<seq2seq4repair_space>your<seq2seq4repair_space>new<seq2seq4repair_space>password."￨6￨e )￨6￨e )￨6￨e ;￨6￨e setTarget￨6￨e (￨6￨e data￨6￨e ,￨6￨e "Login.vm"￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f PasswordMismatchException￨6￨p pme￨6￨p )￨5￨f {￨5￨f getScarabRequestTool￨6￨e (￨6￨e context￨6￨e )￨6￨e .￨6￨e setAlertMessage￨6￨e (￨6￨e pme￨6￨e .￨6￨e getMessage￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e setTarget￨6￨e (￨6￨e data￨6￨e ,￨6￨e template￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j else￨4￨j {￨4￨j getScarabRequestTool￨5￨e (￨5￨e context￨5￨e )￨5￨e .￨5￨e setAlertMessage￨5￨e (￨5￨e "The<seq2seq4repair_space>passwords<seq2seq4repair_space>you<seq2seq4repair_space>entered<seq2seq4repair_space>do<seq2seq4repair_space>not<seq2seq4repair_space>match!"￨5￨e )￨5￨e ;￨5￨e setTarget￨5￨e (￨5￨e data￨5￨e ,￨5￨e template￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f }￨1￨d
public￨1￨d }￨2￨f void￨2￨f setBackgroundPixel￨2￨f (￨2￨f int￨3￨p pixel￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setCheckboxImageListColor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setCheckboxImageList￨2￨f (￨2￨f int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setFocusIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setForegroundPixel￨2￨f (￨2￨f int￨3￨p pixel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHeaderVisible￨2￨f (￨2￨f boolean￨3￨p show￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setItemCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setItemHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLinesVisible￨2￨f (￨2￨f boolean￨3￨p show￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRedraw￨2￨f (￨2￨f boolean￨3￨p redraw￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setScrollWidth￨2￨f (￨2￨f TableItem￨3￨p item￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p [￨3￨p ]￨3￨p indices￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f TableItem￨3￨p [￨3￨p ]￨3￨p items￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setTableEmpty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTopIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showColumn￨2￨f (￨2￨f TableColumn￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f showItem￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showItem￨2￨f (￨2￨f TableItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f toolTipText￨2￨f (￨2￨f NMTTDISPINFO￨3￨p hdr￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f widgetStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f TCHAR￨2￨f windowClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f windowProc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CHAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_ERASEBKGND￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_GETOBJECT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_KEYDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONDBLCLK￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSEHOVER￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PAINT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NOTIFY￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f NMHDR￨3￨e hdr￨3￨e =￨3￨e new￨3￨e NMHDR￨3￨e (￨3￨e )￨3￨e ;￨3￨e OS￨3￨e .￨3￨e MoveMemory￨3￨e (￨3￨e hdr￨3￨e ,￨3￨e lParam￨3￨e ,￨3￨e sizeof￨3￨e )￨3￨e ;￨3￨e int￨3￨e hwndHeader￨3￨e =￨3￨e OS￨3￨e .￨3￨e SendMessage￨3￨e (￨3￨e handle￨3￨e ,￨3￨e LVM_GETHEADER￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c hdr￨4￨c .￨4￨c hwndFrom￨4￨c )￨4￨c ==￨4￨c hwndHeader￨4￨c )￨3￨j {￨3￨j switch￨4￨s (￨4￨s hdr￨4￨c .￨4￨c code￨4￨c )￨4￨s {￨4￨s case￨5￨c OS￨5￨c .￨5￨c HDN_BEGINTRACKW￨5￨c :￨5￨c case￨5￨c OS￨5￨c .￨5￨c HDN_BEGINTRACKA￨5￨c :￨5￨c case￨5￨c OS￨5￨c .￨5￨c HDN_DIVIDERDBLCLICKW￨5￨c :￨5￨c case￨5￨c OS￨5￨c .￨5￨c HDN_DIVIDERDBLCLICKA￨5￨c :￨5￨c {￨6￨e NMHEADER￨6￨e phdn￨6￨e =￨6￨e new￨6￨e NMHEADER￨6￨e (￨6￨e )￨6￨e ;￨6￨e OS￨6￨e .￨6￨e MoveMemory￨6￨e (￨6￨e phdn￨6￨e ,￨6￨e lParam￨6￨e ,￨6￨e NMHEADER￨6￨e .￨6￨e sizeof￨6￨e )￨6￨e ;￨6￨e TableColumn￨6￨e column￨6￨e =￨6￨e columns￨6￨e [￨6￨e phdn￨6￨e .￨6￨e iItem￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c column￨7￨c !=￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c !￨7￨c (￨7￨c column￨7￨c .￨7￨c getResizable￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j return￨7￨e LRESULT￨7￨e .￨7￨e ONE￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c OS￨5￨c .￨5￨c HDN_ITEMCHANGEDW￨5￨c :￨5￨c case￨5￨c OS￨5￨c .￨5￨c HDN_ITEMCHANGEDA￨5￨c :￨5￨c {￨6￨e int￨6￨e width￨6￨e =￨6￨e OS￨6￨e .￨6￨e SendMessage￨6￨e (￨6￨e handle￨6￨e ,￨6￨e LVM_GETCOLUMNWIDTH￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e 0￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c (￨7￨c lastWidth￨7￨c )￨7￨c ==￨7￨c 0￨7￨c )￨7￨c &&￨7￨c (￨7￨c width￨7￨c >￨7￨c 0￨7￨c )￨7￨c )￨6￨j {￨6￨j int￨7￨e bits￨7￨e =￨7￨e OS￨7￨e .￨7￨e SendMessage￨7￨e (￨7￨e handle￨7￨e ,￨7￨e LVM_GETEXTENDEDLISTVIEWSTYLE￨7￨e ,￨7￨e 0￨7￨e ,￨7￨e 0￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j (￨8￨c bits￨8￨c &￨8￨c (￨8￨c OS￨8￨c .￨8￨c LVS_EX_GRIDLINES￨8￨c )￨8￨c )￨8￨c !=￨8￨c 0￨8￨c )￨7￨j {￨7￨j RECT￨8￨e rect￨8￨e =￨8￨e new￨8￨e RECT￨8￨e (￨8￨e )￨8￨e ;￨8￨e OS￨8￨e .￨8￨e GetClientRect￨8￨e (￨8￨e handle￨8￨e ,￨8￨e rect￨8￨e )￨8￨e ;￨8￨e rect￨8￨e .￨8￨e right￨8￨e =￨8￨e (￨8￨e rect￨8￨e .￨8￨e left￨8￨e )￨8￨e +￨8￨e width￨8￨e ;￨8￨e OS￨8￨e .￨8￨e InvalidateRect￨8￨e (￨8￨e handle￨8￨e ,￨8￨e rect￨8￨e ,￨8￨e true￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨j lastWidth￨6￨e =￨6￨e width￨6￨e ;￨6￨e if￨6￨j (￨6￨j !￨7￨c (￨7￨c ignoreResize￨7￨c )￨7￨c )￨6￨j {￨6￨j NMHEADER￨7￨e phdn￨7￨e =￨7￨e new￨7￨e NMHEADER￨7￨e (￨7￨e )￨7￨e ;￨7￨e OS￨7￨e .￨7￨e MoveMemory￨7￨e (￨7￨e phdn￨7￨e ,￨7￨e lParam￨7￨e ,￨7￨e NMHEADER￨7￨e .￨7￨e sizeof￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j (￨8￨c phdn￨8￨c .￨8￨c pitem￨8￨c )￨8￨c !=￨8￨c 0￨8￨c )￨7￨j {￨7￨j HDITEM￨8￨e pitem￨8￨e =￨8￨e new￨8￨e HDITEM￨8￨e (￨8￨e )￨8￨e ;￨8￨e OS￨8￨e .￨8￨e MoveMemory￨8￨e (￨8￨e pitem￨8￨e ,￨8￨e phdn￨8￨e .￨8￨e pitem￨8￨e ,￨8￨e HDITEM￨8￨e .￨8￨e sizeof￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c (￨9￨c pitem￨9￨c .￨9￨c mask￨9￨c )￨9￨c &￨9￨c (￨9￨c OS￨9￨c .￨9￨c HDI_WIDTH￨9￨c )￨9￨c )￨9￨c !=￨9￨c 0￨9￨c )￨8￨j {￨8￨j TableColumn￨9￨e column￨9￨e =￨9￨e columns￨9￨e [￨9￨e phdn￨9￨e .￨9￨e iItem￨9￨e ]￨9￨e ;￨9￨e if￨9￨j (￨9￨j column￨10￨c !=￨10￨c null￨10￨c )￨9￨j {￨9￨j column￨10￨e .￨10￨e sendEvent￨10￨e (￨10￨e Resize￨10￨e )￨10￨e ;￨10￨e if￨10￨j (￨10￨j isDisposed￨11￨c (￨11￨c )￨11￨c )￨10￨j {￨10￨j return￨11￨e LRESULT￨11￨e .￨11￨e ZERO￨11￨e ;￨11￨e }￨10￨j int￨10￨e count￨10￨e =￨10￨e OS￨10￨e .￨10￨e SendMessage￨10￨e (￨10￨e hwndHeader￨10￨e ,￨10￨e HDM_GETITEMCOUNT￨10￨e ,￨10￨e 0￨10￨e ,￨10￨e 0￨10￨e )￨10￨e ;￨10￨e if￨10￨j (￨10￨j (￨11￨c count￨11￨c ==￨11￨c 1￨11￨c )￨11￨c &&￨11￨c (￨11￨c (￨11￨c columns￨11￨c [￨11￨c 0￨11￨c ]￨11￨c )￨11￨c ==￨11￨c null￨11￨c )￨11￨c )￨10￨j {￨10￨j count￨11￨e =￨11￨e 0￨11￨e ;￨11￨e }￨10￨j TableColumn￨10￨e [￨10￨e ]￨10￨e newColumns￨10￨e =￨10￨e new￨10￨e TableColumn￨10￨e [￨10￨e count￨10￨e ]￨10￨e ;￨10￨e System￨10￨e .￨10￨e arraycopy￨10￨e (￨10￨e columns￨10￨e ,￨10￨e 0￨10￨e ,￨10￨e newColumns￨10￨e ,￨10￨e 0￨10￨e ,￨10￨e count￨10￨e )￨10￨e ;￨10￨e for￨10￨l (￨10￨l int￨11￨c i￨11￨c =￨11￨c (￨11￨c phdn￨11￨c .￨11￨c iItem￨11￨c )￨11￨c +￨11￨c 1￨11￨c ;￨11￨c i￨11￨c <￨11￨c count￨11￨c ;￨11￨c i￨11￨c ++￨11￨c )￨10￨l {￨10￨l <START_BUG>￨11￨b if￨11￨b (￨11￨b (￨11￨b (￨11￨b newColumns￨11￨b [￨11￨b i￨11￨b ]￨11￨b )￨11￨b !=￨11￨b null￨11￨b )￨11￨b &&￨11￨b (￨11￨b !￨11￨b (￨11￨b newColumns￨11￨b [￨11￨b i￨11￨b ]￨11￨b .￨11￨b isDisposed￨11￨b (￨11￨b )￨11￨b )￨11￨b )￨11￨b )￨11￨b {￨11￨b <END_BUG>￨11￨b newColumns￨11￨e [￨11￨e i￨11￨e ]￨11￨e .￨11￨e sendEvent￨11￨e (￨11￨e Move￨11￨e )￨11￨e ;￨11￨e }￨10￨l }￨9￨j }￨8￨j }￨7￨j }￨6￨j break￨6￨e ;￨6￨e case￨5￨c OS￨5￨c .￨5￨c HDN_ITEMDBLCLICKW￨5￨c :￨5￨c case￨5￨c OS￨5￨c .￨5￨c HDN_ITEMDBLCLICKA￨5￨c :￨5￨c {￨6￨e NMHEADER￨6￨e phdn￨6￨e =￨6￨e new￨6￨e NMHEADER￨6￨e (￨6￨e )￨6￨e ;￨6￨e OS￨6￨e .￨6￨e MoveMemory￨6￨e (￨6￨e phdn￨6￨e ,￨6￨e lParam￨6￨e ,￨6￨e NMHEADER￨6￨e .￨6￨e sizeof￨6￨e )￨6￨e ;￨6￨e TableColumn￨6￨e column￨6￨e =￨6￨e columns￨6￨e [￨6￨e phdn￨6￨e .￨6￨e iItem￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j column￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j column￨7￨e .￨7￨e postEvent￨7￨e (￨7￨e DefaultSelection￨7￨e )￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e }￨4￨s }￨3￨j return￨3￨e super￨3￨e .￨3￨e WM_NOTIFY￨3￨e (￨3￨e wParam￨3￨e ,￨3￨e lParam￨3￨e )￨3￨e ;￨3￨e }￨2￨f LRESULT￨2￨f WM_RBUTTONDBLCLK￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_RBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETFOCUS￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SIZE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SYSCOLORCHANGE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_VSCROLL￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_WINDOWPOSCHANGED￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmNotifyChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d (￨7￨c baseValidator￨7￨c .￨7￨c getVariety￨7￨c (￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c XSSimpleType￨7￨c .￨7￨c VARIETY_UNION￨7￨c )￨7￨c )￨6￨j {￨6￨j XSSimpleType￨7￨e [￨7￨e ]￨7￨e types￨7￨e =￨7￨e (￨7￨e (￨7￨e org￨7￨e .￨7￨e apache￨7￨e .￨7￨e xerces￨7￨e .￨7￨e impl￨7￨e .￨7￨e dv￨7￨e .￨7￨e XSUnionSimpleType￨7￨e )￨7￨e (￨7￨e baseValidator￨7￨e )￨7￨e )￨7￨e .￨7￨e getMemberTypes￨7￨e (￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c (￨8￨c types￨8￨c .￨8￨c length￨8￨c )￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l dTValidators￨8￨e .￨8￨e addElement￨8￨e (￨8￨e types￨8￨e [￨8￨e j￨8￨e ]￨8￨e )￨8￨e ;￨8￨e }￨7￨l }￨6￨j else￨6￨j {￨6￨j dTValidators￨7￨e .￨7￨e addElement￨7￨e (￨7￨e baseValidator￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨l }￨3￨j if￨3￨j (￨3￨j baseTypeName￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j content￨4￨e =￨4￨e DOMUtil￨4￨e .￨4￨e getNextSiblingElement￨4￨e (￨4￨e content￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j content￨4￨e =￨4￨e DOMUtil￨4￨e .￨4￨e getFirstChildElement￨4￨e (￨4￨e content￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j content￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j DOMUtil￨6￨c .￨6￨c getLocalName￨6￨c (￨6￨c content￨6￨c )￨6￨c .￨6￨c equals￨6￨c (￨6￨c ELT_ANNOTATION￨6￨c )￨6￨c )￨5￨j {￨5￨j traverseAnnotationDecl￨6￨e (￨6￨e content￨6￨e ,￨6￨e attrValues￨6￨e ,￨6￨e false￨6￨e ,￨6￨e schemaDoc￨6￨e )￨6￨e ;￨6￨e content￨6￨e =￨6￨e DOMUtil￨6￨e .￨6￨e getNextSiblingElement￨6￨e (￨6￨e content￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j if￨3￨j (￨3￨j union￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j memberTypes￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j content￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j DOMUtil￨7￨c .￨7￨c getLocalName￨7￨c (￨7￨c content￨7￨c )￨7￨c .￨7￨c equals￨7￨c (￨7￨c ELT_ANNOTATION￨7￨c )￨7￨c )￨6￨j {￨6￨j traverseAnnotationDecl￨7￨e (￨7￨e content￨7￨e ,￨7￨e attrValues￨7￨e ,￨7￨e false￨7￨e ,￨7￨e schemaDoc￨7￨e )￨7￨e ;￨7￨e content￨7￨e =￨7￨e DOMUtil￨7￨e .￨7￨e getNextSiblingElement￨7￨e (￨7￨e content￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j content￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j DOMUtil￨7￨c .￨7￨c getLocalName￨7￨c (￨7￨c content￨7￨c )￨7￨c .￨7￨c equals￨7￨c (￨7￨c ELT_ANNOTATION￨7￨c )￨7￨c )￨6￨j {￨6￨j Object￨7￨f [￨7￨f ]￨7￨f args￨7￨f =￨7￨f new￨7￨f Object￨7￨f [￨7￨f ]￨7￨f (￨7￨f )￨7￨f {￨7￨f }￨7￨f ;￨7￨e reportSchemaError￨7￨e (￨7￨e "dt-union-memberType"￨7￨e ,￨7￨e args￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j while￨4￨l (￨4￨l content￨5￨c !=￨5￨c null￨5￨c )￨4￨l {￨4￨l baseValidator￨5￨e =￨5￨e traverseLocal￨5￨e (￨5￨e content￨5￨e ,￨5￨e schemaDoc￨5￨e ,￨5￨e grammar￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j baseValidator￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c (￨7￨c fListName￨7￨c .￨7￨c length￨7￨c (￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c baseValidator￨7￨c .￨7￨c getVariety￨7￨c (￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c XSSimpleType￨7￨c .￨7￨c VARIETY_LIST￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j reportCosListOfAtomic￨7￨e (￨7￨e qualifiedName￨7￨e )￨7￨e ;￨7￨e return￨7￨e null￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j (￨7￨c baseValidator￨7￨c .￨7￨c getVariety￨7￨c (￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c XSSimpleType￨7￨c .￨7￨c VARIETY_UNION￨7￨c )￨7￨c )￨6￨j {￨6￨j XSSimpleType￨7￨e [￨7￨e ]￨7￨e types￨7￨e =￨7￨e (￨7￨e (￨7￨e org￨7￨e .￨7￨e apache￨7￨e .￨7￨e xerces￨7￨e .￨7￨e impl￨7￨e .￨7￨e dv￨7￨e .￨7￨e XSUnionSimpleType￨7￨e )￨7￨e (￨7￨e baseValidator￨7￨e )￨7￨e )￨7￨e .￨7￨e getMemberTypes￨7￨e (￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c i￨8￨c =￨8￨c 0￨8￨c ;￨8￨c i￨8￨c <￨8￨c (￨8￨c types￨8￨c .￨8￨c length￨8￨c )￨8￨c ;￨8￨c i￨8￨c ++￨8￨c )￨7￨l {￨7￨l dTValidators￨8￨e .￨8￨e addElement￨8￨e (￨8￨e types￨8￨e [￨8￨e i￨8￨e ]￨8￨e )￨8￨e ;￨8￨e }￨7￨l }￨6￨j else￨6￨j {￨6￨j dTValidators￨7￨e .￨7￨e addElement￨7￨e (￨7￨e baseValidator￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j baseValidator￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j Object￨6￨f [￨6￨f ]￨6￨f args￨6￨f =￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f ;￨6￨e reportSchemaError￨6￨e (￨6￨e "dt-unknown-basetype"￨6￨e ,￨6￨e args￨6￨e )￨6￨e ;￨6￨e baseValidator￨6￨e =￨6￨e SchemaGrammar￨6￨e .￨6￨e fAnySimpleType￨6￨e ;￨6￨e }￨5￨j content￨5￨e =￨5￨e DOMUtil￨5￨e .￨5￨e getNextSiblingElement￨5￨e (￨5￨e content￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j if￨3￨j (￨3￨j (￨4￨c fListName￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j fListName￨5￨c .￨5￨c equals￨5￨c (￨5￨c qualifiedName￨5￨c )￨5￨c )￨4￨j {￨4￨j fListName￨5￨e =￨5￨e SchemaSymbols￨5￨e .￨5￨e EMPTY_STRING￨5￨e ;￨5￨e }￨4￨j }￨3￨j XSFacets￨3￨e facetData￨3￨e =￨3￨e null￨3￨e ;￨3￨e short￨3￨e presentFacets￨3￨e =￨3￨e 0￨3￨e ;￨3￨e short￨3￨e fixedFacets￨3￨e =￨3￨e 0￨3￨e ;￨3￨e if￨3￨j (￨3￨j restriction￨4￨c &&￨4￨c (￨4￨c content￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j FacetInfo￨4￨e fi￨4￨e =￨4￨e traverseFacets￨4￨e (￨4￨e content￨4￨e ,￨4￨e contentAttrs￨4￨e ,￨4￨e nameProperty￨4￨e ,￨4￨e baseValidator￨4￨e ,￨4￨e schemaDoc￨4￨e ,￨4￨e grammar￨4￨e )￨4￨e ;￨4￨e content￨4￨e =￨4￨e fi￨4￨e .￨4￨e nodeAfterFacets￨4￨e ;￨4￨e if￨4￨j (￨4￨j content￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j content￨5￨e =￨5￨e null￨5￨e ;￨5￨e reportSchemaError￨5￨f (￨5￨f "s4s-elt-must-match"￨5￨f ,￨5￨f new￨5￨f Object￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j facetData￨4￨e =￨4￨e fi￨4￨e .￨4￨e facetdata￨4￨e ;￨4￨e presentFacets￨4￨e =￨4￨e fi￨4￨e .￨4￨e fPresentFacets￨4￨e ;￨4￨e fixedFacets￨4￨e =￨4￨e fi￨4￨e .￨4￨e fFixedFacets￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j list￨4￨c &&￨4￨c (￨4￨c content￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j baseTypeName￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j DOMUtil￨6￨c .￨6￨c getLocalName￨6￨c (￨6￨c content￨6￨c )￨6￨c .￨6￨c equals￨6￨c (￨6￨c ELT_ANNOTATION￨6￨c )￨6￨c )￨5￨j {￨5￨j traverseAnnotationDecl￨6￨e (￨6￨e content￨6￨e ,￨6￨e attrValues￨6￨e ,￨6￨e false￨6￨e ,￨6￨e schemaDoc￨6￨e )￨6￨e ;￨6￨e content￨6￨e =￨6￨e DOMUtil￨6￨e .￨6￨e getNextSiblingElement￨6￨e (￨6￨e content￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j content￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j Object￨6￨f [￨6￨f ]￨6￨f args￨6￨f =￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f ;￨6￨e reportSchemaError￨6￨e (￨6￨e "dt-list-itemType"￨6￨e ,￨6￨e args￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j reportSchemaError￨5￨f (￨5￨f "s4s-elt-must-match"￨5￨f ,￨5￨f new￨5￨f Object￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j if￨3￨j (￨3￨j union￨4￨c &&￨4￨c (￨4￨c content￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j reportSchemaError￨4￨f (￨4￨f "s4s-elt-must-match"￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j XSSimpleType￨3￨e newDecl￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j list￨4￨c )￨3￨j {￨3￨j newDecl￨4￨e =￨4￨e schemaFactory￨4￨e .￨4￨e createTypeList￨4￨e (￨4￨e nameProperty￨4￨e ,￨4￨e schemaDoc￨4￨e .￨4￨e fTargetNamespace￨4￨e ,￨4￨e (￨4￨e (￨4￨e short￨4￨e )￨4￨e (￨4￨e finalProperty￨4￨e )￨4￨e )￨4￨e ,￨4￨e baseValidator￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j restriction￨4￨c )￨3￨j {￨3￨j newDecl￨4￨e =￨4￨e schemaFactory￨4￨e .￨4￨e createTypeRestriction￨4￨e (￨4￨e nameProperty￨4￨e ,￨4￨e schemaDoc￨4￨e .￨4￨e fTargetNamespace￨4￨e ,￨4￨e (￨4￨e (￨4￨e short￨4￨e )￨4￨e (￨4￨e finalProperty￨4￨e )￨4￨e )￨4￨e ,￨4￨e baseValidator￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f fValidationState￨5￨e .￨5￨e setNamespaceSupport￨5￨e (￨5￨e schemaDoc￨5￨e .￨5￨e fNamespaceSupport￨5￨e )￨5￨e ;￨5￨e newDecl￨5￨e .￨5￨e applyFacets￨5￨e (￨5￨e facetData￨5￨e ,￨5￨e presentFacets￨5￨e ,￨5￨e fixedFacets￨5￨e ,￨5￨e fValidationState￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f InvalidDatatypeFacetException￨5￨p ex￨5￨p )￨4￨f {￨4￨f <START_BUG>￨5￨b reportGenericSchemaError￨5￨b (￨5￨b (￨5￨b (￨5￨b (￨5￨b "facet<seq2seq4repair_space>error<seq2seq4repair_space>when<seq2seq4repair_space>creating<seq2seq4repair_space>type<seq2seq4repair_space>'"￨5￨b +￨5￨b qualifiedName￨5￨b )￨5￨b +￨5￨b "':<seq2seq4repair_space>"￨5￨b )￨5￨b +￨5￨b (￨5￨b ex￨5￨b .￨5￨b getLocalizedMessage￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f }￨3￨j else￨3￨j {￨3￨j XSSimpleType￨4￨e [￨4￨e ]￨4￨e memberDecls￨4￨e =￨4￨e new￨4￨e XSSimpleType￨4￨e [￨4￨e dTValidators￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c dTValidators￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l memberDecls￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e (￨5￨e (￨5￨e XSSimpleType￨5￨e )￨5￨e (￨5￨e dTValidators￨5￨e .￨5￨e elementAt￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l newDecl￨4￨e =￨4￨e schemaFactory￨4￨e .￨4￨e createTypeUnion￨4￨e (￨4￨e nameProperty￨4￨e ,￨4￨e schemaDoc￨4￨e .￨4￨e fTargetNamespace￨4￨e ,￨4￨e (￨4￨e (￨4￨e short￨4￨e )￨4￨e (￨4￨e finalProperty￨4￨e )￨4￨e )￨4￨e ,￨4￨e memberDecls￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c nameProperty￨4￨c ==￨4￨c null￨4￨c )￨4￨c &&￨4￨c isGlobal￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c newDecl￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c isGlobal￨4￨c )￨3￨j {￨3￨j grammar￨4￨e .￨4￨e addGlobalTypeDecl￨4￨e (￨4￨e newDecl￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e newDecl￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f reportCosListOfAtomic￨2￨f (￨2￨f String￨3￨p qualifiedName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f XSSimpleType￨2￨f findDTValidator￨2￨f (￨2￨f Element￨3￨p elm￨3￨p ,￨3￨p QName￨3￨p baseTypeStr￨3￨p ,￨3￨p short￨3￨p baseRefContext￨3￨p ,￨3￨p XSDocumentInfo￨3￨p schemaDoc￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isListDatatype￨2￨f (￨2￨f XSSimpleType￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WarWebXmlInterceptor￨1￨d extends￨1￨d BaseInterceptor￨1￨d implements￨1￨d ContextInterceptor￨1￨d {￨1￨d private￨2￨e static￨2￨e StringManager￨2￨e sm￨2￨e =￨2￨e StringManager￨2￨e .￨2￨e getManager￨2￨e (￨2￨e "org.apache.tomcat.core"￨2￨e )￨2￨e ;￨2￨e public￨2￨f WarWebXmlInterceptor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f contextInit￨2￨f (￨2￨f Context￨3￨p ctx￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c ctx￨4￨c .￨4￨c getDocumentBase￨4￨c (￨4￨c )￨4￨c .￨4￨c getProtocol￨4￨c (￨4￨c )￨4￨c .￨4￨c equalsIgnoreCase￨4￨c (￨4￨c "war"￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j WebApplicationReader￨3￨e webXmlReader￨3￨e =￨3￨e new￨3￨e WebApplicationReader￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f webXmlReader￨4￨e .￨4￨e processDefaultWebApp￨4￨e (￨4￨e ctx￨4￨e )￨4￨e ;￨4￨e String￨4￨e s￨4￨e =￨4￨e ctx￨4￨e .￨4￨e getDocumentBase￨4￨e (￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j s￨5￨c .￨5￨c endsWith￨5￨c (￨5￨c "/"￨5￨c )￨5￨c )￨4￨j {￨4￨j s￨5￨e =￨5￨e s￨5￨e .￨5￨e substring￨5￨e (￨5￨e 0￨5￨e ,￨5￨e (￨5￨e (￨5￨e s￨5￨e .￨5￨e length￨5￨e (￨5￨e )￨5￨e )￨5￨e -￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j URL￨4￨e webURL￨4￨e =￨4￨e null￨4￨e ;￨4￨e <START_BUG>￨4￨b webURL￨4￨b =￨4￨b new￨4￨b URL￨4￨b (￨4￨b (￨4￨b (￨4￨b s￨4￨b +￨4￨b "!/"￨4￨b )￨4￨b +￨4￨b (￨4￨b Constants￨4￨b .￨4￨b Context￨4￨b .￨4￨b ConfigFile￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b InputStream￨4￨e is￨4￨e =￨4￨e webURL￨4￨e .￨4￨e openConnection￨4￨e (￨4￨e )￨4￨e .￨4￨e getInputStream￨4￨e (￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Context("￨4￨e +￨4￨e (￨4￨e ctx￨4￨e .￨4￨e getPath￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "):<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e webURL￨4￨e .￨4￨e getFile￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e webXmlReader￨4￨e .￨4￨e processWebApp￨4￨e (￨4￨e ctx￨4￨e ,￨4￨e is￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f String￨4￨e msg￨4￨e =￨4￨e WarWebXmlInterceptor￨4￨e .￨4￨e sm￨4￨e .￨4￨e getString￨4￨e (￨4￨e "context.getConfig.e"￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e ctx￨4￨e .￨4￨e getPath￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e ctx￨4￨e .￨4￨e getDocBase￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Choices￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d AbstractOptions￨1￨d <￨1￨d T￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e public￨2￨f Choices￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p Palette￨3￨p <￨3￨p T￨3￨p >￨3￨p palette￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f super￨3￨e .￨3￨e onComponentTag￨3￨e (￨3￨e tag￨3￨e )￨3￨e ;￨3￨e IValueMap￨3￨e attrs￨3￨e =￨3￨e tag￨3￨e .￨3￨e getAttributes￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e onFocus￨3￨e =￨3￨e Choices￨3￨e .￨3￨e getPalette￨3￨e (￨3￨e )￨3￨e .￨3￨e getChoicesOnFocusJS￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j onFocus￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b attrs￨4￨b .￨4￨b put￨4￨b (￨4￨b "onFocus"￨4￨b ,￨4￨b onFocus￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j tag￨3￨e .￨3￨e getAttributes￨3￨e (￨3￨e )￨3￨e .￨3￨e put￨3￨e (￨3￨e "ondblclick"￨3￨e ,￨3￨e Choices￨3￨e .￨3￨e getPalette￨3￨e (￨3￨e )￨3￨e .￨3￨e getAddOnClickJS￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Iterator￨2￨f <￨2￨f T￨2￨f >￨2￨f getOptionsIterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CodeFlow￨1￨d implements￨1￨d Opcodes￨1￨d {￨1￨d private￨2￨e final￨2￨e Stack￨2￨e <￨2￨e ArrayList￨2￨e <￨2￨e String￨2￨e >￨2￨e >￨2￨e compilationScopes￨2￨e ;￨2￨e public￨2￨f CodeFlow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f loadTarget￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pushDescriptor￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b Assert￨3￨b .￨3￨b notNull￨3￨b (￨3￨b descriptor￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b this￨3￨e .￨3￨e compilationScopes￨3￨e .￨3￨e peek￨3￨e (￨3￨e )￨3￨e .￨3￨e add￨3￨e (￨3￨e descriptor￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f enterCompilationScope￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f exitCompilationScope￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f lastDescriptor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f unboxBooleanIfNecessary￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f insertUnboxInsns￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p ,￨3￨p char￨3￨p ch￨3￨p ,￨3￨p boolean￨3￨p isObject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f createSignatureDescriptor￨2￨f (￨2￨f Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f createSignatureDescriptor￨2￨f (￨2￨f Constructor￨3￨p <￨3￨p ?￨3￨p >￨3￨p ctor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toJVMDescriptor￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clazz￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toDescriptorFromObject￨2￨f (￨2￨f Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isBooleanCompatible￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isPrimitive￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isPrimitiveArray￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f areBoxingCompatible￨2￨f (￨2￨f String￨3￨p desc1￨3￨p ,￨3￨p String￨3￨p desc2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isPrimitiveOrUnboxableSupportedNumberOrBoolean￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isPrimitiveOrUnboxableSupportedNumber￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f char￨2￨f toPrimitiveTargetDesc￨2￨f (￨2￨f String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f insertCheckCast￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p ,￨3￨p String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f insertBoxIfNecessary￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p ,￨3￨p String￨3￨p descriptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f insertBoxIfNecessary￨2￨f (￨2￨f MethodVisitor￨3￨p mv￨3￨p ,￨3￨p char￨3￨p ch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toDescriptor￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f toParamDescriptors￨2￨f (￨2￨f Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f toParamDescriptors￨2￨f (￨2￨f Constructor￨3￨p <￨3￨p ?￨3￨p >￨3￨p ctor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f toDescriptors￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p types￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Form￨1￨d extends￨1￨d WebMarkupContainer￨1￨d implements￨1￨d IFormSubmitListener￨1￨d {￨1￨d public￨2￨d abstract￨2￨d static￨2￨d class￨2￨d ValidationVisitor￨2￨d implements￨2￨d FormComponent￨2￨d .￨2￨d IVisitor￨2￨d {￨2￨d public￨3￨f Object￨3￨f formComponent￨3￨f (￨3￨f IFormVisitorParticipant￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f abstract￨3￨f void￨3￨f validate￨3￨f (￨3￨f FormComponent￨4￨p formComponent￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d FormDispatchRequest￨2￨d extends￨2￨d Request￨2￨d {￨2￨d private￨3￨e final￨3￨e ValueMap￨3￨e params￨3￨e =￨3￨e new￨3￨e ValueMap￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e Request￨3￨e realRequest￨3￨e ;￨3￨e private￨3￨e final￨3￨e String￨3￨e url￨3￨e ;￨3￨e public￨3￨f FormDispatchRequest￨3￨f (￨3￨f final￨4￨p Request￨4￨p realRequest￨4￨p ,￨4￨p final￨4￨p String￨4￨p url￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f Locale￨3￨f getLocale￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getParameter￨3￨f (￨3￨f String￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f Map￨3￨f getParameterMap￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getParameters￨3￨f (￨3￨f String￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getPath￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getRelativePathPrefixToContextRoot￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getRelativePathPrefixToWicketHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getURL￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e METHOD_GET￨2￨e =￨2￨e "get"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e METHOD_POST￨2￨e =￨2￨e "post"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_SUBMITTED￨2￨e =￨2￨e FLAG_RESERVED1￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d Form￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d long￨2￨d serialVersionUID￨2￨d =￨2￨d 1L￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d UPLOAD_FAILED_RESOURCE_KEY￨2￨d =￨2￨d "uploadFailed"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d UPLOAD_TOO_LARGE_RESOURCE_KEY￨2￨d =￨2￨d "uploadTooLarge"￨2￨d ;￨2￨d private￨2￨d IFormSubmittingComponent￨2￨d defaultSubmittingComponent￨2￨d ;￨2￨d private￨2￨d Object￨2￨d formValidators￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d String￨2￨d javascriptId￨2￨d ;￨2￨d private￨2￨d Bytes￨2￨d maxSize￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d multiPart￨2￨d =￨2￨d false￨2￨d ;￨2￨d public￨2￨d Form￨2￨d (￨2￨d final￨2￨d String￨2￨d id￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f Form￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p IModel￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f int￨2￨f formValidators_indexOf￨2￨f (￨2￨f IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f IFormValidator￨2￨f formValidators_remove￨2￨f (￨2￨f IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f IFormValidator￨2￨f formValidators_remove￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f clearInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f error￨2￨f (￨2￨f String￨3￨p error￨3￨p ,￨3￨p Map￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IFormSubmittingComponent￨2￨f findSubmittingButton￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IFormSubmittingComponent￨2￨f getDefaultButton￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f getJsForInterfaceUrl￨2￨f (￨2￨f CharSequence￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Bytes￨2￨f getMaxSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Form￨2￨f getRootForm￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getValidatorKeyPrefix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f hasError￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRootForm￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isSubmitted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVersioned￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f loadPersistentFormComponentValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f onFormSubmitted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f process￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f callOnError￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f markFormsSubmitted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removePersistentFormComponentValues￨2￨f (￨2￨f final￨3￨p boolean￨3￨p disablePersistence￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setDefaultButton￨2￨f (￨2￨f IFormSubmittingComponent￨3￨p submittingComponent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaxSize￨2￨f (￨2￨f final￨3￨p Bytes￨3￨p maxSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMultiPart￨2￨f (￨2￨f boolean￨3￨p multiPart￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Component￨2￨f setVersioned￨2￨f (￨2￨f final￨3￨p boolean￨3￨p isVersioned￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f visitFormComponents￨2￨f (￨2￨f final￨3￨p FormComponent￨3￨p .￨3￨p IVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f visitFormComponentsPostOrder￨2￨f (￨2￨f final￨3￨p FormComponent￨3￨p .￨3￨p IVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f visitChildrenInContainingBorder￨2￨f (￨2￨f final￨3￨p FormComponent￨3￨p .￨3￨p IVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f anyFormComponentError￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f dispatchEvent￨2￨f (￨2￨f final￨3￨p Page￨3￨p page￨3￨p ,￨3￨p final￨3￨p String￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f formValidators_add￨2￨f (￨2￨f final￨3￨p IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IFormValidator￨2￨f formValidators_get￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f formValidators_size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f inputChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f persistFormComponentData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f appendDefaultButtonField￨2￨f (￨2￨f final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p openTag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f beforeUpdateFormComponentModels￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f delegateSubmit￨2￨f (￨2￨f IFormSubmittingComponent￨3￨p submittingComponent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f String￨2￨f getHiddenFieldId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f String￨2￨f getJavascriptId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f getStatelessHint￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IValuePersister￨2￨f getValuePersister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f handleMultiPart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalOnModelChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f markFormComponentsInvalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f markFormComponentsValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f markNestedFormComponentsValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalMarkFormComponentsValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onComponentTagBody￨2￨f (￨2￨f final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p openTag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onDetach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onError￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onRender￨2￨f (￨2￨f final￨3￨p MarkupStream￨3￨p markupStream￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onSubmit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f updateFormComponentModels￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f updateNestedFormComponentModels￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalUpdateFormComponentModels￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f validate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateComponents￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b visitFormComponents￨3￨b (￨3￨b new￨3￨b Form￨3￨b .￨3￨b ValidationVisitor￨3￨b (￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b public￨3￨f void￨3￨f validate￨3￨f (￨3￨f final￨4￨p FormComponent￨4￨p formComponent￨4￨p )￨3￨f {￨3￨f final￨4￨e Form￨4￨e form￨4￨e =￨4￨e formComponent￨4￨e .￨4￨e getForm￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c (￨5￨c form￨5￨c ==￨5￨c (￨5￨c Form￨5￨c .￨5￨c this￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c form￨5￨c .￨5￨c isEnabled￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c form￨5￨c .￨5￨c isEnableAllowed￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c form￨5￨c .￨5￨c isVisibleInHierarchy￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j formComponent￨5￨e .￨5￨e validate￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f isFormComponentVisibleInPage￨2￨f (￨2￨f FormComponent￨3￨p fc￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateFormValidator￨2￨f (￨2￨f final￨3￨p IFormValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateFormValidators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validateNestedForms￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d FormValidatorRemovedChange￨2￨d extends￨2￨d Change￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e final￨3￨e IFormValidator￨3￨e removed￨3￨e ;￨3￨e public￨3￨f FormValidatorRemovedChange￨3￨f (￨3￨f final￨4￨p IFormValidator￨4￨p removed￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f undo￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d final￨1￨d class￨1￨d LegacyActionPersistence￨1￨d extends￨1￨d RegistryPersistence￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_ACTION_SETS￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_EDITOR_CONTRIBUTIONS￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_OBJECT_CONTRIBUTIONS￨2￨e =￨2￨e 2￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_VIEW_CONTRIBUTIONS￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_VIEWER_CONTRIBUTIONS￨2￨e =￨2￨e 4￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f SLocation￨2￨f createLocation￨2￨f (￨2￨f final￨3￨p String￨3￨p barType￨3￨p ,￨3￨p final￨3￨p String￨3￨p path￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p char￨3￨p mnemonic￨3￨p ,￨3￨p final￨3￨p String￨3￨p imageStyle￨3￨p )￨2￨f {￨2￨f final￨3￨e LeafLocationElement￨3￨e leafElement￨3￨e =￨3￨e new￨3￨e SBar￨3￨e (￨3￨e barType￨3￨e ,￨3￨e path￨3￨e )￨3￨e ;￨3￨e final￨3￨e LocationElement￨3￨e locationElement￨3￨e ;￨3￨e if￨3￨j (￨3￨j locationInfo￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j locationElement￨4￨e =￨4￨e leafElement￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j locationElement￨4￨e =￨4￨e locationInfo￨4￨e .￨4￨e append￨4￨e (￨4￨e leafElement￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b new￨3￨b SLocation￨3￨b (￨3￨b mnemonic￨3￨b ,￨3￨b imageStyle￨3￨b ,￨3￨b null￨3￨b ,￨3￨b locationElement￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f static￨2￨f final￨2￨f Expression￨2￨f readVisibility￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p parentElement￨3￨p ,￨3￨p final￨3￨p String￨3￨p parentId￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e BindingManager￨2￨e bindingManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e CommandImageManager￨2￨e commandImageManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e CommandManager￨2￨e commandManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e Collection￨2￨e menuContributions￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e IMenuService￨2￨e menuService￨2￨e ;￨2￨e public￨2￨f LegacyActionPersistence￨2￨f (￨2￨f final￨3￨p CommandManager￨3￨p commandManager￨3￨p ,￨3￨p final￨3￨p BindingManager￨3￨p bindingManager￨3￨p ,￨3￨p final￨3￨p CommandImageManager￨3￨p commandImageManager￨3￨p ,￨3￨p final￨3￨p IMenuService￨3￨p menuService￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f clearBindings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f clearImages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f clearMenus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f convertActionToBinding￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p element￨3￨p ,￨3￨p final￨3￨p ParameterizedCommand￨3￨p command￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f ParameterizedCommand￨2￨f convertActionToCommand￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p element￨3￨p ,￨3￨p final￨3￨p String￨3￨p primaryId￨3￨p ,￨3￨p final￨3￨p String￨3￨p secondaryId￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f String￨2￨f convertActionToImages￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p element￨3￨p ,￨3￨p final￨3￨p ParameterizedCommand￨3￨p command￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f convertActionToItem￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p element￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p ,￨3￨p final￨3￨p ParameterizedCommand￨3￨p command￨3￨p ,￨3￨p final￨3￨p String￨3￨p imageStyle￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p Expression￨3￨p visibleWhenExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f boolean￨2￨f isChangeImportant￨2￨f (￨2￨f final￨3￨p IRegistryChangeEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f read￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f SReference￨2￨f [￨2￨f ]￨2￨f readActions￨2￨f (￨2￨f final￨3￨p String￨3￨p primaryId￨3￨p ,￨3￨p final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p elements￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p Expression￨3￨p visibleWhenExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f SReference￨2￨f [￨2￨f ]￨2￨f readActionsAndMenus￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p element￨3￨p ,￨3￨p final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p Expression￨3￨p visibleWhenExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readActionSets￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p configurationElements￨3￨p ,￨3￨p final￨3￨p int￨3￨p configurationElementCount￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readEditorContributions￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p configurationElements￨3￨p ,￨3￨p final￨3￨p int￨3￨p configurationElementCount￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f SReference￨2￨f [￨2￨f ]￨2￨f readGroups￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p elements￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p ,￨3￨p final￨3￨p String￨3￨p path￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p Expression￨3￨p visibleWhenExpression￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p separatorsVisible￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f SReference￨2￨f [￨2￨f ]￨2￨f readMenusAndGroups￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p menuElements￨3￨p ,￨3￨p final￨3￨p String￨3￨p contributionId￨3￨p ,￨3￨p final￨3￨p List￨3￨p warningsToLog￨3￨p ,￨3￨p final￨3￨p LegacyLocationInfo￨3￨p locationInfo￨3￨p ,￨3￨p final￨3￨p Expression￨3￨p visibleWhenExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readObjectContributions￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p configurationElements￨3￨p ,￨3￨p final￨3￨p int￨3￨p configurationElementCount￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readViewContributions￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p configurationElements￨3￨p ,￨3￨p final￨3￨p int￨3￨p configurationElementCount￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readViewerContributions￨2￨f (￨2￨f final￨3￨p IConfigurationElement￨3￨p [￨3￨p ]￨3￨p configurationElements￨3￨p ,￨3￨p final￨3￨p int￨3￨p configurationElementCount￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HelloHostApplication￨1￨d implements￨1￨d IDistributionConstants￨1￨d ,￨1￨d IApplication￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_CONTAINER_TYPE￨2￨e =￨2￨e "ecf.r_osgi.peer"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_CONTAINER_ID￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e BundleContext￨2￨e bundleContext￨2￨e ;￨2￨e private￨2￨e ServiceTracker￨2￨e containerManagerServiceTracker￨2￨e ;￨2￨e private￨2￨e String￨2￨e containerType￨2￨e =￨2￨e HelloHostApplication￨2￨e .￨2￨e DEFAULT_CONTAINER_TYPE￨2￨e ;￨2￨e private￨2￨e String￨2￨e containerId￨2￨e =￨2￨e HelloHostApplication￨2￨e .￨2￨e DEFAULT_CONTAINER_ID￨2￨e ;￨2￨e private￨2￨e final￨2￨e Object￨2￨e appLock￨2￨e =￨2￨e new￨2￨e Object￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e done￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e ServiceRegistration￨2￨e helloRegistration￨2￨e ;￨2￨e public￨2￨f Object￨2￨f start￨2￨f (￨2￨f IApplicationContext￨2￨f appContext￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f bundleContext￨3￨e =￨3￨e Activator￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e processArgs￨3￨e (￨3￨e appContext￨3￨e )￨3￨e ;￨3￨e IContainerManager￨3￨e containerManager￨3￨e =￨3￨e getContainerManagerService￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c containerId￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c ""￨4￨c .￨4￨c equals￨4￨c (￨4￨c containerId￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j containerManager￨4￨e .￨4￨e getContainerFactory￨4￨e (￨4￨e )￨4￨e .￨4￨e createContainer￨4￨e (￨4￨e containerType￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j containerManager￨4￨f .￨4￨f getContainerFactory￨4￨f (￨4￨f )￨4￨f .￨4￨f createContainer￨4￨f (￨4￨f containerType￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j Properties￨3￨e props￨3￨e =￨3￨e new￨3￨e Properties￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b props￨3￨b .￨3￨b put￨3￨b (￨3￨b REMOTE_INTERFACES￨3￨b ,￨3￨b REMOTE_INTERFACES_WILDCARD￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b helloRegistration￨3￨e =￨3￨e bundleContext￨3￨e .￨3￨e registerService￨3￨e (￨3￨e IHello￨3￨e .￨3￨e class￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e ,￨3￨e new￨3￨e Hello￨3￨e (￨3￨e )￨3￨e ,￨3￨e props￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "Host:<seq2seq4repair_space>Hello<seq2seq4repair_space>Service<seq2seq4repair_space>Registered"￨3￨e )￨3￨e ;￨3￨e waitForDone￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e IApplication￨3￨e .￨3￨e EXIT_OK￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IContainerManager￨2￨f getContainerManagerService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processArgs￨2￨f (￨2￨f IApplicationContext￨3￨p appContext￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f waitForDone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ImageTransfer￨1￨d extends￨1￨d ByteArrayTransfer￨1￨d {￨1￨d private￨2￨e static￨2￨e ImageTransfer￨2￨e _instance￨2￨e =￨2￨e new￨2￨e ImageTransfer￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CF_DIB￨2￨e =￨2￨e "CF_DIB"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e CF_DIBID￨2￨e =￨2￨e COM￨2￨e .￨2￨e CF_DIB￨2￨e ;￨2￨e private￨2￨f ImageTransfer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ImageTransfer￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f javaToNative￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p TransferData￨3￨p transferData￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f nativeToJava￨2￨f (￨2￨f TransferData￨3￨p transferData￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c !￨4￨c (￨4￨c isSupportedType￨4￨c (￨4￨c transferData￨4￨c )￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c transferData￨4￨c .￨4￨c pIDataObject￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j IDataObject￨3￨e dataObject￨3￨e =￨3￨e new￨3￨e IDataObject￨3￨e (￨3￨e transferData￨3￨e .￨3￨e pIDataObject￨3￨e )￨3￨e ;￨3￨e dataObject￨3￨e .￨3￨e AddRef￨3￨e (￨3￨e )￨3￨e ;￨3￨e FORMATETC￨3￨e formatetc￨3￨e =￨3￨e new￨3￨e FORMATETC￨3￨e (￨3￨e )￨3￨e ;￨3￨e formatetc￨3￨e .￨3￨e cfFormat￨3￨e =￨3￨e COM￨3￨e .￨3￨e CF_DIB￨3￨e ;￨3￨e formatetc￨3￨e .￨3￨e ptd￨3￨e =￨3￨e 0￨3￨e ;￨3￨e formatetc￨3￨e .￨3￨e dwAspect￨3￨e =￨3￨e COM￨3￨e .￨3￨e DVASPECT_CONTENT￨3￨e ;￨3￨e formatetc￨3￨e .￨3￨e lindex￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e formatetc￨3￨e .￨3￨e tymed￨3￨e =￨3￨e COM￨3￨e .￨3￨e TYMED_HGLOBAL￨3￨e ;￨3￨e STGMEDIUM￨3￨e stgmedium￨3￨e =￨3￨e new￨3￨e STGMEDIUM￨3￨e (￨3￨e )￨3￨e ;￨3￨e stgmedium￨3￨e .￨3￨e tymed￨3￨e =￨3￨e COM￨3￨e .￨3￨e TYMED_HGLOBAL￨3￨e ;￨3￨e transferData￨3￨e .￨3￨e result￨3￨e =￨3￨e getData￨3￨e (￨3￨e dataObject￨3￨e ,￨3￨e formatetc￨3￨e ,￨3￨e stgmedium￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c transferData￨4￨c .￨4￨c result￨4￨c )￨4￨c !=￨4￨c (￨4￨c COM￨4￨c .￨4￨c S_OK￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j int￨3￨e hMem￨3￨e =￨3￨e stgmedium￨3￨e .￨3￨e unionField￨3￨e ;￨3￨e dataObject￨3￨e .￨3￨e Release￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f int￨4￨e ptr￨4￨e =￨4￨e OS￨4￨e .￨4￨e GlobalLock￨4￨e (￨4￨e hMem￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j ptr￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f BITMAPINFOHEADER￨5￨e bmiHeader￨5￨e =￨5￨e new￨5￨e BITMAPINFOHEADER￨5￨e (￨5￨e )￨5￨e ;￨5￨e OS￨5￨e .￨5￨e MoveMemory￨5￨e (￨5￨e bmiHeader￨5￨e ,￨5￨e ptr￨5￨e ,￨5￨e sizeof￨5￨e )￨5￨e ;￨5￨e int￨5￨e [￨5￨e ]￨5￨e pBits￨5￨e =￨5￨e new￨5￨e int￨5￨e [￨5￨e 1￨5￨e ]￨5￨e ;￨5￨e int￨5￨e memDib￨5￨e =￨5￨e OS￨5￨e .￨5￨e CreateDIBSection￨5￨e (￨5￨e 0￨5￨e ,￨5￨e ptr￨5￨e ,￨5￨e DIB_RGB_COLORS￨5￨e ,￨5￨e pBits￨5￨e ,￨5￨e 0￨5￨e ,￨5￨e 0￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j memDib￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j SWT￨6￨e .￨6￨e error￨6￨e (￨6￨e ERROR_NO_HANDLES￨6￨e )￨6￨e ;￨6￨e }￨5￨j int￨5￨e bits￨5￨e =￨5￨e ptr￨5￨e +￨5￨e (￨5￨e bmiHeader￨5￨e .￨5￨e biSize￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c bmiHeader￨6￨c .￨6￨c biBitCount￨6￨c )￨6￨c <=￨6￨c 8￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b bits￨6￨b +=￨6￨b (￨6￨b 1￨6￨b <<￨6￨b (￨6￨b bmiHeader￨6￨b .￨6￨b biBitCount￨6￨b )￨6￨b )￨6￨b *￨6￨b 4￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c bmiHeader￨6￨c .￨6￨c biCompression￨6￨c )￨6￨c ==￨6￨c (￨6￨c OS￨6￨c .￨6￨c BI_BITFIELDS￨6￨c )￨6￨c )￨5￨j {￨5￨j bits￨6￨e +=￨6￨e 12￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c bmiHeader￨6￨c .￨6￨c biHeight￨6￨c )￨6￨c <￨6￨c 0￨6￨c )￨5￨j {￨5￨j OS￨6￨e .￨6￨e MoveMemory￨6￨e (￨6￨e pBits￨6￨e [￨6￨e 0￨6￨e ]￨6￨e ,￨6￨e bits￨6￨e ,￨6￨e bmiHeader￨6￨e .￨6￨e biSizeImage￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j DIBSECTION￨6￨e dib￨6￨e =￨6￨e new￨6￨e DIBSECTION￨6￨e (￨6￨e )￨6￨e ;￨6￨e OS￨6￨e .￨6￨e GetObject￨6￨e (￨6￨e memDib￨6￨e ,￨6￨e DIBSECTION￨6￨e .￨6￨e sizeof￨6￨e ,￨6￨e dib￨6￨e )￨6￨e ;￨6￨e int￨6￨e biHeight￨6￨e =￨6￨e dib￨6￨e .￨6￨e biHeight￨6￨e ;￨6￨e int￨6￨e scanline￨6￨e =￨6￨e (￨6￨e dib￨6￨e .￨6￨e biSizeImage￨6￨e )￨6￨e /￨6￨e biHeight￨6￨e ;￨6￨e int￨6￨e pDestBits￨6￨e =￨6￨e pBits￨6￨e [￨6￨e 0￨6￨e ]￨6￨e ;￨6￨e int￨6￨e pSourceBits￨6￨e =￨6￨e bits￨6￨e +￨6￨e (￨6￨e scanline￨6￨e *￨6￨e (￨6￨e biHeight￨6￨e -￨6￨e 1￨6￨e )￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ;￨7￨c i￨7￨c <￨7￨c biHeight￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l OS￨7￨e .￨7￨e MoveMemory￨7￨e (￨7￨e pDestBits￨7￨e ,￨7￨e pSourceBits￨7￨e ,￨7￨e scanline￨7￨e )￨7￨e ;￨7￨e pDestBits￨7￨e +=￨7￨e scanline￨7￨e ;￨7￨e pSourceBits￨7￨e -=￨7￨e scanline￨7￨e ;￨7￨e }￨6￨l }￨5￨j Image￨5￨e image￨5￨e =￨5￨e Image￨5￨e .￨5￨e win32_new￨5￨e (￨5￨e null￨5￨e ,￨5￨e BITMAP￨5￨e ,￨5￨e memDib￨5￨e )￨5￨e ;￨5￨e ImageData￨5￨e data￨5￨e =￨5￨e image￨5￨e .￨5￨e getImageData￨5￨e (￨5￨e )￨5￨e ;￨5￨e OS￨5￨e .￨5￨e DeleteObject￨5￨e (￨5￨e memDib￨5￨e )￨5￨e ;￨5￨e image￨5￨e .￨5￨e dispose￨5￨e (￨5￨e )￨5￨e ;￨5￨e return￨5￨e data￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f OS￨5￨e .￨5￨e GlobalUnlock￨5￨e (￨5￨e hMem￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f OS￨4￨e .￨4￨e GlobalFree￨4￨e (￨4￨e hMem￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f int￨2￨f [￨2￨f ]￨2￨f getTypeIds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f [￨2￨f ]￨2￨f getTypeNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f checkImage￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f validate￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FunctionReference￨1￨d extends￨1￨d SpelNodeImpl￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e name￨2￨e ;￨2￨e public￨2￨f FunctionReference￨2￨f (￨2￨f String￨3￨p functionName￨3￨p ,￨3￨p int￨3￨p pos￨3￨p ,￨3￨p SpelNodeImpl￨3￨p ...￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f TypedValue￨2￨f getValueInternal￨2￨f (￨2￨f ExpressionState￨2￨f state￨2￨f )￨2￨f throws￨2￨f EvaluationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypedValue￨2￨f executeFunctionJLRMethod￨2￨f (￨2￨f ExpressionState￨2￨f state￨2￨f ,￨2￨f Method￨2￨f method￨2￨f )￨2￨f throws￨2￨f EvaluationException￨2￨f (￨2￨f )￨2￨f {￨2￨f Object￨3￨e [￨3￨e ]￨3￨e functionArgs￨3￨e =￨3￨e getArguments￨3￨e (￨3￨e state￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c !￨4￨c (￨4￨c method￨4￨c .￨4￨c isVarArgs￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c method￨4￨c .￨4￨c getParameterTypes￨4￨c (￨4￨c )￨4￨c .￨4￨c length￨4￨c )￨4￨c !=￨4￨c (￨4￨c functionArgs￨4￨c .￨4￨c length￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e org￨4￨e .￨4￨e springframework￨4￨e .￨4￨e expression￨4￨e .￨4￨e spel￨4￨e .￨4￨e SpelEvaluationException￨4￨e (￨4￨e SpelMessage￨4￨e .￨4￨e INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION￨4￨e ,￨4￨e functionArgs￨4￨e .￨4￨e length￨4￨e ,￨4￨e method￨4￨e .￨4￨e getParameterTypes￨4￨e (￨4￨e )￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c Modifier￨4￨c .￨4￨c isStatic￨4￨c (￨4￨c method￨4￨c .￨4￨c getModifiers￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e org￨4￨e .￨4￨e springframework￨4￨e .￨4￨e expression￨4￨e .￨4￨e spel￨4￨e .￨4￨e SpelEvaluationException￨4￨e (￨4￨e getStartPosition￨4￨e (￨4￨e )￨4￨e ,￨4￨e SpelMessage￨4￨e .￨4￨e FUNCTION_MUST_BE_STATIC￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e method￨4￨e .￨4￨e getDeclaringClass￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e "."￨4￨e )￨4￨e +￨4￨e (￨4￨e method￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e name￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j functionArgs￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j TypeConverter￨4￨e converter￨4￨e =￨4￨e state￨4￨e .￨4￨e getEvaluationContext￨4￨e (￨4￨e )￨4￨e .￨4￨e getTypeConverter￨4￨e (￨4￨e )￨4￨e ;￨4￨e ReflectionHelper￨4￨e .￨4￨e convertAllArguments￨4￨e (￨4￨e converter￨4￨e ,￨4￨e functionArgs￨4￨e ,￨4￨e method￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j method￨4￨c .￨4￨c isVarArgs￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j functionArgs￨4￨e =￨4￨e ReflectionHelper￨4￨e .￨4￨e setupArgumentsForVarargsInvocation￨4￨e (￨4￨e method￨4￨e .￨4￨e getParameterTypes￨4￨e (￨4￨e )￨4￨e ,￨4￨e functionArgs￨4￨e )￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f ReflectionUtils￨4￨e .￨4￨e makeAccessible￨4￨e (￨4￨e method￨4￨e )￨4￨e ;￨4￨e Object￨4￨e result￨4￨e =￨4￨e method￨4￨e .￨4￨e invoke￨4￨e (￨4￨e method￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e ,￨4￨e functionArgs￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b return￨4￨b new￨4￨b TypedValue￨4￨b (￨4￨b result￨4￨b ,￨4￨b new￨4￨b org￨4￨b .￨4￨b springframework￨4￨b .￨4￨b core￨4￨b .￨4￨b convert￨4￨b .￨4￨b TypeDescriptor￨4￨b (￨4￨b new￨4￨b MethodParameter￨4￨b (￨4￨b method￨4￨b ,￨4￨b (￨4￨b -￨4￨b 1￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e org￨4￨e .￨4￨e springframework￨4￨e .￨4￨e expression￨4￨e .￨4￨e spel￨4￨e .￨4￨e SpelEvaluationException￨4￨e (￨4￨e getStartPosition￨4￨e (￨4￨e )￨4￨e ,￨4￨e ex￨4￨e ,￨4￨e SpelMessage￨4￨e .￨4￨e EXCEPTION_DURING_FUNCTION_CALL￨4￨e ,￨4￨e this￨4￨e .￨4￨e name￨4￨e ,￨4￨e ex￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toStringAST￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getArguments￨2￨f (￨2￨f ExpressionState￨2￨f state￨2￨f )￨2￨f throws￨2￨f EvaluationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ReturnStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e expressionType￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isSynchronized￨2￨e ;￨2￨e public￨2￨e AstNode￨2￨e [￨2￨e ]￨2￨e subroutines￨2￨e ;￨2￨e public￨2￨e LocalVariableBinding￨2￨e saveValueVariable￨2￨e ;￨2￨e public￨2￨f ReturnStatement￨2￨f (￨2￨f Expression￨3￨p expr￨3￨p ,￨3￨p int￨3￨p s￨3￨p ,￨3￨p int￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateReturnBytecode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateStoreSaveValueIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f needValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f prepareSaveValueLocation￨2￨f (￨2￨f TryStatement￨3￨p targetTryStatement￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f MethodScope￨3￨e methodScope￨3￨e =￨3￨e scope￨3￨e .￨3￨e methodScope￨3￨e (￨3￨e )￨3￨e ;￨3￨e MethodBinding￨3￨e methodBinding￨3￨e ;￨3￨e TypeBinding￨3￨e methodType￨3￨e =￨3￨e (￨3￨e (￨3￨e methodScope￨3￨e .￨3￨e referenceContext￨3￨e )￨3￨e instanceof￨3￨e AbstractMethodDeclaration￨3￨e )￨3￨e ?￨3￨e (￨3￨e methodBinding￨3￨e =￨3￨e (￨3￨e (￨3￨e AbstractMethodDeclaration￨3￨e )￨3￨e (￨3￨e methodScope￨3￨e .￨3￨e referenceContext￨3￨e )￨3￨e )￨3￨e .￨3￨e binding￨3￨e )￨3￨e ==￨3￨e null￨3￨e ?￨3￨e null￨3￨e :￨3￨e methodBinding￨3￨e .￨3￨e returnType￨3￨e :￨3￨e VoidBinding￨3￨e ;￨3￨e if￨3￨j (￨3￨j methodType￨4￨c ==￨4￨c (￨4￨c VoidBinding￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c expression￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c expressionType￨5￨c =￨5￨c expression￨5￨c .￨5￨c resolveType￨5￨c (￨5￨c scope￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e attemptToReturnNonVoidExpression￨5￨e (￨5￨e this￨5￨e ,￨5￨e expressionType￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c expression￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j methodType￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e shouldReturn￨5￨e (￨5￨e methodType￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c expressionType￨4￨c =￨4￨c expression￨4￨c .￨4￨c resolveType￨4￨c (￨4￨c scope￨4￨c )￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c methodType￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c expression￨4￨c .￨4￨c isConstantValueOfTypeAssignableToType￨4￨c (￨4￨c expressionType￨4￨c ,￨4￨c methodType￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j expression￨4￨e .￨4￨e implicitWidening￨4￨e (￨4￨e methodType￨4￨e ,￨4￨e expressionType￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c expressionType￨4￨c )￨4￨c ==￨4￨c (￨4￨c VoidBinding￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e attemptToReturnVoidValue￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b methodType￨3￨b !=￨3￨b null￨3￨b )￨3￨b &&￨3￨b (￨3￨b org￨3￨b .￨3￨b eclipse￨3￨b .￨3￨b jdt￨3￨b .￨3￨b internal￨3￨b .￨3￨b compiler￨3￨b .￨3￨b lookup￨3￨b .￨3￨b Scope￨3￨b .￨3￨b areTypesCompatible￨3￨b (￨3￨b expressionType￨3￨b ,￨3￨b methodType￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b expression￨3￨e .￨3￨e implicitWidening￨3￨e (￨3￨e methodType￨3￨e ,￨3￨e expressionType￨3￨e )￨3￨e ;￨3￨e return￨3￨e ;￨3￨e if￨3￨j (￨3￨j methodType￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e typeMismatchErrorActualTypeExpectedType￨4￨e (￨4￨e expression￨4￨e ,￨4￨e expressionType￨4￨e ,￨4￨e methodType￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeldEjbServices￨1￨d implements￨1￨d EjbServices￨1￨d {￨1￨d private￨2￨e final￨2￨e ServiceRegistry￨2￨e serviceRegistry￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e InterceptorBindings￨2￨e >￨2￨e bindings￨2￨e =￨2￨e Collections￨2￨e .￨2￨e emptyMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f WeldEjbServices￨2￨f (￨2￨f ServiceRegistry￨3￨p serviceRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f registerInterceptors￨2￨f (￨2￨f EjbDescriptor￨3￨p <￨3￨p ?￨3￨p >￨3￨p ejbDescriptor￨3￨p ,￨3￨p InterceptorBindings￨3￨p interceptorBindings￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f SessionObjectReference￨2￨f resolveEjb￨2￨f (￨2￨f EjbDescriptor￨3￨p <￨3￨p ?￨3￨p >￨3￨p ejbDescriptor￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j ejbDescriptor￨4￨c .￨4￨c isStateful￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e StatefulSessionObjectReferenceImpl￨4￨e (￨4￨e (￨4￨e (￨4￨e EjbDescriptorImpl￨4￨e <￨4￨e ?￨4￨e >￨4￨e )￨4￨e (￨4￨e ejbDescriptor￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b new￨4￨b org￨4￨b .￨4￨b jboss￨4￨b .￨4￨b as￨4￨b .￨4￨b weld￨4￨b .￨4￨b ejb￨4￨b .￨4￨b SessionObjectReferenceImpl￨4￨b (￨4￨b (￨4￨b (￨4￨b EjbDescriptorImpl￨4￨b <￨4￨b ?￨4￨b >￨4￨b )￨4￨b (￨4￨b ejbDescriptor￨4￨b )￨4￨b )￨4￨b ,￨4￨b serviceRegistry￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f cleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InterceptorBindings￨2￨f getBindings￨2￨f (￨2￨f String￨3￨p ejbName￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JMXSubsystemTestCase￨1￨d extends￨1￨d AbstractSubsystemTest￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e LAUNCH_TYPE￨2￨e =￨2￨e "launch-type"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TYPE_STANDALONE￨2￨e =￨2￨e "STANDALONE"￨2￨e ;￨2￨e public￨2￨f JMXSubsystemTestCase￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseEmptySubsystem￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseSubsystemWithBadChild￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseSubsystemWithBadAttribute￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseSubsystemWithConnector￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseSubsystemWithTwoConnectors￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseSubsystemWithBadConnectorAttribute￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testInstallIntoController￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModel1_0￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModel1_1WithShowModel￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModelWithRemoteConnectorRef1_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModel1_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModel1_2WithShowModels￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseAndMarshalModel1_2WithShowModelsAndOldPropertyFormat￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDescribeHandler￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testShowModelAlias￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testTransformationAS712￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testTransformationAS713￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testTransformation_1_0_0￨2￨f (￨2￨f ModelTestControllerVersion￨2￨f controllerVersion￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRejectExpressionsAS712￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRejectExpressionsAS713￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testRejectExpressions_1_0_0￨2￨f (￨2￨f ModelTestControllerVersion￨2￨f controllerVersion￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f FailedOperationTransformationConfig￨2￨f .￨2￨f AttributesPathAddressConfig￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f createChainedConfigList￨2￨f (￨2￨f FailedOperationTransformationConfig￨3￨p <￨3￨p ?￨3￨p >￨3￨p ...￨3￨p cfgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f check_1_0_0_Model￨2￨f (￨2￨f ModelNode￨3￨p legacySubsystem￨3￨p ,￨3￨p boolean￨3￨p remotingConnector￨3￨p ,￨3￨p boolean￨3￨p showModel￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertJmxConnectorAddress￨2￨f (￨2￨f ModelNode￨3￨p address￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertJmxSubsystemAddress￨2￨f (￨2￨f ModelNode￨3￨p address￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ModelNode￨2￨f createOperation￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p ...￨3￨p addressElements￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d BaseAdditionalInitalization￨2￨d extends￨2￨d AdditionalInitialization￨2￨d {￨2￨d @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f initializeExtraSubystemsAndModel￨3￨f (￨3￨f ExtensionRegistry￨4￨p extensionRegistry￨4￨p ,￨4￨p Resource￨4￨p rootResource￨4￨p ,￨4￨p ManagementResourceRegistration￨4￨p rootRegistration￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f setupController￨3￨f (￨3￨f ControllerInitializer￨4￨p controllerInitializer￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f addExtraServices￨3￨f (￨3￨f final￨4￨p ServiceTarget￨4￨p target￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b ManagementRemotingServices￨4￨b .￨4￨b installRemotingEndpoint￨4￨b (￨4￨b target￨4￨b ,￨4￨b MANAGEMENT_ENDPOINT￨4￨b ,￨4￨b "loaclhost"￨4￨b ,￨4￨b MANAGEMENT￨4￨b ,￨4￨b null￨4￨b ,￨4￨b null￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b ServiceName￨4￨e tmpDirPath￨4￨e =￨4￨e JBOSS￨4￨e .￨4￨e append￨4￨e (￨4￨e "server"￨4￨e ,￨4￨e "path"￨4￨e ,￨4￨e "jboss.controller.temp.dir"￨4￨e )￨4￨e ;￨4￨e RemotingServices￨4￨e .￨4￨e installSecurityServices￨4￨e (￨4￨e target￨4￨e ,￨4￨e "remote"￨4￨e ,￨4￨e null￨4￨e ,￨4￨e null￨4￨e ,￨4￨e tmpDirPath￨4￨e ,￨4￨e null￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e RemotingServices￨4￨e .￨4￨e installConnectorServicesForSocketBinding￨4￨e (￨4￨e target￨4￨e ,￨4￨e MANAGEMENT_ENDPOINT￨4￨e ,￨4￨e "remote"￨4￨e ,￨4￨e JBOSS_BINDING_NAME￨4￨e .￨4￨e append￨4￨e (￨4￨e "remote"￨4￨e )￨4￨e ,￨4￨e EMPTY￨4￨e ,￨4￨e null￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d CorrectDomainNameConfig￨2￨d extends￨2￨d FailedOperationTransformationConfig￨2￨d .￨2￨d AttributesPathAddressConfig￨2￨d <￨2￨d JMXSubsystemTestCase￨2￨d .￨2￨d CorrectDomainNameConfig￨2￨d >￨2￨d {￨2￨d public￨3￨f CorrectDomainNameConfig￨3￨f (￨3￨f AttributeDefinition￨4￨p ...￨4￨p attributes￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f isAttributeWritable￨3￨f (￨3￨f String￨4￨p attributeName￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f checkValue￨3￨f (￨3￨f String￨4￨p attrName￨4￨p ,￨4￨p ModelNode￨4￨p attribute￨4￨p ,￨4￨p boolean￨4￨p isWriteAttribute￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModelNode￨3￨f correctValue￨3￨f (￨3￨f ModelNode￨4￨p toResolve￨4￨p ,￨4￨p boolean￨4￨p isWriteAttribute￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d CorrectPropertyFormatConfig￨2￨d extends￨2￨d FailedOperationTransformationConfig￨2￨d .￨2￨d AttributesPathAddressConfig￨2￨d <￨2￨d JMXSubsystemTestCase￨2￨d .￨2￨d CorrectDomainNameConfig￨2￨d >￨2￨d {￨2￨d public￨3￨f CorrectPropertyFormatConfig￨3￨f (￨3￨f AttributeDefinition￨4￨p ...￨4￨p attributes￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f isAttributeWritable￨3￨f (￨3￨f String￨4￨p attributeName￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f checkValue￨3￨f (￨3￨f String￨4￨p attrName￨4￨p ,￨4￨p ModelNode￨4￨p attribute￨4￨p ,￨4￨p boolean￨4￨p isWriteAttribute￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModelNode￨3￨f correctValue￨3￨f (￨3￨f ModelNode￨4￨p toResolve￨4￨p ,￨4￨p boolean￨4￨p isWriteAttribute￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d BootStrapperTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testGuessToken￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f StorageService￨3￨e ss￨3￨e =￨3￨e StorageService￨3￨e .￨3￨e instance￨3￨e (￨3￨e )￨3￨e ;￨3￨e generateFakeEndpoints￨3￨e (￨3￨e 3￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e one￨3￨e =￨3￨e InetAddress￨3￨e .￨3￨e getByName￨3￨e (￨3￨e "127.0.0.2"￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e two￨3￨e =￨3￨e InetAddress￨3￨e .￨3￨e getByName￨3￨e (￨3￨e "127.0.0.3"￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e three￨3￨e =￨3￨e InetAddress￨3￨e .￨3￨e getByName￨3￨e (￨3￨e "127.0.0.4"￨3￨e )￨3￨e ;￨3￨e Map￨3￨e <￨3￨e InetAddress￨3￨e ,￨3￨e Double￨3￨e >￨3￨e load￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e InetAddress￨3￨e ,￨3￨e Double￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e load￨3￨e .￨3￨e put￨3￨e (￨3￨e one￨3￨e ,￨3￨e 1.0￨3￨e )￨3￨e ;￨3￨e load￨3￨e .￨3￨e put￨3￨e (￨3￨e two￨3￨e ,￨3￨e 2.0￨3￨e )￨3￨e ;￨3￨e load￨3￨e .￨3￨e put￨3￨e (￨3￨e three￨3￨e ,￨3￨e 3.0￨3￨e )￨3￨e ;￨3￨e TokenMetadata￨3￨e tmd￨3￨e =￨3￨e ss￨3￨e .￨3￨e getTokenMetadata￨3￨e (￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e source￨3￨e =￨3￨e BootStrapper￨3￨e .￨3￨e getBootstrapSource￨3￨e (￨3￨e tmd￨3￨e ,￨3￨e load￨3￨e )￨3￨e ;￨3￨e assert￨3￨e three￨3￨e .￨3￨e equals￨3￨e (￨3￨e source￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e myEndpoint￨3￨e =￨3￨e InetAddress￨3￨e .￨3￨e getByName￨3￨e (￨3￨e "127.0.0.1"￨3￨e )￨3￨e ;￨3￨e Range￨3￨e range3￨3￨e =￨3￨e ss￨3￨e .￨3￨e getPrimaryRangeForEndPoint￨3￨e (￨3￨e three￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Token￨3￨b fakeToken￨3￨b =￨3￨b (￨3￨b (￨3￨b IPartitioner￨3￨b )￨3￨b (￨3￨b StorageService￨3￨b .￨3￨b getPartitioner￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b .￨3￨b midpoint￨3￨b (￨3￨b range3￨3￨b .￨3￨b left￨3￨b (￨3￨b )￨3￨b ,￨3￨b range3￨3￨b .￨3￨b right￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assert￨3￨e range3￨3￨e .￨3￨e contains￨3￨e (￨3￨e fakeToken￨3￨e )￨3￨e ;￨3￨e ss￨3￨e .￨3￨e onChange￨3￨e (￨3￨e myEndpoint￨3￨e ,￨3￨e MOVE_STATE￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e cassandra￨3￨e .￨3￨e gms￨3￨e .￨3￨e ApplicationState￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e StorageService￨3￨e .￨3￨e STATE_BOOTSTRAPPING￨3￨e )￨3￨e +￨3￨e (￨3￨e StorageService￨3￨e .￨3￨e Delimiter￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e ss￨3￨e .￨3￨e getPartitioner￨3￨e (￨3￨e )￨3￨e .￨3￨e getTokenFactory￨3￨e (￨3￨e )￨3￨e .￨3￨e toString￨3￨e (￨3￨e fakeToken￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e tmd￨3￨e =￨3￨e ss￨3￨e .￨3￨e getTokenMetadata￨3￨e (￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e source2￨3￨e =￨3￨e BootStrapper￨3￨e .￨3￨e getBootstrapSource￨3￨e (￨3￨e tmd￨3￨e ,￨3￨e load￨3￨e )￨3￨e ;￨3￨e assert￨3￨e two￨3￨e .￨3￨e equals￨3￨e (￨3￨e source2￨3￨e )￨3￨e :￨3￨e source2￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSourceTargetComputation￨2￨f (￨2￨f )￨2￨f throws￨2￨f UnknownHostException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testSourceTargetComputation￨2￨f (￨2￨f int￨2￨f numOldNodes￨2￨f )￨2￨f throws￨2￨f UnknownHostException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generateFakeEndpoints￨2￨f (￨2￨f int￨2￨f numOldNodes￨2￨f )￨2￨f throws￨2￨f UnknownHostException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FieldReference￨1￨d extends￨1￨d Reference￨1￨d implements￨1￨d InvocationSite￨1￨d {￨1￨d public￨2￨e Expression￨2￨e receiver￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e token￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e binding￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e codegenBinding￨2￨e ;￨2￨e public￨2￨e long￨2￨e nameSourcePosition￨2￨e ;￨2￨e MethodBinding￨2￨e syntheticReadAccessor￨2￨e ;￨2￨e MethodBinding￨2￨e syntheticWriteAccessor￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e receiverType￨2￨e ;￨2￨e public￨2￨f FieldReference￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p source￨3￨p ,￨3￨p long￨3￨p pos￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p isCompound￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j isCompound￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c (￨5￨c binding￨5￨c .￨5￨c isBlankFinal￨5￨c (￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c receiver￨5￨c .￨5￨c isThis￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c currentScope￨5￨c .￨5￨c allowBlankFinalFieldAssignment￨5￨c (￨5￨c binding￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c flowInfo￨5￨c .￨5￨c isDefinitelyAssigned￨5￨c (￨5￨c binding￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j currentScope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e uninitializedBlankFinalField￨5￨e (￨5￨e binding￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j manageSyntheticReadAccessIfNecessary￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e flowInfo￨4￨e )￨4￨e ;￨4￨e }￨3￨j flowInfo￨3￨e =￨3￨e receiver￨3￨e .￨3￨e analyseCode￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e flowContext￨3￨e ,￨3￨e flowInfo￨3￨e ,￨3￨e (￨3￨e !￨3￨e (￨3￨e binding￨3￨e .￨3￨e isStatic￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e unconditionalInits￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c assignment￨4￨c .￨4￨c expression￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j flowInfo￨4￨e =￨4￨e assignment￨4￨e .￨4￨e expression￨4￨e .￨4￨e analyseCode￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e flowContext￨4￨e ,￨4￨e flowInfo￨4￨e )￨4￨e .￨4￨e unconditionalInits￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j manageSyntheticWriteAccessIfNecessary￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e flowInfo￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j binding￨4￨c .￨4￨c isFinal￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c (￨5￨c (￨5￨c (￨5￨c binding￨5￨c .￨5￨c isBlankFinal￨5￨c (￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c isCompound￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c receiver￨5￨c .￨5￨c isThis￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c (￨5￨c receiver￨5￨c )￨5￨c instanceof￨5￨c QualifiedThisReference￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c (￨5￨c receiver￨5￨c .￨5￨c bits￨5￨c )￨5￨c &￨5￨c (￨5￨c ASTNode￨5￨c .￨5￨c ParenthesizedMASK￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c currentScope￨5￨c .￨5￨c allowBlankFinalFieldAssignment￨5￨c (￨5￨c binding￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j flowInfo￨6￨c .￨6￨c isPotentiallyAssigned￨6￨c (￨6￨c binding￨6￨c )￨6￨c )￨5￨j {￨5￨j currentScope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e duplicateInitializationOfBlankFinalField￨6￨e (￨6￨e binding￨6￨e ,￨6￨e this￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j <START_BUG>￨6￨b flowContext￨6￨b .￨6￨b recordSettingFinal￨6￨b (￨6￨b binding￨6￨b ,￨6￨b this￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j flowInfo￨5￨e .￨5￨e markAsDefinitelyAssigned￨5￨e (￨5￨e binding￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j currentScope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e cannotAssignToFinalField￨5￨e (￨5￨e binding￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e flowInfo￨3￨e ;￨3￨e }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f fieldBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCompoundAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p assignmentImplicitConversion￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generatePostIncrement￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p CompoundAssignment￨3￨p postIncrement￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f Constant￨2￨f getConstantFor￨2￨f (￨2￨f FieldBinding￨3￨p binding￨3￨p ,￨3￨p Reference￨3￨p reference￨3￨p ,￨3￨p boolean￨3￨p isImplicit￨3￨p ,￨3￨p Scope￨3￨p referenceScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSuperAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTypeAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticReadAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticWriteAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setActualReceiverType￨2￨f (￨2￨f ReferenceBinding￨3￨p receiverType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDepth￨2￨f (￨2￨f int￨3￨p depth￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFieldIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PossibleMatch￨1￨d implements￨1￨d ICompilationUnit￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e NO_SOURCE_FILE_NAME￨2￨e =￨2￨e "NO<seq2seq4repair_space>SOURCE<seq2seq4repair_space>FILE<seq2seq4repair_space>NAME"￨2￨e ;￨2￨e public￨2￨e IResource￨2￨e resource￨2￨e ;￨2￨e public￨2￨e Openable￨2￨e openable￨2￨e ;￨2￨e public￨2￨e MatchingNodeSet￨2￨e nodeSet￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e compoundName￨2￨e ;￨2￨e CompilationUnitDeclaration￨2￨e parsedUnit￨2￨e ;￨2￨e public￨2￨e SearchDocument￨2￨e document￨2￨e ;￨2￨e private￨2￨e String￨2￨e sourceFileName￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e source￨2￨e ;￨2￨e public￨2￨f PossibleMatch￨2￨f (￨2￨f MatchLocator￨3￨p locator￨3￨p ,￨3￨p IResource￨3￨p resource￨3￨p ,￨3￨p Openable￨3￨p openable￨3￨p ,￨3￨p SearchDocument￨3￨p document￨3￨p ,￨3￨p boolean￨3￨p mustResolve￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getContents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getFileName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getMainTypeName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f getPackageName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f char￨2￨f [￨2￨f ]￨2￨f getQualifiedName￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c openable￨4￨c )￨4￨c instanceof￨4￨c CompilationUnit￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b String￨4￨b fileName￨4￨b =￨4￨b this￨4￨b .￨4￨b resource￨4￨b .￨4￨b getFullPath￨4￨b (￨4￨b )￨4￨b .￨4￨b lastSegment￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b char￨4￨e [￨4￨e ]￨4￨e mainTypeName￨4￨e =￨4￨e Util￨4￨e .￨4￨e getNameWithoutJavaLikeExtension￨4￨e (￨4￨e fileName￨4￨e )￨4￨e .￨4￨e toCharArray￨4￨e (￨4￨e )￨4￨e ;￨4￨e CompilationUnit￨4￨e cu￨4￨e =￨4￨e (￨4￨e (￨4￨e CompilationUnit￨4￨e )￨4￨e (￨4￨e this￨4￨e .￨4￨e openable￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e cu￨4￨e .￨4￨e getType￨4￨e (￨4￨e new￨4￨e String￨4￨e (￨4￨e mainTypeName￨4￨e )￨4￨e )￨4￨e .￨4￨e getFullyQualifiedName￨4￨e (￨4￨e )￨4￨e .￨4￨e toCharArray￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c openable￨4￨c )￨4￨c instanceof￨4￨c ClassFile￨4￨c )￨3￨j {￨3￨j String￨4￨e fileName￨4￨e =￨4￨e getSourceFileName￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j fileName￨5￨c ==￨5￨c (￨5￨c PossibleMatch￨5￨c .￨5￨c NO_SOURCE_FILE_NAME￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e (￨5￨e (￨5￨e ClassFile￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e openable￨5￨e )￨5￨e )￨5￨e .￨5￨e getType￨5￨e (￨5￨e )￨5￨e .￨5￨e getFullyQualifiedName￨5￨e (￨5￨e '.'￨5￨e )￨5￨e .￨5￨e toCharArray￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j int￨4￨e index￨4￨e =￨4￨e Util￨4￨e .￨4￨e indexOfJavaLikeExtension￨4￨e (￨4￨e fileName￨4￨e )￨4￨e ;￨4￨e String￨4￨e simpleName￨4￨e =￨4￨e (￨4￨e index￨4￨e ==￨4￨e (￨4￨e -￨4￨e 1￨4￨e )￨4￨e )￨4￨e ?￨4￨e fileName￨4￨e :￨4￨e fileName￨4￨e .￨4￨e substring￨4￨e (￨4￨e 0￨4￨e ,￨4￨e index￨4￨e )￨4￨e ;￨4￨e PackageFragment￨4￨e pkg￨4￨e =￨4￨e (￨4￨e (￨4￨e PackageFragment￨4￨e )￨4￨e (￨4￨e this￨4￨e .￨4￨e openable￨4￨e .￨4￨e getParent￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e Util￨4￨e .￨4￨e concatWith￨4￨e (￨4￨e pkg￨4￨e .￨4￨e names￨4￨e ,￨4￨e simpleName￨4￨e ,￨4￨e '.'￨4￨e )￨4￨e .￨4￨e toCharArray￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f private￨2￨f String￨2￨f getSourceFileName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WebRequestCycle￨1￨d extends￨1￨d RequestCycle￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Log￨2￨d log￨2￨d =￨2￨d LogFactory￨2￨d .￨2￨d getLog￨2￨d (￨2￨d WebRequestCycle￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d WebRequestCycle￨2￨d (￨2￨d final￨2￨d WebSession￨2￨d session￨2￨d ,￨2￨d final￨2￨d WebRequest￨2￨d request￨2￨d ,￨2￨d final￨2￨d Response￨2￨d response￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f WebRequest￨2￨f getWebRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WebResponse￨2￨f getWebResponse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WebSession￨2￨f getWebSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f redirectTo￨2￨f (￨2￨f final￨3￨p Page￨3￨p page￨3￨p )￨2￨f {￨2￨f String￨3￨e redirectUrl￨3￨e =￨3￨e null￨3￨e ;￨3￨e ApplicationSettings￨3￨e settings￨3￨e =￨3￨e application￨3￨e .￨3￨e getSettings￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c settings￨4￨c .￨4￨c getRenderStrategy￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c ApplicationSettings￨4￨c .￨4￨c REDIRECT_TO_BUFFER￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c application￨4￨c )￨4￨c instanceof￨4￨c WebApplication￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e Response￨4￨e currentResponse￨4￨e =￨4￨e getResponse￨4￨e (￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨f BufferedResponse￨5￨f redirectResponse￨5￨f =￨5￨f new￨5￨f BufferedResponse￨5￨f (￨5￨f )￨5￨f {￨5￨f public￨6￨f String￨6￨f encodeURL￨6￨f (￨6￨f String￨7￨p url￨7￨p )￨6￨f {￨6￨f return￨7￨e currentResponse￨7￨e .￨7￨e encodeURL￨7￨e (￨7￨e url￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f ;￨5￨e redirectResponse￨5￨e .￨5￨e setCharacterEncoding￨5￨e (￨5￨e currentResponse￨5￨e .￨5￨e getCharacterEncoding￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e setResponse￨5￨e (￨5￨e redirectResponse￨5￨e )￨5￨e ;￨5￨e page￨5￨e .￨5￨e doRender￨5￨e (￨5￨e )￨5￨e ;￨5￨e setResponse￨5￨e (￨5￨e currentResponse￨5￨e )￨5￨e ;￨5￨e final￨5￨e String￨5￨e responseRedirect￨5￨e =￨5￨e redirectResponse￨5￨e .￨5￨e getRedirectUrl￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j responseRedirect￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j redirectUrl￨6￨e =￨6￨e responseRedirect￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c redirectResponse￨6￨c .￨6￨c getContentLength￨6￨c (￨6￨c )￨6￨c )￨6￨c >￨6￨c 0￨6￨c )￨5￨j {￨5￨j redirectResponse￨6￨e .￨6￨e setCharacterEncoding￨6￨e (￨6￨e currentResponse￨6￨e .￨6￨e getCharacterEncoding￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e redirectResponse￨6￨e .￨6￨e filter￨6￨e (￨6￨e )￨6￨e ;￨6￨e redirectResponse￨6￨e .￨6￨e close￨6￨e (￨6￨e )￨6￨e ;￨6￨e redirectUrl￨6￨e =￨6￨e page￨6￨e .￨6￨e urlFor￨6￨e (￨6￨e page￨6￨e ,￨6￨e IRedirectListener￨6￨e .￨6￨e class￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b (￨6￨b (￨6￨b WebApplication￨6￨b )￨6￨b (￨6￨b application￨6￨b )￨6￨b )￨6￨b .￨6￨b addRedirect￨6￨b (￨6￨b getWebRequest￨6￨b (￨6￨b )￨6￨b .￨6￨b getHttpServletRequest￨6￨b (￨6￨b )￨6￨b ,￨6￨b redirectUrl￨6￨b ,￨6￨b redirectResponse￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j }￨4￨f catch￨4￨f (￨4￨f RuntimeException￨5￨p ex￨5￨p )￨4￨f {￨4￨f setResponse￨5￨e (￨5￨e currentResponse￨5￨e )￨5￨e ;￨5￨e WebRequestCycle￨5￨e .￨5￨e log￨5￨e .￨5￨e error￨5￨e (￨5￨e ex￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e ,￨5￨e ex￨5￨e )￨5￨e ;￨5￨e IRequestCycleProcessor￨5￨e processor￨5￨e =￨5￨e getRequestCycleProcessor￨5￨e (￨5￨e )￨5￨e ;￨5￨e processor￨5￨e .￨5￨e respond￨5￨e (￨5￨e ex￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨f }￨3￨j else￨3￨j {￨3￨j session￨4￨e .￨4￨e touch￨4￨e (￨4￨e page￨4￨e )￨4￨e ;￨4￨e page￨4￨e .￨4￨e internalEndRequest￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j redirectUrl￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j redirectUrl￨4￨e =￨4￨e page￨4￨e .￨4￨e urlFor￨4￨e (￨4￨e page￨4￨e ,￨4￨e IRedirectListener￨4￨e .￨4￨e class￨4￨e )￨4￨e ;￨4￨e }￨3￨j response￨3￨e .￨3￨e redirect￨3￨e (￨3￨e redirectUrl￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f ClientInfo￨2￨f newClientInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IRequestCycleProcessor￨2￨f getRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DomainClientImpl￨1￨d implements￨1￨d DomainClient￨1￨d {￨1￨d private￨2￨e volatile￨2￨e DomainDeploymentManager￨2￨e deploymentManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e ModelControllerClient￨2￨e delegate￨2￨e ;￨2￨e public￨2￨f DomainClientImpl￨2￨f (￨2￨f InetAddress￨3￨p address￨3￨p ,￨3￨p int￨3￨p port￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f OperationResult￨2￨f execute￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p ,￨3￨p ResultHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f execute￨2￨f (￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f CancellationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f OperationResult￨2￨f execute￨2￨f (￨2￨f Operation￨3￨p operation￨3￨p ,￨3￨p ResultHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f execute￨2￨f (￨2￨f Operation￨2￨f operation￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f CancellationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f addDeploymentContent￨2￨f (￨2￨f InputStream￨3￨p stream￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f DomainDeploymentManager￨2￨f getDeploymentManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getHostControllerNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Map￨2￨f <￨2￨f ServerIdentity￨2￨f ,￨2￨f ServerStatus￨2￨f >￨2￨f getServerStatuses￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f getServerNames￨2￨f (￨2￨f String￨3￨p host￨3￨p )￨2￨f {￨2￨f ModelNode￨3￨e op￨3￨e =￨3￨e new￨3￨e ModelNode￨3￨e (￨3￨e )￨3￨e ;￨3￨e op￨3￨e .￨3￨e get￨3￨e (￨3￨e "operation"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e "read-children-names"￨3￨e )￨3￨e ;￨3￨e op￨3￨e .￨3￨e get￨3￨e (￨3￨e "child-type"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e "server-config"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b op￨3￨b .￨3￨b get￨3￨b (￨3￨b "address"￨3￨b )￨3￨b .￨3￨b set￨3￨b (￨3￨b "host"￨3￨b ,￨3￨b host￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b ModelNode￨3￨e result￨3￨e =￨3￨e executeForResult￨3￨e (￨3￨e Factory￨3￨e .￨3￨e create￨3￨e (￨3￨e op￨3￨e )￨3￨e .￨3￨e build￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e String￨3￨e >￨3￨e servers￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e String￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l ModelNode￨4￨c server￨4￨c :￨4￨c result￨4￨c .￨4￨c asList￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l servers￨4￨e .￨4￨e add￨4￨e (￨4￨e server￨4￨e .￨4￨e asString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e servers￨3￨e ;￨3￨e }￨2￨f private￨2￨f ModelNode￨2￨f readAttribute￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p ModelNode￨3￨p address￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServerStatus￨2￨f startServer￨2￨f (￨2￨f String￨3￨p hostControllerName￨3￨p ,￨3￨p String￨3￨p serverName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServerStatus￨2￨f stopServer￨2￨f (￨2￨f String￨3￨p hostControllerName￨3￨p ,￨3￨p String￨3￨p serverName￨3￨p ,￨3￨p long￨3￨p gracefulShutdownTimeout￨3￨p ,￨3￨p TimeUnit￨3￨p timeUnit￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServerStatus￨2￨f restartServer￨2￨f (￨2￨f String￨3￨p hostControllerName￨3￨p ,￨3￨p String￨3￨p serverName￨3￨p ,￨3￨p long￨3￨p gracefulShutdownTimeout￨3￨p ,￨3￨p TimeUnit￨3￨p timeUnit￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isDeploymentNameUnique￨2￨f (￨2￨f final￨3￨p String￨3￨p deploymentName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ModelNode￨2￨f executeForResult￨2￨f (￨2￨f Operation￨3￨p op￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RarConfigProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JAVAX_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "javax.resource.api"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e LOGGING_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.logging"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e IRON_JACAMAR_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.ironjacamar.api"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e IRON_JACAMAR_IMPL_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.ironjacamar.impl"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e NAMING_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.as.naming"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e VALIDATION_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "javax.validation.api"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e HIBERNATE_VALIDATOR_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.hibernate.validator"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e COMMON_CORE_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.common-core"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e SYSTEM_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "javax.api"￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c phaseContext￨4￨c .￨4￨c getDeploymentUnit￨4￨c (￨4￨c )￨4￨c .￨4￨c getAttachment￨4￨c (￨4￨c ATTACHMENT_KEY￨4￨c )￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b final￨3￨b ModuleLoader￨3￨b moduleLoader￨3￨b =￨3￨b Module￨3￨b .￨3￨b getSystemModuleLoader￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ModuleSpecification￨3￨e moduleSpecification￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MODULE_SPECIFICATION￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e JAVAX_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e LOGGING_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e IRON_JACAMAR_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e IRON_JACAMAR_IMPL_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e true￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e SYSTEM_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e NAMING_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e VALIDATION_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e HIBERNATE_VALIDATOR_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleSpecification￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e moduleLoader￨3￨e ,￨3￨e RarConfigProcessor￨3￨e .￨3￨e COMMON_CORE_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f final￨3￨p DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ReturnStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isSynchronized￨2￨e ;￨2￨e public￨2￨e SubRoutineStatement￨2￨e [￨2￨e ]￨2￨e subroutines￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isAnySubRoutineEscaping￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e LocalVariableBinding￨2￨e saveValueVariable￨2￨e ;￨2￨e public￨2￨f ReturnStatement￨2￨f (￨2￨f Expression￨3￨p expr￨3￨p ,￨3￨p int￨3￨p s￨3￨p ,￨3￨p int￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateReturnBytecode￨2￨f (￨2￨f CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateStoreSaveValueIfNecessary￨2￨f (￨2￨f CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f needValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f prepareSaveValueLocation￨2￨f (￨2￨f TryStatement￨3￨p targetTryStatement￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f MethodScope￨3￨e methodScope￨3￨e =￨3￨e scope￨3￨e .￨3￨e methodScope￨3￨e (￨3￨e )￨3￨e ;￨3￨e MethodBinding￨3￨e methodBinding￨3￨e ;￨3￨e TypeBinding￨3￨e methodType￨3￨e =￨3￨e (￨3￨e (￨3￨e methodScope￨3￨e .￨3￨e referenceContext￨3￨e )￨3￨e instanceof￨3￨e AbstractMethodDeclaration￨3￨e )￨3￨e ?￨3￨e (￨3￨e methodBinding￨3￨e =￨3￨e (￨3￨e (￨3￨e AbstractMethodDeclaration￨3￨e )￨3￨e (￨3￨e methodScope￨3￨e .￨3￨e referenceContext￨3￨e )￨3￨e )￨3￨e .￨3￨e binding￨3￨e )￨3￨e ==￨3￨e null￨3￨e ?￨3￨e null￨3￨e :￨3￨e methodBinding￨3￨e .￨3￨e returnType￨3￨e :￨3￨e VoidBinding￨3￨e ;￨3￨e TypeBinding￨3￨e expressionType￨3￨e ;￨3￨e if￨3￨j (￨3￨j methodType￨4￨c ==￨4￨c (￨4￨c VoidBinding￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c expression￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c expressionType￨5￨c =￨5￨c expression￨5￨c .￨5￨c resolveType￨5￨c (￨5￨c scope￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e attemptToReturnNonVoidExpression￨5￨e (￨5￨e this￨5￨e ,￨5￨e expressionType￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c expression￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j methodType￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e shouldReturn￨5￨e (￨5￨e methodType￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e ;￨4￨e }￨3￨j expression￨3￨e .￨3￨e setExpectedType￨3￨e (￨3￨e methodType￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c expressionType￨4￨c =￨4￨c expression￨4￨c .￨4￨c resolveType￨4￨c (￨4￨c scope￨4￨c )￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j expressionType￨4￨c ==￨4￨c (￨4￨c VoidBinding￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e attemptToReturnVoidValue￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j methodType￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b expressionType￨3￨b .￨3￨b isRawType￨3￨b (￨3￨b )￨3￨b )￨3￨b &&￨3￨b (￨3￨b (￨3￨b methodType￨3￨b .￨3￨b isBoundParameterizedType￨3￨b (￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b methodType￨3￨b .￨3￨b isGenericType￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e unsafeRawConversion￨3￨e (￨3￨e this￨3￨e .￨3￨e expression￨3￨e ,￨3￨e expressionType￨3￨e ,￨3￨e methodType￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j expression￨4￨c .￨4￨c isConstantValueOfTypeAssignableToType￨4￨c (￨4￨c expressionType￨4￨c ,￨4￨c methodType￨4￨c )￨4￨c )￨3￨j {￨3￨j expression￨4￨e .￨4￨e computeConversion￨4￨e (￨4￨e scope￨4￨e ,￨4￨e methodType￨4￨e ,￨4￨e expressionType￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j expressionType￨4￨c .￨4￨c isCompatibleWith￨4￨c (￨4￨c methodType￨4￨c )￨4￨c )￨3￨j {￨3￨j expression￨4￨e .￨4￨e computeConversion￨4￨e (￨4￨e scope￨4￨e ,￨4￨e methodType￨4￨e ,￨4￨e expressionType￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e typeMismatchError￨3￨e (￨3￨e expressionType￨3￨e ,￨3￨e methodType￨3￨e ,￨3￨e expression￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PanelTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d public￨2￨f PanelTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderHomePage_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f boolean￨3￨e hit￨3￨e =￨3￨e false￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f executeTest￨4￨e (￨4￨e PanelPage_1￨4￨e .￨4￨e class￨4￨e ,￨4￨e "Dummy.html"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f MarkupException￨4￨p mex￨4￨p )￨3￨f {￨3￨f hit￨4￨e =￨4￨e true￨4￨e ;￨4￨e assertNotNull￨4￨e (￨4￨e mex￨4￨e .￨4￨e getMarkupStream￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b assertTrue￨4￨b (￨4￨b mex￨4￨b .￨4￨b getMessage￨4￨b (￨4￨b )￨4￨b .￨4￨b contains￨4￨b (￨4￨b "does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag"￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b assertTrue￨4￨e (￨4￨e mex￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e .￨4￨e contains￨4￨e (￨4￨e "SimplePanel_1.html"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f assertTrue￨3￨e (￨3￨e "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨3￨e ,￨3￨e hit￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testRenderHomePage_2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanel3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanel4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_5￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_6￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanelWithAttributeModifier￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_7￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_8￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStartPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SegmentTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDistance￨2￨f (￨2￨f )￨2￨f {￨2￨f Vector2D￨3￨e start￨3￨e =￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e 2￨3￨e ,￨3￨e 2￨3￨e )￨3￨e ;￨3￨e Vector2D￨3￨e end￨3￨e =￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e (￨3￨e -￨3￨e 2￨3￨e )￨3￨e ,￨3￨e (￨3￨e -￨3￨e 2￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Segment￨3￨b segment￨3￨b =￨3￨b new￨3￨b Segment￨3￨b (￨3￨b start￨3￨b ,￨3￨b end￨3￨b ,￨3￨b new￨3￨b Line￨3￨b (￨3￨b start￨3￨b ,￨3￨b end￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e FastMath￨3￨e .￨3￨e sqrt￨3￨e (￨3￨e 2￨3￨e )￨3￨e ,￨3￨e segment￨3￨e .￨3￨e distance￨3￨e (￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e 1￨3￨e ,￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e 1.0E-10￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e FastMath￨3￨e .￨3￨e sin￨3￨e (￨3￨e (￨3￨e (￨3￨e Math￨3￨e .￨3￨e PI￨3￨e )￨3￨e /￨3￨e 4.0￨3￨e )￨3￨e )￨3￨e ,￨3￨e segment￨3￨e .￨3￨e distance￨3￨e (￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e 1.0E-10￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e FastMath￨3￨e .￨3￨e sqrt￨3￨e (￨3￨e 8￨3￨e )￨3￨e ,￨3￨e segment￨3￨e .￨3￨e distance￨3￨e (￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e 0￨3￨e ,￨3￨e 4￨3￨e )￨3￨e )￨3￨e ,￨3￨e 1.0E-10￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e FastMath￨3￨e .￨3￨e sqrt￨3￨e (￨3￨e 8￨3￨e )￨3￨e ,￨3￨e segment￨3￨e .￨3￨e distance￨3￨e (￨3￨e new￨3￨e Vector2D￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e -￨3￨e 4￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e 1.0E-10￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Wizard￨1￨d extends￨1￨d Panel￨1￨d implements￨1￨d IWizard￨1￨d ,￨1￨d IWizardModelListener￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e BUTTONS_ID￨2￨e =￨2￨e "buttons"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FEEDBACK_ID￨2￨e =￨2￨e "feedback"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e HEADER_ID￨2￨e =￨2￨e "header"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e OVERVIEW_ID￨2￨e =￨2￨e "overview"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FORM_ID￨2￨e =￨2￨e "form"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VIEW_ID￨2￨e =￨2￨e "view"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e IWizardStep￨2￨e activeStep￨2￨e ;￨2￨e private￨2￨e Form￨2￨e form￨2￨e ;￨2￨e private￨2￨e IWizardModel￨2￨e wizardModel￨2￨e ;￨2￨e public￨2￨f Wizard￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Wizard￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p boolean￨3￨p addDefaultCssStyle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Wizard￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IWizardModel￨3￨p wizardModel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Wizard￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IWizardModel￨3￨p wizardModel￨3￨p ,￨3￨p boolean￨3￨p addDefaultCssStyle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addDefaultCssStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IWizardStep￨2￨f getActiveStep￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Form￨2￨f getForm￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IWizardModel￨2￨f getWizardModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVersioned￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onActiveStepChanged￨2￨f (￨2￨f IWizardStep￨3￨p newStep￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onCancel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onFinish￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f init￨2￨f (￨2￨f IWizardModel￨3￨p wizardModel￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Component￨2￨f newButtonBar￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FeedbackPanel￨2￨f newFeedbackPanel￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Form￨2￨f newForm￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onBeforeRender￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e onBeforeRender￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Component￨3￨b buttonBar￨3￨b =￨3￨b get￨3￨b (￨3￨b Wizard￨3￨b .￨3￨b BUTTONS_ID￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j buttonBar￨4￨c instanceof￨4￨c IDefaultButtonProvider￨4￨c )￨3￨j {￨3￨j IFormSubmittingComponent￨4￨e defaultButton￨4￨e =￨4￨e (￨4￨e (￨4￨e IDefaultButtonProvider￨4￨e )￨4￨e (￨4￨e buttonBar￨4￨e )￨4￨e )￨4￨e .￨4￨e getDefaultButton￨4￨e (￨4￨e wizardModel￨4￨e )￨4￨e ;￨4￨e form￨4￨e .￨4￨e setDefaultButton￨4￨e (￨4￨e defaultButton￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f Component￨2￨f newOverviewBar￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WorkingSetManager￨1￨d implements￨1￨d IWorkingSetManager￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e WORKING_SET_STATE_FILENAME￨2￨e =￨2￨e "workingsets.xml"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MRU_SIZE￨2￨e =￨2￨e 5￨2￨e ;￨2￨e private￨2￨e SortedSet￨2￨e workingSets￨2￨e =￨2￨e new￨2￨e TreeSet￨2￨e (￨2￨e new￨2￨e WorkingSetComparator￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e recentWorkingSets￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e ListenerList￨2￨e propertyChangeListeners￨2￨e =￨2￨e new￨2￨e ListenerList￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f addRecentWorkingSet￨2￨f (￨2￨f IWorkingSet￨3￨p workingSet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addWorkingSet￨2￨f (￨2￨f IWorkingSet￨3￨p workingSet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addPropertyChangeListener￨2￨f (￨2￨f IPropertyChangeListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSet￨2￨f createWorkingSet￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p IAdaptable￨3￨p [￨3￨p ]￨3￨p elements￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSetEditWizard￨2￨f createWorkingSetEditWizard￨2￨f (￨2￨f IWorkingSet￨3￨p workingSet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSetSelectionDialog￨2￨f createWorkingSetSelectionDialog￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSetSelectionDialog￨2￨f createWorkingSetSelectionDialog￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p ,￨3￨p boolean￨3￨p multi￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f firePropertyChange￨2￨f (￨2￨f String￨3￨p changeId￨3￨p ,￨3￨p Object￨3￨p oldValue￨3￨p ,￨3￨p Object￨3￨p newValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSet￨2￨f [￨2￨f ]￨2￨f getRecentWorkingSets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSet￨2￨f getWorkingSet￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSet￨2￨f [￨2￨f ]￨2￨f getWorkingSets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f getWorkingSetStateFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removePropertyChangeListener￨2￨f (￨2￨f IPropertyChangeListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeWorkingSet￨2￨f (￨2￨f IWorkingSet￨3￨p workingSet￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f restoreMruList￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restoreState￨2￨f (￨2￨f )￨2￨f {￨2￨f File￨3￨e stateFile￨3￨e =￨3￨e getWorkingSetStateFile￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j stateFile￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f FileInputStream￨5￨e input￨5￨e =￨5￨e new￨5￨e FileInputStream￨5￨e (￨5￨e stateFile￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b InputStreamReader￨5￨b reader￨5￨b =￨5￨b new￨5￨b InputStreamReader￨5￨b (￨5￨b input￨5￨b ,￨5￨b "utf-8"￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b IMemento￨5￨e memento￨5￨e =￨5￨e XMLMemento￨5￨e .￨5￨e createReadRoot￨5￨e (￨5￨e reader￨5￨e )￨5￨e ;￨5￨e restoreWorkingSetState￨5￨e (￨5￨e memento￨5￨e )￨5￨e ;￨5￨e restoreMruList￨5￨e (￨5￨e memento￨5￨e )￨5￨e ;￨5￨e reader￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f MessageDialog￨5￨e .￨5￨e openError￨5￨e (￨5￨e (￨5￨e (￨5￨e Shell￨5￨e )￨5￨e (￨5￨e null￨5￨e )￨5￨e )￨5￨e ,￨5￨e WorkbenchMessages￨5￨e .￨5￨e getString￨5￨e (￨5￨e "ProblemRestoringWorkingSetState.title"￨5￨e )￨5￨e ,￨5￨e WorkbenchMessages￨5￨e .￨5￨e getString￨5￨e (￨5￨e "ProblemRestoringWorkingSetState.message"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f WorkbenchException￨5￨p e￨5￨p )￨4￨f {￨4￨f ErrorDialog￨5￨e .￨5￨e openError￨5￨e (￨5￨e (￨5￨e (￨5￨e Shell￨5￨e )￨5￨e (￨5￨e null￨5￨e )￨5￨e )￨5￨e ,￨5￨e WorkbenchMessages￨5￨e .￨5￨e getString￨5￨e (￨5￨e "ProblemRestoringWorkingSetState.title"￨5￨e )￨5￨e ,￨5￨e WorkbenchMessages￨5￨e .￨5￨e getString￨5￨e (￨5￨e "ProblemRestoringWorkingSetState.message"￨5￨e )￨5￨e ,￨5￨e e￨5￨e .￨5￨e getStatus￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j }￨2￨f private￨2￨f IWorkingSet￨2￨f restoreWorkingSet￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f restoreWorkingSetState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveMruList￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveWorkingSetState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f workingSetChanged￨2￨f (￨2￨f IWorkingSet￨3￨p changedWorkingSet￨3￨p ,￨3￨p String￨3￨p propertyChangeId￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Text￨1￨d extends￨1￨d Scrollable￨1￨d {￨1￨d int￨2￨e txnObject￨2￨e ;￨2￨e int￨2￨e txnFrameID￨2￨e ;￨2￨e int￨2￨e textLimit￨2￨e =￨2￨e Text￨2￨e .￨2￨e LIMIT￨2￨e ;￨2￨e int￨2￨e tabs￨2￨e =￨2￨e 8￨2￨e ;￨2￨e char￨2￨e echoCharacter￨2￨e ;￨2￨e boolean￨2￨e doubleClick￨2￨e ;￨2￨e String￨2￨e hiddenText￨2￨e ;￨2￨e ControlEditTextSelectionRec￨2￨e selection￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e LIMIT￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e DELIMITER￨2￨e ;￨2￨e static￨2￨e final￨2￨e char￨2￨e PASSWORD￨2￨e =￨2￨e '¥'￨2￨e ;￨2￨e public￨2￨f Text￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addModifyListener￨2￨f (￨2￨f ModifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addVerifyListener￨2￨f (￨2￨f VerifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f append￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f callFocusEventHandler￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f computeSize￨2￨f (￨2￨f int￨3￨p wHint￨3￨p ,￨3￨p int￨3￨p hHint￨3￨p ,￨3￨p boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f copy￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ScrollBar￨2￨f createScrollBar￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cut￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Color￨2￨f defaultBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Color￨2￨f defaultForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f drawBackground￨2￨f (￨2￨f int￨3￨p control￨3￨p ,￨3￨p int￨3￨p context￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c OS￨4￨c .￨4￨c HIVIEW￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b drawFocus￨4￨b (￨4￨b control￨4￨b ,￨4￨b context￨4￨b ,￨4￨b (￨4￨b (￨4￨b hasFocus￨4￨b (￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b drawFocusRing￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b ,￨4￨b hasBorder￨4￨b (￨4￨b )￨4￨b ,￨4￨b getParentBackground￨4￨b (￨4￨b )￨4￨b ,￨4￨b inset￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f void￨2￨f drawWidget￨2￨f (￨2￨f int￨3￨p control￨3￨p ,￨3￨p int￨3￨p context￨3￨p ,￨3￨p int￨3￨p damageRgn￨3￨p ,￨3￨p int￨3￨p visibleRgn￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCaretLineNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getCaretLocation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCaretPosition￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCharCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getClipboardText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getDoubleClickEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f getEchoChar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getEditable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Rect￨2￨f getInset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLineCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLineDelimiter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLineHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getOrientation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSelectionCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSelectionText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTabs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f char￨2￨f [￨2￨f ]￨2￨f getEditText￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p ,￨3￨p boolean￨3￨p hidden￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTextLimit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTopIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTopPixel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getTXNText￨2￨f (￨2￨f int￨3￨p iStartOffset￨3￨p ,￨3￨p int￨3￨p iEndOffset￨3￨p )￨2￨f {￨2￨f }￨2￨f Rect￨2￨f inset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f insert￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f insertEditText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlActivate￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlBoundsChanged￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlClick￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlDeactivate￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlGetFocusPart￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventMouseDown￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlSetCursor￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventControlSetFocusPart￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f kEventUnicodeKeyPressed￨2￨f (￨2￨f int￨3￨p nextHandler￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f org￨2￨f .￨2￨f eclipse￨2￨f .￨2￨f swt￨2￨f .￨2￨f internal￨2￨f .￨2￨f carbon￨2￨f .￨2￨f Point￨2￨f measureSpace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paste￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeModifyListener￨2￨f (￨2￨f ModifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeVerifyListener￨2￨f (￨2￨f VerifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f resetVisibleRegion￨2￨f (￨2￨f int￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f sendKeyEvent￨2￨f (￨2￨f int￨3￨p type￨3￨p ,￨3￨p Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p resize￨3￨p ,￨3￨p boolean￨3￨p events￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDoubleClickEnabled￨2￨f (￨2￨f boolean￨3￨p doubleClick￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEchoChar￨2￨f (￨2￨f char￨3￨p echo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEditable￨2￨f (￨2￨f boolean￨3￨p editable￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setFontStyle￨2￨f (￨2￨f Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOrientation￨2￨f (￨2￨f int￨3￨p orientation￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p start￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f Point￨3￨p selection￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTabs￨2￨f (￨2￨f int￨3￨p tabs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setEditText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setTXNBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setTXNText￨2￨f (￨2￨f int￨3￨p iStartOffset￨3￨p ,￨3￨p int￨3￨p iEndOffset￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTextLimit￨2￨f (￨2￨f int￨3￨p limit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTopIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f traversalCode￨2￨f (￨2￨f int￨3￨p key￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f verifyText￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p ,￨3￨p Event￨3￨p keyEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Program￨1￨d {￨1￨d String￨2￨e name￨2￨e ;￨2￨e String￨2￨e command￨2￨e ;￨2￨e String￨2￨e iconName￨2￨e ;￨2￨e Program￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Program￨2￨f findProgram￨2￨f (￨2￨f String￨3￨p extension￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f getExtensions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f getKeyValue￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p boolean￨3￨p expand￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Program￨2￨f getProgram￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f String￨3￨e name￨3￨e =￨3￨e Program￨3￨e .￨3￨e getKeyValue￨3￨e (￨3￨e key￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c name￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c name￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j name￨4￨e =￨4￨e key￨4￨e ;￨4￨e }￨3￨j String￨3￨e DEFAULT_COMMAND￨3￨e =￨3￨e "\\shell"￨3￨e ;￨3￨e String￨3￨e defaultCommand￨3￨e =￨3￨e Program￨3￨e .￨3￨e getKeyValue￨3￨e (￨3￨e (￨3￨e key￨3￨e +￨3￨e DEFAULT_COMMAND￨3￨e )￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b defaultCommand￨3￨b ==￨3￨b null￨3￨b )￨3￨b <END_BUG>￨3￨b defaultCommand￨3￨e =￨3￨e "open"￨3￨e ;￨3￨e String￨3￨e COMMAND￨3￨e =￨3￨e (￨3￨e "\\shell\\"￨3￨e +￨3￨e defaultCommand￨3￨e )￨3￨e +￨3￨e "\\command"￨3￨e ;￨3￨e String￨3￨e command￨3￨e =￨3￨e Program￨3￨e .￨3￨e getKeyValue￨3￨e (￨3￨e (￨3￨e key￨3￨e +￨3￨e COMMAND￨3￨e )￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c command￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c command￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j String￨3￨e DEFAULT_ICON￨3￨e =￨3￨e "\\DefaultIcon"￨3￨e ;￨3￨e String￨3￨e iconName￨3￨e =￨3￨e Program￨3￨e .￨3￨e getKeyValue￨3￨e (￨3￨e (￨3￨e key￨3￨e +￨3￨e DEFAULT_ICON￨3￨e )￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c iconName￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c iconName￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j Program￨3￨e program￨3￨e =￨3￨e new￨3￨e Program￨3￨e (￨3￨e )￨3￨e ;￨3￨e program￨3￨e .￨3￨e name￨3￨e =￨3￨e name￨3￨e ;￨3￨e program￨3￨e .￨3￨e command￨3￨e =￨3￨e command￨3￨e ;￨3￨e program￨3￨e .￨3￨e iconName￨3￨e =￨3￨e iconName￨3￨e ;￨3￨e return￨3￨e program￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f Program￨2￨f [￨2￨f ]￨2￨f getPrograms￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f launch￨2￨f (￨2￨f String￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f execute￨2￨f (￨2￨f String￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ImageData￨2￨f getImageData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ShowViewDialog￨1￨d extends￨1￨d Dialog￨1￨d implements￨1￨d IDoubleClickListener￨1￨d ,￨1￨d ISelectionChangedListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e DIALOG_SETTING_SECTION_NAME￨2￨e =￨2￨e "ShowViewDialog"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e LIST_HEIGHT￨2￨e =￨2￨e 300￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e LIST_WIDTH￨2￨e =￨2￨e 250￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e STORE_EXPANDED_CATEGORIES_ID￨2￨e =￨2￨e (￨2￨e ShowViewDialog￨2￨e .￨2￨e DIALOG_SETTING_SECTION_NAME￨2￨e )￨2￨e +￨2￨e ".STORE_EXPANDED_CATEGORIES_ID"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e STORE_SELECTED_VIEW_ID￨2￨e =￨2￨e (￨2￨e ShowViewDialog￨2￨e .￨2￨e DIALOG_SETTING_SECTION_NAME￨2￨e )￨2￨e +￨2￨e ".STORE_SELECTED_VIEW_ID"￨2￨e ;￨2￨e private￨2￨e FilteredTree￨2￨e filteredTree￨2￨e ;￨2￨e private￨2￨e Button￨2￨e okButton￨2￨e ;￨2￨e private￨2￨e IViewDescriptor￨2￨e [￨2￨e ]￨2￨e viewDescs￨2￨e =￨2￨e new￨2￨e IViewDescriptor￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e IViewRegistry￨2￨e viewReg￨2￨e ;￨2￨e private￨2￨e IWorkbenchWindow￨2￨e window￨2￨e ;￨2￨e private￨2￨e Color￨2￨e dimmedForeground￨2￨e ;￨2￨e public￨2￨f ShowViewDialog￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p ,￨3￨p IViewRegistry￨3￨p viewReg￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f buttonPressed￨2￨f (￨2￨f int￨3￨p buttonId￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f cancelPressed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f configureShell￨2￨f (￨2￨f Shell￨3￨p shell￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createButtonsForButtonBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createDialogArea￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f RGB￨2￨f blend￨2￨f (￨2￨f RGB￨3￨p c1￨3￨p ,￨3￨p RGB￨3￨p c2￨3￨p ,￨3￨p int￨3￨p ratio￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f int￨2￨f blend￨2￨f (￨2￨f int￨3￨p v1￨3￨p ,￨3￨p int￨3￨p v2￨3￨p ,￨3￨p int￨3￨p ratio￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createFilteredTreeViewer￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f PatternFilter￨3￨e filter￨3￨e =￨3￨e new￨3￨e ViewPatternFilter￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e styleBits￨3￨e =￨3￨e (￨3￨e (￨3￨e (￨3￨e SWT￨3￨e .￨3￨e MULTI￨3￨e )￨3￨e |￨3￨e (￨3￨e SWT￨3￨e .￨3￨e H_SCROLL￨3￨e )￨3￨e )￨3￨e |￨3￨e (￨3￨e SWT￨3￨e .￨3￨e V_SCROLL￨3￨e )￨3￨e )￨3￨e |￨3￨e (￨3￨e SWT￨3￨e .￨3￨e BORDER￨3￨e )￨3￨e ;￨3￨e filteredTree￨3￨e =￨3￨e new￨3￨e FilteredTree￨3￨e (￨3￨e parent￨3￨e ,￨3￨e styleBits￨3￨e ,￨3￨e filter￨3￨e )￨3￨e ;￨3￨e filteredTree￨3￨e .￨3￨e setBackground￨3￨e (￨3￨e parent￨3￨e .￨3￨e getDisplay￨3￨e (￨3￨e )￨3￨e .￨3￨e getSystemColor￨3￨e (￨3￨e COLOR_WIDGET_BACKGROUND￨3￨e )￨3￨e )￨3￨e ;￨3￨e TreeViewer￨3￨e treeViewer￨3￨e =￨3￨e filteredTree￨3￨e .￨3￨e getViewer￨3￨e (￨3￨e )￨3￨e ;￨3￨e Control￨3￨e treeControl￨3￨e =￨3￨e treeViewer￨3￨e .￨3￨e getControl￨3￨e (￨3￨e )￨3￨e ;￨3￨e RGB￨3￨e dimmedRGB￨3￨e =￨3￨e ShowViewDialog￨3￨e .￨3￨e blend￨3￨e (￨3￨e treeControl￨3￨e .￨3￨e getForeground￨3￨e (￨3￨e )￨3￨e .￨3￨e getRGB￨3￨e (￨3￨e )￨3￨e ,￨3￨e treeControl￨3￨e .￨3￨e getBackground￨3￨e (￨3￨e )￨3￨e .￨3￨e getRGB￨3￨e (￨3￨e )￨3￨e ,￨3￨e 60￨3￨e )￨3￨e ;￨3￨e dimmedForeground￨3￨e =￨3￨e new￨3￨e Color￨3￨e (￨3￨e treeControl￨3￨e .￨3￨e getDisplay￨3￨e (￨3￨e )￨3￨e ,￨3￨e dimmedRGB￨3￨e )￨3￨e ;￨3￨e treeControl￨3￨f .￨3￨f addDisposeListener￨3￨f (￨3￨f new￨3￨f DisposeListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f widgetDisposed￨4￨f (￨4￨f DisposeEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f dimmedForeground￨5￨e .￨5￨e dispose￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e treeViewer￨3￨e .￨3￨e setLabelProvider￨3￨e (￨3￨e new￨3￨e ViewLabelProvider￨3￨e (￨3￨e window￨3￨e ,￨3￨e dimmedForeground￨3￨e )￨3￨e )￨3￨e ;￨3￨e treeViewer￨3￨e .￨3￨e setContentProvider￨3￨e (￨3￨e new￨3￨e ViewContentProvider￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b treeViewer￨3￨b .￨3￨b setSorter￨3￨b (￨3￨b new￨3￨b ViewSorter￨3￨b (￨3￨b (￨3￨b (￨3￨b ViewRegistry￨3￨b )￨3￨b (￨3￨b viewReg￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b treeViewer￨3￨e .￨3￨e setInput￨3￨e (￨3￨e viewReg￨3￨e )￨3￨e ;￨3￨e treeViewer￨3￨e .￨3￨e addSelectionChangedListener￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e treeViewer￨3￨e .￨3￨e addDoubleClickListener￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e treeViewer￨3￨e .￨3￨e addFilter￨3￨e (￨3￨e new￨3￨e CapabilityFilter￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j hasAtMostOneView￨4￨c (￨4￨c filteredTree￨4￨c .￨4￨c getViewer￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j Text￨4￨e filterText￨4￨e =￨4￨e filteredTree￨4￨e .￨4￨e getFilterControl￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j filterText￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j filterText￨5￨e .￨5￨e setEnabled￨5￨e (￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j applyDialogFont￨3￨e (￨3￨e filteredTree￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f hasAtMostOneView￨2￨f (￨2￨f TreeViewer￨3￨p tree￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f doubleClick￨2￨f (￨2￨f DoubleClickEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IDialogSettings￨2￨f getDialogSettings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IViewDescriptor￨2￨f [￨2￨f ]￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f layoutTopControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f restoreWidgetValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f saveWidgetValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectionChanged￨2￨f (￨2￨f SelectionChangedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateButtons￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateSelection￨2￨f (￨2￨f SelectionChangedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FieldReference￨1￨d extends￨1￨d Reference￨1￨d implements￨1￨d InvocationSite￨1￨d {￨1￨d public￨2￨e Expression￨2￨e receiver￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e token￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e binding￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e codegenBinding￨2￨e ;￨2￨e public￨2￨e long￨2￨e nameSourcePosition￨2￨e ;￨2￨e MethodBinding￨2￨e syntheticReadAccessor￨2￨e ;￨2￨e MethodBinding￨2￨e syntheticWriteAccessor￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e receiverType￨2￨e ;￨2￨e public￨2￨f FieldReference￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p source￨3￨p ,￨3￨p long￨3￨p pos￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p isCompound￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f fieldBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCompoundAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p assignmentImplicitConversion￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generatePostIncrement￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p CompoundAssignment￨3￨p postIncrement￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f Constant￨2￨f getConstantFor￨2￨f (￨2￨f FieldBinding￨3￨p binding￨3￨p ,￨3￨p Reference￨3￨p reference￨3￨p ,￨3￨p boolean￨3￨p isImplicit￨3￨p ,￨3￨p Scope￨3￨p referenceScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSuperAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTypeAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticReadAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticWriteAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e receiverType￨3￨e =￨3￨e receiver￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c receiverType￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e codegenBinding￨3￨e =￨3￨e this￨3￨e .￨3￨e binding￨3￨e =￨3￨e scope￨3￨e .￨3￨e getField￨3￨e (￨3￨e this￨3￨e .￨3￨e receiverType￨3￨e ,￨3￨e token￨3￨e ,￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c binding￨4￨c .￨4￨c isValidBinding￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e invalidField￨4￨e (￨4￨e this￨4￨e ,￨4￨e this￨4￨e .￨4￨e receiverType￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b isFieldUseDeprecated￨3￨b (￨3￨b binding￨3￨b ,￨3￨b scope￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e deprecatedField￨3￨e (￨3￨e binding￨3￨e ,￨3￨e this￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e isImplicitThisRcv￨3￨e =￨3￨e receiver￨3￨e .￨3￨e isImplicitThis￨3￨e (￨3￨e )￨3￨e ;￨3￨e constant￨3￨e =￨3￨e FieldReference￨3￨e .￨3￨e getConstantFor￨3￨e (￨3￨e binding￨3￨e ,￨3￨e this￨3￨e ,￨3￨e isImplicitThisRcv￨3￨e ,￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c isImplicitThisRcv￨4￨c )￨3￨j {￨3￨j constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j binding￨4￨c .￨4￨c isStatic￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j !￨5￨c (￨5￨c (￨5￨c isImplicitThisRcv￨5￨c ||￨5￨c (￨5￨c receiver￨5￨c .￨5￨c isSuper￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c (￨5￨c receiver￨5￨c )￨5￨c instanceof￨5￨c NameReference￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c (￨5￨c (￨5￨c (￨5￨c NameReference￨5￨c )￨5￨c (￨5￨c receiver￨5￨c )￨5￨c )￨5￨c .￨5￨c bits￨5￨c )￨5￨c &￨5￨c (￨5￨c BindingIds￨5￨c .￨5￨c TYPE￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e unnecessaryReceiverForStaticField￨5￨e (￨5￨e this￨5￨e ,￨5￨e binding￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e =￨3￨e binding￨3￨e .￨3￨e type￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setActualReceiverType￨2￨f (￨2￨f ReferenceBinding￨3￨p receiverType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDepth￨2￨f (￨2￨f int￨3￨p depth￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFieldIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d AtomicInteger￨2￨d archiveCount￨2￨d =￨2￨d new￨2￨d AtomicInteger￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d ServiceContainer￨2￨d serviceContainer￨2￨d ;￨2￨d private￨2￨d OSGiSubsystemState￨2￨d subsystemState￨2￨d ;￨2￨d private￨2￨d DeploymentChain￨2￨d deploymentChain￨2￨d ;￨2￨d private￨2￨d Selector￨2￨d selector￨2￨d ;￨2￨d public￨2￨d OSGiSubsystemSupport￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d public￨2￨f OSGiSubsystemSupport￨2￨f (￨2￨f final￨2￨f OSGiSubsystemState￨2￨f subsystemState￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServiceContainer￨2￨f getServiceContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModuleLoader￨2￨f getClassifyingModuleLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f OSGiSubsystemSupport￨2￨f .￨2￨f TestModuleLoader￨2￨f getTestModuleLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DeploymentChain￨2￨f getDeploymentChain￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getUniqueName￨2￨f (￨2￨f String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertServiceUp￨2￨f (￨2￨f ServiceName￨3￨p serviceName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertServiceDown￨2￨f (￨2￨f ServiceName￨3￨p serviceName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeDeploymentChain￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupServices￨2￨f (￨2￨f final￨2￨f BatchBuilder￨2￨f batchBuilder￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupEnvironmentServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupModuleLoaderServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupDeploymentServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupFrameworkServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f batchBuilder￨3￨e .￨3￨e addService￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e new￨3￨e MBeanServerService￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e OSGiSubsystemSupport￨3￨e .￨3￨e TestBundleManagerService￨3￨e .￨3￨e addService￨3￨e (￨3￨e batchBuilder￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b FrameworkService￨3￨b .￨3￨b addService￨3￨b (￨3￨b batchBuilder￨3￨b ,￨3￨b IMMEDIATE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b PackageAdminService￨3￨e .￨3￨e addService￨3￨e (￨3￨e batchBuilder￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f Selector￨2￨f getDeploymentChainSelector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BundleManager￨2￨f getBundleManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BundleContext￨2￨f getSystemContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Configuration￨2￨f getSubsystemConfig￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f ,￨2￨f ModuleIdentifier￨2￨f exporterId￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClassFails￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f loadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Module￨2￨f loadModule￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f )￨2￨f throws￨2￨f ModuleLoadException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Bundle￨2￨f executeDeploy￨2￨f (￨2￨f final￨2￨f JavaArchive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f executeUndeploy￨2￨f (￨2￨f final￨2￨f JavaArchive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f List￨2￨f <￨2￨f ServiceName￨2￨f >￨2￨f runWithLatchedBatch￨2￨f (￨2￨f final￨2￨f OSGiSubsystemSupport￨2￨f .￨2￨f BatchedWork￨2￨f work￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f interface￨2￨f BatchedWork￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f execute￨3￨f (￨3￨f final￨3￨f BatchBuilder￨3￨f batchBuilder￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d TestServiceListener￨2￨d extends￨2￨d AbstractServiceListener￨2￨d <￨2￨d Object￨2￨d >￨2￨d {￨2￨d final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e registeredServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e startedServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e failedServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e Mode￨3￨e ,￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e >￨3￨e initialModes￨3￨e ;￨3￨e private￨3￨e final￨3￨e AtomicInteger￨3￨e count￨3￨e =￨3￨e new￨3￨e AtomicInteger￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e Runnable￨3￨e finishTask￨3￨e ;￨3￨e public￨3￨f TestServiceListener￨3￨f (￨3￨f Runnable￨4￨p finishTask￨4￨p ,￨4￨p Map￨4￨p <￨4￨p Mode￨4￨p ,￨4￨p List￨4￨p <￨4￨p ServiceName￨4￨p >￨4￨p >￨4￨p initialModes￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f listenerAdded￨3￨f (￨3￨f final￨4￨p ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f serviceStarted￨3￨f (￨3￨f final￨4￨p ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f serviceFailed￨3￨f (￨3￨f ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p ,￨4￨p StartException￨4￨p reason￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f serviceRemoved￨3￨f (￨3￨f ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f finishBatch￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f batchComplete￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d TestModuleLoader￨2￨d extends￨2￨d ModuleLoader￨2￨d implements￨2￨d Service￨2￨d <￨2￨d OSGiSubsystemSupport￨2￨d .￨2￨d TestModuleLoader￨2￨d >￨2￨d {￨2￨d public￨3￨e static￨3￨e final￨3￨e ServiceName￨3￨e SERVICE_NAME￨3￨e =￨3￨e JBOSS￨3￨e .￨3￨e append￨3￨e (￨3￨e "module"￨3￨e ,￨3￨e "loader"￨3￨e ,￨3￨e "support"￨3￨e )￨3￨e ;￨3￨e private￨3￨e String￨3￨e prefix￨3￨e ;￨3￨e private￨3￨e Map￨3￨e <￨3￨e ModuleIdentifier￨3￨e ,￨3￨e ModuleSpec￨3￨e >￨3￨e modules￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e ModuleIdentifier￨3￨e ,￨3￨e ModuleSpec￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e Injector￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e injector￨3￨e ;￨3￨e TestModuleLoader￨3￨f (￨3￨f String￨4￨p prefix￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f addModuleSpec￨3￨f (￨3￨f ModuleSpec￨4￨p moduleSpec￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModuleSpec￨3￨f findModule￨3￨f (￨3￨f ModuleIdentifier￨3￨f identifier￨3￨f )￨3￨f throws￨3￨f ModuleLoadException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestModuleLoader￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestModuleLoader￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d TestBundleManagerService￨2￨d implements￨2￨d Service￨2￨d <￨2￨d BundleManager￨2￨d >￨2￨d {￨2￨d public￨3￨e static￨3￨e final￨3￨e ServiceName￨3￨e SERVICE_NAME￨3￨e =￨3￨e BundleManagerService￨3￨e .￨3￨e SERVICE_NAME￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e Logger￨3￨e log￨3￨e =￨3￨e Logger￨3￨e .￨3￨e getLogger￨3￨e (￨3￨e "org.jboss.as.osgi"￨3￨e )￨3￨e ;￨3￨e private￨3￨e InjectedValue￨3￨e <￨3￨e Configuration￨3￨e >￨3￨e injectedConfig￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e Configuration￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e InjectedValue￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e injectedModuleLoader￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e Injector￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e moduleLoaderInjector￨3￨e ;￨3￨e private￨3￨e BundleManager￨3￨e bundleManager￨3￨e ;￨3￨e public￨3￨f static￨3￨f void￨3￨f addService￨3￨f (￨3￨f final￨4￨p BatchBuilder￨4￨p batchBuilder￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f BundleManager￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BundleManager￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d TestServerDeploymentRepository￨2￨d implements￨2￨d ServerDeploymentRepository￨2￨d ,￨2￨d Service￨2￨d <￨2￨d ServerDeploymentRepository￨2￨d >￨2￨d {￨2￨d private￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e JavaArchive￨3￨e >￨3￨e repository￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e JavaArchive￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f static￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestServerDeploymentRepository￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f registerDeploymentArchive￨3￨f (￨3￨f String￨4￨p name￨4￨p ,￨4￨p JavaArchive￨4￨p archive￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f ServerDeploymentRepository￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f byte￨3￨f [￨3￨f ]￨3￨f addDeploymentContent￨3￨f (￨3￨f String￨3￨f name￨3￨f ,￨3￨f String￨3￨f runtimeName￨3￨f ,￨3￨f InputStream￨3￨f stream￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Closeable￨3￨f mountDeploymentContent￨3￨f (￨3￨f String￨3￨f name￨3￨f ,￨3￨f String￨3￨f runtimeName￨3￨f ,￨3￨f byte￨3￨f [￨3￨f ]￨3￨f deploymentHash￨3￨f ,￨3￨f VirtualFile￨3￨f mountPoint￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d JavadocAllocationExpression￨1￨d extends￨1￨d AllocationExpression￨1￨d {￨1￨d public￨2￨e int￨2￨e tagSourceStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e tagSourceEnd￨2￨e ;￨2￨e public￨2￨e int￨2￨e tagValue￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e superAccess￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f JavadocAllocationExpression￨2￨f (￨2￨f long￨3￨p pos￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f internalResolveType￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e constant￨3￨e =￨3￨e NotAConstant￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c type￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e scope￨4￨e .￨4￨e enclosingSourceType￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c scope￨4￨c .￨4￨c kind￨4￨c )￨4￨c ==￨4￨c (￨4￨c Scope￨4￨c .￨4￨c CLASS_SCOPE￨4￨c )￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e this￨4￨e .￨4￨e type￨4￨e .￨4￨e resolveType￨4￨e (￨4￨e (￨4￨e (￨4￨e ClassScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b this￨4￨b .￨4￨b resolvedType￨4￨b =￨4￨b this￨4￨b .￨4￨b type￨4￨b .￨4￨b resolveType￨4￨b (￨4￨b (￨4￨b (￨4￨b BlockScope￨4￨b )￨4￨b (￨4￨b scope￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j TypeBinding￨3￨e [￨3￨e ]￨3￨e argumentTypes￨3￨e =￨3￨e NoParameters￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c arguments￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j boolean￨4￨e argHasError￨4￨e =￨4￨e false￨4￨e ;￨4￨e int￨4￨e length￨4￨e =￨4￨e this￨4￨e .￨4￨e arguments￨4￨e .￨4￨e length￨4￨e ;￨4￨e argumentTypes￨4￨e =￨4￨e new￨4￨e TypeBinding￨4￨e [￨4￨e length￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l Expression￨5￨e argument￨5￨e =￨5￨e this￨5￨e .￨5￨e arguments￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c scope￨6￨c .￨6￨c kind￨6￨c )￨6￨c ==￨6￨c (￨6￨c Scope￨6￨c .￨6￨c CLASS_SCOPE￨6￨c )￨6￨c )￨5￨j {￨5￨j argumentTypes￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e argument￨6￨e .￨6￨e resolveType￨6￨e (￨6￨e (￨6￨e (￨6￨e ClassScope￨6￨e )￨6￨e (￨6￨e scope￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j argumentTypes￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e argument￨6￨e .￨6￨e resolveType￨6￨e (￨6￨e (￨6￨e (￨6￨e BlockScope￨6￨e )￨6￨e (￨6￨e scope￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c argumentTypes￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j argHasError￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j }￨4￨l if￨4￨j (￨4￨j argHasError￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e superAccess￨3￨e =￨3￨e scope￨3￨e .￨3￨e enclosingSourceType￨3￨e (￨3￨e )￨3￨e .￨3￨e isCompatibleWith￨3￨e (￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e ;￨3￨e ReferenceBinding￨3￨e allocationType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e binding￨3￨e =￨3￨e scope￨3￨e .￨3￨e getConstructor￨3￨e (￨3￨e allocationType￨3￨e ,￨3￨e argumentTypes￨3￨e ,￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c this￨4￨c .￨4￨c binding￨4￨c .￨4￨c isValidBinding￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j MethodBinding￨4￨e methodBinding￨4￨e =￨4￨e scope￨4￨e .￨4￨e getMethod￨4￨e (￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ,￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e .￨4￨e sourceName￨4￨e (￨4￨e )￨4￨e ,￨4￨e argumentTypes￨4￨e ,￨4￨e this￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j methodBinding￨5￨c .￨5￨c isValidBinding￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e binding￨5￨e =￨5￨e methodBinding￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c this￨6￨c .￨6￨c binding￨6￨c .￨6￨c declaringClass￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e binding￨6￨e .￨6￨e declaringClass￨6￨e =￨6￨e allocationType￨6￨e ;￨6￨e }￨5￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e javadocInvalidConstructor￨5￨e (￨5￨e this￨5￨e ,￨5￨e this￨5￨e .￨5￨e binding￨5￨e ,￨5￨e scope￨5￨e .￨5￨e getDeclarationModifiers￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j isMethodUseDeprecated￨4￨c (￨4￨c this￨4￨c .￨4￨c binding￨4￨c ,￨4￨c scope￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e javadocDeprecatedMethod￨4￨e (￨4￨e this￨4￨e .￨4￨e binding￨4￨e ,￨4￨e this￨4￨e ,￨4￨e scope￨4￨e .￨4￨e getDeclarationModifiers￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e allocationType￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f isSuperAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d OracleDictionary￨1￨d extends￨1￨d DBDictionary￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e SELECT_HINT￨2￨e =￨2￨e "openjpa.hint.OracleSelectHint"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VENDOR_ORACLE￨2￨e =￨2￨e "oracle"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e BEHAVE_OTHER￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e BEHAVE_ORACLE￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e BEHAVE_DATADIRECT31￨2￨e =￨2￨e 2￨2￨e ;￨2￨e private￨2￨e static￨2￨e Blob￨2￨e EMPTY_BLOB￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e static￨2￨e Clob￨2￨e EMPTY_CLOB￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d OracleDictionary￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d boolean￨2￨d useTriggersForAutoAssign￨2￨d =￨2￨d false￨2￨d ;￨2￨d public￨2￨d String￨2￨d autoAssignSequenceName￨2￨d =￨2￨d null￨2￨d ;￨2￨d public￨2￨d boolean￨2￨d openjpa3GeneratedKeyNames￨2￨d =￨2￨d false￨2￨d ;￨2￨d public￨2￨d boolean￨2￨d useSetFormOfUseForUnicode￨2￨d =￨2￨d true￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d _checkedUpdateBug￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d _warnedCharColumn￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d _warnedNcharColumn￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d int￨2￨d _driverBehavior￨2￨d =￨2￨d -￨2￨d 1￨2￨d ;￨2￨d private￨2￨d Method￨2￨d _putBytes￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d Method￨2￨d _putString￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d Method￨2￨d _putChars￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d int￨2￨d defaultBatchLimit￨2￨d =￨2￨d 100￨2￨d ;￨2￨d public￨2￨d OracleDictionary￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f endConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f connectedConfiguration￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cacheDriverBehavior￨2￨f (￨2￨f String￨3￨p driverVendor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f ensureDriverVendor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsLocking￨2￨f (￨2￨f Select￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f SQLBuffer￨2￨f getSelects￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p boolean￨3￨p distinctIdentifiers￨3￨p ,￨3￨p boolean￨3￨p forUpdate￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canOuterJoin￨2￨f (￨2￨f int￨3￨p syntax￨3￨p ,￨3￨p ForeignKey￨3￨p fk￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SQLBuffer￨2￨f toNativeJoin￨2￨f (￨2￨f Join￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f SQLBuffer￨2￨f toSelect￨2￨f (￨2￨f SQLBuffer￨3￨p select￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p ,￨3￨p SQLBuffer￨3￨p tables￨3￨p ,￨3￨p SQLBuffer￨3￨p where￨3￨p ,￨3￨p SQLBuffer￨3￨p group￨3￨p ,￨3￨p SQLBuffer￨3￨p having￨3￨p ,￨3￨p SQLBuffer￨3￨p order￨3￨p ,￨3￨p boolean￨3￨p distinct￨3￨p ,￨3￨p boolean￨3￨p forUpdate￨3￨p ,￨3￨p long￨3￨p start￨3￨p ,￨3￨p long￨3￨p end￨3￨p ,￨3￨p boolean￨3￨p subselect￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f SQLBuffer￨2￨f toSelect￨2￨f (￨2￨f SQLBuffer￨3￨p select￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p ,￨3￨p SQLBuffer￨3￨p tables￨3￨p ,￨3￨p SQLBuffer￨3￨p where￨3￨p ,￨3￨p SQLBuffer￨3￨p group￨3￨p ,￨3￨p SQLBuffer￨3￨p having￨3￨p ,￨3￨p SQLBuffer￨3￨p order￨3￨p ,￨3￨p boolean￨3￨p distinct￨3￨p ,￨3￨p boolean￨3￨p forUpdate￨3￨p ,￨3￨p long￨3￨p start￨3￨p ,￨3￨p long￨3￨p end￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f requiresSubselectForRange￨2￨f (￨2￨f long￨3￨p start￨3￨p ,￨3￨p long￨3￨p end￨3￨p ,￨3￨p boolean￨3￨p distinct￨3￨p ,￨3￨p SQLBuffer￨3￨p order￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSelectOperation￨2￨f (￨2￨f JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setString￨2￨f (￨2￨f PreparedStatement￨2￨f stmnt￨2￨f ,￨2￨f int￨2￨f idx￨2￨f ,￨2￨f String￨2￨f val￨2￨f ,￨2￨f Column￨2￨f col￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setNull￨2￨f (￨2￨f PreparedStatement￨2￨f stmnt￨2￨f ,￨2￨f int￨2￨f idx￨2￨f ,￨2￨f int￨2￨f colType￨2￨f ,￨2￨f Column￨2￨f col￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getClobString￨2￨f (￨2￨f ResultSet￨2￨f rs￨2￨f ,￨2￨f int￨2￨f column￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Timestamp￨2￨f getTimestamp￨2￨f (￨2￨f ResultSet￨2￨f rs￨2￨f ,￨2￨f int￨2￨f column￨2￨f ,￨2￨f Calendar￨2￨f cal￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getObject￨2￨f (￨2￨f ResultSet￨2￨f rs￨2￨f ,￨2￨f int￨2￨f column￨2￨f ,￨2￨f Map￨2￨f map￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Object￨2￨f convertFromOracleType￨2￨f (￨2￨f Object￨2￨f obj￨2￨f ,￨2￨f String￨2￨f convertMethod￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Column￨2￨f [￨2￨f ]￨2￨f getColumns￨2￨f (￨2￨f DatabaseMetaData￨2￨f meta￨2￨f ,￨2￨f String￨2￨f catalog￨2￨f ,￨2￨f String￨2￨f schemaName￨2￨f ,￨2￨f String￨2￨f tableName￨2￨f ,￨2￨f String￨2￨f columnName￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PrimaryKey￨2￨f [￨2￨f ]￨2￨f getPrimaryKeys￨2￨f (￨2￨f DatabaseMetaData￨2￨f meta￨2￨f ,￨2￨f String￨2￨f catalog￨2￨f ,￨2￨f String￨2￨f schemaName￨2￨f ,￨2￨f String￨2￨f tableName￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Index￨2￨f [￨2￨f ]￨2￨f getIndexInfo￨2￨f (￨2￨f DatabaseMetaData￨2￨f meta￨2￨f ,￨2￨f String￨2￨f catalog￨2￨f ,￨2￨f String￨2￨f schemaName￨2￨f ,￨2￨f String￨2￨f tableName￨2￨f ,￨2￨f boolean￨2￨f unique￨2￨f ,￨2￨f boolean￨2￨f approx￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ForeignKey￨2￨f [￨2￨f ]￨2￨f getImportedKeys￨2￨f (￨2￨f DatabaseMetaData￨2￨f meta￨2￨f ,￨2￨f String￨2￨f catalog￨2￨f ,￨2￨f String￨2￨f schemaName￨2￨f ,￨2￨f String￨2￨f tableName￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f ,￨2￨f boolean￨2￨f partialKeys￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCreateTableSQL￨2￨f (￨2￨f Table￨3￨p table￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCreateSequenceSQL￨2￨f (￨2￨f Sequence￨3￨p seq￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f getJDBCType￨2￨f (￨2￨f int￨3￨p metaTypeCode￨3￨p ,￨3￨p boolean￨3￨p lob￨3￨p ,￨3￨p int￨3￨p precis￨3￨p ,￨3￨p int￨3￨p scale￨3￨p ,￨3￨p boolean￨3￨p xml￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b getJDBCType￨3￨b (￨3￨b metaTypeCode￨3￨b ,￨3￨b (￨3￨b lob￨3￨b &&￨3￨b (￨3￨b !￨3￨b xml￨3￨b )￨3￨b )￨3￨b ,￨3￨b precis￨3￨b ,￨3￨b scale￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f String￨2￨f getSequencesSQL￨2￨f (￨2￨f String￨3￨p schemaName￨3￨p ,￨3￨p String￨3￨p sequenceName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSystemSequence￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p schema￨3￨p ,￨3￨p boolean￨3￨p targetSchema￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getGeneratedKey￨2￨f (￨2￨f Column￨2￨f col￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getGeneratedKeyTriggerName￨2￨f (￨2￨f Column￨3￨p col￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getOpenJPA3GeneratedKeySequenceName￨2￨f (￨2￨f Column￨3￨p col￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getOpenJPA3GeneratedKeyTriggerName￨2￨f (￨2￨f Column￨3￨p col￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f putBytes￨2￨f (￨2￨f Blob￨2￨f blob￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f data￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f putString￨2￨f (￨2￨f Clob￨2￨f clob￨2￨f ,￨2￨f String￨2￨f data￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f putChars￨2￨f (￨2￨f Clob￨2￨f clob￨2￨f ,￨2￨f char￨2￨f [￨2￨f ]￨2￨f data￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f invokePutLobMethod￨2￨f (￨2￨f Method￨2￨f method￨2￨f ,￨2￨f Object￨2￨f target￨2￨f ,￨2￨f Object￨2￨f data￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Clob￨2￨f getEmptyClob￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Blob￨2￨f getEmptyBlob￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f isOraclePreparedStatement￨2￨f (￨2￨f Statement￨3￨p stmnt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendXmlComparison￨2￨f (￨2￨f SQLBuffer￨3￨p buf￨3￨p ,￨3￨p String￨3￨p op￨3￨p ,￨3￨p FilterValue￨3￨p lhs￨3￨p ,￨3￨p FilterValue￨3￨p rhs￨3￨p ,￨3￨p boolean￨3￨p lhsxml￨3￨p ,￨3￨p boolean￨3￨p rhsxml￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f appendXmlComparison1￨2￨f (￨2￨f SQLBuffer￨3￨p buf￨3￨p ,￨3￨p String￨3￨p op￨3￨p ,￨3￨p FilterValue￨3￨p lhs￨3￨p ,￨3￨p FilterValue￨3￨p rhs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f appendXmlComparison2￨2￨f (￨2￨f SQLBuffer￨3￨p buf￨3￨p ,￨3￨p String￨3￨p op￨3￨p ,￨3￨p FilterValue￨3￨p lhs￨3￨p ,￨3￨p FilterValue￨3￨p rhs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f appendXmlExtractValue￨2￨f (￨2￨f SQLBuffer￨3￨p buf￨3￨p ,￨3￨p FilterValue￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f insertClobForStreamingLoad￨2￨f (￨2￨f Row￨2￨f row￨2￨f ,￨2￨f Column￨2￨f col￨2￨f ,￨2￨f Object￨2￨f ob￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getBatchUpdateCount￨2￨f (￨2￨f PreparedStatement￨2￨f ps￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Boolean￨2￨f matchErrorState￨2￨f (￨2￨f int￨3￨p subtype￨3￨p ,￨3￨p Set￨3￨p <￨3￨p String￨3￨p >￨3￨p errorStates￨3￨p ,￨3￨p SQLException￨3￨p ex￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f insertBlobForStreamingLoad￨2￨f (￨2￨f Row￨2￨f row￨2￨f ,￨2￨f Column￨2￨f col￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f Object￨2￨f ob￨2￨f ,￨2￨f Select￨2￨f sel￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ModClusterEnableContext￨1￨d implements￨1￨d OperationStepHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d static￨2￨e final￨2￨e ModClusterEnableContext￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ModClusterEnableContext￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b context￨3￨b .￨3￨b getProcessType￨3￨b (￨3￨b )￨3￨b .￨3￨b isServer￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f OperationStepHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f execute￨4￨f (￨4￨f OperationContext￨4￨f context￨4￨f ,￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f ServiceController￨5￨e <￨5￨e ?￨5￨e >￨5￨e controller￨5￨e =￨5￨e context￨5￨e .￨5￨e getServiceRegistry￨5￨e (￨5￨e false￨5￨e )￨5￨e .￨5￨e getService￨5￨e (￨5￨e NAME￨5￨e )￨5￨e ;￨5￨e ModCluster￨5￨e modcluster￨5￨e =￨5￨e (￨5￨e (￨5￨e ModCluster￨5￨e )￨5￨e (￨5￨e controller￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e ModClusterLogger￨5￨e .￨5￨e ROOT_LOGGER￨5￨e .￨5￨e debugf￨5￨e (￨5￨e "enable-context:<seq2seq4repair_space>%s"￨5￨e ,￨5￨e operation￨5￨e )￨5￨e ;￨5￨e ContextHost￨5￨e contexthost￨5￨e =￨5￨e new￨5￨e ContextHost￨5￨e (￨5￨e operation￨5￨e )￨5￨e ;￨5￨e modcluster￨5￨e .￨5￨e enableContext￨5￨e (￨5￨e contexthost￨5￨e .￨5￨e webhost￨5￨e ,￨5￨e contexthost￨5￨e .￨5￨e webcontext￨5￨e )￨5￨e ;￨5￨e context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e }￨3￨e context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
class￨1￨d ASTSyntaxErrorPropagator￨1￨d extends￨1￨d ASTVisitor￨1￨d {￨1￨d private￨2￨e IProblem￨2￨e [￨2￨e ]￨2￨e problems￨2￨e ;￨2￨e ASTSyntaxErrorPropagator￨2￨f (￨2￨f IProblem￨3￨p [￨3￨p ]￨3￨p problems￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkAndTagAsMalformed￨2￨f (￨2￨f ASTNode￨3￨p node￨3￨p )￨2￨f {￨2￨f boolean￨3￨e tagWithErrors￨3￨e =￨3￨e false￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c max￨4￨c =￨4￨c this￨4￨c .￨4￨c problems￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c max￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l IProblem￨4￨e problem￨4￨e =￨4￨e this￨4￨e .￨4￨e problems￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e switch￨4￨s (￨4￨s problem￨4￨c .￨4￨c getID￨4￨c (￨4￨c )￨4￨c )￨4￨s {￨4￨s case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorOnKeywordNoSuggestion￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorOnKeyword￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingError￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorNoSuggestion￨5￨c :￨5￨c break￨6￨e ;￨6￨e case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInsertTokenBefore￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInsertTokenAfter￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorDeleteToken￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorDeleteTokens￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorMergeTokens￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInvalidToken￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorMisplacedConstruct￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorReplaceTokens￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorNoSuggestionForTokens￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorUnexpectedEOF￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInsertToComplete￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInsertToCompleteScope￨5￨c :￨5￨c case￨5￨c IProblem￨5￨c .￨5￨c ParsingErrorInsertToCompletePhrase￨5￨c :￨5￨c break￨6￨e ;￨6￨e default￨5￨c :￨5￨c continue￨6￨e search￨6￨e ;￨6￨e }￨4￨s int￨4￨e position￨4￨e =￨4￨e problem￨4￨e .￨4￨e getSourceStart￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e start￨4￨e =￨4￨e node￨4￨e .￨4￨e getStartPosition￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e end￨4￨e =￨4￨e start￨4￨e +￨4￨e (￨4￨e node￨4￨e .￨4￨e getLength￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c start￨5￨c <=￨5￨c position￨5￨c )￨5￨c &&￨5￨c (￨5￨c position￨5￨c <=￨5￨c end￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b node￨5￨b .￨5￨b setFlags￨5￨b (￨5￨b ASTNode￨5￨b .￨5￨b MALFORMED￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b ASTNode￨5￨e currentNode￨5￨e =￨5￨e node￨5￨e .￨5￨e getParent￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l currentNode￨6￨c !=￨6￨c null￨6￨c )￨5￨l {￨5￨l currentNode￨6￨e .￨6￨e setFlags￨6￨e (￨6￨e (￨6￨e (￨6￨e currentNode￨6￨e .￨6￨e getFlags￨6￨e (￨6￨e )￨6￨e )￨6￨e &￨6￨e (￨6￨e ~￨6￨e (￨6￨e ASTNode￨6￨e .￨6￨e MALFORMED￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e currentNode￨6￨e =￨6￨e currentNode￨6￨e .￨6￨e getParent￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l tagWithErrors￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e tagWithErrors￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f FieldDeclaration￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f MethodDeclaration￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f PackageDeclaration￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f ImportDeclaration￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f CompilationUnit￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f Initializer￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestBufferedIndexInput￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨f static￨2￨f void￨2￨f writeBytes￨2￨f (￨2￨f File￨2￨f aFile￨2￨f ,￨2￨f long￨2￨f size￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e long￨2￨e TEST_FILE_LENGTH￨2￨e =￨2￨e 1024￨2￨e *￨2￨e 1024￨2￨e ;￨2￨e public￨2￨f void￨2￨f testReadByte￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReadBytes￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f runReadBytesAndClose￨2￨f (￨2￨f IndexInput￨2￨f input￨2￨f ,￨2￨f int￨2￨f bufferSize￨2￨f ,￨2￨f Random￨2￨f r￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f runReadBytes￨2￨f (￨2￨f IndexInput￨2￨f input￨2￨f ,￨2￨f int￨2￨f bufferSize￨2￨f ,￨2￨f Random￨2￨f r￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e byte￨2￨e [￨2￨e ]￨2￨e buffer￨2￨e =￨2￨e new￨2￨e byte￨2￨e [￨2￨e 10￨2￨e ]￨2￨e ;￨2￨e private￨2￨f void￨2￨f checkReadBytes￨2￨f (￨2￨f IndexInput￨2￨f input￨2￨f ,￨2￨f int￨2￨f size￨2￨f ,￨2￨f int￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testEOF￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f byte￨2￨f byten￨2￨f (￨2￨f long￨3￨p n￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d MyBufferedIndexInput￨2￨d extends￨2￨d BufferedIndexInput￨2￨d {￨2￨d private￨3￨e long￨3￨e pos￨3￨e ;￨3￨e private￨3￨e long￨3￨e len￨3￨e ;￨3￨e public￨3￨f MyBufferedIndexInput￨3￨f (￨3￨f long￨4￨p len￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f MyBufferedIndexInput￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f readInternal￨3￨f (￨3￨f byte￨3￨f [￨3￨f ]￨3￨f b￨3￨f ,￨3￨f int￨3￨f offset￨3￨f ,￨3￨f int￨3￨f length￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f seekInternal￨3￨f (￨3￨f long￨3￨f pos￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f close￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f length￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f testSetBufferSize￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f File￨3￨e indexDir￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e System￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "tempDir"￨3￨e )￨3￨e ,￨3￨e "testSetBufferSize"￨3￨e )￨3￨e ;￨3￨e TestBufferedIndexInput￨3￨e .￨3￨e MockFSDirectory￨3￨e dir￨3￨e =￨3￨e new￨3￨e TestBufferedIndexInput￨3￨e .￨3￨e MockFSDirectory￨3￨e (￨3￨e indexDir￨3￨e ,￨3￨e newRandom￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f IndexWriter￨4￨e writer￨4￨e =￨4￨e new￨4￨e IndexWriter￨4￨e (￨4￨e dir￨4￨e ,￨4￨e new￨4￨e WhitespaceAnalyzer￨4￨e (￨4￨e )￨4￨e ,￨4￨e true￨4￨e ,￨4￨e MaxFieldLength￨4￨e .￨4￨e LIMITED￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e setUseCompoundFile￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c 37￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l Document￨5￨e doc￨5￨e =￨5￨e new￨5￨e Document￨5￨e (￨5￨e )￨5￨e ;￨5￨e doc￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e lucene￨5￨e .￨5￨e document￨5￨e .￨5￨e Field￨5￨e (￨5￨e "content"￨5￨e ,￨5￨e (￨5￨e "aaa<seq2seq4repair_space>bbb<seq2seq4repair_space>ccc<seq2seq4repair_space>ddd"￨5￨e +￨5￨e i￨5￨e )￨5￨e ,￨5￨e Store￨5￨e .￨5￨e YES￨5￨e ,￨5￨e Index￨5￨e .￨5￨e ANALYZED￨5￨e )￨5￨e )￨5￨e ;￨5￨e doc￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e lucene￨5￨e .￨5￨e document￨5￨e .￨5￨e Field￨5￨e (￨5￨e "id"￨5￨e ,￨5￨e (￨5￨e ""￨5￨e +￨5￨e i￨5￨e )￨5￨e ,￨5￨e Store￨5￨e .￨5￨e YES￨5￨e ,￨5￨e Index￨5￨e .￨5￨e ANALYZED￨5￨e )￨5￨e )￨5￨e ;￨5￨e writer￨5￨e .￨5￨e addDocument￨5￨e (￨5￨e doc￨5￨e )￨5￨e ;￨5￨e }￨4￨l writer￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e dir￨4￨e .￨4￨e allIndexInputs￨4￨e .￨4￨e clear￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b IndexReader￨4￨b reader￨4￨b =￨4￨b IndexReader￨4￨b .￨4￨b open￨4￨b (￨4￨b dir￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Term￨4￨e aaa￨4￨e =￨4￨e new￨4￨e Term￨4￨e (￨4￨e "content"￨4￨e ,￨4￨e "aaa"￨4￨e )￨4￨e ;￨4￨e Term￨4￨e bbb￨4￨e =￨4￨e new￨4￨e Term￨4￨e (￨4￨e "content"￨4￨e ,￨4￨e "bbb"￨4￨e )￨4￨e ;￨4￨e Term￨4￨e ccc￨4￨e =￨4￨e new￨4￨e Term￨4￨e (￨4￨e "content"￨4￨e ,￨4￨e "ccc"￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e 37￨4￨e ,￨4￨e reader￨4￨e .￨4￨e docFreq￨4￨e (￨4￨e ccc￨4￨e )￨4￨e )￨4￨e ;￨4￨e reader￨4￨e .￨4￨e deleteDocument￨4￨e (￨4￨e 0￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e 37￨4￨e ,￨4￨e reader￨4￨e .￨4￨e docFreq￨4￨e (￨4￨e aaa￨4￨e )￨4￨e )￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e reader￨4￨e .￨4￨e deleteDocument￨4￨e (￨4￨e 4￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e reader￨4￨e .￨4￨e docFreq￨4￨e (￨4￨e bbb￨4￨e )￨4￨e ,￨4￨e 37￨4￨e )￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e IndexSearcher￨4￨e searcher￨4￨e =￨4￨e new￨4￨e IndexSearcher￨4￨e (￨4￨e reader￨4￨e )￨4￨e ;￨4￨e ScoreDoc￨4￨e [￨4￨e ]￨4￨e hits￨4￨e =￨4￨e searcher￨4￨e .￨4￨e search￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e search￨4￨e .￨4￨e TermQuery￨4￨e (￨4￨e bbb￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e 1000￨4￨e )￨4￨e .￨4￨e scoreDocs￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e 35￨4￨e ,￨4￨e hits￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e hits￨4￨e =￨4￨e searcher￨4￨e .￨4￨e search￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e search￨4￨e .￨4￨e TermQuery￨4￨e (￨4￨e new￨4￨e Term￨4￨e (￨4￨e "id"￨4￨e ,￨4￨e "33"￨4￨e )￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e 1000￨4￨e )￨4￨e .￨4￨e scoreDocs￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e 1￨4￨e ,￨4￨e hits￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e hits￨4￨e =￨4￨e searcher￨4￨e .￨4￨e search￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e search￨4￨e .￨4￨e TermQuery￨4￨e (￨4￨e aaa￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e 1000￨4￨e )￨4￨e .￨4￨e scoreDocs￨4￨e ;￨4￨e dir￨4￨e .￨4￨e tweakBufferSizes￨4￨e (￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e 35￨4￨e ,￨4￨e hits￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e searcher￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e reader￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f _TestUtil￨4￨e .￨4￨e rmDir￨4￨e (￨4￨e indexDir￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d MockFSDirectory￨2￨d extends￨2￨d Directory￨2￨d {￨2￨d List￨3￨e allIndexInputs￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e )￨3￨e ;￨3￨e Random￨3￨e rand￨3￨e ;￨3￨e private￨3￨e Directory￨3￨e dir￨3￨e ;￨3￨e public￨3￨f MockFSDirectory￨3￨f (￨3￨f File￨3￨f path￨3￨f ,￨3￨f Random￨3￨f rand￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f IndexInput￨3￨f openInput￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f tweakBufferSizes￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f IndexInput￨3￨f openInput￨3￨f (￨3￨f String￨3￨f name￨3￨f ,￨3￨f int￨3￨f bufferSize￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f IndexOutput￨3￨f createOutput￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f close￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f deleteFile￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f touchFile￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f fileModified￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f fileExists￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f [￨3￨f ]￨3￨f list￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f [￨3￨f ]￨3￨f listAll￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f fileLength￨3￨f (￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f renameFile￨3￨f (￨3￨f String￨3￨f from￨3￨f ,￨3￨f String￨3￨f to￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TestCustomSearcherSort￨1￨d extends￨1￨d LuceneTestCase￨1￨d implements￨1￨d Serializable￨1￨d {￨1￨d private￨2￨e Directory￨2￨e index￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Query￨2￨e query￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INDEX_SIZE￨2￨e =￨2￨e 2000￨2￨e ;￨2￨e public￨2￨f TestCustomSearcherSort￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p argv￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Directory￨2￨f getIndex￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f RAMDirectory￨3￨e indexStore￨3￨e =￨3￨e new￨3￨e RAMDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b IndexWriter￨3￨b writer￨3￨b =￨3￨b new￨3￨b IndexWriter￨3￨b (￨3￨b indexStore￨3￨b ,￨3￨b new￨3￨b org￨3￨b .￨3￨b apache￨3￨b .￨3￨b lucene￨3￨b .￨3￨b analysis￨3￨b .￨3￨b standard￨3￨b .￨3￨b StandardAnalyzer￨3￨b (￨3￨b Version￨3￨b .￨3￨b LUCENE_CURRENT￨3￨b )￨3￨b ,￨3￨b true￨3￨b ,￨3￨b MaxFieldLength￨3￨b .￨3￨b LIMITED￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b TestCustomSearcherSort￨3￨e .￨3￨e RandomGen￨3￨e random￨3￨e =￨3￨e new￨3￨e TestCustomSearcherSort￨3￨e .￨3￨e RandomGen￨3￨e (￨3￨e newRandom￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c TestCustomSearcherSort￨4￨c .￨4￨c INDEX_SIZE￨4￨c )￨4￨c ;￨4￨c ++￨4￨c i￨4￨c )￨3￨l {￨3￨l Document￨4￨e doc￨4￨e =￨4￨e new￨4￨e Document￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c i￨5￨c %￨5￨c 5￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j doc￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e lucene￨5￨e .￨5￨e document￨5￨e .￨5￨e Field￨5￨e (￨5￨e "publicationDate_"￨5￨e ,￨5￨e random￨5￨e .￨5￨e getLuceneDate￨5￨e (￨5￨e )￨5￨e ,￨5￨e Store￨5￨e .￨5￨e YES￨5￨e ,￨5￨e Index￨5￨e .￨5￨e NOT_ANALYZED￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c i￨5￨c %￨5￨c 7￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j doc￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e lucene￨5￨e .￨5￨e document￨5￨e .￨5￨e Field￨5￨e (￨5￨e "content"￨5￨e ,￨5￨e "test"￨5￨e ,￨5￨e Store￨5￨e .￨5￨e YES￨5￨e ,￨5￨e Index￨5￨e .￨5￨e ANALYZED￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j doc￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e document￨4￨e .￨4￨e Field￨4￨e (￨4￨e "mandant"￨4￨e ,￨4￨e Integer￨4￨e .￨4￨e toString￨4￨e (￨4￨e (￨4￨e i￨4￨e %￨4￨e 3￨4￨e )￨4￨e )￨4￨e ,￨4￨e Store￨4￨e .￨4￨e YES￨4￨e ,￨4￨e Index￨4￨e .￨4￨e NOT_ANALYZED￨4￨e )￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e addDocument￨4￨e (￨4￨e doc￨4￨e )￨4￨e ;￨4￨e }￨3￨l writer￨3￨e .￨3￨e optimize￨3￨e (￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e indexStore￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldSortCustomSearcher￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldSortSingleSearcher￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldSortMultiCustomSearcher￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f matchHits￨2￨f (￨2￨f Searcher￨2￨f searcher￨2￨f ,￨2￨f Sort￨2￨f sort￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkHits￨2￨f (￨2￨f ScoreDoc￨3￨p [￨3￨p ]￨3￨p hits￨3￨p ,￨3￨p String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f log￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d class￨2￨d CustomSearcher￨2￨d extends￨2￨d IndexSearcher￨2￨d {￨2￨d private￨3￨e int￨3￨e switcher￨3￨e ;￨3￨e public￨3￨f CustomSearcher￨3￨f (￨3￨f Directory￨3￨f directory￨3￨f ,￨3￨f int￨3￨f switcher￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f CustomSearcher￨3￨f (￨3￨f IndexReader￨4￨p r￨4￨p ,￨4￨p int￨4￨p switcher￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f TopFieldDocs￨3￨f search￨3￨f (￨3￨f Query￨3￨f query￨3￨f ,￨3￨f Filter￨3￨f filter￨3￨f ,￨3￨f int￨3￨f nDocs￨3￨f ,￨3￨f Sort￨3￨f sort￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f TopDocs￨3￨f search￨3￨f (￨3￨f Query￨3￨f query￨3￨f ,￨3￨f Filter￨3￨f filter￨3￨f ,￨3￨f int￨3￨f nDocs￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d RandomGen￨2￨d {￨2￨d RandomGen￨3￨f (￨3￨f Random￨4￨p random￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨e Random￨3￨e random￨3￨e ;￨3￨e private￨3￨e Calendar￨3￨e base￨3￨e =￨3￨e new￨3￨e GregorianCalendar￨3￨e (￨3￨e 1980￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e 1￨3￨e )￨3￨e ;￨3￨e private￨3￨f String￨3￨f getLuceneDate￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d BasicSearchEngine￨1￨d {￨1￨d private￨2￨e Parser￨2￨e parser￨2￨e ;￨2￨e private￨2￨e CompilerOptions￨2￨e compilerOptions￨2￨e ;￨2￨e private￨2￨e ICompilationUnit￨2￨e [￨2￨e ]￨2￨e workingCopies￨2￨e ;￨2￨e private￨2￨e WorkingCopyOwner￨2￨e workingCopyOwner￨2￨e ;￨2￨e public￨2￨e static￨2￨e boolean￨2￨e VERBOSE￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f BasicSearchEngine￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BasicSearchEngine￨2￨f (￨2￨f ICompilationUnit￨3￨p [￨3￨p ]￨3￨p workingCopies￨3￨p )￨2￨f {￨2￨f }￨2￨f char￨2￨f convertTypeKind￨2￨f (￨2￨f int￨3￨p typeDeclarationKind￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BasicSearchEngine￨2￨f (￨2￨f WorkingCopyOwner￨3￨p workingCopyOwner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createHierarchyScope￨2￨f (￨2￨f IType￨2￨f type￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createHierarchyScope￨2￨f (￨2￨f IType￨2￨f type￨2￨f ,￨2￨f WorkingCopyOwner￨2￨f owner￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createJavaSearchScope￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elements￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createJavaSearchScope￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elements￨3￨p ,￨3￨p boolean￨3￨p includeReferencedProjects￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createJavaSearchScope￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elements￨3￨p ,￨3￨p int￨3￨p includeMask￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IJavaSearchScope￨2￨f createWorkspaceScope￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b JavaWorkspaceScope￨3￨b .￨3￨b createScope￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f findMatches￨2￨f (￨2￨f SearchPattern￨2￨f pattern￨2￨f ,￨2￨f SearchParticipant￨2￨f [￨2￨f ]￨2￨f participants￨2￨f ,￨2￨f IJavaSearchScope￨2￨f scope￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f SearchParticipant￨2￨f getDefaultSearchParticipant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Parser￨2￨f getParser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IResource￨2￨f getResource￨2￨f (￨2￨f IJavaElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f getWorkingCopies￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f getWorkingCopies￨2￨f (￨2￨f IJavaElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f match￨2￨f (￨2￨f char￨3￨p patternTypeSuffix￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f match￨2￨f (￨2￨f char￨3￨p patternTypeSuffix￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p patternPkg￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p patternTypeName￨3￨p ,￨3￨p int￨3￨p matchRule￨3￨p ,￨3￨p int￨3￨p typeKind￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p pkg￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p typeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f search￨2￨f (￨2￨f SearchPattern￨2￨f pattern￨2￨f ,￨2￨f SearchParticipant￨2￨f [￨2￨f ]￨2￨f participants￨2￨f ,￨2￨f IJavaSearchScope￨2￨f scope￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchAllTypeNames￨2￨f (￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f packageName￨2￨f ,￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f typeName￨2￨f ,￨2￨f final￨2￨f int￨2￨f matchRule￨2￨f ,￨2￨f int￨2￨f searchFor￨2￨f ,￨2￨f IJavaSearchScope￨2￨f scope￨2￨f ,￨2￨f final￨2￨f IRestrictedAccessTypeRequestor￨2￨f nameRequestor￨2￨f ,￨2￨f int￨2￨f waitingPolicy￨2￨f ,￨2￨f IProgressMonitor￨2￨f progressMonitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchAllTypeNames￨2￨f (￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f qualifications￨2￨f ,￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f typeNames￨2￨f ,￨2￨f final￨2￨f int￨2￨f matchRule￨2￨f ,￨2￨f int￨2￨f searchFor￨2￨f ,￨2￨f IJavaSearchScope￨2￨f scope￨2￨f ,￨2￨f final￨2￨f IRestrictedAccessTypeRequestor￨2￨f nameRequestor￨2￨f ,￨2￨f int￨2￨f waitingPolicy￨2￨f ,￨2￨f IProgressMonitor￨2￨f progressMonitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchDeclarations￨2￨f (￨2￨f IJavaElement￨2￨f enclosingElement￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f SearchPattern￨2￨f pattern￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchDeclarationsOfAccessedFields￨2￨f (￨2￨f IJavaElement￨2￨f enclosingElement￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchDeclarationsOfReferencedTypes￨2￨f (￨2￨f IJavaElement￨2￨f enclosingElement￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f searchDeclarationsOfSentMessages￨2￨f (￨2￨f IJavaElement￨2￨f enclosingElement￨2￨f ,￨2￨f SearchRequestor￨2￨f requestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d TypeBinding￨1￨d implements￨1￨d ITypeBinding￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e IMethodBinding￨2￨e [￨2￨e ]￨2￨e NO_METHOD_BINDINGS￨2￨e =￨2￨e new￨2￨e IMethodBinding￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e NO_NAME￨2￨e =￨2￨e ""￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e ITypeBinding￨2￨e [￨2￨e ]￨2￨e NO_TYPE_BINDINGS￨2￨e =￨2￨e new￨2￨e ITypeBinding￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e IVariableBinding￨2￨e [￨2￨e ]￨2￨e NO_VARIABLE_BINDINGS￨2￨e =￨2￨e new￨2￨e IVariableBinding￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e VALID_MODIFIERS￨2￨e =￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PUBLIC￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PROTECTED￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PRIVATE￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e ABSTRACT￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STATIC￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e FINAL￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STRICTFP￨2￨e )￨2￨e ;￨2￨e private￨2￨e org￨2￨e .￨2￨e eclipse￨2￨e .￨2￨e jdt￨2￨e .￨2￨e internal￨2￨e .￨2￨e compiler￨2￨e .￨2￨e lookup￨2￨e .￨2￨e TypeBinding￨2￨e binding￨2￨e ;￨2￨e private￨2￨e String￨2￨e key￨2￨e ;￨2￨e private￨2￨e BindingResolver￨2￨e resolver￨2￨e ;￨2￨e public￨2￨f TypeBinding￨2￨f (￨2￨f BindingResolver￨3￨p resolver￨3￨p ,￨3￨p org￨3￨p .￨3￨p eclipse￨3￨p .￨3￨p jdt￨3￨p .￨3￨p internal￨3￨p .￨3￨p compiler￨3￨p .￨3￨p lookup￨3￨p .￨3￨p TypeBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getBinaryName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getBound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IClassFile￨2￨f getClassFile￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ICompilationUnit￨2￨f getCompilationUnit￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IVariableBinding￨2￨f [￨2￨f ]￨2￨f getDeclaredFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMethodBinding￨2￨f [￨2￨f ]￨2￨f getDeclaredMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getDeclaredModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f [￨2￨f ]￨2￨f getDeclaredTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMethodBinding￨2￨f getDeclaringMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getDeclaringClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getDimensions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getElementType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getTypeDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getErasure￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f [￨2￨f ]￨2￨f getInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getJavaElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JavaElement￨2￨f getUnresolvedJavaElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getKey￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getKind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPackageBinding￨2￨f getPackage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IPackageFragment￨2￨f getPackageFragment￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fileName￨3￨p ,￨3￨p int￨3￨p lastSlash￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getQualifiedName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getSuperclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f [￨2￨f ]￨2￨f getTypeArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f [￨2￨f ]￨2￨f getTypeBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f [￨2￨f ]￨2￨f getTypeParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f getWildcard￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isGenericType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAnnotation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAnonymous￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAssignmentCompatible￨2￨f (￨2￨f ITypeBinding￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCapture￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCastCompatible￨2￨f (￨2￨f ITypeBinding￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDeprecated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEnum￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEqualTo￨2￨f (￨2￨f IBinding￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFromSource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInterface￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b this￨3￨b .￨3￨b binding￨3￨b .￨3￨b isInterface￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f boolean￨2￨f isLocal￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMember￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNested￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNullType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isParameterizedType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPrimitive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRawType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSubTypeCompatible￨2￨f (￨2￨f ITypeBinding￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSynthetic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTopLevel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTypeVariable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isUpperbound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isWildcardType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f shouldBeRemoved￨2￨f (￨2￨f MethodBinding￨3￨p methodBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestPlan￨1￨d extends￨1￨d AbstractTestElement￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d TestListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 233L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e FUNCTIONAL_MODE￨2￨e =￨2￨e "TestPlan.functional_mode"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e USER_DEFINED_VARIABLES￨2￨e =￨2￨e "TestPlan.user_defined_variables"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e SERIALIZE_THREADGROUPS￨2￨e =￨2￨e "TestPlan.serialize_threadgroups"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CLASSPATHS￨2￨e =￨2￨e "TestPlan.user_define_classpath"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CLASSPATH_SEPARATOR￨2￨e =￨2￨e ","￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e BASEDIR￨2￨e =￨2￨e "basedir"￨2￨e ;￨2￨e private￨2￨e transient￨2￨e List￨2￨e <￨2￨e ThreadGroup￨2￨e >￨2￨e threadGroups￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e <￨2￨e ThreadGroup￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e volatile￨2￨e boolean￨2￨e functionalMode￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f TestPlan￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestPlan￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Object￨2￨f readResolve￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f prepareForPreCompile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFunctionalMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUserDefinedVariables￨2￨f (￨2￨f Arguments￨3￨p vars￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JMeterProperty￨2￨f getUserDefinedVariablesAsProperty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getBasedir￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBasedir￨2￨f (￨2￨f String￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Arguments￨2￨f getArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f String￨2￨f >￨2￨f getUserDefinedVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Arguments￨2￨f getVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFunctionalMode￨2￨f (￨2￨f boolean￨3￨p funcMode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f getFunctionalMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSerialized￨2￨f (￨2￨f boolean￨3￨p serializeTGs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTestPlanClasspath￨2￨f (￨2￨f String￨3￨p text￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTestPlanClasspathArray￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p text￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b StringBuffer￨3￨b cat￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l int￨4￨c idx￨4￨c =￨4￨c 0￨4￨c ;￨4￨c idx￨4￨c <￨4￨c (￨4￨c text￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c idx￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j idx￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j cat￨5￨e .￨5￨e append￨5￨e (￨5￨e TestPlan￨5￨e .￨5￨e CLASSPATH_SEPARATOR￨5￨e )￨5￨e ;￨5￨e }￨4￨j cat￨4￨e .￨4￨e append￨4￨e (￨4￨e text￨4￨e [￨4￨e idx￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l this￨3￨e .￨3￨e setTestPlanClasspath￨3￨e (￨3￨e cat￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getTestPlanClasspathArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTestPlanClasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSerialized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addParameter￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f addTestElement￨2￨f (￨2￨f TestElement￨3￨p tg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addThreadGroup￨2￨f (￨2￨f ThreadGroup￨3￨p group￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testEnded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testEnded￨2￨f (￨2￨f String￨3￨p host￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testIterationStart￨2￨f (￨2￨f LoopIterationEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStarted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStarted￨2￨f (￨2￨f String￨3￨p host￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AboutFeaturesDialog￨1￨d extends￨1￨d ProductInfoDialog￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e TABLE_HEIGHT￨2￨e =￨2￨e 150￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INFO_HEIGHT￨2￨e =￨2￨e 100￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MORE_ID￨2￨e =￨2￨e (￨2￨e IDialogConstants￨2￨e .￨2￨e CLIENT_ID￨2￨e )￨2￨e +￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e PLUGINS_ID￨2￨e =￨2￨e (￨2￨e IDialogConstants￨2￨e .￨2￨e CLIENT_ID￨2￨e )￨2￨e +￨2￨e 2￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e COLUMNS_ID￨2￨e =￨2￨e (￨2￨e IDialogConstants￨2￨e .￨2￨e CLIENT_ID￨2￨e )￨2￨e +￨2￨e 3￨2￨e ;￨2￨e private￨2￨e Table￨2￨e table￨2￨e ;￨2￨e private￨2￨e Label￨2￨e imageLabel￨2￨e ;￨2￨e private￨2￨e StyledText￨2￨e text￨2￨e ;￨2￨e private￨2￨e Composite￨2￨e infoArea￨2￨e ;￨2￨e private￨2￨e Map￨2￨e cachedImages￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f String￨2￨f [￨2￨f ]￨2￨f columnTitles￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e String￨2￨e productName￨2￨e ;￨2￨e private￨2￨e AboutBundleGroupData￨2￨e [￨2￨e ]￨2￨e bundleGroupInfos￨2￨e ;￨2￨e private￨2￨e int￨2￨e lastColumnChosen￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e reverseSort￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e AboutBundleGroupData￨2￨e lastSelection￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e moreButton￨2￨e ;￨2￨e private￨2￨e Button￨2￨e pluginsButton￨2￨e ;￨2￨e private￨2￨e static￨2￨e Map￨2￨e featuresMap￨2￨e ;￨2￨e public￨2￨f AboutFeaturesDialog￨2￨f (￨2￨f Shell￨3￨p parentShell￨3￨p ,￨3￨p String￨3￨p productName￨3￨p ,￨3￨p AboutBundleGroupData￨3￨p [￨3￨p ]￨3￨p bundleGroupInfos￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f handleMoreInfoPressed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f handlePluginInfoPressed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f buttonPressed￨2￨f (￨2￨f int￨3￨p buttonId￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f handleColumnsPressed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f configureShell￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createButtonsForButtonBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createDialogArea￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createInfoArea￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f Font￨3￨e font￨3￨e =￨3￨e parent￨3￨e .￨3￨e getFont￨3￨e (￨3￨e )￨3￨e ;￨3￨e infoArea￨3￨e =￨3￨e new￨3￨e Composite￨3￨e (￨3￨e parent￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NULL￨3￨e )￨3￨e ;￨3￨e GridData￨3￨e data￨3￨e =￨3￨e new￨3￨e GridData￨3￨e (￨3￨e GridData￨3￨e .￨3￨e FILL￨3￨e ,￨3￨e GridData￨3￨e .￨3￨e FILL￨3￨e ,￨3￨e true￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e data￨3￨e .￨3￨e heightHint￨3￨e =￨3￨e convertVerticalDLUsToPixels￨3￨e (￨3￨e AboutFeaturesDialog￨3￨e .￨3￨e INFO_HEIGHT￨3￨e )￨3￨e ;￨3￨e infoArea￨3￨e .￨3￨e setLayoutData￨3￨e (￨3￨e data￨3￨e )￨3￨e ;￨3￨e GridLayout￨3￨e layout￨3￨e =￨3￨e new￨3￨e GridLayout￨3￨e (￨3￨e )￨3￨e ;￨3￨e layout￨3￨e .￨3￨e numColumns￨3￨e =￨3￨e 2￨3￨e ;￨3￨e infoArea￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e layout￨3￨e )￨3￨e ;￨3￨e imageLabel￨3￨e =￨3￨e new￨3￨e Label￨3￨e (￨3￨e infoArea￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e data￨3￨e =￨3￨e new￨3￨e GridData￨3￨e (￨3￨e GridData￨3￨e .￨3￨e FILL￨3￨e ,￨3￨e GridData￨3￨e .￨3￨e BEGINNING￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e data￨3￨e .￨3￨e widthHint￨3￨e =￨3￨e 32￨3￨e ;￨3￨e data￨3￨e .￨3￨e heightHint￨3￨e =￨3￨e 32￨3￨e ;￨3￨e imageLabel￨3￨e .￨3￨e setLayoutData￨3￨e (￨3￨e data￨3￨e )￨3￨e ;￨3￨e imageLabel￨3￨e .￨3￨e setFont￨3￨e (￨3￨e font￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b text￨3￨b =￨3￨b new￨3￨b StyledText￨3￨b (￨3￨b infoArea￨3￨b ,￨3￨b (￨3￨b (￨3￨b SWT￨3￨b .￨3￨b MULTI￨3￨b )￨3￨b |￨3￨b (￨3￨b SWT￨3￨b .￨3￨b READ_ONLY￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b text￨3￨e .￨3￨e setCaret￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e setFont￨3￨e (￨3￨e parent￨3￨e .￨3￨e getFont￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e data￨3￨e =￨3￨e new￨3￨e GridData￨3￨e (￨3￨e GridData￨3￨e .￨3￨e FILL￨3￨e ,￨3￨e GridData￨3￨e .￨3￨e FILL￨3￨e ,￨3￨e true￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e setLayoutData￨3￨e (￨3￨e data￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e setFont￨3￨e (￨3￨e font￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e setCursor￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e setBackground￨3￨e (￨3￨e infoArea￨3￨e .￨3￨e getBackground￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e addListeners￨3￨e (￨3￨e text￨3￨e )￨3￨e ;￨3￨e TableItem￨3￨e [￨3￨e ]￨3￨e items￨3￨e =￨3￨e table￨3￨e .￨3￨e getSelection￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c items￨4￨c .￨4￨c length￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j updateInfoArea￨4￨e (￨4￨e (￨4￨e (￨4￨e AboutBundleGroupData￨4￨e )￨4￨e (￨4￨e items￨4￨e [￨4￨e 0￨4￨e ]￨4￨e .￨4￨e getData￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f createTable￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateButtons￨2￨f (￨2￨f AboutBundleGroupData￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateInfoArea￨2￨f (￨2￨f AboutBundleGroupData￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInitialSelection￨2￨f (￨2￨f AboutBundleGroupData￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f sort￨2￨f (￨2￨f int￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f refreshTable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f createRow￨2￨f (￨2￨f AboutBundleGroupData￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d UploadForm￨1￨d extends￨1￨d Form￨1￨d {￨1￨d Bytes￨2￨e maxSize￨2￨e =￨2￨e Bytes￨2￨e .￨2￨e MAX￨2￨e ;￨2￨e public￨2￨f UploadForm￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UploadForm￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p IFeedback￨3￨p validationFeedback￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UploadForm￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p IModel￨3￨p model￨3￨p ,￨3￨p IFeedback￨3￨p feedback￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f process￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e HttpServletRequest￨3￨e request￨3￨e =￨3￨e (￨3￨e (￨3￨e wicket￨3￨e .￨3￨e protocol￨3￨e .￨3￨e http￨3￨e .￨3￨e WebRequest￨3￨e )￨3￨e (￨3￨e getRequest￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e getHttpServletRequest￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e MultipartWebRequest￨4￨e multipartWebRequest￨4￨e =￨4￨e new￨4￨e MultipartWebRequest￨4￨e (￨4￨e this￨4￨e ,￨4￨e request￨4￨e )￨4￨e ;￨4￨e getRequestCycle￨4￨e (￨4￨e )￨4￨e .￨4￨e setRequest￨4￨e (￨4￨e multipartWebRequest￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b super￨4￨b .￨4￨b onFormSubmitted￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f FileUploadException￨4￨p e￨4￨p )￨3￨f {￨3￨f final￨4￨e HashMap￨4￨e model￨4￨e =￨4￨e new￨4￨e HashMap￨4￨e (￨4￨e )￨4￨e ;￨4￨e model￨4￨e .￨4￨e put￨4￨e (￨4￨e "exception"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e model￨4￨e .￨4￨e put￨4￨e (￨4￨e "maxSize"￨4￨e ,￨4￨e maxSize￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j e￨5￨c instanceof￨5￨c SizeLimitExceededException￨5￨c )￨4￨j {￨4￨j final￨5￨e String￨5￨e defaultValue￨5￨e =￨5￨e "Upload<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>less<seq2seq4repair_space>than<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e maxSize￨5￨e )￨5￨e ;￨5￨e error￨5￨e (￨5￨e getString￨5￨e (￨5￨e (￨5￨e (￨5￨e getId￨5￨e (￨5￨e )￨5￨e )￨5￨e +￨5￨e ".uploadTooLarge"￨5￨e )￨5￨e ,￨5￨e Model￨5￨e .￨5￨e valueOf￨5￨e (￨5￨e model￨5￨e )￨5￨e ,￨5￨e defaultValue￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j final￨5￨e String￨5￨e defaultValue￨5￨e =￨5￨e "Upload<seq2seq4repair_space>failed:<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e e￨5￨e .￨5￨e getLocalizedMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e error￨5￨e (￨5￨e getString￨5￨e (￨5￨e (￨5￨e (￨5￨e getId￨5￨e (￨5￨e )￨5￨e )￨5￨e +￨5￨e ".uploadFailed"￨5￨e )￨5￨e ,￨5￨e Model￨5￨e .￨5￨e valueOf￨5￨e (￨5￨e model￨5￨e )￨5￨e ,￨5￨e defaultValue￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨2￨f public￨2￨f void￨2￨f setMaxSize￨2￨f (￨2￨f final￨3￨p Bytes￨3￨p maxSize￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f void￨2￨f onSubmit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FloatDatatypeValidator￨1￨d extends￨1￨d AbstractNumericValidator￨1￨d {￨1￨d public￨2￨f FloatDatatypeValidator￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeFacetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FloatDatatypeValidator￨2￨f (￨2￨f DatatypeValidator￨2￨f base￨2￨f ,￨2￨f Hashtable￨2￨f facets￨2￨f ,￨2￨f boolean￨2￨f derivedByList￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeFacetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f compare￨2￨f (￨2￨f String￨3￨p value1￨3￨p ,￨3￨p String￨3￨p value2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assignAdditionalFacets￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f Hashtable￨2￨f facets￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeFacetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f compareValues￨2￨f (￨2￨f Object￨3￨p value1￨3￨p ,￨3￨p Object￨3￨p value2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMaxInclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMinInclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMaxExclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMinExclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setEnumeration￨2￨f (￨2￨f Vector￨2￨f enumeration￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMaxInclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMinInclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMaxExclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMinExclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkContent￨2￨f (￨2￨f String￨2￨f content￨2￨f ,￨2￨f Object￨2￨f state￨2￨f ,￨2￨f Vector￨2￨f enumeration￨2￨f ,￨2￨f boolean￨2￨f asBase￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b this￨3￨b .￨3￨b fBaseValidator￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b (￨3￨e (￨3￨e FloatDatatypeValidator￨3￨e )￨3￨e (￨3￨e fBaseValidator￨3￨e )￨3￨e )￨3￨e .￨3￨e checkContent￨3￨e (￨3￨e content￨3￨e ,￨3￨e state￨3￨e ,￨3￨e enumeration￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c fFacetsDefined￨4￨c )￨4￨c &￨4￨c (￨4￨c DatatypeValidator￨4￨c .￨4￨c FACET_PATTERN￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c fRegex￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c fRegex￨5￨c .￨5￨c matches￨5￨c (￨5￨c content￨5￨c )￨5￨c )￨5￨c ==￨5￨c false￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e InvalidDatatypeValueException￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "Value'"￨5￨e +￨5￨e content￨5￨e )￨5￨e +￨5￨e "does<seq2seq4repair_space>not<seq2seq4repair_space>match<seq2seq4repair_space>regular<seq2seq4repair_space>expression<seq2seq4repair_space>facet"￨5￨e )￨5￨e +￨5￨e (￨5￨e fPattern￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j asBase￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j Float￨3￨e f￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f f￨4￨e =￨4￨e FloatDatatypeValidator￨4￨e .￨4￨e fValueOf￨4￨e (￨4￨e content￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f NumberFormatException￨4￨p nfe￨4￨p )￨3￨f {￨3￨f String￨4￨f msg￨4￨f =￨4￨f getErrorString￨4￨f (￨4￨f DatatypeMessageProvider￨4￨f .￨4￨f fgMessageKeys￨4￨f [￨4￨f DatatypeMessageProvider￨4￨f .￨4￨f NOT_FLOAT￨4￨f ]￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e throw￨4￨e new￨4￨e InvalidDatatypeValueException￨4￨e (￨4￨e msg￨4￨e )￨4￨e ;￨4￨e }￨3￨f if￨3￨j (￨3￨j enumeration￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j int￨4￨e size￨4￨e =￨4￨e enumeration￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ;￨4￨e Float￨4￨e [￨4￨e ]￨4￨e enumFloats￨4￨e =￨4￨e new￨4￨e Float￨4￨e [￨4￨e size￨4￨e ]￨4￨e ;￨4￨e int￨4￨e i￨4￨e =￨4￨e 0￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f for￨5￨l (￨5￨l ;￨6￨c i￨6￨c <￨6￨c size￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l enumFloats￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e FloatDatatypeValidator￨6￨e .￨6￨e fValueOf￨6￨e (￨6￨e (￨6￨e (￨6￨e String￨6￨e )￨6￨e (￨6￨e enumeration￨6￨e .￨6￨e elementAt￨6￨e (￨6￨e i￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨f catch￨4￨f (￨4￨f NumberFormatException￨5￨p nfe￨5￨p )￨4￨f {￨4￨f String￨5￨f msg￨5￨f =￨5￨f getErrorString￨5￨f (￨5￨f DatatypeMessageProvider￨5￨f .￨5￨f fgMessageKeys￨5￨f [￨5￨f DatatypeMessageProvider￨5￨f .￨5￨f INVALID_ENUM_VALUE￨5￨f ]￨5￨f ,￨5￨f new￨5￨f Object￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f )￨5￨e ;￨5￨e throw￨5￨e new￨5￨e InvalidDatatypeValueException￨5￨e (￨5￨e msg￨5￨e )￨5￨e ;￨5￨e }￨4￨f enumCheck￨4￨e (￨4￨e f￨4￨e .￨4￨e floatValue￨4￨e (￨4￨e )￨4￨e ,￨4￨e enumFloats￨4￨e )￨4￨e ;￨4￨e }￨3￨j boundsCheck￨3￨e (￨3￨e f￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c (￨4￨c fFacetsDefined￨4￨c )￨4￨c &￨4￨c (￨4￨c DatatypeValidator￨4￨c .￨4￨c FACET_ENUMERATION￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c fEnumeration￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j enumCheck￨4￨e (￨4￨e f￨4￨e .￨4￨e floatValue￨4￨e (￨4￨e )￨4￨e ,￨4￨e (￨4￨e (￨4￨e Float￨4￨e [￨4￨e ]￨4￨e )￨4￨e (￨4￨e fEnumeration￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f int￨2￨f getInvalidFacetMsg￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f enumCheck￨2￨f (￨2￨f float￨2￨f v￨2￨f ,￨2￨f Float￨2￨f [￨2￨f ]￨2￨f enumFloats￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Float￨2￨f fValueOf￨2￨f (￨2￨f String￨2￨f s￨2￨f )￨2￨f throws￨2￨f NumberFormatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f compareFloats￨2￨f (￨2￨f float￨3￨p f1￨3￨p ,￨3￨p float￨3￨p f2￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Echo￨1￨d extends￨1￨d Task￨1￨d {￨1￨d protected￨2￨e String￨2￨e message￨2￨e =￨2￨e ""￨2￨e ;￨2￨e protected￨2￨e File￨2￨e file￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e append￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨e int￨2￨e logLevel￨2￨e =￨2￨e Project￨2￨e .￨2￨e MSG_WARN￨2￨e ;￨2￨e public￨2￨f void￨2￨f setAppend￨2￨f (￨2￨f boolean￨3￨p append￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLevel￨2￨f (￨2￨f Echo￨3￨p .￨3￨p EchoLevel￨3￨p echoLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMessage￨2￨f (￨2￨f String￨3￨p msg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addText￨2￨f (￨2￨f String￨2￨f msg￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b message￨3￨b +=￨3￨b project￨3￨b .￨3￨b replaceProperties￨3￨b (￨3￨b msg￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d EchoLevel￨2￨d extends￨2￨d EnumeratedAttribute￨2￨d {￨2￨d public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getValues￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d SSTableExport￨1￨d {￨1￨d private￨2￨e static￨2￨e int￨2￨e INPUT_FILE_BUFFER_SIZE￨2￨e =￨2￨e (￨2￨e 8￨2￨e *￨2￨e 1024￨2￨e )￨2￨e *￨2￨e 1024￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e KEY_OPTION￨2￨e =￨2￨e "k"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e EXCLUDEKEY_OPTION￨2￨e =￨2￨e "x"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ENUMERATEKEYS_OPTION￨2￨e =￨2￨e "e"￨2￨e ;￨2￨e private￨2￨e static￨2￨e Options￨2￨e options￨2￨e ;￨2￨e private￨2￨e static￨2￨e CommandLine￨2￨e cmd￨2￨e ;￨2￨e private￨2￨f static￨2￨f String￨2￨f quote￨2￨f (￨2￨f String￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f asKey￨2￨f (￨2￨f String￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f private￨2￨f static￨2￨f String￨2￨f asStr￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f serializeColumns￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p cols￨3￨p ,￨3￨p AbstractType￨3￨p comp￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f serializeRow￨2￨f (￨2￨f SSTableIdentityIterator￨2￨f row￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f enumeratekeys￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f PrintStream￨2￨f outs￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f IPartitioner￨3￨e partitioner￨3￨e =￨3￨e StorageService￨3￨e .￨3￨e getPartitioner￨3￨e (￨3￨e )￨3￨e ;￨3￨e BufferedRandomAccessFile￨3￨e input￨3￨e =￨3￨e new￨3￨e BufferedRandomAccessFile￨3￨e (￨3￨e SSTable￨3￨e .￨3￨e indexFilename￨3￨e (￨3￨e ssTableFile￨3￨e )￨3￨e ,￨3￨e "r"￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l !￨4￨c (￨4￨c input￨4￨c .￨4￨c isEOF￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b DecoratedKey￨4￨b decoratedKey￨4￨b =￨4￨b partitioner￨4￨b .￨4￨b convertFromDiskFormat￨4￨b (￨4￨b input￨4￨b .￨4￨b readUTF￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b long￨4￨e dataPosition￨4￨e =￨4￨e input￨4￨e .￨4￨e readLong￨4￨e (￨4￨e )￨4￨e ;￨4￨e outs￨4￨e .￨4￨e println￨4￨e (￨4￨e SSTableExport￨4￨e .￨4￨e asStr￨4￨e (￨4￨e decoratedKey￨4￨e .￨4￨e key￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l outs￨3￨e .￨3￨e flush￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f void￨2￨f enumeratekeys￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f String￨2￨f outFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f PrintStream￨2￨f outs￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f keys￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f String￨2￨f outFile￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f keys￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f SSTableReader￨2￨f reader￨2￨f ,￨2￨f PrintStream￨2￨f outs￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f PrintStream￨2￨f outs￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f String￨2￨f outFile￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f export￨2￨f (￨2￨f String￨2￨f ssTableFile￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f excludes￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DomainUtil￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f writeResponse￨2￨f (￨2￨f final￨3￨p HttpServerExchange￨3￨p exchange￨3￨p ,￨3￨p final￨3￨p int￨3￨p status￨3￨p ,￨3￨p ModelNode￨3￨p response￨3￨p ,￨3￨p OperationParameter￨3￨p operationParameter￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f int￨2￨f getResponseLength￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f modelNode￨2￨f ,￨2￨f final￨2￨f OperationParameter￨2￨f operationParameter￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f writeCacheHeaders￨2￨f (￨2￨f final￨3￨p HttpServerExchange￨3￨p exchange￨3￨p ,￨3￨p final￨3￨p int￨3￨p status￨3￨p ,￨3￨p final￨3￨p OperationParameter￨3￨p operationParameter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f constructUrl￨2￨f (￨2￨f final￨3￨p HttpServerExchange￨3￨p exchange￨3￨p ,￨3￨p final￨3￨p String￨3￨p path￨3￨p )￨2￨f {￨2￨f final￨3￨e HeaderMap￨3￨e headers￨3￨e =￨3￨e exchange￨3￨e .￨3￨e getRequestHeaders￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e host￨3￨e =￨3￨e headers￨3￨e .￨3￨e getFirst￨3￨e (￨3￨e HOST￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b String￨3￨b protocol￨3￨b =￨3￨b (￨3￨b (￨3￨b exchange￨3￨b .￨3￨b getConnection￨3￨b (￨3￨b )￨3￨b .￨3￨b getSslSession￨3￨b (￨3￨b )￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b ?￨3￨b "https"￨3￨b :￨3￨b "http"￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e (￨3￨e (￨3￨e protocol￨3￨e +￨3￨e "://"￨3￨e )￨3￨e +￨3￨e host￨3￨e )￨3￨e +￨3￨e path￨3￨e ;￨3￨e }￨2￨f }￨1￨d
final￨1￨d class￨1￨d ComponentEventSender￨1￨d implements￨1￨d IEventSource￨1￨d {￨1￨d private￨2￨e final￨2￨e Component￨2￨e source￨2￨e ;￨2￨e private￨2￨e final￨2￨e IEventDispatcher￨2￨e dispatcher￨2￨e ;￨2￨e public￨2￨f ComponentEventSender￨2￨f (￨2￨f Component￨3￨p source￨3￨p ,￨3￨p IEventDispatcher￨3￨p dispatcher￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f T￨2￨f >￨2￨f void￨2￨f send￨2￨f (￨2￨f IEventSink￨3￨p sink￨3￨p ,￨3￨p Broadcast￨3￨p type￨3￨p ,￨3￨p T￨3￨p payload￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f breadth￨2￨f (￨2￨f final￨3￨p ComponentEvent￨3￨p <￨3￨p ?￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f IEventSink￨3￨e sink￨3￨e =￨3￨e event￨3￨e .￨3￨e getSink￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e targetsApplication￨3￨e =￨3￨e sink￨3￨e instanceof￨3￨e Application￨3￨e ;￨3￨e boolean￨3￨e targetsSession￨3￨e =￨3￨e targetsApplication￨3￨e ||￨3￨e (￨3￨e sink￨3￨e instanceof￨3￨e Session￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e targetsCycle￨3￨e =￨3￨e targetsSession￨3￨e ||￨3￨e (￨3￨e sink￨3￨e instanceof￨3￨e RequestCycle￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e targetsComponent￨3￨e =￨3￨e sink￨3￨e instanceof￨3￨e Component￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c !￨4￨c targetsComponent￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c targetsCycle￨4￨c )￨4￨c )￨3￨j {￨3￨j dispatcher￨4￨e .￨4￨e dispatchEvent￨4￨e (￨4￨e sink￨4￨e ,￨4￨e event￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j targetsApplication￨4￨c )￨3￨j {￨3￨j dispatcher￨4￨e .￨4￨e dispatchEvent￨4￨e (￨4￨e source￨4￨e .￨4￨e getApplication￨4￨e (￨4￨e )￨4￨e ,￨4￨e event￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j event￨4￨c .￨4￨c isStop￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j targetsSession￨4￨c )￨3￨j {￨3￨j dispatcher￨4￨e .￨4￨e dispatchEvent￨4￨e (￨4￨e source￨4￨e .￨4￨e getSession￨4￨e (￨4￨e )￨4￨e ,￨4￨e event￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j event￨4￨c .￨4￨c isStop￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j targetsCycle￨4￨c )￨3￨j {￨3￨j dispatcher￨4￨e .￨4￨e dispatchEvent￨4￨e (￨4￨e source￨4￨e .￨4￨e getRequestCycle￨4￨e (￨4￨e )￨4￨e ,￨4￨e event￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j event￨4￨c .￨4￨c isStop￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b Component￨3￨b cursor￨3￨b =￨3￨b (￨3￨b targetsCycle￨3￨b )￨3￨b ?￨3￨b cursor￨3￨b =￨3￨b source￨3￨b .￨3￨b getPage￨3￨b (￨3￨b )￨3￨b :￨3￨b (￨3￨b (￨3￨b Component￨3￨b )￨3￨b (￨3￨b sink￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b dispatcher￨3￨e .￨3￨e dispatchEvent￨3￨e (￨3￨e cursor￨3￨e ,￨3￨e event￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j event￨4￨c .￨4￨c isStop￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j event￨3￨e .￨3￨e resetShallow￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j cursor￨4￨c instanceof￨4￨c MarkupContainer￨4￨c )￨3￨j {￨3￨j (￨4￨e (￨4￨e MarkupContainer￨4￨e )￨4￨e (￨4￨e cursor￨4￨e )￨4￨e )￨4￨e .￨4￨e visitChildren￨4￨e (￨4￨e new￨4￨e ComponentEventSender￨4￨e .￨4￨e ComponentEventVisitor￨4￨e (￨4￨e event￨4￨e ,￨4￨e dispatcher￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f depth￨2￨f (￨2￨f final￨3￨p ComponentEvent￨3￨p <￨3￨p ?￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f bubble￨2￨f (￨2￨f ComponentEvent￨3￨p <￨3￨p ?￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d ComponentEventVisitor￨2￨d implements￨2￨d IVisitor￨2￨d <￨2￨d Component￨2￨d ,￨2￨d Void￨2￨d >￨2￨d {￨2￨d private￨3￨e final￨3￨e ComponentEvent￨3￨e <￨3￨e ?￨3￨e >￨3￨e e￨3￨e ;￨3￨e private￨3￨e final￨3￨e IEventDispatcher￨3￨e dispatcher￨3￨e ;￨3￨e private￨3￨f ComponentEventVisitor￨3￨f (￨3￨f ComponentEvent￨4￨p <￨4￨p ?￨4￨p >￨4￨p event￨4￨p ,￨4￨p IEventDispatcher￨4￨p dispatcher￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f component￨3￨f (￨3￨f Component￨4￨p object￨4￨p ,￨4￨p IVisit￨4￨p <￨4￨p Void￨4￨p >￨4￨p visit￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ModelBean￨1￨d implements￨1￨d Serializable￨1￨d {￨1￨d private￨2￨e String￨2￨e property1￨2￨e ;￨2￨e private￨2￨e String￨2￨e property2￨2￨e ;￨2￨e private￨2￨e String￨2￨e property3￨2￨e ;￨2￨e private￨2￨e String￨2￨e property4￨2￨e ;￨2￨e private￨2￨e String￨2￨e property5￨2￨e ;￨2￨e private￨2￨e String￨2￨e property6￨2￨e ;￨2￨e public￨2￨f ModelBean￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty1￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty1￨2￨f (￨2￨f String￨3￨p property1￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty2￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty2￨2￨f (￨2￨f String￨3￨p property2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty3￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty3￨2￨f (￨2￨f String￨3￨p property3￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty4￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty4￨2￨f (￨2￨f String￨3￨p property4￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty5￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty5￨2￨f (￨2￨f String￨3￨p property5￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getProperty6￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProperty6￨2￨f (￨2￨f String￨3￨p property6￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b getProperty1￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Version￨1￨d {￨1￨d private￨2￨f Version￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f id￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "4.5-SNAPSHOT-20080602-1631"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d MethodVerifier15￨1￨d extends￨1￨d MethodVerifier￨1￨d {￨1￨d MethodVerifier15￨2￨f (￨2￨f LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areMethodsEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p substituteTwo￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areParametersEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areReturnTypesEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p substituteTwo￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areTypesEqual￨2￨f (￨2￨f TypeBinding￨3￨p one￨3￨p ,￨3￨p TypeBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canSkipInheritedMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canSkipInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkConcreteInheritedMethod￨2￨f (￨2￨f MethodBinding￨3￨p concreteMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p abstractMethods￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForBridgeMethod￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p otherInheritedMethods￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForInheritedNameClash￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p otherInheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForNameClash￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p [￨3￨p ]￨3￨p methods￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkTypeVariableMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f MethodBinding￨2￨f computeSubstituteMethod￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p currentMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f detectInheritedMethodClash￨2￨f (￨2￨f MethodBinding￨3￨p inherited￨3￨p ,￨3￨p MethodBinding￨3￨p otherInherited￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f detectNameClash￨2￨f (￨2￨f MethodBinding￨3￨p current￨3￨p ,￨3￨p MethodBinding￨3￨p inherited￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f doesMethodOverride￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f doParametersClash￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p substituteTwo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f doReturnTypesCollide￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f doTypeVariablesClash￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p substituteTwo￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b one￨3￨b .￨3￨b typeVariables￨3￨b .￨3￨b length￨3￨b )￨3￨b >￨3￨b 0￨3￨b )￨3￨b &&￨3￨b (￨3￨b !￨3￨b (￨3￨b one￨3￨b .￨3￨b areTypeVariableErasuresEqual￨3￨b (￨3￨b substituteTwo￨3￨b .￨3￨b original￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f boolean￨2￨f isInterfaceMethodImplemented￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p existingMethod￨3￨p ,￨3￨p ReferenceBinding￨3￨p superType￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f mustImplementAbstractMethod￨2￨f (￨2￨f ReferenceBinding￨3￨p declaringClass￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f verify￨2￨f (￨2￨f SourceTypeBinding￨3￨p someType￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d JavaElement￨1￨d extends￨1￨d PlatformObject￨1￨d implements￨1￨d IJavaElement￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_JAVAPROJECT￨2￨e =￨2￨e '='￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_PACKAGEFRAGMENTROOT￨2￨e =￨2￨e Path￨2￨e .￨2￨e SEPARATOR￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_PACKAGEFRAGMENT￨2￨e =￨2￨e '<'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_FIELD￨2￨e =￨2￨e '^'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_METHOD￨2￨e =￨2￨e '~'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_INITIALIZER￨2￨e =￨2￨e '|'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_COMPILATIONUNIT￨2￨e =￨2￨e '{'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_CLASSFILE￨2￨e =￨2￨e '('￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_TYPE￨2￨e =￨2￨e '['￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_PACKAGEDECLARATION￨2￨e =￨2￨e '%'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e JEM_IMPORTDECLARATION￨2￨e =￨2￨e '#'￨2￨e ;￨2￨e protected￨2￨e int￨2￨e fOccurrenceCount￨2￨e =￨2￨e 1￨2￨e ;￨2￨e protected￨2￨e int￨2￨e fLEType￨2￨e =￨2￨e 0￨2￨e ;￨2￨e protected￨2￨e IJavaElement￨2￨e fParent￨2￨e ;￨2￨e protected￨2￨e String￨2￨e fName￨2￨e ;￨2￨e protected￨2￨e static￨2￨e JavaModelManager￨2￨e fgJavaModelManager￨2￨e =￨2￨e JavaModelManager￨2￨e .￨2￨e getJavaModelManager￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e Object￨2￨e NO_INFO￨2￨e =￨2￨e new￨2￨e Object￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨f JavaElement￨2￨f (￨2￨f int￨2￨f type￨2￨f ,￨2￨f IJavaElement￨2￨f parent￨2￨f ,￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f Object￨3￨e info￨3￨e =￨3￨e JavaElement￨3￨e .￨3￨e fgJavaModelManager￨3￨e .￨3￨e peekAtInfo￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j info￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c JavaModelManager￨5￨c .￨5￨c VERBOSE￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c this￨5￨c )￨5￨c instanceof￨5￨c JavaModel￨5￨c )￨5￨c )￨4￨j {￨4￨j System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e "CLOSING<seq2seq4repair_space>Java<seq2seq4repair_space>Model"￨5￨e )￨5￨e ;￨5￨e JavaModelManager￨5￨e .￨5￨e VERBOSE￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c this￨5￨c )￨5￨c instanceof￨5￨c IParent￨5￨c )￨4￨j {￨4￨j IJavaElement￨5￨e [￨5￨e ]￨5￨e children￨5￨e =￨5￨e (￨5￨e (￨5￨e JavaElementInfo￨5￨e )￨5￨e (￨5￨e info￨5￨e )￨5￨e )￨5￨e .￨5￨e getChildren￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c size￨6￨c =￨6￨c children￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c size￨6￨c ;￨6￨c ++￨6￨c i￨6￨c )￨5￨l {￨5￨l JavaElement￨6￨e child￨6￨e =￨6￨e (￨6￨e (￨6￨e JavaElement￨6￨e )￨6￨e (￨6￨e children￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e child￨6￨e .￨6￨e close￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j closing￨4￨e (￨4￨e info￨4￨e )￨4￨e ;￨4￨e JavaElement￨4￨e .￨4￨e fgJavaModelManager￨4￨e .￨4￨e removeInfo￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j JavaModelManager￨5￨c .￨5￨c VERBOSE￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b System￨5￨b .￨5￨b out￨5￨b .￨5￨b println￨5￨b (￨5￨b (￨5￨b (￨5￨b "-><seq2seq4repair_space>Package<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨5￨b +￨5￨b (￨5￨b JavaElement￨5￨b .￨5￨b fgJavaModelManager￨5￨b .￨5￨b cache￨5￨b .￨5￨b pkgFillingRate￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b +￨5￨b "%"￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e (￨5￨e (￨5￨e "-><seq2seq4repair_space>Openable<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e JavaElement￨5￨e .￨5￨e fgJavaModelManager￨5￨e .￨5￨e cache￨5￨e .￨5￨e openableFillingRate￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "%"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f protected￨2￨f void￨2￨f closing￨2￨f (￨2￨f Object￨2￨f info￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f equalsDOMNode￨2￨f (￨2￨f IDOMNode￨2￨f node￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f exists￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IDOMNode￨2￨f findNode￨2￨f (￨2￨f IDOMCompilationUnit￨3￨p dom￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IDOMNode￨2￨f followPath￨2￨f (￨2￨f ArrayList￨3￨p path￨3￨p ,￨3￨p int￨3￨p position￨3￨p ,￨3￨p IDOMNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getAncestor￨2￨f (￨2￨f int￨3￨p ancestorType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f [￨2￨f ]￨2￨f getChildren￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ArrayList￨2￨f getChildrenOfType￨2￨f (￨2￨f int￨2￨f type￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IClassFile￨2￨f getClassFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ICompilationUnit￨2￨f getCompilationUnit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JavaElementInfo￨2￨f getElementInfo￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getElementName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getElementType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getHandleIdentifier￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getHandleMemento￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f char￨2￨f getHandleMementoDelimiter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaModel￨2￨f getJavaModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JavaModelManager￨2￨f getJavaModelManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaProject￨2￨f getJavaProject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getOccurrenceCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IOpenable￨2￨f getOpenable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IOpenable￨2￨f getOpenableParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getRawInfo￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IJavaElement￨2￨f getSourceElementAt￨2￨f (￨2￨f int￨2￨f position￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SourceMapper￨2￨f getSourceMapper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f IResource￨2￨f getUnderlyingResource￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkspace￨2￨f getWorkspace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isAncestorOf￨2￨f (￨2￨f IJavaElement￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isReadOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStructureKnown￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JavaModelException￨2￨f newNotPresentException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f offsetSourceEndAndChildren￨2￨f (￨2￨f int￨3￨p amount￨3￨p ,￨3￨p IJavaElement￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f offsetSourceRange￨2￨f (￨2￨f int￨3￨p amount￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f openHierarchy￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f opening￨2￨f (￨2￨f Object￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f readableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f removeInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f IJavaElement￨2￨f rootedAt￨2￨f (￨2￨f IJavaProject￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runOperation￨2￨f (￨2￨f JavaModelOperation￨2￨f operation￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setOccurrenceCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f tabString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toDebugString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringWithAncestors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringAncestors￨2￨f (￨2￨f StringBuffer￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringChildren￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p ,￨3￨p Object￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f toStringInfo￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringInfo￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p ,￨3￨p Object￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f triggerSourceEndOffset￨2￨f (￨2￨f int￨3￨p amount￨3￨p ,￨3￨p int￨3￨p nameStart￨3￨p ,￨3￨p int￨3￨p nameEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f triggerSourceRangeOffset￨2￨f (￨2￨f int￨3￨p amount￨3￨p ,￨3￨p int￨3￨p nameStart￨3￨p ,￨3￨p int￨3￨p nameEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CastExpression￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e type￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e expectedType￨2￨e ;￨2￨e public￨2￨f CastExpression￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p ,￨3￨p Expression￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForAssignedCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p expectedType￨3￨p ,￨3￨p CastExpression￨3￨p rhs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForEnclosingInstanceCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p enclosingInstance￨3￨p ,￨3￨p TypeBinding￨3￨p enclosingInstanceType￨3￨p ,￨3￨p TypeBinding￨3￨p memberType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p operatorSignature￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p expressionTypeId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCasts￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p receiver￨3￨p ,￨3￨p TypeBinding￨3￨p receiverType￨3￨p ,￨3￨p MethodBinding￨3￨p binding￨3￨p ,￨3￨p Expression￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p ,￨3￨p final￨3￨p InvocationSite￨3￨p invocationSite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCasts￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p operatorSignature￨3￨p ,￨3￨p Expression￨3￨p left￨3￨p ,￨3￨p int￨3￨p leftTypeId￨3￨p ,￨3￨p boolean￨3￨p leftIsCast￨3￨p ,￨3￨p Expression￨3￨p right￨3￨p ,￨3￨p int￨3￨p rightTypeId￨3￨p ,￨3￨p boolean￨3￨p rightIsCast￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f checkAlternateBinding￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p receiver￨3￨p ,￨3￨p TypeBinding￨3￨p receiverType￨3￨p ,￨3￨p MethodBinding￨3￨p binding￨3￨p ,￨3￨p Expression￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p originalArgumentTypes￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p alternateArgumentTypes￨3￨p ,￨3￨p final￨3￨p InvocationSite￨3￨p invocationSite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f checkUnsafeCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p TypeBinding￨3￨p match￨3￨p ,￨3￨p boolean￨3￨p isNarrowing￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j match￨4￨c ==￨4￨c castType￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c !￨5￨c isNarrowing￨5￨c )￨5￨c &&￨5￨c (￨5￨c match￨5￨c ==￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c .￨5￨c leafComponentType￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j tagAsUnnecessaryCast￨5￨e (￨5￨e scope￨5￨e ,￨5￨e castType￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e true￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j match￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j isNarrowing￨5￨c ?￨5￨c checkProvablyDistinctTypes￨5￨c (￨5￨c scope￨5￨c ,￨5￨c match￨5￨c ,￨5￨c expressionType￨5￨c ,￨5￨c 0￨5￨c )￨5￨c :￨5￨c checkProvablyDistinctTypes￨5￨c (￨5￨c scope￨5￨c ,￨5￨c castType￨5￨c ,￨5￨c match￨5￨c ,￨5￨c 0￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e false￨5￨e ;￨5￨e }￨4￨j }￨3￨j switch￨3￨s (￨3￨s castType￨3￨c .￨3￨c kind￨3￨c (￨3￨c )￨3￨c )￨3￨s {￨3￨s case￨4￨c Binding￨4￨c .￨4￨c PARAMETERIZED_TYPE￨4￨c :￨4￨c if￨5￨j (￨5￨j castType￨6￨c .￨6￨c isBoundParameterizedType￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j match￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e bits￨7￨e |=￨7￨e ASTNode￨7￨e .￨7￨e UnsafeCast￨7￨e ;￨7￨e return￨7￨e true￨7￨e ;￨7￨e }￨6￨j switch￨6￨s (￨6￨s match￨6￨c .￨6￨c kind￨6￨c (￨6￨c )￨6￨c )￨6￨s {￨6￨s }￨6￨s }￨5￨j case￨4￨c Binding￨4￨c .￨4￨c PARAMETERIZED_TYPE￨4￨c :￨4￨c if￨5￨j (￨5￨j isNarrowing￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c expressionType￨7￨c .￨7￨c isRawType￨7￨c (￨7￨c )￨7￨c )￨7￨c ||￨7￨c (￨7￨c !￨7￨c (￨7￨c expressionType￨7￨c .￨7￨c isEquivalentTo￨7￨c (￨7￨c match￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e bits￨7￨e |=￨7￨e ASTNode￨7￨e .￨7￨e UnsafeCast￨7￨e ;￨7￨e return￨7￨e true￨7￨e ;￨7￨e }￨6￨j TypeBinding￨6￨e genericCastType￨6￨e =￨6￨e castType￨6￨e .￨6￨e erasure￨6￨e (￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b TypeBinding￨6￨b genericMatch￨6￨b =￨6￨b genericCastType￨6￨b .￨6￨b findSuperTypeWithSameErasure￨6￨b (￨6￨b expressionType￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b if￨6￨j (￨6￨j genericMatch￨7￨c ==￨7￨c match￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e bits￨7￨e |=￨7￨e ASTNode￨7￨e .￨7￨e UnsafeCast￨7￨e ;￨7￨e }￨6￨j return￨6￨e true￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j if￨6￨j (￨6￨j !￨7￨c (￨7￨c match￨7￨c .￨7￨c isEquivalentTo￨7￨c (￨7￨c castType￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e bits￨7￨e |=￨7￨e ASTNode￨7￨e .￨7￨e UnsafeCast￨7￨e ;￨7￨e return￨7￨e true￨7￨e ;￨7￨e }￨6￨j }￨5￨j break￨5￨e ;￨5￨e case￨4￨c Binding￨4￨c .￨4￨c RAW_TYPE￨4￨c :￨4￨c this￨5￨e .￨5￨e bits￨5￨e |=￨5￨e ASTNode￨5￨e .￨5￨e UnsafeCast￨5￨e ;￨5￨e return￨5￨e true￨5￨e ;￨5￨e default￨4￨c :￨4￨c if￨5￨j (￨5￨j isNarrowing￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e bits￨6￨e |=￨6￨e ASTNode￨6￨e .￨6￨e UnsafeCast￨6￨e ;￨6￨e return￨6￨e true￨6￨e ;￨6￨e }￨5￨j break￨5￨e ;￨5￨e }￨5￨e }￨5￨e break￨5￨e ;￨5￨e case￨4￨c Binding￨4￨c .￨4￨c ARRAY_TYPE￨4￨c :￨4￨c TypeBinding￨5￨e leafType￨5￨e =￨5￨e castType￨5￨e .￨5￨e leafComponentType￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j isNarrowing￨6￨c &&￨6￨c (￨6￨c (￨6￨c leafType￨6￨c .￨6￨c isBoundParameterizedType￨6￨c (￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c leafType￨6￨c .￨6￨c isTypeVariable￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e bits￨6￨e |=￨6￨e ASTNode￨6￨e .￨6￨e UnsafeCast￨6￨e ;￨6￨e return￨6￨e true￨6￨e ;￨6￨e }￨5￨j break￨5￨e ;￨5￨e case￨4￨c Binding￨4￨c .￨4￨c TYPE_PARAMETER￨4￨c :￨4￨c this￨5￨e .￨5￨e bits￨5￨e |=￨5￨e ASTNode￨5￨e .￨5￨e UnsafeCast￨5￨e ;￨5￨e return￨5￨e true￨5￨e ;￨5￨e }￨3￨s if￨3￨j (￨3￨j (￨4￨c !￨4￨c isNarrowing￨4￨c )￨4￨c &&￨4￨c (￨4￨c match￨4￨c ==￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c .￨4￨c leafComponentType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j tagAsUnnecessaryCast￨4￨e (￨4￨e scope￨4￨e ,￨4￨e castType￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e true￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f innermostCastedExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalVariableBinding￨2￨f localVariableBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f nullStatus￨2￨f (￨2￨f FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f optimizedBooleanConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpectedType￨2￨f (￨2￨f TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isIndirectlyUsed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsNeedCheckCast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsUnnecessaryCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PanelTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d public￨2￨f PanelTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderHomePage_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f boolean￨3￨e hit￨3￨e =￨3￨e false￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f executeTest￨4￨e (￨4￨e PanelPage_1￨4￨e .￨4￨e class￨4￨e ,￨4￨e "Dummy.html"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f MarkupException￨4￨p mex￨4￨p )￨3￨f {￨3￨f hit￨4￨e =￨4￨e true￨4￨e ;￨4￨e assertNotNull￨4￨e (￨4￨e mex￨4￨e .￨4￨e getMarkupStream￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b assertTrue￨4￨b (￨4￨b mex￨4￨b .￨4￨b getMessage￨4￨b (￨4￨b )￨4￨b .￨4￨b contains￨4￨b (￨4￨b "Expected<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>for<seq2seq4repair_space>"￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b assertTrue￨4￨e (￨4￨e mex￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e .￨4￨e contains￨4￨e (￨4￨e "SimplePanel_1.html"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f assertTrue￨3￨e (￨3￨e "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨3￨e ,￨3￨e hit￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testRenderHomePage_2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanel3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanel4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_5￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_6￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPanelWithAttributeModifier￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_7￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInlinePanel_8￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStartPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DomainServerCommunicationServices￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d ServiceActivator￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e OptionMap￨2￨e DEFAULTS￨2￨e =￨2￨e OptionMap￨2￨e .￨2￨e create￨2￨e (￨2￨e RECEIVE_WINDOW_SIZE￨2￨e ,￨2￨e WINDOW_SIZE￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1593964083902839384L￨2￨e ;￨2￨e private￨2￨e static￨2￨e volatile￨2￨e int￨2￨e initialOperationID￨2￨e ;￨2￨e private￨2￨e final￨2￨e ModelNode￨2￨e endpointConfig￨2￨e ;￨2￨e private￨2￨e final￨2￨e InetSocketAddress￨2￨e managementSocket￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e serverName￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e serverProcessName￨2￨e ;￨2￨e private￨2￨e final￨2￨e byte￨2￨e [￨2￨e ]￨2￨e authKey￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e managementSubsystemEndpoint￨2￨e ;￨2￨e DomainServerCommunicationServices￨2￨f (￨2￨f ModelNode￨3￨p endpointConfig￨3￨p ,￨3￨p InetSocketAddress￨3￨p managementSocket￨3￨p ,￨3￨p String￨3￨p serverName￨3￨p ,￨3￨p String￨3￨p serverProcessName￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p authKey￨3￨p ,￨3￨p boolean￨3￨p managementSubsystemEndpoint￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f updateOperationID￨2￨f (￨2￨f final￨3￨p int￨3￨p operationID￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f activate￨2￨f (￨2￨f final￨2￨f ServiceActivatorContext￨2￨f serviceActivatorContext￨2￨f )￨2￨f throws￨2￨f ServiceRegistryException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e serviceActivatorContext￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e endpointName￨3￨e =￨3￨e (￨3￨e managementSubsystemEndpoint￨3￨e )￨3￨e ?￨3￨e RemotingServices￨3￨e .￨3￨e SUBSYSTEM_ENDPOINT￨3￨e :￨3￨e ManagementRemotingServices￨3￨e .￨3￨e MANAGEMENT_ENDPOINT￨3￨e ;￨3￨e final￨3￨e EndpointService￨3￨e .￨3￨e EndpointType￨3￨e endpointType￨3￨e =￨3￨e (￨3￨e managementSubsystemEndpoint￨3￨e )￨3￨e ?￨3￨e EndpointType￨3￨e .￨3￨e SUBSYSTEM￨3￨e :￨3￨e EndpointType￨3￨e .￨3￨e MANAGEMENT￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨e SuppressWarnings￨4￨e (￨4￨e "deprecation"￨4￨e )￨4￨e final￨4￨e OptionMap￨4￨e options￨4￨e =￨4￨e EndpointConfigFactory￨4￨e .￨4￨e create￨4￨e (￨4￨e DEFAULT￨4￨e ,￨4￨e endpointConfig￨4￨e ,￨4￨e DomainServerCommunicationServices￨4￨e .￨4￨e DEFAULTS￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b ManagementRemotingServices￨4￨b .￨4￨b installRemotingManagementEndpoint￨4￨b (￨4￨b serviceTarget￨4￨b ,￨4￨b endpointName￨4￨b ,￨4￨b WildFlySecurityManager￨4￨b .￨4￨b getPropertyPrivileged￨4￨b (￨4￨b NODE_NAME￨4￨b ,￨4￨b null￨4￨b )￨4￨b ,￨4￨b endpointType￨4￨b ,￨4￨b options￨4￨b ,￨4￨b null￨4￨b ,￨4￨b null￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b final￨4￨e int￨4￨e port￨4￨e =￨4￨e managementSocket￨4￨e .￨4￨e getPort￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e String￨4￨e host￨4￨e =￨4￨e managementSocket￨4￨e .￨4￨e getAddress￨4￨e (￨4￨e )￨4￨e .￨4￨e getHostAddress￨4￨e (￨4￨e )￨4￨e ;￨4￨e HostControllerConnectionService￨4￨e service￨4￨e =￨4￨e new￨4￨e HostControllerConnectionService￨4￨e (￨4￨e host￨4￨e ,￨4￨e port￨4￨e ,￨4￨e serverName￨4￨e ,￨4￨e serverProcessName￨4￨e ,￨4￨e authKey￨4￨e ,￨4￨e DomainServerCommunicationServices￨4￨e .￨4￨e initialOperationID￨4￨e ,￨4￨e managementSubsystemEndpoint￨4￨e )￨4￨e ;￨4￨e serviceTarget￨4￨e .￨4￨e addService￨4￨e (￨4￨e SERVICE_NAME￨4￨e ,￨4￨e service￨4￨e )￨4￨e .￨4￨e addDependency￨4￨e (￨4￨e endpointName￨4￨e ,￨4￨e Endpoint￨4￨e .￨4￨e class￨4￨e ,￨4￨e service￨4￨e .￨4￨e getEndpointInjector￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e addDependency￨4￨e (￨4￨e ControlledProcessStateService￨4￨e .￨4￨e SERVICE_NAME￨4￨e ,￨4￨e ControlledProcessStateService￨4￨e .￨4￨e class￨4￨e ,￨4￨e service￨4￨e .￨4￨e getProcessStateServiceInjectedValue￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e setInitialMode￨4￨e (￨4￨e ACTIVE￨4￨e )￨4￨e .￨4￨e install￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f OperationFailedException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e ServiceRegistryException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f static￨2￨f ServiceActivator￨2￨f create￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p endpointConfig￨3￨p ,￨3￨p final￨3￨p InetSocketAddress￨3￨p managementSocket￨3￨p ,￨3￨p final￨3￨p String￨3￨p serverName￨3￨p ,￨3￨p final￨3￨p String￨3￨p serverProcessName￨3￨p ,￨3￨p final￨3￨p byte￨3￨p [￨3￨p ]￨3￨p authKey￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p managementSubsystemEndpoint￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f interface￨2￨f OperationIDUpdater￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f updateOperationID￨3￨f (￨3￨f int￨4￨p operationID￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Base64￨1￨d {￨1￨d private￨2￨f static￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f intToBase64￨2￨f =￨2￨f new￨2￨f char￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f base64ToInt￨2￨f =￨2￨f new￨2￨f byte￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨f static￨2￨f String￨2￨f byteArrayToBase64￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p a￨3￨p ,￨3￨p int￨3￨p offset￨3￨p ,￨3￨p int￨3￨p len￨3￨p )￨2￨f {￨2￨f int￨3￨e aLen￨3￨e =￨3￨e len￨3￨e ;￨3￨e int￨3￨e numFullGroups￨3￨e =￨3￨e aLen￨3￨e /￨3￨e 3￨3￨e ;￨3￨e int￨3￨e numBytesInPartialGroup￨3￨e =￨3￨e aLen￨3￨e -￨3￨e (￨3￨e 3￨3￨e *￨3￨e numFullGroups￨3￨e )￨3￨e ;￨3￨e int￨3￨e resultLen￨3￨e =￨3￨e 4￨3￨e *￨3￨e (￨3￨e (￨3￨e aLen￨3￨e +￨3￨e 2￨3￨e )￨3￨e /￨3￨e 3￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b StringBuffer￨3￨b result￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b resultLen￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b char￨3￨e [￨3￨e ]￨3￨e intToAlpha￨3￨e =￨3￨e Base64￨3￨e .￨3￨e intToBase64￨3￨e ;￨3￨e int￨3￨e inCursor￨3￨e =￨3￨e offset￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c numFullGroups￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l int￨4￨e byte0￨4￨e =￨4￨e (￨4￨e a￨4￨e [￨4￨e (￨4￨e inCursor￨4￨e ++￨4￨e )￨4￨e ]￨4￨e )￨4￨e &￨4￨e 255￨4￨e ;￨4￨e int￨4￨e byte1￨4￨e =￨4￨e (￨4￨e a￨4￨e [￨4￨e (￨4￨e inCursor￨4￨e ++￨4￨e )￨4￨e ]￨4￨e )￨4￨e &￨4￨e 255￨4￨e ;￨4￨e int￨4￨e byte2￨4￨e =￨4￨e (￨4￨e a￨4￨e [￨4￨e (￨4￨e inCursor￨4￨e ++￨4￨e )￨4￨e ]￨4￨e )￨4￨e &￨4￨e 255￨4￨e ;￨4￨e result￨4￨e .￨4￨e append￨4￨e (￨4￨e intToAlpha￨4￨e [￨4￨e (￨4￨e byte0￨4￨e >￨4￨e >￨4￨e 2￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e append￨4￨e (￨4￨e intToAlpha￨4￨e [￨4￨e (￨4￨e (￨4￨e (￨4￨e byte0￨4￨e <<￨4￨e 4￨4￨e )￨4￨e &￨4￨e 63￨4￨e )￨4￨e |￨4￨e (￨4￨e byte1￨4￨e >￨4￨e >￨4￨e 4￨4￨e )￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e append￨4￨e (￨4￨e intToAlpha￨4￨e [￨4￨e (￨4￨e (￨4￨e (￨4￨e byte1￨4￨e <<￨4￨e 2￨4￨e )￨4￨e &￨4￨e 63￨4￨e )￨4￨e |￨4￨e (￨4￨e byte2￨4￨e >￨4￨e >￨4￨e 6￨4￨e )￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e append￨4￨e (￨4￨e intToAlpha￨4￨e [￨4￨e (￨4￨e byte2￨4￨e &￨4￨e 63￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j numBytesInPartialGroup￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j int￨4￨e byte0￨4￨e =￨4￨e (￨4￨e a￨4￨e [￨4￨e (￨4￨e inCursor￨4￨e ++￨4￨e )￨4￨e ]￨4￨e )￨4￨e &￨4￨e 255￨4￨e ;￨4￨e result￨4￨e .￨4￨e append￨4￨e (￨4￨e intToAlpha￨4￨e [￨4￨e (￨4￨e byte0￨4￨e >￨4￨e >￨4￨e 2￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j numBytesInPartialGroup￨5￨c ==￨5￨c 1￨5￨c )￨4￨j {￨4￨j result￨5￨e .￨5￨e append￨5￨e (￨5￨e intToAlpha￨5￨e [￨5￨e (￨5￨e (￨5￨e byte0￨5￨e <<￨5￨e 4￨5￨e )￨5￨e &￨5￨e 63￨5￨e )￨5￨e ]￨5￨e )￨5￨e ;￨5￨e result￨5￨e .￨5￨e append￨5￨e (￨5￨e "=="￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j int￨5￨e byte1￨5￨e =￨5￨e (￨5￨e a￨5￨e [￨5￨e (￨5￨e inCursor￨5￨e ++￨5￨e )￨5￨e ]￨5￨e )￨5￨e &￨5￨e 255￨5￨e ;￨5￨e result￨5￨e .￨5￨e append￨5￨e (￨5￨e intToAlpha￨5￨e [￨5￨e (￨5￨e (￨5￨e (￨5￨e byte0￨5￨e <<￨5￨e 4￨5￨e )￨5￨e &￨5￨e 63￨5￨e )￨5￨e |￨5￨e (￨5￨e byte1￨5￨e >￨5￨e >￨5￨e 4￨5￨e )￨5￨e )￨5￨e ]￨5￨e )￨5￨e ;￨5￨e result￨5￨e .￨5￨e append￨5￨e (￨5￨e intToAlpha￨5￨e [￨5￨e (￨5￨e (￨5￨e byte1￨5￨e <<￨5￨e 2￨5￨e )￨5￨e &￨5￨e 63￨5￨e )￨5￨e ]￨5￨e )￨5￨e ;￨5￨e result￨5￨e .￨5￨e append￨5￨e (￨5￨e '='￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e result￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f byte￨2￨f [￨2￨f ]￨2￨f base64ToByteArray￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f int￨2￨f base64toInt￨2￨f (￨2￨f char￨3￨p c￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p alphaToInt￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractCollectionTest￨1￨d <￨1￨d E￨1￨d >￨1￨d extends￨1￨d AbstractObjectTest￨1￨d {￨1￨d private￨2￨e Collection￨2￨e <￨2￨e E￨2￨e >￨2￨e collection￨2￨e ;￨2￨e private￨2￨e Collection￨2￨e <￨2￨e E￨2￨e >￨2￨e confirmed￨2￨e ;￨2￨e public￨2￨f AbstractCollectionTest￨2￨f (￨2￨f String￨3￨p testName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f areEqualElementsDistinguishable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAddSupported￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRemoveSupported￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNullSupported￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFailFastSupported￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f isEqualsCheckable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetEmpty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetFull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeConfirmedCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeConfirmedFullCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f abstract￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeFullCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f .￨2￨f Entry￨2￨f <￨2￨f E￨2￨f ,￨2￨f E￨2￨f >￨2￨f cloneMapEntry￨2￨f (￨2￨f Map￨3￨p .￨3￨p Entry￨3￨p <￨3￨p E￨3￨p ,￨3￨p E￨3￨p >￨3￨p entry￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f E￨2￨f [￨2￨f ]￨2￨f getFullElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f E￨2￨f [￨2￨f ]￨2￨f getOtherElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f E￨2￨f [￨2￨f ]￨2￨f getFullNonNullElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f E￨2￨f [￨2￨f ]￨2￨f getOtherNonNullElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getFullNonNullStringElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getOtherNonNullStringElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionAdd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionAddAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnsupportedAdd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionClear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionContains￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionContainsAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionIsEmpty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionIterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f void￨2￨f testCollectionIteratorRemove￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionRemove￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionRemoveAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionRetainAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionToArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionToArray2￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCollectionToString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnsupportedRemove￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j isRemoveSupported￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j resetEmpty￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f getCollection￨4￨e (￨4￨e )￨4￨e .￨4￨e clear￨4￨e (￨4￨e )￨4￨e ;￨4￨e AbstractCollectionTest￨4￨e .￨4￨e fail￨4￨e (￨4￨e "clear<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedOperationException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f getCollection￨4￨e (￨4￨e )￨4￨e .￨4￨e remove￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e AbstractCollectionTest￨4￨e .￨4￨e fail￨4￨e (￨4￨e "remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedOperationException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f getCollection￨4￨e (￨4￨e )￨4￨e .￨4￨e removeAll￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e AbstractCollectionTest￨4￨e .￨4￨e fail￨4￨e (￨4￨e "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedOperationException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f getCollection￨4￨e (￨4￨e )￨4￨e .￨4￨e retainAll￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b AbstractCollectionTest￨4￨b .￨4￨b fail￨4￨b (￨4￨b "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f UnsupportedOperationException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e resetFull￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Iterator￨4￨e <￨4￨e E￨4￨e >￨4￨e iterator￨4￨e =￨4￨e getCollection￨4￨e (￨4￨e )￨4￨e .￨4￨e iterator￨4￨e (￨4￨e )￨4￨e ;￨4￨e iterator￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e ;￨4￨e iterator￨4￨e .￨4￨e remove￨4￨e (￨4￨e )￨4￨e ;￨4￨e AbstractCollectionTest￨4￨e .￨4￨e fail￨4￨e (￨4￨e "iterator.remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedOperationException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testCollectionIteratorFailFast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f testSerializeDeserializeThenCompare￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f getCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCollection￨2￨f (￨2￨f Collection￨3￨p <￨3￨p E￨3￨p >￨3￨p collection￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f getConfirmed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConfirmed￨2￨f (￨2￨f Collection￨3￨p <￨3￨p E￨3￨p >￨3￨p confirmed￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f assertNotCollectionContains￨2￨f (￨2￨f Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p ,￨3￨p Object￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f assertNotCollectionContainsAll￨2￨f (￨2￨f Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p sub￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f assertNotRemoveFromCollection￨2￨f (￨2￨f Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p ,￨3￨p Object￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f assertNotRemoveAllFromCollection￨2￨f (￨2￨f Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p sub￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d NativeRemotingManagementAddHandler￨1￨d extends￨1￨d AbstractAddStepHandler￨1￨d implements￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e NativeRemotingManagementAddHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e NativeRemotingManagementAddHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e OPERATION_NAME￨2￨e =￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e ADD￨2￨e ;￨2￨e protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p ,￨3￨p ModelNode￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p ModelNode￨3￨p operation￨3￨p ,￨3￨p ModelNode￨3￨p model￨3￨p ,￨3￨p ServiceVerificationHandler￨3￨p verificationHandler￨3￨p ,￨3￨p List￨3￨p <￨3￨p ServiceController￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p newControllers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b ManagementDescription￨3￨b .￨3￨b getAddNativeManagementDescription￨3￨b (￨3￨b locale￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d ;￨4￨e if￨4￨j (￨4￨j index￨5￨c ==￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c oldResolvedPath￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c getEntryKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c IClasspathEntry￨6￨c .￨6￨c CPE_PROJECT￨6￨c )￨6￨c )￨5￨j {￨5￨j needToUpdateDependents￨6￨e =￨6￨e true￨6￨e ;￨6￨e this￨6￨e .￨6￨e needCycleCheck￨6￨e =￨6￨e true￨6￨e ;￨6￨e continue￨6￨e ;￨6￨e }￨5￨j IPackageFragmentRoot￨5￨e [￨5￨e ]￨5￨e pkgFragmentRoots￨5￨e =￨5￨e null￨5￨e ;￨5￨e if￨5￨j (￨5￨j removedRoots￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j IPackageFragmentRoot￨6￨e removedRoot￨6￨e =￨6￨e (￨6￨e (￨6￨e IPackageFragmentRoot￨6￨e )￨6￨e (￨6￨e removedRoots￨6￨e .￨6￨e get￨6￨e (￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e getPath￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j removedRoot￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j pkgFragmentRoots￨7￨f =￨7￨f new￨7￨f IPackageFragmentRoot￨7￨f [￨7￨f ]￨7￨f (￨7￨f )￨7￨f {￨7￨f }￨7￨f ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j pkgFragmentRoots￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j pkgFragmentRoots￨6￨e =￨6￨e project￨6￨e .￨6￨e computePackageFragmentRoots￨6￨e (￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e ;￨6￨e }￨5￨j addClasspathDeltas￨5￨e (￨5￨e pkgFragmentRoots￨5￨e ,￨5￨e IJavaElementDelta￨5￨e .￨5￨e F_REMOVED_FROM_CLASSPATH￨5￨e ,￨5￨e delta￨5￨e )￨5￨e ;￨5￨e int￨5￨e changeKind￨5￨e =￨5￨e oldResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getEntryKind￨5￨e (￨5￨e )￨5￨e ;￨5￨e needToUpdateDependents￨5￨e |=￨5￨e (￨5￨e changeKind￨5￨e ==￨5￨e (￨5￨e IClasspathEntry￨5￨e .￨5￨e CPE_SOURCE￨5￨e )￨5￨e )￨5￨e ||￨5￨e (￨5￨e oldResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e isExported￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c indexManager￨6￨c !=￨6￨c null￨6￨c )￨6￨c &&￨6￨c (￨6￨c changeKind￨6￨c ==￨6￨c (￨6￨c IClasspathEntry￨6￨c .￨6￨c CPE_SOURCE￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j final￨6￨e IPath￨6￨e path￨6￨e =￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e getPath￨6￨e (￨6￨e )￨6￨e ;￨6￨e postAction￨6￨f (￨6￨f new￨6￨f JavaModelOperation￨6￨f .￨6￨f IPostAction￨6￨f (￨6￨f )￨6￨f {￨6￨f public￨7￨f String￨7￨f getID￨7￨f (￨7￨f )￨7￨f {￨7￨f return￨8￨e path￨8￨e .￨8￨e toString￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨f public￨7￨f void￨7￨f run￨7￨f (￨7￨f )￨7￨f throws￨7￨f JavaModelException￨7￨f (￨7￨f )￨7￨f {￨7￨f indexManager￨8￨e .￨8￨e removeSourceFolderFromIndex￨8￨e (￨8￨e project￨8￨e ,￨8￨e path￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f ,￨6￨e JavaModelOperation￨6￨e .￨6￨e REMOVEALL_APPEND￨6￨e )￨6￨e ;￨6￨e }￨5￨j hasDelta￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c oldResolvedPath￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c getEntryKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c IClasspathEntry￨6￨c .￨6￨c CPE_PROJECT￨6￨c )￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e needCycleCheck￨6￨e |=￨6￨e (￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e isExported￨6￨e (￨6￨e )￨6￨e )￨6￨e !=￨6￨e (￨6￨e newResolvedPath￨6￨e [￨6￨e index￨6￨e ]￨6￨e .￨6￨e isExported￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e continue￨6￨e ;￨6￨e }￨5￨j needToUpdateDependents￨5￨e |=￨5￨e (￨5￨e oldResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e isExported￨5￨e (￨5￨e )￨5￨e )￨5￨e !=￨5￨e (￨5￨e newResolvedPath￨5￨e [￨5￨e index￨5￨e ]￨5￨e .￨5￨e isExported￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j oldResolvedPathLongest￨6￨c &&￨6￨c (￨6￨c index￨6￨c !=￨6￨c i￨6￨c )￨6￨c )￨5￨j {￨5￨j addClasspathDeltas￨6￨e (￨6￨e project￨6￨e .￨6￨e computePackageFragmentRoots￨6￨e (￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e ,￨6￨e IJavaElementDelta￨6￨e .￨6￨e F_CLASSPATH_REORDER￨6￨e ,￨6￨e delta￨6￨e )￨6￨e ;￨6￨e int￨6￨e changeKind￨6￨e =￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e getEntryKind￨6￨e (￨6￨e )￨6￨e ;￨6￨e needToUpdateDependents￨6￨e |=￨6￨e changeKind￨6￨e ==￨6￨e (￨6￨e IClasspathEntry￨6￨e .￨6￨e CPE_SOURCE￨6￨e )￨6￨e ;￨6￨e hasDelta￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j int￨5￨e sourceAttachmentFlags￨5￨e =￨5￨e this￨5￨e .￨5￨e getSourceAttachmentDeltaFlag￨5￨e (￨5￨e oldResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getSourceAttachmentPath￨5￨e (￨5￨e )￨5￨e ,￨5￨e newResolvedPath￨5￨e [￨5￨e index￨5￨e ]￨5￨e .￨5￨e getSourceAttachmentPath￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e int￨5￨e sourceAttachmentRootFlags￨5￨e =￨5￨e this￨5￨e .￨5￨e getSourceAttachmentDeltaFlag￨5￨e (￨5￨e oldResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getSourceAttachmentRootPath￨5￨e (￨5￨e )￨5￨e ,￨5￨e newResolvedPath￨5￨e [￨5￨e index￨5￨e ]￨5￨e .￨5￨e getSourceAttachmentRootPath￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e int￨5￨e flags￨5￨e =￨5￨e sourceAttachmentFlags￨5￨e |￨5￨e sourceAttachmentRootFlags￨5￨e ;￨5￨e if￨5￨j (￨5￨j flags￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j addClasspathDeltas￨6￨e (￨6￨e project￨6￨e .￨6￨e computePackageFragmentRoots￨6￨e (￨6￨e oldResolvedPath￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e ,￨6￨e flags￨6￨e ,￨6￨e delta￨6￨e )￨6￨e ;￨6￨e hasDelta￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨l for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c newResolvedPath￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l int￨4￨e index￨4￨e =￨4￨e classpathContains￨4￨e (￨4￨e oldResolvedPath￨4￨e ,￨4￨e newResolvedPath￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j index￨5￨c ==￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c newResolvedPath￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c getEntryKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c IClasspathEntry￨6￨c .￨6￨c CPE_PROJECT￨6￨c )￨6￨c )￨5￨j {￨5￨j needToUpdateDependents￨6￨e =￨6￨e true￨6￨e ;￨6￨e this￨6￨e .￨6￨e needCycleCheck￨6￨e =￨6￨e true￨6￨e ;￨6￨e continue￨6￨e ;￨6￨e }￨5￨j addClasspathDeltas￨5￨e (￨5￨e project￨5￨e .￨5￨e computePackageFragmentRoots￨5￨e (￨5￨e newResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ,￨5￨e IJavaElementDelta￨5￨e .￨5￨e F_ADDED_TO_CLASSPATH￨5￨e ,￨5￨e delta￨5￨e )￨5￨e ;￨5￨e int￨5￨e changeKind￨5￨e =￨5￨e newResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getEntryKind￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j indexManager￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j switch￨6￨s (￨6￨s changeKind￨6￨c )￨6￨s {￨6￨s case￨7￨c IClasspathEntry￨7￨c .￨7￨c CPE_LIBRARY￨7￨c :￨7￨c boolean￨8￨e pathHasChanged￨8￨e =￨8￨e true￨8￨e ;￨8￨e final￨8￨e IPath￨8￨e newPath￨8￨e =￨8￨e newResolvedPath￨8￨e [￨8￨e i￨8￨e ]￨8￨e .￨8￨e getPath￨8￨e (￨8￨e )￨8￨e ;￨8￨e for￨8￨l (￨8￨l int￨9￨c j￨9￨c =￨9￨c 0￨9￨c ;￨9￨c j￨9￨c <￨9￨c (￨9￨c oldResolvedPath￨9￨c .￨9￨c length￨9￨c )￨9￨c ;￨9￨c j￨9￨c ++￨9￨c )￨8￨l {￨8￨l IClasspathEntry￨9￨e oldEntry￨9￨e =￨9￨e oldResolvedPath￨9￨e [￨9￨e j￨9￨e ]￨9￨e ;￨9￨e if￨9￨j (￨9￨j oldEntry￨10￨c .￨10￨c getPath￨10￨c (￨10￨c )￨10￨c .￨10￨c equals￨10￨c (￨10￨c newPath￨10￨c )￨10￨c )￨9￨j {￨9￨j pathHasChanged￨10￨e =￨10￨e false￨10￨e ;￨10￨e break￨10￨e ;￨10￨e }￨9￨j }￨8￨l if￨8￨j (￨8￨j pathHasChanged￨9￨c )￨8￨j {￨8￨j postAction￨9￨f (￨9￨f new￨9￨f JavaModelOperation￨9￨f .￨9￨f IPostAction￨9￨f (￨9￨f )￨9￨f {￨9￨f public￨10￨f String￨10￨f getID￨10￨f (￨10￨f )￨10￨f {￨10￨f return￨11￨e newPath￨11￨e .￨11￨e toString￨11￨e (￨11￨e )￨11￨e ;￨11￨e }￨10￨f public￨10￨f void￨10￨f run￨10￨f (￨10￨f )￨10￨f throws￨10￨f JavaModelException￨10￨f (￨10￨f )￨10￨f {￨10￨f indexManager￨11￨e .￨11￨e indexLibrary￨11￨e (￨11￨e newPath￨11￨e ,￨11￨e project￨11￨e .￨11￨e getProject￨11￨e (￨11￨e )￨11￨e )￨11￨e ;￨11￨e }￨10￨f }￨9￨f ,￨9￨e JavaModelOperation￨9￨e .￨9￨e REMOVEALL_APPEND￨9￨e )￨9￨e ;￨9￨e }￨8￨j break￨8￨e ;￨8￨e case￨7￨c IClasspathEntry￨7￨c .￨7￨c CPE_SOURCE￨7￨c :￨7￨c IClasspathEntry￨8￨e entry￨8￨e =￨8￨e newResolvedPath￨8￨e [￨8￨e i￨8￨e ]￨8￨e ;￨8￨e final￨8￨e IPath￨8￨e path￨8￨e =￨8￨e entry￨8￨e .￨8￨e getPath￨8￨e (￨8￨e )￨8￨e ;￨8￨e <START_BUG>￨8￨b final￨8￨b char￨8￨b [￨8￨b ]￨8￨b [￨8￨b ]￨8￨b exclusionPatterns￨8￨b =￨8￨b (￨8￨b (￨8￨b ClasspathEntry￨8￨b )￨8￨b (￨8￨b entry￨8￨b )￨8￨b )￨8￨b .￨8￨b fulExclusionPatternChars￨8￨b (￨8￨b )￨8￨b ;￨8￨b <END_BUG>￨8￨b postAction￨8￨f (￨8￨f new￨8￨f JavaModelOperation￨8￨f .￨8￨f IPostAction￨8￨f (￨8￨f )￨8￨f {￨8￨f public￨9￨f String￨9￨f getID￨9￨f (￨9￨f )￨9￨f {￨9￨f return￨10￨e path￨10￨e .￨10￨e toString￨10￨e (￨10￨e )￨10￨e ;￨10￨e }￨9￨f public￨9￨f void￨9￨f run￨9￨f (￨9￨f )￨9￨f throws￨9￨f JavaModelException￨9￨f (￨9￨f )￨9￨f {￨9￨f indexManager￨10￨e .￨10￨e indexSourceFolder￨10￨e (￨10￨e project￨10￨e ,￨10￨e path￨10￨e ,￨10￨e exclusionPatterns￨10￨e )￨10￨e ;￨10￨e }￨9￨f }￨8￨f ,￨8￨e JavaModelOperation￨8￨e .￨8￨e APPEND￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e }￨6￨s }￨5￨j needToUpdateDependents￨5￨e |=￨5￨e (￨5￨e changeKind￨5￨e ==￨5￨e (￨5￨e IClasspathEntry￨5￨e .￨5￨e CPE_SOURCE￨5￨e )￨5￨e )￨5￨e ||￨5￨e (￨5￨e newResolvedPath￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e isExported￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e hasDelta￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j hasDelta￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e addDelta￨4￨e (￨4￨e delta￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j needToUpdateDependents￨4￨c )￨3￨j {￨3￨j updateAffectedProjects￨4￨e (￨4￨e project￨4￨e .￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e getFullPath￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f JavaProject￨2￨f getProject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f getSourceAttachmentDeltaFlag￨2￨f (￨2￨f IPath￨3￨p oldPath￨3￨p ,￨3￨p IPath￨3￨p newPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isReadOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f saveClasspathIfNecessary￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateClasspath￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateAffectedProjects￨2￨f (￨2￨f IPath￨3￨p prerequisiteProjectPath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateCycleMarkersIfNecessary￨2￨f (￨2￨f IClasspathEntry￨3￨p [￨3￨p ]￨3￨p newResolvedPath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateOutputLocation￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateProjectReferencesIfNecessary￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaModelStatus￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BundleContextService￨1￨d implements￨1￨d Service￨1￨d <￨1￨d BundleContext￨1￨d >￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e SERVICE_NAME￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "osgi"￨2￨e ,￨2￨e "context"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.jboss.as.osgi"￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e BundleManager￨2￨e >￨2￨e injectedBundleManager￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e BundleManager￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e Framework￨2￨e >￨2￨e injectedFramework￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e Framework￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e BundleContext￨2￨e sysContext￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f addService￨2￨f (￨2￨f final￨3￨p ServiceTarget￨3￨p target￨3￨p ,￨3￨p Activation￨3￨p policy￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f BundleContext￨2￨f getServiceValue￨2￨f (￨2￨f ServiceContainer￨3￨p container￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨2￨f StartContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f StartException￨2￨f (￨2￨f )￨2￨f {￨2￨f sysContext￨3￨e =￨3￨e injectedFramework￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e .￨3￨e getBundleContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e BundleListener￨3￨f bundleListener￨3￨f =￨3￨f new￨3￨f BundleListener￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f bundleChanged￨4￨f (￨4￨f BundleEvent￨5￨p event￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c event￨6￨c .￨6￨c getType￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c BundleEvent￨6￨c .￨6￨c INSTALLED￨6￨c )￨6￨c )￨5￨j {￨5￨j AbstractUserBundle￨6￨e userBundle￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f userBundle￨7￨e =￨7￨e AbstractUserBundle￨7￨e .￨7￨e assertBundleState￨7￨e (￨7￨e event￨7￨e .￨7￨e getBundle￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f RuntimeException￨7￨p ex￨7￨p )￨6￨f {￨6￨f return￨7￨e ;￨7￨e }￨6￨f Deployment￨6￨e dep￨6￨e =￨6￨e userBundle￨6￨e .￨6￨e getDeployment￨6￨e (￨6￨e )￨6￨e ;￨6￨e String￨6￨e contextName￨6￨e =￨6￨e DeploymentHolderService￨6￨e .￨6￨e getContextName￨6￨e (￨6￨e dep￨6￨e )￨6￨e ;￨6￨e ServiceContainer￨6￨e container￨6￨e =￨6￨e context￨6￨e .￨6￨e getController￨6￨e (￨6￨e )￨6￨e .￨6￨e getServiceContainer￨6￨e (￨6￨e )￨6￨e ;￨6￨e ServiceName￨6￨e osgiDeploymentService￨6￨e =￨6￨e OSGiDeploymentService￨6￨e .￨6￨e getServiceName￨6￨e (￨6￨e contextName￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b ServiceName￨6￨b deploymentService￨6￨b =￨6￨b JBOSS_DEPLOYMENT￨6￨b .￨6￨b append￨6￨b (￨6￨b contextName￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b if￨6￨j (￨6￨j (￨7￨c (￨7￨c container￨7￨c .￨7￨c getService￨7￨c (￨7￨c deploymentService￨7￨c )￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c container￨7￨c .￨7￨c getService￨7￨c (￨7￨c osgiDeploymentService￨7￨c )￨7￨c )￨7￨c ==￨7￨c null￨7￨c )￨7￨c )￨6￨j {￨6￨j ServiceName￨7￨e serviceName￨7￨e =￨7￨e ModuleRegistrationService￨7￨e .￨7￨e getServiceName￨7￨e (￨7￨e contextName￨7￨e )￨7￨e ;￨7￨e try￨7￨f (￨7￨f )￨7￨f {￨7￨f BundleContextService￨8￨e .￨8￨e log￨8￨e .￨8￨e tracef￨8￨e (￨8￨e "Register<seq2seq4repair_space>service:<seq2seq4repair_space>%s"￨8￨e ,￨8￨e serviceName￨8￨e )￨8￨e ;￨8￨e BatchBuilder￨8￨e batchBuilder￨8￨e =￨8￨e container￨8￨e .￨8￨e batchBuilder￨8￨e (￨8￨e )￨8￨e ;￨8￨e ModuleRegistrationService￨8￨e .￨8￨e addService￨8￨e (￨8￨e batchBuilder￨8￨e ,￨8￨e dep￨8￨e ,￨8￨e contextName￨8￨e )￨8￨e ;￨8￨e batchBuilder￨8￨e .￨8￨e install￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨f catch￨7￨f (￨7￨f ServiceRegistryException￨8￨p ex￨8￨p )￨7￨f {￨7￨f throw￨8￨e new￨8￨e IllegalStateException￨8￨e (￨8￨e (￨8￨e "Cannot<seq2seq4repair_space>register<seq2seq4repair_space>service:<seq2seq4repair_space>"￨8￨e +￨8￨e serviceName￨8￨e )￨8￨e ,￨8￨e ex￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨j }￨5￨j }￨4￨f }￨3￨f ;￨3￨e sysContext￨3￨e .￨3￨e addBundleListener￨3￨e (￨3￨e bundleListener￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f stop￨2￨f (￨2￨f StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f BundleContext￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StreamThread￨1￨d extends￨1￨d Thread￨1￨d {￨1￨d InputStream￨2￨e is￨2￨e ;￨2￨e String￨2￨e type￨2￨e ;￨2￨e StringBuffer￨2￨e buf￨2￨e ;￨2￨e public￨2￨f StreamThread￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p String￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f InputStreamReader￨4￨e isr￨4￨e =￨4￨e new￨4￨e InputStreamReader￨4￨e (￨4￨e is￨4￨e )￨4￨e ;￨4￨e BufferedReader￨4￨e br￨4￨e =￨4￨e new￨4￨e BufferedReader￨4￨e (￨4￨e isr￨4￨e )￨4￨e ;￨4￨e String￨4￨e line￨4￨e =￨4￨e null￨4￨e ;￨4￨e while￨4￨l (￨4￨l (￨5￨c line￨5￨c =￨5￨c br￨5￨c .￨5￨c readLine￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨l {￨4￨l <START_BUG>￨5￨b log￨5￨b .￨5￨b debug￨5￨b (￨5￨b (￨5￨b (￨5￨b (￨5￨b type￨5￨b )￨5￨b +￨5￨b ">"￨5￨b )￨5￨b +￨5￨b line￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b buf￨5￨e .￨5￨e append￨5￨e (￨5￨e (￨5￨e line￨5￨e +￨5￨e "\n"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ioe￨4￨p )￨3￨f {￨3￨f ioe￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f String￨2￨f getBuffer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractPathService￨1￨d implements￨1￨d Service￨1￨d <￨1￨d String￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e SERVICE_NAME_BASE￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "server"￨2￨e ,￨2￨e "path"￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f ServiceName￨2￨f pathNameOf￨2￨f (￨2￨f String￨3￨p pathName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e String￨2￨e path￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f StartContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f StartException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b this￨3￨b .￨3￨b path￨3￨b =￨3￨b resolvePath￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f String￨2￨f resolvePath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Path￨1￨d extends￨1￨d Resource￨1￨d {￨1￨d public￨2￨e int￨2￨e handle￨2￨e ;￨2￨e PointF￨2￨e currentPoint￨2￨e =￨2￨e new￨2￨e PointF￨2￨e (￨2￨e )￨2￨e ;￨2￨e PointF￨2￨e startPoint￨2￨e =￨2￨e new￨2￨e PointF￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f Path￨2￨f (￨2￨f Device￨3￨p device￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addArc￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p ,￨3￨p float￨3￨p width￨3￨p ,￨3￨p float￨3￨p height￨3￨p ,￨3￨p float￨3￨p startAngle￨3￨p ,￨3￨p float￨3￨p arcAngle￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j isDisposed￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j SWT￨4￨e .￨4￨e error￨4￨e (￨4￨e ERROR_GRAPHIC_DISPOSED￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j width￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j x￨4￨e =￨4￨e x￨4￨e +￨4￨e width￨4￨e ;￨4￨e width￨4￨e =￨4￨e -￨4￨e width￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j height￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j y￨4￨e =￨4￨e y￨4￨e +￨4￨e height￨4￨e ;￨4￨e height￨4￨e =￨4￨e -￨4￨e height￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c width￨4￨c ==￨4￨c 0￨4￨c )￨4￨c ||￨4￨c (￨4￨c height￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c arcAngle￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j width￨4￨c ==￨4￨c height￨4￨c )￨3￨j {￨3￨j Gdip￨4￨e .￨4￨e GraphicsPath_AddArc￨4￨e (￨4￨e handle￨4￨e ,￨4￨e x￨4￨e ,￨4￨e y￨4￨e ,￨4￨e width￨4￨e ,￨4￨e height￨4￨e ,￨4￨e (￨4￨e -￨4￨e startAngle￨4￨e )￨4￨e ,￨4￨e (￨4￨e -￨4￨e arcAngle￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j int￨4￨e path￨4￨e =￨4￨e Gdip￨4￨e .￨4￨e GraphicsPath_new￨4￨e (￨4￨e FillModeAlternate￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j path￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j SWT￨5￨e .￨5￨e error￨5￨e (￨5￨e ERROR_NO_HANDLES￨5￨e )￨5￨e ;￨5￨e }￨4￨j int￨4￨e matrix￨4￨e =￨4￨e Gdip￨4￨e .￨4￨e Matrix_new￨4￨e (￨4￨e width￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e height￨4￨e ,￨4￨e x￨4￨e ,￨4￨e y￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j matrix￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j SWT￨5￨e .￨5￨e error￨5￨e (￨5￨e ERROR_NO_HANDLES￨5￨e )￨5￨e ;￨5￨e }￨4￨j Gdip￨4￨e .￨4￨e GraphicsPath_AddArc￨4￨e (￨4￨e path￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e 1￨4￨e ,￨4￨e 1￨4￨e ,￨4￨e (￨4￨e -￨4￨e startAngle￨4￨e )￨4￨e ,￨4￨e (￨4￨e -￨4￨e arcAngle￨4￨e )￨4￨e )￨4￨e ;￨4￨e Gdip￨4￨e .￨4￨e GraphicsPath_Transform￨4￨e (￨4￨e path￨4￨e ,￨4￨e matrix￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b Gdip￨4￨b .￨4￨b GraphicsPath_AddPath￨4￨b (￨4￨b handle￨4￨b ,￨4￨b path￨4￨b ,￨4￨b false￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Gdip￨4￨e .￨4￨e Matrix_delete￨4￨e (￨4￨e matrix￨4￨e )￨4￨e ;￨4￨e Gdip￨4￨e .￨4￨e GraphicsPath_delete￨4￨e (￨4￨e path￨4￨e )￨4￨e ;￨4￨e }￨3￨j Gdip￨3￨e .￨3￨e GraphicsPath_GetLastPoint￨3￨e (￨3￨e handle￨3￨e ,￨3￨e currentPoint￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f addPath￨2￨f (￨2￨f Path￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addRectangle￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p ,￨3￨p float￨3￨p width￨3￨p ,￨3￨p float￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addString￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p ,￨3￨p Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f contains￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p ,￨3￨p GC￨3￨p gc￨3￨p ,￨3￨p boolean￨3￨p outline￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cubicTo￨2￨f (￨2￨f float￨3￨p cx1￨3￨p ,￨3￨p float￨3￨p cy1￨3￨p ,￨3￨p float￨3￨p cx2￨3￨p ,￨3￨p float￨3￨p cy2￨3￨p ,￨3￨p float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f getBounds￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p bounds￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f getCurrentPoint￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p point￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PathData￨2￨f getPathData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f lineTo￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDisposed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f moveTo￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f quadTo￨2￨f (￨2￨f float￨3￨p cx￨3￨p ,￨3￨p float￨3￨p cy￨3￨p ,￨3￨p float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CodeSnippetClassFile￨1￨d extends￨1￨d ClassFile￨1￨d {￨1￨d public￨2￨f CodeSnippetClassFile￨2￨f (￨2￨f SourceTypeBinding￨3￨p aType￨3￨p ,￨3￨p ClassFile￨3￨p enclosingClassFile￨3￨p ,￨3￨p boolean￨3￨p creatingProblemType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f createProblemType￨2￨f (￨2￨f TypeDeclaration￨3￨p typeDeclaration￨3￨p ,￨3￨p CompilationResult￨3￨p unitResult￨3￨p )￨2￨f {￨2￨f SourceTypeBinding￨3￨e typeBinding￨3￨e =￨3￨e typeDeclaration￨3￨e .￨3￨e binding￨3￨e ;￨3￨e ClassFile￨3￨e classFile￨3￨e =￨3￨e new￨3￨e CodeSnippetClassFile￨3￨e (￨3￨e typeBinding￨3￨e ,￨3￨e null￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j typeBinding￨4￨c .￨4￨c isMemberType￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j classFile￨4￨e .￨4￨e recordEnclosingTypeAttributes￨4￨e (￨4￨e typeBinding￨4￨e )￨4￨e ;￨4￨e }￨3￨j FieldBinding￨3￨e [￨3￨e ]￨3￨e fields￨3￨e =￨3￨e typeBinding￨3￨e .￨3￨e fields￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c fields￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c fields￨4￨c !=￨4￨c (￨4￨c NoFields￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c fields￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b fields￨5￨b [￨5￨b i￨5￨b ]￨5￨b .￨5￨b constant￨5￨b )￨5￨b ==￨5￨b null￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b org￨5￨e .￨5￨e eclipse￨5￨e .￨5￨e jdt￨5￨e .￨5￨e internal￨5￨e .￨5￨e compiler￨5￨e .￨5￨e ast￨5￨e .￨5￨e FieldReference￨5￨e .￨5￨e getConstantFor￨5￨e (￨5￨e fields￨5￨e [￨5￨e i￨5￨e ]￨5￨e ,￨5￨e null￨5￨e ,￨5￨e false￨5￨e ,￨5￨e null￨5￨e )￨5￨e ;￨5￨e }￨4￨l classFile￨4￨e .￨4￨e addFieldInfos￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j classFile￨4￨e .￨4￨e contents￨4￨e [￨4￨e (￨4￨e (￨4￨e classFile￨4￨e .￨4￨e contentsOffset￨4￨e )￨4￨e ++￨4￨e )￨4￨e ]￨4￨e =￨4￨e 0￨4￨e ;￨4￨e classFile￨4￨e .￨4￨e contents￨4￨e [￨4￨e (￨4￨e (￨4￨e classFile￨4￨e .￨4￨e contentsOffset￨4￨e )￨4￨e ++￨4￨e )￨4￨e ]￨4￨e =￨4￨e 0￨4￨e ;￨4￨e }￨3￨j classFile￨3￨e .￨3￨e setForMethodInfos￨3￨e (￨3￨e )￨3￨e ;￨3￨e MethodBinding￨3￨e [￨3￨e ]￨3￨e methods￨3￨e =￨3￨e typeBinding￨3￨e .￨3￨e methods￨3￨e ;￨3￨e AbstractMethodDeclaration￨3￨e [￨3￨e ]￨3￨e methodDeclarations￨3￨e =￨3￨e typeDeclaration￨3￨e .￨3￨e methods￨3￨e ;￨3￨e int￨3￨e maxMethodDecl￨3￨e =￨3￨e (￨3￨e methodDeclarations￨3￨e ==￨3￨e null￨3￨e )￨3￨e ?￨3￨e 0￨3￨e :￨3￨e methodDeclarations￨3￨e .￨3￨e length￨3￨e ;￨3￨e int￨3￨e problemsLength￨3￨e ;￨3￨e IProblem￨3￨e [￨3￨e ]￨3￨e problems￨3￨e =￨3￨e unitResult￨3￨e .￨3￨e getErrors￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j problems￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j problems￨4￨e =￨4￨e new￨4￨e IProblem￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ;￨4￨e }￨3￨j IProblem￨3￨e [￨3￨e ]￨3￨e problemsCopy￨3￨e =￨3￨e new￨3￨e IProblem￨3￨e [￨3￨e problemsLength￨3￨e =￨3￨e problems￨3￨e .￨3￨e length￨3￨e ]￨3￨e ;￨3￨e System￨3￨e .￨3￨e arraycopy￨3￨e (￨3￨e problems￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e problemsCopy￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e problemsLength￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j methods￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j typeBinding￨5￨c .￨5￨c isInterface￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j classFile￨5￨e .￨5￨e addProblemClinit￨5￨e (￨5￨e problemsCopy￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c max￨6￨c =￨6￨c methods￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c max￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l MethodBinding￨6￨e methodBinding￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c methodBinding￨7￨c =￨7￨c methods￨7￨c [￨7￨c i￨7￨c ]￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c maxMethodDecl￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l if￨8￨j (￨8￨j (￨9￨c (￨9￨c methodDeclarations￨9￨c [￨9￨c j￨9￨c ]￨9￨c )￨9￨c !=￨9￨c null￨9￨c )￨9￨c &&￨9￨c (￨9￨c (￨9￨c methodDeclarations￨9￨c [￨9￨c j￨9￨c ]￨9￨c .￨9￨c binding￨9￨c )￨9￨c ==￨9￨c (￨9￨c methods￨9￨c [￨9￨c i￨9￨c ]￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j if￨9￨j (￨9￨j !￨10￨c (￨10￨c methodBinding￨10￨c .￨10￨c isConstructor￨10￨c (￨10￨c )￨10￨c )￨10￨c )￨9￨j {￨9￨j classFile￨10￨e .￨10￨e addAbstractMethod￨10￨e (￨10￨e methodDeclarations￨10￨e [￨10￨e j￨10￨e ]￨10￨e ,￨10￨e methodBinding￨10￨e )￨10￨e ;￨10￨e }￨9￨j break￨9￨e ;￨9￨e }￨8￨j }￨7￨l }￨6￨j }￨5￨l }￨4￨j else￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c max￨6￨c =￨6￨c methods￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c max￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l MethodBinding￨6￨e methodBinding￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c methodBinding￨7￨c =￨7￨c methods￨7￨c [￨7￨c i￨7￨c ]￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c maxMethodDecl￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l if￨8￨j (￨8￨j (￨9￨c (￨9￨c methodDeclarations￨9￨c [￨9￨c j￨9￨c ]￨9￨c )￨9￨c !=￨9￨c null￨9￨c )￨9￨c &&￨9￨c (￨9￨c (￨9￨c methodDeclarations￨9￨c [￨9￨c j￨9￨c ]￨9￨c .￨9￨c binding￨9￨c )￨9￨c ==￨9￨c (￨9￨c methods￨9￨c [￨9￨c i￨9￨c ]￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j AbstractMethodDeclaration￨9￨e methodDecl￨9￨e ;￨9￨e if￨9￨j (￨9￨j (￨10￨c methodDecl￨10￨c =￨10￨c methodDeclarations￨10￨c [￨10￨c j￨10￨c ]￨10￨c )￨10￨c .￨10￨c isConstructor￨10￨c (￨10￨c )￨10￨c )￨9￨j {￨9￨j classFile￨10￨e .￨10￨e addProblemConstructor￨10￨e (￨10￨e methodDecl￨10￨e ,￨10￨e methodBinding￨10￨e ,￨10￨e problemsCopy￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j {￨9￨j classFile￨10￨e .￨10￨e addProblemMethod￨10￨e (￨10￨e methodDecl￨10￨e ,￨10￨e methodBinding￨10￨e ,￨10￨e problemsCopy￨10￨e )￨10￨e ;￨10￨e }￨9￨j break￨9￨e ;￨9￨e }￨8￨j }￨7￨l }￨6￨j }￨5￨l }￨4￨j classFile￨4￨e .￨4￨e addDefaultAbstractMethods￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c typeDeclaration￨4￨c .￨4￨c memberTypes￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c typeDeclaration￨5￨c .￨5￨c memberTypes￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l TypeDeclaration￨5￨e memberType￨5￨e =￨5￨e typeDeclaration￨5￨e .￨5￨e memberTypes￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c memberType￨6￨c .￨6￨c binding￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j classFile￨6￨e .￨6￨e recordNestedMemberAttribute￨6￨e (￨6￨e memberType￨6￨e .￨6￨e binding￨6￨e )￨6￨e ;￨6￨e ClassFile￨6￨e .￨6￨e createProblemType￨6￨e (￨6￨e memberType￨6￨e ,￨6￨e unitResult￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j classFile￨3￨e .￨3￨e addAttributes￨3￨e (￨3￨e )￨3￨e ;￨3￨e unitResult￨3￨e .￨3￨e record￨3￨e (￨3￨e typeBinding￨3￨e .￨3￨e constantPoolName￨3￨e (￨3￨e )￨3￨e ,￨3￨e classFile￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CommandProvider￨1￨d extends￨1￨d QuickAccessProvider￨1￨d {￨1￨d private￨2￨e Map￨2￨e idToElement￨2￨e ;￨2￨e private￨2￨e IEvaluationContext￨2￨e contextSnapshot￨2￨e ;￨2￨e private￨2￨e HandlerService￨2￨e realHandlerService￨2￨e ;￨2￨e public￨2￨f CommandProvider￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f QuickAccessElement￨2￨f getElementForId￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f QuickAccessElement￨2￨f [￨2￨f ]￨2￨f getElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ImageDescriptor￨2￨f getImageDescriptor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveApplicationContext￨2￨f (￨2￨f )￨2￨f {￨2￨f realHandlerService￨3￨e =￨3￨e (￨3￨e (￨3￨e HandlerService￨3￨e )￨3￨e (￨3￨e PlatformUI￨3￨e .￨3￨e getWorkbench￨3￨e (￨3￨e )￨3￨e .￨3￨e getService￨3￨e (￨3￨e IHandlerService￨3￨e .￨3￨e class￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b contextSnapshot￨3￨b =￨3￨b realHandlerService￨3￨b .￨3￨b getContextSnapshot￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f HandlerService￨2￨f getRealHandlerService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f IEvaluationContext￨2￨f getContextSnapshot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d SelectionEngine￨1￨d extends￨1￨d Engine￨1￨d implements￨1￨d ISearchRequestor￨1￨d {￨1￨d public￨2￨e static￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e static￨2￨e boolean￨2￨e PERF￨2￨e =￨2￨e false￨2￨e ;￨2￨e SelectionParser￨2￨e parser￨2￨e ;￨2￨e ISelectionRequestor￨2￨e requestor￨2￨e ;￨2￨e boolean￨2￨e acceptedAnswer￨2￨e ;￨2￨e private￨2￨e int￨2￨e actualSelectionStart￨2￨e ;￨2￨e private￨2￨e int￨2￨e actualSelectionEnd￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e selectedIdentifier￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e acceptedClasses￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e acceptedClassesModifiers￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e acceptedInterfaces￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e acceptedInterfacesModifiers￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e acceptedEnums￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e acceptedEnumsModifiers￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e acceptedAnnotations￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e acceptedAnnotationsModifiers￨2￨e ;￨2￨e int￨2￨e acceptedClassesCount￨2￨e ;￨2￨e int￨2￨e acceptedInterfacesCount￨2￨e ;￨2￨e int￨2￨e acceptedEnumsCount￨2￨e ;￨2￨e int￨2￨e acceptedAnnotationsCount￨2￨e ;￨2￨e boolean￨2￨e noProposal￨2￨e =￨2￨e true￨2￨e ;￨2￨e CategorizedProblem￨2￨e problem￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f SelectionEngine￨2￨f (￨2￨f SearchableEnvironment￨3￨p nameEnvironment￨3￨p ,￨3￨p ISelectionRequestor￨3￨p requestor￨3￨p ,￨3￨p Map￨3￨p settings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f acceptType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p simpleTypeName￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p enclosingTypeNames￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p ,￨3￨p AccessRestriction￨3￨p accessRestriction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f acceptPackage￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f acceptQualifiedTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkSelection￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p source￨3￨p ,￨3￨p int￨3￨p selectionStart￨3￨p ,￨3￨p int￨3￨p selectionEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkTypeArgument￨2￨f (￨2￨f Scanner￨2￨f scanner￨2￨f )￨2￨f throws￨2￨f InvalidInputException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AssistParser￨2￨f getParser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isLocal￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f ICompilationUnit￨3￨p sourceUnit￨3￨p ,￨3￨p int￨3￨p selectionSourceStart￨3￨p ,￨3￨p int￨3￨p selectionSourceEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectMemberTypeFromImport￨2￨f (￨2￨f CompilationUnitDeclaration￨3￨p parsedUnit￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p lastToken￨3￨p ,￨3￨p ReferenceBinding￨3￨p ref￨3￨p ,￨3￨p boolean￨3￨p staticOnly￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectStaticFieldFromStaticImport￨2￨f (￨2￨f CompilationUnitDeclaration￨3￨p parsedUnit￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p lastToken￨3￨p ,￨3￨p ReferenceBinding￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectStaticMethodFromStaticImport￨2￨f (￨2￨f CompilationUnitDeclaration￨3￨p parsedUnit￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p lastToken￨3￨p ,￨3￨p ReferenceBinding￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectFrom￨2￨f (￨2￨f Binding￨3￨p binding￨3￨p ,￨3￨p CompilationUnitDeclaration￨3￨p parsedUnit￨3￨p ,￨3￨p boolean￨3￨p isDeclaration￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectLocalDeclaration￨2￨f (￨2￨f ASTNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectType￨2￨f (￨2￨f ISourceType￨3￨p sourceType￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p typeName￨3￨p ,￨3￨p SourceTypeElementInfo￨3￨p [￨3￨p ]￨3￨p topLevelTypes￨3￨p ,￨3￨p boolean￨3￨p searchInEnvironment￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f selectDeclaration￨2￨f (￨2￨f CompilationUnitDeclaration￨3￨p compilationUnit￨3￨p )￨2￨f {￨2￨f char￨3￨e [￨3￨e ]￨3￨e assistIdentifier￨3￨e =￨3￨e this￨3￨e .￨3￨e getParser￨3￨e (￨3￨e )￨3￨e .￨3￨e assistIdentifier￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j assistIdentifier￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j ImportReference￨3￨e currentPackage￨3￨e =￨3￨e compilationUnit￨3￨e .￨3￨e currentPackage￨3￨e ;￨3￨e <START_BUG>￨3￨b char￨3￨b [￨3￨b ]￨3￨b packageName￨3￨b =￨3￨b (￨3￨b currentPackage￨3￨b ==￨3￨b null￨3￨b )￨3￨b ?￨3￨b new￨3￨b char￨3￨b [￨3￨b 0￨3￨b ]￨3￨b :￨3￨b CharOperation￨3￨b .￨3￨b concatWith￨3￨b (￨3￨b currentPackage￨3￨b .￨3￨b tokens￨3￨b ,￨3￨b '.'￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b TypeDeclaration￨3￨e [￨3￨e ]￨3￨e types￨3￨e =￨3￨e compilationUnit￨3￨e .￨3￨e types￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c length￨4￨c =￨4￨c (￨4￨c types￨4￨c ==￨4￨c null￨4￨c )￨4￨c ?￨4￨c 0￨4￨c :￨4￨c types￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c length￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j selectDeclaration￨5￨c (￨5￨c types￨5￨c [￨5￨c i￨5￨c ]￨5￨c ,￨5￨c assistIdentifier￨5￨c ,￨5￨c packageName￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e true￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e false￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f selectDeclaration￨2￨f (￨2￨f TypeDeclaration￨3￨p typeDeclaration￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p assistIdentifier￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d AllTests￨1￨d {￨1￨d private￨2￨e static￨2￨e transient￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f AllTests￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f logprop￨2￨f (￨2￨f String￨3￨p prop￨3￨p ,￨3￨p boolean￨3￨p show￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f logprop￨2￨f (￨2￨f String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c args￨4￨c .￨4￨c length￨4￨c )￨4￨c <￨4￨c 1￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>comma-delimited<seq2seq4repair_space>list<seq2seq4repair_space>of<seq2seq4repair_space>paths<seq2seq4repair_space>to<seq2seq4repair_space>search<seq2seq4repair_space>"￨4￨e +￨4￨e "for<seq2seq4repair_space>unit<seq2seq4repair_space>tests"￨4￨e )￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e exit￨4￨e (￨4￨e 0￨4￨e )￨4￨e ;￨4￨e }￨3￨j AllTests￨3￨e .￨3￨e initializeLogging￨3￨e (￨3￨e args￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e initializeManager￨3￨e (￨3￨e args￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.version"￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.vendor"￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.home"￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "user.home"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b AllTests￨3￨b .￨3￨b logprop￨3￨b (￨3￨b "user.dir"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "os.name"￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "os.version"￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "os.arch"￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.class.version"￨3￨e )￨3￨e ;￨3￨e String￨3￨e cp￨3￨e =￨3￨e System￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "java.class.path"￨3￨e )￨3￨e ;￨3￨e String￨3￨e [￨3￨e ]￨3￨e cpe￨3￨e =￨3￨e JOrphanUtils￨3￨e .￨3￨e split￨3￨e (￨3￨e cp￨3￨e ,￨3￨e File￨3￨e .￨3￨e pathSeparator￨3￨e )￨3￨e ;￨3￨e StringBuffer￨3￨e sb￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e 3000￨3￨e )￨3￨e ;￨3￨e sb￨3￨e .￨3￨e append￨3￨e (￨3￨e "java.class.path="￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c cpe￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l sb￨4￨e .￨4￨e append￨4￨e (￨4￨e "\n"￨4￨e )￨4￨e ;￨4￨e sb￨4￨e .￨4￨e append￨4￨e (￨4￨e cpe￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j new￨5￨c File￨5￨c (￨5￨c cpe￨5￨c [￨5￨c i￨5￨c ]￨5￨c )￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>-<seq2seq4repair_space>OK"￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>-<seq2seq4repair_space>??"￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l AllTests￨3￨e .￨3￨e log￨3￨e .￨3￨e info￨3￨e (￨3￨e sb￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "+++++++++++"￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.awt.headless"￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e AllTests￨3￨e .￨3￨e logprop￨3￨e (￨3￨e "java.awt.graphicsenv"￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "------------"￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "Creating<seq2seq4repair_space>test<seq2seq4repair_space>suite"￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e suite￨3￨e =￨3￨e AllTests￨3￨e .￨3￨e suite￨3￨e (￨3￨e args￨3￨e [￨3￨e 0￨3￨e ]￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "Starting<seq2seq4repair_space>test<seq2seq4repair_space>run"￨3￨e )￨3￨e ;￨3￨e TestRunner￨3￨e .￨3￨e run￨3￨e (￨3￨e suite￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "+++++++++++"￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e out￨3￨e .￨3￨e println￨3￨e (￨3￨e "------------"￨3￨e )￨3￨e ;￨3￨e System￨3￨e .￨3￨e exit￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f static￨2￨f void￨2￨f initializeLogging￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f initializeManager￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f TestSuite￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f TestSuite￨2￨f suite￨2￨f (￨2￨f String￨3￨p searchPaths￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AttachmentController￨1￨d implements￨1￨d KeyListener￨1￨d {￨1￨d AttachmentView￨2￨e view￨2￨e ;￨2￨e ComposerController￨2￨e controller￨2￨e ;￨2￨e AttachmentActionListener￨2￨e actionListener￨2￨e ;￨2￨e AttachmentMenu￨2￨e menu￨2￨e ;￨2￨e private￨2￨e JFileChooser￨2￨e fileChooser￨2￨e ;￨2￨e public￨2￨f AttachmentController￨2￨f (￨2￨f ComposerController￨3￨p controller￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ActionListener￨2￨f getActionListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f installListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateComponents￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f MimePart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelected￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFileAttachment￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e returnValue￨3￨e ;￨3￨e File￨3￨e [￨3￨e ]￨3￨e files￨3￨e ;￨3￨e <START_BUG>￨3￨b fileChooser￨3￨b .￨3￨b setDialogTitle￨3￨b (￨3￨b MailResourceLoader￨3￨b .￨3￨b getString￨3￨b (￨3￨b "menu"￨3￨b ,￨3￨b "mainframe"￨3￨b ,￨3￨b "composer_attach_file"￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b fileChooser￨3￨e .￨3￨e setFileSelectionMode￨3￨e (￨3￨e JFileChooser￨3￨e .￨3￨e FILES_ONLY￨3￨e )￨3￨e ;￨3￨e fileChooser￨3￨e .￨3￨e setMultiSelectionEnabled￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e returnValue￨3￨e =￨3￨e fileChooser￨3￨e .￨3￨e showOpenDialog￨3￨e (￨3￨e view￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j returnValue￨4￨c ==￨4￨c (￨4￨c JFileChooser￨4￨c .￨4￨c APPROVE_OPTION￨4￨c )￨4￨c )￨3￨j {￨3￨j files￨4￨e =￨4￨e fileChooser￨4￨e .￨4￨e getSelectedFiles￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c files￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l File￨5￨e file￨5￨e =￨5￨e files￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e FileNameMap￨5￨e fileNameMap￨5￨e =￨5￨e URLConnection￨5￨e .￨5￨e getFileNameMap￨5￨e (￨5￨e )￨5￨e ;￨5￨e String￨5￨e mimetype￨5￨e =￨5￨e fileNameMap￨5￨e .￨5￨e getContentTypeFor￨5￨e (￨5￨e file￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j mimetype￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j mimetype￨6￨e =￨6￨e "application/octet-stream"￨6￨e ;￨6￨e }￨5￨j MimeHeader￨5￨e header￨5￨e =￨5￨e new￨5￨e MimeHeader￨5￨e (￨5￨e mimetype￨5￨e .￨5￨e substring￨5￨e (￨5￨e 0￨5￨e ,￨5￨e mimetype￨5￨e .￨5￨e indexOf￨5￨e (￨5￨e '/'￨5￨e )￨5￨e )￨5￨e ,￨5￨e mimetype￨5￨e .￨5￨e substring￨5￨e (￨5￨e (￨5￨e (￨5￨e mimetype￨5￨e .￨5￨e indexOf￨5￨e (￨5￨e '/'￨5￨e )￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e ComposerAttachment￨5￨e mimePart￨5￨e =￨5￨e new￨5￨e ComposerAttachment￨5￨e (￨5￨e header￨5￨e ,￨5￨e file￨5￨e )￨5￨e ;￨5￨e view￨5￨e .￨5￨e add￨5￨e (￨5￨e mimePart￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j }￨2￨f public￨2￨f void￨2￨f keyPressed￨2￨f (￨2￨f KeyEvent￨3￨p k￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f keyReleased￨2￨f (￨2￨f KeyEvent￨3￨p k￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f keyTyped￨2￨f (￨2￨f KeyEvent￨3￨p k￨3￨p )￨2￨f {￨2￨f }￨2￨f class￨2￨d PopupListener￨2￨d extends￨2￨d MouseAdapter￨2￨d {￨2￨d public￨3￨f void￨3￨f mousePressed￨3￨f (￨3￨f MouseEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f mouseReleased￨3￨f (￨3￨f MouseEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f maybeShowPopup￨3￨f (￨3￨f MouseEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d final￨1￨d class￨1￨d LocalizedResource￨1￨d implements￨1￨d PrivilegedAction￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e boolean￨2￨e SUPPORTS_BIG_DECIMAL_CALLS￨2￨e ;￨2￨e private￨2￨e ResourceBundle￨2￨e res￨2￨e ;￨2￨e private￨2￨e Locale￨2￨e locale￨2￨e ;￨2￨e private￨2￨e String￨2￨e encode￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e MESSAGE_FILE￨2￨e =￨2￨e "org.apache.derby.loc.toolsmessages"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ENV_CODESET￨2￨e =￨2￨e "derby.ui.codeset"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ENV_LOCALE￨2￨e =￨2￨e "derby.ui.locale"￨2￨e ;￨2￨e private￨2￨e String￨2￨e messageFileName￨2￨e ;￨2￨e private￨2￨e String￨2￨e resourceKey￨2￨e ;￨2￨e private￨2￨e LocalizedOutput￨2￨e out￨2￨e ;￨2￨e private￨2￨e LocalizedInput￨2￨e in￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e enableLocalized￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e unicodeEscape￨2￨e ;￨2￨e private￨2￨e static￨2￨e LocalizedResource￨2￨e local￨2￨e ;￨2￨e private￨2￨e int￨2￨e dateSize￨2￨e ;￨2￨e private￨2￨e int￨2￨e timeSize￨2￨e ;￨2￨e private￨2￨e int￨2￨e timestampSize￨2￨e ;￨2￨e private￨2￨e DateFormat￨2￨e formatDate￨2￨e ;￨2￨e private￨2￨e DateFormat￨2￨e formatTime￨2￨e ;￨2￨e private￨2￨e DateFormat￨2￨e formatTimestamp￨2￨e ;￨2￨e private￨2￨e NumberFormat￨2￨e formatNumber￨2￨e ;￨2￨e private￨2￨e DecimalFormat￨2￨e formatDecimal￨2￨e ;￨2￨e public￨2￨f LocalizedResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalizedResource￨2￨f (￨2￨f String￨3￨p encStr￨3￨p ,￨3￨p String￨3￨p locStr￨3￨p ,￨3￨p String￨3￨p msgF￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f LocalizedResource￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f String￨3￨p encStr￨3￨p ,￨3￨p String￨3￨p locStr￨3￨p ,￨3￨p String￨3￨p msgF￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setResource￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c res￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c locale￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c locale￨4￨c .￨4￨c toString￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c "none"￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b res￨4￨b =￨4￨b ResourceBundle￨4￨b .￨4￨b getBundle￨4￨b (￨4￨b LocalizedResource￨4￨b .￨4￨b MESSAGE_FILE￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j else￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f res￨5￨e =￨5￨e ResourceBundle￨5￨e .￨5￨e getBundle￨5￨e (￨5￨e messageFileName￨5￨e ,￨5￨e locale￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j }￨3￨f catch￨3￨f (￨3￨f MissingResourceException￨4￨p e￨4￨p )￨3￨f {￨3￨f res￨4￨e =￨4￨e ResourceBundle￨4￨e .￨4￨e getBundle￨4￨e (￨4￨e messageFileName￨4￨e ,￨4￨e Locale￨4￨e .￨4￨e ENGLISH￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f void￨2￨f initMaxSizes2￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalizedInput￨2￨f getNewInput￨2￨f (￨2￨f InputStream￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalizedInput￨2￨f getNewEncodedInput￨2￨f (￨2￨f InputStream￨3￨p i￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalizedOutput￨2￨f getNewOutput￨2￨f (￨2￨f OutputStream￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalizedOutput￨2￨f getNewEncodedOutput￨2￨f (￨2￨f OutputStream￨2￨f o￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p ,￨3￨p Object￨3￨p o3￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p ,￨3￨p Object￨3￨p o3￨3￨p ,￨3￨p Object￨3￨p o4￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Locale￨2￨f getNewLocale￨2￨f (￨2￨f String￨3￨p locStr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTextMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p objectArr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLocalizedString￨2￨f (￨2￨f ResultSet￨2￨f rs￨2￨f ,￨2￨f ResultSetMetaData￨2￨f rsm￨2￨f ,￨2￨f int￨2￨f columnNumber￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDateAsString￨2￨f (￨2￨f Date￨3￨p d￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTimeAsString￨2￨f (￨2￨f Date￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNumberAsString￨2￨f (￨2￨f int￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNumberAsString￨2￨f (￨2￨f long￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNumberAsString￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNumberAsString￨2￨f (￨2￨f double￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTimestampAsString￨2￨f (￨2￨f Timestamp￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getColumnDisplaySize￨2￨f (￨2￨f ResultSetMetaData￨2￨f rsm￨2￨f ,￨2￨f int￨2￨f columnNumber￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStringFromDate￨2￨f (￨2￨f String￨2￨f dateStr￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStringFromTime￨2￨f (￨2￨f String￨2￨f timeStr￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStringFromValue￨2￨f (￨2￨f String￨2￨f val￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStringFromTimestamp￨2￨f (￨2￨f String￨2￨f timestampStr￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Locale￨2￨f getLocale￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f synchronized￨2￨f String￨2￨f getEnvProperty￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Object￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f enableLocalization￨2￨f (￨2￨f boolean￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLocalized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p ,￨3￨p Object￨3￨p o3￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getMessage￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Object￨3￨p o1￨3￨p ,￨3￨p Object￨3￨p o2￨3￨p ,￨3￨p Object￨3￨p o3￨3￨p ,￨3￨p Object￨3￨p o4￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f LocalizedOutput￨2￨f OutputWriter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f LocalizedInput￨2￨f InputReader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getNumber￨2￨f (￨2￨f long￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getNumber￨2￨f (￨2￨f int￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f setUnicodeEscape￨2￨f (￨2￨f boolean￨3￨p u￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f getUnicodeEscape￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Page￨1￨d extends￨1￨d MarkupContainer￨1￨d implements￨1￨d IRedirectListener￨1￨d {￨1￨d protected￨2￨e static￨2￨e final￨2￨e boolean￨2￨e ACCESS_ALLOWED￨2￨e =￨2￨e true￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e boolean￨2￨e ACCESS_DENIED￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Log￨2￨d log￨2￨d =￨2￨d LogFactory￨2￨d .￨2￨d getLog￨2￨d (￨2￨d Page￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d int￨2￨d autoIndex￨2￨d ;￨2￨d private￨2￨d transient￨2￨d int￨2￨d changeCount￨2￨d ;￨2￨d private￨2￨d IFeedback￨2￨d feedback￨2￨d ;￨2￨d private￨2￨d FeedbackMessages￨2￨d feedbackMessages￨2￨d ;￨2￨d private￨2￨d int￨2￨d id￨2￨d =￨2￨d -￨2￨d 1￨2￨d ;￨2￨d private￨2￨d transient￨2￨d Set￨2￨d renderedComponents￨2￨d ;￨2￨d private￨2￨d transient￨2￨d Session￨2￨d session￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d trackChanges￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d IPageVersionManager￨2￨d versionManager￨2￨d ;￨2￨d protected￨2￨d Page￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f Page￨2￨f (￨2￨f final￨3￨p IModel￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAutoIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f getCurrentVersionNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FeedbackMessages￨2￨f getFeedbackMessages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f getId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Session￨2￨f getSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Page￨2￨f getVersion￨2￨f (￨2￨f final￨3￨p int￨3￨p versionNumber￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageState￨2￨f newPageState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f onRedirect￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b getRequestCycle￨3￨b (￨3￨b )￨3￨b .￨3￨b setPage￨3￨b (￨3￨b this￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f final￨2￨f void￨2￨f removePersistedFormData￨2￨f (￨2￨f final￨3￨p Class￨3￨p formClass￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p disablePersistence￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFeedback￨2￨f (￨2￨f final￨3￨p IFeedback￨3￨p feedback￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f checkAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f configureResponse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IModel￨2￨f initModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalOnModelChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IPageVersionManager￨2￨f newVersionManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onEndRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f onRender￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f componentAdded￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f componentModelChangeImpending￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f componentRemoved￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f componentRendered￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f internalOnBeginRender￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f internalOnEndRender￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f internalOnEndRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f resetMarkupStreams￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f setId￨2￨f (￨2￨f final￨3￨p int￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f checkRendering￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f onChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestUmlNamespace￨1￨d extends￨1￨d GenericObjectTestFixture￨1￨d {￨1￨d public￨2￨f TestUmlNamespace￨2￨f (￨2￨f String￨3￨p arg0￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testNamespace￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b Object￨3￨b o￨3￨b =￨3￨b getFactory￨3￨b (￨3￨b )￨3￨b .￨3￨b create￨3￨b (￨3￨b NAMESPACE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertNotNull￨3￨e (￨3￨e "Didn't<seq2seq4repair_space>create<seq2seq4repair_space>object"￨3￨e ,￨3￨e o￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>base"￨3￨e ,￨3￨e ModelFacade￨3￨e .￨3￨e isABase￨3￨e (￨3￨e o￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>namespace"￨3￨e ,￨3￨e ModelFacade￨3￨e .￨3￨e isANamespace￨3￨e (￨3￨e o￨3￨e )￨3￨e )￨3￨e ;￨3￨e runTruthTests￨3￨e (￨3￨e o￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f initializeTruth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d TermScorer￨1￨d extends￨1￨d Scorer￨1￨d {￨1￨d private￨2￨e Weight￨2￨e weight￨2￨e ;￨2￨e private￨2￨e DocsEnum￨2￨e docsEnum￨2￨e ;￨2￨e private￨2￨e byte￨2￨e [￨2￨e ]￨2￨e norms￨2￨e ;￨2￨e private￨2￨e float￨2￨e weightValue￨2￨e ;￨2￨e private￨2￨e int￨2￨e doc￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e int￨2￨e freq￨2￨e ;￨2￨e private￨2￨e int￨2￨e pointer￨2￨e ;￨2￨e private￨2￨e int￨2￨e pointerMax￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e SCORE_CACHE_SIZE￨2￨e =￨2￨e 32￨2￨e ;￨2￨e private￨2￨e float￨2￨e [￨2￨e ]￨2￨e scoreCache￨2￨e =￨2￨e new￨2￨e float￨2￨e [￨2￨e TermScorer￨2￨e .￨2￨e SCORE_CACHE_SIZE￨2￨e ]￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e docs￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e freqs￨2￨e ;￨2￨e private￨2￨e final￨2￨e BulkReadResult￨2￨e bulkResult￨2￨e ;￨2￨e TermScorer￨2￨f (￨2￨f Weight￨3￨p weight￨3￨p ,￨3￨p DocsEnum￨3￨p td￨3￨p ,￨3￨p Similarity￨3￨p similarity￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p norms￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f score￨2￨f (￨2￨f Collector￨2￨f c￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f refillBuffer￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f boolean￨2￨f score￨2￨f (￨2￨f Collector￨2￨f c￨2￨f ,￨2￨f int￨2￨f end￨2￨f ,￨2￨f int￨2￨f firstDocID￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f docID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f nextDoc￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f float￨2￨f score￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f advance￨2￨f (￨2￨f int￨2￨f target￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f for￨3￨l (￨3￨l (￨4￨c pointer￨4￨c )￨4￨c ++￨4￨c ;￨4￨c (￨4￨c pointer￨4￨c )￨4￨c <￨4￨c (￨4￨c pointerMax￨4￨c )￨4￨c ;￨4￨c (￨4￨c pointer￨4￨c )￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c docs￨5￨c [￨5￨c pointer￨5￨c ]￨5￨c )￨5￨c >=￨5￨c target￨5￨c )￨4￨j {￨4￨j freq￨5￨e =￨5￨e freqs￨5￨e [￨5￨e pointer￨5￨e ]￨5￨e ;￨5￨e return￨5￨e doc￨5￨e =￨5￨e docs￨5￨e [￨5￨e pointer￨5￨e ]￨5￨e ;￨5￨e }￨4￨j }￨3￨l int￨3￨e newDoc￨3￨e =￨3￨e docsEnum￨3￨e .￨3￨e advance￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b newDoc￨3￨b !=￨3￨b (￨3￨b DocsEnum￨3￨b .￨3￨b NO_MORE_DOCS￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b doc￨3￨e =￨3￨e newDoc￨3￨e ;￨3￨e freq￨3￨e =￨3￨e docsEnum￨3￨e .￨3￨e freq￨3￨e (￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j doc￨4￨e =￨4￨e NO_MORE_DOCS￨4￨e ;￨4￨e }￨3￨j return￨3￨e doc￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d LocalShowHistoryHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e OperationStepHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e LocalShowHistoryHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f context￨3￨e .￨3￨e acquireControllerLock￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e InstallationManager￨3￨e installationManager￨3￨e =￨3￨e (￨3￨e (￨3￨e InstallationManager￨3￨e )￨3￨e (￨3￨e context￨3￨e .￨3￨e getServiceRegistry￨3￨e (￨3￨e false￨3￨e )￨3￨e .￨3￨e getRequiredService￨3￨e (￨3￨e NAME￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e PatchableTarget￨4￨e .￨4￨e TargetInfo￨4￨e info￨4￨e =￨4￨e installationManager￨4￨e .￨4￨e getIdentity￨4￨e (￨4￨e )￨4￨e .￨4￨e loadTargetInfo￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e InstalledImage￨4￨e installedImage￨4￨e =￨4￨e info￨4￨e .￨4￨e getDirectoryStructure￨4￨e (￨4￨e )￨4￨e .￨4￨e getInstalledImage￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e ModelNode￨4￨e result￨4￨e =￨4￨e new￨4￨e ModelNode￨4￨e (￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e setEmptyList￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e String￨4￨e releaseID￨4￨e =￨4￨e info￨4￨e .￨4￨e getCumulativePatchID￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c Constants￨5￨c .￨5￨c BASE￨5￨c .￨5￨c equals￨5￨c (￨5￨c releaseID￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j fillHistory￨5￨e (￨5￨e result￨5￨e ,￨5￨e CUMULATIVE￨5￨e ,￨5￨e releaseID￨5￨e ,￨5￨e installedImage￨5￨e .￨5￨e getPatchHistoryDir￨5￨e (￨5￨e releaseID￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j final￨4￨e List￨4￨e <￨4￨e String￨4￨e >￨4￨e oneOffPatchIDs￨4￨e =￨4￨e info￨4￨e .￨4￨e getPatchIDs￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c oneOffPatchID￨5￨c :￨5￨c oneOffPatchIDs￨5￨c )￨4￨l {￨4￨l File￨5￨e historyDir￨5￨e =￨5￨e installedImage￨5￨e .￨5￨e getPatchHistoryDir￨5￨e (￨5￨e oneOffPatchID￨5￨e )￨5￨e ;￨5￨e fillHistory￨5￨e (￨5￨e result￨5￨e ,￨5￨e ONE_OFF￨5￨e ,￨5￨e oneOffPatchID￨5￨e ,￨5￨e historyDir￨5￨e )￨5￨e ;￨5￨e }￨4￨l context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e result￨4￨e )￨4￨e ;￨4￨e context￨4￨e .￨4￨e stepCompleted￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b t￨4￨b .￨4￨b printStackTrace￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b throw￨4￨e MESSAGES￨4￨e .￨4￨e failedToShowHistory￨4￨e (￨4￨e t￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f void￨2￨f fillHistory￨2￨f (￨2￨f ModelNode￨2￨f result￨2￨f ,￨2￨f PatchType￨2￨f type￨2￨f ,￨2￨f String￨2￨f oneOffPatchID￨2￨f ,￨2￨f File￨2￨f historyDir￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeItem￨1￨d extends￨1￨d Item￨1￨d {￨1￨d Tree￨2￨e parent￨2￨e ;￨2￨e TreeItem￨2￨e parentItem￨2￨e ;￨2￨e TreeItem￨2￨e [￨2￨e ]￨2￨e items￨2￨e ;￨2￨e int￨2￨e itemCount￨2￨e ;￨2￨e String￨2￨e [￨2￨e ]￨2￨e strings￨2￨e ;￨2￨e Image￨2￨e [￨2￨e ]￨2￨e images￨2￨e ;￨2￨e boolean￨2￨e checked￨2￨e ;￨2￨e boolean￨2￨e grayed￨2￨e ;￨2￨e boolean￨2￨e cached￨2￨e ;￨2￨e Color￨2￨e foreground￨2￨e ;￨2￨e Color￨2￨e background￨2￨e ;￨2￨e Color￨2￨e [￨2￨e ]￨2￨e cellForeground￨2￨e ;￨2￨e Color￨2￨e [￨2￨e ]￨2￨e cellBackground￨2￨e ;￨2￨e Font￨2￨e font￨2￨e ;￨2￨e Font￨2￨e [￨2￨e ]￨2￨e cellFont￨2￨e ;￨2￨e int￨2￨e width￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e SWTTreeItem￨2￨e handle￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e IMAGETEXT_MARGIN￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨f TreeItem￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f (￨2￨f TreeItem￨3￨p parentItem￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f (￨2￨f TreeItem￨3￨p parentItem￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f TreeItem￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p TreeItem￨3￨p parentItem￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p boolean￨3￨p create￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f TreeItem￨2￨f checkNull￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Tree￨2￨f checkNull￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkIndex￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f calculateWidth￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p GC￨3￨p gc￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearAll￨2￨f (￨2￨f boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f NSObject￨2￨f createString￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getBackground￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getChecked￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getExpanded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Font￨2￨f getFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Font￨2￨f getFont￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getForeground￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getGrayed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getImage￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getImageBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getItem￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f [￨2￨f ]￨2￨f getItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getNameText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tree￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getParentItem￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getTextBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f redraw￨2￨f (￨2￨f int￨3￨p columnIndex￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b parent￨3￨b .￨3￨b ignoreRedraw￨3￨b )￨3￨b ||￨3￨b (￨3￨b (￨3￨b parent￨3￨b .￨3￨b drawCount￨3￨b )￨3￨b !=￨3￨b 0￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e NSOutlineView￨3￨e outlineView￨3￨e =￨3￨e (￨3￨e (￨3￨e NSOutlineView￨3￨e )￨3￨e (￨3￨e parent￨3￨e .￨3￨e view￨3￨e )￨3￨e )￨3￨e ;￨3￨e NSRect￨3￨e rect￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c (￨4￨c columnIndex￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c parent￨4￨c .￨4￨c hooks￨4￨c (￨4￨c MeasureItem￨4￨c )￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c parent￨4￨c .￨4￨c hooks￨4￨c (￨4￨c EraseItem￨4￨c )￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c parent￨4￨c .￨4￨c hooks￨4￨c (￨4￨c PaintItem￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j rect￨4￨e =￨4￨e outlineView￨4￨e .￨4￨e rectOfRow￨4￨e (￨4￨e outlineView￨4￨e .￨4￨e rowForItem￨4￨e (￨4￨e handle￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j int￨4￨e index￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c parent￨5￨c .￨5￨c columnCount￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j index￨5￨e =￨5￨e (￨5￨e (￨5￨e (￨5￨e parent￨5￨e .￨5￨e style￨5￨e )￨5￨e &￨5￨e (￨5￨e SWT￨5￨e .￨5￨e CHECK￨5￨e )￨5￨e )￨5￨e !=￨5￨e 0￨5￨e )￨5￨e ?￨5￨e 1￨5￨e :￨5￨e 0￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j TreeColumn￨5￨e column￨5￨e =￨5￨e parent￨5￨e .￨5￨e getColumn￨5￨e (￨5￨e columnIndex￨5￨e )￨5￨e ;￨5￨e index￨5￨e =￨5￨e (￨5￨e (￨5￨e int￨5￨e )￨5￨e (￨5￨e outlineView￨5￨e .￨5￨e columnWithIdentifier￨5￨e (￨5￨e column￨5￨e .￨5￨e nsColumn￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j rect￨4￨e =￨4￨e outlineView￨4￨e .￨4￨e frameOfCellAtColumn￨4￨e (￨4￨e index￨4￨e ,￨4￨e outlineView￨4￨e .￨4￨e rowForItem￨4￨e (￨4￨e handle￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j outlineView￨3￨e .￨3￨e setNeedsDisplayInRect￨3￨e (￨3￨e rect￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f release￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setChecked￨2￨f (￨2￨f boolean￨3￨p checked￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpanded￨2￨f (￨2￨f boolean￨3￨p expanded￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setGrayed￨2￨f (￨2￨f boolean￨3￨p grayed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p [￨3￨p ]￨3￨p images￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setItemCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p strings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d RawMarkup￨1￨d extends￨1￨d MarkupElement￨1￨d {￨1￨d private￨2￨e final￨2￨e CharSequence￨2￨e string￨2￨e ;￨2￨e public￨2￨f RawMarkup￨2￨f (￨2￨f final￨3￨p CharSequence￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f final￨3￨p Object￨3￨p o￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b o￨3￨b instanceof￨3￨b String￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e string￨3￨e .￨3￨e equals￨3￨e (￨3￨e o￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j o￨4￨c instanceof￨4￨c RawMarkup￨4￨c )￨3￨j {￨3￨j return￨4￨e string￨4￨e .￨4￨e equals￨4￨e (￨4￨e (￨4￨e (￨4￨e RawMarkup￨4￨e )￨4￨e (￨4￨e o￨4￨e )￨4￨e )￨4￨e .￨4￨e string￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e false￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equalTo￨2￨f (￨2￨f final￨3￨p MarkupElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f CharSequence￨2￨f toCharSequence￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toUserDebugString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PersistenceContextInjectionSource￨1￨d extends￨1￨d InjectionSource￨1￨d {￨1￨d private￨2￨e final￨2￨e PersistenceContextType￨2￨e type￨2￨e ;￨2￨e private￨2￨e final￨2￨e PersistenceContextInjectionSource￨2￨e .￨2￨e PersistenceContextJndiInjectable￨2￨e injectable￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServiceName￨2￨e puServiceName￨2￨e ;￨2￨e public￨2￨f PersistenceContextInjectionSource￨2￨f (￨2￨f final￨3￨p PersistenceContextType￨3￨p type￨3￨p ,￨3￨p final￨3￨p SynchronizationType￨3￨p synchronizationType￨3￨p ,￨3￨p final￨3￨p Map￨3￨p properties￨3￨p ,￨3￨p final￨3￨p ServiceName￨3￨p puServiceName￨3￨p ,￨3￨p final￨3￨p ServiceRegistry￨3￨p serviceRegistry￨3￨p ,￨3￨p final￨3￨p String￨3￨p scopedPuName￨3￨p ,￨3￨p final￨3￨p String￨3￨p injectionTypeName￨3￨p ,￨3￨p final￨3￨p PersistenceUnitMetadata￨3￨p pu￨3￨p ,￨3￨p final￨3￨p JPADeploymentSettings￨3￨p jpaDeploymentSettings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f getResourceValue￨2￨f (￨2￨f final￨2￨f ResolutionContext￨2￨f resolutionContext￨2￨f ,￨2￨f final￨2￨f ServiceBuilder￨2￨f <￨2￨f ?￨2￨f >￨2￨f serviceBuilder￨2￨f ,￨2￨f final￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f ,￨2￨f final￨2￨f Injector￨2￨f <￨2￨f ManagedReferenceFactory￨2￨f >￨2￨f injector￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d final￨2￨d class￨2￨d PersistenceContextJndiInjectable￨2￨d implements￨2￨d ManagedReferenceFactory￨2￨d {￨2￨d private￨3￨e final￨3￨e ServiceName￨3￨e puServiceName￨3￨e ;￨3￨e private￨3￨e final￨3￨e ServiceRegistry￨3￨e serviceRegistry￨3￨e ;￨3￨e private￨3￨e final￨3￨e PersistenceContextType￨3￨e type￨3￨e ;￨3￨e private￨3￨e final￨3￨e SynchronizationType￨3￨e synchronizationType￨3￨e ;￨3￨e private￨3￨e final￨3￨e Map￨3￨e properties￨3￨e ;￨3￨e private￨3￨e final￨3￨e String￨3￨e unitName￨3￨e ;￨3￨e private￨3￨e final￨3￨e String￨3￨e injectionTypeName￨3￨e ;￨3￨e private￨3￨e final￨3￨e PersistenceUnitMetadata￨3￨e pu￨3￨e ;￨3￨e private￨3￨e final￨3￨e JPADeploymentSettings￨3￨e jpaDeploymentSettings￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e ENTITY_MANAGER_CLASS￨3￨e =￨3￨e "javax.persistence.EntityManager"￨3￨e ;￨3￨e public￨3￨f PersistenceContextJndiInjectable￨3￨f (￨3￨f final￨4￨p ServiceName￨4￨p puServiceName￨4￨p ,￨4￨p final￨4￨p ServiceRegistry￨4￨p serviceRegistry￨4￨p ,￨4￨p final￨4￨p PersistenceContextType￨4￨p type￨4￨p ,￨4￨p SynchronizationType￨4￨p synchronizationType￨4￨p ,￨4￨p final￨4￨p Map￨4￨p properties￨4￨p ,￨4￨p final￨4￨p String￨4￨p unitName￨4￨p ,￨4￨p final￨4￨p String￨4￨p injectionTypeName￨4￨p ,￨4￨p final￨4￨p PersistenceUnitMetadata￨4￨p pu￨4￨p ,￨4￨p final￨4￨p JPADeploymentSettings￨4￨p jpaDeploymentSettings￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f ManagedReference￨3￨f getReference￨3￨f (￨3￨f )￨3￨f {￨3￨f PersistenceUnitServiceImpl￨4￨e service￨4￨e =￨4￨e (￨4￨e (￨4￨e PersistenceUnitServiceImpl￨4￨e )￨4￨e (￨4￨e serviceRegistry￨4￨e .￨4￨e getRequiredService￨4￨e (￨4￨e puServiceName￨4￨e )￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e EntityManagerFactory￨4￨e emf￨4￨e =￨4￨e service￨4￨e .￨4￨e getEntityManagerFactory￨4￨e (￨4￨e )￨4￨e ;￨4￨e EntityManager￨4￨e entityManager￨4￨e ;￨4￨e boolean￨4￨e standardEntityManager￨4￨e =￨4￨e PersistenceContextInjectionSource￨4￨e .￨4￨e PersistenceContextJndiInjectable￨4￨e .￨4￨e ENTITY_MANAGER_CLASS￨4￨e .￨4￨e equals￨4￨e (￨4￨e injectionTypeName￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j type￨5￨c .￨5￨c equals￨5￨c (￨5￨c TRANSACTION￨5￨c )￨5￨c )￨4￨j {￨4￨j entityManager￨5￨e =￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e jpa￨5￨e .￨5￨e container￨5￨e .￨5￨e TransactionScopedEntityManager￨5￨e (￨5￨e unitName￨5￨e ,￨5￨e properties￨5￨e ,￨5￨e emf￨5￨e ,￨5￨e synchronizationType￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j JPA_LOGGER￨6￨c .￨6￨c isDebugEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j JPA_LOGGER￨6￨e .￨6￨e debugf￨6￨e (￨6￨e "created<seq2seq4repair_space>new<seq2seq4repair_space>TransactionScopedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s"￨6￨e ,￨6￨e unitName￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j boolean￨5￨e useDeepInheritance￨5￨e =￨5￨e !￨5￨e (￨5￨e SHALLOW￨5￨e .￨5￨e equals￨5￨e (￨5￨e JPAService￨5￨e .￨5￨e getDefaultExtendedPersistenceInheritance￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c jpaDeploymentSettings￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j useDeepInheritance￨6￨e =￨6￨e DEEP￨6￨e .￨6￨e equals￨6￨e (￨6￨e jpaDeploymentSettings￨6￨e .￨6￨e getExtendedPersistenceInheritanceType￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j boolean￨5￨e createdNewExtendedPersistence￨5￨e =￨5￨e false￨5￨e ;￨5￨e ExtendedEntityManager￨5￨e entityManager1￨5￨e ;￨5￨e if￨5￨j (￨5￨j useDeepInheritance￨6￨c )￨5￨j {￨5￨j entityManager1￨6￨e =￨6￨e INSTANCE￨6￨e .￨6￨e findExtendedPersistenceContext￨6￨e (￨6￨e unitName￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j entityManager1￨6￨e =￨6￨e ExtendedPersistenceShallowInheritance￨6￨e .￨6￨e INSTANCE￨6￨e .￨6￨e findExtendedPersistenceContext￨6￨e (￨6￨e unitName￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j entityManager1￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b entityManager1￨6￨b =￨6￨b new￨6￨b ExtendedEntityManager￨6￨b (￨6￨b unitName￨6￨b ,￨6￨b emf￨6￨b .￨6￨b createEntityManager￨6￨b (￨6￨b properties￨6￨b )￨6￨b ,￨6￨b synchronizationType￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b createdNewExtendedPersistence￨6￨e =￨6￨e true￨6￨e ;￨6￨e if￨6￨j (￨6￨j JPA_LOGGER￨7￨c .￨7￨c isDebugEnabled￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j JPA_LOGGER￨7￨e .￨7￨e debugf￨7￨e (￨7￨e "created<seq2seq4repair_space>new<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨7￨e ,￨7￨e unitName￨7￨e ,￨7￨e useDeepInheritance￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j entityManager1￨6￨e .￨6￨e increaseReferenceCount￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j JPA_LOGGER￨7￨c .￨7￨c isDebugEnabled￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j JPA_LOGGER￨7￨e .￨7￨e debugf￨7￨e (￨7￨e (￨7￨e "inherited<seq2seq4repair_space>existing<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>from<seq2seq4repair_space>SFSB<seq2seq4repair_space>invocation<seq2seq4repair_space>stack,<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>"￨7￨e +￨7￨e "%d<seq2seq4repair_space>beans<seq2seq4repair_space>sharing<seq2seq4repair_space>ExtendedEntityManager,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨7￨e )￨7￨e ,￨7￨e unitName￨7￨e ,￨7￨e entityManager1￨7￨e .￨7￨e getReferenceCount￨7￨e (￨7￨e )￨7￨e ,￨7￨e useDeepInheritance￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j entityManager￨5￨e =￨5￨e entityManager1￨5￨e ;￨5￨e CreatedEntityManagers￨5￨e .￨5￨e registerPersistenceContext￨5￨e (￨5￨e entityManager1￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j createdNewExtendedPersistence￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j useDeepInheritance￨7￨c )￨6￨j {￨6￨j INSTANCE￨7￨e .￨7￨e registerExtendedPersistenceContext￨7￨e (￨7￨e unitName￨7￨e ,￨7￨e entityManager1￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j ExtendedPersistenceShallowInheritance￨7￨e .￨7￨e INSTANCE￨7￨e .￨7￨e registerExtendedPersistenceContext￨7￨e (￨7￨e unitName￨7￨e ,￨7￨e entityManager1￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j if￨4￨j (￨4￨j !￨5￨c standardEntityManager￨5￨c )￨4￨j {￨4￨j Class￨5￨e extensionClass￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f extensionClass￨6￨e =￨6￨e pu￨6￨e .￨6￨e getClassLoader￨6￨e (￨6￨e )￨6￨e .￨6￨e loadClass￨6￨e (￨6￨e injectionTypeName￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ClassNotFoundException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e MESSAGES￨6￨e .￨6￨e cannotLoadFromJpa￨6￨e (￨6￨e e￨6￨e ,￨6￨e injectionTypeName￨6￨e )￨6￨e ;￨6￨e }￨5￨f Object￨5￨e targetValueToInject￨5￨e =￨5￨e entityManager￨5￨e .￨5￨e unwrap￨5￨e (￨5￨e extensionClass￨5￨e )￨5￨e ;￨5￨e Class￨5￨e [￨5￨e ]￨5￨e targetInterfaces￨5￨e =￨5￨e targetValueToInject￨5￨e .￨5￨e getClass￨5￨e (￨5￨e )￨5￨e .￨5￨e getInterfaces￨5￨e (￨5￨e )￨5￨e ;￨5￨e Class￨5￨e [￨5￨e ]￨5￨e proxyInterfaces￨5￨e =￨5￨e new￨5￨e Class￨5￨e [￨5￨e (￨5￨e targetInterfaces￨5￨e .￨5￨e length￨5￨e )￨5￨e +￨5￨e 1￨5￨e ]￨5￨e ;￨5￨e boolean￨5￨e alreadyHasInterfaceClass￨5￨e =￨5￨e false￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c interfaceIndex￨6￨c =￨6￨c 0￨6￨c ;￨6￨c interfaceIndex￨6￨c <￨6￨c (￨6￨c targetInterfaces￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c interfaceIndex￨6￨c ++￨6￨c )￨5￨l {￨5￨l Class￨6￨e interfaceClass￨6￨e =￨6￨e targetInterfaces￨6￨e [￨6￨e interfaceIndex￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j interfaceClass￨7￨c .￨7￨c equals￨7￨c (￨7￨c extensionClass￨7￨c )￨7￨c )￨6￨j {￨6￨j proxyInterfaces￨7￨e =￨7￨e targetInterfaces￨7￨e ;￨7￨e alreadyHasInterfaceClass￨7￨e =￨7￨e true￨7￨e ;￨7￨e break￨7￨e ;￨7￨e }￨6￨j proxyInterfaces￨6￨e [￨6￨e (￨6￨e 1￨6￨e +￨6￨e interfaceIndex￨6￨e )￨6￨e ]￨6￨e =￨6￨e interfaceClass￨6￨e ;￨6￨e }￨5￨l if￨5￨j (￨5￨j !￨6￨c alreadyHasInterfaceClass￨6￨c )￨5￨j {￨5￨j proxyInterfaces￨6￨e [￨6￨e 0￨6￨e ]￨6￨e =￨6￨e extensionClass￨6￨e ;￨6￨e }￨5￨j EntityManagerUnwrappedTargetInvocationHandler￨5￨e entityManagerUnwrappedTargetInvocationHandler￨5￨e =￨5￨e new￨5￨e EntityManagerUnwrappedTargetInvocationHandler￨5￨e (￨5￨e entityManager￨5￨e ,￨5￨e extensionClass￨5￨e )￨5￨e ;￨5￨e Object￨5￨e proxyForUnwrappedObject￨5￨e =￨5￨e Proxy￨5￨e .￨5￨e newProxyInstance￨5￨e (￨5￨e extensionClass￨5￨e .￨5￨e getClassLoader￨5￨e (￨5￨e )￨5￨e ,￨5￨e proxyInterfaces￨5￨e ,￨5￨e entityManagerUnwrappedTargetInvocationHandler￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j JPA_LOGGER￨6￨c .￨6￨c isDebugEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j JPA_LOGGER￨6￨e .￨6￨e debugf￨6￨e (￨6￨e "injecting<seq2seq4repair_space>entity<seq2seq4repair_space>manager<seq2seq4repair_space>into<seq2seq4repair_space>a<seq2seq4repair_space>'%s'<seq2seq4repair_space>(unit<seq2seq4repair_space>name=%s)"￨6￨e ,￨6￨e extensionClass￨6￨e .￨6￨e getName￨6￨e (￨6￨e )￨6￨e ,￨6￨e unitName￨6￨e )￨6￨e ;￨6￨e }￨5￨j return￨5￨e new￨5￨e ValueManagedReference￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e msc￨5￨e .￨5￨e value￨5￨e .￨5￨e ImmediateValue￨5￨e <￨5￨e Object￨5￨e >￨5￨e (￨5￨e proxyForUnwrappedObject￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e new￨4￨e ValueManagedReference￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e msc￨4￨e .￨4￨e value￨4￨e .￨4￨e ImmediateValue￨4￨e <￨4￨e Object￨4￨e >￨4￨e (￨4￨e entityManager￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TestPlanGui￨1￨d extends￨1￨d AbstractJMeterGuiComponent￨1￨d {￨1￨d private￨2￨e JCheckBox￨2￨e functionalMode￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e serializedMode￨2￨e ;￨2￨e private￨2￨e ArgumentsPanel￨2￨e argsPanel￨2￨e ;￨2￨e public￨2￨f TestPlanGui￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JPopupMenu￨2￨f createPopupMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyTestElement￨2￨f (￨2￨f TestElement￨3￨p plan￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStaticLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b JMeterUtils￨3￨b .￨3￨b getResString￨3￨b (￨3￨b "Test<seq2seq4repair_space>Plan"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Collection￨2￨f getMenuCategories￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f configure￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createVariablePanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PackageMapper￨1￨d extends￨1￨d AbstractBookmarkableMapper￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e mountPath￨2￨e ;￨2￨e private￨2￨e final￨2￨e PackageName￨2￨e packageName￨2￨e ;￨2￨e private￨2￨e final￨2￨e IPageParametersEncoder￨2￨e pageParametersEncoder￨2￨e ;￨2￨e public￨2￨f PackageMapper￨2￨f (￨2￨f final￨3￨p String￨3￨p mountPath￨3￨p ,￨3￨p final￨3￨p PackageName￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PackageMapper￨2￨f (￨2￨f final￨3￨p String￨3￨p mountPath￨3￨p ,￨3￨p final￨3￨p PackageName￨3￨p packageName￨3￨p ,￨3￨p final￨3￨p IPageParametersEncoder￨3￨p pageParametersEncoder￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Url￨2￨f buildUrl￨2￨f (￨2￨f UrlInfo￨3￨p info￨3￨p )￨2￨f {￨2￨f Class￨3￨e <￨3￨e ?￨3￨e extends￨3￨e IRequestablePage￨3￨e >￨3￨e pageClass￨3￨e =￨3￨e info￨3￨e .￨3￨e getPageClass￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b pageClass￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b .￨3￨b startsWith￨3￨b (￨3￨b packageName￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b Url￨3￨e url￨3￨e =￨3￨e new￨3￨e Url￨3￨e (￨3￨e )￨3￨e ;￨3￨e url￨3￨e .￨3￨e getSegments￨3￨e (￨3￨e )￨3￨e .￨3￨e add￨3￨e (￨3￨e mountPath￨3￨e )￨3￨e ;￨3￨e url￨3￨e .￨3￨e getSegments￨3￨e (￨3￨e )￨3￨e .￨3￨e add￨3￨e (￨3￨e pageClass￨3￨e .￨3￨e getSimpleName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e encodePageComponentInfo￨3￨e (￨3￨e url￨3￨e ,￨3￨e info￨3￨e .￨3￨e getPageComponentInfo￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e encodePageParameters￨3￨e (￨3￨e url￨3￨e ,￨3￨e info￨3￨e .￨3￨e getPageParameters￨3￨e (￨3￨e )￨3￨e ,￨3￨e pageParametersEncoder￨3￨e )￨3￨e ;￨3￨e }￨3￨e return￨3￨e null￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f UrlInfo￨2￨f parseRequest￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f boolean￨2￨f pageMustHaveBeenCreatedBookmarkable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f getCompatibilityScore￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d ResourceRefTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d ResourceRefTestCase￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d @￨2￨d Deployment￨2￨d public￨2￨d static￨2￨d Archive￨2￨d <￨2￨d ?￨2￨d >￨2￨d deployment￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testCorrectBinding￨2￨f (￨2￨f )￨2￨f throws￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testInjection￨2￨f (￨2￨f )￨2￨f throws￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testResourceRefEntriesWithoutResType￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testResourceEnvRefWithoutInjectionTarget￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f test2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f ResUrlChecker￨3￨e bean￨3￨e =￨3￨e (￨3￨e (￨3￨e ResUrlChecker￨3￨e )￨3￨e (￨3￨e new￨3￨e InitialContext￨3￨e (￨3￨e )￨3￨e .￨3￨e lookup￨3￨e (￨3￨e "java:app/resource-ref-test/ResUrlCheckerBean"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b URL￨3￨b expected￨3￨b =￨3￨b new￨3￨b URL￨3￨b (￨3￨b "http://localhost/url2"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b URL￨3￨e actual￨3￨e =￨3￨e bean￨3￨e .￨3￨e getURL2￨3￨e (￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e expected￨3￨e ,￨3￨e actual￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Gcj￨1￨d extends￨1￨d DefaultCompilerAdapter￨1￨d {￨1￨d public￨2￨f boolean￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupGCJCommand￨2￨f (￨2￨f )￨2￨f {￨2￨f Commandline￨3￨e cmd￨3￨e =￨3￨e new￨3￨e Commandline￨3￨e (￨3￨e )￨3￨e ;￨3￨e Path￨3￨e classpath￨3￨e =￨3￨e new￨3￨e Path￨3￨e (￨3￨e project￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c bootclasspath￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j classpath￨4￨e .￨4￨e append￨4￨e (￨4￨e bootclasspath￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b addExtdirsToClasspath￨3￨b (￨3￨b classpath￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c (￨4￨c bootclasspath￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c bootclasspath￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j includeJavaRuntime￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j classpath￨3￨e .￨3￨e append￨3￨e (￨3￨e getCompileClasspath￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e classpath￨3￨e .￨3￨e append￨3￨e (￨3￨e src￨3￨e )￨3￨e ;￨3￨e cmd￨3￨e .￨3￨e setExecutable￨3￨e (￨3￨e "gcj"￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c destDir￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j cmd￨4￨e .￨4￨e createArgument￨4￨e (￨4￨e )￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "-d"￨4￨e )￨4￨e ;￨4￨e cmd￨4￨e .￨4￨e createArgument￨4￨e (￨4￨e )￨4￨e .￨4￨e setFile￨4￨e (￨4￨e destDir￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j destDir￨5￨c .￨5￨c mkdirs￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e BuildException￨5￨e (￨5￨e "Can't<seq2seq4repair_space>make<seq2seq4repair_space>output<seq2seq4repair_space>directories.<seq2seq4repair_space>Maybe<seq2seq4repair_space>permission<seq2seq4repair_space>is<seq2seq4repair_space>wrong.<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j cmd￨3￨e .￨3￨e createArgument￨3￨e (￨3￨e )￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "-classpath"￨3￨e )￨3￨e ;￨3￨e cmd￨3￨e .￨3￨e createArgument￨3￨e (￨3￨e )￨3￨e .￨3￨e setPath￨3￨e (￨3￨e classpath￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c encoding￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j cmd￨4￨e .￨4￨e createArgument￨4￨e (￨4￨e )￨4￨e .￨4￨e setValue￨4￨e (￨4￨e (￨4￨e "--encoding="￨4￨e +￨4￨e (￨4￨e encoding￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j debug￨4￨c )￨3￨j {￨3￨j cmd￨4￨e .￨4￨e createArgument￨4￨e (￨4￨e )￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "-g1"￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j optimize￨4￨c )￨3￨j {￨3￨j cmd￨4￨e .￨4￨e createArgument￨4￨e (￨4￨e )￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "-O"￨4￨e )￨4￨e ;￨4￨e }￨3￨j cmd￨3￨e .￨3￨e createArgument￨3￨e (￨3￨e )￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "-C"￨3￨e )￨3￨e ;￨3￨e addCurrentCompilerArgs￨3￨e (￨3￨e cmd￨3￨e )￨3￨e ;￨3￨e return￨3￨e cmd￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PerformanceTest￨1￨d {￨1￨d private￨2￨e final￨2￨e int￨2￨e max￨2￨e =￨2￨e 10￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e File￨2￨e BIG_FILE￨2￨e =￨2￨e new￨2￨e File￨2￨e (￨2￨e System￨2￨e .￨2￨e getProperty￨2￨e (￨2￨e "java.io.tmpdir"￨2￨e )￨2￨e ,￨2￨e "worldcitiespop.txt"￨2￨e )￨2￨e ;￨2￨e @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f setUpClass￨2￨f (￨2￨f )￨2￨f throws￨2￨f FileNotFoundException￨2￨f ,￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f BufferedReader￨2￨f getBufferedReader￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f parse￨2￨f (￨2￨f final￨2￨f Reader￨2￨f in￨2￨f ,￨2￨f boolean￨2￨f traverseColumns￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b CSVFormat￨3￨b format￨3￨b =￨3￨b CSVFormat￨3￨b .￨3￨b defaults￨3￨b (￨3￨b )￨3￨b .￨3￨b withIgnoreSurroundingSpaces￨3￨b (￨3￨b false￨3￨b )￨3￨b .￨3￨b build￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b long￨3￨e recordCount￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c CSVRecord￨4￨c record￨4￨c :￨4￨c format￨4￨c .￨4￨c parse￨4￨c (￨4￨c in￨4￨c )￨4￨c )￨3￨l {￨3￨l recordCount￨4￨e ++￨4￨e ;￨4￨e if￨4￨j (￨4￨j traverseColumns￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l String￨6￨c value￨6￨c :￨6￨c record￨6￨c )￨5￨l {￨5￨l }￨5￨l }￨4￨j }￨3￨l return￨3￨e recordCount￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f println￨2￨f (￨2￨f final￨3￨p String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f readAll￨2￨f (￨2￨f final￨2￨f BufferedReader￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f testParseBigFile￨2￨f (￨2￨f boolean￨2￨f traverseColumns￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testParseBigFileRepeat￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testReadBigFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EqualExpression￨1￨d extends￨1￨d BinaryExpression￨1￨d {￨1￨d public￨2￨f EqualExpression￨2￨f (￨2￨f Expression￨3￨p left￨3￨p ,￨3￨p Expression￨3￨p right￨3￨p ,￨3￨p int￨3￨p operator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f areTypesCastCompatible￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f computeConstant￨2￨f (￨2￨f TypeBinding￨3￨p leftType￨3￨p ,￨3￨p TypeBinding￨3￨p rightType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedBoolean￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Label￨3￨p trueLabel￨3￨p ,￨3￨p Label￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedBooleanEqual￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Label￨3￨p trueLabel￨3￨p ,￨3￨p Label￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedNonBooleanEqual￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Label￨3￨p trueLabel￨3￨p ,￨3￨p Label￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCompactableOperation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f boolean￨3￨e argsContainCast￨3￨e =￨3￨e false￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c left￨4￨c )￨4￨c instanceof￨4￨c CastExpression￨4￨c )￨3￨j {￨3￨j left￨4￨e .￨4￨e bits￨4￨e |=￨4￨e IgnoreNeedForCastCheckMASK￨4￨e ;￨4￨e argsContainCast￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j TypeBinding￨3￨e leftType￨3￨e =￨3￨e left￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c right￨4￨c )￨4￨c instanceof￨4￨c CastExpression￨4￨c )￨3￨j {￨3￨j right￨4￨e .￨4￨e bits￨4￨e |=￨4￨e IgnoreNeedForCastCheckMASK￨4￨e ;￨4￨e argsContainCast￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j TypeBinding￨3￨e rightType￨3￨e =￨3￨e right￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c leftType￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c rightType￨4￨c ==￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c leftType￨4￨c .￨4￨c isBaseType￨4￨c (￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c rightType￨4￨c .￨4￨c isBaseType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b int￨4￨b operatorSignature￨4￨b =￨4￨b ResolveTypeTables￨4￨b [￨4￨b OperatorIds￨4￨b .￨4￨b EQUAL_EQUAL￨4￨b ]￨4￨b [￨4￨b (￨4￨b (￨4￨b (￨4￨b leftType￨4￨b .￨4￨b id￨4￨b )￨4￨b <<￨4￨b 4￨4￨b )￨4￨b +￨4￨b (￨4￨b rightType￨4￨b .￨4￨b id￨4￨b )￨4￨b )￨4￨b ]￨4￨b ;￨4￨b <END_BUG>￨4￨b left￨4￨e .￨4￨e implicitConversion￨4￨e =￨4￨e operatorSignature￨4￨e >￨4￨e >￨4￨e >￨4￨e 12￨4￨e ;￨4￨e right￨4￨e .￨4￨e implicitConversion￨4￨e =￨4￨e (￨4￨e operatorSignature￨4￨e >￨4￨e >￨4￨e >￨4￨e 4￨4￨e )￨4￨e &￨4￨e 255￨4￨e ;￨4￨e bits￨4￨e |=￨4￨e operatorSignature￨4￨e &￨4￨e 15￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c operatorSignature￨5￨c &￨5￨c 15￨5￨c )￨5￨c ==￨5￨c (￨5￨c TypeIds￨5￨c .￨5￨c T_undefined￨5￨c )￨5￨c )￨4￨j {￨4￨j constant￨5￨e =￨5￨e Constant￨5￨e .￨5￨e NotAConstant￨5￨e ;￨5￨e scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e invalidOperator￨5￨e (￨5￨e this￨5￨e ,￨5￨e leftType￨5￨e ,￨5￨e rightType￨5￨e )￨5￨e ;￨5￨e return￨5￨e null￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j argsContainCast￨5￨c )￨4￨j {￨4￨j CastExpression￨5￨e .￨5￨e checkNeedForArgumentCasts￨5￨e (￨5￨e scope￨5￨e ,￨5￨e OperatorIds￨5￨e .￨5￨e EQUAL_EQUAL￨5￨e ,￨5￨e operatorSignature￨5￨e ,￨5￨e left￨5￨e ,￨5￨e leftType￨5￨e .￨5￨e id￨5￨e ,￨5￨e right￨5￨e ,￨5￨e rightType￨5￨e .￨5￨e id￨5￨e )￨5￨e ;￨5￨e }￨4￨j computeConstant￨4￨e (￨4￨e leftType￨4￨e ,￨4￨e rightType￨4￨e )￨4￨e ;￨4￨e return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e BooleanBinding￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c areTypesCastCompatible￨4￨c (￨4￨c scope￨4￨c ,￨4￨c rightType￨4￨c ,￨4￨c leftType￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c areTypesCastCompatible￨4￨c (￨4￨c scope￨4￨c ,￨4￨c leftType￨4￨c ,￨4￨c rightType￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c rightType￨5￨c .￨5￨c id￨5￨c )￨5￨c ==￨5￨c (￨5￨c T_String￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c leftType￨5￨c .￨5￨c id￨5￨c )￨5￨c ==￨5￨c (￨5￨c T_String￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j computeConstant￨5￨e (￨5￨e leftType￨5￨e ,￨5￨e rightType￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j constant￨5￨e =￨5￨e NotAConstant￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c rightType￨5￨c .￨5￨c id￨5￨c )￨5￨c ==￨5￨c (￨5￨c T_String￨5￨c )￨5￨c )￨4￨j {￨4￨j right￨5￨e .￨5￨e implicitConversion￨5￨e =￨5￨e TypeIds￨5￨e .￨5￨e String2String￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c leftType￨5￨c .￨5￨c id￨5￨c )￨5￨c ==￨5￨c (￨5￨c T_String￨5￨c )￨5￨c )￨4￨j {￨4￨j left￨5￨e .￨5￨e implicitConversion￨5￨e =￨5￨e TypeIds￨5￨e .￨5￨e String2String￨5￨e ;￨5￨e }￨4￨j boolean￨4￨e unnecessaryLeftCast￨4￨e =￨4￨e (￨4￨e (￨4￨e left￨4￨e .￨4￨e bits￨4￨e )￨4￨e &￨4￨e (￨4￨e UnnecessaryCastMask￨4￨e )￨4￨e )￨4￨e !=￨4￨e 0￨4￨e ;￨4￨e boolean￨4￨e unnecessaryRightCast￨4￨e =￨4￨e (￨4￨e (￨4￨e right￨4￨e .￨4￨e bits￨4￨e )￨4￨e &￨4￨e (￨4￨e UnnecessaryCastMask￨4￨e )￨4￨e )￨4￨e !=￨4￨e 0￨4￨e ;￨4￨e if￨4￨j (￨4￨j unnecessaryLeftCast￨5￨c ||￨5￨c unnecessaryRightCast￨5￨c )￨4￨j {￨4￨j TypeBinding￨5￨e alternateLeftType￨5￨e =￨5￨e (￨5￨e unnecessaryLeftCast￨5￨e )￨5￨e ?￨5￨e (￨5￨e (￨5￨e CastExpression￨5￨e )￨5￨e (￨5￨e left￨5￨e )￨5￨e )￨5￨e .￨5￨e expression￨5￨e .￨5￨e resolvedType￨5￨e :￨5￨e leftType￨5￨e ;￨5￨e TypeBinding￨5￨e alternateRightType￨5￨e =￨5￨e (￨5￨e unnecessaryRightCast￨5￨e )￨5￨e ?￨5￨e (￨5￨e (￨5￨e CastExpression￨5￨e )￨5￨e (￨5￨e right￨5￨e )￨5￨e )￨5￨e .￨5￨e expression￨5￨e .￨5￨e resolvedType￨5￨e :￨5￨e rightType￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c areTypesCastCompatible￨6￨c (￨6￨c scope￨6￨c ,￨6￨c alternateLeftType￨6￨c ,￨6￨c alternateRightType￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c areTypesCastCompatible￨6￨c (￨6￨c scope￨6￨c ,￨6￨c alternateRightType￨6￨c ,￨6￨c alternateLeftType￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j unnecessaryLeftCast￨7￨c )￨6￨j {￨6￨j scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e unnecessaryCast￨7￨e (￨7￨e (￨7￨e (￨7￨e CastExpression￨7￨e )￨7￨e (￨7￨e left￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j unnecessaryRightCast￨7￨c )￨6￨j {￨6￨j scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e unnecessaryCast￨7￨e (￨7￨e (￨7￨e (￨7￨e CastExpression￨7￨e )￨7￨e (￨7￨e right￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e BooleanBinding￨4￨e ;￨4￨e }￨3￨j constant￨3￨e =￨3￨e NotAConstant￨3￨e ;￨3￨e scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e notCompatibleTypesError￨3￨e (￨3￨e this￨3￨e ,￨3￨e leftType￨3￨e ,￨3￨e rightType￨3￨e )￨3￨e ;￨3￨e return￨3￨e null￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d DefaultFailureDetailView￨1￨d implements￨1￨d FailureDetailView￨1￨d {￨1￨d JTextArea￨2￨e fTextArea￨2￨e ;￨2￨e public￨2￨f Component￨2￨f getComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showFailure￨2￨f (￨2￨f TestFailure￨3￨p failure￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b fTextArea￨3￨b .￨3￨b setText￨3￨b (￨3￨b BaseTestRunner￨3￨b .￨3￨b getFilteredTrace￨3￨b (￨3￨b failure￨3￨b .￨3￨b thrownException￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b fTextArea￨3￨e .￨3￨e select￨3￨e (￨3￨e 0￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DatabaseTimerPersistence￨1￨d implements￨1￨d TimerPersistence￨1￨d ,￨1￨d Service￨1￨d <￨1￨d DatabaseTimerPersistence￨1￨d >￨1￨d {￨1￨d private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e ManagedReferenceFactory￨2￨e >￨2￨e dataSourceInjectedValue￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e ManagedReferenceFactory￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e ModuleLoader￨2￨e >￨2￨e moduleLoader￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e ModuleLoader￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e name￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e database￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e partition￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e ManagedReference￨2￨e managedReference￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e DataSource￨2￨e dataSource￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e Properties￨2￨e sql￨2￨e ;￨2￨e private￨2￨e MarshallerFactory￨2￨e factory￨2￨e ;￨2￨e private￨2￨e MarshallingConfiguration￨2￨e configuration￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CREATE_TABLE￨2￨e =￨2￨e "create-table"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CREATE_TIMER￨2￨e =￨2￨e "create-timer"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e UPDATE_TIMER￨2￨e =￨2￨e "update-timer"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e LOAD_ALL_TIMERS￨2￨e =￨2￨e "load-all-timers"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e LOAD_TIMER￨2￨e =￨2￨e "load-timer"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e DELETE_TIMER￨2￨e =￨2￨e "delete-timer"￨2￨e ;￨2￨e public￨2￨f DatabaseTimerPersistence￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p String￨3￨p database￨3￨p ,￨3￨p String￨3￨p partition￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨2￨f StartContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f StartException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f final￨3￨p StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f runCreateTable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f sql￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f addTimer￨2￨f (￨2￨f final￨3￨p TimerImpl￨3￨p timerEntity￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f persistTimer￨2￨f (￨2￨f final￨3￨p TimerImpl￨3￨p timerEntity￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f timerUndeployed￨2￨f (￨2￨f final￨3￨p String￨3￨p timedObjectId￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f TimerImpl￨2￨f >￨2￨f loadActiveTimers￨2￨f (￨2￨f final￨3￨p String￨3￨p timedObjectId￨3￨p ,￨3￨p final￨3￨p TimerServiceImpl￨3￨p timerService￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f DatabaseTimerPersistence￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f ,￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f TimerImpl￨2￨f timerFromResult￨2￨f (￨2￨f final￨2￨f ResultSet￨2￨f resultSet￨2￨f ,￨2￨f final￨2￨f TimerServiceImpl￨2￨f timerService￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f boolean￨3￨e calendarTimer￨3￨e =￨3￨e resultSet￨3￨e .￨3￨e getBoolean￨3￨e (￨3￨e 24￨3￨e )￨3￨e ;￨3￨e TimerImpl￨3￨e .￨3￨e Builder￨3￨e builder￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j calendarTimer￨4￨c )￨3￨j {￨3￨j CalendarTimer￨4￨e .￨4￨e Builder￨4￨e cb￨4￨e =￨4￨e CalendarTimer￨4￨e .￨4￨e builder￨4￨e (￨4￨e )￨4￨e ;￨4￨e builder￨4￨e =￨4￨e cb￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprSecond￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 10￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprMinute￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 11￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprHour￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 12￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprDayOfWeek￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 13￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprDayOfMonth￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 14￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprMonth￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 15￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprYear￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 16￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprStartDate￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getTimestamp￨4￨e (￨4￨e 17￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprEndDate￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getTimestamp￨4￨e (￨4￨e 18￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setScheduleExprTimezone￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 19￨4￨e )￨4￨e )￨4￨e ;￨4￨e cb￨4￨e .￨4￨e setAutoTimer￨4￨e (￨4￨e resultSet￨4￨e .￨4￨e getBoolean￨4￨e (￨4￨e 20￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e String￨4￨e clazz￨4￨e =￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 21￨4￨e )￨4￨e ;￨4￨e final￨4￨e String￨4￨e methodName￨4￨e =￨4￨e resultSet￨4￨e .￨4￨e getString￨4￨e (￨4￨e 22￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j methodName￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j final￨5￨e String￨5￨e paramString￨5￨e =￨5￨e resultSet￨5￨e .￨5￨e getString￨5￨e (￨5￨e 23￨5￨e )￨5￨e ;￨5￨e final￨5￨e String￨5￨e [￨5￨e ]￨5￨e params￨5￨e =￨5￨e (￨5￨e (￨5￨e paramString￨5￨e ==￨5￨e null￨5￨e )￨5￨e ||￨5￨e (￨5￨e paramString￨5￨e .￨5￨e isEmpty￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ?￨5￨e new￨5￨e String￨5￨e [￨5￨e 0￨5￨e ]￨5￨e :￨5￨e paramString￨5￨e .￨5￨e split￨5￨e (￨5￨e ";"￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b final￨5￨b Method￨5￨b timeoutMethod￨5￨b =￨5￨b CalendarTimer￨5￨b .￨5￨b getTimeoutMethod￨5￨b (￨5￨b new￨5￨b TimeoutMethod￨5￨b (￨5￨b clazz￨5￨b ,￨5￨b methodName￨5￨b ,￨5￨b params￨5￨b )￨5￨b ,￨5￨b timerService￨5￨b .￨5￨b getTimedObjectInvoker￨5￨b (￨5￨b )￨5￨b .￨5￨b getValue￨5￨b (￨5￨b )￨5￨b .￨5￨b getClassLoader￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b if￨5￨j (￨5￨j timeoutMethod￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j ROOT_LOGGER￨6￨e .￨6￨e timerReinstatementFailed￨6￨e (￨6￨e resultSet￨6￨e .￨6￨e getString￨6￨e (￨6￨e 2￨6￨e )￨6￨e ,￨6￨e resultSet￨6￨e .￨6￨e getString￨6￨e (￨6￨e 1￨6￨e )￨6￨e ,￨6￨e new￨6￨e NoSuchMethodException￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j cb￨5￨e .￨5￨e setTimeoutMethod￨5￨e (￨5￨e timeoutMethod￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j builder￨4￨e =￨4￨e TimerImpl￨4￨e .￨4￨e builder￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j builder￨3￨e .￨3￨e setId￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getString￨3￨e (￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setTimedObjectId￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getString￨3￨e (￨3￨e 2￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setInitialDate￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getTimestamp￨3￨e (￨3￨e 3￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setRepeatInterval￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getLong￨3￨e (￨3￨e 4￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setNextDate￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getTimestamp￨3￨e (￨3￨e 5￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setPreviousRun￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getTimestamp￨3￨e (￨3￨e 6￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setPrimaryKey￨3￨e (￨3￨e deSerialize￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getString￨3￨e (￨3￨e 7￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setInfo￨3￨e (￨3￨e (￨3￨e (￨3￨e Serializable￨3￨e )￨3￨e (￨3￨e deSerialize￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getString￨3￨e (￨3￨e 8￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setTimerState￨3￨e (￨3￨e TimerState￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e resultSet￨3￨e .￨3￨e getString￨3￨e (￨3￨e 9￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e setPersistent￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e return￨3￨e builder￨3￨e .￨3￨e build￨3￨e (￨3￨e timerService￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f statementParameters￨2￨f (￨2￨f final￨2￨f TimerImpl￨2￨f timerEntity￨2￨f ,￨2￨f final￨2￨f PreparedStatement￨2￨f statement￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f serialize￨2￨f (￨2￨f final￨3￨p Serializable￨3￨p serializable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f deSerialize￨2￨f (￨2￨f final￨2￨f String￨2￨f data￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Timestamp￨2￨f timestamp￨2￨f (￨2￨f final￨3￨p Date￨3￨p date￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f InjectedValue￨2￨f <￨2￨f ManagedReferenceFactory￨2￨f >￨2￨f getDataSourceInjectedValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InjectedValue￨2￨f <￨2￨f ModuleLoader￨2￨f >￨2￨f getModuleLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f safeClose￨2￨f (￨2￨f final￨3￨p Closeable￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f safeClose￨2￨f (￨2￨f final￨3￨p Statement￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f safeClose￨2￨f (￨2￨f final￨3￨p Connection￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f safeClose￨2￨f (￨2￨f final￨3￨p ResultSet￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JaxrsSpringProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e VERSION_KEY￨2￨e =￨2￨e "resteasy.version"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e SPRING_INT_JAR_BASE￨2￨e =￨2￨e "resteasy-spring"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e JAR_LOCATION￨2￨e =￨2￨e "resteasy-spring-jar"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e ModuleIdentifier￨2￨e MODULE￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.resteasy.resteasy-spring"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SPRING_LISTENER￨2￨e =￨2￨e "org.jboss.resteasy.plugins.spring.SpringContextLoaderListener"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SPRING_SERVLET￨2￨e =￨2￨e "org.springframework.web.servlet.DispatcherServlet"￨2￨e ;￨2￨e @￨2￨e Deprecated￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e DISABLE_PROPERTY￨2￨e =￨2￨e "org.jboss.as.jaxrs.disableSpringIntegration"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ENABLE_PROPERTY￨2￨e =￨2￨e "org.jboss.as.jaxrs.enableSpringIntegration"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SERVICE_NAME￨2￨e =￨2￨e "resteasy-spring-integration-resource-root"￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServiceTarget￨2￨e serviceTarget￨2￨e ;￨2￨e private￨2￨e VirtualFile￨2￨e resourceRoot￨2￨e ;￨2￨e public￨2￨f JaxrsSpringProcessor￨2￨f (￨2￨f ServiceTarget￨3￨p serviceTarget￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f synchronized￨2￨f VirtualFile￨2￨f getResteasySpringVirtualFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f Module￨4￨e module￨4￨e =￨4￨e Module￨4￨e .￨4￨e getBootModuleLoader￨4￨e (￨4￨e )￨4￨e .￨4￨e loadModule￨4￨e (￨4￨e JaxrsSpringProcessor￨4￨e .￨4￨e MODULE￨4￨e )￨4￨e ;￨4￨e URL￨4￨e fileUrl￨4￨e =￨4￨e module￨4￨e .￨4￨e getClassLoader￨4￨e (￨4￨e )￨4￨e .￨4￨e getResource￨4￨e (￨4￨e JaxrsSpringProcessor￨4￨e .￨4￨e JAR_LOCATION￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j fileUrl￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j throw￨5￨e JAXRS_LOGGER￨5￨e .￨5￨e noSpringIntegrationJar￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b File￨4￨b dir￨4￨b =￨4￨b new￨4￨b File￨4￨b (￨4￨b fileUrl￨4￨b .￨4￨b getFile￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b File￨4￨e file￨4￨e =￨4￨e null￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c jar￨5￨c :￨5￨c dir￨5￨c .￨5￨c list￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j jar￨6￨c .￨6￨c endsWith￨6￨c (￨6￨c ".jar"￨6￨c )￨6￨c )￨5￨j {￨5￨j file￨6￨e =￨6￨e new￨6￨e File￨6￨e (￨6￨e dir￨6￨e ,￨6￨e jar￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e }￨5￨j }￨4￨l if￨4￨j (￨4￨j file￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j throw￨5￨e JAXRS_LOGGER￨5￨e .￨5￨e noSpringIntegrationJar￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j VirtualFile￨4￨e vf￨4￨e =￨4￨e VFS￨4￨e .￨4￨e getChild￨4￨e (￨4￨e file￨4￨e .￨4￨e toURI￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e Closeable￨4￨e mountHandle￨4￨e =￨4￨e VFS￨4￨e .￨4￨e mountZip￨4￨e (￨4￨e file￨4￨e ,￨4￨e vf￨4￨e ,￨4￨e TempFileProviderService￨4￨e .￨4￨e provider￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e Service￨4￨f <￨4￨f Closeable￨4￨f >￨4￨f mountHandleService￨4￨f =￨4￨f new￨4￨f Service￨4￨f <￨4￨f Closeable￨4￨f >￨4￨f (￨4￨f )￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f void￨5￨f start￨5￨f (￨5￨f StartContext￨5￨f startContext￨5￨f )￨5￨f throws￨5￨f StartException￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f public￨5￨f void￨5￨f stop￨5￨f (￨5￨f StopContext￨6￨p stopContext￨6￨p )￨5￨f {￨5￨f VFSUtils￨6￨e .￨6￨e safeClose￨6￨e (￨6￨e mountHandle￨6￨e )￨6￨e ;￨6￨e }￨5￨f public￨5￨f Closeable￨5￨f getValue￨5￨f (￨5￨f )￨5￨f throws￨5￨f IllegalArgumentException￨5￨f ,￨5￨f IllegalStateException￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e mountHandle￨6￨e ;￨6￨e }￨5￨f }￨4￨f ;￨4￨e ServiceBuilder￨4￨e <￨4￨e Closeable￨4￨e >￨4￨e builder￨4￨e =￨4￨e serviceTarget￨4￨e .￨4￨e addService￨4￨e (￨4￨e JBOSS￨4￨e .￨4￨e append￨4￨e (￨4￨e JaxrsSpringProcessor￨4￨e .￨4￨e SERVICE_NAME￨4￨e )￨4￨e ,￨4￨e mountHandleService￨4￨e )￨4￨e ;￨4￨e builder￨4￨e .￨4￨e setInitialMode￨4￨e (￨4￨e ACTIVE￨4￨e )￨4￨e .￨4￨e install￨4￨e (￨4￨e )￨4￨e ;￨4￨e resourceRoot￨4￨e =￨4￨e vf￨4￨e ;￨4￨e return￨4￨e resourceRoot￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e DeploymentUnitProcessingException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d FormComponent￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d WebMarkupContainer￨1￨d <￨1￨d T￨1￨d >￨1￨d implements￨1￨d IFormProcessingListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f EMPTY_STRING_ARRAY￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VALUE_SEPARATOR￨2￨e =￨2￨e ";"￨2￨e ;￨2￨e public￨2￨f static￨2￨f interface￨2￨f IVisitor￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f Object￨3￨f formComponent￨3￨f (￨3￨f IFormProcessingListener￨4￨p formComponent￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f public￨2￨d abstract￨2￨d static￨2￨d class￨2￨d AbstractVisitor￨2￨d implements￨2￨d FormComponent￨2￨d .￨2￨d IVisitor￨2￨d {￨2￨d public￨3￨f Object￨3￨f formComponent￨3￨f (￨3￨f IFormProcessingListener￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f abstract￨3￨f void￨3￨f onFormComponent￨3￨f (￨3￨f FormComponent￨4￨p formComponent￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d final￨2￨d class￨2￨d RequiredStateChange￨2￨d extends￨2￨d Change￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e required￨3￨e =￨3￨e isRequired￨3￨e (￨3￨e )￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f undo￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨e Class￨2￨e type￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨2￨e =￨2￨e FLAG_RESERVED1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_PERSISTENT￨2￨e =￨2￨e FLAG_RESERVED2￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_REQUIRED￨2￨e =￨2￨e FLAG_RESERVED3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e NO_RAW_INPUT￨2￨e =￨2￨e "[-NO-RAW-INPUT-]"￨2￨e ;￨2￨e private￨2￨e String￨2￨e rawInput￨2￨e =￨2￨e FormComponent￨2￨e .￨2￨e NO_RAW_INPUT￨2￨e ;￨2￨e private￨2￨e Object￨2￨e validators￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e IModel￨2￨e labelModel￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e transient￨2￨e T￨2￨e convertedInput￨2￨e ;￨2￨e public￨2￨f FormComponent￨2￨f (￨2￨f MarkupContainer￨3￨p parent￨3￨p ,￨3￨p final￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FormComponent￨2￨f (￨2￨f MarkupContainer￨3￨p parent￨3￨p ,￨3￨p final￨3￨p String￨3￨p id￨3￨p ,￨3￨p IModel￨3￨p <￨3￨p T￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f add￨2￨f (￨2￨f final￨3￨p IValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Form￨2￨f getForm￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f FormComponent￨2￨f setLabel￨2￨f (￨2￨f final￨3￨p IModel￨3￨p labelModel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IModel￨2￨f getLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getInputAsArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getInputName￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e id￨3￨e =￨3￨e FormComponent￨3￨e .￨3￨e getId￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e PrependingStringBuffer￨3￨e inputName￨3￨e =￨3￨e new￨3￨e PrependingStringBuffer￨3￨e (￨3￨e id￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Component￨3￨e c￨3￨e =￨3￨e this￨3￨e ;￨3￨e while￨3￨l (￨3￨l true￨4￨c )￨3￨l {￨3￨l inputName￨4￨e .￨4￨e prepend￨4￨e (￨4￨e id￨4￨e )￨4￨e ;￨4￨e c￨4￨e =￨4￨e c￨4￨e .￨4￨e getParent￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b (￨4￨b c￨4￨b ==￨4￨b null￨4￨b )￨4￨b ||￨4￨b (￨4￨b c￨4￨b instanceof￨4￨b Form￨4￨b )￨4￨b )￨4￨b ||￨4￨b (￨4￨b c￨4￨b instanceof￨4￨b Page￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b break￨4￨e ;￨4￨e }￨4￨e inputName￨4￨e .￨4￨e prepend￨4￨e (￨4￨e PATH_SEPARATOR￨4￨e )￨4￨e ;￨4￨e id￨4￨e =￨4￨e c￨4￨e .￨4￨e getId￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e inputName￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f final￨2￨f List￨2￨f <￨2￨f IValidator￨2￨f >￨2￨f getValidators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getRawInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f hasRawInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f invalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMultiPart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isPersistent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isValidated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInputNullable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModelValue￨2￨f (￨2￨f final￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModelValue￨2￨f (￨2￨f final￨3￨p String￨3￨p [￨3￨p ]￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f setPersistent￨2￨f (￨2￨f final￨3￨p boolean￨3￨p persistent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f valid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f clearInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f checkRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f final￨2￨f void￨2￨f convert￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f T￨2￨f convertValue￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f value￨2￨f )￨2￨f throws￨2￨f ConversionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f validate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateValidators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getModelValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f inputAsInt￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f inputAsInt￨2￨f (￨2￨f final￨3￨p int￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f inputAsIntArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onInvalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f internalOnModelChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f supportsPersistence￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validators_add￨2￨f (￨2￨f final￨3￨p IValidator￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IValidator￨2￨f validators_get￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f validators_size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f inputChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f setRequired￨2￨f (￨2￨f final￨3￨p boolean￨3￨p required￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f T￨2￨f getConvertedInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onDetach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Class￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f setType￨2￨f (￨2￨f Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getValidatorKeyPrefix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f error￨2￨f (￨2￨f IValidationError￨3￨p error￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f processInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d ValidatableAdapter￨2￨d implements￨2￨d IValidatable￨2￨d <￨2￨d T￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f error￨3￨f (￨3￨f IValidationError￨4￨p error￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f T￨3￨f getValue￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d MessageSource￨2￨d implements￨2￨d IMessageSource￨2￨d {￨2￨d public￨3￨f String￨3￨f getMessage￨3￨f (￨3￨f String￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f Map￨3￨f <￨3￨f String￨3￨f ,￨3￨f Object￨3￨f >￨3￨f addDefaultVars￨3￨f (￨3￨f Map￨4￨p <￨4￨p String￨4￨p ,￨4￨p Object￨4￨p >￨4￨p params￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f Object￨3￨f getLabel￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f substitute￨3￨f (￨3￨f String￨3￨f string￨3￨f ,￨3￨f Map￨3￨f <￨3￨f String￨3￨f ,￨3￨f Object￨3￨f >￨3￨f vars￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f boolean￨2￨f processChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d AddCompilationUnitToIndex￨1￨d extends￨1￨d IndexRequest￨1￨d {￨1￨d IFile￨2￨e resource￨2￨e ;￨2￨e IndexManager￨2￨e manager￨2￨e ;￨2￨e IPath￨2￨e indexedContainer￨2￨e ;￨2￨e char￨2￨e [￨2￨e ]￨2￨e contents￨2￨e ;￨2￨e public￨2￨f AddCompilationUnitToIndex￨2￨f (￨2￨f IFile￨3￨p resource￨3￨p ,￨3￨p IndexManager￨3￨p manager￨3￨p ,￨3￨p IPath￨3￨p indexedContainer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f belongsTo￨2￨f (￨2￨f String￨3￨p jobFamily￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f execute￨2￨f (￨2￨f IProgressMonitor￨3￨p progressMonitor￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c progressMonitor￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c progressMonitor￨4￨c .￨4￨c isCanceled￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e IJob￨4￨e .￨4￨e COMPLETE￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b IIndex￨4￨b index￨4￨b =￨4￨b manager￨4￨b .￨4￨b getIndex￨4￨b (￨4￨b this￨4￨b .￨4￨b indexedContainer￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j index￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e IJob￨5￨e .￨5￨e COMPLETE￨5￨e ;￨5￨e }￨4￨j ReadWriteMonitor￨4￨e monitor￨4￨e =￨4￨e manager￨4￨e .￨4￨e getMonitorFor￨4￨e (￨4￨e index￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j monitor￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e IJob￨5￨e .￨5￨e COMPLETE￨5￨e ;￨5￨e }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f monitor￨5￨e .￨5￨e enterWrite￨5￨e (￨5￨e )￨5￨e ;￨5￨e char￨5￨e [￨5￨e ]￨5￨e contents￨5￨e =￨5￨e this￨5￨e .￨5￨e getContents￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j contents￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j return￨6￨e IJob￨6￨e .￨6￨e FAILED￨6￨e ;￨6￨e }￨5￨j index￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e IFileDocument￨5￨e (￨5￨e resource￨5￨e ,￨5￨e contents￨5￨e )￨5￨e ,￨5￨e new￨5￨e SourceIndexer￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f monitor￨5￨e .￨5￨e exitWrite￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j JobManager￨5￨c .￨5￨c VERBOSE￨5￨c )￨4￨j {￨4￨j JobManager￨5￨e .￨5￨e verbose￨5￨e (￨5￨e (￨5￨e (￨5￨e "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>index<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e this￨5￨e .￨5￨e resource￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>because<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>following<seq2seq4repair_space>exception:"￨5￨e )￨5￨e )￨5￨e ;￨5￨e e￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e IJob￨4￨e .￨4￨e FAILED￨4￨e ;￨4￨e }￨3￨f return￨3￨e IJob￨3￨e .￨3￨e COMPLETE￨3￨e ;￨3￨e }￨2￨f private￨2￨f char￨2￨f [￨2￨f ]￨2￨f getContents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initializeContents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CreateVFolderOnMessageCommand￨1￨d extends￨1￨d FolderCommand￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e LOG￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.columba.mail.folder.command"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VFOLDER_ON_SUBJECT￨2￨e =￨2￨e "Subject"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VFOLDER_ON_FROM￨2￨e =￨2￨e "From"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VFOLDER_ON_TO￨2￨e =￨2￨e "To"￨2￨e ;￨2￨e private￨2￨e String￨2￨e vfolderType￨2￨e ;￨2￨e private￨2￨e MessageFolder￨2￨e parentFolder￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e VirtualFolder￨2￨e vfolder￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f CreateVFolderOnMessageCommand￨2￨f (￨2￨f FrameMediator￨3￨p frameController￨3￨p ,￨3￨p DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p ,￨3￨p String￨3￨p vfolderType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateGUI￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f treeModel￨3￨e .￨3￨e nodeStructureChanged￨3￨e (￨3￨e parentFolder￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c vfolder￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b new￨4￨b org￨4￨b .￨4￨b columba￨4￨b .￨4￨b mail￨4￨b .￨4￨b gui￨4￨b .￨4￨b config￨4￨b .￨4￨b filter￨4￨b .￨4￨b ConfigFrame￨4￨b (￨4￨b getFrameMediator￨4￨b (￨4￨b )￨4￨b .￨4￨b getView￨4￨b (￨4￨b )￨4￨b .￨4￨b getFrame￨4￨b (￨4￨b )￨4￨b ,￨4￨b vfolder￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f WorkerStatusController￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f VirtualFolder￨2￨f createVirtualFolder￨2￨f (￨2￨f String￨3￨p folderName￨3￨p ,￨3￨p String￨3￨p headerField￨3￨p ,￨3￨p String￨3￨p pattern￨3￨p ,￨3￨p MessageFolder￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d StatisticalSummaryValuesTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f StatisticalSummaryValuesTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSerialization￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testEqualsAndHashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f StatisticalSummaryValues￨3￨e u￨3￨e =￨3￨e new￨3￨e StatisticalSummaryValues￨3￨e (￨3￨e 1￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e 6￨3￨e )￨3￨e ;￨3￨e StatisticalSummaryValues￨3￨e t￨3￨e =￨3￨e null￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "reflexive"￨3￨e ,￨3￨e u￨3￨e .￨3￨e equals￨3￨e (￨3￨e u￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e "non-null<seq2seq4repair_space>compared<seq2seq4repair_space>to<seq2seq4repair_space>null"￨3￨e ,￨3￨e u￨3￨e .￨3￨e equals￨3￨e (￨3￨e t￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertFalse￨3￨b (￨3￨b "wrong<seq2seq4repair_space>type"￨3￨b ,￨3￨b u￨3￨b .￨3￨b equals￨3￨b (￨3￨b Double￨3￨b .￨3￨b valueOf￨3￨b (￨3￨b 0￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b t￨3￨e =￨3￨e new￨3￨e StatisticalSummaryValues￨3￨e (￨3￨e 1￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e 6￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "instances<seq2seq4repair_space>with<seq2seq4repair_space>same<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>equal"￨3￨e ,￨3￨e t￨3￨e .￨3￨e equals￨3￨e (￨3￨e u￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e "hash<seq2seq4repair_space>code"￨3￨e ,￨3￨e u￨3￨e .￨3￨e hashCode￨3￨e (￨3￨e )￨3￨e ,￨3￨e t￨3￨e .￨3￨e hashCode￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e u￨3￨e =￨3￨e new￨3￨e StatisticalSummaryValues￨3￨e (￨3￨e Double￨3￨e .￨3￨e NaN￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e 6￨3￨e )￨3￨e ;￨3￨e t￨3￨e =￨3￨e new￨3￨e StatisticalSummaryValues￨3￨e (￨3￨e 1￨3￨e ,￨3￨e Double￨3￨e .￨3￨e NaN￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e 6￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e "instances<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>different<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>different"￨3￨e ,￨3￨e (￨3￨e (￨3￨e u￨3￨e .￨3￨e equals￨3￨e (￨3￨e t￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e t￨3￨e .￨3￨e equals￨3￨e (￨3￨e u￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f verifyEquality￨2￨f (￨2￨f StatisticalSummaryValues￨3￨p s￨3￨p ,￨3￨p StatisticalSummaryValues￨3￨p u￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Composite￨1￨d extends￨1￨d Scrollable￨1￨d {￨1￨d Layout￨2￨e layout￨2￨e ;￨2￨e Control￨2￨e [￨2￨e ]￨2￨e tabList￨2￨e ;￨2￨e int￨2￨e layoutCount￨2￨e ;￨2￨e int￨2￨e backgroundMode￨2￨e ;￨2￨e boolean￨2￨e keyInputHappened￨2￨e ;￨2￨e Composite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Composite￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f _getChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f _getTabList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f acceptsFirstResponder￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f accessibilityAttributeNames￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f accessibilityIsIgnored￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f changed￨2￨f (￨2￨f Control￨3￨p [￨3￨p ]￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f computeSize￨2￨f (￨2￨f int￨3￨p wHint￨3￨p ,￨3￨p int￨3￨p hHint￨3￨p ,￨3￨p boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f computeTabList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p resize￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f state￨3￨e |=￨3￨e CANVAS￨3￨e ;￨3￨e boolean￨3￨e scrolled￨3￨e =￨3￨e (￨3￨e (￨3￨e style￨3￨e )￨3￨e &￨3￨e (￨3￨e (￨3￨e SWT￨3￨e .￨3￨e V_SCROLL￨3￨e )￨3￨e |￨3￨e (￨3￨e SWT￨3￨e .￨3￨e H_SCROLL￨3￨e )￨3￨e )￨3￨e )￨3￨e !=￨3￨e 0￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c scrolled￨4￨c )￨3￨j {￨3￨j state￨4￨e |=￨4￨e THEME_BACKGROUND￨4￨e ;￨4￨e }￨3￨j NSRect￨3￨e rect￨3￨e =￨3￨e new￨3￨e NSRect￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j scrolled￨4￨c ||￨4￨c (￨4￨c hasBorder￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j NSScrollView￨4￨e scrollWidget￨4￨e =￨4￨e (￨4￨e (￨4￨e NSScrollView￨4￨e )￨4￨e (￨4￨e new￨4￨e SWTScrollView￨4￨e (￨4￨e )￨4￨e .￨4￨e alloc￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e scrollWidget￨4￨e .￨4￨e initWithFrame￨4￨e (￨4￨e rect￨4￨e )￨4￨e ;￨4￨e scrollWidget￨4￨e .￨4￨e setDrawsBackground￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c style￨5￨c )￨5￨c &￨5￨c (￨5￨c SWT￨5￨c .￨5￨c H_SCROLL￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j scrollWidget￨5￨e .￨5￨e setHasHorizontalScroller￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c style￨5￨c )￨5￨c &￨5￨c (￨5￨c SWT￨5￨c .￨5￨c V_SCROLL￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j scrollWidget￨5￨e .￨5￨e setHasVerticalScroller￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e }￨4￨j scrollWidget￨4￨e .￨4￨e setBorderType￨4￨e (￨4￨e (￨4￨e hasBorder￨4￨e (￨4￨e )￨4￨e ?￨4￨e OS￨4￨e .￨4￨e NSBezelBorder￨4￨e :￨4￨e OS￨4￨e .￨4￨e NSNoBorder￨4￨e )￨4￨e )￨4￨e ;￨4￨e scrollView￨4￨e =￨4￨e scrollWidget￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b NSView￨3￨b widget￨3￨b =￨3￨b (￨3￨b (￨3￨b NSView￨3￨b )￨3￨b (￨3￨b new￨3￨b SWTView￨3￨b (￨3￨b )￨3￨b .￨3￨b alloc￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b widget￨3￨e .￨3￨e initWithFrame￨3￨e (￨3￨e rect￨3￨e )￨3￨e ;￨3￨e view￨3￨e =￨3￨e widget￨3￨e ;￨3￨e }￨2￨f void￨2￨f doCommandBySelector￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f drawWidget￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p NSGraphicsContext￨3￨p context￨3￨p ,￨3￨p NSRect￨3￨p rect￨3￨p ,￨3￨p boolean￨3￨p sendPaint￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f flagsChanged￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f Composite￨2￨f findDeferredControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Menu￨2￨f [￨2￨f ]￨2￨f findMenus￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f fixChildren￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p ,￨3￨p Shell￨3￨p oldShell￨3￨p ,￨3￨p Decorations￨3￨p newDecorations￨3￨p ,￨3￨p Decorations￨3￨p oldDecorations￨3￨p ,￨3￨p Menu￨3￨p [￨3￨p ]￨3￨p menus￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f fixTabList￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getBackgroundMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getChildrenCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Layout￨2￨f getLayout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getLayoutDeferred￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getTabList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hooksKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f insertText￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLayoutDeferred￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isOpaque￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isTabGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f keyDown￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f layout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f layout￨2￨f (￨2￨f boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f layout￨2￨f (￨2￨f boolean￨3￨p changed￨3￨p ,￨3￨p boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f layout￨2￨f (￨2￨f Control￨3￨p [￨3￨p ]￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f markLayout￨2￨f (￨2￨f boolean￨3￨p changed￨3￨p ,￨3￨p boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f Point￨2￨f minimumSize￨2￨f (￨2￨f int￨3￨p wHint￨3￨p ,￨3￨p int￨3￨p Hint￨3￨p ,￨3￨p boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f pageDown￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f pageUp￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f reflectScrolledClipView￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p aClipView￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f removeControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f resized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f scrollWheel￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackgroundMode￨2￨f (￨2￨f int￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f setFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLayout￨2￨f (￨2￨f Layout￨3￨p layout￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLayoutDeferred￨2￨f (￨2￨f boolean￨3￨p defer￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setMarkedText_selectedRange￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p string￨3￨p ,￨3￨p int￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setScrollBarVisible￨2￨f (￨2￨f ScrollBar￨3￨p bar￨3￨p ,￨3￨p boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setTabGroupFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTabList￨2￨f (￨2￨f Control￨3￨p [￨3￨p ]￨3￨p tabList￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f traversalCode￨2￨f (￨2￨f int￨3￨p key￨3￨p ,￨3￨p NSEvent￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateBackgroundMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateLayout￨2￨f (￨2￨f boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d JMSMessageDrivenBeanTestCase￨1￨d {￨1￨d @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f deployment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSendMessage￨2￨f (￨2￨f )￨2￨f throws￨2￨f JMSException￨2￨f ,￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e InitialContext￨3￨e ctx￨3￨e =￨3￨e new￨3￨e InitialContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e QueueConnectionFactory￨3￨e factory￨3￨e =￨3￨e (￨3￨e (￨3￨e QueueConnectionFactory￨3￨e )￨3￨e (￨3￨e ctx￨3￨e .￨3￨e lookup￨3￨e (￨3￨e "java:/JmsXA"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e QueueConnection￨3￨e connection￨3￨e =￨3￨e factory￨3￨e .￨3￨e createQueueConnection￨3￨e (￨3￨e )￨3￨e ;￨3￨e connection￨3￨e .￨3￨e start￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e QueueSession￨4￨e session￨4￨e =￨4￨e connection￨4￨e .￨4￨e createQueueSession￨4￨e (￨4￨e false￨4￨e ,￨4￨e AUTO_ACKNOWLEDGE￨4￨e )￨4￨e ;￨4￨e final￨4￨e Queue￨4￨e replyDestination￨4￨e =￨4￨e session￨4￨e .￨4￨e createTemporaryQueue￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e QueueReceiver￨4￨e receiver￨4￨e =￨4￨e session￨4￨e .￨4￨e createReceiver￨4￨e (￨4￨e replyDestination￨4￨e )￨4￨e ;￨4￨e final￨4￨e Message￨4￨e message￨4￨e =￨4￨e session￨4￨e .￨4￨e createTextMessage￨4￨e (￨4￨e "Test"￨4￨e )￨4￨e ;￨4￨e message￨4￨e .￨4￨e setJMSReplyTo￨4￨e (￨4￨e replyDestination￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b final￨4￨b Destination￨4￨b destination￨4￨b =￨4￨b (￨4￨b (￨4￨b Destination￨4￨b )￨4￨b (￨4￨b ctx￨4￨b .￨4￨b lookup￨4￨b (￨4￨b "java:jboss/jms/queue/test"￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b final￨4￨e MessageProducer￨4￨e producer￨4￨e =￨4￨e session￨4￨e .￨4￨e createProducer￨4￨e (￨4￨e destination￨4￨e )￨4￨e ;￨4￨e producer￨4￨e .￨4￨e send￨4￨e (￨4￨e message￨4￨e )￨4￨e ;￨4￨e producer￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e Message￨4￨e reply￨4￨e =￨4￨e receiver￨4￨e .￨4￨e receive￨4￨e (￨4￨e 1000￨4￨e )￨4￨e ;￨4￨e assertNotNull￨4￨e (￨4￨e reply￨4￨e )￨4￨e ;￨4￨e final￨4￨e String￨4￨e result￨4￨e =￨4￨e (￨4￨e (￨4￨e javax￨4￨e .￨4￨e jms￨4￨e .￨4￨e TextMessage￨4￨e )￨4￨e (￨4￨e reply￨4￨e )￨4￨e )￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "replying<seq2seq4repair_space>Test"￨4￨e ,￨4￨e result￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LuceneSegmentInputSplitTest￨1￨d extends￨1￨d AbstractLuceneStorageTest￨1￨d {￨1￨d private￨2￨e Configuration￨2￨e configuration￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f before￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b configuration￨3￨b =￨3￨b new￨3￨b Configuration￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f after￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testGetSegment￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨d Test￨2￨d (￨2￨d expected￨2￨d =￨2￨d IllegalArgumentException￨2￨d .￨2￨d class￨2￨d )￨2￨d public￨2￨d void￨2￨d testGetSegmentNonExistingSegment￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d private￨2￨f void￨2￨f assertSegmentContainsOneDoc￨2￨f (￨2￨f String￨2￨f segmentName￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DeleteResourceElementsOperation￨1￨d extends￨1￨d MultiOperation￨1￨d {￨1￨d protected￨2￨f DeleteResourceElementsOperation￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elementsToProcess￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f deletePackageFragment￨2￨f (￨2￨f IPackageFragment￨2￨f frag￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f IResource￨3￨e res￨3￨e =￨3￨e frag￨3￨e .￨3￨e getResource￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c res￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c res￨4￨c .￨4￨c getType￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c IResource￨4￨c .￨4￨c FOLDER￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j IJavaElement￨4￨e [￨4￨e ]￨4￨e childrenOfInterest￨4￨e =￨4￨e frag￨4￨e .￨4￨e getChildren￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c childrenOfInterest￨5￨c .￨5￨c length￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j IResource￨5￨e [￨5￨e ]￨5￨e resources￨5￨e =￨5￨e new￨5￨e IResource￨5￨e [￨5￨e childrenOfInterest￨5￨e .￨5￨e length￨5￨e ]￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c childrenOfInterest￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l resources￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e childrenOfInterest￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e getCorrespondingResource￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l deleteResources￨5￨e (￨5￨e resources￨5￨e ,￨5￨e fForce￨5￨e )￨5￨e ;￨5￨e }￨4￨j Object￨4￨e [￨4￨e ]￨4￨e nonJavaResources￨4￨e =￨4￨e frag￨4￨e .￨4￨e getNonJavaResources￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e actualResourceCount￨4￨e =￨4￨e 0￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c nonJavaResources￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c nonJavaResources￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c instanceof￨6￨c IResource￨6￨c )￨5￨j {￨5￨j actualResourceCount￨6￨e ++￨6￨e ;￨6￨e }￨5￨j }￨4￨l IResource￨4￨e [￨4￨e ]￨4￨e actualNonJavaResources￨4￨e =￨4￨e new￨4￨e IResource￨4￨e [￨4￨e actualResourceCount￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c nonJavaResources￨5￨c .￨5￨c length￨5￨c ,￨5￨c index￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c nonJavaResources￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c instanceof￨6￨c IResource￨6￨c )￨5￨j {￨5￨j actualNonJavaResources￨6￨e [￨6￨e (￨6￨e index￨6￨e ++￨6￨e )￨6￨e ]￨6￨e =￨6￨e (￨6￨e (￨6￨e IResource￨6￨e )￨6￨e (￨6￨e nonJavaResources￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l deleteResources￨4￨e (￨4￨e actualNonJavaResources￨4￨e ,￨4￨e fForce￨4￨e )￨4￨e ;￨4￨e IResource￨4￨e [￨4￨e ]￨4￨e remainingFiles￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f remainingFiles￨5￨e =￨5￨e (￨5￨e (￨5￨e IFolder￨5￨e )￨5￨e (￨5￨e res￨5￨e )￨5￨e )￨5￨e .￨5￨e members￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f CoreException￨5￨p ce￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e JavaModelException￨5￨e (￨5￨e ce￨5￨e )￨5￨e ;￨5￨e }￨4￨f boolean￨4￨e isEmpty￨4￨e =￨4￨e true￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c length￨5￨c =￨5￨c remainingFiles￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l IResource￨5￨e file￨5￨e =￨5￨e remainingFiles￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j file￨6￨c instanceof￨6￨c IFile￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e deleteResource￨6￨e (￨6￨e file￨6￨e ,￨6￨e (￨6￨e (￨6￨e IResource￨6￨e .￨6￨e FORCE￨6￨e )￨6￨e |￨6￨e (￨6￨e IResource￨6￨e .￨6￨e KEEP_HISTORY￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j isEmpty￨6￨e =￨6￨e false￨6￨e ;￨6￨e }￨5￨j }￨4￨l <START_BUG>￨4￨b if￨4￨b (￨4￨b isEmpty￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b IResource￨4￨e fragResource￨4￨e =￨4￨e frag￨4￨e .￨4￨e getResource￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j fragResource￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j deleteEmptyPackageFragment￨5￨e (￨5￨e frag￨5￨e ,￨5￨e false￨5￨e ,￨5￨e fragResource￨5￨e .￨5￨e getParent￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f protected￨2￨f String￨2￨f getMainTaskName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f processElement￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f verify￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d OperationCoordinatorStepHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e LocalHostControllerInfo￨2￨e localHostControllerInfo￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e ProxyController￨2￨e >￨2￨e hostProxies￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e ProxyController￨2￨e >￨2￨e serverProxies￨2￨e ;￨2￨e private￨2￨e final￨2￨e OperationSlaveStepHandler￨2￨e localSlaveHandler￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e ExecutorService￨2￨e executorService￨2￨e ;￨2￨e OperationCoordinatorStepHandler￨2￨f (￨2￨f final￨3￨p LocalHostControllerInfo￨3￨p localHostControllerInfo￨3￨p ,￨3￨p final￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p ProxyController￨3￨p >￨3￨p hostProxies￨3￨p ,￨3￨p final￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p ProxyController￨3￨p >￨3￨p serverProxies￨3￨p ,￨3￨p final￨3￨p OperationSlaveStepHandler￨3￨p localSlaveHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExecutorService￨2￨f (￨2￨f ExecutorService￨3￨p executorService￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ExecutorService￨2￨f getExecutorService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f routetoMasterDomainController￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b context￨3￨b .￨3￨b getFailureDescription￨3￨b (￨3￨b )￨3￨b .￨3￨b set￨3￨b (￨3￨b String￨3￨b .￨3￨b format￨3￨b (￨3￨b (￨3￨b "Operation<seq2seq4repair_space>%s<seq2seq4repair_space>for<seq2seq4repair_space>address<seq2seq4repair_space>%s<seq2seq4repair_space>can<seq2seq4repair_space>only<seq2seq4repair_space>handled<seq2seq4repair_space>by<seq2seq4repair_space>the<seq2seq4repair_space>"￨3￨b +￨3￨b "master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller;<seq2seq4repair_space>this<seq2seq4repair_space>host<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>the<seq2seq4repair_space>master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller"￨3￨b )￨3￨b ,￨3￨b operation￨3￨b .￨3￨b get￨3￨b (￨3￨b OP￨3￨b )￨3￨b .￨3￨b asString￨3￨b (￨3￨b )￨3￨b ,￨3￨b PathAddress￨3￨b .￨3￨b pathAddress￨3￨b (￨3￨b operation￨3￨b .￨3￨b get￨3￨b (￨3￨b OP_ADDR￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f executeDirect￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f executeTwoPhaseOperation￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f OperationRouting￨2￨f routing￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f storeDeploymentContent￨2￨f (￨2￨f ModelNode￨2￨f opNode￨2￨f ,￨2￨f OperationContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasStorableContent￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e List￨2￨e <￨2￨e String￨2￨e >￨2￨e CONTENT_ADDITION_PARAMETERS￨2￨e =￨2￨e Arrays￨2￨e .￨2￨e asList￨2￨e (￨2￨e INPUT_STREAM_INDEX￨2￨e ,￨2￨e BYTES￨2￨e ,￨2￨e URL￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f boolean￨2￨f hasValidContentAdditionParameterDefined￨2￨f (￨2￨f ModelNode￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d Substring￨1￨d extends￨1￨d AbstractVal￨1￨d implements￨1￨d Val￨1￨d {￨1￨d private￨2￨e final￨2￨e Val￨2￨e _val1￨2￨e ;￨2￨e private￨2￨e final￨2￨e Val￨2￨e _val2￨2￨e ;￨2￨e private￨2￨e Joins￨2￨e _joins￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ClassMetaData￨2￨e _meta￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f Substring￨2￨f (￨2￨f Val￨3￨p val1￨3￨p ,￨3￨p Val￨3￨p val2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ClassMetaData￨2￨f getMetaData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMetaData￨2￨f (￨2￨f ClassMetaData￨3￨p meta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVariable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImplicitType￨2￨f (￨2￨f Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p boolean￨3￨p nullTest￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Joins￨2￨f getJoins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f toDataStoreValue￨2￨f (￨2￨f Object￨3￨p val￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectColumns￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f groupBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b sel￨3￨b .￨3￨b groupBy￨3￨b (￨3￨b newSQLBuffer￨3￨b (￨3￨b sel￨3￨b ,￨3￨b store￨3￨b ,￨3￨b params￨3￨b ,￨3￨b fetch￨3￨b )￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f orderBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p asc￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SQLBuffer￨2￨f newSQLBuffer￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f load￨2￨f (￨2￨f Result￨2￨f res￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f JDBCFetchConfiguration￨2￨f fetch￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasVariable￨2￨f (￨2￨f Variable￨3￨p var￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f calculateValue￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p Val￨3￨p other￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f length￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendTo￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LoggerLevelChange￨1￨d extends￨1￨d AbstractModelUpdateHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e String￨2￨e OPERATION_NAME￨2￨e =￨2￨e "change-log-level"￨2￨e ;￨2￨e static￨2￨e final￨2￨e LoggerLevelChange￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e LoggerLevelChange￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f updateModel￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f ,￨2￨f final￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f ,￨2￨f final￨2￨f List￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f newControllers￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e PathAddress￨3￨e address￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e name￨3￨e =￨3￨e address￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e level￨3￨e =￨3￨e CommonAttributes￨3￨e .￨3￨e LEVEL￨3￨e .￨3￨e validateResolvedOperation￨3￨e (￨3￨e model￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b final￨3￨b ServiceRegistry￨3￨b serviceRegistry￨3￨b =￨3￨b context￨3￨b .￨3￨b getServiceRegistry￨3￨b (￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ServiceController￨3￨e <￨3￨e Logger￨3￨e >￨3￨e controller￨3￨e =￨3￨e (￨3￨e (￨3￨e ServiceController￨3￨e <￨3￨e Logger￨3￨e >￨3￨e )￨3￨e (￨3￨e serviceRegistry￨3￨e .￨3￨e getService￨3￨e (￨3￨e LogServices￨3￨e .￨3￨e loggerName￨3￨e (￨3￨e name￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c controller￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c level￨4￨c .￨4￨c isDefined￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j controller￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e .￨4￨e setLevel￨4￨e (￨4￨e Level￨4￨e .￨4￨e parse￨4￨e (￨4￨e level￨4￨e .￨4￨e asString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractMessageChannel￨1￨d implements￨1￨d BeanNameAware￨1￨d ,￨1￨d MessageChannel￨1￨d {￨1￨d protected￨2￨e Log￨2￨e logger￨2￨e =￨2￨e LogFactory￨2￨e .￨2￨e getLog￨2￨e (￨2￨e getClass￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e beanName￨2￨e ;￨2￨e private￨2￨e final￨2￨e ChannelInterceptorChain￨2￨e interceptorChain￨2￨e =￨2￨e new￨2￨e ChannelInterceptorChain￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f AbstractMessageChannel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setBeanName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getBeanName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInterceptors￨2￨f (￨2￨f List￨3￨p <￨3￨p ChannelInterceptor￨3￨p >￨3￨p interceptors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addInterceptor￨2￨f (￨2￨f ChannelInterceptor￨3￨p interceptor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f ChannelInterceptor￨2￨f >￨2￨f getInterceptors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ChannelInterceptorChain￨2￨f getInterceptorChain￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f final￨2￨f boolean￨2￨f send￨2￨f (￨2￨f Message￨3￨p <￨3￨p ?￨3￨p >￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f final￨2￨f boolean￨2￨f send￨2￨f (￨2￨f Message￨3￨p <￨3￨p ?￨3￨p >￨3￨p message￨3￨p ,￨3￨p long￨3￨p timeout￨3￨p )￨2￨f {￨2￨f Assert￨3￨e .￨3￨e notNull￨3￨e (￨3￨e message￨3￨e ,￨3￨e "Message<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j logger￨4￨c .￨4￨c isTraceEnabled￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b logger￨4￨b .￨4￨b trace￨4￨b (￨4￨b (￨4￨b (￨4￨b (￨4￨b "["￨4￨b +￨4￨b (￨4￨b this￨4￨b .￨4￨b beanName￨4￨b )￨4￨b )￨4￨b +￨4￨b "]<seq2seq4repair_space>sending<seq2seq4repair_space>message<seq2seq4repair_space>"￨4￨b )￨4￨b +￨4￨b message￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j message￨3￨e =￨3￨e this￨3￨e .￨3￨e interceptorChain￨3￨e .￨3￨e preSend￨3￨e (￨3￨e message￨3￨e ,￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j message￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f boolean￨4￨e sent￨4￨e =￨4￨e sendInternal￨4￨e (￨4￨e message￨4￨e ,￨4￨e timeout￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e interceptorChain￨4￨e .￨4￨e postSend￨4￨e (￨4￨e message￨4￨e ,￨4￨e this￨4￨e ,￨4￨e sent￨4￨e )￨4￨e ;￨4￨e return￨4￨e sent￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j e￨5￨c instanceof￨5￨c MessagingException￨5￨c )￨4￨j {￨4￨j throw￨5￨e (￨5￨e (￨5￨e MessagingException￨5￨e )￨5￨e (￨5￨e e￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j throw￨4￨e new￨4￨e org￨4￨e .￨4￨e springframework￨4￨e .￨4￨e messaging￨4￨e .￨4￨e MessageDeliveryException￨4￨e (￨4￨e message￨4￨e ,￨4￨e (￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>send<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>channel<seq2seq4repair_space>'"￨4￨e +￨4￨e (￨4￨e this￨4￨e .￨4￨e getBeanName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "'"￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f abstract￨2￨f boolean￨2￨f sendInternal￨2￨f (￨2￨f Message￨3￨p <￨3￨p ?￨3￨p >￨3￨p message￨3￨p ,￨3￨p long￨3￨p timeout￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PlatformLoggingMXBeanGetLoggerLevelHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f SIGNATURE￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e final￨2￨e ParametersValidator￨2￨e parametersValidator￨2￨e =￨2￨e new￨2￨e ParametersValidator￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f PlatformLoggingMXBeanGetLoggerLevelHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f parametersValidator￨3￨e .￨3￨e validate￨3￨e (￨3￨e operation￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e loggerName￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e LOGGER_NAME￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Object￨4￨f level￨4￨f =￨4￨f ManagementFactory￨4￨f .￨4￨f getPlatformMBeanServer￨4￨f (￨4￨f )￨4￨f .￨4￨f invoke￨4￨f (￨4￨f PLATFORM_LOGGING_OBJECT_NAME￨4￨f ,￨4￨f "getLoggerLevel"￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨4￨e .￨4￨e SIGNATURE￨4￨e )￨4￨e ;￨4￨e final￨4￨e ModelNode￨4￨e result￨4￨e =￨4￨e context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j level￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j result￨5￨e .￨5￨e set￨5￨e (￨5￨e level￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f JMRuntimeException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e e￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f JMException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f <START_BUG>￨3￨b context￨3￨b .￨3￨b completeStep￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d ServerSetup￨1￨d (￨1￨d NonExistingProfileTestCase￨1￨d .￨1￨d NonExistingProfileTestCaseSetup￨1￨d .￨1￨d class￨1￨d )￨1￨d @￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d NonExistingProfileTestCase￨1￨d extends￨1￨d AbstractLoggingTest￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d NonExistingProfileTestCase￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d @￨2￨d ArquillianResource￨2￨d (￨2￨d LoggingServlet￨2￨d .￨2￨d class￨2￨d )￨2￨d URL￨2￨d url￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d LOG_FILE_NAME￨2￨d =￨2￨d "non-existing-profile-test.log"￨2￨d ;￨2￨d private￨2￨d static￨2￨d File￨2￨d loggingTestLog￨2￨d ;￨2￨d static￨2￨d class￨2￨d NonExistingProfileTestCaseSetup￨2￨d extends￨2￨d AbstractMgmtServerSetupTask￨2￨d {￨2￨d @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f doSetup￨3￨f (￨3￨f ManagementClient￨3￨f managementClient￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f tearDown￨3￨f (￨3￨f ManagementClient￨3￨f managementClient￨3￨f ,￨3￨f String￨3￨f containerId￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f WebArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f AfterClass￨2￨f @￨2￨f RunAsClient￨2￨f public￨2￨f static￨2￨f void￨2￨f cleanCustomFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f @￨2￨f RunAsClient￨2￨f public￨2￨f void￨2￨f warningMessageTest￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f BufferedReader￨3￨e br￨3￨e =￨3￨e new￨3￨e BufferedReader￨3￨e (￨3￨e new￨3￨e InputStreamReader￨3￨e (￨3￨e new￨3￨e FileInputStream￨3￨e (￨3￨e NonExistingProfileTestCase￨3￨e .￨3￨e loggingTestLog￨3￨e )￨3￨e ,￨3￨e StandardCharsets￨3￨e .￨3￨e UTF_8￨3￨e )￨3￨e )￨3￨e ;￨3￨e String￨3￨e line￨3￨e ;￨3￨e boolean￨3￨e warningFound￨3￨e =￨3￨e false￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c line￨4￨c =￨4￨c br￨4￨c .￨4￨c readLine￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b if￨4￨b (￨4￨b line￨4￨b .￨4￨b contains￨4￨b (￨4￨b "JBAS011509"￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b warningFound￨4￨e =￨4￨e true￨4￨e ;￨4￨e break￨4￨e ;￨4￨e }￨3￨l br￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertTrue￨3￨e (￨3￨e warningFound￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f @￨2￨f RunAsClient￨2￨f public￨2￨f void￨2￨f defaultLoggingTest￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ForStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d initializers￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d true￨2￨d ,￨2￨d Expression￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d Expression￨2￨d optionalConditionExpression￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d updaters￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d true￨2￨d ,￨2￨d Expression￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d Statement￨2￨d body￨2￨d =￨2￨d null￨2￨d ;￨2￨d ForStatement￨2￨d (￨2￨d AST￨2￨d ast￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f int￨2￨f getNodeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f ForStatement￨3￨e result￨3￨e =￨3￨e new￨3￨e ForStatement￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setSourceRange￨3￨e (￨3￨e this￨3￨e .￨3￨e getStartPosition￨3￨e (￨3￨e )￨3￨e ,￨3￨e this￨3￨e .￨3￨e getLength￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setLeadingComment￨3￨b (￨3￨b getLeadingComment￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e initializers￨3￨e (￨3￨e )￨3￨e .￨3￨e addAll￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtrees￨3￨e (￨3￨e target￨3￨e ,￨3￨e initializers￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setExpression￨3￨e (￨3￨e (￨3￨e (￨3￨e Expression￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getExpression￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e updaters￨3￨e (￨3￨e )￨3￨e .￨3￨e addAll￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtrees￨3￨e (￨3￨e target￨3￨e ,￨3￨e updaters￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setBody￨3￨e (￨3￨e (￨3￨e (￨3￨e Statement￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getBody￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f subtreeMatch￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f initializers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f getExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpression￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f updaters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Statement￨2￨f getBody￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBody￨2￨f (￨2￨f Statement￨3￨p statement￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BeanShell￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f evalSelection￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p JEditTextArea￨3￨p textArea￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f showEvaluateDialog￨2￨f (￨2￨f View￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f showEvaluateLinesDialog￨2￨f (￨2￨f View￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f runScript￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Reader￨3￨p in￨3￨p ,￨3￨p boolean￨3￨p ownNamespace￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f _runScript￨2￨f (￨2￨f View￨2￨f view￨2￨f ,￨2￨f String￨2￨f path￨2￨f ,￨2￨f Reader￨2￨f in￨2￨f ,￨2￨f boolean￨2￨f ownNamespace￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f eval￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p NameSpace￨3￨p namespace￨3￨p ,￨3￨p String￨3￨p command￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f _eval￨2￨f (￨2￨f View￨2￨f view￨2￨f ,￨2￨f NameSpace￨2￨f namespace￨2￨f ,￨2￨f String￨2￨f command￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f BshMethod￨2￨f cacheBlock￨2￨f (￨2￨f String￨2￨f id￨2￨f ,￨2￨f String￨2￨f code￨2￨f ,￨2￨f boolean￨2￨f namespace￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e name￨3￨e =￨3￨e "__internal_"￨3￨e +￨3￨e id￨3￨e ;￨3￨e if￨3￨j (￨3￨j namespace￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b BeanShell￨4￨b .￨4￨b _eval￨4￨b (￨4￨b null￨4￨b ,￨4￨b BeanShell￨4￨b .￨4￨b global￨4￨b ,￨4￨b (￨4￨b (￨4￨b (￨4￨b name￨4￨b +￨4￨b "(ns)<seq2seq4repair_space>{\this.callstack.set(0,ns);\n"￨4￨b )￨4￨b +￨4￨b code￨4￨b )￨4￨b +￨4￨b "\n}"￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨f BeanShell￨4￨f .￨4￨f global￨4￨f .￨4￨f getMethod￨4￨f (￨4￨f name￨4￨f ,￨4￨f new￨4￨f Class￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j BeanShell￨4￨e .￨4￨e _eval￨4￨e (￨4￨e null￨4￨e ,￨4￨e BeanShell￨4￨e .￨4￨e global￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e name￨4￨e +￨4￨e "()<seq2seq4repair_space>{\n"￨4￨e )￨4￨e +￨4￨e code￨4￨e )￨4￨e +￨4￨e "\n}"￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e BeanShell￨4￨e .￨4￨e global￨4￨e .￨4￨e getMethod￨4￨e (￨4￨e name￨4￨e ,￨4￨e new￨4￨e Class￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f Object￨2￨f runCachedBlock￨2￨f (￨2￨f BshMethod￨2￨f method￨2￨f ,￨2￨f View￨2￨f view￨2￨f ,￨2￨f NameSpace￨2￨f namespace￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isScriptRunning￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f NameSpace￨2￨f getNameSpace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f runScript￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p boolean￨3￨p ownNamespace￨3￨p ,￨3￨p boolean￨3￨p rethrowBshErrors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f runScript￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Reader￨3￨p in￨3￨p ,￨3￨p boolean￨3￨p ownNamespace￨3￨p ,￨3￨p boolean￨3￨p rethrowBshErrors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f eval￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p String￨3￨p command￨3￨p ,￨3￨p boolean￨3￨p rethrowBshErrors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f eval￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p NameSpace￨3￨p namespace￨3￨p ,￨3￨p String￨3￨p command￨3￨p ,￨3￨p boolean￨3￨p rethrowBshErrors￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e Object￨2￨e [￨2￨e ]￨2￨e NO_ARGS￨2￨e =￨2￨e new￨2￨e Object￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e Interpreter￨2￨e interpForMethods￨2￨e ;￨2￨e private￨2￨e static￨2￨e NameSpace￨2￨e global￨2￨e ;￨2￨e private￨2￨e static￨2￨e boolean￨2￨e running￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f unwrapException￨2￨f (￨2￨f Exception￨2￨f e￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f handleException￨2￨f (￨2￨f View￨3￨p view￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Throwable￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Interpreter￨2￨f createInterpreter￨2￨f (￨2￨f NameSpace￨3￨p nameSpace￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PackageTest￨1￨d extends￨1￨d JMeterTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f PackageTest￨2￨f (￨2￨f String￨3￨p arg0￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f CSVRead￨2￨f setCSVReadParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f StringFromFile￨2￨f SFFParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f ,￨2￨f String￨2￨f p4￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f SplitFunction￨2￨f SplitParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f BeanShell￨2￨f BSHFParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Collection￨2￨f MakeParams￨2￨f (￨2￨f String￨3￨p p1￨3￨p ,￨3￨p String￨3￨p p2￨3￨p ,￨3￨p String￨3￨p p3￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e JMeterContext￨2￨e jmctx￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e JMeterVariables￨2￨e vars￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f BSH1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f splitTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest5￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e CSVRead￨2￨e cr1￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr2￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr3￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr4￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr5￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr6￨2￨e ;￨2￨e private￨2￨d static￨2￨d class￨2￨d Baton￨2￨d {￨2￨d void￨3￨f pass￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f done￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨e static￨2￨e final￨2￨e PackageTest￨2￨e .￨2￨e Baton￨2￨e baton￨2￨e =￨2￨e new￨2￨e PackageTest￨2￨e .￨2￨e Baton￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f CSVThread1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVThread2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVRun￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVParams￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVSetup￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSValias￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVNoFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVBlankLine￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestNull￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestrowNum￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestColumns￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestDefault￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f XPathFileContainer￨3￨e f￨3￨e =￨3￨e new￨3￨e XPathFileContainer￨3￨e (￨3￨e "../build.xml"￨3￨e ,￨3￨e "/project/@default"￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e f￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "Not<seq2seq4repair_space>empty"￨3￨e ,￨3￨e (￨3￨e (￨3￨e f￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertEquals￨3￨b (￨3￨b "all"￨3￨b ,￨3￨b f￨3￨b .￨3￨b getXPathString￨3￨b (￨3￨b 0￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f XPathEmpty￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathNoFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathFile1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathFile2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e XPath￨2￨e sxp1￨2￨e ;￨2￨e private￨2￨e static￨2￨e XPath￨2￨e sxp2￨2￨e ;￨2￨e public￨2￨f void￨2￨f XPathSetup1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathSetup2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathThread1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathThread2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f XPath￨2￨f setupXPath￨2￨f (￨2￨f String￨2￨f file￨2￨f ,￨2￨f String￨2￨f expr￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f randomTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f variableTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f evalTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f evalTest2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f sumTest￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkSum￨2￨f (￨2￨f AbstractFunction￨2￨f func￨2￨f ,￨2￨f String￨2￨f value￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f addends￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkSumNoVar￨2￨f (￨2￨f AbstractFunction￨2￨f func￨2￨f ,￨2￨f String￨2￨f value￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f addends￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AnnotProxyFieldValueFactory￨1￨d implements￨1￨d IFieldValueFactory￨1￨d {￨1￨d private￨2￨e final￨2￨e ISpringContextLocator￨2￨e contextLocator￨2￨e ;￨2￨e private￨2￨e final￨2￨e ConcurrentHashMap￨2￨e <￨2￨e SpringBeanLocator￨2￨e ,￨2￨e Object￨2￨e >￨2￨e cache￨2￨e =￨2￨e Generics￨2￨e .￨2￨e newConcurrentHashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e ConcurrentHashMap￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e String￨2￨e >￨2￨e beanNameCache￨2￨e =￨2￨e Generics￨2￨e .￨2￨e newConcurrentHashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e wrapInProxies￨2￨e ;￨2￨e public￨2￨f AnnotProxyFieldValueFactory￨2￨f (￨2￨f ISpringContextLocator￨3￨p contextLocator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotProxyFieldValueFactory￨2￨f (￨2￨f ISpringContextLocator￨3￨p contextLocator￨3￨p ,￨3￨p boolean￨3￨p wrapInProxies￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getFieldValue￨2￨f (￨2￨f Field￨3￨p field￨3￨p ,￨3￨p Object￨3￨p fieldOwner￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b field￨3￨b .￨3￨b isAnnotationPresent￨3￨b (￨3￨b SpringBean￨3￨b .￨3￨b class￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b SpringBeanLocator￨3￨e locator￨3￨e =￨3￨e new￨3￨e SpringBeanLocator￨3￨e (￨3￨e getBeanName￨3￨e (￨3￨e field￨3￨e )￨3￨e ,￨3￨e field￨3￨e .￨3￨e getType￨3￨e (￨3￨e )￨3￨e ,￨3￨e contextLocator￨3￨e )￨3￨e ;￨3￨e Object￨3￨e cachedValue￨3￨e =￨3￨e cache￨3￨e .￨3￨e get￨3￨e (￨3￨e locator￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j cachedValue￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e cachedValue￨4￨e ;￨4￨e }￨3￨j final￨3￨e Object￨3￨e target￨3￨e ;￨3￨e if￨3￨j (￨3￨j wrapInProxies￨4￨c )￨3￨j {￨3￨j target￨4￨e =￨4￨e LazyInitProxyFactory￨4￨e .￨4￨e createProxy￨4￨e (￨4￨e field￨4￨e .￨4￨e getType￨4￨e (￨4￨e )￨4￨e ,￨4￨e locator￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j target￨4￨e =￨4￨e locator￨4￨e .￨4￨e locateProxyTarget￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j locator￨4￨c .￨4￨c isSingletonBean￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j cache￨4￨e .￨4￨e put￨4￨e (￨4￨e locator￨4￨e ,￨4￨e target￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e target￨3￨e ;￨3￨e }￨3￨e return￨3￨e null￨3￨e ;￨3￨e }￨2￨f private￨2￨f String￨2￨f getBeanName￨2￨f (￨2￨f final￨3￨p Field￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f String￨2￨f getBeanNameOfClass￨2￨f (￨2￨f ApplicationContext￨3￨p ctx￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clazz￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsField￨2￨f (￨2￨f Field￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d PrefixMapper￨1￨d {￨1￨d private￨2￨e static￨2￨e int￨2￨e debug￨2￨e =￨2￨e 1￨2￨e ;￨2￨e SimpleHashtable￨2￨e vhostMaps￨2￨e =￨2￨e new￨2￨e SimpleHashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e SimpleHashtable￨2￨e vhostMapsWC￨2￨e =￨2￨e new￨2￨e SimpleHashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e SimpleHashtable￨2￨e prefixMappedServlets￨2￨e ;￨2￨e SimpleHashtable￨2￨e exactMappedServlets￨2￨e ;￨2￨e SimpleHashtable￨2￨e mapCache￨2￨e ;￨2￨e boolean￨2￨e mapCacheEnabled￨2￨e =￨2￨e false￨2￨e ;￨2￨e boolean￨2￨e ignoreCase￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f PrefixMapper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMapCache￨2￨f (￨2￨f boolean￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIgnoreCase￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAllMappings￨2￨f (￨2￨f String￨3￨p host￨3￨p ,￨3￨p Context￨3￨p ctx￨3￨p )￨2￨f {￨2￨f PrefixMapper￨3￨e vmap￨3￨e =￨3￨e this￨3￨e ;￨3￨e if￨3￨j (￨3￨j host￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j host￨4￨e =￨4￨e host￨4￨e .￨4￨e toLowerCase￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j host￨5￨c .￨5￨c startsWith￨5￨c (￨5￨c "*"￨5￨c )￨5￨c )￨4￨j {￨4￨j vmap￨5￨e =￨5￨e (￨5￨e (￨5￨e PrefixMapper￨5￨e )￨5￨e (￨5￨e vhostMapsWC￨5￨e .￨5￨e get￨5￨e (￨5￨e host￨5￨e .￨5￨e substring￨5￨e (￨5￨e 1￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j vmap￨5￨e =￨5￨e (￨5￨e (￨5￨e PrefixMapper￨5￨e )￨5￨e (￨5￨e vhostMaps￨5￨e .￨5￨e get￨5￨e (￨5￨e host￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j Enumeration￨3￨e en￨3￨e =￨3￨e vmap￨3￨e .￨3￨e prefixMappedServlets￨3￨e .￨3￨e keys￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l en￨4￨c .￨4￨c hasMoreElements￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l String￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e String￨4￨e )￨4￨e (￨4￨e en￨4￨e .￨4￨e nextElement￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e Container￨4￨e ct￨4￨e =￨4￨e (￨4￨e (￨4￨e Container￨4￨e )￨4￨e (￨4￨e vmap￨4￨e .￨4￨e prefixMappedServlets￨4￨e .￨4￨e get￨4￨e (￨4￨e s￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b ct￨4￨b .￨4￨b getContext￨4￨b (￨4￨b )￨4￨b )￨4￨b ==￨4￨b ctx￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c PrefixMapper￨5￨c .￨5￨c debug￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j ctx￨5￨e .￨5￨e log￨5￨e (￨5￨e (￨5￨e "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨5￨e +￨5￨e s￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j vmap￨4￨e .￨4￨e prefixMappedServlets￨4￨e .￨4￨e remove￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e }￨3￨l en￨3￨e =￨3￨e vmap￨3￨e .￨3￨e exactMappedServlets￨3￨e .￨3￨e keys￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l en￨4￨c .￨4￨c hasMoreElements￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l String￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e String￨4￨e )￨4￨e (￨4￨e en￨4￨e .￨4￨e nextElement￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e Container￨4￨e ct￨4￨e =￨4￨e (￨4￨e (￨4￨e Container￨4￨e )￨4￨e (￨4￨e vmap￨4￨e .￨4￨e exactMappedServlets￨4￨e .￨4￨e get￨4￨e (￨4￨e s￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c ct￨5￨c .￨5￨c getContext￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c ctx￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c PrefixMapper￨6￨c .￨6￨c debug￨6￨c )￨6￨c >￨6￨c 0￨6￨c )￨5￨j {￨5￨j ctx￨6￨e .￨6￨e log￨6￨e (￨6￨e (￨6￨e "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨6￨e +￨6￨e s￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j vmap￨5￨e .￨5￨e exactMappedServlets￨5￨e .￨5￨e remove￨5￨e (￨5￨e s￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l mapCache￨3￨e =￨3￨e new￨3￨e SimpleHashtable￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f addMapping￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f addExactMapping￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addMapping￨2￨f (￨2￨f String￨3￨p host￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addMappings￨2￨f (￨2￨f Enumeration￨3￨p hostAliases￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addExactMapping￨2￨f (￨2￨f String￨3￨p host￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addExactMappings￨2￨f (￨2￨f Enumeration￨3￨p hostAliases￨3￨p ,￨3￨p String￨3￨p path￨3￨p ,￨3￨p Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getLongestPrefixMatch￨2￨f (￨2￨f MessageBytes￨3￨p hostMB￨3￨p ,￨3￨p MessageBytes￨3￨p pathMB￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d MethodVerifier15￨1￨d extends￨1￨d MethodVerifier￨1￨d {￨1￨d MethodVerifier15￨2￨f (￨2￨f LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areTypesEqual￨2￨f (￨2￨f TypeBinding￨3￨p one￨3￨p ,￨3￨p TypeBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkAgainstInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p methods￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f doesMethodOverride￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hasBoundedParameters￨2￨f (￨2￨f ParameterizedTypeBinding￨3￨p parameterizedType￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isReturnTypeSubstituable￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isTypeSubstituable￨2￨f (￨2￨f TypeBinding￨3￨p one￨3￨p ,￨3￨p TypeBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j one￨4￨c ==￨4￨c two￨4￨c )￨3￨j {￨3￨j return￨4￨e true￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c one￨4￨c .￨4￨c isArrayType￨4￨c (￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c two￨4￨c .￨4￨c isArrayType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c one￨5￨c .￨5￨c isArrayType￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c two￨5￨c .￨5￨c isArrayType￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e false￨5￨e ;￨5￨e }￨4￨j ArrayBinding￨4￨e arrayOne￨4￨e =￨4￨e (￨4￨e (￨4￨e ArrayBinding￨4￨e )￨4￨e (￨4￨e one￨4￨e )￨4￨e )￨4￨e ;￨4￨e ArrayBinding￨4￨e arrayTwo￨4￨e =￨4￨e (￨4￨e (￨4￨e ArrayBinding￨4￨e )￨4￨e (￨4￨e two￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c arrayOne￨5￨c .￨5￨c dimensions￨5￨c )￨5￨c !=￨5￨c (￨5￨c arrayTwo￨5￨c .￨5￨c dimensions￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e false￨5￨e ;￨5￨e }￨4￨j one￨4￨e =￨4￨e arrayOne￨4￨e .￨4￨e leafComponentType￨4￨e ;￨4￨e two￨4￨e =￨4￨e arrayTwo￨4￨e .￨4￨e leafComponentType￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c one￨4￨c .￨4￨c isBaseType￨4￨c (￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c two￨4￨c .￨4￨c isBaseType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j ReferenceBinding￨3￨e subType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e one￨3￨e )￨3￨e )￨3￨e ;￨3￨e ReferenceBinding￨3￨e superType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e two￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j CharOperation￨4￨c .￨4￨c equals￨4￨c (￨4￨c subType￨4￨c .￨4￨c compoundName￨4￨c ,￨4￨c superType￨4￨c .￨4￨c compoundName￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e true￨4￨e ;￨4￨e }￨3￨j superType￨3￨e =￨3￨e BinaryTypeBinding￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e superType￨3￨e ,￨3￨e this￨3￨e .￨3￨e environment￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e subType￨3￨e =￨3￨e BinaryTypeBinding￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e subType￨3￨e ,￨3￨e this￨3￨e .￨3￨e environment￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j superType￨4￨c .￨4￨c isInterface￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e subType￨4￨e .￨4￨e implementsInterface￨4￨e (￨4￨e superType￨4￨e ,￨4￨e true￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b (￨3￨b subType￨3￨b .￨3￨b isClass￨3￨b (￨3￨b )￨3￨b )￨3￨b &&￨3￨b (￨3￨b isSameClassOrSubclassOf￨3￨b (￨3￨b subType￨3￨b ,￨3￨b superType￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TCPSyslogServer￨1￨d extends￨1￨d TCPNetSyslogServer￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d LOGGER￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d TCPSyslogServer￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d @￨2￨d SuppressWarnings￨2￨d (￨2￨d "unchecked"￨2￨d )￨2￨d public￨2￨d TCPSyslogServer￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f TCPSyslogServer￨4￨e .￨4￨e LOGGER￨4￨e .￨4￨e debug￨4￨e (￨4￨e "Creating<seq2seq4repair_space>Syslog<seq2seq4repair_space>server<seq2seq4repair_space>socket"￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e serverSocket￨4￨e =￨4￨e createServerSocket￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f TCPSyslogServer￨4￨e .￨4￨e LOGGER￨4￨e .￨4￨e error￨4￨e (￨4￨e "ServerSocket<seq2seq4repair_space>creation<seq2seq4repair_space>failed."￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e throw￨4￨e new￨4￨e SyslogRuntimeException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f while￨3￨l (￨3￨l !￨4￨c (￨4￨c this￨4￨c .￨4￨c shutdown￨4￨c )￨4￨c )￨3￨l {￨3￨l try￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e Socket￨5￨e socket￨5￨e =￨5￨e this￨5￨e .￨5￨e serverSocket￨5￨e .￨5￨e accept￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j TCPSyslogServer￨6￨c .￨6￨c LOGGER￨6￨c .￨6￨c isDebugEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j TCPSyslogServer￨6￨e .￨6￨e LOGGER￨6￨e .￨6￨e debug￨6￨e (￨6￨e (￨6￨e "Handling<seq2seq4repair_space>Syslog<seq2seq4repair_space>client<seq2seq4repair_space>"￨6￨e +￨6￨e (￨6￨e socket￨6￨e .￨6￨e getInetAddress￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j new￨5￨e Thread￨5￨e (￨5￨e new￨5￨e TCPSyslogSocketHandler￨5￨e (￨5￨e this￨5￨e .￨5￨e sockets￨5￨e ,￨5￨e this￨5￨e ,￨5￨e socket￨5￨e )￨5￨e )￨5￨e .￨5￨e start￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f <START_BUG>￨5￨b TCPSyslogServer￨5￨b .￨5￨b LOGGER￨5￨b .￨5￨b error￨5￨b (￨5￨b "IOException<seq2seq4repair_space>occurred."￨5￨b ,￨5￨b e￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f }￨3￨l }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeblogicDeploymentTool￨1￨d extends￨1￨d GenericDeploymentTool￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e PUBLICID_EJB11￨2￨e =￨2￨e "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>1.1//EN"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PUBLICID_EJB20￨2￨e =￨2￨e "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>2.0//EN"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PUBLICID_WEBLOGIC_EJB510￨2￨e =￨2￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>5.1.0<seq2seq4repair_space>EJB//EN"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PUBLICID_WEBLOGIC_EJB600￨2￨e =￨2￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>6.0.0<seq2seq4repair_space>EJB//EN"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PUBLICID_WEBLOGIC_EJB700￨2￨e =￨2￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>7.0.0<seq2seq4repair_space>EJB//EN"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL51_EJB11_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb/deployment/xml/ejb-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL60_EJB11_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb20/dd/xml/ejb11-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL60_EJB20_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb20/dd/xml/ejb20-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL51_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb/deployment/xml/weblogic-ejb-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL60_51_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb20/dd/xml/weblogic510-ejb-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL60_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb20/dd/xml/weblogic600-ejb-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WL70_DTD_LOCATION￨2￨e =￨2￨e "/weblogic/ejb20/dd/xml/weblogic700-ejb-jar.dtd"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_COMPILER￨2￨e =￨2￨e "default"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e WL_DD￨2￨e =￨2￨e "weblogic-ejb-jar.xml"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e WL_CMP_DD￨2￨e =￨2￨e "weblogic-cmp-rdbms-jar.xml"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e COMPILER_EJB11￨2￨e =￨2￨e "weblogic.ejbc"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e COMPILER_EJB20￨2￨e =￨2￨e "weblogic.ejbc20"￨2￨e ;￨2￨e private￨2￨e String￨2￨e jarSuffix￨2￨e =￨2￨e ".jar"￨2￨e ;￨2￨e private￨2￨e String￨2￨e weblogicDTD￨2￨e ;￨2￨e private￨2￨e String￨2￨e ejb11DTD￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e keepgenerated￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e String￨2￨e ejbcClass￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e additionalArgs￨2￨e =￨2￨e ""￨2￨e ;￨2￨e private￨2￨e String￨2￨e additionalJvmArgs￨2￨e =￨2￨e ""￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e keepGeneric￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e String￨2￨e compiler￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e alwaysRebuild￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e noEJBC￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e newCMP￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e Path￨2￨e wlClasspath￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e sysprops￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Integer￨2￨e jvmDebugLevel￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e FileUtils￨2￨e fileUtils￨2￨e =￨2￨e FileUtils￨2￨e .￨2￨e newFileUtils￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e File￨2￨e outputDir￨2￨e ;￨2￨e public￨2￨f void￨2￨f addSysproperty￨2￨f (￨2￨f Environment￨3￨p .￨3￨p Variable￨3￨p sysp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createWLClasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOutputDir￨2￨f (￨2￨f File￨3￨p outputDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWLClasspath￨2￨f (￨2￨f Path￨3￨p wlClasspath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCompiler￨2￨f (￨2￨f String￨3￨p compiler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRebuild￨2￨f (￨2￨f boolean￨3￨p rebuild￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setJvmDebugLevel￨2￨f (￨2￨f Integer￨3￨p jvmDebugLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Integer￨2￨f getJvmDebugLevel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSuffix￨2￨f (￨2￨f String￨3￨p inString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setKeepgeneric￨2￨f (￨2￨f boolean￨3￨p inValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setKeepgenerated￨2￨f (￨2￨f String￨3￨p inValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setArgs￨2￨f (￨2￨f String￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setJvmargs￨2￨f (￨2￨f String￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEjbcClass￨2￨f (￨2￨f String￨3￨p ejbcClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getEjbcClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWeblogicdtd￨2￨f (￨2￨f String￨3￨p inString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWLdtd￨2￨f (￨2￨f String￨3￨p inString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEJBdtd￨2￨f (￨2￨f String￨3￨p inString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOldCMP￨2￨f (￨2￨f boolean￨3￨p oldCMP￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setNewCMP￨2￨f (￨2￨f boolean￨3￨p newCMP￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setNoEJBC￨2￨f (￨2￨f boolean￨3￨p noEJBC￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f registerKnownDTDs￨2￨f (￨2￨f DescriptorHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DescriptorHandler￨2￨f getWeblogicDescriptorHandler￨2￨f (￨2￨f final￨3￨p File￨3￨p srcDir￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addVendorFiles￨2￨f (￨2￨f Hashtable￨3￨p ejbFiles￨3￨p ,￨3￨p String￨3￨p ddPrefix￨3￨p )￨2￨f {￨2￨f }￨2￨f File￨2￨f getVendorOutputJarFile￨2￨f (￨2￨f String￨3￨p baseName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildWeblogicJar￨2￨f (￨2￨f File￨3￨p sourceJar￨3￨p ,￨3￨p File￨3￨p destJar￨3￨p ,￨3￨p String￨3￨p publicId￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f writeJar￨2￨f (￨2￨f String￨2￨f baseName￨2￨f ,￨2￨f File￨2￨f jarFile￨2￨f ,￨2￨f Hashtable￨2￨f files￨2￨f ,￨2￨f String￨2￨f publicId￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f validateConfigured￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isRebuildRequired￨2￨f (￨2￨f File￨3￨p genericJarFile￨3￨p ,￨3￨p File￨3￨p weblogicJarFile￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ClassLoader￨2￨f getClassLoaderFromJar￨2￨f (￨2￨f File￨2￨f classjar￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f Path￨3￨e lookupPath￨3￨e =￨3￨e new￨3￨e Path￨3￨e (￨3￨e getTask￨3￨e (￨3￨e )￨3￨e .￨3￨e getProject￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e lookupPath￨3￨e .￨3￨e setLocation￨3￨e (￨3￨e classjar￨3￨e )￨3￨e ;￨3￨e Path￨3￨e classpath￨3￨e =￨3￨e getCombinedClasspath￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j classpath￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j lookupPath￨4￨e .￨4￨e append￨4￨e (￨4￨e classpath￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b new￨3￨b org￨3￨b .￨3￨b apache￨3￨b .￨3￨b tools￨3￨b .￨3￨b ant￨3￨b .￨3￨b AntClassLoader￨3￨b (￨3￨b getTask￨3￨b (￨3￨b )￨3￨b .￨3￨b getProject￨3￨b (￨3￨b )￨3￨b ,￨3￨b lookupPath￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MenuSeparatorContribution￨1￨d extends￨1￨d CommonMenuAddition￨1￨d {￨1￨d public￨2￨f MenuSeparatorContribution￨2￨f (￨2￨f IConfigurationElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e val￨3￨e =￨3￨e element￨3￨e .￨3￨e getAttribute￨3￨e (￨3￨e ATT_VISIBLE￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b Boolean￨3￨b .￨3￨b parseBoolean￨3￨b (￨3￨b val￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f fill￨2￨f (￨2￨f Menu￨3￨p parent￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fill￨2￨f (￨2￨f ToolBar￨3￨p parent￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Copy￨1￨d extends￨1￨d Task￨1￨d {￨1￨d protected￨2￨e File￨2￨e file￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e File￨2￨e destFile￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e File￨2￨e destDir￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e Vector￨2￨e filesets￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e filtering￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e forceOverwrite￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e flatten￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨e int￨2￨e verbosity￨2￨e =￨2￨e Project￨2￨e .￨2￨e MSG_VERBOSE￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e includeEmpty￨2￨e =￨2￨e true￨2￨e ;￨2￨e protected￨2￨e Hashtable￨2￨e fileCopyMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e Hashtable￨2￨e dirCopyMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f setFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTofile￨2￨f (￨2￨f File￨3￨p destFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTodir￨2￨f (￨2￨f File￨3￨p destDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFiltering￨2￨f (￨2￨f boolean￨3￨p filtering￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOverwrite￨2￨f (￨2￨f boolean￨3￨p overwrite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFlatten￨2￨f (￨2￨f boolean￨3￨p flatten￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVerbose￨2￨f (￨2￨f boolean￨3￨p verbose￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludeEmptyDirs￨2￨f (￨2￨f boolean￨3￨p includeEmpty￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFileset￨2￨f (￨2￨f FileSet￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f validateAttributes￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f scan￨2￨f (￨2￨f File￨3￨p fromDir￨3￨p ,￨3￨p File￨3￨p toDir￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p files￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p dirs￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f buildMap￨2￨f (￨2￨f File￨3￨p fromDir￨3￨p ,￨3￨p File￨3￨p toDir￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p names￨3￨p ,￨3￨p FileNameMapper￨3￨p mapper￨3￨p ,￨3￨p Hashtable￨3￨p map￨3￨p )￨2￨f {￨2￨f String￨3￨e [￨3￨e ]￨3￨e toCopy￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j forceOverwrite￨4￨c )￨3￨j {￨3￨j toCopy￨4￨e =￨4￨e names￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b SourceFileScanner￨4￨b ds￨4￨b =￨4￨b new￨4￨b SourceFileScanner￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b toCopy￨4￨e =￨4￨e ds￨4￨e .￨4￨e restrict￨4￨e (￨4￨e names￨4￨e ,￨4￨e fromDir￨4￨e ,￨4￨e toDir￨4￨e ,￨4￨e mapper￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c toCopy￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l File￨4￨e src￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e fromDir￨4￨e ,￨4￨e toCopy￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e File￨4￨e dest￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e toDir￨4￨e ,￨4￨e mapper￨4￨e .￨4￨e mapFileName￨4￨e (￨4￨e toCopy￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e ;￨4￨e map￨4￨e .￨4￨e put￨4￨e (￨4￨e src￨4￨e .￨4￨e getAbsolutePath￨4￨e (￨4￨e )￨4￨e ,￨4￨e dest￨4￨e .￨4￨e getAbsolutePath￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f protected￨2￨f void￨2￨f doFileOperations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SearchGroupsRequestFactory￨1￨d implements￨1￨d ShardRequestFactory￨1￨d {￨1￨d public￨2￨f ShardRequest￨2￨f [￨2￨f ]￨2￨f constructRequest￨2￨f (￨2￨f ResponseBuilder￨3￨p rb￨3￨p )￨2￨f {￨2￨f ShardRequest￨3￨e sreq￨3￨e =￨3￨e new￨3￨e ShardRequest￨3￨e (￨3￨e )￨3￨e ;￨3￨e GroupingSpecification￨3￨e groupingSpecification￨3￨e =￨3￨e rb￨3￨e .￨3￨e getGroupingSpec￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c groupingSpecification￨4￨c .￨4￨c getFields￨4￨c (￨4￨c )￨4￨c .￨4￨c length￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e ShardRequest￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ;￨4￨e }￨3￨j sreq￨3￨e .￨3￨e purpose￨3￨e =￨3￨e ShardRequest￨3￨e .￨3￨e PURPOSE_GET_TOP_GROUPS￨3￨e ;￨3￨e sreq￨3￨e .￨3￨e params￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e solr￨3￨e .￨3￨e common￨3￨e .￨3￨e params￨3￨e .￨3￨e ModifiableSolrParams￨3￨e (￨3￨e rb￨3￨e .￨3￨e req￨3￨e .￨3￨e getParams￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e sreq￨3￨e .￨3￨e params￨3￨e .￨3￨e remove￨3￨e (￨3￨e SHARDS￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c rb￨4￨c .￨4￨c shards_start￨4￨c )￨4￨c >￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e START￨4￨e ,￨4￨e rb￨4￨e .￨4￨e shards_start￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e START￨4￨e ,￨4￨e "0"￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c rb￨4￨c .￨4￨c shards_rows￨4￨c )￨4￨c >￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e ROWS￨4￨e ,￨4￨e rb￨4￨e .￨4￨e shards_rows￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e ROWS￨4￨e ,￨4￨e (￨4￨e (￨4￨e rb￨4￨e .￨4￨e getSortSpec￨4￨e (￨4￨e )￨4￨e .￨4￨e getOffset￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e (￨4￨e rb￨4￨e .￨4￨e getSortSpec￨4￨e (￨4￨e )￨4￨e .￨4￨e getCount￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b sreq￨3￨b .￨3￨b params￨3￨b .￨3￨b set￨3￨b (￨3￨b "group.distibuted.first"￨3￨b ,￨3￨b "true"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c (￨4￨c (￨4￨c rb￨4￨c .￨4￨c getFieldFlags￨4￨c (￨4￨c )￨4￨c )￨4￨c &￨4￨c (￨4￨c SolrIndexSearcher￨4￨c .￨4￨c GET_SCORES￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨4￨c ||￨4￨c (￨4￨c rb￨4￨c .￨4￨c getSortSpec￨4￨c (￨4￨c )￨4￨c .￨4￨c includesScore￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e FL￨4￨e ,￨4￨e (￨4￨e (￨4￨e rb￨4￨e .￨4￨e req￨4￨e .￨4￨e getSchema￨4￨e (￨4￨e )￨4￨e .￨4￨e getUniqueKeyField￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e ",score"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j sreq￨4￨e .￨4￨e params￨4￨e .￨4￨e set￨4￨e (￨4￨e FL￨4￨e ,￨4￨e rb￨4￨e .￨4￨e req￨4￨e .￨4￨e getSchema￨4￨e (￨4￨e )￨4￨e .￨4￨e getUniqueKeyField￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨f new￨3￨f ShardRequest￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d UnmodifiableBoundedCollection￨1￨d <￨1￨d E￨1￨d >￨1￨d extends￨1￨d AbstractCollectionDecorator￨1￨d <￨1￨d E￨1￨d >￨1￨d implements￨1￨d BoundedCollection￨1￨d <￨1￨d E￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e -￨2￨e 7112672385450340330L￨2￨e ;￨2￨e public￨2￨f static￨2￨f <￨2￨f E￨2￨f >￨2￨f BoundedCollection￨2￨f <￨2￨f E￨2￨f >￨2￨f unmodifiableBoundedCollection￨2￨f (￨2￨f final￨3￨p BoundedCollection￨3￨p <￨3￨p E￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f static￨2￨f <￨2￨f E￨2￨f >￨2￨f BoundedCollection￨2￨f <￨2￨f E￨2￨f >￨2￨f unmodifiableBoundedCollection￨2￨f (￨2￨f Collection￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j coll￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e "The<seq2seq4repair_space>collection<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 1000￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j coll￨5￨c instanceof￨5￨c BoundedCollection￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j coll￨5￨c instanceof￨5￨c AbstractCollectionDecorator￨5￨c )￨4￨j {￨4￨j coll￨5￨e =￨5￨e (￨5￨e (￨5￨e AbstractCollectionDecorator￨5￨e <￨5￨e E￨5￨e >￨5￨e )￨5￨e (￨5￨e coll￨5￨e )￨5￨e )￨5￨e .￨5￨e collection￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j coll￨5￨c instanceof￨5￨c SynchronizedCollection￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b coll￨5￨b =￨5￨b (￨5￨b (￨5￨b SynchronizedCollection￨5￨b <￨5￨b E￨5￨b >￨5￨b )￨5￨b (￨5￨b coll￨5￨b )￨5￨b )￨5￨b .￨5￨b collection￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨l if￨3￨j (￨3￨j (￨4￨c coll￨4￨c instanceof￨4￨c BoundedCollection￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e "The<seq2seq4repair_space>collection<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>bounded<seq2seq4repair_space>collection"￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e new￨3￨e UnmodifiableBoundedCollection￨3￨e <￨3￨e E￨3￨e >￨3￨e (￨3￨e (￨3￨e (￨3￨e BoundedCollection￨3￨e <￨3￨e E￨3￨e >￨3￨e )￨3￨e (￨3￨e coll￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f UnmodifiableBoundedCollection￨2￨f (￨2￨f final￨3￨p BoundedCollection￨3￨p <￨3￨p E￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Iterator￨2￨f <￨2￨f E￨2￨f >￨2￨f iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f add￨2￨f (￨2￨f final￨3￨p E￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f addAll￨2￨f (￨2￨f final￨3￨p Collection￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f remove￨2￨f (￨2￨f final￨3￨p Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f removeAll￨2￨f (￨2￨f final￨3￨p Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f retainAll￨2￨f (￨2￨f final￨3￨p Collection￨3￨p <￨3￨p ?￨3￨p >￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f maxSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f BoundedCollection￨2￨f <￨2￨f E￨2￨f >￨2￨f decorated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ColumnIndexer￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f serialize￨2￨f (￨2￨f ColumnFamily￨3￨p columnFamily￨3￨p ,￨3￨p DataOutput￨3￨p dos￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f BloomFilter￨2￨f createColumnBloomFilter￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p columns￨3￨p )￨2￨f {￨2￨f int￨3￨e columnCount￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l IColumn￨4￨c column￨4￨c :￨4￨c columns￨4￨c )￨3￨l {￨3￨l columnCount￨4￨e +=￨4￨e column￨4￨e .￨4￨e getObjectCount￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l <START_BUG>￨3￨b BloomFilter￨3￨b bf￨3￨b =￨3￨b new￨3￨b BloomFilter￨3￨b (￨3￨b columnCount￨3￨b ,￨3￨b 4￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l IColumn￨4￨c column￨4￨c :￨4￨c columns￨4￨c )￨3￨l {￨3￨l bf￨4￨e .￨4￨e add￨4￨e (￨4￨e column￨4￨e .￨4￨e name￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j column￨5￨c instanceof￨5￨c SuperColumn￨5￨c )￨4￨j {￨4￨j Collection￨5￨e <￨5￨e IColumn￨5￨e >￨5￨e subColumns￨5￨e =￨5￨e column￨5￨e .￨5￨e getSubColumns￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l IColumn￨6￨c subColumn￨6￨c :￨6￨c subColumns￨6￨c )￨5￨l {￨5￨l bf￨6￨e .￨6￨e add￨6￨e (￨6￨e subColumn￨6￨e .￨6￨e name￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j }￨3￨l return￨3￨e bf￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f void￨2￨f doIndexing￨2￨f (￨2￨f AbstractType￨2￨f comparator￨2￨f ,￨2￨f Collection￨2￨f <￨2￨f IColumn￨2￨f >￨2￨f columns￨2￨f ,￨2￨f DataOutput￨2￨f dos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JavadocArgumentExpression￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨e char￨2￨e [￨2￨e ]￨2￨e token￨2￨e ;￨2￨e public￨2￨e Argument￨2￨e argument￨2￨e ;￨2￨e public￨2￨f JavadocArgumentExpression￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p name￨3￨p ,￨3￨p int￨3￨p startPos￨3￨p ,￨3￨p int￨3￨p endPos￨3￨p ,￨3￨p TypeReference￨3￨p typeRef￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f internalResolveType￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e constant￨3￨e =￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e .￨4￨e isValidBinding￨4￨e (￨4￨e )￨4￨e ?￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e :￨4￨e null￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c argument￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j TypeReference￨4￨e typeRef￨4￨e =￨4￨e this￨4￨e .￨4￨e argument￨4￨e .￨4￨e type￨4￨e ;￨4￨e if￨4￨j (￨4￨j typeRef￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e resolvedType￨5￨e =￨5￨e typeRef￨5￨e .￨5￨e getTypeBinding￨5￨e (￨5￨e scope￨5￨e )￨5￨e ;￨5￨e typeRef￨5￨e .￨5￨e resolvedType￨5￨e =￨5￨e this￨5￨e .￨5￨e resolvedType￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c typeRef￨6￨c instanceof￨6￨c SingleTypeReference￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c this￨6￨c .￨6￨c resolvedType￨6￨c .￨6￨c leafComponentType￨6￨c (￨6￨c )￨6￨c .￨6￨c enclosingType￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c scope￨6￨c .￨6￨c compilerOptions￨6￨c (￨6￨c )￨6￨c .￨6￨c complianceLevel￨6￨c )￨6￨c <=￨6￨c (￨6￨c ClassFileConstants￨6￨c .￨6￨c JDK1_4￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j scope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e javadocInvalidMemberTypeQualification￨6￨e (￨6￨e this￨6￨e .￨6￨e sourceStart￨6￨e ,￨6￨e this￨6￨e .￨6￨e sourceEnd￨6￨e ,￨6￨e scope￨6￨e .￨6￨e getDeclarationModifiers￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e return￨6￨e null￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j !￨6￨c (￨6￨c this￨6￨c .￨6￨c resolvedType￨6￨c .￨6￨c isValidBinding￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j scope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e javadocInvalidType￨6￨e (￨6￨e typeRef￨6￨e ,￨6￨e this￨6￨e .￨6￨e resolvedType￨6￨e ,￨6￨e scope￨6￨e .￨6￨e getDeclarationModifiers￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e return￨6￨e null￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j isTypeUseDeprecated￨6￨c (￨6￨c this￨6￨c .￨6￨c resolvedType￨6￨c ,￨6￨c scope￨6￨c )￨6￨c )￨5￨j {￨5￨j scope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e javadocDeprecatedType￨6￨e (￨6￨e this￨6￨e .￨6￨e resolvedType￨6￨e ,￨6￨e typeRef￨6￨e ,￨6￨e scope￨6￨e .￨6￨e getDeclarationModifiers￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j <START_BUG>￨5￨b return￨5￨b this￨5￨b .￨5￨b resolvedType￨5￨b =￨5￨b scope￨5￨b .￨5￨b environment￨5￨b (￨5￨b )￨5￨b .￨5￨b convertToRawType￨5￨b (￨5￨b this￨5￨b .￨5￨b resolvedType￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d InflowTestCase￨1￨d extends￨1￨d ContainerResourceMgmtTestBase￨1￨d {￨1￨d @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f ResourceAdapterArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨e ArquillianResource￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRegistryConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e controller￨3￨e =￨3￨e serviceContainer￨3￨e .￨3￨e getService￨3￨e (￨3￨e RA_REPOSITORY_SERVICE￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e controller￨3￨e )￨3￨e ;￨3￨e ResourceAdapterRepository￨3￨e repository￨3￨e =￨3￨e (￨3￨e (￨3￨e ResourceAdapterRepository￨3￨e )￨3￨e (￨3￨e controller￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e repository￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e String￨3￨e >￨3￨e ids￨3￨e =￨3￨e repository￨3￨e .￨3￨e getResourceAdapters￨3￨e (￨3￨e MessageListener￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e ids￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertEquals￨3￨b (￨3￨b 1￨3￨b ,￨3￨b ids￨3￨b .￨3￨b size￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨e piId￨3￨e =￨3￨e ids￨3￨e .￨3￨e iterator￨3￨e (￨3￨e )￨3￨e .￨3￨e next￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e Endpoint￨3￨e endpoint￨3￨e =￨3￨e repository￨3￨e .￨3￨e getEndpoint￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e endpoint￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e MessageListener￨3￨e >￨3￨e listeners￨3￨e =￨3￨e repository￨3￨e .￨3￨e getMessageListeners￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e listeners￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e listeners￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e MessageListener￨3￨e listener￨3￨e =￨3￨e listeners￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e ActivationSpec￨3￨e as￨3￨e =￨3￨e listener￨3￨e .￨3￨e getActivation￨3￨e (￨3￨e )￨3￨e .￨3￨e createInstance￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e as￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e as￨3￨e .￨3￨e getResourceAdapter￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMetadataConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ThrowStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Expression￨2￨e exception￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e exceptionType￨2￨e ;￨2￨e public￨2￨f ThrowStatement￨2￨f (￨2￨f Expression￨3￨p exception￨3￨p ,￨3￨p int￨3￨p startPosition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f exception￨3￨e .￨3￨e analyseCode￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e flowContext￨3￨e ,￨3￨e flowInfo￨3￨e )￨3￨e ;￨3￨e flowContext￨3￨e .￨3￨e checkExceptionHandlers￨3￨e (￨3￨e exceptionType￨3￨e ,￨3￨e this￨3￨e ,￨3￨e flowInfo￨3￨e ,￨3￨e currentScope￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b DeadEnd￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WildcardType￨1￨d extends￨1￨d Type￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d BOUND_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d WildcardType￨2￨d .￨2￨d class￨2￨d ,￨2￨d "bound"￨2￨d ,￨2￨d Type￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d OPTIONAL￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d SimplePropertyDescriptor￨2￨d UPPER_BOUND_PROPERTY￨2￨d =￨2￨d new￨2￨d SimplePropertyDescriptor￨2￨d (￨2￨d WildcardType￨2￨d .￨2￨d class￨2￨d ,￨2￨d "upperBound"￨2￨d ,￨2￨d boolean￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e Type￨2￨e optionalBound￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isUpperBound￨2￨e =￨2￨e true￨2￨e ;￨2￨e WildcardType￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f boolean￨2￨f internalGetSetBooleanProperty￨2￨f (￨2￨f SimplePropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p boolean￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f WildcardType￨3￨e result￨3￨e =￨3￨e new￨3￨e WildcardType￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setSourceRange￨3￨b (￨3￨b this￨3￨b .￨3￨b getStartPosition￨3￨b (￨3￨b )￨3￨b ,￨3￨b this￨3￨b .￨3￨b getLength￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e setBound￨3￨e (￨3￨e (￨3￨e (￨3￨e Type￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getBound￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e isUpperBound￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isUpperBound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Type￨2￨f getBound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBound￨2￨f (￨2￨f Type￨3￨p type￨3￨p ,￨3￨p boolean￨3￨p isUpperBound￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBound￨2￨f (￨2￨f Type￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUpperBound￨2￨f (￨2￨f boolean￨3￨p isUpperBound￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d ProcessDestroyer￨1￨d implements￨1￨d Runnable￨1￨d {￨1￨d private￨2￨e Vector￨2￨e processes￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Method￨2￨e addShutdownHookMethod￨2￨e ;￨2￨e private￨2￨e Method￨2￨e removeShutdownHookMethod￨2￨e ;￨2￨e private￨2￨e ProcessDestroyer￨2￨e .￨2￨e ProcessDestroyerImpl￨2￨e destroyProcessThread￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e added￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨d class￨2￨d ProcessDestroyerImpl￨2￨d extends￨2￨d Thread￨2￨d {￨2￨d private￨3￨e boolean￨3￨e shouldDestroy￨3￨e =￨3￨e true￨3￨e ;￨3￨e public￨3￨f ProcessDestroyerImpl￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setShouldDestroy￨3￨f (￨3￨f boolean￨4￨p shouldDestroy￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f ProcessDestroyer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addShutdownHook￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f removeShutdownHook￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAddedAsShutdownHook￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f add￨2￨f (￨2￨f Process￨3￨p process￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f remove￨2￨f (￨2￨f Process￨3￨p process￨3￨p )￨2￨f {￨2￨f synchronized￨3￨f (￨3￨f processes￨4￨p )￨3￨f {￨3￨f boolean￨4￨e processRemoved￨4￨e =￨4￨e processes￨4￨e .￨4￨e removeElement￨4￨e (￨4￨e process￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c processes￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b processes￨5￨b .￨5￨b notify￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b removeShutdownHook￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e processRemoved￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d QuickVerificationCommand￨1￨d extends￨1￨d AbstractHandler￨1￨d {￨1￨d private￨2￨e String￨2￨e signatureId￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e preferencesComplete￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e ExecutionEvent￨2￨e event￨2￨e ;￨2￨e private￨2￨e IFile￨2￨e file￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f Object￨2￨f execute￨2￨f (￨2￨f ExecutionEvent￨2￨f event￨2￨f )￨2￨f throws￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createVerification￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f VerifySignature￨3￨e verify￨3￨e =￨3￨e new￨3￨e VerifySignature￨3￨e (￨3￨e )￨3￨e ;￨3￨e ArrayList￨3￨e <￨3￨e VerificationResult￨3￨e >￨3￨e results￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e VerificationResult￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c HandlerUtil￨4￨c .￨4￨c getActivePart￨4￨c (￨4￨c event￨4￨c )￨4￨c )￨4￨c instanceof￨4￨c IEditorPart￨4￨c )￨3￨j {￨3￨j final￨4￨e IEditorPart￨4￨e editorPart￨4￨e =￨4￨e (￨4￨e (￨4￨e IEditorPart￨4￨e )￨4￨e (￨4￨e HandlerUtil￨4￨e .￨4￨e getActivePart￨4￨e (￨4￨e event￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j editorPart￨5￨c .￨5￨c isDirty￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c null￨6￨c !=￨6￨c (￨6￨c editorPart￨6￨c .￨6￨c getTitle￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c editorPart￨6￨c .￨6￨c getTitle￨6￨c (￨6￨c )￨6￨c .￨6￨c length￨6￨c (￨6￨c )￨6￨c )￨6￨c >￨6￨c 0￨6￨c )￨6￨c )￨5￨j {￨5￨j IRunnableWithProgress￨6￨f op￨6￨f =￨6￨f new￨6￨f IRunnableWithProgress￨6￨f (￨6￨f )￨6￨f {￨6￨f public￨7￨f void￨7￨f run￨7￨f (￨7￨f final￨8￨p IProgressMonitor￨8￨p monitor￨8￨p )￨7￨f {￨7￨f editorPart￨8￨e .￨8￨e doSave￨8￨e (￨8￨e monitor￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f PlatformUI￨7￨e .￨7￨e getWorkbench￨7￨e (￨7￨e )￨7￨e .￨7￨e getProgressService￨7￨e (￨7￨e )￨7￨e .￨7￨e runInUI￨7￨e (￨7￨e XSTUIPlugin￨7￨e .￨7￨e getActiveWorkbenchWindow￨7￨e (￨7￨e )￨7￨e ,￨7￨e op￨7￨e ,￨7￨e ResourcesPlugin￨7￨e .￨7￨e getWorkspace￨7￨e (￨7￨e )￨7￨e .￨7￨e getRoot￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f InvocationTargetException￨7￨p ite￨7￨p )￨6￨f {￨6￨f Utils￨7￨e .￨7￨e log￨7￨e (￨7￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨7￨e ,￨7￨e ite￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f InterruptedException￨7￨p ie￨7￨p )￨6￨f {￨6￨f Utils￨7￨e .￨7￨e log￨7￨e (￨7￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨7￨e ,￨7￨e ie￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨j else￨5￨j {￨5￨j editorPart￨6￨e .￨6￨e doSaveAs￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j file￨4￨e =￨4￨e (￨4￨e (￨4￨e IFile￨4￨e )￨4￨e (￨4￨e editorPart￨4￨e .￨4￨e getEditorInput￨4￨e (￨4￨e )￨4￨e .￨4￨e getAdapter￨4￨e (￨4￨e IFile￨4￨e .￨4￨e class￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j ISelection￨4￨e selection￨4￨e =￨4￨e HandlerUtil￨4￨e .￨4￨e getCurrentSelection￨4￨e (￨4￨e event￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j selection￨5￨c instanceof￨5￨c IStructuredSelection￨5￨c )￨4￨j {￨4￨j file￨5￨e =￨5￨e (￨5￨e (￨5￨e IFile￨5￨e )￨5￨e (￨5￨e (￨5￨e (￨5￨e IStructuredSelection￨5￨e )￨5￨e (￨5￨e selection￨5￨e )￨5￨e )￨5￨e .￨5￨e getFirstElement￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c file￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c file￨4￨c .￨4￨c isAccessible￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j results￨4￨e =￨4￨e verify￨4￨e .￨4￨e verify￨4￨e (￨4￨e file￨4￨e .￨4￨e getLocation￨4￨e (￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ,￨4￨e signatureId￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j MessageDialog￨4￨e .￨4￨e openInformation￨4￨e (￨4￨e HandlerUtil￨4￨e .￨4￨e getActiveShell￨4￨e (￨4￨e event￨4￨e )￨4￨e ,￨4￨e QuickVerificationCommand_0￨4￨e ,￨4￨e NLS￨4￨e .￨4￨e bind￨4￨e (￨4￨e RemoveReadOnlyFlag￨4￨e ,￨4￨e QuickVerificationCommand_5￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c results￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 1￨4￨c )￨3￨j {￨3￨j VerificationResult￨4￨e result￨4￨e =￨4￨e (￨4￨e (￨4￨e VerificationResult￨4￨e )￨4￨e (￨4￨e results￨4￨e .￨4￨e get￨4￨e (￨4￨e 0￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c result￨5￨c .￨5￨c getSignature￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b Verification￨5￨b .￨5￨b showVerificationResult￨5￨b (￨5￨b result￨5￨b ,￨5￨b HandlerUtil￨5￨b .￨5￨b getActiveShell￨5￨b (￨5￨b event￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j else￨4￨j {￨4￨j MessageDialog￨5￨e .￨5￨e openError￨5￨e (￨5￨e HandlerUtil￨5￨e .￨5￨e getActiveShell￨5￨e (￨5￨e event￨5￨e )￨5￨e ,￨5￨e QuickVerificationCommand_0￨5￨e ,￨5￨e NLS￨5￨e .￨5￨e bind￨5￨e (￨5￨e QuickVerificationCommand_4￨5￨e ,￨5￨e signatureId￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j MessageDialog￨4￨e .￨4￨e openError￨4￨e (￨4￨e HandlerUtil￨4￨e .￨4￨e getActiveShell￨4￨e (￨4￨e event￨4￨e )￨4￨e ,￨4￨e QuickVerificationCommand_0￨4￨e ,￨4￨e NLS￨4￨e .￨4￨e bind￨4￨e (￨4￨e QuickVerificationCommand_4￨4￨e ,￨4￨e signatureId￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f getPreferenceValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkPreferences￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JMXProtocolPackager￨1￨d implements￨1￨d DeploymentPackager￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e List￨2￨e <￨2￨e String￨2￨e >￨2￨e defaultDependencies￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d JMXProtocolPackager￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d ServiceArchiveHolder￨2￨d archiveHolder￨2￨d ;￨2￨d JMXProtocolPackager￨2￨d (￨2￨d ServiceArchiveHolder￨2￨d archiveHolder￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f generateDeployment￨2￨f (￨2￨f TestDeployment￨3￨p testDeployment￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p ProtocolArchiveProcessor￨3￨p >￨3￨p protocolProcessors￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f JavaArchive￨2￨f generateArquillianServiceArchive￨2￨f (￨2￨f Collection￨2￨f <￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f auxArchives￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨d JavaArchive￨3￨d archive￨3￨d =￨3￨d ShrinkWrap￨3￨d .￨3￨d create￨3￨d (￨3￨d JavaArchive￨3￨d .￨3￨d class￨3￨d ,￨3￨d "arquillian-service"￨3￨d )￨3￨d ;￨3￨d JMXProtocolPackager￨3￨d .￨3￨d log￨3￨d .￨3￨d debugf￨3￨d (￨3￨d "Generating:<seq2seq4repair_space>%s"￨3￨d ,￨3￨d archive￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d addPackage￨3￨d (￨3￨d ArquillianService￨3￨d .￨3￨d class￨3￨d .￨3￨d getPackage￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d addPackage￨3￨d (￨3￨d AbstractJMXProtocol￨3￨d .￨3￨d class￨3￨d .￨3￨d getPackage￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d addClasses￨3￨d (￨3￨d ServerSetup￨3￨d .￨3￨d class￨3￨d ,￨3￨d ServerSetupTask￨3￨d .￨3￨d class￨3￨d ,￨3￨d ManagementClient￨3￨d .￨3￨d class￨3￨d ,￨3￨d Authentication￨3￨d .￨3￨d class￨3￨d ,￨3￨d NetworkUtils￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d final￨3￨d Set￨3￨d <￨3￨d ModuleIdentifier￨3￨d >￨3￨d archiveDependencies￨3￨d =￨3￨d new￨3￨d LinkedHashSet￨3￨d <￨3￨d ModuleIdentifier￨3￨d >￨3￨d (￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.as.jmx"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.as.server"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.as.controller-client"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.jandex"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.logging"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.modules"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.dmr"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.jboss.msc"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.osgi.core"￨3￨d )￨3￨d )￨3￨d ;￨3￨d archiveDependencies￨3￨d .￨3￨d add￨3￨d (￨3￨d ModuleIdentifier￨3￨d .￨3￨d create￨3￨d (￨3￨d "org.wildfly.security.manager"￨3￨d )￨3￨d )￨3￨d ;￨3￨d final￨3￨d Set￨3￨d <￨3￨d String￨3￨d >￨3￨d loadableExtensions￨3￨d =￨3￨d new￨3￨d HashSet￨3￨d <￨3￨d String￨3￨d >￨3￨d (￨3￨d )￨3￨d ;￨3￨d final￨3￨d String￨3￨d loadableExtensionsPath￨3￨d =￨3￨d "META-INF/services/"￨3￨d +￨3￨d (￨3￨d RemoteLoadableExtension￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d for￨3￨d (￨3￨d Archive￨3￨d <￨3￨d ?￨3￨d >￨3￨d aux￨3￨d :￨3￨d auxArchives￨3￨d )￨3￨d {￨3￨d Node￨4￨e node￨4￨e =￨4￨e aux￨4￨e .￨4￨e get￨4￨e (￨4￨e loadableExtensionsPath￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j node￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j BufferedReader￨5￨e br￨5￨e =￨5￨e new￨5￨e BufferedReader￨5￨e (￨5￨e new￨5￨e InputStreamReader￨5￨e (￨5￨e node￨5￨e .￨5￨e getAsset￨5￨e (￨5￨e )￨5￨e .￨5￨e openStream￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e String￨5￨e line￨5￨e =￨5￨e br￨5￨e .￨5￨e readLine￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l line￨6￨c !=￨6￨c null￨6￨c )￨5￨l {￨5￨l loadableExtensions￨6￨e .￨6￨e add￨6￨e (￨6￨e line￨6￨e )￨6￨e ;￨6￨e ClassLoader￨6￨e classLoader￨6￨e =￨6￨e getClass￨6￨e (￨6￨e )￨6￨e .￨6￨e getClassLoader￨6￨e (￨6￨e )￨6￨e ;￨6￨e Object￨6￨e extension￨6￨e =￨6￨e classLoader￨6￨e .￨6￨e loadClass￨6￨e (￨6￨e line￨6￨e )￨6￨e .￨6￨e newInstance￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j extension￨7￨c instanceof￨7￨c DependenciesProvider￨7￨c )￨6￨j {￨6￨j DependenciesProvider￨7￨e provider￨7￨e =￨7￨e (￨7￨e (￨7￨e DependenciesProvider￨7￨e )￨7￨e (￨7￨e extension￨7￨e )￨7￨e )￨7￨e ;￨7￨e archiveDependencies￨7￨e .￨7￨e addAll￨7￨e (￨7￨e provider￨7￨e .￨7￨e getDependencies￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j line￨6￨e =￨6￨e br￨6￨e .￨6￨e readLine￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j JMXProtocolPackager￨4￨e .￨4￨e log￨4￨e .￨4￨e debugf￨4￨e (￨4￨e "Merging<seq2seq4repair_space>archive:<seq2seq4repair_space>%s"￨4￨e ,￨4￨e aux￨4￨e )￨4￨e ;￨4￨e archive￨4￨e .￨4￨e merge￨4￨e (￨4￨e aux￨4￨e )￨4￨e ;￨4￨e }￨3￨d loadableExtensions￨3￨d .￨3￨d add￨3￨d (￨3￨d JMXProtocolEndpointExtension￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d loadableExtensions￨3￨d .￨3￨d add￨3￨d (￨3￨d InContainerManagementClientExtension￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d setManifest￨3￨d (￨3￨d new￨3￨d Asset￨3￨d (￨3￨d )￨3￨d {￨3￨d public￨4￨f InputStream￨4￨f openStream￨4￨f (￨4￨f )￨4￨f {￨4￨f ManifestBuilder￨5￨e builder￨5￨e =￨5￨e ManifestBuilder￨5￨e .￨5￨e newInstance￨5￨e (￨5￨e )￨5￨e ;￨5￨e Iterator￨5￨e <￨5￨e ModuleIdentifier￨5￨e >￨5￨e itdep￨5￨e =￨5￨e archiveDependencies￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e ;￨5￨e StringBuffer￨5￨e depspec￨5￨e =￨5￨e new￨5￨e StringBuffer￨5￨e (￨5￨e (￨5￨e ""￨5￨e +￨5￨e (￨5￨e itdep￨5￨e .￨5￨e next￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l itdep￨6￨c .￨6￨c hasNext￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l depspec￨6￨e .￨6￨e append￨6￨e (￨6￨e (￨6￨e ","￨6￨e +￨6￨e (￨6￨e itdep￨6￨e .￨6￨e next￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l builder￨5￨e .￨5￨e addManifestHeader￨5￨e (￨5￨e "Dependencies"￨5￨e ,￨5￨e depspec￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e return￨5￨e builder￨5￨e .￨5￨e openStream￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨d )￨3￨e ;￨3￨e String￨3￨d serviceActivatorPath￨3￨d =￨3￨d "META-INF/services/"￨3￨d +￨3￨d (￨3￨d ServiceActivator￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d final￨3￨d URL￨3￨d serviceActivatorURL￨3￨d =￨3￨d this￨3￨d .￨3￨d getClass￨3￨d (￨3￨d )￨3￨d .￨3￨d getClassLoader￨3￨d (￨3￨d )￨3￨d .￨3￨d getResource￨3￨d (￨3￨d (￨3￨d "arquillian-service/"￨3￨d +￨3￨d serviceActivatorPath￨3￨d )￨3￨d )￨3￨d ;￨3￨d if￨3￨d (￨3￨d serviceActivatorURL￨3￨d ==￨3￨d null￨3￨d )￨3￨d {￨3￨d throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "No<seq2seq4repair_space>arquillian-service/"￨4￨e +￨4￨e serviceActivatorPath￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>found<seq2seq4repair_space>by<seq2seq4repair_space>classloader:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e this￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e .￨4￨e getClassLoader￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨d archive￨3￨e .￨3￨e addAsResource￨3￨e (￨3￨e new￨3￨e UrlAsset￨3￨e (￨3￨e serviceActivatorURL￨3￨e )￨3￨e ,￨3￨e serviceActivatorPath￨3￨e )￨3￨e ;￨3￨e archive￨3￨f .￨3￨f addAsResource￨3￨f (￨3￨f new￨3￨f Asset￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f InputStream￨4￨f openStream￨4￨f (￨4￨f )￨4￨f {￨4￨f ByteArrayOutputStream￨5￨e baos￨5￨e =￨5￨e new￨5￨e ByteArrayOutputStream￨5￨e (￨5￨e )￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f Properties￨6￨e props￨6￨e =￨6￨e new￨6￨e Properties￨6￨e (￨6￨e )￨6￨e ;￨6￨e props￨6￨e .￨6￨e setProperty￨6￨e (￨6￨e Constants￨6￨e .￨6￨e BUNDLE_SYMBOLICNAME￨6￨e ,￨6￨e "arquillian-service"￨6￨e )￨6￨e ;￨6￨e StringBuilder￨6￨e builder￨6￨e =￨6￨e new￨6￨e StringBuilder￨6￨e (￨6￨e )￨6￨e ;￨6￨e builder￨6￨e .￨6￨e append￨6￨e (￨6￨e "org.jboss.arquillian.container.test.api,org.jboss.arquillian.junit,"￨6￨e )￨6￨e ;￨6￨e builder￨6￨e .￨6￨e append￨6￨e (￨6￨e "org.jboss.arquillian.osgi,org.jboss.arquillian.test.api,"￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b builder￨6￨b .￨6￨b append￨6￨b (￨6￨b "org.jboss.as.arquillian.api,org.jboss.as.arquillian.container,org.jboss.as.osgi,"￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b builder￨6￨e .￨6￨e append￨6￨e (￨6￨e "org.jboss.shrinkwrap.api,org.jboss.shrinkwrap.api.asset,org.jboss.shrinkwrap.api.spec,"￨6￨e )￨6￨e ;￨6￨e builder￨6￨e .￨6￨e append￨6￨e (￨6￨e "org.junit,org.junit.runner"￨6￨e )￨6￨e ;￨6￨e props￨6￨e .￨6￨e setProperty￨6￨e (￨6￨e Constants￨6￨e .￨6￨e EXPORT_PACKAGE￨6￨e ,￨6￨e builder￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e props￨6￨e .￨6￨e store￨6￨e (￨6￨e baos￨6￨e ,￨6￨e null￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f IOException￨6￨p ex￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e IllegalStateException￨6￨e (￨6￨e "Cannot<seq2seq4repair_space>write<seq2seq4repair_space>osgi<seq2seq4repair_space>metadata"￨6￨e ,￨6￨e ex￨6￨e )￨6￨e ;￨6￨e }￨5￨f return￨5￨e new￨5￨e ByteArrayInputStream￨5￨e (￨5￨e baos￨5￨e .￨5￨e toByteArray￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e "META-INF/jbosgi-xservice.properties"￨3￨e )￨3￨e ;￨3￨e archive￨3￨e .￨3￨e delete￨3￨e (￨3￨e ArchivePaths￨3￨e .￨3￨e create￨3￨e (￨3￨e loadableExtensionsPath￨3￨e )￨3￨e )￨3￨e ;￨3￨e archive￨3￨f .￨3￨f addAsResource￨3￨f (￨3￨f new￨3￨f Asset￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f InputStream￨4￨f openStream￨4￨f (￨4￨f )￨4￨f {￨4￨f ByteArrayOutputStream￨5￨e baos￨5￨e =￨5￨e new￨5￨e ByteArrayOutputStream￨5￨e (￨5￨e )￨5￨e ;￨5￨e PrintWriter￨5￨e pw￨5￨e =￨5￨e new￨5￨e PrintWriter￨5￨e (￨5￨e new￨5￨e OutputStreamWriter￨5￨e (￨5￨e baos￨5￨e )￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l String￨6￨c line￨6￨c :￨6￨c loadableExtensions￨6￨c )￨5￨l {￨5￨l pw￨6￨e .￨6￨e println￨6￨e (￨6￨e line￨6￨e )￨6￨e ;￨6￨e }￨5￨l pw￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e return￨5￨e new￨5￨e ByteArrayInputStream￨5￨e (￨5￨e baos￨5￨e .￨5￨e toByteArray￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e loadableExtensionsPath￨3￨e )￨3￨e ;￨3￨e JMXProtocolPackager￨3￨e .￨3￨e log￨3￨e .￨3￨e debugf￨3￨e (￨3￨e "Loadable<seq2seq4repair_space>extensions:<seq2seq4repair_space>%s"￨3￨e ,￨3￨e loadableExtensions￨3￨e )￨3￨e ;￨3￨e JMXProtocolPackager￨3￨e .￨3￨e log￨3￨e .￨3￨e tracef￨3￨e (￨3￨e "Archive<seq2seq4repair_space>content:<seq2seq4repair_space>%s\n%s"￨3￨e ,￨3￨e archive￨3￨e ,￨3￨e archive￨3￨e .￨3￨e toString￨3￨e (￨3￨e true￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e archive￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f addModulesManifestDependencies￨2￨f (￨2￨f Archive￨3￨p <￨3￨p ?￨3￨p >￨3￨p appArchive￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d OverseerCollectionProcessor￨1￨d implements￨1￨d Runnable￨1￨d ,￨1￨d ClosableThread￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e NUM_SLICES￨2￨e =￨2￨e "numShards"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e REPLICATION_FACTOR￨2￨e =￨2￨e "replicationFactor"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e MAX_SHARDS_PER_NODE￨2￨e =￨2￨e "maxShardsPerNode"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e CREATE_NODE_SET￨2￨e =￨2￨e "createNodeSet"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e DELETECOLLECTION￨2￨e =￨2￨e "deletecollection"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e CREATECOLLECTION￨2￨e =￨2￨e "createcollection"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e RELOADCOLLECTION￨2￨e =￨2￨e "reloadcollection"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e QUEUE_OPERATION￨2￨e =￨2￨e "operation"￨2￨e ;￨2￨e private￨2￨d static￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d OverseerCollectionProcessor￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d DistributedQueue￨2￨d workQueue￨2￨d ;￨2￨d private￨2￨d String￨2￨d myId￨2￨d ;￨2￨d private￨2￨d ShardHandler￨2￨d shardHandler￨2￨d ;￨2￨d private￨2￨d String￨2￨d adminPath￨2￨d ;￨2￨d private￨2￨d ZkStateReader￨2￨d zkStateReader￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d isClosed￨2￨d ;￨2￨d public￨2￨d OverseerCollectionProcessor￨2￨d (￨2￨d ZkStateReader￨2￨d zkStateReader￨2￨d ,￨2￨d String￨2￨d myId￨2￨d ,￨2￨d ShardHandler￨2￨d shardHandler￨2￨d ,￨2￨d String￨2￨d adminPath￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f OverseerCollectionProcessor￨2￨f (￨2￨f ZkStateReader￨3￨p zkStateReader￨3￨p ,￨3￨p String￨3￨p myId￨3￨p ,￨3￨p ShardHandler￨3￨p shardHandler￨3￨p ,￨3￨p String￨3￨p adminPath￨3￨p ,￨3￨p DistributedQueue￨3￨p workQueue￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f amILeader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f SolrResponse￨2￨f processMessage￨2￨f (￨2￨f ZkNodeProps￨3￨p message￨3￨p ,￨3￨p String￨3￨p operation￨3￨p )￨2￨f {￨2￨f NamedList￨3￨e results￨3￨e =￨3￨e new￨3￨e NamedList￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j OverseerCollectionProcessor￨5￨c .￨5￨c CREATECOLLECTION￨5￨c .￨5￨c equals￨5￨c (￨5￨c operation￨5￨c )￨5￨c )￨4￨j {￨4￨j createCollection￨5￨e (￨5￨e zkStateReader￨5￨e .￨5￨e getClusterState￨5￨e (￨5￨e )￨5￨e ,￨5￨e message￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j OverseerCollectionProcessor￨5￨c .￨5￨c DELETECOLLECTION￨5￨c .￨5￨c equals￨5￨c (￨5￨c operation￨5￨c )￨5￨c )￨4￨j {￨4￨j ModifiableSolrParams￨5￨e params￨5￨e =￨5￨e new￨5￨e ModifiableSolrParams￨5￨e (￨5￨e )￨5￨e ;￨5￨e params￨5￨e .￨5￨e set￨5￨e (￨5￨e ACTION￨5￨e ,￨5￨e UNLOAD￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e params￨5￨e .￨5￨e set￨5￨e (￨5￨e DELETE_INSTANCE_DIR￨5￨e ,￨5￨e true￨5￨e )￨5￨e ;￨5￨e collectionCmd￨5￨e (￨5￨e zkStateReader￨5￨e .￨5￨e getClusterState￨5￨e (￨5￨e )￨5￨e ,￨5￨e message￨5￨e ,￨5￨e params￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j OverseerCollectionProcessor￨5￨c .￨5￨c RELOADCOLLECTION￨5￨c .￨5￨c equals￨5￨c (￨5￨c operation￨5￨c )￨5￨c )￨4￨j {￨4￨j ModifiableSolrParams￨5￨e params￨5￨e =￨5￨e new￨5￨e ModifiableSolrParams￨5￨e (￨5￨e )￨5￨e ;￨5￨e params￨5￨e .￨5￨e set￨5￨e (￨5￨e ACTION￨5￨e ,￨5￨e RELOAD￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e collectionCmd￨5￨e (￨5￨e zkStateReader￨5￨e .￨5￨e getClusterState￨5￨e (￨5￨e )￨5￨e ,￨5￨e message￨5￨e ,￨5￨e params￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e SolrException￨5￨e (￨5￨e ErrorCode￨5￨e .￨5￨e BAD_REQUEST￨5￨e ,￨5￨e (￨5￨e "Unknow<seq2seq4repair_space>the<seq2seq4repair_space>operation:"￨5￨e +￨5￨e operation￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j int￨4￨e failed￨4￨e =￨4￨e 0￨4￨e ;￨4￨e ShardResponse￨4￨e srsp￨4￨e ;￨4￨e do￨4￨l {￨4￨l srsp￨5￨e =￨5￨e shardHandler￨5￨e .￨5￨e takeCompletedIncludingErrors￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j srsp￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j Throwable￨6￨e e￨6￨e =￨6￨e srsp￨6￨e .￨6￨e getException￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j e￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j failed￨7￨e ++￨7￨e ;￨7￨e OverseerCollectionProcessor￨7￨e .￨7￨e log￨7￨e .￨7￨e error￨7￨e (￨7￨e (￨7￨e "Error<seq2seq4repair_space>talking<seq2seq4repair_space>to<seq2seq4repair_space>shard:<seq2seq4repair_space>"￨7￨e +￨7￨e (￨7￨e srsp￨7￨e .￨7￨e getShard￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ,￨7￨e e￨7￨e )￨7￨e ;￨7￨e results￨7￨e .￨7￨e add￨7￨e (￨7￨e srsp￨7￨e .￨7￨e getShard￨7￨e (￨7￨e )￨7￨e ,￨7￨e e￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j results￨7￨e .￨7￨e add￨7￨e (￨7￨e srsp￨7￨e .￨7￨e getShard￨7￨e (￨7￨e )￨7￨e ,￨7￨e srsp￨7￨e .￨7￨e getSolrResponse￨7￨e (￨7￨e )￨7￨e .￨7￨e getResponse￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨l while￨4￨l (￨4￨l srsp￨5￨c !=￨5￨c null￨5￨c )￨4￨l ;￨4￨l }￨3￨f catch￨3￨f (￨3￨f SolrException￨4￨p ex￨4￨p )￨3￨f {￨3￨f SolrException￨4￨e .￨4￨e log￨4￨e (￨4￨e OverseerCollectionProcessor￨4￨e .￨4￨e log￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Collection<seq2seq4repair_space>"￨4￨e +￨4￨e operation￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>of<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e operation￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>failed"￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b results￨4￨b .￨4￨b add￨4￨b (￨4￨b (￨4￨b (￨4￨b "Operation<seq2seq4repair_space>"￨4￨b +￨4￨b operation￨4￨b )￨4￨b +￨4￨b "<seq2seq4repair_space>cause<seq2seq4repair_space>exception:"￨4￨b )￨4￨b ,￨4￨b ex￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e new￨4￨e OverseerSolrResponse￨4￨e (￨4￨e results￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f boolean￨2￨f createCollection￨2￨f (￨2￨f ClusterState￨3￨p clusterState￨3￨p ,￨3￨p ZkNodeProps￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f collectionCmd￨2￨f (￨2￨f ClusterState￨3￨p clusterState￨3￨p ,￨3￨p ZkNodeProps￨3￨p message￨3￨p ,￨3￨p ModifiableSolrParams￨3￨p params￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f msgStrToInt￨2￨f (￨2￨f ZkNodeProps￨2￨f message￨2￨f ,￨2￨f String￨2￨f key￨2￨f ,￨2￨f Integer￨2￨f def￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f isClosed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d OutputAttribute￨1￨d extends￨1￨d ProjectComponent￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e STDOUT￨2￨e =￨2￨e "stdout"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e STDERR￨2￨e =￨2￨e "stderr"￨2￨e ;￨2￨e protected￨2￨e String￨2￨e value￨2￨e ;￨2￨e public￨2￨f OutputAttribute￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f OutputStream￨2￨f getOutputStream￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j OutputAttribute￨4￨c .￨4￨c STDOUT￨4￨c .￨4￨c equals￨4￨c (￨4￨c value￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e KeepAliveOutputStream￨4￨e (￨4￨e System￨4￨e .￨4￨e out￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j OutputAttribute￨4￨c .￨4￨c STDERR￨4￨c .￨4￨c equals￨4￨c (￨4￨c value￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e KeepAliveOutputStream￨4￨e (￨4￨e System￨4￨e .￨4￨e err￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b File￨3￨b f￨3￨b =￨3￨b project￨3￨b .￨3￨b resolveFile￨3￨b (￨3￨b value￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e new￨4￨e FileOutputStream￨4￨e (￨4￨e f￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e BuildException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LookAndFeelCommand￨1￨d implements￨1￨d Command￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e JMETER_LAF￨2￨e =￨2￨e "jmeter.laf"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Set￨2￨e <￨2￨e String￨2￨e >￨2￨e commands￨2￨e =￨2￨e new￨2￨e HashSet￨2￨e <￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f String￨2￨f getJMeterLaf￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f checkLafName￨2￨f (￨2￨f String￨3￨p laf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LookAndFeelCommand￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f doAction￨2￨f (￨2￨f ActionEvent￨3￨p ev￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b String￨4￨b className￨4￨b =￨4￨b ev￨4￨b .￨4￨b getActionCommand￨4￨b (￨4￨b )￨4￨b .￨4￨b substring￨4￨b (￨4￨b 4￨4￨b )￨4￨b .￨4￨b replace￨4￨b (￨4￨b '/'￨4￨b ,￨4￨b '.'￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b UIManager￨4￨e .￨4￨e setLookAndFeel￨4￨e (￨4￨e className￨4￨e )￨4￨e ;￨4￨e SwingUtilities￨4￨e .￨4￨e updateComponentTreeUI￨4￨e (￨4￨e GuiPackage￨4￨e .￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e getMainFrame￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedLookAndFeelException￨4￨p e￨4￨p )￨3￨f {￨3￨f JMeterUtils￨4￨e .￨4￨e reportErrorToUser￨4￨e (￨4￨e (￨4￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4￨e +￨4￨e (￨4￨e e￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f InstantiationException￨4￨p e￨4￨p )￨3￨f {￨3￨f JMeterUtils￨4￨e .￨4￨e reportErrorToUser￨4￨e (￨4￨e (￨4￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4￨e +￨4￨e (￨4￨e e￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f ClassNotFoundException￨4￨p e￨4￨p )￨3￨f {￨3￨f JMeterUtils￨4￨e .￨4￨e reportErrorToUser￨4￨e (￨4￨e (￨4￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4￨e +￨4￨e (￨4￨e e￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IllegalAccessException￨4￨p e￨4￨p )￨3￨f {￨3￨f JMeterUtils￨4￨e .￨4￨e reportErrorToUser￨4￨e (￨4￨e (￨4￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4￨e +￨4￨e (￨4￨e e￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f getActionNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SSLTest￨1￨d extends￨1￨d BaseJDBCTestCase￨1￨d {￨1￨d private￨2￨e InputStream￨2￨e [￨2￨e ]￨2￨e _inputStreamHolder￨2￨e ;￨2￨e private￨2￨e NetworkServerTestSetup￨2￨e nsTestSetup￨2￨e ;￨2￨e public￨2￨f SSLTest￨2￨f (￨2￨f String￨3￨p testName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Test￨2￨f decorateTest￨2￨f (￨2￨f String￨3￨p testName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f getStartupProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSSLBasicDSConnect￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSSLBasicDSPlainConnect￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f DataSource￨3￨e ds￨3￨e =￨3￨e JDBCDataSource￨3￨e .￨3￨e getDataSource￨3￨e (￨3￨e )￨3￨e ;￨3￨e JDBCDataSource￨3￨e .￨3￨e setBeanProperty￨3￨e (￨3￨e ds￨3￨e ,￨3￨e "createDatabase"￨3￨e ,￨3￨e "create"￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Connection￨4￨e c2￨4￨e =￨4￨e ds￨4￨e .￨4￨e getConnection￨4￨e (￨4￨e )￨4￨e ;￨4￨e c2￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e fail￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f SQLException￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b assertSQLState￨4￨b (￨4￨b "58009"￨4￨b ,￨4￨b e￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d TagTypeHandler￨1￨d extends￨1￨d AbstractMarkupFilter￨1￨d {￨1￨d private￨2￨e final￨2￨e ArrayListStack￨2￨e <￨2￨e ComponentTag￨2￨e >￨2￨e stack￨2￨e =￨2￨e new￨2￨e ArrayListStack￨2￨e <￨2￨e ComponentTag￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e Boolean￨2￨e >￨2￨e requireOpenBodyCloseTag￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e Boolean￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f TagTypeHandler￨2￨f (￨2￨f final￨3￨p IMarkupFilter￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MarkupElement￨2￨f nextTag￨2￨f (￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f while￨3￨l (￨3￨l (￨4￨c stack￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨l {￨3￨l final￨4￨e ComponentTag￨4￨e top￨4￨e =￨4￨e stack￨4￨e .￨4￨e pop￨4￨e (￨4￨e )￨4￨e ;￨4￨e return￨4￨e top￨4￨e ;￨4￨e }￨3￨l final￨3￨e ComponentTag￨3￨e tag￨3￨e =￨3￨e nextComponentTag￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j tag￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e tag￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j tag￨4￨c .￨4￨c isOpenClose￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j String￨4￨e name￨4￨e =￨4￨e tag￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c tag￨5￨c .￨5￨c getNamespace￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j name￨5￨e =￨5￨e (￨5￨e (￨5￨e tag￨5￨e .￨5￨e getNamespace￨5￨e (￨5￨e )￨5￨e )￨5￨e +￨5￨e ":"￨5￨e )￨5￨e +￨5￨e (￨5￨e tag￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j TagTypeHandler￨5￨c .￨5￨c requiresOpenBodyCloseTag￨5￨c (￨5￨c name￨5￨c )￨5￨c )￨4￨j {￨4￨j tag￨5￨e .￨5￨e setType￨5￨e (￨5￨e OPEN￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b XmlTag￨5￨b closeTag￨5￨b =￨5￨b new￨5￨b XmlTag￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b closeTag￨5￨e .￨5￨e setType￨5￨e (￨5￨e CLOSE￨5￨e )￨5￨e ;￨5￨e closeTag￨5￨e .￨5￨e setName￨5￨e (￨5￨e tag￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e closeTag￨5￨e .￨5￨e setNamespace￨5￨e (￨5￨e tag￨5￨e .￨5￨e getNamespace￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e closeTag￨5￨e .￨5￨e closes￨5￨e (￨5￨e tag￨5￨e )￨5￨e ;￨5￨e stack￨5￨e .￨5￨e push￨5￨e (￨5￨e new￨5￨e ComponentTag￨5￨e (￨5￨e closeTag￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e tag￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f requiresOpenBodyCloseTag￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SolrDispatchFilter￨1￨d implements￨1￨d Filter￨1￨d {￨1￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d SolrDispatchFilter￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d protected￨2￨d CoreContainer￨2￨d cores￨2￨d ;￨2￨d protected￨2￨d String￨2￨d pathPrefix￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d String￨2￨d abortErrorMessage￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d String￨2￨d solrConfigFilename￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d final￨2￨d Map￨2￨d <￨2￨d SolrConfig￨2￨d ,￨2￨d SolrRequestParsers￨2￨d >￨2￨d parsers￨2￨d =￨2￨d new￨2￨d WeakHashMap￨2￨d <￨2￨d SolrConfig￨2￨d ,￨2￨d SolrRequestParsers￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d final￨2￨d SolrRequestParsers￨2￨d adminRequestParser￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d Charset￨2￨d UTF8￨2￨d =￨2￨d Charset￨2￨d .￨2￨d forName￨2￨d (￨2￨d "UTF-8"￨2￨d )￨2￨d ;￨2￨d public￨2￨d SolrDispatchFilter￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f init￨2￨f (￨2￨f FilterConfig￨2￨f config￨2￨f )￨2￨f throws￨2￨f ServletException￨2￨f (￨2￨f )￨2￨f {￨2￨f log￨3￨e .￨3￨e info￨3￨e (￨3￨e "SolrDispatchFilter.init()"￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e abortOnConfigurationError￨3￨e =￨3￨e true￨3￨e ;￨3￨e CoreContainer￨3￨e .￨3￨e Initializer￨3￨e init￨3￨e =￨3￨e createInitializer￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f this￨4￨e .￨4￨e pathPrefix￨4￨e =￨4￨e config￨4￨e .￨4￨e getInitParameter￨4￨e (￨4￨e "path-prefix"￨4￨e )￨4￨e ;￨4￨e init￨4￨e .￨4￨e setSolrConfigFilename￨4￨e (￨4￨e config￨4￨e .￨4￨e getInitParameter￨4￨e (￨4￨e "solrconfig-filename"￨4￨e )￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e cores￨4￨e =￨4￨e init￨4￨e .￨4￨e initialize￨4￨e (￨4￨e )￨4￨e ;￨4￨e abortOnConfigurationError￨4￨e =￨4￨e init￨4￨e .￨4￨e isAbortOnConfigurationError￨4￨e (￨4￨e )￨4￨e ;￨4￨e log￨4￨e .￨4￨e info￨4￨e (￨4￨e (￨4￨e "user.dir="￨4￨e +￨4￨e (￨4￨e System￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e "user.dir"￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b log￨4￨b .￨4￨b error￨4￨b (￨4￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>start<seq2seq4repair_space>Solr.<seq2seq4repair_space>Check<seq2seq4repair_space>solr/home<seq2seq4repair_space>property"￨4￨b ,￨4￨b t￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b severeErrors￨4￨e .￨4￨e add￨4￨e (￨4￨e t￨4￨e )￨4￨e ;￨4￨e SolrCore￨4￨e .￨4￨e log￨4￨e (￨4￨e t￨4￨e )￨4￨e ;￨4￨e }￨3￨f if￨3￨j (￨3￨j abortOnConfigurationError￨4￨c &&￨4￨c (￨4￨c (￨4￨c severeErrors￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j StringWriter￨4￨e sw￨4￨e =￨4￨e new￨4￨e StringWriter￨4￨e (￨4￨e )￨4￨e ;￨4￨e PrintWriter￨4￨e out￨4￨e =￨4￨e new￨4￨e PrintWriter￨4￨e (￨4￨e sw￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "Severe<seq2seq4repair_space>errors<seq2seq4repair_space>in<seq2seq4repair_space>solr<seq2seq4repair_space>configuration.\n"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "Check<seq2seq4repair_space>your<seq2seq4repair_space>log<seq2seq4repair_space>files<seq2seq4repair_space>for<seq2seq4repair_space>more<seq2seq4repair_space>detailed<seq2seq4repair_space>information<seq2seq4repair_space>on<seq2seq4repair_space>what<seq2seq4repair_space>may<seq2seq4repair_space>be<seq2seq4repair_space>wrong.\n"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "If<seq2seq4repair_space>you<seq2seq4repair_space>want<seq2seq4repair_space>solr<seq2seq4repair_space>to<seq2seq4repair_space>continue<seq2seq4repair_space>after<seq2seq4repair_space>configuration<seq2seq4repair_space>errors,<seq2seq4repair_space>change:<seq2seq4repair_space>\n"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "<seq2seq4repair_space><abortOnConfigurationError>false</abortOnConfigurationError>\n"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e (￨4￨e "in<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e init￨4￨e .￨4￨e getSolrConfigFilename￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "\n"￨4￨e )￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l Throwable￨5￨c t￨5￨c :￨5￨c SolrConfig￨5￨c .￨5￨c severeErrors￨5￨c )￨4￨l {￨4￨l out￨5￨e .￨5￨e println￨5￨e (￨5￨e "-------------------------------------------------------------"￨5￨e )￨5￨e ;￨5￨e t￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e out￨5￨e )￨5￨e ;￨5￨e }￨4￨l out￨4￨e .￨4￨e flush￨4￨e (￨4￨e )￨4￨e ;￨4￨e abortErrorMessage￨4￨e =￨4￨e sw￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j log￨3￨e .￨3￨e info￨3￨e (￨3￨e "SolrDispatchFilter.init()<seq2seq4repair_space>done"￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f Initializer￨2￨f createInitializer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f destroy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f doFilter￨2￨f (￨2￨f ServletRequest￨2￨f request￨2￨f ,￨2￨f ServletResponse￨2￨f response￨2￨f ,￨2￨f FilterChain￨2￨f chain￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ServletException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f handleAdminRequest￨2￨f (￨2￨f HttpServletRequest￨2￨f req￨2￨f ,￨2￨f ServletResponse￨2￨f response￨2￨f ,￨2￨f SolrRequestHandler￨2￨f handler￨2￨f ,￨2￨f SolrQueryRequest￨2￨f solrReq￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeResponse￨2￨f (￨2￨f SolrQueryResponse￨2￨f solrRsp￨2￨f ,￨2￨f ServletResponse￨2￨f response￨2￨f ,￨2￨f QueryResponseWriter￨2￨f responseWriter￨2￨f ,￨2￨f SolrQueryRequest￨2￨f solrReq￨2￨f ,￨2￨f Method￨2￨f reqMethod￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f execute￨2￨f (￨2￨f HttpServletRequest￨3￨p req￨3￨p ,￨3￨p SolrRequestHandler￨3￨p handler￨3￨p ,￨3￨p SolrQueryRequest￨3￨p sreq￨3￨p ,￨3￨p SolrQueryResponse￨3￨p rsp￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f sendError￨2￨f (￨2￨f HttpServletResponse￨2￨f res￨2￨f ,￨2￨f Throwable￨2￨f ex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPathPrefix￨2￨f (￨2￨f String￨3￨p pathPrefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getPathPrefix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BCodec￨1￨d extends￨1￨d RFC1522Codec￨1￨d implements￨1￨d StringDecoder￨1￨d ,￨1￨d StringEncoder￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e charset￨2￨e ;￨2￨e public￨2￨f BCodec￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BCodec￨2￨f (￨2￨f final￨3￨p String￨3￨p charset￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getEncoding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f byte￨2￨f [￨2￨f ]￨2￨f doEncoding￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f byte￨2￨f [￨2￨f ]￨2￨f doDecoding￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f encode￨2￨f (￨2￨f final￨2￨f String￨2￨f value￨2￨f ,￨2￨f final￨2￨f String￨2￨f charset￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j value￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e encodeText￨4￨e (￨4￨e value￨4￨e ,￨4￨e charset￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f UnsupportedEncodingException￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b EncoderException￨4￨b (￨4￨b e￨4￨b .￨4￨b getMessage￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f public￨2￨f String￨2￨f encode￨2￨f (￨2￨f String￨2￨f value￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f decode￨2￨f (￨2￨f String￨2￨f value￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f encode￨2￨f (￨2￨f Object￨2￨f value￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f decode￨2￨f (￨2￨f Object￨2￨f value￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDefaultCharset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HttpManagementWriteAttributeHandler￨1￨d extends￨1￨d AbstractWriteAttributeHandler￨1￨d <￨1￨d Void￨1￨d >￨1￨d {￨1￨d private￨2￨e final￨2￨e LocalHostControllerInfoImpl￨2￨e hostControllerInfo￨2￨e ;￨2￨e private￨2￨e final￨2￨e HostControllerEnvironment￨2￨e environment￨2￨e ;￨2￨e public￨2￨f HttpManagementWriteAttributeHandler￨2￨f (￨2￨f final￨3￨p LocalHostControllerInfoImpl￨3￨p hostControllerInfo￨3￨p ,￨3￨p final￨3￨p HostControllerEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f boolean￨2￨f applyUpdateToRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f String￨2￨f attributeName￨2￨f ,￨2￨f ModelNode￨2￨f resolvedValue￨2￨f ,￨2￨f ModelNode￨2￨f currentValue￨2￨f ,￨2￨f HandbackHolder￨2￨f <￨2￨f Void￨2￨f >￨2￨f handbackHolder￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f revertUpdateToRuntime￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f String￨2￨f attributeName￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f valueToRestore￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f valueToRevert￨2￨f ,￨2￨f final￨2￨f Void￨2￨f handback￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f updateHttpManagementService￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f subModel￨2￨f ,￨2￨f final￨2￨f LocalHostControllerInfoImpl￨2￨f hostControllerInfo￨2￨f ,￨2￨f final￨2￨f HostControllerEnvironment￨2￨f environment￨2￨f ,￨2￨f final￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f HttpManagementRemoveHandler￨3￨e .￨3￨e removeHttpManagementService￨3￨e (￨3￨e context￨3￨e )￨3￨e ;￨3￨e HttpManagementAddHandler￨3￨e .￨3￨e populateHostControllerInfo￨3￨e (￨3￨e hostControllerInfo￨3￨e ,￨3￨e context￨3￨e ,￨3￨e subModel￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b HttpManagementAddHandler￨3￨b .￨3￨b installHttpManagementServices￨3￨b (￨3￨b context￨3￨b .￨3￨b getRunningMode￨3￨b (￨3￨b )￨3￨b ,￨3￨b context￨3￨b .￨3￨b getServiceTarget￨3￨b (￨3￨b )￨3￨b ,￨3￨b hostControllerInfo￨3￨b ,￨3￨b environment￨3￨b ,￨3￨b verificationHandler￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ModuleContextProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j DeploymentTypeMarker￨4￨c .￨4￨c isType￨4￨c (￨4￨c EAR￨4￨c ,￨4￨c deploymentUnit￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j EEModuleDescription￨3￨e moduleDescription￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e EE_MODULE_DESCRIPTION￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e appContextServiceName￨3￨e =￨3￨e ContextNames￨3￨e .￨3￨e contextServiceNameOfApplication￨3￨e (￨3￨e moduleDescription￨3￨e .￨3￨e getApplicationName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e moduleContextServiceName￨3￨e =￨3￨e ContextNames￨3￨e .￨3￨e contextServiceNameOfModule￨3￨e (￨3￨e moduleDescription￨3￨e .￨3￨e getApplicationName￨3￨e (￨3￨e )￨3￨e ,￨3￨e moduleDescription￨3￨e .￨3￨e getModuleName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e NamingStoreService￨3￨e contextService￨3￨e =￨3￨e new￨3￨e NamingStoreService￨3￨e (￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e moduleContextServiceName￨3￨e ,￨3￨e contextService￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e BinderService￨3￨e moduleNameBinder￨3￨e =￨3￨e new￨3￨e BinderService￨3￨e (￨3￨e "ModuleName"￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e moduleContextServiceName￨3￨e .￨3￨e append￨3￨e (￨3￨e "ModuleName"￨3￨e )￨3￨e ,￨3￨e moduleNameBinder￨3￨e )￨3￨e .￨3￨e addInjection￨3￨e (￨3￨e moduleNameBinder￨3￨e .￨3￨e getManagedObjectInjector￨3￨e (￨3￨e )￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e naming￨3￨e .￨3￨e ValueManagedReferenceFactory￨3￨e (￨3￨e Values￨3￨e .￨3￨e immediateValue￨3￨e (￨3￨e moduleDescription￨3￨e .￨3￨e getModuleName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e moduleContextServiceName￨3￨e ,￨3￨e ServiceBasedNamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e moduleNameBinder￨3￨e .￨3￨e getNamingStoreInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e deploymentUnit￨3￨e .￨3￨e putAttachment￨3￨e (￨3￨e Attachments￨3￨e .￨3￨e MODULE_CONTEXT_CONFIG￨3￨e ,￨3￨e moduleContextServiceName￨3￨e )￨3￨e ;￨3￨e final￨3￨e InjectedEENamespaceContextSelector￨3￨e selector￨3￨e =￨3￨e new￨3￨e InjectedEENamespaceContextSelector￨3￨e (￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e appContextServiceName￨3￨e ,￨3￨e NamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e selector￨3￨e .￨3￨e getAppContextInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e moduleContextServiceName￨3￨e ,￨3￨e NamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e selector￨3￨e .￨3￨e getModuleContextInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e moduleContextServiceName￨3￨e ,￨3￨e NamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e selector￨3￨e .￨3￨e getCompContextInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e JBOSS_CONTEXT_SERVICE_NAME￨3￨e ,￨3￨e NamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e selector￨3￨e .￨3￨e getJbossContextInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e GLOBAL_CONTEXT_SERVICE_NAME￨3￨e ,￨3￨e NamingStore￨3￨e .￨3￨e class￨3￨e ,￨3￨e selector￨3￨e .￨3￨e getGlobalContextInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e moduleDescription￨3￨e .￨3￨e setNamespaceContextSelector￨3￨e (￨3￨e selector￨3￨e )￨3￨e ;￨3￨e final￨3￨e Set￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e serviceNames￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e serviceNames￨3￨e .￨3￨e add￨3￨e (￨3￨e appContextServiceName￨3￨e )￨3￨e ;￨3￨e serviceNames￨3￨e .￨3￨e add￨3￨e (￨3￨e moduleContextServiceName￨3￨e )￨3￨e ;￨3￨e serviceNames￨3￨e .￨3￨e add￨3￨e (￨3￨e JBOSS_CONTEXT_SERVICE_NAME￨3￨e )￨3￨e ;￨3￨e serviceNames￨3￨e .￨3￨e add￨3￨e (￨3￨e GLOBAL_CONTEXT_SERVICE_NAME￨3￨e )￨3￨e ;￨3￨e final￨3￨e JavaNamespaceSetup￨3￨e setupAction￨3￨e =￨3￨e new￨3￨e JavaNamespaceSetup￨3￨e (￨3￨e selector￨3￨e ,￨3￨e serviceTarget￨3￨e )￨3￨e ;￨3￨e deploymentUnit￨3￨e .￨3￨e addToAttachmentList￨3￨e (￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deployment￨3￨e .￨3￨e Attachments￨3￨e .￨3￨e SETUP_ACTIONS￨3￨e ,￨3￨e setupAction￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b deploymentUnit￨3￨b .￨3￨b addToAttachmentList￨3￨b (￨3￨b EE_SETUP_ACTIONS￨3￨b ,￨3￨b setupAction￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HttpRequestHdr￨1￨d {￨1￨d Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerFor￨2￨e (￨2￨e HTTP￨2￨e )￨2￨e ;￨2￨e public￨2￨e String￨2￨e method￨2￨e =￨2￨e new￨2￨e String￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e String￨2￨e url￨2￨e =￨2￨e new￨2￨e String￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e String￨2￨e version￨2￨e =￨2￨e new￨2￨e String￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e String￨2￨e postData￨2￨e =￨2￨e ""￨2￨e ;￨2￨e static￨2￨e String￨2￨e CR￨2￨e =￨2￨e "\r\n"￨2￨e ;￨2￨e private￨2￨e Map￨2￨e headers￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f parse￨2￨f (￨2￨f InputStream￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f parseFirstLine￨2￨f (￨2￨f String￨3￨p firstLine￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f parseLine￨2￨f (￨2￨f String￨3￨p nextLine￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HeaderManager￨2￨f getHeaderManager￨2￨f (￨2￨f )￨2￨f {￨2￨f HeaderManager￨3￨e manager￨3￨e =￨3￨e new￨3￨e HeaderManager￨3￨e (￨3￨e )￨3￨e ;￨3￨e Iterator￨3￨e keys￨3￨e =￨3￨e headers￨3￨e .￨3￨e keySet￨3￨e (￨3￨e )￨3￨e .￨3￨e iterator￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l keys￨4￨c .￨4￨c hasNext￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l String￨4￨e key￨4￨e =￨4￨e (￨4￨e (￨4￨e String￨4￨e )￨4￨e (￨4￨e keys￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b (￨4￨b !￨4￨b (￨4￨b key￨4￨b .￨4￨b equals￨4￨b (￨4￨b "proxy-connection"￨4￨b )￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b !￨4￨b (￨4￨b key￨4￨b .￨4￨b equals￨4￨b (￨4￨b "content-length"￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b !￨4￨b (￨4￨b key￨4￨b .￨4￨b equals￨4￨b (￨4￨b "accept-encoding"￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b manager￨4￨e .￨4￨e add￨4￨e (￨4￨e (￨4￨e (￨4￨e Header￨4￨e )￨4￨e (￨4￨e headers￨4￨e .￨4￨e get￨4￨e (￨4￨e key￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l manager￨3￨e .￨3￨e setName￨3￨e (￨3￨e "Browser-derived<seq2seq4repair_space>headers"￨3￨e )￨3￨e ;￨3￨e manager￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e TEST_CLASS￨3￨e ,￨3￨e HeaderManager￨3￨e .￨3￨e class￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e manager￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e GUI_CLASS￨3￨e ,￨3￨e HeaderPanel￨3￨e .￨3￨e class￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e manager￨3￨e ;￨3￨e }￨2￨f public￨2￨f HTTPSampler￨2￨f getSampler￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f MalformedURLException￨2￨f ,￨2￨f ProtocolException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getContentType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MultipartUrlConfig￨2￨f isMultipart￨2￨f (￨2￨f String￨3￨p contentType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f HTTPSampler￨2￨f createSampler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f serverName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f serverPort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f serverUrl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getToken￨2￨f (￨2￨f StringTokenizer￨3￨p tk￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f getRemainder￨2￨f (￨2￨f StringTokenizer￨3￨p tk￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Test￨2￨d extends￨2￨d TestCase￨2￨d {￨2￨d public￨3￨f Test￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setUp￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f testRepeatedArguments￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d SaveAttachmentCommand￨1￨d extends￨1￨d FolderCommand￨1￨d {￨1￨d File￨2￨e tempFile￨2￨e =￨2￨e null￨2￨e ;￨2￨e MimePart￨2￨e part￨2￨e ;￨2￨e static￨2￨e File￨2￨e lastDir￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f SaveAttachmentCommand￨2￨f (￨2￨f DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateGUI￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f Worker￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f FolderCommandReference￨3￨e [￨3￨e ]￨3￨e r￨3￨e =￨3￨e (￨3￨e (￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e )￨3￨e (￨3￨e getReferences￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Folder￨3￨e folder￨3￨e =￨3￨e (￨3￨e (￨3￨e Folder￨3￨e )￨3￨e (￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Object￨3￨e [￨3￨e ]￨3￨e uids￨3￨e =￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getUids￨3￨e (￨3￨e )￨3￨e ;￨3￨e Integer￨3￨e [￨3￨e ]￨3￨e address￨3￨e =￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getAddress￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b part￨3￨b =￨3￨b folder￨3￨b .￨3￨b getMimePart￨3￨b (￨3￨b uids￨3￨b [￨3￨b 0￨3￨b ]￨3￨b ,￨3￨b address￨3￨b ,￨3￨b worker￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨e fileName￨3￨e =￨3￨e part￨3￨e .￨3￨e getHeader￨3￨e (￨3￨e )￨3￨e .￨3￨e getContentParameter￨3￨e (￨3￨e "name"￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j fileName￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j fileName￨4￨e =￨4￨e part￨4￨e .￨4￨e getHeader￨4￨e (￨4￨e )￨4￨e .￨4￨e getDispositionParameter￨4￨e (￨4￨e "filename"￨4￨e )￨4￨e ;￨4￨e }￨3￨j cFileChooser￨3￨e fileChooser￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c SaveAttachmentCommand￨4￨c .￨4￨c lastDir￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j fileChooser￨4￨e =￨4￨e new￨4￨e cFileChooser￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j fileChooser￨4￨e =￨4￨e new￨4￨e cFileChooser￨4￨e (￨4￨e SaveAttachmentCommand￨4￨e .￨4￨e lastDir￨4￨e )￨4￨e ;￨4￨e }￨3￨j cFileFilter￨3￨e fileFilter￨3￨e =￨3￨e new￨3￨e cFileFilter￨3￨e (￨3￨e )￨3￨e ;￨3￨e fileFilter￨3￨e .￨3￨e acceptFilesWithProperty￨3￨e (￨3￨e FILEPROPERTY_FILE￨3￨e )￨3￨e ;￨3￨e fileChooser￨3￨e .￨3￨e setDialogTitle￨3￨e (￨3￨e "Save<seq2seq4repair_space>Attachment<seq2seq4repair_space>as<seq2seq4repair_space>..."￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j fileName￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j fileChooser￨4￨e .￨4￨e forceSelectedFile￨4￨e (￨4￨e new￨4￨e File￨4￨e (￨4￨e fileName￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j fileChooser￨3￨e .￨3￨e setSelectFilter￨3￨e (￨3￨e fileFilter￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l true￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c fileChooser￨5￨c .￨5￨c showSaveDialog￨5￨c (￨5￨c null￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c JFileChooser￨5￨c .￨5￨c APPROVE_OPTION￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j tempFile￨4￨e =￨4￨e fileChooser￨4￨e .￨4￨e getSelectedFile￨4￨e (￨4￨e )￨4￨e ;￨4￨e SaveAttachmentCommand￨4￨e .￨4￨e lastDir￨4￨e =￨4￨e tempFile￨4￨e .￨4￨e getParentFile￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j tempFile￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c JOptionPane￨6￨c .￨6￨c showConfirmDialog￨6￨c (￨6￨c null￨6￨c ,￨6￨c "Overwrite<seq2seq4repair_space>File?"￨6￨c ,￨6￨c "Warning"￨6￨c ,￨6￨c JOptionPane￨6￨c .￨6￨c YES_NO_OPTION￨6￨c ,￨6￨c JOptionPane￨6￨c .￨6￨c WARNING_MESSAGE￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c JOptionPane￨6￨c .￨6￨c YES_OPTION￨6￨c )￨6￨c )￨5￨j {￨5￨j break￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j }￨3￨l Decoder￨3￨e decoder￨3￨e ;￨3￨e MimeHeader￨3￨e header￨3￨e ;￨3￨e header￨3￨e =￨3￨e part￨3￨e .￨3￨e getHeader￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f decoder￨4￨e =￨4￨e CoderRouter￨4￨e .￨4￨e getDecoder￨4￨e (￨4￨e header￨4￨e .￨4￨e contentTransferEncoding￨4￨e )￨4￨e ;￨4￨e decoder￨4￨e .￨4￨e decode￨4￨e (￨4￨e new￨4￨e ByteArrayInputStream￨4￨e (￨4￨e part￨4￨e .￨4￨e getBody￨4￨e (￨4￨e )￨4￨e .￨4￨e getBytes￨4￨e (￨4￨e "ISO_8859_1"￨4￨e )￨4￨e )￨4￨e ,￨4￨e new￨4￨e FileOutputStream￨4￨e (￨4￨e tempFile￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f ex￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ContactGenerator￨1￨d {￨1￨d private￨2￨e static￨2￨e ContactGenerator￨2￨e instance￨2￨e =￨2￨e new￨2￨e ContactGenerator￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e long￨2￨e nextId￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨f static￨2￨f ContactGenerator￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f firstNames￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f lastNames￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f ContactGenerator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f long￨2￨f generateId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Contact￨2￨f generate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generate￨2￨f (￨2￨f Collection￨3￨p <￨3￨p Contact￨3￨p >￨3￨p collection￨3￨p ,￨3￨p int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f generatePhoneNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 2￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 0￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 0￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b "-555-"￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 1￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 0￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 0￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b append￨3￨b (￨3￨b rint￨3￨b (￨3￨b 0￨3￨b ,￨3￨b 9￨3￨b )￨3￨b )￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f int￨2￨f rint￨2￨f (￨2￨f int￨3￨p min￨3￨p ,￨3￨p int￨3￨p max￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f randomString￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p choices￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AutoWebApp￨1￨d extends￨1￨d BaseInterceptor￨1￨d {￨1￨d int￨2￨e debug￨2￨e =￨2￨e 0￨2￨e ;￨2￨e Hashtable￨2￨e hosts￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e String￨2￨e appsD￨2￨e =￨2￨e "webapps"￨2￨e ;￨2￨e String￨2￨e defaultHost￨2￨e =￨2￨e null￨2￨e ;￨2￨e boolean￨2￨e flat￨2￨e =￨2￨e true￨2￨e ;￨2￨e char￨2￨e hostSeparator￨2￨e =￨2￨e '@'￨2￨e ;￨2￨e char￨2￨e dotReplacement￨2￨e =￨2￨e '_'￨2￨e ;￨2￨e char￨2￨e slashReplacement￨2￨e =￨2￨e '_'￨2￨e ;￨2￨e public￨2￨f AutoWebApp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDir￨2￨f (￨2￨f String￨3￨p d￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHost￨2￨f (￨2￨f String￨3￨p h￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFlat￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f engineInit￨2￨f (￨2￨f ContextManager￨2￨f cm￨2￨f )￨2￨f throws￨2￨f TomcatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addWebApp￨2￨f (￨2￨f ContextManager￨2￨f cm￨2￨f ,￨2￨f File￨2￨f dir￨2￨f ,￨2￨f String￨2￨f host￨2￨f ,￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f TomcatException￨2￨f (￨2￨f )￨2￨f {￨2￨f host￨3￨e =￨3￨e unEscapeHost￨3￨e (￨3￨e host￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j host￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j host￨4￨e =￨4￨e "DEFAULT"￨4￨e ;￨4￨e }￨3￨j String￨3￨e path￨3￨e =￨3￨e "/"￨3￨e +￨3￨e (￨3￨e unEscapePath￨3￨e (￨3￨e name￨3￨e )￨3￨e )￨3￨e ;￨3￨e log￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e "Auto-Adding<seq2seq4repair_space>"￨3￨e +￨3￨e name￨3￨e )￨3￨e +￨3￨e "<seq2seq4repair_space>"￨3￨e )￨3￨e +￨3￨e host￨3￨e )￨3￨e +￨3￨e "<seq2seq4repair_space>"￨3￨e )￨3￨e +￨3￨e path￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j path￨4￨c .￨4￨c equals￨4￨c (￨4￨c "/ROOT"￨4￨c )￨4￨c )￨3￨j {￨3￨j path￨4￨e =￨4￨e ""￨4￨e ;￨4￨e }￨3￨j Hashtable￨3￨e loaded￨3￨e =￨3￨e (￨3￨e (￨3￨e Hashtable￨3￨e )￨3￨e (￨3￨e hosts￨3￨e .￨3￨e get￨3￨e (￨3￨e host￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b loaded￨3￨b .￨3￨b get￨3￨b (￨3￨b path￨3￨b )￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b log￨3￨e (￨3￨e "Already<seq2seq4repair_space>loaded"￨3￨e )￨3￨e ;￨3￨e return￨3￨e ;￨3￨e if￨3￨j (￨3￨j dir￨4￨c .￨4￨c isDirectory￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j Context￨4￨e ctx￨4￨e =￨4￨e new￨4￨e Context￨4￨e (￨4￨e )￨4￨e ;￨4￨e ctx￨4￨e .￨4￨e setContextManager￨4￨e (￨4￨e cm￨4￨e )￨4￨e ;￨4￨e ctx￨4￨e .￨4￨e setPath￨4￨e (￨4￨e path￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c "DEFAULT"￨5￨c .￨5￨c equals￨5￨c (￨5￨c host￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j ctx￨5￨e .￨5￨e setHost￨5￨e (￨5￨e host￨5￨e )￨5￨e ;￨5￨e }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f ctx￨5￨e .￨5￨e setDocBase￨5￨e (￨5￨e dir￨5￨e .￨5￨e getCanonicalPath￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p ex￨5￨p )￨4￨f {￨4￨f ctx￨5￨e .￨5￨e setDocBase￨5￨e (￨5￨e dir￨5￨e .￨5￨e getAbsolutePath￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f if￨4￨j (￨4￨j (￨5￨c debug￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j log￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "automatic<seq2seq4repair_space>add<seq2seq4repair_space>"￨5￨e +￨5￨e host￨5￨e )￨5￨e +￨5￨e ":"￨5￨e )￨5￨e +￨5￨e (￨5￨e ctx￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e path￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j cm￨4￨e .￨4￨e addContext￨4￨e (￨4￨e ctx￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j log￨4￨e (￨4￨e (￨4￨e "Not<seq2seq4repair_space>a<seq2seq4repair_space>dir<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e dir￨4￨e .￨4￨e getAbsolutePath￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f addVHost￨2￨f (￨2￨f ContextManager￨2￨f cm￨2￨f ,￨2￨f File￨2￨f dir￨2￨f ,￨2￨f String￨2￨f host￨2￨f )￨2￨f throws￨2￨f TomcatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f unEscapeHost￨2￨f (￨2￨f String￨3￨p hostName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f unEscapePath￨2￨f (￨2￨f String￨3￨p pathDir￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f unEscapeString￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p char￨3￨p esc￨3￨p ,￨3￨p char￨3￨p repl￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LocalizerTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d private￨2￨e IResourceSettings￨2￨e settings￨2￨e ;￨2￨e private￨2￨e Localizer￨2￨e localizer￨2￨e ;￨2￨e public￨2￨f LocalizerTest￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringValidString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringMissingStringReturnDefault￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringMissingStringNoDefault￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringMissingStringDoNotUseDefault￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringMissingStringExceptionThrown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetStringPropertySubstitution￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInComponentConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b new￨3￨b LocalizerTest￨3￨b .￨3￨b MyLabel￨3￨b (￨3￨b new￨3￨b EmptyPage￨3￨b (￨3￨b )￨3￨b ,￨3￨b "myLabel"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testTwoComponents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d MyLabel￨2￨d extends￨2￨d Label￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f MyLabel￨3￨f (￨3￨f MarkupContainer￨4￨p parent￨4￨p ,￨4￨p final￨4￨p String￨4￨p id￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d GammaTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f GammaTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testRegularizedGamma￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p a￨3￨p ,￨3￨p double￨3￨p x￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testLogGamma￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p x￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b double￨3￨b actual￨3￨b =￨3￨b Gamma￨3￨b .￨3￨b logGamma￨3￨b (￨3￨b x￨3￨b ,￨3￨b 1.0E-4￨3￨b ,￨3￨b Integer￨3￨b .￨3￨b MAX_VALUE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b TestUtils￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e expected￨3￨e ,￨3￨e actual￨3￨e ,￨3￨e 1.0E-4￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaNanPositive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaPositiveNan￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaNegativePositive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaPositiveNegative￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaZeroPositive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaPositiveZero￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegularizedGammaPositivePositive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLogGammaNan￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLogGammaNegative￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLogGammaZero￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLogGammaPositive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d ParentNode￨1￨d extends￨1￨d NodeImpl￨1￨d {￨1￨d static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 2815829867152120872L￨2￨e ;￨2￨e protected￨2￨e DocumentImpl￨2￨e ownerDocument￨2￨e ;￨2￨e protected￨2￨e ChildNode￨2￨e firstChild￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e int￨2￨e changes￨2￨e =￨2￨e 0￨2￨e ;￨2￨e protected￨2￨e transient￨2￨e int￨2￨e nodeListLength￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e protected￨2￨e transient￨2￨e ChildNode￨2￨e nodeListNode￨2￨e ;￨2￨e protected￨2￨e transient￨2￨e int￨2￨e nodeListIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e protected￨2￨f ParentNode￨2￨f (￨2￨f DocumentImpl￨3￨p ownerDocument￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ParentNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f cloneNode￨2￨f (￨2￨f boolean￨3￨p deep￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Document￨2￨f getOwnerDocument￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f DocumentImpl￨2￨f ownerDocument￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setOwnerDocument￨2￨f (￨2￨f DocumentImpl￨3￨p doc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasChildNodes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NodeList￨2￨f getChildNodes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f getFirstChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f getLastChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f ChildNode￨2￨f lastChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f lastChild￨2￨f (￨2￨f ChildNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f insertBefore￨2￨f (￨2￨f Node￨2￨f newChild￨2￨f ,￨2￨f Node￨2￨f refChild￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Node￨2￨f internalInsertBefore￨2￨f (￨2￨f Node￨2￨f newChild￨2￨f ,￨2￨f Node￨2￨f refChild￨2￨f ,￨2￨f int￨2￨f mutationMask￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f removeChild￨2￨f (￨2￨f Node￨2￨f oldChild￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Node￨2￨f internalRemoveChild￨2￨f (￨2￨f Node￨2￨f oldChild￨2￨f ,￨2￨f int￨2￨f mutationMask￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f replaceChild￨2￨f (￨2￨f Node￨2￨f newChild￨2￨f ,￨2￨f Node￨2￨f oldChild￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLength￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f item￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f normalize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setReadOnly￨2￨f (￨2￨f boolean￨3￨p readOnly￨3￨p ,￨3￨p boolean￨3￨p deep￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f changed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f changes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f synchronizeChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f synchronizeChildren￨2￨f (￨2￨f int￨3￨p nodeIndex￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeObject￨2￨f (￨2￨f ObjectOutputStream￨2￨f out￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b syncChildren￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b synchronizeChildren￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨3￨e out￨3￨e .￨3￨e defaultWriteObject￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f readObject￨2￨f (￨2￨f ObjectInputStream￨2￨f ois￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d QueryNodeImpl￨1￨d implements￨1￨d Cloneable￨1￨d ,￨1￨d QueryNode￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e PLAINTEXT_FIELD_NAME￨2￨e =￨2￨e "_plain"￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isLeaf￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e <￨2￨e String￨2￨e ,￨2￨e Object￨2￨e >￨2￨e tags￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e <￨2￨e String￨2￨e ,￨2￨e Object￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e <￨2￨e QueryNode￨2￨e >￨2￨e clauses￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨f void￨2￨f allocate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f add￨2￨f (￨2￨f QueryNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f add￨2￨f (￨2￨f List￨3￨p <￨3￨p QueryNode￨3￨p >￨3￨p children￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLeaf￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f set￨2￨f (￨2￨f List￨3￨p <￨3￨p QueryNode￨3￨p >￨3￨p children￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f QueryNode￨2￨f cloneTree￨2￨f (￨2￨f )￨2￨f throws￨2￨f CloneNotSupportedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f throws￨2￨f CloneNotSupportedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setLeaf￨2￨f (￨2￨f boolean￨3￨p isLeaf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f List￨2￨f <￨2￨f QueryNode￨2￨f >￨2￨f getChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTag￨2￨f (￨2￨f String￨3￨p tagName￨3￨p ,￨3￨p Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f unsetTag￨2￨f (￨2￨f String￨3￨p tagName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f containsTag￨2￨f (￨2￨f String￨3￨p tagName￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b this￨3￨b .￨3￨b tags￨3￨b .￨3￨b containsKey￨3￨b (￨3￨b tagName￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Object￨2￨f getTag￨2￨f (￨2￨f String￨3￨p tagName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e QueryNode￨2￨e parent￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨f void￨2￨f setParent￨2￨f (￨2￨f QueryNode￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f QueryNode￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isRoot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨e boolean￨2￨e toQueryStringIgnoreFields￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨f boolean￨2￨f isDefaultField￨2￨f (￨2￨f CharSequence￨3￨p fld￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Object￨2￨f >￨2￨f getTagMap￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d UMLAction￨1￨d extends￨1￨d AbstractAction￨1￨d {￨1￨d protected￨2￨d static￨2￨d Category￨2￨d cat￨2￨d =￨2￨d Category￨2￨d .￨2￨d getInstance￨2￨d (￨2￨d UMLAction￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d boolean￨2￨d HAS_ICON￨2￨d =￨2￨d true￨2￨d ;￨2￨d public￨2￨d static￨2￨d boolean￨2￨d NO_ICON￨2￨d =￨2￨d false￨2￨d ;￨2￨d public￨2￨d UMLAction￨2￨d (￨2￨d String￨2￨d name￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f UMLAction￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p boolean￨3￨p hasIcon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UMLAction￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p boolean￨3￨p global￨3￨p ,￨3￨p boolean￨3￨p hasIcon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f markNeedsSave￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c ProjectBrowser￨4￨c .￨4￨c TheInstance￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b Project￨4￨b p￨4￨b =￨4￨b TheInstance￨4￨b .￨4￨b getProject￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j p￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j p￨5￨e .￨5￨e setNeedsSave￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f public￨2￨f void￨2￨f updateEnabled￨2￨f (￨2￨f Object￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f shouldBeEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f String￨2￨f stripJunk￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f KeyStroke￨2￨f getShortcut￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f String￨2￨f getMnemonic￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d Persistence￨1￨d {￨1￨d static￨2￨e final￨2￨e String￨2￨e PACKAGE_BASE￨2￨e =￨2￨e "activities"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e PACKAGE_FULL￨2￨e =￨2￨e "org.eclipse.ui."￨2￨e +￨2￨e (￨2￨e Persistence￨2￨e .￨2￨e PACKAGE_BASE￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_ACTIVITY_BINDING￨2￨e =￨2￨e "activityBinding"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_ACTIVITY_ID￨2￨e =￨2￨e "activityId"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_DESCRIPTION￨2￨e =￨2￨e "description"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_ID￨2￨e =￨2￨e "id"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_NAME￨2￨e =￨2￨e "name"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_PARENT_ID￨2￨e =￨2￨e "parentId"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_PATTERN￨2￨e =￨2￨e "pattern"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_PLUGIN_ID￨2￨e =￨2￨e "pluginId"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_ACTIVITY￨2￨e =￨2￨e "activity"￨2￨e ;￨2￨e static￨2￨f IActivityPatternBindingDefinition￨2￨f readActivityBindingDefinition￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p pluginIdOverride￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j memento￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e NullPointerException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j String￨3￨e activityId￨3￨e =￨3￨e memento￨3￨e .￨3￨e getString￨3￨e (￨3￨e Persistence￨3￨e .￨3￨e TAG_ACTIVITY_ID￨3￨e )￨3￨e ;￨3￨e String￨3￨e pluginId￨3￨e =￨3￨e (￨3￨e pluginIdOverride￨3￨e !=￨3￨e null￨3￨e )￨3￨e ?￨3￨e pluginIdOverride￨3￨e :￨3￨e memento￨3￨e .￨3￨e getString￨3￨e (￨3￨e Persistence￨3￨e .￨3￨e TAG_PLUGIN_ID￨3￨e )￨3￨e ;￨3￨e String￨3￨e pattern￨3￨e =￨3￨e memento￨3￨e .￨3￨e getString￨3￨e (￨3￨e Persistence￨3￨e .￨3￨e TAG_PATTERN￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b new￨3￨b ActivityPatternBindingDefinition￨3￨b (￨3￨b activityId￨3￨b ,￨3￨b pluginId￨3￨b ,￨3￨b activityId￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f static￨2￨f List￨2￨f readActivityBindingDefinitions￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p pluginIdOverride￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f IActivityDefinition￨2￨f readActivityDefinition￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p pluginIdOverride￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f List￨2￨f readActivityDefinitions￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p pluginIdOverride￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f writeActivityBindingDefinition￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p IActivityPatternBindingDefinition￨3￨p activityBindingDefinition￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f writeActivityBindingDefinitions￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p List￨3￨p activityBindingDefinitions￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f writeActivityDefinition￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p IActivityDefinition￨3￨p activityDefinition￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f writeActivityDefinitions￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p List￨3￨p activityDefinitions￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Persistence￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FileUploadFieldTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d public￨2￨f FileUploadFieldTest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInternalDetach￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e MockPageWithFormAndUploadField￨3￨e page￨3￨e =￨3￨e new￨3￨e MockPageWithFormAndUploadField￨3￨e (￨3￨e )￨3￨e ;￨3￨e FileUploadField￨3￨e field￨3￨e =￨3￨e new￨3￨e FileUploadField￨3￨e (￨3￨e page￨3￨e .￨3￨e getForm￨3￨e (￨3￨e )￨3￨e ,￨3￨e "upload"￨3￨e )￨3￨e ;￨3￨e tester￨3￨f .￨3￨f startPage￨3￨f (￨3￨f new￨3￨f ITestPageSource￨3￨f (￨3￨f )￨3￨f {￨3￨f private￨4￨e static￨4￨e final￨4￨e long￨4￨e serialVersionUID￨4￨e =￨4￨e 1L￨4￨e ;￨4￨e public￨4￨f Page￨4￨f getTestPage￨4￨f (￨4￨f )￨4￨f {￨4￨f return￨5￨e page￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e RequestCycle￨3￨e requestCycle￨3￨e =￨3￨e tester￨3￨e .￨3￨e createRequestCycle￨3￨e (￨3￨e )￨3￨e ;￨3￨e MockHttpServletRequest￨3￨e servletRequest￨3￨e =￨3￨e tester￨3￨e .￨3￨e getServletRequest￨3￨e (￨3￨e )￨3￨e ;￨3￨e servletRequest￨3￨e .￨3￨e setMethod￨3￨e (￨3￨e "POST"￨3￨e )￨3￨e ;￨3￨e servletRequest￨3￨e .￨3￨e setParameter￨3￨e (￨3￨e "form2:hf:fs"￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e servletRequest￨3￨e .￨3￨e setParameter￨3￨e (￨3￨e "wicketState"￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e servletRequest￨3￨e .￨3￨e addFile￨3￨e (￨3￨e "upload"￨3￨e ,￨3￨e new￨3￨e File￨3￨e (￨3￨e "pom.xml"￨3￨e )￨3￨e ,￨3￨e "text/xml"￨3￨e )￨3￨e ;￨3￨e requestCycle￨3￨e .￨3￨e setRequest￨3￨e (￨3￨e new￨3￨e wicket￨3￨e .￨3￨e protocol￨3￨e .￨3￨e http￨3￨e .￨3￨e servlet￨3￨e .￨3￨e MultipartServletWebRequest￨3￨e (￨3￨e servletRequest￨3￨e ,￨3￨e Bytes￨3￨e .￨3￨e MAX￨3￨e )￨3￨e )￨3￨e ;￨3￨e FileUpload￨3￨e fileUpload￨3￨e =￨3￨e field￨3￨e .￨3￨e getFileUpload￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e fileUpload￨3￨e )￨3￨e ;￨3￨e InputStream￨3￨e is￨3￨e =￨3￨e fileUpload￨3￨e .￨3￨e getInputStream￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e (￨3￨e (￨3￨e is￨3￨e .￨3￨e read￨3￨e (￨3￨e )￨3￨e )￨3￨e !=￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b field￨3￨b .￨3￨b internalOnDetach￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b try￨3￨f (￨3￨f )￨3￨f {￨3￨f is￨4￨e .￨4￨e read￨4￨e (￨4￨e )￨4￨e ;￨4￨e fail￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f fail￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CLIWrapper￨1￨d {￨1￨d private￨2￨e final￨2￨e CommandContext￨2￨e ctx￨2￨e ;￨2￨e private￨2￨e ByteArrayOutputStream￨2￨e consoleOut￨2￨e ;￨2￨e public￨2￨f CLIWrapper￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CLIWrapper￨2￨f (￨2￨f boolean￨2￨f connect￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CLIWrapper￨2￨f (￨2￨f boolean￨2￨f connect￨2￨f ,￨2￨f String￨2￨f cliAddress￨2￨f )￨2￨f throws￨2￨f CliInitializationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f InputStream￨2￨f createConsoleInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isConnected￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f sendConnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f sendConnect￨2￨f (￨2￨f String￨3￨p cliAddress￨3￨p )￨2￨f {￨2￨f String￨3￨e addr￨3￨e =￨3￨e (￨3￨e cliAddress￨3￨e !=￨3￨e null￨3￨e )￨3￨e ?￨3￨e cliAddress￨3￨e :￨3￨e TestSuiteEnvironment￨3￨e .￨3￨e getServerAddress￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b ctx￨4￨b .￨4￨b connectController￨4￨b (￨4￨b addr￨4￨b ,￨4￨b TestSuiteEnvironment￨4￨b .￨4￨b getServerPort￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e true￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f CommandLineException￨4￨p e￨4￨p )￨3￨f {￨3￨f e￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e return￨4￨e false￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f boolean￨2￨f sendLine￨2￨f (￨2￨f String￨3￨p line￨3￨p ,￨3￨p boolean￨3￨p ignoreError￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f sendLine￨2￨f (￨2￨f String￨3￨p line￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f readOutput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CLIOpResult￨2￨f readAllAsOpResult￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f quit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasQuit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getUsername￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getPassword￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CharacterLiteral￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d private￨2￨e String￨2￨e escapedValue￨2￨e =￨2￨e "\'X\'"￨2￨e ;￨2￨e CharacterLiteral￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getNodeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f subtreeMatch￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b boolean￨3￨b visitChildren￨3￨b =￨3￨b visitor￨3￨b .￨3￨b visit￨3￨b (￨3￨b this￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b visitor￨3￨e .￨3￨e endVisit￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f getEscapedValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEscapedValue￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f charValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCharValue￨2￨f (￨2￨f char￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d XSDAttributeGroupTraverser￨1￨d extends￨1￨d XSDAbstractTraverser￨1￨d {￨1￨d XSDAttributeGroupTraverser￨2￨f (￨2￨f XSDHandler￨3￨p handler￨3￨p ,￨3￨p XSAttributeChecker￨3￨p gAttrCheck￨3￨p )￨2￨f {￨2￨f }￨2￨f XSAttributeGroupDecl￨2￨f traverseLocal￨2￨f (￨2￨f Element￨3￨p elmNode￨3￨p ,￨3￨p XSDocumentInfo￨3￨p schemaDoc￨3￨p ,￨3￨p SchemaGrammar￨3￨p grammar￨3￨p )￨2￨f {￨2￨f }￨2￨f XSAttributeGroupDecl￨2￨f traverseGlobal￨2￨f (￨2￨f Element￨3￨p elmNode￨3￨p ,￨3￨p XSDocumentInfo￨3￨p schemaDoc￨3￨p ,￨3￨p SchemaGrammar￨3￨p grammar￨3￨p )￨2￨f {￨2￨f XSAttributeGroupDecl￨3￨e attrGrp￨3￨e =￨3￨e new￨3￨e XSAttributeGroupDecl￨3￨e (￨3￨e )￨3￨e ;￨3￨e Object￨3￨e [￨3￨e ]￨3￨e attrValues￨3￨e =￨3￨e fAttrChecker￨3￨e .￨3￨e checkAttributes￨3￨e (￨3￨e elmNode￨3￨e ,￨3￨e true￨3￨e ,￨3￨e schemaDoc￨3￨e )￨3￨e ;￨3￨e String￨3￨e nameAttr￨3￨e =￨3￨e (￨3￨e (￨3￨e String￨3￨e )￨3￨e (￨3￨e attrValues￨3￨e [￨3￨e XSAttributeChecker￨3￨e .￨3￨e ATTIDX_NAME￨3￨e ]￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j nameAttr￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j reportSchemaError￨4￨f (￨4￨f "s4s-att-must-appear"￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨e elmNode￨4￨e )￨4￨e ;￨4￨e nameAttr￨4￨e =￨4￨e "no<seq2seq4repair_space>name"￨4￨e ;￨4￨e }￨3￨j attrGrp￨3￨e .￨3￨e fName￨3￨e =￨3￨e nameAttr￨3￨e ;￨3￨e attrGrp￨3￨e .￨3￨e fTargetNamespace￨3￨e =￨3￨e schemaDoc￨3￨e .￨3￨e fTargetNamespace￨3￨e ;￨3￨e Element￨3￨e child￨3￨e =￨3￨e DOMUtil￨3￨e .￨3￨e getFirstChildElement￨3￨e (￨3￨e elmNode￨3￨e )￨3￨e ;￨3￨e XSAnnotationImpl￨3￨e annotation￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c child￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c DOMUtil￨4￨c .￨4￨c getLocalName￨4￨c (￨4￨c child￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c ELT_ANNOTATION￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j annotation￨4￨e =￨4￨e traverseAnnotationDecl￨4￨e (￨4￨e child￨4￨e ,￨4￨e attrValues￨4￨e ,￨4￨e false￨4￨e ,￨4￨e schemaDoc￨4￨e )￨4￨e ;￨4￨e child￨4￨e =￨4￨e DOMUtil￨4￨e .￨4￨e getNextSiblingElement￨4￨e (￨4￨e child￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j String￨4￨e text￨4￨e =￨4￨e DOMUtil￨4￨e .￨4￨e getSyntheticAnnotation￨4￨e (￨4￨e elmNode￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j text￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j annotation￨5￨e =￨5￨e traverseSyntheticAnnotation￨5￨e (￨5￨e elmNode￨5￨e ,￨5￨e text￨5￨e ,￨5￨e attrValues￨5￨e ,￨5￨e false￨5￨e ,￨5￨e schemaDoc￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j Element￨3￨e nextNode￨3￨e =￨3￨e traverseAttrsAndAttrGrps￨3￨e (￨3￨e child￨3￨e ,￨3￨e attrGrp￨3￨e ,￨3￨e schemaDoc￨3￨e ,￨3￨e grammar￨3￨e ,￨3￨e null￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j nextNode￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Object￨4￨f [￨4￨f ]￨4￨f args￨4￨f =￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ;￨4￨e reportSchemaError￨4￨e (￨4￨e "s4s-elt-must-match.1"￨4￨e ,￨4￨e args￨4￨e ,￨4￨e nextNode￨4￨e )￨4￨e ;￨4￨e }￨3￨j attrGrp￨3￨e .￨3￨e removeProhibitedAttrs￨3￨e (￨3￨e )￨3￨e ;￨3￨e XSAttributeGroupDecl￨3￨e redefinedAttrGrp￨3￨e =￨3￨e (￨3￨e (￨3￨e XSAttributeGroupDecl￨3￨e )￨3￨e (￨3￨e fSchemaHandler￨3￨e .￨3￨e getGrpOrAttrGrpRedefinedByRestriction￨3￨e (￨3￨e ATTRIBUTEGROUP_TYPE￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e xerces￨3￨e .￨3￨e xni￨3￨e .￨3￨e QName￨3￨e (￨3￨e XMLSymbols￨3￨e .￨3￨e EMPTY_STRING￨3￨e ,￨3￨e nameAttr￨3￨e ,￨3￨e nameAttr￨3￨e ,￨3￨e schemaDoc￨3￨e .￨3￨e fTargetNamespace￨3￨e )￨3￨e ,￨3￨e schemaDoc￨3￨e ,￨3￨e elmNode￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j redefinedAttrGrp￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Object￨4￨e [￨4￨e ]￨4￨e errArgs￨4￨e =￨4￨e attrGrp￨4￨e .￨4￨e validRestrictionOf￨4￨e (￨4￨e nameAttr￨4￨e ,￨4￨e redefinedAttrGrp￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j errArgs￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j reportSchemaError￨5￨e (￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e errArgs￨5￨e [￨5￨e (￨5￨e (￨5￨e errArgs￨5￨e .￨5￨e length￨5￨e )￨5￨e -￨5￨e 1￨5￨e )￨5￨e ]￨5￨e )￨5￨e )￨5￨e ,￨5￨e errArgs￨5￨e ,￨5￨e child￨5￨e )￨5￨e ;￨5￨e reportSchemaError￨5￨f (￨5￨f "src-redefine.7.2.2"￨5￨f ,￨5￨f new￨5￨f Object￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f ,￨5￨e child￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j XSObjectList￨3￨e annotations￨3￨e ;￨3￨e if￨3￨j (￨3￨j annotation￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j annotations￨4￨e =￨4￨e new￨4￨e XSObjectListImpl￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b (￨4￨b (￨4￨b XSObjectListImpl￨4￨b )￨4￨b (￨4￨b annotations￨4￨b )￨4￨b )￨4￨b .￨4￨b add￨4￨b (￨4￨b annotation￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j else￨3￨j {￨3￨j annotations￨4￨e =￨4￨e XSObjectListImpl￨4￨e .￨4￨e EMPTY_LIST￨4￨e ;￨4￨e }￨3￨j attrGrp￨3￨e .￨3￨e fAnnotations￨3￨e =￨3￨e annotations￨3￨e ;￨3￨e grammar￨3￨e .￨3￨e addGlobalAttributeGroupDecl￨3￨e (￨3￨e attrGrp￨3￨e )￨3￨e ;￨3￨e fAttrChecker￨3￨e .￨3￨e returnAttrArray￨3￨e (￨3￨e attrValues￨3￨e ,￨3￨e schemaDoc￨3￨e )￨3￨e ;￨3￨e return￨3￨e attrGrp￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EvaluationTest￨1￨d {￨1￨d public￨2￨f LeastSquaresBuilder￨2￨f builder￨2￨f (￨2￨f StatisticalReferenceDataset￨3￨p dataset￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeResiduals￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeCovariance￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeValueAndJacobian￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeCost￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeRMS￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testComputeSigma￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testEvaluateCopiesPoint￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testLazyEvaluation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testLazyEvaluationPrecondition￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDirectEvaluation￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨f RealVector￨3￨f dummy￨3￨f =￨3￨f new￨3￨f ArrayRealVector￨3￨f (￨3￨f new￨3￨f double￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f )￨3￨e ;￨3￨e final￨3￨e LeastSquaresProblem￨3￨e p￨3￨e =￨3￨e LeastSquaresFactory￨3￨e .￨3￨e create￨3￨e (￨3￨e LeastSquaresFactory￨3￨e .￨3￨e model￨3￨e (￨3￨e dummyModel￨3￨e (￨3￨e )￨3￨e ,￨3￨e dummyJacobian￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e dummy￨3￨e ,￨3￨e dummy￨3￨e ,￨3￨e null￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b final￨4￨b Evaluation￨4￨b eval￨4￨b =￨4￨b p￨4￨b .￨4￨b evaluate￨4￨b (￨4￨b dummy￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Assert￨4￨e .￨4￨e fail￨4￨e (￨4￨e "Exception<seq2seq4repair_space>expected"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f RuntimeException￨4￨p e￨4￨p )￨3￨f {￨3￨f final￨4￨e String￨4￨e msg￨4￨e =￨4￨e e￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ;￨4￨e Assert￨4￨e .￨4￨e assertTrue￨4￨e (￨4￨e (￨4￨e (￨4￨e msg￨4￨e .￨4￨e equals￨4￨e (￨4￨e "dummyModel"￨4￨e )￨4￨e )￨4￨e ||￨4￨e (￨4￨e msg￨4￨e .￨4￨e equals￨4￨e (￨4￨e "dummyJacobian"￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f MultivariateVectorFunction￨2￨f dummyModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f MultivariateMatrixFunction￨2￨f dummyJacobian￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AuthorizationInterceptor￨1￨d implements￨1￨d Interceptor￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d AuthorizationInterceptor￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d EJBMethodSecurityMetaData￨2￨d ejbMethodSecurityMetaData￨2￨d ;￨2￨d private￨2￨d final￨2￨d String￨2￨d viewClassName￨2￨d ;￨2￨d private￨2￨d final￨2￨d Method￨2￨d viewMethod￨2￨d ;￨2￨d public￨2￨d AuthorizationInterceptor￨2￨d (￨2￨d final￨2￨d EJBMethodSecurityMetaData￨2￨d ejbMethodSecurityMetaData￨2￨d ,￨2￨d final￨2￨d String￨2￨d viewClassName￨2￨d ,￨2￨d final￨2￨d Method￨2￨d viewMethod￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f processInvocation￨2￨f (￨2￨f InterceptorContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨d Component￨3￨d component￨3￨d =￨3￨d context￨3￨d .￨3￨d getPrivateData￨3￨d (￨3￨d Component￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d if￨3￨d (￨3￨d (￨3￨d component￨3￨d instanceof￨3￨d EJBComponent￨3￨d )￨3￨d ==￨3￨d false￨3￨d )￨3￨d {￨3￨d throw￨4￨e new￨4￨e IllegalStateException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Unexpected<seq2seq4repair_space>component<seq2seq4repair_space>type:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e component￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>expected:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e EJBComponent￨4￨e .￨4￨e class￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨d final￨3￨e Method￨3￨e invokedMethod￨3￨e =￨3￨e context￨3￨e .￨3￨e getMethod￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨d ComponentView￨3￨d componentView￨3￨d =￨3￨d context￨3￨d .￨3￨d getPrivateData￨3￨d (￨3￨d ComponentView￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d final￨3￨d String￨3￨d viewClassOfInvokedMethod￨3￨d =￨3￨d componentView￨3￨d .￨3￨d getViewClass￨3￨d (￨3￨d )￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d ;￨3￨d if￨3￨d (￨3￨d (￨3￨d !￨3￨d (￨3￨d this￨3￨d .￨3￨d viewClassName￨3￨d .￨3￨d equals￨3￨d (￨3￨d viewClassOfInvokedMethod￨3￨d )￨3￨d )￨3￨d )￨3￨d ||￨3￨d (￨3￨d !￨3￨d (￨3￨d this￨3￨d .￨3￨d viewMethod￨3￨d .￨3￨d equals￨3￨d (￨3￨d invokedMethod￨3￨d )￨3￨d )￨3￨d )￨3￨d )￨3￨d {￨3￨d throw￨4￨e new￨4￨e IllegalStateException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e this￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>cannot<seq2seq4repair_space>handle<seq2seq4repair_space>method<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e invokedMethod￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>of<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e viewClassOfInvokedMethod￨4￨e )￨4￨e +￨4￨e ".Expected<seq2seq4repair_space>view<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e "method<seq2seq4repair_space>to<seq2seq4repair_space>be<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e viewMethod￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>on<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e viewClassName￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨d final￨3￨e EJBComponent￨3￨e ejbComponent￨3￨e =￨3￨e (￨3￨e (￨3￨e EJBComponent￨3￨e )￨3￨e (￨3￨e component￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j ejbMethodSecurityMetaData￨4￨c .￨4￨c isAccessDenied￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e javax￨4￨e .￨4￨e ejb￨4￨e .￨4￨e EJBAccessException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨4￨e +￨4￨e invokedMethod￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e ejbComponent￨4￨e .￨4￨e getComponentName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c ejbMethodSecurityMetaData￨4￨c .￨4￨c isPermitAll￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e Collection￨4￨e <￨4￨e String￨4￨e >￨4￨e allowedRoles￨4￨e =￨4￨e ejbMethodSecurityMetaData￨4￨e .￨4￨e getRolesAllowed￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c allowedRoles￨5￨c .￨5￨c isEmpty￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j final￨5￨e SimpleSecurityManager￨5￨e securityManager￨5￨e =￨5￨e ejbComponent￨5￨e .￨5￨e getSecurityManager￨5￨e (￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b !￨5￨b (￨5￨b securityManager￨5￨b .￨5￨b isCallerInRole￨5￨b (￨5￨b allowedRoles￨5￨b .￨5￨b toArray￨5￨b (￨5￨b new￨5￨b String￨5￨b [￨5￨b allowedRoles￨5￨b .￨5￨b size￨5￨b (￨5￨b )￨5￨b ]￨5￨b )￨5￨b )￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b throw￨5￨e new￨5￨e javax￨5￨e .￨5￨e ejb￨5￨e .￨5￨e EJBAccessException￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨5￨e +￨5￨e invokedMethod￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e (￨5￨e ejbComponent￨5￨e .￨5￨e getComponentName￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e context￨3￨e .￨3￨e proceed￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WebMvcConfigurationSupportTests￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f requestMappingHandlerMapping￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f emptyViewControllerHandlerMapping￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f beanNameHandlerMapping￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f emptyResourceHandlerMapping￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f emptyDefaultServletHandlerMapping￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f requestMappingHandlerAdapter￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f ApplicationContext￨3￨d context￨3￨d =￨3￨d initContext￨3￨d (￨3￨d WebMvcConfigurationSupportTests￨3￨d .￨3￨d WebConfig￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d RequestMappingHandlerAdapter￨3￨d adapter￨3￨d =￨3￨d context￨3￨d .￨3￨d getBean￨3￨d (￨3￨d RequestMappingHandlerAdapter￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d List￨3￨d <￨3￨d HttpMessageConverter￨3￨d <￨3￨d ?￨3￨d >￨3￨d >￨3￨d converters￨3￨d =￨3￨d adapter￨3￨d .￨3￨d getMessageConverters￨3￨d (￨3￨d )￨3￨d ;￨3￨d assertEquals￨3￨d (￨3￨d 9￨3￨d ,￨3￨d converters￨3￨d .￨3￨d size￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d for￨3￨d (￨3￨d HttpMessageConverter￨3￨d <￨3￨d ?￨3￨d >￨3￨d converter￨3￨d :￨3￨d converters￨3￨d )￨3￨d {￨3￨d if￨4￨j (￨4￨j converter￨5￨c instanceof￨5￨c AbstractJackson2HttpMessageConverter￨5￨c )￨4￨j {￨4￨j ObjectMapper￨5￨e objectMapper￨5￨e =￨5￨e (￨5￨e (￨5￨e AbstractJackson2HttpMessageConverter￨5￨e )￨5￨e (￨5￨e converter￨5￨e )￨5￨e )￨5￨e .￨5￨e getObjectMapper￨5￨e (￨5￨e )￨5￨e ;￨5￨e assertTrue￨5￨e (￨5￨e objectMapper￨5￨e .￨5￨e getDeserializationConfig￨5￨e (￨5￨e )￨5￨e .￨5￨e isEnabled￨5￨e (￨5￨e MapperFeature￨5￨e .￨5￨e DEFAULT_VIEW_INCLUSION￨5￨e )￨5￨e )￨5￨e ;￨5￨e assertTrue￨5￨e (￨5￨e objectMapper￨5￨e .￨5￨e getSerializationConfig￨5￨e (￨5￨e )￨5￨e .￨5￨e isEnabled￨5￨e (￨5￨e MapperFeature￨5￨e .￨5￨e DEFAULT_VIEW_INCLUSION￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b assertTrue￨5￨b (￨5￨b objectMapper￨5￨b .￨5￨b getDeserializationConfig￨5￨b (￨5￨b )￨5￨b .￨5￨b isEnabled￨5￨b (￨5￨b DeserializationFeature￨5￨b .￨5￨b FAIL_ON_UNKNOWN_PROPERTIES￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b if￨5￨j (￨5￨j converter￨6￨c instanceof￨6￨c MappingJackson2XmlHttpMessageConverter￨6￨c )￨5￨j {￨5￨j assertEquals￨6￨e (￨6￨e XmlMapper￨6￨e .￨6￨e class￨6￨e ,￨6￨e objectMapper￨6￨e .￨6￨e getClass￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨d ConfigurableWebBindingInitializer￨3￨e initializer￨3￨e =￨3￨e (￨3￨e (￨3￨e ConfigurableWebBindingInitializer￨3￨e )￨3￨e (￨3￨e adapter￨3￨e .￨3￨e getWebBindingInitializer￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e initializer￨3￨e )￨3￨e ;￨3￨e ConversionService￨3￨e conversionService￨3￨e =￨3￨e initializer￨3￨e .￨3￨e getConversionService￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e conversionService￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e (￨3￨e conversionService￨3￨e instanceof￨3￨e FormattingConversionService￨3￨e )￨3￨e )￨3￨e ;￨3￨e Validator￨3￨e validator￨3￨e =￨3￨e initializer￨3￨e .￨3￨e getValidator￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e validator￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e (￨3￨e validator￨3￨e instanceof￨3￨e LocalValidatorFactoryBean￨3￨e )￨3￨e )￨3￨e ;￨3￨e DirectFieldAccessor￨3￨e fieldAccessor￨3￨e =￨3￨e new￨3￨e DirectFieldAccessor￨3￨e (￨3￨e adapter￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Object￨3￨e >￨3￨e interceptors￨3￨e =￨3￨e (￨3￨e (￨3￨e List￨3￨e <￨3￨e Object￨3￨e >￨3￨e )￨3￨e (￨3￨e fieldAccessor￨3￨e .￨3￨e getPropertyValue￨3￨e (￨3￨e "responseBodyAdvice"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e interceptors￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e JsonViewResponseBodyAdvice￨3￨e .￨3￨e class￨3￨e ,￨3￨e interceptors￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e .￨3￨e getClass￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f uriComponentsContributor￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f handlerExceptionResolver￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f mvcViewResolver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f mvcViewResolverWithExistingResolver￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f defaultPathMatchConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ApplicationContext￨2￨f initContext￨2￨f (￨2￨f Class￨3￨p ...￨3￨p configClasses￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨d EnableWebMvc￨2￨d @￨2￨d Configuration￨2￨d public￨2￨d static￨2￨d class￨2￨d WebConfig￨2￨d {￨2￨d @￨3￨f Bean￨3￨f (￨3￨f name￨3￨f =￨3￨f "/testController"￨3￨f )￨3￨f public￨3￨f WebMvcConfigurationSupportTests￨3￨f .￨3￨f TestController￨3￨f testController￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨d Configuration￨2￨d public￨2￨d static￨2￨d class￨2￨d ViewResolverConfig￨2￨d {￨2￨d @￨3￨f Bean￨3￨f public￨3￨f ViewResolver￨3￨f beanNameViewResolver￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨d Controller￨2￨d public￨2￨d static￨2￨d class￨2￨d TestController￨2￨d {￨2￨d @￨3￨f RequestMapping￨3￨f (￨3￨f "/"￨3￨f )￨3￨f public￨3￨f void￨3￨f handle￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f RequestMapping￨3￨f (￨3￨f "/foo/{id}/bar/{date}"￨3￨f )￨3￨f public￨3￨f HttpEntity￨3￨f <￨3￨f Void￨3￨f >￨3￨f methodWithTwoPathVariables￨3￨f (￨3￨f @￨4￨p PathVariable￨4￨p Integer￨4￨p id￨4￨p ,￨4￨p @￨4￨p DateTimeFormat￨4￨p (￨4￨p iso￨4￨p =￨4￨p ISO￨4￨p .￨4￨p DATE￨4￨p )￨4￨p @￨4￨p PathVariable￨4￨p DateTime￨4￨p date￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨d Controller￨2￨d @￨2￨d Scope￨2￨d (￨2￨d "prototype"￨2￨d )￨2￨d public￨2￨d static￨2￨d class￨2￨d ScopedController￨2￨d {￨2￨d @￨3￨f RequestMapping￨3￨f (￨3￨f "/scoped"￨3￨f )￨3￨f public￨3￨f void￨3￨f handle￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨d Controller￨2￨d @￨2￨d Scope￨2￨d (￨2￨d value￨2￨d =￨2￨d "prototype"￨2￨d ,￨2￨d proxyMode￨2￨d =￨2￨d ScopedProxyMode￨2￨d .￨2￨d TARGET_CLASS￨2￨d )￨2￨d public￨2￨d static￨2￨d class￨2￨d ScopedProxyController￨2￨d {￨2￨d @￨3￨f RequestMapping￨3￨f (￨3￨f "/scopedProxy"￨3￨f )￨3￨f public￨3￨f void￨3￨f handle￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d BasicModelP￨1￨d extends￨1￨d BasicModel￨1￨d {￨1￨d protected￨2￨e static￨2￨e double￨2￨e LOG2_E￨2￨e =￨2￨e SimilarityBase￨2￨e .￨2￨e log2￨2￨e (￨2￨e Math￨2￨e .￨2￨e E￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f final￨2￨f float￨2￨f score￨2￨f (￨2￨f BasicStats￨3￨p stats￨3￨p ,￨3￨p float￨3￨p tfn￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b float￨3￨b lambda￨3￨b =￨3￨b (￨3￨b (￨3￨b float￨3￨b )￨3￨b (￨3￨b stats￨3￨b .￨3￨b getTotalTermFreq￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b /￨3￨b (￨3￨b stats￨3￨b .￨3￨b getNumberOfDocuments￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e (￨3￨e (￨3￨e float￨3￨e )￨3￨e (￨3￨e (￨3￨e (￨3￨e tfn￨3￨e *￨3￨e (￨3￨e SimilarityBase￨3￨e .￨3￨e log2￨3￨e (￨3￨e (￨3￨e tfn￨3￨e /￨3￨e lambda￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e (￨3￨e (￨3￨e lambda￨3￨e +￨3￨e (￨3￨e 1￨3￨e /￨3￨e (￨3￨e 12￨3￨e *￨3￨e tfn￨3￨e )￨3￨e )￨3￨e )￨3￨e -￨3￨e tfn￨3￨e )￨3￨e *￨3￨e (￨3￨e BasicModelP￨3￨e .￨3￨e LOG2_E￨3￨e )￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e 0.5￨3￨e *￨3￨e (￨3￨e SimilarityBase￨3￨e .￨3￨e log2￨3￨e (￨3￨e (￨3￨e (￨3￨e 2￨3￨e *￨3￨e (￨3￨e Math￨3￨e .￨3￨e PI￨3￨e )￨3￨e )￨3￨e *￨3￨e tfn￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Main￨1￨d {￨1￨d public￨2￨f static￨2￨f final￨2￨f void￨2￨f main￨2￨f (￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e File￨4￨e installDirectory￨4￨e =￨4￨e Main￨4￨e .￨4￨e findInstallDir￨4￨e (￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e "ant.home"￨4￨e ,￨4￨e installDirectory￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e File￨4￨e libDir￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e installDirectory￨4￨e ,￨4￨e "lib"￨4￨e )￨4￨e ;￨4￨e final￨4￨e URL￨4￨e [￨4￨e ]￨4￨e urls￨4￨e =￨4￨e Main￨4￨e .￨4￨e buildURLList￨4￨e (￨4￨e libDir￨4￨e )￨4￨e ;￨4￨e final￨4￨e LauncherClassLoader￨4￨e classLoader￨4￨e =￨4￨e new￨4￨e LauncherClassLoader￨4￨e (￨4￨e urls￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b final￨4￨b Class￨4￨b clazz￨4￨b =￨4￨b classLoader￨4￨b .￨4￨b loadClass￨4￨b (￨4￨b "org.apache.ant.Main"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b final￨4￨f Method￨4￨f method￨4￨f =￨4￨f clazz￨4￨f .￨4￨f getMethod￨4￨f (￨4￨f "main"￨4￨f ,￨4￨f new￨4￨f Class￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e method￨4￨f .￨4￨f invoke￨4￨f (￨4￨f null￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f final￨4￨p InvocationTargetException￨4￨p ite￨4￨p )￨3￨f {￨3￨f System￨4￨e .￨4￨e err￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e "Error:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e ite￨4￨e .￨4￨e getTargetException￨4￨e (￨4￨e )￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e ite￨4￨e .￨4￨e getTargetException￨4￨e (￨4￨e )￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f final￨4￨p Throwable￨4￨p throwable￨4￨p )￨3￨f {￨3￨f System￨4￨e .￨4￨e err￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e "Error:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e throwable￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e throwable￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f URL￨2￨f [￨2￨f ]￨2￨f buildURLList￨2￨f (￨2￨f final￨2￨f File￨2￨f dir￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f File￨2￨f findInstallDir￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ClassUtils￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e char￨2￨e PACKAGE_SEPARATOR_CHAR￨2￨e =￨2￨e '.'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PACKAGE_SEPARATOR￨2￨e =￨2￨e String￨2￨e .￨2￨e valueOf￨2￨e (￨2￨e ClassUtils￨2￨e .￨2￨e PACKAGE_SEPARATOR_CHAR￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e INNER_CLASS_SEPARATOR_CHAR￨2￨e =￨2￨e '$'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e INNER_CLASS_SEPARATOR￨2￨e =￨2￨e String￨2￨e .￨2￨e valueOf￨2￨e (￨2￨e ClassUtils￨2￨e .￨2￨e INNER_CLASS_SEPARATOR_CHAR￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e >￨2￨e primitiveWrapperMap￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e >￨2￨e wrapperPrimitiveMap￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e abbreviationMap￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e reverseAbbreviationMap￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f addAbbreviation￨2￨f (￨2￨f String￨3￨p primitive￨3￨p ,￨3￨p String￨3￨p abbreviation￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ClassUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortClassName￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p String￨3￨p valueIfNull￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortClassName￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortClassName￨2￨f (￨2￨f String￨3￨p className￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageName￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p String￨3￨p valueIfNull￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageName￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j cls￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e StringUtils￨4￨e .￨4￨e EMPTY￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b ClassUtils￨3￨b .￨3￨b getPackageName￨3￨b (￨3￨b cls￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageName￨2￨f (￨2￨f String￨3￨p className￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f getAllSuperclasses￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f getAllInterfaces￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f convertClassNamesToClasses￨2￨f (￨2￨f List￨3￨p <￨3￨p String￨3￨p >￨3￨p classNames￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f convertClassesToClassNames￨2￨f (￨2￨f List￨3￨p <￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p classes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isAssignable￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p classArray￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p toClassArray￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isAssignable￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p classArray￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p toClassArray￨3￨p ,￨3￨p boolean￨3￨p autoboxing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isAssignable￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p toClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isAssignable￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p toClass￨3￨p ,￨3￨p boolean￨3￨p autoboxing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f primitiveToWrapper￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f primitivesToWrappers￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p classes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f wrapperToPrimitive￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f wrappersToPrimitives￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p [￨3￨p ]￨3￨p classes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isInnerClass￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f getClass￨2￨f (￨2￨f ClassLoader￨2￨f classLoader￨2￨f ,￨2￨f String￨2￨f className￨2￨f ,￨2￨f boolean￨2￨f initialize￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f getClass￨2￨f (￨2￨f ClassLoader￨2￨f classLoader￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f getClass￨2￨f (￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f getClass￨2￨f (￨2￨f String￨2￨f className￨2￨f ,￨2￨f boolean￨2￨f initialize￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Method￨2￨f getPublicMethod￨2￨f (￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f cls￨2￨f ,￨2￨f String￨2￨f methodName￨2￨f ,￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f parameterTypes￨2￨f )￨2￨f throws￨2￨f NoSuchMethodException￨2￨f ,￨2￨f SecurityException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f toCanonicalName￨2￨f (￨2￨f String￨3￨p className￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f toClass￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortCanonicalName￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p String￨3￨p valueIfNull￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortCanonicalName￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getShortCanonicalName￨2￨f (￨2￨f String￨3￨p canonicalName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageCanonicalName￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p String￨3￨p valueIfNull￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageCanonicalName￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPackageCanonicalName￨2￨f (￨2￨f String￨3￨p canonicalName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f getCanonicalName￨2￨f (￨2￨f String￨3￨p className￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CompilationUnitDeclaration￨1￨d extends￨1￨d ASTNode￨1￨d implements￨1￨d ReferenceContext￨1￨d ,￨1￨d ProblemSeverities￨1￨d {￨1￨d private￨2￨f static￨2￨f final￨2￨f Comparator￨2￨f STRING_LITERAL_COMPARATOR￨2￨f =￨2￨f new￨2￨f Comparator￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f int￨3￨f compare￨3￨f (￨3￨f Object￨4￨p o1￨4￨p ,￨4￨p Object￨4￨p o2￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e STRING_LITERALS_INCREMENT￨2￨e =￨2￨e 10￨2￨e ;￨2￨e public￨2￨e ImportReference￨2￨e currentPackage￨2￨e ;￨2￨e public￨2￨e ImportReference￨2￨e [￨2￨e ]￨2￨e imports￨2￨e ;￨2￨e public￨2￨e TypeDeclaration￨2￨e [￨2￨e ]￨2￨e types￨2￨e ;￨2￨e public￨2￨e int￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e comments￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e ignoreFurtherInvestigation￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e ignoreMethodBodies￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e CompilationUnitScope￨2￨e scope￨2￨e ;￨2￨e public￨2￨e ProblemReporter￨2￨e problemReporter￨2￨e ;￨2￨e public￨2￨e CompilationResult￨2￨e compilationResult￨2￨e ;￨2￨e public￨2￨e LocalTypeBinding￨2￨e [￨2￨e ]￨2￨e localTypes￨2￨e ;￨2￨e public￨2￨e int￨2￨e localTypeCount￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isPropagatingInnerClassEmulation￨2￨e ;￨2￨e public￨2￨e Javadoc￨2￨e javadoc￨2￨e ;￨2￨e public￨2￨e NLSTag￨2￨e [￨2￨e ]￨2￨e nlsTags￨2￨e ;￨2￨e private￨2￨e StringLiteral￨2￨e [￨2￨e ]￨2￨e stringLiterals￨2￨e ;￨2￨e private￨2￨e int￨2￨e stringLiteralsPtr￨2￨e ;￨2￨e public￨2￨f CompilationUnitDeclaration￨2￨f (￨2￨f ProblemReporter￨3￨p problemReporter￨3￨p ,￨3￨p CompilationResult￨3￨p compilationResult￨3￨p ,￨3￨p int￨3￨p sourceLength￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f abort￨2￨f (￨2￨f int￨3￨p abortLevel￨3￨p ,￨3￨p CategorizedProblem￨3￨p problem￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f analyseCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f TypeDeclaration￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkUnusedImports￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c scope￨4￨c .￨4￨c imports￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c this￨5￨c .￨5￨c scope￨5￨c .￨5￨c imports￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l ImportBinding￨5￨e importBinding￨5￨e =￨5￨e this￨5￨e .￨5￨e scope￨5￨e .￨5￨e imports￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e ImportReference￨5￨e importReference￨5￨e =￨5￨e importBinding￨5￨e .￨5￨e reference￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b importReference￨5￨b !=￨5￨b null￨5￨b )￨5￨b &&￨5￨b (￨5￨b !￨5￨b (￨5￨b importReference￨5￨b .￨5￨b used￨5￨b )￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e unusedImport￨5￨e (￨5￨e importReference￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j }￨2￨f public￨2￨f CompilationResult￨2￨f compilationResult￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeDeclaration￨2￨f declarationOfType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p typeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getFileName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getMainTypeName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEmpty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPackageInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasErrors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f propagateInnerEmulationForAllLocalTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f recordStringLiteral￨2￨f (￨2￨f StringLiteral￨3￨p literal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f record￨2￨f (￨2￨f LocalTypeBinding￨3￨p localType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f reportNLSProblems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsHavingErrors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p CompilationUnitScope￨3￨p unitScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PageCreateKey￨1￨d extends￨1￨d WizardPage￨1￨d implements￨1￨d Listener￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e PAGE_NAME￨2￨e =￨2￨e "SignPageCreateKey"￨2￨e ;￨2￨e private￨2￨e String￨2￨e keystoreName￨2￨e ;￨2￨e private￨2￨e String￨2￨e project￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e generated￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bOpen￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bGenerate￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bEchoKeystorePassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bEchoKeyPassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Combo￨2￨e cAlgorithm￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Label￨2￨e lPreview￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Label￨2￨e lResult￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tCommonName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tOrganizationalUnit￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tOrganization￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tLocation￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tState￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tCountry￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeyName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeystore￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeystorePassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeyPassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e LABELWIDTH￨2￨e =￨2￨e 160￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e TEXTHEIGHT￨2￨e =￨2￨e 40￨2￨e ;￨2￨e private￨2￨e Signature￨2￨e signature￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Keystore￨2￨e keystore￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f PageCreateKey￨2￨f (￨2￨f final￨3￨p Signature￨3￨p signature￨3￨p ,￨3￨p final￨3￨p String￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createControl￨2￨f (￨2￨f final￨3￨p Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createPageContent￨2￨f (￨2￨f final￨3￨p Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addListeners￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f dialogChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateStatus￨2￨f (￨2￨f final￨3￨p String￨3￨p message￨3￨p ,￨3￨p final￨3￨p int￨3￨p status￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f handleEvent￨2￨f (￨2￨f final￨3￨p Event￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f echoPassword￨2￨f (￨2￨f final￨3￨p Event￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f openKeystore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generateCertificate￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onEnterPage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWizardPage￨2￨f getNextPage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveDataToModel￨2￨f (￨2￨f )￨2￨f {￨2￨f signature￨3￨e .￨3￨e setKeystore￨3￨e (￨3￨e keystore￨3￨e )￨3￨e ;￨3￨e signature￨3￨e .￨3￨e setKeystorePassword￨3￨e (￨3￨e tKeystorePassword￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e .￨3￨e toCharArray￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e signature￨3￨e .￨3￨e setKeyPassword￨3￨e (￨3￨e tKeyPassword￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e .￨3￨e toCharArray￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b signature￨3￨b .￨3￨b setKeyAlias￨3￨b (￨3￨b tKeyName￨3￨b .￨3￨b getText￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j cAlgorithm￨4￨c .￨4￨c getText￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c "DSA"￨4￨c )￨4￨c )￨3￨j {￨3￨j signature￨4￨e .￨4￨e setKeyAlgorithm￨4￨e (￨4￨e "SHA1withDSA"￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j cAlgorithm￨4￨c .￨4￨c getText￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c "EC"￨4￨c )￨4￨c )￨3￨j {￨3￨j signature￨4￨e .￨4￨e setKeyAlgorithm￨4￨e (￨4￨e "SHA1withECDSA"￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j cAlgorithm￨4￨c .￨4￨c getText￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c "RSA"￨4￨c )￨4￨c )￨3￨j {￨3￨j signature￨4￨e .￨4￨e setKeyAlgorithm￨4￨e (￨4￨e "SHA1withRSA"￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ArgsAnnotationPointcut￨1￨d extends￨1￨d NameBindingPointcut￨1￨d {￨1￨d private￨2￨e AnnotationPatternList￨2￨e arguments￨2￨e ;￨2￨e private￨2￨e String￨2￨e declarationText￨2￨e ;￨2￨e public￨2￨f ArgsAnnotationPointcut￨2￨f (￨2￨f AnnotationPatternList￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotationPatternList￨2￨f getArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f couldMatchKinds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Pointcut￨2￨f parameterizeWith￨2￨f (￨2￨f Map￨3￨p typeVariableMap￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f fastMatch￨2￨f (￨2￨f FastMatchInfo￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FuzzyBoolean￨2￨f matchInternal￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Pointcut￨2￨f concretize1￨2￨f (￨2￨f ResolvedType￨3￨p inAspect￨3￨p ,￨3￨p ResolvedType￨3￨p declaringType￨3￨p ,￨3￨p IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Test￨2￨f findResidueInternal￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p ,￨3￨p ExposedState￨3￨p state￨3￨p )￨2￨f {￨2￨f int￨3￨e len￨3￨e =￨3￨e shadow￨3￨e .￨3￨e getArgCount￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e numArgsMatchedByEllipsis￨3￨e =￨3￨e (￨3￨e len￨3￨e +￨3￨e (￨3￨e arguments￨3￨e .￨3￨e ellipsisCount￨3￨e )￨3￨e )￨3￨e -￨3￨e (￨3￨e arguments￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j numArgsMatchedByEllipsis￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j return￨4￨e Literal￨4￨e .￨4￨e FALSE￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c numArgsMatchedByEllipsis￨4￨c >￨4￨c 0￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c arguments￨4￨c .￨4￨c ellipsisCount￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e Literal￨4￨e .￨4￨e FALSE￨4￨e ;￨4￨e }￨3￨j Test￨3￨e ret￨3￨e =￨3￨e Literal￨3￨e .￨3￨e TRUE￨3￨e ;￨3￨e int￨3￨e argsIndex￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c arguments￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c arguments￨5￨c .￨5￨c get￨5￨c (￨5￨c i￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c AnnotationTypePattern￨5￨c .￨5￨c ELLIPSIS￨5￨c )￨5￨c )￨4￨j {￨4￨j argsIndex￨5￨e +=￨5￨e numArgsMatchedByEllipsis￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c arguments￨5￨c .￨5￨c get￨5￨c (￨5￨c i￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c AnnotationTypePattern￨5￨c .￨5￨c ANY￨5￨c )￨5￨c )￨4￨j {￨4￨j argsIndex￨5￨e ++￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j ExactAnnotationTypePattern￨5￨e ap￨5￨e =￨5￨e (￨5￨e (￨5￨e ExactAnnotationTypePattern￨5￨e )￨5￨e (￨5￨e arguments￨5￨e .￨5￨e get￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e UnresolvedType￨5￨e argType￨5￨e =￨5￨e shadow￨5￨e .￨5￨e getArgType￨5￨e (￨5￨e argsIndex￨5￨e )￨5￨e ;￨5￨e ResolvedType￨5￨e rArgType￨5￨e =￨5￨e argType￨5￨e .￨5￨e resolve￨5￨e (￨5￨e shadow￨5￨e .￨5￨e getIWorld￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b rArgType￨5￨b ==￨5￨b (￨5￨b ResolvedType￨5￨b .￨5￨b MISSING￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b shadow￨5￨f .￨5￨f getIWorld￨5￨f (￨5￨f )￨5￨f .￨5￨f getLint￨5￨f (￨5￨f )￨5￨f .￨5￨f cantFindType￨5￨f .￨5￨f signal￨5￨f (￨5￨f new￨5￨f String￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f ,￨5￨f shadow￨5￨f .￨5￨f getSourceLocation￨5￨f (￨5￨f )￨5￨f ,￨5￨f new￨5￨f ISourceLocation￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f )￨5￨e ;￨5￨e }￨5￨e ResolvedType￨5￨e rAnnType￨5￨e =￨5￨e ap￨5￨e .￨5￨e getAnnotationType￨5￨e (￨5￨e )￨5￨e .￨5￨e resolve￨5￨e (￨5￨e shadow￨5￨e .￨5￨e getIWorld￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j ap￨6￨c instanceof￨6￨c BindingAnnotationTypePattern￨6￨c )￨5￨j {￨5￨j BindingAnnotationTypePattern￨6￨e btp￨6￨e =￨6￨e (￨6￨e (￨6￨e BindingAnnotationTypePattern￨6￨e )￨6￨e (￨6￨e ap￨6￨e )￨6￨e )￨6￨e ;￨6￨e Var￨6￨e annvar￨6￨e =￨6￨e shadow￨6￨e .￨6￨e getArgAnnotationVar￨6￨e (￨6￨e argsIndex￨6￨e ,￨6￨e rAnnType￨6￨e )￨6￨e ;￨6￨e state￨6￨e .￨6￨e set￨6￨e (￨6￨e btp￨6￨e .￨6￨e getFormalIndex￨6￨e (￨6￨e )￨6￨e ,￨6￨e annvar￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j !￨6￨c (￨6￨c ap￨6￨c .￨6￨c matches￨6￨c (￨6￨c rArgType￨6￨c )￨6￨c .￨6￨c alwaysTrue￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j ret￨6￨e =￨6￨e Test￨6￨e .￨6￨e makeAnd￨6￨e (￨6￨e ret￨6￨e ,￨6￨e Test￨6￨e .￨6￨e makeHasAnnotation￨6￨e (￨6￨e shadow￨6￨e .￨6￨e getArgVar￨6￨e (￨6￨e argsIndex￨6￨e )￨6￨e ,￨6￨e rAnnType￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j argsIndex￨5￨e ++￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e ret￨3￨e ;￨3￨e }￨2￨f public￨2￨f List￨2￨f getBindingAnnotationTypePatterns￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getBindingTypePatterns￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Pointcut￨2￨f read￨2￨f (￨2￨f VersionedDataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildDeclarationText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f accept￨2￨f (￨2￨f PatternNodeVisitor￨3￨p visitor￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CorrelatedRandomVectorGeneratorTest￨1￨d {￨1￨d private￨2￨e double￨2￨e [￨2￨e ]￨2￨e mean￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e covariance￨2￨e ;￨2￨e private￨2￨e CorrelatedRandomVectorGenerator￨2￨e generator￨2￨e ;￨2￨e public￨2￨f CorrelatedRandomVectorGeneratorTest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRank￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b Assert￨3￨b .￨3￨b assertEquals￨3￨b (￨3￨b 3￨3￨b ,￨3￨b generator￨3￨b .￨3￨b getRank￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMath226￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRootMatrix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMeanAndCovariance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSampleWithZeroCovariance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f CorrelatedRandomVectorGenerator￨2￨f createSampler￨2￨f (￨2￨f double￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p cov￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testSampler￨2￨f (￨2￨f final￨3￨p double￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p covMatrix￨3￨p ,￨3￨p int￨3￨p samples￨3￨p ,￨3￨p double￨3￨p epsilon￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractDistributionTest￨1￨d extends￨1￨d ContainerAbstractTestCase￨1￨d implements￨1￨d RemoteServicePublication￨1￨d ,￨1￨d IDistributionConstants￨1￨d {￨1￨d protected￨2￨e IRemoteServiceContainerAdapter￨2￨e [￨2￨e ]￨2￨e adapters￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨f abstract￨2￨f String￨2￨f getClientContainerName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setClientCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setupRemoteServiceAdapters￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f BundleContext￨2￨f getContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteServiceContainerAdapter￨2￨f [￨2￨f ]￨2￨f getRemoteServiceAdapters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteServiceListener￨2￨f createRemoteServiceListener￨2￨f (￨2￨f final￨3￨p boolean￨3￨p server￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addRemoteServiceListeners￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteServiceRegistration￨2￨f registerRemoteService￨2￨f (￨2￨f IRemoteServiceContainerAdapter￨3￨p adapter￨3￨p ,￨3￨p String￨3￨p serviceInterface￨3￨p ,￨3￨p Object￨3￨p service￨3￨p ,￨3￨p Dictionary￨3￨p serviceProperties￨3￨p ,￨3￨p int￨3￨p sleepTime￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteServiceReference￨2￨f [￨2￨f ]￨2￨f getRemoteServiceReferences￨2￨f (￨2￨f IRemoteServiceContainerAdapter￨3￨p adapter￨3￨p ,￨3￨p String￨3￨p clazz￨3￨p ,￨3￨p String￨3￨p filter￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteService￨2￨f getRemoteService￨2￨f (￨2￨f IRemoteServiceContainerAdapter￨3￨p adapter￨3￨p ,￨3￨p String￨3￨p clazz￨3￨p ,￨3￨p String￨3￨p filter￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getFilterFromServiceProperties￨2￨f (￨2￨f Dictionary￨3￨p serviceProperties￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f [￨2￨f ]￨2￨f getDefaultServiceClasses￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f getDefaultService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ServiceRegistration￨2￨f registerService￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f clazzes￨2￨f ,￨2￨f Object￨2￨f service￨2￨f ,￨2￨f Properties￨2￨f props￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ServiceRegistration￨2￨f registerService￨2￨f (￨2￨f String￨2￨f clazz￨2￨f ,￨2￨f Object￨2￨f service￨2￨f ,￨2￨f Properties￨2￨f props￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ServiceRegistration￨2￨f registerDefaultService￨2￨f (￨2￨f Properties￨2￨f props￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServiceReference￨2￨f getReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertReferenceHasCorrectType￨2￨f (￨2￨f ServiceReference￨3￨p sr￨3￨p ,￨3￨p String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertReferencesValidAndFirstHasCorrectType￨2￨f (￨2￨f ServiceReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p ,￨3￨p String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertReferencesValid￨2￨f (￨2￨f ServiceReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertStringResultValid￨2￨f (￨2￨f Object￨3￨p result￨3￨p ,￨3￨p String￨3￨p compare￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertProxyValid￨2￨f (￨2￨f Object￨3￨p proxy￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ServiceTracker￨2￨f createProxyServiceTracker￨2￨f (￨2￨f String￨2￨f clazz￨2￨f )￨2￨f throws￨2￨f InvalidSyntaxException￨2￨f (￨2￨f )￨2￨f {￨2￨f ServiceTracker￨3￨f st￨3￨f =￨3￨f new￨3￨f ServiceTracker￨3￨f (￨3￨f getContext￨3￨f (￨3￨f )￨3￨f ,￨3￨f getContext￨3￨f (￨3￨f )￨3￨f .￨3￨f createFilter￨3￨f (￨3￨f (￨3￨f (￨3￨f (￨3￨f (￨3￨f (￨3￨f (￨3￨f "(&("￨3￨f +￨3￨f (￨3￨f Constants￨3￨f .￨3￨f OBJECTCLASS￨3￨f )￨3￨f )￨3￨f +￨3￨f "="￨3￨f )￨3￨f +￨3￨f clazz￨3￨f )￨3￨f +￨3￨f ")("￨3￨f )￨3￨f +￨3￨f (￨3￨f SERVICE_IMPORTED￨3￨f )￨3￨f )￨3￨f +￨3￨f "=*))"￨3￨f )￨3￨f )￨3￨f ,￨3￨f new￨3￨f ServiceTrackerCustomizer￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f Object￨4￨f addingService￨4￨f (￨4￨f ServiceReference￨5￨p reference￨5￨p )￨4￨f {￨4￨f Trace￨5￨e .￨5￨e trace￨5￨e (￨5￨e PLUGIN_ID￨5￨e ,￨5￨e (￨5￨e "addingService="￨5￨e +￨5￨e reference￨5￨e )￨5￨e )￨5￨e ;￨5￨e return￨5￨e getContext￨5￨e (￨5￨e )￨5￨e .￨5￨e getService￨5￨e (￨5￨e reference￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f modifiedService￨4￨f (￨4￨f ServiceReference￨5￨p reference￨5￨p ,￨5￨p Object￨5￨p service￨5￨p )￨4￨f {￨4￨f Trace￨5￨e .￨5￨e trace￨5￨e (￨5￨e PLUGIN_ID￨5￨e ,￨5￨e (￨5￨e "modifiedService="￨5￨e +￨5￨e reference￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f removedService￨4￨f (￨4￨f ServiceReference￨5￨p reference￨5￨p ,￨5￨p Object￨5￨p service￨5￨p )￨4￨f {￨4￨f Trace￨5￨e .￨5￨e trace￨5￨e (￨5￨e PLUGIN_ID￨5￨e ,￨5￨e (￨5￨e (￨5￨e (￨5￨e "removedService="￨5￨e +￨5￨e reference￨5￨e )￨5￨e +￨5￨e ",svc="￨5￨e )￨5￨e +￨5￨e service￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e <START_BUG>￨3￨b st￨3￨b .￨3￨b open￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e st￨3￨e ;￨3￨e }￨2￨f protected￨2￨f IRemoteService￨2￨f getRemoteServiceFromProxy￨2￨f (￨2￨f Object￨3￨p proxy￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MembershipCleanerVerbHandler￨1￨d implements￨1￨d IVerbHandler￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d logger_￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d MembershipCleanerVerbHandler￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d doVerb￨2￨d (￨2￨d Message￨2￨d message￨2￨d )￨2￨d {￨2￨d byte￨3￨e [￨3￨e ]￨3￨e body￨3￨e =￨3￨e message￨3￨e .￨3￨e getMessageBody￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f DataInputBuffer￨4￨e bufIn￨4￨e =￨4￨e new￨4￨e DataInputBuffer￨4￨e (￨4￨e )￨4￨e ;￨4￨e bufIn￨4￨e .￨4￨e reset￨4￨e (￨4￨e body￨4￨e ,￨4￨e body￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e MembershipCleaner￨4￨e .￨4￨e MembershipCleanerMessage￨4￨e mcMessage￨4￨e =￨4￨e MembershipCleanerMessage￨4￨e .￨4￨e serializer￨4￨e (￨4￨e )￨4￨e .￨4￨e deserialize￨4￨e (￨4￨e bufIn￨4￨e )￨4￨e ;￨4￨e String￨4￨e target￨4￨e =￨4￨e mcMessage￨4￨e .￨4￨e getTarget￨4￨e (￨4￨e )￨4￨e ;￨4￨e MembershipCleanerVerbHandler￨4￨e .￨4￨e logger_￨4￨e .￨4￨e info￨4￨e (￨4￨e (￨4￨e (￨4￨e "Removing<seq2seq4repair_space>the<seq2seq4repair_space>node<seq2seq4repair_space>["￨4￨e +￨4￨e target￨4￨e )￨4￨e +￨4￨e "]<seq2seq4repair_space>from<seq2seq4repair_space>membership"￨4￨e )￨4￨e )￨4￨e ;￨4￨e EndPoint￨4￨e targetEndPoint￨4￨e =￨4￨e new￨4￨e EndPoint￨4￨e (￨4￨e target￨4￨e ,￨4￨e DatabaseDescriptor￨4￨e .￨4￨e getControlPort￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e StorageService￨4￨e .￨4￨e instance￨4￨e (￨4￨e )￨4￨e .￨4￨e removeTokenState￨4￨e (￨4￨e targetEndPoint￨4￨e )￨4￨e ;￨4￨e Map￨4￨e <￨4￨e String￨4￨e ,￨4￨e byte￨4￨e [￨4￨e ]￨4￨e >￨4￨e headers￨4￨e =￨4￨e message￨4￨e .￨4￨e getHeaders￨4￨e (￨4￨e )￨4￨e ;￨4￨e headers￨4￨e .￨4￨e remove￨4￨e (￨4￨e StorageService￨4￨e .￨4￨e getLocalStorageEndPoint￨4￨e (￨4￨e )￨4￨e .￨4￨e getHost￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j MembershipCleanerVerbHandler￨5￨c .￨5￨c logger_￨5￨c .￨5￨c isDebugEnabled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j MembershipCleanerVerbHandler￨5￨e .￨5￨e logger_￨5￨e .￨5￨e debug￨5￨e (￨5￨e (￨5￨e "Number<seq2seq4repair_space>of<seq2seq4repair_space>nodes<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>header<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e headers￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j Set￨4￨e <￨4￨e String￨4￨e >￨4￨e nodes￨4￨e =￨4￨e headers￨4￨e .￨4￨e keySet￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c node￨5￨c :￨5￨c nodes￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j MembershipCleanerVerbHandler￨6￨c .￨6￨c logger_￨6￨c .￨6￨c isDebugEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j MembershipCleanerVerbHandler￨6￨e .￨6￨e logger_￨6￨e .￨6￨e debug￨6￨e (￨6￨e (￨6￨e "Processing<seq2seq4repair_space>node<seq2seq4repair_space>"￨6￨e +￨6￨e node￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j <START_BUG>￨5￨b byte￨5￨b [￨5￨b ]￨5￨b bytes￨5￨b =￨5￨b headers￨5￨b .￨5￨b remove￨5￨b (￨5￨b node￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b EndPoint￨5￨e targetNode￨5￨e =￨5￨e new￨5￨e EndPoint￨5￨e (￨5￨e node￨5￨e ,￨5￨e DatabaseDescriptor￨5￨e .￨5￨e getStoragePort￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j MembershipCleanerVerbHandler￨6￨c .￨6￨c logger_￨6￨c .￨6￨c isDebugEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j MembershipCleanerVerbHandler￨6￨e .￨6￨e logger_￨6￨e .￨6￨e debug￨6￨e (￨6￨e (￨6￨e "Sending<seq2seq4repair_space>a<seq2seq4repair_space>membership<seq2seq4repair_space>clean<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>"￨6￨e +￨6￨e targetNode￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j MessagingService￨5￨e .￨5￨e getMessagingInstance￨5￨e (￨5￨e )￨5￨e .￨5￨e sendOneWay￨5￨e (￨5￨e message￨5￨e ,￨5￨e targetNode￨5￨e )￨5￨e ;￨5￨e break￨5￨e ;￨5￨e }￨4￨l }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ex￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j MembershipCleanerVerbHandler￨5￨c .￨5￨c logger_￨5￨c .￨5￨c isDebugEnabled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j MembershipCleanerVerbHandler￨5￨e .￨5￨e logger_￨5￨e .￨5￨e debug￨5￨e (￨5￨e LogUtil￨5￨e .￨5￨e throwableToString￨5￨e (￨5￨e ex￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d Inserter￨1￨d extends￨1￨d Operation￨1￨d {￨1￨d public￨2￨f Inserter￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f Cassandra￨2￨f .￨2￨f Client￨2￨f client￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f List￨3￨e <￨3￨e ByteBuffer￨3￨e >￨3￨e values￨3￨e =￨3￨e generateValues￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Column￨3￨e >￨3￨e columns￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Column￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e SuperColumn￨3￨e >￨3￨e superColumns￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e SuperColumn￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e format￨3￨e =￨3￨e (￨3￨e "%0"￨3￨e +￨3￨e (￨3￨e session￨3￨e .￨3￨e getTotalKeysLength￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e +￨3￨e "d"￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c session￨4￨c .￨4￨c getColumnsPerKey￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e columnName￨4￨e =￨4￨e "C"￨4￨e +￨4￨e (￨4￨e Integer￨4￨e .￨4￨e toString￨4￨e (￨4￨e i￨4￨e )￨4￨e )￨4￨e ;￨4￨e ByteBuffer￨4￨e columnValue￨4￨e =￨4￨e values￨4￨e .￨4￨e get￨4￨e (￨4￨e (￨4￨e i￨4￨e %￨4￨e (￨4￨e values￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e columns￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e Column￨4￨e (￨4￨e ByteBufferUtil￨4￨e .￨4￨e bytes￨4￨e (￨4￨e columnName￨4￨e )￨4￨e ,￨4￨e columnValue￨4￨e ,￨4￨e System￨4￨e .￨4￨e currentTimeMillis￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j (￨4￨c session￨4￨c .￨4￨c getColumnFamilyType￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c ColumnFamilyType￨4￨c .￨4￨c Super￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c session￨5￨c .￨5￨c getSuperColumns￨5￨c (￨5￨c )￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e superColumnName￨5￨e =￨5￨e "S"￨5￨e +￨5￨e (￨5￨e Integer￨5￨e .￨5￨e toString￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b superColumns￨5￨b .￨5￨b add￨5￨b (￨5￨b new￨5￨b SuperColumn￨5￨b (￨5￨b ByteBuffer￨5￨b .￨5￨b wrap￨5￨b (￨5￨b superColumnName￨5￨b .￨5￨b getBytes￨5￨b (￨5￨b )￨5￨b )￨5￨b ,￨5￨b columns￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨l }￨3￨j String￨3￨e rawKey￨3￨e =￨3￨e String￨3￨e .￨3￨e format￨3￨e (￨3￨e format￨3￨e ,￨3￨e index￨3￨e )￨3￨e ;￨3￨e Map￨3￨e <￨3￨e ByteBuffer￨3￨e ,￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e List￨3￨e <￨3￨e Mutation￨3￨e >￨3￨e >￨3￨e >￨3￨e record￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e ByteBuffer￨3￨e ,￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e List￨3￨e <￨3￨e Mutation￨3￨e >￨3￨e >￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e record￨3￨e .￨3￨e put￨3￨e (￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e rawKey￨3￨e )￨3￨e ,￨3￨e (￨3￨e (￨3￨e session￨3￨e .￨3￨e getColumnFamilyType￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e (￨3￨e ColumnFamilyType￨3￨e .￨3￨e Super￨3￨e )￨3￨e ?￨3￨e getSuperColumnsMutationMap￨3￨e (￨3￨e superColumns￨3￨e )￨3￨e :￨3￨e getColumnsMutationMap￨3￨e (￨3￨e columns￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e long￨3￨e start￨3￨e =￨3￨e System￨3￨e .￨3￨e currentTimeMillis￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e success￨3￨e =￨3￨e false￨3￨e ;￨3￨e String￨3￨e exceptionMessage￨3￨e =￨3￨e null￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c t￨4￨c =￨4￨c 0￨4￨c ;￨4￨c t￨4￨c <￨4￨c (￨4￨c session￨4￨c .￨4￨c getRetryTimes￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c t￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j success￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f client￨5￨e .￨5￨e batch_mutate￨5￨e (￨5￨e record￨5￨e ,￨5￨e session￨5￨e .￨5￨e getConsistencyLevel￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e success￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p e￨5￨p )￨4￨f {￨4￨f exceptionMessage￨5￨e =￨5￨e getExceptionMessage￨5￨e (￨5￨e e￨5￨e )￨5￨e ;￨5￨e success￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨f }￨3￨l if￨3￨j (￨3￨j !￨4￨c success￨4￨c )￨3￨j {￨3￨j error￨4￨e (￨4￨e String￨4￨e .￨4￨e format￨4￨e (￨4￨e "Operation<seq2seq4repair_space>[%d]<seq2seq4repair_space>retried<seq2seq4repair_space>%d<seq2seq4repair_space>times<seq2seq4repair_space>-<seq2seq4repair_space>error<seq2seq4repair_space>inserting<seq2seq4repair_space>key<seq2seq4repair_space>%s<seq2seq4repair_space>%s%n"￨4￨e ,￨4￨e index￨4￨e ,￨4￨e session￨4￨e .￨4￨e getRetryTimes￨4￨e (￨4￨e )￨4￨e ,￨4￨e rawKey￨4￨e ,￨4￨e (￨4￨e exceptionMessage￨4￨e ==￨4￨e null￨4￨e ?￨4￨e ""￨4￨e :￨4￨e (￨4￨e "("￨4￨e +￨4￨e exceptionMessage￨4￨e )￨4￨e +￨4￨e ")"￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j operations￨3￨e .￨3￨e getAndIncrement￨3￨e (￨3￨e )￨3￨e ;￨3￨e keys￨3￨e .￨3￨e getAndIncrement￨3￨e (￨3￨e )￨3￨e ;￨3￨e latency￨3￨e .￨3￨e getAndAdd￨3￨e (￨3￨e (￨3￨e (￨3￨e System￨3￨e .￨3￨e currentTimeMillis￨3￨e (￨3￨e )￨3￨e )￨3￨e -￨3￨e start￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f Mutation￨2￨f >￨2￨f >￨2￨f getSuperColumnsMutationMap￨2￨f (￨2￨f List￨3￨p <￨3￨p SuperColumn￨3￨p >￨3￨p superColumns￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f Mutation￨2￨f >￨2￨f >￨2￨f getColumnsMutationMap￨2￨f (￨2￨f List￨3￨p <￨3￨p Column￨3￨p >￨3￨p columns￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RequestLogger￨1￨d implements￨1￨d RequestLoggerMBean￨1￨d {￨1￨d private￨2￨e final￨2￨e Application￨2￨e application￨2￨e ;￨2￨e private￨2￨e final￨2￨e WebApplication￨2￨e webApplication￨2￨e ;￨2￨e public￨2￨f RequestLogger￨2￨f (￨2￨f org￨3￨p .￨3￨p apache￨3￨p .￨3￨p wicket￨3￨p .￨3￨p Application￨3￨p application￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Integer￨2￨f getNumberOfCreatedSessions￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Integer￨2￨f getNumberOfLiveSessions￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Integer￨2￨f getPeakNumberOfSessions￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restart￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestLogger￨2￨f getRequestLogger￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c application￨4￨c )￨4￨c instanceof￨4￨c WebApplication￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b (￨4￨b (￨4￨b WebApplication￨4￨b )￨4￨b (￨4￨b application￨4￨b )￨4￨b )￨4￨b .￨4￨b getRequestLogger￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MapKey￨1￨d extends￨1￨d AbstractVal￨1￨d {￨1￨d private￨2￨e final￨2￨e Val￨2￨e _key￨2￨e ;￨2￨e private￨2￨e ClassMetaData￨2￨e _meta￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Class￨2￨e _cast￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Class￨2￨e _type￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f MapKey￨2￨f (￨2￨f Val￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d KeyExpState￨2￨d extends￨2￨d ExpState￨2￨d {￨2￨d public￨3￨e ExpState￨3￨e key￨3￨e ;￨3￨e public￨3￨e ExpState￨3￨e val￨3￨e ;￨3￨e KeyExpState￨3￨f (￨3￨f ExpState￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f appendTo￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p ,￨3￨p SQLBuffer￨3￨p sql￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f calculateValue￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p ,￨3￨p Val￨3￨p other￨3￨p ,￨3￨p ExpState￨3￨p otherState￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f groupBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f orderBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p ,￨3￨p boolean￨3￨p asc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ExpState￨2￨f initialize￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p int￨3￨p flags￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f length￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f load￨2￨f (￨2￨f ExpContext￨2￨f ctx￨2￨f ,￨2￨f ExpState￨2￨f state￨2￨f ,￨2￨f Result￨2￨f res￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectColumns￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ExpContext￨3￨p ctx￨3￨p ,￨3￨p ExpState￨3￨p state￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ClassMetaData￨2￨f getMetaData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b Object￨3￨b .￨3￨b class￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f setImplicitType￨2￨f (￨2￨f Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMetaData￨2￨f (￨2￨f ClassMetaData￨3￨p meta￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d UrlConfigGui￨1￨d extends￨1￨d JPanel￨1￨d implements￨1￨d ChangeListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 240L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e TAB_PARAMETERS￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e TAB_RAW_BODY￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e HTTPArgumentsPanel￨2￨e argsPanel￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e domain￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e port￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e proxyHost￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e proxyPort￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e proxyUser￨2￨e ;￨2￨e private￨2￨e JPasswordField￨2￨e proxyPass￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e connectTimeOut￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e responseTimeOut￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e protocol￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e contentEncoding￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e path￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e followRedirects￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e autoRedirects￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e useKeepAlive￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e useMultipartForPost￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e useBrowserCompatibleMultipartMode￨2￨e ;￨2￨e private￨2￨e JLabeledChoice￨2￨e method￨2￨e ;￨2￨e private￨2￨e JLabeledChoice￨2￨e httpImplementation￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e notConfigOnly￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e showImplementation￨2￨e ;￨2￨e private￨2￨e JLabeledTextArea￨2￨e postBodyContent￨2￨e ;￨2￨e private￨2￨e UrlConfigGui￨2￨e .￨2￨e ValidationTabbedPane￨2￨e postContentTabbedPane￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e showRawBodyPane￨2￨e ;￨2￨e public￨2￨f UrlConfigGui￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UrlConfigGui￨2￨f (￨2￨f boolean￨3￨p showSamplerFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UrlConfigGui￨2￨f (￨2￨f boolean￨3￨p showSamplerFields￨3￨p ,￨3￨p boolean￨3￨p showImplementation￨3￨p ,￨3￨p boolean￨3￨p showRawBodyPane￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyTestElement￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f boolean￨3￨e useRaw￨3￨e =￨3￨e (￨3￨e postContentTabbedPane￨3￨e .￨3￨e getSelectedIndex￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e (￨3￨e UrlConfigGui￨3￨e .￨3￨e TAB_RAW_BODY￨3￨e )￨3￨e ;￨3￨e Arguments￨3￨e args￨3￨e ;￨3￨e if￨3￨j (￨3￨j useRaw￨4￨c )￨3￨j {￨3￨j args￨4￨e =￨4￨e new￨4￨e Arguments￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e text￨4￨e =￨4￨e postBodyContent￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b HTTPArgument￨4￨b arg￨4￨b =￨4￨b new￨4￨b HTTPArgument￨4￨b (￨4￨b ""￨4￨b ,￨4￨b text￨4￨b .￨4￨b replaceAll￨4￨b (￨4￨b "\n"￨4￨b ,￨4￨b "\r\n"￨4￨b )￨4￨b ,￨4￨b true￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b arg￨4￨e .￨4￨e setAlwaysEncoded￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e args￨4￨e .￨4￨e addArgument￨4￨e (￨4￨e arg￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j args￨4￨e =￨4￨e (￨4￨e (￨4￨e Arguments￨4￨e )￨4￨e (￨4￨e argsPanel￨4￨e .￨4￨e createTestElement￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e HTTPArgument￨4￨e .￨4￨e convertArgumentsToHTTP￨4￨e (￨4￨e args￨4￨e )￨4￨e ;￨4￨e }￨3￨j element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e POST_BODY_RAW￨3￨e ,￨3￨e useRaw￨3￨e ,￨3￨e POST_BODY_RAW_DEFAULT￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e jmeter￨3￨e .￨3￨e testelement￨3￨e .￨3￨e property￨3￨e .￨3￨e TestElementProperty￨3￨e (￨3￨e HTTPSamplerBase￨3￨e .￨3￨e ARGUMENTS￨3￨e ,￨3￨e args￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e DOMAIN￨3￨e ,￨3￨e domain￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PORT￨3￨e ,￨3￨e port￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PROXYHOST￨3￨e ,￨3￨e proxyHost￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PROXYPORT￨3￨e ,￨3￨e proxyPort￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PROXYUSER￨3￨e ,￨3￨e proxyUser￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PROXYPASS￨3￨e ,￨3￨e String￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e proxyPass￨3￨e .￨3￨e getPassword￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e ""￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e CONNECT_TIMEOUT￨3￨e ,￨3￨e connectTimeOut￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e RESPONSE_TIMEOUT￨3￨e ,￨3￨e responseTimeOut￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PROTOCOL￨3￨e ,￨3￨e protocol￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e CONTENT_ENCODING￨3￨e ,￨3￨e contentEncoding￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e PATH￨3￨e ,￨3￨e path￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j notConfigOnly￨4￨c )￨3￨j {￨3￨j element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e METHOD￨4￨e ,￨4￨e method￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e jmeter￨4￨e .￨4￨e testelement￨4￨e .￨4￨e property￨4￨e .￨4￨e BooleanProperty￨4￨e (￨4￨e HTTPSamplerBase￨4￨e .￨4￨e FOLLOW_REDIRECTS￨4￨e ,￨4￨e followRedirects￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e jmeter￨4￨e .￨4￨e testelement￨4￨e .￨4￨e property￨4￨e .￨4￨e BooleanProperty￨4￨e (￨4￨e HTTPSamplerBase￨4￨e .￨4￨e AUTO_REDIRECTS￨4￨e ,￨4￨e autoRedirects￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e jmeter￨4￨e .￨4￨e testelement￨4￨e .￨4￨e property￨4￨e .￨4￨e BooleanProperty￨4￨e (￨4￨e HTTPSamplerBase￨4￨e .￨4￨e USE_KEEPALIVE￨4￨e ,￨4￨e useKeepAlive￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e jmeter￨4￨e .￨4￨e testelement￨4￨e .￨4￨e property￨4￨e .￨4￨e BooleanProperty￨4￨e (￨4￨e HTTPSamplerBase￨4￨e .￨4￨e DO_MULTIPART_POST￨4￨e ,￨4￨e useMultipartForPost￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e BROWSER_COMPATIBLE_MULTIPART￨4￨e ,￨4￨e useBrowserCompatibleMultipartMode￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e ,￨4￨e BROWSER_COMPATIBLE_MULTIPART_MODE_DEFAULT￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j showImplementation￨4￨c )￨3￨j {￨3￨j element￨4￨e .￨4￨e setProperty￨4￨e (￨4￨e IMPLEMENTATION￨4￨e ,￨4￨e httpImplementation￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e ,￨4￨e ""￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f computePostBody￨2￨f (￨2￨f Arguments￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f computePostBody￨2￨f (￨2￨f Arguments￨3￨p arguments￨3￨p ,￨3￨p boolean￨3￨p crlfToLF￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f configure￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f JPanel￨2￨f getWebServerTimeoutPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f JPanel￨2￨f getProxyServerPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getPortPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getProxyPortPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getConnectTimeOutPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getResponseTimeOutPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getDomainPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getProxyHostPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getProxyUserPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f getProxyPassPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Component￨2￨f getPathPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JPanel￨2￨f getProtocolAndMethodPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JTabbedPane￨2￨f getParameterPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f class￨2￨d ValidationTabbedPane￨2￨d extends￨2￨d JTabbedPane￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 7014311238367882880L￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setSelectedIndex￨3￨f (￨3￨f int￨4￨p index￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setSelectedIndex￨3￨f (￨3￨f int￨4￨p index￨4￨p ,￨4￨p boolean￨4￨p check￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f stateChanged￨2￨f (￨2￨f ChangeEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f convertParametersToRaw￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canConvertParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f noData￨2￨f (￨2￨f int￨3￨p oldSelectedIndex￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AllowedMethodsInformation￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e AllowedMethodsInformation￨2￨e INSTANCE_BMT￨2￨e =￨2￨e new￨2￨e AllowedMethodsInformation￨2￨e (￨2￨e true￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e AllowedMethodsInformation￨2￨e INSTANCE_CMT￨2￨e =￨2￨e new￨2￨e AllowedMethodsInformation￨2￨e (￨2￨e false￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e Set￨2￨e <￨2￨e DeniedMethodKey￨2￨e >￨2￨e denied￨2￨e ;￨2￨e private￨2￨e final￨2￨e Set￨2￨e <￨2￨e AllowedMethodsInformation￨2￨e .￨2￨e DeniedSyncMethodKey￨2￨e >￨2￨e deniedSyncMethods￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e beanManagedTransaction￨2￨e ;￨2￨e protected￨2￨f AllowedMethodsInformation￨2￨f (￨2￨f boolean￨3￨p beanManagedTransaction￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setup￨2￨f (￨2￨f Set￨3￨p <￨3￨p DeniedMethodKey￨3￨p >￨3￨p denied￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f add￨2￨f (￨2￨f Set￨3￨p <￨3￨p DeniedMethodKey￨3￨p >￨3￨p otherDenied￨3￨p ,￨3￨p InvocationType￨3￨p setEntityContext￨3￨p ,￨3￨p MethodType￨3￨p timerServiceMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f void￨2￨f add￨2￨f (￨2￨f Set￨3￨p <￨3￨p AllowedMethodsInformation￨3￨p .￨3￨p DeniedSyncMethodKey￨3￨p >￨3￨p otherDenied￨3￨p ,￨3￨p CurrentSynchronizationCallback￨3￨p .￨3￨p CallbackType￨3￨p callbackType￨3￨p ,￨3￨p MethodType￨3￨p timerServiceMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkAllowed￨2￨f (￨2￨f final￨3￨p MethodType￨3￨p methodType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkTransactionSync￨2￨f (￨2￨f MethodType￨3￨p methodType￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f realCheckPermission￨2￨f (￨2￨f MethodType￨3￨p methodType￨3￨p ,￨3￨p InvocationType￨3￨p invocationType￨3￨p )￨2￨f {￨2￨f checkTransactionSync￨3￨e (￨3￨e methodType￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j invocationType￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j denied￨5￨c .￨5￨c contains￨5￨c (￨5￨c new￨5￨c DeniedMethodKey￨5￨c (￨5￨c invocationType￨5￨c ,￨5￨c methodType￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j throwException￨5￨e (￨5￨e methodType￨5￨e ,￨5￨e invocationType￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b !￨3￨b (￨3￨b beanManagedTransaction￨3￨b )￨3￨b )￨3￨b &&￨3￨b (￨3￨b methodType￨3￨b ==￨3￨b (￨3￨b MethodType￨3￨b .￨3￨b GET_USER_TRANSACTION￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b throw￨3￨e MESSAGES￨3￨e .￨3￨e unauthorizedAccessToUserTransaction￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f throwException￨2￨f (￨2￨f MethodType￨3￨p methodType￨3￨p ,￨3￨p InvocationType￨3￨p invocationType￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f throwException￨2￨f (￨2￨f MethodType￨3￨p methodType￨3￨p ,￨3￨p CurrentSynchronizationCallback￨3￨p .￨3￨p CallbackType￨3￨p callback￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d DeniedSyncMethodKey￨2￨d {￨2￨d private￨3￨e final￨3￨e CallbackType￨3￨e callbackType￨3￨e ;￨3￨e private￨3￨e final￨3￨e MethodType￨3￨e methodType￨3￨e ;￨3￨e public￨3￨f DeniedSyncMethodKey￨3￨f (￨3￨f CurrentSynchronizationCallback￨4￨p .￨4￨p CallbackType￨4￨p callbackType￨4￨p ,￨4￨p MethodType￨4￨p methodType￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f CallbackType￨3￨f getCallbackType￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f MethodType￨3￨f getMethodType￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f Object￨4￨p o￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ChannelMetricsHandler￨1￨d extends￨1￨d AbstractRuntimeOnlyHandler￨1￨d {￨1￨d @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeRuntimeStep￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b String￨3￨b channelName￨3￨b =￨3￨b context￨3￨b .￨3￨b getCurrentAddressValue￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨e name￨3￨e =￨3￨e Operations￨3￨e .￨3￨e getAttributeName￨3￨e (￨3￨e operation￨3￨e )￨3￨e ;￨3￨e ChannelMetric￨3￨e metric￨3￨e =￨3￨e ChannelMetric￨3￨e .￨3￨e forName￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j metric￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e getFailureDescription￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e ROOT_LOGGER￨4￨e .￨4￨e unknownMetric￨4￨e (￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j JChannel￨4￨e channel￨4￨e =￨4￨e ServiceContainerHelper￨4￨e .￨4￨e findValue￨4￨e (￨4￨e context￨4￨e .￨4￨e getServiceRegistry￨4￨e (￨4￨e false￨4￨e )￨4￨e ,￨4￨e CHANNEL￨4￨e .￨4￨e getServiceName￨4￨e (￨4￨e channelName￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j channel￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j context￨5￨e .￨5￨e getResult￨5￨e (￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e metric￨5￨e .￨5￨e getValue￨5￨e (￨5￨e channel￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e NOOP_RESULT_HANDLER￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JavaScript￨1￨d extends￨1￨d AbstractFunction￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e List￨2￨e <￨2￨e String￨2￨e >￨2￨e desc￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e <￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e KEY￨2￨e =￨2￨e "__javaScript"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Object￨2￨e [￨2￨e ]￨2￨e values￨2￨e ;￨2￨e public￨2￨f JavaScript￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f synchronized￨2￨f String￨2￨f execute￨2￨f (￨2￨f SampleResult￨2￨f previousResult￨2￨f ,￨2￨f Sampler￨2￨f currentSampler￨2￨f )￨2￨f throws￨2￨f InvalidVariableException￨2￨f (￨2￨f )￨2￨f {￨2￨f JMeterContext￨3￨e jmctx￨3￨e =￨3￨e JMeterContextService￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e JMeterVariables￨3￨e vars￨3￨e =￨3￨e jmctx￨3￨e .￨3￨e getVariables￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e script￨3￨e =￨3￨e (￨3￨e (￨3￨e CompoundVariable￨3￨e )￨3￨e (￨3￨e values￨3￨e [￨3￨e 0￨3￨e ]￨3￨e )￨3￨e )￨3￨e .￨3￨e execute￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e varName￨3￨e =￨3￨e (￨3￨e (￨3￨e values￨3￨e .￨3￨e length￨3￨e )￨3￨e <￨3￨e 2￨3￨e )￨3￨e ?￨3￨e null￨3￨e :￨3￨e (￨3￨e (￨3￨e CompoundVariable￨3￨e )￨3￨e (￨3￨e values￨3￨e [￨3￨e 1￨3￨e ]￨3￨e )￨3￨e )￨3￨e .￨3￨e execute￨3￨e (￨3￨e )￨3￨e .￨3￨e trim￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e resultStr￨3￨e =￨3￨e ""￨3￨e ;￨3￨e Context￨3￨e cx￨3￨e =￨3￨e Context￨3￨e .￨3￨e enter￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Scriptable￨4￨e scope￨4￨e =￨4￨e cx￨4￨e .￨4￨e initStandardObjects￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "log"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e JavaScript￨4￨e .￨4￨e log￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "ctx"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e jmctx￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "vars"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e vars￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "props"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e JMeterUtils￨4￨e .￨4￨e getJMeterProperties￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "threadName"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e Thread￨4￨e .￨4￨e currentThread￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "sampler"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e currentSampler￨4￨e )￨4￨e ;￨4￨e scope￨4￨e .￨4￨e put￨4￨e (￨4￨e "sampleResult"￨4￨e ,￨4￨e scope￨4￨e ,￨4￨e previousResult￨4￨e )￨4￨e ;￨4￨e Object￨4￨e result￨4￨e =￨4￨e cx￨4￨e .￨4￨e evaluateString￨4￨e (￨4￨e scope￨4￨e ,￨4￨e script￨4￨e ,￨4￨e "<cmd>"￨4￨e ,￨4￨e 1￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e resultStr￨4￨e =￨4￨e Context￨4￨e .￨4￨e toString￨4￨e (￨4￨e result￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c varName￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c vars￨5￨c !=￨5￨c null￨5￨c )￨5￨c )￨4￨j {￨4￨j vars￨5￨e .￨5￨e put￨5￨e (￨5￨e varName￨5￨e ,￨5￨e resultStr￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f RhinoException￨4￨p e￨4￨p )￨3￨f {￨3￨f JavaScript￨4￨e .￨4￨e log￨4￨e .￨4￨e error￨4￨e (￨4￨e (￨4￨e (￨4￨e "Error<seq2seq4repair_space>processing<seq2seq4repair_space>Javascript:<seq2seq4repair_space>["￨4￨e +￨4￨e script￨4￨e )￨4￨e +￨4￨e "]\n"￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b throw￨4￨b new￨4￨b InvalidVariableException￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f Context￨4￨e .￨4￨e exit￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e resultStr￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setParameters￨2￨f (￨2￨f Collection￨2￨f <￨2￨f CompoundVariable￨2￨f >￨2￨f parameters￨2￨f )￨2￨f throws￨2￨f InvalidVariableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getReferenceKey￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getArgumentDesc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ThisJoinPointVisitor￨1￨d extends￨1￨d ASTVisitor￨1￨d {￨1￨d boolean￨2￨e needsDynamic￨2￨e =￨2￨e false￨2￨e ;￨2￨e boolean￨2￨e needsStatic￨2￨e =￨2￨e false￨2￨e ;￨2￨e boolean￨2￨e needsStaticEnclosing￨2￨e =￨2￨e false￨2￨e ;￨2￨e boolean￨2￨e hasEffectivelyStaticRef￨2￨e =￨2￨e false￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisJoinPointDec￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisJoinPointStaticPartDec￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisEnclosingJoinPointStaticPartDec￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisJoinPointDecLocal￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisJoinPointStaticPartDecLocal￨2￨e ;￨2￨e LocalVariableBinding￨2￨e thisEnclosingJoinPointStaticPartDecLocal￨2￨e ;￨2￨e boolean￨2￨e replaceEffectivelyStaticRefs￨2￨e =￨2￨e false￨2￨e ;￨2￨e AbstractMethodDeclaration￨2￨e method￨2￨e ;￨2￨e ThisJoinPointVisitor￨2￨f (￨2￨f AbstractMethodDeclaration￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeJoinPointParams￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isRef￨2￨f (￨2￨f NameReference￨3￨p ref￨3￨p ,￨3￨p Binding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isRef￨2￨f (￨2￨f Expression￨3￨p expr￨3￨p ,￨3￨p Binding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f endVisit￨2￨f (￨2￨f SingleNameReference￨3￨p ref￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canTreatAsStatic￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨e inBlockThatCantRun￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f boolean￨2￨f visit￨2￨f (￨2￨f MessageSend￨3￨p call￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f replaceEffectivelyStaticRef￨2￨f (￨2￨f MessageSend￨3￨p call￨3￨p )￨2￨f {￨2￨f NameReference￨3￨e receiver￨3￨e =￨3￨e (￨3￨e (￨3￨e NameReference￨3￨e )￨3￨e (￨3￨e call￨3￨e .￨3￨e receiver￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c call￨4￨c .￨4￨c binding￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j receiver￨3￨e .￨3￨e binding￨3￨e =￨3￨e thisJoinPointStaticPartDecLocal￨3￨e ;￨3￨e receiver￨3￨e .￨3￨e codegenBinding￨3￨e =￨3￨e thisJoinPointStaticPartDecLocal￨3￨e ;￨3￨e ReferenceBinding￨3￨e thisJoinPointStaticPartType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e thisJoinPointStaticPartDec￨3￨e .￨3￨e type￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b receiver￨3￨b .￨3￨b receiverType￨3￨b =￨3￨b receiver￨3￨b .￨3￨b actualReceiverType￨3￨b =￨3￨b receiver￨3￨b .￨3￨b resolvedType￨3￨b =￨3￨b thisJoinPointStaticPartType￨3￨b ;￨3￨b <END_BUG>￨3￨b call￨3￨e .￨3￨e setActualReceiverType￨3￨e (￨3￨e thisJoinPointStaticPartType￨3￨e )￨3￨e ;￨3￨e AstUtil￨3￨e .￨3￨e replaceMethodBinding￨3￨e (￨3￨e call￨3￨e ,￨3￨e getEquivalentStaticBinding￨3￨e (￨3￨e call￨3￨e .￨3￨e binding￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f MethodBinding￨2￨f getEquivalentStaticBinding￨2￨f (￨2￨f MethodBinding￨3￨p template￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f removeUnusedExtraArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f removeParameter￨2￨f (￨2￨f int￨3￨p indexToRemove￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f TypeBinding￨2￨f [￨2￨f ]￨2￨f removeParameter￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f LocalVariableBinding￨2￨f [￨2￨f ]￨2￨f removeLocalBinding￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p LocalVariableBinding￨3￨p [￨3￨p ]￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TableController￨1￨d implements￨1￨d TreeSelectionListener￨1￨d ,￨1￨d FolderListener￨1￨d ,￨1￨d FocusOwner￨1￨d {￨1￨d private￨2￨e TableView￨2￨e view￨2￨e ;￨2￨e private￨2￨e AddressbookFrameMediator￨2￨e mediator￨2￨e ;￨2￨e private￨2￨e AddressbookTableModel￨2￨e addressbookModel￨2￨e ;￨2￨e private￨2￨e SortDecorator￨2￨e sortDecorator￨2￨e ;￨2￨e private￨2￨e FilterDecorator￨2￨e filterDecorator￨2￨e ;￨2￨e private￨2￨e AddressbookTreeNode￨2￨e selectedFolder￨2￨e ;￨2￨e public￨2￨f TableController￨2￨f (￨2￨f AddressbookFrameMediator￨3￨p mediator￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addMouseListenerToHeaderInTable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AddressbookFrameMediator￨2￨f getMediator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TableView￨2￨f getView￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f valueChanged￨2￨f (￨2￨f TreeSelectionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f AddressbookTreeNode￨3￨e node￨3￨e =￨3￨e (￨3￨e (￨3￨e AddressbookTreeNode￨3￨e )￨3￨e (￨3￨e e￨3￨e .￨3￨e getPath￨3￨e (￨3￨e )￨3￨e .￨3￨e getLastPathComponent￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j node￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j node￨4￨c instanceof￨4￨c IContactStorage￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f (￨5￨e (￨5￨e org￨5￨e .￨5￨e columba￨5￨e .￨5￨e addressbook￨5￨e .￨5￨e folder￨5￨e .￨5￨e AbstractFolder￨5￨e )￨5￨e (￨5￨e node￨5￨e )￨5￨e )￨5￨e .￨5￨e removeFolderListener￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e selectedFolder￨5￨e =￨5￨e node￨5￨e ;￨5￨e (￨5￨e (￨5￨e org￨5￨e .￨5￨e columba￨5￨e .￨5￨e addressbook￨5￨e .￨5￨e folder￨5￨e .￨5￨e AbstractFolder￨5￨e )￨5￨e (￨5￨e node￨5￨e )￨5￨e )￨5￨e .￨5￨e addFolderListener￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e filterDecorator￨5￨e .￨5￨e setContactItemMap￨5￨e (￨5￨e (￨5￨e (￨5￨e org￨5￨e .￨5￨e columba￨5￨e .￨5￨e addressbook￨5￨e .￨5￨e folder￨5￨e .￨5￨e AbstractFolder￨5￨e )￨5￨e (￨5￨e selectedFolder￨5￨e )￨5￨e )￨5￨e .￨5￨e getContactItemMap￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p e1￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j Logging￨6￨c .￨6￨c DEBUG￨6￨c )￨5￨j {￨5￨j e1￨6￨e .￨6￨e printStackTrace￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j <START_BUG>￨5￨b new￨5￨b ErrorDialog￨5￨b (￨5￨b e1￨5￨b .￨5￨b getMessage￨5￨b (￨5￨b )￨5￨b ,￨5￨b e1￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f }￨3￨j else￨3￨j {￨3￨j filterDecorator￨4￨e .￨4￨e setContactItemMap￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getUids￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AddressbookTableModel￨2￨f getAddressbookModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IContactItem￨2￨f getSelectedItem￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f itemAdded￨2￨f (￨2￨f IFolderEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f itemChanged￨2￨f (￨2￨f IFolderEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f itemRemoved￨2￨f (￨2￨f IFolderEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cut￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f delete￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JComponent￨2￨f getComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCopyActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCutActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDeleteActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPasteActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRedoActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSelectAllActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isUndoActionEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paste￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f redo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f undo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SortDecorator￨2￨f getSortDecorator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FilterDecorator￨2￨f getFilterDecorator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d PeriodicRotatingFileHandlerAdd￨1￨d implements￨1￨d ModelAddOperationHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e PeriodicRotatingFileHandlerAdd￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e PeriodicRotatingFileHandlerAdd￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f OperationResult￨2￨f execute￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f ResultHandler￨2￨f resultHandler￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e PathAddress￨3￨e address￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e name￨3￨e =￨3￨e address￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e compensatingOperation￨3￨e =￨3￨e new￨3￨e ModelNode￨3￨e (￨3￨e )￨3￨e ;￨3￨e compensatingOperation￨3￨e .￨3￨e get￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e ;￨3￨e compensatingOperation￨3￨e .￨3￨e get￨3￨e (￨3￨e OP￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e REMOVE￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e subModel￨3￨e =￨3￨e context￨3￨e .￨3￨e getSubModel￨3￨e (￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e AUTOFLUSH￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e AUTOFLUSH￨3￨e )￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e ENCODING￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e ENCODING￨3￨e )￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e FORMATTER￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e FORMATTER￨3￨e )￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e LEVEL￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e LEVEL￨3￨e )￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e FILE￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e FILE￨3￨e )￨3￨e )￨3￨e ;￨3￨e subModel￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e SUFFIX￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e SUFFIX￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c context￨4￨c .￨4￨c getRuntimeContext￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j context￨4￨f .￨4￨f getRuntimeContext￨4￨f (￨4￨f )￨4￨f .￨4￨f setRuntimeTask￨4￨f (￨4￨f new￨4￨f RuntimeTask￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f void￨5￨f execute￨5￨f (￨5￨f RuntimeTaskContext￨5￨f context￨5￨f )￨5￨f throws￨5￨f OperationFailedException￨5￨f (￨5￨f )￨5￨f {￨5￨f final￨6￨e ServiceTarget￨6￨e serviceTarget￨6￨e =￨6￨e context￨6￨e .￨6￨e getServiceTarget￨6￨e (￨6￨e )￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f final￨7￨e PeriodicRotatingFileHandlerService￨7￨e service￨7￨e =￨7￨e new￨7￨e PeriodicRotatingFileHandlerService￨7￨e (￨7￨e )￨7￨e ;￨7￨e final￨7￨e ServiceBuilder￨7￨e <￨7￨e Handler￨7￨e >￨7￨e serviceBuilder￨7￨e =￨7￨e serviceTarget￨7￨e .￨7￨e addService￨7￨e (￨7￨e LogServices￨7￨e .￨7￨e handlerName￨7￨e (￨7￨e name￨7￨e )￨7￨e ,￨7￨e service￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j operation￨8￨c .￨8￨c hasDefined￨8￨c (￨8￨c CommonAttributes￨8￨c .￨8￨c FILE￨8￨c )￨8￨c )￨7￨j {￨7￨j final￨8￨e HandlerFileService￨8￨e fileService￨8￨e =￨8￨e new￨8￨e HandlerFileService￨8￨e (￨8￨e operation￨8￨e .￨8￨e get￨8￨e (￨8￨e CommonAttributes￨8￨e .￨8￨e FILE￨8￨e ,￨8￨e CommonAttributes￨8￨e .￨8￨e PATH￨8￨e )￨8￨e .￨8￨e asString￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e final￨8￨e ServiceBuilder￨8￨e <￨8￨e ?￨8￨e >￨8￨e fileBuilder￨8￨e =￨8￨e serviceTarget￨8￨e .￨8￨e addService￨8￨e (￨8￨e LogServices￨8￨e .￨8￨e handlerFileName￨8￨e (￨8￨e name￨8￨e )￨8￨e ,￨8￨e fileService￨8￨e )￨8￨e ;￨8￨e <START_BUG>￨8￨b if￨8￨b (￨8￨b operation￨8￨b .￨8￨b hasDefined￨8￨b (￨8￨b RELATIVE_TO￨8￨b )￨8￨b )￨8￨b {￨8￨b <END_BUG>￨8￨b fileBuilder￨8￨e .￨8￨e addDependency￨8￨e (￨8￨e AbstractPathService￨8￨e .￨8￨e pathNameOf￨8￨e (￨8￨e operation￨8￨e .￨8￨e get￨8￨e (￨8￨e CommonAttributes￨8￨e .￨8￨e FILE￨8￨e ,￨8￨e CommonAttributes￨8￨e .￨8￨e RELATIVE_TO￨8￨e )￨8￨e .￨8￨e asString￨8￨e (￨8￨e )￨8￨e )￨8￨e ,￨8￨e String￨8￨e .￨8￨e class￨8￨e ,￨8￨e fileService￨8￨e .￨8￨e getRelativeToInjector￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨8￨e fileBuilder￨8￨e .￨8￨e setInitialMode￨8￨e (￨8￨e ACTIVE￨8￨e )￨8￨e .￨8￨e install￨8￨e (￨8￨e )￨8￨e ;￨8￨e serviceBuilder￨8￨e .￨8￨e addDependency￨8￨e (￨8￨e LogServices￨8￨e .￨8￨e handlerFileName￨8￨e (￨8￨e name￨8￨e )￨8￨e ,￨8￨e String￨8￨e .￨8￨e class￨8￨e ,￨8￨e service￨8￨e .￨8￨e getFileNameInjector￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j service￨7￨e .￨7￨e setLevel￨7￨e (￨7￨e Level￨7￨e .￨7￨e parse￨7￨e (￨7￨e operation￨7￨e .￨7￨e get￨7￨e (￨7￨e CommonAttributes￨7￨e .￨7￨e LEVEL￨7￨e )￨7￨e .￨7￨e asString￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e final￨7￨e Boolean￨7￨e autoFlush￨7￨e =￨7￨e operation￨7￨e .￨7￨e get￨7￨e (￨7￨e CommonAttributes￨7￨e .￨7￨e AUTOFLUSH￨7￨e )￨7￨e .￨7￨e asBoolean￨7￨e (￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j autoFlush￨8￨c !=￨8￨c null￨8￨c )￨7￨j {￨7￨j service￨8￨e .￨8￨e setAutoflush￨8￨e (￨8￨e autoFlush￨8￨e .￨8￨e booleanValue￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j if￨7￨j (￨7￨j operation￨8￨c .￨8￨c hasDefined￨8￨c (￨8￨c CommonAttributes￨8￨c .￨8￨c SUFFIX￨8￨c )￨8￨c )￨7￨j {￨7￨j service￨8￨e .￨8￨e setSuffix￨8￨e (￨8￨e operation￨8￨e .￨8￨e get￨8￨e (￨8￨e CommonAttributes￨8￨e .￨8￨e SUFFIX￨8￨e )￨8￨e .￨8￨e asString￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j if￨7￨j (￨7￨j operation￨8￨c .￨8￨c hasDefined￨8￨c (￨8￨c CommonAttributes￨8￨c .￨8￨c ENCODING￨8￨c )￨8￨c )￨7￨j {￨7￨j service￨8￨e .￨8￨e setEncoding￨8￨e (￨8￨e operation￨8￨e .￨8￨e get￨8￨e (￨8￨e CommonAttributes￨8￨e .￨8￨e ENCODING￨8￨e )￨8￨e .￨8￨e asString￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j if￨7￨j (￨7￨j operation￨8￨c .￨8￨c hasDefined￨8￨c (￨8￨c CommonAttributes￨8￨c .￨8￨c FORMATTER￨8￨c )￨8￨c )￨7￨j {￨7￨j service￨8￨e .￨8￨e setFormatterSpec￨8￨e (￨8￨e PeriodicRotatingFileHandlerAdd￨8￨e .￨8￨e createFormatterSpec￨8￨e (￨8￨e operation￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j serviceBuilder￨7￨e .￨7￨e setInitialMode￨7￨e (￨7￨e ACTIVE￨7￨e )￨7￨e ;￨7￨e serviceBuilder￨7￨e .￨7￨e install￨7￨e (￨7￨e )￨7￨e ;￨7￨e resultHandler￨7￨e .￨7￨e handleResultComplete￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f Throwable￨7￨p t￨7￨p )￨6￨f {￨6￨f throw￨7￨e new￨7￨e OperationFailedException￨7￨e (￨7￨e new￨7￨e ModelNode￨7￨e (￨7￨e )￨7￨e .￨7￨e set￨7￨e (￨7￨e t￨7￨e .￨7￨e getLocalizedMessage￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j resultHandler￨4￨e .￨4￨e handleResultComplete￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e controller￨3￨e .￨3￨e BasicOperationResult￨3￨e (￨3￨e compensatingOperation￨3￨e )￨3￨e ;￨3￨e }￨2￨f static￨2￨f AbstractFormatterSpec￨2￨f createFormatterSpec￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d PassivationStoreRemove￨1￨d extends￨1￨d AbstractRemoveStepHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e PassivationStoreAdd￨2￨e add￨2￨e ;￨2￨e PassivationStoreRemove￨2￨f (￨2￨f PassivationStoreAdd￨3￨p add￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f recoverServices￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j context￨4￨c .￨4￨c isResourceServiceRestartAllowed￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b this￨4￨b .￨4￨b add￨4￨b .￨4￨b installRuntimeService￨4￨b (￨4￨b context￨4￨b ,￨4￨b model￨4￨b ,￨4￨b null￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j else￨3￨j {￨3￨j context￨4￨e .￨4￨e revertReloadRequired￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f void￨2￨f removeRuntimeService￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d DefaultBindingResolver￨1￨d extends￨1￨d BindingResolver￨1￨d {￨1￨d Map￨2￨e compilerBindingsToASTBindings￨2￨e ;￨2￨e Map￨2￨e newAstToOldAst￨2￨e ;￨2￨e Map￨2￨e bindingsToAstNodes￨2￨e ;￨2￨e Map￨2￨e astNodesToBindings￨2￨e ;￨2￨e DefaultBindingResolver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f IBinding￨2￨f resolveName￨2￨f (￨2￨f Name￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IBinding￨2￨f resolveNameForMessageSend￨2￨f (￨2￨f Name￨3￨p name￨3￨p ,￨3￨p AstNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IBinding￨2￨f resolveNameForMessageSend￨2￨f (￨2￨f Name￨3￨p name￨3￨p ,￨3￨p AstNode￨3￨p node￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IBinding￨2￨f resolveNameForNameReference￨2￨f (￨2￨f Name￨3￨p name￨3￨p ,￨3￨p AstNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IBinding￨2￨f resolveNameForPackageDeclaration￨2￨f (￨2￨f Name￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f ITypeBinding￨2￨f resolveType￨2￨f (￨2￨f Type￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f ITypeBinding￨2￨f resolveWellKnownType￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f ITypeBinding￨2￨f resolveType￨2￨f (￨2￨f TypeDeclaration￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f IMethodBinding￨2￨f resolveMethod￨2￨f (￨2￨f MethodDeclaration￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f IVariableBinding￨2￨f resolveVariable￨2￨f (￨2￨f VariableDeclaration￨3￨p variable￨3￨p )￨2￨f {￨2￨f AbstractVariableDeclaration￨3￨e abstractVariableDeclaration￨3￨e =￨3￨e (￨3￨e (￨3￨e AbstractVariableDeclaration￨3￨e )￨3￨e (￨3￨e this￨3￨e .￨3￨e newAstToOldAst￨3￨e .￨3￨e get￨3￨e (￨3￨e variable￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j abstractVariableDeclaration￨4￨c instanceof￨4￨c FieldDeclaration￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b FieldDeclaration￨4￨b fieldDeclaration￨4￨b =￨4￨b (￨4￨b (￨4￨b FieldDeclaration￨4￨b )￨4￨b (￨4￨b this￨4￨b .￨4￨b newAstToOldAst￨4￨b .￨4￨b get￨4￨b (￨4￨b variable￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e this￨4￨e .￨4￨e getVariableBinding￨4￨e (￨4￨e fieldDeclaration￨4￨e .￨4￨e binding￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e this￨3￨e .￨3￨e getVariableBinding￨3￨e (￨3￨e (￨3￨e (￨3￨e LocalDeclaration￨3￨e )￨3￨e (￨3￨e abstractVariableDeclaration￨3￨e )￨3￨e )￨3￨e .￨3￨e binding￨3￨e )￨3￨e ;￨3￨e }￨2￨f IVariableBinding￨2￨f resolveVariable￨2￨f (￨2￨f FieldDeclaration￨3￨p variable￨3￨p )￨2￨f {￨2￨f }￨2￨f ITypeBinding￨2￨f resolveExpressionType￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ASTNode￨2￨f findDeclaringNode￨2￨f (￨2￨f IBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f store￨2￨f (￨2￨f ASTNode￨3￨p node￨3￨p ,￨3￨p AstNode￨3￨p oldASTNode￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ITypeBinding￨2￨f getTypeBinding￨2￨f (￨2￨f TypeBinding￨3￨p referenceBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IPackageBinding￨2￨f getPackageBinding￨2￨f (￨2￨f PackageBinding￨3￨p packageBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IVariableBinding￨2￨f getVariableBinding￨2￨f (￨2￨f VariableBinding￨3￨p variableBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IMethodBinding￨2￨f getMethodBinding￨2￨f (￨2￨f MethodBinding￨3￨p methodBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f BlockScope￨2￨f retrieveEnclosingScope￨2￨f (￨2￨f ASTNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BlockScope￨1￨d extends￨1￨d Scope￨1￨d {￨1￨d public￨2￨e LocalVariableBinding￨2￨e [￨2￨e ]￨2￨e locals￨2￨e ;￨2￨e public￨2￨e int￨2￨e localIndex￨2￨e ;￨2￨e public￨2￨e int￨2￨e startIndex￨2￨e ;￨2￨e public￨2￨e int￨2￨e offset￨2￨e ;￨2￨e public￨2￨e int￨2￨e maxOffset￨2￨e ;￨2￨e public￨2￨e BlockScope￨2￨e [￨2￨e ]￨2￨e shiftScopes￨2￨e ;￨2￨e public￨2￨f static￨2￨f final￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f EmulationPathToImplicitThis￨2￨f =￨2￨f new￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨f static￨2￨f final￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f NoEnclosingInstanceInConstructorCall￨2￨f =￨2￨f new￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨f static￨2￨f final￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f NoEnclosingInstanceInStaticContext￨2￨f =￨2￨f new￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨e Scope￨2￨e [￨2￨e ]￨2￨e subscopes￨2￨e =￨2￨e new￨2￨e Scope￨2￨e [￨2￨e 1￨2￨e ]￨2￨e ;￨2￨e public￨2￨e int￨2￨e subscopeCount￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e CaseStatement￨2￨e enclosingCase￨2￨e ;￨2￨e protected￨2￨f BlockScope￨2￨f (￨2￨f int￨3￨p kind￨3￨p ,￨3￨p Scope￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BlockScope￨2￨f (￨2￨f BlockScope￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BlockScope￨2￨f (￨2￨f BlockScope￨3￨p parent￨3￨p ,￨3￨p boolean￨3￨p addToParentScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BlockScope￨2￨f (￨2￨f BlockScope￨3￨p parent￨3￨p ,￨3￨p int￨3￨p variableCount￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addAnonymousType￨2￨f (￨2￨f TypeDeclaration￨3￨p anonymousType￨3￨p ,￨3￨p ReferenceBinding￨3￨p superBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addLocalType￨2￨f (￨2￨f TypeDeclaration￨3￨p localType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addLocalVariable￨2￨f (￨2￨f LocalVariableBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSubscope￨2￨f (￨2￨f Scope￨3￨p childScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f allowBlankFinalFieldAssignment￨2￨f (￨2￨f FieldBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f basicToString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkAndSetModifiersForVariable￨2￨f (￨2￨f LocalVariableBinding￨3￨p varBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f computeLocalVariablePositions￨2￨f (￨2￨f int￨3￨p ilocal￨3￨p ,￨3￨p int￨3￨p initOffset￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e offset￨3￨e =￨3￨e initOffset￨3￨e ;￨3￨e this￨3￨e .￨3￨e maxOffset￨3￨e =￨3￨e initOffset￨3￨e ;￨3￨e int￨3￨e maxLocals￨3￨e =￨3￨e this￨3￨e .￨3￨e localIndex￨3￨e ;￨3￨e boolean￨3￨e hasMoreVariables￨3￨e =￨3￨e ilocal￨3￨e <￨3￨e maxLocals￨3￨e ;￨3￨e int￨3￨e iscope￨3￨e =￨3￨e 0￨3￨e ;￨3￨e int￨3￨e maxScopes￨3￨e =￨3￨e this￨3￨e .￨3￨e subscopeCount￨3￨e ;￨3￨e boolean￨3￨e hasMoreScopes￨3￨e =￨3￨e maxScopes￨3￨e >￨3￨e 0￨3￨e ;￨3￨e while￨3￨l (￨3￨l hasMoreVariables￨4￨c ||￨4￨c hasMoreScopes￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j hasMoreScopes￨5￨c &&￨5￨c (￨5￨c (￨5￨c !￨5￨c hasMoreVariables￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c subscopes￨5￨c [￨5￨c iscope￨5￨c ]￨5￨c .￨5￨c startIndex￨5￨c (￨5￨c )￨5￨c )￨5￨c <=￨5￨c ilocal￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c subscopes￨6￨c [￨6￨c iscope￨6￨c ]￨6￨c )￨6￨c instanceof￨6￨c BlockScope￨6￨c )￨5￨j {￨5￨j BlockScope￨6￨e subscope￨6￨e =￨6￨e (￨6￨e (￨6￨e BlockScope￨6￨e )￨6￨e (￨6￨e subscopes￨6￨e [￨6￨e iscope￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e int￨6￨e subOffset￨6￨e =￨6￨e (￨6￨e (￨6￨e subscope￨6￨e .￨6￨e shiftScopes￨6￨e )￨6￨e ==￨6￨e null￨6￨e )￨6￨e ?￨6￨e this￨6￨e .￨6￨e offset￨6￨e :￨6￨e subscope￨6￨e .￨6￨e maxShiftedOffset￨6￨e (￨6￨e )￨6￨e ;￨6￨e subscope￨6￨e .￨6￨e computeLocalVariablePositions￨6￨e (￨6￨e 0￨6￨e ,￨6￨e subOffset￨6￨e ,￨6￨e codeStream￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c subscope￨7￨c .￨7￨c maxOffset￨7￨c )￨7￨c >￨7￨c (￨7￨c this￨7￨c .￨7￨c maxOffset￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e maxOffset￨7￨e =￨7￨e subscope￨7￨e .￨7￨e maxOffset￨7￨e ;￨7￨e }￨6￨j }￨5￨j hasMoreScopes￨5￨e =￨5￨e (￨5￨e ++￨5￨e iscope￨5￨e )￨5￨e <￨5￨e maxScopes￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j LocalVariableBinding￨5￨e local￨5￨e =￨5￨e locals￨5￨e [￨5￨e ilocal￨5￨e ]￨5￨e ;￨5￨e boolean￨5￨e generateCurrentLocalVar￨5￨e =￨5￨e (￨5￨e (￨5￨e local￨5￨e .￨5￨e useFlag￨5￨e )￨5￨e ==￨5￨e (￨5￨e LocalVariableBinding￨5￨e .￨5￨e USED￨5￨e )￨5￨e )￨5￨e &&￨5￨e (￨5￨e (￨5￨e local￨5￨e .￨5￨e constant￨5￨e (￨5￨e )￨5￨e )￨5￨e ==￨5￨e (￨5￨e Constant￨5￨e .￨5￨e NotAConstant￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c (￨6￨c local￨6￨c .￨6￨c useFlag￨6￨c )￨6￨c ==￨6￨c (￨6￨c LocalVariableBinding￨6￨c .￨6￨c UNUSED￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c local￨6￨c .￨6￨c declaration￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c (￨6￨c local￨6￨c .￨6￨c declaration￨6￨c .￨6￨c bits￨6￨c )￨6￨c &￨6￨c (￨6￨c ASTNode￨6￨c .￨6￨c IsLocalDeclarationReachable￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j !￨7￨c (￨7￨c (￨7￨c local￨7￨c .￨7￨c declaration￨7￨c )￨7￨c instanceof￨7￨c Argument￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e unusedLocalVariable￨7￨e (￨7￨e local￨7￨e .￨7￨e declaration￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j !￨6￨c generateCurrentLocalVar￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c (￨7￨c local￨7￨c .￨7￨c declaration￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c compilerOptions￨7￨c (￨7￨c )￨7￨c .￨7￨c preserveAllLocalVariables￨7￨c )￨7￨c )￨6￨j {￨6￨j generateCurrentLocalVar￨7￨e =￨7￨e true￨7￨e ;￨7￨e local￨7￨e .￨7￨e useFlag￨7￨e =￨7￨e LocalVariableBinding￨7￨e .￨7￨e USED￨7￨e ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j generateCurrentLocalVar￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c local￨7￨c .￨7￨c declaration￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j codeStream￨7￨e .￨7￨e record￨7￨e (￨7￨e local￨7￨e )￨7￨e ;￨7￨e }￨6￨j local￨6￨e .￨6￨e resolvedPosition￨6￨e =￨6￨e this￨6￨e .￨6￨e offset￨6￨e ;￨6￨e <START_BUG>￨6￨b if￨6￨b (￨6￨b (￨6￨b (￨6￨b local￨6￨b .￨6￨b type￨6￨b )￨6￨b ==￨6￨b (￨6￨b LongBinding￨6￨b )￨6￨b )￨6￨b ||￨6￨b (￨6￨b (￨6￨b local￨6￨b .￨6￨b type￨6￨b )￨6￨b ==￨6￨b (￨6￨b DoubleBinding￨6￨b )￨6￨b )￨6￨b )￨6￨b {￨6￨b <END_BUG>￨6￨b this￨6￨e .￨6￨e offset￨6￨e +=￨6￨e 2￨6￨e ;￨6￨e else￨6￨j {￨6￨j (￨7￨e this￨7￨e .￨7￨e offset￨7￨e )￨7￨e ++￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j (￨7￨c this￨7￨c .￨7￨c offset￨7￨c )￨7￨c >￨7￨c 65535￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e noMoreAvailableSpaceForLocal￨7￨e (￨7￨e local￨7￨e ,￨7￨e (￨7￨e (￨7￨e local￨7￨e .￨7￨e declaration￨7￨e )￨7￨e ==￨7￨e null￨7￨e ?￨7￨e (￨7￨e (￨7￨e ASTNode￨7￨e )￨7￨e (￨7￨e this￨7￨e .￨7￨e methodScope￨7￨e (￨7￨e )￨7￨e .￨7￨e referenceContext￨7￨e )￨7￨e )￨7￨e :￨7￨e local￨7￨e .￨7￨e declaration￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j local￨6￨e .￨6￨e resolvedPosition￨6￨e =￨6￨e -￨6￨e 1￨6￨e ;￨6￨e }￨5￨j hasMoreVariables￨5￨e =￨5￨e (￨5￨e ++￨5￨e ilocal￨5￨e )￨5￨e <￨5￨e maxLocals￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c offset￨4￨c )￨4￨c >￨4￨c (￨4￨c this￨4￨c .￨4￨c maxOffset￨4￨c )￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e maxOffset￨4￨e =￨4￨e this￨4￨e .￨4￨e offset￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f emulateOuterAccess￨2￨f (￨2￨f LocalVariableBinding￨3￨p outerLocalVariable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalDeclaration￨2￨f [￨2￨f ]￨2￨f findLocalVariableDeclarations￨2￨f (￨2￨f int￨3￨p position￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f ReferenceBinding￨2￨f findLocalType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalVariableBinding￨2￨f findVariable￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p variable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Binding￨2￨f getBinding￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p compoundName￨3￨p ,￨3￨p int￨3￨p mask￨3￨p ,￨3￨p InvocationSite￨3￨p invocationSite￨3￨p ,￨3￨p boolean￨3￨p needResolve￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Binding￨2￨f getBinding￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p compoundName￨3￨p ,￨3￨p InvocationSite￨3￨p invocationSite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f VariableBinding￨2￨f [￨2￨f ]￨2￨f getEmulationPath￨2￨f (￨2￨f LocalVariableBinding￨3￨p outerLocalVariable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getEmulationPath￨2￨f (￨2￨f ReferenceBinding￨3￨p targetEnclosingType￨3￨p ,￨3￨p boolean￨3￨p onlyExactMatch￨3￨p ,￨3￨p boolean￨3￨p denyEnclosingArgInConstructorCall￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isDuplicateLocalVariable￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f maxShiftedOffset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ProblemReporter￨2￨f problemReporter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f propagateInnerEmulation￨2￨f (￨2￨f ReferenceBinding￨3￨p targetType￨3￨p ,￨3￨p boolean￨3￨p isEnclosingInstanceSupplied￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeDeclaration￨2￨f referenceType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f scopeIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f startIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PageInstanceMapper￨1￨d extends￨1￨d AbstractComponentMapper￨1￨d {￨1￨d public￨2￨f PageInstanceMapper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IRequestHandler￨2￨f mapRequest￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Url￨2￨f mapHandler￨2￨f (￨2￨f IRequestHandler￨3￨p requestHandler￨3￨p )￨2￨f {￨2￨f PageComponentInfo￨3￨e info￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j requestHandler￨4￨c instanceof￨4￨c RenderPageRequestHandler￨4￨c )￨3￨j {￨3￨j IRequestablePage￨4￨e page￨4￨e =￨4￨e (￨4￨e (￨4￨e RenderPageRequestHandler￨4￨e )￨4￨e (￨4￨e requestHandler￨4￨e )￨4￨e )￨4￨e .￨4￨e getPage￨4￨e (￨4￨e )￨4￨e ;￨4￨e PageInfo￨4￨e i￨4￨e =￨4￨e new￨4￨e PageInfo￨4￨e (￨4￨e page￨4￨e .￨4￨e getPageId￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e info￨4￨e =￨4￨e new￨4￨e PageComponentInfo￨4￨e (￨4￨e i￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j requestHandler￨4￨c instanceof￨4￨c ListenerInterfaceRequestHandler￨4￨c )￨3￨j {￨3￨j ListenerInterfaceRequestHandler￨4￨e handler￨4￨e =￨4￨e (￨4￨e (￨4￨e ListenerInterfaceRequestHandler￨4￨e )￨4￨e (￨4￨e requestHandler￨4￨e )￨4￨e )￨4￨e ;￨4￨e IRequestablePage￨4￨e page￨4￨e =￨4￨e handler￨4￨e .￨4￨e getPage￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b String￨4￨b componentPath￨4￨b =￨4￨b handler￨4￨b .￨4￨b getComponent￨4￨b (￨4￨b )￨4￨b .￨4￨b getPageRelativePath￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b RequestListenerInterface￨4￨e listenerInterface￨4￨e =￨4￨e handler￨4￨e .￨4￨e getListenerInterface￨4￨e (￨4￨e )￨4￨e ;￨4￨e Integer￨4￨e renderCount￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j listenerInterface￨5￨c .￨5￨c isIncludeRenderCount￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j renderCount￨5￨e =￨5￨e page￨5￨e .￨5￨e getRenderCount￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j PageInfo￨4￨e pageInfo￨4￨e =￨4￨e new￨4￨e PageInfo￨4￨e (￨4￨e page￨4￨e .￨4￨e getPageId￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e ComponentInfo￨4￨e componentInfo￨4￨e =￨4￨e new￨4￨e ComponentInfo￨4￨e (￨4￨e renderCount￨4￨e ,￨4￨e requestListenerInterfaceToString￨4￨e (￨4￨e listenerInterface￨4￨e )￨4￨e ,￨4￨e componentPath￨4￨e ,￨4￨e handler￨4￨e .￨4￨e getBehaviorIndex￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e info￨4￨e =￨4￨e new￨4￨e PageComponentInfo￨4￨e (￨4￨e pageInfo￨4￨e ,￨4￨e componentInfo￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j info￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Url￨4￨e url￨4￨e =￨4￨e new￨4￨e Url￨4￨e (￨4￨e )￨4￨e ;￨4￨e url￨4￨e .￨4￨e getSegments￨4￨e (￨4￨e )￨4￨e .￨4￨e add￨4￨e (￨4￨e getContext￨4￨e (￨4￨e )￨4￨e .￨4￨e getNamespace￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e url￨4￨e .￨4￨e getSegments￨4￨e (￨4￨e )￨4￨e .￨4￨e add￨4￨e (￨4￨e getContext￨4￨e (￨4￨e )￨4￨e .￨4￨e getPageIdentifier￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e encodePageComponentInfo￨4￨e (￨4￨e url￨4￨e ,￨4￨e info￨4￨e )￨4￨e ;￨4￨e return￨4￨e url￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f int￨2￨f getCompatibilityScore￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Color￨2￨f defaultBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f NSFont￨2￨f defaultNSFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Color￨2￨f defaultForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deselectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deselect￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyItem￨2￨f (￨2￨f TreeColumn￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyItem￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f dragDetect￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p boolean￨3￨p filter￨3￨p ,￨3￨p boolean￨3￨p [￨3￨p ]￨3￨p consume￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f drawInteriorWithFrame_inView￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p cellFrame￨3￨p ,￨3￨p int￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f getCheckColumnWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f TreeColumn￨2￨f getColumn￨2￨f (￨2￨f id￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f getColumn￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getColumnCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f [￨2￨f ]￨2￨f getColumnOrder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f [￨2￨f ]￨2￨f getColumns￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getGridLineWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getHeaderHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getHeaderVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getItem￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getItem￨2￨f (￨2￨f Point￨3￨p point￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getItemCount￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f [￨2￨f ]￨2￨f getItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getLinesVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getParentItem￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f [￨2￨f ]￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSelectionCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f getSortColumn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSortDirection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeItem￨2￨f getTopItem￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f highlightSelectionInClipRect￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p rect￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f TreeColumn￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isTrim￨2￨f (￨2￨f NSView￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f menuForEvent￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f outlineView_child_ofItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineView_didClickTableColumn￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p tableColumn￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f outlineView_objectValueForTableColumn_byItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p tableColumn￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f outlineView_isItemExpandable￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f outlineView_numberOfChildrenOfItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineView_willDisplayCell_forTableColumn_item￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p cell￨3￨p ,￨3￨p int￨3￨p tableColumn￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineViewColumnDidMove￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p aNotification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineViewColumnDidResize￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p aNotification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineViewItemDidExpand￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineViewSelectionDidChange￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f outlineView_shouldCollapseItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f outlineView_shouldExpandItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f outlineView_setObjectValue_forTableColumn_byItem￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p outlineView￨3￨p ,￨3￨p int￨3￨p object￨3￨p ,￨3￨p int￨3￨p tableColumn￨3￨p ,￨3￨p int￨3￨p itemID￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f reloadItem￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p ,￨3￨p boolean￨3￨p recurse￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeTreeListener￨2￨f (￨2￨f TreeListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInsertMark￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p ,￨3￨p boolean￨3￨p before￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f sendDoubleSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f sendKeyEvent￨2￨f (￨2￨f NSEvent￨3￨p nsEvent￨3￨p ,￨3￨p int￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setColumnOrder￨2￨f (￨2￨f int￨3￨p [￨3￨p ]￨3￨p order￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setFont￨2￨f (￨2￨f NSFont￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHeaderVisible￨2￨f (￨2￨f boolean￨3￨p show￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setItemCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setItemCount￨2￨f (￨2￨f TreeItem￨3￨p parentItem￨3￨p ,￨3￨p int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setItemHeight￨2￨f (￨2￨f int￨3￨p itemHeight￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setItemHeight￨2￨f (￨2￨f Image￨3￨p image￨3￨p ,￨3￨p NSFont￨3￨p font￨3￨p ,￨3￨p boolean￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLinesVisible￨2￨f (￨2￨f boolean￨3￨p show￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRedraw￨2￨f (￨2￨f boolean￨3￨p redraw￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setScrollWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setScrollWidth￨2￨f (￨2￨f boolean￨3￨p set￨3￨p ,￨3￨p TreeItem￨3￨p [￨3￨p ]￨3￨p items￨3￨p ,￨3￨p boolean￨3￨p recurse￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j items￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c ignoreRedraw￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c drawCount￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b columnCount￨3￨b )￨3￨b !=￨3￨b 0￨3￨b )￨3￨b ||￨3￨b (￨3￨b items￨3￨b ==￨3￨b null￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b return￨3￨e false￨3￨e ;￨3￨e GC￨3￨e gc￨3￨e =￨3￨e new￨3￨e GC￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e int￨3￨e newWidth￨3￨e =￨3￨e calculateWidth￨3￨e (￨3￨e items￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e gc￨3￨e ,￨3￨e recurse￨3￨e )￨3￨e ;￨3￨e gc￨3￨e .￨3￨e dispose￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c set￨4￨c )￨3￨j {￨3￨j int￨4￨e oldWidth￨4￨e =￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e firstColumn￨4￨e .￨4￨e width￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j oldWidth￨5￨c >=￨5￨c newWidth￨5￨c )￨4￨j {￨4￨j return￨5￨e false￨5￨e ;￨5￨e }￨4￨j }￨3￨j firstColumn￨3￨e .￨3￨e setWidth￨3￨e (￨3￨e newWidth￨3￨e )￨3￨e ;￨3￨e return￨3￨e true￨3￨e ;￨3￨e }￨2￨f boolean￨2￨f setScrollWidth￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f TreeItem￨3￨p [￨3￨p ]￨3￨p items￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSmallSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSortColumn￨2￨f (￨2￨f TreeColumn￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSortDirection￨2￨f (￨2￨f int￨3￨p direction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTopItem￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showColumn￨2￨f (￨2￨f TreeColumn￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showItem￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f showItem￨2￨f (￨2￨f TreeItem￨3￨p item￨3￨p ,￨3￨p boolean￨3￨p scroll￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HeaderManager￨1￨d extends￨1￨d ConfigTestElement￨1￨d implements￨1￨d Serializable￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e HEADERS￨2￨e =￨2￨e "HeaderManager.headers"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e columnCount￨2￨e =￨2￨e 2￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f columnNames￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e Object￨2￨e SOAPHeader￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f HeaderManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollectionProperty￨2￨f getHeaders￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getColumnCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getColumnName￨2￨f (￨2￨f int￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f getColumnClass￨2￨f (￨2￨f int￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Header￨2￨f getHeader￨2￨f (￨2￨f int￨3￨p row￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f save￨2￨f (￨2￨f String￨2￨f headFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFile￨2￨f (￨2￨f String￨2￨f headerFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f Header￨3￨p h￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Header￨2￨f get￨2￨f (￨2￨f int￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeHeaderNamed￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f Vector￨3￨e removeIndices￨3￨e =￨3￨e new￨3￨e Vector￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b for￨3￨b (￨3￨b int￨3￨b i￨3￨b =￨3￨b (￨3￨b getHeaders￨3￨b (￨3￨b )￨3￨b .￨3￨b size￨3￨b (￨3￨b )￨3￨b )￨3￨b -￨3￨b 1￨3￨b ;￨3￨b i￨3￨b >￨3￨b 0￨3￨b ;￨3￨b i￨3￨b --￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b Header￨3￨e header￨3￨e =￨3￨e (￨3￨e (￨3￨e Header￨3￨e )￨3￨e (￨3￨e getHeaders￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e i￨3￨e )￨3￨e .￨3￨e getObjectValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j header￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j continue￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j header￨4￨c .￨4￨c getName￨4￨c (￨4￨c )￨4￨c .￨4￨c equalsIgnoreCase￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j removeIndices￨4￨e .￨4￨e addElement￨4￨e (￨4￨e new￨4￨e Integer￨4￨e (￨4￨e i￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l Enumeration￨4￨c e￨4￨c =￨4￨c removeIndices￨4￨c .￨4￨c elements￨4￨c (￨4￨c )￨4￨c ;￨4￨c e￨4￨c .￨4￨c hasMoreElements￨4￨c (￨4￨c )￨4￨c ;￨4￨c )￨3￨l {￨3￨l getHeaders￨4￨e (￨4￨e )￨4￨e .￨4￨e remove￨4￨e (￨4￨e (￨4￨e (￨4￨e Integer￨4￨e )￨4￨e (￨4￨e e￨4￨e .￨4￨e nextElement￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e intValue￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f split￨2￨f (￨2￨f String￨3￨p splittee￨3￨p ,￨3￨p String￨3￨p splitChar￨3￨p ,￨3￨p String￨3￨p def￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getClassLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getSOAPHeader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSOAPHeader￨2￨f (￨2￨f Object￨3￨p header￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BuildArgParser￨1￨d extends￨1￨d Main￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e BUNDLE_NAME￨2￨e =￨2￨e "org.aspectj.ajdt.ajc.messages"￨2￨e ;￨2￨e private￨2￨e static￨2￨e boolean￨2￨e LOADED_BUNDLE￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨d static￨2￨d class￨2￨d StringPrintWriter￨2￨d extends￨2￨d PrintWriter￨2￨d {￨2￨d public￨3￨e final￨3￨e StringWriter￨3￨e stringWriter￨3￨e ;￨3￨e StringPrintWriter￨3￨f (￨3￨f StringWriter￨4￨p sw￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f static￨2￨f String￨2￨f getUsage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e StringBuffer￨2￨e errorSink￨2￨e ;￨2￨e public￨2￨f BuildArgParser￨2￨f (￨2￨f PrintWriter￨3￨p writer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BuildArgParser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AjBuildConfig￨2￨f genBuildConfig￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p ,￨3￨p IMessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getOtherMessages￨2￨f (￨2￨f boolean￨3￨p flush￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setDebugOptions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collection￨2￨f collectSourceRootFiles￨2￨f (￨2￨f File￨3￨p dir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getClasspath￨2￨f (￨2￨f BuildArgParser￨3￨p .￨3￨p AjcConfigParser￨3￨p parser￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addExtDirs￨2￨f (￨2￨f String￨3￨p extdirs￨3￨p ,￨3￨p List￨3￨p classpathCollector￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addClasspath￨2￨f (￨2￨f String￨3￨p classpath￨3￨p ,￨3￨p List￨3￨p classpathCollector￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d AjcConfigParser￨2￨d extends￨2￨d ConfigParser￨2￨d {￨2￨d private￨3￨e String￨3￨e bootclasspath￨3￨e =￨3￨e null￨3￨e ;￨3￨e private￨3￨e String￨3￨e classpath￨3￨e =￨3￨e null￨3￨e ;￨3￨e private￨3￨e String￨3￨e extdirs￨3￨e =￨3￨e null￨3￨e ;￨3￨e private￨3￨e List￨3￨e unparsedArgs￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e AjBuildConfig￨3￨e buildConfig￨3￨e ;￨3￨e private￨3￨e IMessageHandler￨3￨e handler￨3￨e ;￨3￨e public￨3￨f AjcConfigParser￨3￨f (￨3￨f AjBuildConfig￨4￨p buildConfig￨4￨p ,￨4￨p IMessageHandler￨4￨p handler￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f List￨3￨f getUnparsedArgs￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f parseOption￨3￨f (￨3￨f String￨4￨p arg￨4￨p ,￨4￨p LinkedList￨4￨p args￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f dirLookahead￨3￨f (￨3￨f String￨4￨p arg￨4￨p ,￨4￨p LinkedList￨4￨p argList￨4￨p ,￨4￨p int￨4￨p nextArgIndex￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f showError￨3￨f (￨3￨f String￨4￨p message￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b MessageUtil￨4￨b .￨4￨b error￨4￨b (￨4￨b handler￨4￨b ,￨4￨b message￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f protected￨3￨f void￨3￨f showWarning￨3￨f (￨3￨f String￨4￨p message￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d MultiPassIndexSplitter￨1￨d {￨1￨d public￨2￨f void￨2￨f split￨2￨f (￨2￨f Version￨2￨f version￨2￨f ,￨2￨f IndexReader￨2￨f in￨2￨f ,￨2￨f Directory￨2￨f [￨2￨f ]￨2￨f outputs￨2￨f ,￨2￨f boolean￨2￨f seq￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c outputs￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c outputs￨4￨c .￨4￨c length￨4￨c )￨4￨c <￨4￨c 2￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IOException￨4￨e (￨4￨e "Invalid<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>outputs."￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c in￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c in￨4￨c .￨4￨c numDocs￨4￨c (￨4￨c )￨4￨c )￨4￨c <￨4￨c 2￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IOException￨4￨e (￨4￨e "Not<seq2seq4repair_space>enough<seq2seq4repair_space>documents<seq2seq4repair_space>for<seq2seq4repair_space>splitting"￨4￨e )￨4￨e ;￨4￨e }￨3￨j int￨3￨e numParts￨3￨e =￨3￨e outputs￨3￨e .￨3￨e length￨3￨e ;￨3￨e MultiPassIndexSplitter￨3￨e .￨3￨e FakeDeleteIndexReader￨3￨e input￨3￨e =￨3￨e new￨3￨e MultiPassIndexSplitter￨3￨e .￨3￨e FakeDeleteIndexReader￨3￨e (￨3￨e in￨3￨e )￨3￨e ;￨3￨e int￨3￨e maxDoc￨3￨e =￨3￨e input￨3￨e .￨3￨e maxDoc￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e partLen￨3￨e =￨3￨e maxDoc￨3￨e /￨3￨e numParts￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c numParts￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l input￨4￨e .￨4￨e undeleteAll￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j seq￨5￨c )￨4￨j {￨4￨j int￨5￨e lo￨5￨e =￨5￨e partLen￨5￨e *￨5￨e i￨5￨e ;￨5￨e int￨5￨e hi￨5￨e =￨5￨e lo￨5￨e +￨5￨e partLen￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c lo￨6￨c ;￨6￨c j￨6￨c ++￨6￨c )￨5￨l {￨5￨l input￨6￨e .￨6￨e deleteDocument￨6￨e (￨6￨e j￨6￨e )￨6￨e ;￨6￨e }￨5￨l if￨5￨j (￨5￨j i￨6￨c <￨6￨c (￨6￨c numParts￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j for￨6￨l (￨6￨l int￨7￨c j￨7￨c =￨7￨c hi￨7￨c ;￨7￨c j￨7￨c <￨7￨c maxDoc￨7￨c ;￨7￨c j￨7￨c ++￨7￨c )￨6￨l {￨6￨l input￨7￨e .￨7￨e deleteDocument￨7￨e (￨7￨e j￨7￨e )￨7￨e ;￨7￨e }￨6￨l }￨5￨j }￨4￨j else￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c maxDoc￨6￨c ;￨6￨c j￨6￨c ++￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j (￨7￨c (￨7￨c (￨7￨c j￨7￨c +￨7￨c numParts￨7￨c )￨7￨c -￨7￨c i￨7￨c )￨7￨c %￨7￨c numParts￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j input￨7￨e .￨7￨e deleteDocument￨7￨e (￨7￨e j￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l }￨4￨j IndexWriter￨4￨e w￨4￨e =￨4￨e new￨4￨e IndexWriter￨4￨e (￨4￨e outputs￨4￨e [￨4￨e i￨4￨e ]￨4￨e ,￨4￨e new￨4￨e IndexWriterConfig￨4￨e (￨4￨e version￨4￨e ,￨4￨e null￨4￨e )￨4￨e .￨4￨e setOpenMode￨4￨e (￨4￨e CREATE￨4￨e )￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e err￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e (￨4￨e "Writing<seq2seq4repair_space>part<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e i￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>..."￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e List￨4￨e <￨4￨e ?￨4￨e extends￨4￨e MultiPassIndexSplitter￨4￨e .￨4￨e FakeDeleteAtomicIndexReader￨4￨e >￨4￨e sr￨4￨e =￨4￨e input￨4￨e .￨4￨e getSequentialSubReaders￨4￨e (￨4￨e )￨4￨e ;￨4￨e w￨4￨e .￨4￨e addIndexes￨4￨e (￨4￨e sr￨4￨e .￨4￨e toArray￨4￨e (￨4￨e new￨4￨e IndexReader￨4￨e [￨4￨e sr￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ]￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b w￨4￨b .￨4￨b close￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨l System￨3￨e .￨3￨e err￨3￨e .￨3￨e println￨3￨e (￨3￨e "Done."￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "deprecation"￨2￨f )￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d final￨2￨d class￨2￨d FakeDeleteIndexReader￨2￨d extends￨2￨d BaseCompositeReader￨2￨d <￨2￨d MultiPassIndexSplitter￨2￨d .￨2￨d FakeDeleteAtomicIndexReader￨2￨d >￨2￨d {￨2￨d public￨3￨f FakeDeleteIndexReader￨3￨f (￨3￨f IndexReader￨4￨p reader￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f static￨3￨f MultiPassIndexSplitter￨3￨f .￨3￨f FakeDeleteAtomicIndexReader￨3￨f [￨3￨f ]￨3￨f initSubReaders￨3￨f (￨3￨f IndexReader￨4￨p reader￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f deleteDocument￨3￨f (￨3￨f int￨4￨p docID￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f undeleteAll￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f doClose￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d final￨2￨d class￨2￨d FakeDeleteAtomicIndexReader￨2￨d extends￨2￨d FilterAtomicReader￨2￨d {￨2￨d FixedBitSet￨3￨e liveDocs￨3￨e ;￨3￨e public￨3￨f FakeDeleteAtomicIndexReader￨3￨f (￨3￨f AtomicReader￨4￨p reader￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f numDocs￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f undeleteAll￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f deleteDocument￨3￨f (￨3￨f int￨4￨p n￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Bits￨3￨f getLiveDocs￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
@￨1￨d Entity￨1￨d @￨1￨d Table￨1￨d (￨1￨d name￨1￨d =￨1￨d "EMP_MBI"￨1￨d )￨1￨d @￨1￨d IdClass￨1￨d (￨1￨d EmpId￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d Employee￨1￨d {￨1￨d @￨2￨e Id￨2￨e int￨2￨e empId￨2￨e ;￨2￨e @￨2￨e Id￨2￨e @￨2￨e Enumerated￨2￨e Employee￨2￨e .￨2￨e EmpType￨2￨e empType￨2￨e ;￨2￨e @￨2￨e OneToOne￨2￨e PhoneNumber￨2￨e phoneNumber￨2￨e ;￨2￨e public￨2￨f PhoneNumber￨2￨f getPhoneNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPhoneNumber￨2￨f (￨2￨f PhoneNumber￨3￨p phoneNumber￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getEmpId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEmpId￨2￨f (￨2￨f int￨3￨p empId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Employee￨2￨f .￨2￨f EmpType￨2￨f getEmpType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEmpType￨2￨f (￨2￨f Employee￨3￨p .￨3￨p EmpType￨3￨p empType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f Employee￨3￨e e￨3￨e =￨3￨e (￨3￨e (￨3￨e Employee￨3￨e )￨3￨e (￨3￨e o￨3￨e )￨3￨e )￨3￨e ;￨3￨e PhoneNumber￨3￨e p￨3￨e =￨3￨e e￨3￨e .￨3￨e getPhoneNumber￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b p￨3￨b .￨3￨b getNumber￨3￨b (￨3￨b )￨3￨b )￨3￨b !=￨3￨b (￨3￨b phoneNumber￨3￨b .￨3￨b getNumber￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b return￨3￨e false￨3￨e ;￨3￨e return￨3￨e true￨3￨e ;￨3￨e }￨2￨f public￨2￨f enum￨2￨f EmpType￨2￨f (￨2￨f )￨2￨f {￨2￨f A1￨3￨e ,￨3￨e A2￨3￨e ,￨3￨e A3￨3￨e ,￨3￨e A4￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d DeferredAttrNSImpl￨1￨d extends￨1￨d AttrNSImpl￨1￨d implements￨1￨d DeferredNode￨1￨d {￨1￨d static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 6074924934945957154L￨2￨e ;￨2￨e protected￨2￨e transient￨2￨e int￨2￨e fNodeIndex￨2￨e ;￨2￨e DeferredAttrNSImpl￨2￨f (￨2￨f DeferredDocumentImpl￨3￨p ownerDocument￨3￨p ,￨3￨p int￨3￨p nodeIndex￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getNodeIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f synchronizeData￨2￨f (￨2￨f )￨2￨f {￨2￨f needsSyncData￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e DeferredDocumentImpl￨3￨e ownerDocument￨3￨e =￨3￨e (￨3￨e (￨3￨e DeferredDocumentImpl￨3￨e )￨3￨e (￨3￨e ownerDocument￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e name￨3￨e =￨3￨e ownerDocument￨3￨e .￨3￨e getNodeName￨3￨e (￨3￨e fNodeIndex￨3￨e )￨3￨e ;￨3￨e int￨3￨e index￨3￨e =￨3￨e name￨3￨e .￨3￨e indexOf￨3￨e (￨3￨e ':'￨3￨e )￨3￨e ;￨3￨e String￨3￨e prefix￨3￨e ;￨3￨e if￨3￨j (￨3￨j index￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j prefix￨4￨e =￨4￨e null￨4￨e ;￨4￨e localName￨4￨e =￨4￨e name￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j prefix￨4￨e =￨4￨e name￨4￨e .￨4￨e substring￨4￨e (￨4￨e 0￨4￨e ,￨4￨e index￨4￨e )￨4￨e ;￨4￨e localName￨4￨e =￨4￨e name￨4￨e .￨4￨e substring￨4￨e (￨4￨e (￨4￨e index￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j isSpecified￨3￨e (￨3￨e (￨3￨e (￨3￨e ownerDocument￨3￨e .￨3￨e getNodeExtra￨3￨e (￨3￨e fNodeIndex￨3￨e )￨3￨e )￨3￨e ==￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e namespaceURI￨3￨e =￨3￨e ownerDocument￨3￨e .￨3￨e getNodeURI￨3￨e (￨3￨e fNodeIndex￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b namespaceURI￨3￨b .￨3￨b length￨3￨b (￨3￨b )￨3￨b )￨3￨b ==￨3￨b 0￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b namespaceURI￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c namespaceURI￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j prefix￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j prefix￨6￨c .￨6￨c equals￨6￨c (￨6￨c "xmlns"￨6￨c )￨6￨c )￨5￨j {￨5￨j namespaceURI￨6￨e =￨6￨e "http://www.w3.org/2000/xmlns/"￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equals￨5￨c (￨5￨c "xmlns"￨5￨c )￨5￨c )￨4￨j {￨4￨j namespaceURI￨5￨e =￨5￨e "http://www.w3.org/2000/xmlns/"￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f protected￨2￨f void￨2￨f synchronizeChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d SuppressWarnings￨1￨d (￨1￨d "serial"￨1￨d )￨1￨d public￨1￨d class￨1￨d SessionConnectEvent￨1￨d extends￨1￨d ApplicationEvent￨1￨d {￨1￨d private￨2￨e final￨2￨e Message￨2￨e <￨2￨e byte￨2￨e [￨2￨e ]￨2￨e >￨2￨e message￨2￨e ;￨2￨e public￨2￨f SessionConnectEvent￨2￨f (￨2￨f Object￨3￨p source￨3￨p ,￨3￨p Message￨3￨p <￨3￨p byte￨3￨p [￨3￨p ]￨3￨p >￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Message￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f getMessage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "SessionConnectEvent:<seq2seq4repair_space>message="￨3￨b +￨3￨b (￨3￨b message￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TableMouseListener￨1￨d extends￨1￨d DoubleClickListener￨1￨d {￨1￨d private￨2￨e TableController￨2￨e controller￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e AddressbookFrameMediator￨2￨e mediator￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TableMouseListener￨2￨f (￨2￨f TableController￨3￨p tableController￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f doubleClick￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c (￨4￨c e￨4￨c .￨4￨c getButton￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c MouseEvent￨4￨c .￨4￨c BUTTON1￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c e￨4￨c .￨4￨c getClickCount￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b Object￨4￨b [￨4￨b ]￨4￨b uids￨4￨b =￨4￨b mediator￨4￨b .￨4￨b getTable￨4￨b (￨4￨b )￨4￨b .￨4￨b getUids￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b IContactStorage￨4￨e folder￨4￨e =￨4￨e (￨4￨e (￨4￨e IContactStorage￨4￨e )￨4￨e (￨4￨e mediator￨4￨e .￨4￨e getTree￨4￨e (￨4￨e )￨4￨e .￨4￨e getSelectedFolder￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c uids￨5￨c .￨5￨c length￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j IContactModel￨4￨e card￨4￨e =￨4￨e null￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f card￨5￨e =￨5￨e (￨5￨e (￨5￨e IContactModel￨5￨e )￨5￨e (￨5￨e folder￨5￨e .￨5￨e get￨5￨e (￨5￨e uids￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p ex￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j Logging￨6￨c .￨6￨c DEBUG￨6￨c )￨5￨j {￨5￨j ex￨6￨e .￨6￨e printStackTrace￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j ErrorDialog￨5￨e .￨5￨e createDialog￨5￨e (￨5￨e ex￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e ,￨5￨e ex￨5￨e )￨5￨e ;￨5￨e }￨4￨f ContactEditorDialog￨4￨e dialog￨4￨e =￨4￨e new￨4￨e ContactEditorDialog￨4￨e (￨4￨e mediator￨4￨e .￨4￨e getView￨4￨e (￨4￨e )￨4￨e .￨4￨e getFrame￨4￨e (￨4￨e )￨4￨e ,￨4￨e (￨4￨e (￨4￨e ContactModel￨4￨e )￨4￨e (￨4￨e card￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j dialog￨5￨c .￨5￨c getResult￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f folder￨6￨e .￨6￨e modify￨6￨e (￨6￨e uids￨6￨e [￨6￨e 0￨6￨e ]￨6￨e ,￨6￨e card￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f Exception￨6￨p e1￨6￨p )￨5￨f {￨5￨f if￨6￨j (￨6￨j Logging￨7￨c .￨7￨c DEBUG￨7￨c )￨6￨j {￨6￨j e1￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j ErrorDialog￨6￨e .￨6￨e createDialog￨6￨e (￨6￨e e1￨6￨e .￨6￨e getMessage￨6￨e (￨6￨e )￨6￨e ,￨6￨e e1￨6￨e )￨6￨e ;￨6￨e }￨5￨f if￨5￨j (￨5￨j folder￨6￨c instanceof￨6￨c GroupFolder￨6￨c )￨5￨j {￨5￨j mediator￨6￨e .￨6￨e getTree￨6￨e (￨6￨e )￨6￨e .￨6￨e setSelectedFolder￨6￨e (￨6￨e (￨6￨e (￨6￨e AbstractFolder￨6￨e )￨6￨e (￨6￨e folder￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DebugComponent￨1￨d extends￨1￨d SearchComponent￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMPONENT_NAME￨2￨e =￨2￨e "debug"￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f prepare￨2￨f (￨2￨f ResponseBuilder￨2￨f rb￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f process￨2￨f (￨2￨f ResponseBuilder￨2￨f rb￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyRequest￨2￨f (￨2￨f ResponseBuilder￨3￨p rb￨3￨p ,￨3￨p SearchComponent￨3￨p who￨3￨p ,￨3￨p ShardRequest￨3￨p sreq￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f handleResponses￨2￨f (￨2￨f ResponseBuilder￨3￨p rb￨3￨p ,￨3￨p ShardRequest￨3￨p sreq￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e Set￨2￨e <￨2￨e String￨2￨e >￨2￨e excludeSet￨2￨e =￨2￨e new￨2￨e HashSet￨2￨e <￨2￨e String￨2￨e >￨2￨e (￨2￨e Arrays￨2￨e .￨2￨e asList￨2￨e (￨2￨e "explain"￨2￨e )￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f finishStage￨2￨f (￨2￨f ResponseBuilder￨3￨p rb￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c rb￨4￨c .￨4￨c isDebug￨4￨c (￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c rb￨4￨c .￨4￨c stage￨4￨c )￨4￨c ==￨4￨c (￨4￨c ResponseBuilder￨4￨c .￨4￨c STAGE_GET_FIELDS￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j NamedList￨4￨e info￨4￨e =￨4￨e null￨4￨e ;￨4￨e NamedList￨4￨e explain￨4￨e =￨4￨e new￨4￨e SimpleOrderedMap￨4￨e (￨4￨e )￨4￨e ;￨4￨e Object￨4￨e [￨4￨e ]￨4￨e arr￨4￨e =￨4￨e new￨4￨e Object￨4￨e [￨4￨e (￨4￨e rb￨4￨e .￨4￨e resultIds￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e )￨4￨e *￨4￨e 2￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l ShardRequest￨5￨c sreq￨5￨c :￨5￨c rb￨5￨c .￨5￨c finished￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c (￨6￨c sreq￨6￨c .￨6￨c purpose￨6￨c )￨6￨c &￨6￨c (￨6￨c ShardRequest￨6￨c .￨6￨c PURPOSE_GET_DEBUG￨6￨c )￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j continue￨6￨e ;￨6￨e }￨5￨j for￨5￨l (￨5￨l ShardResponse￨6￨c srsp￨6￨c :￨6￨c sreq￨6￨c .￨6￨c responses￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b NamedList￨6￨b sdebug￨6￨b =￨6￨b (￨6￨b (￨6￨b NamedList￨6￨b )￨6￨b (￨6￨b srsp￨6￨b .￨6￨b rsp￨6￨b .￨6￨b getResponse￨6￨b (￨6￨b )￨6￨b .￨6￨b get￨6￨b (￨6￨b "debug"￨6￨b )￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b info￨6￨e =￨6￨e (￨6￨e (￨6￨e NamedList￨6￨e )￨6￨e (￨6￨e merge￨6￨e (￨6￨e sdebug￨6￨e ,￨6￨e info￨6￨e ,￨6￨e excludeSet￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e NamedList￨6￨e sexplain￨6￨e =￨6￨e (￨6￨e (￨6￨e NamedList￨6￨e )￨6￨e (￨6￨e sdebug￨6￨e .￨6￨e get￨6￨e (￨6￨e "explain"￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ;￨7￨c i￨7￨c <￨7￨c (￨7￨c sexplain￨7￨c .￨7￨c size￨7￨c (￨7￨c )￨7￨c )￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l String￨7￨e id￨7￨e =￨7￨e sexplain￨7￨e .￨7￨e getName￨7￨e (￨7￨e i￨7￨e )￨7￨e ;￨7￨e ShardDoc￨7￨e sdoc￨7￨e =￨7￨e rb￨7￨e .￨7￨e resultIds￨7￨e .￨7￨e get￨7￨e (￨7￨e id￨7￨e )￨7￨e ;￨7￨e int￨7￨e idx￨7￨e =￨7￨e sdoc￨7￨e .￨7￨e positionInResponse￨7￨e ;￨7￨e arr￨7￨e [￨7￨e (￨7￨e idx￨7￨e <<￨7￨e 1￨7￨e )￨7￨e ]￨7￨e =￨7￨e id￨7￨e ;￨7￨e arr￨7￨e [￨7￨e (￨7￨e (￨7￨e idx￨7￨e <<￨7￨e 1￨7￨e )￨7￨e +￨7￨e 1￨7￨e )￨7￨e ]￨7￨e =￨7￨e sexplain￨7￨e .￨7￨e getVal￨7￨e (￨7￨e i￨7￨e )￨7￨e ;￨7￨e }￨6￨l }￨5￨l }￨4￨l explain￨4￨e =￨4￨e HighlightComponent￨4￨e .￨4￨e removeNulls￨4￨e (￨4￨e new￨4￨e SimpleOrderedMap￨4￨e (￨4￨e Arrays￨4￨e .￨4￨e asList￨4￨e (￨4￨e arr￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j info￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j info￨5￨e =￨5￨e new￨5￨e SimpleOrderedMap￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j int￨4￨e idx￨4￨e =￨4￨e info￨4￨e .￨4￨e indexOf￨4￨e (￨4￨e "explain"￨4￨e ,￨4￨e 0￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j idx￨5￨c >=￨5￨c 0￨5￨c )￨4￨j {￨4￨j info￨5￨e .￨5￨e setVal￨5￨e (￨5￨e idx￨5￨e ,￨5￨e explain￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j info￨5￨e .￨5￨e add￨5￨e (￨5￨e "explain"￨5￨e ,￨5￨e explain￨5￨e )￨5￨e ;￨5￨e }￨4￨j rb￨4￨e .￨4￨e setDebugInfo￨4￨e (￨4￨e info￨4￨e )￨4￨e ;￨4￨e rb￨4￨e .￨4￨e rsp￨4￨e .￨4￨e add￨4￨e (￨4￨e "debug"￨4￨e ,￨4￨e rb￨4￨e .￨4￨e getDebugInfo￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f Object￨2￨f merge￨2￨f (￨2￨f Object￨3￨p source￨3￨p ,￨3￨p Object￨3￨p dest￨3￨p ,￨3￨p Set￨3￨p <￨3￨p String￨3￨p >￨3￨p exclude￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getDescription￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getVersion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getSourceId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getSource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f URL￨2￨f [￨2￨f ]￨2￨f getDocs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SingleSignOnEntry￨1￨d extends￨1￨d org￨1￨d .￨1￨d apache￨1￨d .￨1￨d catalina￨1￨d .￨1￨d authenticator￨1￨d .￨1￨d SingleSignOnEntry￨1￨d {￨1￨d public￨2￨f SingleSignOnEntry￨2￨f (￨2￨f Principal￨3￨p principal￨3￨p ,￨3￨p String￨3￨p authType￨3￨p ,￨3￨p String￨3￨p username￨3￨p ,￨3￨p String￨3￨p password￨3￨p )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f boolean￨2￨f addSession2￨2￨f (￨2￨f SingleSignOn￨3￨p sso￨3￨p ,￨3￨p Session￨3￨p session￨3￨p )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f boolean￨2￨f removeSession2￨2￨f (￨2￨f Session￨3￨p session￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setPrincipal￨2￨f (￨2￨f Principal￨3￨p principal￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f getSessionCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f updateCredentials￨2￨f (￨2￨f Principal￨3￨p principal￨3￨p ,￨3￨p String￨3￨p authType￨3￨p ,￨3￨p String￨3￨p username￨3￨p ,￨3￨p String￨3￨p password￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f boolean￨2￨f updateCredentials2￨2￨f (￨2￨f Principal￨3￨p principal￨3￨p ,￨3￨p String￨3￨p authType￨3￨p ,￨3￨p String￨3￨p username￨3￨p ,￨3￨p String￨3￨p password￨3￨p )￨2￨f {￨2￨f boolean￨3￨e changed￨3￨e =￨3￨e (￨3￨e (￨3￨e (￨3￨e safeEquals￨3￨e (￨3￨e this￨3￨e .￨3￨e principal￨3￨e ,￨3￨e principal￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e safeEquals￨3￨e (￨3￨e this￨3￨e .￨3￨e authType￨3￨e ,￨3￨e authType￨3￨e )￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e safeEquals￨3￨e (￨3￨e this￨3￨e .￨3￨e username￨3￨e ,￨3￨e username￨3￨e )￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e safeEquals￨3￨e (￨3￨e this￨3￨e .￨3￨e password￨3￨e ,￨3￨e password￨3￨e )￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e principal￨3￨e =￨3￨e principal￨3￨e ;￨3￨e this￨3￨e .￨3￨e authType￨3￨e =￨3￨e authType￨3￨e ;￨3￨e this￨3￨e .￨3￨e username￨3￨e =￨3￨e username￨3￨e ;￨3￨e this￨3￨e .￨3￨e password￨3￨e =￨3￨e password￨3￨e ;￨3￨e <START_BUG>￨3￨b this￨3￨b .￨3￨b canReauthenticate￨3￨b =￨3￨b (￨3￨b BASIC_AUTH￨3￨b .￨3￨b equals￨3￨b (￨3￨b authType￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b FORM_AUTH￨3￨b .￨3￨b equals￨3￨b (￨3￨b authType￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e changed￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f safeEquals￨2￨f (￨2￨f Object￨3￨p a￨3￨p ,￨3￨p Object￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d closed￨1￨d implements￨1￨d Runnable￨1￨d {￨1￨d private￨2￨e static￨2￨e boolean￨2￨e jsr169_test￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f shutdownTest￨2￨f (￨2￨f String￨2￨f databaseName￨2￨f ,￨2￨f String￨2￨f shutdownString￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e Connection￨2￨e cc￨2￨e ;￨2￨e private￨2￨e String￨2￨e sql￨2￨e ;￨2￨e String￨2￨e result￨2￨e ;￨2￨e private￨2￨f closed￨2￨f (￨2￨f Connection￨3￨p cc￨3￨p ,￨3￨p String￨3￨p sql￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f cc￨4￨e .￨4￨e createStatement￨4￨e (￨4￨e )￨4￨e .￨4￨e execute￨4￨e (￨4￨e sql￨4￨e )￨4￨e ;￨4￨e result￨4￨e =￨4￨e "Sleep<seq2seq4repair_space>thread<seq2seq4repair_space>completed<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e sql￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f SQLException￨4￨p sqle￨4￨p )￨3￨f {￨3￨f StringBuffer￨4￨e sb￨4￨e =￨4￨e new￨4￨e StringBuffer￨4￨e (￨4￨e )￨4￨e ;￨4￨e sb￨4￨e .￨4￨e append￨4￨e (￨4￨e sql￨4￨e )￨4￨e ;￨4￨e sb￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>-<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e sb￨4￨e .￨4￨e append￨4￨e (￨4￨e sqle￨4￨e .￨4￨e getSQLState￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l sqle￨5￨c !=￨5￨c null￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j sqle￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j sb￨6￨e .￨6￨e append￨6￨e (￨6￨e ",<seq2seq4repair_space>"￨6￨e )￨6￨e ;￨6￨e sb￨6￨e .￨6￨e append￨6￨e (￨6￨e sqle￨6￨e .￨6￨e getSQLState￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e sb￨6￨e .￨6￨e append￨6￨e (￨6￨e "<seq2seq4repair_space>--<seq2seq4repair_space>"￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c sqle￨7￨c .￨7￨c getMessage￨7￨c (￨7￨c )￨7￨c .￨7￨c indexOf￨7￨c (￨7￨c "InterruptedException"￨7￨c )￨7￨c )￨7￨c !=￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨6￨j {￨6￨j sb￨7￨e .￨7￨e append￨7￨e (￨7￨e "InterruptedException"￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j sb￨7￨e .￨7￨e append￨7￨e (￨7￨e sqle￨7￨e .￨7￨e getMessage￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e <START_BUG>￨7￨b sqle￨7￨b .￨7￨b printStackTrace￨7￨b (￨7￨b )￨7￨b ;￨7￨b <END_BUG>￨7￨b }￨6￨j }￨5￨j else￨5￨j {￨5￨j sb￨6￨e .￨6￨e append￨6￨e (￨6￨e sqle￨6￨e .￨6￨e getMessage￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j sqle￨5￨e =￨5￨e sqle￨5￨e .￨5￨e getNextException￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l result￨4￨e =￨4￨e sb￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f static￨2￨f boolean￨2￨f testStatement￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f testPreparedStatement￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f testResultSet￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f testConnection￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f testDerby62￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JPADependencyProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JAVAX_PERSISTENCE_API_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "javax.persistence.api"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JAVAEE_API_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "javaee.api"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JBOSS_AS_JPA_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.as.jpa"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JBOSS_HIBERNATE_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.hibernate"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e JAVASSIST_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.javassist"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModuleIdentifier￨2￨e NAMING_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e "org.jboss.as.naming"￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addDependency￨2￨f (￨2￨f ModuleSpecification￨3￨p moduleSpecification￨3￨p ,￨3￨p ModuleLoader￨3￨p moduleLoader￨3￨p ,￨3￨p ModuleIdentifier￨3￨p moduleIdentifier￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b moduleSpecification￨3￨b .￨3￨b addDependency￨3￨b (￨3￨b new￨3￨b org￨3￨b .￨3￨b jboss￨3￨b .￨3￨b as￨3￨b .￨3￨b server￨3￨b .￨3￨b deployment￨3￨b .￨3￨b module￨3￨b .￨3￨b ModuleDependency￨3￨b (￨3￨b moduleLoader￨3￨b ,￨3￨b moduleIdentifier￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ClusterCompiler￨1￨d {￨1￨d private￨2￨e int￨2￨e nbClassArgs￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e classes￨2￨e ;￨2￨e public￨2￨f ClusterCompiler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generate￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f ClusterConf￨3￨e cconf￨3￨e =￨3￨e new￨3￨e ClusterConf￨3￨e (￨3￨e )￨3￨e ;￨3￨e CompilerContext￨3￨e cmpCtx￨3￨e =￨3￨e new￨3￨e CompilerContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e prepare￨3￨e (￨3￨e args￨3￨e ,￨3￨e cmpCtx￨3￨e ,￨3￨e cconf￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c cmpCtx￨4￨c .￨4￨c clusterCfgGen￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j FileWriter￨4￨e f￨4￨e =￨4￨e new￨4￨e FileWriter￨4￨e (￨4￨e cmpCtx￨4￨e .￨4￨e clusterCfgGen￨4￨e )￨4￨e ;￨4￨e f￨4￨e .￨4￨e write￨4￨e (￨4￨e "<!DOCTYPE<seq2seq4repair_space>cluster-config<seq2seq4repair_space>PUBLIC\n"￨4￨e )￨4￨e ;￨4￨e f￨4￨e .￨4￨e write￨4￨e (￨4￨e "\t\"\"\n"￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b f￨4￨b .￨4￨b write￨4￨b (￨4￨b "\t\"cluster-config.dtd\">\n\n"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b f￨4￨e .￨4￨e write￨4￨e (￨4￨e "<cluster-config>\n\n"￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c nbClassArgs￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e className￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e classes￨5￨e .￨5￨e elementAt￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c className￨6￨c ==￨6￨c null￨6￨c )￨6￨c ||￨6￨c (￨6￨c className￨6￨c ==￨6￨c ""￨6￨c )￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e Exception￨6￨e (￨6￨e "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨6￨e )￨6￨e ;￨6￨e }￨5￨j f￨5￨e .￨5￨e write￨5￨e (￨5￨e (￨5￨e (￨5￨e "<class>\n\t<name>"￨5￨e +￨5￨e className￨5￨e )￨5￨e +￨5￨e "</name>\n\n"￨5￨e )￨5￨e )￨5￨e ;￨5￨e ClassContext￨5￨e clCtx￨5￨e =￨5￨e new￨5￨e ClassContext￨5￨e (￨5￨e cmpCtx￨5￨e ,￨5￨e className￨5￨e )￨5￨e ;￨5￨e MethodContext￨5￨e [￨5￨e ]￨5￨e remMths￨5￨e =￨5￨e clCtx￨5￨e .￨5￨e getRemoteMethodContexts￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c (￨6￨c remMths￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c j￨6￨c ++￨6￨c )￨5￨l {￨5￨l f￨6￨e .￨6￨e write￨6￨e (￨6￨e "\t<method>\n\t\t<signature>"￨6￨e )￨6￨e ;￨6￨e f￨6￨e .￨6￨e write￨6￨e (￨6￨e remMths￨6￨e [￨6￨e j￨6￨e ]￨6￨e .￨6￨e mth￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e f￨6￨e .￨6￨e write￨6￨e (￨6￨e "</signature>\n\t\t<one-choice/>\n\t</method>\n\n"￨6￨e )￨6￨e ;￨6￨e }￨5￨l f￨5￨e .￨5￨e write￨5￨e (￨5￨e "</class>\n\n"￨5￨e )￨5￨e ;￨5￨e }￨4￨l f￨4￨e .￨4￨e write￨4￨e (￨4￨e "</cluster-config>\n"￨4￨e )￨4￨e ;￨4￨e f￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c nbClassArgs￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e className￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e classes￨5￨e .￨5￨e elementAt￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c className￨6￨c ==￨6￨c null￨6￨c )￨6￨c ||￨6￨c (￨6￨c className￨6￨c ==￨6￨c ""￨6￨c )￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e Exception￨6￨e (￨6￨e "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨6￨e )￨6￨e ;￨6￨e }￨5￨j ClusterConfigCompiler￨5￨e ccc￨5￨e =￨5￨e new￨5￨e ClusterConfigCompiler￨5￨e (￨5￨e cmpCtx￨5￨e )￨5￨e ;￨5￨e ccc￨5￨e .￨5￨e run￨5￨e (￨5￨e className￨5￨e ,￨5￨e cconf￨5￨e )￨5￨e ;￨5￨e ClusterStubCompiler￨5￨e csc￨5￨e =￨5￨e new￨5￨e ClusterStubCompiler￨5￨e (￨5￨e cmpCtx￨5￨e )￨5￨e ;￨5￨e csc￨5￨e .￨5￨e run￨5￨e (￨5￨e className￨5￨e ,￨5￨e cconf￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j }￨2￨f private￨2￨f void￨2￨f prepare￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f ,￨2￨f CompilerContext￨2￨f ctxt￨2￨f ,￨2￨f ClusterConf￨2￨f cconf￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f usage￨2￨f (￨2￨f CompilerContext￨3￨p ctxt￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f warning￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d ClasspathDirectory￨1￨d extends￨1￨d ClasspathLocation￨1￨d {￨1￨d String￨2￨e binaryPath￨2￨e ;￨2￨e LookupTable￨2￨e missingPackages￨2￨e ;￨2￨e LookupTable￨2￨e directoryCache￨2￨e ;￨2￨e ClasspathDirectory￨2￨f (￨2￨f String￨3￨p binaryPath￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f directoryList￨2￨f (￨2￨f String￨3￨p pathPrefix￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p compoundName￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f exists￨2￨f (￨2￨f String￨3￨p pathPrefix￨3￨p ,￨3￨p String￨3￨p filename￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f NameEnvironmentAnswer￨2￨f findClass￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p className￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isPackage￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p compoundName￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "ClasspathDirectory<seq2seq4repair_space>"￨3￨b +￨3￨b (￨3￨b binaryPath￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JcaExtension￨1￨d implements￨1￨d Extension￨1￨d {￨1￨d public￨2￨e static￨2￨e String￨2￨e SUBSYSTEM_NAME￨2￨e =￨2￨e "jca"￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f final￨3￨p ExtensionContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initializeParsers￨2￨f (￨2￨f final￨3￨p ExtensionParsingContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ModelNode￨2￨f createEmptyAddOperation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d final￨2￨d class￨2￨d ConnectorSubsystemParser￨2￨d implements￨2￨d XMLStreamConstants￨2￨d ,￨2￨d XMLElementReader￨2￨d <￨2￨d List￨2￨d <￨2￨d ModelNode￨2￨d >￨2￨d >￨2￨d ,￨2￨d XMLElementWriter￨2￨d <￨2￨d SubsystemMarshallingContext￨2￨d >￨2￨d {￨2￨d static￨3￨e final￨3￨e JcaExtension￨3￨e .￨3￨e ConnectorSubsystemParser￨3￨e INSTANCE￨3￨e =￨3￨e new￨3￨e JcaExtension￨3￨e .￨3￨e ConnectorSubsystemParser￨3￨e (￨3￨e )￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f writeContent￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f SubsystemMarshallingContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeArchiveValidation￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeBeanValidation￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeCachedConnectionManager￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeWorkManagers￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c parentNode￨5￨c .￨5￨c hasDefined￨5￨c (￨5￨c Constants￨5￨c .￨5￨c WORKMANAGER￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c parentNode￨5￨c .￨5￨c get￨5￨c (￨5￨c Constants￨5￨c .￨5￨c WORKMANAGER￨5￨c )￨5￨c .￨5￨c asList￨5￨c (￨5￨c )￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l Property￨6￨c property￨6￨c :￨6￨c parentNode￨6￨c .￨6￨c get￨6￨c (￨6￨c Constants￨6￨c .￨6￨c WORKMANAGER￨6￨c )￨6￨c .￨6￨c asPropertyList￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j "default"￨7￨c .￨7￨c equals￨7￨c (￨7￨c property￨7￨c .￨7￨c getValue￨7￨c (￨7￨c )￨7￨c .￨7￨c get￨7￨c (￨7￨c NAME￨7￨c )￨7￨c .￨7￨c asString￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j writer￨7￨e .￨7￨e writeStartElement￨7￨e (￨7￨e DEFAULT_WORKMANAGER￨7￨e .￨7￨e getLocalName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j writer￨7￨e .￨7￨e writeStartElement￨7￨e (￨7￨e WORKMANAGER￨7￨e .￨7￨e getLocalName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e WorkManagerAdd￨7￨e .￨7￨e WmParameters￨7￨e .￨7￨e NAME￨7￨e .￨7￨e getAttribute￨7￨e (￨7￨e )￨7￨e .￨7￨e marshallAsAttribute￨7￨e (￨7￨e property￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e ,￨7￨e writer￨7￨e )￨7￨e ;￨7￨e }￨6￨j for￨6￨l (￨6￨l Property￨7￨c prop￨7￨c :￨7￨c property￨7￨c .￨7￨c getValue￨7￨c (￨7￨c )￨7￨c .￨7￨c asPropertyList￨7￨c (￨7￨c )￨7￨c )￨6￨l {￨6￨l <START_BUG>￨7￨b if￨7￨b (￨7￨b Constants￨7￨b .￨7￨b WORKMANAGER_LONG_RUNNING￨7￨b .￨7￨b equals￨7￨b (￨7￨b prop￨7￨b .￨7￨b getName￨7￨b (￨7￨b )￨7￨b )￨7￨b )￨7￨b {￨7￨b <END_BUG>￨7￨b ThreadsParser￨7￨e .￨7￨e getInstance￨7￨e (￨7￨e )￨7￨e .￨7￨e writeBoundedQueueThreadPool￨7￨e (￨7￨e writer￨7￨e ,￨7￨e prop￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e .￨7￨e asProperty￨7￨e (￨7￨e )￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e ,￨7￨e LONG_RUNNING_THREADS￨7￨e .￨7￨e getLocalName￨7￨e (￨7￨e )￨7￨e ,￨7￨e false￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j Constants￨8￨c .￨8￨c WORKMANAGER_SHORT_RUNNING￨8￨c .￨8￨c equals￨8￨c (￨8￨c prop￨8￨c .￨8￨c getName￨8￨c (￨8￨c )￨8￨c )￨8￨c )￨7￨j {￨7￨j ThreadsParser￨8￨e .￨8￨e getInstance￨8￨e (￨8￨e )￨8￨e .￨8￨e writeBoundedQueueThreadPool￨8￨e (￨8￨e writer￨8￨e ,￨8￨e prop￨8￨e .￨8￨e getValue￨8￨e (￨8￨e )￨8￨e .￨8￨e asProperty￨8￨e (￨8￨e )￨8￨e .￨8￨e getValue￨8￨e (￨8￨e )￨8￨e ,￨8￨e SHORT_RUNNING_THREADS￨8￨e .￨8￨e getLocalName￨8￨e (￨8￨e )￨8￨e ,￨8￨e false￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨l writer￨6￨e .￨6￨e writeEndElement￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j }￨3￨f private￨3￨f void￨3￨f writeBootstrapContexts￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f boolean￨3￨f hasAnyOf￨3￨f (￨3￨f ModelNode￨4￨p node￨4￨p ,￨4￨p String￨4￨p ...￨4￨p names￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f boolean￨3￨f has￨3￨f (￨3￨f ModelNode￨4￨p node￨4￨p ,￨4￨p String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeAttribute￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f final￨3￨f Attribute￨3￨f attr￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f value￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f readElement￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseArchiveValidation￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f parseWorkManager￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentAddress￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f node￨3￨f ,￨3￨f boolean￨3￨f defaultWm￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseBeanValidation￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseCcm￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseBootstrapContexts￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentAddress￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f rawElementText￨3￨f (￨3￨f XMLStreamReader￨3￨f reader￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f rawAttributeText￨3￨f (￨3￨f XMLStreamReader￨4￨p reader￨4￨p ,￨4￨p String￨4￨p attributeName￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d public￨2￨f void￨2￨f registerCustomEditor￨2￨f (￨2￨f Class￨3￨p requiredType￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p extends￨3￨p PropertyEditor￨3￨p >￨3￨p propertyEditorClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyRegisteredEditorsTo￨2￨f (￨2￨f PropertyEditorRegistry￨3￨p registry￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f Class￨2￨f ,￨2￨f Class￨2￨f <￨2￨f ?￨2￨f extends￨2￨f PropertyEditor￨2￨f >￨2￨f >￨2￨f getCustomEditors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTypeConverter￨2￨f (￨2￨f TypeConverter￨3￨p typeConverter￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f TypeConverter￨2￨f getCustomTypeConverter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeConverter￨2￨f getTypeConverter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addEmbeddedValueResolver￨2￨f (￨2￨f StringValueResolver￨3￨p valueResolver￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f resolveEmbeddedValue￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addBeanPostProcessor￨2￨f (￨2￨f BeanPostProcessor￨3￨p beanPostProcessor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getBeanPostProcessorCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f BeanPostProcessor￨2￨f >￨2￨f getBeanPostProcessors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f hasInstantiationAwareBeanPostProcessors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f hasDestructionAwareBeanPostProcessors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f registerScope￨2￨f (￨2￨f String￨3￨p scopeName￨3￨p ,￨3￨p Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getRegisteredScopeNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Scope￨2￨f getRegisteredScope￨2￨f (￨2￨f String￨3￨p scopeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSecurityContextProvider￨2￨f (￨2￨f SecurityContextProvider￨3￨p securityProvider￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f AccessControlContext￨2￨f getAccessControlContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyConfigurationFrom￨2￨f (￨2￨f ConfigurableBeanFactory￨3￨p otherFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BeanDefinition￨2￨f getMergedBeanDefinition￨2￨f (￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f BeansException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFactoryBean￨2￨f (￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f NoSuchBeanDefinitionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f void￨2￨f beforePrototypeCreation￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f void￨2￨f afterPrototypeCreation￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f boolean￨2￨f isPrototypeCurrentlyInCreation￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCurrentlyInCreation￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f destroyBean￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p Object￨3￨p beanInstance￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f destroyBean￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p Object￨3￨p beanInstance￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f destroyScopedBean￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f transformedBeanName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f originalBeanName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initBeanWrapper￨2￨f (￨2￨f BeanWrapper￨3￨p bw￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f registerCustomEditors￨2￨f (￨2￨f PropertyEditorRegistry￨3￨p registry￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f RootBeanDefinition￨2￨f getMergedLocalBeanDefinition￨2￨f (￨2￨f String￨2￨f beanName￨2￨f )￨2￨f throws￨2￨f BeansException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f RootBeanDefinition￨2￨f getMergedBeanDefinition￨2￨f (￨2￨f String￨2￨f beanName￨2￨f ,￨2￨f BeanDefinition￨2￨f bd￨2￨f )￨2￨f throws￨2￨f BeanDefinitionStoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f RootBeanDefinition￨2￨f getMergedBeanDefinition￨2￨f (￨2￨f String￨2￨f beanName￨2￨f ,￨2￨f BeanDefinition￨2￨f bd￨2￨f ,￨2￨f BeanDefinition￨2￨f containingBd￨2￨f )￨2￨f throws￨2￨f BeanDefinitionStoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f synchronized￨3￨f (￨3￨f this￨4￨p .￨4￨p mergedBeanDefinitions￨4￨p )￨3￨f {￨3￨f RootBeanDefinition￨4￨e mbd￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j containingBd￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j mbd￨5￨e =￨5￨e this￨5￨e .￨5￨e mergedBeanDefinitions￨5￨e .￨5￨e get￨5￨e (￨5￨e beanName￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j mbd￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c bd￨6￨c .￨6￨c getParentName￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j bd￨7￨c instanceof￨7￨c RootBeanDefinition￨7￨c )￨6￨j {￨6￨j mbd￨7￨e =￨7￨e (￨7￨e (￨7￨e RootBeanDefinition￨7￨e )￨7￨e (￨7￨e bd￨7￨e )￨7￨e )￨7￨e .￨7￨e cloneBeanDefinition￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j mbd￨7￨e =￨7￨e new￨7￨e RootBeanDefinition￨7￨e (￨7￨e bd￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j BeanDefinition￨6￨e pbd￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f String￨7￨e parentBeanName￨7￨e =￨7￨e transformedBeanName￨7￨e (￨7￨e bd￨7￨e .￨7￨e getParentName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j !￨8￨c (￨8￨c beanName￨8￨c .￨8￨c equals￨8￨c (￨8￨c parentBeanName￨8￨c )￨8￨c )￨8￨c )￨7￨j {￨7￨j pbd￨8￨e =￨8￨e getMergedBeanDefinition￨8￨e (￨8￨e parentBeanName￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j {￨7￨j if￨8￨j (￨8￨j (￨9￨c getParentBeanFactory￨9￨c (￨9￨c )￨9￨c )￨9￨c instanceof￨9￨c ConfigurableBeanFactory￨9￨c )￨8￨j {￨8￨j pbd￨9￨e =￨9￨e (￨9￨e (￨9￨e ConfigurableBeanFactory￨9￨e )￨9￨e (￨9￨e getParentBeanFactory￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e .￨9￨e getMergedBeanDefinition￨9￨e (￨9￨e parentBeanName￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j {￨8￨j throw￨9￨e new￨9￨e NoSuchBeanDefinitionException￨9￨e (￨9￨e bd￨9￨e .￨9￨e getParentName￨9￨e (￨9￨e )￨9￨e ,￨9￨e (￨9￨e (￨9￨e (￨9￨e (￨9￨e "Parent<seq2seq4repair_space>name<seq2seq4repair_space>'"￨9￨e +￨9￨e (￨9￨e bd￨9￨e .￨9￨e getParentName￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e +￨9￨e "'<seq2seq4repair_space>is<seq2seq4repair_space>equal<seq2seq4repair_space>to<seq2seq4repair_space>bean<seq2seq4repair_space>name<seq2seq4repair_space>'"￨9￨e )￨9￨e +￨9￨e beanName￨9￨e )￨9￨e +￨9￨e "':<seq2seq4repair_space>cannot<seq2seq4repair_space>be<seq2seq4repair_space>resolved<seq2seq4repair_space>without<seq2seq4repair_space>an<seq2seq4repair_space>AbstractBeanFactory<seq2seq4repair_space>parent"￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨j }￨6￨f catch￨6￨f (￨6￨f NoSuchBeanDefinitionException￨7￨p ex￨7￨p )￨6￨f {￨6￨f throw￨7￨e new￨7￨e BeanDefinitionStoreException￨7￨e (￨7￨e bd￨7￨e .￨7￨e getResourceDescription￨7￨e (￨7￨e )￨7￨e ,￨7￨e beanName￨7￨e ,￨7￨e (￨7￨e (￨7￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>parent<seq2seq4repair_space>bean<seq2seq4repair_space>definition<seq2seq4repair_space>'"￨7￨e +￨7￨e (￨7￨e bd￨7￨e .￨7￨e getParentName￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e +￨7￨e "'"￨7￨e )￨7￨e ,￨7￨e ex￨7￨e )￨7￨e ;￨7￨e }￨6￨f mbd￨6￨e =￨6￨e new￨6￨e RootBeanDefinition￨6￨e (￨6￨e pbd￨6￨e )￨6￨e ;￨6￨e mbd￨6￨e .￨6￨e overrideFrom￨6￨e (￨6￨e bd￨6￨e )￨6￨e ;￨6￨e }￨5￨j <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b mbd￨5￨b .￨5￨b getScope￨5￨b (￨5￨b )￨5￨b )￨5￨b ==￨5￨b null￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b mbd￨5￨e .￨5￨e setScope￨5￨e (￨5￨e SCOPE_SINGLETON￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c containingBd￨6￨c !=￨6￨c null￨6￨c )￨6￨c &&￨6￨c (￨6￨c !￨6￨c (￨6￨c containingBd￨6￨c .￨6￨c isSingleton￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c mbd￨6￨c .￨6￨c isSingleton￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j mbd￨6￨e .￨6￨e setScope￨6￨e (￨6￨e containingBd￨6￨e .￨6￨e getScope￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c containingBd￨6￨c ==￨6￨c null￨6￨c )￨6￨c &&￨6￨c (￨6￨c isCacheBeanMetadata￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c isBeanEligibleForMetadataCaching￨6￨c (￨6￨c beanName￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e mergedBeanDefinitions￨6￨e .￨6￨e put￨6￨e (￨6￨e beanName￨6￨e ,￨6￨e mbd￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j return￨4￨e mbd￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f void￨2￨f checkMergedBeanDefinition￨2￨f (￨2￨f RootBeanDefinition￨2￨f mbd￨2￨f ,￨2￨f String￨2￨f beanName￨2￨f ,￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f BeanDefinitionStoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f clearMergedBeanDefinition￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f resolveBeanClass￨2￨f (￨2￨f RootBeanDefinition￨3￨p mbd￨3￨p ,￨3￨p String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f resolveBeanClass￨2￨f (￨2￨f final￨2￨f RootBeanDefinition￨2￨f mbd￨2￨f ,￨2￨f String￨2￨f beanName￨2￨f ,￨2￨f final￨2￨f Class￨2￨f [￨2￨f ]￨2￨f typesToMatch￨2￨f )￨2￨f throws￨2￨f CannotLoadBeanClassException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Class￨2￨f doResolveBeanClass￨2￨f (￨2￨f final￨2￨f RootBeanDefinition￨2￨f mbd￨2￨f ,￨2￨f final￨2￨f Class￨2￨f [￨2￨f ]￨2￨f typesToMatch￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f evaluateBeanDefinitionString￨2￨f (￨2￨f String￨3￨p value￨3￨p ,￨3￨p BeanDefinition￨3￨p beanDefinition￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f predictBeanType￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p ,￨3￨p Class￨3￨p [￨3￨p ]￨3￨p typesToMatch￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isFactoryBean￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f getTypeForFactoryBean￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f markBeanAsCreated￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isBeanEligibleForMetadataCaching￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f removeSingletonIfCreatedForTypeCheckOnly￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f getObjectForBeanInstance￨2￨f (￨2￨f Object￨3￨p beanInstance￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p beanName￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isBeanNameInUse￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f requiresDestruction￨2￨f (￨2￨f Object￨3￨p bean￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f registerDisposableBeanIfNecessary￨2￨f (￨2￨f String￨3￨p beanName￨3￨p ,￨3￨p Object￨3￨p bean￨3￨p ,￨3￨p RootBeanDefinition￨3￨p mbd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f boolean￨2￨f containsBeanDefinition￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f BeanDefinition￨2￨f getBeanDefinition￨2￨f (￨2￨f String￨2￨f beanName￨2￨f )￨2￨f throws￨2￨f BeansException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f Object￨2￨f createBean￨2￨f (￨2￨f String￨2￨f beanName￨2￨f ,￨2￨f RootBeanDefinition￨2￨f mbd￨2￨f ,￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f BeanCreationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractType￨1￨d implements￨1￨d Comparator￨1￨d <￨1￨d byte￨1￨d [￨1￨d ]￨1￨d >￨1￨d {￨1￨d public￨2￨f abstract￨2￨f String￨2￨f getString￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f validate￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Comparator￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f getReverseComparator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getString￨2￨f (￨2￨f Collection￨3￨p <￨3￨p byte￨3￨p [￨3￨p ]￨3￨p >￨3￨p names￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getColumnsString￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p columns￨3￨p )￨2￨f {￨2￨f StringBuilder￨3￨e builder￨3￨e =￨3￨e new￨3￨e StringBuilder￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l IColumn￨4￨c column￨4￨c :￨4￨c columns￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b builder￨4￨b .￨4￨b append￨4￨b (￨4￨b getString￨4￨b (￨4￨b column￨4￨b .￨4￨b name￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b .￨4￨b append￨4￨b (￨4￨b ","￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨l return￨3￨e builder￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ActionAddOperation￨1￨d extends￨1￨d UMLChangeAction￨1￨d {￨1￨d public￨2￨e static￨2￨e ActionAddOperation￨2￨e SINGLETON￨2￨e =￨2￨e new￨2￨e ActionAddOperation￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f ActionAddOperation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p ae￨3￨p )￨2￨f {￨2￨f ProjectBrowser￨3￨e pb￨3￨e =￨3￨e ProjectBrowser￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e ;￨3￨e Project￨3￨e p￨3￨e =￨3￨e ProjectManager￨3￨e .￨3￨e getManager￨3￨e (￨3￨e )￨3￨e .￨3￨e getCurrentProject￨3￨e (￨3￨e )￨3￨e ;￨3￨e Object￨3￨e target￨3￨e =￨3￨e TargetManager￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e .￨3￨e getModelTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c target￨4￨c instanceof￨4￨c MClassifier￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j MClassifier￨3￨e cls￨3￨e =￨3￨e (￨3￨e (￨3￨e MClassifier￨3￨e )￨3￨e (￨3￨e target￨3￨e )￨3￨e )￨3￨e ;￨3￨e MOperation￨3￨e oper￨3￨e =￨3￨e UmlFactory￨3￨e .￨3￨e getFactory￨3￨e (￨3￨e )￨3￨e .￨3￨e getCore￨3￨e (￨3￨e )￨3￨e .￨3￨e buildOperation￨3￨e (￨3￨e cls￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b pb￨3￨b .￨3￨b setTarget￨3￨b (￨3￨b oper￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Iterator￨3￨e it￨3￨e =￨3￨e pb￨3￨e .￨3￨e getEditorPane￨3￨e (￨3￨e )￨3￨e .￨3￨e findPresentationsFor￨3￨e (￨3￨e cls￨3￨e ,￨3￨e p￨3￨e .￨3￨e getDiagrams￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e iterator￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l it￨4￨c .￨4￨c hasNext￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l MElementListener￨4￨e listener￨4￨e =￨4￨e (￨4￨e (￨4￨e MElementListener￨4￨e )￨4￨e (￨4￨e it￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e UmlModelEventPump￨4￨e .￨4￨e getPump￨4￨e (￨4￨e )￨4￨e .￨4￨e removeModelEventListener￨4￨e (￨4￨e listener￨4￨e ,￨4￨e oper￨4￨e )￨4￨e ;￨4￨e UmlModelEventPump￨4￨e .￨4￨e getPump￨4￨e (￨4￨e )￨4￨e .￨4￨e addModelEventListener￨4￨e (￨4￨e listener￨4￨e ,￨4￨e oper￨4￨e )￨4￨e ;￨4￨e }￨3￨l super￨3￨e .￨3￨e actionPerformed￨3￨e (￨3￨e ae￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f shouldBeEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractDefinition￨1￨d extends￨1￨d SyntaxElement￨1￨d implements￨1￨d XpandDefinition￨1￨d {￨1￨d private￨2￨e Template￨2￨e owner￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e DeclaredParameter￨2￨e [￨2￨e ]￨2￨e params￨2￨e ;￨2￨e private￨2￨e Identifier￨2￨e name￨2￨e ;￨2￨e private￨2￨e Identifier￨2￨e type￨2￨e ;￨2￨e private￨2￨e Statement￨2￨e [￨2￨e ]￨2￨e body￨2￨e ;￨2￨e protected￨2￨e String￨2￨e _stringRepresentation￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e wildParams￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f AbstractDefinition￨2￨f (￨2￨f final￨3￨p Identifier￨3￨p name￨3￨p ,￨3￨p final￨3￨p Identifier￨3￨p type￨3￨p ,￨3￨p final￨3￨p DeclaredParameter￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p final￨3￨p Statement￨3￨p [￨3￨p ]￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f XpandResource￨2￨f getOwner￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOwner￨2￨f (￨2￨f final￨3￨p Template￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DeclaredParameter￨2￨f [￨2￨f ]￨2￨f getParams￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f DeclaredParameter￨2￨f >￨2￨f getParamsAsList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Identifier￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTargetType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Identifier￨2￨f getDefName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getQualifiedName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getParamString￨2￨f (￨2￨f boolean￨3￨p typesOnly￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c (￨4￨c params￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c params￨4￨c .￨4￨c length￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e wildParams￨4￨e ?￨4￨e "(*)"￨4￨e :￨4￨e ""￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b final￨3￨b StringBuffer￨3￨b buff￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b "("￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c params￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l final￨4￨e DeclaredParameter￨4￨e p￨4￨e =￨4￨e params￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e buff￨4￨e .￨4￨e append￨4￨e (￨4￨e p￨4￨e .￨4￨e getType￨4￨e (￨4￨e )￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c typesOnly￨5￨c )￨4￨j {￨4￨j buff￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>"￨5￨e )￨5￨e .￨5￨e append￨5￨e (￨5￨e p￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c i￨5￨c +￨5￨c 1￨5￨c )￨5￨c <￨5￨c (￨5￨c params￨5￨c .￨5￨c length￨5￨c )￨5￨c )￨4￨j {￨4￨j buff￨5￨e .￨5￨e append￨5￨e (￨5￨e ","￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j wildParams￨4￨c )￨3￨j {￨3￨j buff￨4￨e .￨4￨e append￨4￨e (￨4￨e ",*"￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e buff￨3￨e .￨3￨e append￨3￨e (￨3￨e ")"￨3￨e )￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f Statement￨2￨f [￨2￨f ]￨2￨f getBody￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f Statement￨2￨f >￨2￨f getBodyAsList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f analyze￨2￨f (￨2￨f XpandExecutionContext￨3￨p ctx￨3￨p ,￨3￨p final￨3￨p Set￨3￨p <￨3￨p AnalysationIssue￨3￨p >￨3￨p issues￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f evaluate￨2￨f (￨2￨f XpandExecutionContext￨3￨p ctx￨3￨p ,￨3￨p Object￨3￨p _this￨3￨p ,￨3￨p Object￨3￨p ...￨3￨p params￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f XpandExecutionContext￨2￨f prepareDeclaredParameters￨2￨f (￨2￨f Object￨3￨p _this￨3￨p ,￨3￨p XpandExecutionContext￨3￨p context￨3￨p ,￨3￨p Object￨3￨p ...￨3￨p params￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConfigurationTest￨1￨d extends￨1￨d AbstractTasklet￨1￨d implements￨1￨d Configurable￨1￨d {￨1￨d protected￨2￨e String￨2￨e m_message￨2￨e ;￨2￨e public￨2￨f void￨2￨f configure￨2￨f (￨2￨f final￨2￨f Configuration￨2￨f configuration￨2￨f )￨2￨f throws￨2￨f ConfigurationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f throws￨2￨f AntException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b getLogger￨3￨b (￨3￨b )￨3￨b .￨3￨b info￨3￨b (￨3￨b m_message￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d XSElementDecl￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e short￨2￨e NO_CONSTRAINT￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e short￨2￨e DEFAULT_VALUE￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e short￨2￨e FIXED_VALUE￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨e String￨2￨e fName￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨e String￨2￨e fTargetNamespace￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨e XSTypeDecl￨2￨e fType￨2￨e =￨2￨e null￨2￨e ;￨2￨e short￨2￨e fMiscFlags￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e short￨2￨e fBlock￨2￨e =￨2￨e SchemaSymbols￨2￨e .￨2￨e EMPTY_SET￨2￨e ;￨2￨e public￨2￨e short￨2￨e fFinal￨2￨e =￨2￨e SchemaSymbols￨2￨e .￨2￨e EMPTY_SET￨2￨e ;￨2￨e public￨2￨e Object￨2￨e fDefault￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨e XSElementDecl￨2￨e fSubGroup￨2￨e =￨2￨e null￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e INITIAL_SIZE￨2￨e =￨2￨e 2￨2￨e ;￨2￨e int￨2￨e fIDCPos￨2￨e =￨2￨e 0￨2￨e ;￨2￨e IdentityConstraint￨2￨e [￨2￨e ]￨2￨e fIDConstraints￨2￨e =￨2￨e new￨2￨e IdentityConstraint￨2￨e [￨2￨e XSElementDecl￨2￨e .￨2￨e INITIAL_SIZE￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e CONSTRAINT_MASK￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e NILLABLE￨2￨e =￨2￨e 4￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e ABSTRACT￨2￨e =￨2￨e 8￨2￨e ;￨2￨e public￨2￨f short￨2￨f getConstraintType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNillable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAbstract￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConstraintType￨2￨f (￨2￨f short￨3￨p constraintType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIsNillable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIsAbstract￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addIDConstaint￨2￨f (￨2￨f IdentityConstraint￨3￨p idc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IdentityConstraint￨2￨f [￨2￨f ]￨2￨f getIDConstraints￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f IdentityConstraint￨2￨f [￨2￨f ]￨2￨f resize￨2￨f (￨2￨f IdentityConstraint￨3￨p [￨3￨p ]￨3￨p oldArray￨3￨p ,￨3￨p int￨3￨p newSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b fTargetNamespace￨3￨b )￨3￨b +￨3￨b ","￨3￨b )￨3￨b +￨3￨b (￨3￨b fName￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f MemberValuePair￨2￨f [￨2￨f ]￨2￨f memberValuePairs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e constant￨3￨e =￨3￨e NotAConstant￨3￨e ;￨3￨e TypeBinding￨3￨e typeBinding￨3￨e =￨3￨e this￨3￨e .￨3￨e type￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j typeBinding￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e resolvedType￨3￨e =￨3￨e typeBinding￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c typeBinding￨4￨c .￨4￨c isAnnotationType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e typeMismatchError￨4￨e (￨4￨e typeBinding￨4￨e ,￨4￨e scope￨4￨e .￨4￨e getJavaLangAnnotationAnnotation￨4￨e (￨4￨e )￨4￨e ,￨4￨e this￨4￨e .￨4￨e type￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j ReferenceBinding￨3￨e annotationType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e )￨3￨e ;￨3￨e MethodBinding￨3￨e [￨3￨e ]￨3￨e methods￨3￨e =￨3￨e annotationType￨3￨e .￨3￨e methods￨3￨e (￨3￨e )￨3￨e ;￨3￨e MemberValuePair￨3￨e [￨3￨e ]￨3￨e valuePairs￨3￨e =￨3￨e memberValuePairs￨3￨e (￨3￨e )￨3￨e ;￨3￨e MemberValuePair￨3￨e valueAttribute￨3￨e =￨3￨e null￨3￨e ;￨3￨e MemberValuePair￨3￨e [￨3￨e ]￨3￨e usedValuePairs￨3￨e ;￨3￨e int￨3￨e pairsLength￨3￨e =￨3￨e valuePairs￨3￨e .￨3￨e length￨3￨e ;￨3￨e System￨3￨e .￨3￨e arraycopy￨3￨e (￨3￨e valuePairs￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e (￨3￨e usedValuePairs￨3￨e =￨3￨e new￨3￨e MemberValuePair￨3￨e [￨3￨e pairsLength￨3￨e ]￨3￨e )￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e pairsLength￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c requiredLength￨4￨c =￨4￨c methods￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c requiredLength￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l MethodBinding￨4￨e method￨4￨e =￨4￨e methods￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e char￨4￨e [￨4￨e ]￨4￨e selector￨4￨e =￨4￨e method￨4￨e .￨4￨e selector￨4￨e ;￨4￨e boolean￨4￨e foundValue￨4￨e =￨4￨e false￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c j￨5￨c =￨5￨c 0￨5￨c ;￨5￨c j￨5￨c <￨5￨c pairsLength￨5￨c ;￨5￨c j￨5￨c ++￨5￨c )￨4￨l {￨4￨l MemberValuePair￨5￨e valuePair￨5￨e =￨5￨e usedValuePairs￨5￨e [￨5￨e j￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j valuePair￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j continue￨6￨e nextPair￨6￨e ;￨6￨e }￨5￨j char￨5￨e [￨5￨e ]￨5￨e memberName￨5￨e =￨5￨e valuePair￨5￨e .￨5￨e name￨5￨e ;￨5￨e if￨5￨j (￨5￨j CharOperation￨6￨c .￨6￨c equals￨6￨c (￨6￨c memberName￨6￨c ,￨6￨c selector￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c valueAttribute￨7￨c ==￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c CharOperation￨7￨c .￨7￨c equals￨7￨c (￨7￨c memberName￨7￨c ,￨7￨c TypeConstants￨7￨c .￨7￨c VALUE￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j valueAttribute￨7￨e =￨7￨e valuePair￨7￨e ;￨7￨e }￨6￨j valuePair￨6￨e .￨6￨e binding￨6￨e =￨6￨e method￨6￨e ;￨6￨e usedValuePairs￨6￨e [￨6￨e j￨6￨e ]￨6￨e =￨6￨e null￨6￨e ;￨6￨e foundValue￨6￨e =￨6￨e true￨6￨e ;￨6￨e boolean￨6￨e foundDuplicate￨6￨e =￨6￨e false￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c k￨7￨c =￨7￨c j￨7￨c +￨7￨c 1￨7￨c ;￨7￨c k￨7￨c <￨7￨c pairsLength￨7￨c ;￨7￨c k￨7￨c ++￨7￨c )￨6￨l {￨6￨l if￨7￨j (￨7￨j CharOperation￨8￨c .￨8￨c equals￨8￨c (￨8￨c usedValuePairs￨8￨c [￨8￨c k￨8￨c ]￨8￨c .￨8￨c name￨8￨c ,￨8￨c selector￨8￨c )￨8￨c )￨7￨j {￨7￨j foundDuplicate￨8￨e =￨8￨e true￨8￨e ;￨8￨e scope￨8￨e .￨8￨e problemReporter￨8￨e (￨8￨e )￨8￨e .￨8￨e duplicateAnnotationValue￨8￨e (￨8￨e annotationType￨8￨e ,￨8￨e usedValuePairs￨8￨e [￨8￨e k￨8￨e ]￨8￨e )￨8￨e ;￨8￨e usedValuePairs￨8￨e [￨8￨e k￨8￨e ]￨8￨e .￨8￨e binding￨8￨e =￨8￨e method￨8￨e ;￨8￨e usedValuePairs￨8￨e [￨8￨e k￨8￨e ]￨8￨e =￨8￨e null￨8￨e ;￨8￨e }￨7￨j }￨6￨l if￨6￨j (￨6￨j foundDuplicate￨7￨c )￨6￨j {￨6￨j scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e duplicateAnnotationValue￨7￨e (￨7￨e annotationType￨7￨e ,￨7￨e valuePair￨7￨e )￨7￨e ;￨7￨e continue￨7￨e nextMember￨7￨e ;￨7￨e }￨6￨j valuePair￨6￨e .￨6￨e resolveTypeExpecting￨6￨e (￨6￨e scope￨6￨e ,￨6￨e method￨6￨e .￨6￨e returnType￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l if￨4￨j (￨4￨j (￨5￨c !￨5￨c foundValue￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c (￨5￨c method￨5￨c .￨5￨c modifiers￨5￨c )￨5￨c &￨5￨c (￨5￨c AccAnnotationDefault￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e missingValueForAnnotationMember￨5￨e (￨5￨e this￨5￨e ,￨5￨e method￨5￨e .￨5￨e selector￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c pairsLength￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c usedValuePairs￨5￨c [￨5￨c i￨5￨c ]￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e undefinedAnnotationValue￨5￨e (￨5￨e annotationType￨5￨e ,￨5￨e usedValuePairs￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l long￨3￨e tagBits￨3￨e =￨3￨e detectStandardAnnotation￨3￨e (￨3￨e scope￨3￨e ,￨3￨e annotationType￨3￨e ,￨3￨e valueAttribute￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c recipient￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j tagBits￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j switch￨5￨s (￨5￨s this￨5￨c .￨5￨c recipient￨5￨c .￨5￨c kind￨5￨c (￨5￨c )￨5￨c )￨5￨s {￨5￨s case￨6￨c Binding￨6￨c .￨6￨c PACKAGE￨6￨c :￨6￨c break￨7￨e ;￨7￨e case￨6￨c Binding￨6￨c .￨6￨c TYPE￨6￨c :￨6￨c case￨6￨c Binding￨6￨c .￨6￨c GENERIC_TYPE￨6￨c :￨6￨c case￨6￨c Binding￨6￨c .￨6￨c TYPE_PARAMETER￨6￨c :￨6￨c (￨7￨e (￨7￨e ReferenceBinding￨7￨e )￨7￨e (￨7￨e this￨7￨e .￨7￨e recipient￨7￨e )￨7￨e )￨7￨e .￨7￨e tagBits￨7￨e |=￨7￨e tagBits￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c Binding￨6￨c .￨6￨c METHOD￨6￨c :￨6￨c (￨7￨e (￨7￨e MethodBinding￨7￨e )￨7￨e (￨7￨e this￨7￨e .￨7￨e recipient￨7￨e )￨7￨e )￨7￨e .￨7￨e tagBits￨7￨e |=￨7￨e tagBits￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c Binding￨6￨c .￨6￨c FIELD￨6￨c :￨6￨c (￨7￨e (￨7￨e FieldBinding￨7￨e )￨7￨e (￨7￨e this￨7￨e .￨7￨e recipient￨7￨e )￨7￨e )￨7￨e .￨7￨e tagBits￨7￨e |=￨7￨e tagBits￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c Binding￨6￨c .￨6￨c LOCAL￨6￨c :￨6￨c (￨7￨e (￨7￨e LocalVariableBinding￨7￨e )￨7￨e (￨7￨e this￨7￨e .￨7￨e recipient￨7￨e )￨7￨e )￨7￨e .￨7￨e tagBits￨7￨e |=￨7￨e tagBits￨7￨e ;￨7￨e break￨7￨e ;￨7￨e }￨5￨s }￨4￨j <START_BUG>￨4￨b long￨4￨b metaTagBits￨4￨b =￨4￨b annotationType￨4￨b .￨4￨b tagBits￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c metaTagBits￨5￨c &￨5￨c (￨5￨c TagBits￨5￨c .￨5￨c AnnotationTargetMASK￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j break￨5￨e checkTargetCompatibility￨5￨e ;￨5￨e }￨4￨j switch￨4￨s (￨4￨s recipient￨4￨c .￨4￨c kind￨4￨c (￨4￨c )￨4￨c )￨4￨s {￨4￨s case￨5￨c Binding￨5￨c .￨5￨c PACKAGE￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c metaTagBits￨7￨c &￨7￨c (￨7￨c TagBits￨7￨c .￨7￨c AnnotationForPackage￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j break￨7￨e checkTargetCompatibility￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c TYPE￨5￨c :￨5￨c case￨5￨c Binding￨5￨c .￨5￨c GENERIC_TYPE￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c (￨7￨c ReferenceBinding￨7￨c )￨7￨c (￨7￨c this￨7￨c .￨7￨c recipient￨7￨c )￨7￨c )￨7￨c .￨7￨c isAnnotationType￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j (￨8￨c metaTagBits￨8￨c &￨8￨c (￨8￨c (￨8￨c TagBits￨8￨c .￨8￨c AnnotationForAnnotationType￨8￨c )￨8￨c |￨8￨c (￨8￨c TagBits￨8￨c .￨8￨c AnnotationForType￨8￨c )￨8￨c )￨8￨c )￨8￨c !=￨8￨c 0￨8￨c )￨7￨j {￨7￨j break￨8￨e checkTargetCompatibility￨8￨e ;￨8￨e }￨7￨j }￨6￨j else￨6￨j if￨6￨j (￨6￨j (￨7￨c metaTagBits￨7￨c &￨7￨c (￨7￨c TagBits￨7￨c .￨7￨c AnnotationForType￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j break￨7￨e checkTargetCompatibility￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c METHOD￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c (￨7￨c MethodBinding￨7￨c )￨7￨c (￨7￨c this￨7￨c .￨7￨c recipient￨7￨c )￨7￨c )￨7￨c .￨7￨c isConstructor￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j (￨8￨c metaTagBits￨8￨c &￨8￨c (￨8￨c TagBits￨8￨c .￨8￨c AnnotationForConstructor￨8￨c )￨8￨c )￨8￨c !=￨8￨c 0￨8￨c )￨7￨j {￨7￨j break￨8￨e checkTargetCompatibility￨8￨e ;￨8￨e }￨7￨j }￨6￨j else￨6￨j if￨6￨j (￨6￨j (￨7￨c metaTagBits￨7￨c &￨7￨c (￨7￨c TagBits￨7￨c .￨7￨c AnnotationForMethod￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j break￨7￨e checkTargetCompatibility￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c FIELD￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c metaTagBits￨7￨c &￨7￨c (￨7￨c TagBits￨7￨c .￨7￨c AnnotationForField￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j break￨7￨e checkTargetCompatibility￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c LOCAL￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c (￨7￨c LocalVariableBinding￨7￨c )￨7￨c (￨7￨c this￨7￨c .￨7￨c recipient￨7￨c )￨7￨c )￨7￨c .￨7￨c isArgument￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j (￨8￨c metaTagBits￨8￨c &￨8￨c (￨8￨c TagBits￨8￨c .￨8￨c AnnotationForParameter￨8￨c )￨8￨c )￨8￨c !=￨8￨c 0￨8￨c )￨7￨j {￨7￨j break￨8￨e checkTargetCompatibility￨8￨e ;￨8￨e }￨7￨j }￨6￨j else￨6￨j if￨6￨j (￨6￨j (￨7￨c (￨7￨c annotationType￨7￨c .￨7￨c tagBits￨7￨c )￨7￨c &￨7￨c (￨7￨c TagBits￨7￨c .￨7￨c AnnotationForLocalVariable￨7￨c )￨7￨c )￨7￨c !=￨7￨c 0￨7￨c )￨6￨j {￨6￨j break￨7￨e checkTargetCompatibility￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e }￨4￨s scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e disallowedTargetForAnnotation￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e ;￨3￨e }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p CompilationUnitScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CheckForNewMessagesCommand￨1￨d extends￨1￨d FolderCommand￨1￨d {￨1￨d FolderCommandAdapter￨2￨e adapter￨2￨e ;￨2￨e IMAPFolder￨2￨e inboxFolder￨2￨e ;￨2￨e boolean￨2￨e needGUIUpdate￨2￨e ;￨2￨e public￨2￨f CheckForNewMessagesCommand￨2￨f (￨2￨f DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CheckForNewMessagesCommand￨2￨f (￨2￨f AbstractFrameController￨3￨p frame￨3￨p ,￨3￨p DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f Worker￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f FolderCommandReference￨3￨e [￨3￨e ]￨3￨e references￨3￨e =￨3￨e (￨3￨e (￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e )￨3￨e (￨3￨e getReferences￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e adapter￨3￨e =￨3￨e new￨3￨e FolderCommandAdapter￨3￨e (￨3￨e references￨3￨e )￨3￨e ;￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e r￨3￨e =￨3￨e adapter￨3￨e .￨3￨e getSourceFolderReferences￨3￨e (￨3￨e )￨3￨e ;￨3￨e IMAPRootFolder￨3￨e srcFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e IMAPRootFolder￨3￨e )￨3￨e (￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e (￨3￨e (￨3￨e StatusObservableImpl￨3￨e )￨3￨e (￨3￨e srcFolder￨3￨e .￨3￨e getObservable￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e setWorker￨3￨e (￨3￨e worker￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b inboxFolder￨3￨b =￨3￨b (￨3￨b (￨3￨b IMAPFolder￨3￨b )￨3￨b (￨3￨b srcFolder￨3￨b .￨3￨b getChild￨3￨b (￨3￨b "Inbox"￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b int￨3￨e total￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getExists￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e recent￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getRecent￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e unseen￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getUnseen￨3￨e (￨3￨e )￨3￨e ;￨3￨e inboxFolder￨3￨e .￨3￨e getHeaderList￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e newTotal￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getExists￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e newRecent￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getRecent￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e newUnseen￨3￨e =￨3￨e inboxFolder￨3￨e .￨3￨e getMessageFolderInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e getUnseen￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c newRecent￨4￨c !=￨4￨c recent￨4￨c )￨4￨c ||￨4￨c (￨4￨c newTotal￨4￨c !=￨4￨c total￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c newUnseen￨4￨c !=￨4￨c unseen￨4￨c )￨4￨c )￨3￨j {￨3￨j needGUIUpdate￨4￨e =￨4￨e true￨4￨e ;￨4￨e ImapItem￨4￨e item￨4￨e =￨4￨e srcFolder￨4￨e .￨4￨e getAccountItem￨4￨e (￨4￨e )￨4￨e .￨4￨e getImapItem￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c newRecent￨5￨c !=￨5￨c recent￨5￨c )￨5￨c &&￨5￨c (￨5￨c item￨5￨c .￨5￨c getBoolean￨5￨c (￨5￨c "enable_sound"￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j String￨5￨e file￨5￨e =￨5￨e item￨5￨e .￨5￨e get￨5￨e (￨5￨e "sound_file"￨5￨e )￨5￨e ;￨5￨e log￨5￨e .￨5￨e info￨5￨e (￨5￨e (￨5￨e "playing<seq2seq4repair_space>sound<seq2seq4repair_space>file="￨5￨e +￨5￨e file￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j file￨6￨c .￨6￨c equalsIgnoreCase￨6￨c (￨6￨c "default"￨6￨c )￨6￨c )￨5￨j {￨5￨j PlaySound￨6￨e .￨6￨e play￨6￨e (￨6￨e "newmail.wav"￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f PlaySound￨7￨e .￨7￨e play￨7￨e (￨7￨e new￨7￨e URL￨7￨e (￨7￨e file￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f Exception￨7￨p ex￨7￨p )￨6￨f {￨6￨f ex￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨j }￨4￨j }￨3￨j }￨2￨f public￨2￨f void￨2￨f updateGUI￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Scrollable￨1￨d extends￨1￨d Control￨1￨d {￨1￨d ScrollBar￨2￨e horizontalBar￨2￨e ;￨2￨e ScrollBar￨2￨e verticalBar￨2￨e ;￨2￨e int￨2￨e scrolledHandle￨2￨e ;￨2￨e Scrollable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Scrollable￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f clientHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f ScrollBar￨2￨f createScrollBar￨2￨f (￨2￨f int￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f findScrollViewer￨2￨f (￨2￨f int￨3￨p current￨3￨p ,￨3￨p int￨3￨p scrollViewerType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getClientArea￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ScrollBar￨2￨f getHorizontalBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getScrollBarHandle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ScrollBar￨2￨f getVerticalBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f HandlePreviewMouseWheel￨2￨f (￨2￨f int￨3￨p sender￨3￨p ,￨3￨p int￨3￨p e￨3￨p )￨2￨f {￨2￨f super￨3￨e .￨3￨e HandlePreviewMouseWheel￨3￨e (￨3￨e sender￨3￨e ,￨3￨e e￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c checkEvent￨4￨c (￨4￨c e￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c state￨4￨c )￨4￨c &￨4￨c (￨4￨c CANVAS￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c verticalBar￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j int￨5￨e vHandle￨5￨e =￨5￨e verticalBar￨5￨e .￨5￨e handle￨5￨e ;￨5￨e int￨5￨e delta￨5￨e =￨5￨e OS￨5￨e .￨5￨e MouseWheelEventArgs_Delta￨5￨e (￨5￨e e￨5￨e )￨5￨e ;￨5￨e int￨5￨e lines￨5￨e =￨5￨e OS￨5￨e .￨5￨e SystemParameters_WheelScrollLines￨5￨e (￨5￨e )￨5￨e ;￨5￨e double￨5￨e value￨5￨e =￨5￨e OS￨5￨e .￨5￨e RangeBase_Value￨5￨e (￨5￨e vHandle￨5￨e )￨5￨e ;￨5￨e double￨5￨e newValue￨5￨e =￨5￨e value￨5￨e ;￨5￨e Event￨5￨e event￨5￨e =￨5￨e new￨5￨e Event￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j lines￨6￨c !=￨6￨c (￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j double￨6￨e smallIncrement￨6￨e =￨6￨e OS￨6￨e .￨6￨e RangeBase_SmallChange￨6￨e (￨6￨e vHandle￨6￨e )￨6￨e ;￨6￨e newValue￨6￨e +=￨6￨e (￨6￨e smallIncrement￨6￨e *￨6￨e (￨6￨e (￨6￨e -￨6￨e delta￨6￨e )￨6￨e /￨6￨e 120￨6￨e )￨6￨e )￨6￨e *￨6￨e lines￨6￨e ;￨6￨e event￨6￨e .￨6￨e detail￨6￨e =￨6￨e (￨6￨e delta￨6￨e <￨6￨e 0￨6￨e )￨6￨e ?￨6￨e SWT￨6￨e .￨6￨e ARROW_DOWN￨6￨e :￨6￨e SWT￨6￨e .￨6￨e ARROW_UP￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j double￨6￨e largeIncrement￨6￨e =￨6￨e OS￨6￨e .￨6￨e RangeBase_LargeChange￨6￨e (￨6￨e vHandle￨6￨e )￨6￨e ;￨6￨e newValue￨6￨e +=￨6￨e largeIncrement￨6￨e *￨6￨e (￨6￨e (￨6￨e -￨6￨e delta￨6￨e )￨6￨e /￨6￨e 120￨6￨e )￨6￨e ;￨6￨e event￨6￨e .￨6￨e detail￨6￨e =￨6￨e (￨6￨e delta￨6￨e <￨6￨e 0￨6￨e )￨6￨e ?￨6￨e SWT￨6￨e .￨6￨e PAGE_DOWN￨6￨e :￨6￨e SWT￨6￨e .￨6￨e PAGE_UP￨6￨e ;￨6￨e }￨5￨j OS￨5￨e .￨5￨e RangeBase_Value￨5￨e (￨5￨e vHandle￨5￨e ,￨5￨e newValue￨5￨e )￨5￨e ;￨5￨e newValue￨5￨e =￨5￨e OS￨5￨e .￨5￨e RangeBase_Value￨5￨e (￨5￨e vHandle￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j value￨6￨c !=￨6￨c newValue￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b verticalBar￨6￨b .￨6￨b sendEvent￨6￨b (￨6￨b Selection￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j }￨4￨j }￨3￨j }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f topHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestTimeLimitingCollector￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e SLOW_DOWN￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e TIME_ALLOWED￨2￨e =￨2￨e 17￨2￨e *￨2￨e (￨2￨e TestTimeLimitingCollector￨2￨e .￨2￨e SLOW_DOWN￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e double￨2￨e MULTI_THREAD_SLACK￨2￨e =￨2￨e 7￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_DOCS￨2￨e =￨2￨e 3000￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_THREADS￨2￨e =￨2￨e 50￨2￨e ;￨2￨e private￨2￨e IndexSearcher￨2￨e searcher￨2￨e ;￨2￨e private￨2￨e Directory￨2￨e directory￨2￨e ;￨2￨e private￨2￨e IndexReader￨2￨e reader￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e FIELD_NAME￨2￨e =￨2￨e "body"￨2￨e ;￨2￨e private￨2￨e Query￨2￨e query￨2￨e ;￨2￨e private￨2￨e Counter￨2￨e counter￨2￨e ;￨2￨e private￨2￨e TimerThread￨2￨e counterThread￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e counter￨3￨e =￨3￨e Counter￨3￨e .￨3￨e newCounter￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e counterThread￨3￨e =￨3￨e new￨3￨e TimerThread￨3￨e (￨3￨e counter￨3￨e )￨3￨e ;￨3￨e counterThread￨3￨e .￨3￨e start￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨f String￨3￨f [￨3￨f ]￨3￨f docText￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e directory￨3￨e =￨3￨e newDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e RandomIndexWriter￨3￨e iw￨3￨e =￨3￨e new￨3￨e RandomIndexWriter￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e ,￨3￨e directory￨3￨e ,￨3￨e newIndexWriterConfig￨3￨e (￨3￨e TEST_VERSION_CURRENT￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e analysis￨3￨e .￨3￨e MockAnalyzer￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e setMergePolicy￨3￨e (￨3￨e newLogMergePolicy￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c TestTimeLimitingCollector￨4￨c .￨4￨c N_DOCS￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l add￨4￨e (￨4￨e docText￨4￨e [￨4￨e (￨4￨e i￨4￨e %￨4￨e (￨4￨e docText￨4￨e .￨4￨e length￨4￨e )￨4￨e )￨4￨e ]￨4￨e ,￨4￨e iw￨4￨e )￨4￨e ;￨4￨e }￨3￨l reader￨3￨e =￨3￨e iw￨3￨e .￨3￨e getReader￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b iw￨3￨b .￨3￨b close￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b searcher￨3￨e =￨3￨e newSearcher￨3￨e (￨3￨e reader￨3￨e )￨3￨e ;￨3￨e BooleanQuery￨3￨e booleanQuery￨3￨e =￨3￨e new￨3￨e BooleanQuery￨3￨e (￨3￨e )￨3￨e ;￨3￨e booleanQuery￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e TermQuery￨3￨e (￨3￨e new￨3￨e Term￨3￨e (￨3￨e FIELD_NAME￨3￨e ,￨3￨e "one"￨3￨e )￨3￨e )￨3￨e ,￨3￨e SHOULD￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 1￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c docText￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e [￨4￨e ]￨4￨e docTextParts￨4￨e =￨4￨e docText￨4￨e [￨4￨e i￨4￨e ]￨4￨e .￨4￨e split￨4￨e (￨4￨e "\\s+"￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c docTextPart￨5￨c :￨5￨c docTextParts￨5￨c )￨4￨l {￨4￨l booleanQuery￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e TermQuery￨5￨e (￨5￨e new￨5￨e Term￨5￨e (￨5￨e FIELD_NAME￨5￨e ,￨5￨e docTextPart￨5￨e )￨5￨e )￨5￨e ,￨5￨e SHOULD￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨l query￨3￨e =￨3￨e booleanQuery￨3￨e ;￨3￨e searcher￨3￨e .￨3￨e search￨3￨e (￨3￨e query￨3￨e ,￨3￨e null￨3￨e ,￨3￨e 1000￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f add￨2￨f (￨2￨f String￨2￨f value￨2￨f ,￨2￨f RandomIndexWriter￨2￨f iw￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f search￨2￨f (￨2￨f Collector￨2￨f collector￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collector￨2￨f createTimedCollector￨2￨f (￨2￨f TestTimeLimitingCollector￨3￨p .￨3￨p MyHitCollector￨3￨p hc￨3￨p ,￨3￨p long￨3￨p timeAllowed￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutNotGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestTimeout￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f maxTime￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f maxTimeStr￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testModifyResolution￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearchMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestMultiThreads￨2￨f (￨2￨f final￨2￨f boolean￨2￨f withTimeout￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d MyHitCollector￨2￨d extends￨2￨d SimpleCollector￨2￨d {￨2￨d private￨3￨e final￨3￨e BitSet￨3￨e bits￨3￨e =￨3￨e new￨3￨e BitSet￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e int￨3￨e slowdown￨3￨e =￨3￨e 0￨3￨e ;￨3￨e private￨3￨e int￨3￨e lastDocCollected￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e private￨3￨e int￨3￨e docBase￨3￨e =￨3￨e 0￨3￨e ;￨3￨e public￨3￨f void￨3￨f setSlowDown￨3￨f (￨3￨f int￨4￨p milliseconds￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hitCount￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f getLastDocCollected￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setScorer￨3￨f (￨3￨f Scorer￨3￨f scorer￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f collect￨3￨f (￨3￨f final￨3￨f int￨3￨f doc￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f doSetNextReader￨3￨f (￨3￨f AtomicReaderContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f acceptsDocsOutOfOrder￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TypeDeclaration￨1￨d extends￨1￨d BodyDeclaration￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e LEGAL_MODIFIERS￨2￨e =￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PUBLIC￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PRIVATE￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PROTECTED￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STATIC￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e FINAL￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e ABSTRACT￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STRICTFP￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isInterface￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e int￨2￨e modifiers￨2￨e =￨2￨e Modifier￨2￨e .￨2￨e NONE￨2￨e ;￨2￨e private￨2￨e SimpleName￨2￨e typeName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Name￨2￨e optionalSuperclassName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d superInterfaceNames￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d false￨2￨d ,￨2￨d Name￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d bodyDeclarations￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d true￨2￨d ,￨2￨d BodyDeclaration￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d TypeDeclaration￨2￨d (￨2￨d AST￨2￨d ast￨2￨d )￨2￨d {￨2￨d }￨2￨d ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f equalSubtrees￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInterface￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInterface￨2￨f (￨2￨f boolean￨3￨p isInterface￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModifiers￨2￨f (￨2￨f int￨3￨p modifiers￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b modifiers￨3￨b &=￨3￨b ~￨3￨b (￨3￨b IConstants￨3￨b .￨3￨b AccDeprecated￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c modifiers￨4￨c &￨4￨c (￨4￨c ~￨4￨c (￨4￨c TypeDeclaration￨4￨c .￨4￨c LEGAL_MODIFIERS￨4￨c )￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j modifying￨3￨e (￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e modifiers￨3￨e =￨3￨e modifiers￨3￨e ;￨3￨e }￨2￨f public￨2￨f SimpleName￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setName￨2￨f (￨2￨f SimpleName￨3￨p typeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Name￨2￨f getSuperclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSuperclass￨2￨f (￨2￨f Name￨3￨p superclassName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f superInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f bodyDeclarations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SingleVariableDeclaration￨2￨f [￨2￨f ]￨2￨f getFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodDeclaration￨2￨f [￨2￨f ]￨2￨f getMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeDeclaration￨2￨f [￨2￨f ]￨2￨f getTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPackageMemberTypeDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMemberTypeDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLocalTypeDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ITypeBinding￨2￨f resolveBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LogFactoryImpl￨1￨d implements￨1￨d Configurable￨1￨d ,￨1￨d GenericConfigurable￨1￨d ,￨1￨d LogFactory￨1￨d {￨1￨d private￨2￨d static￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d LogFactoryImpl￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d TRACE_STR￨2￨d =￨2￨d LogFactoryImpl￨2￨d .￨2￨d _loc￨2￨d .￨2￨d get￨2￨d (￨2￨d "log-trace"￨2￨d )￨2￨d .￨2￨d getMessage￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d INFO_STR￨2￨d =￨2￨d LogFactoryImpl￨2￨d .￨2￨d _loc￨2￨d .￨2￨d get￨2￨d (￨2￨d "log-info"￨2￨d )￨2￨d .￨2￨d getMessage￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d WARN_STR￨2￨d =￨2￨d LogFactoryImpl￨2￨d .￨2￨d _loc￨2￨d .￨2￨d get￨2￨d (￨2￨d "log-warn"￨2￨d )￨2￨d .￨2￨d getMessage￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d ERROR_STR￨2￨d =￨2￨d LogFactoryImpl￨2￨d .￨2￨d _loc￨2￨d .￨2￨d get￨2￨d (￨2￨d "log-error"￨2￨d )￨2￨d .￨2￨d getMessage￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d FATAL_STR￨2￨d =￨2￨d LogFactoryImpl￨2￨d .￨2￨d _loc￨2￨d .￨2￨d get￨2￨d (￨2￨d "log-fatal"￨2￨d )￨2￨d .￨2￨d getMessage￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d STDOUT￨2￨d =￨2￨d "stdout"￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d STDERR￨2￨d =￨2￨d "stderr"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d NEWLINE￨2￨d =￨2￨d System￨2￨d .￨2￨d getProperty￨2￨d (￨2￨d "line.separator"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d final￨2￨d long￨2￨d initializationMillis￨2￨d ;￨2￨d private￨2￨d Map￨2￨d _logs￨2￨d =￨2￨d new￨2￨d ConcurrentHashMap￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d short￨2￨d _defaultLogLevel￨2￨d =￨2￨d Log￨2￨d .￨2￨d INFO￨2￨d ;￨2￨d private￨2￨d Map￨2￨d _configuredLevels￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d PrintStream￨2￨d _out￨2￨d =￨2￨d System￨2￨d .￨2￨d err￨2￨d ;￨2￨d private￨2￨d String￨2￨d _diagContext￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d _diagContextComputed￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d Configuration￨2￨d _conf￨2￨d ;￨2￨d public￨2￨d LogFactoryImpl￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f Log￨2￨f getLog￨2￨f (￨2￨f String￨3￨p channel￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f LogFactoryImpl￨2￨f .￨2￨f LogImpl￨2￨f newLogImpl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDefaultLevel￨2￨f (￨2￨f String￨3￨p level￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f short￨2￨f getDefaultLevel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDefaultLevel￨2￨f (￨2￨f short￨3￨p level￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDiagnosticContext￨2￨f (￨2￨f String￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDiagnosticContext￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c _diagContextComputed￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b _diagContext￨4￨b )￨4￨b ==￨4￨b null￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b _diagContext￨4￨e =￨4￨e _conf￨4￨e .￨4￨e getId￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j ""￨5￨c .￨5￨c equals￨5￨c (￨5￨c _diagContext￨5￨c )￨5￨c )￨4￨j {￨4￨j _diagContext￨5￨e =￨5￨e null￨5￨e ;￨5￨e }￨4￨j _diagContextComputed￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j return￨3￨e _diagContext￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setFile￨2￨f (￨2￨f String￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PrintStream￨2￨f getStream￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setStream￨2￨f (￨2￨f PrintStream￨3￨p stream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getLevelName￨2￨f (￨2￨f short￨3￨p level￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f short￨2￨f getLevel￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConfiguration￨2￨f (￨2￨f Configuration￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f startConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f endConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInto￨2￨f (￨2￨f Options￨3￨p opts￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f shorten￨2￨f (￨2￨f String￨3￨p channel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d class￨2￨d LogImpl￨2￨d extends￨2￨d AbstractLog￨2￨d {￨2￨d private￨3￨e short￨3￨e _level￨3￨e =￨3￨e INFO￨3￨e ;￨3￨e private￨3￨e String￨3￨e _channel￨3￨e ;￨3￨e protected￨3￨f boolean￨3￨f isEnabled￨3￨f (￨3￨f short￨4￨p level￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f log￨3￨f (￨3￨f short￨4￨p level￨4￨p ,￨4￨p String￨4￨p message￨4￨p ,￨4￨p Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f String￨3￨f formatMessage￨3￨f (￨3￨f short￨4￨p level￨4￨p ,￨4￨p String￨4￨p message￨4￨p ,￨4￨p Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f long￨3￨f getOffset￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setChannel￨3￨f (￨3￨f String￨4￨p val￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getChannel￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setLevel￨3￨f (￨3￨f short￨4￨p val￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f short￨3￨f getLevel￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d PoolOperations￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e PoolOperations￨2￨e .￨2￨e PoolMatcher￨2￨e matcher￨2￨e ;￨2￨e protected￨2￨f PoolOperations￨2￨f (￨2￨f PoolOperations￨3￨p .￨3￨p PoolMatcher￨3￨p matcher￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e PathAddress￨3￨e address￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e jndiName￨3￨e ;￨3￨e if￨3￨j (￨3￨j address￨4￨c .￨4￨c getElement￨4￨c (￨4￨c 0￨4￨c )￨4￨c .￨4￨c getKey￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c DEPLOYMENT￨4￨c )￨4￨c )￨3￨j {￨3￨j jndiName￨4￨e =￨4￨e address￨4￨e .￨4￨e getLastElement￨4￨e (￨4￨e )￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j jndiName￨4￨e =￨4￨e Util￨4￨e .￨4￨e getJndiName￨4￨e (￨4￨e context￨4￨e .￨4￨e readModel￨4￨e (￨4￨e EMPTY_ADDRESS￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b context￨3￨b .￨3￨b getType￨3￨b (￨3￨b )￨3￨b )￨3￨b ==￨3￨b (￨3￨b Type￨3￨b .￨3￨b SERVER￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f OperationStepHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f execute￨4￨f (￨4￨f OperationContext￨4￨f context￨4￨f ,￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e ServiceController￨5￨e <￨5￨e ?￨5￨e >￨5￨e managementRepoService￨5￨e =￨5￨e context￨5￨e .￨5￨e getServiceRegistry￨5￨e (￨5￨e false￨5￨e )￨5￨e .￨5￨e getService￨5￨e (￨5￨e MANAGEMENT_REPOSITORY_SERVICE￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j managementRepoService￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j ModelNode￨6￨e operationResult￨6￨e =￨6￨e null￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f final￨7￨e ManagementRepository￨7￨e repository￨7￨e =￨7￨e (￨7￨e (￨7￨e ManagementRepository￨7￨e )￨7￨e (￨7￨e managementRepoService￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e final￨7￨e List￨7￨e <￨7￨e Pool￨7￨e >￨7￨e pools￨7￨e =￨7￨e matcher￨7￨e .￨7￨e match￨7￨e (￨7￨e jndiName￨7￨e ,￨7￨e repository￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j pools￨8￨c .￨8￨c isEmpty￨8￨c (￨8￨c )￨8￨c )￨7￨j {￨7￨j throw￨8￨e ConnectorMessages￨8￨e .￨8￨e MESSAGES￨8￨e .￨8￨e failedToMatchPool￨8￨e (￨8￨e jndiName￨8￨e )￨8￨e ;￨8￨e }￨7￨j for￨7￨l (￨7￨l Pool￨8￨c pool￨8￨c :￨8￨c pools￨8￨c )￨7￨l {￨7￨l operationResult￨8￨e =￨8￨e invokeCommandOn￨8￨e (￨8￨e pool￨8￨e )￨8￨e ;￨8￨e }￨7￨l }￨6￨f catch￨6￨f (￨6￨f Exception￨7￨p e￨7￨p )￨6￨f {￨6￨f throw￨7￨e new￨7￨e OperationFailedException￨7￨e (￨7￨e new￨7￨e ModelNode￨7￨e (￨7￨e )￨7￨e .￨7￨e set￨7￨e (￨7￨e ConnectorMessages￨7￨e .￨7￨e MESSAGES￨7￨e .￨7￨e failedToInvokeOperation￨7￨e (￨7￨e e￨7￨e .￨7￨e getLocalizedMessage￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f if￨6￨j (￨6￨j operationResult￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j context￨7￨e .￨7￨e getResult￨7￨e (￨7￨e )￨7￨e .￨7￨e set￨7￨e (￨7￨e operationResult￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e }￨3￨e context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f abstract￨2￨f ModelNode￨2￨f invokeCommandOn￨2￨f (￨2￨f Pool￨2￨f pool￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d FlushIdleConnectionInPool￨2￨d extends￨2￨d PoolOperations￨2￨d {￨2￨d public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e FlushIdleConnectionInPool￨3￨e DS_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e FlushIdleConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e DsPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e FlushIdleConnectionInPool￨3￨e RA_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e FlushIdleConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e RaPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e protected￨3￨f FlushIdleConnectionInPool￨3￨f (￨3￨f PoolOperations￨4￨p .￨4￨p PoolMatcher￨4￨p matcher￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModelNode￨3￨f invokeCommandOn￨3￨f (￨3￨f Pool￨4￨p pool￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d FlushAllConnectionInPool￨2￨d extends￨2￨d PoolOperations￨2￨d {￨2￨d public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e FlushAllConnectionInPool￨3￨e DS_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e FlushAllConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e DsPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e FlushAllConnectionInPool￨3￨e RA_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e FlushAllConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e RaPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e protected￨3￨f FlushAllConnectionInPool￨3￨f (￨3￨f PoolOperations￨4￨p .￨4￨p PoolMatcher￨4￨p matcher￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModelNode￨3￨f invokeCommandOn￨3￨f (￨3￨f Pool￨4￨p pool￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d TestConnectionInPool￨2￨d extends￨2￨d PoolOperations￨2￨d {￨2￨d public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e TestConnectionInPool￨3￨e DS_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e TestConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e DsPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e public￨3￨e static￨3￨e PoolOperations￨3￨e .￨3￨e TestConnectionInPool￨3￨e RA_INSTANCE￨3￨e =￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e TestConnectionInPool￨3￨e (￨3￨e new￨3￨e PoolOperations￨3￨e .￨3￨e RaPoolMatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e protected￨3￨f TestConnectionInPool￨3￨f (￨3￨f PoolOperations￨4￨p .￨4￨p PoolMatcher￨4￨p matcher￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModelNode￨3￨f invokeCommandOn￨3￨f (￨3￨f Pool￨3￨f pool￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f static￨2￨f interface￨2￨f PoolMatcher￨2￨f (￨2￨f )￨2￨f {￨2￨f List￨3￨f <￨3￨f Pool￨3￨f >￨3￨f match￨3￨f (￨3￨f String￨4￨p jndiName￨4￨p ,￨4￨p ManagementRepository￨4￨p repository￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d DsPoolMatcher￨2￨d implements￨2￨d PoolOperations￨2￨d .￨2￨d PoolMatcher￨2￨d {￨2￨d public￨3￨f List￨3￨f <￨3￨f Pool￨3￨f >￨3￨f match￨3￨f (￨3￨f String￨4￨p jndiName￨4￨p ,￨4￨p ManagementRepository￨4￨p repository￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d RaPoolMatcher￨2￨d implements￨2￨d PoolOperations￨2￨d .￨2￨d PoolMatcher￨2￨d {￨2￨d public￨3￨f List￨3￨f <￨3￨f Pool￨3￨f >￨3￨f match￨3￨f (￨3￨f String￨4￨p jndiName￨4￨p ,￨4￨p ManagementRepository￨4￨p repository￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TransactionalTopologyBuilder￨1￨d {￨1￨d String￨2￨e _id￨2￨e ;￨2￨e String￨2￨e _spoutId￨2￨e ;￨2￨e ITransactionalSpout￨2￨e _spout￨2￨e ;￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e TransactionalTopologyBuilder￨2￨e .￨2￨e Component￨2￨e >￨2￨e _bolts￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e TransactionalTopologyBuilder￨2￨e .￨2￨e Component￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e Integer￨2￨e _spoutParallelism￨2￨e ;￨2￨e List￨2￨e <￨2￨e Map￨2￨e >￨2￨e _spoutConfs￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f TransactionalTopologyBuilder￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p String￨3￨p spoutId￨3￨p ,￨3￨p ITransactionalSpout￨3￨p spout￨3￨p ,￨3￨p Integer￨3￨p spoutParallelism￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TransactionalTopologyBuilder￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p String￨3￨p spoutId￨3￨p ,￨3￨p IPartitionedTransactionalSpout￨3￨p spout￨3￨p ,￨3￨p Integer￨3￨p spoutParallelism￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpoutDeclarer￨2￨f getSpoutDeclarer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IBatchBolt￨3￨p bolt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IBatchBolt￨3￨p bolt￨3￨p ,￨3￨p Integer￨3￨p parallelism￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p ICommitterBolt￨3￨p bolt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p ICommitterBolt￨3￨p bolt￨3￨p ,￨3￨p Integer￨3￨p parallelism￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b setBolt￨3￨b (￨3￨b id￨3￨b ,￨3￨b new￨3￨b CommitterBoltExecutor￨3￨b (￨3￨b bolt￨3￨b )￨3￨b ,￨3￨b parallelism￨3￨b ,￨3￨b true￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IBasicBolt￨3￨p bolt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IBasicBolt￨3￨p bolt￨3￨p ,￨3￨p Integer￨3￨p parallelism￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f BoltDeclarer￨2￨f setBolt￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p IRichBolt￨3￨p bolt￨3￨p ,￨3￨p Integer￨3￨p parallelism￨3￨p ,￨3￨p boolean￨3￨p committer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StormTopology￨2￨f buildTopology￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f componentBoltSubscriptions￨2￨f (￨2￨f TransactionalTopologyBuilder￨3￨p .￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d Component￨2￨d {￨2￨d public￨3￨e IRichBolt￨3￨e bolt￨3￨e ;￨3￨e public￨3￨e int￨3￨e parallelism￨3￨e ;￨3￨e public￨3￨e List￨3￨e <￨3￨e TransactionalTopologyBuilder￨3￨e .￨3￨e InputDeclaration￨3￨e >￨3￨e declarations￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e TransactionalTopologyBuilder￨3￨e .￨3￨e InputDeclaration￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨e List￨3￨e <￨3￨e Map￨3￨e >￨3￨e componentConfs￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Map￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨e boolean￨3￨e committer￨3￨e ;￨3￨e public￨3￨f Component￨3￨f (￨3￨f IRichBolt￨4￨p bolt￨4￨p ,￨4￨p int￨4￨p parallelism￨4￨p ,￨4￨p boolean￨4￨p committer￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f static￨2￨f interface￨2￨f InputDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f declare￨3￨f (￨3￨f InputDeclarer￨4￨p declarer￨4￨p )￨3￨f {￨3￨f }￨3￨f String￨3￨f getComponent￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨d class￨2￨d SpoutDeclarerImpl￨2￨d extends￨2￨d BaseConfigurationDeclarer￨2￨d <￨2￨d SpoutDeclarer￨2￨d >￨2￨d implements￨2￨d SpoutDeclarer￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f SpoutDeclarer￨3￨f addConfigurations￨3￨f (￨3￨f Map￨4￨p conf￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d BoltDeclarerImpl￨2￨d extends￨2￨d BaseConfigurationDeclarer￨2￨d <￨2￨d BoltDeclarer￨2￨d >￨2￨d implements￨2￨d BoltDeclarer￨2￨d {￨2￨d TransactionalTopologyBuilder￨3￨e .￨3￨e Component￨3￨e _component￨3￨e ;￨3￨e public￨3￨f BoltDeclarerImpl￨3￨f (￨3￨f TransactionalTopologyBuilder￨4￨p .￨4￨p Component￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f fieldsGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p Fields￨4￨p fields￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f fieldsGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p ,￨4￨p final￨4￨p Fields￨4￨p fields￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f globalGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f globalGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f shuffleGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f shuffleGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f noneGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f noneGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f allGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f allGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f directGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f directGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f customGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p CustomStreamGrouping￨4￨p grouping￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f customGrouping￨3￨f (￨3￨f final￨4￨p String￨4￨p component￨4￨p ,￨4￨p final￨4￨p String￨4￨p streamId￨4￨p ,￨4￨p final￨4￨p CustomStreamGrouping￨4￨p grouping￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f grouping￨3￨f (￨3￨f final￨4￨p GlobalStreamId￨4￨p stream￨4￨p ,￨4￨p final￨4￨p Grouping￨4￨p grouping￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f addDeclaration￨3￨f (￨3￨f TransactionalTopologyBuilder￨4￨p .￨4￨p InputDeclaration￨4￨p declaration￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BoltDeclarer￨3￨f addConfigurations￨3￨f (￨3￨f Map￨4￨p conf￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d CloseAllPerspectivesAction￨1￨d extends￨1￨d Action￨1￨d implements￨1￨d ActionFactory￨1￨d .￨1￨d IWorkbenchAction￨1￨d {￨1￨d private￨2￨e IWorkbenchWindow￨2￨e workbenchWindow￨2￨e ;￨2￨e public￨2￨f CloseAllPerspectivesAction￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c workbenchWindow￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j IWorkbenchPage￨3￨e page￨3￨e =￨3￨e workbenchWindow￨3￨e .￨3￨e getActivePage￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j page￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b (￨4￨b (￨4￨b WorkbenchPage￨4￨b )￨4￨b (￨4￨b page￨4￨b )￨4￨b )￨4￨b .￨4￨b closeAllPerspectives￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SignaturePatternTestCase￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f SignaturePatternTestCase￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f BcelWorld￨2￨e world￨2￨e =￨2￨e new￨2￨e BcelWorld￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f testThrowsMatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testInstanceMethodMatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStaticMethodMatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldMatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testConstructorMatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkMatch￨2￨f (￨2￨f SignaturePattern￨2￨f p￨2￨f ,￨2￨f Member￨2￨f [￨2￨f ]￨2￨f yes￨2￨f ,￨2￨f Member￨2￨f [￨2￨f ]￨2￨f no￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkMatch￨2￨f (￨2￨f SignaturePattern￨3￨p p￨3￨p ,￨3￨p Member￨3￨p member￨3￨p ,￨3￨p boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b boolean￨3￨b matches￨3￨b =￨3￨b p￨3￨b .￨3￨b matches￨3￨b (￨3￨b member￨3￨b ,￨3￨b world￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertEquals￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e p￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e +￨3￨e "<seq2seq4repair_space>matches<seq2seq4repair_space>"￨3￨e )￨3￨e +￨3￨e (￨3￨e member￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e b￨3￨e ,￨3￨e matches￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f SignaturePattern￨2￨f makeMethodPat￨2￨f (￨2￨f String￨3￨p pattern￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SignaturePattern￨2￨f makeFieldPat￨2￨f (￨2￨f String￨3￨p pattern￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkSerialization￨2￨f (￨2￨f SignaturePattern￨2￨f p￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d StubFileGenerator￨1￨d {￨1￨d static￨2￨e Hashtable￨2￨e declIDTable￨2￨e =￨2￨e null￨2￨e ;￨2￨e static￨2￨f void￨2￨f doFiles￨2￨f (￨2￨f Hashtable￨2￨f table￨2￨f ,￨2￨f SymbolManager￨2￨f symbolManager￨2￨f ,￨2￨f File￨2￨f [￨2￨f ]￨2￨f inputFiles￨2￨f ,￨2￨f File￨2￨f [￨2￨f ]￨2￨f signatureFiles￨2￨f )￨2￨f throws￨2￨f DocException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f processFile￨2￨f (￨2￨f SymbolManager￨2￨f symbolManager￨2￨f ,￨2￨f File￨2￨f inputFile￨2￨f ,￨2￨f File￨2￨f signatureFile￨2￨f )￨2￨f throws￨2￨f DocException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f processImportDeclaration￨2￨f (￨2￨f IProgramElement￨2￨f node￨2￨f ,￨2￨f PrintWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f processTypeDeclaration￨2￨f (￨2￨f IProgramElement￨2￨f classNode￨2￨f ,￨2￨f PrintWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f DocException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f processMembers￨2￨f (￨2￨f List￨2￨f members￨2￨f ,￨2￨f PrintWriter￨2￨f writer￨2￨f ,￨2￨f boolean￨2￨f declaringTypeIsInterface￨2￨f )￨2￨f throws￨2￨f DocException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f genSourceSignature￨2￨f (￨2￨f IProgramElement￨3￨p classNode￨3￨p )￨2￨f {￨2￨f String￨3￨e signature￨3￨e =￨3￨e classNode￨3￨e .￨3￨e getSourceSignature￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j signature￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j int￨4￨e index￨4￨e =￨4￨e signature￨4￨e .￨4￨e indexOf￨4￨e (￨4￨e "aspect"￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b index￨4￨b !=￨4￨b (￨4￨b -￨4￨b 1￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b (￨4￨b signature￨4￨b .￨4￨b charAt￨4￨b (￨4￨b (￨4￨b index￨4￨b -￨4￨b 1￨4￨b )￨4￨b )￨4￨b )￨4￨b !=￨4￨b '.'￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b signature￨4￨e =￨4￨e (￨4￨e (￨4￨e signature￨4￨e .￨4￨e substring￨4￨e (￨4￨e 0￨4￨e ,￨4￨e index￨4￨e )￨4￨e )￨4￨e +￨4￨e "class<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e signature￨4￨e .￨4￨e substring￨4￨e (￨4￨e (￨4￨e index￨4￨e +￨4￨e 6￨4￨e )￨4￨e ,￨4￨e signature￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e signature￨3￨e ;￨3￨e }￨2￨f static￨2￨e int￨2￨e nextDeclID￨2￨e =￨2￨e 0￨2￨e ;￨2￨e static￨2￨f String￨2￨f addDeclID￨2￨f (￨2￨f IProgramElement￨3￨p decl￨3￨p ,￨3￨p String￨3￨p formalComment￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f addToFormal￨2￨f (￨2￨f String￨3￨p formalComment￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeldBootstrapService￨1￨d implements￨1￨d Service￨1￨d <￨1￨d WeldBootstrapService￨1￨d >￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e SERVICE_NAME￨2￨e =￨2￨e ServiceName￨2￨e .￨2￨e of￨2￨e (￨2￨e "WeldBootstrapService"￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e WeldBootstrap￨2￨e bootstrap￨2￨e ;￨2￨e private￨2￨e final￨2￨e WeldDeployment￨2￨e deployment￨2￨e ;￨2￨e private￨2￨e final￨2￨e Environment￨2￨e environment￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e BeanDeploymentArchive￨2￨e >￨2￨e beanDeploymentArchives￨2￨e ;￨2￨e private￨2￨e final￨2￨e BeanDeploymentArchiveImpl￨2￨e rootBeanDeploymentArchive￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e deploymentName￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e WeldSecurityServices￨2￨e >￨2￨e securityServices￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e WeldSecurityServices￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e WeldTransactionServices￨2￨e >￨2￨e weldTransactionServices￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e WeldTransactionServices￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e boolean￨2￨e started￨2￨e ;￨2￨e public￨2￨f WeldBootstrapService￨2￨f (￨2￨f WeldDeployment￨3￨p deployment￨3￨p ,￨3￨p Environment￨3￨p environment￨3￨p ,￨3￨p final￨3￨p String￨3￨p deploymentName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨3￨p StartContext￨3￨p context￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j started￨4￨c )￨3￨j {￨3￨j throw￨4￨e MESSAGES￨4￨e .￨4￨e alreadyRunning￨4￨e (￨4￨e "WeldContainer"￨4￨e )￨4￨e ;￨4￨e }￨3￨j started￨3￨e =￨3￨e true￨3￨e ;￨3￨e DEPLOYMENT_LOGGER￨3￨e .￨3￨e startingWeldService￨3￨e (￨3￨e deploymentName￨3￨e )￨3￨e ;￨3￨e addWeldService￨3￨d (￨3￨d SecurityServices￨3￨d .￨3￨d class￨3￨d ,￨3￨d securityServices￨3￨d .￨3￨d getValue￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d addWeldService￨3￨d (￨3￨d TransactionServices￨3￨d .￨3￨d class￨3￨d ,￨3￨d weldTransactionServices￨3￨d .￨3￨d getValue￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d ModuleGroupSingletonProvider￨3￨d .￨3￨d addClassLoaders￨3￨d (￨3￨d deployment￨3￨d .￨3￨d getModule￨3￨d (￨3￨d )￨3￨d .￨3￨d getClassLoader￨3￨d (￨3￨d )￨3￨d ,￨3￨d deployment￨3￨d .￨3￨d getSubDeploymentClassLoaders￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d ClassLoader￨3￨d oldTccl￨3￨d =￨3￨d WildFlySecurityManager￨3￨d .￨3￨d getCurrentContextClassLoaderPrivileged￨3￨d (￨3￨d )￨3￨d ;￨3￨d try￨3￨d {￨3￨d WildFlySecurityManager￨4￨e .￨4￨e setCurrentContextClassLoaderPrivileged￨4￨e (￨4￨e deployment￨4￨e .￨4￨e getModule￨4￨e (￨4￨e )￨4￨e .￨4￨e getClassLoader￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b bootstrap￨4￨b .￨4￨b startContainer￨4￨b (￨4￨b environment￨4￨b ,￨4￨b deployment￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨d finally￨3￨f (￨3￨f )￨3￨f {￨3￨f WildFlySecurityManager￨4￨e .￨4￨e setCurrentContextClassLoaderPrivileged￨4￨e (￨4￨e oldTccl￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f stop￨2￨f (￨2￨f final￨3￨p StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BeanManagerImpl￨2￨f getBeanManager￨2￨f (￨2￨f String￨3￨p beanArchiveId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f T￨2￨f extends￨2￨f Service￨2￨f >￨2￨f void￨2￨f addWeldService￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p type￨3￨p ,￨3￨p T￨3￨p service￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BeanManager￨2￨f getBeanManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f BeanDeploymentArchive￨2￨f >￨2￨f getBeanDeploymentArchives￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStarted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f WeldBootstrap￨2￨f getBootstrap￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f WeldBootstrapService￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f ,￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InjectedValue￨2￨f <￨2￨f WeldSecurityServices￨2￨f >￨2￨f getSecurityServices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InjectedValue￨2￨f <￨2￨f WeldTransactionServices￨2￨f >￨2￨f getWeldTransactionServices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConfigFrame￨1￨d implements￨1￨d ActionListener￨1￨d ,￨1￨d ListSelectionListener￨1￨d {￨1￨d private￨2￨e JDialog￨2￨e dialog￨2￨e ;￨2￨e private￨2￨e AccountListTable￨2￨e listView￨2￨e ;￨2￨e private￨2￨e AccountList￨2￨e accountList￨2￨e ;￨2￨e private￨2￨e AccountItem￨2￨e accountItem￨2￨e ;￨2￨e JTextField￨2￨e nameTextField￨2￨e =￨2￨e new￨2￨e JTextField￨2￨e (￨2￨e )￨2￨e ;￨2￨e JButton￨2￨e addButton￨2￨e ;￨2￨e JButton￨2￨e removeButton￨2￨e ;￨2￨e JButton￨2￨e editButton￨2￨e ;￨2￨e private￨2￨e int￨2￨e index￨2￨e ;￨2￨e public￨2￨f ConfigFrame￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AccountItem￨2￨f getSelected￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelected￨2￨f (￨2￨f AccountItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initComponents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f valueChanged￨2￨f (￨2￨f ListSelectionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showAccountDialog￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f String￨3￨e action￨3￨e =￨3￨e e￨3￨e .￨3￨e getActionCommand￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j action￨4￨c .￨4￨c equals￨4￨c (￨4￨c "CLOSE"￨4￨c )￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f config￨5￨e .￨5￨e save￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p ex￨5￨p )￨4￨f {￨4￨f ex￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f dialog￨4￨e .￨4￨e setVisible￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j action￨4￨c .￨4￨c equals￨4￨c (￨4￨c "ADD"￨4￨c )￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b new￨5￨b AccountWizardLauncher￨5￨b (￨5￨b )￨5￨b .￨5￨b launchWizard￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b listView￨5￨e .￨5￨e update￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p ex￨5￨p )￨4￨f {￨4￨f ex￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j else￨3￨j if￨3￨j (￨3￨j action￨4￨c .￨4￨c equals￨4￨c (￨4￨c "REMOVE"￨4￨c )￨4￨c )￨3￨j {￨3￨j Object￨4￨f [￨4￨f ]￨4￨f options￨4￨f =￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ;￨4￨e int￨4￨e n￨4￨e =￨4￨e JOptionPane￨4￨e .￨4￨e showOptionDialog￨4￨e (￨4￨e null￨4￨e ,￨4￨e "Would<seq2seq4repair_space>you<seq2seq4repair_space>really<seq2seq4repair_space>like<seq2seq4repair_space>to<seq2seq4repair_space>delete<seq2seq4repair_space>this<seq2seq4repair_space>account?"￨4￨e ,￨4￨e "Question"￨4￨e ,￨4￨e JOptionPane￨4￨e .￨4￨e YES_NO_OPTION￨4￨e ,￨4￨e JOptionPane￨4￨e .￨4￨e QUESTION_MESSAGE￨4￨e ,￨4￨e null￨4￨e ,￨4￨e options￨4￨e ,￨4￨e options￨4￨e [￨4￨e 1￨4￨e ]￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j n￨5￨c ==￨5￨c (￨5￨c JOptionPane￨5￨c .￨5￨c NO_OPTION￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j AccountItem￨4￨e item￨4￨e =￨4￨e accountList￨4￨e .￨4￨e remove￨4￨e (￨4￨e index￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j item￨5￨c .￨5￨c isPopAccount￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j popServerCollection￨5￨e .￨5￨e removePopServer￨5￨e (￨5￨e item￨5￨e .￨5￨e getUid￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j FolderTreeNode￨5￨e folder￨5￨e =￨5￨e (￨5￨e (￨5￨e FolderTreeNode￨5￨e )￨5￨e (￨5￨e treeModel￨5￨e .￨5￨e getImapFolder￨5￨e (￨5￨e item￨5￨e .￨5￨e getUid￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f FolderTreeNode￨6￨e parentFolder￨6￨e =￨6￨e (￨6￨e (￨6￨e FolderTreeNode￨6￨e )￨6￨e (￨6￨e folder￨6￨e .￨6￨e getParent￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e folder￨6￨e .￨6￨e removeFolder￨6￨e (￨6￨e )￨6￨e ;￨6￨e treeModel￨6￨e .￨6￨e nodeStructureChanged￨6￨e (￨6￨e parentFolder￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f Exception￨6￨p ex￨6￨p )￨5￨f {￨5￨f ex￨6￨e .￨6￨e printStackTrace￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j mailCheckingManager￨4￨e .￨4￨e remove￨4￨e (￨4￨e item￨4￨e .￨4￨e getUid￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e removeButton￨4￨e .￨4￨e setEnabled￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e editButton￨4￨e .￨4￨e setEnabled￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e listView￨4￨e .￨4￨e update￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j action￨4￨c .￨4￨c equals￨4￨c (￨4￨c "EDIT"￨4￨c )￨4￨c )￨3￨j {￨3￨j showAccountDialog￨4￨e (￨4￨e )￨4￨e ;￨4￨e listView￨4￨e .￨4￨e update￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MappingJackson2MessageConverter￨1￨d implements￨1￨d MessageConverter￨1￨d <￨1￨d Object￨1￨d >￨1￨d {￨1￨d private￨2￨e ObjectMapper￨2￨e objectMapper￨2￨e =￨2￨e new￨2￨e ObjectMapper￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨d Type￨2￨d defaultObjectType￨2￨d =￨2￨d Map￨2￨d .￨2￨d class￨2￨d ;￨2￨d private￨2￨d Class￨2￨d <￨2￨d ?￨2￨d >￨2￨d defaultMessagePayloadClass￨2￨d =￨2￨d byte￨2￨d [￨2￨d ]￨2￨d .￨2￨d class￨2￨d ;￨2￨d public￨2￨d void￨2￨d setDefaultObjectClass￨2￨d (￨2￨d Type￨2￨d defaultObjectType￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f setDefaultTargetPayloadClass￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p payloadClass￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f fromMessage￨2￨f (￨2￨f Message￨3￨p <￨3￨p ?￨3￨p >￨3￨p message￨3￨p ,￨3￨p Type￨3￨p objectType￨3￨p )￨2￨f {￨2￨f JavaType￨3￨e javaType￨3￨e =￨3￨e (￨3￨e objectType￨3￨e !=￨3￨e null￨3￨e )￨3￨e ?￨3￨e this￨3￨e .￨3￨e objectMapper￨3￨e .￨3￨e constructType￨3￨e (￨3￨e objectType￨3￨e )￨3￨e :￨3￨e this￨3￨e .￨3￨e objectMapper￨3￨e .￨3￨e constructType￨3￨e (￨3￨e this￨3￨e .￨3￨e defaultObjectType￨3￨e )￨3￨e ;￨3￨e Object￨3￨e payload￨3￨e =￨3￨e message￨3￨e .￨3￨e getPayload￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j payload￨5￨c instanceof￨5￨c byte￨5￨c [￨5￨c ]￨5￨c )￨4￨j {￨4￨j return￨5￨e this￨5￨e .￨5￨e objectMapper￨5￨e .￨5￨e readValue￨5￨e (￨5￨e (￨5￨e (￨5￨e byte￨5￨e [￨5￨e ]￨5￨e )￨5￨e (￨5￨e payload￨5￨e )￨5￨e )￨5￨e ,￨5￨e javaType￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j payload￨5￨c instanceof￨5￨c String￨5￨c )￨4￨j {￨4￨j return￨5￨e this￨5￨e .￨5￨e objectMapper￨5￨e .￨5￨e readValue￨5￨e (￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e payload￨5￨e )￨5￨e )￨5￨e ,￨5￨e javaType￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e IllegalArgumentException￨5￨e (￨5￨e (￨5￨e "Unexpected<seq2seq4repair_space>message<seq2seq4repair_space>payload<seq2seq4repair_space>type:<seq2seq4repair_space>"￨5￨e +￨5￨e payload￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ex￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b MessageConversionException￨4￨b (￨4￨b (￨4￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>JSON:<seq2seq4repair_space>"￨4￨b +￨4￨b (￨4￨b ex￨4￨b .￨4￨b getMessage￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b ,￨4￨b ex￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f @￨2￨f Override￨2￨f public￨2￨f <￨2￨f P￨2￨f >￨2￨f Message￨2￨f <￨2￨f P￨2￨f >￨2￨f toMessage￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SubqueryImpl￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d ExpressionImpl￨1￨d <￨1￨d T￨1￨d >￨1￨d implements￨1￨d Subquery￨1￨d <￨1￨d T￨1￨d >￨1￨d {￨1￨d private￨2￨e final￨2￨e AbstractQuery￨2￨e <￨2￨e ?￨2￨e >￨2￨e _parent￨2￨e ;￨2￨e private￨2￨e final￨2￨e CriteriaQueryImpl￨2￨e <￨2￨e T￨2￨e >￨2￨e _delegate￨2￨e ;￨2￨e private￨2￨e final￨2￨e MetamodelImpl￨2￨e _model￨2￨e ;￨2￨e private￨2￨e Set￨2￨e <￨2￨e Join￨2￨e <￨2￨e ?￨2￨e ,￨2￨e ?￨2￨e >￨2￨e >￨2￨e _joins￨2￨e ;￨2￨e private￨2￨e Expression￨2￨e <￨2￨e T￨2￨e >￨2￨e _select￨2￨e ;￨2￨e private￨2￨e Subquery￨2￨e _subq￨2￨e ;￨2￨e public￨2￨f SubqueryImpl￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p cls￨3￨p ,￨3￨p AbstractQuery￨3￨p <￨3￨p ?￨3￨p >￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AbstractQuery￨2￨f <￨2￨f ?￨2￨f >￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CriteriaQueryImpl￨2￨f <￨2￨f T￨2￨f >￨2￨f getDelegate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MetamodelImpl￨2￨f getMetamodel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CriteriaQueryImpl￨2￨f <￨2￨f ?￨2￨f >￨2￨f getInnermostParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f select￨2￨f (￨2￨f Expression￨3￨p <￨3￨p T￨3￨p >￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f <￨2￨f T￨2￨f >￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f >￨2￨f Root￨2￨f <￨2￨f X￨2￨f >￨2￨f from￨2￨f (￨2￨f EntityType￨3￨p <￨3￨p X￨3￨p >￨3￨p entity￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f >￨2￨f Root￨2￨f <￨2￨f X￨2￨f >￨2￨f from￨2￨f (￨2￨f Class￨3￨p <￨3￨p X￨3￨p >￨3￨p entityClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f Root￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f getRoots￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Root￨2￨f <￨2￨f ?￨2￨f >￨2￨f getRoot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f where￨2￨f (￨2￨f Expression￨3￨p <￨3￨p Boolean￨3￨p >￨3￨p restriction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f where￨2￨f (￨2￨f Predicate￨3￨p ...￨3￨p restrictions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f groupBy￨2￨f (￨2￨f Expression￨3￨p <￨3￨p ?￨3￨p >￨3￨p ...￨3￨p grouping￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f having￨2￨f (￨2￨f Expression￨3￨p <￨3￨p Boolean￨3￨p >￨3￨p restriction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f having￨2￨f (￨2￨f Predicate￨3￨p ...￨3￨p restrictions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f <￨2￨f T￨2￨f >￨2￨f distinct￨2￨f (￨2￨f boolean￨3￨p distinct￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f Expression￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f getGroupList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Predicate￨2￨f getRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Predicate￨2￨f getGroupRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDistinct￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f U￨2￨f >￨2￨f Subquery￨2￨f <￨2￨f U￨2￨f >￨2￨f subquery￨2￨f (￨2￨f Class￨3￨p <￨3￨p U￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f Y￨2￨f >￨2￨f Root￨2￨f <￨2￨f Y￨2￨f >￨2￨f correlate￨2￨f (￨2￨f Root￨3￨p <￨3￨p Y￨3￨p >￨3￨p root￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f Join￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f correlate￨2￨f (￨2￨f Join￨3￨p <￨3￨p X￨3￨p ,￨3￨p Y￨3￨p >￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f CollectionJoin￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f correlate￨2￨f (￨2￨f CollectionJoin￨3￨p <￨3￨p X￨3￨p ,￨3￨p Y￨3￨p >￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f SetJoin￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f correlate￨2￨f (￨2￨f SetJoin￨3￨p <￨3￨p X￨3￨p ,￨3￨p Y￨3￨p >￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f ListJoin￨2￨f <￨2￨f X￨2￨f ,￨2￨f Y￨2￨f >￨2￨f correlate￨2￨f (￨2￨f ListJoin￨3￨p <￨3￨p X￨3￨p ,￨3￨p Y￨3￨p >￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f X￨2￨f ,￨2￨f K￨2￨f ,￨2￨f V￨2￨f >￨2￨f MapJoin￨2￨f <￨2￨f X￨2￨f ,￨2￨f K￨2￨f ,￨2￨f V￨2￨f >￨2￨f correlate￨2￨f (￨2￨f MapJoin￨3￨p <￨3￨p X￨3￨p ,￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p join￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f Join￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f >￨2￨f getJoins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f getSubQ￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Value￨2￨f toValue￨2￨f (￨2￨f ExpressionFactory￨3￨p factory￨3￨p ,￨3￨p MetamodelImpl￨3￨p model￨3￨p ,￨3￨p CriteriaQueryImpl￨3￨p <￨3￨p ?￨3￨p >￨3￨p q￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ClassMetaData￨2￨f getCandidate￨2￨f (￨2￨f )￨2￨f {￨2￨f RootImpl￨3￨e <￨3￨e ?￨3￨e >￨3￨e root￨3￨e =￨3￨e (￨3￨e (￨3￨e RootImpl￨3￨e <￨3￨e ?￨3￨e >￨3￨e )￨3￨e (￨3￨e getRoot￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b RootImpl￨3￨b <￨3￨b ?￨3￨b >￨3￨b correlatedRoot￨3￨b =￨3￨b (￨3￨b (￨3￨b RootImpl￨3￨b <￨3￨b ?￨3￨b >￨3￨b )￨3￨b (￨3￨b root￨3￨b .￨3￨b getCorrelatedParent￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c correlatedRoot￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c root￨4￨c .￨4￨c getJoins￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j Join￨4￨e <￨4￨e ?￨4￨e ,￨4￨e ?￨4￨e >￨4￨e join￨4￨e =￨4￨e root￨4￨e .￨4￨e getJoins￨4￨e (￨4￨e )￨4￨e .￨4￨e iterator￨4￨e (￨4￨e )￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e ;￨4￨e FieldMetaData￨4￨e fmd￨4￨e =￨4￨e (￨4￨e (￨4￨e Members￨4￨e .￨4￨e Member￨4￨e <￨4￨e ?￨4￨e ,￨4￨e ?￨4￨e >￨4￨e )￨4￨e (￨4￨e join￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e fmd￨4￨e ;￨4￨e if￨4￨j (￨4￨j join￨5￨c .￨5￨c getAttribute￨5￨c (￨5￨c )￨5￨c .￨5￨c isCollection￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e fmd￨5￨e .￨5￨e isElementCollection￨5￨e (￨5￨e )￨5￨e ?￨5￨e fmd￨5￨e .￨5￨e getEmbeddedMetaData￨5￨e (￨5￨e )￨5￨e :￨5￨e fmd￨5￨e .￨5￨e getElement￨5￨e (￨5￨e )￨5￨e .￨5￨e getDeclaredTypeMetaData￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j return￨5￨e fmd￨5￨e .￨5￨e getDeclaredTypeMetaData￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e (￨3￨e (￨3￨e AbstractManagedType￨3￨e <￨3￨e ?￨3￨e >￨3￨e )￨3￨e (￨3￨e root￨3￨e .￨3￨e getModel￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e meta￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Border￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d WebMarkupContainerWithAssociatedMarkup￨1￨d <￨1￨d T￨1￨d >￨1￨d implements￨1￨d IComponentResolver￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e BODY￨2￨e =￨2￨e "body"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e BORDER￨2￨e =￨2￨e "border"￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e bodyVisible￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e MarkupContainer￨2￨e body￨2￨e ;￨2￨e public￨2￨f Border￨2￨f (￨2￨f MarkupContainer￨3￨p parent￨3￨p ,￨3￨p final￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Border￨2￨f (￨2￨f MarkupContainer￨3￨p parent￨3￨p ,￨3￨p final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p IModel￨3￨p <￨3￨p T￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f MarkupContainer￨2￨f getBodyContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f MarkupContainer￨2￨f newBorderBodyContainer￨2￨f (￨2￨f final￨3￨p MarkupContainer￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Border￨2￨f setBorderBodyVisible￨2￨f (￨2￨f boolean￨3￨p bodyVisible￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f MarkupFragment￨2￨f getMarkupFragment￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b MarkupFragment￨3￨b fragment￨3￨b =￨3￨b Border￨3￨b .￨3￨b getAssociatedMarkupFragment￨3￨b (￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j fragment￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j fragment￨4￨e =￨4￨e fragment￨4￨e .￨4￨e getChildFragment￨4￨e (￨4￨e path￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j fragment￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j fragment￨4￨e =￨4￨e super￨4￨e .￨4￨e getMarkupFragment￨4￨e (￨4￨e path￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e fragment￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f final￨2￨f void￨2￨f onComponentTagBody￨2￨f (￨2￨f final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p openTag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f resolve￨2￨f (￨2￨f final￨3￨p MarkupContainer￨3￨p container￨3￨p ,￨3￨p final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f renderHead￨2￨f (￨2￨f HeaderContainer￨3￨p container￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d BorderBody￨2￨d extends￨2￨d WebMarkupContainer￨2￨d implements￨2￨d IComponentResolver￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e transient￨3￨e boolean￨3￨e wasOpenClose￨3￨e =￨3￨e false￨3￨e ;￨3￨e public￨3￨f BorderBody￨3￨f (￨3￨f final￨4￨p MarkupContainer￨4￨p parent￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f MarkupFragment￨3￨f getMarkupFragment￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentTag￨3￨f (￨3￨f final￨4￨p ComponentTag￨4￨p tag￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentTagBody￨3￨f (￨3￨f final￨4￨p MarkupStream￨4￨p markupStream￨4￨p ,￨4￨p final￨4￨p ComponentTag￨4￨p openTag￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f resolve￨3￨f (￨3￨f final￨4￨p MarkupContainer￨4￨p container￨4￨p ,￨4￨p final￨4￨p MarkupStream￨4￨p markupStream￨4￨p ,￨4￨p final￨4￨p ComponentTag￨4￨p tag￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
class￨1￨d StressCategory￨1￨d {￨1￨d static￨2￨f Priority￨2￨f [￨2￨f ]￨2￨f priority￨2￨f =￨2￨f new￨2￨f Priority￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e static￨2￨e Priority￨2￨e defaultPriority￨2￨e =￨2￨e Category￨2￨e .￨2￨e getRoot￨2￨e (￨2￨e )￨2￨e .￨2￨e getPriority￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨e int￨2￨e LENGTH￨2￨e ;￨2￨e static￨2￨e String￨2￨e [￨2￨e ]￨2￨e names￨2￨e ;￨2￨e static￨2￨e Category￨2￨e [￨2￨e ]￨2￨e cat￨2￨e ;￨2￨e static￨2￨e StressCategory￨2￨e .￨2￨e CT￨2￨e [￨2￨e ]￨2￨e ct￨2￨e ;￨2￨e static￨2￨e Random￨2￨e random￨2￨e =￨2￨e new￨2￨e Random￨2￨e (￨2￨e 10￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f permute￨2￨f (￨2￨f int￨3￨p n￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f swap￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p names￨3￨p ,￨3￨p int￨3￨p i￨3￨p ,￨3￨p int￨3￨p j￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f permutationDump￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f createLoop￨2￨f (￨2￨f int￨3￨p n￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j n￨4￨c ==￨4￨c (￨4￨c StressCategory￨4￨c .￨4￨c LENGTH￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c StressCategory￨5￨c .￨5￨c LENGTH￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c StressCategory￨6￨c .￨6￨c ct￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j StressCategory￨6￨e .￨6￨e cat￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e null￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j StressCategory￨6￨e .￨6￨e cat￨6￨e [￨6￨e i￨6￨e ]￨6￨e =￨6￨e Category￨6￨e .￨6￨e getInstance￨6￨e (￨6￨e StressCategory￨6￨e .￨6￨e ct￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e catstr￨6￨e )￨6￨e ;￨6￨e StressCategory￨6￨e .￨6￨e cat￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e setPriority￨6￨e (￨6￨e StressCategory￨6￨e .￨6￨e ct￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e priority￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l StressCategory￨4￨e .￨4￨e test￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b _default￨4￨b .￨4￨b clear￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j else￨3￨j {￨3￨j StressCategory￨4￨e .￨4￨e ct￨4￨e [￨4￨e n￨4￨e ]￨4￨e =￨4￨e null￨4￨e ;￨4￨e StressCategory￨4￨e .￨4￨e createLoop￨4￨e (￨4￨e (￨4￨e n￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e ;￨4￨e StressCategory￨4￨e .￨4￨e ct￨4￨e [￨4￨e n￨4￨e ]￨4￨e =￨4￨e new￨4￨e StressCategory￨4￨e .￨4￨e CT￨4￨e (￨4￨e StressCategory￨4￨e .￨4￨e names￨4￨e [￨4￨e n￨4￨e ]￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e StressCategory￨4￨e .￨4￨e createLoop￨4￨e (￨4￨e (￨4￨e n￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e ;￨4￨e int￨4￨e r￨4￨e =￨4￨e StressCategory￨4￨e .￨4￨e random￨4￨e .￨4￨e nextInt￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j r￨5￨c <￨5￨c 0￨5￨c )￨4￨j {￨4￨j r￨5￨e =￨5￨e -￨5￨e r￨5￨e ;￨5￨e }￨4￨j StressCategory￨4￨e .￨4￨e ct￨4￨e [￨4￨e n￨4￨e ]￨4￨e =￨4￨e new￨4￨e StressCategory￨4￨e .￨4￨e CT￨4￨e (￨4￨e StressCategory￨4￨e .￨4￨e names￨4￨e [￨4￨e n￨4￨e ]￨4￨e ,￨4￨e StressCategory￨4￨e .￨4￨e priority￨4￨e [￨4￨e (￨4￨e r￨4￨e %￨4￨e 5￨4￨e )￨4￨e ]￨4￨e )￨4￨e ;￨4￨e StressCategory￨4￨e .￨4￨e createLoop￨4￨e (￨4￨e (￨4￨e n￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f static￨2￨f void￨2￨f test￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f ctDump￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f catDump￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f checkCorrectness￨2￨f (￨2￨f int￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Priority￨2￨f getExpectedPrioriy￨2￨f (￨2￨f StressCategory￨3￨p .￨3￨p CT￨3￨p ctParam￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d CT￨2￨d {￨2￨d public￨3￨e String￨3￨e catstr￨3￨e ;￨3￨e public￨3￨e Priority￨3￨e priority￨3￨e ;￨3￨e CT￨3￨f (￨3￨f String￨4￨p catstr￨4￨p ,￨4￨p Priority￨4￨p priority￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractRemoteService￨1￨d implements￨1￨d InvocationHandler￨1￨d ,￨1￨d IRemoteService￨1￨d {￨1￨d protected￨2￨e static￨2￨e final￨2￨e Object￨2￨e [￨2￨e ]￨2￨e EMPTY_ARGS￨2￨e =￨2￨e new￨2￨e Object￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e protected￨2￨f abstract￨2￨f String￨2￨f [￨2￨f ]￨2￨f getInterfaceClassNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f IRemoteServiceID￨2￨f getRemoteServiceID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f IRemoteServiceReference￨2￨f getRemoteServiceReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f loadInterfaceClass￨2￨f (￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRemoteService￨2￨f getRemoteService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f long￨2￨f getDefaultTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFuture￨2￨f callAsync￨2￨f (￨2￨f final￨3￨p IRemoteCall￨3￨p call￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f Object￨2￨f getProxy￨2￨f (￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e String￨4￨e [￨4￨e ]￨4￨e clazzes￨4￨e =￨4￨e getInterfaceClassNames￨4￨e (￨4￨e )￨4￨e ;￨4￨e List￨4￨e classes￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c clazzes￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l Class￨5￨e c￨5￨e =￨5￨e loadInterfaceClass￨5￨e (￨5￨e clazzes￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ;￨5￨e classes￨5￨e .￨5￨e add￨5￨e (￨5￨e c￨5￨e )￨5￨e ;￨5￨e Class￨5￨e asyncRemoteServiceProxyClass￨5￨e =￨5￨e findAsyncRemoteServiceProxyClass￨5￨e (￨5￨e c￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c asyncRemoteServiceProxyClass￨6￨c !=￨6￨c null￨6￨c )￨6￨c &&￨6￨c (￨6￨c asyncRemoteServiceProxyClass￨6￨c .￨6￨c isInterface￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j classes￨6￨e .￨6￨e add￨6￨e (￨6￨e asyncRemoteServiceProxyClass￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l classes￨4￨d .￨4￨d add￨4￨d (￨4￨d IRemoteServiceProxy￨4￨d .￨4￨d class￨4￨d )￨4￨d ;￨4￨d return￨4￨d createProxy￨4￨d (￨4￨d (￨4￨d (￨4￨d Class￨4￨d [￨4￨d ]￨4￨d )￨4￨d (￨4￨d classes￨4￨d .￨4￨d toArray￨4￨d (￨4￨d new￨4￨d Class￨4￨d [￨4￨d ]￨4￨d {￨4￨d }￨4￨d )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f final￨4￨p Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e ECFException￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>proxy"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f final￨4￨p NoClassDefFoundError￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b ECFException￨4￨b (￨4￨b "Failed<seq2seq4repair_space>to<seq2seq4repair_space>load<seq2seq4repair_space>proxy<seq2seq4repair_space>interface"￨4￨b ,￨4￨b e￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f protected￨2￨f Object￨2￨f createProxy￨2￨f (￨2￨f Class￨3￨p [￨3￨p ]￨3￨p classes￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f findAsyncRemoteServiceProxyClass￨2￨f (￨2￨f Class￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f convertInterfaceNameToAsyncInterfaceName￨2￨f (￨2￨f String￨3￨p interfaceName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getCallParametersForProxyInvoke￨2￨f (￨2￨f String￨3￨p callMethod￨3￨p ,￨3￨p Method￨3￨p proxyMethod￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f long￨2￨f getCallTimeoutForProxyInvoke￨2￨f (￨2￨f String￨3￨p callMethod￨3￨p ,￨3￨p Method￨3￨p proxyMethod￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getCallMethodNameForProxyInvoke￨2￨f (￨2￨f Method￨3￨p method￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f invokeObject￨2￨f (￨2￨f Object￨2￨f proxy￨2￨f ,￨2￨f final￨2￨f Method￨2￨f method￨2￨f ,￨2￨f final￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f invokeSync￨2￨f (￨2￨f IRemoteCall￨2￨f call￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f invoke￨2￨f (￨2￨f Object￨2￨f proxy￨2￨f ,￨2￨f final￨2￨f Method￨2￨f method￨2￨f ,￨2￨f final￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨d class￨2￨d AsyncArgs￨2￨d {￨2￨d private￨3￨e IRemoteCallListener￨3￨e listener￨3￨e ;￨3￨e private￨3￨e Object￨3￨e [￨3￨e ]￨3￨e args￨3￨e ;￨3￨e public￨3￨f AsyncArgs￨3￨f (￨3￨f IRemoteCallListener￨4￨p listener￨4￨p ,￨4￨p Object￨4￨p [￨4￨p ]￨4￨p originalArgs￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f IRemoteCallListener￨3￨f getListener￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f [￨3￨f ]￨3￨f getArgs￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d protected￨2￨f Object￨2￨f invokeAsync￨2￨f (￨2￨f final￨2￨f Method￨2￨f method￨2￨f ,￨2￨f final￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f AbstractRemoteService￨2￨f .￨2￨f AsyncArgs￨2￨f getAsyncArgs￨2￨f (￨2￨f Method￨3￨p method￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getAsyncInvokeMethodName￨2￨f (￨2￨f Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Java2WSWidgetFactory￨1￨d {￨1￨d private￨2￨f Java2WSWidgetFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createSOAPBindingLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Combo￨2￨f createSOAPBingCombo￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createXSDImportsButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createFrontendLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Combo￨2￨f createFrontendCombo￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createDatabindingLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Combo￨2￨f createDatabindingCombo￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createGenerateClientButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createGenerateServerButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createGenerateWrapperFaultBeanButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createGenerateWSDLButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createWSDLFileNameLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Text￨2￨f createWSDLFileNameText￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSDataModel￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createUseSEIButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createInformationLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p IType￨3￨p startingPointType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createPaddingLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createSelectSEIButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createSelectSEILabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Combo￨2￨f createSelectSEICombo￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSDataModel￨3￨p model￨3￨p ,￨3￨p IType￨3￨p javaStartingPointType￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b Combo￨3￨b seiCombo￨3￨b =￨3￨b new￨3￨b Combo￨3￨b (￨3￨b parent￨3￨b ,￨3￨b SWT￨3￨b .￨3￨b READ_ONLY￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b seiCombo￨3￨e .￨3￨e setToolTipText￨3￨e (￨3￨e JAVA2WS_SELECT_SEI_TOOLTIP￨3￨e )￨3￨e ;￨3￨e IJavaProject￨3￨e javaProject￨3￨e =￨3￨e JDTUtils￨3￨e .￨3￨e getJavaProject￨3￨e (￨3￨e model￨3￨e .￨3￨e getProjectName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f ITypeHierarchy￨4￨e typeHierarchy￨4￨e =￨4￨e javaStartingPointType￨4￨e .￨4￨e newTypeHierarchy￨4￨e (￨4￨e javaProject￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e IType￨4￨e [￨4￨e ]￨4￨e allInterfaces￨4￨e =￨4￨e typeHierarchy￨4￨e .￨4￨e getAllInterfaces￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c allInterfaces￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l IType￨5￨e itype￨5￨e =￨5￨e allInterfaces￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c !￨6￨c (￨6￨c itype￨6￨c .￨6￨c isBinary￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c itype￨6￨c .￨6￨c getResource￨6￨c (￨6￨c )￨6￨c .￨6￨c getProject￨6￨c (￨6￨c )￨6￨c .￨6￨c equals￨6￨c (￨6￨c javaProject￨6￨c .￨6￨c getProject￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j seiCombo￨6￨e .￨6￨e add￨6￨e (￨6￨e itype￨6￨e .￨6￨e getFullyQualifiedName￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨f catch￨3￨f (￨3￨f JavaModelException￨4￨p jme￨4￨p )￨3￨f {￨3￨f CXFUIPlugin￨4￨e .￨4￨e log￨4￨e (￨4￨e jme￨4￨e .￨4￨e getStatus￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f seiCombo￨3￨f .￨3￨f addSelectionListener￨3￨f (￨3￨f new￨3￨f SelectionAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f widgetSelected￨4￨f (￨4￨f SelectionEvent￨5￨p event￨5￨p )￨4￨f {￨4￨f String￨5￨e seiInterfaceName￨5￨e =￨5￨e seiCombo￨5￨e .￨5￨e getText￨5￨e (￨5￨e )￨5￨e ;￨5￨e model￨5￨e .￨5￨e setFullyQualifiedJavaInterfaceName￨5￨e (￨5￨e seiInterfaceName￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e seiCombo￨3￨e .￨3￨e select￨3￨e (￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e seiCombo￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createExtractSEIButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createExtractSEILabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Text￨2￨f createSEIInterfaceNameText￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createMemebersToExtractLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f CheckboxTableViewer￨2￨f createSEIMembersToExtractTableViewer￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createSelectAllButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Button￨2￨f createDeselectAllButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Label￨2￨f createSelectImplementationLabel￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Combo￨2￨f createSelectImplementationCombo￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p final￨3￨p Java2WSDataModel￨3￨p model￨3￨p ,￨3￨p IType￨3￨p javaStartingPointType￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BindingKeyResolver￨1￨d extends￨1￨d BindingKeyParser￨1￨d {￨1￨d Compiler￨2￨e compiler￨2￨e ;￨2￨e Binding￨2￨e compilerBinding￨2￨e ;￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e compoundName￨2￨e ;￨2￨e int￨2￨e dimension￨2￨e ;￨2￨e LookupEnvironment￨2￨e environment￨2￨e ;￨2￨e ReferenceBinding￨2￨e genericType￨2￨e ;￨2￨e MethodBinding￨2￨e methodBinding￨2￨e ;￨2￨e CompilationUnitDeclaration￨2￨e parsedUnit￨2￨e ;￨2￨e BlockScope￨2￨e scope￨2￨e ;￨2￨e TypeBinding￨2￨e typeBinding￨2￨e ;￨2￨e TypeDeclaration￨2￨e typeDeclaration￨2￨e ;￨2￨e ArrayList￨2￨e types￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f BindingKeyResolver￨2￨f (￨2￨f BindingKeyParser￨3￨p parser￨3￨p ,￨3￨p Compiler￨3￨p compiler￨3￨p ,￨3￨p LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BindingKeyResolver￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BindingKeyResolver￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p Compiler￨3￨p compiler￨3￨p ,￨3￨p LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f compoundName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeArrayDimension￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p brakets￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeField￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fieldName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeParameterizedMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeLocalType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p uniqueKey￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeLocalVar￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p varName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeMethod￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeMemberType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p simpleTypeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumePackage￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p pkgName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeParameterizedType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p simpleTypeName￨3￨p ,￨3￨p boolean￨3￨p isRaw￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeParser￨2￨f (￨2￨f BindingKeyParser￨3￨p parser￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeScope￨2￨f (￨2￨f int￨3￨p scopeNumber￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeRawType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeSecondaryType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p simpleTypeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeFullyQualifiedName￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fullyQualifiedName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeTopLevelType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f consumeTypeVariable￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p typeVariableName￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b TypeVariableBinding￨3￨b [￨3￨b ]￨3￨b typeVariableBindings￨3￨b =￨3￨b this￨3￨b .￨3￨b typeBinding￨3￨b .￨3￨b typeVariables￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c length￨4￨c =￨4￨c typeVariableBindings￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c length￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l TypeVariableBinding￨4￨e typeVariableBinding￨4￨e =￨4￨e typeVariableBindings￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e if￨4￨j (￨4￨j CharOperation￨5￨c .￨5￨c equals￨5￨c (￨5￨c typeVariableName￨5￨c ,￨5￨c typeVariableBinding￨5￨c .￨5￨c sourceName￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e compilerBinding￨5￨e =￨5￨e typeVariableBinding￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f public￨2￨f void￨2￨f consumeWildCard￨2￨f (￨2￨f int￨3￨p kind￨3￨p ,￨3￨p int￨3￨p rank￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f getArrayBinding￨2￨f (￨2￨f int￨3￨p dim￨3￨p ,￨3￨p TypeBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f getBaseTypeBinding￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f getBinaryBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CompilationUnitDeclaration￨2￨f getCompilationUnitDeclaration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Binding￨2￨f getCompilerBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f getTypeBinding￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p simpleTypeName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f [￨2￨f ]￨2￨f getTypeBindingArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f malformedKey￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BindingKeyParser￨2￨f newParser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d UpToDate￨1￨d extends￨1￨d MatchingTask￨1￨d implements￨1￨d Condition￨1￨d {￨1￨d private￨2￨e ArrayList￨2￨e sourceFileSets￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e Mapper￨2￨e mapperElement￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e _property￨2￨e ;￨2￨e private￨2￨e File￨2￨e _targetFile￨2￨e ;￨2￨e private￨2￨e String￨2￨e _value￨2￨e ;￨2￨e public￨2￨f void￨2￨f setProperty￨2￨f (￨2￨f String￨3￨p property￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTargetFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setValue￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSrcfiles￨2￨f (￨2￨f FileSet￨3￨p fs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Mapper￨2￨f createMapper￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c mapperElement￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e TaskException￨4￨e (￨4￨e "Cannot<seq2seq4repair_space>define<seq2seq4repair_space>more<seq2seq4repair_space>than<seq2seq4repair_space>one<seq2seq4repair_space>mapper"￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b mapperElement￨3￨b =￨3￨b new￨3￨b Mapper￨3￨b (￨3￨b getProject￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e mapperElement￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f eval￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f scanDir￨2￨f (￨2￨f File￨2￨f srcDir￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f files￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TwoPhaseCommitEventProcessor￨1￨d implements￨1￨d IEventProcessor￨1￨d ,￨1￨d ISharedObjectContainerTransaction￨1￨d {￨1￨d BaseSharedObject￨2￨e sharedObject￨2￨e =￨2￨e null￨2￨e ;￨2￨e byte￨2￨e transactionState￨2￨e =￨2￨e ISharedObjectContainerTransaction￨2￨e .￨2￨e ACTIVE￨2￨e ;￨2￨e Object￨2￨e lock￨2￨e =￨2￨e new￨2￨e Object￨2￨e (￨2￨e )￨2￨e ;￨2￨e List￨2￨e participants￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e Map￨2￨e failed￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e int￨2￨e timeout￨2￨e =￨2￨e ISharedObjectTransactionConfig￨2￨e .￨2￨e DEFAULT_TIMEOUT￨2￨e ;￨2￨e int￨2￨e minFailedToAbort￨2￨e =￨2￨e 0￨2￨e ;￨2￨e long￨2￨e identifier￨2￨e =￨2￨e 0￨2￨e ;￨2￨e ISharedObjectTransactionParticipantsFilter￨2￨e participantsFilter￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TwoPhaseCommitEventProcessor￨2￨f (￨2￨f BaseSharedObject￨3￨p bse￨3￨p ,￨3￨p ISharedObjectTransactionConfig￨3￨p config￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f trace￨2￨f (￨2￨f String￨3￨p msg￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f traceStack￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p Throwable￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getMinFailedToAbort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isPrimary￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f BaseSharedObject￨2￨f getSharedObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ID￨2￨f getHomeID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addParticipants￨2￨f (￨2￨f ID￨3￨p [￨3￨p ]￨3￨p ids￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f removeParticipant￨2￨f (￨2￨f ID￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addFailed￨2￨f (￨2￨f ID￨3￨p remote￨3￨p ,￨3￨p Throwable￨3￨p failure￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISharedObjectContext￨2￨f getContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f processEvent￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleActivated￨2￨f (￨2￨f ISharedObjectActivatedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f replicateTo￨2￨f (￨2￨f ID￨3￨p [￨3￨p ]￨3￨p remotes￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handlePrimaryActivated￨2￨f (￨2￨f ISharedObjectActivatedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f getNextIdentifier￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleReplicaActivated￨2￨f (￨2￨f ISharedObjectActivatedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleJoined￨2￨f (￨2￨f IContainerConnectedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleCreateResponse￨2￨f (￨2￨f ISharedObjectCreateResponseEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleDeparted￨2￨f (￨2￨f IContainerDisconnectedEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleVotingCompletedCreateResponse￨2￨f (￨2￨f ID￨3￨p fromID￨3￨p ,￨3￨p Throwable￨3￨p e￨3￨p ,￨3￨p long￨3￨p identifier1￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handlePostCommitFailure￨2￨f (￨2￨f ID￨3￨p fromID￨3￨p ,￨3￨p Throwable￨3￨p e￨3￨p ,￨3￨p long￨3￨p identifier1￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f sendCommit￨2￨f (￨2￨f )￨2￨f throws￨2￨f SharedObjectAddAbortException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f getTransactionState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setTransactionState￨2￨f (￨2￨f byte￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f waitToCommit￨2￨f (￨2￨f )￨2￨f throws￨2￨f SharedObjectAddAbortException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f doTMAbort￨2￨f (￨2￨f Throwable￨2￨f except￨2￨f )￨2￨f throws￨2￨f SharedObjectAddAbortException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f doTMCommit￨2￨f (￨2￨f )￨2￨f throws￨2￨f SharedObjectAddAbortException￨2￨f (￨2￨f )￨2￨f {￨2￨f trace￨3￨e (￨3￨e "doTMCommit"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b getSharedObject￨3￨b (￨3￨b )￨3￨b .￨3￨b getGroupID￨3￨b (￨3￨b )￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b sendCommit￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨3￨e localCommitted￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f localCommitted￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isVotingCompleted￨2￨f (￨2￨f )￨2￨f throws￨2￨f SharedObjectAddAbortException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CustomLoadMetricDefinition￨1￨d extends￨1￨d SimpleResourceDefinition￨1￨d {￨1￨d static￨2￨e final￨2￨e PathElement￨2￨e PATH￨2￨e =￨2￨e PathElement￨2￨e .￨2￨e pathElement￨2￨e (￨2￨e CUSTOM_LOAD_METRIC￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e CustomLoadMetricDefinition￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e CustomLoadMetricDefinition￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e CLASS￨2￨e =￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e CommonAttributes￨2￨e .￨2￨e CLASS￨2￨e ,￨2￨e STRING￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setAllowExpression￨2￨e (￨2￨e false￨2￨e )￨2￨e .￨2￨e setRestartAllServices￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨f final￨2￨f AttributeDefinition￨2￨f [￨2￨f ]￨2￨f ATTRIBUTES￨2￨f =￨2￨f new￨2￨f AttributeDefinition￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e static￨2￨f void￨2￨f buildTransformation￨2￨f (￨2￨f ModelVersion￨3￨p version￨3￨p ,￨3￨p ResourceTransformationDescriptionBuilder￨3￨p builder￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b VERSION_1_2_0￨3￨b .￨3￨b requiresTransformation￨3￨b (￨3￨b version￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b builder￨3￨e .￨3￨e addChildResource￨3￨e (￨3￨e CustomLoadMetricDefinition￨3￨e .￨3￨e PATH￨3￨e )￨3￨e .￨3￨e getAttributeBuilder￨3￨e (￨3￨e )￨3￨e .￨3￨e addRejectCheck￨3￨e (￨3￨e SIMPLE_EXPRESSIONS￨3￨e ,￨3￨e CustomLoadMetricDefinition￨3￨e .￨3￨e CLASS￨3￨e ,￨3￨e LoadMetricDefinition￨3￨e .￨3￨e WEIGHT￨3￨e )￨3￨e .￨3￨e addRejectCheck￨3￨e (￨3￨e CapacityCheckerAndConverter￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e LoadMetricDefinition￨3￨e .￨3￨e CAPACITY￨3￨e )￨3￨e .￨3￨e setValueConverter￨3￨e (￨3￨e CapacityCheckerAndConverter￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e LoadMetricDefinition￨3￨e .￨3￨e CAPACITY￨3￨e )￨3￨e .￨3￨e end￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f CustomLoadMetricDefinition￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registerAttributes￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p resourceRegistration￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LineBreakHandler￨1￨d implements￨1￨d CharacterHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e boolean￨2￨e fallbackToEscape￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e leaveOnLnBreak￨2￨e ;￨2￨e public￨2￨f LineBreakHandler￨2￨f (￨2￨f boolean￨3￨p leaveOnLnBreak￨3￨p ,￨3￨p boolean￨3￨p fallbackToEscape￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f handle￨2￨f (￨2￨f ParsingContext￨2￨f ctx￨2￨f )￨2￨f throws￨2￨f CommandFormatException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c ctx￨4￨c .￨4￨c getCharacter￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c '\\'￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c ctx￨5￨c .￨5￨c getInput￨5￨c (￨5￨c )￨5￨c .￨5￨c length￨5￨c (￨5￨c )￨5￨c )￨5￨c >￨5￨c (￨5￨c (￨5￨c ctx￨5￨c .￨5￨c getLocation￨5￨c (￨5￨c )￨5￨c )￨5￨c +￨5￨c (￨5￨c LINE_SEPARATOR￨5￨c .￨5￨c length￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c ctx￨5￨c .￨5￨c getInput￨5￨c (￨5￨c )￨5￨c .￨5￨c startsWith￨5￨c (￨5￨c LINE_SEPARATOR￨5￨c ,￨5￨c (￨5￨c (￨5￨c ctx￨5￨c .￨5￨c getLocation￨5￨c (￨5￨c )￨5￨c )￨5￨c +￨5￨c 1￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j leaveOnLnBreak￨6￨c )￨5￨j {￨5￨j ctx￨6￨e .￨6￨e leaveState￨6￨e (￨6￨e )￨6￨e ;￨6￨e ctx￨6￨e .￨6￨e advanceLocation￨6￨e (￨6￨e LINE_SEPARATOR￨6￨e .￨6￨e length￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j fallbackToEscape￨5￨c )￨4￨j {￨4￨j ctx￨5￨e .￨5￨e enterState￨5￨e (￨5￨e INSTANCE￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j <START_BUG>￨5￨b doHandle￨5￨b (￨5￨b ctx￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨j else￨3￨j {￨3￨j doHandle￨4￨e (￨4￨e ctx￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f doHandle￨2￨f (￨2￨f ParsingContext￨2￨f ctx￨2￨f )￨2￨f throws￨2￨f CommandFormatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestElementSaver￨1￨d implements￨1￨d TestElementTraverser￨1￨d {￨1￨d private￨2￨e String￨2￨e name￨2￨e ;￨2￨e private￨2￨e LinkedList￨2￨e stack￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e DefaultConfiguration￨2￨e rootConfig￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TestElementSaver￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Configuration￨2￨f getConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f startTestElement￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConfigName￨2￨f (￨2￨f DefaultConfiguration￨3￨p config￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f endTestElement￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f simplePropertyValue￨2￨f (￨2￨f JMeterProperty￨3￨p value￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f Object￨4￨e parent￨4￨e =￨4￨e stack￨4￨e .￨4￨e getLast￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c parent￨5￨c instanceof￨5￨c Configuration￨5￨c )￨5￨c )￨4￨j {￨4￨j DefaultConfiguration￨5￨e config￨5￨e =￨5￨e new￨5￨e DefaultConfiguration￨5￨e (￨5￨e "property"￨5￨e ,￨5￨e "property"￨5￨e )￨5￨e ;￨5￨e config￨5￨e .￨5￨e setValue￨5￨e (￨5￨e (￨5￨e value￨5￨e !=￨5￨e null￨5￨e ?￨5￨e value￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e :￨5￨e ""￨5￨e )￨5￨e )￨5￨e ;￨5￨e config￨5￨e .￨5￨e setAttribute￨5￨e (￨5￨e "name"￨5￨e ,￨5￨e parent￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e config￨5￨e .￨5￨e setAttribute￨5￨e (￨5￨e XML_SPACE￨5￨e ,￨5￨e PRESERVE￨5￨e )￨5￨e ;￨5￨e stack￨5￨e .￨5￨e removeLast￨5￨e (￨5￨e )￨5￨e ;￨5￨e stack￨5￨e .￨5￨e add￨5￨e (￨5￨e config￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c parent￨5￨c instanceof￨5￨c DefaultConfiguration￨5￨c )￨5￨c &&￨5￨c (￨5￨c value￨5￨c instanceof￨5￨c Configuration￨5￨c )￨5￨c )￨4￨j {￨4￨j (￨5￨e (￨5￨e DefaultConfiguration￨5￨e )￨5￨e (￨5￨e parent￨5￨e )￨5￨e )￨5￨e .￨5￨e addChild￨5￨e (￨5￨e (￨5￨e (￨5￨e Configuration￨5￨e )￨5￨e (￨5￨e value￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c parent￨5￨c instanceof￨5￨c DefaultConfiguration￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c value￨5￨c instanceof￨5￨c Configuration￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j DefaultConfiguration￨5￨e config￨5￨e =￨5￨e new￨5￨e DefaultConfiguration￨5￨e (￨5￨e "string"￨5￨e ,￨5￨e "string"￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b config￨5￨b .￨5￨b setValue￨5￨b (￨5￨b value￨5￨b .￨5￨b toString￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b config￨5￨e .￨5￨e setAttribute￨5￨e (￨5￨e XML_SPACE￨5￨e ,￨5￨e PRESERVE￨5￨e )￨5￨e ;￨5￨e (￨5￨e (￨5￨e DefaultConfiguration￨5￨e )￨5￨e (￨5￨e parent￨5￨e )￨5￨e )￨5￨e .￨5￨e addChild￨5￨e (￨5￨e config￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f NoSuchElementException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f public￨2￨f void￨2￨f startMap￨2￨f (￨2￨f MapProperty￨3￨p map￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f startCollection￨2￨f (￨2￨f CollectionProperty￨3￨p col￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f endProperty￨2￨f (￨2￨f JMeterProperty￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f finishConfig￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f startProperty￨2￨f (￨2￨f JMeterProperty￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CrosscuttingMembers￨1￨d {￨1￨d private￨2￨e ResolvedTypeX￨2￨e inAspect￨2￨e ;￨2￨e private￨2￨e World￨2￨e world￨2￨e ;￨2￨e private￨2￨e PerClause￨2￨e perClause￨2￨e ;￨2￨e private￨2￨e List￨2￨e shadowMungers￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e 4￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e typeMungers￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e 4￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e declareParents￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e 4￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e declareSofts￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e 0￨2￨e )￨2￨e ;￨2￨e private￨2￨e List￨2￨e declareDominates￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e 4￨2￨e )￨2￨e ;￨2￨e public￨2￨f CrosscuttingMembers￨2￨f (￨2￨f ResolvedTypeX￨3￨p inAspect￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConcreteShadowMunger￨2￨f (￨2￨f ShadowMunger￨3￨p m￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addShadowMungers￨2￨f (￨2￨f Collection￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addShadowMunger￨2￨f (￨2￨f ShadowMunger￨3￨p m￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTypeMungers￨2￨f (￨2￨f Collection￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTypeMunger￨2￨f (￨2￨f ConcreteTypeMunger￨3￨p m￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addDeclares￨2￨f (￨2￨f Collection￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addDeclare￨2￨f (￨2￨f Declare￨3￨p declare￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j declare￨4￨c instanceof￨4￨c DeclareErrorOrWarning￨4￨c )￨3￨j {￨3￨j ShadowMunger￨4￨e m￨4￨e =￨4￨e new￨4￨e Checker￨4￨e (￨4￨e (￨4￨e (￨4￨e DeclareErrorOrWarning￨4￨e )￨4￨e (￨4￨e declare￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e addShadowMunger￨4￨e (￨4￨e m￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j declare￨4￨c instanceof￨4￨c DeclarePrecedence￨4￨c )￨3￨j {￨3￨j declareDominates￨4￨e .￨4￨e add￨4￨e (￨4￨e declare￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j declare￨4￨c instanceof￨4￨c DeclareParents￨4￨c )￨3￨j {￨3￨j DeclareParents￨4￨e dp￨4￨e =￨4￨e (￨4￨e (￨4￨e DeclareParents￨4￨e )￨4￨e (￨4￨e declare￨4￨e )￨4￨e )￨4￨e ;￨4￨e exposeTypes￨4￨e (￨4￨e dp￨4￨e .￨4￨e getParents￨4￨e (￨4￨e )￨4￨e .￨4￨e getExactTypes￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e declareParents￨4￨e .￨4￨e add￨4￨e (￨4￨e dp￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j declare￨4￨c instanceof￨4￨c DeclareSoft￨4￨c )￨3￨j {￨3￨j DeclareSoft￨4￨e d￨4￨e =￨4￨e (￨4￨e (￨4￨e DeclareSoft￨4￨e )￨4￨e (￨4￨e declare￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b ShadowMunger￨4￨b m￨4￨b =￨4￨b Advice￨4￨b .￨4￨b makeSoftener￨4￨b (￨4￨b world￨4￨b ,￨4￨b d￨4￨b .￨4￨b getPointcut￨4￨b (￨4￨b )￨4￨b ,￨4￨b d￨4￨b .￨4￨b getException￨4￨b (￨4￨b )￨4￨b ,￨4￨b inAspect￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Pointcut￨4￨e concretePointcut￨4￨e =￨4￨e d￨4￨e .￨4￨e getPointcut￨4￨e (￨4￨e )￨4￨e .￨4￨e concretize￨4￨e (￨4￨e inAspect￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e m￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e pointcut￨4￨e =￨4￨e concretePointcut￨4￨e ;￨4￨e declareSofts￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e DeclareSoft￨4￨e (￨4￨e d￨4￨e .￨4￨e getException￨4￨e (￨4￨e )￨4￨e ,￨4￨e concretePointcut￨4￨e )￨4￨e )￨4￨e ;￨4￨e addConcreteShadowMunger￨4￨e (￨4￨e m￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e "unimplemented"￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f exposeTypes￨2￨f (￨2￨f Collection￨3￨p typesToExpose￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f exposeType￨2￨f (￨2￨f TypeX￨3￨p typeToExpose￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addPrivilegedAccesses￨2￨f (￨2￨f Collection￨3￨p accessedMembers￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addPrivilegedAccess￨2￨f (￨2￨f ResolvedMember￨3￨p member￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f getCflowEntries￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f replaceWith￨2￨f (￨2￨f CrosscuttingMembers￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PerClause￨2￨f getPerClause￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPerClause￨2￨f (￨2￨f PerClause￨3￨p perClause￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getDeclareDominates￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getDeclareParents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getDeclareSofts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getShadowMungers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getTypeMungers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d RunUpdateProcessor￨1￨d extends￨1￨d UpdateRequestProcessor￨1￨d {￨1￨d private￨2￨e final￨2￨e SolrQueryRequest￨2￨e req￨2￨e ;￨2￨e private￨2￨e final￨2￨e UpdateHandler￨2￨e updateHandler￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e changesSinceCommit￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f RunUpdateProcessor￨2￨f (￨2￨f SolrQueryRequest￨3￨p req￨3￨p ,￨3￨p UpdateRequestProcessor￨3￨p next￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f processAdd￨2￨f (￨2￨f AddUpdateCommand￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f processDelete￨2￨f (￨2￨f DeleteUpdateCommand￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b cmd￨3￨b .￨3￨b id￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b updateHandler￨3￨e .￨3￨e delete￨3￨e (￨3￨e cmd￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j updateHandler￨4￨e .￨4￨e deleteByQuery￨4￨e (￨4￨e cmd￨4￨e )￨4￨e ;￨4￨e }￨3￨j super￨3￨e .￨3￨e processDelete￨3￨e (￨3￨e cmd￨3￨e )￨3￨e ;￨3￨e changesSinceCommit￨3￨e =￨3￨e true￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f processMergeIndexes￨2￨f (￨2￨f MergeIndexesCommand￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f processCommit￨2￨f (￨2￨f CommitUpdateCommand￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f processRollback￨2￨f (￨2￨f RollbackUpdateCommand￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f finish￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MemberImpl￨1￨d implements￨1￨d Comparable￨1￨d ,￨1￨d AnnotatedElement￨1￨d ,￨1￨d Member￨1￨d {￨1￨d protected￨2￨e Kind￨2￨e kind￨2￨e ;￨2￨e protected￨2￨e UnresolvedType￨2￨e declaringType￨2￨e ;￨2￨e protected￨2￨e int￨2￨e modifiers￨2￨e ;￨2￨e protected￨2￨e UnresolvedType￨2￨e returnType￨2￨e ;￨2￨e protected￨2￨e String￨2￨e name￨2￨e ;￨2￨e protected￨2￨e UnresolvedType￨2￨e [￨2￨e ]￨2￨e parameterTypes￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e signature￨2￨e ;￨2￨e private￨2￨e String￨2￨e paramSignature￨2￨e ;￨2￨e private￨2￨e JoinPointSignatureIterator￨2￨e joinPointSignatures￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f MemberImpl￨2￨f (￨2￨f Kind￨3￨p kind￨3￨p ,￨3￨p UnresolvedType￨3￨p declaringType￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MemberImpl￨2￨f (￨2￨f Kind￨3￨p kind￨3￨p ,￨3￨p UnresolvedType￨3￨p declaringType￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p ,￨3￨p UnresolvedType￨3￨p returnType￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p UnresolvedType￨3￨p [￨3￨p ]￨3￨p parameterTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResolvedMember￨2￨f resolve￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f typesToSignature￨2￨f (￨2￨f UnresolvedType￨3￨p returnType￨3￨p ,￨3￨p UnresolvedType￨3￨p [￨3￨p ]￨3￨p paramTypes￨3￨p ,￨3￨p boolean￨3￨p useRawTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f typesToSignature￨2￨f (￨2￨f UnresolvedType￨3￨p [￨3￨p ]￨3￨p paramTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Object￨2￨f [￨2￨f ]￨2￨f signatureToTypes￨2￨f (￨2￨f String￨3￨p sig￨3￨p ,￨3￨p boolean￨3￨p keepParameterizationInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f field￨2￨f (￨2￨f String￨3￨p declaring￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Member￨2￨f field￨2￨f (￨2￨f UnresolvedType￨3￨p declaring￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p UnresolvedType￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f method￨2￨f (￨2￨f UnresolvedType￨3￨p declaring￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f monitorEnter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f monitorExit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Member￨2￨f pointcut￨2￨f (￨2￨f UnresolvedType￨3￨p declaring￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f MemberImpl￨2￨f field￨2￨f (￨2￨f String￨3￨p declaring￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p UnresolvedType￨3￨p ty￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f method￨2￨f (￨2￨f UnresolvedType￨3￨p declTy￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p UnresolvedType￨3￨p rTy￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p UnresolvedType￨3￨p [￨3￨p ]￨3￨p paramTys￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Member￨2￨f pointcut￨2￨f (￨2￨f UnresolvedType￨3￨p declTy￨3￨p ,￨3￨p int￨3￨p mods￨3￨p ,￨3￨p UnresolvedType￨3￨p rTy￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p UnresolvedType￨3￨p [￨3￨p ]￨3￨p paramTys￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ResolvedMemberImpl￨2￨f makeExceptionHandlerSignature￨2￨f (￨2￨f UnresolvedType￨3￨p inType￨3￨p ,￨3￨p UnresolvedType￨3￨p catchType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MemberImpl￨2￨f fieldFromString￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Member￨2￨f methodFromString￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f parseIds￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e ZERO_STRINGS￨2￨e =￨2￨e new￨2￨e String￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e volatile￨2￨e int￨2￨e hashCode￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f compareTo￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toLongString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Kind￨2￨f getKind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f getDeclaringType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f getReturnType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f getGenericReturnType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f [￨2￨f ]￨2￨f getParameterTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getArity￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getParameterSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCompatibleWith￨2￨f (￨2￨f Member￨3￨p am￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f equalTypes￨2￨f (￨2￨f UnresolvedType￨3￨p [￨3￨p ]￨3￨p a￨3￨p ,￨3￨p UnresolvedType￨3￨p [￨3￨p ]￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f [￨2￨f ]￨2￨f getExceptions￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isProtected￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isStatic￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isStrict￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isStatic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isInterface￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isPrivate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canBeParameterized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f getCallsiteModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getExtractableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasAnnotation￨2￨f (￨2￨f UnresolvedType￨3￨p ofType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResolvedType￨2￨f [￨2￨f ]￨2￨f getAnnotationTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotationX￨2￨f [￨2￨f ]￨2￨f getAnnotations￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b throw￨3￨b new￨3￨b UnsupportedOperationException￨3￨b (￨3￨b "You<seq2seq4repair_space>should<seq2seq4repair_space>resolve<seq2seq4repair_space>this<seq2seq4repair_space>member<seq2seq4repair_space>and<seq2seq4repair_space>call<seq2seq4repair_space>getAnnotations()<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>result..."￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Collection￨2￨f getDeclaringTypes￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f walkUp￨2￨f (￨2￨f Collection￨3￨p acc￨3￨p ,￨3￨p ResolvedType￨3￨p curr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f walkUpStatic￨2￨f (￨2￨f Collection￨3￨p acc￨3￨p ,￨3￨p ResolvedType￨3￨p curr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSignatureMakerName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSignatureType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getHandlerSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getStaticInitializationSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getAdviceSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMethodSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMonitorSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getConstructorSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getFieldSignatureString￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f makeString￨2￨f (￨2￨f int￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f makeString￨2￨f (￨2￨f UnresolvedType￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f makeString￨2￨f (￨2￨f UnresolvedType￨3￨p [￨3￨p ]￨3￨p types￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f makeString￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p names￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getParameterNames￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Iterator￨2￨f getJoinPointSignatures￨2￨f (￨2￨f World￨3￨p inAWorld￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SourceTypeBinding￨1￨d extends￨1￨d ReferenceBinding￨1￨d {￨1￨d public￨2￨e ReferenceBinding￨2￨e superclass￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e superInterfaces￨2￨e ;￨2￨e private￨2￨e FieldBinding￨2￨e [￨2￨e ]￨2￨e fields￨2￨e ;￨2￨e private￨2￨e MethodBinding￨2￨e [￨2￨e ]￨2￨e methods￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e memberTypes￨2￨e ;￨2￨e public￨2￨e TypeVariableBinding￨2￨e [￨2￨e ]￨2￨e typeVariables￨2￨e ;￨2￨e public￨2￨e ClassScope￨2￨e scope￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e METHOD_EMUL￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e FIELD_EMUL￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e CLASS_LITERAL_EMUL￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e RECEIVER_TYPE_EMUL￨2￨e =￨2￨e 3￨2￨e ;￨2￨e HashMap￨2￨e [￨2￨e ]￨2￨e synthetics￨2￨e ;￨2￨e char￨2￨e [￨2￨e ]￨2￨e genericReferenceTypeSignature￨2￨e ;￨2￨e private￨2￨e SimpleLookupTable￨2￨e storedAnnotations￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f SourceTypeBinding￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p compoundName￨3￨p ,￨3￨p PackageBinding￨3￨p fPackage￨3￨p ,￨3￨p ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addDefaultAbstractMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f addSyntheticFieldForInnerclass￨2￨f (￨2￨f LocalVariableBinding￨3￨p actualOuterLocalVariable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f addSyntheticFieldForInnerclass￨2￨f (￨2￨f ReferenceBinding￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f addSyntheticFieldForClassLiteral￨2￨f (￨2￨f TypeBinding￨3￨p targetType￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f addSyntheticFieldForAssert￨2￨f (￨2￨f BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f addSyntheticFieldForEnumValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f addSyntheticMethod￨2￨f (￨2￨f FieldBinding￨3￨p targetField￨3￨p ,￨3￨p boolean￨3￨p isReadAccess￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f addSyntheticEnumMethod￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticFieldBinding￨2￨f addSyntheticFieldForSwitchEnum￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fieldName￨3￨p ,￨3￨p String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f addSyntheticMethodForSwitchEnum￨2￨f (￨2￨f TypeBinding￨3￨p enumBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f addSyntheticMethod￨2￨f (￨2￨f MethodBinding￨3￨p targetMethod￨3￨p ,￨3￨p boolean￨3￨p isSuperAccess￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f addSyntheticBridgeMethod￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethodToBridge￨3￨p ,￨3￨p MethodBinding￨3￨p targetMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f kind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f computeUniqueKey￨2￨f (￨2￨f boolean￨3￨p isLeaf￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f faultInTypesForFieldsAndMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f [￨2￨f ]￨2￨f fields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f genericTypeSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f genericSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f getAnnotationTagBits￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getDefaultAbstractMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactConstructor￨2￨f (￨2￨f TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactMethod￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p ,￨3￨p CompilationUnitScope￨3￨p refScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getField￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fieldName￨3￨p ,￨3￨p boolean￨3￨p needResolve￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getMethods￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getSyntheticField￨2￨f (￨2￨f LocalVariableBinding￨3￨p actualOuterLocalVariable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getSyntheticField￨2￨f (￨2￨f ReferenceBinding￨3￨p targetEnclosingType￨3￨p ,￨3￨p boolean￨3￨p onlyExactMatch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f getSyntheticBridgeMethod￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethodToBridge￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initializeDeprecatedAnnotationTagBits￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEquivalentTo￨2￨f (￨2￨f TypeBinding￨3￨p otherType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isGenericType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f memberTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getUpdatedFieldBinding￨2￨f (￨2￨f FieldBinding￨3￨p targetField￨3￨p ,￨3￨p ReferenceBinding￨3￨p newDeclaringClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getUpdatedMethodBinding￨2￨f (￨2￨f MethodBinding￨3￨p targetMethod￨3￨p ,￨3￨p ReferenceBinding￨3￨p newDeclaringClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasMemberTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f methods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f FieldBinding￨2￨f resolveTypeFor￨2￨f (￨2￨f FieldBinding￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f MethodBinding￨2￨f resolveTypesFor￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f AnnotationHolder￨2￨f retrieveAnnotationHolder￨2￨f (￨2￨f Binding￨3￨p binding￨3￨p ,￨3￨p boolean￨3￨p forceInitialization￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFields￨2￨f (￨2￨f FieldBinding￨3￨p [￨3￨p ]￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMethods￨2￨f (￨2￨f MethodBinding￨3￨p [￨3￨p ]￨3￨p methods￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f sourceEnd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f sourceStart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f SimpleLookupTable￨2￨f storedAnnotations￨2￨f (￨2￨f boolean￨3￨p forceInitialize￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b forceInitialize￨3￨b &&￨3￨b (￨3￨b (￨3￨b this￨3￨b .￨3￨b storedAnnotations￨3￨b )￨3￨b ==￨3￨b null￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b this￨3￨e .￨3￨e scope￨3￨e .￨3￨e referenceCompilationUnit￨3￨e (￨3￨e )￨3￨e .￨3￨e compilationResult￨3￨e .￨3￨e hasAnnotations￨3￨e =￨3￨e true￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c this￨4￨c .￨4￨c scope￨4￨c .￨4￨c environment￨4￨c (￨4￨c )￨4￨c .￨4￨c globalOptions￨4￨c .￨4￨c storeAnnotations￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e storedAnnotations￨3￨e =￨3￨e new￨3￨e SimpleLookupTable￨3￨e (￨3￨e 3￨3￨e )￨3￨e ;￨3￨e }￨3￨e return￨3￨e this￨3￨e .￨3￨e storedAnnotations￨3￨e ;￨3￨e }￨2￨f public￨2￨f ReferenceBinding￨2￨f superclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f superInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticMethodBinding￨2￨f [￨2￨f ]￨2￨f syntheticMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f [￨2￨f ]￨2￨f syntheticFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeVariableBinding￨2￨f [￨2￨f ]￨2￨f typeVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f verifyMethods￨2￨f (￨2￨f MethodVerifier￨3￨p verifier￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestUtils￨1￨d {￨1￨d private￨2￨f TestUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertSame￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertSame￨2￨f (￨2￨f Complex￨3￨p expected￨3￨p ,￨3￨p Complex￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f Complex￨3￨p expected￨3￨p ,￨3￨p Complex￨3￨p actual￨3￨p ,￨3￨p double￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f double￨3￨p [￨3￨p ]￨3￨p expected￨3￨p ,￨3￨p double￨3￨p [￨3￨p ]￨3￨p observed￨3￨p ,￨3￨p double￨3￨p tolerance￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f serializeAndRecover￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkSerializedEquality￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertRelativelyEquals￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p relativeError￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertRelativelyEquals￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p relativeError￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertContains￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p Complex￨3￨p [￨3￨p ]￨3￨p values￨3￨p ,￨3￨p Complex￨3￨p z￨3￨p ,￨3￨p double￨3￨p epsilon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertContains￨2￨f (￨2￨f Complex￨3￨p [￨3￨p ]￨3￨p values￨3￨p ,￨3￨p Complex￨3￨p z￨3￨p ,￨3￨p double￨3￨p epsilon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertContains￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p double￨3￨p [￨3￨p ]￨3￨p values￨3￨p ,￨3￨p double￨3￨p x￨3￨p ,￨3￨p double￨3￨p epsilon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertContains￨2￨f (￨2￨f double￨3￨p [￨3￨p ]￨3￨p values￨3￨p ,￨3￨p double￨3￨p x￨3￨p ,￨3￨p double￨3￨p epsilon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p RealMatrix￨3￨p expected￨3￨p ,￨3￨p RealMatrix￨3￨p observed￨3￨p ,￨3￨p double￨3￨p tolerance￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f FieldMatrix￨3￨p <￨3￨p ?￨3￨p extends￨3￨p FieldElement￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p expected￨3￨p ,￨3￨p FieldMatrix￨3￨p <￨3￨p ?￨3￨p extends￨3￨p FieldElement￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p observed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p double￨3￨p [￨3￨p ]￨3￨p expected￨3￨p ,￨3￨p double￨3￨p [￨3￨p ]￨3￨p observed￨3￨p ,￨3￨p double￨3￨p tolerance￨3￨p )￨2￨f {￨2￨f StringBuffer￨3￨e out￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e msg￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c expected￨4￨c .￨4￨c length￨4￨c )￨4￨c !=￨4￨c (￨4￨c observed￨4￨c .￨4￨c length￨4￨c )￨4￨c )￨3￨j {￨3￨j out￨4￨e .￨4￨e append￨4￨e (￨4￨e "\n<seq2seq4repair_space>Arrays<seq2seq4repair_space>not<seq2seq4repair_space>same<seq2seq4repair_space>length.<seq2seq4repair_space>\n"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e append￨4￨e (￨4￨e "expected<seq2seq4repair_space>has<seq2seq4repair_space>length<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e append￨4￨e (￨4￨e expected￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>observed<seq2seq4repair_space>length<seq2seq4repair_space>=<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e append￨4￨e (￨4￨e observed￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e Assert￨4￨e .￨4￨e fail￨4￨e (￨4￨e out￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j boolean￨3￨e failure￨3￨e =￨3￨e false￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c expected￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b Assert￨5￨b .￨5￨b assertEquals￨5￨b (￨5￨b expected￨5￨b [￨5￨b i￨5￨b ]￨5￨b ,￨5￨b observed￨5￨b [￨5￨b i￨5￨b ]￨5￨b ,￨5￨b tolerance￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f AssertionFailedError￨5￨p ex￨5￨p )￨4￨f {￨4￨f failure￨5￨e =￨5￨e true￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e "\n<seq2seq4repair_space>Elements<seq2seq4repair_space>at<seq2seq4repair_space>index<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e i￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>differ.<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>expected<seq2seq4repair_space>=<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e expected￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e "<seq2seq4repair_space>observed<seq2seq4repair_space>=<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e append￨5￨e (￨5￨e observed￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨l if￨3￨j (￨3￨j failure￨4￨c )￨3￨j {￨3￨j Assert￨4￨e .￨4￨e fail￨4￨e (￨4￨e out￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f <￨2￨f T￨2￨f extends￨2￨f FieldElement￨2￨f <￨2￨f T￨2￨f >￨2￨f >￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f T￨3￨p [￨3￨p ]￨3￨p m￨3￨p ,￨3￨p T￨3￨p [￨3￨p ]￨3￨p n￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d SearchableEnvironmentRequestor￨1￨d extends￨1￨d JavaElementRequestor￨1￨d {￨1￨d protected￨2￨e ISearchRequestor￨2￨e requestor￨2￨e ;￨2￨e protected￨2￨e ICompilationUnit￨2￨e unitToSkip￨2￨e ;￨2￨e protected￨2￨e IJavaProject￨2￨e project￨2￨e ;￨2￨e protected￨2￨e NameLookup￨2￨e nameLookup￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e checkAccessRestrictions￨2￨e ;￨2￨e public￨2￨f SearchableEnvironmentRequestor￨2￨f (￨2￨f ISearchRequestor￨3￨p requestor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SearchableEnvironmentRequestor￨2￨f (￨2￨f ISearchRequestor￨3￨p requestor￨3￨p ,￨3￨p ICompilationUnit￨3￨p unitToSkip￨3￨p ,￨3￨p IJavaProject￨3￨p project￨3￨p ,￨3￨p NameLookup￨3￨p nameLookup￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f acceptInitializer￨2￨f (￨2￨f IInitializer￨3￨p initializer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f acceptPackageFragment￨2￨f (￨2￨f IPackageFragment￨3￨p packageFragment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f acceptType￨2￨f (￨2￨f IType￨3￨p type￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c (￨5￨c this￨5￨c .￨5￨c unitToSkip￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c this￨5￨c .￨5￨c unitToSkip￨5￨c .￨5￨c equals￨5￨c (￨5￨c type￨5￨c .￨5￨c getCompilationUnit￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j char￨4￨e [￨4￨e ]￨4￨e packageName￨4￨e =￨4￨e type￨4￨e .￨4￨e getPackageFragment￨4￨e (￨4￨e )￨4￨e .￨4￨e getElementName￨4￨e (￨4￨e )￨4￨e .￨4￨e toCharArray￨4￨e (￨4￨e )￨4￨e ;￨4￨e boolean￨4￨e isBinary￨4￨e =￨4￨e type￨4￨e instanceof￨4￨e BinaryType￨4￨e ;￨4￨e AccessRestriction￨4￨e accessRestriction￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c checkAccessRestrictions￨5￨c )￨5￨c &&￨5￨c (￨5￨c isBinary￨5￨c ||￨5￨c (￨5￨c !￨5￨c (￨5￨c type￨5￨c .￨5￨c getJavaProject￨5￨c (￨5￨c )￨5￨c .￨5￨c equals￨5￨c (￨5￨c this￨5￨c .￨5￨c project￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j PackageFragmentRoot￨5￨e root￨5￨e =￨5￨e (￨5￨e (￨5￨e PackageFragmentRoot￨5￨e )￨5￨e (￨5￨e type￨5￨e .￨5￨e getAncestor￨5￨e (￨5￨e IJavaElement￨5￨e .￨5￨e PACKAGE_FRAGMENT_ROOT￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e ClasspathEntry￨5￨e entry￨5￨e =￨5￨e (￨5￨e (￨5￨e ClasspathEntry￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e nameLookup￨5￨e .￨5￨e rootToResolvedEntries￨5￨e .￨5￨e get￨5￨e (￨5￨e root￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j entry￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j AccessRuleSet￨6￨e accessRuleSet￨6￨e =￨6￨e entry￨6￨e .￨6￨e getAccessRuleSet￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j accessRuleSet￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j char￨7￨e [￨7￨e ]￨7￨e [￨7￨e ]￨7￨e packageChars￨7￨e =￨7￨e CharOperation￨7￨e .￨7￨e splitOn￨7￨e (￨7￨e '.'￨7￨e ,￨7￨e packageName￨7￨e )￨7￨e ;￨7￨e char￨7￨e [￨7￨e ]￨7￨e fileChars￨7￨e =￨7￨e type￨7￨e .￨7￨e getParent￨7￨e (￨7￨e )￨7￨e .￨7￨e getElementName￨7￨e (￨7￨e )￨7￨e .￨7￨e toCharArray￨7￨e (￨7￨e )￨7￨e ;￨7￨e accessRestriction￨7￨e =￨7￨e accessRuleSet￨7￨e .￨7￨e getViolatedRestriction￨7￨e (￨7￨e CharOperation￨7￨e .￨7￨e concatWith￨7￨e (￨7￨e packageChars￨7￨e ,￨7￨e fileChars￨7￨e ,￨7￨e '/'￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j <START_BUG>￨4￨b this￨4￨b .￨4￨b requestor￨4￨b .￨4￨b acceptType￨4￨b (￨4￨b packageName￨4￨b ,￨4￨b type￨4￨b .￨4￨b getElementName￨4￨b (￨4￨b )￨4￨b .￨4￨b toCharArray￨4￨b (￨4￨b )￨4￨b ,￨4￨b type￨4￨b .￨4￨b getFlags￨4￨b (￨4￨b )￨4￨b ,￨4￨b accessRestriction￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f JavaModelException￨4￨p jme￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParenthesizedExpression￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d EXPRESSION_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d ParenthesizedExpression￨2￨d .￨2￨d class￨2￨d ,￨2￨d "expression"￨2￨d ,￨2￨d Expression￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e Expression￨2￨e expression￨2￨e =￨2￨e null￨2￨e ;￨2￨e ParenthesizedExpression￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f ParenthesizedExpression￨3￨e result￨3￨e =￨3￨e new￨3￨e ParenthesizedExpression￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setSourceRange￨3￨b (￨3￨b this￨3￨b .￨3￨b getStartPosition￨3￨b (￨3￨b )￨3￨b ,￨3￨b this￨3￨b .￨3￨b getLength￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e setExpression￨3￨e (￨3￨e (￨3￨e (￨3￨e Expression￨3￨e )￨3￨e (￨3￨e getExpression￨3￨e (￨3￨e )￨3￨e .￨3￨e clone￨3￨e (￨3￨e target￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f getExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpression￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TrecContentSourceTest￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d class￨2￨d StringableTrecSource￨2￨d extends￨2￨d TrecContentSource￨2￨d {￨2￨d private￨3￨e String￨3￨e docs￨3￨e =￨3￨e null￨3￨e ;￨3￨e public￨3￨f StringableTrecSource￨3￨f (￨3￨f String￨4￨p docs￨4￨p ,￨4￨p boolean￨4￨p forever￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f void￨3￨f openNextFile￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f ,￨3￨f NoMoreDataException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setConfig￨3￨f (￨3￨f Config￨4￨p config￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f void￨2￨f assertDocData￨2￨f (￨2￨f DocData￨2￨f dd￨2￨f ,￨2￨f String￨2￨f expName￨2￨f ,￨2￨f String￨2￨f expTitle￨2￨f ,￨2￨f String￨2￨f expBody￨2￨f ,￨2￨f Date￨2￨f expDate￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertNoMoreDataException￨2￨f (￨2￨f TrecContentSourceTest￨2￨f .￨2￨f StringableTrecSource￨2￨f stdm￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testOneDocument￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTwoDocuments￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMissingDate￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testBadDate￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testForever￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTrecFeedDirAllTypes￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f File￨3￨e dataDir￨3￨e =￨3￨e _TestUtil￨3￨e .￨3￨e getTempDir￨3￨e (￨3￨e "trecFeedAllTypes"￨3￨e )￨3￨e ;￨3￨e _TestUtil￨3￨e .￨3￨e unzip￨3￨e (￨3￨e getDataFile￨3￨e (￨3￨e "trecdocs.zip"￨3￨e )￨3￨e ,￨3￨e dataDir￨3￨e )￨3￨e ;￨3￨e TrecContentSource￨3￨e tcs￨3￨e =￨3￨e new￨3￨e TrecContentSource￨3￨e (￨3￨e )￨3￨e ;￨3￨e Properties￨3￨e props￨3￨e =￨3￨e new￨3￨e Properties￨3￨e (￨3￨e )￨3￨e ;￨3￨e props￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e "print.props"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e props￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e "content.source.verbose"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e props￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e "content.source.excludeIteration"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e props￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e "doc.maker.forever"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e props￨3￨e .￨3￨e setProperty￨3￨e (￨3￨e "docs.dir"￨3￨e ,￨3￨e dataDir￨3￨e .￨3￨e getCanonicalPath￨3￨e (￨3￨e )￨3￨e .￨3￨e replace￨3￨e (￨3￨e '\\'￨3￨e ,￨3￨e '/'￨3￨e )￨3￨e )￨3￨e ;￨3￨e props￨3￨d .￨3￨d setProperty￨3￨d (￨3￨d "trec.doc.parser"￨3￨d ,￨3￨d TrecParserByPath￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d props￨3￨d .￨3￨d setProperty￨3￨d (￨3￨d "content.source.forever"￨3￨d ,￨3￨d "false"￨3￨d )￨3￨d ;￨3￨d tcs￨3￨d .￨3￨d setConfig￨3￨d (￨3￨d new￨3￨d Config￨3￨d (￨3￨d props￨3￨d )￨3￨d )￨3￨d ;￨3￨d tcs￨3￨d .￨3￨d resetInputs￨3￨d (￨3￨d )￨3￨d ;￨3￨d DocData￨3￨d dd￨3￨d =￨3￨d new￨3￨d DocData￨3￨d (￨3￨d )￨3￨d ;￨3￨d int￨3￨d n￨3￨d =￨3￨d 0￨3￨d ;￨3￨d boolean￨3￨d gotExpectedException￨3￨d =￨3￨d false￨3￨d ;￨3￨d HashSet￨3￨d <￨3￨d ParsePathType￨3￨d >￨3￨d unseenTypes￨3￨d =￨3￨d new￨3￨d HashSet￨3￨d <￨3￨d ParsePathType￨3￨d >￨3￨d (￨3￨d Arrays￨3￨d .￨3￨d asList￨3￨d (￨3￨d ParsePathType￨3￨d .￨3￨d values￨3￨d (￨3￨d )￨3￨d )￨3￨d )￨3￨d ;￨3￨d try￨3￨d {￨3￨d while￨4￨l (￨4￨l n￨5￨c <￨5￨c 100￨5￨c )￨4￨l {￨4￨l dd￨5￨e =￨5￨e tcs￨5￨e .￨5￨e getNextDocData￨5￨e (￨5￨e dd￨5￨e )￨5￨e ;￨5￨e ++￨5￨e n￨5￨e ;￨5￨e assertNotNull￨5￨e (￨5￨e (￨5￨e (￨5￨e "doc<seq2seq4repair_space>data<seq2seq4repair_space>"￨5￨e +￨5￨e n￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null!"￨5￨e )￨5￨e ,￨5￨e dd￨5￨e )￨5￨e ;￨5￨e unseenTypes￨5￨e .￨5￨e remove￨5￨e (￨5￨e tcs￨5￨e .￨5￨e currPathType￨5￨e )￨5￨e ;￨5￨e switch￨5￨s (￨5￨s tcs￨5￨c .￨5￨c currPathType￨5￨c )￨5￨s {￨5￨s case￨6￨c GOV2￨6￨c :￨6￨c assertDocData￨7￨e (￨7￨e dd￨7￨e ,￨7￨e "TEST-000"￨7￨e ,￨7￨e "TEST-000<seq2seq4repair_space>title"￨7￨e ,￨7￨e "TEST-000<seq2seq4repair_space>text"￨7￨e ,￨7￨e tcs￨7￨e .￨7￨e parseDate￨7￨e (￨7￨e "Sun,<seq2seq4repair_space>11<seq2seq4repair_space>Jan<seq2seq4repair_space>2009<seq2seq4repair_space>08:00:00<seq2seq4repair_space>GMT"￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c FBIS￨6￨c :￨6￨c assertDocData￨7￨e (￨7￨e dd￨7￨e ,￨7￨e "TEST-001"￨7￨e ,￨7￨e "TEST-001<seq2seq4repair_space>Title"￨7￨e ,￨7￨e "TEST-001<seq2seq4repair_space>text"￨7￨e ,￨7￨e tcs￨7￨e .￨7￨e parseDate￨7￨e (￨7￨e "1<seq2seq4repair_space>January<seq2seq4repair_space>1991"￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c FR94￨6￨c :￨6￨c assertDocData￨7￨e (￨7￨e dd￨7￨e ,￨7￨e "TEST-002"￨7￨e ,￨7￨e null￨7￨e ,￨7￨e "DEPARTMENT<seq2seq4repair_space>OF<seq2seq4repair_space>SOMETHING"￨7￨e ,￨7￨e tcs￨7￨e .￨7￨e parseDate￨7￨e (￨7￨e "February<seq2seq4repair_space>3,<seq2seq4repair_space>1994"￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c FT￨6￨c :￨6￨c assertDocData￨7￨e (￨7￨e dd￨7￨e ,￨7￨e "TEST-003"￨7￨e ,￨7￨e "Test-003<seq2seq4repair_space>title"￨7￨e ,￨7￨e "Some<seq2seq4repair_space>pub<seq2seq4repair_space>text"￨7￨e ,￨7￨e tcs￨7￨e .￨7￨e parseDate￨7￨e (￨7￨e "980424"￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c LATIMES￨6￨c :￨6￨c assertDocData￨7￨e (￨7￨e dd￨7￨e ,￨7￨e "TEST-004"￨7￨e ,￨7￨e "Test-004<seq2seq4repair_space>Title"￨7￨e ,￨7￨e "Some<seq2seq4repair_space>paragraph"￨7￨e ,￨7￨e tcs￨7￨e .￨7￨e parseDate￨7￨e (￨7￨e "January<seq2seq4repair_space>17,<seq2seq4repair_space>1997,<seq2seq4repair_space>Sunday"￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e default￨6￨c :￨6￨c assertTrue￨7￨e (￨7￨e "Should<seq2seq4repair_space>never<seq2seq4repair_space>get<seq2seq4repair_space>here!"￨7￨e ,￨7￨e false￨7￨e )￨7￨e ;￨7￨e }￨5￨s }￨4￨l }￨3￨d catch￨3￨f (￨3￨f NoMoreDataException￨4￨p e￨4￨p )￨3￨f {￨3￨f gotExpectedException￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨f assertTrue￨3￨e (￨3￨e "Should<seq2seq4repair_space>have<seq2seq4repair_space>gotten<seq2seq4repair_space>NoMoreDataException!"￨3￨e ,￨3￨e gotExpectedException￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertEquals￨3￨b (￨3￨b "Wrong<seq2seq4repair_space>numbre<seq2seq4repair_space>of<seq2seq4repair_space>documents<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>osurce!"￨3￨b ,￨3￨b 5￨3￨b ,￨3￨b n￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertTrue￨3￨e (￨3￨e "Did<seq2seq4repair_space>not<seq2seq4repair_space>see<seq2seq4repair_space>all<seq2seq4repair_space>types!"￨3￨e ,￨3￨e unseenTypes￨3￨e .￨3￨e isEmpty￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeSelectionManager￨1￨d extends￨1￨d SelectionManager￨1￨d {￨1￨d protected￨2￨e FolderTreeNode￨2￨e folder￨2￨e ;￨2￨e protected￨2￨e Vector￨2￨e treeListenerList￨2￨e ;￨2￨e public￨2￨f TreeSelectionManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FolderTreeNode￨2￨f getFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFolderSelectionListener￨2￨f (￨2￨f FolderSelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fireFolderSelectionEvent￨2￨f (￨2￨f FolderTreeNode￨3￨p oldFolder￨3￨p ,￨3￨p FolderTreeNode￨3￨p newFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DefaultCommandReference￨2￨f [￨2￨f ]￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f log￨3￨e .￨3￨e info￨3￨e (￨3￨e (￨3￨e "folder="￨3￨e +￨3￨e (￨3￨e folder￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e references￨3￨e =￨3￨e new￨3￨e FolderCommandReference￨3￨e [￨3￨e 1￨3￨e ]￨3￨e ;￨3￨e <START_BUG>￨3￨b references￨3￨b [￨3￨b 0￨3￨b ]￨3￨b =￨3￨b new￨3￨b FolderCommandReference￨3￨b (￨3￨b (￨3￨b (￨3￨b Folder￨3￨b )￨3￨b (￨3￨b folder￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e references￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Snippet83￨1￨d extends￨1￨d ByteArrayTransfer￨1￨d {￨1￨d private￨2￨e static￨2￨e Snippet83￨2￨e _instance￨2￨e =￨2￨e new￨2￨e Snippet83￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e ids￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e names￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f Display￨3￨e display￨3￨e =￨3￨e new￨3￨e Display￨3￨e (￨3￨e )￨3￨e ;￨3￨e Shell￨3￨e shell￨3￨e =￨3￨e new￨3￨e Shell￨3￨e (￨3￨e display￨3￨e )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e new￨3￨e FillLayout￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Canvas￨3￨e canvas￨3￨e =￨3￨e new￨3￨e Canvas￨3￨e (￨3￨e shell￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e DropTarget￨3￨e target￨3￨e =￨3￨e new￨3￨e DropTarget￨3￨e (￨3￨e canvas￨3￨e ,￨3￨e (￨3￨e (￨3￨e DND￨3￨e .￨3￨e DROP_DEFAULT￨3￨e )￨3￨e |￨3￨e (￨3￨e DND￨3￨e .￨3￨e DROP_LINK￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e target￨3￨f .￨3￨f setTransfer￨3￨f (￨3￨f new￨3￨f Transfer￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f )￨3￨e ;￨3￨e target￨3￨f .￨3￨f addDropListener￨3￨f (￨3￨f new￨3￨f DropTargetAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f dragEnter￨4￨f (￨4￨f DropTargetEvent￨5￨p event￨5￨p )￨4￨f {￨4￨f <START_BUG>￨5￨b String￨5￨b ops￨5￨b =￨5￨b null￨5￨b ;￨5￨b <END_BUG>￨5￨b if￨5￨j (￨5￨j (￨6￨c (￨6￨c event￨6￨c .￨6￨c operations￨6￨c )￨6￨c &￨6￨c (￨6￨c DND￨6￨c .￨6￨c DROP_COPY￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j ops￨6￨e +=￨6￨e "Copy;"￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c event￨6￨c .￨6￨c operations￨6￨c )￨6￨c &￨6￨c (￨6￨c DND￨6￨c .￨6￨c DROP_MOVE￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j ops￨6￨e +=￨6￨e "Move;"￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c event￨6￨c .￨6￨c operations￨6￨c )￨6￨c &￨6￨c (￨6￨c DND￨6￨c .￨6￨c DROP_LINK￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j ops￨6￨e +=￨6￨e "Link;"￨6￨e ;￨6￨e }￨5￨j System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e (￨5￨e "Allowed<seq2seq4repair_space>Operations<seq2seq4repair_space>are<seq2seq4repair_space>"￨5￨e +￨5￨e ops￨5￨e )￨5￨e )￨5￨e ;￨5￨e TransferData￨5￨e [￨5￨e ]￨5￨e data￨5￨e =￨5￨e event￨5￨e .￨5￨e dataTypes￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c data￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l int￨6￨e id￨6￨e =￨6￨e data￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e type￨6￨e ;￨6￨e String￨6￨e name￨6￨e =￨6￨e Snippet83￨6￨e .￨6￨e getNameFromId￨6￨e (￨6￨e id￨6￨e )￨6￨e ;￨6￨e System￨6￨e .￨6￨e out￨6￨e .￨6￨e println￨6￨e (￨6￨e (￨6￨e (￨6￨e (￨6￨e "Data<seq2seq4repair_space>type<seq2seq4repair_space>is<seq2seq4repair_space>"￨6￨e +￨6￨e id￨6￨e )￨6￨e +￨6￨e "<seq2seq4repair_space>"￨6￨e )￨6￨e +￨6￨e name￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨f }￨3￨f )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e setSize￨3￨e (￨3￨e 400￨3￨e ,￨3￨e 400￨3￨e )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e open￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l !￨4￨c (￨4￨c shell￨4￨c .￨4￨c isDisposed￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j !￨5￨c (￨5￨c display￨5￨c .￨5￨c readAndDispatch￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j display￨5￨e .￨5￨e sleep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l display￨3￨e .￨3￨e dispose￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f Snippet83￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Snippet83￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f javaToNative￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p TransferData￨3￨p transferData￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f nativeToJava￨2￨f (￨2￨f TransferData￨3￨p transferData￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f [￨2￨f ]￨2￨f getTypeNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f [￨2￨f ]￨2￨f getTypeIds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f getNameFromId￨2￨f (￨2￨f int￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d CTabFolderTab￨1￨d extends￨1￨d Tab￨1￨d {￨1￨d int￨2￨e lastSelectedTab￨2￨e =￨2￨e 0￨2￨e ;￨2￨e CTabFolder￨2￨e tabFolder1￨2￨e ;￨2￨e Group￨2￨e tabFolderGroup￨2￨e ;￨2￨e Group￨2￨e itemGroup￨2￨e ;￨2￨e Button￨2￨e topButton￨2￨e ;￨2￨e Button￨2￨e bottomButton￨2￨e ;￨2￨e Button￨2￨e flatButton￨2￨e ;￨2￨e Button￨2￨e closeButton￨2￨e ;￨2￨e static￨2￨f String￨2￨f [￨2￨f ]￨2￨f CTabItems1￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e Button￨2￨e foregroundSelectionButton￨2￨e ;￨2￨e Button￨2￨e backgroundSelectionButton￨2￨e ;￨2￨e Button￨2￨e itemFontButton￨2￨e ;￨2￨e Image￨2￨e foregroundSelectionImage￨2￨e ;￨2￨e Image￨2￨e backgroundSelectionImage￨2￨e ;￨2￨e Color￨2￨e foregroundSelectionColor￨2￨e ;￨2￨e Color￨2￨e backgroundSelectionColor￨2￨e ;￨2￨e Font￨2￨e itemFont￨2￨e ;￨2￨e Button￨2￨e simpleTabButton￨2￨e ;￨2￨e Button￨2￨e singleTabButton￨2￨e ;￨2￨e Button￨2￨e imageButton￨2￨e ;￨2￨e Button￨2￨e showMinButton￨2￨e ;￨2￨e Button￨2￨e showMaxButton￨2￨e ;￨2￨e Button￨2￨e unselectedCloseButton￨2￨e ;￨2￨e Button￨2￨e unselectedImageButton￨2￨e ;￨2￨e CTabFolderTab￨2￨f (￨2￨f ControlExample￨3￨p instance￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createColorGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createOtherGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createStyleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCustomEventNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Item￨2￨f [￨2￨f ]￨2￨f getExampleWidgetItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getTabText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f hookCustomListener￨2￨f (￨2￨f final￨3￨p String￨3￨p eventName￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j eventName￨4￨c ==￨4￨c "CTabFolderEvent"￨4￨c )￨3￨j {￨3￨j tabFolder1￨4￨f .￨4￨f addCTabFolder2Listener￨4￨f (￨4￨f new￨4￨f CTabFolder2Adapter￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b public￨5￨b void￨5￨b itemClosed￨5￨b (￨5￨b CTabFolderEvent￨5￨b event￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b log￨5￨e (￨5￨e eventName￨5￨e ,￨5￨e event￨5￨e )￨5￨e ;￨5￨e }￨4￨f )￨4￨e ;￨4￨e }￨3￨j }￨2￨f void￨2￨f resetColorsAndFonts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSimpleTabs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSingleTabs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setImages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setMinimizeVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setMaximizeVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setUnselectedCloseVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setUnselectedImageVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setItemFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ContextAdmin￨1￨d {￨1￨d private￨2￨e ContextManager￨2￨e cm￨2￨e ;￨2￨e private￨2￨e Request￨2￨e realRequest￨2￨e ;￨2￨e private￨2￨e String￨2￨e submit￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e addContextPath￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e addContextDocBase￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e removeContextName￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f void￨2￨f setSubmit￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAddContextPath￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAddContextDocBase￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRemoveContextName￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f HttpServletRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Enumeration￨2￨f getContextNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getContextInfo￨2￨f (￨2￨f String￨3￨p contextName￨3￨p )￨2￨f {￨2￨f (￨3￨e Enumeration￨3￨e )￨3￨e ++￨3￨e ;￨3￨e String￨3￨e key￨3￨e ;￨3￨e Context￨3￨e context￨3￨e ;￨3￨e Vector￨3￨e v￨3￨e =￨3￨e new￨3￨e Vector￨3￨e (￨3￨e )￨3￨e ;￨3￨e context￨3￨e =￨3￨e cm￨3￨e .￨3￨e getContext￨3￨e (￨3￨e contextName￨3￨e )￨3￨e ;￨3￨e v￨3￨e .￨3￨e addElement￨3￨e (￨3￨e (￨3￨e "DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e context￨3￨e .￨3￨e getDocBase￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b v￨3￨b .￨3￨b addElement￨3￨b (￨3￨b (￨3￨b "FULL<seq2seq4repair_space>DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨3￨b +￨3￨b (￨3￨b context￨3￨b .￨3￨b getDocumentBase￨3￨b (￨3￨b )￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b v￨3￨e .￨3￨e addElement￨3￨e (￨3￨e (￨3￨e "PATH:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e context￨3￨e .￨3￨e getPath￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c context￨4￨c .￨4￨c getWorkDir￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j v￨4￨e .￨4￨e addElement￨4￨e (￨4￨e (￨4￨e "WORK<seq2seq4repair_space>DIR:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e RequestUtil￨4￨e .￨4￨e URLDecode￨4￨e (￨4￨e context￨4￨e .￨4￨e getWorkDir￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j v￨3￨e .￨3￨e addElement￨3￨e (￨3￨e (￨3￨e "DESCRIPTION:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e context￨3￨e .￨3￨e getDescription￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e v￨3￨e .￨3￨e addElement￨3￨e (￨3￨e (￨3￨e "SESSION<seq2seq4repair_space>TIMEOUT:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e new￨3￨e Integer￨3￨e (￨3￨e context￨3￨e .￨3￨e getSessionTimeOut￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f addContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f removeContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FileUtils￨1￨d {￨1￨d private￨2￨e static￨2￨e Random￨2￨e rand￨2￨e =￨2￨e new￨2￨e Random￨2￨e (￨2￨e System￨2￨e .￨2￨e currentTimeMillis￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e Object￨2￨e lockReflection￨2￨e =￨2￨e new￨2￨e Object￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e Method￨2￨e setLastModified￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e onNetWare￨2￨e =￨2￨e Os￨2￨e .￨2￨e isFamily￨2￨e (￨2￨e "netware"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e boolean￨2￨e [￨2￨e ]￨2￨e isSpecial￨2￨e =￨2￨e new￨2￨e boolean￨2￨e [￨2￨e 256￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e char￨2￨e [￨2￨e ]￨2￨e escapedChar1￨2￨e =￨2￨e new￨2￨e char￨2￨e [￨2￨e 256￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e char￨2￨e [￨2￨e ]￨2￨e escapedChar2￨2￨e =￨2￨e new￨2￨e char￨2￨e [￨2￨e 256￨2￨e ]￨2￨e ;￨2￨e public￨2￨f static￨2￨f FileUtils￨2￨f newFileUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FileUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f URL￨2￨f getFileURL￨2￨f (￨2￨f File￨2￨f file￨2￨f )￨2￨f throws￨2￨f MalformedURLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f Vector￨2￨f filterChains￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f ,￨2￨f Project￨2￨f project￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f String￨2￨f sourceFile￨2￨f ,￨2￨f String￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f Vector￨2￨f filterChains￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f inputEncoding￨2￨f ,￨2￨f String￨2￨f outputEncoding￨2￨f ,￨2￨f Project￨2￨f project￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f Vector￨2￨f filterChains￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f ,￨2￨f Project￨2￨f project￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFile￨2￨f (￨2￨f File￨2￨f sourceFile￨2￨f ,￨2￨f File￨2￨f destFile￨2￨f ,￨2￨f FilterSetCollection￨2￨f filters￨2￨f ,￨2￨f Vector￨2￨f filterChains￨2￨f ,￨2￨f boolean￨2￨f overwrite￨2￨f ,￨2￨f boolean￨2￨f preserveLastModified￨2￨f ,￨2￨f String￨2￨f inputEncoding￨2￨f ,￨2￨f String￨2￨f outputEncoding￨2￨f ,￨2￨f Project￨2￨f project￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f Method￨2￨f getSetLastModified￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFileLastModified￨2￨f (￨2￨f File￨2￨f file￨2￨f ,￨2￨f long￨2￨f time￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f resolveFile￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f normalize￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f createTempFile￨2￨f (￨2￨f String￨3￨p prefix￨3￨p ,￨3￨p String￨3￨p suffix￨3￨p ,￨3￨p File￨3￨p parentDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f contentEquals￨2￨f (￨2￨f File￨2￨f f1￨2￨f ,￨2￨f File￨2￨f f2￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getParentFile￨2￨f (￨2￨f File￨3￨p f￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f String￨2￨f readFully￨2￨f (￨2￨f Reader￨2￨f rdr￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f String￨2￨f readFully￨2￨f (￨2￨f Reader￨2￨f rdr￨2￨f ,￨2￨f int￨2￨f bufferSize￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f createNewFile￨2￨f (￨2￨f File￨2￨f f￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSymbolicLink￨2￨f (￨2￨f File￨2￨f parent￨2￨f ,￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f removeLeadingPath￨2￨f (￨2￨f File￨3￨p leading￨3￨p ,￨3￨p File￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toURI￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f boolean￨3￨e isDir￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e path￨3￨e )￨3￨e .￨3￨e isDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e StringBuffer￨3￨e sb￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e "file:"￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f path￨4￨e =￨4￨e normalize￨4￨e (￨4￨e path￨4￨e )￨4￨e .￨4￨e getAbsolutePath￨4￨e (￨4￨e )￨4￨e ;￨4￨e sb￨4￨e .￨4￨e append￨4￨e (￨4￨e "//"￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b !￨4￨b (￨4￨b path￨4￨b .￨4￨b startsWith￨4￨b (￨4￨b "/"￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b sb￨4￨e .￨4￨e append￨4￨e (￨4￨e "/"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f BuildException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f path￨3￨e =￨3￨e path￨3￨e .￨3￨e replace￨3￨e (￨3￨e '\\'￨3￨e ,￨3￨e '/'￨3￨e )￨3￨e ;￨3￨e CharacterIterator￨3￨e iter￨3￨e =￨3￨e new￨3￨e StringCharacterIterator￨3￨e (￨3￨e path￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l char￨4￨c c￨4￨c =￨4￨c iter￨4￨c .￨4￨c first￨4￨c (￨4￨c )￨4￨c ;￨4￨c c￨4￨c !=￨4￨c (￨4￨c CharacterIterator￨4￨c .￨4￨c DONE￨4￨c )￨4￨c ;￨4￨c c￨4￨c =￨4￨c iter￨4￨c .￨4￨c next￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j FileUtils￨5￨c .￨5￨c isSpecial￨5￨c [￨5￨c c￨5￨c ]￨5￨c )￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e '%'￨5￨e )￨5￨e ;￨5￨e sb￨5￨e .￨5￨e append￨5￨e (￨5￨e FileUtils￨5￨e .￨5￨e escapedChar1￨5￨e [￨5￨e c￨5￨e ]￨5￨e )￨5￨e ;￨5￨e sb￨5￨e .￨5￨e append￨5￨e (￨5￨e FileUtils￨5￨e .￨5￨e escapedChar2￨5￨e [￨5￨e c￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e c￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j isDir￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c path￨4￨c .￨4￨c endsWith￨4￨c (￨4￨c "/"￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j sb￨4￨e .￨4￨e append￨4￨e (￨4￨e '/'￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e sb￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f fromURI￨2￨f (￨2￨f String￨3￨p uri￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f fileNameEquals￨2￨f (￨2￨f File￨3￨p f1￨3￨p ,￨3￨p File￨3￨p f2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f rename￨2￨f (￨2￨f File￨2￨f from￨2￨f ,￨2￨f File￨2￨f to￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestThreadedForceMerge￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e Analyzer￨2￨e ANALYZER￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e NUM_THREADS￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e NUM_ITER￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e NUM_ITER2￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e boolean￨2￨e failed￨2￨e ;￨2￨e @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f setup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setFailed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f runTest￨2￨f (￨2￨f Random￨2￨f random￨2￨f ,￨2￨f Directory￨2￨f directory￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f IndexWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e IndexWriter￨3￨e (￨3￨e directory￨3￨e ,￨3￨e newIndexWriterConfig￨3￨e (￨3￨e TEST_VERSION_CURRENT￨3￨e ,￨3￨e TestThreadedForceMerge￨3￨e .￨3￨e ANALYZER￨3￨e )￨3￨e .￨3￨e setOpenMode￨3￨e (￨3￨e CREATE￨3￨e )￨3￨e .￨3￨e setMaxBufferedDocs￨3￨e (￨3￨e 2￨3￨e )￨3￨e .￨3￨e setMergePolicy￨3￨e (￨3￨e newLogMergePolicy￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c iter￨4￨c =￨4￨c 0￨4￨c ;￨4￨c iter￨4￨c <￨4￨c (￨4￨c TestThreadedForceMerge￨4￨c .￨4￨c NUM_ITER￨4￨c )￨4￨c ;￨4￨c iter￨4￨c ++￨4￨c )￨3￨l {￨3￨l final￨4￨e int￨4￨e iterFinal￨4￨e =￨4￨e iter￨4￨e ;￨4￨e (￨4￨e (￨4￨e LogMergePolicy￨4￨e )￨4￨e (￨4￨e writer￨4￨e .￨4￨e getConfig￨4￨e (￨4￨e )￨4￨e .￨4￨e getMergePolicy￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e setMergeFactor￨4￨e (￨4￨e 1000￨4￨e )￨4￨e ;￨4￨e final￨4￨e FieldType￨4￨e customType￨4￨e =￨4￨e new￨4￨e FieldType￨4￨e (￨4￨e StringField￨4￨e .￨4￨e TYPE_STORED￨4￨e )￨4￨e ;￨4￨e customType￨4￨e .￨4￨e setOmitNorms￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c 200￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l Document￨5￨e d￨5￨e =￨5￨e new￨5￨e Document￨5￨e (￨5￨e )￨5￨e ;￨5￨e d￨5￨e .￨5￨e add￨5￨e (￨5￨e newField￨5￨e (￨5￨e "id"￨5￨e ,￨5￨e Integer￨5￨e .￨5￨e toString￨5￨e (￨5￨e i￨5￨e )￨5￨e ,￨5￨e customType￨5￨e )￨5￨e )￨5￨e ;￨5￨e d￨5￨e .￨5￨e add￨5￨e (￨5￨e newField￨5￨e (￨5￨e "contents"￨5￨e ,￨5￨e English￨5￨e .￨5￨e intToEnglish￨5￨e (￨5￨e i￨5￨e )￨5￨e ,￨5￨e customType￨5￨e )￨5￨e )￨5￨e ;￨5￨e writer￨5￨e .￨5￨e addDocument￨5￨e (￨5￨e d￨5￨e )￨5￨e ;￨5￨e }￨4￨l (￨4￨e (￨4￨e LogMergePolicy￨4￨e )￨4￨e (￨4￨e writer￨4￨e .￨4￨e getConfig￨4￨e (￨4￨e )￨4￨e .￨4￨e getMergePolicy￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e setMergeFactor￨4￨e (￨4￨e 4￨4￨e )￨4￨e ;￨4￨e Thread￨4￨e [￨4￨e ]￨4￨e threads￨4￨e =￨4￨e new￨4￨e Thread￨4￨e [￨4￨e TestThreadedForceMerge￨4￨e .￨4￨e NUM_THREADS￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c TestThreadedForceMerge￨5￨c .￨5￨c NUM_THREADS￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l final￨5￨e int￨5￨e iFinal￨5￨e =￨5￨e i￨5￨e ;￨5￨e final￨5￨e IndexWriter￨5￨e writerFinal￨5￨e =￨5￨e writer￨5￨e ;￨5￨e threads￨5￨f [￨5￨f i￨5￨f ]￨5￨f =￨5￨f new￨5￨f Thread￨5￨f (￨5￨f )￨5￨f {￨5￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f run￨6￨f (￨6￨f )￨6￨f {￨6￨f try￨7￨f (￨7￨f )￨7￨f {￨7￨f for￨8￨l (￨8￨l int￨9￨c j￨9￨c =￨9￨c 0￨9￨c ;￨9￨c j￨9￨c <￨9￨c (￨9￨c TestThreadedForceMerge￨9￨c .￨9￨c NUM_ITER2￨9￨c )￨9￨c ;￨9￨c j￨9￨c ++￨9￨c )￨8￨l {￨8￨l writerFinal￨9￨e .￨9￨e forceMerge￨9￨e (￨9￨e 1￨9￨e ,￨9￨e false￨9￨e )￨9￨e ;￨9￨e for￨9￨l (￨9￨l int￨10￨c k￨10￨c =￨10￨c 0￨10￨c ;￨10￨c k￨10￨c <￨10￨c (￨10￨c 17￨10￨c *￨10￨c (￨10￨c 1￨10￨c +￨10￨c iFinal￨10￨c )￨10￨c )￨10￨c ;￨10￨c k￨10￨c ++￨10￨c )￨9￨l {￨9￨l Document￨10￨e d￨10￨e =￨10￨e new￨10￨e Document￨10￨e (￨10￨e )￨10￨e ;￨10￨e d￨10￨e .￨10￨e add￨10￨e (￨10￨e newField￨10￨e (￨10￨e "id"￨10￨e ,￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e iterFinal￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e iFinal￨10￨e )￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e j￨10￨e )￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e k￨10￨e )￨10￨e ,￨10￨e customType￨10￨e )￨10￨e )￨10￨e ;￨10￨e d￨10￨e .￨10￨e add￨10￨e (￨10￨e newField￨10￨e (￨10￨e "contents"￨10￨e ,￨10￨e English￨10￨e .￨10￨e intToEnglish￨10￨e (￨10￨e (￨10￨e iFinal￨10￨e +￨10￨e k￨10￨e )￨10￨e )￨10￨e ,￨10￨e customType￨10￨e )￨10￨e )￨10￨e ;￨10￨e writerFinal￨10￨e .￨10￨e addDocument￨10￨e (￨10￨e d￨10￨e )￨10￨e ;￨10￨e }￨9￨l for￨9￨l (￨9￨l int￨10￨c k￨10￨c =￨10￨c 0￨10￨c ;￨10￨c k￨10￨c <￨10￨c (￨10￨c 9￨10￨c *￨10￨c (￨10￨c 1￨10￨c +￨10￨c iFinal￨10￨c )￨10￨c )￨10￨c ;￨10￨c k￨10￨c ++￨10￨c )￨9￨l {￨9￨l writerFinal￨10￨e .￨10￨e deleteDocuments￨10￨e (￨10￨e new￨10￨e Term￨10￨e (￨10￨e "id"￨10￨e ,￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e iterFinal￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e iFinal￨10￨e )￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e j￨10￨e )￨10￨e +￨10￨e "_"￨10￨e )￨10￨e +￨10￨e k￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨l writerFinal￨9￨e .￨9￨e forceMerge￨9￨e (￨9￨e 1￨9￨e )￨9￨e ;￨9￨e }￨8￨l }￨7￨f catch￨7￨f (￨7￨f Throwable￨8￨p t￨8￨p )￨7￨f {￨7￨f setFailed￨8￨e (￨8￨e )￨8￨e ;￨8￨e System￨8￨e .￨8￨e out￨8￨e .￨8￨e println￨8￨e (￨8￨e (￨8￨e (￨8￨e Thread￨8￨e .￨8￨e currentThread￨8￨e (￨8￨e )￨8￨e .￨8￨e getName￨8￨e (￨8￨e )￨8￨e )￨8￨e +￨8￨e ":<seq2seq4repair_space>hit<seq2seq4repair_space>exception"￨8￨e )￨8￨e )￨8￨e ;￨8￨e t￨8￨e .￨8￨e printStackTrace￨8￨e (￨8￨e System￨8￨e .￨8￨e out￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f }￨5￨f ;￨5￨e }￨4￨l for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c TestThreadedForceMerge￨5￨c .￨5￨c NUM_THREADS￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l threads￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e start￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c TestThreadedForceMerge￨5￨c .￨5￨c NUM_THREADS￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l threads￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e join￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l assertTrue￨4￨e (￨4￨e (￨4￨e !￨4￨e (￨4￨e failed￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e int￨4￨e expectedDocCount￨4￨e =￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e (￨4￨e 1￨4￨e +￨4￨e iter￨4￨e )￨4￨e *￨4￨e (￨4￨e 200￨4￨e +￨4￨e (￨4￨e (￨4￨e (￨4￨e 8￨4￨e *￨4￨e (￨4￨e TestThreadedForceMerge￨4￨e .￨4￨e NUM_ITER2￨4￨e )￨4￨e )￨4￨e *￨4￨e (￨4￨e (￨4￨e TestThreadedForceMerge￨4￨e .￨4￨e NUM_THREADS￨4￨e )￨4￨e /￨4￨e 2.0￨4￨e )￨4￨e )￨4￨e *￨4￨e (￨4￨e 1￨4￨e +￨4￨e (￨4￨e TestThreadedForceMerge￨4￨e .￨4￨e NUM_THREADS￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "index="￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e segString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>numDocs="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e numDocs￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>maxDoc="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e maxDoc￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>config="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e getConfig￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e expectedDocCount￨4￨e ,￨4￨e writer￨4￨e .￨4￨e numDocs￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "index="￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e segString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>numDocs="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e numDocs￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>maxDoc="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e maxDoc￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>config="￨4￨e )￨4￨e +￨4￨e (￨4￨e writer￨4￨e .￨4￨e getConfig￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e expectedDocCount￨4￨e ,￨4￨e writer￨4￨e .￨4￨e maxDoc￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e writer￨4￨e =￨4￨e new￨4￨e IndexWriter￨4￨e (￨4￨e directory￨4￨e ,￨4￨e newIndexWriterConfig￨4￨e (￨4￨e TEST_VERSION_CURRENT￨4￨e ,￨4￨e TestThreadedForceMerge￨4￨e .￨4￨e ANALYZER￨4￨e )￨4￨e .￨4￨e setOpenMode￨4￨e (￨4￨e APPEND￨4￨e )￨4￨e .￨4￨e setMaxBufferedDocs￨4￨e (￨4￨e 2￨4￨e )￨4￨e )￨4￨e ;￨4￨e DirectoryReader￨4￨e reader￨4￨e =￨4￨e DirectoryReader￨4￨e .￨4￨e open￨4￨e (￨4￨e directory￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b assertEquals￨4￨b (￨4￨b (￨4￨b "reader="￨4￨b +￨4￨b reader￨4￨b )￨4￨b ,￨4￨b 1￨4￨b ,￨4￨b reader￨4￨b .￨4￨b getSequentialSubReaders￨4￨b (￨4￨b )￨4￨b .￨4￨b size￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b assertEquals￨4￨e (￨4￨e expectedDocCount￨4￨e ,￨4￨e reader￨4￨e .￨4￨e numDocs￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e reader￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l writer￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testThreadedForceMerge￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d KohonenUpdateActionTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testUpdate￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e FeatureInitializer￨3￨e init￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e commons￨3￨e .￨3￨e math3￨3￨e .￨3￨e ml￨3￨e .￨3￨e neuralnet￨3￨e .￨3￨e OffsetFeatureInitializer￨3￨e (￨3￨e FeatureInitializerFactory￨3￨e .￨3￨e uniform￨3￨e (￨3￨e 0￨3￨e ,￨3￨e 0.1￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨f FeatureInitializer￨3￨f [￨3￨f ]￨3￨f initArray￨3￨f =￨3￨f new￨3￨f FeatureInitializer￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e final￨3￨e int￨3￨e netSize￨3￨e =￨3￨e 3￨3￨e ;￨3￨e final￨3￨e Network￨3￨e net￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e commons￨3￨e .￨3￨e math3￨3￨e .￨3￨e ml￨3￨e .￨3￨e neuralnet￨3￨e .￨3￨e oned￨3￨e .￨3￨e NeuronString￨3￨e (￨3￨e netSize￨3￨e ,￨3￨e false￨3￨e ,￨3￨e initArray￨3￨e )￨3￨e .￨3￨e getNetwork￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e DistanceMeasure￨3￨e dist￨3￨e =￨3￨e new￨3￨e EuclideanDistance￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e LearningFactorFunction￨3￨e learning￨3￨e =￨3￨e LearningFactorFunctionFactory￨3￨e .￨3￨e exponentialDecay￨3￨e (￨3￨e 1￨3￨e ,￨3￨e 0.1￨3￨e ,￨3￨e 100￨3￨e )￨3￨e ;￨3￨e final￨3￨e NeighbourhoodSizeFunction￨3￨e neighbourhood￨3￨e =￨3￨e NeighbourhoodSizeFunctionFactory￨3￨e .￨3￨e exponentialDecay￨3￨e (￨3￨e 3￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e 100￨3￨e )￨3￨e ;￨3￨e final￨3￨e UpdateAction￨3￨e update￨3￨e =￨3￨e new￨3￨e KohonenUpdateAction￨3￨e (￨3￨e dist￨3￨e ,￨3￨e learning￨3￨e ,￨3￨e neighbourhood￨3￨e )￨3￨e ;￨3￨e final￨3￨f double￨3￨f [￨3￨f ]￨3￨f features￨3￨f =￨3￨f new￨3￨f double￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e final￨3￨e double￨3￨e [￨3￨e ]￨3￨e distancesBefore￨3￨e =￨3￨e new￨3￨e double￨3￨e [￨3￨e netSize￨3￨e ]￨3￨e ;￨3￨e int￨3￨e count￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l Neuron￨4￨c n￨4￨c :￨4￨c net￨4￨c )￨3￨l {￨3￨l distancesBefore￨4￨e [￨4￨e (￨4￨e count￨4￨e ++￨4￨e )￨4￨e ]￨4￨e =￨4￨e dist￨4￨e .￨4￨e compute￨4￨e (￨4￨e n￨4￨e .￨4￨e getFeatures￨4￨e (￨4￨e )￨4￨e ,￨4￨e features￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e Neuron￨3￨e bestBefore￨3￨e =￨3￨e MapUtils￨3￨e .￨3￨e findBest￨3￨e (￨3￨e features￨3￨e ,￨3￨e net￨3￨e ,￨3￨e dist￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Assert￨3￨b .￨3￨b assertTrue￨3￨b (￨3￨b (￨3￨b (￨3￨b dist￨3￨b .￨3￨b compute￨3￨b (￨3￨b bestBefore￨3￨b .￨3￨b getFeatures￨3￨b (￨3￨b )￨3￨b ,￨3￨b features￨3￨b )￨3￨b )￨3￨b >=￨3￨b (￨3￨b 0.2￨3￨b *￨3￨b 0.2￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b update￨3￨e .￨3￨e update￨3￨e (￨3￨e net￨3￨e ,￨3￨e features￨3￨e )￨3￨e ;￨3￨e final￨3￨e double￨3￨e [￨3￨e ]￨3￨e distancesAfter￨3￨e =￨3￨e new￨3￨e double￨3￨e [￨3￨e netSize￨3￨e ]￨3￨e ;￨3￨e count￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l Neuron￨4￨c n￨4￨c :￨4￨c net￨4￨c )￨3￨l {￨3￨l distancesAfter￨4￨e [￨4￨e (￨4￨e count￨4￨e ++￨4￨e )￨4￨e ]￨4￨e =￨4￨e dist￨4￨e .￨4￨e compute￨4￨e (￨4￨e n￨4￨e .￨4￨e getFeatures￨4￨e (￨4￨e )￨4￨e ,￨4￨e features￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e Neuron￨3￨e bestAfter￨3￨e =￨3￨e MapUtils￨3￨e .￨3￨e findBest￨3￨e (￨3￨e features￨3￨e ,￨3￨e net￨3￨e ,￨3￨e dist￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e bestBefore￨3￨e ,￨3￨e bestAfter￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertEquals￨3￨e (￨3￨e 0￨3￨e ,￨3￨e dist￨3￨e .￨3￨e compute￨3￨e (￨3￨e bestAfter￨3￨e .￨3￨e getFeatures￨3￨e (￨3￨e )￨3￨e ,￨3￨e features￨3￨e )￨3￨e ,￨3￨e 0.0￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c netSize￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l Assert￨4￨e .￨4￨e assertTrue￨4￨e (￨4￨e (￨4￨e (￨4￨e distancesAfter￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e <￨4￨e (￨4￨e distancesBefore￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BooleanLiteral￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d private￨2￨e boolean￨2￨e value￨2￨e =￨2￨e false￨2￨e ;￨2￨e BooleanLiteral￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getNodeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f subtreeMatch￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b boolean￨3￨b visitChildren￨3￨b =￨3￨b visitor￨3￨b .￨3￨b visit￨3￨b (￨3￨b this￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b visitor￨3￨e .￨3￨e endVisit￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f booleanValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBooleanValue￨2￨f (￨2￨f boolean￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TryStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Block￨2￨e tryBlock￨2￨e ;￨2￨e public￨2￨e Block￨2￨e [￨2￨e ]￨2￨e catchBlocks￨2￨e ;￨2￨e public￨2￨e Argument￨2￨e [￨2￨e ]￨2￨e catchArguments￨2￨e ;￨2￨e public￨2￨e Block￨2￨e finallyBlock￨2￨e ;￨2￨e BlockScope￨2￨e scope￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e subRoutineCannotReturn￨2￨e =￨2￨e true￨2￨e ;￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e caughtExceptionTypes￨2￨e ;￨2￨e boolean￨2￨e tryBlockExit￨2￨e ;￨2￨e boolean￨2￨e [￨2￨e ]￨2￨e catchExits￨2￨e ;￨2￨e public￨2￨e int￨2￨e [￨2￨e ]￨2￨e preserveExceptionHandler￨2￨e ;￨2￨e Label￨2￨e subRoutineStartLabel￨2￨e ;￨2￨e public￨2￨e LocalVariableBinding￨2￨e anyExceptionVariable￨2￨e ;￨2￨e public￨2￨e LocalVariableBinding￨2￨e returnAddressVariable￨2￨e ;￨2￨e public￨2￨e LocalVariableBinding￨2￨e secretReturnValue￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e [￨2￨e ]￨2￨e SecretReturnName￨2￨e =￨2￨e "<seq2seq4repair_space>returnAddress"￨2￨e .￨2￨e toCharArray￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e [￨2￨e ]￨2￨e SecretAnyHandlerName￨2￨e =￨2￨e "<seq2seq4repair_space>anyExceptionHandler"￨2￨e .￨2￨e toCharArray￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e [￨2￨e ]￨2￨e SecretLocalDeclarationName￨2￨e =￨2￨e "<seq2seq4repair_space>returnValue"￨2￨e .￨2￨e toCharArray￨2￨e (￨2￨e )￨2￨e ;￨2￨e int￨2￨e preTryInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e mergedInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f cannotReturn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p upperScope￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e scope￨3￨e =￨3￨e new￨3￨e BlockScope￨3￨e (￨3￨e upperScope￨3￨e )￨3￨e ;￨3￨e BlockScope￨3￨e tryScope￨3￨e =￨3￨e new￨3￨e BlockScope￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e BlockScope￨3￨e finallyScope￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c finallyBlock￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c finallyBlock￨4￨c .￨4￨c statements￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j finallyScope￨4￨e =￨4￨e new￨4￨e BlockScope￨4￨e (￨4￨e scope￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e MethodScope￨4￨e methodScope￨4￨e =￨4￨e scope￨4￨e .￨4￨e methodScope￨4￨e (￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e returnAddressVariable￨4￨e =￨4￨e new￨4￨e LocalVariableBinding￨4￨e (￨4￨e TryStatement￨4￨e .￨4￨e SecretReturnName￨4￨e ,￨4￨e upperScope￨4￨e .￨4￨e getJavaLangObject￨4￨e (￨4￨e )￨4￨e ,￨4￨e AccDefault￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e finallyScope￨4￨e .￨4￨e addLocalVariable￨4￨e (￨4￨e returnAddressVariable￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e returnAddressVariable￨4￨e .￨4￨e constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e this￨4￨e .￨4￨e subRoutineStartLabel￨4￨e =￨4￨e new￨4￨e Label￨4￨e (￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e anyExceptionVariable￨4￨e =￨4￨e new￨4￨e LocalVariableBinding￨4￨e (￨4￨e TryStatement￨4￨e .￨4￨e SecretAnyHandlerName￨4￨e ,￨4￨e scope￨4￨e .￨4￨e getJavaLangThrowable￨4￨e (￨4￨e )￨4￨e ,￨4￨e AccDefault￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e finallyScope￨4￨e .￨4￨e addLocalVariable￨4￨e (￨4￨e this￨4￨e .￨4￨e anyExceptionVariable￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e anyExceptionVariable￨4￨e .￨4￨e constant￨4￨e =￨4￨e NotAConstant￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c methodScope￨5￨c .￨5￨c isInsideInitializer￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j MethodBinding￨5￨e methodBinding￨5￨e =￨5￨e (￨5￨e (￨5￨e AbstractMethodDeclaration￨5￨e )￨5￨e (￨5￨e methodScope￨5￨e .￨5￨e referenceContext￨5￨e )￨5￨e )￨5￨e .￨5￨e binding￨5￨e ;￨5￨e if￨5￨j (￨5￨j methodBinding￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j TypeBinding￨6￨e methodReturnType￨6￨e =￨6￨e methodBinding￨6￨e .￨6￨e returnType￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c methodReturnType￨7￨c .￨7￨c id￨7￨c )￨7￨c !=￨7￨c (￨7￨c TypeIds￨7￨c .￨7￨c T_void￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e secretReturnValue￨7￨e =￨7￨e new￨7￨e LocalVariableBinding￨7￨e (￨7￨e TryStatement￨7￨e .￨7￨e SecretLocalDeclarationName￨7￨e ,￨7￨e methodReturnType￨7￨e ,￨7￨e AccDefault￨7￨e ,￨7￨e false￨7￨e )￨7￨e ;￨7￨e finallyScope￨7￨e .￨7￨e addLocalVariable￨7￨e (￨7￨e this￨7￨e .￨7￨e secretReturnValue￨7￨e )￨7￨e ;￨7￨e this￨7￨e .￨7￨e secretReturnValue￨7￨e .￨7￨e constant￨7￨e =￨7￨e NotAConstant￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j finallyBlock￨4￨e .￨4￨e resolveUsing￨4￨e (￨4￨e finallyScope￨4￨e )￨4￨e ;￨4￨e finallyScope￨4￨e .￨4￨e shiftScopes￨4￨e =￨4￨e new￨4￨e BlockScope￨4￨e [￨4￨e (￨4￨e catchArguments￨4￨e )￨4￨e ==￨4￨e null￨4￨e ?￨4￨e 1￨4￨e :￨4￨e (￨4￨e catchArguments￨4￨e .￨4￨e length￨4￨e )￨4￨e +￨4￨e 1￨4￨e ]￨4￨e ;￨4￨e finallyScope￨4￨e .￨4￨e shiftScopes￨4￨e [￨4￨e 0￨4￨e ]￨4￨e =￨4￨e tryScope￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e tryBlock￨3￨e .￨3￨e resolveUsing￨3￨e (￨3￨e tryScope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c catchBlocks￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j int￨4￨e length￨4￨e =￨4￨e this￨4￨e .￨4￨e catchArguments￨4￨e .￨4￨e length￨4￨e ;￨4￨e TypeBinding￨4￨e [￨4￨e ]￨4￨e argumentTypes￨4￨e =￨4￨e new￨4￨e TypeBinding￨4￨e [￨4￨e length￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l BlockScope￨5￨e catchScope￨5￨e =￨5￨e new￨5￨e BlockScope￨5￨e (￨5￨e scope￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j finallyScope￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j finallyScope￨6￨e .￨6￨e shiftScopes￨6￨e [￨6￨e (￨6￨e i￨6￨e +￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e catchScope￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c argumentTypes￨6￨c [￨6￨c i￨6￨c ]￨6￨c =￨6￨c catchArguments￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c resolveForCatch￨6￨c (￨6￨c catchScope￨6￨c )￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j catchBlocks￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e resolveUsing￨5￨e (￨5￨e catchScope￨5￨e )￨5￨e ;￨5￨e }￨4￨l this￨4￨e .￨4￨e caughtExceptionTypes￨4￨e =￨4￨e new￨4￨e ReferenceBinding￨4￨e [￨4￨e length￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l caughtExceptionTypes￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e (￨5￨e (￨5￨e ReferenceBinding￨5￨e )￨5￨e (￨5￨e argumentTypes￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c i￨6￨c ;￨6￨c j￨6￨c ++￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b if￨6￨b (￨6￨b scope￨6￨b .￨6￨b areTypesCompatible￨6￨b (￨6￨b caughtExceptionTypes￨6￨b [￨6￨b i￨6￨b ]￨6￨b ,￨6￨b argumentTypes￨6￨b [￨6￨b j￨6￨b ]￨6￨b )￨6￨b )￨6￨b {￨6￨b <END_BUG>￨6￨b scope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e wrongSequenceOfExceptionTypesError￨6￨e (￨6￨e this￨6￨e ,￨6￨e i￨6￨e ,￨6￨e j￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨l }￨3￨j else￨3￨j {￨3￨j caughtExceptionTypes￨4￨e =￨4￨e new￨4￨e ReferenceBinding￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j finallyScope￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e scope￨4￨e .￨4￨e addSubscope￨4￨e (￨4￨e finallyScope￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d SimilarityQueries￨1￨d {￨1￨d private￨2￨f SimilarityQueries￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Query￨2￨f formSimilarQuery￨2￨f (￨2￨f String￨2￨f body￨2￨f ,￨2￨f Analyzer￨2￨f a￨2￨f ,￨2￨f String￨2￨f field￨2￨f ,￨2￨f Set￨2￨f stop￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f TokenStream￨3￨e ts￨3￨e =￨3￨e a￨3￨e .￨3￨e tokenStream￨3￨e (￨3￨e field￨3￨e ,￨3￨e new￨3￨e StringReader￨3￨e (￨3￨e body￨3￨e )￨3￨e )￨3￨e ;￨3￨e Token￨3￨e t￨3￨e ;￨3￨e BooleanQuery￨3￨e tmp￨3￨e =￨3￨e new￨3￨e BooleanQuery￨3￨e (￨3￨e )￨3￨e ;￨3￨e Set￨3￨e already￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c t￨4￨c =￨4￨c ts￨4￨c .￨4￨c next￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨l {￨3￨l String￨4￨e word￨4￨e =￨4￨e t￨4￨e .￨4￨e termText￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c stop￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c stop￨5￨c .￨5￨c contains￨5￨c (￨5￨c word￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j continue￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j !￨5￨c (￨5￨c already￨5￨c .￨5￨c add￨5￨c (￨5￨c word￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j continue￨5￨e ;￨5￨e }￨4￨j TermQuery￨4￨e tq￨4￨e =￨4￨e new￨4￨e TermQuery￨4￨e (￨4￨e new￨4￨e Term￨4￨e (￨4￨e field￨4￨e ,￨4￨e word￨4￨e )￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b tmp￨5￨b .￨5￨b add￨5￨b (￨5￨b tq￨5￨b ,￨5￨b false￨5￨b ,￨5￨b false￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f BooleanQuery￨5￨p too￨5￨p )￨4￨f {￨4￨f break￨5￨e ;￨5￨e }￨4￨f }￨3￨l return￨3￨e tmp￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CompletionJavadoc￨1￨d extends￨1￨d Javadoc￨1￨d {￨1￨d Expression￨2￨e completionNode￨2￨e ;￨2￨e public￨2￨f CompletionJavadoc￨2￨f (￨2￨f int￨3￨p sourceStart￨3￨p ,￨3￨p int￨3￨p sourceEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f getCompletionNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalResolve￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c completionNode￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c completionNode￨5￨c )￨5￨c instanceof￨5￨c CompletionOnJavadocTag￨5￨c )￨4￨j {￨4￨j (￨5￨e (￨5￨e CompletionOnJavadocTag￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e completionNode￨5￨e )￨5￨e )￨5￨e .￨5￨e filterPossibleTags￨5￨e (￨5￨e scope￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j boolean￨5￨e resolve￨5￨e =￨5￨e true￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c this￨6￨c .￨6￨c completionNode￨6￨c )￨6￨c instanceof￨6￨c CompletionOnJavadocParamNameReference￨6￨c )￨5￨j {￨5￨j resolve￨6￨e =￨6￨e (￨6￨e (￨6￨e (￨6￨e CompletionOnJavadocParamNameReference￨6￨e )￨6￨e (￨6￨e this￨6￨e .￨6￨e completionNode￨6￨e )￨6￨e )￨6￨e .￨6￨e token￨6￨e )￨6￨e !=￨6￨e null￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c this￨6￨c .￨6￨c completionNode￨6￨c )￨6￨c instanceof￨6￨c CompletionOnJavadocTypeParamReference￨6￨c )￨5￨j {￨5￨j resolve￨6￨e =￨6￨e (￨6￨e (￨6￨e (￨6￨e CompletionOnJavadocTypeParamReference￨6￨e )￨6￨e (￨6￨e this￨6￨e .￨6￨e completionNode￨6￨e )￨6￨e )￨6￨e .￨6￨e token￨6￨e )￨6￨e !=￨6￨e null￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j resolve￨6￨c )￨5￨j {￨5￨j switch￨6￨s (￨6￨s scope￨6￨c .￨6￨c kind￨6￨c )￨6￨s {￨6￨s case￨7￨c Scope￨7￨c .￨7￨c CLASS_SCOPE￨7￨c :￨7￨c this￨8￨e .￨8￨e completionNode￨8￨e .￨8￨e resolveType￨8￨e (￨8￨e (￨8￨e (￨8￨e ClassScope￨8￨e )￨8￨e (￨8￨e scope￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e case￨7￨c Scope￨7￨c .￨7￨c METHOD_SCOPE￨7￨c :￨7￨c this￨8￨e .￨8￨e completionNode￨8￨e .￨8￨e resolveType￨8￨e (￨8￨e (￨8￨e (￨8￨e MethodScope￨8￨e )￨8￨e (￨8￨e scope￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e }￨6￨s }￨5￨j if￨5￨j (￨5￨j (￨6￨c this￨6￨c .￨6￨c completionNode￨6￨c )￨6￨c instanceof￨6￨c CompletionOnJavadocParamNameReference￨6￨c )￨5￨j {￨5￨j CompletionOnJavadocParamNameReference￨6￨e paramNameReference￨6￨e =￨6￨e (￨6￨e (￨6￨e CompletionOnJavadocParamNameReference￨6￨e )￨6￨e (￨6￨e this￨6￨e .￨6￨e completionNode￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c scope￨7￨c .￨7￨c kind￨7￨c )￨7￨c ==￨7￨c (￨7￨c Scope￨7￨c .￨7￨c METHOD_SCOPE￨7￨c )￨7￨c )￨6￨j {￨6￨j paramNameReference￨7￨e .￨7￨e missingParams￨7￨e =￨7￨e missingParamTags￨7￨e (￨7￨e paramNameReference￨7￨e .￨7￨e binding￨7￨e ,￨7￨e (￨7￨e (￨7￨e MethodScope￨7￨e )￨7￨e (￨7￨e scope￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j <START_BUG>￨6￨b if￨6￨b (￨6￨b (￨6￨b paramNameReference￨6￨b .￨6￨b token￨6￨b )￨6￨b ==￨6￨b null￨6￨b )￨6￨b {￨6￨b <END_BUG>￨6￨b paramNameReference￨6￨e .￨6￨e missingTypeParams￨6￨e =￨6￨e missingTypeParameterTags￨6￨e (￨6￨e paramNameReference￨6￨e .￨6￨e binding￨6￨e ,￨6￨e scope￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c this￨6￨c .￨6￨c completionNode￨6￨c )￨6￨c instanceof￨6￨c CompletionOnJavadocTypeParamReference￨6￨c )￨5￨j {￨5￨j CompletionOnJavadocTypeParamReference￨6￨e typeParamReference￨6￨e =￨6￨e (￨6￨e (￨6￨e CompletionOnJavadocTypeParamReference￨6￨e )￨6￨e (￨6￨e this￨6￨e .￨6￨e completionNode￨6￨e )￨6￨e )￨6￨e ;￨6￨e typeParamReference￨6￨e .￨6￨e missingParams￨6￨e =￨6￨e missingTypeParameterTags￨6￨e (￨6￨e typeParamReference￨6￨e .￨6￨e resolvedType￨6￨e ,￨6￨e scope￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j Binding￨4￨e qualifiedBinding￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c completionNode￨5￨c )￨5￨c instanceof￨5￨c CompletionOnJavadocQualifiedTypeReference￨5￨c )￨4￨j {￨4￨j CompletionOnJavadocQualifiedTypeReference￨5￨e typeRef￨5￨e =￨5￨e (￨5￨e (￨5￨e CompletionOnJavadocQualifiedTypeReference￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e completionNode￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c typeRef￨6￨c .￨6￨c packageBinding￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j qualifiedBinding￨6￨e =￨6￨e typeRef￨6￨e .￨6￨e resolvedType￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j qualifiedBinding￨6￨e =￨6￨e typeRef￨6￨e .￨6￨e packageBinding￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c completionNode￨5￨c )￨5￨c instanceof￨5￨c CompletionOnJavadocMessageSend￨5￨c )￨4￨j {￨4￨j CompletionOnJavadocMessageSend￨5￨e msg￨5￨e =￨5￨e (￨5￨e (￨5￨e CompletionOnJavadocMessageSend￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e completionNode￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j !￨6￨c (￨6￨c msg￨6￨c .￨6￨c receiver￨6￨c .￨6￨c isThis￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j qualifiedBinding￨6￨e =￨6￨e msg￨6￨e .￨6￨e receiver￨6￨e .￨6￨e resolvedType￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c completionNode￨5￨c )￨5￨c instanceof￨5￨c CompletionOnJavadocAllocationExpression￨5￨c )￨4￨j {￨4￨j CompletionOnJavadocAllocationExpression￨5￨e alloc￨5￨e =￨5￨e (￨5￨e (￨5￨e CompletionOnJavadocAllocationExpression￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e completionNode￨5￨e )￨5￨e )￨5￨e ;￨5￨e qualifiedBinding￨5￨e =￨5￨e alloc￨5￨e .￨5￨e type￨5￨e .￨5￨e resolvedType￨5￨e ;￨5￨e }￨4￨j throw￨4￨e new￨4￨e CompletionNodeFound￨4￨e (￨4￨e this￨4￨e .￨4￨e completionNode￨4￨e ,￨4￨e qualifiedBinding￨4￨e ,￨4￨e scope￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f CompilationUnitScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f MethodScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f missingParamTags￨2￨f (￨2￨f Binding￨3￨p paramNameRefBinding￨3￨p ,￨3￨p MethodScope￨3￨p methScope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f missingTypeParameterTags￨2￨f (￨2￨f Binding￨3￨p paramNameRefBinding￨3￨p ,￨3￨p Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d EmbedBlob￨1￨d extends￨1￨d ConnectionChild￨1￨d implements￨1￨d Blob￨1￨d ,￨1￨d EngineLOB￨1￨d {￨1￨d private￨2￨e boolean￨2￨e materialized￨2￨e ;￨2￨e private￨2￨e PositionedStoreStream￨2￨e myStream￨2￨e ;￨2￨e private￨2￨e int￨2￨e locator￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e long￨2￨e streamLength￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e streamPositionOffset￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isValid￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e LOBStreamControl￨2￨e control￨2￨e ;￨2￨e EmbedBlob￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f blobBytes￨2￨f ,￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f EmbedBlob￨2￨f (￨2￨f DataValueDescriptor￨2￨f dvd￨2￨f ,￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f setBlobPosition￨2￨f (￨2￨f long￨2￨f logicalPos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f read￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f length￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getBytes￨2￨f (￨2￨f long￨2￨f startPos￨2￨f ,￨2￨f int￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getBinaryStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkMatch￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f Blob￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkMatch￨2￨f (￨2￨f Blob￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SQLException￨2￨f handleMyExceptions￨2￨f (￨2￨f Throwable￨2￨f t￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f finalize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setBytes￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setBytes￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f ,￨2￨f int￨2￨f offset￨2￨f ,￨2￨f int￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f OutputStream￨2￨f setBinaryStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f truncate￨2￨f (￨2￨f long￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f free￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getBinaryStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f long￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f checkValidity￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j pos￨4￨c <=￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_BAD_POSITION￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e pos￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j length￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_NONPOSITIVE_LENGTH￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e length￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b length￨3￨b >￨3￨b (￨3￨b (￨3￨b this￨3￨b .￨3￨b length￨3￨b (￨3￨b )￨3￨b )￨3￨b -￨3￨b pos￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b throw￨3￨e Util￨3￨e .￨3￨e generateCsSQLException￨3￨e (￨3￨e POS_AND_LENGTH_GREATER_THAN_LOB￨3￨e ,￨3￨e new￨3￨e Long￨3￨e (￨3￨e pos￨3￨e )￨3￨e ,￨3￨e new￨3￨e Long￨3￨e (￨3￨e length￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e new￨4￨e UpdatableBlobStream￨4￨e (￨4￨e this￨4￨e ,￨4￨e getBinaryStream￨4￨e (￨4￨e )￨4￨e ,￨4￨e (￨4￨e pos￨4￨e -￨4￨e 1￨4￨e )￨4￨e ,￨4￨e length￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ioe￨4￨p )￨3￨f {￨3￨f throw￨4￨e Util￨4￨e .￨4￨e setStreamFailure￨4￨e (￨4￨e ioe￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f void￨2￨f checkValidity￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isMaterialized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLocator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d RelationToManyTableFieldStrategy￨1￨d extends￨1￨d StoreCollectionFieldStrategy￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d RelationToManyTableFieldStrategy￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d protected￨2￨d ClassMapping￨2￨d [￨2￨d ]￨2￨d getIndependentElementMappings￨2￨d (￨2￨d boolean￨2￨d traverse￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f ForeignKey￨2￨f getJoinForeignKey￨2￨f (￨2￨f ClassMapping￨3￨p elem￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f selectElement￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p ClassMapping￨3￨p elem￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p ,￨3￨p int￨3￨p eagerMode￨3￨p ,￨3￨p Joins￨3￨p joins￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f loadElement￨2￨f (￨2￨f OpenJPAStateManager￨2￨f sm￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f JDBCFetchConfiguration￨2￨f fetch￨2￨f ,￨2￨f Result￨2￨f res￨2￨f ,￨2￨f Joins￨2￨f joins￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Joins￨2￨f join￨2￨f (￨2￨f Joins￨3￨p joins￨3￨p ,￨3￨p ClassMapping￨3￨p elem￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Joins￨2￨f joinElementRelation￨2￨f (￨2￨f Joins￨3￨p joins￨3￨p ,￨3￨p ClassMapping￨3￨p elem￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f map￨2￨f (￨2￨f boolean￨3￨p adapt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f insert￨2￨f (￨2￨f OpenJPAStateManager￨2￨f sm￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f RowManager￨2￨f rm￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f insert￨2￨f (￨2￨f OpenJPAStateManager￨2￨f sm￨2￨f ,￨2￨f RowManager￨2￨f rm￨2￨f ,￨2￨f Object￨2￨f vals￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f Collection￨3￨e coll￨3￨e =￨3￨e toCollection￨3￨e (￨3￨e vals￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c coll￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c coll￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j Row￨3￨e row￨3￨e =￨3￨e rm￨3￨e .￨3￨e getSecondaryRow￨3￨e (￨3￨e field￨3￨e .￨3￨e getTable￨3￨e (￨3￨e )￨3￨e ,￨3￨e ACTION_INSERT￨3￨e )￨3￨e ;￨3￨e row￨3￨e .￨3￨e setForeignKey￨3￨e (￨3￨e field￨3￨e .￨3￨e getJoinForeignKey￨3￨e (￨3￨e )￨3￨e ,￨3￨e field￨3￨e .￨3￨e getJoinColumnIO￨3￨e (￨3￨e )￨3￨e ,￨3￨e sm￨3￨e )￨3￨e ;￨3￨e ValueMapping￨3￨e elem￨3￨e =￨3￨e field￨3￨e .￨3￨e getElementMapping￨3￨e (￨3￨e )￨3￨e ;￨3￨e StoreContext￨3￨e ctx￨3￨e =￨3￨e sm￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e Column￨3￨e order￨3￨e =￨3￨e field￨3￨e .￨3￨e getOrderColumn￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e setOrder￨3￨e =￨3￨e field￨3￨e .￨3￨e getOrderColumnIO￨3￨e (￨3￨e )￨3￨e .￨3￨e isInsertable￨3￨e (￨3￨e order￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b int￨3￨b idx￨3￨b =￨3￨b (￨3￨b setOrder￨3￨b &&￨3￨b (￨3￨b order￨3￨b !=￨3￨b null￨3￨b )￨3￨b )￨3￨b ?￨3￨b order￨3￨b .￨3￨b getBase￨3￨b (￨3￨b )￨3￨b :￨3￨b 0￨3￨b ;￨3￨b <END_BUG>￨3￨b OpenJPAStateManager￨3￨e esm￨3￨e ;￨3￨e for￨3￨l (￨3￨l Iterator￨4￨c itr￨4￨c =￨4￨c coll￨4￨c .￨4￨c iterator￨4￨c (￨4￨c )￨4￨c ;￨4￨c itr￨4￨c .￨4￨c hasNext￨4￨c (￨4￨c )￨4￨c ;￨4￨c idx￨4￨c ++￨4￨c )￨3￨l {￨3￨l esm￨4￨e =￨4￨e RelationStrategies￨4￨e .￨4￨e getStateManager￨4￨e (￨4￨e itr￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e ,￨4￨e ctx￨4￨e )￨4￨e ;￨4￨e elem￨4￨e .￨4￨e setForeignKey￨4￨e (￨4￨e row￨4￨e ,￨4￨e esm￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j setOrder￨5￨c )￨4￨j {￨4￨j row￨5￨e .￨5￨e setInt￨5￨e (￨5￨e order￨5￨e ,￨5￨e idx￨5￨e )￨5￨e ;￨5￨e }￨4￨j rm￨4￨e .￨4￨e flushSecondaryRow￨4￨e (￨4￨e row￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f public￨2￨f void￨2￨f update￨2￨f (￨2￨f OpenJPAStateManager￨2￨f sm￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f RowManager￨2￨f rm￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f delete￨2￨f (￨2￨f OpenJPAStateManager￨2￨f sm￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f RowManager￨2￨f rm￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f toDataStoreValue￨2￨f (￨2￨f Object￨3￨p val￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Joins￨2￨f join￨2￨f (￨2￨f Joins￨3￨p joins￨3￨p ,￨3￨p boolean￨3￨p forceOuter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Joins￨2￨f joinRelation￨2￨f (￨2￨f Joins￨3￨p joins￨3￨p ,￨3￨p boolean￨3￨p forceOuter￨3￨p ,￨3￨p boolean￨3￨p traverse￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d }￨2￨f public￨2￨f void￨2￨f update￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f update￨2￨f (￨2￨f boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateFont￨2￨f (￨2￨f Font￨3￨p oldFont￨3￨p ,￨3￨p Font￨3￨p newFont￨3￨p )￨2￨f {￨2￨f }￨2￨f CREATESTRUCT￨2￨f widgetCreateStruct￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f widgetExtStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f widgetParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f widgetStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f setParent￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f TCHAR￨2￨f windowClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f int￨2￨f windowProc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f windowProc￨2￨f (￨2￨f int￨3￨p hwnd￨3￨p ,￨3￨p int￨3￨p msg￨3￨p ,￨3￨p int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_ACTIVATE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CHAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CLEAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CLOSE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_COMMAND￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CONTEXTMENU￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CTLCOLOR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_CUT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_DESTROY￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_DRAWITEM￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_ENDSESSION￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_ENTERIDLE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_ERASEBKGND￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_GETDLGCODE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_GETFONT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_GETOBJECT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_GETMINMAXINFO￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_HOTKEY￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_HELP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_HSCROLL￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_IME_CHAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_IME_COMPOSITION￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_INITMENUPOPUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_INPUTLANGCHANGE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_KEYDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_KEYUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_KILLFOCUS￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONDBLCLK￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_LBUTTONUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MBUTTONDBLCLK￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MBUTTONUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MEASUREITEM￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MENUCHAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MENUSELECT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSEACTIVATE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSEHOVER￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSELEAVE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSEMOVE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOUSEWHEEL￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_MOVE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NCACTIVATE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NCCALCSIZE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NCHITTEST￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NCLBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_NOTIFY￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PAINT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PALETTECHANGED￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PARENTNOTIFY￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PASTE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_PRINTCLIENT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_QUERYENDSESSION￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_QUERYNEWPALETTE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_QUERYOPEN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_RBUTTONDBLCLK￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_RBUTTONDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_RBUTTONUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETCURSOR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETFOCUS￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETTINGCHANGE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETFONT￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SETREDRAW￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SHOWWINDOW￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SIZE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SYSCHAR￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b wmSysChar￨3￨b (￨3￨b windowProc￨3￨b (￨3￨b )￨3￨b ,￨3￨b handle￨3￨b ,￨3￨b wParam￨3￨b ,￨3￨b lParam￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f LRESULT￨2￨f WM_SYSCOLORCHANGE￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SYSCOMMAND￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SYSKEYDOWN￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_SYSKEYUP￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_TIMER￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_UNDO￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_VSCROLL￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_WINDOWPOSCHANGED￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f WM_WINDOWPOSCHANGING￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmColorChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmCommandChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmDrawChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmMeasureChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmNotifyChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f LRESULT￨2￨f wmScrollChild￨2￨f (￨2￨f int￨3￨p wParam￨3￨p ,￨3￨p int￨3￨p lParam￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RowTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDiffColumnFamily￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDiffSuperColumn￨2￨f (￨2￨f )￨2￨f {￨2￨f SuperColumn￨3￨e sc1￨3￨e =￨3￨e new￨3￨e SuperColumn￨3￨e (￨3￨e "one"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b sc1￨3￨b .￨3￨b addColumn￨3￨b (￨3￨b "subcolumn"￨3￨b ,￨3￨b new￨3￨b Column￨3￨b (￨3￨b "subcolumn"￨3￨b ,￨3￨b "A"￨3￨b .￨3￨b getBytes￨3￨b (￨3￨b )￨3￨b ,￨3￨b 0￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b SuperColumn￨3￨e sc2￨3￨e =￨3￨e new￨3￨e SuperColumn￨3￨e (￨3￨e "one"￨3￨e )￨3￨e ;￨3￨e sc2￨3￨e .￨3￨e markForDeleteAt￨3￨e (￨3￨e 0￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e SuperColumn￨3￨e scDiff￨3￨e =￨3￨e (￨3￨e (￨3￨e SuperColumn￨3￨e )￨3￨e (￨3￨e sc1￨3￨e .￨3￨e diff￨3￨e (￨3￨e sc2￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e scDiff￨3￨e .￨3￨e getSubColumns￨3￨e (￨3￨e )￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e scDiff￨3￨e .￨3￨e getMarkedForDeleteAt￨3￨e (￨3￨e )￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRepair￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestBlockJoinSorter￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d class￨2￨d FixedBitSetCachingWrapperFilter￨2￨d extends￨2￨d CachingWrapperFilter￨2￨d {￨2￨d public￨3￨f FixedBitSetCachingWrapperFilter￨3￨f (￨3￨f Filter￨4￨p filter￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f DocIdSet￨3￨f cacheImpl￨3￨f (￨3￨f DocIdSetIterator￨3￨f iterator￨3￨f ,￨3￨f AtomicReader￨3￨f reader￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f test￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e int￨3￨e numParents￨3￨e =￨3￨e atLeast￨3￨e (￨3￨e 200￨3￨e )￨3￨e ;￨3￨e IndexWriterConfig￨3￨e cfg￨3￨e =￨3￨e newIndexWriterConfig￨3￨e (￨3￨e TEST_VERSION_CURRENT￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e analysis￨3￨e .￨3￨e MockAnalyzer￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e cfg￨3￨e .￨3￨e setMergePolicy￨3￨e (￨3￨e newLogMergePolicy￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e RandomIndexWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e RandomIndexWriter￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e ,￨3￨e newDirectory￨3￨e (￨3￨e )￨3￨e ,￨3￨e cfg￨3￨e )￨3￨e ;￨3￨e final￨3￨e Document￨3￨e parentDoc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e NumericDocValuesField￨3￨e parentVal￨3￨e =￨3￨e new￨3￨e NumericDocValuesField￨3￨e (￨3￨e "parent_val"￨3￨e ,￨3￨e 0L￨3￨e )￨3￨e ;￨3￨e parentDoc￨3￨e .￨3￨e add￨3￨e (￨3￨e parentVal￨3￨e )￨3￨e ;￨3￨e final￨3￨e StringField￨3￨e parent￨3￨e =￨3￨e new￨3￨e StringField￨3￨e (￨3￨e "parent"￨3￨e ,￨3￨e "true"￨3￨e ,￨3￨e Store￨3￨e .￨3￨e YES￨3￨e )￨3￨e ;￨3￨e parentDoc￨3￨e .￨3￨e add￨3￨e (￨3￨e parent￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c numParents￨4￨c ;￨4￨c ++￨4￨c i￨4￨c )￨3￨l {￨3￨l List￨4￨e <￨4￨e Document￨4￨e >￨4￨e documents￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e <￨4￨e >￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e int￨4￨e numChildren￨4￨e =￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextInt￨4￨e (￨4￨e 10￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c j￨5￨c =￨5￨c 0￨5￨c ;￨5￨c j￨5￨c <￨5￨c numChildren￨5￨c ;￨5￨c ++￨5￨c j￨5￨c )￨4￨l {￨4￨l final￨5￨e Document￨5￨e childDoc￨5￨e =￨5￨e new￨5￨e Document￨5￨e (￨5￨e )￨5￨e ;￨5￨e childDoc￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e NumericDocValuesField￨5￨e (￨5￨e "child_val"￨5￨e ,￨5￨e random￨5￨e (￨5￨e )￨5￨e .￨5￨e nextInt￨5￨e (￨5￨e 5￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e documents￨5￨e .￨5￨e add￨5￨e (￨5￨e childDoc￨5￨e )￨5￨e ;￨5￨e }￨4￨l parentVal￨4￨e .￨4￨e setLongValue￨4￨e (￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextInt￨4￨e (￨4￨e 50￨4￨e )￨4￨e )￨4￨e ;￨4￨e documents￨4￨e .￨4￨e add￨4￨e (￨4￨e parentDoc￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e addDocuments￨4￨e (￨4￨e documents￨4￨e )￨4￨e ;￨4￨e }￨3￨l writer￨3￨e .￨3￨e forceMerge￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e final￨3￨e DirectoryReader￨3￨e indexReader￨3￨e =￨3￨e writer￨3￨e .￨3￨e getReader￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b writer￨3￨b .￨3￨b close￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e AtomicReader￨3￨e reader￨3￨e =￨3￨e getOnlySegmentReader￨3￨e (￨3￨e indexReader￨3￨e )￨3￨e ;￨3￨e final￨3￨e Filter￨3￨e parentsFilter￨3￨e =￨3￨e new￨3￨e TestBlockJoinSorter￨3￨e .￨3￨e FixedBitSetCachingWrapperFilter￨3￨e (￨3￨e new￨3￨e QueryWrapperFilter￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e search￨3￨e .￨3￨e TermQuery￨3￨e (￨3￨e new￨3￨e Term￨3￨e (￨3￨e "parent"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e FixedBitSet￨3￨e parentBits￨3￨e =￨3￨e (￨3￨e (￨3￨e FixedBitSet￨3￨e )￨3￨e (￨3￨e parentsFilter￨3￨e .￨3￨e getDocIdSet￨3￨e (￨3￨e reader￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e ,￨3￨e null￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e NumericDocValues￨3￨e parentValues￨3￨e =￨3￨e reader￨3￨e .￨3￨e getNumericDocValues￨3￨e (￨3￨e "parent_val"￨3￨e )￨3￨e ;￨3￨e final￨3￨e NumericDocValues￨3￨e childValues￨3￨e =￨3￨e reader￨3￨e .￨3￨e getNumericDocValues￨3￨e (￨3￨e "child_val"￨3￨e )￨3￨e ;￨3￨e final￨3￨e Sort￨3￨e parentSort￨3￨e =￨3￨e new￨3￨e Sort￨3￨e (￨3￨e new￨3￨e SortField￨3￨e (￨3￨e "parent_val"￨3￨e ,￨3￨e Type￨3￨e .￨3￨e LONG￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Sort￨3￨e childSort￨3￨e =￨3￨e new￨3￨e Sort￨3￨e (￨3￨e new￨3￨e SortField￨3￨e (￨3￨e "child_val"￨3￨e ,￨3￨e Type￨3￨e .￨3￨e LONG￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Sort￨3￨e sort￨3￨e =￨3￨e new￨3￨e Sort￨3￨e (￨3￨e new￨3￨e SortField￨3￨e (￨3￨e "custom"￨3￨e ,￨3￨e new￨3￨e BlockJoinComparatorSource￨3￨e (￨3￨e parentsFilter￨3￨e ,￨3￨e parentSort￨3￨e ,￨3￨e childSort￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Sorter￨3￨e sorter￨3￨e =￨3￨e new￨3￨e Sorter￨3￨e (￨3￨e sort￨3￨e )￨3￨e ;￨3￨e final￨3￨e Sorter￨3￨e .￨3￨e DocMap￨3￨e docMap￨3￨e =￨3￨e sorter￨3￨e .￨3￨e sort￨3￨e (￨3￨e reader￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e reader￨3￨e .￨3￨e maxDoc￨3￨e (￨3￨e )￨3￨e ,￨3￨e docMap￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e int￨3￨e [￨3￨e ]￨3￨e children￨3￨e =￨3￨e new￨3￨e int￨3￨e [￨3￨e 1￨3￨e ]￨3￨e ;￨3￨e int￨3￨e numChildren￨3￨e =￨3￨e 0￨3￨e ;￨3￨e int￨3￨e previousParent￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c docMap￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c ++￨4￨c i￨4￨c )￨3￨l {￨3￨l final￨4￨e int￨4￨e oldID￨4￨e =￨4￨e docMap￨4￨e .￨4￨e newToOld￨4￨e (￨4￨e i￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j parentBits￨5￨c .￨5￨c get￨5￨c (￨5￨c oldID￨5￨c )￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c numChildren￨6￨c ;￨6￨c ++￨6￨c j￨6￨c )￨5￨l {￨5￨l assertEquals￨6￨e (￨6￨e oldID￨6￨e ,￨6￨e parentBits￨6￨e .￨6￨e nextSetBit￨6￨e (￨6￨e children￨6￨e [￨6￨e j￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 1￨6￨c ;￨6￨c j￨6￨c <￨6￨c numChildren￨6￨c ;￨6￨c ++￨6￨c j￨6￨c )￨5￨l {￨5￨l final￨6￨e int￨6￨e doc1￨6￨e =￨6￨e children￨6￨e [￨6￨e (￨6￨e j￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e ;￨6￨e final￨6￨e int￨6￨e doc2￨6￨e =￨6￨e children￨6￨e [￨6￨e j￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c childValues￨7￨c .￨7￨c get￨7￨c (￨7￨c doc1￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c childValues￨7￨c .￨7￨c get￨7￨c (￨7￨c doc2￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j assertTrue￨7￨e (￨7￨e (￨7￨e doc1￨7￨e <￨7￨e doc2￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j assertTrue￨7￨e (￨7￨e (￨7￨e (￨7￨e childValues￨7￨e .￨7￨e get￨7￨e (￨7￨e doc1￨7￨e )￨7￨e )￨7￨e <￨7￨e (￨7￨e childValues￨7￨e .￨7￨e get￨7￨e (￨7￨e doc2￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l if￨5￨j (￨5￨j previousParent￨6￨c !=￨6￨c (￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c parentValues￨7￨c .￨7￨c get￨7￨c (￨7￨c previousParent￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c parentValues￨7￨c .￨7￨c get￨7￨c (￨7￨c oldID￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j assertTrue￨7￨e (￨7￨e (￨7￨e previousParent￨7￨e <￨7￨e oldID￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j assertTrue￨7￨e (￨7￨e (￨7￨e (￨7￨e parentValues￨7￨e .￨7￨e get￨7￨e (￨7￨e previousParent￨7￨e )￨7￨e )￨7￨e <￨7￨e (￨7￨e parentValues￨7￨e .￨7￨e get￨7￨e (￨7￨e oldID￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j previousParent￨5￨e =￨5￨e oldID￨5￨e ;￨5￨e numChildren￨5￨e =￨5￨e 0￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j children￨5￨e =￨5￨e ArrayUtil￨5￨e .￨5￨e grow￨5￨e (￨5￨e children￨5￨e ,￨5￨e (￨5￨e numChildren￨5￨e +￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e children￨5￨e [￨5￨e (￨5￨e numChildren￨5￨e ++￨5￨e )￨5￨e ]￨5￨e =￨5￨e oldID￨5￨e ;￨5￨e }￨4￨j }￨3￨l indexReader￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e w￨3￨e .￨3￨e getDirectory￨3￨e (￨3￨e )￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestSameScoresWithThreads￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f test￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e Directory￨3￨e dir￨3￨e =￨3￨e newDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e MockAnalyzer￨3￨e analyzer￨3￨e =￨3￨e new￨3￨e MockAnalyzer￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e analyzer￨3￨e .￨3￨e setMaxTokenLength￨3￨e (￨3￨e TestUtil￨3￨e .￨3￨e nextInt￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e MAX_TERM_LENGTH￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e RandomIndexWriter￨3￨e w￨3￨e =￨3￨e new￨3￨e RandomIndexWriter￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e ,￨3￨e dir￨3￨e ,￨3￨e analyzer￨3￨e )￨3￨e ;￨3￨e LineFileDocs￨3￨e docs￨3￨e =￨3￨e new￨3￨e LineFileDocs￨3￨e (￨3￨e random￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e int￨3￨e charsToIndex￨3￨e =￨3￨e atLeast￨3￨e (￨3￨e 100000￨3￨e )￨3￨e ;￨3￨e int￨3￨e charsIndexed￨3￨e =￨3￨e 0￨3￨e ;￨3￨e while￨3￨l (￨3￨l charsIndexed￨4￨c <￨4￨c charsToIndex￨4￨c )￨3￨l {￨3￨l Document￨4￨e doc￨4￨e =￨4￨e docs￨4￨e .￨4￨e nextDoc￨4￨e (￨4￨e )￨4￨e ;￨4￨e charsIndexed￨4￨e +=￨4￨e doc￨4￨e .￨4￨e get￨4￨e (￨4￨e "body"￨4￨e )￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e ;￨4￨e w￨4￨e .￨4￨e addDocument￨4￨e (￨4￨e doc￨4￨e )￨4￨e ;￨4￨e }￨3￨l IndexReader￨3￨e r￨3￨e =￨3￨e w￨3￨e .￨3￨e getReader￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b w￨3￨b .￨3￨b close￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e IndexSearcher￨3￨e s￨3￨e =￨3￨e newSearcher￨3￨e (￨3￨e r￨3￨e )￨3￨e ;￨3￨e Terms￨3￨e terms￨3￨e =￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e index￨3￨e .￨3￨e MultiFields￨3￨e .￨3￨e getFields￨3￨e (￨3￨e r￨3￨e )￨3￨e .￨3￨e terms￨3￨e (￨3￨e "body"￨3￨e )￨3￨e ;￨3￨e int￨3￨e termCount￨3￨e =￨3￨e 0￨3￨e ;￨3￨e TermsEnum￨3￨e termsEnum￨3￨e =￨3￨e terms￨3￨e .￨3￨e iterator￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c termsEnum￨4￨c .￨4￨c next￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨l {￨3￨l termCount￨4￨e ++￨4￨e ;￨4￨e }￨3￨l assertTrue￨3￨e (￨3￨e (￨3￨e termCount￨3￨e >￨3￨e 0￨3￨e )￨3￨e )￨3￨e ;￨3￨e double￨3￨e chance￨3￨e =￨3￨e 10.0￨3￨e /￨3￨e termCount￨3￨e ;￨3￨e termsEnum￨3￨e =￨3￨e terms￨3￨e .￨3￨e iterator￨3￨e (￨3￨e termsEnum￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e BytesRef￨3￨e ,￨3￨e TopDocs￨3￨e >￨3￨e answers￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c termsEnum￨4￨c .￨4￨c next￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c random￨5￨c (￨5￨c )￨5￨c .￨5￨c nextDouble￨5￨c (￨5￨c )￨5￨c )￨5￨c <=￨5￨c chance￨5￨c )￨4￨j {￨4￨j BytesRef￨5￨e term￨5￨e =￨5￨e BytesRef￨5￨e .￨5￨e deepCopyOf￨5￨e (￨5￨e termsEnum￨5￨e .￨5￨e term￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e answers￨5￨e .￨5￨e put￨5￨e (￨5￨e term￨5￨e ,￨5￨e s￨5￨e .￨5￨e search￨5￨e (￨5￨e new￨5￨e TermQuery￨5￨e (￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e lucene￨5￨e .￨5￨e index￨5￨e .￨5￨e Term￨5￨e (￨5￨e "body"￨5￨e ,￨5￨e term￨5￨e )￨5￨e )￨5￨e ,￨5￨e 100￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j !￨4￨c (￨4￨c answers￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e CountDownLatch￨4￨e startingGun￨4￨e =￨4￨e new￨4￨e CountDownLatch￨4￨e (￨4￨e 1￨4￨e )￨4￨e ;￨4￨e int￨4￨e numThreads￨4￨e =￨4￨e TestUtil￨4￨e .￨4￨e nextInt￨4￨e (￨4￨e random￨4￨e (￨4￨e )￨4￨e ,￨4￨e 2￨4￨e ,￨4￨e 5￨4￨e )￨4￨e ;￨4￨e Thread￨4￨e [￨4￨e ]￨4￨e threads￨4￨e =￨4￨e new￨4￨e Thread￨4￨e [￨4￨e numThreads￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c threadID￨5￨c =￨5￨c 0￨5￨c ;￨5￨c threadID￨5￨c <￨5￨c numThreads￨5￨c ;￨5￨c threadID￨5￨c ++￨5￨c )￨4￨l {￨4￨l Thread￨5￨f thread￨5￨f =￨5￨f new￨5￨f Thread￨5￨f (￨5￨f )￨5￨f {￨5￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f run￨6￨f (￨6￨f )￨6￨f {￨6￨f try￨7￨f (￨7￨f )￨7￨f {￨7￨f startingGun￨8￨e .￨8￨e await￨8￨e (￨8￨e )￨8￨e ;￨8￨e for￨8￨l (￨8￨l int￨9￨c i￨9￨c =￨9￨c 0￨9￨c ;￨9￨c i￨9￨c <￨9￨c 20￨9￨c ;￨9￨c i￨9￨c ++￨9￨c )￨8￨l {￨8￨l List￨9￨e <￨9￨e Map￨9￨e .￨9￨e Entry￨9￨e <￨9￨e BytesRef￨9￨e ,￨9￨e TopDocs￨9￨e >￨9￨e >￨9￨e shuffled￨9￨e =￨9￨e new￨9￨e java￨9￨e .￨9￨e util￨9￨e .￨9￨e ArrayList￨9￨e (￨9￨e answers￨9￨e .￨9￨e entrySet￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e Collections￨9￨e .￨9￨e shuffle￨9￨e (￨9￨e shuffled￨9￨e )￨9￨e ;￨9￨e for￨9￨l (￨9￨l Map￨10￨c .￨10￨c Entry￨10￨c <￨10￨c BytesRef￨10￨c ,￨10￨c TopDocs￨10￨c >￨10￨c ent￨10￨c :￨10￨c shuffled￨10￨c )￨9￨l {￨9￨l TopDocs￨10￨e actual￨10￨e =￨10￨e s￨10￨e .￨10￨e search￨10￨e (￨10￨e new￨10￨e TermQuery￨10￨e (￨10￨e new￨10￨e org￨10￨e .￨10￨e apache￨10￨e .￨10￨e lucene￨10￨e .￨10￨e index￨10￨e .￨10￨e Term￨10￨e (￨10￨e "body"￨10￨e ,￨10￨e ent￨10￨e .￨10￨e getKey￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e ,￨10￨e 100￨10￨e )￨10￨e ;￨10￨e TopDocs￨10￨e expected￨10￨e =￨10￨e ent￨10￨e .￨10￨e getValue￨10￨e (￨10￨e )￨10￨e ;￨10￨e assertEquals￨10￨e (￨10￨e expected￨10￨e .￨10￨e totalHits￨10￨e ,￨10￨e actual￨10￨e .￨10￨e totalHits￨10￨e )￨10￨e ;￨10￨e assertEquals￨10￨e (￨10￨e (￨10￨e "query="￨10￨e +￨10￨e (￨10￨e ent￨10￨e .￨10￨e getKey￨10￨e (￨10￨e )￨10￨e .￨10￨e utf8ToString￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e ,￨10￨e expected￨10￨e .￨10￨e scoreDocs￨10￨e .￨10￨e length￨10￨e ,￨10￨e actual￨10￨e .￨10￨e scoreDocs￨10￨e .￨10￨e length￨10￨e )￨10￨e ;￨10￨e for￨10￨l (￨10￨l int￨11￨c hit￨11￨c =￨11￨c 0￨11￨c ;￨11￨c hit￨11￨c <￨11￨c (￨11￨c expected￨11￨c .￨11￨c scoreDocs￨11￨c .￨11￨c length￨11￨c )￨11￨c ;￨11￨c hit￨11￨c ++￨11￨c )￨10￨l {￨10￨l assertEquals￨11￨e (￨11￨e expected￨11￨e .￨11￨e scoreDocs￨11￨e [￨11￨e hit￨11￨e ]￨11￨e .￨11￨e doc￨11￨e ,￨11￨e actual￨11￨e .￨11￨e scoreDocs￨11￨e [￨11￨e hit￨11￨e ]￨11￨e .￨11￨e doc￨11￨e )￨11￨e ;￨11￨e assertTrue￨11￨e (￨11￨e (￨11￨e (￨11￨e expected￨11￨e .￨11￨e scoreDocs￨11￨e [￨11￨e hit￨11￨e ]￨11￨e .￨11￨e score￨11￨e )￨11￨e ==￨11￨e (￨11￨e actual￨11￨e .￨11￨e scoreDocs￨11￨e [￨11￨e hit￨11￨e ]￨11￨e .￨11￨e score￨11￨e )￨11￨e )￨11￨e )￨11￨e ;￨11￨e }￨10￨l }￨9￨l }￨8￨l }￨7￨f catch￨7￨f (￨7￨f Exception￨8￨p e￨8￨p )￨7￨f {￨7￨f throw￨8￨e new￨8￨e RuntimeException￨8￨e (￨8￨e e￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f }￨5￨f ;￨5￨e threads￨5￨e [￨5￨e threadID￨5￨e ]￨5￨e =￨5￨e thread￨5￨e ;￨5￨e thread￨5￨e .￨5￨e start￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l startingGun￨4￨e .￨4￨e countDown￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l Thread￨5￨c thread￨5￨c :￨5￨c threads￨5￨c )￨4￨l {￨4￨l thread￨5￨e .￨5￨e join￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j r￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e dir￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
class￨1￨d ClipboardProxy￨1￨d {￨1￨d Display￨2￨e display￨2￨e ;￨2￨e int￨2￨e shellHandle￨2￨e ;￨2￨e int￨2￨e atomAtom￨2￨e ;￨2￨e int￨2￨e clipboardAtom￨2￨e ;￨2￨e int￨2￨e motifClipboardAtom￨2￨e ;￨2￨e int￨2￨e primaryAtom￨2￨e ;￨2￨e int￨2￨e targetsAtom￨2￨e ;￨2￨e int￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e convertData￨2￨e =￨2￨e new￨2￨e int￨2￨e [￨2￨e 10￨2￨e ]￨2￨e [￨2￨e 3￨2￨e ]￨2￨e ;￨2￨e Clipboard￨2￨e activeClipboard￨2￨e =￨2￨e null￨2￨e ;￨2￨e Clipboard￨2￨e activePrimaryClipboard￨2￨e =￨2￨e null￨2￨e ;￨2￨e Object￨2￨e [￨2￨e ]￨2￨e clipboardData￨2￨e ;￨2￨e Transfer￨2￨e [￨2￨e ]￨2￨e clipboardDataTypes￨2￨e ;￨2￨e Object￨2￨e [￨2￨e ]￨2￨e primaryClipboardData￨2￨e ;￨2￨e Transfer￨2￨e [￨2￨e ]￨2￨e primaryClipboardDataTypes￨2￨e ;￨2￨e boolean￨2￨e done￨2￨e =￨2￨e false￨2￨e ;￨2￨e Object￨2￨e selectionValue￨2￨e ;￨2￨e Transfer￨2￨e selectionTransfer￨2￨e ;￨2￨e Callback￨2￨e XtConvertSelectionCallback￨2￨e ;￨2￨e Callback￨2￨e XtLoseSelectionCallback￨2￨e ;￨2￨e Callback￨2￨e XtSelectionDoneCallback￨2￨e ;￨2￨e Callback￨2￨e XtSelectionCallbackCallback￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e ATOM￨2￨e =￨2￨e Converter￨2￨e .￨2￨e wcsToMbcs￨2￨e (￨2￨e null￨2￨e ,￨2￨e "ATOM"￨2￨e ,￨2￨e true￨2￨e )￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e CLIPBOARD￨2￨e =￨2￨e Converter￨2￨e .￨2￨e wcsToMbcs￨2￨e (￨2￨e null￨2￨e ,￨2￨e "CLIPBOARD"￨2￨e ,￨2￨e true￨2￨e )￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e PRIMARY￨2￨e =￨2￨e Converter￨2￨e .￨2￨e wcsToMbcs￨2￨e (￨2￨e null￨2￨e ,￨2￨e "PRIMARY"￨2￨e ,￨2￨e true￨2￨e )￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e TARGETS￨2￨e =￨2￨e Converter￨2￨e .￨2￨e wcsToMbcs￨2￨e (￨2￨e null￨2￨e ,￨2￨e "TARGETS"￨2￨e ,￨2￨e true￨2￨e )￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e _MOTIF_CLIPBOARD_TARGETS￨2￨e =￨2￨e Converter￨2￨e .￨2￨e wcsToMbcs￨2￨e (￨2￨e null￨2￨e ,￨2￨e "_MOTIF_CLIPBOARD_TARGETS"￨2￨e ,￨2￨e true￨2￨e )￨2￨e ;￨2￨e static￨2￨e String￨2￨e ID￨2￨e =￨2￨e "CLIPBOARD<seq2seq4repair_space>PROXY<seq2seq4repair_space>OBJECT"￨2￨e ;￨2￨e static￨2￨f ClipboardProxy￨2￨f _getInstance￨2￨f (￨2￨f final￨3￨p Display￨3￨p display￨3￨p )￨2￨f {￨2￨f }￨2￨f ClipboardProxy￨2￨f (￨2￨f Display￨3￨p display￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clear￨2￨f (￨2￨f Clipboard￨3￨p owner￨3￨p ,￨3￨p int￨3￨p clipboards￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Object￨2￨f getContents￨2￨f (￨2￨f Transfer￨3￨p transfer￨3￨p ,￨3￨p int￨3￨p clipboardType￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f [￨2￨f ]￨2￨f getAvailableTypes￨2￨f (￨2￨f int￨3￨p clipboardType￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setContents￨2￨f (￨2￨f Clipboard￨3￨p owner￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p data￨3￨p ,￨3￨p Transfer￨3￨p [￨3￨p ]￨3￨p dataTypes￨3￨p ,￨3￨p int￨3￨p clipboards￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f storePtr￨2￨f (￨2￨f int￨3￨p ptr￨3￨p ,￨3￨p int￨3￨p selection￨3￨p ,￨3￨p int￨3￨p target￨3￨p )￨2￨f {￨2￨f int￨3￨e index￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c convertData￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c convertData￨5￨c [￨5￨c i￨5￨c ]￨5￨c [￨5￨c 0￨5￨c ]￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j index￨5￨e =￨5￨e i￨5￨e ;￨5￨e break￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j index￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b int￨4￨b [￨4￨b ]￨4￨b [￨4￨b ]￨4￨b newConvertData￨4￨b =￨4￨b new￨4￨b int￨4￨b [￨4￨b convertData￨4￨b .￨4￨b length￨4￨b ]￨4￨b [￨4￨b 3￨4￨b ]￨4￨b ;￨4￨b <END_BUG>￨4￨b System￨4￨e .￨4￨e arraycopy￨4￨e (￨4￨e convertData￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e newConvertData￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e convertData￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e index￨4￨e =￨4￨e convertData￨4￨e .￨4￨e length￨4￨e ;￨4￨e convertData￨4￨e =￨4￨e newConvertData￨4￨e ;￨4￨e }￨3￨j convertData￨3￨e [￨3￨e index￨3￨e ]￨3￨e [￨3￨e 0￨3￨e ]￨3￨e =￨3￨e selection￨3￨e ;￨3￨e convertData￨3￨e [￨3￨e index￨3￨e ]￨3￨e [￨3￨e 1￨3￨e ]￨3￨e =￨3￨e target￨3￨e ;￨3￨e convertData￨3￨e [￨3￨e index￨3￨e ]￨3￨e [￨3￨e 2￨3￨e ]￨3￨e =￨3￨e ptr￨3￨e ;￨3￨e }￨2￨f void￨2￨f wait￨2￨f (￨2￨f int￨3￨p timeout￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f checkEvent￨2￨f (￨2￨f int￨3￨p display￨3￨p ,￨3￨p int￨3￨p event￨3￨p ,￨3￨p int￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f XtConvertSelection￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p selection￨3￨p ,￨3￨p int￨3￨p target￨3￨p ,￨3￨p int￨3￨p type￨3￨p ,￨3￨p int￨3￨p value￨3￨p ,￨3￨p int￨3￨p length￨3￨p ,￨3￨p int￨3￨p format￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f XtLoseSelection￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p selection￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f XtSelectionCallback￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p client_data￨3￨p ,￨3￨p int￨3￨p selection￨3￨p ,￨3￨p int￨3￨p type￨3￨p ,￨3￨p int￨3￨p value￨3￨p ,￨3￨p int￨3￨p length￨3￨p ,￨3￨p int￨3￨p format￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f XtSelectionDone￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p selection￨3￨p ,￨3￨p int￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AjaxTimerBehaviorTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d AjaxTimerBehaviorTest￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d testAddToAjaxUpdate￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f testAddToWebPage￨2￨f (￨2￨f )￨2￨f {￨2￨f Duration￨3￨e dur￨3￨e =￨3￨e Duration￨3￨e .￨3￨e seconds￨3￨e (￨3￨e 20￨3￨e )￨3￨e ;￨3￨e final￨3￨e AjaxTimerBehaviorTest￨3￨e .￨3￨e MyAjaxSelfUpdatingTimerBehavior￨3￨e timer￨3￨e =￨3￨e new￨3￨e AjaxTimerBehaviorTest￨3￨e .￨3￨e MyAjaxSelfUpdatingTimerBehavior￨3￨e (￨3￨e dur￨3￨e )￨3￨e ;￨3￨e final￨3￨e MockPageWithLinkAndComponent￨3￨e page￨3￨e =￨3￨e new￨3￨e MockPageWithLinkAndComponent￨3￨e (￨3￨e )￨3￨e ;￨3￨e Label￨3￨e label￨3￨e =￨3￨e new￨3￨e Label￨3￨e (￨3￨e MockPageWithLinkAndComponent￨3￨e .￨3￨e COMPONENT_ID￨3￨e ,￨3￨e "Hello"￨3￨e )￨3￨e ;￨3￨e page￨3￨e .￨3￨e add￨3￨e (￨3￨e label￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b page￨3￨b .￨3￨b add￨3￨b (￨3￨b new￨3￨b Link￨3￨b (￨3￨b MockPageWithLinkAndComponent￨3￨b .￨3￨b LINK_ID￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f onClick￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨3￨e )￨3￨e ;￨3￨e label￨3￨e .￨3￨e setOutputMarkupId￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e label￨3￨e .￨3￨e add￨3￨e (￨3￨e timer￨3￨e )￨3￨e ;￨3￨e tester￨3￨e .￨3￨e startPage￨3￨e (￨3￨e page￨3￨e )￨3￨e ;￨3￨e validate￨3￨e (￨3￨e timer￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e tester￨3￨e .￨3￨e clickLink￨3￨e (￨3￨e LINK_ID￨3￨e )￨3￨e ;￨3￨e validate￨3￨e (￨3￨e timer￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f validate￨2￨f (￨2￨f AjaxTimerBehaviorTest￨3￨p .￨3￨p MyAjaxSelfUpdatingTimerBehavior￨3￨p timer￨3￨p ,￨3￨p boolean￨3￨p inBodyOnLoad￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validateTimerScript￨2￨f (￨2￨f String￨3￨p document￨3￨p ,￨3￨p String￨3￨p updateScript￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f quote￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d MyAjaxSelfUpdatingTimerBehavior￨2￨d extends￨2￨d AjaxSelfUpdatingTimerBehavior￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e final￨3￨e Duration￨3￨e duration￨3￨e ;￨3￨e String￨3￨e updateScript￨3￨e ;￨3￨e public￨3￨f MyAjaxSelfUpdatingTimerBehavior￨3￨f (￨3￨f Duration￨4￨p updateInterval￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentRendered￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getUpdateScript￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d final￨1￨d class￨1￨d ScheduledThreadPoolAdd￨1￨d extends￨1￨d AbstractExecutorAdd￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 5597662601486525937L￨2￨e ;￨2￨e public￨2￨f ScheduledThreadPoolAdd￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p ScaledCount￨3￨p maxThreads￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f <￨2￨f P￨2￨f >￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f final￨3￨p UpdateContext￨3￨p updateContext￨3￨p ,￨3￨p final￨3￨p UpdateResultHandler￨3￨p <￨3￨p ?￨3￨p super￨3￨p Void￨3￨p ,￨3￨p P￨3￨p >￨3￨p handler￨3￨p ,￨3￨p final￨3￨p P￨3￨p param￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b BatchBuilder￨3￨b builder￨3￨b =￨3￨b updateContext￨3￨b .￨3￨b getBatchBuilder￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ScaledCount￨3￨e maxThreadsCount￨3￨e =￨3￨e getMaxThreads￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e maxThreads￨3￨e =￨3￨e maxThreadsCount￨3￨e .￨3￨e getScaledCount￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e name￨3￨e =￨3￨e getName￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e serviceName￨3￨e =￨3￨e ThreadsServices￨3￨e .￨3￨e executorName￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e final￨3￨e UnboundedQueueThreadPoolService￨3￨e service￨3￨e =￨3￨e new￨3￨e UnboundedQueueThreadPoolService￨3￨e (￨3￨e maxThreads￨3￨e ,￨3￨e getKeepaliveTime￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceBuilder￨3￨e <￨3￨e ExecutorService￨3￨e >￨3￨e serviceBuilder￨3￨e =￨3￨e builder￨3￨e .￨3￨e addService￨3￨e (￨3￨e serviceName￨3￨e ,￨3￨e service￨3￨e )￨3￨e ;￨3￨e addThreadFactoryDependency￨3￨e (￨3￨e serviceName￨3￨e ,￨3￨e serviceBuilder￨3￨e ,￨3￨e service￨3￨e .￨3￨e getThreadFactoryInjector￨3￨e (￨3￨e )￨3￨e ,￨3￨e builder￨3￨e )￨3￨e ;￨3￨e serviceBuilder￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f final￨2￨f ThreadsSubsystemElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f UpdateFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d GeneralTopologyContext￨1￨d implements￨1￨d JSONAware￨1￨d {￨1￨d private￨2￨e StormTopology￨2￨e _topology￨2￨e ;￨2￨e private￨2￨e Map￨2￨e <￨2￨e Integer￨2￨e ,￨2￨e String￨2￨e >￨2￨e _taskToComponent￨2￨e ;￨2￨e private￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e Integer￨2￨e >￨2￨e >￨2￨e _componentToTasks￨2￨e ;￨2￨e private￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e Fields￨2￨e >￨2￨e >￨2￨e _componentToStreamToFields￨2￨e ;￨2￨e private￨2￨e String￨2￨e _stormId￨2￨e ;￨2￨e protected￨2￨e Map￨2￨e _stormConf￨2￨e ;￨2￨e public￨2￨f GeneralTopologyContext￨2￨f (￨2￨f StormTopology￨3￨p topology￨3￨p ,￨3￨p Map￨3￨p stormConf￨3￨p ,￨3￨p Map￨3￨p <￨3￨p Integer￨3￨p ,￨3￨p String￨3￨p >￨3￨p taskToComponent￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p List￨3￨p <￨3￨p Integer￨3￨p >￨3￨p >￨3￨p componentToSortedTasks￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Fields￨3￨p >￨3￨p >￨3￨p componentToStreamToFields￨3￨p ,￨3￨p String￨3￨p stormId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStormId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StormTopology￨2￨f getRawTopology￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getComponentId￨2￨f (￨2￨f int￨3￨p taskId￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b taskId￨3￨b ==￨3￨b (￨3￨b Constants￨3￨b .￨3￨b SYSTEM_TASK_ID￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e Constants￨3￨e .￨3￨e SYSTEM_COMPONENT_ID￨3￨e ;￨3￨e else￨3￨j {￨3￨j return￨4￨e _taskToComponent￨4￨e .￨4￨e get￨4￨e (￨4￨e taskId￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f getComponentStreams￨2￨f (￨2￨f String￨3￨p componentId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f Integer￨2￨f >￨2￨f getComponentTasks￨2￨f (￨2￨f String￨3￨p componentId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Fields￨2￨f getComponentOutputFields￨2￨f (￨2￨f String￨3￨p componentId￨3￨p ,￨3￨p String￨3￨p streamId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Fields￨2￨f getComponentOutputFields￨2￨f (￨2￨f GlobalStreamId￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f GlobalStreamId￨2￨f ,￨2￨f Grouping￨2￨f >￨2￨f getSources￨2￨f (￨2￨f String￨3￨p componentId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Grouping￨2￨f >￨2￨f >￨2￨f getTargets￨2￨f (￨2￨f String￨3￨p componentId￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toJSONString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f Integer￨2￨f ,￨2￨f String￨2￨f >￨2￨f getTaskToComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f getComponentIds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ComponentCommon￨2￨f getComponentCommon￨2￨f (￨2￨f String￨3￨p componentId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f maxTopologyMessageTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ResourceLink￨1￨d extends￨1￨d Link￨1￨d implements￨1￨d IResourceListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e final￨2￨e ResourceReference￨2￨e resourceReference￨2￨e ;￨2￨e private￨2￨e final￨2￨e Resource￨2￨e resource￨2￨e ;￨2￨e public￨2￨f ResourceLink￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p ResourceReference￨3￨p resourceReference￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResourceLink￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p Resource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onClick￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f String￨2￨f getURL￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c resourceReference￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j resourceReference￨4￨e .￨4￨e setLocale￨4￨e (￨4￨e getLocale￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e resourceReference￨4￨e .￨4￨e setStyle￨4￨e (￨4￨e getStyle￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e resourceReference￨4￨e .￨4￨e bind￨4￨e (￨4￨e getApplication￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e getRequestCycle￨4￨e (￨4￨e )￨4￨e .￨4￨e urlFor￨4￨e (￨4￨e resourceReference￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b urlFor￨3￨b (￨3￨b IResourceListener￨3￨b .￨3￨b class￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f final￨2￨f void￨2￨f onResourceRequested￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PersistenceProviderImpl￨1￨d implements￨1￨d PersistenceProvider￨1￨d ,￨1￨d ProviderUtil￨1￨d {￨1￨d static￨2￨e final￨2￨e String￨2￨e CLASS_TRANSFORMER_OPTIONS￨2￨e =￨2￨e "ClassTransformerOptions"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e EMF_POOL￨2￨e =￨2￨e "EntityManagerFactoryPool"￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d PersistenceProviderImpl￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d Log￨2￨d _log￨2￨d ;￨2￨d public￨2￨d OpenJPAEntityManagerFactory￨2￨d createEntityManagerFactory￨2￨d (￨2￨d String￨2￨d name￨2￨d ,￨2￨d String￨2￨d resource￨2￨d ,￨2￨d Map￨2￨d m￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨f BrokerFactory￨2￨f getBrokerFactory￨2￨f (￨2￨f ConfigurationProvider￨3￨p cp￨3￨p ,￨3￨p Object￨3￨p poolValue￨3￨p ,￨3￨p ClassLoader￨3￨p loader￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f OpenJPAEntityManagerFactory￨2￨f createEntityManagerFactory￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Map￨3￨p m￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f OpenJPAEntityManagerFactory￨2￨f createContainerEntityManagerFactory￨2￨f (￨2￨f PersistenceUnitInfo￨3￨p pui￨3￨p ,￨3￨p Map￨3￨p m￨3￨p )￨2￨f {￨2￨f PersistenceProductDerivation￨3￨e pd￨3￨e =￨3￨e new￨3￨e PersistenceProductDerivation￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Object￨4￨e poolValue￨4￨e =￨4￨e Configurations￨4￨e .￨4￨e removeProperty￨4￨e (￨4￨e PersistenceProviderImpl￨4￨e .￨4￨e EMF_POOL￨4￨e ,￨4￨e m￨4￨e )￨4￨e ;￨4￨e ConfigurationProvider￨4￨e cp￨4￨e =￨4￨e pd￨4￨e .￨4￨e load￨4￨e (￨4￨e pui￨4￨e ,￨4￨e m￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j cp￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j Exception￨4￨e transformerException￨4￨e =￨4￨e null￨4￨e ;￨4￨e String￨4￨e ctOpts￨4￨e =￨4￨e (￨4￨e (￨4￨e String￨4￨e )￨4￨e (￨4￨e Configurations￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e PersistenceProviderImpl￨4￨e .￨4￨e CLASS_TRANSFORMER_OPTIONS￨4￨e ,￨4￨e pui￨4￨e .￨4￨e getProperties￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f pui￨5￨e .￨5￨e addTransformer￨5￨e (￨5￨e new￨5￨e PersistenceProviderImpl￨5￨e .￨5￨e ClassTransformerImpl￨5￨e (￨5￨e cp￨5￨e ,￨5￨e ctOpts￨5￨e ,￨5￨e pui￨5￨e .￨5￨e getNewTempClassLoader￨5￨e (￨5￨e )￨5￨e ,￨5￨e newConfigurationImpl￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p e￨5￨p )￨4￨f {￨4￨f transformerException￨5￨e =￨5￨e e￨5￨e ;￨5￨e }￨4￨f if￨4￨j (￨4￨j !￨5￨c (￨5￨c Configurations￨5￨c .￨5￨c containsProperty￨5￨c (￨5￨c KEY￨5￨c ,￨5￨c cp￨5￨c .￨5￨c getProperties￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j cp￨5￨e .￨5￨e addProperty￨5￨e (￨5￨e (￨5￨e "openjpa."￨5￨e +￨5￨e (￨5￨e BrokerValue￨5￨e .￨5￨e KEY￨5￨e )￨5￨e )￨5￨e ,￨5￨e getDefaultBrokerAlias￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j BrokerFactory￨4￨e factory￨4￨e =￨4￨e getBrokerFactory￨4￨e (￨4￨e cp￨4￨e ,￨4￨e poolValue￨4￨e ,￨4￨e pui￨4￨e .￨4￨e getClassLoader￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j transformerException￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j Log￨5￨e log￨5￨e =￨5￨e factory￨5￨e .￨5￨e getConfiguration￨5￨e (￨5￨e )￨5￨e .￨5￨e getLog￨5￨e (￨5￨e LOG_RUNTIME￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j log￨6￨c .￨6￨c isTraceEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j log￨6￨e .￨6￨e warn￨6￨e (￨6￨e PersistenceProviderImpl￨6￨e .￨6￨e _loc￨6￨e .￨6￨e get￨6￨e (￨6￨e "transformer-registration-error-ex"￨6￨e ,￨6￨e pui￨6￨e )￨6￨e ,￨6￨e transformerException￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j log￨6￨e .￨6￨e warn￨6￨e (￨6￨e PersistenceProviderImpl￨6￨e .￨6￨e _loc￨6￨e .￨6￨e get￨6￨e (￨6￨e "transformer-registration-error"￨6￨e ,￨6￨e pui￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j OpenJPAConfiguration￨4￨e conf￨4￨e =￨4￨e factory￨4￨e .￨4￨e getConfiguration￨4￨e (￨4￨e )￨4￨e ;￨4￨e _log￨4￨e =￨4￨e conf￨4￨e .￨4￨e getLog￨4￨e (￨4￨e LOG_RUNTIME￨4￨e )￨4￨e ;￨4￨e loadValidator￨4￨e (￨4￨e _log￨4￨e ,￨4￨e conf￨4￨e )￨4￨e ;￨4￨e Options￨4￨e o￨4￨e =￨4￨e Configurations￨4￨e .￨4￨e parseProperties￨4￨e (￨4￨e Configurations￨4￨e .￨4￨e getProperties￨4￨e (￨4￨e "openjpa.MetaDataRepository"￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j o￨5￨c .￨5￨c getBooleanProperty￨5￨c (￨5￨c "Preload"￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b conf￨5￨b .￨5￨b getAbstractBrokerFactoryInstance￨5￨b (￨5￨b )￨5￨b .￨5￨b preload￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j return￨4￨e JPAFacadeHelper￨4￨e .￨4￨e toEntityManagerFactory￨4￨e (￨4￨e factory￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e PersistenceExceptions￨4￨e .￨4￨e toPersistenceException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f ProviderUtil￨2￨f getProviderUtil￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getDefaultBrokerAlias￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f OpenJPAConfiguration￨2￨f newConfigurationImpl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d ClassTransformerImpl￨2￨d implements￨2￨d ClassTransformer￨2￨d {￨2￨d private￨3￨e final￨3￨e ClassFileTransformer￨3￨e _trans￨3￨e ;￨3￨e private￨3￨f ClassTransformerImpl￨3￨f (￨3￨f ConfigurationProvider￨4￨p cp￨4￨p ,￨4￨p String￨4￨p props￨4￨p ,￨4￨p final￨4￨p ClassLoader￨4￨p tmpLoader￨4￨p ,￨4￨p OpenJPAConfiguration￨4￨p conf￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f byte￨3￨f [￨3￨f ]￨3￨f transform￨3￨f (￨3￨f ClassLoader￨3￨f cl￨3￨f ,￨3￨f String￨3￨f name￨3￨f ,￨3￨f Class￨3￨f <￨3￨f ?￨3￨f >￨3￨f previousVersion￨3￨f ,￨3￨f ProtectionDomain￨3￨f pd￨3￨f ,￨3￨f byte￨3￨f [￨3￨f ]￨3￨f bytes￨3￨f )￨3￨f throws￨3￨f IllegalClassFormatException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f void￨2￨f loadAgent￨2￨f (￨2￨f Log￨3￨p log￨3￨p ,￨3￨p OpenJPAConfiguration￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f loadValidator￨2￨f (￨2￨f Log￨3￨p log￨3￨p ,￨3￨p OpenJPAConfiguration￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LoadState￨2￨f isLoaded￨2￨f (￨2￨f Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LoadState￨2￨f isLoadedWithReference￨2￨f (￨2￨f Object￨3￨p obj￨3￨p ,￨3￨p String￨3￨p attr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LoadState￨2￨f isLoadedWithoutReference￨2￨f (￨2￨f Object￨3￨p obj￨3￨p ,￨3￨p String￨3￨p attr￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EudoraMailImportFilter￨1￨d extends￨1￨d AbstractMailboxImporter￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e LOG￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.columba.mail"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TIME_ZONE￨2￨e =￨2￨e new￨2￨e SimpleDateFormat￨2￨e (￨2￨e "Z"￨2￨e )￨2￨e .￨2￨e format￨2￨e (￨2￨e new￨2￨e Date￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_CHARSET￨2￨e =￨2￨e System￨2￨e .￨2￨e getProperty￨2￨e (￨2￨e "file.encoding"￨2￨e )￨2￨e ;￨2￨e public￨2￨f EudoraMailImportFilter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EudoraMailImportFilter￨2￨f (￨2￨f IMailbox￨3￨p destinationFolder￨3￨p ,￨3￨p File￨3￨p [￨3￨p ]￨3￨p sourceFiles￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDescription￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f importMailboxFile￨2￨f (￨2￨f File￨2￨f file￨2￨f ,￨2￨f IWorkerStatusController￨2￨f worker￨2￨f ,￨2￨f IMailbox￨2￨f destFolder￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getNewDateHeader￨2￨f (￨2￨f String￨3￨p dateStr￨3￨p ,￨3￨p String￨3￨p timeZone￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f convertAndSaveMessage￨2￨f (￨2￨f String￨3￨p msg￨3￨p ,￨3￨p String￨3￨p replacementDate￨3￨p ,￨3￨p IWorkerStatusController￨3￨p worker￨3￨p ,￨3￨p IMailbox￨3￨p destFolder￨3￨p )￨2￨f {￨2￨f String￨3￨e [￨3￨e ]￨3￨e divided￨3￨e =￨3￨e divideMessage￨3￨e (￨3￨e msg￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j divided￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j EudoraMailImportFilter￨4￨e .￨4￨e LOG￨4￨e .￨4￨e severe￨4￨e (￨4￨e "Error<seq2seq4repair_space>splitting<seq2seq4repair_space>message<seq2seq4repair_space>into<seq2seq4repair_space>headers<seq2seq4repair_space>and<seq2seq4repair_space>body"￨4￨e )￨4￨e ;￨4￨e return￨4￨e false￨4￨e ;￨4￨e }￨3￨j String￨3￨e headers￨3￨e =￨3￨e divided￨3￨e [￨3￨e 0￨3￨e ]￨3￨e ;￨3￨e String￨3￨e body￨3￨e =￨3￨e divided￨3￨e [￨3￨e 1￨3￨e ]￨3￨e ;￨3￨e HeaderTokenizer￨3￨e tokenizer￨3￨e =￨3￨e new￨3￨e HeaderTokenizer￨3￨e (￨3￨e headers￨3￨e )￨3￨e ;￨3￨e EncodedWord￨3￨e decoder￨3￨e =￨3￨e new￨3￨e EncodedWord￨3￨e (￨3￨e )￨3￨e ;￨3￨e StringBuffer￨3￨e headerBuf￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e dateFound￨3￨e =￨3￨e false￨3￨e ;￨3￨e boolean￨3￨e contentTypeFound￨3￨e =￨3￨e false￨3￨e ;￨3￨e String￨3￨e line￨3￨e =￨3￨e tokenizer￨3￨e .￨3￨e nextLine￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l line￨4￨c !=￨4￨c null￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c line￨5￨c .￨5￨c indexOf￨5￨c (￨5￨c ':'￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j String￨5￨e key￨5￨e =￨5￨e line￨5￨e .￨5￨e substring￨5￨e (￨5￨e 0￨5￨e ,￨5￨e line￨5￨e .￨5￨e indexOf￨5￨e (￨5￨e ':'￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b String￨5￨b header￨5￨b =￨5￨b decoder￨5￨b .￨5￨b decode￨5￨b (￨5￨b (￨5￨b (￨5￨b CharSequence￨5￨b )￨5￨b (￨5￨b line￨5￨b .￨5￨b substring￨5￨b (￨5￨b (￨5￨b (￨5￨b line￨5￨b .￨5￨b indexOf￨5￨b (￨5￨b ':'￨5￨b )￨5￨b )￨5￨b +￨5￨b 1￨5￨b )￨5￨b )￨5￨b .￨5￨b trim￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b )￨5￨b .￨5￨b toString￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b if￨5￨j (￨5￨j key￨6￨c .￨6￨c equalsIgnoreCase￨6￨c (￨6￨c "Date"￨6￨c )￨6￨c )￨5￨j {￨5￨j dateFound￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j key￨6￨c .￨6￨c equalsIgnoreCase￨6￨c (￨6￨c "Content-Type"￨6￨c )￨6￨c )￨5￨j {￨5￨j contentTypeFound￨6￨e =￨6￨e true￨6￨e ;￨6￨e ContentType￨6￨e conType￨6￨e =￨6￨e new￨6￨e ContentType￨6￨e (￨6￨e header￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c conType￨7￨c .￨7￨c getType￨7￨c (￨7￨c )￨7￨c .￨7￨c equalsIgnoreCase￨7￨c (￨7￨c "multipart"￨7￨c )￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c body￨7￨c .￨7￨c indexOf￨7￨c (￨7￨c (￨7￨c "--"￨7￨c +￨7￨c (￨7￨c conType￨7￨c .￨7￨c getBoundary￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨7￨c ==￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j conType￨8￨c .￨8￨c getSubType￨8￨c (￨8￨c )￨8￨c .￨8￨c equalsIgnoreCase￨8￨c (￨8￨c "alternative"￨8￨c )￨8￨c )￨7￨j {￨7￨j header￨8￨e =￨8￨e guessBodyContentType￨8￨e (￨8￨e body￨8￨e )￨8￨e ;￨8￨e EudoraMailImportFilter￨8￨e .￨8￨e LOG￨8￨e .￨8￨e fine￨8￨e (￨8￨e (￨8￨e "Content-Type:<seq2seq4repair_space>multipart/alternative<seq2seq4repair_space>replaced<seq2seq4repair_space>with<seq2seq4repair_space>"￨8￨e +￨8￨e header￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j {￨7￨j String￨8￨e [￨8￨e ]￨8￨e split￨8￨e =￨8￨e createAttachmentListFromAttachmentConverted￨8￨e (￨8￨e body￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c split￨9￨c ==￨9￨c null￨9￨c )￨9￨c ||￨9￨c (￨9￨c (￨9￨c split￨9￨c .￨9￨c length￨9￨c )￨9￨c ==￨9￨c 1￨9￨c )￨9￨c )￨8￨j {￨8￨j header￨9￨e =￨9￨e guessBodyContentType￨9￨e (￨9￨e body￨9￨e )￨9￨e ;￨9￨e EudoraMailImportFilter￨9￨e .￨9￨e LOG￨9￨e .￨9￨e fine￨9￨e (￨9￨e (￨9￨e (￨9￨e (￨9￨e "Content-Type:<seq2seq4repair_space>multipart/"￨9￨e +￨9￨e (￨9￨e conType￨9￨e .￨9￨e getSubType￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e +￨9￨e "<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>"￨9￨e )￨9￨e +￨9￨e header￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j {￨8￨j header￨9￨e =￨9￨e "multipart/mixed;\n\tboundary="￨9￨e +￨9￨e (￨9￨e conType￨9￨e .￨9￨e getBoundary￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e body￨9￨e =￨9￨e createBodyFromParts￨9￨e (￨9￨e split￨9￨e ,￨9￨e conType￨9￨e .￨9￨e getBoundary￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e EudoraMailImportFilter￨9￨e .￨9￨e LOG￨9￨e .￨9￨e fine￨9￨e (￨9￨e "Content-Type:<seq2seq4repair_space>multipart/mixed.<seq2seq4repair_space>Boundaries<seq2seq4repair_space>added<seq2seq4repair_space>to<seq2seq4repair_space>msg<seq2seq4repair_space>body"￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨j }￨6￨j }￨5￨j else￨5￨j if￨5￨j (￨5￨j key￨6￨c .￨6￨c equalsIgnoreCase￨6￨c (￨6￨c "X-Attachments"￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c header￨7￨c .￨7￨c length￨7￨c (￨7￨c )￨7￨c )￨7￨c >￨7￨c 0￨7￨c )￨6￨j {￨6￨j String￨7￨e [￨7￨e ]￨7￨e split￨7￨e =￨7￨e createAttachmentListFromHeader￨7￨e (￨7￨e body￨7￨e ,￨7￨e header￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j (￨8￨c split￨8￨c ==￨8￨c null￨8￨c )￨8￨c ||￨8￨c (￨8￨c (￨8￨c split￨8￨c .￨8￨c length￨8￨c )￨8￨c ==￨8￨c 1￨8￨c )￨8￨c )￨7￨j {￨7￨j headerBuf￨8￨e .￨8￨e append￨8￨e (￨8￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨8￨e )￨8￨e ;￨8￨e key￨8￨e =￨8￨e "Content-Type"￨8￨e ;￨8￨e header￨8￨e =￨8￨e guessBodyContentType￨8￨e (￨8￨e body￨8￨e )￨8￨e ;￨8￨e contentTypeFound￨8￨e =￨8￨e true￨8￨e ;￨8￨e EudoraMailImportFilter￨8￨e .￨8￨e LOG￨8￨e .￨8￨e fine￨8￨e (￨8￨e (￨8￨e "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>"￨8￨e +￨8￨e header￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j {￨7￨j String￨8￨e unique￨8￨e =￨8￨e getUniqueBoundary￨8￨e (￨8￨e body￨8￨e )￨8￨e ;￨8￨e headerBuf￨8￨e .￨8￨e append￨8￨e (￨8￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨8￨e )￨8￨e ;￨8￨e key￨8￨e =￨8￨e "Content-Type"￨8￨e ;￨8￨e header￨8￨e =￨8￨e "multipart/mixed;\n\tboundary="￨8￨e +￨8￨e unique￨8￨e ;￨8￨e contentTypeFound￨8￨e =￨8￨e true￨8￨e ;￨8￨e body￨8￨e =￨8￨e createBodyFromParts￨8￨e (￨8￨e split￨8￨e ,￨8￨e unique￨8￨e )￨8￨e ;￨8￨e EudoraMailImportFilter￨8￨e .￨8￨e LOG￨8￨e .￨8￨e fine￨8￨e (￨8￨e "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>multipart/mixed"￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨j }￨5￨j headerBuf￨5￨e .￨5￨e append￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e key￨5￨e +￨5￨e ":<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e header￨5￨e )￨5￨e +￨5￨e "\n"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j line￨4￨e =￨4￨e tokenizer￨4￨e .￨4￨e nextLine￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j !￨4￨c dateFound￨4￨c )￨3￨j {￨3￨j EudoraMailImportFilter￨4￨e .￨4￨e LOG￨4￨e .￨4￨e fine￨4￨e (￨4￨e "Date<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨4￨e )￨4￨e ;￨4￨e String￨4￨e dateHeader￨4￨e =￨4￨e getNewDateHeader￨4￨e (￨4￨e replacementDate￨4￨e ,￨4￨e EudoraMailImportFilter￨4￨e .￨4￨e TIME_ZONE￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j dateHeader￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j headerBuf￨5￨e .￨5￨e append￨5￨e (￨5￨e (￨5￨e dateHeader￨5￨e +￨5￨e "\n"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j !￨4￨c contentTypeFound￨4￨c )￨3￨j {￨3￨j EudoraMailImportFilter￨4￨e .￨4￨e LOG￨4￨e .￨4￨e fine￨4￨e (￨4￨e "Content-Type<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨4￨e )￨4￨e ;￨4￨e String￨4￨e contHeader￨4￨e =￨4￨e "Content-Type:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e guessBodyContentType￨4￨e (￨4￨e body￨4￨e )￨4￨e )￨4￨e ;￨4￨e headerBuf￨4￨e .￨4￨e append￨4￨e (￨4￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨4￨e )￨4￨e ;￨4￨e headerBuf￨4￨e .￨4￨e append￨4￨e (￨4￨e (￨4￨e contHeader￨4￨e +￨4￨e "\n"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e saveMessage￨3￨e (￨3￨e headerBuf￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ,￨3￨e body￨3￨e ,￨3￨e worker￨3￨e ,￨3￨e destFolder￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f saveMessage￨2￨f (￨2￨f String￨3￨p headers￨3￨p ,￨3￨p String￨3￨p body￨3￨p ,￨3￨p IWorkerStatusController￨3￨p worker￨3￨p ,￨3￨p IMailbox￨3￨p destFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f createBodyFromParts￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p parts￨3￨p ,￨3￨p String￨3￨p boundary￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getUniqueBoundary￨2￨f (￨2￨f String￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f [￨2￨f ]￨2￨f divideMessage￨2￨f (￨2￨f String￨3￨p input￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f guessBodyContentType￨2￨f (￨2￨f String￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f [￨2￨f ]￨2￨f createAttachmentListFromHeader￨2￨f (￨2￨f String￨3￨p body￨3￨p ,￨3￨p String￨3￨p xAttachments￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f [￨2￨f ]￨2￨f createAttachmentListFromAttachmentConverted￨2￨f (￨2￨f String￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d NSText￨1￨d extends￨1￨d NSView￨1￨d {￨1￨d public￨2￨f NSText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSText￨2￨f (￨2￨f int￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f static_class￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSData￨2￨f RTFDFromRange￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSData￨2￨f RTFFromRange￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f alignCenter￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f alignLeft￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f alignRight￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f alignment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSColor￨2￨f backgroundColor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f baseWritingDirection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f changeFont￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkSpelling￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copy￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyFont￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copyRuler￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cut￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f id￨2￨f delegate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f delete￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f drawsBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSFont￨2￨f font￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f importsGraphics￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEditable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFieldEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isHorizontallyResizable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRichText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRulerVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSelectable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVerticallyResizable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSSize￨2￨f maxSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSSize￨2￨f minSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paste￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pasteFont￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pasteRuler￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f readRTFDFromFile￨2￨f (￨2￨f NSString￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f replaceCharactersInRange_withRTF_￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p ,￨3￨p NSData￨3￨p rtfData￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f replaceCharactersInRange_withRTFD_￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p ,￨3￨p NSData￨3￨p rtfdData￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f replaceCharactersInRange_withString_￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p ,￨3￨p NSString￨3￨p aString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f scrollRangeToVisible￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectAll￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSRange￨2￨f selectedRange￨2￨f (￨2￨f )￨2￨f {￨2￨f NSRange￨3￨e result￨3￨e =￨3￨e new￨3￨e NSRange￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b OS￨3￨b .￨3￨b objc_msgSend_struct￨3￨b (￨3￨b result￨3￨b ,￨3￨b this￨3￨b .￨3￨b id￨3￨b ,￨3￨b sel_selectedRange￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setAlignment￨2￨f (￨2￨f int￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackgroundColor￨2￨f (￨2￨f NSColor￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBaseWritingDirection￨2￨f (￨2￨f int￨3￨p writingDirection￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDelegate￨2￨f (￨2￨f id￨3￨p anObject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDrawsBackground￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEditable￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFieldEditor￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont_￨2￨f (￨2￨f NSFont￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont_range_￨2￨f (￨2￨f NSFont￨3￨p font￨3￨p ,￨3￨p NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHorizontallyResizable￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImportsGraphics￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaxSize￨2￨f (￨2￨f NSSize￨3￨p newMaxSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinSize￨2￨f (￨2￨f NSSize￨3￨p newMinSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRichText￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelectable￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelectedRange￨2￨f (￨2￨f NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setString￨2￨f (￨2￨f NSString￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTextColor_￨2￨f (￨2￨f NSColor￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTextColor_range_￨2￨f (￨2￨f NSColor￨3￨p color￨3￨p ,￨3￨p NSRange￨3￨p range￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUsesFontPanel￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVerticallyResizable￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showGuessPanel￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f sizeToFit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSString￨2￨f string￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f subscript￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f superscript￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f NSColor￨2￨f textColor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f toggleRuler￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f underline￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f unscript￨2￨f (￨2￨f id￨3￨p sender￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f usesFontPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f writeRTFDToFile￨2￨f (￨2￨f NSString￨3￨p path￨3￨p ,￨3￨p boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JoinDocFreqValueSource￨1￨d extends￨1￨d FieldCacheSource￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e NAME￨2￨e =￨2￨e "joindf"￨2￨e ;￨2￨e protected￨2￨e final￨2￨e String￨2￨e qfield￨2￨e ;￨2￨e public￨2￨f JoinDocFreqValueSource￨2￨f (￨2￨f String￨3￨p field￨3￨p ,￨3￨p String￨3￨p qfield￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f description￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f FunctionValues￨2￨f getValues￨2￨f (￨2￨f Map￨2￨f context￨2￨f ,￨2￨f AtomicReaderContext￨2￨f readerContext￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b BinaryDocValues￨3￨b terms￨3￨b =￨3￨b cache￨3￨b .￨3￨b getTerms￨3￨b (￨3￨b readerContext￨3￨b .￨3￨b reader￨3￨b (￨3￨b )￨3￨b ,￨3￨b field￨3￨b ,￨3￨b FAST￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e IndexReader￨3￨e top￨3￨e =￨3￨e ReaderUtil￨3￨e .￨3￨e getTopLevelContext￨3￨e (￨3￨e readerContext￨3￨e )￨3￨e .￨3￨e reader￨3￨e (￨3￨e )￨3￨e ;￨3￨e Terms￨3￨e t￨3￨e =￨3￨e MultiFields￨3￨e .￨3￨e getTerms￨3￨e (￨3￨e top￨3￨e ,￨3￨e qfield￨3￨e )￨3￨e ;￨3￨e final￨3￨e TermsEnum￨3￨e termsEnum￨3￨e =￨3￨e (￨3￨e t￨3￨e ==￨3￨e null￨3￨e )￨3￨e ?￨3￨e TermsEnum￨3￨e .￨3￨e EMPTY￨3￨e :￨3￨e t￨3￨e .￨3￨e iterator￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e return￨3￨f new￨3￨f IntDocValues￨3￨f (￨3￨f this￨4￨p )￨3￨f {￨3￨f final￨4￨e BytesRef￨4￨e ref￨4￨e =￨4￨e new￨4￨e BytesRef￨4￨e (￨4￨e )￨4￨e ;￨4￨e @￨4￨f Override￨4￨f public￨4￨f int￨4￨f intVal￨4￨f (￨4￨f int￨5￨p doc￨5￨p )￨4￨f {￨4￨f try￨5￨f (￨5￨f )￨5￨f {￨5￨f terms￨6￨e .￨6￨e get￨6￨e (￨6￨e doc￨6￨e ,￨6￨e ref￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j termsEnum￨7￨c .￨7￨c seekExact￨7￨c (￨7￨c ref￨7￨c )￨7￨c )￨6￨j {￨6￨j return￨7￨e termsEnum￨7￨e .￨7￨e docFreq￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j return￨7￨e 0￨7￨e ;￨7￨e }￨6￨j }￨5￨f catch￨5￨f (￨5￨f IOException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e RuntimeException￨6￨e (￨6￨e (￨6￨e (￨6￨e (￨6￨e "caught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>function<seq2seq4repair_space>"￨6￨e +￨6￨e (￨6￨e description￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e +￨6￨e "<seq2seq4repair_space>:<seq2seq4repair_space>doc="￨6￨e )￨6￨e +￨6￨e doc￨6￨e )￨6￨e ,￨6￨e e￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨f }￨3￨f ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ExceptionHandlerExceptionResolver￨1￨d extends￨1￨d AbstractHandlerMethodExceptionResolver￨1￨d implements￨1￨d InitializingBean￨1￨d {￨1￨d private￨2￨e List￨2￨e <￨2￨e HandlerMethodArgumentResolver￨2￨e >￨2￨e customArgumentResolvers￨2￨e ;￨2￨e private￨2￨e List￨2￨e <￨2￨e HandlerMethodReturnValueHandler￨2￨e >￨2￨e customReturnValueHandlers￨2￨e ;￨2￨e private￨2￨e List￨2￨e <￨2￨e HttpMessageConverter￨2￨e <￨2￨e ?￨2￨e >￨2￨e >￨2￨e messageConverters￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e ExceptionHandlerMethodResolver￨2￨e >￨2￨e exceptionHandlerMethodResolvers￨2￨e =￨2￨e new￨2￨e ConcurrentHashMap￨2￨e <￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e ,￨2￨e ExceptionHandlerMethodResolver￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e HandlerMethodArgumentResolverComposite￨2￨e argumentResolvers￨2￨e ;￨2￨e private￨2￨e HandlerMethodReturnValueHandlerComposite￨2￨e returnValueHandlers￨2￨e ;￨2￨e public￨2￨f ExceptionHandlerExceptionResolver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCustomArgumentResolvers￨2￨f (￨2￨f List￨3￨p <￨3￨p HandlerMethodArgumentResolver￨3￨p >￨3￨p argumentResolvers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setArgumentResolvers￨2￨f (￨2￨f List￨3￨p <￨3￨p HandlerMethodArgumentResolver￨3￨p >￨3￨p argumentResolvers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCustomReturnValueHandlers￨2￨f (￨2￨f List￨3￨p <￨3￨p HandlerMethodReturnValueHandler￨3￨p >￨3￨p returnValueHandlers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setReturnValueHandlers￨2￨f (￨2￨f List￨3￨p <￨3￨p HandlerMethodReturnValueHandler￨3￨p >￨3￨p returnValueHandlers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMessageConverters￨2￨f (￨2￨f List￨3￨p <￨3￨p HttpMessageConverter￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p messageConverters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f afterPropertiesSet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f HandlerMethodArgumentResolver￨2￨f >￨2￨f getDefaultArgumentResolvers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f HandlerMethodReturnValueHandler￨2￨f >￨2￨f getDefaultReturnValueHandlers￨2￨f (￨2￨f List￨3￨p <￨3￨p HttpMessageConverter￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p messageConverters￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f ModelAndView￨2￨f doResolveHandlerMethodException￨2￨f (￨2￨f HttpServletRequest￨3￨p request￨3￨p ,￨3￨p HttpServletResponse￨3￨p response￨3￨p ,￨3￨p HandlerMethod￨3￨p handlerMethod￨3￨p ,￨3￨p Exception￨3￨p exception￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j handlerMethod￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j ServletInvocableHandlerMethod￨3￨e exceptionHandlerMethod￨3￨e =￨3￨e getExceptionHandlerMethod￨3￨e (￨3￨e handlerMethod￨3￨e ,￨3￨e exception￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j exceptionHandlerMethod￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j exceptionHandlerMethod￨3￨e .￨3￨e setHandlerMethodArgumentResolvers￨3￨e (￨3￨e this￨3￨e .￨3￨e argumentResolvers￨3￨e )￨3￨e ;￨3￨e exceptionHandlerMethod￨3￨e .￨3￨e setHandlerMethodReturnValueHandlers￨3￨e (￨3￨e this￨3￨e .￨3￨e returnValueHandlers￨3￨e )￨3￨e ;￨3￨e ServletWebRequest￨3￨e webRequest￨3￨e =￨3￨e new￨3￨e ServletWebRequest￨3￨e (￨3￨e request￨3￨e ,￨3￨e response￨3￨e )￨3￨e ;￨3￨e ModelAndViewContainer￨3￨e mavContainer￨3￨e =￨3￨e new￨3￨e ModelAndViewContainer￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j logger￨5￨c .￨5￨c isDebugEnabled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j logger￨5￨e .￨5￨e debug￨5￨e (￨5￨e (￨5￨e "Invoking<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨5￨e +￨5￨e exceptionHandlerMethod￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j exceptionHandlerMethod￨4￨e .￨4￨e invokeAndHandle￨4￨e (￨4￨e webRequest￨4￨e ,￨4￨e mavContainer￨4￨e ,￨4￨e exception￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p invocationEx￨4￨p )￨3￨f {￨3￨f logger￨4￨e .￨4￨e error￨4￨e (￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>invoke<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨4￨e +￨4￨e exceptionHandlerMethod￨4￨e )￨4￨e ,￨4￨e invocationEx￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b mavContainer￨3￨b .￨3￨b isResolveView￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e new￨3￨e ModelAndView￨3￨e (￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j ModelAndView￨4￨e mav￨4￨e =￨4￨e new￨4￨e ModelAndView￨4￨e (￨4￨e )￨4￨e .￨4￨e addAllObjects￨4￨e (￨4￨e mavContainer￨4￨e .￨4￨e getModel￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e mav￨4￨e .￨4￨e setViewName￨4￨e (￨4￨e mavContainer￨4￨e .￨4￨e getViewName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c mavContainer￨5￨c .￨5￨c isViewReference￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j mav￨5￨e .￨5￨e setView￨5￨e (￨5￨e (￨5￨e (￨5￨e View￨5￨e )￨5￨e (￨5￨e mavContainer￨5￨e .￨5￨e getView￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e mav￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f ServletInvocableHandlerMethod￨2￨f getExceptionHandlerMethod￨2￨f (￨2￨f HandlerMethod￨3￨p handlerMethod￨3￨p ,￨3￨p Exception￨3￨p exception￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ExceptionHandlerMethodResolver￨2￨f getExceptionHandlerMethodResolver￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p handlerType￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ProjectBrowser￨1￨d extends￨1￨d JFrame￨1￨d implements￨1￨d IStatusBar￨1￨d {￨1￨d public￨2￨e static￨2￨e ProjectBrowser￨2￨e TheInstance￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionNew￨2￨e =￨2￨e Actions￨2￨e .￨2￨e New￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionOpen￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Open￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionSave￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Save￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionSaveAs￨2￨e =￨2￨e Actions￨2￨e .￨2￨e SaveAs￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionAddToProj￨2￨e =￨2￨e Actions￨2￨e .￨2￨e AddToProj￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionPrint￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Print￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionExit￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Exit￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionUndo￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Undo￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionRedo￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Redo￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionCut￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Cut￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionCopy￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Copy￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionPaste￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Paste￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionDelete￨2￨e =￨2￨e new￨2￨e CmdDelete￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionDispose￨2￨e =￨2￨e new￨2￨e CmdDispose￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionNavUp￨2￨e =￨2￨e Actions￨2￨e .￨2￨e NavUp￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionNavDown￨2￨e =￨2￨e Actions￨2￨e .￨2￨e NavDown￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionNextTab￨2￨e =￨2￨e Actions￨2￨e .￨2￨e NextTab￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionPrevTab￨2￨e =￨2￨e Actions￨2￨e .￨2￨e PrevTab￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionShowDiagramTab￨2￨e =￨2￨e Actions￨2￨e .￨2￨e ShowDiagramTab￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionShowTableTab￨2￨e =￨2￨e Actions￨2￨e .￨2￨e ShowTableTab￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionShowTextTab￨2￨e =￨2￨e Actions￨2￨e .￨2￨e ShowTextTab￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionAddToFavs￨2￨e =￨2￨e Actions￨2￨e .￨2￨e AddToFavs￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionCreateMultiple￨2￨e =￨2￨e Actions￨2￨e .￨2￨e CreateMultiple￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionClassDiagram￨2￨e =￨2￨e Actions￨2￨e .￨2￨e ClassDiagram￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionUseCaseDiagram￨2￨e =￨2￨e Actions￨2￨e .￨2￨e UseCaseDiagram￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionStateDiagram￨2￨e =￨2￨e Actions￨2￨e .￨2￨e StateDiagram￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionModel￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Model￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionClass￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Class￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionInterface￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Interface￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionActor￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Actor￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionUseCase￨2￨e =￨2￨e Actions￨2￨e .￨2￨e UseCase￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionState￨2￨e =￨2￨e Actions￨2￨e .￨2￨e State￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionPseudostate￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Pseudostate￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionAttr￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Attr￨2￨e ;￨2￨e protected￨2￨e static￨2￨e Action￨2￨e _actionOper￨2￨e =￨2￨e Actions￨2￨e .￨2￨e Oper￨2￨e ;￨2￨e protected￨2￨d static￨2￨d Action￨2￨d _actionRectangle￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigRect￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Rectangle"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionRRectangle￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigRRect￨2￨d .￨2￨d class￨2￨d ,￨2￨d "RRect"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionCircle￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigCircle￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Circle"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionLine￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigLine￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Line"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionText￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigText￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Text"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionPoly￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigPoly￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Polygon"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionInk￨2￨d =￨2￨d new￨2￨d CmdSetMode￨2￨d (￨2￨d ModeCreateFigInk￨2￨d .￨2￨d class￨2￨d ,￨2￨d "Ink"￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionAutoCritique￨2￨d =￨2￨d Actions￨2￨d .￨2￨d AutoCritique￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionOpenDecisions￨2￨d =￨2￨d Actions￨2￨d .￨2￨d OpenDecisions￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionOpenGoals￨2￨d =￨2￨d Actions￨2￨d .￨2￨d OpenGoals￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionOpenCritics￨2￨d =￨2￨d Actions￨2￨d .￨2￨d OpenCritics￨2￨d ;￨2￨d protected￨2￨d static￨2￨d Action￨2￨d _actionAboutArgoUML￨2￨d =￨2￨d Actions￨2￨d .￨2￨d AboutArgoUML￨2￨d ;￨2￨d protected￨2￨d String￨2￨d _appName￨2￨d =￨2￨d "ProjectBrowser"￨2￨d ;￨2￨d protected￨2￨d Project￨2￨d _project￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d NavigatorPane￨2￨d _navPane￨2￨d =￨2￨d new￨2￨d NavigatorPane￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d ToDoPane￨2￨d _toDoPane￨2￨d =￨2￨d new￨2￨d ToDoPane￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d MultiEditorPane￨2￨d _multiPane￨2￨d =￨2￨d new￨2￨d MultiEditorPane￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d DetailsPane￨2￨d _detailsPane￨2￨d =￨2￨d new￨2￨d DetailsPane￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d JMenuBar￨2￨d _menuBar￨2￨d =￨2￨d new￨2￨d JMenuBar￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d StatusBar￨2￨d _statusBar￨2￨d =￨2￨d new￨2￨d StatusBar￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d Font￨2￨d defaultFont￨2￨d =￨2￨d new￨2￨d Font￨2￨d (￨2￨d "Dialog"￨2￨d ,￨2￨d Font￨2￨d .￨2￨d PLAIN￨2￨d ,￨2￨d 10￨2￨d )￨2￨d ;￨2￨d protected￨2￨d JSplitPane￨2￨d _mainSplit￨2￨d ;￨2￨d protected￨2￨d JSplitPane￨2￨d _topSplit￨2￨d ;￨2￨d protected￨2￨d JSplitPane￨2￨d _botSplit￨2￨d ;￨2￨d public￨2￨d ProjectBrowser￨2￨d (￨2￨d String￨2￨d appName￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f void￨2￨f initMenus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Component￨2￨f createPanels￨2￨f (￨2￨f )￨2￨f {￨2￨f _topSplit￨3￨e =￨3￨e new￨3￨e JSplitPane￨3￨e (￨3￨e JSplitPane￨3￨e .￨3￨e HORIZONTAL_SPLIT￨3￨e ,￨3￨e _navPane￨3￨e ,￨3￨e _multiPane￨3￨e )￨3￨e ;￨3￨e _botSplit￨3￨e =￨3￨e new￨3￨e JSplitPane￨3￨e (￨3￨e JSplitPane￨3￨e .￨3￨e HORIZONTAL_SPLIT￨3￨e ,￨3￨e _toDoPane￨3￨e ,￨3￨e _detailsPane￨3￨e )￨3￨e ;￨3￨e _mainSplit￨3￨e =￨3￨e new￨3￨e JSplitPane￨3￨e (￨3￨e JSplitPane￨3￨e .￨3￨e VERTICAL_SPLIT￨3￨e ,￨3￨e _topSplit￨3￨e ,￨3￨e _botSplit￨3￨e )￨3￨e ;￨3￨e _topSplit￨3￨e .￨3￨e setDividerSize￨3￨e (￨3￨e 2￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b _topSplit￨3￨b .￨3￨b setDividerLocation￨3￨b (￨3￨b 250￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b _botSplit￨3￨e .￨3￨e setDividerSize￨3￨e (￨3￨e 2￨3￨e )￨3￨e ;￨3￨e _mainSplit￨3￨e .￨3￨e setDividerSize￨3￨e (￨3￨e 2￨3￨e )￨3￨e ;￨3￨e return￨3￨e _mainSplit￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setProject￨2￨f (￨2￨f Project￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Project￨2￨f getProject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getAppName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAppName￨2￨f (￨2￨f String￨3￨p n￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPerspectives￨2￨f (￨2￨f Vector￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getPerspectives￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCurPerspective￨2￨f (￨2￨f NavPerspective￨3￨p tm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f NavPerspective￨2￨f getCurPerspective￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToDoPerspectives￨2￨f (￨2￨f Vector￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getToDoPerspectives￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToDoCurPerspective￨2￨f (￨2￨f TreeModel￨3￨p tm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTarget￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getTarget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToDoItem￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDetalsTarget￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StatusBar￨2￨f getStatusBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ToDoPane￨2￨f getToDoPane￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NavigatorPane￨2￨f getNavPane￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisible￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showStatus￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SingularValueDecompositionImpl￨1￨d implements￨1￨d SingularValueDecomposition￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e -￨2￨e 3532767302235568872L￨2￨e ;￨2￨e private￨2￨e int￨2￨e m￨2￨e ;￨2￨e private￨2￨e int￨2￨e n￨2￨e ;￨2￨e private￨2￨e BiDiagonalTransformer￨2￨e transformer￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e mainBidiagonal￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e secondaryBidiagonal￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e mainTridiagonal￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e secondaryTridiagonal￨2￨e ;￨2￨e private￨2￨e EigenDecomposition￨2￨e eigenDecomposition￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e singularValues￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e cachedU￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e cachedUt￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e cachedS￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e cachedV￨2￨e ;￨2￨e private￨2￨e RealMatrix￨2￨e cachedVt￨2￨e ;￨2￨e public￨2￨f SingularValueDecompositionImpl￨2￨f (￨2￨f RealMatrix￨2￨f matrix￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getU￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getUT￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getS￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f [￨2￨f ]￨2￨f getSingularValues￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getV￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getVT￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getNorm￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getConditionNumber￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getRank￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DecompositionSolver￨2￨f getSolver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d Solver￨2￨d implements￨2￨d DecompositionSolver￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e -￨3￨e 1959408026708904378L￨3￨e ;￨3￨e private￨3￨e final￨3￨e double￨3￨e [￨3￨e ]￨3￨e singularValues￨3￨e ;￨3￨e private￨3￨e final￨3￨e RealMatrix￨3￨e uT￨3￨e ;￨3￨e private￨3￨e final￨3￨e RealMatrix￨3￨e v￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e nonSingular￨3￨e ;￨3￨e private￨3￨f Solver￨3￨f (￨3￨f final￨4￨p double￨4￨p [￨4￨p ]￨4￨p singularValues￨4￨p ,￨4￨p final￨4￨p RealMatrix￨4￨p uT￨4￨p ,￨4￨p final￨4￨p RealMatrix￨4￨p v￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nonSingular￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f double￨3￨f [￨3￨f ]￨3￨f solve￨3￨f (￨3￨f final￨3￨f double￨3￨f [￨3￨f ]￨3￨f b￨3￨f )￨3￨f throws￨3￨f IllegalArgumentException￨3￨f ,￨3￨f InvalidMatrixException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f RealVector￨3￨f solve￨3￨f (￨3￨f final￨3￨f RealVector￨3￨f b￨3￨f )￨3￨f throws￨3￨f IllegalArgumentException￨3￨f ,￨3￨f InvalidMatrixException￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c b￨5￨c .￨5￨c getDimension￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c singularValues￨5￨c .￨5￨c length￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e IllegalArgumentException￨5￨e (￨5￨e "constant<seq2seq4repair_space>vector<seq2seq4repair_space>has<seq2seq4repair_space>wrong<seq2seq4repair_space>length"￨5￨e )￨5￨e ;￨5￨e }￨4￨j final￨4￨e RealVector￨4￨e w￨4￨e =￨4￨e uT￨4￨e .￨4￨e operate￨4￨e (￨4￨e b￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c singularValues￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c ++￨5￨c i￨5￨c )￨4￨l {￨4￨l final￨5￨e double￨5￨e si￨5￨e =￨5￨e singularValues￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j si￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e SingularMatrixException￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j <START_BUG>￨5￨b w￨5￨b .￨5￨b set￨5￨b (￨5￨b i￨5￨b ,￨5￨b (￨5￨b (￨5￨b w￨5￨b .￨5￨b getEntry￨5￨b (￨5￨b i￨5￨b )￨5￨b )￨5￨b /￨5￨b si￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨l return￨4￨e v￨4￨e .￨4￨e operate￨4￨e (￨4￨e w￨4￨e )￨4￨e ;￨4￨e }￨3￨f public￨3￨f RealMatrix￨3￨f solve￨3￨f (￨3￨f final￨3￨f RealMatrix￨3￨f b￨3￨f )￨3￨f throws￨3￨f IllegalArgumentException￨3￨f ,￨3￨f InvalidMatrixException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isNonSingular￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f RealMatrix￨3￨f getInverse￨3￨f (￨3￨f )￨3￨f throws￨3￨f InvalidMatrixException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d DefinitionMetadataEqualsHashCodeTests￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testRootBeanDefinitionEqualsAndHashCode￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testChildBeanDefinitionEqualsAndHashCode￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRuntimeBeanReference￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setBaseProperties￨2￨f (￨2￨f AbstractBeanDefinition￨3￨p definition￨3￨p )￨2￨f {￨2￨f definition￨3￨e .￨3￨e setAbstract￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setAttribute￨3￨e (￨3￨e "foo"￨3￨e ,￨3￨e "bar"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setAutowireCandidate￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setAutowireMode￨3￨e (￨3￨e AUTOWIRE_BY_TYPE￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setDependencyCheck￨3￨e (￨3￨e DEPENDENCY_CHECK_OBJECTS￨3￨e )￨3￨e ;￨3￨e definition￨3￨f .￨3￨f setDependsOn￨3￨f (￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setDestroyMethodName￨3￨e (￨3￨e "destroy"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setEnforceDestroyMethod￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setEnforceInitMethod￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setFactoryBeanName￨3￨e (￨3￨e "factoryBean"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setFactoryMethodName￨3￨e (￨3￨e "factoryMethod"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setInitMethodName￨3￨e (￨3￨e "init"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setLazyInit￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e getMethodOverrides￨3￨e (￨3￨e )￨3￨e .￨3￨e addOverride￨3￨e (￨3￨e new￨3￨e LookupOverride￨3￨e (￨3￨e "foo"￨3￨e ,￨3￨e "bar"￨3￨e )￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e getMethodOverrides￨3￨e (￨3￨e )￨3￨e .￨3￨e addOverride￨3￨e (￨3￨e new￨3￨e ReplaceOverride￨3￨e (￨3￨e "foo"￨3￨e ,￨3￨e "bar"￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b definition￨3￨b .￨3￨b getPropertyValues￨3￨b (￨3￨b )￨3￨b .￨3￨b addPropertyValue￨3￨b (￨3￨b "foo"￨3￨b ,￨3￨b "bar"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b definition￨3￨e .￨3￨e setResourceDescription￨3￨e (￨3￨e "desc"￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setRole￨3￨e (￨3￨e ROLE_APPLICATION￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setScope￨3￨e (￨3￨e SCOPE_PROTOTYPE￨3￨e )￨3￨e ;￨3￨e definition￨3￨e .￨3￨e setSource￨3￨e (￨3￨e "foo"￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f assertEqualsContract￨2￨f (￨2￨f Object￨3￨p master￨3￨p ,￨3￨p Object￨3￨p equal￨3￨p ,￨3￨p Object￨3￨p notEqual￨3￨p ,￨3￨p Object￨3￨p subclass￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestJapaneseKatakanaStemFilter￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d private￨2￨f Analyzer￨2￨f analyzer￨2￨f =￨2￨f new￨2￨f Analyzer￨2￨f (￨2￨f )￨2￨f {￨2￨f @￨3￨f Override￨3￨f protected￨3￨f TokenStreamComponents￨3￨f createComponents￨3￨f (￨3￨f String￨4￨p fieldName￨4￨p ,￨4￨p Reader￨4￨p reader￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f void￨2￨f testStemVariants￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnsupportedHalfWidthVariants￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomData￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b analyzer￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testEmptyTerm￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DomainModelUtil￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f updateCoreModel￨2￨f (￨2￨f final￨3￨p Resource￨3￨p rootResource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ExtensionContext￨2￨f initializeMasterDomainRegistry￨2￨f (￨2￨f final￨3￨p ManagementResourceRegistration￨3￨p root￨3￨p ,￨3￨p final￨3￨p ExtensibleConfigurationPersister￨3￨p configurationPersister￨3￨p ,￨3￨p final￨3￨p ContentRepository￨3￨p contentRepository￨3￨p ,￨3￨p final￨3￨p FileRepository￨3￨p fileRepository￨3￨p ,￨3￨p final￨3￨p DomainController￨3￨p domainController￨3￨p ,￨3￨p final￨3￨p UnregisteredHostChannelRegistry￨3￨p registry￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ExtensionContext￨2￨f initializeSlaveDomainRegistry￨2￨f (￨2￨f final￨3￨p ManagementResourceRegistration￨3￨p root￨3￨p ,￨3￨p final￨3￨p ExtensibleConfigurationPersister￨3￨p configurationPersister￨3￨p ,￨3￨p final￨3￨p ContentRepository￨3￨p contentRepository￨3￨p ,￨3￨p final￨3￨p FileRepository￨3￨p fileRepository￨3￨p ,￨3￨p final￨3￨p LocalHostControllerInfo￨3￨p hostControllerInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ExtensionContext￨2￨f initializeDomainRegistry￨2￨f (￨2￨f final￨3￨p ManagementResourceRegistration￨3￨p root￨3￨p ,￨3￨p final￨3￨p ExtensibleConfigurationPersister￨3￨p configurationPersister￨3￨p ,￨3￨p final￨3￨p ContentRepository￨3￨p contentRepo￨3￨p ,￨3￨p final￨3￨p FileRepository￨3￨p fileRepository￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p isMaster￨3￨p ,￨3￨p final￨3￨p DomainController￨3￨p domainController￨3￨p ,￨3￨p final￨3￨p UnregisteredHostChannelRegistry￨3￨p registry￨3￨p ,￨3￨p final￨3￨p LocalHostControllerInfo￨3￨p hostControllerInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f validateRolloutPlanStructure￨2￨f (￨2￨f ModelNode￨2￨f plan￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j plan￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b OperationFailedException￨4￨b (￨4￨b "rolloutPlan<seq2seq4repair_space>argument<seq2seq4repair_space>is<seq2seq4repair_space>null."￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c plan￨4￨c .￨4￨c hasDefined￨4￨c (￨4￨c ROLLOUT_PLAN￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e requiredChildIsMissing￨4￨e (￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j ModelNode￨3￨e rolloutPlan1￨3￨e =￨3￨e plan￨3￨e .￨3￨e get￨3￨e (￨3￨e ROLLOUT_PLAN￨3￨e )￨3￨e ;￨3￨e final￨3￨e Set￨3￨e <￨3￨e String￨3￨e >￨3￨e keys￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f keys￨4￨e =￨4￨e rolloutPlan1￨4￨e .￨4￨e keys￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IllegalArgumentException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e requiredChildIsMissing￨4￨e (￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e IN_SERIES￨4￨e ,￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c keys￨4￨c .￨4￨c contains￨4￨c (￨4￨c IN_SERIES￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e requiredChildIsMissing￨4￨e (￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e IN_SERIES￨4￨e ,￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c keys￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 2￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c (￨4￨c keys￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 2￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c keys￨4￨c .￨4￨c contains￨4￨c (￨4￨c ROLLBACK_ACROSS_GROUPS￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e unrecognizedChildren￨4￨e (￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e IN_SERIES￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e ROLLBACK_ACROSS_GROUPS￨4￨e )￨4￨e )￨4￨e ,￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e ModelNode￨3￨e inSeries￨3￨e =￨3￨e rolloutPlan1￨3￨e .￨3￨e get￨3￨e (￨3￨e IN_SERIES￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c inSeries￨4￨c .￨4￨c isDefined￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e requiredChildIsMissing￨4￨e (￨4￨e ROLLOUT_PLAN￨4￨e ,￨4￨e IN_SERIES￨4￨e ,￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e List￨3￨e <￨3￨e ModelNode￨3￨e >￨3￨e groups￨3￨e =￨3￨e inSeries￨3￨e .￨3￨e asList￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j groups￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OperationFailedException￨4￨e (￨4￨e DomainControllerMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e inSeriesIsMissingGroups￨4￨e (￨4￨e plan￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l ModelNode￨4￨c group￨4￨c :￨4￨c groups￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j group￨5￨c .￨5￨c hasDefined￨5￨c (￨5￨c SERVER_GROUP￨5￨c )￨5￨c )￨4￨j {￨4￨j final￨5￨e ModelNode￨5￨e serverGroup￨5￨e =￨5￨e group￨5￨e .￨5￨e get￨5￨e (￨5￨e SERVER_GROUP￨5￨e )￨5￨e ;￨5￨e final￨5￨e Set￨5￨e <￨5￨e String￨5￨e >￨5￨e groupKeys￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f groupKeys￨6￨e =￨6￨e serverGroup￨6￨e .￨6￨e keys￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f IllegalArgumentException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e OperationFailedException￨6￨e (￨6￨e DomainControllerMessages￨6￨e .￨6￨e MESSAGES￨6￨e .￨6￨e serverGroupExpectsSingleChild￨6￨e (￨6￨e plan￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f if￨5￨j (￨5￨j (￨6￨c groupKeys￨6￨c .￨6￨c size￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c 1￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e OperationFailedException￨6￨e (￨6￨e DomainControllerMessages￨6￨e .￨6￨e MESSAGES￨6￨e .￨6￨e serverGroupExpectsSingleChild￨6￨e (￨6￨e plan￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j DomainModelUtil￨5￨e .￨5￨e validateInSeriesServerGroup￨5￨e (￨5￨e serverGroup￨5￨e .￨5￨e asProperty￨5￨e (￨5￨e )￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j group￨5￨c .￨5￨c hasDefined￨5￨c (￨5￨c CONCURRENT_GROUPS￨5￨c )￨5￨c )￨4￨j {￨4￨j final￨5￨e ModelNode￨5￨e concurrent￨5￨e =￨5￨e group￨5￨e .￨5￨e get￨5￨e (￨5￨e CONCURRENT_GROUPS￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l ModelNode￨6￨c child￨6￨c :￨6￨c concurrent￨6￨c .￨6￨c asList￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l DomainModelUtil￨6￨e .￨6￨e validateInSeriesServerGroup￨6￨e (￨6￨e child￨6￨e .￨6￨e asProperty￨6￨e (￨6￨e )￨6￨e .￨6￨e getValue￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e OperationFailedException￨5￨e (￨5￨e DomainControllerMessages￨5￨e .￨5￨e MESSAGES￨5￨e .￨5￨e unexpectedInSeriesGroup￨5￨e (￨5￨e plan￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f private￨2￨f static￨2￨f final￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f ALLOWED_SERVER_GROUP_CHILDREN￨2￨f =￨2￨f Arrays￨2￨f .￨2￨f asList￨2￨f (￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f )￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f validateInSeriesServerGroup￨2￨f (￨2￨f ModelNode￨2￨f serverGroup￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e TypeIds￨6￨e .￨6￨e T_JavaLangObject￨6￨e ,￨6￨e constantPoolName￨6￨e )￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 2￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_anewarray￨5￨c :￨5￨c index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e bytecodes￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e pc￨6￨e )￨6￨e ;￨6￨e utf8index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e index￨6￨e ]￨6￨e )￨6￨e ;￨6￨e className￨6￨e =￨6￨e utf8At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e (￨6￨e (￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e +￨6￨e 3￨6￨e )￨6￨e ,￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e int￨6￨e classNameLength￨6￨e =￨6￨e className￨6￨e .￨6￨e length￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c className￨7￨c [￨7￨c 0￨7￨c ]￨7￨c )￨7￨c !=￨7￨c '['￨7￨c )￨6￨j {￨6￨j System￨7￨e .￨7￨e arraycopy￨7￨e (￨7￨e className￨7￨e ,￨7￨e 0￨7￨e ,￨7￨e (￨7￨e constantPoolName￨7￨e =￨7￨e new￨7￨e char￨7￨e [￨7￨e classNameLength￨7￨e +￨7￨e 3￨7￨e ]￨7￨e )￨7￨e ,￨7￨e 2￨7￨e ,￨7￨e classNameLength￨7￨e )￨7￨e ;￨7￨e constantPoolName￨7￨e [￨7￨e 0￨7￨e ]￨7￨e =￨7￨e '['￨7￨e ;￨7￨e constantPoolName￨7￨e [￨7￨e 1￨7￨e ]￨7￨e =￨7￨e 'L'￨7￨e ;￨7￨e constantPoolName￨7￨e [￨7￨e (￨7￨e classNameLength￨7￨e +￨7￨e 2￨7￨e )￨7￨e ]￨7￨e =￨7￨e ';'￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j System￨7￨e .￨7￨e arraycopy￨7￨e (￨7￨e className￨7￨e ,￨7￨e 0￨7￨e ,￨7￨e (￨7￨e constantPoolName￨7￨e =￨7￨e new￨7￨e char￨7￨e [￨7￨e classNameLength￨7￨e +￨7￨e 1￨7￨e ]￨7￨e )￨7￨e ,￨7￨e 1￨7￨e ,￨7￨e classNameLength￨7￨e )￨7￨e ;￨7￨e constantPoolName￨7￨e [￨7￨e 0￨7￨e ]￨7￨e =￨7￨e '['￨7￨e ;￨7￨e }￨6￨j frame￨6￨e .￨6￨e stackItems￨6￨e [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e 0￨6￨e ,￨6￨e constantPoolName￨6￨e )￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 3￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_arraylength￨5￨c :￨5￨c frame￨6￨e .￨6￨e stackItems￨6￨e [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e INT￨6￨e )￨6￨e ;￨6￨e pc￨6￨e ++￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_athrow￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e pc￨6￨e ++￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_checkcast￨5￨c :￨5￨c index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e bytecodes￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e pc￨6￨e )￨6￨e ;￨6￨e utf8index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e index￨6￨e ]￨6￨e )￨6￨e ;￨6￨e className￨6￨e =￨6￨e utf8At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e (￨6￨e (￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e +￨6￨e 3￨6￨e )￨6￨e ,￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e frame￨6￨e .￨6￨e stackItems￨6￨e [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e 0￨6￨e ,￨6￨e className￨6￨e )￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 3￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_instanceof￨5￨c :￨5￨c frame￨6￨e .￨6￨e stackItems￨6￨e [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e =￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e INT￨6￨e )￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 3￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_monitorenter￨5￨c :￨5￨c case￨5￨c Opcodes￨5￨c .￨5￨c OPC_monitorexit￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e pc￨6￨e ++￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_wide￨5￨c :￨5￨c opcode￨6￨e =￨6￨e (￨6￨e (￨6￨e byte￨6￨e )￨6￨e (￨6￨e u1At￨6￨e (￨6￨e bytecodes￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e pc￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j opcode￨7￨c ==￨7￨c (￨7￨c Opcodes￨7￨c .￨7￨c OPC_iinc￨7￨c )￨7￨c )￨6￨j {￨6￨j pc￨7￨e +=￨7￨e 6￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j index￨7￨e =￨7￨e u2At￨7￨e (￨7￨e bytecodes￨7￨e ,￨7￨e 2￨7￨e ,￨7￨e pc￨7￨e )￨7￨e ;￨7￨e switch￨7￨s (￨7￨s opcode￨7￨c )￨7￨s {￨7￨s }￨7￨s }￨6￨j case￨5￨c Opcodes￨5￨c .￨5￨c OPC_iload￨5￨c :￨5￨c frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e INT￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_fload￨5￨c :￨5￨c frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e FLOAT￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_aload￨5￨c :￨5￨c localsN￨6￨e =￨6￨e frame￨6￨e .￨6￨e locals￨6￨e [￨6￨e index￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j localsN￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j localsN￨7￨e =￨7￨e retrieveLocal￨7￨e (￨7￨e currentPC￨7￨e ,￨7￨e index￨7￨e )￨7￨e ;￨7￨e }￨6￨j frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e localsN￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_lload￨5￨c :￨5￨c frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e LONG￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_dload￨5￨c :￨5￨c frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e DOUBLE￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_istore￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_fstore￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_astore￨5￨c :￨5￨c frame￨6￨e .￨6￨e locals￨6￨e [￨6￨e index￨6￨e ]￨6￨e =￨6￨e frame￨6￨e .￨6￨e stackItems￨6￨e [￨6￨e (￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e ;￨6￨e (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_lstore￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_dstore￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e break￨6￨e ;￨6￨e }￨6￨e pc￨6￨e +=￨6￨e 4￨6￨e ;￨6￨e }￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_multianewarray￨5￨c :￨5￨c index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e bytecodes￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e pc￨6￨e )￨6￨e ;￨6￨e utf8index￨6￨e =￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e index￨6￨e ]￨6￨e )￨6￨e ;￨6￨e className￨6￨e =￨6￨e utf8At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e (￨6￨e (￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e +￨6￨e 3￨6￨e )￨6￨e ,￨6￨e u2At￨6￨e (￨6￨e poolContents￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e constantPoolOffsets￨6￨e [￨6￨e utf8index￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e int￨6￨e dimensions￨6￨e =￨6￨e u1At￨6￨e (￨6￨e bytecodes￨6￨e ,￨6￨e 3￨6￨e ,￨6￨e pc￨6￨e )￨6￨e ;￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e -=￨6￨e dimensions￨6￨e ;￨6￨e classNameLength￨6￨e =￨6￨e className￨6￨e .￨6￨e length￨6￨e ;￨6￨e constantPoolName￨6￨e =￨6￨e new￨6￨e char￨6￨e [￨6￨e classNameLength￨6￨e +￨6￨e dimensions￨6￨e ]￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ;￨7￨c i￨7￨c <￨7￨c dimensions￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l constantPoolName￨7￨e [￨7￨e i￨7￨e ]￨7￨e =￨7￨e '['￨7￨e ;￨7￨e }￨6￨l System￨6￨e .￨6￨e arraycopy￨6￨e (￨6￨e className￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e constantPoolName￨6￨e ,￨6￨e dimensions￨6￨e ,￨6￨e classNameLength￨6￨e )￨6￨e ;￨6￨e frame￨6￨e .￨6￨e addStackItem￨6￨e (￨6￨e new￨6￨e VerificationTypeInfo￨6￨e (￨6￨e 0￨6￨e ,￨6￨e constantPoolName￨6￨e )￨6￨e )￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 4￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_ifnull￨5￨c :￨5￨c case￨5￨c Opcodes￨5￨c .￨5￨c OPC_ifnonnull￨5￨c :￨5￨c (￨6￨e frame￨6￨e .￨6￨e numberOfStackItems￨6￨e )￨6￨e --￨6￨e ;￨6￨e pc￨6￨e +=￨6￨e 3￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Opcodes￨5￨c .￨5￨c OPC_goto_w￨5￨c :￨5￨c pc￨6￨e +=￨6￨e 5￨6￨e ;￨6￨e break￨6￨e ;￨6￨e default￨5￨c :￨5￨c this￨6￨f .￨6￨f codeStream￨6￨f .￨6￨f methodDeclaration￨6￨f .￨6￨f scope￨6￨f .￨6￨f problemReporter￨6￨f (￨6￨f )￨6￨f .￨6￨f abortDueToInternalError￨6￨f (￨6￨f Messages￨6￨f .￨6￨f bind￨6￨f (￨6￨f Messages￨6￨f .￨6￨f abort_invalidOpcode￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ,￨6￨e this￨6￨e .￨6￨e codeStream￨6￨e .￨6￨e methodDeclaration￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e }￨4￨s if￨4￨j (￨4￨j pc￨5￨c >=￨5￨c (￨5￨c codeLength￨5￨c +￨5￨c codeOffset￨5￨c )￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f private￨2￨f final￨2￨f int￨2￨f u1At￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p reference￨3￨p ,￨3￨p int￨3￨p relativeOffset￨3￨p ,￨3￨p int￨3￨p structOffset￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f int￨2￨f u2At￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p reference￨3￨p ,￨3￨p int￨3￨p relativeOffset￨3￨p ,￨3￨p int￨3￨p structOffset￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f long￨2￨f u4At￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p reference￨3￨p ,￨3￨p int￨3￨p relativeOffset￨3￨p ,￨3￨p int￨3￨p structOffset￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f utf8At￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p reference￨3￨p ,￨3￨p int￨3￨p absoluteOffset￨3￨p ,￨3￨p int￨3￨p bytesAvailable￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Validator￨1￨d {￨1￨d private￨2￨e final￨2￨e Stack￨2￨e handlers￨2￨e ;￨2￨e private￨2￨e final￨2￨e ArrayList￨2￨e tempFiles￨2￨e ;￨2￨e private￨2￨e final￨2￨e ArrayList￨2￨e sandboxes￨2￨e ;￨2￨e boolean￨2￨e abortOnFailure￨2￨e ;￨2￨e private￨2￨e Object￨2￨e locker￨2￨e ;￨2￨e public￨2￨f Validator￨2￨f (￨2￨f IMessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pushHandler￨2￨f (￨2￨f IMessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f popHandler￨2￨f (￨2￨f IMessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f lock￨2￨f (￨2￨f Object￨3￨p requestor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f unlock￨2￨f (￨2￨f Object￨3￨p requestor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAbortOnFailure￨2￨f (￨2￨f boolean￨3￨p abortOnFailure￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f nullcheck￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p ra￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f nullcheck￨2￨f (￨2￨f Collection￨3￨p list￨3￨p ,￨3￨p int￨3￨p atLeast￨3￨p ,￨3￨p int￨3￨p atMost￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f nullcheck￨2￨f (￨2￨f Collection￨3￨p list￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f nulldefault￨2￨f (￨2￨f Object￨3￨p o￨3￨p ,￨3￨p String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p def￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f nullcheck￨2￨f (￨2￨f Object￨3￨p o￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canRead￨2￨f (￨2￨f File￨3￨p baseDir￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p paths￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canRead￨2￨f (￨2￨f File￨3￨p [￨3￨p ]￨3￨p files￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canRead￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWrite￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canReadDir￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWriteDir￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canReadFiles￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canReadFiles￨2￨f (￨2￨f Collection￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canReadDirs￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canReadDirs￨2￨f (￨2￨f Collection￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWriteFiles￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWriteFiles￨2￨f (￨2￨f Collection￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWriteDirs￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canWriteDirs￨2￨f (￨2￨f Collection￨3￨p dirs￨3￨p ,￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f info￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fail￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fail￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Throwable￨3￨p thrown￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f registerTempFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getWritableDir￨2￨f (￨2￨f File￨3￨p dir￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p boolean￨3￨p deleteContents￨3￨p ,￨3￨p boolean￨3￨p register￨3￨p ,￨3￨p String￨3￨p failMessage￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j null￨4￨c ==￨4￨c dir￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j null￨5￨c ==￨5￨c name￨5￨c )￨4￨j {￨4￨j name￨5￨e =￨5￨e "Validator"￨5￨e ;￨5￨e }￨4￨j dir￨4￨e =￨4￨e FileUtil￨4￨e .￨4￨e getTempDir￨4￨e (￨4￨e name￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j if￨4￨j (￨4￨j !￨5￨c (￨5￨c dir￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j dir￨5￨e .￨5￨e mkdirs￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c null￨4￨c ==￨4￨c dir￨4￨c )￨4￨c ||￨4￨c (￨4￨c !￨4￨c (￨4￨c dir￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j null￨5￨c !=￨5￨c failMessage￨5￨c )￨4￨j {￨4￨j fail￨5￨e (￨5￨e (￨5￨e (￨5￨e failMessage￨5￨e +￨5￨e ":<seq2seq4repair_space>unable<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>parent<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e dir￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b File￨4￨b result￨4￨b =￨4￨b FileUtil￨4￨b .￨4￨b makeNewChildDir￨4￨b (￨4￨b dir￨4￨b ,￨4￨b name￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j deleteContents￨5￨c )￨4￨j {￨4￨j FileUtil￨5￨e .￨5￨e deleteContents￨5￨e (￨5￨e dir￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j register￨5￨c )￨4￨j {￨4￨j tempFiles￨5￨e .￨5￨e add￨5￨e (￨5￨e dir￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e dir￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f deleteTempFiles￨2￨f (￨2￨f boolean￨3￨p reportFailures￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f registerSandbox￨2￨f (￨2￨f Sandbox￨3￨p sandbox￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f deleteFile￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p boolean￨3￨p reportFailures￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IMessageHandler￨2￨f getHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d MSVSS￨1￨d extends￨1￨d Task￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e SS_EXE￨2￨e =￨2￨e "ss"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PROJECT_PREFIX￨2￨e =￨2￨e "$"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMMAND_GET￨2￨e =￨2￨e "Get"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMMAND_CHECKOUT￨2￨e =￨2￨e "Checkout"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMMAND_CHECKIN￨2￨e =￨2￨e "Checkin"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMMAND_LABEL￨2￨e =￨2￨e "Label"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e COMMAND_HISTORY￨2￨e =￨2￨e "History"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_LOGIN￨2￨e =￨2￨e "-Y"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_OVERRIDE_WORKING_DIR￨2￨e =￨2￨e "-GL"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_AUTORESPONSE_DEF￨2￨e =￨2￨e "-I-"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_AUTORESPONSE_YES￨2￨e =￨2￨e "-I-Y"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_AUTORESPONSE_NO￨2￨e =￨2￨e "-I-N"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_RECURSION￨2￨e =￨2￨e "-R"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_VERSION￨2￨e =￨2￨e "-V"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_VERSION_DATE￨2￨e =￨2￨e "-Vd"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_VERSION_LABEL￨2￨e =￨2￨e "-VL"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_WRITABLE￨2￨e =￨2￨e "-W"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VALUE_NO￨2￨e =￨2￨e "-N"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e VALUE_YES￨2￨e =￨2￨e "-Y"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_QUIET￨2￨e =￨2￨e "-O-"￨2￨e ;￨2￨e private￨2￨e String￨2￨e m_SSDir￨2￨e =￨2￨e ""￨2￨e ;￨2￨e private￨2￨e String￨2￨e m_vssLogin￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e m_vssPath￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e m_serverPath￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f final￨2￨f void￨2￨f setLogin￨2￨f (￨2￨f String￨3￨p login￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setServerpath￨2￨f (￨2￨f String￨3￨p serverPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setSsdir￨2￨f (￨2￨f final￨3￨p File￨3￨p dir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setVsspath￨2￨f (￨2￨f String￨3￨p vssPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getSSCommand￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f getLoginCommand￨2￨f (￨2￨f Commandline￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getVsspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f run￨2￨f (￨2￨f Commandline￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e Execute2￨4￨e exe￨4￨e =￨4￨e new￨4￨e Execute2￨4￨e (￨4￨e )￨4￨e ;￨4￨e setupLogger￨4￨e (￨4￨e exe￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c m_serverPath￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j final￨5￨e Properties￨5￨e env￨5￨e =￨5￨e new￨5￨e Properties￨5￨e (￨5￨e )￨5￨e ;￨5￨e env￨5￨e .￨5￨e setProperty￨5￨e (￨5￨e "SSDIR"￨5￨e ,￨5￨e m_serverPath￨5￨e )￨5￨e ;￨5￨e exe￨5￨e .￨5￨e setEnvironment￨5￨e (￨5￨e env￨5￨e )￨5￨e ;￨5￨e }￨4￨j exe￨4￨e .￨4￨e setWorkingDirectory￨4￨e (￨4￨e getBaseDirectory￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b exe￨4￨b .￨4￨b setCommandline￨4￨b (￨4￨b cmd￨4￨b .￨4￨b getCommandline￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e exe￨4￨e .￨4￨e execute￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e TaskException￨4￨e (￨4￨e "Error"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LuceneSegmentInputFormatTest￨1￨d extends￨1￨d AbstractLuceneStorageTest￨1￨d {￨1￨d private￨2￨e LuceneSegmentInputFormat￨2￨e inputFormat￨2￨e ;￨2￨e private￨2￨e JobContext￨2￨e jobContext￨2￨e ;￨2￨e private￨2￨e Configuration￨2￨e conf￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f before￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f after￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testGetSplits￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JobContext￨2￨f getJobContext￨2￨f (￨2￨f Configuration￨2￨f conf￨2￨f ,￨2￨f JobID￨2￨f jobID￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f ,￨2￨f IllegalAccessException￨2￨f ,￨2￨f InstantiationException￨2￨f ,￨2￨f NoSuchMethodException￨2￨f ,￨2￨f InvocationTargetException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b Class￨3￨b <￨3￨b ?￨3￨b extends￨3￨b JobContext￨3￨b >￨3￨b clazz￨3￨b =￨3￨b null￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j !￨4￨c (￨4￨c JobContext￨4￨c .￨4￨c class￨4￨c .￨4￨c isInterface￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j clazz￨4￨e =￨4￨e JobContext￨4￨e .￨4￨e class￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j clazz￨4￨e =￨4￨e (￨4￨e (￨4￨e Class￨4￨e <￨4￨e ?￨4￨e extends￨4￨e JobContext￨4￨e >￨4￨e )￨4￨e (￨4￨e Class￨4￨e .￨4￨e forName￨4￨e (￨4￨e "org.apache.hadoop.mapreduce.task.JobContextImpl"￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e clazz￨3￨e .￨3￨e getConstructor￨3￨e (￨3￨e Configuration￨3￨e .￨3￨e class￨3￨e ,￨3￨e JobID￨3￨e .￨3￨e class￨3￨e )￨3￨e .￨3￨e newInstance￨3￨e (￨3￨e conf￨3￨e ,￨3￨e jobID￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RackAwareStrategy￨1￨d extends￨1￨d AbstractReplicationStrategy￨1￨d {￨1￨d public￨2￨f RackAwareStrategy￨2￨f (￨2￨f TokenMetadata￨3￨p tokenMetadata￨3￨p ,￨3￨p int￨3￨p replicas￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ArrayList￨2￨f <￨2￨f InetAddress￨2￨f >￨2￨f getNaturalEndpoints￨2￨f (￨2￨f Token￨3￨p token￨3￨p ,￨3￨p TokenMetadata￨3￨p metadata￨3￨p )￨2￨f {￨2￨f int￨3￨e startIndex￨3￨e ;￨3￨e ArrayList￨3￨e <￨3￨e InetAddress￨3￨e >￨3￨e endpoints￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e InetAddress￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e bDataCenter￨3￨e =￨3￨e false￨3￨e ;￨3￨e boolean￨3￨e bOtherRack￨3￨e =￨3￨e false￨3￨e ;￨3￨e int￨3￨e foundCount￨3￨e =￨3￨e 0￨3￨e ;￨3￨e List￨3￨e tokens￨3￨e =￨3￨e metadata￨3￨e .￨3￨e sortedTokens￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j tokens￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e endpoints￨4￨e ;￨4￨e }￨3￨j int￨3￨e index￨3￨e =￨3￨e Collections￨3￨e .￨3￨e binarySearch￨3￨e (￨3￨e tokens￨3￨e ,￨3￨e token￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j index￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j index￨4￨e =￨4￨e (￨4￨e index￨4￨e +￨4￨e 1￨4￨e )￨4￨e *￨4￨e (￨4￨e -￨4￨e 1￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j index￨5￨c >=￨5￨c (￨5￨c tokens￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j index￨5￨e =￨5￨e 0￨5￨e ;￨5￨e }￨4￨j }￨3￨j int￨3￨e totalNodes￨3￨e =￨3￨e tokens￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e ;￨3￨e Token￨3￨e primaryToken￨3￨e =￨3￨e (￨3￨e (￨3￨e Token￨3￨e )￨3￨e (￨3￨e tokens￨3￨e .￨3￨e get￨3￨e (￨3￨e index￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e endpoints￨3￨e .￨3￨e add￨3￨e (￨3￨e metadata￨3￨e .￨3￨e getEndPoint￨3￨e (￨3￨e primaryToken￨3￨e )￨3￨e )￨3￨e ;￨3￨e foundCount￨3￨e ++￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c replicas_￨4￨c )￨4￨c ==￨4￨c 1￨4￨c )￨3￨j {￨3￨j return￨4￨e endpoints￨4￨e ;￨4￨e }￨3￨j startIndex￨3￨e =￨3￨e (￨3￨e index￨3￨e +￨3￨e 1￨3￨e )￨3￨e %￨3￨e totalNodes￨3￨e ;￨3￨e <START_BUG>￨3￨b EndPointSnitch￨3￨b endPointSnitch￨3￨b =￨3￨b (￨3￨b (￨3￨b EndPointSnitch￨3￨b )￨3￨b (￨3￨b StorageService￨3￨b .￨3￨b instance￨3￨b (￨3￨b )￨3￨b .￨3￨b getEndPointSnitch￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c startIndex￨4￨c ,￨4￨c count￨4￨c =￨4￨c 1￨4￨c ;￨4￨c (￨4￨c count￨4￨c <￨4￨c totalNodes￨4￨c )￨4￨c &&￨4￨c (￨4￨c foundCount￨4￨c <￨4￨c (￨4￨c replicas_￨4￨c )￨4￨c )￨4￨c ;￨4￨c ++￨4￨c count￨4￨c ,￨4￨c i￨4￨c =￨4￨c (￨4￨c i￨4￨c +￨4￨c 1￨4￨c )￨4￨c %￨4￨c totalNodes￨4￨c )￨3￨l {￨3￨l try￨4￨f (￨4￨f )￨4￨f {￨4￨f Token￨5￨e t￨5￨e =￨5￨e (￨5￨e (￨5￨e Token￨5￨e )￨5￨e (￨5￨e tokens￨5￨e .￨5￨e get￨5￨e (￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j !￨6￨c (￨6￨c endPointSnitch￨6￨c .￨6￨c isInSameDataCenter￨6￨c (￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c primaryToken￨6￨c )￨6￨c ,￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c t￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j !￨7￨c bDataCenter￨7￨c )￨6￨j {￨6￨j endpoints￨7￨e .￨7￨e add￨7￨e (￨7￨e metadata￨7￨e .￨7￨e getEndPoint￨7￨e (￨7￨e t￨7￨e )￨7￨e )￨7￨e ;￨7￨e bDataCenter￨7￨e =￨7￨e true￨7￨e ;￨7￨e foundCount￨7￨e ++￨7￨e ;￨7￨e }￨6￨j continue￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c !￨6￨c (￨6￨c endPointSnitch￨6￨c .￨6￨c isOnSameRack￨6￨c (￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c primaryToken￨6￨c )￨6￨c ,￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c t￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c endPointSnitch￨6￨c .￨6￨c isInSameDataCenter￨6￨c (￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c primaryToken￨6￨c )￨6￨c ,￨6￨c metadata￨6￨c .￨6￨c getEndPoint￨6￨c (￨6￨c t￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j !￨7￨c bOtherRack￨7￨c )￨6￨j {￨6￨j endpoints￨7￨e .￨7￨e add￨7￨e (￨7￨e metadata￨7￨e .￨7￨e getEndPoint￨7￨e (￨7￨e t￨7￨e )￨7￨e )￨7￨e ;￨7￨e bOtherRack￨7￨e =￨7￨e true￨7￨e ;￨7￨e foundCount￨7￨e ++￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨f catch￨4￨f (￨4￨f UnknownHostException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e RuntimeException￨5￨e (￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨l for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c startIndex￨4￨c ,￨4￨c count￨4￨c =￨4￨c 1￨4￨c ;￨4￨c (￨4￨c count￨4￨c <￨4￨c totalNodes￨4￨c )￨4￨c &&￨4￨c (￨4￨c foundCount￨4￨c <￨4￨c (￨4￨c replicas_￨4￨c )￨4￨c )￨4￨c ;￨4￨c ++￨4￨c count￨4￨c ,￨4￨c i￨4￨c =￨4￨c (￨4￨c i￨4￨c +￨4￨c 1￨4￨c )￨4￨c %￨4￨c totalNodes￨4￨c )￨3￨l {￨3￨l Token￨4￨e t￨4￨e =￨4￨e (￨4￨e (￨4￨e Token￨4￨e )￨4￨e (￨4￨e tokens￨4￨e .￨4￨e get￨4￨e (￨4￨e i￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c endpoints￨5￨c .￨5￨c contains￨5￨c (￨5￨c metadata￨5￨c .￨5￨c getEndPoint￨5￨c (￨5￨c t￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j endpoints￨5￨e .￨5￨e add￨5￨e (￨5￨e metadata￨5￨e .￨5￨e getEndPoint￨5￨e (￨5￨e t￨5￨e )￨5￨e )￨5￨e ;￨5￨e foundCount￨5￨e ++￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e endpoints￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RecoveredStatement￨1￨d extends￨1￨d RecoveredElement￨1￨d {￨1￨d public￨2￨e Statement￨2￨e statement￨2￨e ;￨2￨e public￨2￨f RecoveredStatement￨2￨f (￨2￨f Statement￨3￨p statement￨3￨p ,￨3￨p RecoveredElement￨3￨p parent￨3￨p ,￨3￨p int￨3￨p bracketBalance￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AstNode￨2￨f parseTree￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f sourceEnd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b tabString￨3￨b (￨3￨b tab￨3￨b )￨3￨b )￨3￨b +￨3￨b "Recovered<seq2seq4repair_space>statement:\n"￨3￨b )￨3￨b +￨3￨b (￨3￨b statement￨3￨b .￨3￨b toString￨3￨b (￨3￨b (￨3￨b tab￨3￨b +￨3￨b 1￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Statement￨2￨f updatedStatement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateParseTree￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateSourceEndIfNecessary￨2￨f (￨2￨f int￨3￨p sourceEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MockWebRequest￨1￨d extends￨1￨d WebRequest￨1￨d {￨1￨d private￨2￨e Url￨2￨e url￨2￨e ;￨2￨e private￨2￨e List￨2￨e <￨2￨e Cookie￨2￨e >￨2￨e cookies￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e Cookie￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e Object￨2￨e >￨2￨e >￨2￨e headers￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e Object￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e MockRequestParameters￨2￨e postRequestParameters￨2￨e =￨2￨e new￨2￨e MockRequestParameters￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Locale￨2￨e locale￨2￨e =￨2￨e Locale￨2￨e .￨2￨e getDefault￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f MockWebRequest￨2￨f (￨2￨f Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f MockWebRequest￨2￨f (￨2￨f Url￨3￨p url￨3￨p ,￨3￨p List￨3￨p <￨3￨p Cookie￨3￨p >￨3￨p cookies￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p List￨3￨p <￨3￨p Object￨3￨p >￨3￨p >￨3￨p headers￨3￨p ,￨3￨p MockRequestParameters￨3￨p postRequestParameters￨3￨p ,￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f MockWebRequest￨2￨f requestWithUrl￨2￨f (￨2￨f Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUrl￨2￨f (￨2￨f Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Url￨2￨f getUrl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCookies￨2￨f (￨2￨f List￨3￨p <￨3￨p Cookie￨3￨p >￨3￨p cookies￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addCookie￨2￨f (￨2￨f Cookie￨3￨p cookie￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f Cookie￨2￨f >￨2￨f getCookies￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f long￨2￨f getDateHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f List￨3￨e <￨3￨e Object￨3￨e >￨3￨e dates￨3￨e =￨3￨e headers￨3￨e .￨3￨e get￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c dates￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c dates￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b WicketRuntimeException￨4￨b (￨4￨b (￨4￨b (￨4￨b "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨4￨b +￨4￨b name￨4￨b )￨4￨b +￨4￨b "'<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist."￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j Object￨3￨e date￨3￨e =￨3￨e dates￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c date￨4￨c instanceof￨4￨c Long￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e WicketRuntimeException￨4￨e (￨4￨e (￨4￨e (￨4￨e "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨4￨e +￨4￨e name￨4￨e )￨4￨e +￨4￨e "'<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>long."￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e (￨3￨e (￨3￨e Long￨3￨e )￨3￨e (￨3￨e date￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f addHeaderObject￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDateHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p long￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addDateHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p long￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLocale￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Locale￨2￨f getLocale￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getHeaders￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeHeader￨2￨f (￨2￨f String￨3￨p header￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f MockRequestParameters￨2￨f getPostParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CompoundPropertyModel￨1￨d extends￨1￨d AbstractPropertyModel￨1￨d implements￨1￨d ICompoundModel￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e public￨2￨f CompoundPropertyModel￨2￨f (￨2￨f final￨3￨p Object￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f propertyExpression￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f propertyType￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j component￨4￨c instanceof￨4￨c FormComponent￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b (￨4￨b (￨4￨b FormComponent￨4￨b )￨4￨b (￨4￨b component￨4￨b )￨4￨b )￨4￨b .￨4￨b getValidationType￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d VelocityContributor￨1￨d extends￨1￨d AbstractBehavior￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e String￨2￨e encoding￨2￨e =￨2￨e "ISO-8859-1"￨2￨e ;￨2￨e private￨2￨e final￨2￨e IModel￨2￨e <￨2￨e ?￨2￨e extends￨2￨e Map￨2￨e <￨2￨e ?￨2￨e ,￨2￨e ?￨2￨e >￨2￨e >￨2￨e model￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e templateName￨2￨e ;￨2￨e public￨2￨f VelocityContributor￨2￨f (￨2￨f String￨3￨p templateName￨3￨p ,￨3￨p final￨3￨p IModel￨3￨p <￨3￨p ?￨3￨p extends￨3￨p Map￨3￨p <￨3￨p ?￨3￨p ,￨3￨p ?￨3￨p >￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f detach￨2￨f (￨2￨f Component￨3￨p c￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c model￨4￨c )￨4￨c instanceof￨4￨c IDetachable￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b (￨4￨b (￨4￨b IDetachable￨4￨b )￨4￨b (￨4￨b model￨4￨b )￨4￨b )￨4￨b .￨4￨b detach￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f public￨2￨f String￨2￨f getEncoding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f renderHead￨2￨f (￨2￨f Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p IHeaderResponse￨3￨p response￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEncoding￨2￨f (￨2￨f String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f escapeHtml￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f CharSequence￨2￨f evaluate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Assignment￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨e Reference￨2￨e lhs￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨f Assignment￨2￨f (￨2￨f Expression￨3￨p lhs￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p sourceEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkAssignmentEffect￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f Binding￨2￨f getDirectBinding￨2￨f (￨2￨f Expression￨3￨p someExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f constant￨3￨e =￨3￨e NotAConstant￨3￨e ;￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e =￨3￨e lhs￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e TypeBinding￨3￨e rhsType￨3￨e =￨3￨e expression￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c rhsType￨4￨c ==￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j checkAssignmentEffect￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c expression￨4￨c .￨4￨c isConstantValueOfTypeAssignableToType￨4￨c (￨4￨c rhsType￨4￨c ,￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c .￨4￨c isBaseType￨4￨c (￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c BaseTypeBinding￨4￨c .￨4￨c isWidening￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c .￨4￨c id￨4￨c ,￨4￨c rhsType￨4￨c .￨4￨c id￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c rhsType￨4￨c .￨4￨c isCompatibleWith￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j expression￨4￨e .￨4￨e implicitWidening￨4￨e (￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ,￨4￨e rhsType￨4￨e )￨4￨e ;￨4￨e return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ;￨4￨e }￨3￨j scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e typeMismatchErrorActualTypeExpectedType￨3￨e (￨3￨e expression￨3￨e ,￨3￨e rhsType￨3￨e ,￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b null￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringExpressionNoParenthesis￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestActionGui￨1￨d extends￨1￨d AbstractSamplerGui￨1￨d {￨1￨d private￨2￨e JComboBox￨2￨e targetBox￨2￨e ;￨2￨e private￨2￨e JRadioButton￨2￨e pauseButton￨2￨e ;￨2￨e private￨2￨e JRadioButton￨2￨e stopButton￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e durationField￨2￨e ;￨2￨e private￨2￨e int￨2￨e target￨2￨e ;￨2￨e private￨2￨e int￨2￨e action￨2￨e ;￨2￨e private￨2￨e int￨2￨e duration￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e targetLabel￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_target"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e threadTarget￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_target_thread"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e testTarget￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_target_test"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e actionLabel￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_action"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e pauseAction￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_pause"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e stopAction￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_stop"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e durationLabel￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "test_action_duration"￨2￨e )￨2￨e ;￨2￨e public￨2￨f TestActionGui￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLabelResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f configure￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyTestElement￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f setLayout￨3￨e (￨3￨e new￨3￨e VerticalLayout￨3￨e (￨3￨e 5￨3￨e ,￨3￨e VerticalLayout￨3￨e .￨3￨e LEFT￨3￨e ,￨3￨e VerticalLayout￨3￨e .￨3￨e TOP￨3￨e )￨3￨e )￨3￨e ;￨3￨e setBorder￨3￨e (￨3￨e makeBorder￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e add￨3￨e (￨3￨e makeTitlePanel￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e HorizontalPanel￨3￨e targetPanel￨3￨e =￨3￨e new￨3￨e HorizontalPanel￨3￨e (￨3￨e )￨3￨e ;￨3￨e targetPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e JLabel￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e targetLabel￨3￨e )￨3￨e )￨3￨e ;￨3￨e DefaultComboBoxModel￨3￨e targetModel￨3￨e =￨3￨e new￨3￨e DefaultComboBoxModel￨3￨e (￨3￨e )￨3￨e ;￨3￨e targetModel￨3￨e .￨3￨e addElement￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e threadTarget￨3￨e )￨3￨e ;￨3￨e targetModel￨3￨e .￨3￨e addElement￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e testTarget￨3￨e )￨3￨e ;￨3￨e targetBox￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e targetModel￨3￨e )￨3￨e ;￨3￨e targetBox￨3￨f .￨3￨f addActionListener￨3￨f (￨3￨f new￨3￨f ActionListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f actionPerformed￨4￨f (￨4￨f ActionEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c (￨6￨c String￨6￨c )￨6￨c (￨6￨c targetBox￨6￨c .￨6￨c getSelectedItem￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c .￨6￨c equals￨6￨c (￨6￨c TestActionGui￨6￨c .￨6￨c threadTarget￨6￨c )￨6￨c )￨5￨j {￨5￨j target￨6￨e =￨6￨e TestAction￨6￨e .￨6￨e THREAD￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j target￨6￨e =￨6￨e TestAction￨6￨e .￨6￨e TEST￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e targetPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e targetBox￨3￨e )￨3￨e ;￨3￨e add￨3￨e (￨3￨e targetPanel￨3￨e )￨3￨e ;￨3￨e HorizontalPanel￨3￨e actionPanel￨3￨e =￨3￨e new￨3￨e HorizontalPanel￨3￨e (￨3￨e )￨3￨e ;￨3￨e ButtonGroup￨3￨e actionButtons￨3￨e =￨3￨e new￨3￨e ButtonGroup￨3￨e (￨3￨e )￨3￨e ;￨3￨e pauseButton￨3￨e =￨3￨e new￨3￨e JRadioButton￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e pauseAction￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e pauseButton￨3￨f .￨3￨f addChangeListener￨3￨f (￨3￨f new￨3￨f ChangeListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f stateChanged￨4￨f (￨4￨f ChangeEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j pauseButton￨6￨c .￨6￨c isSelected￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j action￨6￨e =￨6￨e TestAction￨6￨e .￨6￨e PAUSE￨6￨e ;￨6￨e durationField￨6￨e .￨6￨e setEnabled￨6￨e (￨6￨e true￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e stopButton￨3￨e =￨3￨e new￨3￨e JRadioButton￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e stopAction￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e stopButton￨3￨f .￨3￨f addChangeListener￨3￨f (￨3￨f new￨3￨f ChangeListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f stateChanged￨4￨f (￨4￨f ChangeEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j stopButton￨6￨c .￨6￨c isSelected￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j action￨6￨e =￨6￨e TestAction￨6￨e .￨6￨e STOP￨6￨e ;￨6￨e durationField￨6￨e .￨6￨e setEnabled￨6￨e (￨6￨e false￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e actionButtons￨3￨e .￨3￨e add￨3￨e (￨3￨e pauseButton￨3￨e )￨3￨e ;￨3￨e actionButtons￨3￨e .￨3￨e add￨3￨e (￨3￨e stopButton￨3￨e )￨3￨e ;￨3￨e actionPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e JLabel￨3￨e (￨3￨e TestActionGui￨3￨e .￨3￨e actionLabel￨3￨e )￨3￨e )￨3￨e ;￨3￨e actionPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e pauseButton￨3￨e )￨3￨e ;￨3￨e actionPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e stopButton￨3￨e )￨3￨e ;￨3￨e add￨3￨e (￨3￨e actionPanel￨3￨e )￨3￨e ;￨3￨e HorizontalPanel￨3￨e durationPanel￨3￨e =￨3￨e new￨3￨e HorizontalPanel￨3￨e (￨3￨e )￨3￨e ;￨3￨e durationField￨3￨e =￨3￨e new￨3￨e JTextField￨3￨e (￨3￨e 5￨3￨e )￨3￨e ;￨3￨e durationField￨3￨e .￨3￨e setText￨3￨e (￨3￨e Integer￨3￨e .￨3￨e toString￨3￨e (￨3￨e duration￨3￨e )￨3￨e )￨3￨e ;￨3￨e durationField￨3￨f .￨3￨f addFocusListener￨3￨f (￨3￨f new￨3￨f FocusListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f focusLost￨4￨f (￨4￨f FocusEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f try￨5￨f (￨5￨f )￨5￨f {￨5￨f duration￨6￨e =￨6￨e Integer￨6￨e .￨6￨e parseInt￨6￨e (￨6￨e durationField￨6￨e .￨6￨e getText￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f NumberFormatException￨6￨p nfe￨6￨p )￨5￨f {￨5￨f duration￨6￨e =￨6￨e 0￨6￨e ;￨6￨e }￨5￨f }￨4￨f public￨4￨f void￨4￨f focusGained￨4￨f (￨4￨f FocusEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨f )￨3￨e ;￨3￨e <START_BUG>￨3￨b durationPanel￨3￨b .￨3￨b add￨3￨b (￨3￨b new￨3￨b JLabel￨3￨b (￨3￨b "Duration"￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b durationPanel￨3￨e .￨3￨e add￨3￨e (￨3￨e durationField￨3￨e )￨3￨e ;￨3￨e add￨3￨e (￨3￨e durationPanel￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Border￨1￨d extends￨1￨d WebMarkupContainerWithAssociatedMarkup￨1￨d implements￨1￨d IComponentResolver￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e BODY￨2￨e =￨2￨e "body"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e BORDER￨2￨e =￨2￨e "border"￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e BODY_ID￨2￨e =￨2￨e "_body"￨2￨e ;￨2￨e private￨2￨e final￨2￨e Border￨2￨e .￨2￨e BorderBodyContainer￨2￨e body￨2￨e ;￨2￨e private￨2￨e transient￨2￨e MarkupStream￨2￨e originalMarkupStream￨2￨e ;￨2￨e private￨2￨e transient￨2￨e ComponentTag￨2￨e openTag￨2￨e ;￨2￨e private￨2￨e int￨2￨e beginOfBodyIndex￨2￨e ;￨2￨e private￨2￨e transient￨2￨e boolean￨2￨e rendering￨2￨e ;￨2￨e public￨2￨f Border￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Border￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p IModel￨3￨p <￨3￨p ?￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Border￨2￨f .￨2￨f BorderBodyContainer￨2￨f getBodyContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Border￨2￨f .￨2￨f BorderBodyContainer￨2￨f newBorderBodyContainer￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f MarkupContainer￨2￨f add￨2￨f (￨2￨f final￨3￨p Component￨3￨p ...￨3￨p children￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Component￨2￨f add￨2￨f (￨2￨f final￨3￨p IBehavior￨3￨p ...￨3￨p behaviors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MarkupContainer￨2￨f addToBorder￨2￨f (￨2￨f final￨3￨p Component￨3￨p ...￨3￨p children￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Component￨2￨f addToBorder￨2￨f (￨2￨f final￨3￨p IBehavior￨3￨p ...￨3￨p behaviors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Border￨2￨f addToBorderBody￨2￨f (￨2￨f final￨3￨p Component￨3￨p ...￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Component￨2￨f addToBorderBody￨2￨f (￨2￨f final￨3￨p IBehavior￨3￨p ...￨3￨p behaviors￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Component￨2￨f getFromBorderBody￨2￨f (￨2￨f final￨3￨p String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f resolve￨2￨f (￨2￨f final￨3￨p MarkupContainer￨3￨p container￨3￨p ,￨3￨p final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c rendering￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j tag￨5￨c instanceof￨5￨c WicketTag￨5￨c )￨4￨j {￨4￨j WicketTag￨5￨e wtag￨5￨e =￨5￨e (￨5￨e (￨5￨e WicketTag￨5￨e )￨5￨e (￨5￨e tag￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j wtag￨6￨c .￨6￨c isBodyTag￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j rendering￨6￨e =￨6￨e true￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f <START_BUG>￨7￨b body￨7￨b .￨7￨b render￨7￨b (￨7￨b markupStream￨7￨b )￨7￨b ;￨7￨b <END_BUG>￨7￨b }￨6￨f finally￨6￨f (￨6￨f )￨6￨f {￨6￨f rendering￨7￨e =￨7￨e false￨7￨e ;￨7￨e }￨6￨f return￨6￨e true￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j return￨3￨e false￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f final￨2￨f void￨2￨f onComponentTagBody￨2￨f (￨2￨f final￨3￨p MarkupStream￨3￨p markupStream￨3￨p ,￨3￨p final￨3￨p ComponentTag￨3￨p openTag￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f renderHead￨2￨f (￨2￨f HtmlHeaderContainer￨3￨p container￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f IMarkupFragment￨2￨f getMarkup￨2￨f (￨2￨f final￨3￨p Component￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d class￨2￨d BorderBodyContainer￨2￨d extends￨2￨d WebMarkupContainer￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e transient￨3￨e boolean￨3￨e wasOpenCloseTag￨3￨e =￨3￨e false￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e transparentResolver￨3￨e ;￨3￨e public￨3￨f BorderBodyContainer￨3￨f (￨3￨f final￨4￨p String￨4￨p id￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f final￨3￨f boolean￨3￨f isTransparentResolver￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f final￨3￨f void￨3￨f setTransparentResolver￨3￨f (￨3￨f final￨4￨p boolean￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentTag￨3￨f (￨3￨f final￨4￨p ComponentTag￨4￨p tag￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentTagBody￨3￨f (￨3￨f final￨4￨p MarkupStream￨4￨p markupStream￨4￨p ,￨4￨p final￨4￨p ComponentTag￨4￨p openTag￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f IMarkupFragment￨3￨f getMarkup￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f IMarkupFragment￨3￨f getMarkup￨3￨f (￨3￨f final￨4￨p Component￨4￨p child￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d BlogAuthorManagerImpl￨1￨d implements￨1￨d BlogAuthorManager￨1￨d {￨1￨d private￨2￨e BlogPersistenceService￨2￨e persistenceService￨2￨e ;￨2￨e public￨2￨f void￨2￨f setPersistenceService￨2￨f (￨2￨f BlogPersistenceService￨3￨p persistenceService￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createAuthor￨2￨f (￨2￨f String￨2￨f email￨2￨f ,￨2￨f String￨2￨f dob￨2￨f ,￨2￨f String￨2￨f name￨2￨f ,￨2￨f String￨2￨f displayName￨2￨f ,￨2￨f String￨2￨f bio￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j email￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e "Email<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4￨e )￨4￨e ;￨4￨e }￨3￨j Date￨3￨e dateOfBirth￨3￨e ;￨3￨e <START_BUG>￨3￨b dateOfBirth￨3￨b =￨3￨b (￨3￨b (￨3￨b dob￨3￨b ==￨3￨b null￨3￨b )￨3￨b ||￨3￨b (￨3￨b ""￨3￨b .￨3￨b equals￨3￨b (￨3￨b dob￨3￨b )￨3￨b )￨3￨b )￨3￨b ?￨3￨b null￨3￨b :￨3￨b new￨3￨b SimpleDateFormat￨3￨b (￨3￨b "dd-mm-yyyy"￨3￨b )￨3￨b .￨3￨b parse￨3￨b (￨3￨b dob￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b persistenceService￨3￨e .￨3￨e createAuthor￨3￨e (￨3￨e email￨3￨e ,￨3￨e dateOfBirth￨3￨e ,￨3￨e name￨3￨e ,￨3￨e displayName￨3￨e ,￨3￨e bio￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f List￨2￨f <￨2￨f ?￨2￨f extends￨2￨f BlogAuthor￨2￨f >￨2￨f getAllAuthors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BlogAuthor￨2￨f getAuthor￨2￨f (￨2￨f String￨3￨p emailAddress￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAuthor￨2￨f (￨2￨f String￨3￨p emailAddress￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateAuthor￨2￨f (￨2￨f String￨2￨f email￨2￨f ,￨2￨f String￨2￨f dob￨2￨f ,￨2￨f String￨2￨f name￨2￨f ,￨2￨f String￨2￨f displayName￨2￨f ,￨2￨f String￨2￨f bio￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f ?￨2￨f extends￨2￨f BlogAuthor￨2￨f >￨2￨f adaptAuthor￨2￨f (￨2￨f List￨3￨p <￨3￨p ?￨3￨p extends￨3￨p Author￨3￨p >￨3￨p authors￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PresentSelectorTest￨1￨d extends￨1￨d BaseSelectorTest￨1￨d {￨1￨d private￨2￨e Project￨2￨e project￨2￨e ;￨2￨e public￨2￨f PresentSelectorTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BaseSelector￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testValidate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSelectionBehaviour￨2￨f (￨2￨f )￨2￨f {￨2￨f PresentSelector￨3￨e s￨3￨e ;￨3￨e String￨3￨e results￨3￨e ;￨3￨e Mapper￨3￨e m￨3￨e ;￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e identity￨3￨e =￨3￨e new￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e (￨3￨e )￨3￨e ;￨3￨e identity￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "identity"￨3￨e )￨3￨e ;￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e glob￨3￨e =￨3￨e new￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e (￨3￨e )￨3￨e ;￨3￨e glob￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "glob"￨3￨e )￨3￨e ;￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e merge￨3￨e =￨3￨e new￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e (￨3￨e )￨3￨e ;￨3￨e merge￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "merge"￨3￨e )￨3￨e ;￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e flatten￨3￨e =￨3￨e new￨3￨e Mapper￨3￨e .￨3￨e MapperType￨3￨e (￨3￨e )￨3￨e ;￨3￨e flatten￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "flatten"￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f makeBed￨4￨e (￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e PresentSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setTargetdir￨4￨e (￨4￨e beddir￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TTTTTTTTTTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e PresentSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setTargetdir￨4￨e (￨4￨e beddir￨4￨e )￨4￨e ;￨4￨e m￨4￨e =￨4￨e s￨4￨e .￨4￨e createMapper￨4￨e (￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setType￨4￨e (￨4￨e identity￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TTTTTTTTTTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e PresentSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b File￨4￨b subdir￨4￨b =￨4￨b new￨4￨b File￨4￨b (￨4￨b "src/etc/testcases/taskdefs/expected"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b s￨4￨e .￨4￨e setTargetdir￨4￨e (￨4￨e subdir￨4￨e )￨4￨e ;￨4￨e m￨4￨e =￨4￨e s￨4￨e .￨4￨e createMapper￨4￨e (￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setType￨4￨e (￨4￨e flatten￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j JavaEnvUtils￨5￨c .￨5￨c isJavaVersion￨5￨c (￨5￨c JAVA_1_1￨5￨c )￨5￨c )￨4￨j {￨4￨j assertEquals￨5￨e (￨5￨e "TTTTTFFFFFFF"￨5￨e ,￨5￨e results￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j assertEquals￨5￨e (￨5￨e "TTTTTTTTTTTF"￨5￨e ,￨5￨e results￨5￨e )￨5￨e ;￨5￨e }￨4￨j s￨4￨e =￨4￨e (￨4￨e (￨4￨e PresentSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setTargetdir￨4￨e (￨4￨e beddir￨4￨e )￨4￨e ;￨4￨e m￨4￨e =￨4￨e s￨4￨e .￨4￨e createMapper￨4￨e (￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setType￨4￨e (￨4￨e merge￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setTo￨4￨e (￨4￨e "asf-logo.gif.gz"￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TTTTTTTTTTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e PresentSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e subdir￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e beddir￨4￨e ,￨4￨e "tar/bz2"￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setTargetdir￨4￨e (￨4￨e subdir￨4￨e )￨4￨e ;￨4￨e m￨4￨e =￨4￨e s￨4￨e .￨4￨e createMapper￨4￨e (￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setType￨4￨e (￨4￨e glob￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setFrom￨4￨e (￨4￨e "*.bz2"￨4￨e )￨4￨e ;￨4￨e m￨4￨e .￨4￨e setTo￨4￨e (￨4￨e "*.tar.bz2"￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "FFTFFFFFFFFF"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f makeMirror￨5￨e (￨5￨e )￨5￨e ;￨5￨e s￨5￨e =￨5￨e (￨5￨e (￨5￨e PresentSelector￨5￨e )￨5￨e (￨5￨e getInstance￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e subdir￨5￨e =￨5￨e getProject￨5￨e (￨5￨e )￨5￨e .￨5￨e resolveFile￨5￨e (￨5￨e "selectortest2"￨5￨e )￨5￨e ;￨5￨e s￨5￨e .￨5￨e setTargetdir￨5￨e (￨5￨e subdir￨5￨e )￨5￨e ;￨5￨e results￨5￨e =￨5￨e mirrorSelectionString￨5￨e (￨5￨e s￨5￨e )￨5￨e ;￨5￨e assertEquals￨5￨e (￨5￨e "TTTFFTTTTTTT"￨5￨e ,￨5￨e results￨5￨e )￨5￨e ;￨5￨e results￨5￨e =￨5￨e selectionString￨5￨e (￨5￨e s￨5￨e )￨5￨e ;￨5￨e assertEquals￨5￨e (￨5￨e "TTTFFTTTTTTT"￨5￨e ,￨5￨e results￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f cleanupMirror￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f cleanupBed￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Table￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e SYSTEM_TABLE￨2￨e =￨2￨e "system"￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d Table￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d SNAPSHOT_SUBDIR_NAME￨2￨d =￨2￨d "snapshots"￨2￨d ;￨2￨d static￨2￨d final￨2￨d ReentrantReadWriteLock￨2￨d flusherLock￨2￨d =￨2￨d new￨2￨d ReentrantReadWriteLock￨2￨d (￨2￨d true￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d Timer￨2￨d flushTimer￨2￨d =￨2￨d new￨2￨d Timer￨2￨d (￨2￨d "FLUSH-TIMER"￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d boolean￨2￨d waitForCommitLog￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d Map￨2￨d <￨2￨d String￨2￨d ,￨2￨d Table￨2￨d >￨2￨d instances￨2￨d =￨2￨d new￨2￨d org￨2￨d .￨2￨d cliffc￨2￨d .￨2￨d high_scale_lib￨2￨d .￨2￨d NonBlockingHashMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d Table￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d final￨2￨d String￨2￨d name￨2￨d ;￨2￨d private￨2￨d final￨2￨d Map￨2￨d <￨2￨d Integer￨2￨d ,￨2￨d ColumnFamilyStore￨2￨d >￨2￨d columnFamilyStores￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d <￨2￨d Integer￨2￨d ,￨2￨d ColumnFamilyStore￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d SortedSet￨2￨d <￨2￨d String￨2￨d >￨2￨d applicationColumnFamilies￨2￨d ;￨2￨d private￨2￨d final￨2￨d TimerTask￨2￨d flushTask￨2￨d ;￨2￨d public￨2￨d static￨2￨d Table￨2￨d open￨2￨d (￨2￨d String￨2￨d table￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f static￨2￨f Table￨2￨f clear￨2￨f (￨2￨f String￨2￨f table￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f ColumnFamilyStore￨2￨f >￨2￨f getColumnFamilyStores￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumnFamilyStore￨2￨f getColumnFamilyStore￨2￨f (￨2￨f int￨3￨p cfId￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f ColumnFamilyStore￨2￨f getColumnFamilyStore￨2￨f (￨2￨f String￨3￨p cfName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceCleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f snapshot￨2￨f (￨2￨f String￨3￨p clientSuppliedName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getTimestampedSnapshotName￨2￨f (￨2￨f String￨3￨p clientSuppliedName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearSnapshot￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f forceAntiCompaction￨2￨f (￨2￨f Collection￨3￨p <￨3￨p Range￨3￨p >￨3￨p ranges￨3￨p ,￨3￨p InetAddress￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceCompaction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f List￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f getAllSSTablesOnDisk￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Table￨2￨f (￨2￨f String￨3￨p table￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dropCf￨2￨f (￨2￨f int￨2￨f cfId￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initCf￨2￨f (￨2￨f int￨3￨p cfId￨3￨p ,￨3￨p String￨3￨p cfName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f renameCf￨2￨f (￨2￨f int￨2￨f cfId￨2￨f ,￨2￨f String￨2￨f newName￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Row￨2￨f getRow￨2￨f (￨2￨f QueryFilter￨2￨f filter￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f apply￨2￨f (￨2￨f RowMutation￨2￨f mutation￨2￨f ,￨2￨f Object￨2￨f serializedMutation￨2￨f ,￨2￨f boolean￨2￨f writeCommitLog￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f HashMap￨3￨e <￨3￨e ColumnFamilyStore￨3￨e ,￨3￨e Memtable￨3￨e >￨3￨e memtablesToFlush￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e ColumnFamilyStore￨3￨e ,￨3￨e Memtable￨3￨e >￨3￨e (￨3￨e 2￨3￨e )￨3￨e ;￨3￨e Table￨3￨e .￨3￨e flusherLock￨3￨e .￨3￨e readLock￨3￨e (￨3￨e )￨3￨e .￨3￨e lock￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j writeCommitLog￨5￨c )￨4￨j {￨4￨j CommitLog￨5￨e .￨5￨e instance￨5￨e (￨5￨e )￨5￨e .￨5￨e add￨5￨e (￨5￨e mutation￨5￨e ,￨5￨e serializedMutation￨5￨e )￨5￨e ;￨5￨e }￨4￨j DecoratedKey￨4￨e key￨4￨e =￨4￨e StorageService￨4￨e .￨4￨e getPartitioner￨4￨e (￨4￨e )￨4￨e .￨4￨e decorateKey￨4￨e (￨4￨e mutation￨4￨e .￨4￨e key￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l ColumnFamily￨5￨c columnFamily￨5￨c :￨5￨c mutation￨5￨c .￨5￨c getColumnFamilies￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l Memtable￨5￨e memtableToFlush￨5￨e ;￨5￨e ColumnFamilyStore￨5￨e cfs￨5￨e =￨5￨e columnFamilyStores￨5￨e .￨5￨e get￨5￨e (￨5￨e columnFamily￨5￨e .￨5￨e id￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j cfs￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b Table￨6￨b .￨6￨b logger￨6￨b .￨6￨b error￨6￨b (￨6￨b (￨6￨b "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>mutate<seq2seq4repair_space>non-existant<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>"￨6￨b +￨6￨b (￨6￨b columnFamily￨6￨b .￨6￨b name￨6￨b (￨6￨b )￨6￨b )￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j else￨5￨j {￨5￨j if￨6￨j (￨6￨j (￨7￨c memtableToFlush￨7￨c =￨7￨c cfs￨7￨c .￨7￨c apply￨7￨c (￨7￨c key￨7￨c ,￨7￨c columnFamily￨7￨c )￨7￨c )￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j memtablesToFlush￨7￨e .￨7￨e put￨7￨e (￨7￨e cfs￨7￨e ,￨7￨e memtableToFlush￨7￨e )￨7￨e ;￨7￨e }￨6￨j ColumnFamily￨6￨e cachedRow￨6￨e =￨6￨e cfs￨6￨e .￨6￨e getRawCachedRow￨6￨e (￨6￨e key￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j cachedRow￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j cachedRow￨7￨e .￨7￨e addAll￨7￨e (￨7￨e columnFamily￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨l }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f Table￨4￨e .￨4￨e flusherLock￨4￨e .￨4￨e readLock￨4￨e (￨4￨e )￨4￨e .￨4￨e unlock￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f for￨3￨l (￨3￨l Map￨4￨c .￨4￨c Entry￨4￨c <￨4￨c ColumnFamilyStore￨4￨c ,￨4￨c Memtable￨4￨c >￨4￨c entry￨4￨c :￨4￨c memtablesToFlush￨4￨c .￨4￨c entrySet￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l entry￨4￨e .￨4￨e getKey￨4￨e (￨4￨e )￨4￨e .￨4￨e maybeSwitchMemtable￨4￨e (￨4￨e entry￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e ,￨4￨e writeCommitLog￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f public￨2￨f List￨2￨f <￨2￨f Future￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f flush￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f load￨2￨f (￨2￨f RowMutation￨2￨f rowMutation￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDataFileLocation￨2￨f (￨2￨f long￨3￨p expectedCompactedFileSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getSnapshotPath￨2￨f (￨2￨f String￨3￨p dataDirPath￨3￨p ,￨3￨p String￨3￨p tableName￨3￨p ,￨3￨p String￨3￨p snapshotName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Iterable￨2￨f <￨2￨f Table￨2￨f >￨2￨f all￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f truncate￨2￨f (￨2￨f String￨2￨f cfname￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SizeAssertion￨1￨d extends￨1￨d AbstractScopedAssertion￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d Assertion￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 233L￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e EQUAL￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e NOTEQUAL￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e GREATERTHAN￨2￨e =￨2￨e 3￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e LESSTHAN￨2￨e =￨2￨e 4￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e GREATERTHANEQUAL￨2￨e =￨2￨e 5￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e LESSTHANEQUAL￨2￨e =￨2￨e 6￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e SIZE_KEY￨2￨e =￨2￨e "SizeAssertion.size"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e OPERATOR_KEY￨2￨e =￨2￨e "SizeAssertion.operator"￨2￨e ;￨2￨e public￨2￨f AssertionResult￨2￨f getResult￨2￨f (￨2￨f SampleResult￨3￨p response￨3￨p )￨2￨f {￨2￨f AssertionResult￨3￨e result￨3￨e =￨3￨e new￨3￨e AssertionResult￨3￨e (￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setFailure￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e long￨3￨e resultSize￨3￨e =￨3￨e 0￨3￨e ;￨3￨e if￨3￨j (￨3￨j isScopeVariable￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j String￨4￨e variableName￨4￨e =￨4￨e getVariableName￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e value￨4￨e =￨4￨e getThreadContext￨4￨e (￨4￨e )￨4￨e .￨4￨e getVariables￨4￨e (￨4￨e )￨4￨e .￨4￨e get￨4￨e (￨4￨e variableName￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f resultSize￨5￨e =￨5￨e Integer￨5￨e .￨5￨e parseInt￨5￨e (￨5￨e value￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f NumberFormatException￨5￨p e￨5￨p )￨4￨f {￨4￨f result￨5￨e .￨5￨e setFailure￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e result￨5￨e .￨5￨e setFailureMessage￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "Error<seq2seq4repair_space>parsing<seq2seq4repair_space>variable<seq2seq4repair_space>name:<seq2seq4repair_space>"￨5￨e +￨5￨e variableName￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>value:<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e value￨5￨e )￨5￨e )￨5￨e ;￨5￨e return￨5￨e result￨5￨e ;￨5￨e }￨4￨f }￨3￨j else￨3￨j {￨3￨j resultSize￨4￨e =￨4￨e response￨4￨e .￨4￨e getBytes￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e String￨3￨e msg￨3￨e =￨3￨e compareSize￨3￨e (￨3￨e resultSize￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c msg￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j result￨4￨e .￨4￨e setFailure￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b Object￨4￨b [￨4￨b ]￨4￨b arguments￨4￨b =￨4￨b new￨4￨b Object￨4￨b [￨4￨b ]￨4￨b {￨4￨b new￨4￨b Long￨4￨b (￨4￨b resultSize￨4￨b )￨4￨b ,￨4￨b msg￨4￨b ,￨4￨b new￨4￨b Long￨4￨b (￨4￨b getAllowedSize￨4￨b (￨4￨b )￨4￨b )￨4￨b }￨4￨b ;￨4￨b <END_BUG>￨4￨b String￨4￨e message￨4￨e =￨4￨e MessageFormat￨4￨e .￨4￨e format￨4￨e (￨4￨e JMeterUtils￨4￨e .￨4￨e getResString￨4￨e (￨4￨e "size_assertion_failure"￨4￨e )￨4￨e ,￨4￨e arguments￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e setFailureMessage￨4￨e (￨4￨e message￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f long￨2￨f getAllowedSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCompOper￨2￨f (￨2￨f int￨3￨p operator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCompOper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAllowedSize￨2￨f (￨2￨f long￨2￨f size￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f compareSize￨2￨f (￨2￨f long￨3￨p resultSize￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BecomeWorkingCopyOperation￨1￨d extends￨1￨d JavaModelOperation￨1￨d {￨1￨d IPath￨2￨e path￨2￨e ;￨2￨e IProblemRequestor￨2￨e problemRequestor￨2￨e ;￨2￨e public￨2￨f BecomeWorkingCopyOperation￨2￨f (￨2￨f CompilationUnit￨3￨p workingCopy￨3￨p ,￨3￨p IPath￨3￨p path￨3￨p ,￨3￨p IProblemRequestor￨3￨p problemRequestor￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f executeOperation￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f CompilationUnit￨3￨e workingCopy￨3￨e =￨3￨e getWorkingCopy￨3￨e (￨3￨e )￨3￨e ;￨3￨e JavaModelManager￨3￨e .￨3￨e getJavaModelManager￨3￨e (￨3￨e )￨3￨e .￨3￨e getPerWorkingCopyInfo￨3￨e (￨3￨e workingCopy￨3￨e ,￨3￨e this￨3￨e .￨3￨e path￨3￨e ,￨3￨e true￨3￨e ,￨3￨e true￨3￨e ,￨3￨e this￨3￨e .￨3￨e problemRequestor￨3￨e )￨3￨e ;￨3￨e workingCopy￨3￨e .￨3￨e openWhenClosed￨3￨e (￨3￨e workingCopy￨3￨e .￨3￨e createElementInfo￨3￨e (￨3￨e )￨3￨e ,￨3￨e fMonitor￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b workingCopy￨3￨b .￨3￨b owner￨3￨b )￨3￨b !=￨3￨b (￨3￨b DefaultWorkingCopyOwner￨3￨b .￨3￨b PRIMARY￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b JavaElementDelta￨3￨e delta￨3￨e =￨3￨e new￨3￨e JavaElementDelta￨3￨e (￨3￨e this￨3￨e .￨3￨e getJavaModel￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e delta￨3￨e .￨3￨e added￨3￨e (￨3￨e workingCopy￨3￨e )￨3￨e ;￨3￨e addDelta￨3￨e (￨3￨e delta￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j JavaElementDelta￨4￨e delta￨4￨e =￨4￨e new￨4￨e JavaElementDelta￨4￨e (￨4￨e this￨4￨e .￨4￨e getJavaModel￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e delta￨4￨e .￨4￨e changed￨4￨e (￨4￨e workingCopy￨4￨e ,￨4￨e IJavaElementDelta￨4￨e .￨4￨e F_PRIMARY_WORKING_COPY￨4￨e )￨4￨e ;￨4￨e addDelta￨4￨e (￨4￨e delta￨4￨e )￨4￨e ;￨4￨e }￨3￨j fResultElements￨3￨f =￨3￨f new￨3￨f IJavaElement￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e }￨2￨f protected￨2￨f CompilationUnit￨2￨f getWorkingCopy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isReadOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Receiver￨1￨d implements￨1￨d Runnable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e boolean￨2￨e active￨2￨e ;￨2￨e private￨2￨e final￨2￨e Session￨2￨e session￨2￨e ;￨2￨e private￨2￨e final￨2￨e MessageConsumer￨2￨e consumer￨2￨e ;￨2￨e private￨2￨e final￨2￨e Connection￨2￨e conn￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e useResMsgIdAsCorrelId￨2￨e ;￨2￨e private￨2￨f Receiver￨2￨f (￨2￨f ConnectionFactory￨2￨f factory￨2￨f ,￨2￨f Destination￨2￨f receiveQueue￨2￨f ,￨2￨f String￨2￨f principal￨2￨f ,￨2￨f String￨2￨f credentials￨2￨f ,￨2￨f boolean￨2￨f useResMsgIdAsCorrelId￨2￨f )￨2￨f throws￨2￨f JMSException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Receiver￨2￨f createReceiver￨2￨f (￨2￨f ConnectionFactory￨2￨f factory￨2￨f ,￨2￨f Destination￨2￨f receiveQueue￨2￨f ,￨2￨f String￨2￨f principal￨2￨f ,￨2￨f String￨2￨f credentials￨2￨f ,￨2￨f boolean￨2￨f useResMsgIdAsCorrelId￨2￨f )￨2￨f throws￨2￨f JMSException￨2￨f (￨2￨f )￨2￨f {￨2￨f Receiver￨3￨e receiver￨3￨e =￨3￨e new￨3￨e Receiver￨3￨e (￨3￨e factory￨3￨e ,￨3￨e receiveQueue￨3￨e ,￨3￨e principal￨3￨e ,￨3￨e credentials￨3￨e ,￨3￨e useResMsgIdAsCorrelId￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Thread￨3￨b thread￨3￨b =￨3￨b new￨3￨b Thread￨3￨b (￨3￨b receiver￨3￨b ,￨3￨b "JMS<seq2seq4repair_space>Receiever"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b thread￨3￨e .￨3￨e start￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e receiver￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deactivate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TypePatternList￨1￨d extends￨1￨d PatternNode￨1￨d {￨1￨d private￨2￨e TypePattern￨2￨e [￨2￨e ]￨2￨e typePatterns￨2￨e ;￨2￨e int￨2￨e ellipsisCount￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨f static￨2￨f final￨2￨f TypePatternList￨2￨f EMPTY￨2￨f =￨2￨f new￨2￨f TypePatternList￨2￨f (￨2￨f new￨2￨f TypePattern￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f )￨2￨e ;￨2￨e public￨2￨f static￨2￨f final￨2￨f TypePatternList￨2￨f ANY￨2￨f =￨2￨f new￨2￨f TypePatternList￨2￨f (￨2￨f new￨2￨f TypePattern￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f )￨2￨e ;￨2￨e public￨2￨f TypePatternList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePatternList￨2￨f (￨2￨f TypePattern￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePatternList￨2￨f (￨2￨f List￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePattern￨2￨f get￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canMatchSignatureWithNParameters￨2￨f (￨2￨f int￨3￨p numParams￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f matches￨2￨f (￨2￨f ResolvedType￨3￨p [￨3￨p ]￨3￨p types￨3￨p ,￨3￨p TypePattern￨3￨p .￨3￨p MatchKind￨3￨p kind￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f FuzzyBoolean￨2￨f outOfStar￨2￨f (￨2￨f final￨3￨p TypePattern￨3￨p [￨3￨p ]￨3￨p pattern￨3￨p ,￨3￨p final￨3￨p ResolvedType￨3￨p [￨3￨p ]￨3￨p target￨3￨p ,￨3￨p int￨3￨p pi￨3￨p ,￨3￨p int￨3￨p ti￨3￨p ,￨3￨p int￨3￨p pLeft￨3￨p ,￨3￨p int￨3￨p tLeft￨3￨p ,￨3￨p final￨3￨p int￨3￨p starsLeft￨3￨p ,￨3￨p TypePattern￨3￨p .￨3￨p MatchKind￨3￨p kind￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f FuzzyBoolean￨2￨f inStar￨2￨f (￨2￨f final￨3￨p TypePattern￨3￨p [￨3￨p ]￨3￨p pattern￨3￨p ,￨3￨p final￨3￨p ResolvedType￨3￨p [￨3￨p ]￨3￨p target￨3￨p ,￨3￨p int￨3￨p pi￨3￨p ,￨3￨p int￨3￨p ti￨3￨p ,￨3￨p final￨3￨p int￨3￨p pLeft￨3￨p ,￨3￨p int￨3￨p tLeft￨3￨p ,￨3￨p int￨3￨p starsLeft￨3￨p ,￨3￨p TypePattern￨3￨p .￨3￨p MatchKind￨3￨p kind￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePatternList￨2￨f parameterizeWith￨2￨f (￨2￨f Map￨3￨p typeVariableMap￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePatternList￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p ,￨3￨p boolean￨3￨p allowBinding￨3￨p ,￨3￨p boolean￨3￨p requireExactType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePatternList￨2￨f resolveReferences￨2￨f (￨2￨f IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f postRead￨2￨f (￨2￨f ResolvedType￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f TypePatternList￨2￨f read￨2￨f (￨2￨f VersionedDataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePattern￨2￨f [￨2￨f ]￨2￨f getTypePatterns￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f getExactTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f ArrayList￨3￨e ret￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c typePatterns￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l UnresolvedType￨4￨e t￨4￨e =￨4￨e typePatterns￨4￨e [￨4￨e i￨4￨e ]￨4￨e .￨4￨e getExactType￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b t￨4￨b !=￨4￨b (￨4￨b ResolvedType￨4￨b .￨4￨b MISSING￨4￨b )￨4￨b )￨4￨b <END_BUG>￨4￨b ret￨4￨e .￨4￨e add￨4￨e (￨4￨e t￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e ret￨3￨e ;￨3￨e }￨2￨f public￨2￨f Object￨2￨f accept￨2￨f (￨2￨f PatternNodeVisitor￨3￨p visitor￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f traverse￨2￨f (￨2￨f PatternNodeVisitor￨3￨p visitor￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f areAllExactWithNoSubtypesAllowed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f maybeGetCleanNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CacheFactoryAdd￨1￨d extends￨1￨d AbstractAddStepHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e AttributeDefinition￨2￨e [￨2￨e ]￨2￨e attributes￨2￨e ;￨2￨e CacheFactoryAdd￨2￨f (￨2￨f AttributeDefinition￨3￨p ...￨3￨p attributes￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f ,￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f ,￨2￨f List￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f serviceControllers￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Collection￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f installRuntimeServices￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f ,￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e String￨3￨e name￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e ADDRESS￨3￨e )￨3￨e )￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e ModelNode￨3￨e passivationStoreModel￨3￨e =￨3￨e PASSIVATION_STORE￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e String￨3￨e passivationStore￨3￨e =￨3￨e (￨3￨e passivationStoreModel￨3￨e .￨3￨e isDefined￨3￨e (￨3￨e )￨3￨e )￨3￨e ?￨3￨e passivationStoreModel￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e :￨3￨e null￨3￨e ;￨3￨e final￨3￨e Collection￨3￨e <￨3￨e String￨3￨e >￨3￨e unwrappedAliasValues￨3￨e =￨3￨e ALIASES￨3￨e .￨3￨e unwrap￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b final￨3￨b Set￨3￨b <￨3￨b String￨3￨b >￨3￨b aliases￨3￨b =￨3￨b (￨3￨b unwrappedAliasValues￨3￨b !=￨3￨b null￨3￨b )￨3￨b ?￨3￨b new￨3￨b HashSet￨3￨b <￨3￨b >￨3￨b (￨3￨b unwrappedAliasValues￨3￨b )￨3￨b :￨3￨b Collections￨3￨b .￨3￨b <￨3￨b String￨3￨b >￨3￨b emptySet￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b ServiceTarget￨3￨e target￨3￨e =￨3￨e context￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e ServiceBuilder￨3￨e <￨3￨e ?￨3￨e >￨3￨e builder￨3￨e =￨3￨e CacheFactoryAdd￨3￨e .￨3￨e buildCacheFactoryBuilder￨3￨e (￨3￨e target￨3￨e ,￨3￨e name￨3￨e ,￨3￨e passivationStore￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l String￨4￨c alias￨4￨c :￨4￨c aliases￨4￨c )￨3￨l {￨3￨l builder￨4￨e .￨4￨e addAliases￨4￨e (￨4￨e CacheFactoryBuilderService￨4￨e .￨4￨e getServiceName￨4￨e (￨4￨e alias￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j verificationHandler￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j builder￨4￨e .￨4￨e addListener￨4￨e (￨4￨e verificationHandler￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e Collections￨3￨e .￨3￨e <￨3￨e ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e >￨3￨e singleton￨3￨e (￨3￨e builder￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f ServiceBuilder￨2￨f <￨2￨f ?￨2￨f >￨2￨f buildCacheFactoryBuilder￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p String￨3￨p passivationStore￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d QueuelessThreadPoolAdd￨1￨d extends￨1￨d AbstractExecutorAdd￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 5597662601486525937L￨2￨e ;￨2￨e private￨2￨e String￨2￨e handoffExecutor￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e blocking￨2￨e ;￨2￨e public￨2￨f QueuelessThreadPoolAdd￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p ScaledCount￨3￨p maxThreads￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f <￨2￨f P￨2￨f >￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f final￨3￨p UpdateContext￨3￨p updateContext￨3￨p ,￨3￨p final￨3￨p UpdateResultHandler￨3￨p <￨3￨p ?￨3￨p super￨3￨p Void￨3￨p ,￨3￨p P￨3￨p >￨3￨p handler￨3￨p ,￨3￨p final￨3￨p P￨3￨p param￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b BatchBuilder￨3￨b builder￨3￨b =￨3￨b updateContext￨3￨b .￨3￨b getBatchBuilder￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ScaledCount￨3￨e maxThreadsCount￨3￨e =￨3￨e getMaxThreads￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e maxThreads￨3￨e =￨3￨e maxThreadsCount￨3￨e .￨3￨e getScaledCount￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e name￨3￨e =￨3￨e getName￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e serviceName￨3￨e =￨3￨e ThreadsServices￨3￨e .￨3￨e executorName￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e final￨3￨e QueuelessThreadPoolService￨3￨e service￨3￨e =￨3￨e new￨3￨e QueuelessThreadPoolService￨3￨e (￨3￨e maxThreads￨3￨e ,￨3￨e blocking￨3￨e ,￨3￨e getKeepaliveTime￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceBuilder￨3￨e <￨3￨e ExecutorService￨3￨e >￨3￨e serviceBuilder￨3￨e =￨3￨e builder￨3￨e .￨3￨e addService￨3￨e (￨3￨e serviceName￨3￨e ,￨3￨e service￨3￨e )￨3￨e ;￨3￨e addThreadFactoryDependency￨3￨e (￨3￨e serviceName￨3￨e ,￨3￨e serviceBuilder￨3￨e ,￨3￨e service￨3￨e .￨3￨e getThreadFactoryInjector￨3￨e (￨3￨e )￨3￨e ,￨3￨e builder￨3￨e )￨3￨e ;￨3￨e serviceBuilder￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f final￨2￨f ThreadsSubsystemElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f UpdateFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getHandoffExecutor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setHandoffExecutor￨2￨f (￨2￨f final￨3￨p String￨3￨p handoffExecutor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isBlocking￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBlocking￨2￨f (￨2￨f final￨3￨p boolean￨3￨p blocking￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Snippet77￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f Display￨3￨e display￨3￨e =￨3￨e new￨3￨e Display￨3￨e (￨3￨e )￨3￨e ;￨3￨e Shell￨3￨e shell￨3￨e =￨3￨e new￨3￨e Shell￨3￨e (￨3￨e display￨3￨e )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e new￨3￨e FillLayout￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Composite￨3￨e comp￨3￨e =￨3￨e new￨3￨e Composite￨3￨e (￨3￨e shell￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e final￨3￨e Table￨3￨e table￨3￨e =￨3￨e new￨3￨e Table￨3￨e (￨3￨e comp￨3￨e ,￨3￨e (￨3￨e (￨3￨e SWT￨3￨e .￨3￨e BORDER￨3￨e )￨3￨e |￨3￨e (￨3￨e SWT￨3￨e .￨3￨e V_SCROLL￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e table￨3￨e .￨3￨e setHeaderVisible￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e table￨3￨e .￨3￨e setLinesVisible￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e final￨3￨e TableColumn￨3￨e column1￨3￨e =￨3￨e new￨3￨e TableColumn￨3￨e (￨3￨e table￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e column1￨3￨e .￨3￨e setText￨3￨e (￨3￨e "Column<seq2seq4repair_space>1"￨3￨e )￨3￨e ;￨3￨e final￨3￨e TableColumn￨3￨e column2￨3￨e =￨3￨e new￨3￨e TableColumn￨3￨e (￨3￨e table￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e column2￨3￨e .￨3￨e setText￨3￨e (￨3￨e "Column<seq2seq4repair_space>2"￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 10￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l TableItem￨4￨e item￨4￨e =￨4￨e new￨4￨e TableItem￨4￨e (￨4￨e table￨4￨e ,￨4￨e SWT￨4￨e .￨4￨e NONE￨4￨e )￨4￨e ;￨4￨e item￨4￨f .￨4￨f setText￨4￨f (￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨l comp￨3￨f .￨3￨f addControlListener￨3￨f (￨3￨f new￨3￨f ControlAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f controlResized￨4￨f (￨4￨f ControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f Rectangle￨5￨e area￨5￨e =￨5￨e comp￨5￨e .￨5￨e getClientArea￨5￨e (￨5￨e )￨5￨e ;￨5￨e Point￨5￨e preferredSize￨5￨e =￨5￨e table￨5￨e .￨5￨e computeSize￨5￨e (￨5￨e DEFAULT￨5￨e ,￨5￨e DEFAULT￨5￨e )￨5￨e ;￨5￨e int￨5￨e width￨5￨e =￨5￨e (￨5￨e area￨5￨e .￨5￨e width￨5￨e )￨5￨e -￨5￨e (￨5￨e 2￨5￨e *￨5￨e (￨5￨e table￨5￨e .￨5￨e getBorderWidth￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b preferredSize￨5￨b .￨5￨b y￨5￨b )￨5￨b >￨5￨b (￨5￨b area￨5￨b .￨5￨b height￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b Point￨5￨e vBarSize￨5￨e =￨5￨e table￨5￨e .￨5￨e getVerticalBar￨5￨e (￨5￨e )￨5￨e .￨5￨e getSize￨5￨e (￨5￨e )￨5￨e ;￨5￨e width￨5￨e -=￨5￨e vBarSize￨5￨e .￨5￨e x￨5￨e ;￨5￨e }￨5￨e Point￨5￨e oldSize￨5￨e =￨5￨e table￨5￨e .￨5￨e getSize￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c oldSize￨6￨c .￨6￨c x￨6￨c )￨6￨c >￨6￨c (￨6￨c area￨6￨c .￨6￨c width￨6￨c )￨6￨c )￨5￨j {￨5￨j column1￨6￨e .￨6￨e setWidth￨6￨e (￨6￨e (￨6￨e width￨6￨e /￨6￨e 3￨6￨e )￨6￨e )￨6￨e ;￨6￨e column2￨6￨e .￨6￨e setWidth￨6￨e (￨6￨e (￨6￨e width￨6￨e -￨6￨e (￨6￨e column1￨6￨e .￨6￨e getWidth￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e table￨6￨e .￨6￨e setSize￨6￨e (￨6￨e area￨6￨e .￨6￨e width￨6￨e ,￨6￨e area￨6￨e .￨6￨e height￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j table￨6￨e .￨6￨e setSize￨6￨e (￨6￨e area￨6￨e .￨6￨e width￨6￨e ,￨6￨e area￨6￨e .￨6￨e height￨6￨e )￨6￨e ;￨6￨e column1￨6￨e .￨6￨e setWidth￨6￨e (￨6￨e (￨6￨e width￨6￨e /￨6￨e 3￨6￨e )￨6￨e )￨6￨e ;￨6￨e column2￨6￨e .￨6￨e setWidth￨6￨e (￨6￨e (￨6￨e width￨6￨e -￨6￨e (￨6￨e column1￨6￨e .￨6￨e getWidth￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e open￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l !￨4￨c (￨4￨c shell￨4￨c .￨4￨c isDisposed￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j !￨5￨c (￨5￨c display￨5￨c .￨5￨c readAndDispatch￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j display￨5￨e .￨5￨e sleep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l display￨3￨e .￨3￨e dispose￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TypeSystemImpl￨1￨d extends￨1￨d AbstractTypeSystemImpl￨1￨d implements￨1￨d TypeSystem￨1￨d {￨1￨d private￨2￨e DeclarationsContributor￨2￨e contr￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TypeSystemImpl￨2￨f (￨2￨f DeclarationsContributor￨3￨p contributor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Type￨2￨f typeForName￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p AbstractTypeReference￨3￨p ...￨3￨p typeArguments￨3￨p )￨2￨f {￨2￨f DeclaredType￨3￨e dt￨3￨e =￨3￨e contr￨3￨e .￨3￨e typeForName￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b dt￨3￨b ==￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b Type￨3￨e t￨3￨e =￨3￨e FACTORY￨3￨e .￨3￨e createType￨3￨e (￨3￨e )￨3￨e ;￨3￨e t￨3￨e .￨3￨e setDeclaredType￨3￨e (￨3￨e dt￨3￨e )￨3￨e ;￨3￨e t￨3￨e .￨3￨e getActualTypeArguments￨3￨e (￨3￨e )￨3￨e .￨3￨e addAll￨3￨e (￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e typeArguments￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e t￨3￨e ;￨3￨e }￨3￨e return￨3￨e null￨3￨e ;￨3￨e }￨2￨f public￨2￨f FunctionType￨2￨f functionForName￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p List￨3￨p <￨3￨p AbstractTypeReference￨3￨p >￨3￨p parameterTypes￨3￨p ,￨3￨p AbstractTypeReference￨3￨p ...￨3￨p typeArguments￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FunctionType￨2￨f functionForNameAndParameterTypes￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p AbstractTypeReference￨3￨p ...￨3￨p parameterTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨f interface￨1￨f Console￨1￨f (￨1￨f )￨1￨f {￨1￨f void￨2￨f addCompleter￨2￨f (￨2￨f CommandLineCompleter￨3￨p completer￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isUseHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setUseHistory￨2￨f (￨2￨f boolean￨3￨p useHistory￨3￨p )￨2￨f {￨2￨f }￨2￨f CommandHistory￨2￨f getHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setHistoryFile￨2￨f (￨2￨f File￨3￨p f￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearScreen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f printColumns￨2￨f (￨2￨f Collection￨3￨p <￨3￨p String￨3￨p >￨3￨p list￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f print￨2￨f (￨2￨f String￨3￨p line￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f printNewLine￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f readLine￨2￨f (￨2￨f String￨3￨p prompt￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f readLine￨2￨f (￨2￨f String￨3￨p prompt￨3￨p ,￨3￨p Character￨3￨p mask￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f getTerminalWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getTerminalHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d final￨2￨d class￨2￨d Factory￨2￨d {￨2￨d public￨3￨f static￨3￨f Console￨3￨f getConsole￨3￨f (￨3￨f CommandContext￨3￨f ctx￨3￨f )￨3￨f throws￨3￨f CliInitializationException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f Console￨3￨f getConsole￨3￨f (￨3￨f final￨3￨f CommandContext￨3￨f ctx￨3￨f ,￨3￨f InputStream￨3￨f is￨3￨f ,￨3￨f OutputStream￨3￨f os￨3￨f )￨3￨f throws￨3￨f CliInitializationException￨3￨f (￨3￨f )￨3￨f {￨3￨f org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e aesh￨4￨e .￨4￨e console￨4￨e .￨4￨e Console￨4￨e aeshConsole￨4￨e =￨4￨e null￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f aeshConsole￨5￨e =￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e aesh￨5￨e .￨5￨e console￨5￨e .￨5￨e Console￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f <START_BUG>￨5￨b e￨5￨b .￨5￨b printStackTrace￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f final￨4￨e org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e aesh￨4￨e .￨4￨e console￨4￨e .￨4￨e Console￨4￨e finalAeshConsole￨4￨e =￨4￨e aeshConsole￨4￨e ;￨4￨e return￨4￨f new￨4￨f Console￨4￨f (￨4￨f )￨4￨f {￨4￨f private￨5￨e CommandContext￨5￨e cmdCtx￨5￨e =￨5￨e ctx￨5￨e ;￨5￨e private￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e aesh￨5￨e .￨5￨e console￨5￨e .￨5￨e Console￨5￨e console￨5￨e =￨5￨e finalAeshConsole￨5￨e ;￨5￨e private￨5￨e CommandHistory￨5￨e history￨5￨e =￨5￨e new￨5￨e HistoryImpl￨5￨e (￨5￨e )￨5￨e ;￨5￨e @￨5￨f Override￨5￨f public￨5￨f void￨5￨f addCompleter￨5￨f (￨5￨f final￨6￨p CommandLineCompleter￨6￨p completer￨6￨p )￨5￨f {￨5￨f console￨6￨f .￨6￨f addCompletion￨6￨f (￨6￨f new￨6￨f Completion￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f complete￨7￨f (￨7￨f CompleteOperation￨8￨p co￨8￨p )￨7￨f {￨7￨f int￨8￨e offset￨8￨e =￨8￨e completer￨8￨e .￨8￨e complete￨8￨e (￨8￨e cmdCtx￨8￨e ,￨8￨e co￨8￨e .￨8￨e getBuffer￨8￨e (￨8￨e )￨8￨e ,￨8￨e co￨8￨e .￨8￨e getCursor￨8￨e (￨8￨e )￨8￨e ,￨8￨e co￨8￨e .￨8￨e getCompletionCandidates￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e co￨8￨e .￨8￨e setOffset￨8￨e (￨8￨e offset￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c (￨9￨c co￨9￨c .￨9￨c getCompletionCandidates￨9￨c (￨9￨c )￨9￨c .￨9￨c size￨9￨c (￨9￨c )￨9￨c )￨9￨c ==￨9￨c 1￨9￨c )￨9￨c &&￨9￨c (￨9￨c co￨9￨c .￨9￨c getCompletionCandidates￨9￨c (￨9￨c )￨9￨c .￨9￨c get￨9￨c (￨9￨c 0￨9￨c )￨9￨c .￨9￨c startsWith￨9￨c (￨9￨c co￨9￨c .￨9￨c getBuffer￨9￨c (￨9￨c )￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j co￨9￨e .￨9￨e doAppendSeparator￨9￨e (￨9￨e true￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j {￨8￨j co￨9￨e .￨9￨e doAppendSeparator￨9￨e (￨9￨e false￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f boolean￨5￨f isUseHistory￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e !￨6￨e (￨6￨e Settings￨6￨e .￨6￨e getInstance￨6￨e (￨6￨e )￨6￨e .￨6￨e isHistoryDisabled￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f setUseHistory￨5￨f (￨5￨f boolean￨6￨p useHistory￨6￨p )￨5￨f {￨5￨f Settings￨6￨e .￨6￨e getInstance￨6￨e (￨6￨e )￨6￨e .￨6￨e setHistoryDisabled￨6￨e (￨6￨e (￨6￨e !￨6￨e useHistory￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f CommandHistory￨5￨f getHistory￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e history￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f setHistoryFile￨5￨f (￨5￨f File￨6￨p f￨6￨p )￨5￨f {￨5￨f Settings￨6￨e .￨6￨e getInstance￨6￨e (￨6￨e )￨6￨e .￨6￨e setHistoryFile￨6￨e (￨6￨e f￨6￨e )￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f clearScreen￨5￨f (￨5￨f )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f console￨7￨e .￨7￨e clear￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f printColumns￨5￨f (￨5￨f Collection￨6￨p <￨6￨p String￨6￨p >￨6￨p list￨6￨p )￨5￨f {￨5￨f String￨6￨e [￨6￨e ]￨6￨e newList￨6￨e =￨6￨e new￨6￨e String￨6￨e [￨6￨e list￨6￨e .￨6￨e size￨6￨e (￨6￨e )￨6￨e ]￨6￨e ;￨6￨e list￨6￨e .￨6￨e toArray￨6￨e (￨6￨e newList￨6￨e )￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f console￨7￨e .￨7￨e pushToStdOut￨7￨e (￨7￨e Parser￨7￨e .￨7￨e formatDisplayList￨7￨e (￨7￨e newList￨7￨e ,￨7￨e console￨7￨e .￨7￨e getTerminalSize￨7￨e (￨7￨e )￨7￨e .￨7￨e getHeight￨7￨e (￨7￨e )￨7￨e ,￨7￨e console￨7￨e .￨7￨e getTerminalSize￨7￨e (￨7￨e )￨7￨e .￨7￨e getWidth￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f print￨5￨f (￨5￨f String￨6￨p line￨6￨p )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f console￨7￨e .￨7￨e pushToStdOut￨7￨e (￨7￨e line￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f printNewLine￨5￨f (￨5￨f )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f console￨7￨e .￨7￨e pushToStdOut￨7￨e (￨7￨e Config￨7￨e .￨7￨e getLineSeparator￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f String￨5￨f readLine￨5￨f (￨5￨f String￨6￨p prompt￨6￨p )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f ConsoleOutput￨7￨e output￨7￨e =￨7￨e console￨7￨e .￨7￨e read￨7￨e (￨7￨e prompt￨7￨e )￨7￨e ;￨7￨e return￨7￨e output￨7￨e !=￨7￨e null￨7￨e ?￨7￨e output￨7￨e .￨7￨e getBuffer￨7￨e (￨7￨e )￨7￨e :￨7￨e null￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e return￨7￨e null￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f String￨5￨f readLine￨5￨f (￨5￨f String￨6￨p prompt￨6￨p ,￨6￨p Character￨6￨p mask￨6￨p )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f return￨7￨e console￨7￨e .￨7￨e read￨7￨e (￨7￨e new￨7￨e Prompt￨7￨e (￨7￨e prompt￨7￨e )￨7￨e ,￨7￨e mask￨7￨e )￨7￨e .￨7￨e getBuffer￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f e￨7￨e .￨7￨e printStackTrace￨7￨e (￨7￨e )￨7￨e ;￨7￨e return￨7￨e null￨7￨e ;￨7￨e }￨6￨f }￨5￨f @￨5￨f Override￨5￨f public￨5￨f int￨5￨f getTerminalWidth￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e console￨6￨e .￨6￨e getTerminalSize￨6￨e (￨6￨e )￨6￨e .￨6￨e getWidth￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f @￨5￨f Override￨5￨f public￨5￨f int￨5￨f getTerminalHeight￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e console￨6￨e .￨6￨e getTerminalSize￨6￨e (￨6￨e )￨6￨e .￨6￨e getHeight￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f class￨5￨d HistoryImpl￨5￨d implements￨5￨d CommandHistory￨5￨d {￨5￨d @￨6￨f SuppressWarnings￨6￨f (￨6￨f "unchecked"￨6￨f )￨6￨f @￨6￨f Override￨6￨f public￨6￨f List￨6￨f <￨6￨f String￨6￨f >￨6￨f asList￨6￨f (￨6￨f )￨6￨f {￨6￨f return￨7￨e console￨7￨e .￨7￨e getHistory￨7￨e (￨7￨e )￨7￨e .￨7￨e getAll￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f boolean￨6￨f isUseHistory￨6￨f (￨6￨f )￨6￨f {￨6￨f return￨7￨e !￨7￨e (￨7￨e Settings￨7￨e .￨7￨e getInstance￨7￨e (￨7￨e )￨7￨e .￨7￨e isHistoryDisabled￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f setUseHistory￨6￨f (￨6￨f boolean￨7￨p useHistory￨7￨p )￨6￨f {￨6￨f Settings￨7￨e .￨7￨e getInstance￨7￨e (￨7￨e )￨7￨e .￨7￨e setHistoryDisabled￨7￨e (￨7￨e (￨7￨e !￨7￨e useHistory￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f clear￨6￨f (￨6￨f )￨6￨f {￨6￨f console￨7￨e .￨7￨e getHistory￨7￨e (￨7￨e )￨7￨e .￨7￨e clear￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f setMaxSize￨6￨f (￨6￨f int￨7￨p maxSize￨7￨p )￨6￨f {￨6￨f Settings￨7￨e .￨7￨e getInstance￨7￨e (￨7￨e )￨7￨e .￨7￨e setHistorySize￨7￨e (￨7￨e maxSize￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f int￨6￨f getMaxSize￨6￨f (￨6￨f )￨6￨f {￨6￨f return￨7￨e Settings￨7￨e .￨7￨e getInstance￨7￨e (￨7￨e )￨7￨e .￨7￨e getHistorySize￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨d }￨4￨f ;￨4￨e }￨3￨f }￨2￨d }￨1￨f
public￨1￨d class￨1￨d Translate￨1￨d extends￨1￨d MatchingTask￨1￨d {￨1￨d private￨2￨e String￨2￨e bundle￨2￨e ;￨2￨e private￨2￨e String￨2￨e bundleLanguage￨2￨e ;￨2￨e private￨2￨e String￨2￨e bundleCountry￨2￨e ;￨2￨e private￨2￨e String￨2￨e bundleVariant￨2￨e ;￨2￨e private￨2￨e File￨2￨e toDir￨2￨e ;￨2￨e private￨2￨e String￨2￨e srcEncoding￨2￨e ;￨2￨e private￨2￨e String￨2￨e destEncoding￨2￨e ;￨2￨e private￨2￨e String￨2￨e bundleEncoding￨2￨e ;￨2￨e private￨2￨e String￨2￨e startToken￨2￨e ;￨2￨e private￨2￨e String￨2￨e endToken￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e forceOverwrite￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e filesets￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e resourceMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e FileUtils￨2￨e fileUtils￨2￨e =￨2￨e FileUtils￨2￨e .￨2￨e newFileUtils￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e long￨2￨e [￨2￨e ]￨2￨e bundleLastModified￨2￨e =￨2￨e new￨2￨e long￨2￨e [￨2￨e 7￨2￨e ]￨2￨e ;￨2￨e private￨2￨e long￨2￨e srcLastModified￨2￨e ;￨2￨e private￨2￨e long￨2￨e destLastModified￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e loaded￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f void￨2￨f setBundle￨2￨f (￨2￨f String￨3￨p bundle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBundleLanguage￨2￨f (￨2￨f String￨3￨p bundleLanguage￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBundleCountry￨2￨f (￨2￨f String￨3￨p bundleCountry￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBundleVariant￨2￨f (￨2￨f String￨3￨p bundleVariant￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToDir￨2￨f (￨2￨f File￨3￨p toDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setStartToken￨2￨f (￨2￨f String￨3￨p startToken￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEndToken￨2￨f (￨2￨f String￨3￨p endToken￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSrcEncoding￨2￨f (￨2￨f String￨3￨p srcEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDestEncoding￨2￨f (￨2￨f String￨3￨p destEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBundleEncoding￨2￨f (￨2￨f String￨3￨p bundleEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForceOverwrite￨2￨f (￨2￨f boolean￨3￨p forceOverwrite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFileset￨2￨f (￨2￨f FileSet￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f loadResourceMaps￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f Locale￨3￨e locale￨3￨e =￨3￨e new￨3￨e Locale￨3￨e (￨3￨e bundleLanguage￨3￨e ,￨3￨e bundleCountry￨3￨e ,￨3￨e bundleVariant￨3￨e )￨3￨e ;￨3￨e String￨3￨e language￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getLanguage￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getLanguage￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e String￨3￨e country￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getCountry￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getCountry￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e String￨3￨e variant￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getVariant￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getVariant￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e String￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e (￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e )￨3￨e +￨3￨e country￨3￨e )￨3￨e +￨3￨e variant￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e )￨3￨e +￨3￨e country￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e bundle￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e locale￨3￨e =￨3￨e Locale￨3￨e .￨3￨e getDefault￨3￨e (￨3￨e )￨3￨e ;￨3￨e language￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getLanguage￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getLanguage￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e country￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getCountry￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getCountry￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e variant￨3￨e =￨3￨e (￨3￨e (￨3￨e locale￨3￨e .￨3￨e getVariant￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e "_"￨3￨e +￨3￨e (￨3￨e locale￨3￨e .￨3￨e getVariant￨3￨e (￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e bundleEncoding￨3￨e =￨3￨e System￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "file.encoding"￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e (￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e )￨3￨e +￨3￨e country￨3￨e )￨3￨e +￨3￨e variant￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e )￨3￨e +￨3￨e country￨3￨e ;￨3￨e processBundle￨3￨e (￨3￨e bundleFile￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bundleFile￨3￨e =￨3￨e (￨3￨e bundle￨3￨e )￨3￨e +￨3￨e language￨3￨e ;￨3￨e <START_BUG>￨3￨b processBundle￨3￨b (￨3￨b bundleFile￨3￨b ,￨3￨b 6￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f void￨2￨f processBundle￨2￨f (￨2￨f final￨2￨f String￨2￨f bundleFile￨2￨f ,￨2￨f final￨2￨f int￨2￨f i￨2￨f ,￨2￨f final￨2￨f boolean￨2￨f checkLoaded￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f loadResourceMap￨2￨f (￨2￨f FileInputStream￨2￨f ins￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f translate￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Rmic￨1￨d extends￨1￨d MatchingTask￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e FAIL_MSG￨2￨e =￨2￨e "Rmic<seq2seq4repair_space>failed,<seq2seq4repair_space>messages<seq2seq4repair_space>should<seq2seq4repair_space>have<seq2seq4repair_space>been<seq2seq4repair_space>provided."￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e verify￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e filtering￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e iiop￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e idl￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e debug￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e includeAntRuntime￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e includeJavaRuntime￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e compileList￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e ClassLoader￨2￨e loader￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e File￨2￨e baseDir￨2￨e ;￨2￨e private￨2￨e String￨2￨e classname￨2￨e ;￨2￨e private￨2￨e Path￨2￨e compileClasspath￨2￨e ;￨2￨e private￨2￨e Path￨2￨e extdirs￨2￨e ;￨2￨e private￨2￨e String￨2￨e idlopts￨2￨e ;￨2￨e private￨2￨e String￨2￨e iiopopts￨2￨e ;￨2￨e private￨2￨e File￨2￨e sourceBase￨2￨e ;￨2￨e private￨2￨e String￨2￨e stubVersion￨2￨e ;￨2￨e public￨2￨f void￨2￨f setBase￨2￨f (￨2￨f File￨3￨p base￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setClassname￨2￨f (￨2￨f String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setClasspath￨2￨f (￨2￨f Path￨2￨f classpath￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setClasspathRef￨2￨f (￨2￨f Reference￨2￨f r￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDebug￨2￨f (￨2￨f boolean￨3￨p debug￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExtdirs￨2￨f (￨2￨f Path￨2￨f extdirs￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFiltering￨2￨f (￨2￨f boolean￨3￨p filter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIdl￨2￨f (￨2￨f boolean￨3￨p idl￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIdlopts￨2￨f (￨2￨f String￨3￨p idlopts￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIiop￨2￨f (￨2￨f boolean￨3￨p iiop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIiopopts￨2￨f (￨2￨f String￨3￨p iiopopts￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludeantruntime￨2￨f (￨2￨f boolean￨3￨p include￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludejavaruntime￨2￨f (￨2￨f boolean￨3￨p include￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSourceBase￨2￨f (￨2￨f File￨3￨p sourceBase￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setStubVersion￨2￨f (￨2￨f String￨3￨p stubVersion￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVerify￨2￨f (￨2￨f boolean￨3￨p verify￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getBase￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getClassname￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f getClasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getCompileList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getDebug￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f getExtdirs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getFileList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getFiltering￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getIdl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getIdlopts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getIiop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getIiopopts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getIncludeantruntime￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getIncludejavaruntime￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ClassLoader￨2￨f getLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f getRemoteInterface￨2￨f (￨2￨f Class￨3￨p testClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getSourceBase￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStubVersion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getVerify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isValidRmiRemote￨2￨f (￨2￨f String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createClasspath￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createExtdirs￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f scanDir￨2￨f (￨2￨f File￨2￨f baseDir￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f files￨2￨f ,￨2￨f FileNameMapper￨2￨f mapper￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isValidRmiRemote￨2￨f (￨2￨f Class￨3￨p testClass￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f moveGeneratedFile￨2￨f (￨2￨f File￨2￨f baseDir￨2￨f ,￨2￨f File￨2￨f sourceBaseFile￨2￨f ,￨2￨f String￨2￨f classname￨2￨f ,￨2￨f RmicAdapter￨2￨f adapter￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e classFileName￨3￨e =￨3￨e (￨3￨e classname￨3￨e .￨3￨e replace￨3￨e (￨3￨e '.'￨3￨e ,￨3￨e File￨3￨e .￨3￨e separatorChar￨3￨e )￨3￨e )￨3￨e +￨3￨e ".class"￨3￨e ;￨3￨e String￨3￨e [￨3￨e ]￨3￨e generatedFiles￨3￨e =￨3￨e adapter￨3￨e .￨3￨e getMapper￨3￨e (￨3￨e )￨3￨e .￨3￨e mapFileName￨3￨e (￨3￨e classFileName￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c generatedFiles￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e sourceFileName￨4￨e =￨4￨e (￨4￨e classFileName￨4￨e .￨4￨e substring￨4￨e (￨4￨e 0￨4￨e ,￨4￨e (￨4￨e (￨4￨e classFileName￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e )￨4￨e -￨4￨e 6￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e ".java"￨4￨e ;￨4￨e File￨4￨e oldFile￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e baseDir￨4￨e ,￨4￨e sourceFileName￨4￨e )￨4￨e ;￨4￨e File￨4￨e newFile￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e sourceBaseFile￨4￨e ,￨4￨e sourceFileName￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j filtering￨6￨c )￨5￨j {￨5￨j final￨6￨e FilterSetCollection￨6￨e filters￨6￨e =￨6￨e new￨6￨e FilterSetCollection￨6￨e (￨6￨e project￨6￨e .￨6￨e getGlobalFilterSet￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b FileUtils￨6￨b .￨6￨b newFileUtils￨6￨b (￨6￨b )￨6￨b .￨6￨b copyFile￨6￨b (￨6￨b oldFile￨6￨b ,￨6￨b newFile￨6￨b ,￨6￨b filters￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j else￨5￨j {￨5￨j FileUtil￨6￨e .￨6￨e copyFile￨6￨e (￨6￨e oldFile￨6￨e ,￨6￨e newFile￨6￨e )￨6￨e ;￨6￨e }￨5￨j oldFile￨5￨e .￨5￨e delete￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p ioe￨5￨p )￨4￨f {￨4￨f String￨5￨e msg￨5￨e =￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>copy<seq2seq4repair_space>"￨5￨e +￨5￨e oldFile￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>to<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e newFile￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>due<seq2seq4repair_space>to<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e (￨5￨e ioe￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e throw￨5￨e new￨5￨e TaskException￨5￨e (￨5￨e msg￨5￨e ,￨5￨e ioe￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨l }￨2￨f }￨1￨d
public￨1￨d (￨2￨d CacheAdd￨2￨d .￨2￨d class￨2￨d .￨2￨d getPackage￨2￨d (￨2￨d )￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d DEFAULTS￨2￨d =￨2￨d "infinispan-defaults.xml"￨2￨d ;￨2￨d private￨2￨d static￨2￨d volatile￨2￨d Map￨2￨d <￨2￨d CacheMode￨2￨d ,￨2￨d Configuration￨2￨d >￨2￨d defaults￨2￨d =￨2￨d null￨2￨d ;￨2￨d public￨2￨d static￨2￨d synchronized￨2￨d Configuration￨2￨d getDefaultConfiguration￨2￨d (￨2￨d CacheMode￨2￨d cacheMode￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨f static￨2￨f ConfigurationBuilderHolder￨2￨f load￨2￨f (￨2￨f String￨3￨p resource￨3￨p )￨2￨f {￨2￨f URL￨3￨d url￨3￨d =￨3￨d CacheAdd￨3￨d .￨3￨d find￨3￨d (￨3￨d resource￨3￨d ,￨3￨d CacheAdd￨3￨d .￨3￨d class￨3￨d .￨3￨d getClassLoader￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d CacheAdd￨3￨d .￨3￨d log￨3￨d .￨3￨d debugf￨3￨d (￨3￨d "Loading<seq2seq4repair_space>Infinispan<seq2seq4repair_space>defaults<seq2seq4repair_space>from<seq2seq4repair_space>%s"￨3￨d ,￨3￨d url￨3￨d .￨3￨d toString￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d ParserRegistry￨3￨d parser￨3￨d =￨3￨d new￨3￨d ParserRegistry￨3￨d (￨3￨d ParserRegistry￨3￨d .￨3￨d class￨3￨d .￨3￨d getClassLoader￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d try￨3￨d (￨3￨d InputStream￨3￨d input￨3￨d =￨3￨d url￨3￨d .￨3￨d openStream￨3￨d (￨3￨d )￨3￨d )￨3￨d {￨3￨d return￨4￨e parser￨4￨e .￨4￨e parse￨4￨e (￨4￨e input￨4￨e )￨4￨e ;￨4￨e }￨3￨d catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b IllegalStateException￨4￨b (￨4￨b String￨4￨b .￨4￨b format￨4￨b (￨4￨b "Failed<seq2seq4repair_space>to<seq2seq4repair_space>parse<seq2seq4repair_space>%s"￨4￨b ,￨4￨b url￨4￨b )￨4￨b ,￨4￨b e￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f private￨2￨f static￨2￨f URL￨2￨f find￨2￨f (￨2￨f String￨3￨p resource￨3￨p ,￨3￨p ClassLoader￨3￨p ...￨3￨p loaders￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨e CacheMode￨2￨e mode￨2￨e ;￨2￨e CacheAdd￨2￨f (￨2￨f CacheMode￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f ,￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f ,￨2￨f List￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f newControllers￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Collection￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f installRuntimeServices￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f containerModel￨2￨f ,￨2￨f ModelNode￨2￨f cacheModel￨2￨f ,￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f removeRuntimeServices￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f containerModel￨2￨f ,￨2￨f ModelNode￨2￨f cacheModel￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f PathAddress￨2￨f getCacheAddressFromOperation￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f PathAddress￨2￨f getCacheContainerAddressFromOperation￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f installCacheConfigurationService￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p String￨3￨p containerName￨3￨p ,￨3￨p String￨3￨p cacheName￨3￨p ,￨3￨p boolean￨3￨p defaultCache￨3￨p ,￨3￨p ModuleIdentifier￨3￨p moduleId￨3￨p ,￨3￨p ConfigurationBuilder￨3￨p builder￨3￨p ,￨3￨p Configuration￨3￨p config￨3￨p ,￨3￨p List￨3￨p <￨3￨p CacheAdd￨3￨p .￨3￨p Dependency￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p dependencies￨3￨p ,￨3￨p ServiceVerificationHandler￨3￨p verificationHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f installCacheService￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p String￨3￨p containerName￨3￨p ,￨3￨p String￨3￨p cacheName￨3￨p ,￨3￨p boolean￨3￨p defaultCache￨3￨p ,￨3￨p ServiceController￨3￨p .￨3￨p Mode￨3￨p initialMode￨3￨p ,￨3￨p Configuration￨3￨p config￨3￨p ,￨3￨p ServiceVerificationHandler￨3￨p verificationHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "rawtypes"￨2￨f )￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f installJndiService￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p String￨3￨p containerName￨3￨p ,￨3￨p String￨3￨p cacheName￨3￨p ,￨3￨p boolean￨3￨p defaultCache￨3￨p ,￨3￨p String￨3￨p jndiName￨3￨p ,￨3￨p ServiceVerificationHandler￨3￨p verificationHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f JndiName￨2￨f createJndiName￨2￨f (￨2￨f String￨3￨p container￨3￨p ,￨3￨p String￨3￨p cache￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f BindInfo￨2￨f createCacheBinding￨2￨f (￨2￨f JndiName￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f <￨2￨f T￨2￨f >￨2￨f void￨2￨f addDependency￨2￨f (￨2￨f ServiceBuilder￨3￨p <￨3￨p ?￨3￨p >￨3￨p builder￨3￨p ,￨3￨p CacheAdd￨3￨p .￨3￨p Dependency￨3￨p <￨3￨p T￨3￨p >￨3￨p dependency￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f populate￨2￨f (￨2￨f ModelNode￨2￨f fromModel￨2￨f ,￨2￨f ModelNode￨2￨f toModel￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f processModelNode￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f String￨2￨f containerName￨2￨f ,￨2￨f ModelNode￨2￨f cache￨2￨f ,￨2￨f ConfigurationBuilder￨2￨f builder￨2￨f ,￨2￨f List￨2￨f <￨2￨f CacheAdd￨2￨f .￨2￨f Dependency￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f dependencies￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f findStoreKey￨2￨f (￨2￨f ModelNode￨3￨p cache￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ModelNode￨2￨f getStoreModelNode￨2￨f (￨2￨f ModelNode￨3￨p cache￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f StoreConfigurationBuilder￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f buildCacheStore￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f PersistenceConfigurationBuilder￨2￨f persistenceBuilder￨2￨f ,￨2￨f String￨2￨f containerName￨2￨f ,￨2￨f ModelNode￨2￨f store￨2￨f ,￨2￨f String￨2￨f storeKey￨2￨f ,￨2￨f List￨2￨f <￨2￨f CacheAdd￨2￨f .￨2￨f Dependency￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f dependencies￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f AbstractJdbcStoreConfigurationBuilder￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f buildJdbcStore￨2￨f (￨2￨f PersistenceConfigurationBuilder￨2￨f persistenceBuilder￨2￨f ,￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f store￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f buildBinaryKeyedTable￨2￨f (￨2￨f TableManipulationConfigurationBuilder￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f builder￨2￨f ,￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f table￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f buildStringKeyedTable￨2￨f (￨2￨f TableManipulationConfigurationBuilder￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f builder￨2￨f ,￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f table￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f buildTable￨2￨f (￨2￨f TableManipulationConfigurationBuilder￨2￨f <￨2￨f ?￨2￨f ,￨2￨f ?￨2￨f >￨2￨f builder￨2￨f ,￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f table￨2￨f ,￨2￨f String￨2￨f defaultTableNamePrefix￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f getColumnProperty￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f table￨2￨f ,￨2￨f String￨2￨f columnKey￨2￨f ,￨2￨f AttributeDefinition￨2￨f columnAttribute￨2￨f ,￨2￨f String￨2￨f defaultValue￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨d class￨2￨d Dependency￨2￨d <￨2￨d I￨2￨d >￨2￨d {￨2￨d private￨3￨e final￨3￨e ServiceName￨3￨e name￨3￨e ;￨3￨e private￨3￨e final￨3￨e Class￨3￨e <￨3￨e I￨3￨e >￨3￨e type￨3￨e ;￨3￨e private￨3￨e final￨3￨e Injector￨3￨e <￨3￨e I￨3￨e >￨3￨e target￨3￨e ;￨3￨e Dependency￨3￨f (￨3￨f ServiceName￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f Dependency￨3￨f (￨3￨f ServiceName￨4￨p name￨4￨p ,￨4￨p Class￨4￨p <￨4￨p I￨4￨p >￨4￨p type￨4￨p ,￨4￨p Injector￨4￨p <￨4￨p I￨4￨p >￨4￨p target￨4￨p )￨3￨f {￨3￨f }￨3￨f ServiceName￨3￨f getName￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Class￨3￨f <￨3￨f I￨3￨f >￨3￨f getType￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Injector￨3￨f <￨3￨f I￨3￨f >￨3￨f getInjector￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d abstract￨2￨d class￨2￨d SimpleInjector￨2￨d <￨2￨d I￨2￨d >￨2￨d implements￨2￨d Injector￨2￨d <￨2￨d I￨2￨d >￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f void￨3￨f uninject￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d CacheDependencies￨2￨d implements￨2￨d CacheService￨2￨d .￨2￨d Dependencies￨2￨d {￨2￨d private￨3￨e final￨3￨e Value￨3￨e <￨3￨e EmbeddedCacheManager￨3￨e >￨3￨e container￨3￨e ;￨3￨e private￨3￨e final￨3￨e InjectedValue￨3￨e <￨3￨e XAResourceRecoveryRegistry￨3￨e >￨3￨e recoveryRegistry￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e XAResourceRecoveryRegistry￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e CacheDependencies￨3￨f (￨3￨f Value￨4￨p <￨4￨p EmbeddedCacheManager￨4￨p >￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f Injector￨3￨f <￨3￨f XAResourceRecoveryRegistry￨3￨f >￨3￨f getRecoveryRegistryInjector￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f EmbeddedCacheManager￨3￨f getCacheContainer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f XAResourceRecoveryRegistry￨3￨f getRecoveryRegistry￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d CacheConfigurationDependencies￨2￨d implements￨2￨d CacheConfigurationService￨2￨d .￨2￨d Dependencies￨2￨d {￨2￨d private￨3￨e final￨3￨e Value￨3￨e <￨3￨e EmbeddedCacheManager￨3￨e >￨3￨e container￨3￨e ;￨3￨e private￨3￨e final￨3￨e InjectedValue￨3￨e <￨3￨e TransactionManager￨3￨e >￨3￨e tm￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e TransactionManager￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e InjectedValue￨3￨e <￨3￨e TransactionSynchronizationRegistry￨3￨e >￨3￨e tsr￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e TransactionSynchronizationRegistry￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e InjectedValue￨3￨e <￨3￨e ModuleLoader￨3￨e >￨3￨e moduleLoader￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e ModuleLoader￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e CacheConfigurationDependencies￨3￨f (￨3￨f Value￨4￨p <￨4￨p EmbeddedCacheManager￨4￨p >￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f Injector￨3￨f <￨3￨f TransactionManager￨3￨f >￨3￨f getTransactionManagerInjector￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f Injector￨3￨f <￨3￨f TransactionSynchronizationRegistry￨3￨f >￨3￨f getTransactionSynchronizationRegistryInjector￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f Injector￨3￨f <￨3￨f ModuleLoader￨3￨f >￨3￨f getModuleLoaderInjector￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f EmbeddedCacheManager￨3￨f getCacheContainer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f TransactionManager￨3￨f getTransactionManager￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f TransactionSynchronizationRegistry￨3￨f getTransactionSynchronizationRegistry￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f ModuleLoader￨3￨f getModuleLoader￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ReloadableResourceBundleMessageSource￨1￨d extends￨1￨d AbstractMessageSource￨1￨d implements￨1￨d ResourceLoaderAware￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e PROPERTIES_SUFFIX￨2￨e =￨2￨e ".properties"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e XML_SUFFIX￨2￨e =￨2￨e ".xml"￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e basenames￨2￨e =￨2￨e new￨2￨e String￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e String￨2￨e defaultEncoding￨2￨e ;￨2￨e private￨2￨e Properties￨2￨e fileEncodings￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e fallbackToSystemLocale￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e long￨2￨e cacheMillis￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e PropertiesPersister￨2￨e propertiesPersister￨2￨e =￨2￨e new￨2￨e DefaultPropertiesPersister￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e ResourceLoader￨2￨e resourceLoader￨2￨e =￨2￨e new￨2￨e DefaultResourceLoader￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e cachedFilenames￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e cachedProperties￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e cachedMergedProperties￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f setBasename￨2￨f (￨2￨f String￨3￨p basename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBasenames￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p basenames￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDefaultEncoding￨2￨f (￨2￨f String￨3￨p defaultEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFileEncodings￨2￨f (￨2￨f Properties￨3￨p fileEncodings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFallbackToSystemLocale￨2￨f (￨2￨f boolean￨3￨p fallbackToSystemLocale￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCacheSeconds￨2￨f (￨2￨f int￨3￨p cacheSeconds￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPropertiesPersister￨2￨f (￨2￨f PropertiesPersister￨3￨p propertiesPersister￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setResourceLoader￨2￨f (￨2￨f ResourceLoader￨3￨p resourceLoader￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f String￨2￨f resolveCodeWithoutArguments￨2￨f (￨2￨f String￨3￨p code￨3￨p ,￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f MessageFormat￨2￨f resolveCode￨2￨f (￨2￨f String￨3￨p code￨3￨p ,￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ReloadableResourceBundleMessageSource￨2￨f .￨2￨f PropertiesHolder￨2￨f getMergedProperties￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f List￨2￨f calculateAllFilenames￨2￨f (￨2￨f String￨3￨p basename￨3￨p ,￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f List￨2￨f calculateFilenamesForLocale￨2￨f (￨2￨f String￨3￨p basename￨3￨p ,￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f List￨3￨e result￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e 3￨3￨e )￨3￨e ;￨3￨e String￨3￨e language￨3￨e =￨3￨e locale￨3￨e .￨3￨e getLanguage￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e country￨3￨e =￨3￨e locale￨3￨e .￨3￨e getCountry￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e variant￨3￨e =￨3￨e locale￨3￨e .￨3￨e getVariant￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b StringBuffer￨3￨b temp￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b basename￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c language￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j temp￨4￨e .￨4￨e append￨4￨e (￨4￨e '_'￨4￨e )￨4￨e .￨4￨e append￨4￨e (￨4￨e language￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e add￨4￨e (￨4￨e 0￨4￨e ,￨4￨e temp￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c country￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j temp￨4￨e .￨4￨e append￨4￨e (￨4￨e '_'￨4￨e )￨4￨e .￨4￨e append￨4￨e (￨4￨e country￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e add￨4￨e (￨4￨e 0￨4￨e ,￨4￨e temp￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c variant￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j temp￨4￨e .￨4￨e append￨4￨e (￨4￨e '_'￨4￨e )￨4￨e .￨4￨e append￨4￨e (￨4￨e variant￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e add￨4￨e (￨4￨e 0￨4￨e ,￨4￨e temp￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e result￨3￨e ;￨3￨e }￨2￨f protected￨2￨f ReloadableResourceBundleMessageSource￨2￨f .￨2￨f PropertiesHolder￨2￨f getProperties￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ReloadableResourceBundleMessageSource￨2￨f .￨2￨f PropertiesHolder￨2￨f refreshProperties￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p ReloadableResourceBundleMessageSource￨3￨p .￨3￨p PropertiesHolder￨3￨p propHolder￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Properties￨2￨f loadProperties￨2￨f (￨2￨f Resource￨2￨f resource￨2￨f ,￨2￨f String￨2￨f filename￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearCache￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearCacheIncludingAncestors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨d class￨2￨d PropertiesHolder￨2￨d {￨2￨d private￨3￨e Properties￨3￨e properties￨3￨e ;￨3￨e private￨3￨e long￨3￨e fileTimestamp￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e private￨3￨e long￨3￨e refreshTimestamp￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e private￨3￨e final￨3￨e Map￨3￨e cachedMessageFormats￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f PropertiesHolder￨3￨f (￨3￨f Properties￨4￨p properties￨4￨p ,￨4￨p long￨4￨p fileTimestamp￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f PropertiesHolder￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Properties￨3￨f getProperties￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f getFileTimestamp￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setRefreshTimestamp￨3￨f (￨3￨f long￨4￨p refreshTimestamp￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f getRefreshTimestamp￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getProperty￨3￨f (￨3￨f String￨4￨p code￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f MessageFormat￨3￨f getMessageFormat￨3￨f (￨3￨f String￨4￨p code￨4￨p ,￨4￨p Locale￨4￨p locale￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d QueryMetricsHandler￨1￨d extends￨1￨d AbstractRuntimeOnlyHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e PersistenceUnitServiceRegistry￨2￨e persistenceUnitRegistry￨2￨e ;￨2￨e private￨2￨f QueryMetricsHandler￨2￨f (￨2￨f PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeRuntimeStep￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f handleQueryStatistics￨3￨e (￨3￨e context￨3￨e ,￨3￨e operation￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b context￨3￨b .￨3￨b completeStep￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f abstract￨2￨f void￨2￨f handle￨2￨f (￨2￨f QueryStatistics￨3￨p statistics￨3￨p ,￨3￨p OperationContext￨3￨p context￨3￨p ,￨3￨p String￨3￨p attributeName￨3￨p ,￨3￨p String￨3￨p originalQueryName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f handleQueryStatistics￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getExecutionCount￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getCacheHitCount￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getCachePutCount￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getCacheMissCount￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getExecutionRowCount￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getExecutionAvgTime￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getExecutionMaxTime￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f final￨2￨f QueryMetricsHandler￨2￨f getExecutionMinTime￨2￨f (￨2￨f final￨3￨p PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f OperationStepHandler￨2￨f getOriginalName￨2￨f (￨2￨f PersistenceUnitServiceRegistry￨3￨p persistenceUnitRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeibullDistribution￨1￨d extends￨1￨d AbstractRealDistribution￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e double￨2￨e DEFAULT_INVERSE_ABSOLUTE_ACCURACY￨2￨e =￨2￨e 1.0E-9￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 8589540077390120676L￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e shape￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e scale￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e solverAbsoluteAccuracy￨2￨e ;￨2￨e private￨2￨e double￨2￨e numericalMean￨2￨e =￨2￨e Double￨2￨e .￨2￨e NaN￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e numericalMeanIsCalculated￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e double￨2￨e numericalVariance￨2￨e =￨2￨e Double￨2￨e .￨2￨e NaN￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e numericalVarianceIsCalculated￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f WeibullDistribution￨2￨f (￨2￨f double￨2￨f alpha￨2￨f ,￨2￨f double￨2￨f beta￨2￨f )￨2￨f throws￨2￨f NotStrictlyPositiveException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WeibullDistribution￨2￨f (￨2￨f double￨3￨p alpha￨3￨p ,￨3￨p double￨3￨p beta￨3￨p ,￨3￨p double￨3￨p inverseCumAccuracy￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f WeibullDistribution￨2￨f (￨2￨f RandomGenerator￨2￨f rng￨2￨f ,￨2￨f double￨2￨f alpha￨2￨f ,￨2￨f double￨2￨f beta￨2￨f )￨2￨f throws￨2￨f NotStrictlyPositiveException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WeibullDistribution￨2￨f (￨2￨f RandomGenerator￨2￨f rng￨2￨f ,￨2￨f double￨2￨f alpha￨2￨f ,￨2￨f double￨2￨f beta￨2￨f ,￨2￨f double￨2￨f inverseCumAccuracy￨2￨f )￨2￨f throws￨2￨f NotStrictlyPositiveException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getShape￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getScale￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f density￨2￨f (￨2￨f double￨3￨p x￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f double￨2￨f logDensity￨2￨f (￨2￨f double￨3￨p x￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f cumulativeProbability￨2￨f (￨2￨f double￨3￨p x￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f double￨2￨f inverseCumulativeProbability￨2￨f (￨2￨f double￨3￨p p￨3￨p )￨2￨f {￨2￨f double￨3￨e ret￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c p￨4￨c <￨4￨c 0.0￨4￨c )￨4￨c ||￨4￨c (￨4￨c p￨4￨c >￨4￨c 1.0￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e OutOfRangeException￨4￨e (￨4￨e p￨4￨e ,￨4￨e 0.0￨4￨e ,￨4￨e 1.0￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j p￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j ret￨4￨e =￨4￨e 0.0￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j p￨4￨c ==￨4￨c 1￨4￨c )￨3￨j {￨3￨j ret￨4￨e =￨4￨e Double￨4￨e .￨4￨e POSITIVE_INFINITY￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b ret￨4￨b =￨4￨b (￨4￨b scale￨4￨b )￨4￨b *￨4￨b (￨4￨b FastMath￨4￨b .￨4￨b pow￨4￨b (￨4￨b (￨4￨b -￨4￨b (￨4￨b FastMath￨4￨b .￨4￨b log￨4￨b (￨4￨b (￨4￨b 1.0￨4￨b -￨4￨b p￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b ,￨4￨b (￨4￨b 1.0￨4￨b /￨4￨b (￨4￨b shape￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e ret￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f double￨2￨f getSolverAbsoluteAccuracy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getNumericalMean￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f double￨2￨f calculateNumericalMean￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getNumericalVariance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f double￨2￨f calculateNumericalVariance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getSupportLowerBound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getSupportUpperBound￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSupportLowerBoundInclusive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSupportUpperBoundInclusive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSupportConnected￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TermsFilterTest￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testCachability￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMissingTerms￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMissingField￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldNotPresent￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSkipField￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandom￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f TermsFilter￨2￨f termsFilter￨2￨f (￨2￨f boolean￨3￨p singleField￨3￨p ,￨3￨p Term￨3￨p ...￨3￨p terms￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TermsFilter￨2￨f termsFilter￨2￨f (￨2￨f boolean￨3￨p singleField￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Term￨3￨p >￨3￨p termList￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testHashCodeAndEquals￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e num￨3￨e =￨3￨e atLeast￨3￨e (￨3￨e 100￨3￨e )￨3￨e ;￨3￨e final￨3￨e boolean￨3￨e singleField￨3￨e =￨3￨e random￨3￨e (￨3￨e )￨3￨e .￨3￨e nextBoolean￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Term￨3￨e >￨3￨e terms￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Term￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e Term￨3￨e >￨3￨e uniqueTerms￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e Term￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c num￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e field￨4￨e =￨4￨e "field"￨4￨e +￨4￨e (￨4￨e singleField￨4￨e ?￨4￨e "1"￨4￨e :￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextInt￨4￨e (￨4￨e 100￨4￨e )￨4￨e )￨4￨e ;￨4￨e String￨4￨e string￨4￨e =￨4￨e _TestUtil￨4￨e .￨4￨e randomRealisticUnicodeString￨4￨e (￨4￨e random￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e terms￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e Term￨4￨e (￨4￨e field￨4￨e ,￨4￨e string￨4￨e )￨4￨e )￨4￨e ;￨4￨e uniqueTerms￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e Term￨4￨e (￨4￨e field￨4￨e ,￨4￨e string￨4￨e )￨4￨e )￨4￨e ;￨4￨e TermsFilter￨4￨e left￨4￨e =￨4￨e termsFilter￨4￨e (￨4￨e (￨4￨e singleField￨4￨e ?￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextBoolean￨4￨e (￨4￨e )￨4￨e :￨4￨e false￨4￨e )￨4￨e ,￨4￨e uniqueTerms￨4￨e )￨4￨e ;￨4￨e Collections￨4￨e .￨4￨e shuffle￨4￨e (￨4￨e terms￨4￨e ,￨4￨e random￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e TermsFilter￨4￨e right￨4￨e =￨4￨e termsFilter￨4￨e (￨4￨e (￨4￨e singleField￨4￨e ?￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextBoolean￨4￨e (￨4￨e )￨4￨e :￨4￨e false￨4￨e )￨4￨e ,￨4￨e terms￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e right￨4￨e ,￨4￨e left￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e right￨4￨e .￨4￨e hashCode￨4￨e (￨4￨e )￨4￨e ,￨4￨e left￨4￨e .￨4￨e hashCode￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b i￨4￨b >￨4￨b 0￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b List￨4￨e <￨4￨e Term￨4￨e >￨4￨e asList￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e <￨4￨e Term￨4￨e >￨4￨e (￨4￨e uniqueTerms￨4￨e )￨4￨e ;￨4￨e asList￨4￨e .￨4￨e remove￨4￨e (￨4￨e 0￨4￨e )￨4￨e ;￨4￨e TermsFilter￨4￨e notEqual￨4￨e =￨4￨e termsFilter￨4￨e (￨4￨e (￨4￨e singleField￨4￨e ?￨4￨e random￨4￨e (￨4￨e )￨4￨e .￨4￨e nextBoolean￨4￨e (￨4￨e )￨4￨e :￨4￨e false￨4￨e )￨4￨e ,￨4￨e asList￨4￨e )￨4￨e ;￨4￨e assertFalse￨4￨e (￨4￨e left￨4￨e .￨4￨e equals￨4￨e (￨4￨e notEqual￨4￨e )￨4￨e )￨4￨e ;￨4￨e assertFalse￨4￨e (￨4￨e right￨4￨e .￨4￨e equals￨4￨e (￨4￨e notEqual￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f public￨2￨f void￨2￨f testNoTerms￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestDeletionPolicy￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨f void￨2￨f verifyCommitOrder￨2￨f (￨2￨f List￨3￨p commits￨3￨p )￨2￨f {￨2￨f }￨2￨f class￨2￨d KeepAllDeletionPolicy￨2￨d implements￨2￨d IndexDeletionPolicy￨2￨d {￨2￨d int￨3￨e numOnInit￨3￨e ;￨3￨e int￨3￨e numOnCommit￨3￨e ;￨3￨e public￨3￨f void￨3￨f onInit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onCommit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d KeepNoneOnInitDeletionPolicy￨2￨d implements￨2￨d IndexDeletionPolicy￨2￨d {￨2￨d int￨3￨e numOnInit￨3￨e ;￨3￨e int￨3￨e numOnCommit￨3￨e ;￨3￨e public￨3￨f void￨3￨f onInit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onCommit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d KeepLastNDeletionPolicy￨2￨d implements￨2￨d IndexDeletionPolicy￨2￨d {￨2￨d int￨3￨e numOnInit￨3￨e ;￨3￨e int￨3￨e numOnCommit￨3￨e ;￨3￨e int￨3￨e numToKeep￨3￨e ;￨3￨e int￨3￨e numDelete￨3￨e ;￨3￨e Set￨3￨e seen￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f KeepLastNDeletionPolicy￨3￨f (￨3￨f int￨4￨p numToKeep￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onInit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onCommit￨3￨f (￨3￨f List￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f doDeletes￨3￨f (￨3￨f List￨4￨p commits￨4￨p ,￨4￨p boolean￨4￨p isCommit￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d ExpirationTimeDeletionPolicy￨2￨d implements￨2￨d IndexDeletionPolicy￨2￨d {￨2￨d Directory￨3￨e dir￨3￨e ;￨3￨e double￨3￨e expirationTimeSeconds￨3￨e ;￨3￨e int￨3￨e numDelete￨3￨e ;￨3￨e public￨3￨f ExpirationTimeDeletionPolicy￨3￨f (￨3￨f Directory￨4￨p dir￨4￨p ,￨4￨p double￨4￨p seconds￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onInit￨3￨f (￨3￨f List￨3￨f commits￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onCommit￨3￨f (￨3￨f List￨3￨f commits￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f testExpirationTimeDeletionPolicy￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e double￨3￨e SECONDS￨3￨e =￨3￨e 2.0￨3￨e ;￨3￨e boolean￨3￨e autoCommit￨3￨e =￨3￨e false￨3￨e ;￨3￨e boolean￨3￨e useCompoundFile￨3￨e =￨3￨e true￨3￨e ;￨3￨e Directory￨3￨e dir￨3￨e =￨3￨e new￨3￨e RAMDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e TestDeletionPolicy￨3￨e .￨3￨e ExpirationTimeDeletionPolicy￨3￨e policy￨3￨e =￨3￨e new￨3￨e TestDeletionPolicy￨3￨e .￨3￨e ExpirationTimeDeletionPolicy￨3￨e (￨3￨e dir￨3￨e ,￨3￨e SECONDS￨3￨e )￨3￨e ;￨3￨e IndexWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e IndexWriter￨3￨e (￨3￨e dir￨3￨e ,￨3￨e autoCommit￨3￨e ,￨3￨e new￨3￨e WhitespaceAnalyzer￨3￨e (￨3￨e )￨3￨e ,￨3￨e true￨3￨e ,￨3￨e policy￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e setUseCompoundFile￨3￨e (￨3￨e useCompoundFile￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e long￨3￨e lastDeleteTime￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 7￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l lastDeleteTime￨4￨e =￨4￨e System￨4￨e .￨4￨e currentTimeMillis￨4￨e (￨4￨e )￨4￨e ;￨4￨e writer￨4￨e =￨4￨e new￨4￨e IndexWriter￨4￨e (￨4￨e dir￨4￨e ,￨4￨e autoCommit￨4￨e ,￨4￨e new￨4￨e WhitespaceAnalyzer￨4￨e (￨4￨e )￨4￨e ,￨4￨e false￨4￨e ,￨4￨e policy￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e setUseCompoundFile￨4￨e (￨4￨e useCompoundFile￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c j￨5￨c =￨5￨c 0￨5￨c ;￨5￨c j￨5￨c <￨5￨c 17￨5￨c ;￨5￨c j￨5￨c ++￨5￨c )￨4￨l {￨4￨l addDoc￨5￨e (￨5￨e writer￨5￨e )￨5￨e ;￨5￨e }￨4￨l writer￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e Thread￨4￨e .￨4￨e sleep￨4￨e (￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e 1000.0￨4￨e *￨4￨e (￨4￨e SECONDS￨4￨e /￨4￨e 5.0￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l assertTrue￨3￨e (￨3￨e "no<seq2seq4repair_space>commits<seq2seq4repair_space>were<seq2seq4repair_space>deleted"￨3￨e ,￨3￨e (￨3￨e (￨3￨e policy￨3￨e .￨3￨e numDelete￨3￨e )￨3￨e >￨3￨e 0￨3￨e )￨3￨e )￨3￨e ;￨3￨e long￨3￨e gen￨3￨e =￨3￨e SegmentInfos￨3￨e .￨3￨e getCurrentSegmentGeneration￨3￨e (￨3￨e dir￨3￨e )￨3￨e ;￨3￨e String￨3￨e fileName￨3￨e =￨3￨e IndexFileNames￨3￨e .￨3￨e fileNameFromGeneration￨3￨e (￨3￨e SEGMENTS￨3￨e ,￨3￨e ""￨3￨e ,￨3￨e gen￨3￨e )￨3￨e ;￨3￨e dir￨3￨e .￨3￨e deleteFile￨3￨e (￨3￨e SEGMENTS_GEN￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l gen￨4￨c >￨4￨c 0￨4￨c )￨3￨l {￨3￨l try￨4￨f (￨4￨f )￨4￨f {￨4￨f IndexReader￨5￨e reader￨5￨e =￨5￨e IndexReader￨5￨e .￨5￨e open￨5￨e (￨5￨e dir￨5￨e )￨5￨e ;￨5￨e reader￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e fileName￨5￨e =￨5￨e IndexFileNames￨5￨e .￨5￨e fileNameFromGeneration￨5￨e (￨5￨e SEGMENTS￨5￨e ,￨5￨e ""￨5￨e ,￨5￨e gen￨5￨e )￨5￨e ;￨5￨e long￨5￨e modTime￨5￨e =￨5￨e dir￨5￨e .￨5￨e fileModified￨5￨e (￨5￨e fileName￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b assertTrue￨5￨b (￨5￨b (￨5￨b (￨5￨b "commit<seq2seq4repair_space>point<seq2seq4repair_space>was<seq2seq4repair_space>older<seq2seq4repair_space>than<seq2seq4repair_space>"￨5￨b +￨5￨b SECONDS￨5￨b )￨5￨b +￨5￨b "<seq2seq4repair_space>seconds<seq2seq4repair_space>but<seq2seq4repair_space>did<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>deleted"￨5￨b )￨5￨b ,￨5￨b (￨5￨b (￨5￨b lastDeleteTime￨5￨b -￨5￨b modTime￨5￨b )￨5￨b <￨5￨b (￨5￨b SECONDS￨5￨b *￨5￨b 1000￨5￨b )￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f break￨5￨e ;￨5￨e }￨4￨f dir￨4￨e .￨4￨e deleteFile￨4￨e (￨4￨e IndexFileNames￨4￨e .￨4￨e fileNameFromGeneration￨4￨e (￨4￨e SEGMENTS￨4￨e ,￨4￨e ""￨4￨e ,￨4￨e gen￨4￨e )￨4￨e )￨4￨e ;￨4￨e gen￨4￨e --￨4￨e ;￨4￨e }￨3￨l dir￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testKeepAllDeletionPolicy￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testKeepNoneOnInitDeletionPolicy￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testKeepLastNDeletionPolicy￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testKeepLastNDeletionPolicyWithReader￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testKeepLastNDeletionPolicyWithCreates￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addDoc￨2￨f (￨2￨f IndexWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SolrWriter￨1￨d extends￨1￨d DIHWriterBase￨1￨d implements￨1￨d DIHWriter￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d SolrWriter￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d static￨2￨d final￨2￨d String￨2￨d LAST_INDEX_KEY￨2￨d =￨2￨d "last_index_time"￨2￨d ;￨2￨d private￨2￨d final￨2￨d UpdateRequestProcessor￨2￨d processor￨2￨d ;￨2￨d SolrQueryRequest￨2￨d req￨2￨d ;￨2￨d public￨2￨d SolrWriter￨2￨d (￨2￨d UpdateRequestProcessor￨2￨d processor￨2￨d ,￨2￨d SolrQueryRequest￨2￨d req￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f upload￨2￨f (￨2￨f SolrInputDocument￨3￨p d￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f deleteDoc￨2￨f (￨2￨f Object￨3￨p id￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f SolrWriter￨4￨e .￨4￨e log￨4￨e .￨4￨e info￨4￨e (￨4￨e (￨4￨e "Deleting<seq2seq4repair_space>document:<seq2seq4repair_space>"￨4￨e +￨4￨e id￨4￨e )￨4￨e )￨4￨e ;￨4￨e DeleteUpdateCommand￨4￨e delCmd￨4￨e =￨4￨e new￨4￨e DeleteUpdateCommand￨4￨e (￨4￨e req￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b delCmd￨4￨b .￨4￨b id￨4￨b =￨4￨b id￨4￨b .￨4￨b toString￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b processor￨4￨e .￨4￨e processDelete￨4￨e (￨4￨e delCmd￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f SolrWriter￨4￨e .￨4￨e log￨4￨e .￨4￨e error￨4￨e (￨4￨e (￨4￨e "Exception<seq2seq4repair_space>while<seq2seq4repair_space>deleteing:<seq2seq4repair_space>"￨4￨e +￨4￨e id￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f deleteByQuery￨2￨f (￨2￨f String￨3￨p query￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f commit￨2￨f (￨2￨f boolean￨3￨p optimize￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f rollback￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f doDeleteAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f getResourceAsString￨2￨f (￨2￨f InputStream￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f getDocCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f Context￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d WebApplication￨1￨d extends￨1￨d Application￨1￨d {￨1￨d private￨2￨e Map￨2￨e bufferedResponses￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e IRequestCycleProcessor￨2￨e requestCycleProcessor￨2￨e ;￨2￨e private￨2￨e String￨2￨e sessionAttributePrefix￨2￨e ;￨2￨e private￨2￨f ISessionFactory￨2￨f sessionFactory￨2￨f =￨2￨f new￨2￨f ISessionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f Session￨3￨f newSession￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e WicketServlet￨2￨e wicketServlet￨2￨e ;￨2￨e public￨2￨f WebApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ApplicationSettings￨2￨f createApplicationSettings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getSessionAttributePrefix￨2￨f (￨2￨f final￨3￨p WebRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c sessionAttributePrefix￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j String￨4￨e servletPath￨4￨e =￨4￨e request￨4￨e .￨4￨e getServletPath￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j servletPath￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e WicketRuntimeException￨5￨e (￨5￨e "unable<seq2seq4repair_space>to<seq2seq4repair_space>retrieve<seq2seq4repair_space>servlet<seq2seq4repair_space>path"￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b sessionAttributePrefix￨4￨b =￨4￨b (￨4￨b "wicket-"￨4￨b +￨4￨b servletPath￨4￨b )￨4￨b +￨4￨b "-"￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e sessionAttributePrefix￨3￨e ;￨3￨e }￨2￨f public￨2￨f final￨2￨f WicketServlet￨2￨f getWicketServlet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mount￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p IRequestTargetEncoderDecoder￨3￨p encoder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mountBookmarkablePage￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Class￨3￨p bookmarkablePageClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mountBookmarkablePage￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Class￨3￨p bookmarkablePageClass￨3￨p ,￨3￨p String￨3￨p pageMapName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mountPackage￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Class￨3￨p classOfPackageToMount￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setSessionFactory￨2￨f (￨2￨f final￨3￨p ISessionFactory￨3￨p sessionFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setWicketServlet￨2￨f (￨2￨f final￨3￨p WicketServlet￨3￨p wicketServlet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f unmount￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleFactory￨2￨f getDefaultRequestCycleFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleProcessor￨2￨f getDefaultRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISessionFactory￨2￨f getSessionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalDestroy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalInit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WebRequest￨2￨f newWebRequest￨2￨f (￨2￨f final￨3￨p HttpServletRequest￨3￨p servletRequest￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WebResponse￨2￨f newWebResponse￨2￨f (￨2￨f final￨3￨p HttpServletResponse￨3￨p servletResponse￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f addBufferedResponse￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p ,￨3￨p String￨3￨p bufferId￨3￨p ,￨3￨p BufferedResponse￨3￨p renderedResponse￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f clearBufferedResponses￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f WebSession￨2￨f getSession￨2￨f (￨2￨f final￨3￨p WebRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f BufferedResponse￨2￨f popBufferedResponse￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p ,￨3￨p String￨3￨p bufferId￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkMountPath￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CCMCheck￨1￨d extends￨1￨d Continuus￨1￨d {￨1￨d private￨2￨e File￨2￨e file￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e comment￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e task￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e Vector￨2￨e filesets￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f CCMCheck￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFile￨2￨f (￨2￨f File￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getComment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setComment￨2￨f (￨2￨f String￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTask￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTask￨2￨f (￨2￨f String￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFileset￨2￨f (￨2￨f FileSet￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doit￨2￨f (￨2￨f )￨2￨f {￨2￨f Commandline￨3￨e commandLine￨3￨e =￨3￨e new￨3￨e Commandline￨3￨e (￨3￨e )￨3￨e ;￨3￨e commandLine￨3￨e .￨3￨e setExecutable￨3￨e (￨3￨e getCcmCommand￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e commandLine￨3￨e .￨3￨e createArgument￨3￨e (￨3￨e )￨3￨e .￨3￨e setValue￨3￨e (￨3￨e getCcmAction￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e checkOptions￨3￨e (￨3￨e commandLine￨3￨e )￨3￨e ;￨3￨e int￨3￨e result￨3￨e =￨3￨e run￨3￨e (￨3￨e commandLine￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b Execute￨3￨b .￨3￨b isFailure￨3￨b (￨3￨b 0￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b String￨3￨e msg￨3￨e =￨3￨e "Failed<seq2seq4repair_space>executing:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e commandLine￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e throw￨3￨e new￨3￨e BuildException￨3￨e (￨3￨e msg￨3￨e ,￨3￨e getLocation￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f checkOptions￨2￨f (￨2￨f Commandline￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_COMMENT￨2￨e =￨2￨e "/comment"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FLAG_TASK￨2￨e =￨2￨e "/task"￨2￨e ;￨2￨e }￨1￨d
public￨1￨d class￨1￨d GoModelToElements￨1￨d implements￨1￨d TreeModelPrereqs￨1￨d {￨1￨d public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b Localizer￨3￨b .￨3￨b localize￨3￨b (￨3￨b "Tree"￨3￨b ,￨3￨b "Namespace->Owned<seq2seq4repair_space>Element"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Object￨2￨f getRoot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRoot￨2￨f (￨2￨f Object￨3￨p r￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getChild￨2￨f (￨2￨f Object￨3￨p parent￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getChildCount￨2￨f (￨2￨f Object￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getIndexOfChild￨2￨f (￨2￨f Object￨3￨p parent￨3￨p ,￨3￨p Object￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLeaf￨2￨f (￨2￨f Object￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f valueForPathChanged￨2￨f (￨2￨f TreePath￨3￨p path￨3￨p ,￨3￨p Object￨3￨p newValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTreeModelListener￨2￨f (￨2￨f TreeModelListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeTreeModelListener￨2￨f (￨2￨f TreeModelListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getPrereqs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getProvidedTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JoranConfigurator￨1￨d extends￨1￨d ConfiguratorBase￨1￨d {￨1￨d Interpreter￨2￨e joranInterpreter￨2￨e ;￨2￨e LoggerRepository￨2￨e repository￨2￨e ;￨2￨e boolean￨2￨e listAppnderAttached￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f JoranConfigurator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f interface￨2￨f ParseAction￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f parse￨3￨f (￨3￨f final￨3￨f SAXParser￨3￨f parser￨3￨f ,￨3￨f final￨3￨f DefaultHandler￨3￨f handler￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f ,￨3￨f SAXException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p URL￨3￨p url￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p String￨3￨p filename￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p File￨3￨p file￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p InputSource￨3￨p source￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p InputStream￨3￨p stream￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f doConfigure￨2￨f (￨2￨f final￨3￨p JoranConfigurator￨3￨p .￨3￨p ParseAction￨3￨p action￨3￨p ,￨3￨p final￨3￨p LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e repository￨3￨e =￨3￨e repository￨3￨e ;￨3￨e selfInitialize￨3￨e (￨3￨e this￨3￨e .￨3￨e repository￨3￨e )￨3￨e ;￨3￨e ExecutionContext￨3￨e ec￨3￨e =￨3￨e joranInterpreter￨3￨e .￨3￨e getExecutionContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e errorList￨3￨e =￨3￨e ec￨3￨e .￨3￨e getErrorList￨3￨e (￨3￨e )￨3￨e ;￨3￨e SAXParser￨3￨e saxParser￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f SAXParserFactory￨4￨e spf￨4￨e =￨4￨e SAXParserFactory￨4￨e .￨4￨e newInstance￨4￨e (￨4￨e )￨4￨e ;￨4￨e spf￨4￨e .￨4￨e setValidating￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e spf￨4￨e .￨4￨e setNamespaceAware￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e saxParser￨4￨e =￨4￨e spf￨4￨e .￨4￨e newSAXParser￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p pce￨4￨p )￨3￨f {￨3￨f final￨4￨e String￨4￨e errMsg￨4￨e =￨4￨e "Parser<seq2seq4repair_space>configuration<seq2seq4repair_space>error<seq2seq4repair_space>occured"￨4￨e ;￨4￨e getLogger￨4￨e (￨4￨e repository￨4￨e )￨4￨e .￨4￨e error￨4￨e (￨4￨e errMsg￨4￨e ,￨4￨e pce￨4￨e )￨4￨e ;￨4￨e ec￨4￨e .￨4￨e addError￨4￨e (￨4￨e new￨4￨e ErrorItem￨4￨e (￨4￨e errMsg￨4￨e ,￨4￨e pce￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨f <START_BUG>￨3￨b JoranDocument￨3￨b document￨3￨b =￨3￨b new￨3￨b JoranDocument￨3￨b (￨3￨b errorList￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b try￨3￨f (￨3￨f )￨3￨f {￨3￨f action￨4￨e .￨4￨e parse￨4￨e (￨4￨e saxParser￨4￨e ,￨4￨e document￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ie￨4￨p )￨3￨f {￨3￨f final￨4￨e String￨4￨e errMsg￨4￨e =￨4￨e "I/O<seq2seq4repair_space>error<seq2seq4repair_space>occured<seq2seq4repair_space>while<seq2seq4repair_space>parsing<seq2seq4repair_space>xml<seq2seq4repair_space>file"￨4￨e ;￨4￨e getLogger￨4￨e (￨4￨e repository￨4￨e )￨4￨e .￨4￨e error￨4￨e (￨4￨e errMsg￨4￨e ,￨4￨e ie￨4￨e )￨4￨e ;￨4￨e ec￨4￨e .￨4￨e addError￨4￨e (￨4￨e new￨4￨e ErrorItem￨4￨e (￨4￨e errMsg￨4￨e ,￨4￨e ie￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f final￨4￨e String￨4￨e errMsg￨4￨e =￨4￨e "Problem<seq2seq4repair_space>parsing<seq2seq4repair_space>XML<seq2seq4repair_space>document.<seq2seq4repair_space>See<seq2seq4repair_space>previously<seq2seq4repair_space>reported<seq2seq4repair_space>errors.<seq2seq4repair_space>Abandoning<seq2seq4repair_space>all<seq2seq4repair_space>further<seq2seq4repair_space>processing."￨4￨e ;￨4￨e getLogger￨4￨e (￨4￨e repository￨4￨e )￨4￨e .￨4￨e error￨4￨e (￨4￨e errMsg￨4￨e ,￨4￨e ex￨4￨e )￨4￨e ;￨4￨e errorList￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e ErrorItem￨4￨e (￨4￨e errMsg￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨f ec￨3￨e .￨3￨e pushObject￨3￨e (￨3￨e repository￨3￨e )￨3￨e ;￨3￨e String￨3￨e errMsg￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f attachListAppender￨4￨e (￨4￨e repository￨4￨e )￨4￨e ;￨4￨e document￨4￨e .￨4￨e replay￨4￨e (￨4￨e joranInterpreter￨4￨e )￨4￨e ;￨4￨e getLogger￨4￨e (￨4￨e repository￨4￨e )￨4￨e .￨4￨e debug￨4￨e (￨4￨e "Finished<seq2seq4repair_space>parsing."￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f SAXException￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f detachListAppender￨4￨e (￨4￨e repository￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f List￨2￨f getErrorList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f selfInitialize￨2￨f (￨2￨f LoggerRepository￨3￨p repository￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ExecutionContext￨2￨f getExecutionContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d OSGiSubsystemAdd￨1￨d extends￨1￨d AbstractBoottimeAddStepHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e OSGiSubsystemAdd￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e OSGiSubsystemAdd￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e OSGiRuntimeResource￨2￨e resource￨2￨e ;￨2￨e private￨2￨f OSGiSubsystemAdd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Resource￨2￨f createResource￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performBoottime￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f ,￨2￨f final￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f ,￨2￨f final￨2￨f List￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f newControllers￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f OSGiLogger￨3￨e .￨3￨e LOGGER￨3￨e .￨3￨e infoActivatingSubsystem￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Activation￨3￨e activation￨3￨e =￨3￨e Activation￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e ACTIVATION￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e .￨3￨e toUpperCase￨3￨e (￨3￨e Locale￨3￨e .￨3￨e ENGLISH￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e context￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e InitialDeploymentTracker￨3￨e deploymentTracker￨3￨e =￨3￨e new￨3￨e InitialDeploymentTracker￨3￨e (￨3￨e context￨3￨e ,￨3￨e verificationHandler￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModuleRegistrationTracker￨3￨e registrationTracker￨3￨e =￨3￨e new￨3￨e ModuleRegistrationTracker￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e SubsystemExtension￨3￨e >￨3￨e extensions￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e SubsystemExtension￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨d Iterator￨3￨d <￨3￨d SubsystemExtension￨3￨d >￨3￨d services￨3￨d =￨3￨d ServiceLoader￨3￨d .￨3￨d load￨3￨d (￨3￨d SubsystemExtension￨3￨d .￨3￨d class￨3￨d ,￨3￨d getClass￨3￨d (￨3￨d )￨3￨d .￨3￨d getClassLoader￨3￨d (￨3￨d )￨3￨d )￨3￨d .￨3￨d iterator￨3￨d (￨3￨d )￨3￨d ;￨3￨d while￨3￨d (￨3￨d services￨3￨d .￨3￨d hasNext￨3￨d (￨3￨d )￨3￨d )￨3￨d {￨3￨d extensions￨4￨e .￨4￨e add￨4￨e (￨4￨e services￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨d context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f OperationStepHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f execute￨4￨f (￨4￨f OperationContext￨4￨f context￨4￨f ,￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b newControllers￨5￨b .￨5￨b add￨5￨b (￨5￨b FrameworkBootstrapService￨5￨b .￨5￨b addService￨5￨b (￨5￨b serviceTarget￨5￨b ,￨5￨b resource￨5￨b ,￨5￨b extensions￨5￨b ,￨5￨b verificationHandler￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b newControllers￨5￨e .￨5￨e add￨5￨e (￨5￨e registrationTracker￨5￨e .￨5￨e install￨5￨e (￨5￨e serviceTarget￨5￨e ,￨5￨e verificationHandler￨5￨e )￨5￨e )￨5￨e ;￨5￨e context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e NOOP_ROLLBACK_HANDLER￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f AbstractDeploymentChainStep￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f protected￨4￨f void￨4￨f execute￨4￨f (￨4￨f DeploymentProcessorTarget￨5￨p processorTarget￨5￨p )￨4￨f {￨4￨f processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e STRUCTURE￨5￨e ,￨5￨e STRUCTURE_OSGI_MANIFEST￨5￨e ,￨5￨e new￨5￨e OSGiManifestStructureProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e STRUCTURE￨5￨e ,￨5￨e STRUCTURE_BUNDLE_SUB_DEPLOYMENT￨5￨e ,￨5￨e new￨5￨e BundleSubDeploymentMarkingProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e PARSE￨5￨e ,￨5￨e PARSE_OSGI_BUNDLE_INFO￨5￨e ,￨5￨e new￨5￨e OSGiBundleInfoParseProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e PARSE￨5￨e ,￨5￨e PARSE_OSGI_PROPERTIES￨5￨e ,￨5￨e new￨5￨e OSGiXServiceParseProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e PARSE￨5￨e ,￨5￨e PARSE_OSGI_DEPLOYMENT￨5￨e ,￨5￨e new￨5￨e BundleDeploymentProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e PARSE￨5￨e ,￨5￨e PARSE_OSGI_COMPONENTS￨5￨e ,￨5￨e new￨5￨e OSGiComponentParseProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e PARSE￨5￨e ,￨5￨e PARSE_OSGI_SUBSYSTEM_ACTIVATOR￨5￨e ,￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e osgi￨5￨e .￨5￨e deployment￨5￨e .￨5￨e FrameworkActivateProcessor￨5￨e (￨5￨e deploymentTracker￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e REGISTER￨5￨e ,￨5￨e REGISTER_BUNDLE_INSTALL￨5￨e ,￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e osgi￨5￨e .￨5￨e deployment￨5￨e .￨5￨e BundleInstallProcessor￨5￨e (￨5￨e deploymentTracker￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e DEPENDENCIES￨5￨e ,￨5￨e DEPENDENCIES_BUNDLE￨5￨e ,￨5￨e new￨5￨e BundleDependenciesProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e CONFIGURE_MODULE￨5￨e ,￨5￨e CONFIGURE_RESOLVE_BUNDLE￨5￨e ,￨5￨e new￨5￨e BundleResolveProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e CONFIGURE_MODULE￨5￨e ,￨5￨e CONFIGURE_DEFERRED_PHASE￨5￨e ,￨5￨e new￨5￨e DeferredPhaseProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e INSTALL￨5￨e ,￨5￨e INSTALL_RESOLVER_MODULE￨5￨e ,￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e osgi￨5￨e .￨5￨e deployment￨5￨e .￨5￨e ModuleRegisterProcessor￨5￨e (￨5￨e registrationTracker￨5￨e )￨5￨e )￨5￨e ;￨5￨e processorTarget￨5￨e .￨5￨e addDeploymentProcessor￨5￨e (￨5￨e SUBSYSTEM_NAME￨5￨e ,￨5￨e INSTALL￨5￨e ,￨5￨e INSTALL_BUNDLE_ACTIVATE￨5￨e ,￨5￨e new￨5￨e BundleActivateProcessor￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l SubsystemExtension￨4￨c extension￨4￨c :￨4￨c extensions￨4￨c )￨3￨l {￨3￨l extension￨4￨e .￨4￨e performBoottime￨4￨e (￨4￨e context￨4￨e ,￨4￨e operation￨4￨e ,￨4￨e model￨4￨e ,￨4￨e verificationHandler￨4￨e ,￨4￨e newControllers￨4￨e )￨4￨e ;￨4￨e }￨3￨l newControllers￨3￨e .￨3￨e add￨3￨e (￨3￨e SubsystemState￨3￨e .￨3￨e addService￨3￨e (￨3￨e serviceTarget￨3￨e ,￨3￨e activation￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ErfTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErf0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErf1960￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErf2576￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErf2807￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErf3291￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testLargeValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfGnu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfcGnu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfcMaple￨2￨f (￨2￨f )￨2￨f {￨2￨f double￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f ref￨3￨f =￨3￨f new￨3￨f double￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f double￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f }￨3￨f ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 15￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b final￨4￨b double￨4￨b result￨4￨b =￨4￨b 0.5￨4￨b *￨4￨b (￨4￨b Erf￨4￨b .￨4￨b erfc￨4￨b (￨4￨b (￨4￨b (￨4￨b ref￨4￨b [￨4￨b i￨4￨b ]￨4￨b [￨4￨b 0￨4￨b ]￨4￨b )￨4￨b /￨4￨b (￨4￨b Math￨4￨b .￨4￨b sqrt￨4￨b (￨4￨b 2￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Assert￨4￨e .￨4￨e assertEquals￨4￨e (￨4￨e ref￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 1￨4￨e ]￨4￨e ,￨4￨e result￨4￨e ,￨4￨e 1.0E-15￨4￨e )￨4￨e ;￨4￨e TestUtils￨4￨e .￨4￨e assertRelativelyEquals￨4￨e (￨4￨e ref￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 1￨4￨e ]￨4￨e ,￨4￨e result￨4￨e ,￨4￨e 1.0E-13￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testTwoArgumentErf￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfInvNaN￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfInvInfinite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfInv￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfcInvNaN￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfcInvInfinite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testErfcInv￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Rpm￨1￨d extends￨1￨d AbstractTask￨1￨d {￨1￨d private￨2￨e String￨2￨e m_command￨2￨e =￨2￨e "-bb"￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e m_cleanBuildDir￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e m_removeSpec￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e m_removeSource￨2￨e ;￨2￨e private￨2￨e String￨2￨e m_specFile￨2￨e ;￨2￨e private￨2￨e File￨2￨e m_topDir￨2￨e ;￨2￨e public￨2￨f void￨2￨f setCleanBuildDir￨2￨f (￨2￨f boolean￨3￨p cleanBuildDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCommand￨2￨f (￨2￨f final￨3￨p String￨3￨p command￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRemoveSource￨2￨f (￨2￨f final￨3￨p boolean￨3￨p removeSource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRemoveSpec￨2￨f (￨2￨f final￨3￨p boolean￨3￨p removeSpec￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSpecFile￨2￨f (￨2￨f final￨2￨f String￨2￨f specFile￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTopDir￨2￨f (￨2￨f final￨3￨p File￨3￨p topDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e Commandline￨3￨e cmd￨3￨e =￨3￨e createCommand￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Execute2￨3￨e exe￨3￨e =￨3￨e new￨3￨e Execute2￨3￨e (￨3￨e )￨3￨e ;￨3￨e setupLogger￨3￨e (￨3￨e exe￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c m_topDir￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j m_topDir￨4￨e =￨4￨e getBaseDirectory￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j exe￨3￨e .￨3￨e setWorkingDirectory￨3￨e (￨3￨e m_topDir￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b exe￨3￨b .￨3￨b setCommandline￨3￨b (￨3￨b cmd￨3￨b .￨3￨b getCommandline￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e String￨4￨e message￨4￨e =￨4￨e (￨4￨e "Building<seq2seq4repair_space>the<seq2seq4repair_space>RPM<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e m_specFile￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>file"￨4￨e ;￨4￨e getLogger￨4￨e (￨4￨e )￨4￨e .￨4￨e info￨4￨e (￨4￨e message￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j 0￨5￨c !=￨5￨c (￨5￨c exe￨5￨c .￨5￨c execute￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e TaskException￨5￨e (￨5￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>execute<seq2seq4repair_space>rpm"￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e TaskException￨4￨e (￨4￨e "Error"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f Commandline￨2￨f createCommand￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DistributableSessionManagerFactoryBuilder￨1￨d implements￨1￨d org￨1￨d .￨1￨d wildfly￨1￨d .￨1￨d extension￨1￨d .￨1￨d undertow￨1￨d .￨1￨d session￨1￨d .￨1￨d DistributableSessionManagerFactoryBuilder￨1￨d {￨1￨d private￨2￨e final￨2￨e SessionManagerFactoryBuilder￨2￨e builder￨2￨e ;￨2￨e public￨2￨f DistributableSessionManagerFactoryBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DistributableSessionManagerFactoryBuilder￨2￨f (￨2￨f SessionManagerFactoryBuilder￨3￨p builder￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServiceBuilder￨2￨f <￨2￨f SessionManagerFactory￨2￨f >￨2￨f build￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p ServiceName￨3￨p name￨3￨p ,￨3￨p ServiceName￨3￨p deploymentServiceName￨3￨p ,￨3￨p Module￨3￨p module￨3￨p ,￨3￨p JBossWebMetaData￨3￨p metaData￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b ServiceName￨3￨b clusteringServiceName￨3￨b =￨3￨b name￨3￨b .￨3￨b append￨3￨b (￨3￨b "distributable"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b this￨3￨e .￨3￨e builder￨3￨e .￨3￨e buildDeploymentDependency￨3￨e (￨3￨e target￨3￨e ,￨3￨e clusteringServiceName￨3￨e ,￨3￨e deploymentServiceName￨3￨e ,￨3￨e module￨3￨e ,￨3￨e metaData￨3￨e )￨3￨e .￨3￨e setInitialMode￨3￨e (￨3￨e ON_DEMAND￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e DistributableSessionManagerFactoryService￨3￨e .￨3￨e build￨3￨e (￨3￨e target￨3￨e ,￨3￨e name￨3￨e ,￨3￨e clusteringServiceName￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ProgressMonitorJobsDialog￨1￨d extends￨1￨d ProgressMonitorDialog￨1￨d {￨1￨d private￨2￨e NewProgressViewer￨2￨e viewer￨2￨e ;￨2￨e private￨2￨e int￨2￨e viewerHeight￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e Composite￨2￨e viewerComposite￨2￨e ;￨2￨e private￨2￨e Button￨2￨e detailsButton￨2￨e ;￨2￨e private￨2￨e long￨2￨e watchTime￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e alreadyClosed￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e IProgressMonitor￨2￨e wrapperedMonitor￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e enableDetailsButton￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f ProgressMonitorJobsDialog￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createDialogArea￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f handleDetailsButtonSelect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createButtonsForButtonBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createSpacer￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createDetailsButton￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createButtonBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f clearCursors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateForSetBlocked￨2￨f (￨2￨f IStatus￨3￨p reason￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f boolean￨2￨f fork￨2￨f ,￨2￨f boolean￨2￨f cancelable￨2￨f ,￨2￨f IRunnableWithProgress￨2￨f runnable￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f ,￨2￨f InvocationTargetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f enableDetails￨2￨f (￨2￨f boolean￨3￨p enableState￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f watchTicks￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createWrapperedMonitor￨2￨f (￨2￨f )￨2￨f {￨2￨f wrapperedMonitor￨3￨f =￨3￨f new￨3￨f IProgressMonitorWithBlocking￨3￨f (￨3￨f )￨3￨f {￨3￨f IProgressMonitor￨4￨e superMonitor￨4￨e =￨4￨e ProgressMonitorJobsDialog￨4￨e .￨4￨e super￨4￨e .￨4￨e getProgressMonitor￨4￨e (￨4￨e )￨4￨e ;￨4￨e public￨4￨f void￨4￨f beginTask￨4￨f (￨4￨f String￨5￨p name￨5￨p ,￨5￨p int￨5￨p totalWork￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e beginTask￨5￨e (￨5￨e name￨5￨e ,￨5￨e totalWork￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f private￨4￨f void￨4￨f checkTicking￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c watchTime￨6￨c )￨6￨c <￨6￨c 0￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c System￨6￨c .￨6￨c currentTimeMillis￨6￨c (￨6￨c )￨6￨c )￨6￨c -￨6￨c (￨6￨c watchTime￨6￨c )￨6￨c )￨6￨c >￨6￨c (￨6￨c ProgressManager￨6￨c .￨6￨c getInstance￨6￨c (￨6￨c )￨6￨c .￨6￨c getLongOperationTime￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j watchTime￨6￨e =￨6￨e -￨6￨e 1￨6￨e ;￨6￨e openDialog￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f private￨4￨f void￨4￨f openDialog￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j !￨6￨c (￨6￨c PlatformUI￨6￨c .￨6￨c isWorkbenchRunning￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j PlatformUI￨5￨f .￨5￨f getWorkbench￨5￨f (￨5￨f )￨5￨f .￨5￨f getDisplay￨5￨f (￨5￨f )￨5￨f .￨5￨f syncExec￨5￨f (￨5￨f new￨5￨f Runnable￨5￨f (￨5￨f )￨5￨f {￨5￨f public￨6￨f void￨6￨f run￨6￨f (￨6￨f )￨6￨f {￨6￨f <START_BUG>￨7￨b if￨7￨b (￨7￨b !￨7￨b (￨7￨b ProgressManagerUtil￨7￨b .￨7￨b safeToOpen￨7￨b (￨7￨b ProgressMonitorJobsDialog￨7￨b .￨7￨b this￨7￨b )￨7￨b )￨7￨b )￨7￨b {￨7￨b <END_BUG>￨7￨b watchTicks￨7￨e (￨7￨e )￨7￨e ;￨7￨e return￨7￨e ;￨7￨e if￨7￨j (￨7￨j !￨8￨c (￨8￨c alreadyClosed￨8￨c )￨8￨c )￨7￨j {￨7￨j open￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f done￨4￨f (￨4￨f )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e done￨5￨e (￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f internalWorked￨4￨f (￨4￨f double￨5￨p work￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e internalWorked￨5￨e (￨5￨e work￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f boolean￨4￨f isCanceled￨4￨f (￨4￨f )￨4￨f {￨4￨f return￨5￨e superMonitor￨5￨e .￨5￨e isCanceled￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f setCanceled￨4￨f (￨4￨f boolean￨5￨p value￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e setCanceled￨5￨e (￨5￨e value￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f setTaskName￨4￨f (￨4￨f String￨5￨p name￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e setTaskName￨5￨e (￨5￨e name￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f subTask￨4￨f (￨4￨f String￨5￨p name￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e subTask￨5￨e (￨5￨e name￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f worked￨4￨f (￨4￨f int￨5￨p work￨5￨p )￨4￨f {￨4￨f superMonitor￨5￨e .￨5￨e worked￨5￨e (￨5￨e work￨5￨e )￨5￨e ;￨5￨e checkTicking￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f clearBlocked￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c superMonitor￨6￨c )￨6￨c instanceof￨6￨c IProgressMonitorWithBlocking￨6￨c )￨5￨j {￨5￨j (￨6￨e (￨6￨e IProgressMonitorWithBlocking￨6￨e )￨6￨e (￨6￨e superMonitor￨6￨e )￨6￨e )￨6￨e .￨6￨e clearBlocked￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f public￨4￨f void￨4￨f setBlocked￨4￨f (￨4￨f IStatus￨5￨p reason￨5￨p )￨4￨f {￨4￨f openDialog￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c superMonitor￨6￨c )￨6￨c instanceof￨6￨c IProgressMonitorWithBlocking￨6￨c )￨5￨j {￨5￨j (￨6￨e (￨6￨e IProgressMonitorWithBlocking￨6￨e )￨6￨e (￨6￨e superMonitor￨6￨e )￨6￨e )￨6￨e .￨6￨e setBlocked￨6￨e (￨6￨e reason￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f ;￨3￨e }￨2￨f public￨2￨f IProgressMonitor￨2￨f getProgressMonitor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Tstamp￨1￨d extends￨1￨d Task￨1￨d {￨1￨d private￨2￨e Vector￨2￨e customFormats￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e prefix￨2￨e =￨2￨e ""￨2￨e ;￨2￨e public￨2￨f void￨2￨f setPrefix￨2￨f (￨2￨f String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f Date￨4￨e d￨4￨e =￨4￨e new￨4￨e Date￨4￨e (￨4￨e )￨4￨e ;￨4￨e Enumeration￨4￨e i￨4￨e =￨4￨e customFormats￨4￨e .￨4￨e elements￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l i￨5￨c .￨5￨c hasMoreElements￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l Tstamp￨5￨e .￨5￨e CustomFormat￨5￨e cts￨5￨e =￨5￨e (￨5￨e (￨5￨e Tstamp￨5￨e .￨5￨e CustomFormat￨5￨e )￨5￨e (￨5￨e i￨5￨e .￨5￨e nextElement￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b cts￨5￨b .￨5￨b execute￨5￨b (￨5￨b getProject￨5￨b (￨5￨b )￨5￨b ,￨5￨b d￨5￨b ,￨5￨b location￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨l SimpleDateFormat￨4￨e dstamp￨4￨e =￨4￨e new￨4￨e SimpleDateFormat￨4￨e (￨4￨e "yyyyMMdd"￨4￨e )￨4￨e ;￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e setNewProperty￨4￨e (￨4￨e (￨4￨e (￨4￨e prefix￨4￨e )￨4￨e +￨4￨e "DSTAMP"￨4￨e )￨4￨e ,￨4￨e dstamp￨4￨e .￨4￨e format￨4￨e (￨4￨e d￨4￨e )￨4￨e )￨4￨e ;￨4￨e SimpleDateFormat￨4￨e tstamp￨4￨e =￨4￨e new￨4￨e SimpleDateFormat￨4￨e (￨4￨e "HHmm"￨4￨e )￨4￨e ;￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e setNewProperty￨4￨e (￨4￨e (￨4￨e (￨4￨e prefix￨4￨e )￨4￨e +￨4￨e "TSTAMP"￨4￨e )￨4￨e ,￨4￨e tstamp￨4￨e .￨4￨e format￨4￨e (￨4￨e d￨4￨e )￨4￨e )￨4￨e ;￨4￨e SimpleDateFormat￨4￨e today￨4￨e =￨4￨e new￨4￨e SimpleDateFormat￨4￨e (￨4￨e "MMMM<seq2seq4repair_space>d<seq2seq4repair_space>yyyy"￨4￨e ,￨4￨e Locale￨4￨e .￨4￨e US￨4￨e )￨4￨e ;￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e setNewProperty￨4￨e (￨4￨e (￨4￨e (￨4￨e prefix￨4￨e )￨4￨e +￨4￨e "TODAY"￨4￨e )￨4￨e ,￨4￨e today￨4￨e .￨4￨e format￨4￨e (￨4￨e d￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e BuildException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f Tstamp￨2￨f .￨2￨f CustomFormat￨2￨f createFormat￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d class￨2￨d CustomFormat￨2￨d {￨2￨d private￨3￨e TimeZone￨3￨e timeZone￨3￨e ;￨3￨e private￨3￨e String￨3￨e propertyName￨3￨e ;￨3￨e private￨3￨e String￨3￨e pattern￨3￨e ;￨3￨e private￨3￨e String￨3￨e language￨3￨e ;￨3￨e private￨3￨e String￨3￨e country￨3￨e ;￨3￨e private￨3￨e String￨3￨e variant￨3￨e ;￨3￨e private￨3￨e int￨3￨e offset￨3￨e =￨3￨e 0￨3￨e ;￨3￨e private￨3￨e int￨3￨e field￨3￨e =￨3￨e Calendar￨3￨e .￨3￨e DATE￨3￨e ;￨3￨e private￨3￨e String￨3￨e prefix￨3￨e =￨3￨e ""￨3￨e ;￨3￨e public￨3￨f CustomFormat￨3￨f (￨3￨f String￨4￨p prefix￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setProperty￨3￨f (￨3￨f String￨4￨p propertyName￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setPattern￨3￨f (￨3￨f String￨4￨p pattern￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setLocale￨3￨f (￨3￨f String￨4￨p locale￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setTimezone￨3￨f (￨3￨f String￨4￨p id￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setOffset￨3￨f (￨3￨f int￨4￨p offset￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setUnit￨3￨f (￨3￨f String￨4￨p unit￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setUnit￨3￨f (￨3￨f Tstamp￨4￨p .￨4￨p Unit￨4￨p unit￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f execute￨3￨f (￨3￨f Project￨4￨p project￨4￨p ,￨4￨p Date￨4￨p date￨4￨p ,￨4￨p Location￨4￨p location￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d Unit￨2￨d extends￨2￨d EnumeratedAttribute￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e String￨3￨e MILLISECOND￨3￨e =￨3￨e "millisecond"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e SECOND￨3￨e =￨3￨e "second"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e MINUTE￨3￨e =￨3￨e "minute"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e HOUR￨3￨e =￨3￨e "hour"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e DAY￨3￨e =￨3￨e "day"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e WEEK￨3￨e =￨3￨e "week"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e MONTH￨3￨e =￨3￨e "month"￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e String￨3￨e YEAR￨3￨e =￨3￨e "year"￨3￨e ;￨3￨e private￨3￨f static￨3￨f final￨3￨f String￨3￨f [￨3￨f ]￨3￨f units￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e private￨3￨e Hashtable￨3￨e calendarFields￨3￨e =￨3￨e new￨3￨e Hashtable￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f Unit￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f getCalendarField￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getValues￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d AttachmentModel￨1￨d {￨1￨d private￨2￨e Folder￨2￨e folder￨2￨e ;￨2￨e private￨2￨e Object￨2￨e uid￨2￨e ;￨2￨e private￨2￨e List￨2￨e displayedMimeParts￨2￨e ;￨2￨e private￨2￨e MimePartTree￨2￨e collection￨2￨e ;￨2￨e public￨2￨f AttachmentModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setFolder￨2￨f (￨2￨f Folder￨3￨p folder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setUid￨2￨f (￨2￨f Object￨3￨p uid￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Folder￨2￨f getFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getUid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MimePartTree￨2￨f getCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCollection￨2￨f (￨2￨f MimePartTree￨3￨p collection￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e collection￨3￨e =￨3￨e collection￨3￨e ;￨3￨e displayedMimeParts￨3￨e =￨3￨e collection￨3￨e .￨3￨e getAllLeafs￨3￨e (￨3￨e )￨3￨e ;￨3￨e MimePart￨3￨e bodyPart￨3￨e =￨3￨e collection￨3￨e .￨3￨e getFirstTextPart￨3￨e (￨3￨e "plain"￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j bodyPart￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j MimePart￨4￨e bodyParent￨4￨e =￨4￨e (￨4￨e (￨4￨e MimePart￨4￨e )￨4￨e (￨4￨e bodyPart￨4￨e .￨4￨e getParent￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j bodyParent￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j bodyParent￨6￨c .￨6￨c getHeader￨6￨c (￨6￨c )￨6￨c .￨6￨c contentSubtype￨6￨c .￨6￨c equals￨6￨c (￨6￨c "alternative"￨6￨c )￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b Vector￨6￨b bodyParts￨6￨b =￨6￨b bodyParent￨6￨b .￨6￨b getChilds￨6￨b (￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b displayedMimeParts￨6￨e .￨6￨e removeAll￨6￨e (￨6￨e bodyParts￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j displayedMimeParts￨6￨e .￨6￨e remove￨6￨e (￨6￨e bodyPart￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j }￨2￨f public￨2￨f List￨2￨f getDisplayedMimeParts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDisplayedMimeParts￨2￨f (￨2￨f List￨3￨p displayedMimeParts￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d PagedTableWithAlternatingRowStyle￨1￨d extends￨1￨d Table￨1￨d {￨1￨d public￨2￨f PagedTableWithAlternatingRowStyle￨2￨f (￨2￨f final￨3￨p String￨3￨p componentName￨3￨p ,￨3￨p final￨3￨p List￨3￨p data￨3￨p ,￨3￨p int￨3￨p pageSize￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f populateItem￨2￨f (￨2￨f final￨3￨p ListItem￨3￨p listItem￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b listItem￨3￨b .￨3￨b addAttributeModifier￨3￨b (￨3￨b new￨3￨b ComponentTagAttributeModifier￨3￨b (￨3￨b "class"￨3￨b ,￨3￨b new￨3￨b wicket￨3￨b .￨3￨b Model￨3￨b (￨3￨b (￨3￨b listItem￨3￨b .￨3￨b isEvenIndex￨3￨b (￨3￨b )￨3￨b ?￨3￨b "even"￨3￨b :￨3￨b "odd"￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FormatterElement￨1￨d {￨1￨d private￨2￨e OutputStream￨2￨e out￨2￨e =￨2￨e new￨2￨e KeepAliveOutputStream￨2￨e (￨2￨e System￨2￨e .￨2￨e out￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e classname￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e filters￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f setType￨2￨f (￨2￨f FormatterElement￨3￨p .￨3￨p TypeAttribute￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setClassname￨2￨f (￨2￨f String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFilters￨2￨f (￨2￨f String￨3￨p filters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFilter￨2￨f (￨2￨f FilterElement￨3￨p fe￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOutput￨2￨f (￨2￨f OutputAttribute￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Formatter￨2￨f createFormatter￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d TypeAttribute￨2￨d extends￨2￨d EnumeratedAttribute￨2￨d {￨2￨d private￨3￨f static￨3￨f final￨3￨f String￨3￨f [￨3￨f ]￨3￨f VALUES￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e private￨3￨f static￨3￨f final￨3￨f String￨3￨f [￨3￨f ]￨3￨f CLASSNAMES￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getValues￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getClassName￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b return￨4￨b FormatterElement￨4￨b .￨4￨b TypeAttribute￨4￨b .￨4￨b CLASSNAMES￨4￨b [￨4￨b index￨4￨b ]￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d Decorations￨1￨d extends￨1￨d Canvas￨1￨d {￨1￨d Image￨2￨e image￨2￨e ;￨2￨e Image￨2￨e [￨2￨e ]￨2￨e images￨2￨e =￨2￨e new￨2￨e Image￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e Menu￨2￨e menuBar￨2￨e ;￨2￨e String￨2￨e text￨2￨e =￨2￨e ""￨2￨e ;￨2￨e boolean￨2￨e minimized￨2￨e ;￨2￨e boolean￨2￨e maximized￨2￨e ;￨2￨e Control￨2￨e savedFocus￨2￨e ;￨2￨e Button￨2￨e defaultButton￨2￨e ;￨2￨e Decorations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Decorations￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f bringToTop￨2￨f (￨2￨f boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f compare￨2￨f (￨2￨f ImageData￨3￨p data1￨3￨p ,￨3￨p ImageData￨3￨p data2￨3￨p )￨2￨f {￨2￨f }￨2￨f Control￨2￨f computeTabGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f computeTabRoot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Button￨2￨f getDefaultButton￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f [￨2￨f ]￨2￨f getImages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMaximized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Menu￨2￨f getMenuBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMinimized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getNameText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isTabGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isTabItem￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Decorations￨2￨f menuShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f restoreFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f saveFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e window￨3￨e =￨3￨e OS￨3￨e .￨3￨e GetControlOwner￨3￨e (￨3￨e handle￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Control￨3￨b control￨3￨b =￨3￨b display￨3￨b .￨3￨b getFocusControl￨3￨b (￨3￨b window￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c (￨4￨c control￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c control￨4￨c !=￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c this￨4￨c )￨4￨c ==￨4￨c (￨4￨c control￨4￨c .￨4￨c menuShell￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j setSavedFocus￨4￨e (￨4￨e control￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f setDefaultButton￨2￨f (￨2￨f Button￨3￨p button￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImages￨2￨f (￨2￨f Image￨3￨p [￨3￨p ]￨3￨p images￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaximized￨2￨f (￨2￨f boolean￨3￨p maximized￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMenuBar￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimized￨2￨f (￨2￨f boolean￨3￨p minimized￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSavedFocus￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f sort￨2￨f (￨2￨f Image￨3￨p [￨3￨p ]￨3￨p images￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f traverseItem￨2￨f (￨2￨f boolean￨3￨p next￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f traverseReturn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d ConfigurationHandler￨1￨d {￨1￨d private￨2￨e File￨2￨e _loadedFromFile￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e URL￨2￨e _loadedFromURL￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e _changeable￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e _loaded￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e _changed￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e static￨2￨e PropertyChangeSupport￨2￨e _pcl￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f ConfigurationHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ConfigurationHandler￨2￨f (￨2￨f boolean￨3￨p changeable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f String￨2￨f getDefaultPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f loadIfNecessary￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f loadDefault￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f saveDefault￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f saveDefault￨2￨f (￨2￨f boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isChangeable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isLoaded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f load￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f load￨2￨f (￨2￨f URL￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f save￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f save￨2￨f (￨2￨f URL￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getString￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p String￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f int￨2￨f getInteger￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p int￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f double￨2￨f getDouble￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p double￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f getBoolean￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p boolean￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f loadIfNecessary￨3￨e (￨3￨e )￨3￨e ;￨3￨e Boolean￨3￨e dflt￨3￨e =￨3￨e new￨3￨e Boolean￨3￨e (￨3￨e defaultValue￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Boolean￨3￨b b￨3￨b =￨3￨b new￨3￨b Boolean￨3￨b (￨3￨b getValue￨3￨b (￨3￨b key￨3￨b .￨3￨b getKey￨3￨b (￨3￨b )￨3￨b ,￨3￨b dflt￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e b￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f final￨2￨f synchronized￨2￨f void￨2￨f workerSetValue￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p String￨3￨p newValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setString￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p String￨3￨p newValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setInteger￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setDouble￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p double￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setBoolean￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p boolean￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addListener￨2￨f (￨2￨f PropertyChangeListener￨3￨p pcl￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f removeListener￨2￨f (￨2￨f PropertyChangeListener￨3￨p pcl￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addListener￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p PropertyChangeListener￨3￨p pcl￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f removeListener￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p ,￨3￨p PropertyChangeListener￨3￨p pcl￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f loadUnspecified￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f saveUnspecified￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f boolean￨2￨f loadFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f boolean￨2￨f loadURL￨2￨f (￨2￨f URL￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f boolean￨2￨f saveFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f boolean￨2￨f saveURL￨2￨f (￨2￨f URL￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasKey￨2￨f (￨2￨f ConfigurationKey￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f String￨2￨f getValue￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p String￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f void￨2￨f setValue￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TransactionalSpoutCoordinator￨1￨d extends￨1￨d BaseRichSpout￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d Logger￨2￨d LOG￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d BigInteger￨2￨d INIT_TXID￨2￨d =￨2￨d BigInteger￨2￨d .￨2￨d ONE￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d TRANSACTION_BATCH_STREAM_ID￨2￨d =￨2￨d (￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d +￨2￨d "/batch"￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d TRANSACTION_COMMIT_STREAM_ID￨2￨d =￨2￨d (￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d +￨2￨d "/commit"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d CURRENT_TX￨2￨d =￨2￨d "currtx"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d META_DIR￨2￨d =￨2￨d "meta"￨2￨d ;￨2￨d private￨2￨d ITransactionalSpout￨2￨d _spout￨2￨d ;￨2￨d private￨2￨d Coordinator￨2￨d _coordinator￨2￨d ;￨2￨d private￨2￨d TransactionalState￨2￨d _state￨2￨d ;￨2￨d private￨2￨d RotatingTransactionalState￨2￨d _coordinatorState￨2￨d ;￨2￨d TreeMap￨2￨d <￨2￨d BigInteger￨2￨d ,￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d TransactionStatus￨2￨d >￨2￨d _activeTx￨2￨d =￨2￨d new￨2￨d TreeMap￨2￨d <￨2￨d BigInteger￨2￨d ,￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d TransactionStatus￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d SpoutOutputCollector￨2￨d _collector￨2￨d ;￨2￨d BigInteger￨2￨d _currTransaction￨2￨d ;￨2￨d int￨2￨d _maxTransactionActive￨2￨d ;￨2￨d TransactionalSpoutCoordinator￨2￨d .￨2￨d StateInitializer￨2￨d _initializer￨2￨d ;￨2￨d public￨2￨d TransactionalSpoutCoordinator￨2￨d (￨2￨d ITransactionalSpout￨2￨d spout￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f ITransactionalSpout￨2￨f getSpout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f open￨2￨f (￨2￨f Map￨3￨p conf￨3￨p ,￨3￨p TopologyContext￨3￨p context￨3￨p ,￨3￨p SpoutOutputCollector￨3￨p collector￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f nextTuple￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f ack￨2￨f (￨2￨f Object￨3￨p msgId￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f fail￨2￨f (￨2￨f Object￨3￨p msgId￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f declareOutputFields￨2￨f (￨2￨f OutputFieldsDeclarer￨3￨p declarer￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f sync￨2￨f (￨2￨f )￨2￨f {￨2￨f TransactionalSpoutCoordinator￨3￨e .￨3￨e TransactionStatus￨3￨e maybeCommit￨3￨e =￨3￨e _activeTx￨3￨e .￨3￨e get￨3￨e (￨3￨e _currTransaction￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c maybeCommit￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c maybeCommit￨4￨c .￨4￨c status￨4￨c )￨4￨c ==￨4￨c (￨4￨c TransactionalSpoutCoordinator￨4￨c .￨4￨c AttemptStatus￨4￨c .￨4￨c PROCESSED￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j maybeCommit￨4￨e .￨4￨e status￨4￨e =￨4￨e TransactionalSpoutCoordinator￨4￨e .￨4￨e AttemptStatus￨4￨e .￨4￨e COMMITTING￨4￨e ;￨4￨e _collector￨4￨e .￨4￨e emit￨4￨e (￨4￨e TransactionalSpoutCoordinator￨4￨e .￨4￨e TRANSACTION_COMMIT_STREAM_ID￨4￨e ,￨4￨e new￨4￨e backtype￨4￨e .￨4￨e storm￨4￨e .￨4￨e tuple￨4￨e .￨4￨e Values￨4￨e (￨4￨e maybeCommit￨4￨e .￨4￨e attempt￨4￨e )￨4￨e ,￨4￨e maybeCommit￨4￨e .￨4￨e attempt￨4￨e )￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b _activeTx￨4￨b .￨4￨b size￨4￨b (￨4￨b )￨4￨b )￨4￨b <￨4￨b (￨4￨b _maxTransactionActive￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b BigInteger￨4￨e curr￨4￨e =￨4￨e _currTransaction￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c _maxTransactionActive￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j !￨6￨c (￨6￨c _activeTx￨6￨c .￨6￨c containsKey￨6￨c (￨6￨c curr￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j TransactionAttempt￨6￨e attempt￨6￨e =￨6￨e new￨6￨e TransactionAttempt￨6￨e (￨6￨e curr￨6￨e ,￨6￨e Utils￨6￨e .￨6￨e randomLong￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e Object￨6￨e state￨6￨e =￨6￨e _coordinatorState￨6￨e .￨6￨e getState￨6￨e (￨6￨e curr￨6￨e ,￨6￨e _initializer￨6￨e )￨6￨e ;￨6￨e _activeTx￨6￨e .￨6￨e put￨6￨e (￨6￨e curr￨6￨e ,￨6￨e new￨6￨e TransactionalSpoutCoordinator￨6￨e .￨6￨e TransactionStatus￨6￨e (￨6￨e attempt￨6￨e )￨6￨e )￨6￨e ;￨6￨e _collector￨6￨e .￨6￨e emit￨6￨e (￨6￨e TransactionalSpoutCoordinator￨6￨e .￨6￨e TRANSACTION_BATCH_STREAM_ID￨6￨e ,￨6￨e new￨6￨e backtype￨6￨e .￨6￨e storm￨6￨e .￨6￨e tuple￨6￨e .￨6￨e Values￨6￨e (￨6￨e attempt￨6￨e ,￨6￨e state￨6￨e ,￨6￨e previousTransactionId￨6￨e (￨6￨e _currTransaction￨6￨e )￨6￨e )￨6￨e ,￨6￨e attempt￨6￨e )￨6￨e ;￨6￨e }￨5￨j curr￨5￨e =￨5￨e nextTransactionId￨5￨e (￨5￨e curr￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨f catch￨3￨f (￨3￨f FailedException￨4￨p e￨4￨p )￨3￨f {￨3￨f TransactionalSpoutCoordinator￨4￨e .￨4￨e LOG￨4￨e .￨4￨e warn￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>metadata<seq2seq4repair_space>for<seq2seq4repair_space>a<seq2seq4repair_space>transaction"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Object￨2￨f >￨2￨f getComponentConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f enum￨2￨f AttemptStatus￨2￨f (￨2￨f )￨2￨f {￨2￨f PROCESSING￨3￨e ,￨3￨e PROCESSED￨3￨e ,￨3￨e COMMITTING￨3￨e ;￨3￨e }￨2￨f private￨2￨d static￨2￨d class￨2￨d TransactionStatus￨2￨d {￨2￨d TransactionAttempt￨3￨e attempt￨3￨e ;￨3￨e TransactionalSpoutCoordinator￨3￨e .￨3￨e AttemptStatus￨3￨e status￨3￨e ;￨3￨e public￨3￨f TransactionStatus￨3￨f (￨3￨f TransactionAttempt￨4￨p attempt￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f BigInteger￨2￨f nextTransactionId￨2￨f (￨2￨f BigInteger￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f BigInteger￨2￨f previousTransactionId￨2￨f (￨2￨f BigInteger￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f BigInteger￨2￨f getStoredCurrTransaction￨2￨f (￨2￨f TransactionalState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d StateInitializer￨2￨d implements￨2￨d RotatingTransactionalState￨2￨d .￨2￨d StateInitializer￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f Object￨3￨f init￨3￨f (￨3￨f BigInteger￨4￨p txid￨4￨p ,￨4￨p Object￨4￨p lastState￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ZipEntry￨1￨d extends￨1￨d java￨1￨d .￨1￨d util￨1￨d .￨1￨d zip￨1￨d .￨1￨d ZipEntry￨1￨d implements￨1￨d Cloneable￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e int￨2￨e PLATFORM_UNIX￨2￨e =￨2￨e 3￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e PLATFORM_FAT￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e SHORT_MASK￨2￨e =￨2￨e 65535￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e SHORT_SHIFT￨2￨e =￨2￨e 16￨2￨e ;￨2￨e private￨2￨e int￨2￨e internalAttributes￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e int￨2￨e platform￨2￨e =￨2￨e ZipEntry￨2￨e .￨2￨e PLATFORM_FAT￨2￨e ;￨2￨e private￨2￨e long￨2￨e externalAttributes￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e extraFields￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e name￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f ZipEntry￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ZipEntry￨2￨f (￨2￨f java￨2￨f .￨2￨f util￨2￨f .￨2￨f zip￨2￨f .￨2￨f ZipEntry￨2￨f entry￨2￨f )￨2￨f throws￨2￨f ZipException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ZipEntry￨2￨f (￨2￨f ZipEntry￨2￨f entry￨2￨f )￨2￨f throws￨2￨f ZipException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ZipEntry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getInternalAttributes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInternalAttributes￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f getExternalAttributes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExternalAttributes￨2￨f (￨2￨f long￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUnixMode￨2￨f (￨2￨f int￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getUnixMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getPlatform￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setPlatform￨2￨f (￨2￨f int￨3￨p platform￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExtraFields￨2￨f (￨2￨f ZipExtraField￨3￨p [￨3￨p ]￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ZipExtraField￨2￨f [￨2￨f ]￨2￨f getExtraFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addExtraField￨2￨f (￨2￨f ZipExtraField￨3￨p ze￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeExtraField￨2￨f (￨2￨f ZipShort￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExtra￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f extra￨2￨f )￨2￨f throws￨2￨f RuntimeException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f setExtraFields￨4￨e (￨4￨e ExtraFieldUtils￨4￨e .￨4￨e parse￨4￨e (￨4￨e extra￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b RuntimeException￨4￨b (￨4￨b e￨4￨b .￨4￨b getMessage￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f protected￨2￨f void￨2￨f setExtra￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getLocalFileDataExtra￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getCentralDirectoryExtra￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setComprSize￨2￨f (￨2￨f long￨3￨p size￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDirectory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractLoggingSubsystemTest￨1￨d extends￨1￨d AbstractSubsystemBaseTest￨1￨d {￨1￨d static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f HANDLER_RESOURCE_KEYS￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨e static￨2￨e final￨2￨e PathElement￨2￨e SUBSYSTEM_PATH￨2￨e =￨2￨e PathElement￨2￨e .￨2￨e pathElement￨2￨e (￨2￨e SUBSYSTEM￨2￨e ,￨2￨e SUBSYSTEM_NAME￨2￨e )￨2￨e ;￨2￨e static￨2￨e PathAddress￨2￨e SUBSYSTEM_ADDRESS￨2￨e =￨2￨e PathAddress￨2￨e .￨2￨e pathAddress￨2￨e (￨2￨e AbstractLoggingSubsystemTest￨2￨e .￨2￨e SUBSYSTEM_PATH￨2￨e )￨2￨e ;￨2￨e public￨2￨f AbstractLoggingSubsystemTest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f clearLogContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f clearLogContext￨2￨f (￨2￨f final￨3￨p LogContext￨3￨p logContext￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f AdditionalInitialization￨2￨f createAdditionalInitialization￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f compareXml￨2￨f (￨2￨f String￨2￨f configId￨2￨f ,￨2￨f String￨2￨f original￨2￨f ,￨2￨f String￨2￨f marshalled￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p resourceKey￨3￨p ,￨3￨p final￨3￨p String￨3￨p resourceName￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p ,￨3￨p final￨3￨p String￨3￨p resourceKey￨3￨p ,￨3￨p final￨3￨p String￨3￨p resourceName￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createRootLoggerAddress￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createRootLoggerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createLoggerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createLoggerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createConsoleHandlerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createConsoleHandlerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createFileHandlerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f PathAddress￨2￨f createFileHandlerAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f KernelServices￨2￨f boot￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b KernelServices￨3￨b kernelServices￨3￨b =￨3￨b createKernelServicesBuilder￨3￨b (￨3￨b LoggingTestEnvironment￨3￨b .￨3￨b get￨3￨b (￨3￨b )￨3￨b )￨3￨b .￨3￨b setSubsystemXml￨3￨b (￨3￨b getSubsystemXml￨3￨b (￨3￨b )￨3￨b )￨3￨b .￨3￨b build￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e Throwable￨3￨e bootError￨3￨e =￨3￨e kernelServices￨3￨e .￨3￨e getBootError￨3￨e (￨3￨e )￨3￨e ;￨3￨e Assert￨3￨e .￨3￨e assertTrue￨3￨e (￨3￨e (￨3￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>boot:<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e String￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e bootError￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e kernelServices￨3￨e .￨3￨e isSuccessfulBoot￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e kernelServices￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f compare￨2￨f (￨2￨f final￨3￨p String￨3￨p profileName￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p node1￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p node2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f compare￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f currentModel￨2￨f ,￨2￨f final￨2￨f ConfigurationPersistence￨2￨f config￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f compare￨2￨f (￨2￨f final￨2￨f String￨2￨f profileName￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f currentModel￨2￨f ,￨2￨f final￨2￨f ConfigurationPersistence￨2￨f config￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f compareLoggers￨2￨f (￨2￨f final￨3￨p LogContextConfiguration￨3￨p logContextConfiguration￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f compareHandlers￨2￨f (￨2￨f final￨2￨f LogContextConfiguration￨2￨f logContextConfig￨2￨f ,￨2￨f final￨2￨f Collection￨2￨f <￨2￨f String￨2￨f >￨2￨f handlerNames￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ModelNode￨2￨f findHandlerModel￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p model￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getHandlerNames￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p currentModel￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f modelNodeAsStringList￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f ModelNode￨2￨f getSubsystemModel￨2￨f (￨2￨f final￨2￨f KernelServices￨2￨f kernelServices￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f resolveRelativePath￨2￨f (￨2￨f final￨2￨f KernelServices￨2￨f kernelServices￨2￨f ,￨2￨f final￨2￨f String￨2￨f relativeTo￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d RemoveOperationComparator￨2￨d implements￨2￨d Comparator￨2￨d <￨2￨d PathAddress￨2￨d >￨2￨d {￨2￨d static￨3￨e final￨3￨e AbstractLoggingSubsystemTest￨3￨e .￨3￨e RemoveOperationComparator￨3￨e INSTANCE￨3￨e =￨3￨e new￨3￨e AbstractLoggingSubsystemTest￨3￨e .￨3￨e RemoveOperationComparator￨3￨e (￨3￨e )￨3￨e ;￨3￨e static￨3￨e final￨3￨e int￨3￨e GREATER￨3￨e =￨3￨e 1￨3￨e ;￨3￨e static￨3￨e final￨3￨e int￨3￨e EQUAL￨3￨e =￨3￨e 0￨3￨e ;￨3￨e static￨3￨e final￨3￨e int￨3￨e LESS￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f int￨3￨f compare￨3￨f (￨3￨f final￨4￨p PathAddress￨4￨p o1￨4￨p ,￨4￨p final￨4￨p PathAddress￨4￨p o2￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f int￨3￨f compare￨3￨f (￨3￨f final￨4￨p String￨4￨p key1￨4￨p ,￨4￨p final￨4￨p String￨4￨p key2￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d JavaBuilder￨1￨d extends￨1￨d IncrementalProjectBuilder￨1￨d {￨1￨d IProject￨2￨e currentProject￨2￨e ;￨2￨e JavaProject￨2￨e javaProject￨2￨e ;￨2￨e IWorkspaceRoot￨2￨e workspaceRoot￨2￨e ;￨2￨e CompilationParticipant￨2￨e [￨2￨e ]￨2￨e participants￨2￨e ;￨2￨e NameEnvironment￨2￨e nameEnvironment￨2￨e ;￨2￨e SimpleLookupTable￨2￨e binaryLocationsPerProject￨2￨e ;￨2￨e public￨2￨e State￨2￨e lastState￨2￨e ;￨2￨e BuildNotifier￨2￨e notifier￨2￨e ;￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e extraResourceFileFilters￨2￨e ;￨2￨e String￨2￨e [￨2￨e ]￨2￨e extraResourceFolderFilters￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SOURCE_ID￨2￨e =￨2￨e "JDT"￨2￨e ;￨2￨e public￨2￨e static￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e static￨2￨e ArrayList￨2￨e builtProjects￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f static￨2￨f IMarker￨2￨f [￨2￨f ]￨2￨f getProblemsFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f IMarker￨2￨f [￨2￨f ]￨2￨f getTasksFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f buildStarting￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f buildFinished￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f removeProblemsFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f removeTasksFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f removeProblemsAndTasksFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f State￨2￨f readState￨2￨f (￨2￨f IProject￨2￨f project￨2￨f ,￨2￨f DataInputStream￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f writeState￨2￨f (￨2￨f Object￨2￨f state￨2￨f ,￨2￨f DataOutputStream￨2￨f out￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IProject￨2￨f [￨2￨f ]￨2￨f build￨2￨f (￨2￨f int￨2￨f kind￨2￨f ,￨2￨f Map￨2￨f ignored￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildDeltas￨2￨f (￨2￨f SimpleLookupTable￨3￨p deltas￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f clean￨2￨f (￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f clearLastState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f filterExtraResource￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SimpleLookupTable￨2￨f findDeltas￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f State￨2￨f getLastState￨2￨f (￨2￨f IProject￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IProject￨2￨f [￨2￨f ]￨2￨f getRequiredProjects￨2￨f (￨2￨f boolean￨3￨p includeBinaryPrerequisites￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hasBuildpathErrors￨2￨f (￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasClasspathChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasJavaBuilder￨2￨f (￨2￨f IProject￨2￨f project￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasStructuralDelta￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f initializeBuilder￨2￨f (￨2￨f int￨2￨f kind￨2￨f ,￨2￨f boolean￨2￨f forBuild￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f this￨3￨e .￨3￨e javaProject￨3￨e =￨3￨e (￨3￨e (￨3￨e JavaProject￨3￨e )￨3￨e (￨3￨e JavaCore￨3￨e .￨3￨e create￨3￨e (￨3￨e currentProject￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e workspaceRoot￨3￨e =￨3￨e currentProject￨3￨e .￨3￨e getWorkspace￨3￨e (￨3￨e )￨3￨e .￨3￨e getRoot￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j forBuild￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e participants￨4￨e =￨4￨e JavaModelManager￨4￨e .￨4￨e getJavaModelManager￨4￨e (￨4￨e )￨4￨e .￨4￨e compilationParticipants￨4￨e .￨4￨e getCompilationParticipants￨4￨e (￨4￨e this￨4￨e .￨4￨e javaProject￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c participants￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j for￨5￨e (￨5￨e int￨5￨e i￨5￨e =￨5￨e 0￨5￨e ,￨5￨e l￨5￨e =￨5￨e this￨5￨e .￨5￨e participants￨5￨e .￨5￨e length￨5￨e ;￨5￨e }￨4￨j i￨4￨e <￨4￨e l￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c participants￨5￨c [￨5￨c i￨5￨c ]￨5￨c .￨5￨c aboutToBuild￨5￨c (￨5￨c this￨5￨c .￨5￨c javaProject￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c CompilationParticipant￨5￨c .￨5￨c NEEDS_FULL_BUILD￨5￨c )￨5￨c )￨4￨j {￨4￨j kind￨5￨e =￨5￨e IncrementalProjectBuilder￨5￨e .￨5￨e FULL_BUILD￨5￨e ;￨5￨e }￨4￨j String￨4￨e projectName￨4￨e =￨4￨e currentProject￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c JavaBuilder￨5￨c .￨5￨c builtProjects￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨5￨c ||￨5￨c (￨5￨c JavaBuilder￨5￨c .￨5￨c builtProjects￨5￨c .￨5￨c contains￨5￨c (￨5￨c projectName￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j org￨5￨e .￨5￨e eclipse￨5￨e .￨5￨e jdt￨5￨e .￨5￨e internal￨5￨e .￨5￨e core￨5￨e .￨5￨e JavaModel￨5￨e .￨5￨e flushExternalFileCache￨5￨e (￨5￨e )￨5￨e ;￨5￨e JavaBuilder￨5￨e .￨5￨e builtProjects￨5￨e =￨5￨e new￨5￨e ArrayList￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j JavaBuilder￨4￨e .￨4￨e builtProjects￨4￨e .￨4￨e add￨4￨e (￨4￨e projectName￨4￨e )￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e binaryLocationsPerProject￨3￨e =￨3￨e new￨3￨e SimpleLookupTable￨3￨e (￨3￨e 3￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b this￨3￨b .￨3￨b nameEnvironment￨3￨b =￨3￨b new￨3￨b NameEnvironment￨3￨b (￨3￨b workspaceRoot￨3￨b ,￨3￨b javaProject￨3￨b ,￨3￨b binaryLocationsPerProject￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j forBuild￨4￨c )￨3￨j {￨3￨j String￨4￨e filterSequence￨4￨e =￨4￨e javaProject￨4￨e .￨4￨e getOption￨4￨e (￨4￨e JavaCore￨4￨e .￨4￨e CORE_JAVA_BUILD_RESOURCE_COPY_FILTER￨4￨e ,￨4￨e true￨4￨e )￨4￨e ;￨4￨e char￨4￨e [￨4￨e ]￨4￨e [￨4￨e ]￨4￨e filters￨4￨e =￨4￨e (￨4￨e (￨4￨e filterSequence￨4￨e !=￨4￨e null￨4￨e )￨4￨e &&￨4￨e (￨4￨e (￨4￨e filterSequence￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e )￨4￨e >￨4￨e 0￨4￨e )￨4￨e )￨4￨e ?￨4￨e CharOperation￨4￨e .￨4￨e splitAndTrimOn￨4￨e (￨4￨e ','￨4￨e ,￨4￨e filterSequence￨4￨e .￨4￨e toCharArray￨4￨e (￨4￨e )￨4￨e )￨4￨e :￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j filters￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e extraResourceFileFilters￨5￨e =￨5￨e null￨5￨e ;￨5￨e this￨5￨e .￨5￨e extraResourceFolderFilters￨5￨e =￨5￨e null￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j int￨5￨e fileCount￨5￨e =￨5￨e 0￨5￨e ;￨5￨e int￨5￨e folderCount￨5￨e =￨5￨e 0￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c l￨6￨c =￨6￨c filters￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c l￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l char￨6￨e [￨6￨e ]￨6￨e f￨6￨e =￨6￨e filters￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c f￨7￨c .￨7￨c length￨7￨c )￨7￨c ==￨7￨c 0￨7￨c )￨6￨j {￨6￨j continue￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j (￨7￨c f￨7￨c [￨7￨c (￨7￨c (￨7￨c f￨7￨c .￨7￨c length￨7￨c )￨7￨c -￨7￨c 1￨7￨c )￨7￨c ]￨7￨c )￨7￨c ==￨7￨c '/'￨7￨c )￨6￨j {￨6￨j folderCount￨7￨e ++￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j fileCount￨7￨e ++￨7￨e ;￨7￨e }￨6￨j }￨5￨l this￨5￨e .￨5￨e extraResourceFileFilters￨5￨e =￨5￨e new￨5￨e char￨5￨e [￨5￨e fileCount￨5￨e ]￨5￨e [￨5￨e ]￨5￨e ;￨5￨e this￨5￨e .￨5￨e extraResourceFolderFilters￨5￨e =￨5￨e new￨5￨e String￨5￨e [￨5￨e folderCount￨5￨e ]￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c l￨6￨c =￨6￨c filters￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c l￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l char￨6￨e [￨6￨e ]￨6￨e f￨6￨e =￨6￨e filters￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c f￨7￨c .￨7￨c length￨7￨c )￨7￨c ==￨7￨c 0￨7￨c )￨6￨j {￨6￨j continue￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j (￨7￨c f￨7￨c [￨7￨c (￨7￨c (￨7￨c f￨7￨c .￨7￨c length￨7￨c )￨7￨c -￨7￨c 1￨7￨c )￨7￨c ]￨7￨c )￨7￨c ==￨7￨c '/'￨7￨c )￨6￨j {￨6￨j extraResourceFolderFilters￨7￨e [￨7￨e (￨7￨e --￨7￨e folderCount￨7￨e )￨7￨e ]￨7￨e =￨7￨e new￨7￨e String￨7￨e (￨7￨e f￨7￨e ,￨7￨e 0￨7￨e ,￨7￨e (￨7￨e (￨7￨e f￨7￨e .￨7￨e length￨7￨e )￨7￨e -￨7￨e 1￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j extraResourceFileFilters￨7￨e [￨7￨e (￨7￨e --￨7￨e fileCount￨7￨e )￨7￨e ]￨7￨e =￨7￨e f￨7￨e ;￨7￨e }￨6￨j }￨5￨l }￨4￨j }￨3￨j return￨3￨e kind￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f isClasspathBroken￨2￨f (￨2￨f IClasspathEntry￨2￨f [￨2￨f ]￨2￨f classpath￨2￨f ,￨2￨f IProject￨2￨f p￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isWorthBuilding￨2￨f (￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f mustPropagateStructuralChanges￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f printLocations￨2￨f (￨2￨f ClasspathLocation￨3￨p [￨3￨p ]￨3￨p newLocations￨3￨p ,￨3￨p ClasspathLocation￨3￨p [￨3￨p ]￨3￨p oldLocations￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f recordNewState￨2￨f (￨2￨f State￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MemoryLeakFixesTest￨1￨d extends￨1￨d BaseJDBCTestCase￨1￨d {￨1￨d public￨2￨f MemoryLeakFixesTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e long￨2￨e HALFMB￨2￨e =￨2￨e 500￨2￨e *￨2￨e 1024￨2￨e ;￨2￨e private￨2￨e static￨2￨e int￨2￨e numRows￨2￨e =￨2￨e 100￨2￨e ;￨2￨e private￨2￨e static￨2￨e int￨2￨e numPreparedStmts￨2￨e =￨2￨e 2000￨2￨e ;￨2￨e public￨2￨f void￨2￨f testPrepStmtD210￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReExecuteD557￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testResultSetgcD3316￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRepeatedDatabaseCreationWithAutoStats￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e String￨3￨e DB_NAME￨3￨e =￨3￨e "derby-memory-test"￨3￨e ;￨3￨e final￨3￨e File￨3￨e DB_DIR￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e "system"￨3￨e ,￨3￨e DB_NAME￨3￨e )￨3￨e ;￨3￨e DataSource￨3￨e ds￨3￨e =￨3￨e JDBCDataSource￨3￨e .￨3￨e getDataSource￨3￨e (￨3￨e DB_NAME￨3￨e )￨3￨e ;￨3￨e int￨3￨e iter￨3￨e =￨3￨e 0￨3￨e ;￨3￨e while￨3￨l (￨3￨l iter￨4￨c <￨4￨c 50￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b traceit￨4￨b (￨4￨b (￨4￨b "--<seq2seq4repair_space>"￨4￨b +￨4￨b (￨4￨b iter￨4￨b ++￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j PrivilegedFileOpsForTests￨5￨c .￨5￨c exists￨5￨c (￨5￨c DB_DIR￨5￨c )￨5￨c )￨4￨j {￨4￨j assertDirectoryDeleted￨5￨e (￨5￨e DB_DIR￨5￨e )￨5￨e ;￨5￨e }￨4￨j JDBCDataSource￨4￨e .￨4￨e setBeanProperty￨4￨e (￨4￨e ds￨4￨e ,￨4￨e "createDatabase"￨4￨e ,￨4￨e "create"￨4￨e )￨4￨e ;￨4￨e Connection￨4￨e conn￨4￨e =￨4￨e ds￨4￨e .￨4￨e getConnection￨4￨e (￨4￨e )￨4￨e ;￨4￨e JDBCDataSource￨4￨e .￨4￨e clearStringBeanProperty￨4￨e (￨4￨e ds￨4￨e ,￨4￨e "createDatabase"￨4￨e )￨4￨e ;￨4￨e Statement￨4￨e s￨4￨e =￨4￨e conn￨4￨e .￨4￨e createStatement￨4￨e (￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e executeUpdate￨4￨e (￨4￨e "CREATE<seq2seq4repair_space>TABLE<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT<seq2seq4repair_space>INT)"￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e executeUpdate￨4￨e (￨4￨e "CREATE<seq2seq4repair_space>INDEX<seq2seq4repair_space>NDX<seq2seq4repair_space>ON<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT)"￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c 500￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l s￨5￨e .￨5￨e executeUpdate￨5￨e (￨5￨e (￨5￨e (￨5￨e "INSERT<seq2seq4repair_space>INTO<seq2seq4repair_space>TEST<seq2seq4repair_space>VALUES("￨5￨e +￨5￨e i￨5￨e )￨5￨e +￨5￨e ")"￨5￨e )￨5￨e )￨5￨e ;￨5￨e s￨5￨e .￨5￨e executeQuery￨5￨e (￨5￨e (￨5￨e "SELECT<seq2seq4repair_space>*<seq2seq4repair_space>FROM<seq2seq4repair_space>TEST<seq2seq4repair_space>WHERE<seq2seq4repair_space>CINT="￨5￨e +￨5￨e i￨5￨e )￨5￨e )￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l s￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e conn￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e JDBCDataSource￨4￨e .￨4￨e setBeanProperty￨4￨e (￨4￨e ds￨4￨e ,￨4￨e "shutdownDatabase"￨4￨e ,￨4￨e "shutdown"￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f ds￨5￨e .￨5￨e getConnection￨5￨e (￨5￨e )￨5￨e ;￨5￨e fail￨5￨e (￨5￨e "Expected<seq2seq4repair_space>shutdown<seq2seq4repair_space>exception"￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f SQLException￨5￨p e￨5￨p )￨4￨f {￨4￨f assertSQLState￨5￨e (￨5￨e "08006"￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f JDBCDataSource￨5￨e .￨5￨e clearStringBeanProperty￨5￨e (￨5￨e ds￨5￨e ,￨5￨e "shutdownDatabase"￨5￨e )￨5￨e ;￨5￨e }￨4￨f if￨4￨j (￨4￨j isPhoneME￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j Runtime￨5￨e .￨5￨e getRuntime￨5￨e (￨5￨e )￨5￨e .￨5￨e gc￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l assertTrue￨3￨e (￨3￨e PrivilegedFileOpsForTests￨3￨e .￨3￨e exists￨3￨e (￨3￨e DB_DIR￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f void￨2￨f runFinalizerIfNeeded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d Client￨1￨d implements￨1￨d IConnection￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d LOG￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d Client￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d int￨2￨d max_retries￨2￨d ;￨2￨d private￨2￨d final￨2￨d int￨2￨d base_sleep_ms￨2￨d ;￨2￨d private￨2￨d final￨2￨d int￨2￨d max_sleep_ms￨2￨d ;￨2￨d private￨2￨d LinkedBlockingQueue￨2￨d <￨2￨d Object￨2￨d >￨2￨d message_queue￨2￨d ;￨2￨d private￨2￨d AtomicReference￨2￨d <￨2￨d Channel￨2￨d >￨2￨d channelRef￨2￨d ;￨2￨d private￨2￨d final￨2￨d ClientBootstrap￨2￨d bootstrap￨2￨d ;￨2￨d private￨2￨d InetSocketAddress￨2￨d remote_addr￨2￨d ;￨2￨d private￨2￨d AtomicInteger￨2￨d retries￨2￨d ;￨2￨d private￨2￨d final￨2￨d Random￨2￨d random￨2￨d =￨2￨d new￨2￨d Random￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d ChannelFactory￨2￨d factory￨2￨d ;￨2￨d private￨2￨d AtomicBoolean￨2￨d ready_to_release_resource￨2￨d ;￨2￨d private￨2￨d final￨2￨d int￨2￨d buffer_size￨2￨d ;￨2￨d private￨2￨d final￨2￨d AtomicBoolean￨2￨d being_closed￨2￨d ;￨2￨d @￨2￨d SuppressWarnings￨2￨d (￨2￨d "rawtypes"￨2￨d )￨2￨d Client￨2￨d (￨2￨d Map￨2￨d storm_conf￨2￨d ,￨2￨d String￨2￨d host￨2￨d ,￨2￨d int￨2￨d port￨2￨d )￨2￨d {￨2￨d }￨2￨d void￨2￨f reconnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f getSleepTimeMs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f send￨2￨f (￨2￨f int￨3￨p task￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f ArrayList￨2￨f <￨2￨f Object￨2￨f >￨2￨f takeMessages￨2￨f (￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e size￨3￨e =￨3￨e 0￨3￨e ;￨3￨e ArrayList￨3￨e <￨3￨e Object￨3￨e >￨3￨e requests￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Object￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e requests￨3￨e .￨3￨e add￨3￨e (￨3￨e message_queue￨3￨e .￨3￨e take￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Object￨4￨c msg￨4￨c =￨4￨c message_queue￨4￨c .￨4￨c poll￨4￨c (￨4￨c )￨4￨c ;￨4￨c msg￨4￨c !=￨4￨c null￨4￨c ;￨4￨c msg￨4￨c =￨4￨c message_queue￨4￨c .￨4￨c poll￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l requests￨4￨e .￨4￨e add￨4￨e (￨4￨e msg￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b msg￨4￨b .￨4￨b equals￨4￨b (￨4￨b ControlMessage￨4￨b .￨4￨b closeMessage￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b <END_BUG>￨4￨b break￨4￨e ;￨4￨e TaskMessage￨4￨e taskMsg￨4￨e =￨4￨e (￨4￨e (￨4￨e TaskMessage￨4￨e )￨4￨e (￨4￨e msg￨4￨e )￨4￨e )￨4￨e ;￨4￨e size￨4￨e +=￨4￨e (￨4￨e (￨4￨e taskMsg￨4￨e .￨4￨e message￨4￨e (￨4￨e )￨4￨e )￨4￨e !=￨4￨e null￨4￨e ?￨4￨e taskMsg￨4￨e .￨4￨e message￨4￨e (￨4￨e )￨4￨e .￨4￨e length￨4￨e :￨4￨e 0￨4￨e )￨4￨e +￨4￨e 6￨4￨e ;￨4￨e if￨4￨j (￨4￨j size￨5￨c >￨5￨c (￨5￨c buffer_size￨5￨c )￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e requests￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f close_n_release￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TaskMessage￨2￨f recv￨2￨f (￨2￨f int￨3￨p flags￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setChannel￨2￨f (￨2￨f Channel￨3￨p channel￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestFrenchAnalyzer￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testAnalyzer￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReusableTokenStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testExclusionTableViaCtor￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testElision￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStopwordsCasing￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomStrings￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b new￨3￨b FrenchAnalyzer￨3￨b (￨3￨b TEST_VERSION_CURRENT￨3￨b )￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testAccentInsensitive￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ToolBar￨1￨d extends￨1￨d Composite￨1￨d {￨1￨d ToolItem￨2￨e lastFocus￨2￨e ;￨2￨e ImageList￨2￨e imageList￨2￨e ;￨2￨e public￨2￨f ToolBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f computeSize￨2￨f (￨2￨f int￨3￨p wHint￨3￨p ,￨3￨p int￨3￨p hHint￨3￨p ,￨3￨p boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f eventHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f fixChildren￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p ,￨3￨p Shell￨3￨p oldShell￨3￨p ,￨3￨p Decorations￨3￨p newDecorations￨3￨p ,￨3￨p Decorations￨3￨p oldDecorations￨3￨p ,￨3￨p Menu￨3￨p [￨3￨p ]￨3￨p menus￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f forceFocus￨2￨f (￨2￨f int￨3￨p focusHandle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ToolItem￨2￨f getItem￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ToolItem￨2￨f getItem￨2￨f (￨2￨f Point￨3￨p point￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ToolItem￨2￨f [￨2￨f ]￨2￨f getItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getRowCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_key_press_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p eventPtr￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hasFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f ToolItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f mnemonicHit￨2￨f (￨2￨f char￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f mnemonicMatch￨2￨f (￨2￨f char￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f relayout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f ToolItem￨3￨e [￨3￨e ]￨3￨e items￨3￨e =￨3￨e getItems￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c items￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l ToolItem￨4￨e item￨4￨e =￨4￨e items￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c item￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c item￨5￨c .￨5￨c isDisposed￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b item￨5￨b .￨5￨b releaseChildren￨5￨b (￨5￨b false￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨l super￨3￨e .￨3￨e releaseChildren￨3￨e (￨3￨e destroy￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f removeControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p resize￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setFontDescription￨2￨f (￨2￨f int￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setForegroundColor￨2￨f (￨2￨f GdkColor￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToolTipText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Snippet6￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f Display￨3￨e display￨3￨e =￨3￨e new￨3￨e Display￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Shell￨3￨e shell￨3￨e =￨3￨e new￨3￨e Shell￨3￨e (￨3￨e display￨3￨e )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e new￨3￨e GridLayout￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Composite￨3￨e c￨3￨e =￨3￨e new￨3￨e Composite￨3￨e (￨3￨e shell￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e GridLayout￨3￨e layout￨3￨e =￨3￨e new￨3￨e GridLayout￨3￨e (￨3￨e )￨3￨e ;￨3￨e layout￨3￨e .￨3￨e numColumns￨3￨e =￨3￨e 3￨3￨e ;￨3￨e c￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e layout￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 10￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l Button￨4￨e b￨4￨e =￨4￨e new￨4￨e Button￨4￨e (￨4￨e c￨4￨e ,￨4￨e SWT￨4￨e .￨4￨e PUSH￨4￨e )￨4￨e ;￨4￨e b￨4￨e .￨4￨e setText￨4￨e (￨4￨e (￨4￨e "Button<seq2seq4repair_space>"￨4￨e +￨4￨e i￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l Button￨3￨e b￨3￨e =￨3￨e new￨3￨e Button￨3￨e (￨3￨e shell￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e PUSH￨3￨e )￨3￨e ;￨3￨e b￨3￨e .￨3￨e setText￨3￨e (￨3￨e "add<seq2seq4repair_space>a<seq2seq4repair_space>new<seq2seq4repair_space>button<seq2seq4repair_space>at<seq2seq4repair_space>row<seq2seq4repair_space>2<seq2seq4repair_space>column<seq2seq4repair_space>1"￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e [￨3￨e ]￨3￨e index￨3￨e =￨3￨e new￨3￨e int￨3￨e [￨3￨e 1￨3￨e ]￨3￨e ;￨3￨e b￨3￨f .￨3￨f addListener￨3￨f (￨3￨f Selection￨3￨f ,￨3￨f new￨3￨f Listener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f handleEvent￨4￨f (￨4￨f Event￨5￨p e￨5￨p )￨4￨f {￨4￨f Button￨5￨e b￨5￨e =￨5￨e new￨5￨e Button￨5￨e (￨5￨e c￨5￨e ,￨5￨e SWT￨5￨e .￨5￨e PUSH￨5￨e )￨5￨e ;￨5￨e b￨5￨e .￨5￨e setText￨5￨e (￨5￨e (￨5￨e "Special<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e index￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e (￨5￨e index￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e ++￨5￨e ;￨5￨e Control￨5￨e [￨5￨e ]￨5￨e children￨5￨e =￨5￨e c￨5￨e .￨5￨e getChildren￨5￨e (￨5￨e )￨5￨e ;￨5￨e b￨5￨e .￨5￨e moveAbove￨5￨e (￨5￨e children￨5￨e [￨5￨e 3￨5￨e ]￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b shell￨5￨b .￨5￨b layout￨5￨b (￨5￨b true￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f }￨3￨f )￨3￨e ;￨3￨e shell￨3￨e .￨3￨e open￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l !￨4￨c (￨4￨c shell￨4￨c .￨4￨c isDisposed￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j !￨5￨c (￨5￨c display￨5￨c .￨5￨c readAndDispatch￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j display￨5￨e .￨5￨e sleep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l display￨3￨e .￨3￨e dispose￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
class￨1￨d CoolBarTab￨1￨d extends￨1￨d Tab￨1￨d {￨1￨d CoolBar￨2￨e coolBar￨2￨e ;￨2￨e CoolItem￨2￨e pushItem￨2￨e ;￨2￨e CoolItem￨2￨e dropDownItem￨2￨e ;￨2￨e CoolItem￨2￨e radioItem￨2￨e ;￨2￨e CoolItem￨2￨e checkItem￨2￨e ;￨2￨e CoolItem￨2￨e textItem￨2￨e ;￨2￨e Group￨2￨e coolBarGroup￨2￨e ;￨2￨e Button￨2￨e horizontalButton￨2￨e ;￨2￨e Button￨2￨e verticalButton￨2￨e ;￨2￨e Button￨2￨e dropDownButton￨2￨e ;￨2￨e Button￨2￨e flatButton￨2￨e ;￨2￨e Button￨2￨e lockedButton￨2￨e ;￨2￨e Point￨2￨e [￨2￨e ]￨2￨e sizes￨2￨e ;￨2￨e int￨2￨e [￨2￨e ]￨2￨e wrapIndices￨2￨e ;￨2￨e int￨2￨e [￨2￨e ]￨2￨e order￨2￨e ;￨2￨e CoolBarTab￨2￨f (￨2￨f ControlExample￨3￨p instance￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createOtherGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e createExampleGroup￨3￨e (￨3￨e )￨3￨e ;￨3￨e coolBarGroup￨3￨e =￨3￨e new￨3￨e Group￨3￨e (￨3￨e exampleGroup￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e coolBarGroup￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e new￨3￨e GridLayout￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b coolBarGroup￨3￨b .￨3￨b setLayoutData￨3￨b (￨3￨b new￨3￨b GridData￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b GridData￨3￨b .￨3￨b GRAB_HORIZONTAL￨3￨b )￨3￨b |￨3￨b (￨3￨b GridData￨3￨b .￨3￨b HORIZONTAL_ALIGN_FILL￨3￨b )￨3￨b )￨3￨b |￨3￨b (￨3￨b GridData￨3￨b .￨3￨b VERTICAL_ALIGN_FILL￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b coolBarGroup￨3￨e .￨3￨e setText￨3￨e (￨3￨e "CoolBar"￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f createExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createStyleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f disposeExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Item￨2￨f [￨2￨f ]￨2￨f getExampleWidgetItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f getMethodNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getTabText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setWidgetLocked￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f class￨2￨d DropDownSelectionListener￨2￨d extends￨2￨d SelectionAdapter￨2￨d {￨2￨d private￨3￨e Menu￨3￨e menu￨3￨e =￨3￨e null￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e visible￨3￨e =￨3￨e false￨3￨e ;￨3￨e public￨3￨f void￨3￨f widgetSelected￨3￨f (￨3￨f SelectionEvent￨4￨p event￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f setMenuVisible￨3￨f (￨3￨f boolean￨4￨p visible￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d CoolItemSelectionListener￨2￨d extends￨2￨d SelectionAdapter￨2￨d {￨2￨d private￨3￨e Menu￨3￨e menu￨3￨e =￨3￨e null￨3￨e ;￨3￨e public￨3￨f void￨3￨f widgetSelected￨3￨f (￨3￨f SelectionEvent￨4￨p event￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d NewEditorAction￨1￨d extends￨1￨d ActiveEditorAction￨1￨d {￨1￨d public￨2￨f NewEditorAction￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f WorkbenchPage￨3￨e page￨3￨e =￨3￨e (￨3￨e (￨3￨e WorkbenchPage￨3￨e )￨3￨e (￨3￨e getActivePage￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e IEditorPart￨3￨e editor￨3￨e =￨3￨e getActiveEditor￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c page￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c editor￨4￨c ==￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j String￨3￨e editorId￨3￨e =￨3￨e editor￨3￨e .￨3￨e getSite￨3￨e (￨3￨e )￨3￨e .￨3￨e getId￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j editorId￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b page￨4￨b .￨4￨b openEditor￨4￨b (￨4￨b editor￨4￨b .￨4￨b getEditorInput￨4￨b (￨4￨b )￨4￨b ,￨4￨b editorId￨4￨b ,￨4￨b true￨4￨b ,￨4￨b false￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f PartInitException￨4￨p e￨4￨p )￨3￨f {￨3￨f DialogUtil￨4￨e .￨4￨e openError￨4￨e (￨4￨e page￨4￨e .￨4￨e getWorkbenchWindow￨4￨e (￨4￨e )￨4￨e .￨4￨e getShell￨4￨e (￨4￨e )￨4￨e ,￨4￨e Error￨4￨e ,￨4￨e e￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ChatRoomBot￨1￨d implements￨1￨d IIMMessageListener￨1￨d {￨1￨d protected￨2￨e IChatRoomBotEntry￨2￨e bot￨2￨e ;￨2￨e protected￨2￨e IContainer￨2￨e container￨2￨e ;￨2￨e protected￨2￨e ID￨2￨e targetID￨2￨e ;￨2￨e protected￨2￨e IChatRoomContainer￨2￨e roomContainer￨2￨e ;￨2￨e protected￨2￨e ID￨2￨e roomID￨2￨e ;￨2￨e public￨2￨f ChatRoomBot￨2￨f (￨2￨f IChatRoomBotEntry￨3￨p bot￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireInitBot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f firePreConnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f firePreRoomConnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f connect￨2￨f (￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f fireInitBot￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Namespace￨4￨e namespace￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c container￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j container￨5￨e =￨5￨e ContainerFactory￨5￨e .￨5￨e getDefault￨5￨e (￨5￨e )￨5￨e .￨5￨e createContainer￨5￨e (￨5￨e bot￨5￨e .￨5￨e getContainerFactoryName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e namespace￨5￨e =￨5￨e container￨5￨e .￨5￨e getConnectNamespace￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e org￨5￨e .￨5￨e eclipse￨5￨e .￨5￨e ecf￨5￨e .￨5￨e core￨5￨e .￨5￨e ContainerConnectException￨5￨e (￨5￨e Messages￨5￨e .￨5￨e DefaultChatRoomBot_EXCEPTION_ALREADY_CONNECTED￨5￨e )￨5￨e ;￨5￨e }￨4￨j targetID￨4￨e =￨4￨e IDFactory￨4￨e .￨4￨e getDefault￨4￨e (￨4￨e )￨4￨e .￨4￨e createID￨4￨e (￨4￨e namespace￨4￨e ,￨4￨e bot￨4￨e .￨4￨e getConnectID￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e IChatRoomManager￨4￨e manager￨4￨e =￨4￨e (￨4￨e (￨4￨e IChatRoomManager￨4￨e )￨4￨e (￨4￨e container￨4￨e .￨4￨e getAdapter￨4￨e (￨4￨e IChatRoomManager￨4￨e .￨4￨e class￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j manager￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e ECFException￨5￨e (￨5￨e Messages￨5￨e .￨5￨e DefaultChatRoomBot_EXCEPTION_NO_CHAT_ROOM￨5￨e )￨5￨e ;￨5￨e }￨4￨j firePreConnect￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e password￨4￨e =￨4￨e bot￨4￨e .￨4￨e getPassword￨4￨e (￨4￨e )￨4￨e ;￨4￨e IConnectContext￨4￨e context￨4￨e =￨4￨e (￨4￨e password￨4￨e ==￨4￨e null￨4￨e )￨4￨e ?￨4￨e null￨4￨e :￨4￨e ConnectContextFactory￨4￨e .￨4￨e createPasswordConnectContext￨4￨e (￨4￨e password￨4￨e )￨4￨e ;￨4￨e container￨4￨e .￨4￨e connect￨4￨e (￨4￨e targetID￨4￨e ,￨4￨e context￨4￨e )￨4￨e ;￨4￨e IChatRoomInfo￨4￨e room￨4￨e =￨4￨e manager￨4￨e .￨4￨e getChatRoomInfo￨4￨e (￨4￨e bot￨4￨e .￨4￨e getChatRoom￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b IChatRoomContainer￨4￨b roomContainer￨4￨b =￨4￨b room￨4￨b .￨4￨b createChatRoomContainer￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b roomID￨4￨e =￨4￨e room￨4￨e .￨4￨e getRoomID￨4￨e (￨4￨e )￨4￨e ;￨4￨e firePreRoomConnect￨4￨e (￨4￨e )￨4￨e ;￨4￨e roomContainer￨4￨e .￨4￨e addMessageListener￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e String￨4￨e roomPassword￨4￨e =￨4￨e bot￨4￨e .￨4￨e getChatRoomPassword￨4￨e (￨4￨e )￨4￨e ;￨4￨e IConnectContext￨4￨e roomContext￨4￨e =￨4￨e (￨4￨e roomPassword￨4￨e ==￨4￨e null￨4￨e )￨4￨e ?￨4￨e null￨4￨e :￨4￨e ConnectContextFactory￨4￨e .￨4￨e createPasswordConnectContext￨4￨e (￨4￨e roomPassword￨4￨e )￨4￨e ;￨4￨e roomContainer￨4￨e .￨4￨e connect￨4￨e (￨4￨e roomID￨4￨e ,￨4￨e roomContext￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f ECFException￨4￨p e￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c container￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c container￨6￨c .￨6￨c getConnectedID￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j container￨6￨e .￨6￨e disconnect￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j container￨5￨e .￨5￨e dispose￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j container￨4￨e =￨4￨e null￨4￨e ;￨4￨e throw￨4￨e e￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f handleMessageEvent￨2￨f (￨2￨f IIMMessageEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d JVMOptionAddHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d static￨2￨e final￨2￨e String￨2￨e OPERATION_NAME￨2￨e =￨2￨e "add-jvm-option"￨2￨e ;￨2￨e static￨2￨e final￨2￨e JVMOptionAddHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e JVMOptionAddHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e ParameterValidator￨2￨e validator￨2￨e =￨2￨e new￨2￨e StringLengthValidator￨2￨e (￨2￨e 1￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f validator￨3￨e .￨3￨e validateParameter￨3￨e (￨3￨e JVM_OPTION￨3￨e ,￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e JVM_OPTION￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e Resource￨3￨e resource￨3￨e =￨3￨e context￨3￨e .￨3￨e readResourceForUpdate￨3￨e (￨3￨e EMPTY_ADDRESS￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e model￨3￨e =￨3￨e resource￨3￨e .￨3￨e getModel￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e option￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e JVM_OPTION￨3￨e )￨3￨e ;￨3￨e ModelNode￨3￨e jvmOptions￨3￨e =￨3￨e model￨3￨e .￨3￨e get￨3￨e (￨3￨e JVM_OPTIONS￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j jvmOptions￨4￨c .￨4￨c isDefined￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l ModelNode￨5￨c optionNode￨5￨c :￨5￨c jvmOptions￨5￨c .￨5￨c asList￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j optionNode￨6￨c .￨6￨c equals￨6￨c (￨6￨c option￨6￨c )￨6￨c )￨5￨j {￨5￨j throw￨6￨e HostControllerMessages￨6￨e .￨6￨e MESSAGES￨6￨e .￨6￨e jvmOptionAlreadyExists￨6￨e (￨6￨e option￨6￨e .￨6￨e asString￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j model￨3￨e .￨3￨e get￨3￨e (￨3￨e JVM_OPTIONS￨3￨e )￨3￨e .￨3￨e add￨3￨e (￨3￨e option￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b context￨3￨b .￨3￨b completeStep￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeColumn￨1￨d extends￨1￨d Item￨1￨d {￨1￨d Tree￨2￨e parent￨2￨e ;￨2￨e boolean￨2￨e resizable￨2￨e ;￨2￨e boolean￨2￨e moveable￨2￨e ;￨2￨e public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAlignment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMoveable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getNameText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tree￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getResizable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pack￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e releaseWidget￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b parent￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b &&￨3￨b (￨3￨b (￨3￨b parent￨3￨b .￨3￨b sortColumn￨3￨b )￨3￨b ==￨3￨b (￨3￨b this￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b parent￨3￨e .￨3￨e sortColumn￨3￨e =￨3￨e null￨3￨e ;￨3￨e }￨3￨e parent￨3￨e =￨3￨e null￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f removeControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAlignment￨2￨f (￨2￨f int￨3￨p alignment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p ,￨3￨p boolean￨3￨p sort￨3￨p ,￨3￨p boolean￨3￨p right￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMoveable￨2￨f (￨2￨f boolean￨3￨p moveable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setResizable￨2￨f (￨2￨f boolean￨3￨p resizable￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSortDirection￨2￨f (￨2￨f int￨3￨p direction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWidth￨2￨f (￨2￨f int￨3￨p width￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d {￨2￨d @￨3￨f Override￨3￨f protected￨3￨f AccessLevel￨3￨f initialValue￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d ;￨2￨e private￨2￨e final￨2￨e StorageService￨2￨e storageService￨2￨e ;￨2￨e public￨2￨f CassandraServer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f ColumnFamily￨2￨f >￨2￨f readColumnFamily￨2￨f (￨2￨f List￨2￨f <￨2￨f ReadCommand￨2￨f >￨2￨f commands￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f Column￨2￨f >￨2￨f thriftifySubColumns￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p columns￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f thriftifyColumns￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p columns￨3￨p ,￨3￨p boolean￨3￨p reverseOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f thriftifySuperColumns￨2￨f (￨2￨f Collection￨3￨p <￨3￨p IColumn￨3￨p >￨3￨p columns￨3￨p ,￨3￨p boolean￨3￨p reverseOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f >￨2￨f getSlice￨2￨f (￨2￨f List￨2￨f <￨2￨f ReadCommand￨2￨f >￨2￨f commands￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f thriftifyColumnFamily￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p ,￨3￨p boolean￨3￨p subcolumnsOnly￨3￨p ,￨3￨p boolean￨3￨p reverseOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f get_slice￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f >￨2￨f multiget_slice￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f List￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f keys￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f >￨2￨f multigetSliceInternal￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f List￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f keys￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumnOrSuperColumn￨2￨f get￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f ColumnPath￨2￨f column_path￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f NotFoundException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f multiget￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f List￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f keys￨2￨f ,￨2￨f ColumnPath￨2￨f column_path￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f multigetInternal￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f List￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f keys￨2￨f ,￨2￨f ColumnPath￨2￨f column_path￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f get_count￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f insert￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f Column￨2￨f column￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f batch_insert￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f ColumnOrSuperColumn￨2￨f >￨2￨f >￨2￨f cfmap￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f batch_mutate￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f Map￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f ,￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f Mutation￨2￨f >￨2￨f >￨2￨f >￨2￨f mutation_map￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f String￨2￨f table￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f ColumnPath￨2￨f column_path￨2￨f ,￨2￨f long￨2￨f timestamp￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doInsert￨2￨f (￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f ,￨2￨f RowMutation￨2￨f rm￨2￨f )￨2￨f throws￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f String￨2￨f >￨2￨f >￨2￨f describe_keyspace￨2￨f (￨2￨f String￨2￨f table￨2￨f )￨2￨f throws￨2￨f NotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f KeySlice￨2￨f >￨2￨f get_range_slice￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f start_key￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f finish_key￨2￨f ,￨2￨f int￨2￨f maxRows￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f KeySlice￨2￨f >￨2￨f get_range_slices￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f KeyRange￨2￨f range￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f KeySlice￨2￨f >￨2￨f getRangeSlicesInternal￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f ColumnParent￨2￨f column_parent￨2￨f ,￨2￨f SlicePredicate￨2￨f predicate￨2￨f ,￨2￨f KeyRange￨2￨f range￨2￨f ,￨2￨f ConsistencyLevel￨2￨f consistency_level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TimedOutException￨2￨f ,￨2￨f UnavailableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f describe_keyspaces￨2￨f (￨2￨f )￨2￨f throws￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f describe_cluster_name￨2￨f (￨2￨f )￨2￨f throws￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f describe_version￨2￨f (￨2￨f )￨2￨f throws￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f TokenRange￨2￨f >￨2￨f describe_ring￨2￨f (￨2￨f String￨3￨p keyspace￨3￨p )￨2￨f {￨2￨f List￨3￨e <￨3￨e TokenRange￨3￨e >￨3￨e ranges￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e TokenRange￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b for￨3￨b (￨3￨b Map￨3￨b .￨3￨b Entry￨3￨b <￨3￨b Range￨3￨b ,￨3￨b List￨3￨b <￨3￨b String￨3￨b >￨3￨b >￨3￨b entry￨3￨b :￨3￨b instance￨3￨b .￨3￨b getRangeToEndPointMap￨3￨b (￨3￨b keyspace￨3￨b )￨3￨b .￨3￨b entrySet￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b Range￨3￨e range￨3￨e =￨3￨e entry￨3￨e .￨3￨e getKey￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e String￨3￨e >￨3￨e endpoints￨3￨e =￨3￨e entry￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e ranges￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e TokenRange￨3￨e (￨3￨e range￨3￨e .￨3￨e left￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ,￨3￨e range￨3￨e .￨3￨e right￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ,￨3￨e endpoints￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨3￨e return￨3￨e ranges￨3￨e ;￨3￨e }￨2￨f public￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f describe_splits￨2￨f (￨2￨f String￨2￨f start_token￨2￨f ,￨2￨f String￨2￨f end_token￨2￨f ,￨2￨f int￨2￨f keys_per_split￨2￨f )￨2￨f throws￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AccessLevel￨2￨f login￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f AuthenticationRequest￨2￨f auth_request￨2￨f )￨2￨f throws￨2￨f AuthenticationException￨2￨f ,￨2￨f AuthorizationException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkLoginAuthorized￨2￨f (￨2￨f AccessLevel￨2￨f level￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_add_column_family￨2￨f (￨2￨f CfDef￨2￨f cf_def￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_drop_column_family￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f String￨2￨f column_family￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_rename_column_family￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f ,￨2￨f String￨2￨f old_name￨2￨f ,￨2￨f String￨2￨f new_name￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_add_keyspace￨2￨f (￨2￨f KsDef￨2￨f ks_def￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_drop_keyspace￨2￨f (￨2￨f String￨2￨f keyspace￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f system_rename_keyspace￨2￨f (￨2￨f String￨2￨f old_name￨2￨f ,￨2￨f String￨2￨f new_name￨2￨f )￨2￨f throws￨2￨f InvalidRequestException￨2￨f ,￨2￨f TException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SaveService￨1￨d {￨1￨d private￨2￨e static￨2￨e XStream￨2￨e saver￨2￨e =￨2￨e new￨2￨e XStream￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨e String￨2￨e version￨2￨e =￨2￨e "1.0"￨2￨e ;￨2￨e static￨2￨e String￨2￨e propertiesVersion￨2￨e =￨2￨e ""￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PROPVERSION￨2￨e =￨2￨e "1.3"￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f makeAlias￨2￨f (￨2￨f String￨3￨p alias￨3￨p ,￨3￨p String￨3￨p clazz￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f initProps￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f saveTree￨2￨f (￨2￨f HashTree￨2￨f tree￨2￨f ,￨2￨f Writer￨2￨f writer￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨e boolean￨2￨e versionsOK￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e REVPFX￨2￨e =￨2￨e "$Revision:<seq2seq4repair_space>"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e REVSFX￨2￨e =￨2￨e "<seq2seq4repair_space>$"￨2￨e ;￨2￨e private￨2￨f static￨2￨f String￨2￨f extractVersion￨2￨f (￨2￨f String￨3￨p rev￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f checkVersion￨2￨f (￨2￨f Class￨3￨p clazz￨3￨p ,￨3￨p String￨3￨p expected￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f checkVersions￨2￨f (￨2￨f )￨2￨f {￨2￨f SaveService￨3￨e .￨3￨e versionsOK￨3￨e =￨3￨e true￨3￨e ;￨3￨e SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d BooleanPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.4"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d HashTreeConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.2"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d IntegerPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.3"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d LongPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.3"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d MultiPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.3"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d SampleResultConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.2"￨3￨d )￨3￨d ;￨3￨d <START_BUG>￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d StringPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.5"￨3￨d )￨3￨d ;￨3￨d <END_BUG>￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d TestElementConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.2"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d TestElementPropertyConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.3"￨3￨d )￨3￨d ;￨3￨d SaveService￨3￨d .￨3￨d checkVersion￨3￨d (￨3￨d ScriptWrapperConverter￨3￨d .￨3￨d class￨3￨d ,￨3￨d "1.2"￨3￨d )￨3￨d ;￨3￨d if￨3￨d (￨3￨d !￨3￨d (￨3￨d SaveService￨3￨d .￨3￨d PROPVERSION￨3￨d .￨3￨d equalsIgnoreCase￨3￨d (￨3￨d SaveService￨3￨d .￨3￨d propertiesVersion￨3￨d )￨3￨d )￨3￨d )￨3￨d {￨3￨d SaveService￨4￨e .￨4￨e log￨4￨e .￨4￨e warn￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Property<seq2seq4repair_space>file<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e SaveService￨4￨e .￨4￨e PROPVERSION￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>found<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e SaveService￨4￨e .￨4￨e propertiesVersion￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨d if￨3￨j (￨3￨j SaveService￨4￨c .￨4￨c versionsOK￨4￨c )￨3￨j {￨3￨j SaveService￨4￨e .￨4￨e log￨4￨e .￨4￨e info￨4￨e (￨4￨e "All<seq2seq4repair_space>converter<seq2seq4repair_space>versions<seq2seq4repair_space>present<seq2seq4repair_space>and<seq2seq4repair_space>correct"￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f HashTree￨2￨f loadTree￨2￨f (￨2￨f InputStream￨2￨f reader￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Test￨2￨d extends￨2￨d JMeterTestCase￨2￨d {￨2￨d public￨3￨f Test￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Test￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f testVersions￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Logging￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e LOG￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.columba"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e ConsoleHandler￨2￨e consoleHandler￨2￨e ;￨2￨e public￨2￨e static￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨f Logging￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f userHasDefinedLogging￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f createDefaultHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c Logging￨4￨c .￨4￨c userHasDefinedLogging￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j Logging￨4￨e .￨4￨e LOG￨4￨e .￨4￨e setUseParentHandlers￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e Logging￨4￨e .￨4￨e consoleHandler￨4￨e =￨4￨e new￨4￨e ConsoleHandler￨4￨e (￨4￨e )￨4￨e ;￨4￨e Logging￨4￨e .￨4￨e consoleHandler￨4￨e .￨4￨e setFormatter￨4￨e (￨4￨e new￨4￨e OneLineFormatter￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b Logging￨4￨b .￨4￨b consoleHandler￨4￨b .￨4￨b setLevel￨4￨b (￨4￨b Level￨4￨b .￨4￨b ALL￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b Logging￨4￨e .￨4￨e LOG￨4￨e .￨4￨e addHandler￨4￨e (￨4￨e Logging￨4￨e .￨4￨e consoleHandler￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f void￨2￨f setDebugging￨2￨f (￨2￨f boolean￨3￨p debug￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f createDefaultFileHandler￨2￨f (￨2￨f File￨3￨p configDirectory￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PersistenceExceptions￨1￨d extends￨1￨d Exceptions￨1￨d {￨1￨d public￨2￨f static￨2￨f final￨2￨f RuntimeExceptionTranslator￨2￨f TRANSLATOR￨2￨f =￨2￨f new￨2￨f RuntimeExceptionTranslator￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f RuntimeException￨3￨f translate￨3￨f (￨3￨f RuntimeException￨4￨p re￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f static￨2￨f RuntimeExceptionTranslator￨2￨f getRollbackTranslator￨2￨f (￨2￨f final￨3￨p OpenJPAEntityManager￨3￨p em￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f RuntimeException￨2￨f toPersistenceException￨2￨f (￨2￨f Throwable￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Throwable￨2￨f translateException￨2￨f (￨2￨f Throwable￨3￨p t￨3￨p ,￨3￨p boolean￨3￨p checked￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Throwable￨2￨f translateStoreException￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f Exception￨3￨e e￨3￨e ;￨3￨e Throwable￨3￨e cause￨3￨e =￨3￨e (￨3￨e (￨3￨e (￨3￨e ke￨3￨e .￨3￨e getNestedThrowables￨3￨e (￨3￨e )￨3￨e )￨3￨e !=￨3￨e null￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e ke￨3￨e .￨3￨e getNestedThrowables￨3￨e (￨3￨e )￨3￨e .￨3￨e length￨3￨e )￨3￨e ==￨3￨e 1￨3￨e )￨3￨e )￨3￨e ?￨3￨e ke￨3￨e .￨3￨e getNestedThrowables￨3￨e (￨3￨e )￨3￨e [￨3￨e 0￨3￨e ]￨3￨e :￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c ke￨4￨c .￨4￨c getSubtype￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c StoreException￨4￨c .￨4￨c OBJECT_NOT_FOUND￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c cause￨4￨c instanceof￨4￨c ObjectNotFoundException￨4￨c )￨4￨c )￨3￨j {￨3￨j e￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e openjpa￨4￨e .￨4￨e persistence￨4￨e .￨4￨e EntityNotFoundException￨4￨e (￨4￨e ke￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getNestedThrowables￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getFailedObject￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e ke￨4￨e .￨4￨e isFatal￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c ke￨4￨c .￨4￨c getSubtype￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c StoreException￨4￨c .￨4￨c OPTIMISTIC￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c cause￨4￨c instanceof￨4￨c OptimisticException￨4￨c )￨4￨c )￨3￨j {￨3￨j e￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e openjpa￨4￨e .￨4￨e persistence￨4￨e .￨4￨e OptimisticLockException￨4￨e (￨4￨e ke￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getNestedThrowables￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getFailedObject￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e ke￨4￨e .￨4￨e isFatal￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c ke￨4￨c .￨4￨c getSubtype￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c StoreException￨4￨c .￨4￨c LOCK￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c cause￨4￨c instanceof￨4￨c LockException￨4￨c )￨4￨c )￨3￨j {￨3￨j LockException￨4￨e lockEx￨4￨e =￨4￨e (￨4￨e (￨4￨e LockException￨4￨e )￨4￨e (￨4￨e (￨4￨e ke￨4￨e instanceof￨4￨e LockException￨4￨e )￨4￨e ?￨4￨e ke￨4￨e :￨4￨e cause￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c lockEx￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c lockEx￨5￨c .￨5￨c getLockLevel￨5￨c (￨5￨c )￨5￨c )￨5￨c >=￨5￨c (￨5￨c JPA2LockLevels￨5￨c .￨5￨c LOCK_PESSIMISTIC_READ￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b if￨5￨b (￨5￨b lockEx￨5￨b .￨5￨b isRecoverable￨5￨b (￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b e￨5￨e =￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e openjpa￨5￨e .￨5￨e persistence￨5￨e .￨5￨e LockTimeoutException￨5￨e (￨5￨e ke￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e ,￨5￨e PersistenceExceptions￨5￨e .￨5￨e getNestedThrowables￨5￨e (￨5￨e ke￨5￨e )￨5￨e ,￨5￨e PersistenceExceptions￨5￨e .￨5￨e getFailedObject￨5￨e (￨5￨e ke￨5￨e )￨5￨e ,￨5￨e ke￨5￨e .￨5￨e isFatal￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e else￨5￨j {￨5￨j e￨6￨e =￨6￨e new￨6￨e org￨6￨e .￨6￨e apache￨6￨e .￨6￨e openjpa￨6￨e .￨6￨e persistence￨6￨e .￨6￨e PessimisticLockException￨6￨e (￨6￨e ke￨6￨e .￨6￨e getMessage￨6￨e (￨6￨e )￨6￨e ,￨6￨e PersistenceExceptions￨6￨e .￨6￨e getNestedThrowables￨6￨e (￨6￨e ke￨6￨e )￨6￨e ,￨6￨e PersistenceExceptions￨6￨e .￨6￨e getFailedObject￨6￨e (￨6￨e ke￨6￨e )￨6￨e ,￨6￨e ke￨6￨e .￨6￨e isFatal￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j e￨5￨e =￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e openjpa￨5￨e .￨5￨e persistence￨5￨e .￨5￨e OptimisticLockException￨5￨e (￨5￨e ke￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e ,￨5￨e PersistenceExceptions￨5￨e .￨5￨e getNestedThrowables￨5￨e (￨5￨e ke￨5￨e )￨5￨e ,￨5￨e PersistenceExceptions￨5￨e .￨5￨e getFailedObject￨5￨e (￨5￨e ke￨5￨e )￨5￨e ,￨5￨e ke￨5￨e .￨5￨e isFatal￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c ke￨4￨c .￨4￨c getSubtype￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c StoreException￨4￨c .￨4￨c OBJECT_EXISTS￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c cause￨4￨c instanceof￨4￨c ObjectExistsException￨4￨c )￨4￨c )￨3￨j {￨3￨j e￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e openjpa￨4￨e .￨4￨e persistence￨4￨e .￨4￨e EntityExistsException￨4￨e (￨4￨e ke￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getNestedThrowables￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getFailedObject￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e ke￨4￨e .￨4￨e isFatal￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j e￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e openjpa￨4￨e .￨4￨e persistence￨4￨e .￨4￨e PersistenceException￨4￨e (￨4￨e ke￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getNestedThrowables￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e PersistenceExceptions￨4￨e .￨4￨e getFailedObject￨4￨e (￨4￨e ke￨4￨e )￨4￨e ,￨4￨e ke￨4￨e .￨4￨e isFatal￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j e￨3￨e .￨3￨e setStackTrace￨3￨e (￨3￨e ke￨3￨e .￨3￨e getStackTrace￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e e￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f Exception￨2￨f translateUserException￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Exception￨2￨f translateCause￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Throwable￨2￨f translateGeneralException￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f isPersistenceException￨2￨f (￨2￨f Throwable￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Throwable￨2￨f [￨2￨f ]￨2￨f getNestedThrowables￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Object￨2￨f getFailedObject￨2￨f (￨2￨f OpenJPAException￨3￨p ke￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Throwable￨2￨f getCause￨2￨f (￨2￨f Throwable￨3￨p [￨3￨p ]￨3￨p nested￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
abstract￨1￨d class￨1￨d RFC1522Codec￨1￨d {￨1￨d protected￨2￨e static￨2￨e final￨2￨e char￨2￨e SEP￨2￨e =￨2￨e '?'￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e POSTFIX￨2￨e =￨2￨e "?="￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e PREFIX￨2￨e =￨2￨e "=?"￨2￨e ;￨2￨e protected￨2￨f String￨2￨f encodeText￨2￨f (￨2￨f final￨2￨f String￨2￨f text￨2￨f ,￨2￨f final￨2￨f Charset￨2￨f charset￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j text￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b StringBuffer￨3￨b buffer￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e RFC1522Codec￨3￨e .￨3￨e PREFIX￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e charset￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e RFC1522Codec￨3￨e .￨3￨e SEP￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e this￨3￨e .￨3￨e getEncoding￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e RFC1522Codec￨3￨e .￨3￨e SEP￨3￨e )￨3￨e ;￨3￨e byte￨3￨e [￨3￨e ]￨3￨e rawData￨3￨e =￨3￨e this￨3￨e .￨3￨e doEncoding￨3￨e (￨3￨e text￨3￨e .￨3￨e getBytes￨3￨e (￨3￨e charset￨3￨e )￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e StringUtils￨3￨e .￨3￨e newStringUsAscii￨3￨e (￨3￨e rawData￨3￨e )￨3￨e )￨3￨e ;￨3￨e buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e RFC1522Codec￨3￨e .￨3￨e POSTFIX￨3￨e )￨3￨e ;￨3￨e return￨3￨e buffer￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f String￨2￨f encodeText￨2￨f (￨2￨f final￨2￨f String￨2￨f text￨2￨f ,￨2￨f final￨2￨f String￨2￨f charsetName￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f ,￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f decodeText￨2￨f (￨2￨f final￨2￨f String￨2￨f text￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f ,￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f String￨2￨f getEncoding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f byte￨2￨f [￨2￨f ]￨2￨f doEncoding￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f byte￨2￨f [￨2￨f ]￨2￨f doDecoding￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Expression￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨f static￨2￨f final￨2￨f boolean￨2￨f isConstantValueRepresentable￨2￨f (￨2￨f Constant￨3￨p constant￨3￨p ,￨3￨p int￨3￨p constantTypeID￨3￨p ,￨3￨p int￨3￨p targetTypeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨e Constant￨2￨e constant￨2￨e ;￨2￨e public￨2￨e int￨2￨e implicitConversion￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e resolvedType￨2￨e ;￨2￨e public￨2￨f Expression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f checkCastTypesCompatibility￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f checkNullStatus￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p int￨3￨p nullStatus￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getAllInheritedMethods￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f getAllInheritedMethods0￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p ,￨3￨p ArrayList￨3￨p collector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkNullComparison￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p FlowInfo￨3￨p initsWhenTrue￨3￨p ,￨3￨p FlowInfo￨3￨p initsWhenFalse￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f checkUnsafeCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p TypeBinding￨3￨p match￨3￨p ,￨3￨p boolean￨3￨p isNarrowing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeConversion￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p runtimeType￨3￨p ,￨3￨p TypeBinding￨3￨p compileTimeType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b bits￨3￨b )￨3￨b &￨3￨b (￨3￨b IsReachableMASK￨3￨b )￨3￨b )￨3￨b ==￨3￨b 0￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e }￨3￨e generateCode￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e codeStream￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedBoolean￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Label￨3￨p trueLabel￨3￨p ,￨3￨p Label￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedStringConcatenation￨2￨f (￨2￨f BlockScope￨3￨p blockScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p int￨3￨p typeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedStringConcatenationCreation￨2￨f (￨2￨f BlockScope￨3￨p blockScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p int￨3￨p typeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCompactableOperation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isConstantValueOfTypeAssignableToType￨2￨f (￨2￨f TypeBinding￨3￨p constantType￨3￨p ,￨3￨p TypeBinding￨3￨p targetType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTypeReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f nullStatus￨2￨f (￨2￨f FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f optimizedBooleanConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveTypeExpecting￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpectedType￨2￨f (￨2￨f TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsUnnecessaryCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsNeedCheckCast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f toTypeReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p CompilationUnitScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalVariableBinding￨2￨f localVariableBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JobsExecutor￨1￨d extends￨1￨d AbstractExecutor￨1￨d {￨1￨d protected￨2￨e int￨2￨e fJobCounter￨2￨e =￨2￨e 1￨2￨e ;￨2￨e protected￨2￨e String￨2￨e fExecutorName￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e fSystem￨2￨e ;￨2￨e protected￨2￨e ISchedulingRule￨2￨e fSchedulingRule￨2￨e ;￨2￨e protected￨2￨e long￨2￨e delay￨2￨e ;￨2￨e public￨2￨f JobsExecutor￨2￨f (￨2￨f String￨3￨p executorName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JobsExecutor￨2￨f (￨2￨f String￨3￨p executorName￨3￨p ,￨3￨p boolean￨3￨p system￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JobsExecutor￨2￨f (￨2￨f String￨3￨p executorName￨3￨p ,￨3￨p boolean￨3￨p system￨3￨p ,￨3￨p ISchedulingRule￨3￨p schedulingRule￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JobsExecutor￨2￨f (￨2￨f String￨3￨p executorName￨3￨p ,￨3￨p boolean￨3￨p system￨3￨p ,￨3￨p ISchedulingRule￨3￨p schedulingRule￨3￨p ,￨3￨p long￨3￨p delay￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setChildProgressMonitor￨2￨f (￨2￨f IProgressMonitor￨3￨p parent￨3￨p ,￨3￨p IProgressMonitor￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f safeRun￨2￨f (￨2￨f ISafeProgressRunner￨3￨p runner￨3￨p ,￨3￨p IProgressRunnable￨3￨p progressRunnable￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b runner￨3￨b .￨3￨b safeRun￨3￨b (￨3￨b progressRunnable￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f String￨2￨f createJobName￨2￨f (￨2￨f String￨3￨p executorName￨3￨p ,￨3￨p int￨3￨p jobCounter￨3￨p ,￨3￨p IProgressRunnable￨3￨p runnable￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f AbstractFuture￨2￨f createFuture￨2￨f (￨2￨f IProgressMonitor￨3￨p progressMonitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFuture￨2￨f execute￨2￨f (￨2￨f final￨3￨p IProgressRunnable￨3￨p runnable￨3￨p ,￨3￨p final￨3￨p IProgressMonitor￨3￨p clientProgressMonitor￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f configureJobForExecution￨2￨f (￨2￨f Job￨3￨p job￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d InspectorDebugPanel￨1￨d extends￨1￨d StandardDebugPanel￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e public￨2￨f static￨2￨f final￨2￨f IDebugBarContributor￨2￨f DEBUG_BAR_CONTRIB￨2￨f =￨2￨f new￨2￨f IDebugBarContributor￨2￨f (￨2￨f )￨2￨f {￨2￨f private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f Component￨3￨f createComponent￨3￨f (￨3￨f String￨4￨p id￨4￨p ,￨4￨p DebugBar￨4￨p debugBar￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f InspectorDebugPanel￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Class￨2￨f <￨2￨f ?￨2￨f extends￨2￨f Page￨2￨f >￨2￨f getLinkPageClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f ResourceReference￨2￨f getImageResourceReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f IModel￨2￨f <￨2￨f String￨2￨f >￨2￨f getDataModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f PageParameters￨2￨f getLinkPageParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f PageParameters￨3￨e params￨3￨e =￨3￨e new￨3￨e PageParameters￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b params￨3￨b .￨3￨b addNamedParameter￨3￨b (￨3￨b "pageId"￨3￨b ,￨3￨b getPage￨3￨b (￨3￨b )￨3￨b .￨3￨b getId￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e params￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d ISAACTest￨1￨d extends￨1￨d RandomGeneratorAbstractTest￨1￨d {￨1￨d @￨2￨f Override￨2￨f protected￨2￨f RandomGenerator￨2￨f makeGenerator￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b ISAACRandom￨3￨b (￨3￨b 1000￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f static￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f SEED_1￨2￨f =￨2￨f new￨2￨f int￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f SEED_2￨2￨f =￨2￨f new￨2￨f int￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f EXPECTED_SEQUENCE_1￨2￨f =￨2￨f new￨2￨f int￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f EXPECTED_SEQUENCE_2￨2￨f =￨2￨f new￨2￨f int￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f [￨2￨f ]￨2￨f getActualSequence￨2￨f (￨2￨f ISAACRandom￨3￨p isaacRandom￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d XmlTag￨1￨d extends￨1￨d MarkupElement￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e CLOSE￨2￨e =￨2￨e new￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e (￨2￨e "CLOSE"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e OPEN￨2￨e =￨2￨e new￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e (￨2￨e "OPEN"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e OPEN_CLOSE￨2￨e =￨2￨e new￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e (￨2￨e "OPEN_CLOSE"￨2￨e )￨2￨e ;￨2￨e private￨2￨e LowerCaseKeyValueMap￨2￨e attributes￨2￨e =￨2￨e new￨2￨e LowerCaseKeyValueMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e int￨2￨e columnNumber￨2￨e ;￨2￨e int￨2￨e length￨2￨e ;￨2￨e int￨2￨e lineNumber￨2￨e ;￨2￨e String￨2￨e name￨2￨e ;￨2￨e String￨2￨e namespace￨2￨e ;￨2￨e int￨2￨e pos￨2￨e ;￨2￨e String￨2￨e text￨2￨e ;￨2￨e XmlTag￨2￨e .￨2￨e Type￨2￨e type￨2￨e ;￨2￨e private￨2￨e XmlTag￨2￨e closes￨2￨e ;￨2￨e private￨2￨e XmlTag￨2￨e copyOf￨2￨e =￨2￨e this￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isMutable￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e nameChanged￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨d static￨2￨d final￨2￨d class￨2￨d Type￨2￨d extends￨2￨d EnumeratedType￨2￨d {￨2￨d Type￨3￨f (￨3￨f final￨4￨p String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f XmlTag￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f closes￨2￨f (￨2￨f final￨3￨p XmlTag￨3￨p open￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LowerCaseKeyValueMap￨2￨f getAttributes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getColumnNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLength￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLineNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getNameChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNamespace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f XmlTag￨2￨f getOpenTag￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getPos￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getString￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f XmlTag￨2￨f .￨2￨f Type￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isClose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isMutable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isOpen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isOpenClose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f makeImmutable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f XmlTag￨2￨f mutable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f put￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f put￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p ,￨3￨p final￨3￨p int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f put￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p ,￨3￨p final￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f put￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p ,￨3￨p final￨3￨p StringValue￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f putAll￨2￨f (￨2￨f final￨3￨p Map￨3￨p map￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f final￨3￨p String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setName￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOpenTag￨2￨f (￨2￨f final￨3￨p XmlTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setType￨2￨f (￨2￨f final￨3￨p XmlTag￨3￨p .￨3￨p Type￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toDebugString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b isMutable￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e text￨3￨e ;￨3￨e }￨3￨e return￨3￨e toXmlString￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f toUserDebugString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toXmlString￨2￨f (￨2￨f final￨3￨p String￨3￨p attributeToBeIgnored￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CollatingIterator￨1￨d <￨1￨d E￨1￨d >￨1￨d implements￨1￨d Iterator￨1￨d <￨1￨d E￨1￨d >￨1￨d {￨1￨d private￨2￨e Comparator￨2￨e <￨2￨e ?￨2￨e super￨2￨e E￨2￨e >￨2￨e comparator￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ArrayList￨2￨e <￨2￨e Iterator￨2￨e <￨2￨e ?￨2￨e extends￨2￨e E￨2￨e >￨2￨e >￨2￨e iterators￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ArrayList￨2￨e <￨2￨e E￨2￨e >￨2￨e values￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e BitSet￨2￨e valueSet￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e int￨2￨e lastReturned￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f CollatingIterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollatingIterator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollatingIterator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p ,￨3￨p final￨3￨p int￨3￨p initIterCapacity￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollatingIterator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p ,￨3￨p final￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p a￨3￨p ,￨3￨p final￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollatingIterator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p ,￨3￨p final￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p [￨3￨p ]￨3￨p iterators￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollatingIterator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p ,￨3￨p final￨3￨p Collection￨3￨p <￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p >￨3￨p iterators￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addIterator￨2￨f (￨2￨f final￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p iterator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIterator￨2￨f (￨2￨f final￨3￨p int￨3￨p index￨3￨p ,￨3￨p final￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p iterator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f Iterator￨2￨f <￨2￨f ?￨2￨f extends￨2￨f E￨2￨f >￨2￨f >￨2￨f getIterators￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b UnmodifiableList￨3￨b .￨3￨b decorate￨3￨b (￨3￨b iterators￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Comparator￨2￨f <￨2￨f ?￨2￨f super￨2￨f E￨2￨f >￨2￨f getComparator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setComparator￨2￨f (￨2￨f final￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p E￨3￨p >￨3￨p comp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasNext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f E￨2￨f next￨2￨f (￨2￨f )￨2￨f throws￨2￨f NoSuchElementException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getIteratorIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f set￨2￨f (￨2￨f int￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f clear￨2￨f (￨2￨f int￨3￨p i￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkNotStarted￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f least￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f anyValueSet￨2￨f (￨2￨f BitSet￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f anyHasNext￨2￨f (￨2￨f ArrayList￨3￨p <￨3￨p Iterator￨3￨p <￨3￨p ?￨3￨p extends￨3￨p E￨3￨p >￨3￨p >￨3￨p iters￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d AS1601TestCase￨1￨d {￨1￨d @￨2￨e Inject￨2￨e public￨2￨e BundleContext￨2￨e context￨2￨e ;￨2￨e @￨2￨e Inject￨2￨e public￨2￨e Bundle￨2￨e bundle￨2￨e ;￨2￨e @￨2￨f Deployment￨2￨f @￨2￨f StartLevelAware￨2￨f (￨2￨f startLevel￨2￨f =￨2￨f 4￨2￨f )￨2￨f public￨2￨f static￨2￨f WebArchive￨2￨f createdeployment￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨d WebArchive￨3￨d archive￨3￨d =￨3￨d ShrinkWrap￨3￨d .￨3￨d create￨3￨d (￨3￨d WebArchive￨3￨d .￨3￨d class￨3￨d ,￨3￨d "as1601.war"￨3￨d )￨3￨d ;￨3￨d <START_BUG>￨3￨d archive￨3￨d .￨3￨d addClasses￨3￨d (￨3￨d OSGiTestSupport￨3￨d .￨3￨d class￨3￨d ,￨3￨d EndpointServlet￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d <END_BUG>￨3￨d archive￨3￨d .￨3￨d addAsWebInfResource￨3￨d (￨3￨d "osgi/webapp/webA.xml"￨3￨d ,￨3￨d "web.xml"￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d add￨3￨d (￨3￨d new￨3￨d Asset￨3￨d (￨3￨d )￨3￨d {￨3￨d public￨4￨f InputStream￨4￨f openStream￨4￨f (￨4￨f )￨4￨f {￨4￨f OSGiManifestBuilder￨5￨e builder￨5￨e =￨5￨e OSGiManifestBuilder￨5￨e .￨5￨e newInstance￨5￨e (￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addBundleSymbolicName￨5￨e (￨5￨e archive￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addBundleManifestVersion￨5￨e (￨5￨e 2￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addManifestHeader￨5￨e (￨5￨e Constants￨5￨e .￨5￨e BUNDLE_CLASSPATH￨5￨e ,￨5￨e ".,WEB-INF/classes"￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addManifestHeader￨5￨e (￨5￨e "Web-ContextPath"￨5￨e ,￨5￨e "as1601"￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addImportPackages￨5￨e (￨5￨e StartLevel￨5￨e .￨5￨e class￨5￨e ,￨5￨e HttpServlet￨5￨e .￨5￨e class￨5￨e ,￨5￨e Servlet￨5￨e .￨5￨e class￨5￨e )￨5￨e ;￨5￨e return￨5￨e builder￨5￨e .￨5￨e openStream￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨d ,￨3￨e JarFile￨3￨e .￨3￨e MANIFEST_NAME￨3￨e )￨3￨e ;￨3￨e return￨3￨e archive￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testServletAccess￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getHttpResponse￨2￨f (￨2￨f String￨2￨f reqPath￨2￨f ,￨2￨f int￨2￨f timeout￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Jar￨1￨d extends￨1￨d Zip￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e INDEX_NAME￨2￨e =￨2￨e "META-INF/INDEX.LIST"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e MANIFEST_NAME￨2￨e =￨2￨e "META-INF/MANIFEST.MF"￨2￨e ;￨2￨e private￨2￨e List￨2￨e serviceList￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Manifest￨2￨e configuredManifest￨2￨e ;￨2￨e private￨2￨e Manifest￨2￨e savedConfiguredManifest￨2￨e ;￨2￨e private￨2￨e Manifest￨2￨e filesetManifest￨2￨e ;￨2￨e private￨2￨e Manifest￨2￨e originalManifest￨2￨e ;￨2￨e private￨2￨e Jar￨2￨e .￨2￨e FilesetManifestConfig￨2￨e filesetManifestConfig￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e mergeManifestsMain￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e Manifest￨2￨e manifest￨2￨e ;￨2￨e private￨2￨e String￨2￨e manifestEncoding￨2￨e ;￨2￨e private￨2￨e File￨2￨e manifestFile￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e index￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e createEmpty￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e rootEntries￨2￨e ;￨2￨e private￨2￨e Path￨2￨e indexJars￨2￨e ;￨2￨e private￨2￨f ZipExtraField￨2￨f [￨2￨f ]￨2￨f JAR_MARKER￨2￨f =￨2￨f new￨2￨f ZipExtraField￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e protected￨2￨e String￨2￨e emptyBehavior￨2￨e =￨2￨e "create"￨2￨e ;￨2￨e public￨2￨f Jar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWhenempty￨2￨f (￨2￨f WhenEmpty￨3￨p we￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWhenmanifestonly￨2￨f (￨2￨f WhenEmpty￨3￨p we￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setJarfile￨2￨f (￨2￨f File￨3￨p jarFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIndex￨2￨f (￨2￨f boolean￨3￨p flag￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setManifestEncoding￨2￨f (￨2￨f String￨3￨p manifestEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConfiguredManifest￨2￨f (￨2￨f Manifest￨2￨f newManifest￨2￨f )￨2￨f throws￨2￨f ManifestException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setManifest￨2￨f (￨2￨f File￨3￨p manifestFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Manifest￨2￨f getManifest￨2￨f (￨2￨f File￨3￨p manifestFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Manifest￨2￨f getManifestFromJar￨2￨f (￨2￨f File￨2￨f jarFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Manifest￨2￨f getManifest￨2￨f (￨2￨f Reader￨3￨p r￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFilesetmanifest￨2￨f (￨2￨f Jar￨3￨p .￨3￨p FilesetManifestConfig￨3￨p config￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addMetainf￨2￨f (￨2￨f ZipFileSet￨3￨p fs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConfiguredIndexJars￨2￨f (￨2￨f Path￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConfiguredService￨2￨f (￨2￨f Service￨3￨p service￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeServices￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initZipOutputStream￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Manifest￨2￨f createManifest￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeManifest￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f ,￨2￨f Manifest￨2￨f manifest￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f finalizeZipOutputStream￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createIndexList￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f ByteArrayOutputStream￨3￨e baos￨3￨e =￨3￨e new￨3￨e ByteArrayOutputStream￨3￨e (￨3￨e )￨3￨e ;￨3￨e PrintWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e PrintWriter￨3￨e (￨3￨e new￨3￨e OutputStreamWriter￨3￨e (￨3￨e baos￨3￨e ,￨3￨e "UTF8"￨3￨e )￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e println￨3￨e (￨3￨e "JarIndex-Version:<seq2seq4repair_space>1.0"￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e println￨3￨e (￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e println￨3￨e (￨3￨e zipFile￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e writeIndexLikeList￨3￨e (￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e addedDirs￨3￨e .￨3￨e keySet￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e rootEntries￨3￨e ,￨3￨e writer￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e println￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c indexJars￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Manifest￨4￨e mf￨4￨e =￨4￨e createManifest￨4￨e (￨4￨e )￨4￨e ;￨4￨e Manifest￨4￨e .￨4￨e Attribute￨4￨e classpath￨4￨e =￨4￨e mf￨4￨e .￨4￨e getMainSection￨4￨e (￨4￨e )￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e ATTRIBUTE_CLASSPATH￨4￨e )￨4￨e ;￨4￨e String￨4￨e [￨4￨e ]￨4￨e cpEntries￨4￨e =￨4￨e null￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b classpath￨4￨b !=￨4￨b null￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b StringTokenizer￨4￨e tok￨4￨e =￨4￨e new￨4￨e StringTokenizer￨4￨e (￨4￨e classpath￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e ,￨4￨e "<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e cpEntries￨4￨e =￨4￨e new￨4￨e String￨4￨e [￨4￨e tok￨4￨e .￨4￨e countTokens￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e int￨4￨e c￨4￨e =￨4￨e 0￨4￨e ;￨4￨e while￨4￨l (￨4￨l tok￨5￨c .￨5￨c hasMoreTokens￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l cpEntries￨5￨e [￨5￨e (￨5￨e c￨5￨e ++￨5￨e )￨5￨e ]￨5￨e =￨5￨e tok￨5￨e .￨5￨e nextToken￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨4￨e String￨4￨e [￨4￨e ]￨4￨e indexJarEntries￨4￨e =￨4￨e indexJars￨4￨e .￨4￨e list￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c indexJarEntries￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e name￨5￨e =￨5￨e Jar￨5￨e .￨5￨e findJarName￨5￨e (￨5￨e indexJarEntries￨5￨e [￨5￨e i￨5￨e ]￨5￨e ,￨5￨e cpEntries￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j name￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j ArrayList￨6￨e dirs￨6￨e =￨6￨e new￨6￨e ArrayList￨6￨e (￨6￨e )￨6￨e ;￨6￨e ArrayList￨6￨e files￨6￨e =￨6￨e new￨6￨e ArrayList￨6￨e (￨6￨e )￨6￨e ;￨6￨e Jar￨6￨e .￨6￨e grabFilesAndDirs￨6￨e (￨6￨e indexJarEntries￨6￨e [￨6￨e i￨6￨e ]￨6￨e ,￨6￨e dirs￨6￨e ,￨6￨e files￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c (￨7￨c dirs￨7￨c .￨7￨c size￨7￨c (￨7￨c )￨7￨c )￨7￨c +￨7￨c (￨7￨c files￨7￨c .￨7￨c size￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c >￨7￨c 0￨7￨c )￨6￨j {￨6￨j writer￨7￨e .￨7￨e println￨7￨e (￨7￨e name￨7￨e )￨7￨e ;￨7￨e writeIndexLikeList￨7￨e (￨7￨e dirs￨7￨e ,￨7￨e files￨7￨e ,￨7￨e writer￨7￨e )￨7￨e ;￨7￨e writer￨7￨e .￨7￨e println￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨l }￨3￨j writer￨3￨e .￨3￨e flush￨3￨e (￨3￨e )￨3￨e ;￨3￨e ByteArrayInputStream￨3￨e bais￨3￨e =￨3￨e new￨3￨e ByteArrayInputStream￨3￨e (￨3￨e baos￨3￨e .￨3￨e toByteArray￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e super￨3￨e .￨3￨e zipFile￨3￨e (￨3￨e bais￨3￨e ,￨3￨e zOut￨3￨e ,￨3￨e Jar￨3￨e .￨3￨e INDEX_NAME￨3￨e ,￨3￨e System￨3￨e .￨3￨e currentTimeMillis￨3￨e (￨3￨e )￨3￨e ,￨3￨e null￨3￨e ,￨3￨e DEFAULT_FILE_MODE￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f zipFile￨2￨f (￨2￨f InputStream￨2￨f is￨2￨f ,￨2￨f ZipOutputStream￨2￨f zOut￨2￨f ,￨2￨f String￨2￨f vPath￨2￨f ,￨2￨f long￨2￨f lastModified￨2￨f ,￨2￨f File￨2￨f fromArchive￨2￨f ,￨2￨f int￨2￨f mode￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f filesetManifest￨2￨f (￨2￨f File￨2￨f file￨2￨f ,￨2￨f InputStream￨2￨f is￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ArchiveState￨2￨f getResourcesToAdd￨2￨f (￨2￨f ResourceCollection￨2￨f [￨2￨f ]￨2￨f rcs￨2￨f ,￨2￨f File￨2￨f zipFile￨2￨f ,￨2￨f boolean￨2￨f needsUpdate￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f createEmptyZip￨2￨f (￨2￨f File￨2￨f zipFile￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d FilesetManifestConfig￨2￨d extends￨2￨d EnumeratedAttribute￨2￨d {￨2￨d public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getValues￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d protected￨2￨f final￨2￨f void￨2￨f writeIndexLikeList￨2￨f (￨2￨f List￨2￨f dirs￨2￨f ,￨2￨f List￨2￨f files￨2￨f ,￨2￨f PrintWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f final￨2￨f String￨2￨f findJarName￨2￨f (￨2￨f String￨3￨p fileName￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p classpath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f final￨2￨f void￨2￨f grabFilesAndDirs￨2￨f (￨2￨f String￨2￨f file￨2￨f ,￨2￨f List￨2￨f dirs￨2￨f ,￨2￨f List￨2￨f files￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestCzechAnalyzer￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d @￨2￨f Deprecated￨2￨f public￨2￨f void￨2￨f testStopWordLegacy￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testStopWord￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f void￨2￨f testReusableTokenStreamLegacy￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReusableTokenStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testWithStemExclusionSet￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomStrings￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b new￨3￨b CzechAnalyzer￨3￨b (￨3￨b TEST_VERSION_CURRENT￨3￨b )￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
final￨1￨d class￨1￨d CollectionToStringConverter￨1￨d implements￨1￨d GenericConverter￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e DELIMITER￨2￨e =￨2￨e ","￨2￨e ;￨2￨e private￨2￨e final￨2￨e ConversionService￨2￨e conversionService￨2￨e ;￨2￨e public￨2￨f CollectionToStringConverter￨2￨f (￨2￨f ConversionService￨3￨p conversionService￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f <￨2￨f ConvertiblePair￨2￨f >￨2￨f getConvertibleTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f convert￨2￨f (￨2￨f Object￨3￨p source￨3￨p ,￨3￨p TypeDescriptor￨3￨p sourceType￨3￨p ,￨3￨p TypeDescriptor￨3￨p targetType￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j source￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j Collection￨3￨e <￨3￨e ?￨3￨e >￨3￨e sourceCollection￨3￨e =￨3￨e (￨3￨e (￨3￨e Collection￨3￨e <￨3￨e ?￨3￨e >￨3￨e )￨3￨e (￨3￨e source￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c sourceCollection￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j return￨4￨e ""￨4￨e ;￨4￨e }￨3￨j StringBuilder￨3￨e sb￨3￨e =￨3￨e new￨3￨e StringBuilder￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e i￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l Object￨4￨c sourceElement￨4￨c :￨4￨c sourceCollection￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j i￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e CollectionToStringConverter￨5￨e .￨5￨e DELIMITER￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b Object￨4￨b targetElement￨4￨b =￨4￨b this￨4￨b .￨4￨b conversionService￨4￨b .￨4￨b convert￨4￨b (￨4￨b sourceElement￨4￨b ,￨4￨b sourceType￨4￨b .￨4￨b elementType￨4￨b (￨4￨b sourceElement￨4￨b )￨4￨b ,￨4￨b targetType￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b sb￨4￨e .￨4￨e append￨4￨e (￨4￨e targetElement￨4￨e )￨4￨e ;￨4￨e i￨4￨e ++￨4￨e ;￨4￨e }￨3￨l return￨3￨e sb￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeldExtension￨1￨d implements￨1￨d Extension￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e SUBSYSTEM_NAME￨2￨e =￨2￨e "weld"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e NAMESPACE￨2￨e =￨2￨e "urn:jboss:domain:weld:1.0"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e WeldExtension￨2￨e .￨2￨e WeldSubsystemParser￨2￨e parser￨2￨e =￨2￨e new￨2￨e WeldExtension￨2￨e .￨2￨e WeldSubsystemParser￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e PathElement￨2￨e PATH_SUBSYSTEM￨2￨e =￨2￨e PathElement￨2￨e .￨2￨e pathElement￨2￨e (￨2￨e SUBSYSTEM￨2￨e ,￨2￨e WeldExtension￨2￨e .￨2￨e SUBSYSTEM_NAME￨2￨e )￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d String￨2￨d RESOURCE_NAME￨2￨d =￨2￨d (￨2￨d WeldExtension￨2￨d .￨2￨d class￨2￨d .￨2￨d getPackage￨2￨d (￨2￨d )￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d +￨2￨d ".LocalDescriptions"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d MANAGEMENT_API_MAJOR_VERSION￨2￨d =￨2￨d 1￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d MANAGEMENT_API_MINOR_VERSION￨2￨d =￨2￨d 0￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d MANAGEMENT_API_MICRO_VERSION￨2￨d =￨2￨d 0￨2￨d ;￨2￨d static￨2￨d StandardResourceDescriptionResolver￨2￨d getResourceDescriptionResolver￨2￨d (￨2￨d final￨2￨d String￨2￨d ...￨2￨d keyPrefix￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e static￨2￨e final￨2￨e ResourceDefinition￨2￨e WELD_SUBSYSTEM_RESOURCE￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleResourceDefinition￨2￨e (￨2￨e WeldExtension￨2￨e .￨2￨e PATH_SUBSYSTEM￨2￨e ,￨2￨e WeldExtension￨2￨e .￨2￨e getResourceDescriptionResolver￨2￨e (￨2￨e )￨2￨e ,￨2￨e WeldSubsystemAdd￨2￨e .￨2￨e INSTANCE￨2￨e ,￨2￨e ReloadRequiredRemoveStepHandler￨2￨e .￨2￨e INSTANCE￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f final￨3￨p ExtensionContext￨3￨p context￨3￨p )￨2￨f {￨2￨f ROOT_LOGGER￨3￨e .￨3￨e debug￨3￨e (￨3￨e "Activating<seq2seq4repair_space>Weld<seq2seq4repair_space>Extension"￨3￨e )￨3￨e ;￨3￨e final￨3￨e SubsystemRegistration￨3￨e subsystem￨3￨e =￨3￨e context￨3￨e .￨3￨e registerSubsystem￨3￨e (￨3￨e WeldExtension￨3￨e .￨3￨e SUBSYSTEM_NAME￨3￨e ,￨3￨e WeldExtension￨3￨e .￨3￨e MANAGEMENT_API_MAJOR_VERSION￨3￨e ,￨3￨e WeldExtension￨3￨e .￨3￨e MANAGEMENT_API_MINOR_VERSION￨3￨e ,￨3￨e WeldExtension￨3￨e .￨3￨e MANAGEMENT_API_MICRO_VERSION￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e registration￨3￨e =￨3￨e subsystem￨3￨e .￨3￨e registerSubsystemModel￨3￨e (￨3￨e WeldExtension￨3￨e .￨3￨e WELD_SUBSYSTEM_RESOURCE￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b registration￨3￨b .￨3￨b registerOperationHandler￨3￨b (￨3￨b DESCRIBE￨3￨b ,￨3￨b INSTANCE￨3￨b ,￨3￨b INSTANCE￨3￨b ,￨3￨b false￨3￨b ,￨3￨b PRIVATE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b subsystem￨3￨e .￨3￨e registerXMLElementWriter￨3￨e (￨3￨e WeldExtension￨3￨e .￨3￨e parser￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initializeParsers￨2￨f (￨2￨f final￨3￨p ExtensionParsingContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d WeldSubsystemParser￨2￨d implements￨2￨d XMLStreamConstants￨2￨d ,￨2￨d XMLElementReader￨2￨d <￨2￨d List￨2￨d <￨2￨d ModelNode￨2￨d >￨2￨d >￨2￨d ,￨2￨d XMLElementWriter￨2￨d <￨2￨d SubsystemMarshallingContext￨2￨d >￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f void￨3￨f readElement￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f writeContent￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamWriter￨3￨f streamWriter￨3￨f ,￨3￨f final￨3￨f SubsystemMarshallingContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Expression￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨f static￨2￨f final￨2￨f boolean￨2￨f isConstantValueRepresentable￨2￨f (￨2￨f Constant￨3￨p constant￨3￨p ,￨3￨p int￨3￨p constantTypeID￨3￨p ,￨3￨p int￨3￨p targetTypeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨e Constant￨2￨e constant￨2￨e ;￨2￨e public￨2￨e int￨2￨e implicitConversion￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e resolvedType￨2￨e ;￨2￨e public￨2￨f Expression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f checkCastTypesCompatibility￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f checkNullStatus￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p int￨3￨p nullStatus￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getAllInheritedMethods￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f getAllInheritedMethods0￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p ,￨3￨p ArrayList￨3￨p collector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkNullComparison￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p FlowInfo￨3￨p initsWhenTrue￨3￨p ,￨3￨p FlowInfo￨3￨p initsWhenFalse￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f checkUnsafeCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p TypeBinding￨3￨p match￨3￨p ,￨3￨p boolean￨3￨p isNarrowing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeConversion￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p runtimeTimeType￨3￨p ,￨3￨p TypeBinding￨3￨p compileTimeType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedBoolean￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Label￨3￨p trueLabel￨3￨p ,￨3￨p Label￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c (￨4￨c constant￨4￨c )￨4￨c !=￨4￨c (￨4￨c Constant￨4￨c .￨4￨c NotAConstant￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c constant￨4￨c .￨4￨c typeID￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c TypeIds￨4￨c .￨4￨c T_boolean￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j int￨4￨e pc￨4￨e =￨4￨e codeStream￨4￨e .￨4￨e position￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c constant￨5￨c .￨5￨c booleanValue￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c true￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j valueRequired￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j falseLabel￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j trueLabel￨8￨c !=￨8￨c null￨8￨c )￨7￨j {￨7￨j codeStream￨8￨e .￨8￨e goto_￨8￨e (￨8￨e trueLabel￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨j }￨5￨j }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j valueRequired￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j falseLabel￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j trueLabel￨8￨c ==￨8￨c null￨8￨c )￨7￨j {￨7￨j codeStream￨8￨e .￨8￨e goto_￨8￨e (￨8￨e falseLabel￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨j }￨5￨j }￨4￨j codeStream￨4￨e .￨4￨e recordPositionsFrom￨4￨e (￨4￨e pc￨4￨e ,￨4￨e this￨4￨e .￨4￨e sourceStart￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j generateCode￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e codeStream￨3￨e ,￨3￨e valueRequired￨3￨e )￨3￨e ;￨3￨e int￨3￨e position￨3￨e =￨3￨e codeStream￨3￨e .￨3￨e position￨3￨e ;￨3￨e if￨3￨j (￨3￨j valueRequired￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j falseLabel￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j trueLabel￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e ifne￨6￨e (￨6￨e trueLabel￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j trueLabel￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e ifeq￨6￨e (￨6￨e falseLabel￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j }￨5￨j }￨4￨j }￨3￨j <START_BUG>￨3￨b codeStream￨3￨b .￨3￨b updateLastRecordedEndPC￨3￨b (￨3￨b position￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f generateOptimizedStringConcatenation￨2￨f (￨2￨f BlockScope￨3￨p blockScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p int￨3￨p typeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateOptimizedStringConcatenationCreation￨2￨f (￨2￨f BlockScope￨3￨p blockScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p int￨3￨p typeID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCompactableOperation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isConstantValueOfTypeAssignableToType￨2￨f (￨2￨f TypeBinding￨3￨p constantType￨3￨p ,￨3￨p TypeBinding￨3￨p targetType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isTypeReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f nullStatus￨2￨f (￨2￨f FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f optimizedBooleanConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveTypeExpecting￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpectedType￨2￨f (￨2￨f TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsUnnecessaryCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsNeedCheckCast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f toTypeReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p CompilationUnitScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalVariableBinding￨2￨f localVariableBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LongLiteral￨1￨d extends￨1￨d NumberLiteral￨1￨d {￨1￨d long￨2￨e value￨2￨e ;￨2￨e static￨2￨e final￨2￨e Constant￨2￨e FORMAT_ERROR￨2￨e =￨2￨e new￨2￨e DoubleConstant￨2￨e (￨2￨e (￨2￨e 1.0￨2￨e /￨2￨e 0.0￨2￨e )￨2￨e )￨2￨e ;￨2￨e public￨2￨f LongLiteral￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p token￨3￨p ,￨3￨p int￨3￨p s￨3￨p ,￨3￨p int￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f LongLiteral￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p token￨3￨p ,￨3￨p int￨3￨p s￨3￨p ,￨3￨p int￨3￨p e￨3￨p ,￨3￨p long￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e length￨3￨e =￨3￨e (￨3￨e source￨3￨e .￨3￨e length￨3￨e )￨3￨e -￨3￨e 1￨3￨e ;￨3￨e long￨3￨e computedValue￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c source￨4￨c [￨4￨c 0￨4￨c ]￨4￨c )￨4￨c ==￨4￨c '0'￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j length￨5￨c ==￨5￨c 1￨5￨c )￨4￨j {￨4￨j constant￨5￨e =￨5￨e Constant￨5￨e .￨5￨e fromValue￨5￨e (￨5￨e 0L￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j final￨4￨e int￨4￨e shift￨4￨e ;￨4￨e final￨4￨e int￨4￨e radix￨4￨e ;￨4￨e int￨4￨e j￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b (￨4￨b source￨4￨b [￨4￨b 1￨4￨b ]￨4￨b )￨4￨b ==￨4￨b 'x'￨4￨b )￨4￨b |￨4￨b (￨4￨b (￨4￨b source￨4￨b [￨4￨b 1￨4￨b ]￨4￨b )￨4￨b ==￨4￨b 'X'￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b shift￨4￨e =￨4￨e 4￨4￨e ;￨4￨e j￨4￨e =￨4￨e 2￨4￨e ;￨4￨e radix￨4￨e =￨4￨e 16￨4￨e ;￨4￨e else￨4￨j {￨4￨j shift￨5￨e =￨5￨e 3￨5￨e ;￨5￨e j￨5￨e =￨5￨e 1￨5￨e ;￨5￨e radix￨5￨e =￨5￨e 8￨5￨e ;￨5￨e }￨4￨j int￨4￨e nbDigit￨4￨e =￨4￨e 0￨4￨e ;￨4￨e while￨4￨l (￨4￨l (￨5￨c source￨5￨c [￨5￨c j￨5￨c ]￨5￨c )￨5￨c ==￨5￨c '0'￨5￨c )￨4￨l {￨4￨l j￨5￨e ++￨5￨e ;￨5￨e if￨5￨j (￨5￨j j￨6￨c ==￨6￨c length￨6￨c )￨5￨j {￨5￨j constant￨6￨e =￨6￨e Constant￨6￨e .￨6￨e fromValue￨6￨e (￨6￨e (￨6￨e value￨6￨e =￨6￨e 0L￨6￨e )￨6￨e )￨6￨e ;￨6￨e return￨6￨e ;￨6￨e }￨5￨j }￨4￨l int￨4￨e digitValue￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c digitValue￨5￨c =￨5￨c Character￨5￨c .￨5￨c digit￨5￨c (￨5￨c source￨5￨c [￨5￨c (￨5￨c j￨5￨c ++￨5￨c )￨5￨c ]￨5￨c ,￨5￨c radix￨5￨c )￨5￨c )￨5￨c <￨5￨c 0￨5￨c )￨4￨j {￨4￨j constant￨5￨e =￨5￨e LongLiteral￨5￨e .￨5￨e FORMAT_ERROR￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j digitValue￨5￨c >=￨5￨c 8￨5￨c )￨4￨j {￨4￨j nbDigit￨5￨e =￨5￨e 4￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j digitValue￨5￨c >=￨5￨c 4￨5￨c )￨4￨j {￨4￨j nbDigit￨5￨e =￨5￨e 3￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j digitValue￨5￨c >=￨5￨c 2￨5￨c )￨4￨j {￨4￨j nbDigit￨5￨e =￨5￨e 2￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j nbDigit￨5￨e =￨5￨e 1￨5￨e ;￨5￨e }￨4￨j computedValue￨4￨e =￨4￨e digitValue￨4￨e ;￨4￨e while￨4￨l (￨4￨l j￨5￨c <￨5￨c length￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c digitValue￨6￨c =￨6￨c Character￨6￨c .￨6￨c digit￨6￨c (￨6￨c source￨6￨c [￨6￨c (￨6￨c j￨6￨c ++￨6￨c )￨6￨c ]￨6￨c ,￨6￨c radix￨6￨c )￨6￨c )￨6￨c <￨6￨c 0￨6￨c )￨5￨j {￨5￨j constant￨6￨e =￨6￨e LongLiteral￨6￨e .￨6￨e FORMAT_ERROR￨6￨e ;￨6￨e return￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c nbDigit￨6￨c +=￨6￨c shift￨6￨c )￨6￨c >￨6￨c 64￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j computedValue￨5￨e =￨5￨e (￨5￨e computedValue￨5￨e <<￨5￨e shift￨5￨e )￨5￨e |￨5￨e digitValue￨5￨e ;￨5￨e }￨4￨l }￨3￨j else￨3￨j {￨3￨j long￨4￨e previous￨4￨e =￨4￨e computedValue￨4￨e =￨4￨e 0￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l int￨5￨e digitValue￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c digitValue￨6￨c =￨6￨c Character￨6￨c .￨6￨c digit￨6￨c (￨6￨c source￨6￨c [￨6￨c i￨6￨c ]￨6￨c ,￨6￨c 10￨6￨c )￨6￨c )￨6￨c <￨6￨c 0￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j previous￨5￨e =￨5￨e computedValue￨5￨e ;￨5￨e computedValue￨5￨e =￨5￨e (￨5￨e 10￨5￨e *￨5￨e computedValue￨5￨e )￨5￨e +￨5￨e digitValue￨5￨e ;￨5￨e if￨5￨j (￨5￨j previous￨6￨c >￨6￨c computedValue￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j constant￨3￨e =￨3￨e Constant￨3￨e .￨3￨e fromValue￨3￨e (￨3￨e (￨3￨e value￨3￨e =￨3￨e computedValue￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f literalType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f mayRepresentMIN_VALUE￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CSVPrinterTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d String￨2￨e lineSeparator￨2￨e =￨2￨e "\n"￨2￨e ;￨2￨e public￨2￨f void￨2￨f testPrinter1￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter2￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter3￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter4￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter5￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter6￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPrinter7￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testExcelPrinter1￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testExcelPrinter2￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandom￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e iter￨3￨e =￨3￨e 10000￨3￨e ;￨3￨e format￨3￨e =￨3￨e CSVFormat￨3￨e .￨3￨e DEFAULT￨3￨e ;￨3￨e doRandom￨3￨e (￨3￨e iter￨3￨e )￨3￨e ;￨3￨e format￨3￨e =￨3￨e CSVFormat￨3￨e .￨3￨e EXCEL￨3￨e ;￨3￨e doRandom￨3￨e (￨3￨e iter￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b format￨3￨b =￨3￨b new￨3￨b CSVFormat￨3￨b (￨3￨b '\t'￨3￨b ,￨3￨b CSVFormat￨3￨b .￨3￨b ENCAPSULATOR_DISABLED￨3￨b ,￨3￨b CSVFormat￨3￨b .￨3￨b COMMENTS_DISABLED￨3￨b ,￨3￨b '\\'￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b doRandom￨3￨e (￨3￨e iter￨3￨e )￨3￨e ;￨3￨e }￨2￨f Random￨2￨e r￨2￨e =￨2￨e new￨2￨e Random￨2￨e (￨2￨e )￨2￨e ;￨2￨e CSVFormat￨2￨e format￨2￨e ;￨2￨e public￨2￨f void￨2￨f doRandom￨2￨f (￨2￨f int￨2￨f iter￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f doOneRandom￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p a￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f printable￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f randStr￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d XmlLogger￨1￨d implements￨1￨d BuildListener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e DocumentBuilder￨2￨e builder￨2￨e =￨2￨e XmlLogger￨2￨e .￨2￨e getDocumentBuilder￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f DocumentBuilder￨2￨f getDocumentBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e String￨2￨e BUILD_TAG￨2￨e =￨2￨e "build"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TARGET_TAG￨2￨e =￨2￨e "target"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TASK_TAG￨2￨e =￨2￨e "task"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e MESSAGE_TAG￨2￨e =￨2￨e "message"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e NAME_ATTR￨2￨e =￨2￨e "name"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TIME_ATTR￨2￨e =￨2￨e "time"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PRIORITY_ATTR￨2￨e =￨2￨e "priority"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e LOCATION_ATTR￨2￨e =￨2￨e "location"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ERROR_ATTR￨2￨e =￨2￨e "error"￨2￨e ;￨2￨e private￨2￨e Document￨2￨e doc￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e tasks￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e targets￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e threadStacks￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e XmlLogger￨2￨e .￨2￨e TimedElement￨2￨e buildElement￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨d static￨2￨d class￨2￨d TimedElement￨2￨d {￨2￨d long￨3￨e startTime￨3￨e ;￨3￨e Element￨3￨e element￨3￨e ;￨3￨e }￨2￨d public￨2￨f XmlLogger￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f buildStarted￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f buildFinished￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f long￨3￨e totalTime￨3￨e =￨3￨e (￨3￨e System￨3￨e .￨3￨e currentTimeMillis￨3￨e (￨3￨e )￨3￨e )￨3￨e -￨3￨e (￨3￨e buildElement￨3￨e .￨3￨e startTime￨3￨e )￨3￨e ;￨3￨e buildElement￨3￨e .￨3￨e element￨3￨e .￨3￨e setAttribute￨3￨e (￨3￨e XmlLogger￨3￨e .￨3￨e TIME_ATTR￨3￨e ,￨3￨e DefaultLogger￨3￨e .￨3￨e formatTime￨3￨e (￨3￨e totalTime￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c event￨4￨c .￨4￨c getException￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j buildElement￨4￨e .￨4￨e element￨4￨e .￨4￨e setAttribute￨4￨e (￨4￨e XmlLogger￨4￨e .￨4￨e ERROR_ATTR￨4￨e ,￨4￨e event￨4￨e .￨4￨e getException￨4￨e (￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f String￨4￨e outFilename￨4￨e =￨4￨e event￨4￨e .￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e "XmlLogger.file"￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j outFilename￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j outFilename￨5￨e =￨5￨e "log.xml"￨5￨e ;￨5￨e }￨4￨j Writer￨4￨e out￨4￨e =￨4￨e new￨4￨e OutputStreamWriter￨4￨e (￨4￨e new￨4￨e FileOutputStream￨4￨e (￨4￨e outFilename￨4￨e )￨4￨e ,￨4￨e "UTF8"￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b out￨4￨b .￨4￨b write￨4￨b (￨4￨b "<?xml<seq2seq4repair_space>version=\"1.0\"?>\n"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b out￨4￨e .￨4￨e write￨4￨e (￨4￨e "<?xml:stylesheet<seq2seq4repair_space>type=\"text/xsl\"<seq2seq4repair_space>href=\"log.xsl\"?>\n\n"￨4￨e )￨4￨e ;￨4￨e new￨4￨e DOMElementWriter￨4￨e (￨4￨e )￨4￨e .￨4￨e write￨4￨e (￨4￨e buildElement￨4￨e .￨4￨e element￨4￨e ,￨4￨e out￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e "\t"￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e flush￨4￨e (￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p exc￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e BuildException￨4￨e (￨4￨e "Unable<seq2seq4repair_space>to<seq2seq4repair_space>close<seq2seq4repair_space>log<seq2seq4repair_space>file"￨4￨e ,￨4￨e exc￨4￨e )￨4￨e ;￨4￨e }￨3￨f buildElement￨3￨e =￨3￨e null￨3￨e ;￨3￨e }￨2￨f private￨2￨f Stack￨2￨f getStack￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f targetStarted￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f targetFinished￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f taskStarted￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f taskFinished￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f messageLogged￨2￨f (￨2￨f BuildEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LabeledStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Statement￨2￨e statement￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e label￨2￨e ;￨2￨e public￨2￨e Label￨2￨e targetLabel￨2￨e ;￨2￨e int￨2￨e mergedInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f LabeledStatement￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p label￨3￨p ,￨3￨p Statement￨3￨p statement￨3￨p ,￨3￨p int￨3￨p sourceStart￨3￨p ,￨3￨p int￨3￨p sourceEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ASTNode￨2￨f concreteStatement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f int￨3￨e pc￨3￨e =￨3￨e codeStream￨3￨e .￨3￨e position￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c targetLabel￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b targetLabel￨4￨b .￨4￨b codeStream￨4￨b =￨4￨b codeStream￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c statement￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j statement￨5￨e .￨5￨e generateCode￨5￨e (￨5￨e currentScope￨5￨e ,￨5￨e codeStream￨5￨e )￨5￨e ;￨5￨e }￨4￨j targetLabel￨4￨e .￨4￨e place￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c mergedInitStateIndex￨4￨c )￨4￨c !=￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e removeNotDefinitelyAssignedVariables￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e mergedInitStateIndex￨4￨e )￨4￨e ;￨4￨e }￨3￨j codeStream￨3￨e .￨3￨e recordPositionsFrom￨3￨e (￨3￨e pc￨3￨e ,￨3￨e this￨3￨e .￨3￨e sourceStart￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetStateForCodeGeneration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StatefulComponentDescription￨1￨d extends￨1￨d SessionBeanComponentDescription￨1￨d {￨1￨d private￨2￨e Method￨2￨e afterBegin￨2￨e ;￨2￨e private￨2￨e Method￨2￨e afterCompletion￨2￨e ;￨2￨e private￨2￨e Method￨2￨e beforeCompletion￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e MethodIdentifier￨2￨e ,￨2￨e StatefulComponentDescription￨2￨e .￨2￨e StatefulRemoveMethod￨2￨e >￨2￨e removeMethods￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e MethodIdentifier￨2￨e ,￨2￨e StatefulComponentDescription￨2￨e .￨2￨e StatefulRemoveMethod￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e StatefulTimeoutInfo￨2￨e statefulTimeout￨2￨e ;￨2￨e private￨2￨e CacheInfo￨2￨e cache￨2￨e ;￨2￨e private￨2￨e Map￨2￨e <￨2￨e Method￨2￨e ,￨2￨e String￨2￨e >￨2￨e initMethods￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Method￨2￨e ,￨2￨e String￨2￨e >￨2￨e (￨2￨e 0￨2￨e )￨2￨e ;￨2￨e public￨2￨d class￨2￨d StatefulRemoveMethod￨2￨d {￨2￨d private￨3￨e final￨3￨e MethodIdentifier￨3￨e methodIdentifier￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e retainIfException￨3￨e ;￨3￨e StatefulRemoveMethod￨3￨f (￨3￨f final￨4￨p MethodIdentifier￨4￨p method￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p retainIfException￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f MethodIdentifier￨3￨f getMethodIdentifier￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isRetainIfException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f Object￨4￨p o￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f StatefulComponentDescription￨2￨f (￨2￨f final￨3￨p String￨3￨p componentName￨3￨p ,￨3￨p final￨3￨p String￨3￨p componentClassName￨3￨p ,￨3￨p final￨3￨p EjbJarDescription￨3￨p ejbJarDescription￨3￨p ,￨3￨p final￨3￨p ServiceName￨3￨p deploymentUnitServiceName￨3￨p ,￨3￨p final￨3￨p SessionBeanMetaData￨3￨p descriptorData￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addInitMethodInvokingInterceptor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addStatefulSessionSynchronizationInterceptor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ComponentConfiguration￨2￨f createConfiguration￨2￨f (￨2￨f final￨3￨p ClassIndex￨3￨p classIndex￨3￨p ,￨3￨p final￨3￨p ClassLoader￨3￨p moduleClassLoder￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f allowsConcurrentAccess￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Method￨2￨f getAfterBegin￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Method￨2￨f getAfterCompletion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Method￨2￨f getBeforeCompletion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f SessionBeanType￨2￨f getSessionBeanType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAfterBegin￨2￨f (￨2￨f final￨3￨p Method￨3￨p afterBegin￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAfterCompletion￨2￨f (￨2￨f final￨3￨p Method￨3￨p afterCompletion￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBeforeCompletion￨2￨f (￨2￨f final￨3￨p Method￨3￨p afterCompletion￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f setupViewInterceptors￨2￨f (￨2￨f EJBViewDescription￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f ViewConfigurator￨2￨f getSessionBeanObjectViewConfigurator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addViewSerializationInterceptor￨2￨f (￨2￨f final￨3￨p ViewDescription￨3￨p view￨3￨p )￨2￨f {￨2￨f view￨3￨e .￨3￨e setSerializable￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e view￨3￨e .￨3￨e setUseWriteReplace￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e view￨3￨f .￨3￨f getConfigurators￨3￨f (￨3￨f )￨3￨f .￨3￨f add￨3￨f (￨3￨f new￨3￨f ViewConfigurator￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f configure￨4￨f (￨4￨f final￨4￨f DeploymentPhaseContext￨4￨f context￨4￨f ,￨4￨f final￨4￨f ComponentConfiguration￨4￨f componentConfiguration￨4￨f ,￨4￨f final￨4￨f ViewDescription￨4￨f description￨4￨f ,￨4￨f final￨4￨f ViewConfiguration￨4￨f configuration￨4￨f )￨4￨f throws￨4￨f DeploymentUnitProcessingException￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e DeploymentReflectionIndex￨5￨e index￨5￨e =￨5￨e context￨5￨e .￨5￨e getDeploymentUnit￨5￨e (￨5￨e )￨5￨e .￨5￨e getAttachment￨5￨e (￨5￨e REFLECTION_INDEX￨5￨e )￨5￨e ;￨5￨e ClassReflectionIndex￨5￨d <￨5￨d WriteReplaceInterface￨5￨d >￨5￨d classIndex￨5￨d =￨5￨d index￨5￨d .￨5￨d getClassIndex￨5￨d (￨5￨d WriteReplaceInterface￨5￨d .￨5￨d class￨5￨d )￨5￨d ;￨5￨d for￨5￨d (￨5￨d Method￨5￨d method￨5￨d :￨5￨d classIndex￨5￨d .￨5￨d getMethods￨5￨d (￨5￨d )￨5￨d )￨5￨d {￨5￨d <START_BUG>￨6￨b configuration￨6￨b .￨6￨b addClientInterceptor￨6￨b (￨6￨b method￨6￨b ,￨6￨b new￨6￨b WriteReplaceInterceptor￨6￨b .￨6￨b Factory￨6￨b (￨6￨b configuration￨6￨b .￨6￨b getViewServiceName￨6￨b (￨6￨b )￨6￨b .￨6￨b getCanonicalName￨6￨b (￨6￨b )￨6￨b )￨6￨b ,￨6￨b WRITE_REPLACE￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨d }￨4￨f }￨3￨f )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f addRemoveMethod￨2￨f (￨2￨f final￨3￨p MethodIdentifier￨3￨p removeMethod￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p retainIfException￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f StatefulComponentDescription￨2￨f .￨2￨f StatefulRemoveMethod￨2￨f >￨2￨f getRemoveMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StatefulTimeoutInfo￨2￨f getStatefulTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setStatefulTimeout￨2￨f (￨2￨f final￨3￨p StatefulTimeoutInfo￨3￨p statefulTimeout￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addStatefulInstanceAssociatingInterceptor￨2￨f (￨2￨f final￨3￨p EJBViewDescription￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addRemoveMethodInterceptor￨2￨f (￨2￨f final￨3￨p ViewDescription￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addInitMethod￨2￨f (￨2￨f final￨3￨p Method￨3￨p method￨3￨p ,￨3￨p final￨3￨p String￨3￨p createMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Map￨2￨f <￨2￨f Method￨2￨f ,￨2￨f String￨2￨f >￨2￨f getInitMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CacheInfo￨2￨f getCache￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCache￨2￨f (￨2￨f CacheInfo￨3￨p cache￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f isPassivationApplicable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d StatefulBeanTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d StatefulBeanTestCase￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d @￨2￨d Deployment￨2￨d public￨2￨d static￨2￨d JavaArchive￨2￨d createDeployment￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨e EJB￨2￨e (￨2￨e mappedName￨2￨e =￨2￨e "java:global/ejb3-sfsb-example/SimpleStatefulSessionBean!org.jboss.as.demos.ejb3.archive.SimpleStatefulSessionLocal"￨2￨e )￨2￨e private￨2￨e SimpleStatefulSessionLocal￨2￨e localSfsb￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSFSB￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e state￨3￨e =￨3￨e "not<seq2seq4repair_space>in<seq2seq4repair_space>a<seq2seq4repair_space>good<seq2seq4repair_space>mood!"￨3￨e ;￨3￨e localSfsb￨3￨e .￨3￨e setState￨3￨e (￨3￨e state￨3￨e )￨3￨e ;￨3￨e String￨3￨e storedState￨3￨e =￨3￨e localSfsb￨3￨e .￨3￨e getState￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Assert￨3￨b .￨3￨b assertEquals￨3￨b (￨3￨b "Unexpected<seq2seq4repair_space>state<seq2seq4repair_space>returned<seq2seq4repair_space>from<seq2seq4repair_space>stateful<seq2seq4repair_space>session<seq2seq4repair_space>bean"￨3￨b ,￨3￨b (￨3￨b (￨3￨b (￨3￨b SimpleInterceptor￨3￨b .￨3￨b class￨3￨b .￨3￨b getSimpleName￨3￨b (￨3￨b )￨3￨b )￨3￨b +￨3￨b "#"￨3￨b )￨3￨b +￨3￨b state￨3￨b )￨3￨b ,￨3￨b storedState￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
final￨1￨d class￨1￨d EmbedClob￨1￨d extends￨1￨d ConnectionChild￨1￨d implements￨1￨d Clob￨1￨d ,￨1￨d EngineLOB￨1￨d {￨1￨d private￨2￨e InternalClob￨2￨e clob￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isValid￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e int￨2￨e locator￨2￨e ;￨2￨e EmbedClob￨2￨f (￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f EmbedClob￨2￨f (￨2￨f EmbedConnection￨2￨f con￨2￨f ,￨2￨f DataValueDescriptor￨2￨f dvd￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f length￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSubString￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f int￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Reader￨2￨f getCharacterStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getAsciiStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f String￨2￨f searchStr￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f Clob￨2￨f searchClob￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setString￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f String￨2￨f str￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setString￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f String￨2￨f str￨2￨f ,￨2￨f int￨2￨f offset￨2￨f ,￨2￨f int￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f OutputStream￨2￨f setAsciiStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Writer￨2￨f setCharacterStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f truncate￨2￨f (￨2￨f long￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f free￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Reader￨2￨f getCharacterStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f long￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f checkValidity￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j pos￨4￨c <=￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_BAD_POSITION￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e pos￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j length￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_NONPOSITIVE_LENGTH￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e length￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b length￨3￨b >￨3￨b (￨3￨b (￨3￨b this￨3￨b .￨3￨b length￨3￨b (￨3￨b )￨3￨b )￨3￨b -￨3￨b pos￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b throw￨3￨e Util￨3￨e .￨3￨e generateCsSQLException￨3￨e (￨3￨e POS_AND_LENGTH_GREATER_THAN_LOB￨3￨e ,￨3￨e new￨3￨e Long￨3￨e (￨3￨e pos￨3￨e )￨3￨e ,￨3￨e new￨3￨e Long￨3￨e (￨3￨e length￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e new￨4￨e ClobUpdatableReader￨4￨e (￨4￨e this￨4￨e ,￨4￨e (￨4￨e pos￨4￨e -￨4￨e 1￨4￨e )￨4￨e ,￨4￨e length￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ioe￨4￨p )￨3￨f {￨3￨f throw￨4￨e Util￨4￨e .￨4￨e setStreamFailure￨4￨e (￨4￨e ioe￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f void￨2￨f checkValidity￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f makeWritableClobClone￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f makeWritableClobClone￨2￨f (￨2￨f long￨2￨f len￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f InternalClob￨2￨f getInternalClob￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLocator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d KindedPointcut￨1￨d extends￨1￨d Pointcut￨1￨d {￨1￨d Kind￨2￨e kind￨2￨e ;￨2￨e private￨2￨e SignaturePattern￨2￨e signature￨2￨e ;￨2￨e private￨2￨e Set￨2￨e matchKinds￨2￨e ;￨2￨e private￨2￨e ShadowMunger￨2￨e munger￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f KindedPointcut￨2￨f (￨2￨f Shadow￨3￨p .￨3￨p Kind￨3￨p kind￨3￨p ,￨3￨p SignaturePattern￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f KindedPointcut￨2￨f (￨2￨f Shadow￨3￨p .￨3￨p Kind￨3￨p kind￨3￨p ,￨3￨p SignaturePattern￨3￨p signature￨3￨p ,￨3￨p ShadowMunger￨3￨p munger￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SignaturePattern￨2￨f getSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f couldMatchKinds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f couldEverMatchSameJoinPointsAs￨2￨f (￨2￨f KindedPointcut￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f fastMatch￨2￨f (￨2￨f FastMatchInfo￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f fastMatch￨2￨f (￨2￨f Class￨3￨p targetType￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FuzzyBoolean￨2￨f matchInternal￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f warnOnBridgeMethod￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f match￨2￨f (￨2￨f JoinPoint￨3￨p .￨3￨p StaticPart￨3￨p jpsp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f matchesDynamically￨2￨f (￨2￨f Object￨3￨p thisObject￨3￨p ,￨3￨p Object￨3￨p targetObject￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f matchesStatically￨2￨f (￨2￨f String￨3￨p joinpointKind￨3￨p ,￨3￨p Member￨3￨p member￨3￨p ,￨3￨p Class￨3￨p thisClass￨3￨p ,￨3￨p Class￨3￨p targetClass￨3￨p ,￨3￨p Member￨3￨p withinCode￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f warnOnConfusingSig￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f postRead￨2￨f (￨2￨f ResolvedType￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Pointcut￨2￨f read￨2￨f (￨2￨f VersionedDataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c kind￨4￨c )￨4￨c ==￨4￨c (￨4￨c Shadow￨4￨c .￨4￨c Initialization￨4￨c )￨4￨c )￨3￨j {￨3￨j }￨3￨j signature￨3￨e =￨3￨e signature￨3￨e .￨3￨e resolveBindings￨3￨e (￨3￨e scope￨3￨e ,￨3￨e bindings￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c kind￨4￨c )￨4￨c ==￨4￨c (￨4￨c Shadow￨4￨c .￨4￨c ConstructorExecution￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c signature￨5￨c .￨5￨c getDeclaringType￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j World￨5￨e world￨5￨e =￨5￨e scope￨5￨e .￨5￨e getWorld￨5￨e (￨5￨e )￨5￨e ;￨5￨e UnresolvedType￨5￨e exactType￨5￨e =￨5￨e signature￨5￨e .￨5￨e getDeclaringType￨5￨e (￨5￨e )￨5￨e .￨5￨e getExactType￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c (￨6￨c (￨6￨c signature￨6￨c .￨6￨c getKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c org￨6￨c .￨6￨c aspectj￨6￨c .￨6￨c weaver￨6￨c .￨6￨c Member￨6￨c .￨6￨c CONSTRUCTOR￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c !￨6￨c (￨6￨c exactType￨6￨c .￨6￨c equals￨6￨c (￨6￨c MISSING￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c exactType￨6￨c .￨6￨c resolve￨6￨c (￨6￨c world￨6￨c )￨6￨c .￨6￨c isInterface￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c !￨6￨c (￨6￨c signature￨6￨c .￨6￨c getDeclaringType￨6￨c (￨6￨c )￨6￨c .￨6￨c isIncludeSubtypes￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j world￨6￨e .￨6￨e getLint￨6￨e (￨6￨e )￨6￨e .￨6￨e noInterfaceCtorJoinpoint￨6￨e .￨6￨e signal￨6￨e (￨6￨e exactType￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e ,￨6￨e getSourceLocation￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c kind￨4￨c )￨4￨c ==￨4￨c (￨4￨c Shadow￨4￨c .￨4￨c StaticInitialization￨4￨c )￨4￨c )￨3￨j {￨3￨j UnresolvedType￨4￨e exactType￨4￨e =￨4￨e signature￨4￨e .￨4￨e getDeclaringType￨4￨e (￨4￨e )￨4￨e .￨4￨e getExactType￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b exactType￨4￨b .￨4￨b isParameterizedType￨4￨b (￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b !￨4￨b (￨4￨b signature￨4￨b .￨4￨b getDeclaringType￨4￨b (￨4￨b )￨4￨b .￨4￨b isIncludeSubtypes￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b scope￨4￨e .￨4￨e message￨4￨e (￨4￨e MessageUtil￨4￨e .￨4￨e error￨4￨e (￨4￨e WeaverMessages￨4￨e .￨4￨e format￨4￨e (￨4￨e NO_STATIC_INIT_JPS_FOR_PARAMETERIZED_TYPES￨4￨e )￨4￨e ,￨4￨e getSourceLocation￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f resolveBindingsFromRTTI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Test￨2￨f findResidueInternal￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p ,￨3￨p ExposedState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Pointcut￨2￨f concretize1￨2￨f (￨2￨f ResolvedType￨3￨p inAspect￨3￨p ,￨3￨p IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Kind￨2￨f getKind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f accept￨2￨f (￨2￨f PatternNodeVisitor￨3￨p visitor￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d @￨1￨d Category￨1￨d (￨1￨d CommonCriteria￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d EJBSecurityTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e Context￨2￨e ctx￨2￨e ;￨2￨e @￨2￨f AfterClass￨2￨f public￨2￨f static￨2￨f void￨2￨f afterClass￨2￨f (￨2￨f )￨2￨f throws￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f beforeClass￨2￨f (￨2￨f )￨2￨f throws￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f JavaArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e JavaArchive￨3￨e jar￨3￨e =￨3￨e ShrinkWrap￨3￨e .￨3￨e create￨3￨e (￨3￨e JavaArchive￨3￨e .￨3￨e class￨3￨e ,￨3￨e "ejb-security-test.jar"￨3￨e )￨3￨e ;￨3￨e jar￨3￨e .￨3￨e addPackage￨3￨e (￨3￨e AnnotatedSLSB￨3￨e .￨3￨e class￨3￨e .￨3￨e getPackage￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b jar￨3￨b .￨3￨b addAsManifestResource￨3￨b (￨3￨b "ejb/security/ejb-jar.xml"￨3￨b ,￨3￨b "ejb-jar.xml"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b jar￨3￨e .￨3￨e addAsManifestResource￨3￨e (￨3￨e EJBSecurityTestCase￨3￨e .￨3￨e class￨3￨e .￨3￨e getPackage￨3￨e (￨3￨e )￨3￨e ,￨3￨e "jboss-ejb3.xml"￨3￨e ,￨3￨e "jboss-ejb3.xml"￨3￨e )￨3￨e ;￨3￨e jar￨3￨e .￨3￨e addPackage￨3￨e (￨3￨e CommonCriteria￨3￨e .￨3￨e class￨3￨e .￨3￨e getPackage￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e jar￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f <￨2￨f T￨2￨f >￨2￨f T￨2￨f lookup￨2￨f (￨2￨f final￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f beanClass￨2￨f ,￨2￨f final￨2￨f Class￨2￨f <￨2￨f T￨2￨f >￨2￨f viewClass￨2￨f )￨2￨f throws￨2￨f NamingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDenyAllAnnotation￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testEJB2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testExcludeList￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSecurityOnBeanInAbsenceOfExplicitSecurityDomain￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testEmptyRolesAllowedAnnotationValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HttpMirrorServer￨1￨d extends￨1￨d Thread￨1￨d implements￨1￨d Stoppable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e ACCEPT_TIMEOUT￨2￨e =￨2￨e 1000￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e daemonPort￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e boolean￨2￨e running￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e Exception￨2￨e except￨2￨e ;￨2￨e public￨2￨f HttpMirrorServer￨2￨f (￨2￨f int￨3￨p port￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f stopServer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Exception￨2￨f getException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b int￨3￨b port￨3￨b =￨3￨b 8081￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c args￨4￨c .￨4￨c length￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j port￨4￨e =￨4￨e Integer￨4￨e .￨4￨e parseInt￨4￨e (￨4￨e args￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨j LoggingManager￨3￨e .￨3￨e setPriority￨3￨e (￨3￨e "INFO"￨3￨e )￨3￨e ;￨3￨e LoggingManager￨3￨e .￨3￨e setLoggingLevels￨3￨e (￨3￨e System￨3￨e .￨3￨e getProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e HttpMirrorServer￨3￨e serv￨3￨e =￨3￨e new￨3￨e HttpMirrorServer￨3￨e (￨3￨e port￨3￨e )￨3￨e ;￨3￨e serv￨3￨e .￨3￨e start￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeColumn￨1￨d extends￨1￨d Item￨1￨d {￨1￨d Tree￨2￨e parent￨2￨e ;￨2￨e boolean￨2￨e resizable￨2￨e ;￨2￨e boolean￨2￨e moveable￨2￨e ;￨2￨e public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAlignment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMoveable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getNameText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tree￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getResizable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pack￨2￨f (￨2￨f )￨2￨f {￨2￨f checkWidget￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e index￨3￨e =￨3￨e parent￨3￨e .￨3￨e indexOf￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j index￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j int￨3￨e columnWidth￨3￨e =￨3￨e 0￨3￨e ;￨3￨e int￨3￨e hwnd￨3￨e =￨3￨e parent￨3￨e .￨3￨e handle￨3￨e ;￨3￨e int￨3￨e hDC￨3￨e =￨3￨e OS￨3￨e .￨3￨e GetDC￨3￨e (￨3￨e hwnd￨3￨e )￨3￨e ;￨3￨e int￨3￨e oldFont￨3￨e =￨3￨e 0￨3￨e ;￨3￨e int￨3￨e newFont￨3￨e =￨3￨e OS￨3￨e .￨3￨e SendMessage￨3￨e (￨3￨e hwnd￨3￨e ,￨3￨e WM_GETFONT￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j newFont￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j oldFont￨4￨e =￨4￨e OS￨4￨e .￨4￨e SelectObject￨4￨e (￨4￨e hDC￨4￨e ,￨4￨e newFont￨4￨e )￨4￨e ;￨4￨e }￨3￨j int￨3￨e cp￨3￨e =￨3￨e parent￨3￨e .￨3￨e getCodePage￨3￨e (￨3￨e )￨3￨e ;￨3￨e RECT￨3￨e rect￨3￨e =￨3￨e new￨3￨e RECT￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e flags￨3￨e =￨3￨e (￨3￨e OS￨3￨e .￨3￨e DT_CALCRECT￨3￨e )￨3￨e |￨3￨e (￨3￨e OS￨3￨e .￨3￨e DT_NOPREFIX￨3￨e )￨3￨e ;￨3￨e TVITEM￨3￨e tvItem￨3￨e =￨3￨e new￨3￨e TVITEM￨3￨e (￨3￨e )￨3￨e ;￨3￨e tvItem￨3￨e .￨3￨e mask￨3￨e =￨3￨e OS￨3￨e .￨3￨e TVIF_PARAM￨3￨e ;￨3￨e int￨3￨e hItem￨3￨e =￨3￨e OS￨3￨e .￨3￨e SendMessage￨3￨e (￨3￨e hwnd￨3￨e ,￨3￨e TVM_GETNEXTITEM￨3￨e ,￨3￨e TVGN_ROOT￨3￨e ,￨3￨e 0￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l hItem￨4￨c !=￨4￨c 0￨4￨c )￨3￨l {￨3￨l hItem￨4￨e =￨4￨e OS￨4￨e .￨4￨e SendMessage￨4￨e (￨4￨e hwnd￨4￨e ,￨4￨e TVM_GETNEXTITEM￨4￨e ,￨4￨e TVGN_NEXTVISIBLE￨4￨e ,￨4￨e hItem￨4￨e )￨4￨e ;￨4￨e tvItem￨4￨e .￨4￨e hItem￨4￨e =￨4￨e hItem￨4￨e ;￨4￨e OS￨4￨e .￨4￨e SendMessage￨4￨e (￨4￨e hwnd￨4￨e ,￨4￨e TVM_GETITEM￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e tvItem￨4￨e )￨4￨e ;￨4￨e TreeItem￨4￨e item￨4￨e =￨4￨e parent￨4￨e .￨4￨e items￨4￨e [￨4￨e tvItem￨4￨e .￨4￨e lParam￨4￨e ]￨4￨e ;￨4￨e if￨4￨j (￨4￨j index￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j rect￨5￨e .￨5￨e left￨5￨e =￨5￨e item￨5￨e .￨5￨e handle￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c OS￨6￨c .￨6￨c SendMessage￨6￨c (￨6￨c hwnd￨6￨c ,￨6￨c TVM_GETITEMRECT￨6￨c ,￨6￨c 1￨6￨c ,￨6￨c rect￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j columnWidth￨6￨e =￨6￨e Math￨6￨e .￨6￨e max￨6￨e (￨6￨e columnWidth￨6￨e ,￨6￨e rect￨6￨e .￨6￨e right￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j int￨5￨e imageWidth￨5￨e =￨5￨e 0￨5￨e ;￨5￨e int￨5￨e textWidth￨5￨e =￨5￨e 0￨5￨e ;￨5￨e Image￨5￨e image￨5￨e =￨5￨e (￨5￨e (￨5￨e item￨5￨e .￨5￨e images￨5￨e )￨5￨e !=￨5￨e null￨5￨e )￨5￨e ?￨5￨e item￨5￨e .￨5￨e images￨5￨e [￨5￨e index￨5￨e ]￨5￨e :￨5￨e null￨5￨e ;￨5￨e if￨5￨j (￨5￨j image￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j Rectangle￨6￨e bounds￨6￨e =￨6￨e image￨6￨e .￨6￨e getBounds￨6￨e (￨6￨e )￨6￨e ;￨6￨e imageWidth￨6￨e =￨6￨e bounds￨6￨e .￨6￨e width￨6￨e ;￨6￨e }￨5￨j String￨5￨e string￨5￨e =￨5￨e (￨5￨e (￨5￨e item￨5￨e .￨5￨e strings￨5￨e )￨5￨e !=￨5￨e null￨5￨e )￨5￨e ?￨5￨e item￨5￨e .￨5￨e strings￨5￨e [￨5￨e index￨5￨e ]￨5￨e :￨5￨e null￨5￨e ;￨5￨e if￨5￨j (￨5￨j string￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j TCHAR￨6￨e buffer￨6￨e =￨6￨e new￨6￨e TCHAR￨6￨e (￨6￨e cp￨6￨e ,￨6￨e string￨6￨e ,￨6￨e false￨6￨e )￨6￨e ;￨6￨e OS￨6￨e .￨6￨e DrawText￨6￨e (￨6￨e hDC￨6￨e ,￨6￨e buffer￨6￨e ,￨6￨e buffer￨6￨e .￨6￨e length￨6￨e (￨6￨e )￨6￨e ,￨6￨e rect￨6￨e ,￨6￨e flags￨6￨e )￨6￨e ;￨6￨e textWidth￨6￨e =￨6￨e (￨6￨e rect￨6￨e .￨6￨e right￨6￨e )￨6￨e -￨6￨e (￨6￨e rect￨6￨e .￨6￨e left￨6￨e )￨6￨e ;￨6￨e }￨5￨j columnWidth￨5￨e =￨5￨e Math￨5￨e .￨5￨e max￨5￨e (￨5￨e columnWidth￨5￨e ,￨5￨e (￨5￨e (￨5￨e imageWidth￨5￨e +￨5￨e textWidth￨5￨e )￨5￨e +￨5￨e (￨5￨e (￨5￨e Tree￨5￨e .￨5￨e INSET￨5￨e )￨5￨e *￨5￨e 3￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l <START_BUG>￨3￨b TCHAR￨3￨b buffer￨3￨b =￨3￨b new￨3￨b TCHAR￨3￨b (￨3￨b cp￨3￨b ,￨3￨b text￨3￨b ,￨3￨b true￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b OS￨3￨e .￨3￨e DrawText￨3￨e (￨3￨e hDC￨3￨e ,￨3￨e buffer￨3￨e ,￨3￨e buffer￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e ,￨3￨e rect￨3￨e ,￨3￨e flags￨3￨e )￨3￨e ;￨3￨e int￨3￨e headerWidth￨3￨e =￨3￨e (￨3￨e (￨3￨e rect￨3￨e .￨3￨e right￨3￨e )￨3￨e -￨3￨e (￨3￨e rect￨3￨e .￨3￨e left￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e Tree￨3￨e .￨3￨e HEADER_MARGIN￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c image￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c parent￨4￨c .￨4￨c sortColumn￨4￨c )￨4￨c ==￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j Image￨4￨e headerImage￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c parent￨5￨c .￨5￨c sortColumn￨5￨c )￨5￨c ==￨5￨c (￨5￨c this￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c parent￨5￨c .￨5￨c sortDirection￨5￨c )￨5￨c !=￨5￨c (￨5￨c SWT￨5￨c .￨5￨c NULL￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c OS￨6￨c .￨6￨c COMCTL32_MAJOR￨6￨c )￨6￨c <￨6￨c 6￨6￨c )￨5￨j {￨5￨j headerImage￨6￨e =￨6￨e display￨6￨e .￨6￨e getSortImage￨6￨e (￨6￨e parent￨6￨e .￨6￨e sortDirection￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j headerWidth￨6￨e +=￨6￨e Tree￨6￨e .￨6￨e SORT_WIDTH￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j headerImage￨5￨e =￨5￨e image￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j headerImage￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j Rectangle￨5￨e bounds￨5￨e =￨5￨e headerImage￨5￨e .￨5￨e getBounds￨5￨e (￨5￨e )￨5￨e ;￨5￨e headerWidth￨5￨e +=￨5￨e bounds￨5￨e .￨5￨e width￨5￨e ;￨5￨e }￨4￨j int￨4￨e margin￨4￨e =￨4￨e 0￨4￨e ;￨4￨e int￨4￨e hwndHeader￨4￨e =￨4￨e parent￨4￨e .￨4￨e hwndHeader￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c hwndHeader￨5￨c !=￨5￨c 0￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c OS￨5￨c .￨5￨c COMCTL32_VERSION￨5￨c )￨5￨c >=￨5￨c (￨5￨c OS￨5￨c .￨5￨c VERSION￨5￨c (￨5￨c 5￨5￨c ,￨5￨c 80￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j margin￨5￨e =￨5￨e OS￨5￨e .￨5￨e SendMessage￨5￨e (￨5￨e hwndHeader￨5￨e ,￨5￨e HDM_GETBITMAPMARGIN￨5￨e ,￨5￨e 0￨5￨e ,￨5￨e 0￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j margin￨5￨e =￨5￨e (￨5￨e OS￨5￨e .￨5￨e GetSystemMetrics￨5￨e (￨5￨e SM_CXEDGE￨5￨e )￨5￨e )￨5￨e *￨5￨e 3￨5￨e ;￨5￨e }￨4￨j headerWidth￨4￨e +=￨4￨e margin￨4￨e *￨4￨e 2￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j newFont￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j OS￨4￨e .￨4￨e SelectObject￨4￨e (￨4￨e hDC￨4￨e ,￨4￨e oldFont￨4￨e )￨4￨e ;￨4￨e }￨3￨j OS￨3￨e .￨3￨e ReleaseDC￨3￨e (￨3￨e hwnd￨3￨e ,￨3￨e hDC￨3￨e )￨3￨e ;￨3￨e setWidth￨3￨e (￨3￨e Math￨3￨e .￨3￨e max￨3￨e (￨3￨e headerWidth￨3￨e ,￨3￨e columnWidth￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAlignment￨2￨f (￨2￨f int￨3￨p alignment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p ,￨3￨p boolean￨3￨p sort￨3￨p ,￨3￨p boolean￨3￨p right￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMoveable￨2￨f (￨2￨f boolean￨3￨p moveable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setResizable￨2￨f (￨2￨f boolean￨3￨p resizable￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSortDirection￨2￨f (￨2￨f int￨3￨p direction￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWidth￨2￨f (￨2￨f int￨3￨p width￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DrawApplication￨1￨d extends￨1￨d JFrame￨1￨d implements￨1￨d DrawingEditor￨1￨d ,￨1￨d PaletteListener￨1￨d ,￨1￨d VersionRequester￨1￨d {￨1￨d private￨2￨e Tool￨2￨e fTool￨2￨e ;￨2￨e private￨2￨e Iconkit￨2￨e fIconkit￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e fStatusLine￨2￨e ;￨2￨e private￨2￨e DrawingView￨2￨e fView￨2￨e ;￨2￨e private￨2￨e ToolButton￨2￨e fDefaultToolButton￨2￨e ;￨2￨e private￨2￨e ToolButton￨2￨e fSelectedToolButton￨2￨e ;￨2￨e private￨2￨e String￨2￨e fApplicationName￨2￨e ;￨2￨e private￨2￨e StorageFormatManager￨2￨e fStorageFormatManager￨2￨e ;￨2￨e private￨2￨e UndoManager￨2￨e myUndoManager￨2￨e ;￨2￨e protected￨2￨e static￨2￨e String￨2￨e fgUntitled￨2￨e =￨2￨e "untitled"￨2￨e ;￨2￨e private￨2￨e final￨2￨e EventListenerList￨2￨e listenerList￨2￨e =￨2￨e new￨2￨e EventListenerList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e DesktopListener￨2￨e fDesktopListener￨2￨e ;￨2￨e private￨2￨e Desktop￨2￨e fDesktop￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e fgDrawPath￨2￨e =￨2￨e "/CH/ifa/draw/"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e IMAGES￨2￨e =￨2￨e (￨2￨e DrawApplication￨2￨e .￨2￨e fgDrawPath￨2￨e )￨2￨e +￨2￨e "images/"￨2￨e ;￨2￨e protected￨2￨e static￨2￨e int￨2￨e winCount￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e FILE_MENU￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e EDIT_MENU￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e ALIGNMENT_MENU￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e ATTRIBUTES_MENU￨2￨e =￨2￨e 3￨2￨e ;￨2￨e public￨2￨f DrawApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DrawApplication￨2￨f (￨2￨f String￨3￨p title￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DrawApplication￨2￨f createApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f newView￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f newWindow￨2￨f (￨2￨f Drawing￨3￨p initialDrawing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f open￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f synchronized￨2￨f void￨2￨f open￨2￨f (￨2￨f DrawingView￨3￨p newDrawingView￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addListeners￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createMenus￨2￨f (￨2￨f JMenuBar￨3￨p mb￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addMenuIfPossible￨2￨f (￨2￨f JMenuBar￨3￨p mb￨3￨p ,￨3￨p JMenu￨3￨p newMenu￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createFileMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createEditMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createAlignmentMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createDebugMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f CommandMenu￨3￨e menu￨3￨e =￨3￨e new￨3￨e CommandMenu￨3￨e (￨3￨e "Debug"￨3￨e )￨3￨e ;￨3￨e Command￨3￨f cmd￨3￨f =￨3￨f new￨3￨f AbstractCommand￨3￨f (￨3￨f "Simple<seq2seq4repair_space>Update"￨4￨p ,￨4￨p this￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b public￨4￨b void￨4￨b executable￨4￨b (￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b this￨4￨e .￨4￨e view￨4￨e (￨4￨e )￨4￨e .￨4￨e setDisplayUpdate￨4￨e (￨4￨e new￨4￨e SimpleUpdateStrategy￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f ;￨3￨e menu￨3￨e .￨3￨e add￨3￨e (￨3￨e cmd￨3￨e )￨3￨e ;￨3￨e cmd￨3￨f =￨3￨f new￨3￨f AbstractCommand￨3￨f (￨3￨f "Buffered<seq2seq4repair_space>Update"￨4￨p ,￨4￨p this￨4￨p )￨3￨f {￨3￨f public￨4￨f void￨4￨f executable￨4￨f (￨4￨f )￨4￨f {￨4￨f this￨5￨e .￨5￨e view￨5￨e (￨5￨e )￨5￨e .￨5￨e setDisplayUpdate￨5￨e (￨5￨e new￨5￨e BufferedUpdateStrategy￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e menu￨3￨e .￨3￨e add￨3￨e (￨3￨e cmd￨3￨e )￨3￨e ;￨3￨e return￨3￨e menu￨3￨e ;￨3￨e }￨2￨f protected￨2￨f JMenu￨2￨f createAttributesMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createColorMenu￨2￨f (￨2￨f String￨3￨p title￨3￨p ,￨3￨p FigureAttributeConstant￨3￨p attribute￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createArrowMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createFontMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createFontStyleMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JMenu￨2￨f createFontSizeMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JMenu￨2￨f createLookAndFeelMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JToolBar￨2￨f createToolPalette￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createTools￨2￨f (￨2￨f JToolBar￨3￨p palette￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Tool￨2￨f createSelectionTool￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Tool￨2￨f createDefaultTool￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setDefaultTool￨2￨f (￨2￨f Tool￨3￨p newDefaultTool￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tool￨2￨f getDefaultTool￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ToolButton￨2￨f createToolButton￨2￨f (￨2￨f String￨3￨p iconName￨3￨p ,￨3￨p String￨3￨p toolName￨3￨p ,￨3￨p Tool￨3￨p tool￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DrawingView￨2￨f createDrawingView￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DrawingView￨2￨f createDrawingView￨2￨f (￨2￨f Drawing￨3￨p newDrawing￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DrawingView￨2￨f createInitialDrawingView￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Dimension￨2￨f getDrawingViewSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Drawing￨2￨f createDrawing￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Desktop￨2￨f createDesktop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setDesktop￨2￨f (￨2￨f Desktop￨3￨p newDesktop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Desktop￨2￨f getDesktop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StorageFormatManager￨2￨f createStorageFormatManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f setStorageFormatManager￨2￨f (￨2￨f StorageFormatManager￨3￨p newStorageFormatManager￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StorageFormatManager￨2￨f getStorageFormatManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Dimension￨2￨f defaultSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JTextField￨2￨f createStatusLine￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setStatusLine￨2￨f (￨2￨f JTextField￨3￨p newStatusLine￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JTextField￨2￨f getStatusLine￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paletteUserSelected￨2￨f (￨2￨f PaletteButton￨3￨p paletteButton￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paletteUserOver￨2￨f (￨2￨f PaletteButton￨3￨p paletteButton￨3￨p ,￨3￨p boolean￨3￨p inside￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tool￨2￨f tool￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DrawingView￨2￨f view￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setView￨2￨f (￨2￨f DrawingView￨3￨p newView￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DrawingView￨2￨f [￨2￨f ]￨2￨f views￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f toolDone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f figureSelectionChanged￨2￨f (￨2￨f DrawingView￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkCommandMenu￨2￨f (￨2￨f CommandMenu￨3￨p cm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addViewChangeListener￨2￨f (￨2￨f ViewChangeListener￨3￨p vsl￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeViewChangeListener￨2￨f (￨2￨f ViewChangeListener￨3￨p vsl￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireViewSelectionChangedEvent￨2￨f (￨2￨f DrawingView￨3￨p oldView￨3￨p ,￨3￨p DrawingView￨3￨p newView￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireViewCreatedEvent￨2￨f (￨2￨f DrawingView￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireViewDestroyingEvent￨2￨f (￨2￨f DrawingView￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showStatus￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTool￨2￨f (￨2￨f Tool￨3￨p t￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setSelected￨2￨f (￨2￨f ToolButton￨3￨p button￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f exit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f destroy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f promptNew￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f promptOpen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f promptSaveAs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JFileChooser￨2￨f createOpenFileChooser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JFileChooser￨2￨f createSaveFileChooser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f print￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f saveDrawing￨2￨f (￨2￨f StorageFormat￨3￨p storeFormat￨3￨p ,￨3￨p String￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f loadDrawing￨2￨f (￨2￨f StorageFormat￨3￨p restoreFormat￨3￨p ,￨3￨p String￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f newLookAndFeel￨2￨f (￨2￨f String￨3￨p landf￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setDrawingTitle￨2￨f (￨2￨f String￨3￨p drawingTitle￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getDrawingTitle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setApplicationName￨2￨f (￨2￨f String￨3￨p applicationName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getApplicationName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setUndoManager￨2￨f (￨2￨f UndoManager￨3￨p newUndoManager￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UndoManager￨2￨f getUndoManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f VersionControlStrategy￨2￨f getVersionControlStrategy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getRequiredVersions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDefaultDrawingTitle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DesktopListener￨2￨f getDesktopListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setDesktopListener￨2￨f (￨2￨f DesktopListener￨3￨p desktopPaneListener￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f DesktopListener￨2￨f createDesktopListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Iconkit￨2￨f createIconkit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setIconkit￨2￨f (￨2￨f Iconkit￨3￨p newIconkit￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Iconkit￨2￨f getIconkit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MethodVerifier￨1￨d implements￨1￨d TagBits￨1￨d ,￨1￨d TypeConstants￨1￨d {￨1￨d SourceTypeBinding￨2￨e type￨2￨e ;￨2￨e HashtableOfObject￨2￨e inheritedMethods￨2￨e ;￨2￨e HashtableOfObject￨2￨e currentMethods￨2￨e ;￨2￨e ReferenceBinding￨2￨e runtimeException￨2￨e ;￨2￨e ReferenceBinding￨2￨e errorException￨2￨e ;￨2￨e LookupEnvironment￨2￨e environment￨2￨e ;￨2￨e MethodVerifier￨2￨f (￨2￨f LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areMethodsEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areParametersEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areReturnTypesEqual￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f areTypesEqual￨2￨f (￨2￨f TypeBinding￨3￨p one￨3￨p ,￨3￨p TypeBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canSkipInheritedMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canSkipInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p one￨3￨p ,￨3￨p MethodBinding￨3￨p two￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkAbstractMethod￨2￨f (￨2￨f MethodBinding￨3￨p abstractMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkAgainstInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p methods￨3￨p ,￨3￨p int￨3￨p length￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p otherInheritedMethods￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkConcreteInheritedMethod￨2￨f (￨2￨f MethodBinding￨3￨p concreteMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p abstractMethods￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkExceptions￨2￨f (￨2￨f MethodBinding￨3￨p newMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForBridgeMethod￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p [￨3￨p ]￨3￨p otherInheritedMethods￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForInheritedNameClash￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p otherInheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkForNameClash￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkInheritedMethods￨2￨f (￨2￨f MethodBinding￨3￨p [￨3￨p ]￨3￨p methods￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f MethodBinding￨3￨e first￨3￨e =￨3￨e methods￨3￨e [￨3￨e 0￨3￨e ]￨3￨e ;￨3￨e int￨3￨e index￨3￨e =￨3￨e length￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c (￨4￨c --￨4￨c index￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨4￨c &&￨4￨c (￨4￨c areReturnTypesEqual￨4￨c (￨4￨c first￨4￨c ,￨4￨c methods￨4￨c [￨4￨c index￨4￨c ]￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l }￨3￨l if￨3￨j (￨3￨j index￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e inheritedMethodsHaveIncompatibleReturnTypes￨4￨e (￨4￨e this￨4￨e .￨4￨e type￨4￨e ,￨4￨e methods￨4￨e ,￨4￨e length￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j MethodBinding￨3￨e concreteMethod￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c type￨4￨c .￨4￨c isInterface￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c length￨5￨c ;￨5￨c (￨5￨c --￨5￨c i￨5￨c )￨5￨c >=￨5￨c 0￨5￨c ;￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j !￨6￨c (￨6￨c methods￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c isAbstract￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j concreteMethod￨6￨e =￨6￨e methods￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e break￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j if￨3￨j (￨3￨j concreteMethod￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b this￨4￨b .￨4￨b type￨4￨b .￨4￨b isClass￨4￨b (￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b !￨4￨b (￨4￨b this￨4￨b .￨4￨b type￨4￨b .￨4￨b isAbstract￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c length￨5￨c ;￨5￨c (￨5￨c --￨5￨c i￨5￨c )￨5￨c >=￨5￨c 0￨5￨c ;￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j mustImplementAbstractMethod￨6￨c (￨6￨c methods￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c declaringClass￨6￨c )￨6￨c )￨5￨j {￨5￨j TypeDeclaration￨6￨e typeDeclaration￨6￨e =￨6￨e this￨6￨e .￨6￨e type￨6￨e .￨6￨e scope￨6￨e .￨6￨e referenceContext￨6￨e ;￨6￨e if￨6￨j (￨6￨j typeDeclaration￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j MethodDeclaration￨7￨e missingAbstractMethod￨7￨e =￨7￨e typeDeclaration￨7￨e .￨7￨e addMissingAbstractMethodFor￨7￨e (￨7￨e methods￨7￨e [￨7￨e 0￨7￨e ]￨7￨e )￨7￨e ;￨7￨e missingAbstractMethod￨7￨e .￨7￨e scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e abstractMethodMustBeImplemented￨7￨e (￨7￨e this￨7￨e .￨7￨e type￨7￨e ,￨7￨e methods￨7￨e [￨7￨e 0￨7￨e ]￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e abstractMethodMustBeImplemented￨7￨e (￨7￨e this￨7￨e .￨7￨e type￨7￨e ,￨7￨e methods￨7￨e [￨7￨e 0￨7￨e ]￨7￨e )￨7￨e ;￨7￨e }￨6￨j return￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨4￨e return￨4￨e ;￨4￨e }￨3￨j MethodBinding￨3￨e [￨3￨e ]￨3￨e abstractMethods￨3￨e =￨3￨e new￨3￨e MethodBinding￨3￨e [￨3￨e length￨3￨e -￨3￨e 1￨3￨e ]￨3￨e ;￨3￨e index￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c length￨4￨c ;￨4￨c (￨4￨c --￨4￨c i￨4￨c )￨4￨c >=￨4￨c 0￨4￨c ;￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c methods￨5￨c [￨5￨c i￨5￨c ]￨5￨c )￨5￨c !=￨5￨c concreteMethod￨5￨c )￨4￨j {￨4￨j abstractMethods￨5￨e [￨5￨e (￨5￨e index￨5￨e ++￨5￨e )￨5￨e ]￨5￨e =￨5￨e methods￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e }￨4￨j }￨3￨l checkConcreteInheritedMethod￨3￨e (￨3￨e concreteMethod￨3￨e ,￨3￨e abstractMethods￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f checkMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkPackagePrivateAbstractMethod￨2￨f (￨2￨f MethodBinding￨3￨p abstractMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f computeInheritedMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f computeInheritedMethods￨2￨f (￨2￨f ReferenceBinding￨3￨p superclass￨3￨p ,￨3￨p ReferenceBinding￨3￨p [￨3￨p ]￨3￨p superInterfaces￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f computeMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f MethodBinding￨2￨f computeSubstituteMethod￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p currentMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f doesMethodOverride￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f doReturnTypesCollide￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f ReferenceBinding￨2￨f errorException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isAsVisible￨2￨f (￨2￨f MethodBinding￨3￨p newMethod￨3￨p ,￨3￨p MethodBinding￨3￨p inheritedMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isInterfaceMethodImplemented￨2￨f (￨2￨f MethodBinding￨3￨p inheritedMethod￨3￨p ,￨3￨p MethodBinding￨3￨p existingMethod￨3￨p ,￨3￨p ReferenceBinding￨3￨p superType￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isSameClassOrSubclassOf￨2￨f (￨2￨f ReferenceBinding￨3￨p testClass￨3￨p ,￨3￨p ReferenceBinding￨3￨p superclass￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f mustImplementAbstractMethod￨2￨f (￨2￨f ReferenceBinding￨3￨p declaringClass￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f mustImplementAbstractMethods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ProblemReporter￨2￨f problemReporter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ProblemReporter￨2￨f problemReporter￨2￨f (￨2￨f MethodBinding￨3￨p currentMethod￨3￨p )￨2￨f {￨2￨f }￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f resolvedExceptionTypesFor￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f ReferenceBinding￨2￨f runtimeException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f verify￨2￨f (￨2￨f SourceTypeBinding￨3￨p someType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ExpressionLanguageScenarioTests￨1￨d extends￨1￨d ExpressionTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testScenario_UsingStandardInfrastructure￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testScenario_DefiningVariablesThatWillBeAccessibleInExpressions￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f SpelAntlrExpressionParser￨3￨e parser￨3￨e =￨3￨e new￨3￨e SpelAntlrExpressionParser￨3￨e (￨3￨e )￨3￨e ;￨3￨e StandardEvaluationContext￨3￨e ctx￨3￨e =￨3￨e new￨3￨e StandardEvaluationContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e ctx￨3￨e .￨3￨e setVariable￨3￨e (￨3￨e "favouriteColour"￨3￨e ,￨3￨e "blue"￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Integer￨3￨e >￨3￨e primes￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Integer￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e primes￨3￨e .￨3￨e addAll￨3￨e (￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e 2￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 5￨3￨e ,￨3￨e 7￨3￨e ,￨3￨e 11￨3￨e ,￨3￨e 13￨3￨e ,￨3￨e 17￨3￨e )￨3￨e )￨3￨e ;￨3￨e ctx￨3￨e .￨3￨e setVariable￨3￨e (￨3￨e "primes"￨3￨e ,￨3￨e primes￨3￨e )￨3￨e ;￨3￨e Expression￨3￨e expr￨3￨e =￨3￨e parser￨3￨e .￨3￨e parseExpression￨3￨e (￨3￨e "#favouriteColour"￨3￨e )￨3￨e ;￨3￨e Object￨3￨e value￨3￨e =￨3￨e expr￨3￨e .￨3￨e getValue￨3￨e (￨3￨e ctx￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e "blue"￨3￨e ,￨3￨e value￨3￨e )￨3￨e ;￨3￨e expr￨3￨e =￨3￨e parser￨3￨e .￨3￨e parseExpression￨3￨e (￨3￨e "#primes.get(1)"￨3￨e )￨3￨e ;￨3￨e value￨3￨e =￨3￨e expr￨3￨e .￨3￨e getValue￨3￨e (￨3￨e ctx￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 3￨3￨e ,￨3￨e value￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b expr￨3￨b =￨3￨b parser￨3￨b .￨3￨b parseExpression￨3￨b (￨3￨b "#primes.?{#this>10}"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b value￨3￨e =￨3￨e expr￨3￨e .￨3￨e getValue￨3￨e (￨3￨e ctx￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e "[11,<seq2seq4repair_space>13,<seq2seq4repair_space>17]"￨3￨e ,￨3￨e value￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f static￨2￨d class￨2￨d TestClass￨2￨d {￨2￨d public￨3￨e String￨3￨e str￨3￨e ;￨3￨e private￨3￨e int￨3￨e property￨3￨e ;￨3￨e public￨3￨f int￨3￨f getProperty￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setProperty￨3￨f (￨3￨f int￨4￨p i￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f testScenario_UsingADifferentRootContextObject￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f repeat￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem￨2￨f (￨2￨f )￨2￨f throws￨2￨f NoSuchMethodException￨2￨f ,￨2￨f SecurityException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testScenario_AddingYourOwnPropertyResolvers_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testScenario_AddingYourOwnPropertyResolvers_2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d FruitColourAccessor￨2￨d implements￨2￨d PropertyAccessor￨2￨d {￨2￨d private￨3￨e static￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e Color￨3￨e >￨3￨e propertyMap￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e Color￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨d static￨3￨d TypeDescriptor￨3￨d mapElementTypeDescriptor￨3￨d =￨3￨d TypeDescriptor￨3￨d .￨3￨d valueOf￨3￨d (￨3￨d Color￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d public￨3￨d Class￨3￨d <￨3￨d ?￨3￨d >￨3￨d [￨3￨d ]￨3￨d getSpecificTargetClasses￨3￨d (￨3￨d )￨3￨d {￨3￨d }￨3￨d public￨3￨f boolean￨3￨f canRead￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f TypedValue￨3￨f read￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f canWrite￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f write￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f ,￨3￨f Object￨3￨f newValue￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d VegetableColourAccessor￨2￨d implements￨2￨d PropertyAccessor￨2￨d {￨2￨d private￨3￨e static￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e Color￨3￨e >￨3￨e propertyMap￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e Color￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f Class￨3￨f <￨3￨f ?￨3￨f >￨3￨f [￨3￨f ]￨3￨f getSpecificTargetClasses￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f canRead￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f TypedValue￨3￨f read￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f canWrite￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f write￨3￨f (￨3￨f EvaluationContext￨3￨f context￨3￨f ,￨3￨f Object￨3￨f target￨3￨f ,￨3￨f String￨3￨f name￨3￨f ,￨3￨f Object￨3￨f newValue￨3￨f )￨3￨f throws￨3￨f AccessException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d LayoutAction￨1￨d extends￨1￨d Action￨1￨d {￨1￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d LayoutAction￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d Layout￨2￨d layout￨2￨d ;￨2￨d public￨2￨d void￨2￨d begin￨2￨d (￨2￨d ExecutionContext￨2￨d ec￨2￨d ,￨2￨d String￨2￨d name￨2￨d ,￨2￨d Attributes￨2￨d attributes￨2￨d )￨2￨d {￨2￨d inError￨3￨e =￨3￨e false￨3￨e ;￨3￨e String￨3￨e className￨3￨e =￨3￨e attributes￨3￨e .￨3￨e getValue￨3￨e (￨3￨e CLASS_ATTRIBUTE￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f LayoutAction￨4￨e .￨4￨e logger￨4￨e .￨4￨e debug￨4￨e (￨4￨e (￨4￨e (￨4￨e "About<seq2seq4repair_space>to<seq2seq4repair_space>instantiate<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>["￨4￨e +￨4￨e className￨4￨e )￨4￨e +￨4￨e "]"￨4￨e )￨4￨e )￨4￨e ;￨4￨e Object￨4￨e instance￨4￨e =￨4￨e OptionConverter￨4￨e .￨4￨e instantiateByClassName￨4￨e (￨4￨e className￨4￨e ,￨4￨e Layout￨4￨e .￨4￨e class￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e layout￨4￨e =￨4￨e (￨4￨e (￨4￨e Layout￨4￨e )￨4￨e (￨4￨e instance￨4￨e )￨4￨e )￨4￨e ;￨4￨e LayoutAction￨4￨e .￨4￨e logger￨4￨e .￨4￨e debug￨4￨e (￨4￨e "Pushing<seq2seq4repair_space>layout<seq2seq4repair_space>on<seq2seq4repair_space>top<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>object<seq2seq4repair_space>stack."￨4￨e )￨4￨e ;￨4￨e ec￨4￨e .￨4￨e pushObject￨4￨e (￨4￨e layout￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p oops￨4￨p )￨3￨f {￨3￨f inError￨4￨e =￨4￨e true￨4￨e ;￨4￨e LayoutAction￨4￨e .￨4￨e logger￨4￨e .￨4￨e error￨4￨e (￨4￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>an<seq2seq4repair_space>Layout.<seq2seq4repair_space>Reported<seq2seq4repair_space>error<seq2seq4repair_space>follows."￨4￨e ,￨4￨e oops￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b ec￨4￨b .￨4￨b addError￨4￨b (￨4￨b new￨4￨b org￨4￨b .￨4￨b apache￨4￨b .￨4￨b joran￨4￨b .￨4￨b ErrorItem￨4￨b (￨4￨b (￨4￨b (￨4￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>"￨4￨b +￨4￨b className￨4￨b )￨4￨b +￨4￨b "]."￨4￨b )￨4￨b ,￨4￨b ec￨4￨b .￨4￨b getLocator￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨d public￨2￨f void￨2￨f end￨2￨f (￨2￨f ExecutionContext￨3￨p ec￨3￨p ,￨3￨p String￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f finish￨2￨f (￨2￨f ExecutionContext￨3￨p ec￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConversionHelp￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CHAR_SET￨2￨e =￨2￨e "UTF-8"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_CLASS￨2￨e =￨2￨e "class"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_NAME￨2￨e =￨2￨e "name"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_ELEMENT_TYPE￨2￨e =￨2￨e "elementType"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_TE_ENABLED￨2￨e =￨2￨e "enabled"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_TE_TESTCLASS￨2￨e =￨2￨e "testclass"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_TE_GUICLASS￨2￨e =￨2￨e "guiclass"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e ATT_TE_NAME￨2￨e =￨2￨e "testname"￨2￨e ;￨2￨e private￨2￨e static￨2￨e String￨2￨e inVersion￨2￨e ;￨2￨e private￨2￨e static￨2￨e String￨2￨e outVersion￨2￨e =￨2￨e "1.1"￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f setInVersion￨2￨f (￨2￨f String￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f setOutVersion￨2￨f (￨2￨f String￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f encode￨2￨f (￨2￨f String￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f decode￨2￨f (￨2￨f String￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f cdata￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f chars￨2￨f ,￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b StringBuffer￨3￨b buf￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b "<![CDATA["￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b buf￨3￨e .￨3￨e append￨3￨e (￨3￨e new￨3￨e String￨3￨e (￨3￨e chars￨3￨e ,￨3￨e encoding￨3￨e )￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "]]>"￨3￨e )￨3￨e ;￨3￨e return￨3￨e buf￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨e static￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e propertyToAttribute￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e String￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f mapentry￨2￨f (￨2￨f String￨3￨p prop￨3￨p ,￨3￨p String￨3￨p att￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f saveClass￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamWriter￨3￨p writer￨3￨p ,￨3￨p String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f restoreClass￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamReader￨3￨p reader￨3￨p ,￨3￨p String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f saveItem￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamWriter￨3￨p writer￨3￨p ,￨3￨p String￨3￨p prop￨3￨p ,￨3￨p boolean￨3￨p encode￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f restoreItem￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamReader￨3￨p reader￨3￨p ,￨3￨p String￨3￨p prop￨3￨p ,￨3￨p boolean￨3￨p decode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isSpecialProperty￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f saveSpecialProperties￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamWriter￨3￨p writer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f restoreSpecialProperties￨2￨f (￨2￨f TestElement￨3￨p el￨3￨p ,￨3￨p HierarchicalStreamReader￨3￨p reader￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CounterConfig￨1￨d extends￨1￨d AbstractTestElement￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d LoopIterationListener￨1￨d ,￨1￨d NoThreadClone￨1￨d {￨1￨d private￨2￨e static￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerFor￨2￨e (￨2￨e ELEMENTS￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e START￨2￨e =￨2￨e "CounterConfig.start"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e END￨2￨e =￨2￨e "CounterConfig.end"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e INCREMENT￨2￨e =￨2￨e "CounterConfig.incr"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PER_USER￨2￨e =￨2￨e "CounterConfig.per_user"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e VAR_NAME￨2￨e =￨2￨e "CounterConfig.name"￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e perUser￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e int￨2￨e globalCounter￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e int￨2￨e currentIterationCount￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f synchronized￨2￨f void￨2￨f iterationStart￨2￨f (￨2￨f LoopIterationEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f JMeterVariables￨3￨e variables￨3￨e =￨3￨e JMeterContextService￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e .￨3￨e getVariables￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e start￨3￨e =￨3￨e getStart￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e end￨3￨e =￨3￨e getEnd￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e increment￨3￨e =￨3￨e getIncrement￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c isPerUser￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c globalCounter￨5￨c )￨5￨c ==￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c globalCounter￨5￨c )￨5￨c >￨5￨c end￨5￨c )￨5￨c )￨4￨j {￨4￨j globalCounter￨5￨e =￨5￨e start￨5￨e ;￨5￨e }￨4￨j variables￨4￨e .￨4￨e put￨4￨e (￨4￨e getVarName￨4￨e (￨4￨e )￨4￨e ,￨4￨e Integer￨4￨e .￨4￨e toString￨4￨e (￨4￨e globalCounter￨4￨e )￨4￨e )￨4￨e ;￨4￨e globalCounter￨4￨e +=￨4￨e increment￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j String￨4￨e value￨4￨e =￨4￨e variables￨4￨e .￨4￨e get￨4￨e (￨4￨e getVarName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b value￨4￨b ==￨4￨b null￨4￨b )￨4￨b ||￨4￨b (￨4￨b value￨4￨b .￨4￨b equals￨4￨b (￨4￨b ""￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b variables￨4￨e .￨4￨e put￨4￨e (￨4￨e getVarName￨4￨e (￨4￨e )￨4￨e ,￨4￨e Integer￨4￨e .￨4￨e toString￨4￨e (￨4￨e start￨4￨e )￨4￨e )￨4￨e ;￨4￨e value￨4￨e =￨4￨e variables￨4￨e .￨4￨e get￨4￨e (￨4￨e getVarName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e else￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f int￨6￨e current￨6￨e =￨6￨e Integer￨6￨e .￨6￨e parseInt￨6￨e (￨6￨e value￨6￨e )￨6￨e ;￨6￨e current￨6￨e +=￨6￨e increment￨6￨e ;￨6￨e if￨6￨j (￨6￨j current￨7￨c >￨7￨c end￨7￨c )￨6￨j {￨6￨j current￨7￨e =￨7￨e start￨7￨e ;￨7￨e }￨6￨j variables￨6￨e .￨6￨e put￨6￨e (￨6￨e getVarName￨6￨e (￨6￨e )￨6￨e ,￨6￨e Integer￨6￨e .￨6￨e toString￨6￨e (￨6￨e current￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f NumberFormatException￨6￨p e￨6￨p )￨5￨f {￨5￨f CounterConfig￨6￨e .￨6￨e log￨6￨e .￨6￨e info￨6￨e (￨6￨e "Bad<seq2seq4repair_space>number<seq2seq4repair_space>in<seq2seq4repair_space>Counter<seq2seq4repair_space>config"￨6￨e ,￨6￨e e￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j }￨3￨j }￨2￨f public￨2￨f void￨2￨f setStart￨2￨f (￨2￨f int￨3￨p start￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setStart￨2￨f (￨2￨f String￨3￨p start￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getStart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnd￨2￨f (￨2￨f int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnd￨2￨f (￨2￨f String￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getEnd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncrement￨2￨f (￨2￨f int￨3￨p inc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncrement￨2￨f (￨2￨f String￨3￨p incr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getIncrement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIsPerUser￨2￨f (￨2￨f boolean￨3￨p isPer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPerUser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVarName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getVarName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d DefaultCategoryFactory￨1￨d implements￨1￨d LoggerFactory￨1￨d {￨1￨d DefaultCategoryFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Logger￨2￨f makeNewLoggerInstance￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b Category￨3￨b (￨3￨b name￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BaseHrefScanner￨1￨d extends￨1￨d TagScanner￨1￨d {￨1￨d private￨2￨e LinkProcessor￨2￨e processor￨2￨e ;￨2￨e public￨2￨f BaseHrefScanner￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BaseHrefScanner￨2￨f (￨2￨f String￨3￨p filter￨3￨p ,￨3￨p LinkProcessor￨3￨p processor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Tag￨2￨f createTag￨2￨f (￨2￨f TagData￨2￨f tagData￨2￨f ,￨2￨f Tag￨2￨f tag￨2￨f ,￨2￨f String￨2￨f url￨2￨f )￨2￨f throws￨2￨f ParserException￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e baseUrl￨3￨e =￨3￨e (￨3￨e (￨3￨e String￨3￨e )￨3￨e (￨3￨e tag￨3￨e .￨3￨e getAttribute￨3￨e (￨3￨e "HREF"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e String￨3￨e absoluteBaseUrl￨3￨e =￨3￨e ""￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c baseUrl￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c baseUrl￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b absoluteBaseUrl￨4￨b =￨4￨b baseUrl￨4￨b .￨4￨b trim￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b processor￨4￨e .￨4￨e setBaseUrl￨4￨e (￨4￨e absoluteBaseUrl￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e new￨3￨e org￨3￨e .￨3￨e htmlparser￨3￨e .￨3￨e tags￨3￨e .￨3￨e BaseHrefTag￨3￨e (￨3￨e tagData￨3￨e ,￨3￨e absoluteBaseUrl￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d InflowTestCase￨1￨d extends￨1￨d ContainerResourceMgmtTestBase￨1￨d {￨1￨d @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f ResourceAdapterArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨e ArquillianResource￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRegistryConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e controller￨3￨e =￨3￨e serviceContainer￨3￨e .￨3￨e getService￨3￨e (￨3￨e RA_REPOSITORY_SERVICE￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e controller￨3￨e )￨3￨e ;￨3￨e ResourceAdapterRepository￨3￨e repository￨3￨e =￨3￨e (￨3￨e (￨3￨e ResourceAdapterRepository￨3￨e )￨3￨e (￨3￨e controller￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e repository￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e String￨3￨e >￨3￨e ids￨3￨e =￨3￨e repository￨3￨e .￨3￨e getResourceAdapters￨3￨e (￨3￨e MessageListener￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e ids￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertEquals￨3￨b (￨3￨b 2￨3￨b ,￨3￨b ids￨3￨b .￨3￨b size￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨e piId￨3￨e =￨3￨e ids￨3￨e .￨3￨e iterator￨3￨e (￨3￨e )￨3￨e .￨3￨e next￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e Endpoint￨3￨e endpoint￨3￨e =￨3￨e repository￨3￨e .￨3￨e getEndpoint￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e endpoint￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e MessageListener￨3￨e >￨3￨e listeners￨3￨e =￨3￨e repository￨3￨e .￨3￨e getMessageListeners￨3￨e (￨3￨e piId￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e listeners￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e listeners￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e MessageListener￨3￨e listener￨3￨e =￨3￨e listeners￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e ActivationSpec￨3￨e as￨3￨e =￨3￨e listener￨3￨e .￨3￨e getActivation￨3￨e (￨3￨e )￨3￨e .￨3￨e createInstance￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e as￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e as￨3￨e .￨3￨e getResourceAdapter￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMetadataConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ServletResourceManager￨1￨d implements￨1￨d ResourceManager￨1￨d {￨1￨d private￨2￨e final￨2￨e FileResourceManager￨2￨e deploymentResourceManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e Collection￨2￨e <￨2￨e VirtualFile￨2￨e >￨2￨e overlays￨2￨e ;￨2￨e public￨2￨f ServletResourceManager￨2￨f (￨2￨f final￨2￨f VirtualFile￨2￨f resourcesRoot￨2￨f ,￨2￨f final￨2￨f Collection￨2￨f <￨2￨f VirtualFile￨2￨f >￨2￨f overlays￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Resource￨2￨f getResource￨2￨f (￨2￨f final￨2￨f String￨2￨f path￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f Resource￨3￨e res￨3￨e =￨3￨e deploymentResourceManager￨3￨e .￨3￨e getResource￨3￨e (￨3￨e path￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j res￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e res￨4￨e ;￨4￨e }￨3￨j String￨3￨e p￨3￨e =￨3￨e path￨3￨e ;￨3￨e if￨3￨j (￨3￨j p￨4￨c .￨4￨c startsWith￨4￨c (￨4￨c "/"￨4￨c )￨4￨c )￨3￨j {￨3￨j p￨4￨e =￨4￨e p￨4￨e .￨4￨e substring￨4￨e (￨4￨e 1￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c overlays￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l VirtualFile￨5￨c overlay￨5￨c :￨5￨c overlays￨5￨c )￨4￨l {￨4￨l VirtualFile￨5￨e child￨5￨e =￨5￨e overlay￨5￨e .￨5￨e getChild￨5￨e (￨5￨e p￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j child￨6￨c .￨6￨c exists￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j URL￨6￨e url￨6￨e =￨6￨e child￨6￨e .￨6￨e toURL￨6￨e (￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b return￨6￨b new￨6￨b URLResource￨6￨b (￨6￨b url￨6￨b ,￨6￨b url￨6￨b .￨6￨b openConnection￨6￨b (￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j }￨4￨l }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f }￨1￨d
final￨1￨d class￨1￨d RemoteServiceImpl￨1￨d implements￨1￨d InvocationHandler￨1￨d ,￨1￨d IRemoteService￨1￨d {￨1￨d static￨2￨e final￨2￨e Object￨2￨e [￨2￨e ]￨2￨e EMPTY_PARAMETERS￨2￨e =￨2￨e new￨2￨e Object￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e RemoteServiceReferenceImpl￨2￨e refImpl￨2￨e ;￨2￨e Object￨2￨e service￨2￨e ;￨2￨e private￨2￨e long￨2￨e nextID￨2￨e ;￨2￨e public￨2￨f RemoteServiceImpl￨2￨f (￨2￨f final￨3￨p RemoteServiceReferenceImpl￨3￨p refImpl￨3￨p ,￨3￨p final￨3￨p Object￨3￨p service￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f callAsync￨2￨f (￨2￨f final￨3￨p IRemoteCall￨3￨p call￨3￨p ,￨3￨p final￨3￨p IRemoteCallListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFuture￨2￨f callAsync￨2￨f (￨2￨f final￨3￨p IRemoteCall￨3￨p call￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f callSync￨2￨f (￨2￨f final￨2￨f IRemoteCall￨2￨f call￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fireAsync￨2￨f (￨2￨f final￨2￨f IRemoteCall￨2￨f call￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getProxy￨2￨f (￨2￨f )￨2￨f throws￨2￨f ECFException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f long￨2￨f getNextID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f invoke￨2￨f (￨2￨f Object￨2￨f proxy￨2￨f ,￨2￨f final￨2￨f Method￨2￨f method￨2￨f ,￨2￨f final￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Method￨2￨f getMethod￨2￨f (￨2￨f final￨2￨f Class￨2￨f aClass￨2￨f ,￨2￨f String￨2￨f aMethodName￨2￨f ,￨2￨f final￨2￨f Class￨2￨f [￨2￨f ]￨2￨f someParameterTypes￨2￨f )￨2￨f throws￨2￨f NoSuchMethodException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c someParameterTypes￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c someParameterTypes￨4￨c .￨4￨c length￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e aClass￨4￨e .￨4￨e getMethod￨4￨e (￨4￨e aMethodName￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e Method￨3￨e [￨3￨e ]￨3￨e methods￨3￨e =￨3￨e aClass￨3￨e .￨3￨e getMethods￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e parameterCount￨3￨e =￨3￨e someParameterTypes￨3￨e .￨3￨e length￨3￨e ;￨3￨e aMethodName￨3￨e =￨3￨e aMethodName￨3￨e .￨3￨e intern￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c methods￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l Method￨4￨e candidate￨4￨e =￨4￨e methods￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e String￨4￨e candidateMethodName￨4￨e =￨4￨e candidate￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e .￨4￨e intern￨4￨e (￨4￨e )￨4￨e ;￨4￨e Class￨4￨e [￨4￨e ]￨4￨e candidateParameterTypes￨4￨e =￨4￨e candidate￨4￨e .￨4￨e getParameterTypes￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e candidateParameterCount￨4￨e =￨4￨e candidateParameterTypes￨4￨e .￨4￨e length￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c candidateParameterCount￨5￨c ==￨5￨c parameterCount￨5￨c )￨5￨c &&￨5￨c (￨5￨c aMethodName￨5￨c ==￨5￨c candidateMethodName￨5￨c )￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c candidateParameterCount￨6￨c ;￨6￨c j￨6￨c ++￨6￨c )￨5￨l {￨5￨l Class￨6￨e clazzA￨6￨e =￨6￨e candidateParameterTypes￨6￨e [￨6￨e j￨6￨e ]￨6￨e ;￨6￨e Class￨6￨e clazzB￨6￨e =￨6￨e someParameterTypes￨6￨e [￨6￨e j￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j !￨7￨c (￨7￨c clazzA￨7￨c .￨7￨c isAssignableFrom￨7￨c (￨7￨c clazzB￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j continue￨7￨e OUTER￨7￨e ;￨7￨e }￨6￨j }￨5￨l return￨5￨e candidate￨5￨e ;￨5￨e }￨4￨j }￨3￨l <START_BUG>￨3￨b throw￨3￨b new￨3￨b NoSuchMethodException￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b "No<seq2seq4repair_space>such<seq2seq4repair_space>method:<seq2seq4repair_space>"￨3￨b +￨3￨b aMethodName￨3￨b )￨3￨b +￨3￨b "("￨3￨b )￨3￨b +￨3￨b (￨3￨b Arrays￨3￨b .￨3￨b toString￨3￨b (￨3￨b someParameterTypes￨3￨b )￨3￨b )￨3￨b )￨3￨b +￨3￨b ")"￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨d class￨2￨d AsyncResult￨2￨d extends￨2￨d Thread￨2￨d {￨2￨d Object￨3￨e result￨3￨e ;￨3￨e Throwable￨3￨e exception￨3￨e ;￨3￨e IRemoteCall￨3￨e call￨3￨e ;￨3￨e private￨3￨e IRemoteCallListener￨3￨e listener￨3￨e ;￨3￨e AsyncResult￨3￨f (￨3￨f final￨4￨p IRemoteCall￨4￨p call￨4￨p ,￨4￨p final￨4￨p IRemoteCallListener￨4￨p listener￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d DeclareSoft￨1￨d extends￨1￨d Declare￨1￨d {￨1￨d private￨2￨e TypePattern￨2￨e exception￨2￨e ;￨2￨e private￨2￨e Pointcut￨2￨e pointcut￨2￨e ;￨2￨e public￨2￨f DeclareSoft￨2￨f (￨2￨f TypePattern￨3￨p exception￨3￨p ,￨3￨p Pointcut￨3￨p pointcut￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Declare￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Pointcut￨2￨f getPointcut￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePattern￨2￨f getException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b exception￨3￨b =￨3￨b exception￨3￨b .￨3￨b resolveBindings￨3￨b (￨3￨b scope￨3￨b ,￨3￨b null￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b pointcut￨3￨e =￨3￨e pointcut￨3￨e .￨3￨e resolve￨3￨e (￨3￨e scope￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f isAdviceLike￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FilterModel￨1￨d {￨1￨d private￨2￨e EventTypeEntryContainer￨2￨e eventContainer￨2￨e =￨2￨e new￨2￨e EventTypeEntryContainer￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e EventListenerList￨2￨e eventListenerList￨2￨e =￨2￨e new￨2￨e EventListenerList￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f processNewLoggingEvent￨2￨f (￨2￨f String￨3￨p eventType￨3￨p ,￨3￨p LoggingEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f EventTypeEntryContainer￨3￨e container￨3￨e =￨3￨e getContainer￨3￨e (￨3￨e eventType￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addLevel￨3￨e (￨3￨e event￨3￨e .￨3￨e getLevel￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addLogger￨3￨e (￨3￨e event￨3￨e .￨3￨e getLoggerName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addThread￨3￨e (￨3￨e event￨3￨e .￨3￨e getThreadName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addNDC￨3￨e (￨3￨e event￨3￨e .￨3￨e getNDC￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addMDCKeys￨3￨e (￨3￨e event￨3￨e .￨3￨e getMDCKeySet￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b event￨3￨b .￨3￨b getLocationInformation￨3￨b (￨3￨b )￨3￨b )￨3￨b !=￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b LocationInfo￨3￨e info￨3￨e =￨3￨e event￨3￨e .￨3￨e getLocationInformation￨3￨e (￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addClass￨3￨e (￨3￨e info￨3￨e .￨3￨e getClassName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addMethod￨3￨e (￨3￨e info￨3￨e .￨3￨e getMethodName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e .￨3￨e addFileName￨3￨e (￨3￨e info￨3￨e .￨3￨e getFileName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f EventTypeEntryContainer￨2￨f getContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f EventTypeEntryContainer￨2￨f getContainer￨2￨f (￨2￨f String￨3￨p eventType￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TaskItem￨1￨d extends￨1￨d Item￨1￨d {￨1￨d TaskBar￨2￨e parent￨2￨e ;￨2￨e Shell￨2￨e shell￨2￨e ;￨2￨e NSImage￨2￨e defaultImage￨2￨e ;￨2￨e int￨2￨e progress￨2￨e ;￨2￨e int￨2￨e iProgress￨2￨e ;￨2￨e int￨2￨e progressState￨2￨e =￨2￨e SWT￨2￨e .￨2￨e DEFAULT￨2￨e ;￨2￨e Image￨2￨e overlayImage￨2￨e ;￨2￨e String￨2￨e overlayText￨2￨e =￨2￨e ""￨2￨e ;￨2￨e Menu￨2￨e menu￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e PROGRESS_MAX￨2￨e =￨2￨e 100￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e PROGRESS_TIMER￨2￨e =￨2￨e 350￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e PROGRESS_BARS￨2￨e =￨2￨e 7￨2￨e ;￨2￨e TaskItem￨2￨f (￨2￨f TaskBar￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Menu￨2￨f getMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getOverlayImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getOverlayText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TaskBar￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getProgress￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getProgressState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMenu￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOverlayImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOverlayText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProgress￨2￨f (￨2￨f int￨3￨p progress￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setProgressState￨2￨f (￨2￨f int￨3￨p progressState￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setShell￨2￨f (￨2￨f Shell￨3￨p shell￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateImage￨2￨f (￨2￨f )￨2￨f {￨2￨f boolean￨3￨e drawProgress￨3￨e =￨3￨e (￨3￨e (￨3￨e progress￨3￨e )￨3￨e !=￨3￨e 0￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e progressState￨3￨e )￨3￨e !=￨3￨e (￨3￨e SWT￨3￨e .￨3￨e DEFAULT￨3￨e )￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e drawIntermidiate￨3￨e =￨3￨e (￨3￨e progressState￨3￨e )￨3￨e ==￨3￨e (￨3￨e SWT￨3￨e .￨3￨e INDETERMINATE￨3￨e )￨3￨e ;￨3￨e NSApplication￨3￨e app￨3￨e =￨3￨e NSApplication￨3￨e .￨3￨e sharedApplication￨3￨e (￨3￨e )￨3￨e ;￨3￨e NSDockTile￨3￨e dock￨3￨e =￨3￨e app￨3￨e .￨3￨e dockTile￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e drawImage￨3￨e =￨3￨e (￨3￨e (￨3￨e overlayImage￨3￨e )￨3￨e !=￨3￨e null￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e dock￨3￨e .￨3￨e badgeLabel￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e null￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c !￨4￨c drawImage￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c drawProgress￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c drawIntermidiate￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b app￨4￨b .￨4￨b setApplicationIconImage￨4￨b (￨4￨b null￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e ;￨4￨e }￨3￨j NSSize￨3￨e size￨3￨e =￨3￨e defaultImage￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e ;￨3￨e NSImage￨3￨e newImage￨3￨e =￨3￨e (￨3￨e (￨3￨e NSImage￨3￨e )￨3￨e (￨3￨e new￨3￨e NSImage￨3￨e (￨3￨e )￨3￨e .￨3￨e alloc￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e newImage￨3￨e =￨3￨e newImage￨3￨e .￨3￨e initWithSize￨3￨e (￨3￨e size￨3￨e )￨3￨e ;￨3￨e NSBitmapImageRep￨3￨e rep￨3￨e =￨3￨e (￨3￨e (￨3￨e NSBitmapImageRep￨3￨e )￨3￨e (￨3￨e new￨3￨e NSBitmapImageRep￨3￨e (￨3￨e )￨3￨e .￨3￨e alloc￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e rep￨3￨e =￨3￨e rep￨3￨e .￨3￨e initWithBitmapDataPlanes￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e size￨3￨e .￨3￨e width￨3￨e )￨3￨e )￨3￨e ,￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e size￨3￨e .￨3￨e height￨3￨e )￨3￨e )￨3￨e ,￨3￨e 8￨3￨e ,￨3￨e 4￨3￨e ,￨3￨e true￨3￨e ,￨3￨e false￨3￨e ,￨3￨e NSDeviceRGBColorSpace￨3￨e ,￨3￨e (￨3￨e (￨3￨e OS￨3￨e .￨3￨e NSAlphaFirstBitmapFormat￨3￨e )￨3￨e |￨3￨e (￨3￨e OS￨3￨e .￨3￨e NSAlphaNonpremultipliedBitmapFormat￨3￨e )￨3￨e )￨3￨e ,￨3￨e (￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e size￨3￨e .￨3￨e width￨3￨e )￨3￨e )￨3￨e *￨3￨e 4￨3￨e )￨3￨e ,￨3￨e 32￨3￨e )￨3￨e ;￨3￨e newImage￨3￨e .￨3￨e addRepresentation￨3￨e (￨3￨e rep￨3￨e )￨3￨e ;￨3￨e rep￨3￨e .￨3￨e release￨3￨e (￨3￨e )￨3￨e ;￨3￨e NSRect￨3￨e rect￨3￨e =￨3￨e new￨3￨e NSRect￨3￨e (￨3￨e )￨3￨e ;￨3￨e rect￨3￨e .￨3￨e height￨3￨e =￨3￨e size￨3￨e .￨3￨e height￨3￨e ;￨3￨e rect￨3￨e .￨3￨e width￨3￨e =￨3￨e size￨3￨e .￨3￨e width￨3￨e ;￨3￨e newImage￨3￨e .￨3￨e lockFocus￨3￨e (￨3￨e )￨3￨e ;￨3￨e defaultImage￨3￨e .￨3￨e drawInRect￨3￨e (￨3￨e rect￨3￨e ,￨3￨e rect￨3￨e ,￨3￨e NSCompositeSourceOver￨3￨e ,￨3￨e 1￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j drawImage￨4￨c )￨3￨j {￨3￨j NSImage￨4￨e badgetImage￨4￨e =￨4￨e overlayImage￨4￨e .￨4￨e handle￨4￨e ;￨4￨e NSSize￨4￨e badgeSize￨4￨e =￨4￨e badgetImage￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ;￨4￨e NSRect￨4￨e srcRect￨4￨e =￨4￨e new￨4￨e NSRect￨4￨e (￨4￨e )￨4￨e ;￨4￨e srcRect￨4￨e .￨4￨e height￨4￨e =￨4￨e badgeSize￨4￨e .￨4￨e height￨4￨e ;￨4￨e srcRect￨4￨e .￨4￨e width￨4￨e =￨4￨e badgeSize￨4￨e .￨4￨e width￨4￨e ;￨4￨e NSRect￨4￨e dstRect￨4￨e =￨4￨e new￨4￨e NSRect￨4￨e (￨4￨e )￨4￨e ;￨4￨e dstRect￨4￨e .￨4￨e x￨4￨e =￨4￨e (￨4￨e size￨4￨e .￨4￨e width￨4￨e )￨4￨e /￨4￨e 2￨4￨e ;￨4￨e dstRect￨4￨e .￨4￨e height￨4￨e =￨4￨e (￨4￨e size￨4￨e .￨4￨e height￨4￨e )￨4￨e /￨4￨e 2￨4￨e ;￨4￨e dstRect￨4￨e .￨4￨e width￨4￨e =￨4￨e (￨4￨e size￨4￨e .￨4￨e width￨4￨e )￨4￨e /￨4￨e 2￨4￨e ;￨4￨e badgetImage￨4￨e .￨4￨e drawInRect￨4￨e (￨4￨e dstRect￨4￨e ,￨4￨e srcRect￨4￨e ,￨4￨e NSCompositeSourceOver￨4￨e ,￨4￨e 1￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j drawIntermidiate￨4￨c ||￨4￨c drawProgress￨4￨c )￨3￨j {￨3￨j switch￨4￨s (￨4￨s progressState￨4￨c )￨4￨s {￨4￨s case￨5￨c SWT￨5￨c .￨5￨c ERROR￨5￨c :￨5￨c NSColor￨6￨e .￨6￨e colorWithDeviceRed￨6￨e (￨6￨e 1￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e 0.6F￨6￨e )￨6￨e .￨6￨e setFill￨6￨e (￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c SWT￨5￨c .￨5￨c PAUSED￨5￨c :￨5￨c NSColor￨6￨e .￨6￨e colorWithDeviceRed￨6￨e (￨6￨e 1￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e 0.6F￨6￨e )￨6￨e .￨6￨e setFill￨6￨e (￨6￨e )￨6￨e ;￨6￨e break￨6￨e ;￨6￨e default￨5￨c :￨5￨c NSColor￨6￨e .￨6￨e colorWithDeviceRed￨6￨e (￨6￨e 1￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e 1￨6￨e ,￨6￨e 0.6F￨6￨e )￨6￨e .￨6￨e setFill￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨4￨s rect￨4￨e .￨4￨e width￨4￨e =￨4￨e (￨4￨e size￨4￨e .￨4￨e width￨4￨e )￨4￨e /￨4￨e (￨4￨e (￨4￨e (￨4￨e TaskItem￨4￨e .￨4￨e PROGRESS_BARS￨4￨e )￨4￨e *￨4￨e 2￨4￨e )￨4￨e -￨4￨e 1￨4￨e )￨4￨e ;￨4￨e rect￨4￨e .￨4￨e height￨4￨e =￨4￨e (￨4￨e size￨4￨e .￨4￨e height￨4￨e )￨4￨e /￨4￨e 3￨4￨e ;￨4￨e int￨4￨e count￨4￨e ;￨4￨e if￨4￨j (￨4￨j drawIntermidiate￨5￨c )￨4￨j {￨4￨j count￨5￨e =￨5￨e iProgress￨5￨e ;￨5￨e iProgress￨5￨e =￨5￨e (￨5￨e (￨5￨e iProgress￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e %￨5￨e (￨5￨e (￨5￨e TaskItem￨5￨e .￨5￨e PROGRESS_BARS￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e ;￨5￨e getDisplay￨5￨f (￨5￨f )￨5￨f .￨5￨f timerExec￨5￨f (￨5￨f TaskItem￨5￨f .￨5￨f PROGRESS_TIMER￨5￨f ,￨5￨f new￨5￨f Runnable￨5￨f (￨5￨f )￨5￨f {￨5￨f public￨6￨f void￨6￨f run￨6￨f (￨6￨f )￨6￨f {￨6￨f updateImage￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j count￨5￨e =￨5￨e (￨5￨e (￨5￨e progress￨5￨e )￨5￨e *￨5￨e (￨5￨e TaskItem￨5￨e .￨5￨e PROGRESS_BARS￨5￨e )￨5￨e )￨5￨e /￨5￨e (￨5￨e TaskItem￨5￨e .￨5￨e PROGRESS_MAX￨5￨e )￨5￨e ;￨5￨e }￨4￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <=￨5￨c count￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l rect￨5￨e .￨5￨e x￨5￨e =￨5￨e (￨5￨e i￨5￨e *￨5￨e 2￨5￨e )￨5￨e *￨5￨e (￨5￨e rect￨5￨e .￨5￨e width￨5￨e )￨5￨e ;￨5￨e NSBezierPath￨5￨e .￨5￨e fillRect￨5￨e (￨5￨e rect￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j newImage￨3￨e .￨3￨e unlockFocus￨3￨e (￨3￨e )￨3￨e ;￨3￨e app￨3￨e .￨3￨e setApplicationIconImage￨3￨e (￨3￨e newImage￨3￨e )￨3￨e ;￨3￨e newImage￨3￨e .￨3￨e release￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f updateOverlayText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d false￨2￨e ;￨2￨e private￨2￨e Object￨2￨e returnCode￨2￨e ;￨2￨e private￨2￨e WorkbenchConfigurationInfo￨2￨e configurationInfo￨2￨e ;￨2￨e private￨2￨e ListenerList￨2￨e windowListeners￨2￨e =￨2￨e new￨2￨e ListenerList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e commandLineArgs￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f VERSION_STRING￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_WORKBENCH_STATE_FILENAME￨2￨e =￨2￨e "workbench.xml"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e RESTORE_CODE_OK￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e RESTORE_CODE_RESET￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e RESTORE_CODE_EXIT￨2￨e =￨2￨e 2￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e WELCOME_EDITOR_ID￨2￨e =￨2￨e "org.eclipse.ui.internal.dialogs.WelcomeEditor"￨2￨e ;￨2￨e public￨2￨f Workbench￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e String￨2￨e TASK_LIST_ID￨2￨e =￨2￨e (￨2￨e WorkbenchPlugin￨2￨e .￨2￨e PI_WORKBENCH￨2￨e )￨2￨e +￨2￨e ".views.TaskList"￨2￨e ;￨2￨e private￨2￨f IResourceChangeListener￨2￨f getShowTasksChangeListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IMarker￨2￨f findProblemToShow￨2￨f (￨2￨f IResourceChangeEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addWindowListener￨2￨f (￨2￨f IWindowListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeWindowListener￨2￨f (￨2￨f IWindowListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireWindowOpened￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireWindowClosed￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireWindowActivated￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f fireWindowDeactivated￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addAdapters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f busyClose￨2￨f (￨2￨f final￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f saveAllEditors￨2￨f (￨2￨f boolean￨3￨p confirm￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IWorkbenchWindow￨2￨f busyOpenWorkbenchWindow￨2￨f (￨2￨f String￨2￨f perspID￨2￨f ,￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkUpdates￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f Object￨3￨p returnCode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f Object￨3￨p returnCode￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WorkbenchActionBuilder￨2￨f createActionBuilder￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f connectToWorkspace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f disconnectFromWorkspace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f getActiveWorkbenchWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCommandLineArgs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EditorHistory￨2￨f getEditorHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PerspectiveHistory￨2￨f getPerspectiveHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorRegistry￨2￨f getEditorRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getNewWindowNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPerspectiveRegistry￨2￨f getPerspectiveRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PreferenceManager￨2￨f getPreferenceManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPreferenceStore￨2￨f getPreferenceStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ISharedImages￨2￨f getSharedImages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMarkerHelpRegistry￨2￨f getMarkerHelpRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WindowManager￨2￨f getWindowManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WorkbenchConfigurationInfo￨2￨f getConfigurationInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f getWorkbenchStateFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWorkbenchWindowCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f [￨2￨f ]￨2￨f getWorkbenchWindows￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSetManager￨2￨f getWorkingSetManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f init￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f Manager￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e commandLineArgs￨3￨e =￨3￨e commandLineArgs￨3￨e ;￨3￨e if￨3￨j (￨3￨j WorkbenchPlugin￨4￨c .￨4￨c getDefault￨4￨c (￨4￨c )￨4￨c .￨4￨c isDebugging￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j WorkbenchPlugin￨4￨e .￨4￨e DEBUG￨4￨e =￨4￨e true￨4￨e ;￨4￨e ModalContext￨4￨e .￨4￨e setDebugMode￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e }￨3￨j initializeProductImage￨3￨e (￨3￨e )￨3￨e ;￨3￨e connectToWorkspace￨3￨e (￨3￨e )￨3￨e ;￨3￨e addAdapters￨3￨e (￨3￨e )￨3￨e ;￨3￨e windowManager￨3￨e =￨3￨e new￨3￨e WindowManager￨3￨e (￨3￨e )￨3￨e ;￨3￨e WorkbenchColors￨3￨e .￨3￨e startup￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e useColorIcons￨3￨e =￨3￨e getPreferenceStore￨3￨e (￨3￨e )￨3￨e .￨3￨e getBoolean￨3￨e (￨3￨e COLOR_ICONS￨3￨e )￨3￨e ;￨3￨e ActionContributionItem￨3￨e .￨3￨e setUseColorIconsInToolbars￨3￨e (￨3￨e useColorIcons￨3￨e )￨3￨e ;￨3￨e initializeFonts￨3￨e (￨3￨e )￨3￨e ;￨3￨e updateKeys￨3￨e (￨3￨e )￨3￨e ;￨3￨e initializeSingleClickOption￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e avoidDeadlock￨3￨e =￨3￨e true￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c commandLineArgs￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j commandLineArgs￨5￨c [￨5￨c i￨5￨c ]￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c "-allowDeadlock"￨5￨c )￨5￨c )￨4￨j {￨4￨j avoidDeadlock￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j avoidDeadlock￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f Display￨5￨e display￨5￨e =￨5￨e Display￨5￨e .￨5￨e getCurrent￨5￨e (￨5￨e )￨5￨e ;￨5￨e UIWorkspaceLock￨5￨e uiLock￨5￨e =￨5￨e new￨5￨e UIWorkspaceLock￨5￨e (￨5￨e WorkbenchPlugin￨5￨e .￨5￨e getPluginWorkspace￨5￨e (￨5￨e )￨5￨e ,￨5￨e display￨5￨e )￨5￨e ;￨5￨e WorkbenchPlugin￨5￨e .￨5￨e getPluginWorkspace￨5￨e (￨5￨e )￨5￨e .￨5￨e setWorkspaceLock￨5￨e (￨5￨e uiLock￨5￨e )￨5￨e ;￨5￨e display￨5￨e .￨5￨e setSynchronizer￨5￨e (￨5￨e new￨5￨e UISynchronizer￨5￨e (￨5￨e display￨5￨e ,￨5￨e uiLock￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f CoreException￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e System￨5￨e .￨5￨e out￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e start￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "Workbench"￨4￨e )￨4￨e ;￨4￨e int￨4￨e restoreCode￨4￨e =￨4￨e openPreviousWorkbenchState￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j restoreCode￨5￨c ==￨5￨c (￨5￨c Workbench￨5￨c .￨5￨c RESTORE_CODE_EXIT￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e false￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j restoreCode￨5￨c ==￨5￨c (￨5￨c Workbench￨5￨c .￨5￨c RESTORE_CODE_RESET￨5￨c )￨5￨c )￨4￨j {￨4￨j openFirstTimeWindow￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e end￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "Workbench"￨4￨e )￨4￨e ;￨4￨e }￨3￨f forceOpenPerspective￨3￨e (￨3￨e commandLineArgs￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b getConfigurationInfo￨3￨b (￨3￨b )￨3￨b .￨3￨b openWelcomeEditors￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b refreshFromLocal￨3￨e (￨3￨e commandLineArgs￨3￨e )￨3￨e ;￨3￨e isStarting￨3￨e =￨3￨e false￨3￨e ;￨3￨e return￨3￨e true￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f refreshFromLocal￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f forceOpenPerspective￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeSingleClickOption￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeFonts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeFont￨2￨f (￨2￨f String￨3￨p fontKey￨3￨p ,￨3￨p FontRegistry￨3￨p registry￨3￨p ,￨3￨p IPreferenceStore￨3￨p store￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeProductImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isClosing￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStarting￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WorkbenchWindow￨2￨f newWorkbenchWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f openFirstTimeWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f openPreviousWorkbenchState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f openWorkbenchWindow￨2￨f (￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f openWorkbenchWindow￨2￨f (￨2￨f final￨2￨f String￨2￨f perspID￨2￨f ,￨2￨f final￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f XMLMemento￨2￨f recordWorkbenchState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f restart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IStatus￨2￨f restoreState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPluginDescriptor￨2￨f [￨2￨f ]￨2￨f getEarlyActivatedPlugins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f startPlugins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f run￨2￨f (￨2￨f Object￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runEventLoop￨2￨f (￨2￨f Window￨3￨p .￨3￨p IExceptionHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IStatus￨2￨f saveState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f saveWorkbenchState￨2￨f (￨2￨f XMLMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInitializationData￨2￨f (￨2￨f IConfigurationElement￨3￨p configElement￨3￨p ,￨3￨p String￨3￨p propertyName￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchPage￨2￨f showPerspective￨2￨f (￨2￨f String￨2￨f perspectiveId￨2￨f ,￨2￨f IWorkbenchWindow￨2￨f window￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchPage￨2￨f showPerspective￨2￨f (￨2￨f String￨2￨f perspectiveId￨2￨f ,￨2￨f IWorkbenchWindow￨2￨f window￨2￨f ,￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f refreshPluginActions￨2￨f (￨2￨f String￨3￨p pluginId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IDecoratorManager￨2￨f getDecoratorManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WeaveMessage￨1￨d extends￨1￨d Message￨1￨d {￨1￨d public￨2￨e static￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e WEAVEMESSAGE_DECLAREPARENTSIMPLEMENTS￨2￨e =￨2￨e new￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e (￨2￨e 1￨2￨e ,￨2￨e "Extending<seq2seq4repair_space>interface<seq2seq4repair_space>set<seq2seq4repair_space>for<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>include<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e WEAVEMESSAGE_ITD￨2￨e =￨2￨e new￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e (￨2￨e 2￨2￨e ,￨2￨e "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>has<seq2seq4repair_space>intertyped<seq2seq4repair_space>%3<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e WEAVEMESSAGE_ADVISES￨2￨e =￨2￨e new￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e (￨2￨e 3￨2￨e ,￨2￨e "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>advised<seq2seq4repair_space>by<seq2seq4repair_space>%3<seq2seq4repair_space>advice<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)%6"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e WEAVEMESSAGE_DECLAREPARENTSEXTENDS￨2￨e =￨2￨e new￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e (￨2￨e 4￨2￨e ,￨2￨e "Setting<seq2seq4repair_space>superclass<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e WEAVEMESSAGE_SOFTENS￨2￨e =￨2￨e new￨2￨e WeaveMessage￨2￨e .￨2￨e WeaveMessageKind￨2￨e (￨2￨e 5￨2￨e ,￨2￨e "Softening<seq2seq4repair_space>exceptions<seq2seq4repair_space>in<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>as<seq2seq4repair_space>defined<seq2seq4repair_space>by<seq2seq4repair_space>aspect<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2￨e )￨2￨e ;￨2￨e private￨2￨f WeaveMessage￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f WeaveMessage￨2￨f constructWeavingMessage￨2￨f (￨2￨f WeaveMessage￨3￨p .￨3￨p WeaveMessageKind￨3￨p kind￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p inserts￨3￨p )￨2￨f {￨2￨f StringBuffer￨3￨e str￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e kind￨3￨e .￨3￨e getMessage￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e int￨3￨e pos￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e <START_BUG>￨3￨b while￨3￨b (￨3￨b (￨3￨b pos￨3￨b =￨3￨b str￨3￨b .￨3￨b indexOf￨3￨b (￨3￨b "%"￨3￨b )￨3￨b )￨3￨b !=￨3￨b (￨3￨b -￨3￨b 1￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b int￨3￨e n￨3￨e =￨3￨e Character￨3￨e .￨3￨e getNumericValue￨3￨e (￨3￨e str￨3￨e .￨3￨e charAt￨3￨e (￨3￨e (￨3￨e pos￨3￨e +￨3￨e 1￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e str￨3￨e .￨3￨e replace￨3￨e (￨3￨e pos￨3￨e ,￨3￨e (￨3￨e pos￨3￨e +￨3￨e 2￨3￨e )￨3￨e ,￨3￨e inserts￨3￨e [￨3￨e (￨3￨e n￨3￨e -￨3￨e 1￨3￨e )￨3￨e ]￨3￨e )￨3￨e ;￨3￨e }￨3￨e return￨3￨e new￨3￨e WeaveMessage￨3￨e (￨3￨e str￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨d static￨2￨d class￨2￨d WeaveMessageKind￨2￨d {￨2￨d private￨3￨e int￨3￨e id￨3￨e ;￨3￨e private￨3￨e String￨3￨e message￨3￨e ;￨3￨e public￨3￨f WeaveMessageKind￨3￨f (￨3￨f int￨4￨p id￨4￨p ,￨4￨p String￨4￨p message￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getMessage￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d SequenceFilesFromLuceneStorageMRJobTest￨1￨d extends￨1￨d AbstractLuceneStorageTest￨1￨d {￨1￨d private￨2￨e SequenceFilesFromLuceneStorageMRJob￨2￨e lucene2seq￨2￨e ;￨2￨e private￨2￨e LuceneStorageConfiguration￨2￨e lucene2SeqConf￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f before￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f lucene2seq￨3￨e =￨3￨e new￨3￨e SequenceFilesFromLuceneStorageMRJob￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Configuration￨3￨b configuration￨3￨b =￨3￨b new￨3￨b Configuration￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Path￨3￨e seqOutputPath￨3￨e =￨3￨e new￨3￨e Path￨3￨e (￨3￨e getTestTempDirPath￨3￨e (￨3￨e )￨3￨e ,￨3￨e "seqOutputPath"￨3￨e )￨3￨e ;￨3￨e lucene2SeqConf￨3￨e =￨3￨e new￨3￨e LuceneStorageConfiguration￨3￨e (￨3￨e configuration￨3￨e ,￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e getIndexPath1￨3￨e (￨3￨e )￨3￨e ,￨3￨e getIndexPath2￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e seqOutputPath￨3￨e ,￨3￨e SingleFieldDocument￨3￨e .￨3￨e ID_FIELD￨3￨e ,￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e FIELD￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f after￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRun￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MultiplexAppenderTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d private￨2￨e Logger￨2￨e root￨2￨e ;￨2￨e private￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d MultiplexAppenderTest￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d setUp￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f testIllegalStates￨2￨f (￨2￨f )￨2￨f {￨2￨f MultiplexAppender￨3￨e appender￨3￨e =￨3￨e null￨3￨e ;￨3￨e appender￨3￨e =￨3￨e new￨3￨e MultiplexAppender￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b appender￨4￨b .￨4￨b activate￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b fail￨4￨e (￨4￨e "Should<seq2seq4repair_space>have<seq2seq4repair_space>thrown<seq2seq4repair_space>an<seq2seq4repair_space>IllegalStateException<seq2seq4repair_space>because<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>configured<seq2seq4repair_space>correctly"￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f appender￨3￨e =￨3￨e null￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMDCSelector￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testcreateMDCAndDailyRollingAppenderFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "ejb3"￨2￨e ,￨2￨e "timer"￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServiceName￨2￨e timerServiceThreadPool￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e defaultTimerDataStore￨2￨e ;￨2￨e public￨2￨f TimerServiceDeploymentProcessor￨2￨f (￨2￨f final￨3￨p ServiceName￨3￨p timerServiceThreadPool￨3￨p ,￨3￨p final￨3￨p String￨3￨p defaultTimerDataStore￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f final￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e EEModuleDescription￨3￨e moduleDescription￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e EE_MODULE_DESCRIPTION￨3￨e )￨3￨e ;￨3￨e final￨3￨e Module￨3￨e module￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MODULE￨3￨e )￨3￨e ;￨3￨e final￨3￨e EjbJarMetaData￨3￨e ejbJarMetaData￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e EJB_JAR_METADATA￨3￨e )￨3￨e ;￨3￨e ServiceName￨3￨e defaultTimerPersistenceService￨3￨e =￨3￨e SERVICE_NAME￨3￨e .￨3￨e append￨3￨e (￨3￨e defaultTimerDataStore￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e ServiceName￨3￨e >￨3￨e timerPersistenceServices￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e TimerServiceRegistry￨3￨e timerServiceRegistry￨3￨e =￨3￨e (￨3￨e EjbDeploymentMarker￨3￨e .￨3￨e isEjbDeployment￨3￨e (￨3￨e deploymentUnit￨3￨e )￨3￨e )￨3￨e ?￨3￨e new￨3￨e TimerServiceRegistry￨3￨e (￨3￨e )￨3￨e :￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c ejbJarMetaData￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c ejbJarMetaData￨4￨c .￨4￨c getAssemblyDescriptor￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j List￨4￨d <￨4￨d TimerServiceMetaData￨4￨d >￨4￨d timerService￨4￨d =￨4￨d ejbJarMetaData￨4￨d .￨4￨d getAssemblyDescriptor￨4￨d (￨4￨d )￨4￨d .￨4￨d getAny￨4￨d (￨4￨d TimerServiceMetaData￨4￨d .￨4￨d class￨4￨d )￨4￨d ;￨4￨d if￨4￨d (￨4￨d timerService￨4￨d !=￨4￨d null￨4￨d )￨4￨d {￨4￨d for￨5￨l (￨5￨l TimerServiceMetaData￨6￨c data￨6￨c :￨6￨c timerService￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j data￨7￨c .￨7￨c getEjbName￨7￨c (￨7￨c )￨7￨c .￨7￨c equals￨7￨c (￨7￨c "*"￨7￨c )￨7￨c )￨6￨j {￨6￨j defaultTimerPersistenceService￨7￨e =￨7￨e SERVICE_NAME￨7￨e .￨7￨e append￨7￨e (￨7￨e data￨7￨e .￨7￨e getDataStoreName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j timerPersistenceServices￨7￨e .￨7￨e put￨7￨e (￨7￨e data￨7￨e .￨7￨e getEjbName￨7￨e (￨7￨e )￨7￨e ,￨7￨e SERVICE_NAME￨7￨e .￨7￨e append￨7￨e (￨7￨e data￨7￨e .￨7￨e getDataStoreName￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l }￨4￨d }￨3￨j final￨3￨e ServiceName￨3￨e finalDefaultTimerPersistenceService￨3￨e =￨3￨e defaultTimerPersistenceService￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c ComponentDescription￨4￨c componentDescription￨4￨c :￨4￨c moduleDescription￨4￨c .￨4￨c getComponentDescriptions￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j componentDescription￨5￨c .￨5￨c isTimerServiceApplicable￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j componentDescription￨6￨c .￨6￨c isTimerServiceRequired￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j final￨6￨e String￨6￨e deploymentName￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c (￨7￨c moduleDescription￨7￨c .￨7￨c getDistinctName￨7￨c (￨7￨c )￨7￨c )￨7￨c ==￨7￨c null￨7￨c )￨7￨c ||￨7￨c (￨7￨c (￨7￨c moduleDescription￨7￨c .￨7￨c getDistinctName￨7￨c (￨7￨c )￨7￨c .￨7￨c length￨7￨c (￨7￨c )￨7￨c )￨7￨c ==￨7￨c 0￨7￨c )￨7￨c )￨6￨j {￨6￨j deploymentName￨7￨e =￨7￨e (￨7￨e (￨7￨e moduleDescription￨7￨e .￨7￨e getApplicationName￨7￨e (￨7￨e )￨7￨e )￨7￨e +￨7￨e "."￨7￨e )￨7￨e +￨7￨e (￨7￨e moduleDescription￨7￨e .￨7￨e getModuleName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j deploymentName￨7￨e =￨7￨e (￨7￨e (￨7￨e (￨7￨e (￨7￨e moduleDescription￨7￨e .￨7￨e getApplicationName￨7￨e (￨7￨e )￨7￨e )￨7￨e +￨7￨e "."￨7￨e )￨7￨e +￨7￨e (￨7￨e moduleDescription￨7￨e .￨7￨e getModuleName￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e +￨7￨e "."￨7￨e )￨7￨e +￨7￨e (￨7￨e moduleDescription￨7￨e .￨7￨e getDistinctName￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j <START_BUG>￨6￨b ROOT_LOGGER￨6￨b .￨6￨b debugf￨6￨b (￨6￨b "Installing<seq2seq4repair_space>timer<seq2seq4repair_space>service<seq2seq4repair_space>for<seq2seq4repair_space>component<seq2seq4repair_space>%s"￨6￨b ,￨6￨b componentDescription￨6￨b .￨6￨b getComponentName￨6￨b (￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b componentDescription￨6￨f .￨6￨f getConfigurators￨6￨f (￨6￨f )￨6￨f .￨6￨f add￨6￨f (￨6￨f new￨6￨f ComponentConfigurator￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f configure￨7￨f (￨7￨f final￨7￨f DeploymentPhaseContext￨7￨f context￨7￨f ,￨7￨f final￨7￨f ComponentDescription￨7￨f description￨7￨f ,￨7￨f final￨7￨f ComponentConfiguration￨7￨f configuration￨7￨f )￨7￨f throws￨7￨f DeploymentUnitProcessingException￨7￨f (￨7￨f )￨7￨f {￨7￨f final￨8￨e EJBComponentDescription￨8￨e ejbComponentDescription￨8￨e =￨8￨e (￨8￨e (￨8￨e EJBComponentDescription￨8￨e )￨8￨e (￨8￨e description￨8￨e )￨8￨e )￨8￨e ;￨8￨e final￨8￨e ServiceName￨8￨e invokerServiceName￨8￨e =￨8￨e ejbComponentDescription￨8￨e .￨8￨e getServiceName￨8￨e (￨8￨e )￨8￨e .￨8￨e append￨8￨e (￨8￨e TimedObjectInvokerImpl￨8￨e .￨8￨e SERVICE_NAME￨8￨e )￨8￨e ;￨8￨e final￨8￨e TimedObjectInvokerImpl￨8￨e invoker￨8￨e =￨8￨e new￨8￨e TimedObjectInvokerImpl￨8￨e (￨8￨e deploymentName￨8￨e ,￨8￨e module￨8￨e )￨8￨e ;￨8￨e context￨8￨d .￨8￨d getServiceTarget￨8￨d (￨8￨d )￨8￨d .￨8￨d addService￨8￨d (￨8￨d invokerServiceName￨8￨d ,￨8￨d invoker￨8￨d )￨8￨d .￨8￨d addDependency￨8￨d (￨8￨d componentDescription￨8￨d .￨8￨d getCreateServiceName￨8￨d (￨8￨d )￨8￨d ,￨8￨d EJBComponent￨8￨d .￨8￨d class￨8￨d ,￨8￨d invoker￨8￨d .￨8￨d getEjbComponent￨8￨d (￨8￨d )￨8￨d )￨8￨d .￨8￨d install￨8￨d (￨8￨d )￨8￨d ;￨8￨d final￨8￨d ServiceName￨8￨d serviceName￨8￨d =￨8￨d componentDescription￨8￨d .￨8￨d getServiceName￨8￨d (￨8￨d )￨8￨d .￨8￨d append￨8￨d (￨8￨d TimerServiceImpl￨8￨d .￨8￨d SERVICE_NAME￨8￨d )￨8￨d ;￨8￨d final￨8￨d TimerServiceImpl￨8￨d service￨8￨d =￨8￨d new￨8￨d TimerServiceImpl￨8￨d (￨8￨d ejbComponentDescription￨8￨d .￨8￨d getScheduleMethods￨8￨d (￨8￨d )￨8￨d ,￨8￨d serviceName￨8￨d ,￨8￨d timerServiceRegistry￨8￨d )￨8￨d ;￨8￨d final￨8￨d ServiceBuilder￨8￨d <￨8￨d TimerService￨8￨d >￨8￨d createBuilder￨8￨d =￨8￨d context￨8￨d .￨8￨d getServiceTarget￨8￨d (￨8￨d )￨8￨d .￨8￨d addService￨8￨d (￨8￨d serviceName￨8￨d ,￨8￨d service￨8￨d )￨8￨d ;￨8￨d createBuilder￨8￨d .￨8￨d addDependency￨8￨d (￨8￨d TimerServiceDeploymentProcessor￨8￨d .￨8￨d TIMER_SERVICE_NAME￨8￨d ,￨8￨d Timer￨8￨d .￨8￨d class￨8￨d ,￨8￨d service￨8￨d .￨8￨d getTimerInjectedValue￨8￨d (￨8￨d )￨8￨d )￨8￨d ;￨8￨d createBuilder￨8￨d .￨8￨d addDependency￨8￨d (￨8￨d componentDescription￨8￨d .￨8￨d getCreateServiceName￨8￨d (￨8￨d )￨8￨d ,￨8￨d EJBComponent￨8￨d .￨8￨d class￨8￨d ,￨8￨d service￨8￨d .￨8￨d getEjbComponentInjectedValue￨8￨d (￨8￨d )￨8￨d )￨8￨d ;￨8￨d createBuilder￨8￨d .￨8￨d addDependency￨8￨d (￨8￨d timerServiceThreadPool￨8￨d ,￨8￨d ExecutorService￨8￨d .￨8￨d class￨8￨d ,￨8￨d service￨8￨d .￨8￨d getExecutorServiceInjectedValue￨8￨d (￨8￨d )￨8￨d )￨8￨d ;￨8￨d if￨8￨d (￨8￨d timerPersistenceServices￨8￨d .￨8￨d containsKey￨8￨d (￨8￨d ejbComponentDescription￨8￨d .￨8￨d getEJBName￨8￨d (￨8￨d )￨8￨d )￨8￨d )￨8￨d {￨8￨d createBuilder￨9￨e .￨9￨e addDependency￨9￨e (￨9￨e timerPersistenceServices￨9￨e .￨9￨e get￨9￨e (￨9￨e ejbComponentDescription￨9￨e .￨9￨e getEJBName￨9￨e (￨9￨e )￨9￨e )￨9￨e ,￨9￨e TimerPersistence￨9￨e .￨9￨e class￨9￨e ,￨9￨e service￨9￨e .￨9￨e getTimerPersistence￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨d else￨8￨j {￨8￨j createBuilder￨9￨e .￨9￨e addDependency￨9￨e (￨9￨e finalDefaultTimerPersistenceService￨9￨e ,￨9￨e TimerPersistence￨9￨e .￨9￨e class￨9￨e ,￨9￨e service￨9￨e .￨9￨e getTimerPersistence￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j createBuilder￨8￨d .￨8￨d addDependency￨8￨d (￨8￨d invokerServiceName￨8￨d ,￨8￨d TimedObjectInvoker￨8￨d .￨8￨d class￨8￨d ,￨8￨d service￨8￨d .￨8￨d getTimedObjectInvoker￨8￨d (￨8￨d )￨8￨d )￨8￨d ;￨8￨d createBuilder￨8￨d .￨8￨d install￨8￨d (￨8￨d )￨8￨d ;￨8￨d ejbComponentDescription￨8￨d .￨8￨d setTimerService￨8￨d (￨8￨d service￨8￨d )￨8￨d ;￨8￨d configuration￨8￨d .￨8￨d getStartDependencies￨8￨d (￨8￨d )￨8￨d .￨8￨d add￨8￨d (￨8￨d new￨8￨d org￨8￨d .￨8￨d jboss￨8￨d .￨8￨d as￨8￨d .￨8￨d ee￨8￨d .￨8￨d component￨8￨d .￨8￨d DependencyConfigurator￨8￨d <￨8￨d ComponentStartService￨8￨d >￨8￨d (￨8￨d )￨8￨d {￨8￨d @￨9￨f Override￨9￨f public￨9￨f void￨9￨f configureDependency￨9￨f (￨9￨f final￨9￨f ServiceBuilder￨9￨f <￨9￨f ?￨9￨f >￨9￨f serviceBuilder￨9￨f ,￨9￨f final￨9￨f ComponentStartService￨9￨f service￨9￨f )￨9￨f throws￨9￨f DeploymentUnitProcessingException￨9￨f (￨9￨f )￨9￨f {￨9￨f serviceBuilder￨10￨e .￨10￨e addDependency￨10￨e (￨10￨e serviceName￨10￨e )￨10￨e ;￨10￨e }￨9￨f }￨8￨d )￨8￨e ;￨8￨e }￨7￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j componentDescription￨6￨f .￨6￨f getConfigurators￨6￨f (￨6￨f )￨6￨f .￨6￨f add￨6￨f (￨6￨f new￨6￨f ComponentConfigurator￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f configure￨7￨f (￨7￨f final￨7￨f DeploymentPhaseContext￨7￨f context￨7￨f ,￨7￨f final￨7￨f ComponentDescription￨7￨f description￨7￨f ,￨7￨f final￨7￨f ComponentConfiguration￨7￨f configuration￨7￨f )￨7￨f throws￨7￨f DeploymentUnitProcessingException￨7￨f (￨7￨f )￨7￨f {￨7￨f final￨8￨e EJBComponentDescription￨8￨e ejbComponentDescription￨8￨e =￨8￨e (￨8￨e (￨8￨e EJBComponentDescription￨8￨e )￨8￨e (￨8￨e description￨8￨e )￨8￨e )￨8￨e ;￨8￨e final￨8￨e ServiceName￨8￨e nonFunctionalTimerServiceName￨8￨e =￨8￨e NonFunctionalTimerService￨8￨e .￨8￨e serviceNameFor￨8￨e (￨8￨e ejbComponentDescription￨8￨e )￨8￨e ;￨8￨e final￨8￨e NonFunctionalTimerService￨8￨e nonFunctionalTimerService￨8￨e ;￨8￨e if￨8￨j (￨8￨j ejbComponentDescription￨9￨c instanceof￨9￨c StatefulComponentDescription￨9￨c )￨8￨j {￨8￨j nonFunctionalTimerService￨9￨e =￨9￨e new￨9￨e NonFunctionalTimerService￨9￨e (￨9￨e EjbLogger￨9￨e .￨9￨e ROOT_LOGGER￨9￨e .￨9￨e timerServiceMethodNotAllowedForSFSB￨9￨e (￨9￨e ejbComponentDescription￨9￨e .￨9￨e getComponentName￨9￨e (￨9￨e )￨9￨e )￨9￨e ,￨9￨e timerServiceRegistry￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j {￨8￨j nonFunctionalTimerService￨9￨e =￨9￨e new￨9￨e NonFunctionalTimerService￨9￨e (￨9￨e EjbLogger￨9￨e .￨9￨e ROOT_LOGGER￨9￨e .￨9￨e ejbHasNoTimerMethods￨9￨e (￨9￨e )￨9￨e ,￨9￨e timerServiceRegistry￨9￨e )￨9￨e ;￨9￨e }￨8￨j context￨8￨e .￨8￨e getServiceTarget￨8￨e (￨8￨e )￨8￨e .￨8￨e addService￨8￨e (￨8￨e nonFunctionalTimerServiceName￨8￨e ,￨8￨e nonFunctionalTimerService￨8￨e )￨8￨e .￨8￨e install￨8￨e (￨8￨e )￨8￨e ;￨8￨e ejbComponentDescription￨8￨e .￨8￨e setTimerService￨8￨e (￨8￨e nonFunctionalTimerService￨8￨e )￨8￨e ;￨8￨e configuration￨8￨f .￨8￨f getStartDependencies￨8￨f (￨8￨f )￨8￨f .￨8￨f add￨8￨f (￨8￨f new￨8￨f org￨8￨f .￨8￨f jboss￨8￨f .￨8￨f as￨8￨f .￨8￨f ee￨8￨f .￨8￨f component￨8￨f .￨8￨f DependencyConfigurator￨8￨f <￨8￨f ComponentStartService￨8￨f >￨8￨f (￨8￨f )￨8￨f (￨8￨f )￨8￨f {￨8￨f @￨9￨f Override￨9￨f public￨9￨f void￨9￨f configureDependency￨9￨f (￨9￨f ServiceBuilder￨9￨f <￨9￨f ?￨9￨f >￨9￨f serviceBuilder￨9￨f ,￨9￨f ComponentStartService￨9￨f service￨9￨f )￨9￨f throws￨9￨f DeploymentUnitProcessingException￨9￨f (￨9￨f )￨9￨f {￨9￨f serviceBuilder￨10￨e .￨10￨e addDependency￨10￨e (￨10￨e nonFunctionalTimerServiceName￨10￨e )￨10￨e ;￨10￨e }￨9￨f }￨8￨f )￨8￨e ;￨8￨e }￨7￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨l }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f final￨3￨p DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PopupMenuExtender￨1￨d implements￨1￨d IRegistryChangeListener￨1￨d ,￨1￨d IMenuListener2￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e STATIC_ACTION_READ￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INCLUDE_EDITOR_INPUT￨2￨e =￨2￨e 1￨2￨e <<￨2￨e 1￨2￨e ;￨2￨e private￨2￨e final￨2￨e MenuManager￨2￨e menu￨2￨e ;￨2￨e private￨2￨e SubMenuManager￨2￨e menuWrapper￨2￨e ;￨2￨e private￨2￨e final￨2￨e ISelectionProvider￨2￨e selProvider￨2￨e ;￨2￨e private￨2￨e final￨2￨e IWorkbenchPart￨2￨e part￨2￨e ;￨2￨e private￨2￨e Map￨2￨e staticActionBuilders￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e int￨2￨e bitSet￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e ArrayList￨2￨e contributionCache￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f PopupMenuExtender￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p MenuManager￨3￨p menu￨3￨p ,￨3￨p ISelectionProvider￨3￨p prov￨3￨p ,￨3￨p IWorkbenchPart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PopupMenuExtender￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p MenuManager￨3￨p menu￨3￨p ,￨3￨p final￨3￨p ISelectionProvider￨3￨p prov￨3￨p ,￨3￨p final￨3￨p IWorkbenchPart￨3￨p part￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p includeEditorInput￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Set￨2￨f getMenuIds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f addMenuId￨2￨f (￨2￨f final￨3￨p String￨3￨p menuId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f matches￨2￨f (￨2￨f final￨3￨p MenuManager￨3￨p menuManager￨3￨p ,￨3￨p final￨3￨p ISelectionProvider￨3￨p selectionProvider￨3￨p ,￨3￨p final￨3￨p IWorkbenchPart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addEditorActions￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addObjectActions￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f clearStaticActions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addStaticActions￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f menuAboutToShow￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e contributionsPopulated￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨f void￨2￨f addMenuContributions￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f menuAboutToHide￨2￨f (￨2￨f final￨3￨p IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f sweepContributions￨2￨f (￨2￨f IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j mgr￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j final￨3￨d IMenuService￨3￨d menuService￨3￨d =￨3￨d (￨3￨d (￨3￨d IMenuService￨3￨d )￨3￨d (￨3￨d part￨3￨d .￨3￨d getSite￨3￨d (￨3￨d )￨3￨d .￨3￨d getService￨3￨d (￨3￨d IMenuService￨3￨d .￨3￨d class￨3￨d )￨3￨d )￨3￨d )￨3￨d ;￨3￨d InternalMenuService￨3￨d realService￨3￨d =￨3￨d (￨3￨d (￨3￨d InternalMenuService￨3￨d )￨3￨d (￨3￨d menuService￨3￨d )￨3￨d )￨3￨d ;￨3￨d IContributionItem￨3￨d [￨3￨d ]￨3￨d items￨3￨d =￨3￨d mgr￨3￨d .￨3￨d getItems￨3￨d (￨3￨d )￨3￨d ;￨3￨d for￨3￨d (￨3￨d int￨3￨d i￨3￨d =￨3￨d 0￨3￨d ;￨3￨d i￨3￨d <￨3￨d (￨3￨d items￨3￨d .￨3￨d length￨3￨d )￨3￨d ;￨3￨d i￨3￨d ++￨3￨d )￨3￨d {￨3￨d <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b items￨4￨b [￨4￨b i￨4￨b ]￨4￨b )￨4￨b instanceof￨4￨b IMenuManager￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b sweepContributions￨4￨e (￨4￨e (￨4￨e (￨4￨e IMenuManager￨4￨e )￨4￨e (￨4￨e items￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e realService￨4￨e .￨4￨e releaseContributions￨4￨e (￨4￨e (￨4￨e (￨4￨e ContributionManager￨4￨e )￨4￨e (￨4￨e items￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e (￨4￨e (￨4￨e ContributionManager￨4￨e )￨4￨e (￨4￨e items￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e )￨4￨e .￨4￨e removeAll￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨d }￨2￨f private￨2￨f void￨2￨f gatherContributions￨2￨f (￨2￨f final￨3￨p IMenuManager￨3￨p mgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cleanUpContributionCache￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f readStaticActions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readStaticActionsFor￨2￨f (￨2￨f final￨3￨p String￨3￨p menuId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f registryChanged￨2￨f (￨2￨f final￨3￨p IRegistryChangeEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MenuManager￨2￨f getManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d KittenCaptchaPanel￨1￨d extends￨1￨d Panel￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 2711167040323855070L￨2￨e ;￨2￨e private￨2￨e static￨2￨e BufferedImage￨2￨e grass￨2￨e =￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e load￨2￨e (￨2￨e "images/grass.png"￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e List￨2￨e <￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e Animal￨2￨e >￨2￨e kittens￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e Animal￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e List￨2￨e <￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e Animal￨2￨e >￨2￨e nonKittens￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e Animal￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e Random￨2￨e random￨2￨e =￨2￨e new￨2￨e Random￨2￨e (￨2￨e (￨2￨e -￨2￨e 1￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f BufferedImage￨2￨f load￨2￨f (￨2￨f final￨3￨p String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e PlacedAnimalList￨2￨e animals￨2￨e ;￨2￨e private￨2￨e final￨2￨e Label￨2￨e animalSelectionLabel￨2￨e ;￨2￨e private￨2￨e final￨2￨e Image￨2￨e image￨2￨e ;￨2￨e private￨2￨e final￨2￨e KittenCaptchaPanel￨2￨e .￨2￨e CaptchaImageResource￨2￨e imageResource￨2￨e ;￨2￨e private￨2￨e final￨2￨e Dimension￨2￨e imageSize￨2￨e ;￨2￨e public￨2￨f KittenCaptchaPanel￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p final￨3￨p Dimension￨3￨p imageSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f allKittensSelected￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f KittenCaptchaPanel￨2￨f .￨2￨f PlacedAnimal￨2￨f placeAnimal￨2￨f (￨2￨f final￨3￨p List￨3￨p <￨3￨p KittenCaptchaPanel￨3￨p .￨3￨p PlacedAnimal￨3￨p >￨3￨p animals￨3￨p ,￨3￨p final￨3￨p KittenCaptchaPanel￨3￨p .￨3￨p Animal￨3￨p newAnimal￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f random￨2￨f (￨2￨f final￨3￨p int￨3￨p max￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f KittenCaptchaPanel￨2￨f .￨2￨f Animal￨2￨f randomKitten￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f KittenCaptchaPanel￨2￨f .￨2￨f Animal￨2￨f randomNonKitten￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d Animal￨2￨d {￨2￨d private￨3￨e final￨3￨e BufferedImage￨3￨e highlightedImage￨3￨e ;￨3￨e private￨3￨e final￨3￨e BufferedImage￨3￨e image￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e isKitten￨3￨e ;￨3￨e private￨3￨e final￨3￨e OpaqueRegion￨3￨e visibleRegion￨3￨e ;￨3￨e private￨3￨f Animal￨3￨f (￨3￨f final￨4￨p String￨4￨p filename￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p isKitten￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f BufferedImage￨3￨f load￨3￨f (￨3￨f final￨4￨p String￨4￨p filename￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d CaptchaImageResource￨2￨d extends￨2￨d DynamicImageResource￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e -￨3￨e 1560784998742404278L￨3￨e ;￨3￨e private￨3￨e final￨3￨e KittenCaptchaPanel￨3￨e .￨3￨e PlacedAnimalList￨3￨e animals￨3￨e ;￨3￨e private￨3￨e transient￨3￨e SoftReference￨3￨e <￨3￨e byte￨3￨e [￨3￨e ]￨3￨e >￨3￨e data￨3￨e =￨3￨e null￨3￨e ;￨3￨e @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f configureResponse￨3￨f (￨3￨f ResourceResponse￨4￨p response￨4￨p ,￨4￨p Attributes￨4￨p attributes￨4￨p )￨3￨f {￨3￨f super￨4￨e .￨4￨e configureResponse￨4￨e (￨4￨e response￨4￨e ,￨4￨e attributes￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b response￨4￨b .￨4￨b setCacheDuration￨4￨b (￨4￨b 0￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f private￨3￨f CaptchaImageResource￨3￨f (￨3￨f final￨4￨p KittenCaptchaPanel￨4￨p .￨4￨p PlacedAnimalList￨4￨p animals￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f byte￨3￨f [￨3￨f ]￨3￨f getImageData￨3￨f (￨3￨f Attributes￨4￨p attributes￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f invalidate￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f boolean￨3￨f allKittensSelected￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f clearData￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f reset￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f String￨3￨f selectString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d PlacedAnimal￨2￨d implements￨2￨d Serializable￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e -￨3￨e 6703909440564862486L￨3￨e ;￨3￨e private￨3￨e transient￨3￨e KittenCaptchaPanel￨3￨e .￨3￨e Animal￨3￨e animal￨3￨e ;￨3￨e private￨3￨e final￨3￨e int￨3￨e index￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e isHighlighted￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e isKitten￨3￨e ;￨3￨e private￨3￨e final￨3￨e Point￨3￨e location￨3￨e ;￨3￨e private￨3￨f final￨3￨f float￨3￨f [￨3￨f ]￨3￨f scales￨3￨f =￨3￨f new￨3￨f float￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e public￨3￨f PlacedAnimal￨3￨f (￨3￨f final￨4￨p KittenCaptchaPanel￨4￨p .￨4￨p Animal￨4￨p animal￨4￨p ,￨4￨p final￨4￨p Point￨4￨p location￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f boolean￨3￨f contains￨3￨f (￨3￨f final￨4￨p Point￨4￨p point￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f draw￨3￨f (￨3￨f final￨4￨p Graphics2D￨4￨p graphics￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f KittenCaptchaPanel￨3￨f .￨3￨f Animal￨3￨f getAnimal￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f float￨3￨f random￨3￨f (￨3￨f float￨4￨p min￨4￨p ,￨4￨p float￨4￨p max￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d PlacedAnimalList￨2￨d implements￨2￨d Serializable￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 6335852594326213439L￨3￨e ;￨3￨e private￨3￨e final￨3￨e List￨3￨e <￨3￨e KittenCaptchaPanel￨3￨e .￨3￨e PlacedAnimal￨3￨e >￨3￨e animals￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e KittenCaptchaPanel￨3￨e .￨3￨e PlacedAnimal￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨f PlacedAnimalList￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f boolean￨3￨f allKittensSelected￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f KittenCaptchaPanel￨3￨f .￨3￨f PlacedAnimal￨3￨f atLocation￨3￨f (￨3￨f final￨4￨p Point￨4￨p location￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f BufferedImage￨3￨f createImage￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f reset￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f String￨3￨f selectString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f OpaqueRegion￨3￨f visibleRegion￨3￨f (￨3￨f final￨4￨p KittenCaptchaPanel￨4￨p .￨4￨p PlacedAnimal￨4￨p animal￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d UMLLinkedList￨1￨d extends￨1￨d UMLList2￨1￨d implements￨1￨d MouseListener￨1￨d {￨1￨d public￨2￨f UMLLinkedList￨2￨f (￨2￨f UMLModelElementListModel2￨3￨p dataModel￨3￨p ,￨3￨p boolean￨3￨p showIcon￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f UMLLinkedList￨2￨f (￨2￨f UMLModelElementListModel2￨3￨p dataModel￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f doIt￨2￨f (￨2￨f ListSelectionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f mouseClicked￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c e￨4￨c .￨4￨c getSource￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c e￨5￨c .￨5￨c getClickCount￨5￨c (￨5￨c )￨5￨c )￨5￨c >=￨5￨c 2￨5￨c )￨5￨c &&￨5￨c (￨5￨c SwingUtilities￨5￨c .￨5￨c isLeftMouseButton￨5￨c (￨5￨c e￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j Object￨5￨e o￨5￨e =￨5￨e getSelectedValue￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j o￨6￨c instanceof￨6￨c MModelElement￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b TheInstance￨6￨b .￨6￨b setTarget￨6￨b (￨6￨b o￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j }￨4￨j e￨4￨e .￨4￨e consume￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f mouseEntered￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f mouseExited￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f mousePressed￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f mouseReleased￨2￨f (￨2￨f MouseEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d NewLoggingExtension￨1￨d implements￨1￨d NewExtension￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e SUBSYSTEM_NAME￨2￨e =￨2￨e "logging"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e PathElement￨2￨e loggersPath￨2￨e =￨2￨e PathElement￨2￨e .￨2￨e pathElement￨2￨e (￨2￨e LOGGER￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e PathElement￨2￨e handlersPath￨2￨e =￨2￨e PathElement￨2￨e .￨2￨e pathElement￨2￨e (￨2￨e HANDLER￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f NewExtensionContext￨3￨p context￨3￨p )￨2￨f {￨2￨f final￨3￨e SubsystemRegistration￨3￨e subsystem￨3￨e =￨3￨e context￨3￨e .￨3￨e registerSubsystem￨3￨e (￨3￨e NewLoggingExtension￨3￨e .￨3￨e SUBSYSTEM_NAME￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNodeRegistration￨3￨e registration￨3￨e =￨3￨e subsystem￨3￨e .￨3￨e registerSubsystemModel￨3￨e (￨3￨e SUBSYSTEM￨3￨e )￨3￨e ;￨3￨e registration￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e NewLoggingExtension￨3￨e .￨3￨e ADD_INSTANCE￨3￨e ,￨3￨e SUBSYSTEM_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e registration￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "set-root-logger"￨3￨e ,￨3￨e INSTANCE￨3￨e ,￨3￨e SET_ROOT_LOGGER￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e registration￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "remove-root-logger"￨3￨e ,￨3￨e NewRootLoggerRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SET_ROOT_LOGGER￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNodeRegistration￨3￨e loggers￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e NewLoggingExtension￨3￨e .￨3￨e loggersPath￨3￨e ,￨3￨e NewLoggingSubsystemProviders￨3￨e .￨3￨e LOGGER￨3￨e )￨3￨e ;￨3￨e loggers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e NewLoggerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e LOGGER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e loggers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e NewLoggerRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e LOGGER_REMOVE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNodeRegistration￨3￨e handlers￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e NewLoggingExtension￨3￨e .￨3￨e handlersPath￨3￨e ,￨3￨e HANDLERS￨3￨e )￨3￨e ;￨3￨e handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e NewLoggerHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e HANDLER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e NewLoggerHandlerRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e HANDLER_REMOVE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b handlers￨3￨b .￨3￨b registerOperationHandler￨3￨b (￨3￨b "add-async-handler"￨3￨b ,￨3￨b NewAsyncHandlerAdd￨3￨b .￨3￨b INSTANCE￨3￨b ,￨3￨b ASYNC_HANDLER_ADD￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "add-console-handler"￨3￨e ,￨3￨e NewConsoleHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e CONSOLE_HANDLER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "add-file-handler"￨3￨e ,￨3￨e NewFileHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e FILE_HANDLER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "add-periodic-handler"￨3￨e ,￨3￨e NewPeriodicFileHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e PERIODIC_HANDLER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e handlers￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e "add-size-periodic-handler"￨3￨e ,￨3￨e NewSizePeriodicFileHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SIZE_PERIODIC_HANDLER_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f initializeParsers￨2￨f (￨2￨f ExtensionParsingContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e final￨2￨e NewLoggingExtension￨2￨e .￨2￨e NewLoggingSubsystemAdd￨2￨e ADD_INSTANCE￨2￨e =￨2￨e new￨2￨e NewLoggingExtension￨2￨e .￨2￨e NewLoggingSubsystemAdd￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨d class￨2￨d NewLoggingSubsystemAdd￨2￨d implements￨2￨d ModelAddOperationHandler￨2￨d {￨2￨d public￨3￨f Cancellable￨3￨f execute￨3￨f (￨3￨f final￨4￨p NewOperationContext￨4￨p context￨4￨p ,￨4￨p final￨4￨p ModelNode￨4￨p operation￨4￨p ,￨4￨p final￨4￨p ResultHandler￨4￨p resultHandler￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TestTimeLimitingCollector￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e SLOW_DOWN￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e TIME_ALLOWED￨2￨e =￨2￨e 17￨2￨e *￨2￨e (￨2￨e TestTimeLimitingCollector￨2￨e .￨2￨e SLOW_DOWN￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e double￨2￨e MULTI_THREAD_SLACK￨2￨e =￨2￨e 7￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_DOCS￨2￨e =￨2￨e 3000￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_THREADS￨2￨e =￨2￨e 50￨2￨e ;￨2￨e private￨2￨e Searcher￨2￨e searcher￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e FIELD_NAME￨2￨e =￨2￨e "body"￨2￨e ;￨2￨e private￨2￨e Query￨2￨e query￨2￨e ;￨2￨e public￨2￨f TestTimeLimitingCollector￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨f String￨3￨f [￨3￨f ]￨3￨f docText￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e Directory￨3￨e directory￨3￨e =￨3￨e new￨3￨e RAMDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e IndexWriter￨3￨e iw￨3￨e =￨3￨e new￨3￨e IndexWriter￨3￨e (￨3￨e directory￨3￨e ,￨3￨e new￨3￨e WhitespaceAnalyzer￨3￨e (￨3￨e )￨3￨e ,￨3￨e true￨3￨e ,￨3￨e MaxFieldLength￨3￨e .￨3￨e UNLIMITED￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c TestTimeLimitingCollector￨4￨c .￨4￨c N_DOCS￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l add￨4￨e (￨4￨e docText￨4￨e [￨4￨e (￨4￨e i￨4￨e %￨4￨e (￨4￨e docText￨4￨e .￨4￨e length￨4￨e )￨4￨e )￨4￨e ]￨4￨e ,￨4￨e iw￨4￨e )￨4￨e ;￨4￨e }￨3￨l iw￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e searcher￨3￨e =￨3￨e new￨3￨e IndexSearcher￨3￨e (￨3￨e directory￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e String￨3￨e qtxt￨3￨e =￨3￨e "one"￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 1￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c docText￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l qtxt￨4￨e +=￨4￨e '<seq2seq4repair_space>'￨4￨e +￨4￨e (￨4￨e docText￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l <START_BUG>￨3￨b QueryParser￨3￨b queryParser￨3￨b =￨3￨b new￨3￨b QueryParser￨3￨b (￨3￨b Version￨3￨b .￨3￨b LUCENE_CURRENT￨3￨b ,￨3￨b FIELD_NAME￨3￨b ,￨3￨b new￨3￨b WhitespaceAnalyzer￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b query￨3￨e =￨3￨e queryParser￨3￨e .￨3￨e parse￨3￨e (￨3￨e qtxt￨3￨e )￨3￨e ;￨3￨e searcher￨3￨e .￨3￨e search￨3￨e (￨3￨e query￨3￨e ,￨3￨e null￨3￨e ,￨3￨e 1000￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f add￨2￨f (￨2￨f String￨2￨f value￨2￨f ,￨2￨f IndexWriter￨2￨f iw￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f search￨2￨f (￨2￨f Collector￨2￨f collector￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collector￨2￨f createTimedCollector￨2￨f (￨2￨f TestTimeLimitingCollector￨3￨p .￨3￨p MyHitCollector￨3￨p hc￨3￨p ,￨3￨p long￨3￨p timeAllowed￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutNotGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestTimeout￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f maxTime￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f maxTimeStr￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testModifyResolution￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearchMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestMultiThreads￨2￨f (￨2￨f final￨2￨f boolean￨2￨f withTimeout￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d MyHitCollector￨2￨d extends￨2￨d Collector￨2￨d {￨2￨d private￨3￨e final￨3￨e BitSet￨3￨e bits￨3￨e =￨3￨e new￨3￨e BitSet￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e int￨3￨e slowdown￨3￨e =￨3￨e 0￨3￨e ;￨3￨e private￨3￨e int￨3￨e lastDocCollected￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e private￨3￨e int￨3￨e docBase￨3￨e =￨3￨e 0￨3￨e ;￨3￨e public￨3￨f void￨3￨f setSlowDown￨3￨f (￨3￨f int￨4￨p milliseconds￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hitCount￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f getLastDocCollected￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setScorer￨3￨f (￨3￨f Scorer￨3￨f scorer￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f collect￨3￨f (￨3￨f final￨3￨f int￨3￨f doc￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setNextReader￨3￨f (￨3￨f IndexReader￨4￨p reader￨4￨p ,￨4￨p int￨4￨p base￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f acceptsDocsOutOfOrder￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TCPConfigGui￨1￨d extends￨1￨d AbstractConfigGui￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e SERVER￨2￨e =￨2￨e "server"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PORT￨2￨e =￨2￨e "port"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e FILENAME￨2￨e =￨2￨e "filename"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e TIMEOUT￨2￨e =￨2￨e "timeout"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e NODELAY￨2￨e =￨2￨e "nodelay"￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e server￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e port￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e filename￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e timeout￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e nodelay￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e displayName￨2￨e =￨2￨e true￨2￨e ;￨2￨e public￨2￨f TCPConfigGui￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TCPConfigGui￨2￨f (￨2￨f boolean￨3￨p displayName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStaticLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b JMeterUtils￨3￨b .￨3￨b getResString￨3￨b (￨3￨b "tcp_sample_title"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f configure￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyTestElement￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createTimeoutPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createNoDelayPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createServerPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createPortPanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JPanel￨2￨f createFilenamePanel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d GoLinkStimuli￨1￨d implements￨1￨d TreeModelPrereqs￨1￨d {￨1￨d public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b Localizer￨3￨b .￨3￨b localize￨3￨b (￨3￨b "Tree"￨3￨b ,￨3￨b "Link->Stimuli"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Object￨2￨f getRoot￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRoot￨2￨f (￨2￨f Object￨3￨p r￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getChild￨2￨f (￨2￨f Object￨3￨p parent￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getChildCount￨2￨f (￨2￨f Object￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getIndexOfChild￨2￨f (￨2￨f Object￨3￨p parent￨3￨p ,￨3￨p Object￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getChildren￨2￨f (￨2￨f Object￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLeaf￨2￨f (￨2￨f Object￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f valueForPathChanged￨2￨f (￨2￨f TreePath￨3￨p path￨3￨p ,￨3￨p Object￨3￨p newValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTreeModelListener￨2￨f (￨2￨f TreeModelListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeTreeModelListener￨2￨f (￨2￨f TreeModelListener￨3￨p l￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getPrereqs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getProvidedTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConditionalExpression￨1￨d extends￨1￨d OperatorExpression￨1￨d {￨1￨d public￨2￨e Expression￨2￨e condition￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e valueIfTrue￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e valueIfFalse￨2￨e ;￨2￨e public￨2￨e Constant￨2￨e optimizedBooleanConstant￨2￨e ;￨2￨e public￨2￨e Constant￨2￨e optimizedIfTrueConstant￨2￨e ;￨2￨e public￨2￨e Constant￨2￨e optimizedIfFalseConstant￨2￨e ;￨2￨e int￨2￨e trueInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e falseInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e mergedInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f ConditionalExpression￨2￨f (￨2￨f Expression￨3￨p condition￨3￨p ,￨3￨p Expression￨3￨p valueIfTrue￨3￨p ,￨3￨p Expression￨3￨p valueIfFalse￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f int￨3￨e pc￨3￨e =￨3￨e codeStream￨3￨e .￨3￨e position￨3￨e ;￨3￨e BranchLabel￨3￨e endifLabel￨3￨e ;￨3￨e BranchLabel￨3￨e falseLabel￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c constant￨4￨c )￨4￨c !=￨4￨c (￨4￨c Constant￨4￨c .￨4￨c NotAConstant￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j valueRequired￨5￨c )￨4￨j {￨4￨j codeStream￨5￨e .￨5￨e generateConstant￨5￨e (￨5￨e constant￨5￨e ,￨5￨e implicitConversion￨5￨e )￨5￨e ;￨5￨e }￨4￨j codeStream￨4￨e .￨4￨e recordPositionsFrom￨4￨e (￨4￨e pc￨4￨e ,￨4￨e this￨4￨e .￨4￨e sourceStart￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j Constant￨3￨e cst￨3￨e =￨3￨e condition￨3￨e .￨3￨e constant￨3￨e ;￨3￨e Constant￨3￨e condCst￨3￨e =￨3￨e condition￨3￨e .￨3￨e optimizedBooleanConstant￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e needTruePart￨3￨e =￨3￨e !￨3￨e (￨3￨e (￨3￨e (￨3￨e cst￨3￨e !=￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e cst￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e false￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e (￨3￨e condCst￨3￨e !=￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e condCst￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e false￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e needFalsePart￨3￨e =￨3￨e !￨3￨e (￨3￨e (￨3￨e (￨3￨e cst￨3￨e !=￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e cst￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e true￨3￨e )￨3￨e )￨3￨e ||￨3￨e (￨3￨e (￨3￨e condCst￨3￨e !=￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e condCst￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e true￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e endifLabel￨3￨e =￨3￨e new￨3￨e BranchLabel￨3￨e (￨3￨e codeStream￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e needConditionValue￨3￨e =￨3￨e (￨3￨e cst￨3￨e ==￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e condCst￨3￨e ==￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e ;￨3￨e falseLabel￨3￨e =￨3￨e new￨3￨e BranchLabel￨3￨e (￨3￨e codeStream￨3￨e )￨3￨e ;￨3￨e falseLabel￨3￨e .￨3￨e tagBits￨3￨e |=￨3￨e BranchLabel￨3￨e .￨3￨e USED￨3￨e ;￨3￨e condition￨3￨e .￨3￨e generateOptimizedBoolean￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e codeStream￨3￨e ,￨3￨e null￨3￨e ,￨3￨e falseLabel￨3￨e ,￨3￨e needConditionValue￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c trueInitStateIndex￨4￨c )￨4￨c !=￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e removeNotDefinitelyAssignedVariables￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e trueInitStateIndex￨4￨e )￨4￨e ;￨4￨e codeStream￨4￨e .￨4￨e addDefinitelyAssignedVariables￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e trueInitStateIndex￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j needTruePart￨4￨c )￨3￨j {￨3￨j valueIfTrue￨4￨e .￨4￨e generateCode￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e codeStream￨4￨e ,￨4￨e valueRequired￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j needFalsePart￨5￨c )￨4￨j {￨4￨j int￨5￨e position￨5￨e =￨5￨e codeStream￨5￨e .￨5￨e position￨5￨e ;￨5￨e codeStream￨5￨e .￨5￨e goto_￨5￨e (￨5￨e endifLabel￨5￨e )￨5￨e ;￨5￨e codeStream￨5￨e .￨5￨e updateLastRecordedEndPC￨5￨e (￨5￨e currentScope￨5￨e ,￨5￨e position￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j valueRequired￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e decrStackSize￨6￨e (￨6￨e (￨6￨e (￨6￨e (￨6￨e this￨6￨e .￨6￨e resolvedType￨6￨e )￨6￨e ==￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e LONG￨6￨e )￨6￨e )￨6￨e ||￨6￨e (￨6￨e (￨6￨e this￨6￨e .￨6￨e resolvedType￨6￨e )￨6￨e ==￨6￨e (￨6￨e TypeBinding￨6￨e .￨6￨e DOUBLE￨6￨e )￨6￨e )￨6￨e ?￨6￨e 2￨6￨e :￨6￨e 1￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j if￨3￨j (￨3￨j needFalsePart￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c falseInitStateIndex￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j codeStream￨5￨e .￨5￨e removeNotDefinitelyAssignedVariables￨5￨e (￨5￨e currentScope￨5￨e ,￨5￨e falseInitStateIndex￨5￨e )￨5￨e ;￨5￨e codeStream￨5￨e .￨5￨e addDefinitelyAssignedVariables￨5￨e (￨5￨e currentScope￨5￨e ,￨5￨e falseInitStateIndex￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b if￨4￨b (￨4￨b falseLabel￨4￨b .￨4￨b hasForwardReferences￨4￨b (￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b falseLabel￨4￨e .￨4￨e place￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨4￨e valueIfFalse￨4￨e .￨4￨e generateCode￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e codeStream￨4￨e ,￨4￨e valueRequired￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j valueRequired￨5￨c )￨4￨j {￨4￨j codeStream￨5￨e .￨5￨e recordExpressionType￨5￨e (￨5￨e this￨5￨e .￨5￨e resolvedType￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j needTruePart￨5￨c )￨4￨j {￨4￨j endifLabel￨5￨e .￨5￨e place￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c mergedInitStateIndex￨4￨c )￨4￨c !=￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e removeNotDefinitelyAssignedVariables￨4￨e (￨4￨e currentScope￨4￨e ,￨4￨e mergedInitStateIndex￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j valueRequired￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e generateImplicitConversion￨4￨e (￨4￨e implicitConversion￨4￨e )￨4￨e ;￨4￨e }￨3￨j codeStream￨3￨e .￨3￨e recordPositionsFrom￨3￨e (￨3￨e pc￨3￨e ,￨3￨e this￨3￨e .￨3￨e sourceStart￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateOptimizedBoolean￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p BranchLabel￨3￨p trueLabel￨3￨p ,￨3￨p BranchLabel￨3￨p falseLabel￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f nullStatus￨2￨f (￨2￨f FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f optimizedBooleanConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printExpressionNoParenthesis￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ResourceStreamResource￨1￨d extends￨1￨d AbstractResource￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d ResourceStreamResource￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d IResourceStream￨2￨d stream￨2￨d ;￨2￨d private￨2￨d String￨2￨d fileName￨2￨d ;￨2￨d private￨2￨d ContentDisposition￨2￨d contentDisposition￨2￨d =￨2￨d ContentDisposition￨2￨d .￨2￨d INLINE￨2￨d ;￨2￨d private￨2￨d String￨2￨d textEncoding￨2￨d ;￨2￨d private￨2￨d String￨2￨d mimeType￨2￨d ;￨2￨d public￨2￨d ResourceStreamResource￨2￨d (￨2￨d IResourceStream￨2￨d stream￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f ResourceStreamResource￨2￨f setFileName￨2￨f (￨2￨f String￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResourceStreamResource￨2￨f setContentDisposition￨2￨f (￨2￨f ContentDisposition￨3￨p contentDisposition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResourceStreamResource￨2￨f setTextEncoding￨2￨f (￨2￨f String￨3￨p textEncoding￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f ResourceResponse￨2￨f newResourceResponse￨2￨f (￨2￨f Attributes￨3￨p attributes￨3￨p )￨2￨f {￨2￨f ResourceResponse￨3￨e data￨3￨e =￨3￨e new￨3￨e ResourceResponse￨3￨e (￨3￨e )￨3￨e ;￨3￨e Time￨3￨e lastModifiedTime￨3￨e =￨3￨e stream￨3￨e .￨3￨e lastModifiedTime￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j lastModifiedTime￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b data￨4￨b .￨4￨b setLastModified￨4￨b (￨4￨b lastModifiedTime￨4￨b .￨4￨b toDate￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j if￨3￨j (￨3￨j data￨4￨c .￨4￨c dataNeedsToBeWritten￨4￨c (￨4￨c attributes￨4￨c )￨4￨c )￨3￨j {￨3￨j InputStream￨4￨e inputStream￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c stream￨5￨c )￨5￨c instanceof￨5￨c IResourceStreamWriter￨5￨c )￨5￨c ==￨5￨c false￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f inputStream￨6￨e =￨6￨e stream￨6￨e .￨6￨e getInputStream￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ResourceStreamNotFoundException￨6￨p e￨6￨p )￨5￨f {￨5￨f data￨6￨e .￨6￨e setError￨6￨e (￨6￨e SC_NOT_FOUND￨6￨e )￨6￨e ;￨6￨e close￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j data￨4￨e .￨4￨e setContentDisposition￨4￨e (￨4￨e contentDisposition￨4￨e )￨4￨e ;￨4￨e Bytes￨4￨e length￨4￨e =￨4￨e stream￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j length￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j data￨5￨e .￨5￨e setContentLength￨5￨e (￨5￨e length￨5￨e .￨5￨e bytes￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j data￨4￨e .￨4￨e setFileName￨4￨e (￨4￨e fileName￨4￨e )￨4￨e ;￨4￨e data￨4￨e .￨4￨e setContentType￨4￨e (￨4￨e stream￨4￨e .￨4￨e getContentType￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e data￨4￨e .￨4￨e setTextEncoding￨4￨e (￨4￨e textEncoding￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c stream￨5￨c )￨5￨c instanceof￨5￨c IResourceStreamWriter￨5￨c )￨4￨j {￨4￨j data￨5￨f .￨5￨f setWriteCallback￨5￨f (￨5￨f new￨5￨f WriteCallback￨5￨f (￨5￨f )￨5￨f {￨5￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f writeData￨6￨f (￨6￨f Attributes￨7￨p attributes￨7￨p )￨6￨f {￨6￨f (￨7￨e (￨7￨e IResourceStreamWriter￨7￨e )￨7￨e (￨7￨e stream￨7￨e )￨7￨e )￨7￨e .￨7￨e write￨7￨e (￨7￨e attributes￨7￨e .￨7￨e getResponse￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e close￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j final￨5￨e InputStream￨5￨e s￨5￨e =￨5￨e inputStream￨5￨e ;￨5￨e data￨5￨f .￨5￨f setWriteCallback￨5￨f (￨5￨f new￨5￨f WriteCallback￨5￨f (￨5￨f )￨5￨f {￨5￨f @￨6￨f Override￨6￨f public￨6￨f void￨6￨f writeData￨6￨f (￨6￨f Attributes￨7￨p attributes￨7￨p )￨6￨f {￨6￨f try￨7￨f (￨7￨f )￨7￨f {￨7￨f writeStream￨8￨e (￨8￨e attributes￨8￨e ,￨8￨e s￨8￨e )￨8￨e ;￨8￨e }￨7￨f finally￨7￨f (￨7￨f )￨7￨f {￨7￨f close￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e data￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BeansXmlProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e WEB_INF_BEANS_XML￨2￨e =￨2￨e "WEB-INF/beans.xml"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e META_INF_BEANS_XML￨2￨e =￨2￨e "META-INF/beans.xml"￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e BeansXmlParser￨3￨e parser￨3￨e =￨3￨e new￨3￨e BeansXmlParser￨3￨e (￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e BeanArchiveMetadata￨3￨e >￨3￨e beanArchiveMetadata￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e BeanArchiveMetadata￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e ResourceRoot￨3￨e deploymentRoot￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e DEPLOYMENT_ROOT￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j deploymentRoot￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j ResourceRoot￨3￨e classesRoot￨3￨e =￨3￨e null￨3￨e ;￨3￨e List￨3￨e <￨3￨e ResourceRoot￨3￨e >￨3￨e structure￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachmentList￨3￨e (￨3￨e RESOURCE_ROOTS￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l ResourceRoot￨4￨c resourceRoot￨4￨c :￨4￨c structure￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c ModuleRootMarker￨5￨c .￨5￨c isModuleRoot￨5￨c (￨5￨c resourceRoot￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c SubDeploymentMarker￨5￨c .￨5￨c isSubDeployment￨5￨c (￨5￨c resourceRoot￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j resourceRoot￨6￨c .￨6￨c getRootName￨6￨c (￨6￨c )￨6￨c .￨6￨c equals￨6￨c (￨6￨c "classes"￨6￨c )￨6￨c )￨5￨j {￨5￨j classesRoot￨6￨e =￨6￨e resourceRoot￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j VirtualFile￨6￨e beansXml￨6￨e =￨6￨e resourceRoot￨6￨e .￨6￨e getRoot￨6￨e (￨6￨e )￨6￨e .￨6￨e getChild￨6￨e (￨6￨e BeansXmlProcessor￨6￨e .￨6￨e META_INF_BEANS_XML￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c beansXml￨7￨c .￨7￨c exists￨7￨c (￨7￨c )￨7￨c )￨7￨c &&￨7￨c (￨7￨c beansXml￨7￨c .￨7￨c isFile￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j DEPLOYMENT_LOGGER￨7￨e .￨7￨e debugf￨7￨e (￨7￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨7￨e ,￨7￨e beansXml￨7￨e .￨7￨e toString￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e beanArchiveMetadata￨7￨e .￨7￨e add￨7￨e (￨7￨e new￨7￨e BeanArchiveMetadata￨7￨e (￨7￨e beansXml￨7￨e ,￨7￨e resourceRoot￨7￨e ,￨7￨e parseBeansXml￨7￨e (￨7￨e beansXml￨7￨e ,￨7￨e parser￨7￨e ,￨7￨e deploymentUnit￨7￨e )￨7￨e ,￨7￨e false￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨j }￨3￨l if￨3￨j (￨3￨j DeploymentTypeMarker￨4￨c .￨4￨c isType￨4￨c (￨4￨c WAR￨4￨c ,￨4￨c deploymentUnit￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e VirtualFile￨4￨e rootBeansXml￨4￨e =￨4￨e deploymentRoot￨4￨e .￨4￨e getRoot￨4￨e (￨4￨e )￨4￨e .￨4￨e getChild￨4￨e (￨4￨e BeansXmlProcessor￨4￨e .￨4￨e WEB_INF_BEANS_XML￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b rootBeansXml￨4￨b .￨4￨b exists￨4￨b (￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b rootBeansXml￨4￨b .￨4￨b isFile￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b DEPLOYMENT_LOGGER￨4￨e .￨4￨e debugf￨4￨e (￨4￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨4￨e ,￨4￨e rootBeansXml￨4￨e )￨4￨e ;￨4￨e beanArchiveMetadata￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e BeanArchiveMetadata￨4￨e (￨4￨e rootBeansXml￨4￨e ,￨4￨e classesRoot￨4￨e ,￨4￨e parseBeansXml￨4￨e (￨4￨e rootBeansXml￨4￨e ,￨4￨e parser￨4￨e ,￨4￨e deploymentUnit￨4￨e )￨4￨e ,￨4￨e true￨4￨e )￨4￨e )￨4￨e ;￨4￨e else￨4￨j if￨4￨j (￨4￨j classesRoot￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j VirtualFile￨5￨e beansXml￨5￨e =￨5￨e classesRoot￨5￨e .￨5￨e getRoot￨5￨e (￨5￨e )￨5￨e .￨5￨e getChild￨5￨e (￨5￨e BeansXmlProcessor￨5￨e .￨5￨e META_INF_BEANS_XML￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c beansXml￨6￨c .￨6￨c exists￨6￨c (￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c beansXml￨6￨c .￨6￨c isFile￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j DEPLOYMENT_LOGGER￨6￨e .￨6￨e beansXmlInNonStandardLocation￨6￨e (￨6￨e beansXml￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e beanArchiveMetadata￨6￨e .￨6￨e add￨6￨e (￨6￨e new￨6￨e BeanArchiveMetadata￨6￨e (￨6￨e beansXml￨6￨e ,￨6￨e classesRoot￨6￨e ,￨6￨e parseBeansXml￨6￨e (￨6￨e beansXml￨6￨e ,￨6￨e parser￨6￨e ,￨6￨e deploymentUnit￨6￨e )￨6￨e ,￨6￨e true￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j else￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c DeploymentTypeMarker￨4￨c .￨4￨c isType￨4￨c (￨4￨c EAR￨4￨c ,￨4￨c deploymentUnit￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e VirtualFile￨4￨e rootBeansXml￨4￨e =￨4￨e deploymentRoot￨4￨e .￨4￨e getRoot￨4￨e (￨4￨e )￨4￨e .￨4￨e getChild￨4￨e (￨4￨e BeansXmlProcessor￨4￨e .￨4￨e META_INF_BEANS_XML￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c rootBeansXml￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c rootBeansXml￨5￨c .￨5￨c isFile￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j DEPLOYMENT_LOGGER￨5￨e .￨5￨e debugf￨5￨e (￨5￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨5￨e ,￨5￨e rootBeansXml￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e beanArchiveMetadata￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e BeanArchiveMetadata￨5￨e (￨5￨e rootBeansXml￨5￨e ,￨5￨e deploymentRoot￨5￨e ,￨5￨e parseBeansXml￨5￨e (￨5￨e rootBeansXml￨5￨e ,￨5￨e parser￨5￨e ,￨5￨e deploymentUnit￨5￨e )￨5￨e ,￨5￨e true￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c beanArchiveMetadata￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j WeldDeploymentMetadata￨4￨e deploymentMetadata￨4￨e =￨4￨e new￨4￨e WeldDeploymentMetadata￨4￨e (￨4￨e beanArchiveMetadata￨4￨e )￨4￨e ;￨4￨e deploymentUnit￨4￨e .￨4￨e putAttachment￨4￨e (￨4￨e ATTACHMENT_KEY￨4￨e ,￨4￨e deploymentMetadata￨4￨e )￨4￨e ;￨4￨e WeldDeploymentMarker￨4￨e .￨4￨e mark￨4￨e (￨4￨e deploymentUnit￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c deploymentUnit￨5￨c .￨5￨c getParent￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j WeldDeploymentMarker￨5￨e .￨5￨e mark￨5￨e (￨5￨e deploymentUnit￨5￨e .￨5￨e getParent￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f BeansXml￨2￨f parseBeansXml￨2￨f (￨2￨f VirtualFile￨2￨f beansXmlFile￨2￨f ,￨2￨f BeansXmlParser￨2￨f parser￨2￨f ,￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d GrantNode￨1￨d extends￨1￨d MiscellaneousStatementNode￨1￨d {￨1￨d private￨2￨e PrivilegeNode￨2￨e privileges￨2￨e ;￨2￨e private￨2￨e List￨2￨e grantees￨2￨e ;￨2￨e public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f statementToString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f Object￨3￨p privileges￨3￨p ,￨3￨p Object￨3￨p grantees￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f QueryTreeNode￨2￨f bind￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b privileges￨3￨b =￨3￨b (￨3￨b (￨3￨b PrivilegeNode￨3￨b )￨3￨b (￨3￨b privileges￨3￨b .￨3￨b bind￨3￨b (￨3￨b new￨3￨b HashMap￨3￨b (￨3￨b )￨3￨b ,￨3￨b grantees￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e this￨3￨e ;￨3￨e }￨2￨f public￨2￨f ConstantAction￨2￨f makeConstantAction￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d WorkingCopyOwner￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f setPrimaryBufferProvider￨2￨f (￨2￨f WorkingCopyOwner￨3￨p primaryBufferProvider￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IBuffer￨2￨f createBuffer￨2￨f (￨2￨f ICompilationUnit￨3￨p workingCopy￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b BufferManager￨3￨b .￨3￨b getDefaultBufferManager￨3￨b (￨3￨b )￨3￨b .￨3￨b createBuffer￨3￨b (￨3￨b workingCopy￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f final￨2￨f ICompilationUnit￨2￨f newWorkingCopy￨2￨f (￨2￨f String￨2￨f name￨2￨f ,￨2￨f IClasspathEntry￨2￨f [￨2￨f ]￨2￨f classpath￨2￨f ,￨2￨f IProblemRequestor￨2￨f problemRequestor￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConcreteAspectCodeGen￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e EMPTY_STRINGS￨2￨e =￨2￨e new￨2￨e String￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Type￨2￨e [￨2￨e ]￨2￨e EMPTY_TYPES￨2￨e =￨2￨e new￨2￨e Type￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e final￨2￨e ConcreteAspect￨2￨e m_concreteAspect￨2￨e ;￨2￨e private￨2￨e final￨2￨e World￨2￨e m_world￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e m_isValid￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e ResolvedType￨2￨e m_parent￨2￨e ;￨2￨e private￨2￨e PerClause￨2￨e m_perClause￨2￨e ;￨2￨e ConcreteAspectCodeGen￨2￨f (￨2￨f Definition￨3￨p .￨3￨p ConcreteAspect￨3￨p concreteAspect￨3￨p ,￨3￨p World￨3￨p world￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f validate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f stringify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getBytes￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c m_isValid￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e "Must<seq2seq4repair_space>validate<seq2seq4repair_space>first"￨4￨e )￨4￨e ;￨4￨e }￨3￨j LazyClassGen￨3￨e cg￨3￨e =￨3￨e new￨3￨e LazyClassGen￨3￨e (￨3￨e m_concreteAspect￨3￨e .￨3￨e name￨3￨e .￨3￨e replace￨3￨e (￨3￨e '.'￨3￨e ,￨3￨e '/'￨3￨e )￨3￨e ,￨3￨e m_parent￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e ,￨3￨e null￨3￨e ,￨3￨e (￨3￨e (￨3￨e Modifier￨3￨e .￨3￨e PUBLIC￨3￨e )￨3￨e +￨3￨e (￨3￨e Constants￨3￨e .￨3￨e ACC_SUPER￨3￨e )￨3￨e )￨3￨e ,￨3￨e ConcreteAspectCodeGen￨3￨e .￨3￨e EMPTY_STRINGS￨3￨e ,￨3￨e m_world￨3￨e )￨3￨e ;￨3￨e AnnotationGen￨3￨e ag￨3￨e =￨3￨e new￨3￨e AnnotationGen￨3￨e (￨3￨e new￨3￨e ObjectType￨3￨e (￨3￨e "org/aspectj/lang/annotation/Aspect"￨3￨e )￨3￨e ,￨3￨e Collections￨3￨e .￨3￨e EMPTY_LIST￨3￨e ,￨3￨e true￨3￨e ,￨3￨e cg￨3￨e .￨3￨e getConstantPoolGen￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e cg￨3￨e .￨3￨e addAnnotation￨3￨e (￨3￨e ag￨3￨e .￨3￨e getAnnotation￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c m_concreteAspect￨4￨c .￨4￨c precedence￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j SimpleElementValueGen￨4￨e svg￨4￨e =￨4￨e new￨4￨e SimpleElementValueGen￨4￨e (￨4￨e ElementValueGen￨4￨e .￨4￨e STRING￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e ,￨4￨e m_concreteAspect￨4￨e .￨4￨e precedence￨4￨e )￨4￨e ;￨4￨e List￨4￨e elems￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e (￨4￨e )￨4￨e ;￨4￨e elems￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e aspectj￨4￨e .￨4￨e apache￨4￨e .￨4￨e bcel￨4￨e .￨4￨e generic￨4￨e .￨4￨e annotation￨4￨e .￨4￨e ElementNameValuePairGen￨4￨e (￨4￨e "value"￨4￨e ,￨4￨e svg￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e AnnotationGen￨4￨e agprec￨4￨e =￨4￨e new￨4￨e AnnotationGen￨4￨e (￨4￨e new￨4￨e ObjectType￨4￨e (￨4￨e "org/aspectj/lang/annotation/DeclarePrecedence"￨4￨e )￨4￨e ,￨4￨e elems￨4￨e ,￨4￨e true￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e cg￨4￨e .￨4￨e addAnnotation￨4￨e (￨4￨e agprec￨4￨e .￨4￨e getAnnotation￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j LazyMethodGen￨3￨e init￨3￨e =￨3￨e new￨3￨e LazyMethodGen￨3￨e (￨3￨e Modifier￨3￨e .￨3￨e PUBLIC￨3￨e ,￨3￨e Type￨3￨e .￨3￨e VOID￨3￨e ,￨3￨e "<init>"￨3￨e ,￨3￨e ConcreteAspectCodeGen￨3￨e .￨3￨e EMPTY_TYPES￨3￨e ,￨3￨e ConcreteAspectCodeGen￨3￨e .￨3￨e EMPTY_STRINGS￨3￨e ,￨3￨e cg￨3￨e )￨3￨e ;￨3￨e InstructionList￨3￨e cbody￨3￨e =￨3￨e init￨3￨e .￨3￨e getBody￨3￨e (￨3￨e )￨3￨e ;￨3￨e cbody￨3￨e .￨3￨e append￨3￨e (￨3￨e ALOAD_0￨3￨e )￨3￨e ;￨3￨e cbody￨3￨e .￨3￨e append￨3￨e (￨3￨e cg￨3￨e .￨3￨e getFactory￨3￨e (￨3￨e )￨3￨e .￨3￨e createInvoke￨3￨e (￨3￨e m_parent￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e .￨3￨e replace￨3￨e (￨3￨e '.'￨3￨e ,￨3￨e '/'￨3￨e )￨3￨e ,￨3￨e "<init>"￨3￨e ,￨3￨e VOID￨3￨e ,￨3￨e ConcreteAspectCodeGen￨3￨e .￨3￨e EMPTY_TYPES￨3￨e ,￨3￨e INVOKESPECIAL￨3￨e )￨3￨e )￨3￨e ;￨3￨e cbody￨3￨e .￨3￨e append￨3￨e (￨3￨e RETURN￨3￨e )￨3￨e ;￨3￨e cg￨3￨e .￨3￨e addMethodGen￨3￨e (￨3￨e init￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Iterator￨4￨c it￨4￨c =￨4￨c m_concreteAspect￨4￨c .￨4￨c pointcuts￨4￨c .￨4￨c iterator￨4￨c (￨4￨c )￨4￨c ;￨4￨c it￨4￨c .￨4￨c hasNext￨4￨c (￨4￨c )￨4￨c ;￨4￨c )￨3￨l {￨3￨l Definition￨4￨e .￨4￨e Pointcut￨4￨e abstractPc￨4￨e =￨4￨e (￨4￨e (￨4￨e Definition￨4￨e .￨4￨e Pointcut￨4￨e )￨4￨e (￨4￨e it￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e LazyMethodGen￨4￨e mg￨4￨e =￨4￨e new￨4￨e LazyMethodGen￨4￨e (￨4￨e Modifier￨4￨e .￨4￨e PUBLIC￨4￨e ,￨4￨e Type￨4￨e .￨4￨e VOID￨4￨e ,￨4￨e abstractPc￨4￨e .￨4￨e name￨4￨e ,￨4￨e ConcreteAspectCodeGen￨4￨e .￨4￨e EMPTY_TYPES￨4￨e ,￨4￨e ConcreteAspectCodeGen￨4￨e .￨4￨e EMPTY_STRINGS￨4￨e ,￨4￨e cg￨4￨e )￨4￨e ;￨4￨e SimpleElementValueGen￨4￨e svg￨4￨e =￨4￨e new￨4￨e SimpleElementValueGen￨4￨e (￨4￨e ElementValueGen￨4￨e .￨4￨e STRING￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e ,￨4￨e abstractPc￨4￨e .￨4￨e expression￨4￨e )￨4￨e ;￨4￨e List￨4￨e elems￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e (￨4￨e )￨4￨e ;￨4￨e elems￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e aspectj￨4￨e .￨4￨e apache￨4￨e .￨4￨e bcel￨4￨e .￨4￨e generic￨4￨e .￨4￨e annotation￨4￨e .￨4￨e ElementNameValuePairGen￨4￨e (￨4￨e "value"￨4￨e ,￨4￨e svg￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e AnnotationGen￨4￨e mag￨4￨e =￨4￨e new￨4￨e AnnotationGen￨4￨e (￨4￨e new￨4￨e ObjectType￨4￨e (￨4￨e "org/aspectj/lang/annotation/Pointcut"￨4￨e )￨4￨e ,￨4￨e elems￨4￨e ,￨4￨e true￨4￨e ,￨4￨e cg￨4￨e .￨4￨e getConstantPoolGen￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e AnnotationX￨4￨e max￨4￨e =￨4￨e new￨4￨e AnnotationX￨4￨e (￨4￨e mag￨4￨e .￨4￨e getAnnotation￨4￨e (￨4￨e )￨4￨e ,￨4￨e m_world￨4￨e )￨4￨e ;￨4￨e mg￨4￨e .￨4￨e addAnnotation￨4￨e (￨4￨e max￨4￨e )￨4￨e ;￨4￨e InstructionList￨4￨e body￨4￨e =￨4￨e mg￨4￨e .￨4￨e getBody￨4￨e (￨4￨e )￨4￨e ;￨4￨e body￨4￨e .￨4￨e append￨4￨e (￨4￨e RETURN￨4￨e )￨4￨e ;￨4￨e cg￨4￨e .￨4￨e addMethodGen￨4￨e (￨4￨e mg￨4￨e )￨4￨e ;￨4￨e }￨3￨l BcelPerClauseAspectAdder￨3￨e perClauseMunger￨3￨e =￨3￨e new￨3￨e BcelPerClauseAspectAdder￨3￨e (￨3￨e ResolvedType￨3￨e .￨3￨e forName￨3￨e (￨3￨e m_concreteAspect￨3￨e .￨3￨e name￨3￨e )￨3￨e .￨3￨e resolve￨3￨e (￨3￨e m_world￨3￨e )￨3￨e ,￨3￨e m_perClause￨3￨e .￨3￨e getKind￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b perClauseMunger￨3￨b .￨3￨b forceMunge￨3￨b (￨3￨b cg￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b JavaClass￨3￨e jc￨3￨e =￨3￨e cg￨3￨e .￨3￨e getJavaClass￨3￨e (￨3￨e (￨3￨e (￨3￨e BcelWorld￨3￨e )￨3￨e (￨3￨e m_world￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e (￨3￨e (￨3￨e BcelWorld￨3￨e )￨3￨e (￨3￨e m_world￨3￨e )￨3￨e )￨3￨e .￨3￨e addSourceObjectType￨3￨e (￨3￨e jc￨3￨e )￨3￨e ;￨3￨e return￨3￨e jc￨3￨e .￨3￨e getBytes￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f reportError￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d UnionNode￨1￨d extends￨1￨d SetOperatorNode￨1￨d {￨1￨d private￨2￨e boolean￨2￨e addNewNodesCalled￨2￨e ;￨2￨e boolean￨2￨e tableConstructor￨2￨e ;￨2￨e boolean￨2￨e topTableConstructor￨2￨e ;￨2￨e public￨2￨f void￨2￨f init￨2￨f (￨2￨f Object￨2￨f leftResult￨2￨f ,￨2￨f Object￨2￨f rightResult￨2￨f ,￨2￨f Object￨2￨f all￨2￨f ,￨2￨f Object￨2￨f tableConstructor￨2￨f ,￨2￨f Object￨2￨f tableProperties￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f markTopTableConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f tableConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f rejectParameters￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setTableConstructorTypes￨2￨f (￨2￨f ResultColumnList￨2￨f typeColumns￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CostEstimate￨2￨f optimizeIt￨2￨f (￨2￨f Optimizer￨2￨f optimizer￨2￨f ,￨2￨f OptimizablePredicateList￨2￨f predList￨2￨f ,￨2￨f CostEstimate￨2￨f outerCost￨2￨f ,￨2￨f RowOrdering￨2￨f rowOrdering￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c predList￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c getCurrentAccessPath￨4￨c (￨4￨c )￨4￨c .￨4￨c getJoinStrategy￨4￨c (￨4￨c )￨4￨c .￨4￨c isHashJoin￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c (￨5￨c predList￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c -￨5￨c 1￨5￨c ;￨5￨c i￨5￨c >=￨5￨c 0￨5￨c ;￨5￨c i￨5￨c --￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j pushOptPredicate￨6￨c (￨6￨c predList￨6￨c .￨6￨c getOptPredicate￨6￨c (￨6￨c i￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j predList￨6￨e .￨6￨e removeOptPredicate￨6￨e (￨6￨e i￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j <START_BUG>￨3￨b addOrLoadBestPlanMapping￨3￨b (￨3￨b true￨3￨b ,￨3￨b this￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b leftResultSet￨3￨e =￨3￨e optimizeSource￨3￨e (￨3￨e optimizer￨3￨e ,￨3￨e leftResultSet￨3￨e ,￨3￨e getLeftOptPredicateList￨3￨e (￨3￨e )￨3￨e ,￨3￨e outerCost￨3￨e )￨3￨e ;￨3￨e rightResultSet￨3￨e =￨3￨e optimizeSource￨3￨e (￨3￨e optimizer￨3￨e ,￨3￨e rightResultSet￨3￨e ,￨3￨e getRightOptPredicateList￨3￨e (￨3￨e )￨3￨e ,￨3￨e outerCost￨3￨e )￨3￨e ;￨3￨e CostEstimate￨3￨e costEstimate￨3￨e =￨3￨e getCostEstimate￨3￨e (￨3￨e optimizer￨3￨e )￨3￨e ;￨3￨e costEstimate￨3￨e .￨3￨e setCost￨3￨e (￨3￨e leftResultSet￨3￨e .￨3￨e getCostEstimate￨3￨e (￨3￨e )￨3￨e .￨3￨e getEstimatedCost￨3￨e (￨3￨e )￨3￨e ,￨3￨e leftResultSet￨3￨e .￨3￨e getCostEstimate￨3￨e (￨3￨e )￨3￨e .￨3￨e rowCount￨3￨e (￨3￨e )￨3￨e ,￨3￨e (￨3￨e (￨3￨e leftResultSet￨3￨e .￨3￨e getCostEstimate￨3￨e (￨3￨e )￨3￨e .￨3￨e singleScanRowCount￨3￨e (￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e rightResultSet￨3￨e .￨3￨e getCostEstimate￨3￨e (￨3￨e )￨3￨e .￨3￨e singleScanRowCount￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e costEstimate￨3￨e .￨3￨e add￨3￨e (￨3￨e costEstimate￨3￨e ,￨3￨e costEstimate￨3￨e )￨3￨e ;￨3￨e getCurrentAccessPath￨3￨e (￨3￨e )￨3￨e .￨3￨e getJoinStrategy￨3￨e (￨3￨e )￨3￨e .￨3￨e estimateCost￨3￨e (￨3￨e this￨3￨e ,￨3￨e predList￨3￨e ,￨3￨e (￨3￨e (￨3￨e ConglomerateDescriptor￨3￨e )￨3￨e (￨3￨e null￨3￨e )￨3￨e )￨3￨e ,￨3￨e outerCost￨3￨e ,￨3￨e optimizer￨3￨e ,￨3￨e costEstimate￨3￨e )￨3￨e ;￨3￨e optimizer￨3￨e .￨3￨e considerCost￨3￨e (￨3￨e this￨3￨e ,￨3￨e predList￨3￨e ,￨3￨e costEstimate￨3￨e ,￨3￨e outerCost￨3￨e )￨3￨e ;￨3￨e return￨3￨e costEstimate￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f pushExpressions￨2￨f (￨2￨f PredicateList￨2￨f predicateList￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Optimizable￨2￨f modifyAccessPath￨2￨f (￨2￨f JBitSet￨2￨f outerTables￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResultSetNode￨2￨f modifyAccessPaths￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ResultSetNode￨2￨f addNewNodes￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bindExpressions￨2￨f (￨2￨f FromList￨2￨f fromListParam￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generate￨2￨f (￨2￨f ActivationClassBuilder￨2￨f acb￨2￨f ,￨2￨f MethodBuilder￨2￨f mb￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CostEstimate￨2￨f getFinalCostEstimate￨2￨f (￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getOperatorName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CassandraBulkLoader￨1￨d {￨1￨d public￨2￨d static￨2￨d class￨2￨d Map￨2￨d extends￨2￨d MapReduceBase￨2￨d implements￨2￨d Mapper￨2￨d <￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f map￨3￨f (￨3￨f Text￨3￨f key￨3￨f ,￨3￨f Text￨3￨f value￨3￨f ,￨3￨f OutputCollector￨3￨f <￨3￨f Text￨3￨f ,￨3￨f Text￨3￨f >￨3￨f output￨3￨f ,￨3￨f Reporter￨3￨f reporter￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d Reduce￨2￨d extends￨2￨d MapReduceBase￨2￨d implements￨2￨d Reducer￨2￨d <￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d ,￨2￨d Text￨2￨d >￨2￨d {￨2￨d private￨3￨e Path￨3￨e [￨3￨e ]￨3￨e localFiles￨3￨e ;￨3￨e private￨3￨e JobConf￨3￨e jobconf￨3￨e ;￨3￨e public￨3￨f void￨3￨f configure￨3￨f (￨3￨f JobConf￨4￨p job￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f close￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f reduce￨3￨f (￨3￨f Text￨3￨f key￨3￨f ,￨3￨f Iterator￨3￨f <￨3￨f Text￨3￨f >￨3￨f values￨3￨f ,￨3￨f OutputCollector￨3￨f <￨3￨f Text￨3￨f ,￨3￨f Text￨3￨f >￨3￨f output￨3￨f ,￨3￨f Reporter￨3￨f reporter￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f static￨2￨f void￨2￨f runJob￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Message￨2￨f createMessage￨2￨f (￨2￨f String￨3￨p keyspace￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p key￨3￨p ,￨3￨p String￨3￨p columnFamily￨3￨p ,￨3￨p List￨3￨p <￨3￨p ColumnFamily￨3￨p >￨3￨p columnFamilies￨3￨p )￨2￨f {￨2￨f ColumnFamily￨3￨e baseColumnFamily￨3￨e ;￨3￨e DataOutputBuffer￨3￨e bufOut￨3￨e =￨3￨e new￨3￨e DataOutputBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e RowMutation￨3￨e rm￨3￨e ;￨3￨e Message￨3￨e message￨3￨e ;￨3￨e Column￨3￨e column￨3￨e ;￨3￨e baseColumnFamily￨3￨e =￨3￨e new￨3￨e ColumnFamily￨3￨e (￨3￨e ColumnFamilyType￨3￨e .￨3￨e Standard￨3￨e ,￨3￨e DatabaseDescriptor￨3￨e .￨3￨e getComparator￨3￨e (￨3￨e keyspace￨3￨e ,￨3￨e columnFamily￨3￨e )￨3￨e ,￨3￨e DatabaseDescriptor￨3￨e .￨3￨e getSubComparator￨3￨e (￨3￨e keyspace￨3￨e ,￨3￨e columnFamily￨3￨e )￨3￨e ,￨3￨e CFMetaData￨3￨e .￨3￨e getId￨3￨e (￨3￨e keyspace￨3￨e ,￨3￨e columnFamily￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l ColumnFamily￨4￨c cf￨4￨c :￨4￨c columnFamilies￨4￨c )￨3￨l {￨3￨l bufOut￨4￨e .￨4￨e reset￨4￨e (￨4￨e )￨4￨e ;￨4￨e ColumnFamily￨4￨e .￨4￨e serializer￨4￨e (￨4￨e )￨4￨e .￨4￨e serializeWithIndexes￨4￨e (￨4￨e cf￨4￨e ,￨4￨e bufOut￨4￨e )￨4￨e ;￨4￨e byte￨4￨e [￨4￨e ]￨4￨e data￨4￨e =￨4￨e new￨4￨e byte￨4￨e [￨4￨e bufOut￨4￨e .￨4￨e getLength￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e System￨4￨e .￨4￨e arraycopy￨4￨e (￨4￨e bufOut￨4￨e .￨4￨e getData￨4￨e (￨4￨e )￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e data￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e bufOut￨4￨e .￨4￨e getLength￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e column￨4￨e =￨4￨e new￨4￨e Column￨4￨e (￨4￨e FBUtilities￨4￨e .￨4￨e toByteBuffer￨4￨e (￨4￨e cf￨4￨e .￨4￨e id￨4￨e (￨4￨e )￨4￨e )￨4￨e ,￨4￨e ByteBuffer￨4￨e .￨4￨e wrap￨4￨e (￨4￨e data￨4￨e )￨4￨e ,￨4￨e 0￨4￨e )￨4￨e ;￨4￨e baseColumnFamily￨4￨e .￨4￨e addColumn￨4￨e (￨4￨e column￨4￨e )￨4￨e ;￨4￨e }￨3￨l rm￨3￨e =￨3￨e new￨3￨e RowMutation￨3￨e (￨3￨e keyspace￨3￨e ,￨3￨e ByteBuffer￨3￨e .￨3￨e wrap￨3￨e (￨3￨e key￨3￨e )￨3￨e )￨3￨e ;￨3￨e rm￨3￨e .￨3￨e add￨3￨e (￨3￨e baseColumnFamily￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b message￨4￨b =￨4￨b rm￨4￨b .￨4￨b makeRowMutationMessage￨4￨b (￨4￨b BINARY￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e message￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d War￨1￨d extends￨1￨d Jar￨1￨d {￨1￨d private￨2￨e File￨2￨e deploymentDescriptor￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e descriptorAdded￨2￨e ;￨2￨e public￨2￨f War￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWarfile￨2￨f (￨2￨f File￨3￨p warFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWebxml￨2￨f (￨2￨f File￨3￨p descr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addLib￨2￨f (￨2￨f ZipFileSet￨3￨p fs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addClasses￨2￨f (￨2￨f ZipFileSet￨3￨p fs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addWebinf￨2￨f (￨2￨f ZipFileSet￨3￨p fs￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initZipOutputStream￨2￨f (￨2￨f ZipOutputStream￨2￨f zOut￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c (￨4￨c deploymentDescriptor￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c isInUpdateMode￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b BuildException￨4￨b (￨4￨b "webxml<seq2seq4repair_space>attribute<seq2seq4repair_space>is<seq2seq4repair_space>required"￨4￨b ,￨4￨b location￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j super￨3￨e .￨3￨e initZipOutputStream￨3￨e (￨3￨e zOut￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f zipFile￨2￨f (￨2￨f File￨2￨f file￨2￨f ,￨2￨f ZipOutputStream￨2￨f zOut￨2￨f ,￨2￨f String￨2￨f vPath￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MethodRef￨1￨d extends￨1￨d ASTNode￨1￨d implements￨1￨d IDocElement￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d QUALIFIER_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d MethodRef￨2￨d .￨2￨d class￨2￨d ,￨2￨d "qualifier"￨2￨d ,￨2￨d Name￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d OPTIONAL￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d NAME_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d MethodRef￨2￨d .￨2￨d class￨2￨d ,￨2￨d "name"￨2￨d ,￨2￨d SimpleName￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildListPropertyDescriptor￨2￨d PARAMETERS_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildListPropertyDescriptor￨2￨d (￨2￨d MethodRef￨2￨d .￨2￨d class￨2￨d ,￨2￨d "parameters"￨2￨d ,￨2￨d MethodRefParameter￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e Name￨2￨e optionalQualifier￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e SimpleName￨2￨e methodName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ASTNode￨2￨e .￨2￨e NodeList￨2￨e parameters￨2￨e =￨2￨e new￨2￨e ASTNode￨2￨e .￨2￨e NodeList￨2￨e (￨2￨e MethodRef￨2￨e .￨2￨e PARAMETERS_PROPERTY￨2￨e )￨2￨e ;￨2￨e MethodRef￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalGetChildListProperty￨2￨f (￨2￨f ChildListPropertyDescriptor￨3￨p property￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f MethodRef￨3￨e result￨3￨e =￨3￨e new￨3￨e MethodRef￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setSourceRange￨3￨b (￨3￨b this￨3￨b .￨3￨b getStartPosition￨3￨b (￨3￨b )￨3￨b ,￨3￨b this￨3￨b .￨3￨b getLength￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e setQualifier￨3￨e (￨3￨e (￨3￨e (￨3￨e Name￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getQualifier￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setName￨3￨e (￨3￨e (￨3￨e (￨3￨e SimpleName￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e parameters￨3￨e (￨3￨e )￨3￨e .￨3￨e addAll￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtrees￨3￨e (￨3￨e target￨3￨e ,￨3￨e parameters￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Name￨2￨f getQualifier￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setQualifier￨2￨f (￨2￨f Name￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SimpleName￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setName￨2￨f (￨2￨f SimpleName￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f parameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IBinding￨2￨f resolveBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PluginLoader￨1￨d {￨1￨d public￨2￨f PluginLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f loadExternalPlugin￨2￨f (￨2￨f String￨2￨f className￨2￨f ,￨2￨f String￨2￨f type￨2￨f ,￨2￨f File￨2￨f file￨2￨f ,￨2￨f Object￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f log￨3￨e .￨3￨e debug￨3￨e (￨3￨e "loading.."￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c type￨4￨c .￨4￨c equals￨4￨c (￨4￨c "java"￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c type￨4￨c .￨4￨c equals￨4￨c (￨4￨c "jar"￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j String￨4￨e path￨4￨e =￨4￨e file￨4￨e .￨4￨e getPath￨4￨e (￨4￨e )￨4￨e ;￨4￨e URL￨4￨e [￨4￨e ]￨4￨e url￨4￨e =￨4￨e new￨4￨e URL￨4￨e [￨4￨e 1￨4￨e ]￨4￨e ;￨4￨e URL￨4￨e newURL￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e path￨4￨e )￨4￨e .￨4￨e toURL￨4￨e (￨4￨e )￨4￨e ;￨4￨e url￨4￨e [￨4￨e 0￨4￨e ]￨4￨e =￨4￨e newURL￨4￨e ;￨4￨e log￨4￨e .￨4￨e debug￨4￨e (￨4￨e (￨4￨e "url="￨4￨e +￨4￨e newURL￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e new￨4￨e ExternalClassLoader￨4￨e (￨4￨e url￨4￨e )￨4￨e .￨4￨e instanciate￨4￨e (￨4￨e className￨4￨e ,￨4￨e args￨4￨e )￨4￨e ;￨4￨e }￨3￨j InterpreterHandler￨3￨e handler￨3￨e =￨3￨e (￨3￨e (￨3￨e InterpreterHandler￨3￨e )￨3￨e (￨3￨e pluginManager￨3￨e .￨3￨e getHandler￨3￨e (￨3￨e "interpreter"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Object￨3￨b instance￨3￨b =￨3￨b handler￨3￨b .￨3￨b getPlugin￨3￨b (￨3￨b type￨3￨b ,￨3￨b "org.columba.core.scripting.PythonInterpreterPlugin"￨3￨b ,￨3￨b null￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j instance￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j AbstractInterpreter￨4￨e ip￨4￨e =￨4￨e (￨4￨e (￨4￨e AbstractInterpreter￨4￨e )￨4￨e (￨4￨e instance￨4￨e )￨4￨e )￨4￨e ;￨4￨e String￨4￨e pythonFile￨4￨e =￨4￨e (￨4￨e (￨4￨e file￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e "/"￨4￨e )￨4￨e +￨4￨e (￨4￨e className￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e String￨4￨e pythonClass￨4￨e =￨4￨e className￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e .￨4￨e substring￨4￨e (￨4￨e 0￨4￨e ,￨4￨e (￨4￨e (￨4￨e className￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e .￨4￨e length￨4￨e (￨4￨e )￨4￨e )￨4￨e -￨4￨e 3￨4￨e )￨4￨e )￨4￨e ;￨4￨e Object￨4￨e i￨4￨e =￨4￨e ip￨4￨e .￨4￨e instanciate￨4￨e (￨4￨e pythonFile￨4￨e ,￨4￨e pythonClass￨4￨e ,￨4￨e args￨4￨e ,￨4￨e "test"￨4￨e )￨4￨e ;￨4￨e return￨4￨e i￨4￨e ;￨4￨e }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PromptPasswordState￨1￨d implements￨1￨d State￨1￨d {￨1￨d private￨2￨e final￨2￨e ConsoleWrapper￨2￨e theConsole￨2￨e ;￨2￨e private￨2￨e final￨2￨e StateValues￨2￨e stateValues￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e rePrompt￨2￨e ;￨2￨e public￨2￨f PromptPasswordState￨2￨f (￨2￨f ConsoleWrapper￨3￨p theConsole￨3￨p ,￨3￨p StateValues￨3￨p stateValues￨3￨p ,￨3￨p boolean￨3￨p rePrompt￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f State￨2￨f execute￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c stateValues￨4￨c .￨4￨c isSilentOrNonInteractive￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c rePrompt￨5￨c )￨5￨c ==￨5￨c false￨5￨c )￨4￨j {￨4￨j RestrictionLevel￨5￨e level￨5￨e =￨5￨e stateValues￨5￨e .￨5￨e getOptions￨5￨e (￨5￨e )￨5￨e .￨5￨e getCheckUtil￨5￨e (￨5￨e )￨5￨e .￨5￨e getRestrictionLevel￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j !￨6￨c (￨6￨c RELAX￨6￨c .￨6￨c equals￨6￨c (￨6￨c level￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j final￨6￨e List￨6￨e <￨6￨e PasswordRestriction￨6￨e >￨6￨e passwordRestrictions￨6￨e =￨6￨e stateValues￨6￨e .￨6￨e getOptions￨6￨e (￨6￨e )￨6￨e .￨6￨e getCheckUtil￨6￨e (￨6￨e )￨6￨e .￨6￨e getPasswordRestrictions￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c passwordRestrictions￨7￨c .￨7￨c size￨7￨c (￨7￨c )￨7￨c )￨7￨c >￨7￨c 0￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j level￨8￨c ==￨8￨c (￨8￨c RestrictionLevel￨8￨c .￨8￨c REJECT￨8￨c )￨8￨c )￨7￨j {￨7￨j theConsole￨8￨e .￨8￨e printf￨8￨e (￨8￨e ROOT_LOGGER￨8￨e .￨8￨e passwordRequirements￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j {￨7￨j theConsole￨8￨e .￨8￨e printf￨8￨e (￨8￨e ROOT_LOGGER￨8￨e .￨8￨e passwordRecommendations￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨j theConsole￨7￨e .￨7￨e printf￨7￨e (￨7￨e AddUser￨7￨e .￨7￨e NEW_LINE￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l PasswordRestriction￨8￨c passwordRestriction￨8￨c :￨8￨c passwordRestrictions￨8￨c )￨7￨l {￨7￨l final￨8￨e String￨8￨e message￨8￨e =￨8￨e passwordRestriction￨8￨e .￨8￨e getRequirementMessage￨8￨e (￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c message￨9￨c !=￨9￨c null￨9￨c )￨9￨c &&￨9￨c (￨9￨c !￨9￨c (￨9￨c message￨9￨c .￨9￨c isEmpty￨9￨c (￨9￨c )￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j theConsole￨9￨e .￨9￨e printf￨9￨e (￨9￨e "<seq2seq4repair_space>-<seq2seq4repair_space>"￨9￨e )￨9￨e ;￨9￨e theConsole￨9￨e .￨9￨e printf￨9￨e (￨9￨e message￨9￨e )￨9￨e ;￨9￨e theConsole￨9￨e .￨9￨e printf￨9￨e (￨9￨e AddUser￨9￨e .￨9￨e NEW_LINE￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨l }￨6￨j }￨5￨j theConsole￨5￨e .￨5￨e printf￨5￨e (￨5￨e ROOT_LOGGER￨5￨e .￨5￨e passwordPrompt￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e char￨5￨e [￨5￨e ]￨5￨e tempChar￨5￨e =￨5￨e theConsole￨5￨e .￨5￨e readPassword￨5￨e (￨5￨e "<seq2seq4repair_space>:<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c tempChar￨6￨c ==￨6￨c null￨6￨c )￨6￨c ||￨6￨c (￨6￨c (￨6￨c tempChar￨6￨c .￨6￨c length￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b return￨6￨b new￨6￨b ErrorState￨6￨b (￨6￨b theConsole￨6￨b ,￨6￨b ROOT_LOGGER￨6￨b .￨6￨b noPasswordExiting￨6￨b (￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j stateValues￨5￨e .￨5￨e setPassword￨5￨e (￨5￨e new￨5￨e String￨5￨e (￨5￨e tempChar￨5￨e )￨5￨e )￨5￨e ;￨5￨e return￨5￨e new￨5￨e ValidatePasswordState￨5￨e (￨5￨e theConsole￨5￨e ,￨5￨e stateValues￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j theConsole￨5￨e .￨5￨e printf￨5￨e (￨5￨e ROOT_LOGGER￨5￨e .￨5￨e passwordConfirmationPrompt￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e char￨5￨e [￨5￨e ]￨5￨e secondTempChar￨5￨e =￨5￨e theConsole￨5￨e .￨5￨e readPassword￨5￨e (￨5￨e "<seq2seq4repair_space>:<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j secondTempChar￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j secondTempChar￨6￨e =￨6￨e new￨6￨e char￨6￨e [￨6￨e 0￨6￨e ]￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c Arrays￨6￨c .￨6￨c equals￨6￨c (￨6￨c stateValues￨6￨c .￨6￨c getPassword￨6￨c (￨6￨c )￨6￨c .￨6￨c toCharArray￨6￨c (￨6￨c )￨6￨c ,￨6￨c secondTempChar￨6￨c )￨6￨c )￨6￨c ==￨6￨c false￨6￨c )￨5￨j {￨5￨j return￨6￨e new￨6￨e ErrorState￨6￨e (￨6￨e theConsole￨6￨e ,￨6￨e ROOT_LOGGER￨6￨e .￨6￨e passwordMisMatch￨6￨e (￨6￨e )￨6￨e ,￨6￨e new￨6￨e PromptPasswordState￨6￨e (￨6￨e theConsole￨6￨e ,￨6￨e stateValues￨6￨e ,￨6￨e false￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j return￨5￨e stateValues￨5￨e .￨5￨e groupPropertiesFound￨5￨e (￨5￨e )￨5￨e ?￨5￨e new￨5￨e PromptGroupsState￨5￨e (￨5￨e theConsole￨5￨e ,￨5￨e stateValues￨5￨e )￨5￨e :￨5￨e new￨5￨e PreModificationState￨5￨e (￨5￨e theConsole￨5￨e ,￨5￨e stateValues￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e new￨3￨e ValidatePasswordState￨3￨e (￨3￨e theConsole￨3￨e ,￨3￨e stateValues￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Touch￨1￨d extends￨1￨d Task￨1￨d {￨1￨d private￨2￨f interface￨2￨f DateFormatFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f DateFormat￨3￨f getPrimaryFormat￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f DateFormat￨3￨f getFallbackFormat￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f Touch￨2￨f .￨2￨f DateFormatFactory￨2￨f DEFAULT_DF_FACTORY￨2￨f =￨2￨f new￨2￨f Touch￨2￨f .￨2￨f DateFormatFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f DateFormat￨3￨f getPrimaryFormat￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f DateFormat￨3￨f getFallbackFormat￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e static￨2￨e final￨2￨e FileUtils￨2￨e FILE_UTILS￨2￨e =￨2￨e FileUtils￨2￨e .￨2￨e getFileUtils￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e File￨2￨e file￨2￨e ;￨2￨e private￨2￨e long￨2￨e millis￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e String￨2￨e dateTime￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e filesets￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Union￨2￨e resources￨2￨e =￨2￨e new￨2￨e Union￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e dateTimeConfigured￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e mkdirs￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e verbose￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e FileNameMapper￨2￨e fileNameMapper￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Touch￨2￨e .￨2￨e DateFormatFactory￨2￨e dfFactory￨2￨e =￨2￨e Touch￨2￨e .￨2￨e DEFAULT_DF_FACTORY￨2￨e ;￨2￨e public￨2￨f Touch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMillis￨2￨f (￨2￨f long￨3￨p millis￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDatetime￨2￨f (￨2￨f String￨3￨p dateTime￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMkdirs￨2￨f (￨2￨f boolean￨3￨p mkdirs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVerbose￨2￨f (￨2￨f boolean￨3￨p verbose￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPattern￨2￨f (￨2￨f final￨3￨p String￨3￨p pattern￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConfiguredMapper￨2￨f (￨2￨f Mapper￨3￨p mapper￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f FileNameMapper￨2￨f fileNameMapper￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFileset￨2￨f (￨2￨f FileSet￨3￨p set￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFilelist￨2￨f (￨2￨f FileList￨3￨p list￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f ResourceCollection￨3￨p rc￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f synchronized￨2￨f void￨2￨f checkConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f touch￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f touch￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f getTimestamp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f touch￨2￨f (￨2￨f Resource￨3￨p r￨3￨p ,￨3￨p long￨3￨p defaultTimestamp￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c fileNameMapper￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j r￨5￨c instanceof￨5￨c FileResource￨5￨c )￨4￨j {￨4￨j touch￨5￨e (￨5￨e (￨5￨e (￨5￨e FileResource￨5￨e )￨5￨e (￨5￨e r￨5￨e )￨5￨e )￨5￨e .￨5￨e getFile￨5￨e (￨5￨e )￨5￨e ,￨5￨e defaultTimestamp￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j (￨5￨e (￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e tools￨5￨e .￨5￨e ant￨5￨e .￨5￨e types￨5￨e .￨5￨e resources￨5￨e .￨5￨e Touchable￨5￨e )￨5￨e (￨5￨e r￨5￨e )￨5￨e )￨5￨e .￨5￨e touch￨5￨e (￨5￨e defaultTimestamp￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j String￨4￨e [￨4￨e ]￨4￨e mapped￨4￨e =￨4￨e fileNameMapper￨4￨e .￨4￨e mapFileName￨4￨e (￨4￨e r￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c mapped￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c mapped￨5￨c .￨5￨c length￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨5￨c )￨4￨j {￨4￨j long￨5￨e modTime￨5￨e =￨5￨e (￨5￨e r￨5￨e .￨5￨e isExists￨5￨e (￨5￨e )￨5￨e )￨5￨e ?￨5￨e r￨5￨e .￨5￨e getLastModified￨5￨e (￨5￨e )￨5￨e :￨5￨e defaultTimestamp￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c mapped￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b touch￨6￨b (￨6￨b getProject￨6￨b (￨6￨b )￨6￨b .￨6￨b resolveFile￨6￨b (￨6￨b mapped￨6￨b [￨6￨b i￨6￨b ]￨6￨b )￨6￨b ,￨6￨b modTime￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨l }￨4￨j }￨3￨j }￨2￨f private￨2￨f void￨2￨f touch￨2￨f (￨2￨f File￨3￨p file￨3￨p ,￨3￨p long￨3￨p modTime￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Server￨1￨d {￨1￨d private￨2￨e final￨2￨e ServerCommunicationHandler￨2￨e communicationHandler￨2￨e ;￨2￨e public￨2￨f Server￨2￨f (￨2￨f ServerCommunicationHandler￨3￨p communicationHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f Standalone￨2￨f serverConf￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f sendCommand￨2￨f (￨2￨f ServerManagerProtocolCommand￨2￨f command￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f sendCommand￨2￨f (￨2￨f ServerManagerProtocolCommand￨2￨f command￨2￨f ,￨2￨f Object￨2￨f o￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f byte￨3￨e [￨3￨e ]￨3￨e cmd￨3￨e =￨3￨e ServerManagerProtocolUtils￨3￨e .￨3￨e createCommandBytes￨3￨e (￨3￨e command￨3￨e ,￨3￨e o￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b communicationHandler￨3￨b .￨3￨b sendMessage￨3￨b (￨3￨b cmd￨3￨b ,￨3￨b StreamUtils￨3￨b .￨3￨b calculateChecksum￨3￨b (￨3￨b cmd￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BeanShell￨1￨d extends￨1￨d AbstractFunction￨1￨d implements￨1￨d Serializable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e List￨2￨e desc￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e KEY￨2￨e =￨2￨e "__BeanShell"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e INIT_FILE￨2￨e =￨2￨e "beanshell.function.init"￨2￨e ;￨2￨e private￨2￨e transient￨2￨e Object￨2￨e [￨2￨e ]￨2￨e values￨2￨e ;￨2￨e private￨2￨e transient￨2￨e BeanShellInterpreter￨2￨e bshInterpreter￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f BeanShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f throws￨2￨f CloneNotSupportedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f String￨2￨f execute￨2￨f (￨2￨f SampleResult￨2￨f previousResult￨2￨f ,￨2￨f Sampler￨2￨f currentSampler￨2￨f )￨2￨f throws￨2￨f InvalidVariableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f log_info￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setParameters￨2￨f (￨2￨f Collection￨2￨f parameters￨2￨f )￨2￨f throws￨2￨f InvalidVariableException￨2￨f (￨2￨f )￨2￨f {￨2￨f values￨3￨e =￨3￨e parameters￨3￨e .￨3￨e toArray￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c values￨4￨c .￨4￨c length￨4￨c )￨4￨c <￨4￨c 1￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c values￨4￨c .￨4￨c length￨4￨c )￨4￨c >￨4￨c 2￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e InvalidVariableException￨4￨e (￨4￨e (￨4￨e "Expecting<seq2seq4repair_space>1<seq2seq4repair_space>or<seq2seq4repair_space>2<seq2seq4repair_space>parameters,<seq2seq4repair_space>but<seq2seq4repair_space>found<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e values￨4￨e .￨4￨e length￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b bshInterpreter￨4￨b =￨4￨b new￨4￨b BeanShellInterpreter￨4￨b (￨4￨b BeanShell￨4￨b .￨4￨b INIT_FILE￨4￨b ,￨4￨b BeanShell￨4￨b .￨4￨b log￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f ClassNotFoundException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e InvalidVariableException￨4￨e (￨4￨e "BeanShell<seq2seq4repair_space>not<seq2seq4repair_space>found"￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f String￨2￨f getReferenceKey￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getArgumentDesc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestPolishAnalyzer￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testResourcesAvailable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testBasics￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testExclude￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomStrings￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b new￨3￨b PolishAnalyzer￨3￨b (￨3￨b TEST_VERSION_CURRENT￨3￨b )￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SimpleName￨1￨d extends￨1￨d Name￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e MISSING_IDENTIFIER￨2￨e =￨2￨e "MISSING"￨2￨e ;￨2￨e private￨2￨e String￨2￨e identifier￨2￨e =￨2￨e SimpleName￨2￨e .￨2￨e MISSING_IDENTIFIER￨2￨e ;￨2￨e SimpleName￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f equalSubtrees￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getIdentifier￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIdentifier￨2￨f (￨2￨f String￨3￨p identifier￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j identifier￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b Scanner￨3￨b scanner￨3￨b =￨3￨b this￨3￨b .￨3￨b getAST￨3￨b (￨3￨b )￨3￨b .￨3￨b scanner￨3￨b ;￨3￨b <END_BUG>￨3￨b char￨3￨e [￨3￨e ]￨3￨e source￨3￨e =￨3￨e identifier￨3￨e .￨3￨e toCharArray￨3￨e (￨3￨e )￨3￨e ;￨3￨e scanner￨3￨e .￨3￨e setSourceBuffer￨3￨e (￨3￨e source￨3￨e )￨3￨e ;￨3￨e scanner￨3￨e .￨3￨e resetTo￨3￨e (￨3￨e 0￨3￨e ,￨3￨e source￨3￨e .￨3￨e length￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f int￨4￨e tokenType￨4￨e =￨4￨e scanner￨4￨e .￨4￨e getNextToken￨4￨e (￨4￨e )￨4￨e ;￨4￨e switch￨4￨s (￨4￨s tokenType￨4￨c )￨4￨s {￨4￨s case￨5￨c Scanner￨5￨c .￨5￨c TokenNameIdentifier￨5￨c :￨5￨c break￨6￨e ;￨6￨e default￨5￨c :￨5￨c throw￨6￨e new￨6￨e IllegalArgumentException￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨4￨s }￨3￨f catch￨3￨f (￨3￨f InvalidInputException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f modifying￨3￨e (￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e identifier￨3￨e =￨3￨e identifier￨3￨e ;￨3￨e }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TableItem￨1￨d extends￨1￨d Item￨1￨d {￨1￨d Table￨2￨e parent￨2￨e ;￨2￨e String￨2￨e [￨2￨e ]￨2￨e strings￨2￨e ;￨2￨e Image￨2￨e [￨2￨e ]￨2￨e images￨2￨e ;￨2￨e boolean￨2￨e checked￨2￨e ;￨2￨e boolean￨2￨e grayed￨2￨e ;￨2￨e boolean￨2￨e cached￨2￨e ;￨2￨e Color￨2￨e foreground￨2￨e ;￨2￨e Color￨2￨e background￨2￨e ;￨2￨e Color￨2￨e [￨2￨e ]￨2￨e cellForeground￨2￨e ;￨2￨e Color￨2￨e [￨2￨e ]￨2￨e cellBackground￨2￨e ;￨2￨e Font￨2￨e font￨2￨e ;￨2￨e Font￨2￨e [￨2￨e ]￨2￨e cellFont￨2￨e ;￨2￨e int￨2￨e width￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f TableItem￨2￨f (￨2￨f Table￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TableItem￨2￨f (￨2￨f Table￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f TableItem￨2￨f (￨2￨f Table￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p boolean￨3￨p create￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Table￨2￨f checkNull￨2￨f (￨2￨f Table￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f calculateWidth￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p GC￨3￨p gc￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getBackground￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getChecked￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Font￨2￨f getFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Font￨2￨f getFont￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Color￨2￨f getForeground￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getGrayed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Image￨2￨f getImage￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getImageBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getImageIndent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getNameText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Table￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getTextBounds￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f redraw￨2￨f (￨2￨f int￨3￨p propertyID￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c parent￨4￨c .￨4￨c currentItem￨4￨c )￨4￨c ==￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b parent￨3￨b .￨3￨b drawCount￨3￨b )￨3￨b !=￨3￨b 0￨3￨b )￨3￨b &&￨3￨b (￨3￨b propertyID￨3￨b !=￨3￨b (￨3￨b Table￨3￨b .￨3￨b CHECK_COLUMN_ID￨3￨b )￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e int￨3￨e itemIndex￨3￨e =￨3￨e parent￨3￨e .￨3￨e indexOf￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j itemIndex￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j int￨3￨f [￨3￨f ]￨3￨f id￨3￨f =￨3￨f new￨3￨f int￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e OS￨3￨e .￨3￨e UpdateDataBrowserItems￨3￨e (￨3￨e parent￨3￨e .￨3￨e handle￨3￨e ,￨3￨e kDataBrowserNoItem￨3￨e ,￨3￨e id￨3￨e .￨3￨e length￨3￨e ,￨3￨e id￨3￨e ,￨3￨e kDataBrowserItemNoProperty￨3￨e ,￨3￨e propertyID￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j propertyID￨4￨c ==￨4￨c (￨4￨c Table￨4￨c .￨4￨c CHECK_COLUMN_ID￨4￨c )￨4￨c )￨3￨j {￨3￨j Rect￨4￨e rect￨4￨e =￨4￨e new￨4￨e Rect￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c OS￨5￨c .￨5￨c GetDataBrowserItemPartBounds￨5￨c (￨5￨c parent￨5￨c .￨5￨c handle￨5￨c ,￨5￨c parent￨5￨c .￨5￨c getId￨5￨c (￨5￨c itemIndex￨5￨c )￨5￨c ,￨5￨c propertyID￨5￨c ,￨5￨c kDataBrowserPropertyEnclosingPart￨5￨c ,￨5￨c rect￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c OS￨5￨c .￨5￨c noErr￨5￨c )￨5￨c )￨4￨j {￨4￨j int￨5￨e x￨5￨e =￨5￨e rect￨5￨e .￨5￨e left￨5￨e ;￨5￨e int￨5￨e y￨5￨e =￨5￨e (￨5￨e rect￨5￨e .￨5￨e top￨5￨e )￨5￨e -￨5￨e 1￨5￨e ;￨5￨e int￨5￨e width￨5￨e =￨5￨e (￨5￨e rect￨5￨e .￨5￨e right￨5￨e )￨5￨e -￨5￨e (￨5￨e rect￨5￨e .￨5￨e left￨5￨e )￨5￨e ;￨5￨e int￨5￨e height￨5￨e =￨5￨e 1￨5￨e ;￨5￨e redrawWidget￨5￨e (￨5￨e parent￨5￨e .￨5￨e handle￨5￨e ,￨5￨e x￨5￨e ,￨5￨e y￨5￨e ,￨5￨e width￨5￨e ,￨5￨e height￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setChecked￨2￨f (￨2￨f boolean￨3￨p checked￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setChecked￨2￨f (￨2￨f boolean￨3￨p checked￨3￨p ,￨3￨p boolean￨3￨p notify￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setGrayed￨2￨f (￨2￨f boolean￨3￨p grayed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p [￨3￨p ]￨3￨p images￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImageIndent￨2￨f (￨2￨f int￨3￨p indent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p strings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DomainRolloutStepHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d private￨2￨e final￨2￨e DomainOperationContext￨2￨e domainOperationContext￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e ProxyController￨2￨e >￨2￨e hostProxies￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e ProxyController￨2￨e >￨2￨e serverProxies￨2￨e ;￨2￨e private￨2￨e final￨2￨e ExecutorService￨2￨e executorService￨2￨e ;￨2￨e private￨2￨e final￨2￨e ModelNode￨2￨e providedRolloutPlan￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e trace￨2￨e =￨2￨e DomainControllerLogger￨2￨e .￨2￨e HOST_CONTROLLER_LOGGER￨2￨e .￨2￨e isTraceEnabled￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f DomainRolloutStepHandler￨2￨f (￨2￨f final￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p ProxyController￨3￨p >￨3￨p hostProxies￨3￨p ,￨3￨p final￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p ProxyController￨3￨p >￨3￨p serverProxies￨3￨p ,￨3￨p final￨3￨p DomainOperationContext￨3￨p domainOperationContext￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p rolloutPlan￨3￨p ,￨3￨p final￨3￨p ExecutorService￨3￨p executorService￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j context￨4￨c .￨4￨c hasFailureDescription￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e setRollbackOnly￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b context￨4￨b .￨4￨b completeStep￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e ;￨4￨e }￨3￨j boolean￨3￨e pushToServers￨3￨e =￨3￨e !￨3￨e (￨3￨e domainOperationContext￨3￨e .￨3￨e hasHostLevelFailures￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j pushToServers￨4￨c )￨3￨j {￨3￨j ModelNode￨4￨e ourResult￨4￨e =￨4￨e domainOperationContext￨4￨e .￨4￨e getCoordinatorResult￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j ourResult￨5￨c .￨5￨c has￨5￨c (￨5￨c FAILURE_DESCRIPTION￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j trace￨6￨c )￨5￨j {￨5￨j DomainControllerLogger￨6￨e .￨6￨e HOST_CONTROLLER_LOGGER￨6￨e .￨6￨e tracef￨6￨e (￨6￨e "coordinator<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨6￨e ,￨6￨e ourResult￨6￨e )￨6￨e ;￨6￨e }￨5￨j pushToServers￨5￨e =￨5￨e false￨5￨e ;￨5￨e domainOperationContext￨5￨e .￨5￨e setCompleteRollback￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j trace￨6￨c )￨5￨j {￨5￨j DomainControllerLogger￨6￨e .￨6￨e HOST_CONTROLLER_LOGGER￨6￨e .￨6￨e tracef￨6￨e (￨6￨e "coordinator<seq2seq4repair_space>succeeded:<seq2seq4repair_space>%s"￨6￨e ,￨6￨e ourResult￨6￨e )￨6￨e ;￨6￨e }￨5￨j for￨5￨l (￨5￨l ModelNode￨6￨c hostResult￨6￨c :￨6￨c domainOperationContext￨6￨c .￨6￨c getHostControllerResults￨6￨c (￨6￨c )￨6￨c .￨6￨c values￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j hostResult￨7￨c .￨7￨c has￨7￨c (￨7￨c FAILURE_DESCRIPTION￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j trace￨8￨c )￨7￨j {￨7￨j DomainControllerLogger￨8￨e .￨8￨e HOST_CONTROLLER_LOGGER￨8￨e .￨8￨e tracef￨8￨e (￨8￨e "host<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨8￨e ,￨8￨e hostResult￨8￨e )￨8￨e ;￨8￨e }￨7￨j pushToServers￨7￨e =￨7￨e false￨7￨e ;￨7￨e domainOperationContext￨7￨e .￨7￨e setCompleteRollback￨7￨e (￨7￨e true￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e }￨6￨j }￨5￨l }￨4￨j }￨3￨j if￨3￨j (￨3￨j pushToServers￨4￨c )￨3￨j {￨3￨j domainOperationContext￨4￨e .￨4￨e setCompleteRollback￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e final￨4￨e Map￨4￨e <￨4￨e ServerIdentity￨4￨e ,￨4￨e ServerTaskExecutor￨4￨e .￨4￨e ExecutedServerRequest￨4￨e >￨4￨e submittedTasks￨4￨e =￨4￨e new￨4￨e HashMap￨4￨e <￨4￨e ServerIdentity￨4￨e ,￨4￨e ServerTaskExecutor￨4￨e .￨4￨e ExecutedServerRequest￨4￨e >￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e List￨4￨e <￨4￨e ServerTaskExecutor￨4￨e .￨4￨e ServerPreparedResponse￨4￨e >￨4￨e preparedResults￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e <￨4￨e ServerTaskExecutor￨4￨e .￨4￨e ServerPreparedResponse￨4￨e >￨4￨e (￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f pushToServers￨5￨e (￨5￨e context￨5￨e ,￨5￨e submittedTasks￨5￨e ,￨5￨e preparedResults￨5￨e )￨5￨e ;￨5￨e context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f boolean￨5￨e completeRollback￨5￨e =￨5￨e domainOperationContext￨5￨e .￨5￨e isCompleteRollback￨5￨e (￨5￨e )￨5￨e ;￨5￨e final￨5￨e String￨5￨e localHostName￨5￨e =￨5￨e domainOperationContext￨5￨e .￨5￨e getLocalHostInfo￨5￨e (￨5￨e )￨5￨e .￨5￨e getLocalHostName￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l final￨6￨c ServerTaskExecutor￨6￨c .￨6￨c ServerPreparedResponse￨6￨c preparedResult￨6￨c :￨6￨c preparedResults￨6￨c )￨5￨l {￨5￨l boolean￨6￨e rollback￨6￨e =￨6￨e completeRollback￨6￨e ||￨6￨e (￨6￨e domainOperationContext￨6￨e .￨6￨e isServerGroupRollback￨6￨e (￨6￨e preparedResult￨6￨e .￨6￨e getServerGroupName￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j !￨7￨c (￨7￨c preparedResult￨7￨c .￨7￨c finalizeTransaction￨7￨c (￨7￨c (￨7￨c !￨7￨c rollback￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j final￨7￨e ServerIdentity￨7￨e identity￨7￨e =￨7￨e preparedResult￨7￨e .￨7￨e getServerIdentity￨7￨e (￨7￨e )￨7￨e ;￨7￨e try￨7￨f (￨7￨f )￨7￨f {￨7￨f final￨8￨e ModelNode￨8￨e result￨8￨e =￨8￨e preparedResult￨8￨e .￨8￨e getPreparedOperation￨8￨e (￨8￨e )￨8￨e .￨8￨e getPreparedResult￨8￨e (￨8￨e )￨8￨e ;￨8￨e ProxyController￨8￨e proxy￨8￨e =￨8￨e hostProxies￨8￨e .￨8￨e get￨8￨e (￨8￨e identity￨8￨e .￨8￨e getHostName￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j proxy￨9￨c ==￨9￨c null￨9￨c )￨8￨j {￨8￨j if￨9￨j (￨9￨j localHostName￨10￨c .￨10￨c equals￨10￨c (￨10￨c identity￨10￨c .￨10￨c getHostName￨10￨c (￨10￨c )￨10￨c )￨10￨c )￨9￨j {￨9￨j proxy￨10￨e =￨10￨e serverProxies￨10￨e .￨10￨e get￨10￨e (￨10￨e identity￨10￨e .￨10￨e getServerName￨10￨e (￨10￨e )￨10￨e )￨10￨e ;￨10￨e if￨10￨j (￨10￨j proxy￨11￨c ==￨11￨c null￨11￨c )￨10￨j {￨10￨j if￨11￨j (￨11￨j trace￨12￨c )￨11￨j {￨11￨j DomainControllerLogger￨12￨e .￨12￨e HOST_CONTROLLER_LOGGER￨12￨e .￨12￨e tracef￨12￨e (￨12￨e "No<seq2seq4repair_space>proxy<seq2seq4repair_space>for<seq2seq4repair_space>%s"￨12￨e ,￨12￨e identity￨12￨e )￨12￨e ;￨12￨e }￨11￨j continue￨11￨e ;￨11￨e }￨10￨j }￨9￨j }￨8￨j final￨8￨e Future￨8￨e <￨8￨e ModelNode￨8￨e >￨8￨e future￨8￨e =￨8￨e executorService￨8￨e .￨8￨e submit￨8￨e (￨8￨e new￨8￨e ServerRequireRestartTask￨8￨e (￨8￨e identity￨8￨e ,￨8￨e proxy￨8￨e ,￨8￨e result￨8￨e )￨8￨e )￨8￨e ;￨8￨e submittedTasks￨8￨e .￨8￨e put￨8￨e (￨8￨e identity￨8￨e ,￨8￨e new￨8￨e ServerTaskExecutor￨8￨e .￨8￨e ExecutedServerRequest￨8￨e (￨8￨e identity￨8￨e ,￨8￨e future￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨f catch￨7￨f (￨7￨f Exception￨8￨p ignore￨8￨p )￨7￨f {￨7￨f }￨7￨f }￨6￨j }￨5￨l boolean￨5￨e interrupted￨5￨e =￨5￨e false￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f for￨6￨l (￨6￨l Map￨7￨c .￨7￨c Entry￨7￨c <￨7￨c ServerIdentity￨7￨c ,￨7￨c ServerTaskExecutor￨7￨c .￨7￨c ExecutedServerRequest￨7￨c >￨7￨c entry￨7￨c :￨7￨c submittedTasks￨7￨c .￨7￨c entrySet￨7￨c (￨7￨c )￨7￨c )￨6￨l {￨6￨l final￨7￨e ServerTaskExecutor￨7￨e .￨7￨e ExecutedServerRequest￨7￨e request￨7￨e =￨7￨e entry￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e ;￨7￨e final￨7￨e Future￨7￨e <￨7￨e ModelNode￨7￨e >￨7￨e future￨7￨e =￨7￨e request￨7￨e .￨7￨e getFinalResult￨7￨e (￨7￨e )￨7￨e ;￨7￨e try￨7￨f (￨7￨f )￨7￨f {￨7￨f final￨8￨e ModelNode￨8￨e finalResult￨8￨e =￨8￨e (￨8￨e future￨8￨e .￨8￨e isCancelled￨8￨e (￨8￨e )￨8￨e )￨8￨e ?￨8￨e getCancelledResult￨8￨e (￨8￨e )￨8￨e :￨8￨e future￨8￨e .￨8￨e get￨8￨e (￨8￨e )￨8￨e ;￨8￨e final￨8￨e ModelNode￨8￨e transformedResult￨8￨e =￨8￨e request￨8￨e .￨8￨e transformResult￨8￨e (￨8￨e finalResult￨8￨e )￨8￨e ;￨8￨e domainOperationContext￨8￨e .￨8￨e addServerResult￨8￨e (￨8￨e entry￨8￨e .￨8￨e getKey￨8￨e (￨8￨e )￨8￨e ,￨8￨e transformedResult￨8￨e )￨8￨e ;￨8￨e }￨7￨f catch￨7￨f (￨7￨f InterruptedException￨8￨p e￨8￨p )￨7￨f {￨7￨f interrupted￨8￨e =￨8￨e true￨8￨e ;￨8￨e DomainControllerLogger￨8￨e .￨8￨e HOST_CONTROLLER_LOGGER￨8￨e .￨8￨e interruptedAwaitingFinalResponse￨8￨e (￨8￨e entry￨8￨e .￨8￨e getKey￨8￨e (￨8￨e )￨8￨e .￨8￨e getServerName￨8￨e (￨8￨e )￨8￨e ,￨8￨e entry￨8￨e .￨8￨e getKey￨8￨e (￨8￨e )￨8￨e .￨8￨e getHostName￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨f catch￨7￨f (￨7￨f ExecutionException￨8￨p e￨8￨p )￨7￨f {￨7￨f DomainControllerLogger￨8￨e .￨8￨e HOST_CONTROLLER_LOGGER￨8￨e .￨8￨e caughtExceptionAwaitingFinalResponse￨8￨e (￨8￨e e￨8￨e .￨8￨e getCause￨8￨e (￨8￨e )￨8￨e ,￨8￨e entry￨8￨e .￨8￨e getKey￨8￨e (￨8￨e )￨8￨e .￨8￨e getServerName￨8￨e (￨8￨e )￨8￨e ,￨8￨e entry￨8￨e .￨8￨e getKey￨8￨e (￨8￨e )￨8￨e .￨8￨e getHostName￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨l }￨5￨f finally￨5￨f (￨5￨f )￨5￨f {￨5￨f if￨6￨j (￨6￨j interrupted￨7￨c )￨6￨j {￨6￨j Thread￨7￨e .￨7￨e currentThread￨7￨e (￨7￨e )￨7￨e .￨7￨e interrupt￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f }￨4￨f }￨3￨j else￨3￨j {￨3￨j reportHostFailures￨4￨e (￨4￨e context￨4￨e ,￨4￨e operation￨4￨e )￨4￨e ;￨4￨e context￨4￨e .￨4￨e completeStep￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f ModelNode￨2￨f getCancelledResult￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f pushToServers￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f Map￨2￨f <￨2￨f ServerIdentity￨2￨f ,￨2￨f ServerTaskExecutor￨2￨f .￨2￨f ExecutedServerRequest￨2￨f >￨2￨f submittedTasks￨2￨f ,￨2￨f final￨2￨f List￨2￨f <￨2￨f ServerTaskExecutor￨2￨f .￨2￨f ServerPreparedResponse￨2￨f >￨2￨f preparedResults￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Map￨2￨f <￨2￨f ServerIdentity￨2￨f ,￨2￨f ModelNode￨2￨f >￨2￨f >￨2￨f getOpsByGroup￨2￨f (￨2￨f Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p ModelNode￨3￨p >￨3￨p hostResults￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f translateDomainMappedOperation￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p domainMappedOperation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getRolloutPlan￨2￨f (￨2￨f ModelNode￨2￨f rolloutPlan￨2￨f ,￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Map￨2￨f <￨2￨f ServerIdentity￨2￨f ,￨2￨f ModelNode￨2￨f >￨2￨f >￨2￨f opsByGroup￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validateServerGroupPlan￨2￨f (￨2￨f Set￨2￨f <￨2￨f String￨2￨f >￨2￨f found￨2￨f ,￨2￨f Property￨2￨f prop￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getDefaultRolloutPlan￨2￨f (￨2￨f Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Map￨3￨p <￨3￨p ServerIdentity￨3￨p ,￨3￨p ModelNode￨3￨p >￨3￨p >￨3￨p opsByGroup￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f reportHostFailures￨2￨f (￨2￨f final￨3￨p OperationContext￨3￨p context￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f collectDomainFailure￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p isDomain￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f collectHostFailures￨2￨f (￨2￨f final￨3￨p OperationContext￨3￨p context￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p isDomain￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isDomainOperation￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EditorStack￨1￨d extends￨1￨d PartStack￨1￨d {￨1￨d private￨2￨e EditorSashContainer￨2￨e editorArea￨2￨e ;￨2￨e private￨2￨e WorkbenchPage￨2￨e page￨2￨e ;￨2￨e private￨2￨e SystemMenuSize￨2￨e sizeItem￨2￨e =￨2￨e new￨2￨e SystemMenuSize￨2￨e (￨2￨e null￨2￨e )￨2￨e ;￨2￨e private￨2￨e SystemMenuPinEditor￨2￨e pinEditorItem￨2￨e =￨2￨e new￨2￨e SystemMenuPinEditor￨2￨e (￨2￨e null￨2￨e )￨2￨e ;￨2￨e public￨2￨f EditorStack￨2￨f (￨2￨f EditorSashContainer￨3￨p editorArea￨3￨p ,￨3￨p WorkbenchPage￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSystemActions￨2￨f (￨2￨f IMenuManager￨3￨p menuManager￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMoveable￨2￨f (￨2￨f IPresentablePart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCloseable￨2￨f (￨2￨f IPresentablePart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsState￨2￨f (￨2￨f int￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f EditorStack￨2￨f newEditorWorkbook￨2￨f (￨2￨f EditorSashContainer￨3￨p editorArea￨3￨p ,￨3￨p WorkbenchPage￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f add￨2￨f (￨2￨f LayoutPart￨3￨p newChild￨3￨p ,￨3￨p IPresentablePart￨3￨p position￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f LayoutPart￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createControl￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateActions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateContainerVisibleTab￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getTabList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isActiveWorkbook￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f becomeActiveWorkbook￨2￨f (￨2￨f boolean￨3￨p hasFocus￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tabFocusHide￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tabFocusShow￨2￨f (￨2￨f boolean￨3￨p hasFocus￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f EditorPane￨2￨f [￨2￨f ]￨2￨f getEditors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EditorSashContainer￨2￨f getEditorArea￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EditorPane￨2￨f getVisibleEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisibleEditor￨2￨f (￨2￨f EditorPane￨3￨p editorPane￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f showVisibleEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f canMoveFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f derefPart￨2￨f (￨2￨f LayoutPart￨3￨p toDeref￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b EditorPresentation￨3￨b .￨3￨b derefPart￨3￨b (￨3￨b toDeref￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f boolean￨2￨f allowsDrop￨2￨f (￨2￨f PartPane￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setActive￨2￨f (￨2￨f boolean￨3￨p activeState￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f close￨2￨f (￨2￨f IPresentablePart￨3￨p [￨3￨p ]￨3￨p parts￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LZMACompressorInputStream￨1￨d extends￨1￨d CompressorInputStream￨1￨d {￨1￨d private￨2￨e final￨2￨e InputStream￨2￨e in￨2￨e ;￨2￨e public￨2￨f LZMACompressorInputStream￨2￨f (￨2￨f InputStream￨2￨f inputStream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e ret￨3￨e =￨3￨e in￨3￨e .￨3￨e read￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b count￨3￨b (￨3￨b (￨3￨b ret￨3￨b ==￨3￨b (￨3￨b -￨3￨b 1￨3￨b )￨3￨b ?￨3￨b -￨3￨b 1￨3￨b :￨3￨b 1￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e ret￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buf￨2￨f ,￨2￨f int￨2￨f off￨2￨f ,￨2￨f int￨2￨f len￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f long￨2￨f skip￨2￨f (￨2￨f long￨2￨f n￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f available￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d ButtonTab￨1￨d extends￨1￨d AlignableTab￨1￨d {￨1￨d Button￨2￨e button1￨2￨e ;￨2￨e Button￨2￨e button2￨2￨e ;￨2￨e Button￨2￨e button3￨2￨e ;￨2￨e Button￨2￨e button4￨2￨e ;￨2￨e Button￨2￨e button5￨2￨e ;￨2￨e Button￨2￨e button6￨2￨e ;￨2￨e Group￨2￨e textButtonGroup￨2￨e ;￨2￨e Group￨2￨e imageButtonGroup￨2￨e ;￨2￨e Button￨2￨e upButton￨2￨e ;￨2￨e Button￨2￨e downButton￨2￨e ;￨2￨e Button￨2￨e pushButton￨2￨e ;￨2￨e Button￨2￨e checkButton￨2￨e ;￨2￨e Button￨2￨e radioButton￨2￨e ;￨2￨e Button￨2￨e toggleButton￨2￨e ;￨2￨e Button￨2￨e arrowButton￨2￨e ;￨2￨e Button￨2￨e flatButton￨2￨e ;￨2￨e ButtonTab￨2￨f (￨2￨f ControlExample￨3￨p instance￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createControlGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createStyleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f getMethodNames￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b String￨3￨b [￨3￨b ]￨3￨b {￨3￨b "Selection"￨3￨b ,￨3￨b "Text"￨3￨b }￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f String￨2￨f getTabText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetAlignment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CommandLineTest￨1￨d {￨1￨d private￨2￨e ByteArrayOutputStream￨2￨e results￨2￨e ;￨2￨e private￨2￨e PrintStream￨2￨e oldOut￨2￨e ;￨2￨e private￨2￨e static￨2￨e boolean￨2￨e testWasRun￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f before￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f after￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Example￨2￨d {￨2￨d @￨3￨f Test￨3￨f public￨3￨f void￨3￨f test￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f runATest￨2￨f (￨2￨f )￨2￨f {￨2￨f CommandLineTest￨3￨e .￨3￨e testWasRun￨3￨e =￨3￨e false￨3￨e ;￨3￨e <START_BUG>￨3￨b new￨3￨b JUnitCore￨3￨b (￨3￨b )￨3￨b .￨3￨b runMain￨3￨b (￨3￨b new￨3￨b String￨3￨b [￨3￨b ]￨3￨b {￨3￨b "org.junit.tests.CommandLineTest$Example"￨3￨b }￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Assert￨3￨e .￨3￨e assertTrue￨3￨e (￨3￨e CommandLineTest￨3￨e .￨3￨e testWasRun￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f runAClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e int￨2￨e fCount￨2￨e ;￨2￨e public￨2￨d static￨2￨d class￨2￨d Count￨2￨d {￨2￨d @￨3￨f Test￨3￨f public￨3￨f void￨3￨f increment￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f runTwoClassesAsArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f runTwoClasses￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JPAAnnotationParseProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d PERSISTENCE_CONTEXT_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d PersistenceContext￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d PERSISTENCE_UNIT_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d PersistenceUnit￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d ENTITY_MANAGER_CLASS￨2￨d =￨2￨d "javax.persistence.EntityManager"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d ENTITY_MANAGERFACTORY_CLASS￨2￨d =￨2￨d "javax.persistence.EntityManagerFactory"￨2￨d ;￨2￨d @￨2￨d Override￨2￨d public￨2￨d void￨2￨d deploy￨2￨d (￨2￨d DeploymentPhaseContext￨2￨d phaseContext￨2￨d )￨2￨d throws￨2￨d DeploymentUnitProcessingException￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processPersistenceAnnotations￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f EEModuleDescription￨2￨f eeModuleDescription￨2￨f ,￨2￨f List￨2￨f <￨2￨f AnnotationInstance￨2￨f >￨2￨f persistenceContexts￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processField￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f FieldInfo￨2￨f fieldInfo￨2￨f ,￨2￨f final￨2￨f EEModuleClassDescription￨2￨f eeModuleClassDescription￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processMethod￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f MethodInfo￨2￨f methodInfo￨2￨f ,￨2￨f final￨2￨f EEModuleClassDescription￨2￨f eeModuleClassDescription￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processClass￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f ClassInfo￨2￨f classInfo￨2￨f ,￨2￨f final￨2￨f EEModuleClassDescription￨2￨f eeModuleClassDescription￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f InjectionSource￨2￨f getBindingSource￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f String￨2￨f injectionTypeName￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e scopedPuName￨3￨e =￨3￨e getScopedPuName￨3￨e (￨3￨e deploymentUnit￨3￨e ,￨3￨e annotation￨3￨e )￨3￨e ;￨3￨e ServiceName￨3￨e puServiceName￨3￨e =￨3￨e getPuServiceName￨3￨e (￨3￨e scopedPuName￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j isPersistenceContext￨4￨c (￨4￨c annotation￨4￨c )￨4￨c )￨3￨j {￨3￨j AnnotationValue￨4￨e pcType￨4￨e =￨4￨e annotation￨4￨e .￨4￨e value￨4￨e (￨4￨e "type"￨4￨e )￨4￨e ;￨4￨e PersistenceContextType￨4￨e type￨4￨e =￨4￨e (￨4￨e (￨4￨e pcType￨4￨e ==￨4￨e null￨4￨e )￨4￨e ||￨4￨e (￨4￨e TRANSACTION￨4￨e .￨4￨e name￨4￨e (￨4￨e )￨4￨e .￨4￨e equals￨4￨e (￨4￨e pcType￨4￨e .￨4￨e asString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ?￨4￨e PersistenceContextType￨4￨e .￨4￨e TRANSACTION￨4￨e :￨4￨e PersistenceContextType￨4￨e .￨4￨e EXTENDED￨4￨e ;￨4￨e Map￨4￨e properties￨4￨e ;￨4￨e AnnotationValue￨4￨e value￨4￨e =￨4￨e annotation￨4￨e .￨4￨e value￨4￨e (￨4￨e "properties"￨4￨e )￨4￨e ;￨4￨e AnnotationInstance￨4￨e [￨4￨e ]￨4￨e props￨4￨e =￨4￨e (￨4￨e value￨4￨e !=￨4￨e null￨4￨e )￨4￨e ?￨4￨e value￨4￨e .￨4￨e asNestedArray￨4￨e (￨4￨e )￨4￨e :￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j props￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j properties￨5￨e =￨5￨e new￨5￨e HashMap￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c source￨6￨c =￨6￨c 0￨6￨c ;￨6￨c source￨6￨c <￨6￨c (￨6￨c props￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c source￨6￨c ++￨6￨c )￨5￨l {￨5￨l properties￨6￨e .￨6￨e put￨6￨e (￨6￨e props￨6￨e [￨6￨e source￨6￨e ]￨6￨e .￨6￨e value￨6￨e (￨6￨e "name"￨6￨e )￨6￨e ,￨6￨e props￨6￨e [￨6￨e source￨6￨e ]￨6￨e .￨6￨e value￨6￨e (￨6￨e "value"￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j else￨4￨j {￨4￨j properties￨5￨e =￨5￨e null￨5￨e ;￨5￨e }￨4￨j return￨4￨e new￨4￨e org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e as￨4￨e .￨4￨e jpa￨4￨e .￨4￨e injectors￨4￨e .￨4￨e PersistenceContextInjectionSource￨4￨e (￨4￨e type￨4￨e ,￨4￨e properties￨4￨e ,￨4￨e puServiceName￨4￨e ,￨4￨e deploymentUnit￨4￨e ,￨4￨e scopedPuName￨4￨e ,￨4￨e injectionTypeName￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b new￨4￨b org￨4￨b .￨4￨b jboss￨4￨b .￨4￨b as￨4￨b .￨4￨b jpa￨4￨b .￨4￨b injectors￨4￨b .￨4￨b PersistenceUnitInjectionSource￨4￨b (￨4￨b puServiceName￨4￨b ,￨4￨b deploymentUnit￨4￨b ,￨4￨b scopedPuName￨4￨b ,￨4￨b injectionTypeName￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f private￨2￨f boolean￨2￨f isExtendedPersistenceContext￨2￨f (￨2￨f final￨3￨p AnnotationInstance￨3￨p annotation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isPersistenceContext￨2￨f (￨2￨f final￨3￨p AnnotationInstance￨3￨p annotation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getClassLevelInjectionType￨2￨f (￨2￨f final￨3￨p AnnotationInstance￨3￨p annotation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getScopedPuName￨2￨f (￨2￨f final￨2￨f DeploymentUnit￨2￨f deploymentUnit￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ServiceName￨2￨f getPuServiceName￨2￨f (￨2￨f String￨2￨f scopedPuName￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f registerInterceptorsForExtendedPersistenceContext￨2￨f (￨2￨f SessionBeanComponentDescription￨3￨p componentDescription￨3￨p ,￨3￨p AnnotationInstance￨3￨p annotation￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ArrayCreation￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d TYPE_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d ArrayCreation￨2￨d .￨2￨d class￨2￨d ,￨2￨d "type"￨2￨d ,￨2￨d ArrayType￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildListPropertyDescriptor￨2￨d DIMENSIONS_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildListPropertyDescriptor￨2￨d (￨2￨d ArrayCreation￨2￨d .￨2￨d class￨2￨d ,￨2￨d "dimensions"￨2￨d ,￨2￨d Expression￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d INITIALIZER_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d ArrayCreation￨2￨d .￨2￨d class￨2￨d ,￨2￨d "initializer"￨2￨d ,￨2￨d ArrayInitializer￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d OPTIONAL￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e ArrayType￨2￨e arrayType￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ASTNode￨2￨e .￨2￨e NodeList￨2￨e dimensions￨2￨e =￨2￨e new￨2￨e ASTNode￨2￨e .￨2￨e NodeList￨2￨e (￨2￨e ArrayCreation￨2￨e .￨2￨e DIMENSIONS_PROPERTY￨2￨e )￨2￨e ;￨2￨e private￨2￨e ArrayInitializer￨2￨e optionalInitializer￨2￨e =￨2￨e null￨2￨e ;￨2￨e ArrayCreation￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalGetChildListProperty￨2￨f (￨2￨f ChildListPropertyDescriptor￨3￨p property￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ArrayType￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c arrayType￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b synchronized￨4￨b (￨4￨b this￨4￨b .￨4￨b ast￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c arrayType￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j preLazyInit￨5￨e (￨5￨e )￨5￨e ;￨5￨e this￨5￨e .￨5￨e arrayType￨5￨e =￨5￨e this￨5￨e .￨5￨e ast￨5￨e .￨5￨e newArrayType￨5￨e (￨5￨e this￨5￨e .￨5￨e ast￨5￨e .￨5￨e newPrimitiveType￨5￨e (￨5￨e PrimitiveType￨5￨e .￨5￨e INT￨5￨e )￨5￨e )￨5￨e ;￨5￨e postLazyInit￨5￨e (￨5￨e this￨5￨e .￨5￨e arrayType￨5￨e ,￨5￨e ArrayCreation￨5￨e .￨5￨e TYPE_PROPERTY￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e this￨3￨e .￨3￨e arrayType￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setType￨2￨f (￨2￨f ArrayType￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f dimensions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ArrayInitializer￨2￨f getInitializer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInitializer￨2￨f (￨2￨f ArrayInitializer￨3￨p initializer￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractMethodDeclaration￨1￨d extends￨1￨d ASTNode￨1￨d implements￨1￨d ReferenceContext￨1￨d ,￨1￨d ProblemSeverities￨1￨d {￨1￨d public￨2￨e MethodScope￨2￨e scope￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e selector￨2￨e ;￨2￨e public￨2￨e int￨2￨e declarationSourceStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e declarationSourceEnd￨2￨e ;￨2￨e public￨2￨e int￨2￨e modifiers￨2￨e ;￨2￨e public￨2￨e int￨2￨e modifiersSourceStart￨2￨e ;￨2￨e public￨2￨e Annotation￨2￨e [￨2￨e ]￨2￨e annotations￨2￨e ;￨2￨e public￨2￨e Argument￨2￨e [￨2￨e ]￨2￨e arguments￨2￨e ;￨2￨e public￨2￨e TypeReference￨2￨e [￨2￨e ]￨2￨e thrownExceptions￨2￨e ;￨2￨e public￨2￨e Statement￨2￨e [￨2￨e ]￨2￨e statements￨2￨e ;￨2￨e public￨2￨e int￨2￨e explicitDeclarations￨2￨e ;￨2￨e public￨2￨e MethodBinding￨2￨e binding￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e ignoreFurtherInvestigation￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e needFreeReturn￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e Javadoc￨2￨e javadoc￨2￨e ;￨2￨e public￨2￨e int￨2￨e bodyStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e bodyEnd￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨e CompilationResult￨2￨e compilationResult￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e errorInSignature￨2￨e =￨2￨e false￨2￨e ;￨2￨e AbstractMethodDeclaration￨2￨f (￨2￨f CompilationResult￨3￨p compilationResult￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f abort￨2￨f (￨2￨f int￨3￨p abortLevel￨3￨p ,￨3￨p IProblem￨3￨p problem￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f analyseCode￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p ,￨3￨p InitializationFlowContext￨3￨p initializationContext￨3￨p ,￨3￨p FlowInfo￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bindArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bindThrownExceptions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CompilationResult￨2￨f compilationResult￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p ,￨3￨p ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkArgumentsSize￨2￨f (￨2￨f )￨2￨f {￨2￨f TypeBinding￨3￨e [￨3￨e ]￨3￨e parameters￨3￨e =￨3￨e this￨3￨e .￨3￨e binding￨3￨e .￨3￨e parameters￨3￨e ;￨3￨e int￨3￨e size￨3￨e =￨3￨e 1￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c max￨4￨c =￨4￨c parameters￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c max￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l TypeBinding￨4￨e parameter￨4￨e =￨4￨e parameters￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b parameter￨4￨b ==￨4￨b (￨4￨b LongBinding￨4￨b )￨4￨b )￨4￨b ||￨4￨b (￨4￨b parameter￨4￨b ==￨4￨b (￨4￨b DoubleBinding￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b size￨4￨e +=￨4￨e 2￨4￨e ;￨4￨e else￨4￨j {￨4￨j size￨5￨e ++￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j size￨5￨c >￨5￨c 255￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e noMoreAvailableSpaceForArgument￨5￨e (￨5￨e this￨5￨e .￨5￨e scope￨5￨e .￨5￨e locals￨5￨e [￨5￨e i￨5￨e ]￨5￨e ,￨5￨e this￨5￨e .￨5￨e scope￨5￨e .￨5￨e locals￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e declaration￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f public￨2￨f boolean￨2￨f hasErrors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAbstract￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAnnotationMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isClinit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDefaultConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInitializationMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isNative￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStatic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f parseStatements￨2￨f (￨2￨f Parser￨3￨p parser￨3￨p ,￨3￨p CompilationUnitDeclaration￨3￨p unit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printBody￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printReturnType￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f ClassScope￨3￨p upperScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveJavadoc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveStatements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsHavingErrors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p classScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeParameter￨2￨f [￨2￨f ]￨2￨f typeParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
abstract￨1￨d class￨1￨d Const￨1￨d implements￨1￨d Val￨1￨d ,￨1￨d Constant￨1￨d {￨1￨d private￨2￨e ClassMetaData￨2￨e _meta￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Column￨2￨e [￨2￨e ]￨2￨e _cols￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f ClassMetaData￨2￨f getMetaData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMetaData￨2￨f (￨2￨f ClassMetaData￨3￨p meta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVariable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Column￨2￨f getColumn￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f Object￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getValue￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getSQLValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSQLValueNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p boolean￨3￨p nullTest￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Joins￨2￨f getJoins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f calculateValue￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p Val￨3￨p other￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f toDataStoreValue￨2￨f (￨2￨f Object￨3￨p val￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SQLBuffer￨2￨f newSQLBuffer￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f selectColumns￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p pks￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f groupBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b sel￨3￨b .￨3￨b groupBy￨3￨b (￨3￨b newSQLBuffer￨3￨b (￨3￨b sel￨3￨b ,￨3￨b store￨3￨b ,￨3￨b params￨3￨b ,￨3￨b fetch￨3￨b )￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f orderBy￨2￨f (￨2￨f Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p boolean￨3￨p asc￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f load￨2￨f (￨2￨f Result￨2￨f res￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f JDBCFetchConfiguration￨2￨f fetch￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasVariable￨2￨f (￨2￨f Variable￨3￨p var￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f length￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendIsEmpty￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendIsNotEmpty￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendSize￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendIsNull￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendIsNotNull￨2￨f (￨2￨f SQLBuffer￨3￨p sql￨3￨p ,￨3￨p Select￨3￨p sel￨3￨p ,￨3￨p JDBCStore￨3￨p store￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p params￨3￨p ,￨3￨p JDBCFetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SendAllMessagesCommand￨1￨d extends￨1￨d FolderCommand￨1￨d {￨1￨d protected￨2￨e SendListManager￨2￨e sendListManager￨2￨e =￨2￨e new￨2￨e SendListManager￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e OutboxFolder￨2￨e outboxFolder￨2￨e ;￨2￨e public￨2￨f SendAllMessagesCommand￨2￨f (￨2￨f AbstractFrameController￨3￨p frameController￨3￨p ,￨3￨p DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f Worker￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f FolderCommandReference￨3￨e [￨3￨e ]￨3￨e r￨3￨e =￨3￨e (￨3￨e (￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e )￨3￨e (￨3￨e getReferences￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e worker￨3￨e .￨3￨e setDisplayText￨3￨e (￨3￨e MailResourceLoader￨3￨e .￨3￨e getString￨3￨e (￨3￨e "statusbar"￨3￨e ,￨3￨e "message"￨3￨e ,￨3￨e "send_message"￨3￨e )￨3￨e )￨3￨e ;￨3￨e outboxFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e OutboxFolder￨3￨e )￨3￨e (￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Object￨3￨e [￨3￨e ]￨3￨e uids￨3￨e =￨3￨e outboxFolder￨3￨e .￨3￨e getUids￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c uids￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c outboxFolder￨5￨c .￨5￨c exists￨5￨c (￨5￨c uids￨5￨c [￨5￨c i￨5￨c ]￨5￨c )￨5￨c )￨5￨c ==￨5￨c true￨5￨c )￨4￨j {￨4￨j SendableMessage￨5￨e message￨5￨e =￨5￨e (￨5￨e (￨5￨e SendableMessage￨5￨e )￨5￨e (￨5￨e outboxFolder￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e uids￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e sendListManager￨5￨e .￨5￨e add￨5￨e (￨5￨e message￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l int￨3￨e actAccountUid￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e List￨3￨e sentList￨3￨e =￨3￨e new￨3￨e Vector￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e open￨3￨e =￨3￨e false￨3￨e ;￨3￨e SMTPServer￨3￨e smtpServer￨3￨e =￨3￨e null￨3￨e ;￨3￨e Folder￨3￨e sentFolder￨3￨e =￨3￨e null￨3￨e ;￨3￨e while￨3￨l (￨3￨l sendListManager￨4￨c .￨4￨c hasMoreMessages￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l SendableMessage￨4￨e message￨4￨e =￨4￨e sendListManager￨4￨e .￨4￨e getNextMessage￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c message￨5￨c .￨5￨c getAccountUid￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c actAccountUid￨5￨c )￨4￨j {￨4￨j actAccountUid￨5￨e =￨5￨e message￨5￨e .￨5￨e getAccountUid￨5￨e (￨5￨e )￨5￨e ;￨5￨e AccountItem￨5￨e accountItem￨5￨e =￨5￨e MailConfig￨5￨e .￨5￨e getAccountList￨5￨e (￨5￨e )￨5￨e .￨5￨e uidGet￨5￨e (￨5￨e actAccountUid￨5￨e )￨5￨e ;￨5￨e sentFolder￨5￨e =￨5￨e (￨5￨e (￨5￨e Folder￨5￨e )￨5￨e (￨5￨e treeModel￨5￨e .￨5￨e getFolder￨5￨e (￨5￨e Integer￨5￨e .￨5￨e parseInt￨5￨e (￨5￨e accountItem￨5￨e .￨5￨e getSpecialFoldersItem￨5￨e (￨5￨e )￨5￨e .￨5￨e get￨5￨e (￨5￨e "sent"￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e smtpServer￨5￨e =￨5￨e new￨5￨e SMTPServer￨5￨e (￨5￨e accountItem￨5￨e )￨5￨e ;￨5￨e open￨5￨e =￨5￨e smtpServer￨5￨e .￨5￨e openConnection￨5￨e (￨5￨e )￨5￨e ;￨5￨e (￨5￨e (￨5￨e StatusObservableImpl￨5￨e )￨5￨e (￨5￨e smtpServer￨5￨e .￨5￨e getObservable￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e .￨5￨e setWorker￨5￨e (￨5￨e worker￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j open￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f smtpServer￨6￨e .￨6￨e sendMessage￨6￨e (￨6￨e message￨6￨e ,￨6￨e worker￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b sentList￨6￨b .￨6￨b add￨6￨b (￨6￨b message￨6￨b .￨6￨b getHeaderInterface￨6￨b (￨6￨b )￨6￨b .￨6￨b get￨6￨b (￨6￨b "columba.uid"￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f catch￨5￨f (￨5￨f SMTPException￨6￨p e￨6￨p )￨5￨f {￨5￨f JOptionPane￨6￨e .￨6￨e showMessageDialog￨6￨e (￨6￨e null￨6￨e ,￨6￨e e￨6￨e .￨6￨e getMessage￨6￨e (￨6￨e )￨6￨e ,￨6￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>sending"￨6￨e ,￨6￨e JOptionPane￨6￨e .￨6￨e ERROR_MESSAGE￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j }￨3￨l worker￨3￨e .￨3￨e clearDisplayTextWithDelay￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c sentList￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j moveToSentFolder￨4￨e (￨4￨e sentList￨4￨e ,￨4￨e sentFolder￨4￨e )￨4￨e ;￨4￨e sentList￨4￨e .￨4￨e clear￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f moveToSentFolder￨2￨f (￨2￨f List￨3￨p v￨3￨p ,￨3￨p Folder￨3￨p sentFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d SuppressWarnings￨1￨d (￨1￨d "deprecation"￨1￨d )￨1￨d public￨1￨d class￨1￨d LegacyGlobalConfigurationAdapter￨1￨d {￨1￨d public￨2￨f static￨2￨f GlobalConfiguration￨2￨f adapt￨2￨f (￨2￨f GlobalConfiguration￨3￨p config￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f static￨2￨f GlobalConfiguration￨2￨f adapt￨2￨f (￨2￨f org￨3￨p .￨3￨p infinispan￨3￨p .￨3￨p config￨3￨p .￨3￨p GlobalConfiguration￨3￨p legacy￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j legacy￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j GlobalConfigurationBuilder￨3￨e builder￨3￨e =￨3￨e new￨3￨e GlobalConfigurationBuilder￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c legacy￨4￨c .￨4￨c getTransportClass￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j builder￨4￨e .￨4￨e transport￨4￨e (￨4￨e )￨4￨e .￨4￨e clusterName￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getClusterName￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e machineId￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getMachineId￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e rackId￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getRackId￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e siteId￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getSiteId￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e strictPeerToPeer￨4￨e (￨4￨e legacy￨4￨e .￨4￨e isStrictPeerToPeer￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e distributedSyncTimeout￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getDistributedSyncTimeout￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e transport￨4￨e (￨4￨e Util￨4￨e .￨4￨e <￨4￨e Transport￨4￨e >￨4￨e getInstance￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getTransportClass￨4￨e (￨4￨e )￨4￨e ,￨4￨e legacy￨4￨e .￨4￨e getClassLoader￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e nodeName￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getTransportNodeName￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e withProperties￨4￨e (￨4￨e legacy￨4￨e .￨4￨e getTransportProperties￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j builder￨3￨e .￨3￨e globalJmxStatistics￨3￨e (￨3￨e )￨3￨e .￨3￨e enabled￨3￨e (￨3￨e legacy￨3￨e .￨3￨e isExposeGlobalJmxStatistics￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e jmxDomain￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getJmxDomain￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e mBeanServerLookup￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getMBeanServerLookupInstance￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e allowDuplicateDomains￨3￨e (￨3￨e legacy￨3￨e .￨3￨e isAllowDuplicateDomains￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e cacheManagerName￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getCacheManagerName￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e withProperties￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getMBeanServerProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e serialization￨3￨e (￨3￨e )￨3￨e .￨3￨e marshallerClass￨3￨e (￨3￨e Util￨3￨e .￨3￨e <￨3￨e Marshaller￨3￨e >￨3￨e loadClass￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getMarshallerClass￨3￨e (￨3￨e )￨3￨e ,￨3￨e legacy￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e version￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getMarshallVersion￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l AdvancedExternalizerConfig￨4￨c externalizerConfig￨4￨c :￨4￨c legacy￨4￨c .￨4￨c getExternalizers￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b builder￨4￨b .￨4￨b serialization￨4￨b (￨4￨b )￨4￨b .￨4￨b addAdvancedExternalizer￨4￨b (￨4￨b externalizerConfig￨4￨b .￨4￨b getAdvancedExternalizer￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨l builder￨3￨e .￨3￨e asyncTransportExecutor￨3￨e (￨3￨e )￨3￨e .￨3￨e factory￨3￨e (￨3￨e Util￨3￨e .￨3￨e <￨3￨e ExecutorFactory￨3￨e >￨3￨e getInstance￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getAsyncTransportExecutorFactoryClass￨3￨e (￨3￨e )￨3￨e ,￨3￨e legacy￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e withProperties￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getAsyncTransportExecutorProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e asyncListenerExecutor￨3￨e (￨3￨e )￨3￨e .￨3￨e factory￨3￨e (￨3￨e Util￨3￨e .￨3￨e <￨3￨e ExecutorFactory￨3￨e >￨3￨e getInstance￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getAsyncListenerExecutorFactoryClass￨3￨e (￨3￨e )￨3￨e ,￨3￨e legacy￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e withProperties￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getAsyncListenerExecutorProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e evictionScheduledExecutor￨3￨e (￨3￨e )￨3￨e .￨3￨e factory￨3￨e (￨3￨e Util￨3￨e .￨3￨e <￨3￨e ScheduledExecutorFactory￨3￨e >￨3￨e getInstance￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getEvictionScheduledExecutorFactoryClass￨3￨e (￨3￨e )￨3￨e ,￨3￨e legacy￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e withProperties￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getAsyncListenerExecutorProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e replicationQueueScheduledExecutor￨3￨e (￨3￨e )￨3￨e .￨3￨e factory￨3￨e (￨3￨e Util￨3￨e .￨3￨e <￨3￨e ScheduledExecutorFactory￨3￨e >￨3￨e getInstance￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getReplicationQueueScheduledExecutorFactoryClass￨3￨e (￨3￨e )￨3￨e ,￨3￨e legacy￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e withProperties￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getReplicationQueueScheduledExecutorProperties￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e builder￨3￨e .￨3￨e shutdown￨3￨e (￨3￨e )￨3￨e .￨3￨e hookBehavior￨3￨e (￨3￨e ShutdownHookBehavior￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e legacy￨3￨e .￨3￨e getShutdownHookBehavior￨3￨e (￨3￨e )￨3￨e .￨3￨e name￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e builder￨3￨e .￨3￨e build￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CachingConnectionFactory￨1￨d extends￨1￨d SingleConnectionFactory￨1￨d {￨1￨d private￨2￨e int￨2￨e sessionCacheSize￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e cacheProducers￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e cacheConsumers￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e boolean￨2￨e active￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e Integer￨2￨e ,￨2￨e LinkedList￨2￨e <￨2￨e Session￨2￨e >￨2￨e >￨2￨e cachedSessions￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Integer￨2￨e ,￨2￨e LinkedList￨2￨e <￨2￨e Session￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f CachingConnectionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CachingConnectionFactory￨2￨f (￨2￨f ConnectionFactory￨3￨p targetConnectionFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSessionCacheSize￨2￨f (￨2￨f int￨3￨p sessionCacheSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSessionCacheSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCacheProducers￨2￨f (￨2￨f boolean￨3￨p cacheProducers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCacheProducers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCacheConsumers￨2￨f (￨2￨f boolean￨3￨p cacheConsumers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCacheConsumers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetConnection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Session￨2￨f getSession￨2￨f (￨2￨f Connection￨2￨f con￨2￨f ,￨2￨f Integer￨2￨f mode￨2￨f )￨2￨f throws￨2￨f JMSException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Session￨2￨f getCachedSessionProxy￨2￨f (￨2￨f Session￨3￨p target￨3￨p ,￨3￨p LinkedList￨3￨p <￨3￨p Session￨3￨p >￨3￨p sessionList￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d CachedSessionInvocationHandler￨2￨d implements￨2￨d InvocationHandler￨2￨d {￨2￨d private￨3￨e final￨3￨e Session￨3￨e target￨3￨e ;￨3￨e private￨3￨e final￨3￨e LinkedList￨3￨e <￨3￨e Session￨3￨e >￨3￨e sessionList￨3￨e ;￨3￨e private￨3￨e final￨3￨e Map￨3￨e <￨3￨e Destination￨3￨e ,￨3￨e MessageProducer￨3￨e >￨3￨e cachedProducers￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e Destination￨3￨e ,￨3￨e MessageProducer￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e Map￨3￨e <￨3￨e CachingConnectionFactory￨3￨e .￨3￨e ConsumerCacheKey￨3￨e ,￨3￨e MessageConsumer￨3￨e >￨3￨e cachedConsumers￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e CachingConnectionFactory￨3￨e .￨3￨e ConsumerCacheKey￨3￨e ,￨3￨e MessageConsumer￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e transactionOpen￨3￨e =￨3￨e false￨3￨e ;￨3￨e public￨3￨f CachedSessionInvocationHandler￨3￨f (￨3￨f Session￨4￨p target￨4￨p ,￨4￨p LinkedList￨4￨p <￨4￨p Session￨4￨p >￨4￨p sessionList￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f invoke￨3￨f (￨3￨f Object￨3￨f proxy￨3￨f ,￨3￨f Method￨3￨f method￨3￨f ,￨3￨f Object￨3￨f [￨3￨f ]￨3￨f args￨3￨f )￨3￨f throws￨3￨f Throwable￨3￨f (￨3￨f )￨3￨f {￨3￨f String￨4￨e methodName￨4￨e =￨4￨e method￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "equals"￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b return￨5￨b proxy￨5￨b ==￨5￨b (￨5￨b args￨5￨b [￨5￨b 0￨5￨b ]￨5￨b )￨5￨b ?￨5￨b Boolean￨5￨b .￨5￨b TRUE￨5￨b :￨5￨b Boolean￨5￨b .￨5￨b FALSE￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "hashCode"￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e System￨5￨e .￨5￨e identityHashCode￨5￨e (￨5￨e proxy￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "toString"￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e "Cached<seq2seq4repair_space>JMS<seq2seq4repair_space>Session:<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e this￨5￨e .￨5￨e target￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "close"￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j active￨6￨c )￨5￨j {￨5￨j synchronized￨6￨f (￨6￨f this￨7￨p .￨7￨p sessionList￨7￨p )￨6￨f {￨6￨f if￨7￨j (￨7￨j (￨8￨c this￨8￨c .￨8￨c sessionList￨8￨c .￨8￨c size￨8￨c (￨8￨c )￨8￨c )￨8￨c <￨8￨c (￨8￨c getSessionCacheSize￨8￨c (￨8￨c )￨8￨c )￨8￨c )￨7￨j {￨7￨j logicalClose￨8￨e (￨8￨e (￨8￨e (￨8￨e Session￨8￨e )￨8￨e (￨8￨e proxy￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e return￨8￨e null￨8￨e ;￨8￨e }￨7￨j }￨6￨f }￨5￨j physicalClose￨5￨e (￨5￨e )￨5￨e ;￨5￨e return￨5￨e null￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "getTargetSession"￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e this￨5￨e .￨5￨e target￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "commit"￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c methodName￨5￨c .￨5￨c equals￨5￨c (￨5￨c "rollback"￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e transactionOpen￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j this￨5￨e .￨5￨e transactionOpen￨5￨e =￨5￨e true￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createProducer"￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createSender"￨6￨c )￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createPublisher"￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c isCacheProducers￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e getCachedProducer￨6￨e (￨6￨e (￨6￨e (￨6￨e Destination￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 0￨6￨e ]￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createConsumer"￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createReceiver"￨6￨c )￨6￨c )￨6￨c )￨6￨c ||￨6￨c (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createSubscriber"￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c isCacheConsumers￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e getCachedConsumer￨6￨e (￨6￨e (￨6￨e (￨6￨e Destination￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 0￨6￨e ]￨6￨e )￨6￨e )￨6￨e ,￨6￨e (￨6￨e (￨6￨e args￨6￨e .￨6￨e length￨6￨e )￨6￨e >￨6￨e 1￨6￨e ?￨6￨e (￨6￨e (￨6￨e String￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 1￨6￨e ]￨6￨e )￨6￨e )￨6￨e :￨6￨e null￨6￨e )￨6￨e ,￨6￨e (￨6￨e (￨6￨e (￨6￨e args￨6￨e .￨6￨e length￨6￨e )￨6￨e >￨6￨e 2￨6￨e )￨6￨e &&￨6￨e (￨6￨e (￨6￨e Boolean￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 2￨6￨e ]￨6￨e )￨6￨e )￨6￨e )￨6￨e ,￨6￨e null￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c methodName￨6￨c .￨6￨c equals￨6￨c (￨6￨c "createDurableSubscriber"￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c isCacheConsumers￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e getCachedConsumer￨6￨e (￨6￨e (￨6￨e (￨6￨e Destination￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 0￨6￨e ]￨6￨e )￨6￨e )￨6￨e ,￨6￨e (￨6￨e (￨6￨e args￨6￨e .￨6￨e length￨6￨e )￨6￨e >￨6￨e 2￨6￨e ?￨6￨e (￨6￨e (￨6￨e String￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 2￨6￨e ]￨6￨e )￨6￨e )￨6￨e :￨6￨e null￨6￨e )￨6￨e ,￨6￨e (￨6￨e (￨6￨e (￨6￨e args￨6￨e .￨6￨e length￨6￨e )￨6￨e >￨6￨e 3￨6￨e )￨6￨e &&￨6￨e (￨6￨e (￨6￨e Boolean￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 3￨6￨e ]￨6￨e )￨6￨e )￨6￨e )￨6￨e ,￨6￨e (￨6￨e (￨6￨e String￨6￨e )￨6￨e (￨6￨e args￨6￨e [￨6￨e 1￨6￨e ]￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f return￨5￨e method￨5￨e .￨5￨e invoke￨5￨e (￨5￨e this￨5￨e .￨5￨e target￨5￨e ,￨5￨e args￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f InvocationTargetException￨5￨p ex￨5￨p )￨4￨f {￨4￨f throw￨5￨e ex￨5￨e .￨5￨e getTargetException￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f private￨3￨f MessageProducer￨3￨f getCachedProducer￨3￨f (￨3￨f Destination￨3￨f dest￨3￨f )￨3￨f throws￨3￨f JMSException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f MessageConsumer￨3￨f getCachedConsumer￨3￨f (￨3￨f Destination￨3￨f dest￨3￨f ,￨3￨f String￨3￨f selector￨3￨f ,￨3￨f boolean￨3￨f noLocal￨3￨f ,￨3￨f String￨3￨f subscription￨3￨f )￨3￨f throws￨3￨f JMSException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f logicalClose￨3￨f (￨3￨f Session￨3￨f proxy￨3￨f )￨3￨f throws￨3￨f JMSException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f physicalClose￨3￨f (￨3￨f )￨3￨f throws￨3￨f JMSException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d ConsumerCacheKey￨2￨d {￨2￨d private￨3￨e final￨3￨e Destination￨3￨e destination￨3￨e ;￨3￨e private￨3￨e final￨3￨e String￨3￨e selector￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e noLocal￨3￨e ;￨3￨e private￨3￨e final￨3￨e String￨3￨e subscription￨3￨e ;￨3￨e private￨3￨f ConsumerCacheKey￨3￨f (￨3￨f Destination￨4￨p destination￨4￨p ,￨4￨p String￨4￨p selector￨4￨p ,￨4￨p boolean￨4￨p noLocal￨4￨p ,￨4￨p String￨4￨p subscription￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f Object￨4￨p other￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d EditorManager￨1￨d implements￨1￨d IExtensionChangeHandler￨1￨d {￨1￨d EditorAreaHelper￨2￨e editorPresentation￨2￨e ;￨2￨e WorkbenchWindow￨2￨e window￨2￨e ;￨2￨e WorkbenchPage￨2￨e page￨2￨e ;￨2￨e private￨2￨e Map￨2￨e actionCache￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PIN_EDITOR_KEY￨2￨e =￨2￨e "PIN_EDITOR"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e PIN_EDITOR￨2￨e =￨2￨e "ovr16/pinned_ovr.gif"￨2￨e ;￨2￨e private￨2￨e IPropertyChangeListener￨2￨e editorPropChangeListnener￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e IHandlerActivation￨2￨e pinEditorHandlerActivation￨2￨e =￨2￨e null￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e RESOURCES_TO_SAVE_MESSAGE￨2￨e =￨2￨e WorkbenchMessages￨2￨e .￨2￨e EditorManager_saveResourcesMessage￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e SAVE_RESOURCES_TITLE￨2￨e =￨2￨e WorkbenchMessages￨2￨e .￨2￨e EditorManager_saveResourcesTitle￨2￨e ;￨2￨e public￨2￨f EditorManager￨2￨f (￨2￨f WorkbenchWindow￨3￨p window￨3￨p ,￨3￨p WorkbenchPage￨3￨p workbenchPage￨3￨p ,￨3￨p EditorAreaHelper￨3￨p pres￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkDeleteEditorResources￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkCreateEditorPropListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkCreatePinEditorShortcutKeyHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ImageDescriptor￨2￨f getEditorPinImageDesc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f collectDirtyEditors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f containsEditor￨2￨f (￨2￨f IEditorReference￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f EditorActionBars￨2￨f createEditorActionBars￨2￨f (￨2￨f EditorDescriptor￨3￨p desc￨3￨p ,￨3￨p final￨3￨p IEditorSite￨3￨p site￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f EditorActionBars￨2￨f createEmptyEditorActionBars￨2￨f (￨2￨f final￨3￨p IEditorSite￨3￨p site￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f disposeEditorActionBars￨2￨f (￨2￨f EditorActionBars￨3￨p actionBars￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorPart￨2￨f findEditor￨2￨f (￨2￨f IEditorInput￨3￨p input￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorPart￨2￨f findEditor￨2￨f (￨2￨f String￨3￨p editorId￨3￨p ,￨3￨p IEditorInput￨3￨p input￨3￨p ,￨3￨p int￨3￨p matchFlags￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorReference￨2￨f [￨2￨f ]￨2￨f findEditors￨2￨f (￨2￨f IEditorInput￨3￨p input￨3￨p ,￨3￨p String￨3￨p editorId￨3￨p ,￨3￨p int￨3￨p matchFlags￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f findEditors￨2￨f (￨2￨f List￨3￨p editorList￨3￨p ,￨3￨p IEditorInput￨3￨p input￨3￨p ,￨3￨p String￨3￨p editorId￨3￨p ,￨3￨p int￨3￨p matchFlags￨3￨p ,￨3￨p List￨3￨p result￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Display￨2￨f getDisplay￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getEditorCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IEditorRegistry￨2￨f getEditorRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorPart￨2￨f [￨2￨f ]￨2￨f getDirtyEditors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorReference￨2￨f [￨2￨f ]￨2￨f getEditors￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorPart￨2￨f getVisibleEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSaveAllNeeded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IEditorReference￨2￨f findReusableEditor￨2￨f (￨2￨f EditorDescriptor￨3￨p desc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorReference￨2￨f openEditor￨2￨f (￨2￨f String￨2￨f editorId￨2￨f ,￨2￨f IEditorInput￨2￨f input￨2￨f ,￨2￨f boolean￨2￨f setVisible￨2￨f ,￨2￨f IMemento￨2￨f editorState￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorReference￨2￨f openEditorFromDescriptor￨2￨f (￨2￨f EditorDescriptor￨2￨f desc￨2￨f ,￨2￨f IEditorInput￨2￨f input￨2￨f ,￨2￨f IMemento￨2￨f editorState￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IEditorReference￨2￨f openExternalEditor￨2￨f (￨2￨f final￨2￨f EditorDescriptor￨2￨f desc￨2￨f ,￨2￨f IEditorInput￨2￨f input￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f IEditorReference￨2￨f [￨2￨f ]￨2￨f openMultiEditor￨2￨f (￨2￨f final￨2￨f IEditorReference￨2￨f ref￨2￨f ,￨2￨f final￨2￨f AbstractMultiEditor￨2￨f part￨2￨f ,￨2￨f final￨2￨f MultiEditorInput￨2￨f input￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createEditorTab￨2￨f (￨2￨f final￨2￨f EditorReference￨2￨f ref￨2￨f ,￨2￨f final￨2￨f String￨2￨f workbookId￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b editorPresentation￨3￨b .￨3￨b addEditor￨3￨b (￨3￨b ref￨3￨b ,￨3￨b workbookId￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f EditorSite￨2￨f createSite￨2￨f (￨2￨f final￨2￨f IEditorReference￨2￨f ref￨2￨f ,￨2￨f final￨2￨f IEditorPart￨2￨f part￨2￨f ,￨2￨f final￨2￨f EditorDescriptor￨2￨f desc￨2￨f ,￨2￨f final￨2￨f IEditorInput￨2￨f input￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IEditorReference￨2￨f reuseInternalEditor￨2￨f (￨2￨f EditorDescriptor￨2￨f desc￨2￨f ,￨2￨f IEditorInput￨2￨f input￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f IEditorPart￨2￨f createPart￨2￨f (￨2￨f final￨2￨f EditorDescriptor￨2￨f desc￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IEditorReference￨2￨f openSystemExternalEditor￨2￨f (￨2￨f final￨2￨f IPath￨2￨f location￨2￨f )￨2￨f throws￨2￨f PartInitException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ImageDescriptor￨2￨f findImage￨2￨f (￨2￨f EditorDescriptor￨3￨p desc￨3￨p ,￨3￨p IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IStatus￨2￨f restoreState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f saveAll￨2￨f (￨2￨f boolean￨3￨p confirm￨3￨p ,￨3￨p boolean￨3￨p closing￨3￨p ,￨3￨p boolean￨3￨p addNonPartSources￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f saveAll￨2￨f (￨2￨f List￨3￨p dirtyParts￨3￨p ,￨3￨p boolean￨3￨p confirm￨3￨p ,￨3￨p boolean￨3￨p closing￨3￨p ,￨3￨p boolean￨3￨p addNonPartSources￨3￨p ,￨3￨p final￨3￨p IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f saveAll￨2￨f (￨2￨f List￨3￨p dirtyParts￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p confirm￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p closing￨3￨p ,￨3￨p boolean￨3￨p addNonPartSources￨3￨p ,￨3￨p final￨3￨p IRunnableContext￨3￨p runnableContext￨3￨p ,￨3￨p final￨3￨p IShellProvider￨3￨p shellProvider￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f List￨2￨f convertToSaveables￨2￨f (￨2￨f List￨3￨p parts￨3￨p ,￨3￨p boolean￨3￨p closing￨3￨p ,￨3￨p boolean￨3￨p addNonPartSources￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Saveable￨2￨f [￨2￨f ]￨2￨f getSaveables￨2￨f (￨2￨f IWorkbenchPart￨3￨p part￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f closingLastPartShowingModel￨2￨f (￨2￨f Saveable￨3￨p model￨3￨p ,￨3￨p List￨3￨p closingParts￨3￨p ,￨3￨p IWorkbenchPage￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f savePart￨2￨f (￨2￨f final￨3￨p ISaveablePart￨3￨p saveable￨3￨p ,￨3￨p IWorkbenchPart￨3￨p part￨3￨p ,￨3￨p boolean￨3￨p confirm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IStatus￨2￨f saveState￨2￨f (￨2￨f final￨3￨p IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f setVisibleEditor￨2￨f (￨2￨f IEditorReference￨3￨p newEd￨3￨p ,￨3￨p boolean￨3￨p setFocus￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IPathEditorInput￨2￨f getPathEditorInput￨2￨f (￨2￨f IEditorInput￨3￨p input￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d InnerEditor￨2￨d extends￨2￨d EditorReference￨2￨d {￨2￨d private￨3￨e IEditorReference￨3￨e outerEditor￨3￨e ;￨3￨e private￨3￨e AbstractMultiEditor￨3￨e outerEditorPart￨3￨e ;￨3￨e public￨3￨f InnerEditor￨3￨f (￨3￨f IEditorReference￨4￨p outerEditor￨4￨p ,￨4￨p AbstractMultiEditor￨4￨p outerEditorPart￨4￨p ,￨4￨p IEditorInput￨4￨p input￨4￨p ,￨4￨p EditorDescriptor￨4￨p desc￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f doDisposePart￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f PartPane￨3￨f createPane￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f Composite￨3￨f getPaneControlContainer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f restoreEditorState￨2￨f (￨2￨f IMemento￨3￨p editorMem￨3￨p ,￨3￨p ArrayList￨3￨p visibleEditors￨3￨p ,￨3￨p IEditorReference￨3￨p [￨3￨p ]￨3￨p activeEditor￨3￨p ,￨3￨p MultiStatus￨3￨p result￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f saveEditorState￨2￨f (￨2￨f IMemento￨3￨p mem￨3￨p ,￨3￨p IEditorReference￨3￨p ed￨3￨p ,￨3￨p MultiStatus￨3￨p res￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMemento￨2￨f getMemento￨2￨f (￨2￨f IEditorReference￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeExtension￨2￨f (￨2￨f IExtension￨3￨p source￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p objects￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addExtension￨2￨f (￨2￨f IExtensionTracker￨3￨p tracker￨3￨p ,￨3￨p IExtension￨3￨p extension￨3￨p )￨2￨f {￨2￨f }￨2￨f IEditorReference￨2￨f openEmptyTab￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f useIPersistableEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d AtomicInteger￨2￨d archiveCount￨2￨d =￨2￨d new￨2￨d AtomicInteger￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d ServiceContainer￨2￨d serviceContainer￨2￨d ;￨2￨d private￨2￨d OSGiSubsystemState￨2￨d subsystemState￨2￨d ;￨2￨d private￨2￨d DeploymentChain￨2￨d deploymentChain￨2￨d ;￨2￨d private￨2￨d Selector￨2￨d selector￨2￨d ;￨2￨d public￨2￨d OSGiSubsystemSupport￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d public￨2￨f OSGiSubsystemSupport￨2￨f (￨2￨f final￨2￨f OSGiSubsystemState￨2￨f subsystemState￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServiceContainer￨2￨f getServiceContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModuleLoader￨2￨f getClassifyingModuleLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f OSGiSubsystemSupport￨2￨f .￨2￨f TestModuleLoader￨2￨f getTestModuleLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DeploymentChain￨2￨f getDeploymentChain￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getUniqueName￨2￨f (￨2￨f String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertServiceUp￨2￨f (￨2￨f ServiceName￨3￨p serviceName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertServiceDown￨2￨f (￨2￨f ServiceName￨3￨p serviceName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeDeploymentChain￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupServices￨2￨f (￨2￨f final￨2￨f BatchBuilder￨2￨f batchBuilder￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupEnvironmentServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupModuleLoaderServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupDeploymentServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupFrameworkServices￨2￨f (￨2￨f final￨3￨p BatchBuilder￨3￨p batchBuilder￨3￨p )￨2￨f {￨2￨f batchBuilder￨3￨e .￨3￨e addService￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e new￨3￨e MBeanServerService￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e OSGiSubsystemSupport￨3￨e .￨3￨e TestBundleManagerService￨3￨e .￨3￨e addService￨3￨e (￨3￨e batchBuilder￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b FrameworkService￨3￨b .￨3￨b addService￨3￨b (￨3￨b batchBuilder￨3￨b ,￨3￨b null￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b PackageAdminService￨3￨e .￨3￨e addService￨3￨e (￨3￨e batchBuilder￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f Selector￨2￨f getDeploymentChainSelector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BundleManager￨2￨f getBundleManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BundleContext￨2￨f getSystemContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Configuration￨2￨f getSubsystemConfig￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f ,￨2￨f ModuleIdentifier￨2￨f exporterId￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f assertLoadClassFails￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f loadClass￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f ,￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Module￨2￨f loadModule￨2￨f (￨2￨f ModuleIdentifier￨2￨f identifier￨2￨f )￨2￨f throws￨2￨f ModuleLoadException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Bundle￨2￨f executeDeploy￨2￨f (￨2￨f final￨2￨f JavaArchive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f executeUndeploy￨2￨f (￨2￨f final￨2￨f JavaArchive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f List￨2￨f <￨2￨f ServiceName￨2￨f >￨2￨f runWithLatchedBatch￨2￨f (￨2￨f final￨2￨f OSGiSubsystemSupport￨2￨f .￨2￨f BatchedWork￨2￨f work￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f interface￨2￨f BatchedWork￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f execute￨3￨f (￨3￨f final￨3￨f BatchBuilder￨3￨f batchBuilder￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d TestServiceListener￨2￨d extends￨2￨d AbstractServiceListener￨2￨d <￨2￨d Object￨2￨d >￨2￨d {￨2￨d final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e registeredServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e startedServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e failedServices￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e Mode￨3￨e ,￨3￨e List￨3￨e <￨3￨e ServiceName￨3￨e >￨3￨e >￨3￨e initialModes￨3￨e ;￨3￨e private￨3￨e final￨3￨e AtomicInteger￨3￨e count￨3￨e =￨3￨e new￨3￨e AtomicInteger￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e private￨3￨e final￨3￨e Runnable￨3￨e finishTask￨3￨e ;￨3￨e public￨3￨f TestServiceListener￨3￨f (￨3￨f Runnable￨4￨p finishTask￨4￨p ,￨4￨p Map￨4￨p <￨4￨p Mode￨4￨p ,￨4￨p List￨4￨p <￨4￨p ServiceName￨4￨p >￨4￨p >￨4￨p initialModes￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f listenerAdded￨3￨f (￨3￨f final￨4￨p ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f serviceStarted￨3￨f (￨3￨f final￨4￨p ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f serviceFailed￨3￨f (￨3￨f ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p ,￨4￨p StartException￨4￨p reason￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f serviceRemoved￨3￨f (￨3￨f ServiceController￨4￨p <￨4￨p ?￨4￨p extends￨4￨p Object￨4￨p >￨4￨p controller￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f finishBatch￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f batchComplete￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d TestModuleLoader￨2￨d extends￨2￨d ModuleLoader￨2￨d implements￨2￨d Service￨2￨d <￨2￨d OSGiSubsystemSupport￨2￨d .￨2￨d TestModuleLoader￨2￨d >￨2￨d {￨2￨d public￨3￨e static￨3￨e final￨3￨e ServiceName￨3￨e SERVICE_NAME￨3￨e =￨3￨e JBOSS￨3￨e .￨3￨e append￨3￨e (￨3￨e "module"￨3￨e ,￨3￨e "loader"￨3￨e ,￨3￨e "support"￨3￨e )￨3￨e ;￨3￨e private￨3￨e String￨3￨e prefix￨3￨e ;￨3￨e private￨3￨e Map￨3￨e <￨3￨e ModuleIdentifier￨3￨e ,￨3￨e ModuleSpec￨3￨e >￨3￨e modules￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e ModuleIdentifier￨3￨e ,￨3￨e ModuleSpec￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e Injector￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e injector￨3￨e ;￨3￨e TestModuleLoader￨3￨f (￨3￨f String￨4￨p prefix￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f addModuleSpec￨3￨f (￨3￨f ModuleSpec￨4￨p moduleSpec￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f ModuleSpec￨3￨f findModule￨3￨f (￨3￨f ModuleIdentifier￨3￨f identifier￨3￨f )￨3￨f throws￨3￨f ModuleLoadException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestModuleLoader￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestModuleLoader￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d TestBundleManagerService￨2￨d implements￨2￨d Service￨2￨d <￨2￨d BundleManager￨2￨d >￨2￨d {￨2￨d public￨3￨e static￨3￨e final￨3￨e ServiceName￨3￨e SERVICE_NAME￨3￨e =￨3￨e BundleManagerService￨3￨e .￨3￨e SERVICE_NAME￨3￨e ;￨3￨e private￨3￨e static￨3￨e final￨3￨e Logger￨3￨e log￨3￨e =￨3￨e Logger￨3￨e .￨3￨e getLogger￨3￨e (￨3￨e "org.jboss.as.osgi"￨3￨e )￨3￨e ;￨3￨e private￨3￨e InjectedValue￨3￨e <￨3￨e Configuration￨3￨e >￨3￨e injectedConfig￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e Configuration￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e InjectedValue￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e injectedModuleLoader￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e Injector￨3￨e <￨3￨e ClassifyingModuleLoaderService￨3￨e >￨3￨e moduleLoaderInjector￨3￨e ;￨3￨e private￨3￨e BundleManager￨3￨e bundleManager￨3￨e ;￨3￨e public￨3￨f static￨3￨f void￨3￨f addService￨3￨f (￨3￨f final￨4￨p BatchBuilder￨4￨p batchBuilder￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f BundleManager￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BundleManager￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d TestServerDeploymentRepository￨2￨d implements￨2￨d ServerDeploymentRepository￨2￨d ,￨2￨d Service￨2￨d <￨2￨d ServerDeploymentRepository￨2￨d >￨2￨d {￨2￨d private￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e JavaArchive￨3￨e >￨3￨e repository￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e JavaArchive￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f static￨3￨f OSGiSubsystemSupport￨3￨f .￨3￨f TestServerDeploymentRepository￨3￨f getServiceValue￨3￨f (￨3￨f ServiceContainer￨4￨p container￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f registerDeploymentArchive￨3￨f (￨3￨f String￨4￨p name￨4￨p ,￨4￨p JavaArchive￨4￨p archive￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f start￨3￨f (￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f stop￨3￨f (￨3￨f StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f ServerDeploymentRepository￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f byte￨3￨f [￨3￨f ]￨3￨f addDeploymentContent￨3￨f (￨3￨f String￨3￨f name￨3￨f ,￨3￨f String￨3￨f runtimeName￨3￨f ,￨3￨f InputStream￨3￨f stream￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Closeable￨3￨f mountDeploymentContent￨3￨f (￨3￨f String￨3￨f name￨3￨f ,￨3￨f String￨3￨f runtimeName￨3￨f ,￨3￨f byte￨3￨f [￨3￨f ]￨3￨f deploymentHash￨3￨f ,￨3￨f VirtualFile￨3￨f mountPoint￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d Version￨1￨d {￨1￨d private￨2￨f Version￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f id￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "4.5"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ClassicalRungeKuttaIntegratorTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMissedEndEvent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSanityChecks￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDecreasingSteps￨2￨f (￨2￨f )￨2￨f {￨2￨f TestProblemAbstract￨3￨e [￨3￨e ]￨3￨e problems￨3￨e =￨3￨e TestProblemFactory￨3￨e .￨3￨e getProblems￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c k￨4￨c =￨4￨c 0￨4￨c ;￨4￨c k￨4￨c <￨4￨c (￨4￨c problems￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c ++￨4￨c k￨4￨c )￨3￨l {￨3￨l double￨4￨e previousValueError￨4￨e =￨4￨e Double￨4￨e .￨4￨e NaN￨4￨e ;￨4￨e double￨4￨e previousTimeError￨4￨e =￨4￨e Double￨4￨e .￨4￨e NaN￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 4￨5￨c ;￨5￨c i￨5￨c <￨5￨c 10￨5￨c ;￨5￨c ++￨5￨c i￨5￨c )￨4￨l {￨4￨l TestProblemAbstract￨5￨e pb￨5￨e =￨5￨e problems￨5￨e [￨5￨e k￨5￨e ]￨5￨e .￨5￨e copy￨5￨e (￨5￨e )￨5￨e ;￨5￨e double￨5￨e step￨5￨e =￨5￨e (￨5￨e (￨5￨e pb￨5￨e .￨5￨e getFinalTime￨5￨e (￨5￨e )￨5￨e )￨5￨e -￨5￨e (￨5￨e pb￨5￨e .￨5￨e getInitialTime￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e *￨5￨e (￨5￨e FastMath￨5￨e .￨5￨e pow￨5￨e (￨5￨e 2.0￨5￨e ,￨5￨e (￨5￨e -￨5￨e i￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e FirstOrderIntegrator￨5￨e integ￨5￨e =￨5￨e new￨5￨e ClassicalRungeKuttaIntegrator￨5￨e (￨5￨e step￨5￨e )￨5￨e ;￨5￨e TestProblemHandler￨5￨e handler￨5￨e =￨5￨e new￨5￨e TestProblemHandler￨5￨e (￨5￨e pb￨5￨e ,￨5￨e integ￨5￨e )￨5￨e ;￨5￨e integ￨5￨e .￨5￨e addStepHandler￨5￨e (￨5￨e handler￨5￨e )￨5￨e ;￨5￨e EventHandler￨5￨e [￨5￨e ]￨5￨e functions￨5￨e =￨5￨e pb￨5￨e .￨5￨e getEventsHandlers￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c l￨6￨c =￨6￨c 0￨6￨c ;￨6￨c l￨6￨c <￨6￨c (￨6￨c functions￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c ++￨6￨c l￨6￨c )￨5￨l {￨5￨l integ￨6￨e .￨6￨e addEventHandler￨6￨e (￨6￨e functions￨6￨e [￨6￨e l￨6￨e ]￨6￨e ,￨6￨e Double￨6￨e .￨6￨e POSITIVE_INFINITY￨6￨e ,￨6￨e (￨6￨e 1.0E-6￨6￨e *￨6￨e step￨6￨e )￨6￨e ,￨6￨e 1000￨6￨e )￨6￨e ;￨6￨e }￨5￨l Assert￨5￨e .￨5￨e assertEquals￨5￨e (￨5￨e functions￨5￨e .￨5￨e length￨5￨e ,￨5￨e integ￨5￨e .￨5￨e getEventHandlers￨5￨e (￨5￨e )￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e double￨5￨e stopTime￨5￨e =￨5￨e integ￨5￨e .￨5￨e integrate￨5￨e (￨5￨e pb￨5￨e ,￨5￨e pb￨5￨e .￨5￨e getInitialTime￨5￨e (￨5￨e )￨5￨e ,￨5￨e pb￨5￨e .￨5￨e getInitialState￨5￨e (￨5￨e )￨5￨e ,￨5￨e pb￨5￨e .￨5￨e getFinalTime￨5￨e (￨5￨e )￨5￨e ,￨5￨e new￨5￨e double￨5￨e [￨5￨e pb￨5￨e .￨5￨e getDimension￨5￨e (￨5￨e )￨5￨e ]￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c functions￨6￨c .￨6￨c length￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j Assert￨6￨e .￨6￨e assertEquals￨6￨e (￨6￨e pb￨6￨e .￨6￨e getFinalTime￨6￨e (￨6￨e )￨6￨e ,￨6￨e stopTime￨6￨e ,￨6￨e 1.0E-10￨6￨e )￨6￨e ;￨6￨e }￨5￨j double￨5￨e error￨5￨e =￨5￨e handler￨5￨e .￨5￨e getMaximalValueError￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j i￨6￨c >￨6￨c 4￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b Assert￨6￨b .￨6￨b assertTrue￨6￨b (￨6￨b (￨6￨b error￨6￨b <￨6￨b (￨6￨b FastMath￨6￨b .￨6￨b abs￨6￨b (￨6￨b previousValueError￨6￨b )￨6￨b )￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j previousValueError￨5￨e =￨5￨e error￨5￨e ;￨5￨e double￨5￨e timeError￨5￨e =￨5￨e handler￨5￨e .￨5￨e getMaximalTimeError￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j i￨6￨c >￨6￨c 4￨6￨c )￨5￨j {￨5￨j Assert￨6￨e .￨6￨e assertTrue￨6￨e (￨6￨e (￨6￨e timeError￨6￨e <=￨6￨e (￨6￨e FastMath￨6￨e .￨6￨e abs￨6￨e (￨6￨e previousTimeError￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j previousTimeError￨5￨e =￨5￨e timeError￨5￨e ;￨5￨e integ￨5￨e .￨5￨e clearEventHandlers￨5￨e (￨5￨e )￨5￨e ;￨5￨e Assert￨5￨e .￨5￨e assertEquals￨5￨e (￨5￨e 0￨5￨e ,￨5￨e integ￨5￨e .￨5￨e getEventHandlers￨5￨e (￨5￨e )￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨l }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSmallStep￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testBigStep￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testBackward￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testKepler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d KeplerHandler￨2￨d implements￨2￨d StepHandler￨2￨d {￨2￨d public￨3￨f KeplerHandler￨3￨f (￨3￨f TestProblem3￨4￨p pb￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f reset￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f handleStep￨3￨f (￨3￨f StepInterpolator￨4￨p interpolator￨4￨p ,￨4￨p boolean￨4￨p isLast￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨e double￨3￨e maxError￨3￨e =￨3￨e 0￨3￨e ;￨3￨e private￨3￨e TestProblem3￨3￨e pb￨3￨e ;￨3￨e }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testStepSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ReferencesSearchGroup￨1￨d extends￨1￨d ActionGroup￨1￨d {￨1￨d private￨2￨e final￨2￨e IWorkbenchSite￨2￨e site￨2￨e ;￨2￨e private￨2￨e IActionBars￨2￨e actionBars￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e groupId￨2￨e ;￨2￨e private￨2￨e SelectionDispatchAction￨2￨e findReferencesAction￨2￨e ;￨2￨e public￨2￨f ReferencesSearchGroup￨2￨f (￨2￨f final￨3￨p IWorkbenchSite￨3￨p site￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ReferencesSearchGroup￨2￨f (￨2￨f final￨3￨p AbstractXtendXpandEditor￨3￨p editor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f registerAction￨2￨f (￨2￨f final￨3￨p SelectionDispatchAction￨3￨p action￨3￨p ,￨3￨p final￨3￨p ISelectionProvider￨3￨p provider￨3￨p ,￨3￨p final￨3￨p ISelection￨3￨p selection￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addAction￨2￨f (￨2￨f final￨3￨p IAction￨3￨p action￨3￨p ,￨3￨p final￨3￨p IMenuManager￨3￨p manager￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f fillActionBars￨2￨f (￨2￨f final￨3￨p IActionBars￨3￨p actionBars￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f fillContextMenu￨2￨f (￨2￨f final￨3￨p IMenuManager￨3￨p manager￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b IMenuManager￨3￨b menuManager￨3￨b =￨3￨b new￨3￨b org￨3￨b .￨3￨b eclipse￨3￨b .￨3￨b jface￨3￨b .￨3￨b action￨3￨b .￨3￨b MenuManager￨3￨b (￨3￨b "Re&ferences"￨3￨b ,￨3￨b IContextMenuConstants￨3￨b .￨3￨b GROUP_SEARCH￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b addAction￨3￨e (￨3￨e findReferencesAction￨3￨e ,￨3￨e menuManager￨3￨e )￨3￨e ;￨3￨e menuManager￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e Separator￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c menuManager￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j manager￨4￨e .￨4￨e appendToGroup￨4￨e (￨4￨e groupId￨4￨e ,￨4￨e menuManager￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateGlobalActionHandlers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f disposeAction￨2￨f (￨2￨f final￨3￨p ISelectionChangedListener￨3￨p action￨3￨p ,￨3￨p final￨3￨p ISelectionProvider￨3￨p provider￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d StyledTextTab￨1￨d extends￨1￨d ScrollableTab￨1￨d {￨1￨d StyledText￨2￨e styledText￨2￨e ;￨2￨e Group￨2￨e styledTextGroup￨2￨e ;￨2￨e Group￨2￨e styledTextStyleGroup￨2￨e ;￨2￨e Button￨2￨e wrapButton￨2￨e ;￨2￨e Button￨2￨e readOnlyButton￨2￨e ;￨2￨e Button￨2￨e fullSelectionButton￨2￨e ;￨2￨e Button￨2￨e boldButton￨2￨e ;￨2￨e Button￨2￨e italicButton￨2￨e ;￨2￨e Button￨2￨e redButton￨2￨e ;￨2￨e Button￨2￨e yellowButton￨2￨e ;￨2￨e Button￨2￨e underlineButton￨2￨e ;￨2￨e Button￨2￨e strikeoutButton￨2￨e ;￨2￨e Image￨2￨e boldImage￨2￨e ;￨2￨e Image￨2￨e italicImage￨2￨e ;￨2￨e Image￨2￨e redImage￨2￨e ;￨2￨e Image￨2￨e yellowImage￨2￨e ;￨2￨e Image￨2￨e underlineImage￨2￨e ;￨2￨e Image￨2￨e strikeoutImage￨2￨e ;￨2￨e String￨2￨e text￨2￨e ;￨2￨e StyleRange￨2￨e [￨2￨e ]￨2￨e styleRanges￨2￨e ;￨2￨e StyledTextTab￨2￨f (￨2￨f ControlExample￨3￨p instance￨3￨p )￨2￨f {￨2￨f }￨2￨f Image￨2￨f createBitmapImage￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createControlWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createStyleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createStyledTextStyleGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Composite￨2￨f createTabFolderPage￨2￨f (￨2￨f TabFolder￨3￨p tabFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f disposeExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCustomEventNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Widget￨2￨f [￨2￨f ]￨2￨f getExampleWidgets￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f [￨2￨f ]￨2￨f getMethodNames￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b String￨3￨b [￨3￨b ]￨3￨b {￨3￨b "CaretOffset"￨3￨b ,￨3￨b "DoubleClickEnabled"￨3￨b ,￨3￨b "Editable"￨3￨b ,￨3￨b "HorizontalIndex"￨3￨b ,￨3￨b "HorizontalPixel"￨3￨b ,￨3￨b "Orientation"￨3￨b ,￨3￨b "Selection"￨3￨b ,￨3￨b "Tabs"￨3￨b ,￨3￨b "Text"￨3￨b ,￨3￨b "TextLimit"￨3￨b ,￨3￨b "ToolTipText"￨3￨b ,￨3￨b "TopIndex"￨3￨b ,￨3￨b "TopPixel"￨3￨b ,￨3￨b "WordWrap"￨3￨b }￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f String￨2￨f getTabText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f hookCustomListener￨2￨f (￨2￨f final￨3￨p String￨3￨p eventName￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setExampleWidgetState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d CreateTypeMemberOperation￨1￨d extends￨1￨d CreateElementInCUOperation￨1￨d {￨1￨d protected￨2￨e String￨2￨e source￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e String￨2￨e alteredName￨2￨e ;￨2￨e protected￨2￨e ASTNode￨2￨e createdNode￨2￨e ;￨2￨e public￨2￨f CreateTypeMemberOperation￨2￨f (￨2￨f IJavaElement￨3￨p parentElement￨3￨p ,￨3￨p String￨3￨p source￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f StructuralPropertyDescriptor￨2￨f getChildPropertyDescriptor￨2￨f (￨2￨f ASTNode￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ASTNode￨2￨f generateElementAST￨2￨f (￨2￨f ASTRewrite￨2￨f rewriter￨2￨f ,￨2￨f ICompilationUnit￨2￨f cu￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f removeIndentAndNewLines￨2￨f (￨2￨f String￨2￨f code￨2￨f ,￨2￨f ICompilationUnit￨2￨f cu￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f SimpleName￨2￨f rename￨2￨f (￨2￨f ASTNode￨3￨p node￨3￨p ,￨3￨p SimpleName￨3￨p newName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f generateSyntaxIncorrectAST￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IType￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setAlteredName￨2￨f (￨2￨f String￨3￨p newName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaModelStatus￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f IJavaModelStatus￨3￨e status￨3￨e =￨3￨e super￨3￨e .￨3￨e verify￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c status￨4￨c .￨4￨c isOK￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e status￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c source￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e JavaModelStatus￨4￨e (￨4￨e IJavaModelStatusConstants￨4￨e .￨4￨e INVALID_CONTENTS￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b force￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b try￨3￨f (￨3￨f )￨3￨f {￨3￨f ICompilationUnit￨4￨e cu￨4￨e =￨4￨e getCompilationUnit￨4￨e (￨4￨e )￨4￨e ;￨4￨e generateElementAST￨4￨e (￨4￨e null￨4￨e ,￨4￨e cu￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f JavaModelException￨4￨p jme￨4￨p )￨3￨f {￨3￨f return￨4￨e jme￨4￨e .￨4￨e getJavaModelStatus￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e verifyNameCollision￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨3￨e return￨3￨e JavaModelStatus￨3￨e .￨3￨e VERIFIED_OK￨3￨e ;￨3￨e }￨2￨f protected￨2￨f IJavaModelStatus￨2￨f verifyNameCollision￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AndAnnotationTypePattern￨1￨d extends￨1￨d AnnotationTypePattern￨1￨d {￨1￨d private￨2￨e AnnotationTypePattern￨2￨e left￨2￨e ;￨2￨e private￨2￨e AnnotationTypePattern￨2￨e right￨2￨e ;￨2￨e public￨2￨f AndAnnotationTypePattern￨2￨f (￨2￨f AnnotationTypePattern￨3￨p left￨3￨p ,￨3￨p AnnotationTypePattern￨3￨p right￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f matches￨2￨f (￨2￨f AnnotatedElement￨3￨p annotated￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotationTypePattern￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p ,￨3￨p boolean￨3￨p allowBinding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f AnnotationTypePattern￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b (￨3￨b "("￨3￨b +￨3￨b (￨3￨b left￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b +￨3￨b "<seq2seq4repair_space>&&<seq2seq4repair_space>"￨3￨b )￨3￨b +￨3￨b (￨3￨b right￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b +￨3￨b ")"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f AnnotationTypePattern￨2￨f getLeft￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotationTypePattern￨2￨f getRight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d EmbedBlob￨1￨d extends￨1￨d ConnectionChild￨1￨d implements￨1￨d Blob￨1￨d ,￨1￨d EngineLOB￨1￨d {￨1￨d private￨2￨e boolean￨2￨e materialized￨2￨e ;￨2￨e private￨2￨e PositionedStoreStream￨2￨e myStream￨2￨e ;￨2￨e private￨2￨e int￨2￨e locator￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e long￨2￨e streamLength￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e streamPositionOffset￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isValid￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e LOBStreamControl￨2￨e control￨2￨e ;￨2￨e EmbedBlob￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f blobBytes￨2￨f ,￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f EmbedBlob￨2￨f (￨2￨f DataValueDescriptor￨2￨f dvd￨2￨f ,￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f handleStreamValue￨2￨f (￨2￨f InputStream￨2￨f dvdStream￨2￨f ,￨2￨f EmbedConnection￨2￨f con￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f setBlobPosition￨2￨f (￨2￨f long￨2￨f logicalPos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f read￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f length￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getBytes￨2￨f (￨2￨f long￨2￨f startPos￨2￨f ,￨2￨f int￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getBinaryStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkMatch￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f position￨2￨f (￨2￨f Blob￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f start￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f checkMatch￨2￨f (￨2￨f Blob￨2￨f pattern￨2￨f ,￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SQLException￨2￨f handleMyExceptions￨2￨f (￨2￨f Throwable￨2￨f t￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f finalize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setBytes￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f setBytes￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f ,￨2￨f int￨2￨f offset￨2￨f ,￨2￨f int￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f checkValidity￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c pos￨4￨c -￨4￨c 1￨4￨c )￨4￨c >￨4￨c (￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_POSITION_TOO_LARGE￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e pos￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j pos￨4￨c <￨4￨c 1￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_BAD_POSITION￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e pos￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c offset￨4￨c <￨4￨c 0￨4￨c )￨4￨c ||￨4￨c (￨4￨c offset￨4￨c >￨4￨c (￨4￨c bytes￨4￨c .￨4￨c length￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_INVALID_OFFSET￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e offset￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j len￨4￨c <￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e BLOB_NONPOSITIVE_LENGTH￨4￨e ,￨4￨e new￨4￨e Long￨4￨e (￨4￨e len￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j len￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j return￨4￨e 0￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b len￨3￨b +￨3￨b offset￨3￨b )￨3￨b >￨3￨b (￨3￨b bytes￨3￨b .￨3￨b length￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b throw￨3￨e Util￨3￨e .￨3￨e generateCsSQLException￨3￨e (￨3￨e BLOB_LENGTH_TOO_LONG￨3￨e ,￨3￨e new￨3￨e Long￨3￨e (￨3￨e len￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j materialized￨5￨c )￨4￨j {￨4￨j control￨5￨e .￨5￨e write￨5￨e (￨5￨e bytes￨5￨e ,￨5￨e offset￨5￨e ,￨5￨e len￨5￨e ,￨5￨e (￨5￨e pos￨5￨e -￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j control￨5￨e =￨5￨e new￨5￨e LOBStreamControl￨5￨e (￨5￨e getEmbedConnection￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e control￨5￨e .￨5￨e copyData￨5￨e (￨5￨e myStream￨5￨e ,￨5￨e length￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e control￨5￨e .￨5￨e write￨5￨e (￨5￨e bytes￨5￨e ,￨5￨e offset￨5￨e ,￨5￨e len￨5￨e ,￨5￨e (￨5￨e pos￨5￨e -￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e myStream￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e streamLength￨5￨e =￨5￨e -￨5￨e 1￨5￨e ;￨5￨e materialized￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j return￨4￨e len￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e Util￨4￨e .￨4￨e setStreamFailure￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f StandardException￨4￨p se￨4￨p )￨3￨f {￨3￨f throw￨4￨e Util￨4￨e .￨4￨e generateCsSQLException￨4￨e (￨4￨e se￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f OutputStream￨2￨f setBinaryStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f truncate￨2￨f (￨2￨f long￨2￨f len￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f free￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getBinaryStream￨2￨f (￨2￨f long￨2￨f pos￨2￨f ,￨2￨f long￨2￨f length￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkValidity￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isMaterialized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLocator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DistributableSingleSignOnManagerFactoryBuilder￨1￨d implements￨1￨d org￨1￨d .￨1￨d wildfly￨1￨d .￨1￨d extension￨1￨d .￨1￨d undertow￨1￨d .￨1￨d security￨1￨d .￨1￨d sso￨1￨d .￨1￨d DistributableSingleSignOnManagerFactoryBuilder￨1￨d {￨1￨d private￨2￨f static￨2￨f SSOManagerFactoryBuilder￨2￨f load￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e SSOManagerFactoryBuilder￨2￨e builder￨2￨e ;￨2￨e public￨2￨f DistributableSingleSignOnManagerFactoryBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f DistributableSingleSignOnManagerFactoryBuilder￨2￨f (￨2￨f SSOManagerFactoryBuilder￨3￨p builder￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServiceBuilder￨2￨f <￨2￨f SingleSignOnManagerFactory￨2￨f >￨2￨f build￨2￨f (￨2￨f ServiceTarget￨3￨p target￨3￨p ,￨3￨p ServiceName￨3￨p name￨3￨p ,￨3￨p final￨3￨p ServiceName￨3￨p hostServiceName￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b ServiceName￨3￨b managerServiceName￨3￨b =￨3￨b name￨3￨b .￨3￨b append￨3￨b (￨3￨b "clustering"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b this￨3￨e .￨3￨e builder￨3￨e .￨3￨e build￨3￨e (￨3￨e target￨3￨e ,￨3￨e managerServiceName￨3￨e ,￨3￨e hostServiceName￨3￨e .￨3￨e getSimpleName￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e setInitialMode￨3￨e (￨3￨e ON_DEMAND￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e SessionManagerRegistryService￨3￨e .￨3￨e build￨3￨e (￨3￨e target￨3￨e ,￨3￨e hostServiceName￨3￨e )￨3￨e .￨3￨e setInitialMode￨3￨e (￨3￨e ON_DEMAND￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e DistributableSingleSignOnManagerFactoryService￨3￨e .￨3￨e build￨3￨e (￨3￨e target￨3￨e ,￨3￨e name￨3￨e ,￨3￨e hostServiceName￨3￨e ,￨3￨e managerServiceName￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SimpleSortedSetFacetsExample￨1￨d {￨1￨d private￨2￨e final￨2￨e Directory￨2￨e indexDir￨2￨e =￨2￨e new￨2￨e RAMDirectory￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e FacetsConfig￨2￨e config￨2￨e =￨2￨e new￨2￨e FacetsConfig￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f SimpleSortedSetFacetsExample￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f index￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f IndexWriter￨3￨e indexWriter￨3￨e =￨3￨e new￨3￨e IndexWriter￨3￨e (￨3￨e indexDir￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e index￨3￨e .￨3￨e IndexWriterConfig￨3￨e (￨3￨e FacetExamples￨3￨e .￨3￨e EXAMPLES_VER￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e analysis￨3￨e .￨3￨e core￨3￨e .￨3￨e WhitespaceAnalyzer￨3￨e (￨3￨e FacetExamples￨3￨e .￨3￨e EXAMPLES_VER￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Document￨3￨e doc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Author"￨3￨e ,￨3￨e "Bob"￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Publish<seq2seq4repair_space>Year"￨3￨e ,￨3￨e "2010"￨3￨e )￨3￨e )￨3￨e ;￨3￨e indexWriter￨3￨e .￨3￨e addDocument￨3￨e (￨3￨e config￨3￨e .￨3￨e build￨3￨e (￨3￨e doc￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Author"￨3￨e ,￨3￨e "Lisa"￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Publish<seq2seq4repair_space>Year"￨3￨e ,￨3￨e "2010"￨3￨e )￨3￨e )￨3￨e ;￨3￨e indexWriter￨3￨e .￨3￨e addDocument￨3￨e (￨3￨e config￨3￨e .￨3￨e build￨3￨e (￨3￨e doc￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Author"￨3￨e ,￨3￨e "Lisa"￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Publish<seq2seq4repair_space>Year"￨3￨e ,￨3￨e "2012"￨3￨e )￨3￨e )￨3￨e ;￨3￨e indexWriter￨3￨e .￨3￨e addDocument￨3￨e (￨3￨e config￨3￨e .￨3￨e build￨3￨e (￨3￨e doc￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Author"￨3￨e ,￨3￨e "Susan"￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Publish<seq2seq4repair_space>Year"￨3￨e ,￨3￨e "2012"￨3￨e )￨3￨e )￨3￨e ;￨3￨e indexWriter￨3￨e .￨3￨e addDocument￨3￨e (￨3￨e config￨3￨e .￨3￨e build￨3￨e (￨3￨e doc￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e =￨3￨e new￨3￨e Document￨3￨e (￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Author"￨3￨e ,￨3￨e "Frank"￨3￨e )￨3￨e )￨3￨e ;￨3￨e doc￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e SortedSetDocValuesFacetField￨3￨e (￨3￨e "Publish<seq2seq4repair_space>Year"￨3￨e ,￨3￨e "1999"￨3￨e )￨3￨e )￨3￨e ;￨3￨e indexWriter￨3￨e .￨3￨e addDocument￨3￨e (￨3￨e config￨3￨e .￨3￨e build￨3￨e (￨3￨e doc￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b indexWriter￨3￨b .￨3￨b close￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f List￨2￨f <￨2￨f FacetResult￨2￨f >￨2￨f search￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f FacetResult￨2￨f drillDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f FacetResult￨2￨f >￨2￨f runSearch￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FacetResult￨2￨f runDrillDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ResolvedPointcutDefinition￨1￨d extends￨1￨d ResolvedMember￨1￨d {￨1￨d private￨2￨e Pointcut￨2￨e pointcut￨2￨e ;￨2￨e public￨2￨f ResolvedPointcutDefinition￨2￨f (￨2￨f TypeX￨3￨p declaringType￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p TypeX￨3￨p [￨3￨p ]￨3￨p parameterTypes￨3￨p ,￨3￨p Pointcut￨3￨p pointcut￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ResolvedPointcutDefinition￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f StringBuffer￨3￨e buf￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b buf￨3￨b .￨3￨b append￨3￨b (￨3￨b "poincut<seq2seq4repair_space>"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b buf￨3￨e .￨3￨e append￨3￨e (￨3￨e getDeclaringType￨3￨e (￨3￨e )￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "."￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "("￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c getParameterTypes￨4￨c (￨4￨c )￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j i￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j buf￨5￨e .￨5￨e append￨5￨e (￨5￨e ",<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e }￨4￨j buf￨4￨e .￨4￨e append￨4￨e (￨4￨e getParameterTypes￨4￨e (￨4￨e )￨4￨e [￨4￨e i￨4￨e ]￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l buf￨3￨e .￨3￨e append￨3￨e (￨3￨e ")"￨3￨e )￨3￨e ;￨3￨e return￨3￨e buf￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f Pointcut￨2￨f getPointcut￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAjSynthetic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨e static￨2￨e final￨2￨e ResolvedPointcutDefinition￨2￨e DUMMY￨2￨e =￨2￨e new￨2￨e ResolvedPointcutDefinition￨2￨e (￨2￨e TypeX￨2￨e .￨2￨e OBJECT￨2￨e ,￨2￨e 0￨2￨e ,￨2￨e "missing"￨2￨e ,￨2￨e TypeX￨2￨e .￨2￨e NONE￨2￨e ,￨2￨e Pointcut￨2￨e .￨2￨e makeMatchesNothing￨2￨e (￨2￨e RESOLVED￨2￨e )￨2￨e )￨2￨e ;￨2￨e }￨1￨d
public￨1￨d class￨1￨d PackageFragment￨1￨d extends￨1￨d Openable￨1￨d implements￨1￨d IPackageFragment￨1￨d ,￨1￨d SuffixConstants￨1￨d {￨1￨d protected￨2￨f static￨2￨f final￨2￨f IClassFile￨2￨f [￨2￨f ]￨2￨f NO_CLASSFILES￨2￨f =￨2￨f new￨2￨f IClassFile￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e protected￨2￨f static￨2￨f final￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f NO_COMPILATION_UNITS￨2￨f =￨2￨f new￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e protected￨2￨f PackageFragment￨2￨f (￨2￨f PackageFragmentRoot￨3￨p root￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f buildStructure￨2￨f (￨2￨f OpenableElementInfo￨2￨f info￨2￨f ,￨2￨f IProgressMonitor￨2￨f pm￨2￨f ,￨2￨f Map￨2￨f newElements￨2￨f ,￨2￨f IResource￨2￨f underlyingResource￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f containsJavaResources￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copy￨2￨f (￨2￨f IJavaElement￨2￨f container￨2￨f ,￨2￨f IJavaElement￨2￨f sibling￨2￨f ,￨2￨f String￨2￨f rename￨2￨f ,￨2￨f boolean￨2￨f force￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ICompilationUnit￨2￨f createCompilationUnit￨2￨f (￨2￨f String￨2￨f cuName￨2￨f ,￨2￨f String￨2￨f contents￨2￨f ,￨2￨f boolean￨2￨f force￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f CreateCompilationUnitOperation￨3￨e op￨3￨e =￨3￨e new￨3￨e CreateCompilationUnitOperation￨3￨e (￨3￨e this￨3￨e ,￨3￨e cuName￨3￨e ,￨3￨e contents￨3￨e ,￨3￨e force￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b runOperation￨3￨b (￨3￨b op￨3￨b ,￨3￨b monitor￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e new￨3￨e CompilationUnit￨3￨e (￨3￨e this￨3￨e ,￨3￨e cuName￨3￨e ,￨3￨e DefaultWorkingCopyOwner￨3￨e .￨3￨e PRIMARY￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f Object￨2￨f createElementInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f delete￨2￨f (￨2￨f boolean￨2￨f force￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IClassFile￨2￨f getClassFile￨2￨f (￨2￨f String￨3￨p classFileName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IClassFile￨2￨f [￨2￨f ]￨2￨f getClassFiles￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ICompilationUnit￨2￨f getCompilationUnit￨2￨f (￨2￨f String￨3￨p cuName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f getCompilationUnits￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ICompilationUnit￨2￨f [￨2￨f ]￨2￨f getCompilationUnits￨2￨f (￨2￨f WorkingCopyOwner￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getElementType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getHandleFromMemento￨2￨f (￨2￨f String￨3￨p token￨3￨p ,￨3￨p StringTokenizer￨3￨p memento￨3￨p ,￨3￨p WorkingCopyOwner￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f char￨2￨f getHandleMementoDelimiter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getKind￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getNonJavaResources￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPath￨2￨f getPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IResource￨2￨f getResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IResource￨2￨f getUnderlyingResource￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasSubpackages￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDefaultPackage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f move￨2￨f (￨2￨f IJavaElement￨2￨f container￨2￨f ,￨2￨f IJavaElement￨2￨f sibling￨2￨f ,￨2￨f String￨2￨f rename￨2￨f ,￨2￨f boolean￨2￨f force￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f rename￨2￨f (￨2￨f String￨2￨f newName￨2￨f ,￨2￨f boolean￨2￨f force￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringChildren￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p ,￨3￨p Object￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringInfo￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p ,￨3￨p Object￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d XSDHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e int￨2￨e ATTRIBUTE_TYPE￨2￨e =￨2￨e 1￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e ATTRIBUTEGROUP_TYPE￨2￨e =￨2￨e 2￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e ELEMENT_TYPE￨2￨e =￨2￨e 3￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e GROUP_TYPE￨2￨e =￨2￨e 4￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e IDENTITYCONSTRAINT_TYPE￨2￨e =￨2￨e 5￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e NOTATION_TYPE￨2￨e =￨2￨e 6￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e TYPEDECL_TYPE￨2￨e =￨2￨e 7￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e REDEF_IDENTIFIER￨2￨e =￨2￨e "_fn3dktizrknc9pi"￨2￨e ;￨2￨e public￨2￨e String￨2￨e EMPTY_STRING￨2￨e ;￨2￨e protected￨2￨e Hashtable￨2￨e fNotationRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedAttributeRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedAttributeGroupRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedElementRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedGroupRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedIdentityConstraintRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedNotationRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fUnparsedTypeRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fXSDocumentInfoRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fDependencyMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e fTraversed￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e XSDocumentInfo￨2￨e fRoot￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fDoc2XSDocumentMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fRedefine2XSDMap￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fRedefinedRestrictedAttributeGroupRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e fRedefinedRestrictedGroupRegistry￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e XMLErrorReporter￨2￨e fErrorReporter￨2￨e ;￨2￨e private￨2￨e XSAttributeChecker￨2￨e fAttributeChecker￨2￨e ;￨2￨e private￨2￨e SubstitutionGroupHandler￨2￨e fSubGroupHandler￨2￨e ;￨2￨e private￨2￨e XMLEntityResolver￨2￨e fEntityResolver￨2￨e ;￨2￨e private￨2￨e SymbolTable￨2￨e fSymbolTable￨2￨e ;￨2￨e private￨2￨e XSGrammarResolver￨2￨e fGrammarResolver￨2￨e ;￨2￨e XSDAttributeGroupTraverser￨2￨e fAttributeGroupTraverser￨2￨e ;￨2￨e XSDAttributeTraverser￨2￨e fAttributeTraverser￨2￨e ;￨2￨e XSDComplexTypeTraverser￨2￨e fComplexTypeTraverser￨2￨e ;￨2￨e XSDElementTraverser￨2￨e fElementTraverser￨2￨e ;￨2￨e XSDGroupTraverser￨2￨e fGroupTraverser￨2￨e ;￨2￨e XSDKeyrefTraverser￨2￨e fKeyrefTraverser￨2￨e ;￨2￨e XSDNotationTraverser￨2￨e fNotationTraverser￨2￨e ;￨2￨e XSDSimpleTypeTraverser￨2￨e fSimpleTypeTraverser￨2￨e ;￨2￨e XSDUniqueOrKeyTraverser￨2￨e fUniqueOrKeyTraverser￨2￨e ;￨2￨e XSDWildcardTraverser￨2￨e fWildCardTraverser￨2￨e ;￨2￨e DOMParser￨2￨e fSchemaParser￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INIT_STACK_SIZE￨2￨e =￨2￨e 30￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e INC_STACK_SIZE￨2￨e =￨2￨e 10￨2￨e ;￨2￨e private￨2￨e int￨2￨e fLocalElemStackPos￨2￨e ;￨2￨e private￨2￨e XSParticleDecl￨2￨e [￨2￨e ]￨2￨e fParticle￨2￨e ;￨2￨e private￨2￨e Element￨2￨e [￨2￨e ]￨2￨e fLocalElementDecl￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e fAllContext￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e fLocalElemNamespaceContext￨2￨e ;￨2￨e XSDHandler￨2￨f (￨2￨f XSGrammarResolver￨3￨p gResolver￨3￨p )￨2￨f {￨2￨f }￨2￨f SchemaGrammar￨2￨f parseSchema￨2￨f (￨2￨f String￨3￨p schemaNamespace￨3￨p ,￨3￨p String￨3￨p schemaHint￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f XSDocumentInfo￨2￨f constructTrees￨2￨f (￨2￨f Document￨3￨p schemaRoot￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j schemaRoot￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j XSDocumentInfo￨3￨e currSchemaInfo￨3￨e =￨3￨e new￨3￨e XSDocumentInfo￨3￨e (￨3￨e schemaRoot￨3￨e ,￨3￨e fAttributeChecker￨3￨e ,￨3￨e fSymbolTable￨3￨e )￨3￨e ;￨3￨e SchemaGrammar￨3￨e sg￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c sg￨4￨c =￨4￨c fGrammarResolver￨4￨c .￨4￨c getGrammar￨4￨c (￨4￨c currSchemaInfo￨4￨c .￨4￨c fTargetNamespace￨4￨c )￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j sg￨4￨e =￨4￨e new￨4￨e SchemaGrammar￨4￨e (￨4￨e fSymbolTable￨4￨e ,￨4￨e currSchemaInfo￨4￨e .￨4￨e fTargetNamespace￨4￨e )￨4￨e ;￨4￨e fGrammarResolver￨4￨e .￨4￨e putGrammar￨4￨e (￨4￨e sg￨4￨e )￨4￨e ;￨4￨e }￨3￨j Vector￨3￨e dependencies￨3￨e =￨3￨e new￨3￨e Vector￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b dependencies￨3￨b .￨3￨b add￨3￨b (￨3￨b currSchemaInfo￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Element￨3￨e rootNode￨3￨e =￨3￨e DOMUtil￨3￨e .￨3￨e getRoot￨3￨e (￨3￨e schemaRoot￨3￨e )￨3￨e ;￨3￨e String￨3￨e schemaNamespace￨3￨e =￨3￨e EMPTY_STRING￨3￨e ;￨3￨e String￨3￨e schemaHint￨3￨e =￨3￨e EMPTY_STRING￨3￨e ;￨3￨e Document￨3￨e newSchemaRoot￨3￨e =￨3￨e null￨3￨e ;￨3￨e for￨3￨l (￨3￨l Element￨4￨c child￨4￨c =￨4￨c DOMUtil￨4￨c .￨4￨c getFirstChildElement￨4￨c (￨4￨c rootNode￨4￨c )￨4￨c ;￨4￨c child￨4￨c !=￨4￨c null￨4￨c ;￨4￨c child￨4￨c =￨4￨c DOMUtil￨4￨c .￨4￨c getNextSiblingElement￨4￨c (￨4￨c child￨4￨c )￨4￨c )￨3￨l {￨3￨l String￨4￨e localName￨4￨e =￨4￨e DOMUtil￨4￨e .￨4￨e getLocalName￨4￨e (￨4￨e child￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j localName￨5￨c .￨5￨c equals￨5￨c (￨5￨c ELT_ANNOTATION￨5￨c )￨5￨c )￨4￨j {￨4￨j continue￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j localName￨5￨c .￨5￨c equals￨5￨c (￨5￨c ELT_IMPORT￨5￨c )￨5￨c )￨4￨j {￨4￨j Object￨5￨e [￨5￨e ]￨5￨e includeAttrs￨5￨e =￨5￨e fAttributeChecker￨5￨e .￨5￨e checkAttributes￨5￨e (￨5￨e child￨5￨e ,￨5￨e true￨5￨e ,￨5￨e currSchemaInfo￨5￨e )￨5￨e ;￨5￨e schemaHint￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e includeAttrs￨5￨e [￨5￨e XSAttributeChecker￨5￨e .￨5￨e ATTIDX_SCHEMALOCATION￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e schemaNamespace￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e includeAttrs￨5￨e [￨5￨e XSAttributeChecker￨5￨e .￨5￨e ATTIDX_NAMESPACE￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e fAttributeChecker￨5￨e .￨5￨e returnAttrArray￨5￨e (￨5￨e includeAttrs￨5￨e ,￨5￨e currSchemaInfo￨5￨e )￨5￨e ;￨5￨e newSchemaRoot￨5￨e =￨5￨e getSchema￨5￨e (￨5￨e schemaNamespace￨5￨e ,￨5￨e schemaHint￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c localName￨5￨c .￨5￨c equals￨5￨c (￨5￨c ELT_INCLUDE￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c localName￨5￨c .￨5￨c equals￨5￨c (￨5￨c ELT_REDEFINE￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j Object￨5￨e [￨5￨e ]￨5￨e includeAttrs￨5￨e =￨5￨e fAttributeChecker￨5￨e .￨5￨e checkAttributes￨5￨e (￨5￨e child￨5￨e ,￨5￨e true￨5￨e ,￨5￨e currSchemaInfo￨5￨e )￨5￨e ;￨5￨e schemaHint￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e includeAttrs￨5￨e [￨5￨e XSAttributeChecker￨5￨e .￨5￨e ATTIDX_SCHEMALOCATION￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e fAttributeChecker￨5￨e .￨5￨e returnAttrArray￨5￨e (￨5￨e includeAttrs￨5￨e ,￨5￨e currSchemaInfo￨5￨e )￨5￨e ;￨5￨e newSchemaRoot￨5￨e =￨5￨e getSchema￨5￨e (￨5￨e EMPTY_STRING￨5￨e ,￨5￨e schemaHint￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j XSDocumentInfo￨4￨e newSchemaInfo￨4￨e =￨4￨e constructTrees￨4￨e (￨4￨e newSchemaRoot￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j localName￨5￨c .￨5￨c equals￨5￨c (￨5￨c ELT_REDEFINE￨5￨c )￨5￨c )￨4￨j {￨4￨j fRedefine2XSDMap￨5￨e .￨5￨e put￨5￨e (￨5￨e child￨5￨e ,￨5￨e newSchemaInfo￨5￨e )￨5￨e ;￨5￨e }￨4￨j dependencies￨4￨e .￨4￨e addElement￨4￨e (￨4￨e newSchemaInfo￨4￨e )￨4￨e ;￨4￨e fDoc2XSDocumentMap￨4￨e .￨4￨e put￨4￨e (￨4￨e newSchemaRoot￨4￨e ,￨4￨e newSchemaInfo￨4￨e )￨4￨e ;￨4￨e newSchemaRoot￨4￨e =￨4￨e null￨4￨e ;￨4￨e }￨3￨l fDependencyMap￨3￨e .￨3￨e put￨3￨e (￨3￨e currSchemaInfo￨3￨e ,￨3￨e dependencies￨3￨e )￨3￨e ;￨3￨e return￨3￨e currSchemaInfo￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f buildGlobalNameRegistries￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f traverseSchemas￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f getGlobalDecl￨2￨f (￨2￨f XSDocumentInfo￨3￨p currSchema￨3￨p ,￨3￨p int￨3￨p declType￨3￨p ,￨3￨p QName￨3￨p declToTraverse￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f resolveKeyRefs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Document￨2￨f getSchema￨2￨f (￨2￨f String￨3￨p schemaNamespace￨3￨p ,￨3￨p String￨3￨p schemaHint￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createTraversers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f reset￨2￨f (￨2￨f XMLErrorReporter￨3￨p errorReporter￨3￨p ,￨3￨p XMLEntityResolver￨3￨p entityResolver￨3￨p ,￨3￨p SymbolTable￨3￨p symbolTable￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f traverseLocalElements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f fillInLocalElemInfo￨2￨f (￨2￨f Element￨3￨p elmDecl￨3￨p ,￨3￨p XSDocumentInfo￨3￨p schemaDoc￨3￨p ,￨3￨p int￨3￨p allContextFlags￨3￨p ,￨3￨p XSParticleDecl￨3￨p particle￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkForDuplicateNames￨2￨f (￨2￨f String￨3￨p qName￨3￨p ,￨3￨p Hashtable￨3￨p registry￨3￨p ,￨3￨p Element￨3￨p currComp￨3￨p ,￨3￨p XSDocumentInfo￨3￨p currSchema￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f resolvePrefixToURI￨2￨f (￨2￨f String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f renameRedefiningComponents￨2￨f (￨2￨f XSDocumentInfo￨3￨p currSchema￨3￨p ,￨3￨p Element￨3￨p child￨3￨p ,￨3￨p String￨3￨p componentType￨3￨p ,￨3￨p String￨3￨p oldName￨3￨p ,￨3￨p String￨3￨p newName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f findQName￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p SchemaNamespaceSupport￨3￨p currNSMap￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f changeRedefineGroup￨2￨f (￨2￨f String￨3￨p originalQName￨3￨p ,￨3￨p String￨3￨p elementSought￨3￨p ,￨3￨p String￨3￨p newName￨3￨p ,￨3￨p Element￨3￨p curr￨3￨p ,￨3￨p SchemaNamespaceSupport￨3￨p currNSMap￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f XSDocumentInfo￨2￨f findXSDocumentForDecl￨2￨f (￨2￨f XSDocumentInfo￨3￨p currSchema￨3￨p ,￨3￨p Element￨3￨p decl￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setSchemasVisible￨2￨f (￨2￨f XSDocumentInfo￨3￨p startSchema￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d DummyResolver￨2￨d implements￨2￨d EntityResolver￨2￨d {￨2￨d public￨3￨f InputSource￨3￨f resolveEntity￨3￨f (￨3￨f String￨3￨f pubId￨3￨f ,￨3￨f String￨3￨f sysId￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f ,￨3￨f SAXException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d Util￨1￨d {￨1￨d static￨2￨e ThreadLocal￨2￨e <￨2￨e ClassLoader￨2￨e >￨2￨e storedClassLoaders￨2￨e =￨2￨e new￨2￨e ThreadLocal￨2￨e <￨2￨e ClassLoader￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f storeContextClassloader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f restoreContextClassloader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f fixContextClassloader￨2￨f (￨2￨f String￨3￨p cls￨3￨p ,￨3￨p String￨3￨p method￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clsArg￨3￨p ,￨3￨p ClassLoader￨3￨p bundleLoader￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ClassLoader￨2￨f findContextClassloader￨2￨f (￨2￨f Bundle￨3￨p consumerBundle￨3￨p ,￨3￨p String￨3￨p className￨3￨p ,￨3￨p String￨3￨p methodName￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clsArg￨3￨p )￨2￨f {￨2￨f Activator￨3￨e activator￨3￨e =￨3￨e Activator￨3￨e .￨3￨e activator￨3￨e ;￨3￨e String￨3￨e requestedClass￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c ServiceLoader￨4￨c .￨4￨c class￨4￨c .￨4￨c getName￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c className￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c "load"￨4￨c .￨4￨c equals￨4￨c (￨4￨c methodName￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j requestedClass￨4￨e =￨4￨e clsArg￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j requestedClass￨4￨e =￨4￨e className￨4￨e ;￨4￨e }￨3￨j Collection￨3￨e <￨3￨e Bundle￨3￨e >￨3￨e bundles￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Bundle￨3￨e >￨3￨e (￨3￨e activator￨3￨e .￨3￨e findProviderBundles￨3￨e (￨3￨e requestedClass￨3￨e )￨3￨e )￨3￨e ;￨3￨e activator￨3￨e .￨3￨e log￨3￨e (￨3￨e LogService￨3￨e .￨3￨e LOG_DEBUG￨3￨e ,￨3￨e (￨3￨e (￨3￨e (￨3￨e "Found<seq2seq4repair_space>bundles<seq2seq4repair_space>providing<seq2seq4repair_space>"￨3￨e +￨3￨e requestedClass￨3￨e )￨3￨e +￨3￨e ":<seq2seq4repair_space>"￨3￨e )￨3￨e +￨3￨e bundles￨3￨e )￨3￨e )￨3￨e ;￨3￨e Map￨3￨e <￨3￨e Pair￨3￨e <￨3￨e Integer￨3￨e ,￨3￨e String￨3￨e >￨3￨e ,￨3￨e String￨3￨e >￨3￨e args￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e Pair￨3￨e <￨3￨e Integer￨3￨e ,￨3￨e String￨3￨e >￨3￨e ,￨3￨e String￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b args￨3￨b .￨3￨b put￨3￨b (￨3￨b new￨3￨b Pair￨3￨b <￨3￨b Integer￨3￨b ,￨3￨b String￨3￨b >￨3￨b (￨3￨b 1￨3￨b ,￨3￨b Class￨3￨b .￨3￨b class￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b )￨3￨b ,￨3￨b clsArg￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Collection￨3￨e <￨3￨e Bundle￨3￨e >￨3￨e allowedBundles￨3￨e =￨3￨e activator￨3￨e .￨3￨e findConsumerRestrictions￨3￨e (￨3￨e consumerBundle￨3￨e ,￨3￨e className￨3￨e ,￨3￨e methodName￨3￨e ,￨3￨e args￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j allowedBundles￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l Iterator￨5￨c <￨5￨c Bundle￨5￨c >￨5￨c it￨5￨c =￨5￨c bundles￨5￨c .￨5￨c iterator￨5￨c (￨5￨c )￨5￨c ;￨5￨c it￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c ;￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j !￨6￨c (￨6￨c allowedBundles￨6￨c .￨6￨c contains￨6￨c (￨6￨c it￨6￨c .￨6￨c next￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j it￨6￨e .￨6￨e remove￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j switch￨3￨s (￨3￨s bundles￨3￨c .￨3￨c size￨3￨c (￨3￨c )￨3￨c )￨3￨s {￨3￨s case￨4￨c 0￨4￨c :￨4￨c return￨5￨e null￨5￨e ;￨5￨e case￨4￨c 1￨4￨c :￨4￨c Bundle￨5￨e bundle￨5￨e =￨5￨e bundles￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e .￨5￨e next￨5￨e (￨5￨e )￨5￨e ;￨5￨e BundleWiring￨5￨e wiring￨5￨e =￨5￨e bundle￨5￨e .￨5￨e adapt￨5￨e (￨5￨e BundleWiring￨5￨e .￨5￨e class￨5￨e )￨5￨e ;￨5￨e return￨5￨e wiring￨5￨e .￨5￨e getClassLoader￨5￨e (￨5￨e )￨5￨e ;￨5￨e default￨4￨c :￨4￨c List￨5￨e <￨5￨e ClassLoader￨5￨e >￨5￨e loaders￨5￨e =￨5￨e new￨5￨e ArrayList￨5￨e <￨5￨e ClassLoader￨5￨e >￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l Bundle￨6￨c b￨6￨c :￨6￨c bundles￨6￨c )￨5￨l {￨5￨l BundleWiring￨6￨e bw￨6￨e =￨6￨e b￨6￨e .￨6￨e adapt￨6￨e (￨6￨e BundleWiring￨6￨e .￨6￨e class￨6￨e )￨6￨e ;￨6￨e loaders￨6￨e .￨6￨e add￨6￨e (￨6￨e bw￨6￨e .￨6￨e getClassLoader￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨l return￨5￨e new￨5￨e MultiDelegationClassloader￨5￨e (￨5￨e loaders￨5￨e .￨5￨e toArray￨5￨e (￨5￨e new￨5￨e ClassLoader￨5￨e [￨5￨e loaders￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨3￨s }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CopyCommand￨1￨d extends￨1￨d FigureTransferCommand￨1￨d {￨1￨d public￨2￨f CopyCommand￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p DrawingView￨3￨p view￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isExecutable￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b fView￨3￨b .￨3￨b selectionCount￨3￨b (￨3￨b )￨3￨b )￨3￨b >￨3￨b 0￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FastViewManager￨1￨d {￨1￨d private￨2￨e Perspective￨2￨e perspective￨2￨e ;￨2￨e private￨2￨e WorkbenchPage￨2￨e page￨2￨e ;￨2￨e private￨2￨e WorkbenchWindow￨2￨e wbw￨2￨e ;￨2￨e private￨2￨e TrimLayout￨2￨e tbm￨2￨e ;￨2￨e private￨2￨e Map￨2￨e idToFastViewsMap￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e deferringUpdates￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e AnimationEngine￨2￨e batchAnimation￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e AnimationEngine￨2￨e oneShotAnimation￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨f IPerspectiveListener2￨2￨f perspListener￨2￨f =￨2￨f new￨2￨f IPerspectiveListener2￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f perspectiveActivated￨3￨f (￨3￨f IWorkbenchPage￨4￨p page￨4￨p ,￨4￨p IPerspectiveDescriptor￨4￨p perspective￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f perspectiveChanged￨3￨f (￨3￨f IWorkbenchPage￨4￨p changedPage￨4￨p ,￨4￨p IPerspectiveDescriptor￨4￨p perspective￨4￨p ,￨4￨p IWorkbenchPartReference￨4￨p partRef￨4￨p ,￨4￨p String￨4￨p changeId￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f perspectiveChanged￨3￨f (￨3￨f IWorkbenchPage￨4￨p changedPage￨4￨p ,￨4￨p IPerspectiveDescriptor￨4￨p perspective￨4￨p ,￨4￨p String￨4￨p changeId￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f FastViewManager￨2￨f (￨2￨f Perspective￨3￨p perspective￨3￨p ,￨3￨p WorkbenchPage￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handlePerspectiveActivation￨2￨f (￨2￨f IWorkbenchPage￨3￨p activatingPage￨3￨p ,￨3￨p IPerspectiveDescriptor￨3￨p activatingPerspective￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handlePerspectiveChange￨2￨f (￨2￨f IWorkbenchPage￨3￨p changedPage￨3￨p ,￨3￨p IPerspectiveDescriptor￨3￨p changedPerspective￨3￨p ,￨3￨p IWorkbenchPartReference￨3￨p partRef￨3￨p ,￨3￨p String￨3￨p changeId￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c changedPage￨4￨c !=￨4￨c (￨4￨c page￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c perspective￨4￨c .￨4￨c getDesc￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c changedPerspective￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j changeId￨4￨c .￨4￨c equals￨4￨c (￨4￨c CHANGE_VIEW_HIDE￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b if￨4￨b (￨4￨b partRef￨4￨b instanceof￨4￨b IViewReference￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b ViewReference￨4￨e ref￨4￨e =￨4￨e (￨4￨e (￨4￨e ViewReference￨4￨e )￨4￨e (￨4￨e partRef￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c ref￨5￨c .￨5￨c getPane￨5￨c (￨5￨c )￨5￨c .￨5￨c getContainer￨5￨c (￨5￨c )￨5￨c )￨5￨c instanceof￨5￨c ViewStack￨5￨c )￨4￨j {￨4￨j int￨5￨e viewCount￨5￨e =￨5￨e 0￨5￨e ;￨5￨e LayoutPart￨5￨e [￨5￨e ]￨5￨e children￨5￨e =￨5￨e ref￨5￨e .￨5￨e getPane￨5￨e (￨5￨e )￨5￨e .￨5￨e getContainer￨5￨e (￨5￨e )￨5￨e .￨5￨e getChildren￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c children￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j (￨7￨c (￨7￨c children￨7￨c [￨7￨c i￨7￨c ]￨7￨c )￨7￨c instanceof￨7￨c ViewPane￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c children￨7￨c [￨7￨c i￨7￨c ]￨7￨c )￨7￨c !=￨7￨c (￨7￨c ref￨7￨c .￨7￨c getPane￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j viewCount￨7￨e ++￨7￨e ;￨7￨e }￨6￨j }￨5￨l if￨5￨j (￨5￨j viewCount￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j ref￨6￨e .￨6￨e getPane￨6￨e (￨6￨e )￨6￨e .￨6￨e getStack￨6￨e (￨6￨e )￨6￨e .￨6￨e setState￨6￨e (￨6￨e STATE_RESTORED￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j if￨3￨j (￨3￨j changeId￨4￨c .￨4￨c equals￨4￨c (￨4￨c CHANGE_FAST_VIEW_REMOVE￨4￨c )￨4￨c )￨3￨j {￨3￨j removeViewReference￨4￨e (￨4￨e (￨4￨e (￨4￨e IViewReference￨4￨e )￨4￨e (￨4￨e partRef￨4￨e )￨4￨e )￨4￨e ,￨4￨e false￨4￨e ,￨4￨e true￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f handlePerspectiveChange￨2￨f (￨2￨f IWorkbenchPage￨3￨p changedPage￨3￨p ,￨3￨p IPerspectiveDescriptor￨3￨p changedPerspective￨3￨p ,￨3￨p String￨3￨p changeId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f getFastViews￨2￨f (￨2￨f String￨3￨p forId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addViewReference￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p IViewReference￨3￨p ref￨3￨p ,￨3￨p boolean￨3￨p update￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ViewStackTrimToolBar￨2￨f getTrimForViewStack￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p int￨3￨p suggestedSide￨3￨p ,￨3￨p int￨3￨p paneOrientation￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateTrim￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeViewReference￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p ,￨3￨p boolean￨3￨p makeUnfast￨3￨p ,￨3￨p boolean￨3￨p update￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f makeFast￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p ,￨3￨p boolean￨3￨p makeFast￨3￨p ,￨3￨p boolean￨3￨p activate￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isFastView￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getIdForRef￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getViewSide￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IWindowTrim￨2￨f getTrimForRef￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f getTrueViewOrder￨2￨f (￨2￨f ViewStack￨3￨p stack￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f moveToTrim￨2￨f (￨2￨f ViewStack￨3￨p vs￨3￨p ,￨3￨p boolean￨3￨p restoreOnUnzoom￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restoreToPresentation￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restoreZoomedViewStacks￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFastViewIconSelection￨2￨f (￨2￨f IViewReference￨3￨p ref￨3￨p ,￨3￨p boolean￨3￨p selected￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f activate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deActivate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f restoreAllTrimStacks￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setTrimStackVisibility￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f saveState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restoreState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p ,￨3￨p MultiStatus￨3￨p result￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ViewStackTrimToolBar￨2￨f getViewStackTrimToolbar￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f printFVModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deferUpdates￨2￨f (￨2￨f boolean￨3￨p defer￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f deferAnimations￨2￨f (￨2￨f boolean￨3￨p defer￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f AnimationEngine￨2￨f getDeferrableAnimation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f scheduleDeferrableAnimation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ViewStackTrimToolBar￨2￨f getBottomRightTrimStack￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AttributeDefinition￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e name￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e xmlName￨2￨e ;￨2￨e private￨2￨e final￨2￨e ModelType￨2￨e type￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e allowNull￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e allowExpression￨2￨e ;￨2￨e private￨2￨e final￨2￨e ModelNode￨2￨e defaultValue￨2￨e ;￨2￨e private￨2￨e final￨2￨e MeasurementUnit￨2￨e measurementUnit￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e alternatives￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e requires￨2￨e ;￨2￨e private￨2￨e final￨2￨e ParameterCorrector￨2￨e valueCorrector￨2￨e ;￨2￨e private￨2￨e final￨2￨e ParameterValidator￨2￨e validator￨2￨e ;￨2￨e private￨2￨e final￨2￨e EnumSet￨2￨e <￨2￨e AttributeAccess￨2￨e .￨2￨e Flag￨2￨e >￨2￨e flags￨2￨e ;￨2￨e protected￨2￨e final￨2￨e AttributeMarshaller￨2￨e attributeMarshaller￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e resourceOnly￨2￨e ;￨2￨e private￨2￨e final￨2￨e DeprecationData￨2￨e deprecationData￨2￨e ;￨2￨e protected￨2￨f AttributeDefinition￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p xmlName￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p defaultValue￨3￨p ,￨3￨p final￨3￨p ModelType￨3￨p type￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowNull￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowExpression￨3￨p ,￨3￨p final￨3￨p MeasurementUnit￨3￨p measurementUnit￨3￨p ,￨3￨p final￨3￨p ParameterValidator￨3￨p validator￨3￨p ,￨3￨p final￨3￨p String￨3￨p [￨3￨p ]￨3￨p alternatives￨3￨p ,￨3￨p final￨3￨p String￨3￨p [￨3￨p ]￨3￨p requires￨3￨p ,￨3￨p final￨3￨p AttributeAccess￨3￨p ...￨3￨p flags￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f AttributeDefinition￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p xmlName￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p defaultValue￨3￨p ,￨3￨p final￨3￨p ModelType￨3￨p type￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowNull￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowExpression￨3￨p ,￨3￨p final￨3￨p MeasurementUnit￨3￨p measurementUnit￨3￨p ,￨3￨p final￨3￨p ParameterCorrector￨3￨p valueCorrector￨3￨p ,￨3￨p final￨3￨p ParameterValidator￨3￨p validator￨3￨p ,￨3￨p boolean￨3￨p validateNull￨3￨p ,￨3￨p final￨3￨p String￨3￨p [￨3￨p ]￨3￨p alternatives￨3￨p ,￨3￨p final￨3￨p String￨3￨p [￨3￨p ]￨3￨p requires￨3￨p ,￨3￨p AttributeMarshaller￨3￨p attributeMarshaller￨3￨p ,￨3￨p boolean￨3￨p resourceOnly￨3￨p ,￨3￨p DeprecationData￨3￨p deprecationData￨3￨p ,￨3￨p final￨3￨p AttributeAccess￨3￨p ...￨3￨p flags￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getXmlName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelType￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAllowNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAllowExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f getDefaultValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MeasurementUnit￨2￨f getMeasurementUnit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ParameterValidator￨2￨f getValidator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getAlternatives￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getRequires￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EnumSet￨2￨f <￨2￨f AttributeAccess￨2￨f .￨2￨f Flag￨2￨f >￨2￨f getFlags￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMarshallable￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p resourceModel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMarshallable￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p resourceModel￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p marshallDefault￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f validateOperation￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f operationObject￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f validateAndSet￨2￨f (￨2￨f ModelNode￨2￨f operationObject￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b isDeprecated￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b DEPRECATED_LOGGER￨3￨e .￨3￨e attributeDeprecated￨3￨e (￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨3￨e final￨3￨e ModelNode￨3￨e newValue￨3￨e =￨3￨e correctValue￨3￨e (￨3￨e operationObject￨3￨e .￨3￨e get￨3￨e (￨3￨e name￨3￨e )￨3￨e ,￨3￨e model￨3￨e .￨3￨e get￨3￨e (￨3￨e name￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c newValue￨4￨c .￨4￨c equals￨4￨c (￨4￨c operationObject￨4￨c .￨4￨c get￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j operationObject￨4￨e .￨4￨e get￨4￨e (￨4￨e name￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e newValue￨4￨e )￨4￨e ;￨4￨e }￨3￨j ModelNode￨3￨e node￨3￨e =￨3￨e validateOperation￨3￨e (￨3￨e operationObject￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e model￨3￨e .￨3￨e get￨3￨e (￨3￨e name￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e node￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f ModelNode￨2￨f validateResolvedOperation￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f operationObject￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f resolveModelAttribute￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f resolveModelAttribute￨2￨f (￨2￨f final￨2￨f ExpressionResolver￨2￨f resolver￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAllowed￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p operationObject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRequired￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p operationObject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasAlternative￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p operationObject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f marshallAsElement￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f resourceModel￨2￨f ,￨2￨f final￨2￨f XMLStreamWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f marshallAsElement￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f resourceModel￨2￨f ,￨2￨f final￨2￨f boolean￨2￨f marshallDefault￨2￨f ,￨2￨f final￨2￨f XMLStreamWriter￨2￨f writer￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f addResourceAttributeDescription￨2￨f (￨2￨f final￨3￨p ResourceBundle￨3￨p bundle￨3￨p ,￨3￨p final￨3￨p String￨3￨p prefix￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p resourceDescription￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f addResourceAttributeDescription￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p resourceDescription￨3￨p ,￨3￨p final￨3￨p ResourceDescriptionResolver￨3￨p resolver￨3￨p ,￨3￨p final￨3￨p Locale￨3￨p locale￨3￨p ,￨3￨p final￨3￨p ResourceBundle￨3￨p bundle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f addOperationParameterDescription￨2￨f (￨2￨f final￨3￨p ResourceBundle￨3￨p bundle￨3￨p ,￨3￨p final￨3￨p String￨3￨p prefix￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p operationDescription￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f addOperationParameterDescription￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p resourceDescription￨3￨p ,￨3￨p final￨3￨p String￨3￨p operationName￨3￨p ,￨3￨p final￨3￨p ResourceDescriptionResolver￨3￨p resolver￨3￨p ,￨3￨p final￨3￨p Locale￨3￨p locale￨3￨p ,￨3￨p final￨3￨p ResourceBundle￨3￨p bundle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getAttributeTextDescription￨2￨f (￨2￨f final￨3￨p ResourceBundle￨3￨p bundle￨3￨p ,￨3￨p final￨3￨p String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getAttributeDeprecatedDescription￨2￨f (￨2￨f final￨3￨p ResourceBundle￨3￨p bundle￨3￨p ,￨3￨p final￨3￨p String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f addDeprecatedInfo￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ModelNode￨2￨f getNoTextDescription￨2￨f (￨2￨f boolean￨3￨p forOperation￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f ModelNode￨2￨f correctValue￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p newValue￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p oldValue￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f validateOperation￨2￨f (￨2￨f final￨2￨f ModelNode￨2￨f operationObject￨2￨f ,￨2￨f final￨2￨f boolean￨2￨f correctValue￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AttributeMarshaller￨2￨f getAttributeMarshaller￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isResourceOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDeprecated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DeprecationData￨2￨f getDeprecationData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f ExpressionResolver￨2￨f NO_OPERATION_CONTEXT_FOR_RESOLVING_MODEL_PARAMETERS￨2￨f =￨2￨f new￨2￨f ExpressionResolver￨2￨f (￨2￨f )￨2￨f {￨2￨f @￨3￨f Override￨3￨f public￨3￨f ModelNode￨3￨f resolveExpressions￨3￨f (￨3￨f ModelNode￨3￨f node￨3￨f )￨3￨f throws￨3￨f OperationFailedException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e }￨1￨d
public￨1￨d class￨1￨d TestCJKWidthFilter￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d private￨2￨f Analyzer￨2￨f analyzer￨2￨f =￨2￨f new￨2￨f Analyzer￨2￨f (￨2￨f )￨2￨f {￨2￨f @￨3￨f Override￨3￨f protected￨3￨f TokenStreamComponents￨3￨f createComponents￨3￨f (￨3￨f String￨4￨p fieldName￨4￨p ,￨4￨p Reader￨4￨p reader￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f void￨2￨f testFullWidthASCII￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testHalfWidthKana￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomData￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b analyzer￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testEmptyTerm￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PageAndComponentProvider￨1￨d extends￨1￨d DefaultPageProvider￨1￨d {￨1￨d private￨2￨e IRequestableComponent￨2￨e component￨2￨e ;￨2￨e private￨2￨e String￨2￨e componentPath￨2￨e ;￨2￨e public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f IRequestablePage￨3￨p page￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f IRequestablePage￨3￨p page￨3￨p ,￨3￨p IRequestableComponent￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p extends￨3￨p IRequestablePage￨3￨p >￨3￨p pageClass￨3￨p ,￨3￨p PageParameters￨3￨p pageParameters￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p extends￨3￨p IRequestablePage￨3￨p >￨3￨p pageClass￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f int￨3￨p pageId￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p extends￨3￨p IRequestablePage￨3￨p >￨3￨p pageClass￨3￨p ,￨3￨p Integer￨3￨p renderCount￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f int￨3￨p pageId￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p extends￨3￨p IRequestablePage￨3￨p >￨3￨p pageClass￨3￨p ,￨3￨p PageParameters￨3￨p pageParameters￨3￨p ,￨3￨p Integer￨3￨p renderCount￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PageAndComponentProvider￨2￨f (￨2￨f int￨3￨p pageId￨3￨p ,￨3￨p Integer￨3￨p renderCount￨3￨p ,￨3￨p String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f boolean￨2￨f prepareForRenderNewPage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IRequestableComponent￨2￨f getComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getComponentPath￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c componentPath￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e componentPath￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b component￨4￨b .￨4￨b getPath￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f private￨2￨f void￨2￨f setComponentPath￨2￨f (￨2￨f String￨3￨p componentPath￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DateTimeDV￨1￨d extends￨1￨d AbstractDateTimeDV￨1￨d {￨1￨d public￨2￨f Object￨2￨f getActualValue￨2￨f (￨2￨f String￨2￨f content￨2￨f ,￨2￨f ValidationContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e parse￨4￨e (￨4￨e content￨4￨e ,￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b throw￨4￨b new￨4￨b InvalidDatatypeValueException￨4￨b (￨4￨b "not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>dataTime"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f }￨2￨f protected￨2￨f int￨2￨f [￨2￨f ]￨2￨f parse￨2￨f (￨2￨f String￨2￨f str￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f date￨2￨f )￨2￨f throws￨2￨f SchemaDateTimeException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d ConsoleHandlerAdd￨1￨d extends￨1￨d FlushingHandlerAddProperties￨1￨d <￨1￨d ConsoleHandlerService￨1￨d >￨1￨d {￨1￨d static￨2￨e final￨2￨e ConsoleHandlerAdd￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ConsoleHandlerAdd￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f ConsoleHandlerAdd￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f ConsoleHandlerService￨2￨f createHandlerService￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f updateRuntime￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ServiceBuilder￨2￨f <￨2￨f Handler￨2￨f >￨2￨f serviceBuilder￨2￨f ,￨2￨f final￨2￨f String￨2￨f name￨2￨f ,￨2￨f final￨2￨f ConsoleHandlerService￨2￨f service￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e updateRuntime￨3￨e (￨3￨e context￨3￨e ,￨3￨e serviceBuilder￨3￨e ,￨3￨e name￨3￨e ,￨3￨e service￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e target￨3￨e =￨3￨e CommonAttributes￨3￨e .￨3￨e TARGET￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j target￨4￨c .￨4￨c isDefined￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b service￨4￨b .￨4￨b setTarget￨4￨b (￨4￨b Target￨4￨b .￨4￨b fromString￨4￨b (￨4￨b target￨4￨b .￨4￨b asString￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CharSetUtilsTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f assertNotNull￨3￨e (￨3￨e new￨3￨e CharSetUtils￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Constructor￨3￨b <￨3￨b ?￨3￨b >￨3￨b [￨3￨b ]￨3￨b cons￨3￨b =￨3￨b CharSetUtils￨3￨b .￨3￨b class￨3￨b .￨3￨b getDeclaredConstructors￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e cons￨3￨e .￨3￨e length￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e Modifier￨3￨e .￨3￨e isPublic￨3￨e (￨3￨e cons￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getModifiers￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e Modifier￨3￨e .￨3￨e isPublic￨3￨e (￨3￨e CharSetUtils￨3￨e .￨3￨e class￨3￨e .￨3￨e getModifiers￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e Modifier￨3￨e .￨3￨e isFinal￨3￨e (￨3￨e CharSetUtils￨3￨e .￨3￨e class￨3￨e .￨3￨e getModifiers￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSqueeze_StringString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSqueeze_StringStringarray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testCount_StringString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testCount_StringStringarray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testKeep_StringString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testKeep_StringStringarray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDelete_StringString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDelete_StringStringarray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ContainsSelector￨1￨d extends￨1￨d BaseExtendSelector￨1￨d implements￨1￨d ResourceSelector￨1￨d {￨1￨d private￨2￨e String￨2￨e contains￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e casesensitive￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e ignorewhitespace￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e EXPRESSION_KEY￨2￨e =￨2￨e "expression"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e CONTAINS_KEY￨2￨e =￨2￨e "text"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e CASE_KEY￨2￨e =￨2￨e "casesensitive"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e WHITESPACE_KEY￨2￨e =￨2￨e "ignorewhitespace"￨2￨e ;￨2￨e public￨2￨f ContainsSelector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p contains￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCasesensitive￨2￨f (￨2￨f boolean￨3￨p casesensitive￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIgnorewhitespace￨2￨f (￨2￨f boolean￨3￨p ignorewhitespace￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setParameters￨2￨f (￨2￨f Parameter￨3￨p [￨3￨p ]￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f verifySettings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSelected￨2￨f (￨2￨f File￨3￨p basedir￨3￨p ,￨3￨p String￨3￨p filename￨3￨p ,￨3￨p File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSelected￨2￨f (￨2￨f Resource￨3￨p r￨3￨p )￨2￨f {￨2￨f validate￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b r￨3￨b .￨3￨b isDirectory￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e true￨3￨e ;￨3￨e }￨3￨e String￨3￨e userstr￨3￨e =￨3￨e contains￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c casesensitive￨4￨c )￨4￨c )￨3￨j {￨3￨j userstr￨4￨e =￨4￨e contains￨4￨e .￨4￨e toLowerCase￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j ignorewhitespace￨4￨c )￨3￨j {￨3￨j userstr￨4￨e =￨4￨e SelectorUtils￨4￨e .￨4￨e removeWhitespace￨4￨e (￨4￨e userstr￨4￨e )￨4￨e ;￨4￨e }￨3￨j BufferedReader￨3￨e in￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f in￨4￨e =￨4￨e new￨4￨e BufferedReader￨4￨e (￨4￨e new￨4￨e InputStreamReader￨4￨e (￨4￨e r￨4￨e .￨4￨e getInputStream￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e tools￨4￨e .￨4￨e ant￨4￨e .￨4￨e BuildException￨4￨e (￨4￨e (￨4￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>InputStream<seq2seq4repair_space>from<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e r￨4￨e .￨4￨e toLongString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f String￨4￨e teststr￨4￨e =￨4￨e in￨4￨e .￨4￨e readLine￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l teststr￨5￨c !=￨5￨c null￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j !￨6￨c (￨6￨c casesensitive￨6￨c )￨6￨c )￨5￨j {￨5￨j teststr￨6￨e =￨6￨e teststr￨6￨e .￨6￨e toLowerCase￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j ignorewhitespace￨6￨c )￨5￨j {￨5￨j teststr￨6￨e =￨6￨e SelectorUtils￨6￨e .￨6￨e removeWhitespace￨6￨e (￨6￨e teststr￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c teststr￨6￨c .￨6￨c indexOf￨6￨c (￨6￨c userstr￨6￨c )￨6￨c )￨6￨c >￨6￨c (￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e true￨6￨e ;￨6￨e }￨5￨j teststr￨5￨e =￨5￨e in￨5￨e .￨5￨e readLine￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l return￨4￨e false￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p ioe￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e tools￨4￨e .￨4￨e ant￨4￨e .￨4￨e BuildException￨4￨e (￨4￨e (￨4￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e r￨4￨e .￨4￨e toLongString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f FileUtils￨4￨e .￨4￨e close￨4￨e (￨4￨e in￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParameterizedTypeBinding￨1￨d extends￨1￨d ReferenceBinding￨1￨d implements￨1￨d Substitution￨1￨d {￨1￨d public￨2￨e ReferenceBinding￨2￨e type￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e [￨2￨e ]￨2￨e arguments￨2￨e ;￨2￨e public￨2￨e LookupEnvironment￨2￨e environment￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e genericTypeSignature￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e superclass￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e superInterfaces￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e [￨2￨e ]￨2￨e fields￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e memberTypes￨2￨e ;￨2￨e public￨2￨e MethodBinding￨2￨e [￨2￨e ]￨2￨e methods￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e enclosingType￨2￨e ;￨2￨e public￨2￨f ParameterizedTypeBinding￨2￨f (￨2￨f ReferenceBinding￨3￨p type￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p ReferenceBinding￨3￨p enclosingType￨3￨p ,￨3￨p LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f collectSubstitutes￨2￨f (￨2￨f TypeBinding￨3￨p otherType￨3￨p ,￨3￨p Map￨3￨p substitutes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f constantPoolName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f debugName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f enclosingType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f erasure￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f fieldCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f [￨2￨f ]￨2￨f fields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f genericTypeSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactConstructor￨2￨f (￨2￨f TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactMethod￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getField￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fieldName￨3￨p ,￨3￨p boolean￨3￨p needResolve￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f getMemberType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p typeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getMethods￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f implementsMethod￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f initialize￨2￨f (￨2￨f ReferenceBinding￨3￨p someType￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p someArguments￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e type￨3￨e =￨3￨e someType￨3￨e ;￨3￨e this￨3￨e .￨3￨e sourceName￨3￨e =￨3￨e someType￨3￨e .￨3￨e sourceName￨3￨e ;￨3￨e this￨3￨e .￨3￨e compoundName￨3￨e =￨3￨e someType￨3￨e .￨3￨e compoundName￨3￨e ;￨3￨e this￨3￨e .￨3￨e fPackage￨3￨e =￨3￨e someType￨3￨e .￨3￨e fPackage￨3￨e ;￨3￨e this￨3￨e .￨3￨e fileName￨3￨e =￨3￨e someType￨3￨e .￨3￨e fileName￨3￨e ;￨3￨e this￨3￨e .￨3￨e modifiers￨3￨e =￨3￨e (￨3￨e (￨3￨e someType￨3￨e .￨3￨e modifiers￨3￨e )￨3￨e |￨3￨e (￨3￨e AccGenericSignature￨3￨e )￨3￨e )￨3￨e |￨3￨e (￨3￨e AccUnresolved￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j someArguments￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e arguments￨4￨e =￨4￨e someArguments￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c length￨5￨c =￨5￨c someArguments￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l TypeBinding￨5￨e someArgument￨5￨e =￨5￨e someArguments￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b !￨5￨b (￨5￨b someArgument￨5￨b .￨5￨b isWildcard￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b ||￨5￨b (￨5￨b !￨5￨b (￨5￨b (￨5￨b (￨5￨b WildcardBinding￨5￨b )￨5￨b (￨5￨b someArgument￨5￨b )￨5￨b )￨5￨b .￨5￨b isEquivalentToUnboundWildcard￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b this￨5￨e .￨5￨e tagBits￨5￨e |=￨5￨e IsBoundParameterizedType￨5￨e ;￨5￨e }￨5￨e this￨5￨e .￨5￨e tagBits￨5￨e |=￨5￨e (￨5￨e someArgument￨5￨e .￨5￨e tagBits￨5￨e )￨5￨e &￨5￨e (￨5￨e (￨5￨e HasTypeVariable￨5￨e )￨5￨e |￨5￨e (￨5￨e HasWildcard￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j this￨3￨e .￨3￨e tagBits￨3￨e |=￨3￨e (￨3￨e someType￨3￨e .￨3￨e tagBits￨3￨e )￨3￨e &￨3￨e (￨3￨e (￨3￨e (￨3￨e IsLocalType￨3￨e )￨3￨e |￨3￨e (￨3￨e IsMemberType￨3￨e )￨3￨e )￨3￨e |￨3￨e (￨3￨e IsNestedType￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f initializeArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEquivalentTo￨2￨f (￨2￨f TypeBinding￨3￨p otherType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isParameterizedType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f memberTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f methods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f qualifiedSourceName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f readableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ReferenceBinding￨2￨f resolve￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f shortReadableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f signature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f sourceName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f substitute￨2￨f (￨2￨f TypeBinding￨3￨p originalType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f superclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f superInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f swapUnresolved￨2￨f (￨2￨f UnresolvedReferenceBinding￨3￨p unresolvedType￨3￨p ,￨3￨p ReferenceBinding￨3￨p resolvedType￨3￨p ,￨3￨p LookupEnvironment￨3￨p env￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f syntheticEnclosingInstanceTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticArgumentBinding￨2￨f [￨2￨f ]￨2￨f syntheticOuterLocalVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f leafComponentType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f qualifiedPackageName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d XMLFormatter￨1￨d extends￨1￨d BaseStreamFormatter￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e TESTSUITES￨2￨e =￨2￨e "testsuites"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e TESTSUITE￨2￨e =￨2￨e "testsuite"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e TESTCASE￨2￨e =￨2￨e "testcase"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ERROR￨2￨e =￨2￨e "error"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FAILURE￨2￨e =￨2￨e "failure"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SYSTEM_ERR￨2￨e =￨2￨e "system-err"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e SYSTEM_OUT￨2￨e =￨2￨e "system-out"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_PACKAGE￨2￨e =￨2￨e "package"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_NAME￨2￨e =￨2￨e "name"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_TIME￨2￨e =￨2￨e "time"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_ERRORS￨2￨e =￨2￨e "errors"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_FAILURES￨2￨e =￨2￨e "failures"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_TESTS￨2￨e =￨2￨e "tests"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_TYPE￨2￨e =￨2￨e "type"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_MESSAGE￨2￨e =￨2￨e "message"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PROPERTIES￨2￨e =￨2￨e "properties"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e PROPERTY￨2￨e =￨2￨e "property"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ATTR_VALUE￨2￨e =￨2￨e "value"￨2￨e ;￨2￨e private￨2￨e Document￨2￨e doc￨2￨e =￨2￨e XMLFormatter￨2￨e .￨2￨e getDocumentBuilder￨2￨e (￨2￨e )￨2￨e .￨2￨e newDocument￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Element￨2￨e rootElement￨2￨e =￨2￨e doc￨2￨e .￨2￨e createElement￨2￨e (￨2￨e XMLFormatter￨2￨e .￨2￨e TESTSUITE￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e testElements￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Hashtable￨2￨e testStarts￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f onTestStarted￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onTestEnded￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onTestFailure￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b String￨3￨b type￨3￨b =￨3￨b (￨3￨b (￨3￨b evt￨3￨b ==￨3￨b (￨3￨b evt￨3￨b .￨3￨b getType￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ==￨3￨b (￨3￨b TestRunEvent￨3￨b .￨3￨b TEST_FAILURE￨3￨b )￨3￨b )￨3￨b ?￨3￨b XMLFormatter￨3￨b .￨3￨b FAILURE￨3￨b :￨3￨b XMLFormatter￨3￨b .￨3￨b ERROR￨3￨b ;￨3￨b <END_BUG>￨3￨b Element￨3￨e nested￨3￨e =￨3￨e doc￨3￨e .￨3￨e createElement￨3￨e (￨3￨e type￨3￨e )￨3￨e ;￨3￨e Element￨3￨e currentTest￨3￨e =￨3￨e (￨3￨e (￨3￨e Element￨3￨e )￨3￨e (￨3￨e testElements￨3￨e .￨3￨e get￨3￨e (￨3￨e evt￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e currentTest￨3￨e .￨3￨e appendChild￨3￨e (￨3￨e nested￨3￨e )￨3￨e ;￨3￨e String￨3￨e [￨3￨e ]￨3￨e args￨3￨e =￨3￨e XMLFormatter￨3￨e .￨3￨e parseFirstLine￨3￨e (￨3￨e evt￨3￨e .￨3￨e getStackTrace￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c args￨4￨c [￨4￨c 1￨4￨c ]￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c args￨4￨c [￨4￨c 1￨4￨c ]￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j nested￨4￨e .￨4￨e setAttribute￨4￨e (￨4￨e XMLFormatter￨4￨e .￨4￨e ATTR_MESSAGE￨4￨e ,￨4￨e args￨4￨e [￨4￨e 1￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨j nested￨3￨e .￨3￨e setAttribute￨3￨e (￨3￨e XMLFormatter￨3￨e .￨3￨e ATTR_TYPE￨3￨e ,￨3￨e args￨3￨e [￨3￨e 0￨3￨e ]￨3￨e )￨3￨e ;￨3￨e Text￨3￨e text￨3￨e =￨3￨e doc￨3￨e .￨3￨e createTextNode￨3￨e (￨3￨e evt￨3￨e .￨3￨e getStackTrace￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e nested￨3￨e .￨3￨e appendChild￨3￨e (￨3￨e text￨3￨e )￨3￨e ;￨3￨e super￨3￨e .￨3￨e onTestFailure￨3￨e (￨3￨e evt￨3￨e )￨3￨e ;￨3￨e removeEvent￨3￨e (￨3￨e evt￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f removeEvent￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onRunStarted￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onRunEnded￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onRunStopped￨2￨f (￨2￨f TestRunEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f DocumentBuilder￨2￨f getDocumentBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f parseFirstLine￨2￨f (￨2￨f String￨3￨p trace￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d PortletApplication￨1￨d extends￨1￨d Application￨1￨d implements￨1￨d ISessionFactory￨1￨d {￨1￨d private￨2￨e String￨2￨e applicationKey￨2￨e ;￨2￨e private￨2￨e IRequestCycleProcessor￨2￨e requestCycleProcessor￨2￨e ;￨2￨e private￨2￨e IRequestCycleProcessor￨2￨e actionRequestCycleProcessor￨2￨e ;￨2￨e private￨2￨e String￨2￨e sessionAttributePrefix￨2￨e ;￨2￨e private￨2￨e ISessionFactory￨2￨e sessionFactory￨2￨e =￨2￨e this￨2￨e ;￨2￨e private￨2￨e RequestLogger￨2￨e requestLogger￨2￨e ;￨2￨e WicketPortlet￨2￨e portlet￨2￨e ;￨2￨e public￨2￨f void￨2￨f setWicketPortlet￨2￨f (￨2￨f WicketPortlet￨3￨p portlet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f WicketPortletSession￨2￨f getSession￨2￨f (￨2￨f final￨3￨p WicketPortletRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f ISessionStore￨3￨e sessionStore￨3￨e =￨3￨e getSessionStore￨3￨e (￨3￨e )￨3￨e ;￨3￨e Session￨3￨e session￨3￨e =￨3￨e sessionStore￨3￨e .￨3￨e lookup￨3￨e (￨3￨e request￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j session￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b session￨4￨b =￨4￨b getSessionFactory￨4￨b (￨4￨b )￨4￨b .￨4￨b newSession￨4￨b (￨4￨b request￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b session￨4￨e .￨4￨e setLocale￨4￨e (￨4￨e request￨4￨e .￨4￨e getLocale￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e sessionStore￨4￨e .￨4￨e bind￨4￨e (￨4￨e request￨4￨e ,￨4￨e session￨4￨e )￨4￨e ;￨4￨e }￨3￨j WicketPortletSession￨3￨e webSession￨3￨e ;￨3￨e if￨3￨j (￨3￨j session￨4￨c instanceof￨4￨c WicketPortletSession￨4￨c )￨3￨j {￨3￨j webSession￨4￨e =￨4￨e (￨4￨e (￨4￨e WicketPortletSession￨4￨e )￨4￨e (￨4￨e session￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e new￨4￨e WicketRuntimeException￨4￨e (￨4￨e (￨4￨e "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>PortletApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>"￨4￨e +￨4￨e "must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>PortletSession"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j session￨3￨e .￨3￨e setApplication￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e webSession￨3￨e .￨3￨e initForRequest￨3￨e (￨3￨e )￨3￨e ;￨3￨e return￨3￨e webSession￨3￨e ;￨3￨e }￨2￨f public￨2￨f WicketPortletResponse￨2￨f newPortletResponse￨2￨f (￨2￨f final￨3￨p PortletResponse￨3￨p res￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f WicketPortletRequest￨2￨f newPortletRequest￨2￨f (￨2￨f PortletRequest￨3￨p req￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getApplicationKey￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISessionFactory￨2￨f getSessionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISessionStore￨2￨f newSessionStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Session￨2￨f newSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initPortlet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalInit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f destroyPortlet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleFactory￨2￨f getDefaultRequestCycleFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleProcessor￨2￨f newRenderRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleProcessor￨2￨f newActionRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IRequestCycleProcessor￨2￨f getActionRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f IRequestCycleProcessor￨2￨f getRenderRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f RequestLogger￨2￨f getRequestLogger￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setRequestLogger￨2￨f (￨2￨f RequestLogger￨3￨p logger￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f sessionDestroyed￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getSessionAttributePrefix￨2￨f (￨2￨f final￨3￨p WicketPortletRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ModeOptionPane￨1￨d extends￨1￨d AbstractOptionPane￨1￨d {￨1￨d public￨2￨f ModeOptionPane￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f _init￨2￨f (￨2￨f )￨2￨f {￨2￨f Mode￨3￨e [￨3￨e ]￨3￨e modes￨3￨e =￨3￨e jEdit￨3￨e .￨3￨e getModes￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e [￨3￨e ]￨3￨e modeNames￨3￨e =￨3￨e new￨3￨e String￨3￨e [￨3￨e modes￨3￨e .￨3￨e length￨3￨e ]￨3￨e ;￨3￨e modeProps￨3￨e =￨3￨e new￨3￨e ModeOptionPane￨3￨e .￨3￨e ModeProperties￨3￨e [￨3￨e modes￨3￨e .￨3￨e length￨3￨e ]￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c modes￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l modeProps￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e new￨4￨e ModeOptionPane￨4￨e .￨4￨e ModeProperties￨4￨e (￨4￨e modes￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e modeNames￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e modes￨4￨e [￨4￨e i￨4￨e ]￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l mode￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e modeNames￨3￨e )￨3￨e ;￨3￨e mode￨3￨e .￨3￨e addActionListener￨3￨e (￨3￨e new￨3￨e ModeOptionPane￨3￨e .￨3￨e ActionHandler￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.mode.mode"￨3￨e )￨3￨e ,￨3￨e mode￨3￨e )￨3￨e ;￨3￨e useDefaults￨3￨e =￨3￨e new￨3￨e JCheckBox￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.mode.useDefaults"￨3￨e )￨3￨e )￨3￨e ;￨3￨e useDefaults￨3￨e .￨3￨e addActionListener￨3￨e (￨3￨e new￨3￨e ModeOptionPane￨3￨e .￨3￨e ActionHandler￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e useDefaults￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.mode.filenameGlob"￨3￨e )￨3￨e ,￨3￨e (￨3￨e filenameGlob￨3￨e =￨3￨e new￨3￨e JTextField￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.mode.firstlineGlob"￨3￨e )￨3￨e ,￨3￨e (￨3￨e firstlineGlob￨3￨e =￨3￨e new￨3￨e JTextField￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e String￨3￨f [￨3￨f ]￨3￨f tabSizes￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.tabSize"￨3￨e )￨3￨e ,￨3￨e (￨3￨e tabSize￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e tabSizes￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e tabSize￨3￨e .￨3￨e setEditable￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.indentSize"￨3￨e )￨3￨e ,￨3￨e (￨3￨e indentSize￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e tabSizes￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e indentSize￨3￨e .￨3￨e setEditable￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e String￨3￨f [￨3￨f ]￨3￨f lineLens￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.maxLineLen"￨3￨e )￨3￨e ,￨3￨e (￨3￨e maxLineLen￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e lineLens￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e maxLineLen￨3￨e .￨3￨e setEditable￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.wordBreakChars"￨3￨e )￨3￨e ,￨3￨e (￨3￨e wordBreakChars￨3￨e =￨3￨e new￨3￨e JTextField￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b addComponent￨3￨b (￨3￨b jEdit￨3￨b .￨3￨b getProperty￨3￨b (￨3￨b "options.mode.noWordSep"￨3￨b )￨3￨b ,￨3￨b (￨3￨b noWordSep￨3￨b =￨3￨b new￨3￨b JTextField￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨f [￨3￨f ]￨3￨f foldModes￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.folding"￨3￨e )￨3￨e ,￨3￨e (￨3￨e folding￨3￨e =￨3￨e new￨3￨e JComboBox￨3￨e (￨3￨e foldModes￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.collapseFolds"￨3￨e )￨3￨e ,￨3￨e (￨3￨e collapseFolds￨3￨e =￨3￨e new￨3￨e JTextField￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e (￨3￨e indentOnTab￨3￨e =￨3￨e new￨3￨e JCheckBox￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.indentOnTab"￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e (￨3￨e indentOnEnter￨3￨e =￨3￨e new￨3￨e JCheckBox￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.indentOnEnter"￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e addComponent￨3￨e (￨3￨e (￨3￨e noTabs￨3￨e =￨3￨e new￨3￨e JCheckBox￨3￨e (￨3￨e jEdit￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "options.editing.noTabs"￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e selectMode￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f _save￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e ModeOptionPane￨2￨e .￨2￨e ModeProperties￨2￨e [￨2￨e ]￨2￨e modeProps￨2￨e ;￨2￨e private￨2￨e ModeOptionPane￨2￨e .￨2￨e ModeProperties￨2￨e current￨2￨e ;￨2￨e private￨2￨e JComboBox￨2￨e mode￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e useDefaults￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e filenameGlob￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e firstlineGlob￨2￨e ;￨2￨e private￨2￨e JComboBox￨2￨e tabSize￨2￨e ;￨2￨e private￨2￨e JComboBox￨2￨e indentSize￨2￨e ;￨2￨e private￨2￨e JComboBox￨2￨e maxLineLen￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e wordBreakChars￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e noWordSep￨2￨e ;￨2￨e private￨2￨e JComboBox￨2￨e folding￨2￨e ;￨2￨e private￨2￨e JTextField￨2￨e collapseFolds￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e noTabs￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e indentOnTab￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e indentOnEnter￨2￨e ;￨2￨e private￨2￨f void￨2￨f saveMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f selectMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f class￨2￨d ActionHandler￨2￨d implements￨2￨d ActionListener￨2￨d {￨2￨d public￨3￨f void￨3￨f actionPerformed￨3￨f (￨3￨f ActionEvent￨4￨p evt￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d class￨2￨d ModeProperties￨2￨d {￨2￨d Mode￨3￨e mode￨3￨e ;￨3￨e boolean￨3￨e edited￨3￨e ;￨3￨e boolean￨3￨e loaded￨3￨e ;￨3￨e boolean￨3￨e useDefaults￨3￨e ;￨3￨e String￨3￨e filenameGlob￨3￨e ;￨3￨e String￨3￨e firstlineGlob￨3￨e ;￨3￨e String￨3￨e tabSize￨3￨e ;￨3￨e String￨3￨e indentSize￨3￨e ;￨3￨e String￨3￨e maxLineLen￨3￨e ;￨3￨e String￨3￨e wordBreakChars￨3￨e ;￨3￨e String￨3￨e noWordSep￨3￨e ;￨3￨e String￨3￨e folding￨3￨e ;￨3￨e String￨3￨e collapseFolds￨3￨e ;￨3￨e boolean￨3￨e noTabs￨3￨e ;￨3￨e boolean￨3￨e indentOnTab￨3￨e ;￨3￨e boolean￨3￨e indentOnEnter￨3￨e ;￨3￨e ModeProperties￨3￨f (￨3￨f Mode￨4￨p mode￨4￨p )￨3￨f {￨3￨f }￨3￨f void￨3￨f load￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f save￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d MethodAnnotationAggregator￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d MethodAnnotationAggregator￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d <￨2￨d A￨2￨d extends￨2￨d Annotation￨2￨d ,￨2￨d T￨2￨d >￨2￨d RuntimeAnnotationInformation￨2￨d <￨2￨d T￨2￨d >￨2￨d runtimeAnnotationInformation￨2￨d (￨2￨d final￨2￨d Class￨2￨d <￨2￨d ?￨2￨d >￨2￨d componentClass￨2￨d ,￨2￨d final￨2￨d EEApplicationClasses￨2￨d applicationClasses￨2￨d ,￨2￨d final￨2￨d DeploymentReflectionIndex￨2￨d index￨2￨d ,￨2￨d final￨2￨d Class￨2￨d <￨2￨d A￨2￨d >￨2￨d annotationType￨2￨d )￨2￨d {￨2￨d final￨3￨e HashSet￨3￨e <￨3￨e MethodIdentifier￨3￨e >￨3￨e methodIdentifiers￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e MethodIdentifier￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e Method￨3￨e ,￨3￨e List￨3￨e <￨3￨e T￨3￨e >￨3￨e >￨3￨e methods￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e Method￨3￨e ,￨3￨e List￨3￨e <￨3￨e T￨3￨e >￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e List￨3￨e <￨3￨e T￨3￨e >￨3￨e >￨3￨e classAnnotations￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e List￨3￨e <￨3￨e T￨3￨e >￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e Class￨3￨e <￨3￨e ?￨3￨e >￨3￨e c￨3￨e =￨3￨e componentClass￨3￨e ;￨3￨e while￨3￨l (￨3￨l (￨4￨c c￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c c￨4￨c !=￨4￨c (￨4￨c Object￨4￨c .￨4￨c class￨4￨c )￨4￨c )￨4￨c )￨3￨l {￨3￨l final￨4￨e ClassReflectionIndex￨4￨e <￨4￨e ?￨4￨e >￨4￨e classIndex￨4￨e =￨4￨e index￨4￨e .￨4￨e getClassIndex￨4￨e (￨4￨e c￨4￨e )￨4￨e ;￨4￨e final￨4￨e EEModuleClassDescription￨4￨e description￨4￨e =￨4￨e applicationClasses￨4￨e .￨4￨e getClassByName￨4￨e (￨4￨e c￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j description￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j ClassAnnotationInformation￨5￨e <￨5￨e A￨5￨e ,￨5￨e T￨5￨e >￨5￨e annotationData￨5￨e =￨5￨e description￨5￨e .￨5￨e getAnnotationInformation￨5￨e (￨5￨e annotationType￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j annotationData￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j !￨7￨c (￨7￨c annotationData￨7￨c .￨7￨c getClassLevelAnnotations￨7￨c (￨7￨c )￨7￨c .￨7￨c isEmpty￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j classAnnotations￨7￨e .￨7￨e put￨7￨e (￨7￨e c￨7￨e .￨7￨e getName￨7￨e (￨7￨e )￨7￨e ,￨7￨e annotationData￨7￨e .￨7￨e getClassLevelAnnotations￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j for￨6￨l (￨6￨l Map￨7￨c .￨7￨c Entry￨7￨c <￨7￨c MethodIdentifier￨7￨c ,￨7￨c List￨7￨c <￨7￨c T￨7￨c >￨7￨c >￨7￨c entry￨7￨c :￨7￨c annotationData￨7￨c .￨7￨c getMethodLevelAnnotations￨7￨c (￨7￨c )￨7￨c .￨7￨c entrySet￨7￨c (￨7￨c )￨7￨c )￨6￨l {￨6￨l final￨7￨e Method￨7￨e method￨7￨e =￨7￨e classIndex￨7￨e .￨7￨e getMethod￨7￨e (￨7￨e entry￨7￨e .￨7￨e getKey￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j method￨8￨c !=￨8￨c null￨8￨c )￨7￨j {￨7￨j if￨8￨j (￨8￨j (￨9￨c Modifier￨9￨c .￨9￨c isPrivate￨9￨c (￨9￨c method￨9￨c .￨9￨c getModifiers￨9￨c (￨9￨c )￨9￨c )￨9￨c )￨9￨c ||￨9￨c (￨9￨c !￨9￨c (￨9￨c methodIdentifiers￨9￨c .￨9￨c contains￨9￨c (￨9￨c entry￨9￨c .￨9￨c getKey￨9￨c (￨9￨c )￨9￨c )￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j methods￨9￨e .￨9￨e put￨9￨e (￨9￨e method￨9￨e ,￨9￨e entry￨9￨e .￨9￨e getValue￨9￨e (￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨j else￨7￨j {￨7￨j <START_BUG>￨8￨b MethodAnnotationAggregator￨8￨b .￨8￨b logger￨8￨b .￨8￨b error￨8￨b (￨8￨b (￨8￨b (￨8￨b (￨8￨b (￨8￨b (￨8￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>method<seq2seq4repair_space>"￨8￨b +￨8￨b (￨8￨b entry￨8￨b .￨8￨b getKey￨8￨b (￨8￨b )￨8￨b )￨8￨b )￨8￨b +￨8￨b "<seq2seq4repair_space>on<seq2seq4repair_space>class<seq2seq4repair_space>"￨8￨b )￨8￨b +￨8￨b c￨8￨b )￨8￨b +￨8￨b "<seq2seq4repair_space>with<seq2seq4repair_space>annotations<seq2seq4repair_space>"￨8￨b )￨8￨b +￨8￨b (￨8￨b entry￨8￨b .￨8￨b getValue￨8￨b (￨8￨b )￨8￨b )￨8￨b )￨8￨b )￨8￨b ;￨8￨b <END_BUG>￨8￨b }￨7￨j }￨6￨l }￨5￨j }￨4￨j for￨4￨l (￨4￨l Method￨5￨c method￨5￨c :￨5￨c classIndex￨5￨c .￨5￨c getMethods￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j !￨6￨c (￨6￨c Modifier￨6￨c .￨6￨c isPrivate￨6￨c (￨6￨c method￨6￨c .￨6￨c getModifiers￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j methodIdentifiers￨6￨e .￨6￨e add￨6￨e (￨6￨e MethodIdentifier￨6￨e .￨6￨e getIdentifierForMethod￨6￨e (￨6￨e method￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l c￨4￨e =￨4￨e c￨4￨e .￨4￨e getSuperclass￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e new￨3￨e RuntimeAnnotationInformation￨3￨e <￨3￨e T￨3￨e >￨3￨e (￨3￨e classAnnotations￨3￨e ,￨3￨e methods￨3￨e )￨3￨e ;￨3￨e }￨2￨d public￨2￨f static￨2￨f <￨2￨f A￨2￨f extends￨2￨f Annotation￨2￨f ,￨2￨f T￨2￨f >￨2￨f Set￨2￨f <￨2￨f Method￨2￨f >￨2￨f runtimeAnnotationPresent￨2￨f (￨2￨f final￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p componentClass￨3￨p ,￨3￨p final￨3￨p EEApplicationClasses￨3￨p applicationClasses￨3￨p ,￨3￨p final￨3￨p DeploymentReflectionIndex￨3￨p index￨3￨p ,￨3￨p final￨3￨p Class￨3￨p <￨3￨p A￨3￨p >￨3￨p annotationType￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StormSubmitter￨1￨d {￨1￨d public￨2￨d static￨2￨d Logger￨2￨d LOG￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d StormSubmitter￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d Iface￨2￨d localNimbus￨2￨d =￨2￨d null￨2￨d ;￨2￨d public￨2￨d static￨2￨d void￨2￨d setLocalNimbus￨2￨d (￨2￨d Nimbus￨2￨d .￨2￨d Iface￨2￨d localNimbusHandler￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f static￨2￨f void￨2￨f submitTopology￨2￨f (￨2￨f String￨2￨f name￨2￨f ,￨2￨f Map￨2￨f stormConf￨2￨f ,￨2￨f StormTopology￨2￨f topology￨2￨f )￨2￨f throws￨2￨f AlreadyAliveException￨2￨f ,￨2￨f InvalidTopologyException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f submitTopology￨2￨f (￨2￨f String￨2￨f name￨2￨f ,￨2￨f Map￨2￨f stormConf￨2￨f ,￨2￨f StormTopology￨2￨f topology￨2￨f ,￨2￨f SubmitOptions￨2￨f opts￨2￨f )￨2￨f throws￨2￨f AlreadyAliveException￨2￨f ,￨2￨f InvalidTopologyException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c Utils￨4￨c .￨4￨c isValidConf￨4￨c (￨4￨c stormConf￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e "Storm<seq2seq4repair_space>conf<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>valid.<seq2seq4repair_space>Must<seq2seq4repair_space>be<seq2seq4repair_space>json-serializable"￨4￨e )￨4￨e ;￨4￨e }￨3￨j stormConf￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e (￨3￨e stormConf￨3￨e )￨3￨e ;￨3￨e stormConf￨3￨e .￨3￨e putAll￨3￨e (￨3￨e Utils￨3￨e .￨3￨e readCommandLineOpts￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Map￨3￨e conf￨3￨e =￨3￨e Utils￨3￨e .￨3￨e readStormConfig￨3￨e (￨3￨e )￨3￨e ;￨3￨e conf￨3￨e .￨3￨e putAll￨3￨e (￨3￨e stormConf￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f String￨4￨e serConf￨4￨e =￨4￨e JSONValue￨4￨e .￨4￨e toJSONString￨4￨e (￨4￨e stormConf￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c StormSubmitter￨5￨c .￨5￨c localNimbus￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j StormSubmitter￨5￨e .￨5￨e LOG￨5￨e .￨5￨e info￨5￨e (￨5￨e (￨5￨e (￨5￨e "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨5￨e +￨5￨e name￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>in<seq2seq4repair_space>local<seq2seq4repair_space>mode"￨5￨e )￨5￨e )￨5￨e ;￨5￨e StormSubmitter￨5￨e .￨5￨e localNimbus￨5￨e .￨5￨e submitTopology￨5￨e (￨5￨e name￨5￨e ,￨5￨e null￨5￨e ,￨5￨e serConf￨5￨e ,￨5￨e topology￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j NimbusClient￨5￨e client￨5￨e =￨5￨e NimbusClient￨5￨e .￨5￨e getConfiguredClient￨5￨e (￨5￨e conf￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j StormSubmitter￨6￨c .￨6￨c topologyNameExists￨6￨c (￨6￨c conf￨6￨c ,￨6￨c name￨6￨c )￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e RuntimeException￨6￨e (￨6￨e (￨6￨e (￨6￨e "Topology<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>`"￨6￨e +￨6￨e name￨6￨e )￨6￨e +￨6￨e "`<seq2seq4repair_space>already<seq2seq4repair_space>exists<seq2seq4repair_space>on<seq2seq4repair_space>cluster"￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j StormSubmitter￨5￨e .￨5￨e submitJar￨5￨e (￨5￨e conf￨5￨e )￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f StormSubmitter￨6￨e .￨6￨e LOG￨6￨e .￨6￨e info￨6￨e (￨6￨e (￨6￨e (￨6￨e (￨6￨e "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨6￨e +￨6￨e name￨6￨e )￨6￨e +￨6￨e "<seq2seq4repair_space>in<seq2seq4repair_space>distributed<seq2seq4repair_space>mode<seq2seq4repair_space>with<seq2seq4repair_space>conf<seq2seq4repair_space>"￨6￨e )￨6￨e +￨6￨e serConf￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j opts￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j client￨7￨e .￨7￨e getClient￨7￨e (￨7￨e )￨7￨e .￨7￨e submitTopologyWithOpts￨7￨e (￨7￨e name￨7￨e ,￨7￨e StormSubmitter￨7￨e .￨7￨e submittedJar￨7￨e ,￨7￨e serConf￨7￨e ,￨7￨e topology￨7￨e ,￨7￨e opts￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j client￨7￨e .￨7￨e getClient￨7￨e (￨7￨e )￨7￨e .￨7￨e submitTopology￨7￨e (￨7￨e name￨7￨e ,￨7￨e StormSubmitter￨7￨e .￨7￨e submittedJar￨7￨e ,￨7￨e serConf￨7￨e ,￨7￨e topology￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f catch￨5￨f (￨5￨f InvalidTopologyException￨6￨p e￨6￨p )￨5￨f {￨5￨f <START_BUG>￨6￨b StormSubmitter￨6￨b .￨6￨b LOG￨6￨b .￨6￨b warn￨6￨b (￨6￨b "Topology<seq2seq4repair_space>submission<seq2seq4repair_space>exception"￨6￨b ,￨6￨b e￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b throw￨6￨e e￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f AlreadyAliveException￨6￨p e￨6￨p )￨5￨f {￨5￨f StormSubmitter￨6￨e .￨6￨e LOG￨6￨e .￨6￨e warn￨6￨e (￨6￨e "Topology<seq2seq4repair_space>already<seq2seq4repair_space>alive<seq2seq4repair_space>exception"￨6￨e ,￨6￨e e￨6￨e )￨6￨e ;￨6￨e throw￨6￨e e￨6￨e ;￨6￨e }￨5￨f finally￨5￨f (￨5￨f )￨5￨f {￨5￨f client￨6￨e .￨6￨e close￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j StormSubmitter￨4￨e .￨4￨e LOG￨4￨e .￨4￨e info￨4￨e (￨4￨e (￨4￨e "Finished<seq2seq4repair_space>submitting<seq2seq4repair_space>topology:<seq2seq4repair_space>"￨4￨e +￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f TException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f topologyNameExists￨2￨f (￨2￨f Map￨3￨p conf￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e String￨2￨e submittedJar￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨f static￨2￨f void￨2￨f submitJar￨2￨f (￨2￨f Map￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f submitJar￨2￨f (￨2￨f Map￨3￨p conf￨3￨p ,￨3￨p String￨3￨p localJar￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d IOUtils￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d IOUtils￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d DEFAULT_BUFFER_SIZE￨2￨d =￨2￨d 1024￨2￨d *￨2￨d 4￨2￨d ;￨2￨d public￨2￨d IOUtils￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f static￨2￨f void￨2￨f close￨2￨f (￨2￨f final￨2￨f Closeable￨2￨f closeable￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f closeQuietly￨2￨f (￨2￨f final￨3￨p Closeable￨3￨p closeable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f byte￨2￨f [￨2￨f ]￨2￨f toByteArray￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f byte￨2￨f [￨2￨f ]￨2￨f toByteArray￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f byte￨2￨f [￨2￨f ]￨2￨f toByteArray￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f char￨2￨f [￨2￨f ]￨2￨f toCharArray￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f is￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f char￨2￨f [￨2￨f ]￨2￨f toCharArray￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f is￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f char￨2￨f [￨2￨f ]￨2￨f toCharArray￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toString￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toString￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f toString￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f char￨2￨f [￨2￨f ]￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f String￨2￨f data￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f String￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f String￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f StringBuilder￨2￨f data￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f StringBuilder￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f write￨2￨f (￨2￨f final￨2￨f StringBuilder￨2￨f data￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f copy￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f copy￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f copy￨2￨f (￨2￨f final￨2￨f InputStream￨2￨f input￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f copy￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f ,￨2￨f final￨2￨f Writer￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f copy￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f copy￨2￨f (￨2￨f final￨2￨f Reader￨2￨f input￨2￨f ,￨2￨f final￨2￨f OutputStream￨2￨f output￨2￨f ,￨2￨f final￨2￨f String￨2￨f encoding￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f contentEquals￨2￨f (￨2￨f InputStream￨2￨f input1￨2￨f ,￨2￨f InputStream￨2￨f input2￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f contentEquals￨2￨f (￨2￨f Reader￨2￨f input1￨2￨f ,￨2￨f Reader￨2￨f input2￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Time￨2￨f getLastModified￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c file￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j long￨3￨e millis￨3￨e =￨3￨e file￨3￨e .￨3￨e lastModified￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j millis￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b Time￨3￨b .￨3￨b valueOf￨3￨b (￨3￨b millis￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParameterizedSingleTypeReference￨1￨d extends￨1￨d ArrayTypeReference￨1￨d {￨1￨d public￨2￨e TypeReference￨2￨e [￨2￨e ]￨2￨e typeArguments￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e didResolve￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f ParameterizedSingleTypeReference￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p name￨3￨p ,￨3￨p TypeReference￨3￨p [￨3￨p ]￨3￨p typeArguments￨3￨p ,￨3￨p int￨3￨p dim￨3￨p ,￨3￨p long￨3￨p pos￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkBounds￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeReference￨2￨f copyDims￨2￨f (￨2￨f int￨3￨p dim￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f getParameterizedTypeName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f TypeBinding￨2￨f getTypeBinding￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f internalResolveType￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p ReferenceBinding￨3￨p enclosingType￨3￨p ,￨3￨p boolean￨3￨p checkBounds￨3￨p )￨2￨f {￨2￨f this￨3￨e .￨3￨e constant￨3￨e =￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e ;￨3￨e if￨3￨j (￨3￨j this￨4￨c .￨4￨c didResolve￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c .￨5￨c isValidBinding￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j return￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e didResolve￨3￨e =￨3￨e true￨3￨e ;￨3￨e if￨3￨j (￨3￨j enclosingType￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e scope￨4￨e .￨4￨e getType￨4￨e (￨4￨e token￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c .￨5￨c isValidBinding￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j reportInvalidType￨5￨e (￨5￨e scope￨5￨e )￨5￨e ;￨5￨e return￨5￨e null￨5￨e ;￨5￨e }￨4￨j enclosingType￨4￨e =￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e .￨4￨e enclosingType￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c enclosingType￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c enclosingType￨5￨c .￨5￨c isGenericType￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j ReferenceBinding￨5￨e currentType￨5￨e =￨5￨e (￨5￨e (￨5￨e ReferenceBinding￨5￨e )￨5￨e (￨5￨e this￨5￨e .￨5￨e resolvedType￨5￨e )￨5￨e )￨5￨e ;￨5￨e enclosingType￨5￨e =￨5￨e (￨5￨e currentType￨5￨e .￨5￨e isStatic￨5￨e (￨5￨e )￨5￨e )￨5￨e ?￨5￨e (￨5￨e (￨5￨e ReferenceBinding￨5￨e )￨5￨e (￨5￨e scope￨5￨e .￨5￨e environment￨5￨e (￨5￨e )￨5￨e .￨5￨e convertToRawType￨5￨e (￨5￨e enclosingType￨5￨e )￨5￨e )￨5￨e )￨5￨e :￨5￨e scope￨5￨e .￨5￨e environment￨5￨e (￨5￨e )￨5￨e .￨5￨e convertToParameterizedType￨5￨e (￨5￨e enclosingType￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e scope￨4￨e .￨4￨e getMemberType￨4￨e (￨4￨e token￨4￨e ,￨4￨e (￨4￨e (￨4￨e ReferenceBinding￨4￨e )￨4￨e (￨4￨e enclosingType￨4￨e .￨4￨e erasure￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c .￨5￨c isValidBinding￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e invalidEnclosingType￨5￨e (￨5￨e this￨5￨e ,￨5￨e this￨5￨e .￨5￨e resolvedType￨5￨e ,￨5￨e enclosingType￨5￨e )￨5￨e ;￨5￨e return￨5￨e null￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j isTypeUseDeprecated￨5￨c (￨5￨c this￨5￨c .￨5￨c resolvedType￨5￨c ,￨5￨c scope￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e deprecatedType￨5￨e (￨5￨e this￨5￨e .￨5￨e resolvedType￨5￨e ,￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j boolean￨3￨e isClassScope￨3￨e =￨3￨e (￨3￨e scope￨3￨e .￨3￨e kind￨3￨e )￨3￨e ==￨3￨e (￨3￨e Scope￨3￨e .￨3￨e CLASS_SCOPE￨3￨e )￨3￨e ;￨3￨e TypeReference￨3￨e keep￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j isClassScope￨4￨c )￨3￨j {￨3￨j keep￨4￨e =￨4￨e (￨4￨e (￨4￨e ClassScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e .￨4￨e superTypeReference￨4￨e ;￨4￨e (￨4￨e (￨4￨e ClassScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e .￨4￨e superTypeReference￨4￨e =￨4￨e null￨4￨e ;￨4￨e }￨3￨j ReferenceBinding￨3￨e currentType￨3￨e =￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e )￨3￨e ;￨3￨e int￨3￨e argLength￨3￨e =￨3￨e this￨3￨e .￨3￨e typeArguments￨3￨e .￨3￨e length￨3￨e ;￨3￨e TypeBinding￨3￨e [￨3￨e ]￨3￨e argTypes￨3￨e =￨3￨e new￨3￨e TypeBinding￨3￨e [￨3￨e argLength￨3￨e ]￨3￨e ;￨3￨e boolean￨3￨e argHasError￨3￨e =￨3￨e false￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c argLength￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l TypeReference￨4￨e typeArgument￨4￨e =￨4￨e this￨4￨e .￨4￨e typeArguments￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e TypeBinding￨4￨e argType￨4￨e =￨4￨e (￨4￨e isClassScope￨4￨e )￨4￨e ?￨4￨e typeArgument￨4￨e .￨4￨e resolveTypeArgument￨4￨e (￨4￨e (￨4￨e (￨4￨e ClassScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e ,￨4￨e currentType￨4￨e ,￨4￨e i￨4￨e )￨4￨e :￨4￨e typeArgument￨4￨e .￨4￨e resolveTypeArgument￨4￨e (￨4￨e (￨4￨e (￨4￨e BlockScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e ,￨4￨e currentType￨4￨e ,￨4￨e i￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j argType￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j argHasError￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j argTypes￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e argType￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j argHasError￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j isClassScope￨4￨c )￨3￨j {￨3￨j (￨4￨e (￨4￨e ClassScope￨4￨e )￨4￨e (￨4￨e scope￨4￨e )￨4￨e )￨4￨e .￨4￨e superTypeReference￨4￨e =￨4￨e keep￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c ClassScope￨5￨c )￨5￨c (￨5￨c scope￨5￨c )￨5￨c )￨5￨c .￨5￨c detectHierarchyCycle￨5￨c (￨5￨c currentType￨5￨c ,￨5￨c this￨5￨c ,￨5￨c argTypes￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j }￨3￨j TypeVariableBinding￨3￨e [￨3￨e ]￨3￨e typeVariables￨3￨e =￨3￨e currentType￨3￨e .￨3￨e typeVariables￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b typeVariables￨3￨b ==￨3￨b (￨3￨b NoTypeVariables￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b scope￨3￨e .￨3￨e problemReporter￨3￨e (￨3￨e )￨3￨e .￨3￨e nonGenericTypeCannotBeParameterized￨3￨e (￨3￨e this￨3￨e ,￨3￨e currentType￨3￨e ,￨3￨e argTypes￨3￨e )￨3￨e ;￨3￨e return￨3￨e null￨3￨e ;￨3￨e else￨3￨j if￨3￨j (￨3￨j argLength￨4￨c !=￨4￨c (￨4￨c typeVariables￨4￨c .￨4￨c length￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e incorrectArityForParameterizedType￨4￨e (￨4￨e this￨4￨e ,￨4￨e currentType￨4￨e ,￨4￨e argTypes￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c !￨4￨c (￨4￨c currentType￨4￨c .￨4￨c isStatic￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c enclosingType￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c enclosingType￨4￨c .￨4￨c isRawType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e rawMemberTypeCannotBeParameterized￨4￨e (￨4￨e this￨4￨e ,￨4￨e scope￨4￨e .￨4￨e environment￨4￨e (￨4￨e )￨4￨e .￨4￨e createRawType￨4￨e (￨4￨e (￨4￨e (￨4￨e ReferenceBinding￨4￨e )￨4￨e (￨4￨e currentType￨4￨e .￨4￨e erasure￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e enclosingType￨4￨e )￨4￨e ,￨4￨e argTypes￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j ParameterizedTypeBinding￨3￨e parameterizedType￨3￨e =￨3￨e scope￨3￨e .￨3￨e environment￨3￨e (￨3￨e )￨3￨e .￨3￨e createParameterizedType￨3￨e (￨3￨e (￨3￨e (￨3￨e ReferenceBinding￨3￨e )￨3￨e (￨3￨e currentType￨3￨e .￨3￨e erasure￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ,￨3￨e argTypes￨3￨e ,￨3￨e enclosingType￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j checkBounds￨4￨c )￨3￨j {￨3￨j parameterizedType￨4￨e .￨4￨e boundCheck￨4￨e (￨4￨e scope￨4￨e ,￨4￨e this￨4￨e .￨4￨e typeArguments￨4￨e )￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e resolvedType￨3￨e =￨3￨e parameterizedType￨3￨e ;￨3￨e if￨3￨j (￨3￨j isTypeUseDeprecated￨4￨c (￨4￨c this￨4￨c .￨4￨c resolvedType￨4￨c ,￨4￨c scope￨4￨c )￨4￨c )￨3￨j {￨3￨j reportDeprecatedType￨4￨e (￨4￨e scope￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c dimensions￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c dimensions￨5￨c )￨5￨c >￨5￨c 255￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e tooManyDimensions￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j this￨4￨e .￨4￨e resolvedType￨4￨e =￨4￨e scope￨4￨e .￨4￨e createArrayType￨4￨e (￨4￨e this￨4￨e .￨4￨e resolvedType￨4￨e ,￨4￨e dimensions￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e ;￨3￨e }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p boolean￨3￨p checkBounds￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveTypeEnclosing￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p ReferenceBinding￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SetClasspathOperation￨1￨d extends￨1￨d JavaModelOperation￨1￨d {￨1￨d IClasspathEntry￨2￨e [￨2￨e ]￨2￨e oldResolvedPath￨2￨e ;￨2￨e IClasspathEntry￨2￨e [￨2￨e ]￨2￨e newResolvedPath￨2￨e ;￨2￨e IClasspathEntry￨2￨e [￨2￨e ]￨2￨e newRawPath￨2￨e ;￨2￨e boolean￨2￨e canChangeResource￨2￨e ;￨2￨e boolean￨2￨e needCycleCheck￨2￨e ;￨2￨e boolean￨2￨e needValidation￨2￨e ;￨2￨e boolean￨2￨e needSave￨2￨e ;￨2￨e IPath￨2￨e newOutputLocation￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e IClasspathEntry￨2￨e [￨2￨e ]￨2￨e ReuseClasspath￨2￨e =￨2￨e new￨2￨e IClasspathEntry￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e IClasspathEntry￨2￨e [￨2￨e ]￨2￨e UpdateClasspath￨2￨e =￨2￨e new￨2￨e IClasspathEntry￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e IPath￨2￨e ReuseOutputLocation￨2￨e =￨2￨e new￨2￨e Path￨2￨e (￨2￨e "Reuse<seq2seq4repair_space>Existing<seq2seq4repair_space>Output<seq2seq4repair_space>Location"￨2￨e )￨2￨e ;￨2￨e public￨2￨f SetClasspathOperation￨2￨f (￨2￨f IJavaProject￨3￨p project￨3￨p ,￨3￨p IClasspathEntry￨3￨p [￨3￨p ]￨3￨p oldResolvedPath￨3￨p ,￨3￨p IClasspathEntry￨3￨p [￨3￨p ]￨3￨p newRawPath￨3￨p ,￨3￨p IPath￨3￨p newOutputLocation￨3￨p ,￨3￨p boolean￨3￨p canChangeResource￨3￨p ,￨3￨p boolean￨3￨p needValidation￨3￨p ,￨3￨p boolean￨3￨p needSave￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addClasspathDeltas￨2￨f (￨2￨f IPackageFragmentRoot￨3￨p [￨3￨p ]￨3￨p roots￨3￨p ,￨3￨p int￨3￨p flag￨3￨p ,￨3￨p JavaElementDelta￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f classpathContains￨2￨f (￨2￨f IClasspathEntry￨3￨p [￨3￨p ]￨3￨p list￨3￨p ,￨3￨p IClasspathEntry￨3￨p entry￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f collectAllSubfolders￨2￨f (￨2￨f IFolder￨2￨f folder￨2￨f ,￨2￨f ArrayList￨2￨f collection￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ArrayList￨2￨f determineAffectedPackageFragments￨2￨f (￨2￨f IPath￨2￨f location￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f executeOperation￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f generateClasspathChangeDeltas￨2￨f (￨2￨f IClasspathEntry￨3￨p [￨3￨p ]￨3￨p oldResolvedPath￨3￨p ,￨3￨p IClasspathEntry￨3￨p [￨3￨p ]￨3￨p newResolvedPath￨3￨p ,￨3￨p JavaModelManager￨3￨p manager￨3￨p ,￨3￨p final￨3￨p JavaProject￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f JavaProject￨2￨f getProject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f getSourceAttachmentDeltaFlag￨2￨f (￨2￨f IPath￨3￨p oldPath￨3￨p ,￨3￨p IPath￨3￨p newPath￨3￨p ,￨3￨p IPath￨3￨p sourcePath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isReadOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f saveClasspathIfNecessary￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateClasspath￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateAffectedProjects￨2￨f (￨2￨f IPath￨3￨p prerequisiteProjectPath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateCycleMarkersIfNecessary￨2￨f (￨2￨f IClasspathEntry￨3￨p [￨3￨p ]￨3￨p newResolvedPath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateOutputLocation￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateProjectReferencesIfNecessary￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c this￨4￨c .￨4￨c canChangeResource￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c this￨4￨c .￨4￨c newRawPath￨4￨c )￨4￨c ==￨4￨c (￨4￨c SetClasspathOperation￨4￨c .￨4￨c ReuseClasspath￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c (￨4￨c this￨4￨c .￨4￨c newRawPath￨4￨c )￨4￨c ==￨4￨c (￨4￨c SetClasspathOperation￨4￨c .￨4￨c UpdateClasspath￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j JavaProject￨3￨e jproject￨3￨e =￨3￨e getProject￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e [￨3￨e ]￨3￨e oldRequired￨3￨e =￨3￨e jproject￨3￨e .￨3￨e projectPrerequisites￨3￨e (￨3￨e this￨3￨e .￨3￨e oldResolvedPath￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c newResolvedPath￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b this￨4￨b .￨4￨b newResolvedPath￨4￨b =￨4￨b jproject￨4￨b .￨4￨b getResolvedClasspath￨4￨b (￨4￨b this￨4￨b .￨4￨b newRawPath￨4￨b ,￨4￨b true￨4￨b ,￨4￨b this￨4￨b .￨4￨b needValidation￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j String￨3￨e [￨3￨e ]￨3￨e newRequired￨3￨e =￨3￨e jproject￨3￨e .￨3￨e projectPrerequisites￨3￨e (￨3￨e this￨3￨e .￨3￨e newResolvedPath￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f IProject￨4￨e project￨4￨e =￨4￨e jproject￨4￨e .￨4￨e getProject￨4￨e (￨4￨e )￨4￨e ;￨4￨e IProjectDescription￨4￨e description￨4￨e =￨4￨e project￨4￨e .￨4￨e getDescription￨4￨e (￨4￨e )￨4￨e ;￨4￨e IProject￨4￨e [￨4￨e ]￨4￨e projectReferences￨4￨e =￨4￨e description￨4￨e .￨4￨e getReferencedProjects￨4￨e (￨4￨e )￨4￨e ;￨4￨e HashSet￨4￨e oldReferences￨4￨e =￨4￨e new￨4￨e HashSet￨4￨e (￨4￨e projectReferences￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c projectReferences￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e projectName￨5￨e =￨5￨e projectReferences￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e ;￨5￨e oldReferences￨5￨e .￨5￨e add￨5￨e (￨5￨e projectName￨5￨e )￨5￨e ;￨5￨e }￨4￨l HashSet￨4￨e newReferences￨4￨e =￨4￨e (￨4￨e (￨4￨e HashSet￨4￨e )￨4￨e (￨4￨e oldReferences￨4￨e .￨4￨e clone￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c oldRequired￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e projectName￨5￨e =￨5￨e oldRequired￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e newReferences￨5￨e .￨5￨e remove￨5￨e (￨5￨e projectName￨5￨e )￨5￨e ;￨5￨e }￨4￨l for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c newRequired￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l String￨5￨e projectName￨5￨e =￨5￨e newRequired￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e newReferences￨5￨e .￨5￨e add￨5￨e (￨5￨e projectName￨5￨e )￨5￨e ;￨5￨e }￨4￨l Iterator￨4￨e iter￨4￨e ;￨4￨e int￨4￨e newSize￨4￨e =￨4￨e newReferences￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c oldReferences￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c newSize￨5￨c )￨4￨j {￨4￨j iter￨5￨e =￨5￨e newReferences￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l iter￨6￨c .￨6￨c hasNext￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j !￨7￨c (￨7￨c oldReferences￨7￨c .￨7￨c contains￨7￨c (￨7￨c iter￨7￨c .￨7￨c next￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j break￨7￨e checkIdentity￨7￨e ;￨7￨e }￨6￨j }￨5￨l return￨5￨e ;￨5￨e }￨4￨j }￨4￨e String￨4￨e [￨4￨e ]￨4￨e requiredProjectNames￨4￨e =￨4￨e new￨4￨e String￨4￨e [￨4￨e newSize￨4￨e ]￨4￨e ;￨4￨e int￨4￨e index￨4￨e =￨4￨e 0￨4￨e ;￨4￨e iter￨4￨e =￨4￨e newReferences￨4￨e .￨4￨e iterator￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l iter￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l requiredProjectNames￨5￨e [￨5￨e (￨5￨e index￨5￨e ++￨5￨e )￨5￨e ]￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e iter￨5￨e .￨5￨e next￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l Util￨4￨e .￨4￨e sort￨4￨e (￨4￨e requiredProjectNames￨4￨e )￨4￨e ;￨4￨e IProject￨4￨e [￨4￨e ]￨4￨e requiredProjectArray￨4￨e =￨4￨e new￨4￨e IProject￨4￨e [￨4￨e newSize￨4￨e ]￨4￨e ;￨4￨e IWorkspaceRoot￨4￨e wksRoot￨4￨e =￨4￨e project￨4￨e .￨4￨e getWorkspace￨4￨e (￨4￨e )￨4￨e .￨4￨e getRoot￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c newSize￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l requiredProjectArray￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e wksRoot￨5￨e .￨5￨e getProject￨5￨e (￨5￨e requiredProjectNames￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨l description￨4￨e .￨4￨e setReferencedProjects￨4￨e (￨4￨e requiredProjectArray￨4￨e )￨4￨e ;￨4￨e project￨4￨e .￨4￨e setDescription￨4￨e (￨4￨e description￨4￨e ,￨4￨e this￨4￨e .￨4￨e fMonitor￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f CoreException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e JavaModelException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f IJavaModelStatus￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DoubleDatatypeValidator￨1￨d extends￨1￨d AbstractNumericFacetValidator￨1￨d {￨1￨d public￨2￨f DoubleDatatypeValidator￨2￨f (￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeFacetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DoubleDatatypeValidator￨2￨f (￨2￨f DatatypeValidator￨2￨f base￨2￨f ,￨2￨f Hashtable￨2￨f facets￨2￨f ,￨2￨f boolean￨2￨f derivedByList￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeFacetException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f compare￨2￨f (￨2￨f String￨3￨p value1￨3￨p ,￨3￨p String￨3￨p value2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f compareValues￨2￨f (￨2￨f Object￨3￨p value1￨3￨p ,￨3￨p Object￨3￨p value2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMaxInclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMinInclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMaxExclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setMinExclusive￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setEnumeration￨2￨f (￨2￨f Vector￨2￨f enumeration￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j enumeration￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j fEnumeration￨4￨e =￨4￨e new￨4￨e Double￨4￨e [￨4￨e enumeration￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e Object￨4￨e baseEnum￨4￨e =￨4￨e null￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c enumeration￨6￨c .￨6￨c size￨6￨c (￨6￨c )￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b fEnumeration￨6￨b [￨6￨b i￨6￨b ]￨6￨b =￨6￨b new￨6￨b Double￨6￨b (￨6￨b (￨6￨b (￨6￨b String￨6￨b )￨6￨b (￨6￨b enumeration￨6￨b .￨6￨b elementAt￨6￨b (￨6￨b i￨6￨b )￨6￨b )￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b (￨6￨e (￨6￨e DoubleDatatypeValidator￨6￨e )￨6￨e (￨6￨e fBaseValidator￨6￨e )￨6￨e )￨6￨e .￨6￨e validate￨6￨e (￨6￨e (￨6￨e (￨6￨e String￨6￨e )￨6￨e (￨6￨e enumeration￨6￨e .￨6￨e elementAt￨6￨e (￨6￨e i￨6￨e )￨6￨e )￨6￨e )￨6￨e ,￨6￨e null￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e InvalidDatatypeValueException￨5￨e (￨5￨e e￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j }￨2￨f protected￨2￨f String￨2￨f getMaxInclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMinInclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMaxExclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMinExclusive￨2￨f (￨2￨f boolean￨3￨p isBase￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkContentEnum￨2￨f (￨2￨f String￨2￨f content￨2￨f ,￨2￨f Object￨2￨f state￨2￨f ,￨2￨f Vector￨2￨f enumeration￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkContent￨2￨f (￨2￨f String￨2￨f content￨2￨f ,￨2￨f Object￨2￨f state￨2￨f ,￨2￨f Vector￨2￨f enumeration￨2￨f ,￨2￨f boolean￨2￨f asBase￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Double￨2￨f dValueOf￨2￨f (￨2￨f String￨2￨f s￨2￨f )￨2￨f throws￨2￨f NumberFormatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f enumCheck￨2￨f (￨2￨f double￨2￨f v￨2￨f ,￨2￨f Double￨2￨f [￨2￨f ]￨2￨f enumDoubles￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f compareDoubles￨2￨f (￨2￨f double￨3￨p d1￨3￨p ,￨3￨p double￨3￨p d2￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LocalizedFormatsTest￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMessageNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b Assert￨3￨b .￨3￨b assertEquals￨3￨b (￨3￨b 309￨3￨b ,￨3￨b LocalizedFormats￨3￨b .￨3￨b values￨3￨b (￨3￨b )￨3￨b .￨3￨b length￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testAllKeysPresentInPropertiesFiles￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testAllPropertiesCorrespondToKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testNoMissingFrenchTranslation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testNoOpEnglishTranslation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testVariablePartsConsistency￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d @￨1￨d RunAsClient￨1￨d public￨1￨d class￨1￨d SimpleStatelessWebserviceEndpointTestCase￨1￨d {￨1￨d @￨2￨e ArquillianResource￨2￨e URL￨2￨e baseUrl￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d SimpleStatelessWebserviceEndpointTestCase￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d @￨2￨d Deployment￨2￨d (￨2￨d testable￨2￨d =￨2￨d false￨2￨d )￨2￨d public￨2￨d static￨2￨d JavaArchive￨2￨d createDeployment￨2￨d (￨2￨d )￨2￨d {￨2￨d final￨3￨e JavaArchive￨3￨e jar￨3￨e =￨3￨e ShrinkWrap￨3￨e .￨3￨e create￨3￨e (￨3￨e JavaArchive￨3￨e .￨3￨e class￨3￨e ,￨3￨e "stateless-ws-endpoint-example.jar"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b jar￨3￨b .￨3￨b addPackage￨3￨b (￨3￨b SimpleStatelessWebserviceEndpointImpl￨3￨b .￨3￨b class￨3￨b .￨3￨b getPackage￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b SimpleStatelessWebserviceEndpointTestCase￨3￨e .￨3￨e log￨3￨e .￨3￨e info￨3￨e (￨3￨e jar￨3￨e .￨3￨e toString￨3￨e (￨3￨e true￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e jar￨3￨e ;￨3￨e }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSimpleStatelessWebserviceEndpoint￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRemoteAccess￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StreamContextManager￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d logger_￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d StreamContextManager￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d enum￨2￨d StreamCompletionAction￨2￨d {￨2￨d DELETE￨3￨e ,￨3￨e STREAM￨3￨e ;￨3￨e }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamContext￨2￨d implements￨2￨d Serializable￨2￨d {￨2￨d private￨3￨d static￨3￨d Logger￨3￨d logger_￨3￨d =￨3￨d Logger￨3￨d .￨3￨d getLogger￨3￨d (￨3￨d StreamContextManager￨3￨d .￨3￨d StreamContext￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d private￨3￨d static￨3￨d ICompactSerializer￨3￨d <￨3￨d StreamContextManager￨3￨d .￨3￨d StreamContext￨3￨d >￨3￨d serializer_￨3￨d ;￨3￨d public￨3￨d static￨3￨d ICompactSerializer￨3￨d <￨3￨d StreamContextManager￨3￨d .￨3￨d StreamContext￨3￨d >￨3￨d serializer￨3￨d (￨3￨d )￨3￨d {￨3￨d }￨3￨d private￨3￨e String￨3￨e targetFile_￨3￨e ;￨3￨e private￨3￨e long￨3￨e expectedBytes_￨3￨e ;￨3￨e public￨3￨f StreamContext￨3￨f (￨3￨f String￨4￨p targetFile￨4￨p ,￨4￨p long￨4￨p expectedBytes￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getTargetFile￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setTargetFile￨3￨f (￨3￨f String￨4￨p file￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f getExpectedBytes￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f Object￨4￨p o￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamContextSerializer￨2￨d implements￨2￨d ICompactSerializer￨2￨d <￨2￨d StreamContextManager￨2￨d .￨2￨d StreamContext￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f serialize￨3￨f (￨3￨f StreamContextManager￨3￨f .￨3￨f StreamContext￨3￨f sc￨3￨f ,￨3￨f DataOutputStream￨3￨f dos￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f StreamContextManager￨3￨f .￨3￨f StreamContext￨3￨f deserialize￨3￨f (￨3￨f DataInputStream￨3￨f dis￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamStatus￨2￨d {￨2￨d private￨3￨e static￨3￨e ICompactSerializer￨3￨e <￨3￨e StreamContextManager￨3￨e .￨3￨e StreamStatus￨3￨e >￨3￨e serializer_￨3￨e ;￨3￨e public￨3￨f static￨3￨f ICompactSerializer￨3￨f <￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatus￨3￨f >￨3￨f serializer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨e String￨3￨e file_￨3￨e ;￨3￨e private￨3￨e long￨3￨e expectedBytes_￨3￨e ;￨3￨e private￨3￨e StreamContextManager￨3￨e .￨3￨e StreamCompletionAction￨3￨e action_￨3￨e ;￨3￨e public￨3￨f StreamStatus￨3￨f (￨3￨f String￨4￨p file￨4￨p ,￨4￨p long￨4￨p expectedBytes￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getFile￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f getExpectedBytes￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f setAction￨3￨f (￨3￨f StreamContextManager￨4￨p .￨4￨p StreamCompletionAction￨4￨p action￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f StreamContextManager￨3￨f .￨3￨f StreamCompletionAction￨3￨f getAction￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamStatusSerializer￨2￨d implements￨2￨d ICompactSerializer￨2￨d <￨2￨d StreamContextManager￨2￨d .￨2￨d StreamStatus￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f serialize￨3￨f (￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatus￨3￨f streamStatus￨3￨f ,￨3￨f DataOutputStream￨3￨f dos￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatus￨3￨f deserialize￨3￨f (￨3￨f DataInputStream￨3￨f dis￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamStatusMessage￨2￨d implements￨2￨d Serializable￨2￨d {￨2￨d private￨3￨e static￨3￨e ICompactSerializer￨3￨e <￨3￨e StreamContextManager￨3￨e .￨3￨e StreamStatusMessage￨3￨e >￨3￨e serializer_￨3￨e ;￨3￨e public￨3￨f static￨3￨f ICompactSerializer￨3￨f <￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatusMessage￨3￨f >￨3￨f serializer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f Message￨3￨f makeStreamStatusMessage￨3￨f (￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatusMessage￨3￨f streamStatusMessage￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f ByteArrayOutputStream￨4￨e bos￨4￨e =￨4￨e new￨4￨e ByteArrayOutputStream￨4￨e (￨4￨e )￨4￨e ;￨4￨e DataOutputStream￨4￨e dos￨4￨e =￨4￨e new￨4￨e DataOutputStream￨4￨e (￨4￨e bos￨4￨e )￨4￨e ;￨4￨e StreamContextManager￨4￨e .￨4￨e StreamStatusMessage￨4￨e .￨4￨e serializer￨4￨e (￨4￨e )￨4￨e .￨4￨e serialize￨4￨e (￨4￨e streamStatusMessage￨4￨e ,￨4￨e dos￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b return￨4￨b new￨4￨b Message￨4￨b (￨4￨b StorageService￨4￨b .￨4￨b getLocalStorageEndPoint￨4￨b (￨4￨b )￨4￨b ,￨4￨b ""￨4￨b ,￨4￨b StorageService￨4￨b .￨4￨b bootStrapTerminateVerbHandler_￨4￨b ,￨4￨b new￨4￨b Object￨4￨b [￨4￨b ]￨4￨b {￨4￨b bos￨4￨b .￨4￨b toByteArray￨4￨b (￨4￨b )￨4￨b }￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f protected￨3￨e StreamContextManager￨3￨e .￨3￨e StreamStatus￨3￨e streamStatus_￨3￨e ;￨3￨e public￨3￨f StreamStatusMessage￨3￨f (￨3￨f StreamContextManager￨4￨p .￨4￨p StreamStatus￨4￨p streamStatus￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatus￨3￨f getStreamStatus￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StreamStatusMessageSerializer￨2￨d implements￨2￨d ICompactSerializer￨2￨d <￨2￨d StreamContextManager￨2￨d .￨2￨d StreamStatusMessage￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f serialize￨3￨f (￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatusMessage￨3￨f streamStatusMessage￨3￨f ,￨3￨f DataOutputStream￨3￨f dos￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f StreamContextManager￨3￨f .￨3￨f StreamStatusMessage￨3￨f deserialize￨3￨f (￨3￨f DataInputStream￨3￨f dis￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨e static￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e StreamContextManager￨2￨e .￨2￨e StreamContext￨2￨e >￨2￨e >￨2￨e ctxBag_￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e StreamContextManager￨2￨e .￨2￨e StreamContext￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e StreamContextManager￨2￨e .￨2￨e StreamStatus￨2￨e >￨2￨e >￨2￨e streamStatusBag_￨2￨e =￨2￨e new￨2￨e Hashtable￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e StreamContextManager￨2￨e .￨2￨e StreamStatus￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e IStreamComplete￨2￨e >￨2￨e streamNotificationHandlers_￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e IStreamComplete￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f synchronized￨2￨f StreamContextManager￨2￨f .￨2￨f StreamContext￨2￨f getStreamContext￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f StreamContextManager￨2￨f .￨2￨f StreamStatus￨2￨f getStreamStatus￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f boolean￨2￨f isDone￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f IStreamComplete￨2￨f getStreamCompletionHandler￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f void￨2￨f removeStreamCompletionHandler￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f void￨2￨f registerStreamCompletionHandler￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p IStreamComplete￨3￨p streamComplete￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f synchronized￨2￨f void￨2￨f addStreamContext￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p StreamContextManager￨3￨p .￨3￨p StreamContext￨3￨p streamContext￨3￨p ,￨3￨p StreamContextManager￨3￨p .￨3￨p StreamStatus￨3￨p streamStatus￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CassandraDaemon￨1￨d extends￨1￨d AbstractCassandraDaemon￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d CassandraDaemon￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d TServer￨2￨d serverEngine￨2￨d ;￨2￨d protected￨2￨d void￨2￨d setup￨2￨d (￨2￨d )￨2￨d throws￨2￨d IOException￨2￨d {￨2￨d int￨3￨e listenPort￨3￨e =￨3￨e DatabaseDescriptor￨3￨e .￨3￨e getRpcPort￨3￨e (￨3￨e )￨3￨e ;￨3￨e InetAddress￨3￨e listenAddr￨3￨e =￨3￨e DatabaseDescriptor￨3￨e .￨3￨e getRpcAddress￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j listenAddr￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j listenAddr￨4￨e =￨4￨e FBUtilities￨4￨e .￨4￨e getLocalAddress￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j Thread￨3￨f .￨3￨f setDefaultUncaughtExceptionHandler￨3￨f (￨3￨f new￨3￨f Thread￨3￨f .￨3￨f UncaughtExceptionHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f uncaughtException￨4￨f (￨4￨f Thread￨5￨p t￨5￨p ,￨5￨p Throwable￨5￨p e￨5￨p )￨4￨f {￨4￨f CassandraDaemon￨5￨e .￨5￨e logger￨5￨e .￨5￨e error￨5￨e (￨5￨e (￨5￨e "Uncaught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>thread<seq2seq4repair_space>"￨5￨e +￨5￨e t￨5￨e )￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j e￨6￨c instanceof￨6￨c OutOfMemoryError￨6￨c )￨5￨j {￨5￨j System￨6￨e .￨6￨e exit￨6￨e (￨6￨e 100￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f SystemTable￨4￨e .￨4￨e checkHealth￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f ConfigurationException￨4￨p e￨4￨p )￨3￨f {￨3￨f CassandraDaemon￨4￨e .￨4￨e logger￨4￨e .￨4￨e error￨4￨e (￨4￨e "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e exit￨4￨e (￨4￨e 100￨4￨e )￨4￨e ;￨4￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f DatabaseDescriptor￨4￨e .￨4￨e loadSchemas￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f CassandraDaemon￨4￨e .￨4￨e logger￨4￨e .￨4￨e error￨4￨e (￨4￨e "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e exit￨4￨e (￨4￨e 100￨4￨e )￨4￨e ;￨4￨e }￨3￨f for￨3￨l (￨3￨l String￨4￨c table￨4￨c :￨4￨c DatabaseDescriptor￨4￨c .￨4￨c getTables￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j CassandraDaemon￨5￨c .￨5￨c logger￨5￨c .￨5￨c isDebugEnabled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j CassandraDaemon￨5￨e .￨5￨e logger￨5￨e .￨5￨e debug￨5￨e (￨5￨e (￨5￨e "opening<seq2seq4repair_space>keyspace<seq2seq4repair_space>"￨5￨e +￨5￨e table￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j Table￨4￨e .￨4￨e open￨4￨e (￨4￨e table￨4￨e )￨4￨e ;￨4￨e }￨3￨l CommitLog￨3￨e .￨3￨e recover￨3￨e (￨3￨e )￨3￨e ;￨3￨e instance￨3￨e .￨3￨e checkAllColumnFamilies￨3￨e (￨3￨e )￨3￨e ;￨3￨e UUID￨3￨e currentMigration￨3￨e =￨3￨e DatabaseDescriptor￨3￨e .￨3￨e getDefsVersion￨3￨e (￨3￨e )￨3￨e ;￨3￨e UUID￨3￨e lastMigration￨3￨e =￨3￨e Migration￨3￨e .￨3￨e getLastMigrationId￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c lastMigration￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c lastMigration￨4￨c .￨4￨c timestamp￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c (￨4￨c currentMigration￨4￨c .￨4￨c timestamp￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j MigrationManager￨4￨e .￨4￨e applyMigrations￨4￨e (￨4￨e currentMigration￨4￨e ,￨4￨e lastMigration￨4￨e )￨4￨e ;￨4￨e }￨3￨j StorageService￨3￨e .￨3￨e instance￨3￨e .￨3￨e initServer￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e CassandraServer￨3￨e cassandraServer￨3￨e =￨3￨e new￨3￨e CassandraServer￨3￨e (￨3￨e )￨3￨e ;￨3￨e Cassandra￨3￨e .￨3￨e Processor￨3￨e processor￨3￨e =￨3￨e new￨3￨e Cassandra￨3￨e .￨3￨e Processor￨3￨e (￨3￨e cassandraServer￨3￨e )￨3￨e ;￨3￨e TServerSocket￨3￨e tServerSocket￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f tServerSocket￨4￨e =￨4￨e new￨4￨e TServerSocket￨4￨e (￨4￨e new￨4￨e InetSocketAddress￨4￨e (￨4￨e listenAddr￨4￨e ,￨4￨e listenPort￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f TTransportException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e IOException￨4￨e (￨4￨e String￨4￨e .￨4￨e format￨4￨e (￨4￨e "Unable<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>thrift<seq2seq4repair_space>socket<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨4￨e ,￨4￨e listenAddr￨4￨e ,￨4￨e listenPort￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f CassandraDaemon￨3￨e .￨3￨e logger￨3￨e .￨3￨e info￨3￨e (￨3￨e String￨3￨e .￨3￨e format￨3￨e (￨3￨e "Binding<seq2seq4repair_space>thrift<seq2seq4repair_space>service<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨3￨e ,￨3￨e listenAddr￨3￨e ,￨3￨e listenPort￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b TProtocolFactory￨3￨b tProtocolFactory￨3￨b =￨3￨b new￨3￨b org￨3￨b .￨3￨b apache￨3￨b .￨3￨b thrift￨3￨b .￨3￨b protocol￨3￨b .￨3￨b TBinaryProtocol￨3￨b .￨3￨b Factory￨3￨b (￨3￨b false￨3￨b ,￨3￨b true￨3￨b ,￨3￨b DatabaseDescriptor￨3￨b .￨3￨b getThriftMaxMessageLength￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b TTransportFactory￨3￨e inTransportFactory￨3￨e ;￨3￨e TTransportFactory￨3￨e outTransportFactory￨3￨e ;￨3￨e if￨3￨j (￨3￨j DatabaseDescriptor￨4￨c .￨4￨c isThriftFramed￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j int￨4￨e tFramedTransportSize￨4￨e =￨4￨e DatabaseDescriptor￨4￨e .￨4￨e getThriftFramedTransportSize￨4￨e (￨4￨e )￨4￨e ;￨4￨e inTransportFactory￨4￨e =￨4￨e new￨4￨e TFramedTransport￨4￨e .￨4￨e Factory￨4￨e (￨4￨e tFramedTransportSize￨4￨e )￨4￨e ;￨4￨e outTransportFactory￨4￨e =￨4￨e new￨4￨e TFramedTransport￨4￨e .￨4￨e Factory￨4￨e (￨4￨e tFramedTransportSize￨4￨e )￨4￨e ;￨4￨e CassandraDaemon￨4￨e .￨4￨e logger￨4￨e .￨4￨e info￨4￨e (￨4￨e "Using<seq2seq4repair_space>TFramedTransport<seq2seq4repair_space>with<seq2seq4repair_space>a<seq2seq4repair_space>max<seq2seq4repair_space>frame<seq2seq4repair_space>size<seq2seq4repair_space>of<seq2seq4repair_space>{}<seq2seq4repair_space>bytes."￨4￨e ,￨4￨e tFramedTransportSize￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j inTransportFactory￨4￨e =￨4￨e new￨4￨e TTransportFactory￨4￨e (￨4￨e )￨4￨e ;￨4￨e outTransportFactory￨4￨e =￨4￨e new￨4￨e TTransportFactory￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j CustomTThreadPoolServer￨3￨e .￨3￨e Options￨3￨e options￨3￨e =￨3￨e new￨3￨e CustomTThreadPoolServer￨3￨e .￨3￨e Options￨3￨e (￨3￨e )￨3￨e ;￨3￨e options￨3￨e .￨3￨e minWorkerThreads￨3￨e =￨3￨e 64￨3￨e ;￨3￨e SynchronousQueue￨3￨e <￨3￨e Runnable￨3￨e >￨3￨e executorQueue￨3￨e =￨3￨e new￨3￨e SynchronousQueue￨3￨e <￨3￨e Runnable￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e ExecutorService￨3￨f executorService￨3￨f =￨3￨f new￨3￨f ThreadPoolExecutor￨3￨f (￨3￨f options￨4￨p .￨4￨p minWorkerThreads￨4￨p ,￨4￨p options￨4￨p .￨4￨p maxWorkerThreads￨4￨p ,￨4￨p 60￨4￨p ,￨4￨p TimeUnit￨4￨p .￨4￨p SECONDS￨4￨p ,￨4￨p executorQueue￨4￨p )￨3￨f {￨3￨f @￨4￨f Override￨4￨f protected￨4￨f void￨4￨f afterExecute￨4￨f (￨4￨f Runnable￨5￨p r￨5￨p ,￨5￨p Throwable￨5￨p t￨5￨p )￨4￨f {￨4￨f super￨5￨e .￨5￨e afterExecute￨5￨e (￨5￨e r￨5￨e ,￨5￨e t￨5￨e )￨5￨e ;￨5￨e cassandraServer￨5￨e .￨5￨e logout￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e serverEngine￨3￨e =￨3￨e new￨3￨e CustomTThreadPoolServer￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e thrift￨3￨e .￨3￨e TProcessorFactory￨3￨e (￨3￨e processor￨3￨e )￨3￨e ,￨3￨e tServerSocket￨3￨e ,￨3￨e inTransportFactory￨3￨e ,￨3￨e outTransportFactory￨3￨e ,￨3￨e tProtocolFactory￨3￨e ,￨3￨e tProtocolFactory￨3￨e ,￨3￨e options￨3￨e ,￨3￨e executorService￨3￨e )￨3￨e ;￨3￨e }￨2￨d public￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RootLoggerRemove￨1￨d extends￨1￨d AbstractLoggingSubsystemUpdate￨1￨d <￨1￨d Void￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e -￨2￨e 9178350859833986971L￨2￨e ;￨2￨e public￨2￨f RootLoggerRemove￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f <￨2￨f P￨2￨f >￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f UpdateContext￨3￨p updateContext￨3￨p ,￨3￨p UpdateResultHandler￨3￨p <￨3￨p ?￨3￨p super￨3￨p Void￨3￨p ,￨3￨p P￨3￨p >￨3￨p resultHandler￨3￨p ,￨3￨p P￨3￨p param￨3￨p )￨2￨f {￨2￨f final￨3￨e ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e service￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b service￨4￨b =￨4￨b updateContext￨4￨b .￨4￨b getServiceContainer￨4￨b (￨4￨b )￨4￨b .￨4￨b getRequiredService￨4￨b (￨4￨b ROOT_LOGGER￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f ServiceNotFoundException￨4￨p e￨4￨p )￨3￨f {￨3￨f resultHandler￨4￨e .￨4￨e handleFailure￨4￨e (￨4￨e e￨4￨e ,￨4￨e param￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨f service￨3￨e .￨3￨e setMode￨3￨e (￨3￨e REMOVE￨3￨e )￨3￨e ;￨3￨e service￨3￨e .￨3￨e addListener￨3￨e (￨3￨e new￨3￨e UpdateResultHandler￨3￨e .￨3￨e ServiceRemoveListener￨3￨e <￨3￨e P￨3￨e >￨3￨e (￨3￨e resultHandler￨3￨e ,￨3￨e param￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f RootLoggerAdd￨2￨f getCompensatingUpdate￨2￨f (￨2￨f LoggingSubsystemElement￨3￨p original￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f applyUpdate￨2￨f (￨2￨f LoggingSubsystemElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f UpdateFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AttrImpl￨1￨d extends￨1￨d NodeContainer￨1￨d implements￨1￨d Attr￨1￨d {￨1￨d static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 7277707688218972102L￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e owned￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e specified￨2￨e =￨2￨e true￨2￨e ;￨2￨e protected￨2￨f AttrImpl￨2￨f (￨2￨f DocumentImpl￨3￨p ownerDocument￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f AttrImpl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f short￨2￨f getNodeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setNodeValue￨2￨f (￨2￨f String￨2￨f value￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNodeValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f getParentNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Node￨2￨f cloneNode￨2￨f (￨2￨f boolean￨3￨p deep￨3￨p )￨2￨f {￨2￨f AttrImpl￨3￨e newattr￨3￨e =￨3￨e (￨3￨e (￨3￨e AttrImpl￨3￨e )￨3￨e (￨3￨e super￨3￨e .￨3￨e cloneNode￨3￨e (￨3￨e deep￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b newattr￨3￨b .￨3￨b owned￨3￨b =￨3￨b owned￨3￨b ;￨3￨b <END_BUG>￨3￨b newattr￨3￨e .￨3￨e specified￨3￨e =￨3￨e specified￨3￨e ;￨3￨e return￨3￨e newattr￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setValue￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getSpecified￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Element￨2￨f getElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Element￨2￨f getOwnerElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f normalize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSpecified￨2￨f (￨2￨f boolean￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestRecursiveRelationships￨1￨d extends￨1￨d SingleEMFTestCase￨1￨d {￨1￨d private￨2￨e int￨2￨e _l1Nodes￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e int￨2￨e _l2Nodes￨2￨e =￨2￨e 3￨2￨e ;￨2￨e public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b setUp￨3￨b (￨3￨b Node￨3￨b .￨3￨b class￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testRecursiveNodes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Version￨1￨d {￨1￨d private￨2￨f Version￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f id￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "4.5-SNAPSHOT-20080722-1051"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SizeSelectorTest￨1￨d extends￨1￨d BaseSelectorTest￨1￨d {￨1￨d private￨2￨e Project￨2￨e project￨2￨e ;￨2￨e public￨2￨f SizeSelectorTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BaseSelector￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testValidate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSelectionBehaviour￨2￨f (￨2￨f )￨2￨f {￨2￨f SizeSelector￨3￨e s￨3￨e ;￨3￨e String￨3￨e results￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e kilo￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e (￨3￨e )￨3￨e ;￨3￨e kilo￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "K"￨3￨e )￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e kibi￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e (￨3￨e )￨3￨e ;￨3￨e kibi￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "Ki"￨3￨e )￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e tibi￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e ByteUnits￨3￨e (￨3￨e )￨3￨e ;￨3￨e tibi￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "Ti"￨3￨e )￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e less￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e (￨3￨e )￨3￨e ;￨3￨e less￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "less"￨3￨e )￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e equal￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e (￨3￨e )￨3￨e ;￨3￨e equal￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "equal"￨3￨e )￨3￨e ;￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e more￨3￨e =￨3￨e new￨3￨e SizeSelector￨3￨e .￨3￨e SizeComparisons￨3￨e (￨3￨e )￨3￨e ;￨3￨e more￨3￨e .￨3￨e setValue￨3￨e (￨3￨e "more"￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f makeBed￨4￨e (￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 10￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e less￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TFFFFFFFFFFT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 10￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e more￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TTTTTTTTTTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 32￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e equal￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b assertEquals￨4￨b (￨4￨b "TTFFTFFFFFFT"￨4￨b ,￨4￨b results￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 7￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e more￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setUnits￨4￨e (￨4￨e kilo￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TFTFFTTTTTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 7￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e more￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setUnits￨4￨e (￨4￨e kibi￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TFTFFFTTFTTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setValue￨4￨e (￨4￨e 99999￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setWhen￨4￨e (￨4￨e more￨4￨e )￨4￨e ;￨4￨e s￨4￨e .￨4￨e setUnits￨4￨e (￨4￨e tibi￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TFFFFFFFFFFT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e s￨4￨e =￨4￨e (￨4￨e (￨4￨e SizeSelector￨4￨e )￨4￨e (￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e Parameter￨4￨e param1￨4￨e =￨4￨e new￨4￨e Parameter￨4￨e (￨4￨e )￨4￨e ;￨4￨e Parameter￨4￨e param2￨4￨e =￨4￨e new￨4￨e Parameter￨4￨e (￨4￨e )￨4￨e ;￨4￨e Parameter￨4￨e param3￨4￨e =￨4￨e new￨4￨e Parameter￨4￨e (￨4￨e )￨4￨e ;￨4￨e param1￨4￨e .￨4￨e setName￨4￨e (￨4￨e "value"￨4￨e )￨4￨e ;￨4￨e param1￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "20"￨4￨e )￨4￨e ;￨4￨e param2￨4￨e .￨4￨e setName￨4￨e (￨4￨e "units"￨4￨e )￨4￨e ;￨4￨e param2￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "Ki"￨4￨e )￨4￨e ;￨4￨e param3￨4￨e .￨4￨e setName￨4￨e (￨4￨e "when"￨4￨e )￨4￨e ;￨4￨e param3￨4￨e .￨4￨e setValue￨4￨e (￨4￨e "more"￨4￨e )￨4￨e ;￨4￨e Parameter￨4￨f [￨4￨f ]￨4￨f params￨4￨f =￨4￨f new￨4￨f Parameter￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ;￨4￨e s￨4￨e .￨4￨e setParameters￨4￨e (￨4￨e params￨4￨e )￨4￨e ;￨4￨e results￨4￨e =￨4￨e selectionString￨4￨e (￨4￨e s￨4￨e )￨4￨e ;￨4￨e assertEquals￨4￨e (￨4￨e "TFFFFFFTFFTT"￨4￨e ,￨4￨e results￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f cleanupBed￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JasperReportsUtilsTests￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testRenderAsCsvWithDataSource￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsCsvWithCollection￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsCsvWithExporterParameters￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsHtmlWithDataSource￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsHtmlWithCollection￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsHtmlWithExporterParameters￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsPdfWithDataSource￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsPdfWithCollection￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsPdfWithExporterParameters￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsXlsWithDataSource￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsXlsWithCollection￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderAsXlsWithExporterParameters￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderWithWriter￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRenderWithOutputStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertCsvOutputCorrect￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertHtmlOutputCorrect￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertPdfOutputCorrect￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f output￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertXlsOutputCorrect￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f output￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f HSSFWorkbook￨3￨e workbook￨3￨e =￨3￨e new￨3￨e HSSFWorkbook￨3￨e (￨3￨e new￨3￨e ByteArrayInputStream￨3￨e (￨3￨e output￨3￨e )￨3￨e )￨3￨e ;￨3￨e HSSFSheet￨3￨e sheet￨3￨e =￨3￨e workbook￨3￨e .￨3￨e getSheetAt￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e "Sheet<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3￨e ,￨3￨e sheet￨3￨e )￨3￨e ;￨3￨e HSSFRow￨3￨e row￨3￨e =￨3￨e sheet￨3￨e .￨3￨e getRow￨3￨e (￨3￨e 3￨3￨e )￨3￨e ;￨3￨e HSSFCell￨3￨e cell￨3￨e =￨3￨e row￨3￨e .￨3￨e getCell￨3￨e (￨3￨e (￨3￨e (￨3￨e short￨3￨e )￨3￨e (￨3￨e 1￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e "Cell<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3￨e ,￨3￨e cell￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertEquals￨3￨b (￨3￨b "Cell<seq2seq4repair_space>content<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>Dear<seq2seq4repair_space>Lord!"￨3￨b ,￨3￨b "Dear<seq2seq4repair_space>Lord!"￨3￨b ,￨3￨b cell￨3￨b .￨3￨b getRichStringCellValue￨3￨b (￨3￨b )￨3￨b .￨3￨b getString￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f JasperReport￨2￨f getReport￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f Object￨2￨f >￨2￨f getParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JRDataSource￨2￨f getDataSource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f PersonBean￨2￨f >￨2￨f getData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d SimpleProgressMonitor￨2￨d implements￨2￨d JRExportProgressMonitor￨2￨d {￨2￨d private￨3￨e boolean￨3￨e invoked￨3￨e =￨3￨e false￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f afterPageExport￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isInvoked￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d IIOPJndiBindingProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e EEModuleDescription￨3￨e moduleDescription￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e EE_MODULE_DESCRIPTION￨3￨e )￨3￨e ;￨3￨e final￨3￨e Module￨3￨e module￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MODULE￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j moduleDescription￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b JdkORBDeploymentMarker￨3￨b .￨3￨b isJacORBDeployment￨3￨b (￨3￨b deploymentUnit￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e }￨3￨e final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c DeploymentTypeMarker￨4￨c .￨4￨c isType￨4￨c (￨4￨c WAR￨4￨c ,￨4￨c deploymentUnit￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c DeploymentTypeMarker￨4￨c .￨4￨c isType￨4￨c (￨4￨c APPLICATION_CLIENT￨4￨c ,￨4￨c deploymentUnit￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e ServiceName￨4￨e moduleContextServiceName￨4￨e =￨4￨e ContextNames￨4￨e .￨4￨e contextServiceNameOfModule￨4￨e (￨4￨e moduleDescription￨4￨e .￨4￨e getApplicationName￨4￨e (￨4￨e )￨4￨e ,￨4￨e moduleDescription￨4￨e .￨4￨e getModuleName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e bindService￨4￨e (￨4￨e serviceTarget￨4￨e ,￨4￨e moduleContextServiceName￨4￨e ,￨4￨e module￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l ComponentDescription￨4￨c component￨4￨c :￨4￨c moduleDescription￨4￨c .￨4￨c getComponentDescriptions￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c component￨5￨c .￨5￨c getNamingMode￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c ComponentNamingMode￨5￨c .￨5￨c CREATE￨5￨c )￨5￨c )￨4￨j {￨4￨j final￨5￨e ServiceName￨5￨e compContextServiceName￨5￨e =￨5￨e ContextNames￨5￨e .￨5￨e contextServiceNameOfComponent￨5￨e (￨5￨e moduleDescription￨5￨e .￨5￨e getApplicationName￨5￨e (￨5￨e )￨5￨e ,￨5￨e moduleDescription￨5￨e .￨5￨e getModuleName￨5￨e (￨5￨e )￨5￨e ,￨5￨e component￨5￨e .￨5￨e getComponentName￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e bindService￨5￨e (￨5￨e serviceTarget￨5￨e ,￨5￨e compContextServiceName￨5￨e ,￨5￨e module￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f private￨2￨f void￨2￨f bindService￨2￨f (￨2￨f final￨3￨p ServiceTarget￨3￨p serviceTarget￨3￨p ,￨3￨p final￨3￨p ServiceName￨3￨p contextServiceName￨3￨p ,￨3￨p final￨3￨p Module￨3￨p module￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AspectDeclaration￨1￨d extends￨1￨d MemberTypeDeclaration￨1￨d {￨1￨d private￨2￨e Aspect￨2￨e aspectAttribute￨2￨e ;￨2￨e public￨2￨e PerClause￨2￨e perClause￨2￨e ;￨2￨e public￨2￨e ResolvedMember￨2￨e aspectOfMethod￨2￨e ;￨2￨e public￨2￨e ResolvedMember￨2￨e hasAspectMethod￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isPrivileged￨2￨e ;￨2￨e public￨2￨e EclipseObjectType￨2￨e typeX￨2￨e ;￨2￨e public￨2￨e EclipseWorld￨2￨e world￨2￨e ;￨2￨e public￨2￨e TypePattern￨2￨e dominatesPattern￨2￨e ;￨2￨e public￨2￨f AspectDeclaration￨2￨f (￨2￨f CompilationResult￨3￨p compilationResult￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAbstract￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f checkSpec￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f ClassFile￨3￨p enclosingClassFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f needClassInitMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f generateAttributes￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerSupportMembers￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f interface￨2￨f BodyGenerator￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f generate￨3￨f (￨3￨f CodeStream￨4￨p codeStream￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨f void￨2￨f generateMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p ,￨3￨p ResolvedMember￨3￨p member￨3￨p ,￨3￨p AspectDeclaration￨3￨p .￨3￨p BodyGenerator￨3￨p gen￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generateMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p ,￨3￨p MethodBinding￨3￨p methodBinding￨3￨p ,￨3￨p AspectDeclaration￨3￨p .￨3￨p BodyGenerator￨3￨p gen￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerCflowAspectOfMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerCflowHasAspectMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerCflowPushMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerCflowAjcClinitMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f TypeBinding￨2￨f generatePerObjectInterface￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerObjectAspectOfMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p ,￨3￨p final￨3￨p TypeBinding￨3￨p interfaceType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerObjectHasAspectMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p ,￨3￨p final￨3￨p TypeBinding￨3￨p interfaceType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerObjectBindMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p ,￨3￨p final￨3￨p TypeBinding￨3￨p interfaceType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerSingletonAspectOfMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerSingletonHasAspectMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f generatePerSingletonAjcClinitMethod￨2￨f (￨2￨f ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Kind￨2￨f lookupPerClauseKind￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b binding￨3￨b instanceof￨3￨b SourceTypeBinding￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b SourceTypeBinding￨3￨e sourceSc￨3￨e =￨3￨e (￨3￨e (￨3￨e SourceTypeBinding￨3￨e )￨3￨e (￨3￨e binding￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c sourceSc￨4￨c .￨4￨c scope￨4￨c .￨4￨c referenceContext￨4￨c )￨4￨c instanceof￨4￨c AspectDeclaration￨4￨c )￨3￨j {￨3￨j PerClause￨4￨e perClause￨4￨e =￨4￨e (￨4￨e (￨4￨e AspectDeclaration￨4￨e )￨4￨e (￨4￨e sourceSc￨4￨e .￨4￨e scope￨4￨e .￨4￨e referenceContext￨4￨e )￨4￨e )￨4￨e .￨4￨e perClause￨4￨e ;￨4￨e if￨4￨j (￨4￨j perClause￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e lookupPerClauseKind￨5￨e (￨5￨e binding￨5￨e .￨5￨e superclass￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j return￨5￨e perClause￨5￨e .￨5￨e getKind￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f buildPerClause￨2￨f (￨2￨f ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f PerClause￨2￨f resolvePerClause￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f buildInterTypeAndPerClause￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringBody￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringHeader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d WebServlet￨1￨d (￨1￨d name￨1￨d =￨1￨d "CallEjbServlet"￨1￨d ,￨1￨d urlPatterns￨1￨d =￨1￨d {￨1￨d "/CallEjbServlet"￨1￨d }￨1￨d )￨1￨d public￨1￨d class￨1￨d CallEjbServlet￨1￨d extends￨1￨d HttpServlet￨1￨d {￨1￨d @￨2￨e EJB￨2￨e MyEjb￨2￨e ejb￨2￨e ;￨2￨e protected￨2￨f void￨2￨f doGet￨2￨f (￨2￨f HttpServletRequest￨2￨f req￨2￨f ,￨2￨f HttpServletResponse￨2￨f resp￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ServletException￨2￨f (￨2￨f )￨2￨f {￨2￨f Context￨3￨e ctx￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f Properties￨4￨e env￨4￨e =￨4￨e new￨4￨e Properties￨4￨e (￨4￨e )￨4￨e ;￨4￨e String￨4￨e address￨4￨e =￨4￨e System￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e "node0"￨4￨e ,￨4￨e "localhost"￨4￨e )￨4￨e ;￨4￨e address￨4￨e =￨4￨e NetworkUtils￨4￨e .￨4￨e formatPossibleIpv6Address￨4￨e (￨4￨e address￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b env￨4￨b .￨4￨b put￨4￨b (￨4￨b Context￨4￨b .￨4￨b PROVIDER_URL￨4￨b ,￨4￨b (￨4￨b (￨4￨b "http-remoting://"￨4￨b +￨4￨b address￨4￨b )￨4￨b +￨4￨b ":8080"￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b env￨4￨e .￨4￨e put￨4￨e (￨4￨e Context￨4￨e .￨4￨e INITIAL_CONTEXT_FACTORY￨4￨e ,￨4￨e "org.jboss.naming.remote.client.InitialContextFactory"￨4￨e )￨4￨e ;￨4￨e ctx￨4￨e =￨4￨e new￨4￨e InitialContext￨4￨e (￨4￨e env￨4￨e )￨4￨e ;￨4￨e MyObject￨4￨e obj￨4￨e =￨4￨e (￨4￨e (￨4￨e MyObject￨4￨e )￨4￨e (￨4￨e ctx￨4￨e .￨4￨e lookup￨4￨e (￨4￨e "loc/stub"￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e Writer￨4￨e writer￨4￨e =￨4￨e resp￨4￨e .￨4￨e getWriter￨4￨e (￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e write￨4￨e (￨4￨e ejb￨4￨e .￨4￨e doIt￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e write￨4￨e (￨4￨e obj￨4￨e .￨4￨e doIt￨4￨e (￨4￨e "Hello"￨4￨e )￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e flush￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f NamingException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j ctx￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f ctx￨6￨e .￨6￨e close￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f NamingException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e RuntimeException￨6￨e (￨6￨e e￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EjbLookupInjectionSource￨1￨d extends￨1￨d InjectionSource￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e lookup￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e targetTypeName￨2￨e ;￨2￨e private￨2￨e final￨2￨e Class￨2￨e <￨2￨e ?￨2￨e >￨2￨e targetType￨2￨e ;￨2￨e public￨2￨f EjbLookupInjectionSource￨2￨f (￨2￨f final￨3￨p String￨3￨p lookup￨3￨p ,￨3￨p final￨3￨p String￨3￨p targetType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f EjbLookupInjectionSource￨2￨f (￨2￨f final￨3￨p String￨3￨p lookup￨3￨p ,￨3￨p final￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p targetType￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f getResourceValue￨2￨f (￨2￨f final￨2￨f ResolutionContext￨2￨f resolutionContext￨2￨f ,￨2￨f final￨2￨f ServiceBuilder￨2￨f <￨2￨f ?￨2￨f >￨2￨f serviceBuilder￨2￨f ,￨2￨f final￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f ,￨2￨f final￨2￨f Injector￨2￨f <￨2￨f ManagedReferenceFactory￨2￨f >￨2￨f injector￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e Class￨3￨e <￨3￨e ?￨3￨e >￨3￨e type￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c targetType￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j type￨4￨e =￨4￨e targetType￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c targetTypeName￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j final￨4￨e DeploymentClassIndex￨4￨e index￨4￨e =￨4￨e phaseContext￨4￨e .￨4￨e getDeploymentUnit￨4￨e (￨4￨e )￨4￨e .￨4￨e getAttachment￨4￨e (￨4￨e CLASS_INDEX￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f type￨5￨e =￨5￨e index￨5￨e .￨5￨e classIndex￨5￨e (￨5￨e targetTypeName￨5￨e )￨5￨e .￨5￨e getModuleClass￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f ClassNotFoundException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e RuntimeException￨5￨e (￨5￨e (￨5￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>EJB<seq2seq4repair_space>type<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e targetTypeName￨5￨e )￨5￨e )￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨j else￨3￨j {￨3￨j type￨4￨e =￨4￨e null￨4￨e ;￨4￨e }￨3￨j injector￨3￨f .￨3￨f inject￨3￨f (￨3￨f new￨3￨f ManagedReferenceFactory￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f ManagedReference￨4￨f getReference￨4￨f (￨4￨f )￨4￨f {￨4￨f try￨5￨f (￨5￨f )￨5￨f {￨5￨f final￨6￨e Object￨6￨e value￨6￨e =￨6￨e new￨6￨e InitialContext￨6￨e (￨6￨e )￨6￨e .￨6￨e lookup￨6￨e (￨6￨e lookup￨6￨e )￨6￨e ;￨6￨e return￨6￨f new￨6￨f ManagedReference￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f release￨7￨f (￨7￨f )￨7￨f {￨7￨f }￨7￨f @￨7￨f Override￨7￨f public￨7￨f Object￨7￨f getInstance￨7￨f (￨7￨f )￨7￨f {￨7￨f <START_BUG>￨8￨b if￨8￨b (￨8￨b type￨8￨b !=￨8￨b null￨8￨b )￨8￨b {￨8￨b <END_BUG>￨8￨b return￨8￨e PortableRemoteObject￨8￨e .￨8￨e narrow￨8￨e (￨8￨e value￨8￨e ,￨8￨e type￨8￨e )￨8￨e ;￨8￨e else￨8￨j {￨8￨j return￨9￨e value￨9￨e ;￨9￨e }￨8￨j }￨7￨f }￨6￨f ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f NamingException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e RuntimeException￨6￨e (￨6￨e e￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨f }￨3￨f )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f final￨3￨p Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CopyfileTest￨1￨d extends￨1￨d TaskdefsTest￨1￨d {￨1￨d public￨2￨f CopyfileTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test1￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test2￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test3￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test4￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b expectLog￨3￨b (￨3￨b "test4"￨3￨b ,￨3￨b "Warning:<seq2seq4repair_space>src<seq2seq4repair_space>==<seq2seq4repair_space>dest"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f test5￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d DocCommentParser￨1￨d extends￨1￨d AbstractCommentParser￨1￨d {￨1￨d private￨2￨e Javadoc￨2￨e docComment￨2￨e ;￨2￨e private￨2￨e AST￨2￨e ast￨2￨e ;￨2￨e DocCommentParser￨2￨f (￨2￨f AST￨3￨p ast￨3￨p ,￨3￨p Scanner￨3￨p scanner￨3￨p ,￨3￨p boolean￨3￨p check￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Javadoc￨2￨f parse￨2￨f (￨2￨f int￨3￨p [￨3￨p ]￨3￨p positions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Javadoc￨2￨f parse￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setComment￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f createArgumentReference￨2￨f (￨2￨f char￨2￨f [￨2￨f ]￨2￨f name￨2￨f ,￨2￨f int￨2￨f dim￨2￨f ,￨2￨f boolean￨2￨f isVarargs￨2￨f ,￨2￨f Object￨2￨f typeRef￨2￨f ,￨2￨f long￨2￨f [￨2￨f ]￨2￨f dimPositions￨2￨f ,￨2￨f long￨2￨f argNamePos￨2￨f )￨2￨f throws￨2￨f InvalidInputException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f MethodRefParameter￨4￨e argument￨4￨e =￨4￨e this￨4￨e .￨4￨e ast￨4￨e .￨4￨e newMethodRefParameter￨4￨e (￨4￨e )￨4￨e ;￨4￨e ASTNode￨4￨e node￨4￨e =￨4￨e (￨4￨e (￨4￨e ASTNode￨4￨e )￨4￨e (￨4￨e typeRef￨4￨e )￨4￨e )￨4￨e ;￨4￨e int￨4￨e argStart￨4￨e =￨4￨e node￨4￨e .￨4￨e getStartPosition￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e argEnd￨4￨e =￨4￨e (￨4￨e (￨4￨e node￨4￨e .￨4￨e getStartPosition￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e (￨4￨e node￨4￨e .￨4￨e getLength￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e -￨4￨e 1￨4￨e ;￨4￨e if￨4￨j (￨4￨j dim￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j argEnd￨5￨e =￨5￨e (￨5￨e (￨5￨e int￨5￨e )￨5￨e (￨5￨e dimPositions￨5￨e [￨5￨e (￨5￨e dim￨5￨e -￨5￨e 1￨5￨e )￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j argNamePos￨5￨c >=￨5￨c 0￨5￨c )￨4￨j {￨4￨j argEnd￨5￨e =￨5￨e (￨5￨e (￨5￨e int￨5￨e )￨5￨e (￨5￨e argNamePos￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c name￨5￨c .￨5￨c length￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j SimpleName￨5￨e argName￨5￨e =￨5￨e this￨5￨e .￨5￨e ast￨5￨e .￨5￨e newSimpleName￨5￨e (￨5￨e new￨5￨e String￨5￨e (￨5￨e name￨5￨e )￨5￨e )￨5￨e ;￨5￨e argument￨5￨e .￨5￨e setName￨5￨e (￨5￨e argName￨5￨e )￨5￨e ;￨5￨e int￨5￨e argNameStart￨5￨e =￨5￨e (￨5￨e (￨5￨e int￨5￨e )￨5￨e (￨5￨e argNamePos￨5￨e >￨5￨e >￨5￨e >￨5￨e 32￨5￨e )￨5￨e )￨5￨e ;￨5￨e argName￨5￨e .￨5￨e setSourceRange￨5￨e (￨5￨e argNameStart￨5￨e ,￨5￨e (￨5￨e (￨5￨e argEnd￨5￨e -￨5￨e argNameStart￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j Type￨4￨e argType￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c node￨5￨c .￨5￨c getNodeType￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c ASTNode￨5￨c .￨5￨c PRIMITIVE_TYPE￨5￨c )￨5￨c )￨4￨j {￨4￨j argType￨5￨e =￨5￨e (￨5￨e (￨5￨e PrimitiveType￨5￨e )￨5￨e (￨5￨e node￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j Name￨5￨e argTypeName￨5￨e =￨5￨e (￨5￨e (￨5￨e Name￨5￨e )￨5￨e (￨5￨e node￨5￨e )￨5￨e )￨5￨e ;￨5￨e argType￨5￨e =￨5￨e this￨5￨e .￨5￨e ast￨5￨e .￨5￨e newSimpleType￨5￨e (￨5￨e argTypeName￨5￨e )￨5￨e ;￨5￨e argType￨5￨e .￨5￨e setSourceRange￨5￨e (￨5￨e argStart￨5￨e ,￨5￨e node￨5￨e .￨5￨e getLength￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b if￨4￨b (￨4￨b dim￨4￨b >￨4￨b 0￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c dim￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l argType￨5￨e =￨5￨e this￨5￨e .￨5￨e ast￨5￨e .￨5￨e newArrayType￨5￨e (￨5￨e argType￨5￨e )￨5￨e ;￨5￨e argType￨5￨e .￨5￨e setSourceRange￨5￨e (￨5￨e argStart￨5￨e ,￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e int￨5￨e )￨5￨e (￨5￨e dimPositions￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e )￨5￨e -￨5￨e argStart￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨4￨e argument￨4￨e .￨4￨e setType￨4￨e (￨4￨e argType￨4￨e )￨4￨e ;￨4￨e argument￨4￨e .￨4￨e setSourceRange￨4￨e (￨4￨e argStart￨4￨e ,￨4￨e (￨4￨e (￨4￨e argEnd￨4￨e -￨4￨e argStart￨4￨e )￨4￨e +￨4￨e 1￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e argument￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f ClassCastException￨4￨p ex￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e InvalidInputException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f Object￨2￨f createFieldReference￨2￨f (￨2￨f Object￨2￨f receiver￨2￨f )￨2￨f throws￨2￨f InvalidInputException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f createMethodReference￨2￨f (￨2￨f Object￨2￨f receiver￨2￨f ,￨2￨f List￨2￨f arguments￨2￨f )￨2￨f throws￨2￨f InvalidInputException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createTag￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f createTypeReference￨2￨f (￨2￨f int￨3￨p primitiveToken￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f parseReturn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f parseTag￨2￨f (￨2￨f int￨2￨f previousPosition￨2￨f )￨2￨f throws￨2￨f InvalidInputException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f pushParamName￨2￨f (￨2￨f boolean￨3￨p isTypeParam￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f pushSeeRef￨2￨f (￨2￨f Object￨3￨p statement￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f pushText￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f refreshInlineTagPosition￨2￨f (￨2￨f int￨3￨p previousPosition￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f pushThrowName￨2￨f (￨2￨f Object￨3￨p typeRef￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateDocComment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d EditBook￨1￨d extends￨1￨d AuthenticatedHtmlPage￨1￨d {￨1￨d static￨2￨e final￨2￨e Book￨2￨e otherBook￨2￨e =￨2￨e new￨2￨e Book￨2￨e (￨2￨e "Frisbee<seq2seq4repair_space>Techniques"￨2￨e ,￨2￨e "Marty<seq2seq4repair_space>van<seq2seq4repair_space>Hoff"￨2￨e ,￨2￨e Book￨2￨e .￨2￨e FICTION￨2￨e )￨2￨e ;￨2￨e public￨2￨f EditBook￨2￨f (￨2￨f final￨3￨p Book￨3￨p book￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f PageLink￨2￨f link￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p long￨3￨p id￨3￨p )￨2￨f {￨2￨f return￨3￨f new￨3￨f PageLink￨3￨f (￨3￨f name￨3￨f ,￨3￨f new￨3￨f IPageLink￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f Page￨4￨f getPage￨4￨f (￨4￨f )￨4￨f {￨4￨f return￨5￨e new￨5￨e EditBook￨5￨e (￨5￨e Book￨5￨e .￨5￨e get￨5￨e (￨5￨e id￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f <START_BUG>￨4￨b public￨4￨b Class￨4￨b getIdentity￨4￨b (￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b return￨4￨e EditBook￨4￨e .￨4￨e class￨4￨e ;￨4￨e }￨3￨f )￨3￨e ;￨3￨e }￨2￨f public￨2￨d static￨2￨d final￨2￨d class￨2￨d EditBookForm￨2￨d extends￨2￨d Form￨2￨d {￨2￨d private￨3￨e Book￨3￨e book￨3￨e ;￨3￨e public￨3￨f EditBookForm￨3￨f (￨3￨f final￨4￨p String￨4￨p componentName￨4￨p ,￨4￨p final￨4￨p Book￨4￨p book￨4￨p ,￨4￨p final￨4￨p FeedbackPanel￨4￨p feedback￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f final￨3￨f void￨3￨f handleSubmit￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d MarshallingHttpMessageConverterTests￨1￨d {￨1￨d private￨2￨e MarshallingHttpMessageConverter￨2￨e converter￨2￨e ;￨2￨e private￨2￨e Marshaller￨2￨e marshaller￨2￨e ;￨2￨e private￨2￨e Unmarshaller￨2￨e unmarshaller￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f read￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e body￨3￨e =￨3￨e "<root>Hello<seq2seq4repair_space>World</root>"￨3￨e ;￨3￨e MockHttpOutputMessage￨3￨e outputMessage￨3￨e =￨3￨e new￨3￨e MockHttpOutputMessage￨3￨e (￨3￨e )￨3￨e ;￨3￨e marshaller￨3￨e .￨3￨e marshal￨3￨e (￨3￨e eq￨3￨e (￨3￨e body￨3￨e )￨3￨e ,￨3￨e isA￨3￨e (￨3￨e StreamResult￨3￨e .￨3￨e class￨3￨e )￨3￨e )￨3￨e ;￨3￨e replay￨3￨e (￨3￨e marshaller￨3￨e ,￨3￨e unmarshaller￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b converter￨3￨b .￨3￨b write￨3￨b (￨3￨b body￨3￨b ,￨3￨b outputMessage￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertEquals￨3￨e (￨3￨e "Invalid<seq2seq4repair_space>content-type"￨3￨e ,￨3￨e new￨3￨e MediaType￨3￨e (￨3￨e "application"￨3￨e ,￨3￨e "xml"￨3￨e )￨3￨e ,￨3￨e outputMessage￨3￨e .￨3￨e getHeaders￨3￨e (￨3￨e )￨3￨e .￨3￨e getContentType￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e verify￨3￨e (￨3￨e marshaller￨3￨e ,￨3￨e unmarshaller￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RemoteDomainControllerTestCase￨1￨d {￨1￨d private￨2￨e ManagementCommunicationService￨2￨e communicationService￨2￨e ;￨2￨e private￨2￨e DomainControllerOperationHandler￨2￨e operationHandler￨2￨e ;￨2￨e private￨2￨e RemoteDomainControllerConnection￨2￨e domainControllerConnection￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f setup￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ScheduledExecutorService￨3￨e executorService￨3￨e =￨3￨e Executors￨3￨e .￨3￨e newScheduledThreadPool￨3￨e (￨3￨e 10￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e =￨3￨e new￨3￨e ManagementCommunicationService￨3￨e (￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e getThreadFactoryInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e Executors￨3￨e .￨3￨e defaultThreadFactory￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e getExecutorServiceInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e executorService￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b final￨3￨b NetworkInterfaceService￨3￨b networkInterfaceService￨3￨b =￨3￨b new￨3￨b NetworkInterfaceService￨3￨b (￨3￨b "test"￨3￨b ,￨3￨b false￨3￨b ,￨3￨b false￨3￨b ,￨3￨b true￨3￨b ,￨3￨b null￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b networkInterfaceService￨3￨e .￨3￨e start￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e getInterfaceInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e networkInterfaceService￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e getPortInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e 12345￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e =￨3￨e new￨3￨e DomainControllerOperationHandler￨3￨e (￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e .￨3￨e getThreadFactoryInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e Executors￨3￨e .￨3￨e defaultThreadFactory￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e .￨3￨e getExecutorServiceInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e executorService￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e .￨3￨e getLocalFileRepositoryInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e manager￨3￨e .￨3￨e LocalFileRepository￨3￨e (￨3￨e new￨3￨e ServerManagerEnvironment￨3￨e (￨3￨e System￨3￨e .￨3￨e getProperties￨3￨e (￨3￨e )￨3￨e ,￨3￨e false￨3￨e ,￨3￨e System￨3￨e .￨3￨e in￨3￨e ,￨3￨e System￨3￨e .￨3￨e out￨3￨e ,￨3￨e System￨3￨e .￨3￨e err￨3￨e ,￨3￨e "test"￨3￨e ,￨3￨e InetAddress￨3￨e .￨3￨e getLocalHost￨3￨e (￨3￨e )￨3￨e ,￨3￨e 3223￨3￨e ,￨3￨e InetAddress￨3￨e .￨3￨e getLocalHost￨3￨e (￨3￨e )￨3￨e ,￨3￨e 3223￨3￨e ,￨3￨e "java"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e DomainController￨3￨e domainController￨3￨e =￨3￨e new￨3￨e DomainController￨3￨e (￨3￨e )￨3￨e ;￨3￨e domainController￨3￨e .￨3￨e getDomainConfigDirInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e new￨3￨e File￨3￨e (￨3￨e getClass￨3￨e (￨3￨e )￨3￨e .￨3￨e getResource￨3￨e (￨3￨e "/test/configuration"￨3￨e )￨3￨e .￨3￨e toURI￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e File￨3￨e tmpDir￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e System￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e "java.io.tmpdir"￨3￨e )￨3￨e )￨3￨e ;￨3￨e File￨3￨e deploymentDir￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e tmpDir￨3￨e ,￨3￨e (￨3￨e "domain-deployments-"￨3￨e +￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e Math￨3￨e .￨3￨e random￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e deploymentDir￨3￨e .￨3￨e deleteOnExit￨3￨e (￨3￨e )￨3￨e ;￨3￨e deploymentDir￨3￨e .￨3￨e mkdirs￨3￨e (￨3￨e )￨3￨e ;￨3￨e domainController￨3￨e .￨3￨e getDomainDeploymentsDirInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e deploymentDir￨3￨e )￨3￨e ;￨3￨e final￨3￨e XMLMapper￨3￨e mapper￨3￨e =￨3￨e Factory￨3￨e .￨3￨e create￨3￨e (￨3￨e )￨3￨e ;￨3￨e StandardElementReaderRegistrar￨3￨e .￨3￨e Factory￨3￨e .￨3￨e getRegistrar￨3￨e (￨3￨e )￨3￨e .￨3￨e registerStandardDomainReaders￨3￨e (￨3￨e mapper￨3￨e )￨3￨e ;￨3￨e domainController￨3￨e .￨3￨e getXmlMapperInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e mapper￨3￨e )￨3￨e ;￨3￨e domainController￨3￨e .￨3￨e getScheduledExecutorServiceInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e executorService￨3￨e )￨3￨e ;￨3￨e domainController￨3￨e .￨3￨e start￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e .￨3￨e getDomainControllerInjector￨3￨e (￨3￨e )￨3￨e .￨3￨e inject￨3￨e (￨3￨e domainController￨3￨e )￨3￨e ;￨3￨e operationHandler￨3￨e .￨3￨e start￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e addHandler￨3￨e (￨3￨e operationHandler￨3￨e )￨3￨e ;￨3￨e communicationService￨3￨e .￨3￨e start￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e domainControllerConnection￨3￨e =￨3￨e new￨3￨e RemoteDomainControllerConnection￨3￨e (￨3￨e "sm"￨3￨e ,￨3￨e InetAddress￨3￨e .￨3￨e getLocalHost￨3￨e (￨3￨e )￨3￨e ,￨3￨e 12345￨3￨e ,￨3￨e InetAddress￨3￨e .￨3￨e getLocalHost￨3￨e (￨3￨e )￨3￨e ,￨3￨e 11223￨3￨e ,￨3￨e null￨3￨e ,￨3￨e 1000￨3￨e ,￨3￨e Executors￨3￨e .￨3￨e newScheduledThreadPool￨3￨e (￨3￨e 2￨3￨e )￨3￨e ,￨3￨e Executors￨3￨e .￨3￨e defaultThreadFactory￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRegister￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ValidatorImpl￨1￨d extends￨1￨d AbstractValidator￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d ValidatorImpl￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d ValidatorFactory￨2￨d _validatorFactory￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d Validator￨2￨d _validator￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d ValidationMode￨2￨d _mode￨2￨d =￨2￨d ValidationMode￨2￨d .￨2￨d AUTO￨2￨d ;￨2￨d private￨2￨d OpenJPAConfiguration￨2￨d _conf￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d Map￨2￨d <￨2￨d Integer￨2￨d ,￨2￨d Class￨2￨d <￨2￨d ?￨2￨d >￨2￨d [￨2￨d ]￨2￨d >￨2￨d _validationGroups￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d <￨2￨d Integer￨2￨d ,￨2￨d Class￨2￨d <￨2￨d ?￨2￨d >￨2￨d [￨2￨d ]￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d HashMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d Integer￨2￨d >￨2￨d _vgMapping￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d Integer￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d VG_PRE_PERSIST￨2￨d =￨2￨d "javax.persistence.validation.group.pre-persist"￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d VG_PRE_REMOVE￨2￨d =￨2￨d "javax.persistence.validation.group.pre-remove"￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d VG_PRE_UPDATE￨2￨d =￨2￨d "javax.persistence.validation.group.pre-update"￨2￨d ;￨2￨d public￨2￨d ValidatorImpl￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f ValidatorImpl￨2￨f (￨2￨f Configuration￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ValidatorImpl￨2￨f (￨2￨f ValidatorFactory￨3￨p validatorFactory￨3￨p ,￨3￨p ValidationMode￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initialize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addValidationGroup￨2￨f (￨2￨f String￨3￨p validationGroupName￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p ...￨3￨p vgs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addValidationGroup￨2￨f (￨2￨f Integer￨3￨p event￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p ...￨3￨p validationGroup￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addValidationGroup￨2￨f (￨2￨f String￨3￨p validationGroupName￨3￨p ,￨3￨p String￨3￨p group￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f getValidationGroup￨2￨f (￨2￨f String￨3￨p vgName￨3￨p ,￨3￨p String￨3￨p group￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f [￨2￨f ]￨2￨f getValidationGroup￨2￨f (￨2￨f Integer￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isValidating￨2￨f (￨2￨f Integer￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BeanDescriptor￨2￨f getConstraintsForClass￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f <￨2￨f T￨2￨f >￨2￨f ValidationException￨2￨f validate￨2￨f (￨2￨f T￨3￨p arg0￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f <￨2￨f T￨2￨f >￨2￨f ValidationException￨2￨f validateProperty￨2￨f (￨2￨f T￨3￨p arg0￨3￨p ,￨3￨p String￨3￨p property￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f <￨2￨f T￨2￨f >￨2￨f ValidationException￨2￨f validateValue￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p arg0￨3￨p ,￨3￨p String￨3￨p arg1￨3￨p ,￨3￨p Object￨3￨p arg2￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f <￨2￨f T￨2￨f >￨2￨f boolean￨2￨f validating￨2￨f (￨2￨f T￨3￨p arg0￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Integer￨2￨f findEvent￨2￨f (￨2￨f String￨3￨p validationProperty￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ValidatorFactory￨2￨f getDefaultValidatorFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f ValidatorFactory￨3￨e factory￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b factory￨4￨b =￨4￨b Validation￨4￨b .￨4￨b buildDefaultValidatorFactory￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f javax￨4￨p .￨4￨p validation￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f return￨3￨e factory￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f addDefaultValidationGroups￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeColumn￨1￨d extends￨1￨d Item￨1￨d {￨1￨d int￨2￨e labelHandle￨2￨e ;￨2￨e int￨2￨e imageHandle￨2￨e ;￨2￨e int￨2￨e buttonHandle￨2￨e ;￨2￨e Tree￨2￨e parent￨2￨e ;￨2￨e int￨2￨e modelIndex￨2￨e ;￨2￨e int￨2￨e lastButton￨2￨e ;￨2￨e int￨2￨e lastTime￨2￨e ;￨2￨e int￨2￨e lastX￨2￨e ;￨2￨e int￨2￨e lastWidth￨2￨e ;￨2￨e boolean￨2￨e customDraw￨2￨e ;￨2￨e boolean￨2￨e useFixedWidth￨2￨e ;￨2￨e String￨2￨e toolTipText￨2￨e ;￨2￨e public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TreeColumn￨2￨f (￨2￨f Tree￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAlignment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMoveable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Tree￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getResizable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getToolTipText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_clicked￨2￨f (￨2￨f int￨3￨p widget￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_mnemonic_activate￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p arg1￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_size_allocate￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p allocation￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f hookEvents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f pack￨2￨f (￨2￨f )￨2￨f {￨2￨f checkWidget￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e width￨3￨e =￨3￨e 0￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c buttonHandle￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j GtkRequisition￨4￨e requisition￨4￨e =￨4￨e new￨4￨e GtkRequisition￨4￨e (￨4￨e )￨4￨e ;￨4￨e OS￨4￨e .￨4￨e gtk_widget_size_request￨4￨e (￨4￨e buttonHandle￨4￨e ,￨4￨e requisition￨4￨e )￨4￨e ;￨4￨e width￨4￨e =￨4￨e requisition￨4￨e .￨4￨e width￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c parent￨4￨c .￨4￨c style￨4￨c )￨4￨c &￨4￨c (￨4￨c SWT￨4￨c .￨4￨c VIRTUAL￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j }￨3￨j else￨3￨j {￨3￨j int￨4￨e iter￨4￨e =￨4￨e OS￨4￨e .￨4￨e g_malloc￨4￨e (￨4￨e OS￨4￨e .￨4￨e GtkTreeIter_sizeof￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j OS￨5￨c .￨5￨c gtk_tree_model_get_iter_first￨5￨c (￨5￨c parent￨5￨c .￨5￨c modelHandle￨5￨c ,￨5￨c iter￨5￨c )￨5￨c )￨4￨j {￨4￨j do￨5￨l {￨5￨l <START_BUG>￨6￨b width￨6￨b =￨6￨b Math￨6￨b .￨6￨b max￨6￨b (￨6￨b width￨6￨b ,￨6￨b parent￨6￨b .￨6￨b calculateWidth￨6￨b (￨6￨b handle￨6￨b ,￨6￨b iter￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨l while￨5￨l (￨5￨l OS￨6￨c .￨6￨c gtk_tree_model_iter_next￨6￨c (￨6￨c parent￨6￨c .￨6￨c modelHandle￨6￨c ,￨6￨c iter￨6￨c )￨6￨c )￨5￨l ;￨5￨l }￨4￨j OS￨4￨e .￨4￨e g_free￨4￨e (￨4￨e iter￨4￨e )￨4￨e ;￨4￨e }￨3￨j setWidth￨3￨e (￨3￨e width￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeControlListener￨2￨f (￨2￨f ControlListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAlignment￨2￨f (￨2￨f int￨3￨p alignment￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setFontDescription￨2￨f (￨2￨f int￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMoveable￨2￨f (￨2￨f boolean￨3￨p moveable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setResizable￨2￨f (￨2￨f boolean￨3￨p resizable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToolTipText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setToolTipText￨2￨f (￨2￨f Shell￨3￨p shell￨3￨p ,￨3￨p String￨3￨p newString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setWidth￨2￨f (￨2￨f int￨3￨p width￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StatGraphVisualizer￨1￨d extends￨1￨d AbstractVisualizer￨1￨d implements￨1￨d ActionListener￨1￨d ,￨1￨d Clearable￨1￨d {￨1￨d private￨2￨e static￨2￨e transient￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f COLUMNS￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f GRAPH_COLUMNS￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e final￨2￨e String￨2￨e TOTAL_ROW_LABEL￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_report_total_label"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e JTable￨2￨e myJTable￨2￨e ;￨2￨e protected￨2￨e JScrollPane￨2￨e myScrollPane￨2￨e ;￨2￨e private￨2￨e transient￨2￨e ObjectTableModel￨2￨e model￨2￨e ;￨2￨e Map￨2￨e tableRows￨2￨e =￨2￨e Collections￨2￨e .￨2￨e synchronizedMap￨2￨e (￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e protected￨2￨e AxisGraph￨2￨e graphPanel￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e VerticalPanel￨2￨e graph￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e JScrollPane￨2￨e graphScroll￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e JSplitPane￨2￨e spane￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e JLabeledChoice￨2￨e columns￨2￨e =￨2￨e new￨2￨e JLabeledChoice￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_column"￨2￨e )￨2￨e ,￨2￨e GRAPH_COLUMNS￨2￨e )￨2￨e ;￨2￨e protected￨2￨e double￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e data￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e JButton￨2￨e displayButton￨2￨e =￨2￨e new￨2￨e JButton￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_display"￨2￨e )￨2￨e )￨2￨e ;￨2￨e protected￨2￨e JButton￨2￨e saveGraph￨2￨e =￨2￨e new￨2￨e JButton￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_save"￨2￨e )￨2￨e )￨2￨e ;￨2￨e protected￨2￨e JButton￨2￨e saveTable￨2￨e =￨2￨e new￨2￨e JButton￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_save_table"￨2￨e )￨2￨e )￨2￨e ;￨2￨e JLabeledTextField￨2￨e graphTitle￨2￨e =￨2￨e new￨2￨e JLabeledTextField￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_user_title"￨2￨e )￨2￨e )￨2￨e ;￨2￨e JLabeledTextField￨2￨e graphWidth￨2￨e =￨2￨e new￨2￨e JLabeledTextField￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_width"￨2￨e )￨2￨e )￨2￨e ;￨2￨e JLabeledTextField￨2￨e graphHeight￨2￨e =￨2￨e new￨2￨e JLabeledTextField￨2￨e (￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_height"￨2￨e )￨2￨e )￨2￨e ;￨2￨e protected￨2￨e String￨2￨e yAxisLabel￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_response_time"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e String￨2￨e yAxisTitle￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getResString￨2￨e (￨2￨e "aggregate_graph_ms"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e saveGraphToFile￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨e int￨2￨e defaultWidth￨2￨e =￨2￨e 400￨2￨e ;￨2￨e protected￨2￨e int￨2￨e defaultHeight￨2￨e =￨2￨e 300￨2￨e ;￨2￨e public￨2￨f StatGraphVisualizer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLabelResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f SampleResult￨3￨p res￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f makeGraph￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e wstr￨3￨e =￨3￨e graphWidth￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e hstr￨3￨e =￨3￨e graphHeight￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c wstr￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j wstr￨4￨e =￨4￨e "450"￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c hstr￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j hstr￨4￨e =￨4￨e "250"￨4￨e ;￨4￨e }￨3￨j int￨3￨e width￨3￨e =￨3￨e Integer￨3￨e .￨3￨e parseInt￨3￨e (￨3￨e wstr￨3￨e )￨3￨e ;￨3￨e int￨3￨e height￨3￨e =￨3￨e Integer￨3￨e .￨3￨e parseInt￨3￨e (￨3￨e hstr￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setData￨3￨e (￨3￨e this￨3￨e .￨3￨e getData￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setHeight￨3￨e (￨3￨e height￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setWidth￨3￨e (￨3￨e width￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setTitle￨3￨e (￨3￨e graphTitle￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setXAxisLabels￨3￨e (￨3￨e getAxisLabels￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setXAxisTitle￨3￨e (￨3￨e columns￨3￨e .￨3￨e getText￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setYAxisLabels￨3￨e (￨3￨e this￨3￨e .￨3￨e yAxisLabel￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setYAxisTitle￨3￨e (￨3￨e this￨3￨e .￨3￨e yAxisTitle￨3￨e )￨3￨e ;￨3￨e graphPanel￨3￨e .￨3￨e setPreferredSize￨3￨e (￨3￨e new￨3￨e Dimension￨3￨e (￨3￨e width￨3￨e ,￨3￨e height￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b graph￨3￨b .￨3￨b resize￨3￨b (￨3￨b new￨3￨b Dimension￨3￨b (￨3￨b graph￨3￨b .￨3￨b getWidth￨3￨b (￨3￨b )￨3￨b ,￨3￨b (￨3￨b height￨3￨b +￨3￨b 120￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b spane￨3￨e .￨3￨e repaint￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f double￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f getData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getAxisLabels￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getAllTableData￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JComponent￨2￨f getPrintableComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d Listener￨1￨d public￨1￨d class￨1￨d CacheRegistry￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d implements￨1￨d Registry￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d {￨1￨d private￨2￨e final￨2￨e List￨2￨e <￨2￨e Registry￨2￨e .￨2￨e Listener￨2￨e <￨2￨e K￨2￨e ,￨2￨e V￨2￨e >￨2￨e >￨2￨e listeners￨2￨e =￨2￨e new￨2￨e CopyOnWriteArrayList￨2￨e <￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e RegistryEntryProvider￨2￨e <￨2￨e K￨2￨e ,￨2￨e V￨2￨e >￨2￨e provider￨2￨e ;￨2￨e private￨2￨e final￨2￨e Cache￨2￨e <￨2￨e Node￨2￨e ,￨2￨e Map￨2￨e .￨2￨e Entry￨2￨e <￨2￨e K￨2￨e ,￨2￨e V￨2￨e >￨2￨e >￨2￨e cache￨2￨e ;￨2￨e private￨2￨e final￨2￨e CacheInvoker￨2￨e invoker￨2￨e ;￨2￨e private￨2￨e final￨2￨e Group￨2￨e group￨2￨e ;￨2￨e private￨2￨e final￨2￨e NodeFactory￨2￨e <￨2￨e Address￨2￨e >￨2￨e factory￨2￨e ;￨2￨e public￨2￨f CacheRegistry￨2￨f (￨2￨f CacheRegistryFactoryConfiguration￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p config￨3￨p ,￨3￨p RegistryEntryProvider￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p provider￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f addListener￨2￨f (￨2￨f Registry￨3￨p .￨3￨p Listener￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f removeListener￨2￨f (￨2￨f Registry￨3￨p .￨3￨p Listener￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Group￨2￨f getGroup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Map￨2￨f <￨2￨f K￨2￨f ,￨2￨f V￨2￨f >￨2￨f getEntries￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Map￨2￨f .￨2￨f Entry￨2￨f <￨2￨f K￨2￨f ,￨2￨f V￨2￨f >￨2￨f getEntry￨2￨f (￨2￨f Node￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Map￨2￨f .￨2￨f Entry￨2￨f <￨2￨f K￨2￨f ,￨2￨f V￨2￨f >￨2￨f getLocalEntry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f TopologyChanged￨2￨f public￨2￨f void￨2￨f topologyChanged￨2￨f (￨2￨f TopologyChangedEvent￨3￨p <￨3￨p Address￨3￨p ,￨3￨p Node￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j event￨4￨c .￨4￨c isPre￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j List￨3￨e <￨3￨e Address￨3￨e >￨3￨e newAddresses￨3￨e =￨3￨e event￨3￨e .￨3￨e getConsistentHashAtEnd￨3￨e (￨3￨e )￨3￨e .￨3￨e getMembers￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c newAddresses￨4￨c .￨4￨c get￨4￨c (￨4￨c 0￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c event￨4￨c .￨4￨c getCache￨4￨c (￨4￨c )￨4￨c .￨4￨c getCacheManager￨4￨c (￨4￨c )￨4￨c .￨4￨c getAddress￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j Set￨3￨e <￨3￨e Address￨3￨e >￨3￨e addresses￨3￨e =￨3￨e new￨3￨e java￨3￨e .￨3￨e util￨3￨e .￨3￨e HashSet￨3￨e (￨3￨e event￨3￨e .￨3￨e getConsistentHashAtStart￨3￨e (￨3￨e )￨3￨e .￨3￨e getMembers￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e addresses￨3￨e .￨3￨e removeAll￨3￨e (￨3￨e newAddresses￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e Node￨3￨e >￨3￨e nodes￨3￨e =￨3￨e new￨3￨e java￨3￨e .￨3￨e util￨3￨e .￨3￨e ArrayList￨3￨e (￨3￨e addresses￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Address￨4￨c address￨4￨c :￨4￨c addresses￨4￨c )￨3￨l {￨3￨l nodes￨4￨e .￨4￨e add￨4￨e (￨4￨e this￨4￨e .￨4￨e factory￨4￨e .￨4￨e createNode￨4￨e (￨4￨e address￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l CacheRegistry￨3￨f <￨3￨f K￨3￨f ,￨3￨f V￨3￨f >￨3￨f .￨3￨f Operation￨3￨f <￨3￨f Map￨3￨f <￨3￨f K￨3￨f ,￨3￨f V￨3￨f >￨3￨f >￨3￨f operation￨3￨f =￨3￨f new￨3￨f Operation￨3￨f <￨3￨f Map￨3￨f <￨3￨f K￨3￨f ,￨3￨f V￨3￨f >￨3￨f >￨3￨f (￨3￨f )￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f Map￨4￨f <￨4￨f K￨4￨f ,￨4￨f V￨4￨f >￨4￨f invoke￨4￨f (￨4￨f Cache￨5￨p <￨5￨p Node￨5￨p ,￨5￨p Map￨5￨p .￨5￨p Entry￨5￨p <￨5￨p K￨5￨p ,￨5￨p V￨5￨p >￨5￨p >￨5￨p cache￨5￨p )￨4￨f {￨4￨f Map￨5￨e <￨5￨e K￨5￨e ,￨5￨e V￨5￨e >￨5￨e removed￨5￨e =￨5￨e new￨5￨e HashMap￨5￨e <￨5￨e >￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l Node￨6￨c node￨6￨c :￨6￨c nodes￨6￨c )￨5￨l {￨5￨l Map￨6￨e .￨6￨e Entry￨6￨e <￨6￨e K￨6￨e ,￨6￨e V￨6￨e >￨6￨e old￨6￨e =￨6￨e cache￨6￨e .￨6￨e remove￨6￨e (￨6￨e node￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j old￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j removed￨7￨e .￨7￨e put￨7￨e (￨7￨e old￨7￨e .￨7￨e getKey￨7￨e (￨7￨e )￨7￨e ,￨7￨e old￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l return￨5￨e removed￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e <START_BUG>￨3￨b Map￨3￨b <￨3￨b K￨3￨b ,￨3￨b V￨3￨b >￨3￨b removed￨3￨b =￨3￨b this￨3￨b .￨3￨b invoker￨3￨b .￨3￨b invoke￨3￨b (￨3￨b this￨3￨b .￨3￨b cache￨3￨b ,￨3￨b operation￨3￨b ,￨3￨b FORCE_SYNCHRONOUS￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j !￨4￨c (￨4￨c removed￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j for￨4￨l (￨4￨l Listener￨5￨c <￨5￨c K￨5￨c ,￨5￨c V￨5￨c >￨5￨c listener￨5￨c :￨5￨c this￨5￨c .￨5￨c listeners￨5￨c )￨4￨l {￨4￨l listener￨5￨e .￨5￨e removedEntries￨5￨e (￨5￨e removed￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j }￨2￨f @￨2￨f CacheEntryModified￨2￨f public￨2￨f void￨2￨f modified￨2￨f (￨2￨f CacheEntryModifiedEvent￨3￨p <￨3￨p Node￨3￨p ,￨3￨p Map￨3￨p .￨3￨p Entry￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f CacheEntryRemoved￨2￨f public￨2￨f void￨2￨f removed￨2￨f (￨2￨f CacheEntryRemovedEvent￨3￨p <￨3￨p Node￨3￨p ,￨3￨p Map￨3￨p .￨3￨p Entry￨3￨p <￨3￨p K￨3￨p ,￨3￨p V￨3￨p >￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨d class￨2￨d Operation￨2￨d <￨2￨d R￨2￨d >￨2￨d implements￨2￨d CacheInvoker￨2￨d .￨2￨d Operation￨2￨d <￨2￨d Node￨2￨d ,￨2￨d Map￨2￨d .￨2￨d Entry￨2￨d <￨2￨d K￨2￨d ,￨2￨d V￨2￨d >￨2￨d ,￨2￨d R￨2￨d >￨2￨d {￨2￨d }￨2￨d }￨1￨d
public￨1￨d jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e RELEASE_VERSION￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e STRING￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e DomainRootDefinition￨2￨e .￨2￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e RELEASE_CODENAME￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e RELEASE_CODENAME￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e STRING￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e DomainRootDefinition￨2￨e .￨2￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e PRODUCT_NAME￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e PRODUCT_NAME￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e STRING￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e DomainRootDefinition￨2￨e .￨2￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e PRODUCT_VERSION￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e PRODUCT_VERSION￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e STRING￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e DomainRootDefinition￨2￨e .￨2￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e MANAGEMENT_MAJOR_VERSION￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e MANAGEMENT_MAJOR_VERSION￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e operations￨2￨e .￨2￨e validation￨2￨e .￨2￨e IntRangeValidator￨2￨e (￨2￨e 1￨2￨e )￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e MANAGEMENT_MINOR_VERSION￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e MANAGEMENT_MINOR_VERSION￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e operations￨2￨e .￨2￨e validation￨2￨e .￨2￨e IntRangeValidator￨2￨e (￨2￨e 0￨2￨e )￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e MANAGEMENT_MICRO_VERSION￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ModelDescriptionConstants￨2￨e .￨2￨e MANAGEMENT_MICRO_VERSION￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e false￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e operations￨2￨e .￨2￨e validation￨2￨e .￨2￨e IntRangeValidator￨2￨e (￨2￨e 0￨2￨e )￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e PROCESS_TYPE￨2￨e =￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e .￨2￨e create￨2￨e (￨2￨e ServerDescriptionConstants￨2￨e .￨2￨e PROCESS_TYPE￨2￨e ,￨2￨e ModelType￨2￨e .￨2￨e STRING￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e setValidator￨2￨e (￨2￨e DomainRootDefinition￨2￨e .￨2￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨d static￨2￨d final￨2￨d SimpleAttributeDefinition￨2￨d LAUNCH_TYPE￨2￨d =￨2￨d org￨2￨d .￨2￨d jboss￨2￨d .￨2￨d as￨2￨d .￨2￨d controller￨2￨d .￨2￨d SimpleAttributeDefinitionBuilder￨2￨d .￨2￨d create￨2￨d (￨2￨d ServerDescriptionConstants￨2￨d .￨2￨d LAUNCH_TYPE￨2￨d ,￨2￨d ModelType￨2￨d .￨2￨d STRING￨2￨d )￨2￨d .￨2￨d setValidator￨2￨d (￨2￨d new￨2￨d org￨2￨d .￨2￨d jboss￨2￨d .￨2￨d as￨2￨d .￨2￨d controller￨2￨d .￨2￨d operations￨2￨d .￨2￨d validation￨2￨d .￨2￨d EnumValidator￨2￨d <￨2￨d org￨2￨d .￨2￨d jboss￨2￨d .￨2￨d as￨2￨d .￨2￨d server￨2￨d .￨2￨d ServerEnvironment￨2￨d .￨2￨d LaunchType￨2￨d >￨2￨d (￨2￨d org￨2￨d .￨2￨d jboss￨2￨d .￨2￨d as￨2￨d .￨2￨d server￨2￨d .￨2￨d ServerEnvironment￨2￨d .￨2￨d LaunchType￨2￨d .￨2￨d class￨2￨d ,￨2￨d false￨2￨d ,￨2￨d false￨2￨d )￨2￨d )￨2￨d .￨2￨d setStorageRuntime￨2￨d (￨2￨d )￨2￨d .￨2￨d build￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d SimpleAttributeDefinition￨2￨d LOCAL_HOST_NAME￨2￨d =￨2￨d org￨2￨d .￨2￨d jboss￨2￨d .￨2￨d as￨2￨d .￨2￨d controller￨2￨d .￨2￨d SimpleAttributeDefinitionBuilder￨2￨d .￨2￨d create￨2￨d (￨2￨d ModelDescriptionConstants￨2￨d .￨2￨d LOCAL_HOST_NAME￨2￨d ,￨2￨d ModelType￨2￨d .￨2￨d STRING￨2￨d ,￨2￨d true￨2￨d )￨2￨d .￨2￨d setValidator￨2￨d (￨2￨d DomainRootDefinition￨2￨d .￨2￨d NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2￨d )￨2￨d .￨2￨d setStorageRuntime￨2￨d (￨2￨d )￨2￨d .￨2￨d build￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d DomainController￨2￨d domainController￨2￨d ;￨2￨d private￨2￨d final￨2￨d LocalHostControllerInfo￨2￨d hostControllerInfo￨2￨d ;￨2￨d private￨2￨d final￨2￨d HostControllerEnvironment￨2￨d environment￨2￨d ;￨2￨d private￨2￨d final￨2￨d ExtensibleConfigurationPersister￨2￨d configurationPersister￨2￨d ;￨2￨d private￨2￨d final￨2￨d ContentRepository￨2￨d contentRepo￨2￨d ;￨2￨d private￨2￨d final￨2￨d HostFileRepository￨2￨d fileRepository￨2￨d ;￨2￨d private￨2￨d final￨2￨d boolean￨2￨d isMaster￨2￨d ;￨2￨d private￨2￨d final￨2￨d ExtensionRegistry￨2￨d extensionRegistry￨2￨d ;￨2￨d private￨2￨d final￨2￨d IgnoredDomainResourceRegistry￨2￨d ignoredDomainResourceRegistry￨2￨d ;￨2￨d private￨2￨d final￨2￨d PathManagerService￨2￨d pathManager￨2￨d ;￨2￨d private￨2￨d final￨2￨d DomainControllerRuntimeIgnoreTransformationRegistry￨2￨d runtimeIgnoreTransformationRegistry￨2￨d ;￨2￨d private￨2￨d final￨2￨d DelegatingConfigurableAuthorizer￨2￨d authorizer￨2￨d ;￨2￨d public￨2￨d DomainRootDefinition￨2￨d (￨2￨d final￨2￨d DomainController￨2￨d domainController￨2￨d ,￨2￨d final￨2￨d HostControllerEnvironment￨2￨d environment￨2￨d ,￨2￨d final￨2￨d ExtensibleConfigurationPersister￨2￨d configurationPersister￨2￨d ,￨2￨d final￨2￨d ContentRepository￨2￨d contentRepo￨2￨d ,￨2￨d final￨2￨d HostFileRepository￨2￨d fileRepository￨2￨d ,￨2￨d final￨2￨d boolean￨2￨d isMaster￨2￨d ,￨2￨d final￨2￨d LocalHostControllerInfo￨2￨d hostControllerInfo￨2￨d ,￨2￨d final￨2￨d ExtensionRegistry￨2￨d extensionRegistry￨2￨d ,￨2￨d final￨2￨d IgnoredDomainResourceRegistry￨2￨d ignoredDomainResourceRegistry￨2￨d ,￨2￨d final￨2￨d PathManagerService￨2￨d pathManager￨2￨d ,￨2￨d final￨2￨d DomainControllerRuntimeIgnoreTransformationRegistry￨2￨d runtimeIgnoreTransformationRegistry￨2￨d ,￨2￨d final￨2￨d DelegatingConfigurableAuthorizer￨2￨d authorizer￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registerAttributes￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p resourceRegistration￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registerOperations￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p resourceRegistration￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registerChildren￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p resourceRegistration￨3￨p )￨2￨f {￨2￨f super￨3￨e .￨3￨e registerChildren￨3￨e (￨3￨e resourceRegistration￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e SystemPropertyResourceDefinition￨3￨e .￨3￨e createForDomainOrHost￨3￨e (￨3￨e DOMAIN￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e controller￨3￨e .￨3￨e resource￨3￨e .￨3￨e InterfaceDefinition￨3￨e (￨3￨e InterfaceAddHandler￨3￨e .￨3￨e NAMED_INSTANCE￨3￨e ,￨3￨e InterfaceRemoveHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e CoreManagementResourceDefinition￨3￨e .￨3￨e forDomain￨3￨e (￨3￨e authorizer￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e ProfileResourceDefinition￨3￨e (￨3￨e extensionRegistry￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathResourceDefinition￨3￨e .￨3￨e createNamed￨3￨e (￨3￨e pathManager￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e DomainDeploymentResourceDefinition￨3￨e .￨3￨e createForDomainRoot￨3￨e (￨3￨e isMaster￨3￨e ,￨3￨e contentRepo￨3￨e ,￨3￨e fileRepository￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e server￨3￨e .￨3￨e deploymentoverlay￨3￨e .￨3￨e DeploymentOverlayDefinition￨3￨e (￨3￨e null￨3￨e ,￨3￨e contentRepo￨3￨e ,￨3￨e fileRepository￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b resourceRegistration￨3￨b .￨3￨b registerSubModel￨3￨b (￨3￨b new￨3￨b ServerGroupResourceDefinition￨3￨b (￨3￨b isMaster￨3￨b ,￨3￨b contentRepo￨3￨b ,￨3￨b fileRepository￨3￨b ,￨3￨b runtimeIgnoreTransformationRegistry￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e controller￨3￨e .￨3￨e resource￨3￨e .￨3￨e SocketBindingGroupResourceDefinition￨3￨e (￨3￨e SocketBindingGroupAddHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e DomainSocketBindingGroupRemoveHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e true￨3￨e ,￨3￨e SocketBindingResourceDefinition￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e RemoteDestinationOutboundSocketBindingResourceDefinition￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e LocalDestinationOutboundSocketBindingResourceDefinition￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e management￨3￨e .￨3￨e client￨3￨e .￨3￨e content￨3￨e .￨3￨e ManagedDMRContentTypeResourceDefinition￨3￨e (￨3￨e contentRepo￨3￨e ,￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e ROLLOUT_PLAN￨3￨e ,￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e MANAGEMENT_CLIENT_CONTENT￨3￨e ,￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e ROLLOUT_PLANS￨3￨e )￨3￨e ,￨3￨e new￨3￨e DomainRootDefinition￨3￨e .￨3￨e RolloutPlanValidator￨3￨e (￨3￨e )￨3￨e ,￨3￨e DomainResolver￨3￨e .￨3￨e getResolver￨3￨e (￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e ROLLOUT_PLANS￨3￨e )￨3￨e ,￨3￨e DomainResolver￨3￨e .￨3￨e getResolver￨3￨e (￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e ROLLOUT_PLAN￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e resourceRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e controller￨3￨e .￨3￨e extension￨3￨e .￨3￨e ExtensionResourceDefinition￨3￨e (￨3￨e extensionRegistry￨3￨e ,￨3￨e true￨3￨e ,￨3￨e false￨3￨e ,￨3￨e (￨3￨e !￨3￨e (￨3￨e isMaster￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e DomainTransformers￨3￨e .￨3￨e initializeDomainRegistry￨3￨e (￨3￨e extensionRegistry￨3￨e .￨3￨e getTransformerRegistry￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p resourceRegistration￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d RolloutPlanValidator￨2￨d extends￨2￨d AbstractParameterValidator￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e List￨3￨e <￨3￨e String￨3￨e >￨3￨e ALLOWED_SERVER_GROUP_CHILDREN￨3￨e =￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e ROLLING_TO_SERVERS￨3￨e ,￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e MAX_FAILURE_PERCENTAGE￨3￨e ,￨3￨e ModelDescriptionConstants￨3￨e .￨3￨e MAX_FAILED_SERVERS￨3￨e )￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f validateParameter￨3￨f (￨3￨f String￨3￨f parameterName￨3￨f ,￨3￨f ModelNode￨3￨f plan￨3￨f )￨3￨f throws￨3￨f OperationFailedException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f static￨3￨f void￨3￨f validateInSeriesServerGroup￨3￨f (￨3￨f ModelNode￨3￨f serverGroup￨3￨f )￨3￨f throws￨3￨f OperationFailedException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractServer￨1￨d {￨1￨d static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.jboss.as.server"￨2￨e )￨2￨e ;￨2￨e private￨2￨e ServerModel￨2￨e config￨2￨e ;￨2￨e private￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServerEnvironment￨2￨e environment￨2￨e ;￨2￨e protected￨2￨f AbstractServer￨2￨f (￨2￨f final￨3￨p ServerEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServerEnvironment￨2￨f getEnvironment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServerModel￨2￨f getConfig￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f throws￨2￨f ServerStartException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨2￨f ServerModel￨2￨f config￨2￨f )￨2￨f throws￨2￨f ServerStartException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j config￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e "null<seq2seq4repair_space>standalone<seq2seq4repair_space>config"￨4￨e )￨4￨e ;￨4￨e }￨3￨j this￨3￨e .￨3￨e config￨3￨e =￨3￨e config￨3￨e ;￨3￨e <START_BUG>￨3￨b AbstractServer￨3￨b .￨3￨b log￨3￨b .￨3￨b infof￨3￨b (￨3￨b "Starting<seq2seq4repair_space>server<seq2seq4repair_space>'%s'"￨3￨b ,￨3￨b config￨3￨b .￨3￨b getServerName￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b serviceContainer￨3￨e =￨3￨e Factory￨3￨e .￨3￨e create￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServerStartupListener￨3￨e listener￨3￨e =￨3￨e new￨3￨e ServerStartupListener￨3￨e (￨3￨e createListenerCallback￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e ServerStartBatchBuilder￨4￨e subsystemBatchBuilder￨4￨e =￨4￨e new￨4￨e ServerStartBatchBuilder￨4￨e (￨4￨e serviceContainer￨4￨e .￨4￨e batchBuilder￨4￨e (￨4￨e )￨4￨e ,￨4￨e listener￨4￨e )￨4￨e ;￨4￨e subsystemBatchBuilder￨4￨e .￨4￨e addListener￨4￨e (￨4￨e listener￨4￨e )￨4￨e ;￨4￨e final￨4￨e ServiceActivatorContext￨4￨e subsystemActivatorContext￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e msc￨4￨e .￨4￨e service￨4￨e .￨4￨e ServiceActivatorContextImpl￨4￨e (￨4￨e subsystemBatchBuilder￨4￨e )￨4￨e ;￨4￨e config￨4￨e .￨4￨e activateSubsystems￨4￨e (￨4￨e subsystemActivatorContext￨4￨e )￨4￨e ;￨4￨e listener￨4￨f .￨4￨f startBatch￨4￨f (￨4￨f new￨4￨f Runnable￨4￨f (￨4￨f )￨4￨f {￨4￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f run￨5￨f (￨5￨f )￨5￨f {￨5￨f final￨6￨e ServerStartBatchBuilder￨6￨e deploymentBatchBuilder￨6￨e =￨6￨e new￨6￨e ServerStartBatchBuilder￨6￨e (￨6￨e serviceContainer￨6￨e .￨6￨e batchBuilder￨6￨e (￨6￨e )￨6￨e ,￨6￨e listener￨6￨e )￨6￨e ;￨6￨e deploymentBatchBuilder￨6￨e .￨6￨e addListener￨6￨e (￨6￨e listener￨6￨e )￨6￨e ;￨6￨e final￨6￨e ServiceActivatorContext￨6￨e deploymentActivatorContext￨6￨e =￨6￨e new￨6￨e org￨6￨e .￨6￨e jboss￨6￨e .￨6￨e msc￨6￨e .￨6￨e service￨6￨e .￨6￨e ServiceActivatorContextImpl￨6￨e (￨6￨e deploymentBatchBuilder￨6￨e )￨6￨e ;￨6￨e listener￨6￨e .￨6￨e startBatch￨6￨e (￨6￨e null￨6￨e )￨6￨e ;￨6￨e config￨6￨e .￨6￨e activateDeployments￨6￨e (￨6￨e deploymentActivatorContext￨6￨e )￨6￨e ;￨6￨e listener￨6￨e .￨6￨e finish￨6￨e (￨6￨e )￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f deploymentBatchBuilder￨7￨e .￨7￨e install￨7￨e (￨7￨e )￨7￨e ;￨7￨e listener￨7￨e .￨7￨e finishBatch￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f ServiceRegistryException￨7￨p e￨7￨p )￨6￨f {￨6￨f throw￨7￨e new￨7￨e RuntimeException￨7￨e (￨7￨e e￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f }￨4￨f )￨4￨e ;￨4￨e subsystemBatchBuilder￨4￨e .￨4￨e install￨4￨e (￨4￨e )￨4￨e ;￨4￨e listener￨4￨e .￨4￨e finishBatch￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e ServerStartException￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>start<seq2seq4repair_space>server"￨4￨e ,￨4￨e t￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f abstract￨2￨f Callback￨2￨f createListenerCallback￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f String￨2￨f getTempSSTablePath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getTempSSTableFileName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Future￨2￨f <￨2￨f ?￨2￨f >￨2￨f switchMemtable￨2￨f (￨2￨f Memtable￨2￨f oldMemtable￨2￨f ,￨2￨f final￨2￨f boolean￨2￨f writeCommitLog￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f switchBinaryMemtable￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buffer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceFlushIfExpired￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Future￨2￨f <￨2￨f ?￨2￨f >￨2￨f forceFlush￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f forceBlockingFlush￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceFlushBinary￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Memtable￨2￨f apply￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f ColumnFamily￨2￨f columnFamily￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f applyBinary￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buffer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f ColumnFamily￨2￨f removeDeleted￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f getDefaultGCBefore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ColumnFamily￨2￨f removeDeleted￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p ,￨3￨p int￨3￨p gcBefore￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f removeDeletedStandard￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p ,￨3￨p int￨3￨p gcBefore￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f removeDeletedSuper￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p ,￨3￨p int￨3￨p gcBefore￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f onMemtableFlush￨2￨f (￨2￨f CommitLog￨2￨f .￨2￨f CommitLogContext￨2￨f cLogCtx￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSSTable￨2￨f (￨2￨f SSTableReader￨3￨p sstable￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Set￨2￨f <￨2￨f List￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f >￨2￨f getCompactionBuckets￨2￨f (￨2￨f Iterable￨3￨p <￨3￨p SSTableReader￨3￨p >￨3￨p files￨3￨p ,￨3￨p long￨3￨p min￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f doCompaction￨2￨f (￨2￨f int￨2￨f minThreshold￨2￨f ,￨2￨f int￨2￨f maxThreshold￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f doMajorCompaction￨2￨f (￨2￨f long￨2￨f skip￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f doMajorCompactionInternal￨2￨f (￨2￨f long￨2￨f skip￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f long￨2￨f getExpectedCompactedFileSize￨2￨f (￨2￨f Iterable￨3￨p <￨3￨p SSTableReader￨3￨p >￨3￨p sstables￨3￨p )￨2￨f {￨2￨f }￨2￨f SSTableReader￨2￨f getMaxSizeFile￨2￨f (￨2￨f Iterable￨3￨p <￨3￨p SSTableReader￨3￨p >￨3￨p sstables￨3￨p )￨2￨f {￨2￨f }￨2￨f List￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f doAntiCompaction￨2￨f (￨2￨f Collection￨2￨f <￨2￨f Range￨2￨f >￨2￨f ranges￨2￨f ,￨2￨f InetAddress￨2￨f target￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f forceCleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f doCleanupCompaction￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f doCleanup￨2￨f (￨2￨f SSTableReader￨2￨f sstable￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f List￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f doFileAntiCompaction￨2￨f (￨2￨f Collection￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f sstables￨2￨f ,￨2￨f final￨2￨f Collection￨2￨f <￨2￨f Range￨2￨f >￨2￨f ranges￨2￨f ,￨2￨f InetAddress￨2￨f target￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f doFileCompaction￨2￨f (￨2￨f Collection￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f sstables￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f doFileCompaction￨2￨f (￨2￨f Collection￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f sstables￨2￨f ,￨2￨f int￨2￨f gcBefore￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f gcAfterRpcTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f doReadonlyCompaction￨2￨f (￨2￨f InetAddress￨2￨f initiator￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f getTotalBytes￨2￨f (￨2￨f Iterable￨3￨p <￨3￨p SSTableReader￨3￨p >￨3￨p sstables￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f Memtable￨2￨f >￨2￨f getUnflushedMemtables￨2￨f (￨2￨f String￨3￨p cfName￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Set￨2￨f <￨2￨f Memtable￨2￨f >￨2￨f getMemtablesPendingFlushNotNull￨2￨f (￨2￨f String￨3￨p columnFamilyName￨3￨p )￨2￨f {￨2￨f }￨2￨f Condition￨2￨f submitFlush￨2￨f (￨2￨f final￨3￨p IFlushable￨3￨p flushable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSuper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMemtableColumnsCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMemtableDataSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMemtableSwitchCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Memtable￨2￨f getMemtableThreadSafe￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Iterator￨2￨f <￨2￨f DecoratedKey￨2￨f >￨2￨f memtableKeyIterator￨2￨f (￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f SSTableReader￨2￨f >￨2￨f getSSTables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getReadCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getReadLatency￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getPendingTasks￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWriteCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f getWriteLatency￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumnFamily￨2￨f getColumnFamily￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f QueryPath￨2￨f path￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f start￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f finish￨2￨f ,￨2￨f boolean￨2￨f reversed￨2￨f ,￨2￨f int￨2￨f limit￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumnFamily￨2￨f getColumnFamily￨2￨f (￨2￨f QueryFilter￨2￨f filter￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumnFamily￨2￨f getColumnFamily￨2￨f (￨2￨f QueryFilter￨2￨f filter￨2￨f ,￨2￨f int￨2￨f gcBefore￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ColumnFamily￨2￨f getColumnFamilyInternal￨2￨f (￨2￨f QueryFilter￨2￨f filter￨2￨f ,￨2￨f int￨2￨f gcBefore￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RangeReply￨2￨f getKeyRange￨2￨f (￨2￨f final￨2￨f String￨2￨f startWith￨2￨f ,￨2￨f final￨2￨f String￨2￨f stopAt￨2￨f ,￨2￨f int￨2￨f maxResults￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RangeReply￨2￨f getKeyRangeRaw￨2￨f (￨2￨f final￨2￨f DecoratedKey￨2￨f startWith￨2￨f ,￨2￨f final￨2￨f DecoratedKey￨2￨f stopAt￨2￨f ,￨2￨f int￨2￨f maxResults￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RangeSliceReply￨2￨f getRangeSlice￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f super_column￨2￨f ,￨2￨f final￨2￨f DecoratedKey￨2￨f startKey￨2￨f ,￨2￨f final￨2￨f DecoratedKey￨2￨f finishKey￨2￨f ,￨2￨f int￨2￨f keyMax￨2￨f ,￨2￨f SliceRange￨2￨f sliceRange￨2￨f ,￨2￨f List￨2￨f <￨2￨f byte￨2￨f [￨2￨f ]￨2￨f >￨2￨f columnNames￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f RangeReply￨3￨e rr￨3￨e =￨3￨e getKeyRangeRaw￨3￨e (￨3￨e startKey￨3￨e ,￨3￨e finishKey￨3￨e ,￨3￨e keyMax￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Row￨3￨e >￨3￨e rows￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e Row￨3￨e >￨3￨e (￨3￨e rr￨3￨e .￨3￨e keys￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e QueryPath￨3￨e queryPath￨3￨e =￨3￨e new￨3￨e QueryPath￨3￨e (￨3￨e columnFamily_￨3￨e ,￨3￨e super_column￨3￨e ,￨3￨e null￨3￨e )￨3￨e ;￨3￨e final￨3￨e SortedSet￨3￨e <￨3￨e byte￨3￨e [￨3￨e ]￨3￨e >￨3￨e columnNameSet￨3￨e =￨3￨e new￨3￨e TreeSet￨3￨e <￨3￨e byte￨3￨e [￨3￨e ]￨3￨e >￨3￨e (￨3￨e getComparator￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j columnNames￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j columnNameSet￨4￨e .￨4￨e addAll￨4￨e (￨4￨e columnNames￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l String￨4￨c key￨4￨c :￨4￨c rr￨4￨c .￨4￨c keys￨4￨c )￨3￨l {￨3￨l QueryFilter￨4￨e filter￨4￨e =￨4￨e (￨4￨e sliceRange￨4￨e ==￨4￨e null￨4￨e )￨4￨e ?￨4￨e new￨4￨e NamesQueryFilter￨4￨e (￨4￨e key￨4￨e ,￨4￨e queryPath￨4￨e ,￨4￨e columnNameSet￨4￨e )￨4￨e :￨4￨e new￨4￨e SliceQueryFilter￨4￨e (￨4￨e key￨4￨e ,￨4￨e queryPath￨4￨e ,￨4￨e sliceRange￨4￨e .￨4￨e start￨4￨e ,￨4￨e sliceRange￨4￨e .￨4￨e finish￨4￨e ,￨4￨e sliceRange￨4￨e .￨4￨e reversed￨4￨e ,￨4￨e sliceRange￨4￨e .￨4￨e count￨4￨e )￨4￨e ;￨4￨e rows￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e Row￨4￨e (￨4￨e key￨4￨e ,￨4￨e getColumnFamily￨4￨e (￨4￨e filter￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l <START_BUG>￨3￨b return￨3￨b new￨3￨b RangeSliceReply￨3￨b (￨3￨b rows￨3￨b ,￨3￨b rr￨3￨b .￨3￨b rangeCompletedLocally￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f AbstractType￨2￨f getComparator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f snapshot￨2￨f (￨2￨f String￨2￨f snapshotName￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearUnsafe￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d AntiCompactionIterator￨2￨d extends￨2￨d CompactionIterator￨2￨d {￨2￨d public￨3￨f AntiCompactionIterator￨3￨f (￨3￨f Collection￨3￨f <￨3￨f SSTableReader￨3￨f >￨3￨f sstables￨3￨f ,￨3￨f Collection￨3￨f <￨3￨f Range￨3￨f >￨3￨f ranges￨3￨f ,￨3￨f int￨3￨f gcBefore￨3￨f ,￨3￨f boolean￨3￨f isMajor￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f static￨3￨f Iterator￨3￨f getCollatedRangeIterator￨3￨f (￨3￨f Collection￨3￨f <￨3￨f SSTableReader￨3￨f >￨3￨f sstables￨3￨f ,￨3￨f final￨3￨f Collection￨3￨f <￨3￨f Range￨3￨f >￨3￨f ranges￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f close￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ServerManager￨1￨d extends￨1￨d AbstractMgmtTestBase￨1￨d {￨1￨d private￨2￨e int￨2￨e mgmtPort￨2￨e ;￨2￨e private￨2￨e String￨2￨e mgmtHostName￨2￨e ;￨2￨e public￨2￨f ServerManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServerManager￨2￨f (￨2￨f String￨3￨p mgmtHostName￨3￨p ,￨3￨p int￨3￨p mgmtPort￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServerManager￨2￨f (￨2￨f String￨3￨p mgmtHostName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMgmtPort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConnector￨2￨f (￨2￨f Connector￨2￨f conn￨2￨f ,￨2￨f int￨2￨f port￨2￨f ,￨2￨f String￨2￨f keyPEMFile￨2￨f ,￨2￨f String￨2￨f certPEMFile￨2￨f ,￨2￨f String￨2￨f keyStoreFile￨2￨f ,￨2￨f String￨2￨f password￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getAddSocketBindingOp￨2￨f (￨2￨f Connector￨3￨p conn￨3￨p ,￨3￨p int￨3￨p port￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getAddConnectorOp￨2￨f (￨2￨f Connector￨3￨p conn￨3￨p ,￨3￨p String￨3￨p keyPEMFile￨3￨p ,￨3￨p String￨3￨p certPEMFile￨3￨p ,￨3￨p String￨3￨p keyStoreFile￨3￨p ,￨3￨p String￨3￨p password￨3￨p )￨2￨f {￨2￨f ModelNode￨3￨e op￨3￨e =￨3￨e createOpNode￨3￨e (￨3￨e (￨3￨e (￨3￨e "subsystem=web/connector=test-"￨3￨e +￨3￨e (￨3￨e conn￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e +￨3￨e "-connector"￨3￨e )￨3￨e ,￨3￨e "add"￨3￨e )￨3￨e ;￨3￨e op￨3￨e .￨3￨e get￨3￨e (￨3￨e "socket-binding"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e (￨3￨e "test-"￨3￨e +￨3￨e (￨3￨e conn￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e op￨3￨e .￨3￨e get￨3￨e (￨3￨e "scheme"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e conn￨3￨e .￨3￨e getScheme￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b op￨3￨b .￨3￨b get￨3￨b (￨3￨b "protocol"￨3￨b )￨3￨b .￨3￨b set￨3￨b (￨3￨b conn￨3￨b .￨3￨b getProtrocol￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b op￨3￨e .￨3￨e get￨3￨e (￨3￨e "secure"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e conn￨3￨e .￨3￨e isSecure￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e op￨3￨e .￨3￨e get￨3￨e (￨3￨e "enabled"￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j conn￨4￨c .￨4￨c isSecure￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j ModelNode￨4￨e ssl￨4￨e =￨4￨e new￨4￨e ModelNode￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j conn￨5￨c .￨5￨c equals￨5￨c (￨5￨c HTTPSNATIVE￨5￨c )￨5￨c )￨4￨j {￨4￨j ssl￨5￨e .￨5￨e get￨5￨e (￨5￨e "certificate-key-file"￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e keyPEMFile￨5￨e )￨5￨e ;￨5￨e ssl￨5￨e .￨5￨e get￨5￨e (￨5￨e "certificate-file"￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e certPEMFile￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j ssl￨5￨e .￨5￨e get￨5￨e (￨5￨e "certificate-key-file"￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e keyStoreFile￨5￨e )￨5￨e ;￨5￨e }￨4￨j ssl￨4￨e .￨4￨e get￨4￨e (￨4￨e "password"￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e password￨4￨e )￨4￨e ;￨4￨e op￨4￨e .￨4￨e get￨4￨e (￨4￨e "ssl"￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e ssl￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e op￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f removeConnector￨2￨f (￨2￨f Connector￨2￨f conn￨2￨f ,￨2￨f String￨2￨f checkURL￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getRemoveSocketBindingOp￨2￨f (￨2￨f Connector￨3￨p conn￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f getRemoveConnectorOp￨2￨f (￨2￨f Connector￨3￨p conn￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashSet￨2￨f <￨2￨f String￨2￨f >￨2￨f getConnectorList￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initModelControllerClient￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SSOMutator￨1￨d <￨1￨d V￨1￨d >￨1￨d implements￨1￨d Mutator￨1￨d {￨1￨d private￨2￨e final￨2￨e Cache￨2￨e <￨2￨e String￨2￨e ,￨2￨e V￨2￨e >￨2￨e cache￨2￨e ;￨2￨e private￨2￨e final￨2￨e CacheInvoker￨2￨e invoker￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e id￨2￨e ;￨2￨e final￨2￨e V￨2￨e value￨2￨e ;￨2￨e public￨2￨f SSOMutator￨2￨f (￨2￨f Cache￨3￨p <￨3￨p String￨3￨p ,￨3￨p V￨3￨p >￨3￨p cache￨3￨p ,￨3￨p CacheInvoker￨3￨p invoker￨3￨p ,￨3￨p String￨3￨p id￨3￨p ,￨3￨p V￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f mutate￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b this￨3￨b .￨3￨b invoker￨3￨b .￨3￨b invoke￨3￨b (￨3￨b this￨3￨b .￨3￨b cache￨3￨b ,￨3￨b new￨3￨b MutateOperation￨3￨b <￨3￨b String￨3￨b ,￨3￨b V￨3￨b >￨3￨b (￨3￨b this￨3￨b .￨3￨b id￨3￨b ,￨3￨b this￨3￨b .￨3￨b value￨3￨b )￨3￨b ,￨3￨b IGNORE_RETURN_VALUES￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d OrRule￨1￨d extends￨1￨d AbstractRule￨1￨d {￨1￨d private￨2￨e final￨2￨e Rule￨2￨e rule1￨2￨e ;￨2￨e private￨2￨e final￨2￨e Rule￨2￨e rule2￨2￨e ;￨2￨e private￨2￨f OrRule￨2￨f (￨2￨f Rule￨3￨p firstParam￨3￨p ,￨3￨p Rule￨3￨p secondParam￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Rule￨2￨f getRule￨2￨f (￨2￨f Rule￨3￨p firstParam￨3￨p ,￨3￨p Rule￨3￨p secondParam￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Rule￨2￨f getRule￨2￨f (￨2￨f Stack￨3￨p stack￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c stack￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c <￨4￨c 2￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b IllegalArgumentException￨4￨b (￨4￨b (￨4￨b "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>two<seq2seq4repair_space>rules<seq2seq4repair_space>but<seq2seq4repair_space>provided<seq2seq4repair_space>"￨4￨b +￨4￨b (￨4￨b stack￨4￨b .￨4￨b size￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j Object￨3￨e o2￨3￨e =￨3￨e stack￨3￨e .￨3￨e pop￨3￨e (￨3￨e )￨3￨e ;￨3￨e Object￨3￨e o1￨3￨e =￨3￨e stack￨3￨e .￨3￨e pop￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c o2￨4￨c instanceof￨4￨c Rule￨4￨c )￨4￨c &&￨4￨c (￨4￨c o1￨4￨c instanceof￨4￨c Rule￨4￨c )￨4￨c )￨3￨j {￨3￨j Rule￨4￨e p2￨4￨e =￨4￨e (￨4￨e (￨4￨e Rule￨4￨e )￨4￨e (￨4￨e o2￨4￨e )￨4￨e )￨4￨e ;￨4￨e Rule￨4￨e p1￨4￨e =￨4￨e (￨4￨e (￨4￨e Rule￨4￨e )￨4￨e (￨4￨e o1￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e new￨4￨e OrRule￨4￨e (￨4￨e p1￨4￨e ,￨4￨e p2￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule:<seq2seq4repair_space>"￨4￨e +￨4￨e o2￨4￨e )￨4￨e +￨4￨e "..."￨4￨e )￨4￨e +￨4￨e o1￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f boolean￨2￨f evaluate￨2￨f (￨2￨f LoggingEvent￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ViewRegistry￨1￨d extends￨1￨d RegistryManager￨1￨d implements￨1￨d IRegistryChangeListener￨1￨d ,￨1￨d IViewRegistry￨1￨d {￨1￨d private￨2￨e List￨2￨e views￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e dirtyViews￨2￨e ;￨2￨e private￨2￨e List￨2￨e categories￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e dirtyCategories￨2￨e ;￨2￨e private￨2￨e Category￨2￨e miscCategory￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e String￨2￨e TAG_DESCRIPTION￨2￨e =￨2￨e "description"￨2￨e ;￨2￨e private￨2￨d class￨2￨d ViewRegistryElement￨2￨d {￨2￨d private￨3￨e List￨3￨e viewDescriptors￨3￨e ;￨3￨e private￨3￨e List￨3￨e categoryDescriptors￨3￨e ;￨3￨e public￨3￨f ViewRegistryElement￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f addCategory￨3￨f (￨3￨f Category￨4￨p element￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f addViewDescriptor￨3￨f (￨3￨f IViewDescriptor￨4￨p element￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f List￨3￨f getCategories￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f List￨3￨f getViewDescriptors￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f ViewRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f Category￨3￨p desc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f IViewDescriptor￨3￨p desc￨3￨p )￨2￨f {￨2￨f dirtyViews￨3￨e =￨3￨e true￨3￨e ;￨3￨e ViewRegistry￨3￨e .￨3￨e ViewRegistryElement￨3￨e element￨3￨e =￨3￨e new￨3￨e ViewRegistry￨3￨e .￨3￨e ViewRegistryElement￨3￨e (￨3￨e )￨3￨e ;￨3￨e element￨3￨e .￨3￨e addViewDescriptor￨3￨e (￨3￨e desc￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b add￨3￨b (￨3￨b element￨3￨b ,￨3￨b desc￨3￨b .￨3￨b getConfigurationElement￨3￨b (￨3￨b )￨3￨b .￨3￨b getDeclaringExtension￨3￨b (￨3￨b )￨3￨b .￨3￨b getDeclaringPluginDescriptor￨3￨b (￨3￨b )￨3￨b .￨3￨b getUniqueIdentifier￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f Object￨2￨f buildNewCacheObject￨2￨f (￨2￨f IExtensionDelta￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IViewDescriptor￨2￨f find￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Category￨2￨f findCategory￨2￨f (￨2￨f String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Category￨2￨f [￨2￨f ]￨2￨f getCategories￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCategoryCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Category￨2￨f getMiscCategory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getViewCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IViewDescriptor￨2￨f [￨2￨f ]￨2￨f getViews￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f mapViewsToCategories￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildViews￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildCategories￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f postChangeProcessing￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d IndexManager￨1￨d extends￨1￨d JobManager￨1￨d implements￨1￨d IIndexConstants￨1￨d {￨1￨d public￨2￨e IWorkspace￨2￨e workspace￨2￨e ;￨2￨e public￨2￨e SimpleLookupTable￨2￨e indexNames￨2￨e =￨2￨e new￨2￨e SimpleLookupTable￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Map￨2￨e indexes￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e 5￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e needToSave￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e CRC32￨2￨e checksumCalculator￨2￨e =￨2￨e new￨2￨e CRC32￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e IPath￨2￨e javaPluginLocation￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e SimpleLookupTable￨2￨e indexStates￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e File￨2￨e savedIndexNamesFile￨2￨e =￨2￨e new￨2￨e File￨2￨e (￨2￨e getJavaPluginWorkingLocation￨2￨e (￨2￨e )￨2￨e .￨2￨e append￨2￨e (￨2￨e "savedIndexNames.txt"￨2￨e )￨2￨e .￨2￨e toOSString￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Integer￨2￨e SAVED_STATE￨2￨e =￨2￨e new￨2￨e Integer￨2￨e (￨2￨e 0￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Integer￨2￨e UPDATING_STATE￨2￨e =￨2￨e new￨2￨e Integer￨2￨e (￨2￨e 1￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Integer￨2￨e UNKNOWN_STATE￨2￨e =￨2￨e new￨2￨e Integer￨2￨e (￨2￨e 2￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e Integer￨2￨e REBUILDING_STATE￨2￨e =￨2￨e new￨2￨e Integer￨2￨e (￨2￨e 3￨2￨e )￨2￨e ;￨2￨e public￨2￨f synchronized￨2￨f void￨2￨f aboutToUpdateIndex￨2￨f (￨2￨f IPath￨3￨p path￨3￨p ,￨3￨p Integer￨3￨p newIndexState￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addBinary￨2￨f (￨2￨f IFile￨3￨p resource￨3￨p ,￨3￨p IPath￨3￨p indexPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSource￨2￨f (￨2￨f IFile￨3￨p resource￨3￨p ,￨3￨p IPath￨3￨p indexPath￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f computeIndexName￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f Index￨2￨f getIndex￨2￨f (￨2￨f IPath￨3￨p path￨3￨p ,￨3￨p boolean￨3￨p reuseExistingFile￨3￨p ,￨3￨p boolean￨3￨p createIfMissing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f Index￨2￨f getIndexForUpdate￨2￨f (￨2￨f IPath￨3￨p path￨3￨p ,￨3￨p boolean￨3￨p reuseExistingFile￨3￨p ,￨3￨p boolean￨3￨p createIfMissing￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SimpleLookupTable￨2￨f getIndexStates￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IPath￨2￨f getJavaPluginWorkingLocation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f indexDocument￨2￨f (￨2￨f SearchDocument￨2￨f searchDocument￨2￨f ,￨2￨f SearchParticipant￨2￨f searchParticipant￨2￨f ,￨2￨f Index￨2￨f index￨2￨f ,￨2￨f IPath￨2￨f indexPath￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f indexAll￨2￨f (￨2￨f IProject￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f indexLibrary￨2￨f (￨2￨f IPath￨3￨p path￨3￨p ,￨3￨p IProject￨3￨p requestingProject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f indexSourceFolder￨2￨f (￨2￨f JavaProject￨3￨p javaProject￨3￨p ,￨3￨p IPath￨3￨p sourceFolder￨3￨p ,￨3￨p final￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p exclusionPattern￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f jobWasCancelled￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f synchronized￨2￨f void￨2￨f moveToNextJob￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f notifyIdle￨2￨f (￨2￨f long￨3￨p idlingTime￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Index￨2￨f peekAtIndex￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f processName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f rebuildIndex￨2￨f (￨2￨f String￨3￨p indexName￨3￨p ,￨3￨p IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f Index￨2￨f recreateIndex￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f Index￨4￨e index￨4￨e =￨4￨e (￨4￨e (￨4￨e Index￨4￨e )￨4￨e (￨4￨e this￨4￨e .￨4￨e indexes￨4￨e .￨4￨e get￨4￨e (￨4￨e path￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b ReadWriteMonitor￨4￨b monitor￨4￨b =￨4￨b index￨4￨b .￨4￨b monitor￨4￨b ;￨4￨b <END_BUG>￨4￨b String￨4￨e indexPath￨4￨e =￨4￨e computeIndexName￨4￨e (￨4￨e path￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j JobManager￨5￨c .￨5￨c VERBOSE￨5￨c )￨4￨j {￨4￨j JobManager￨5￨e .￨5￨e verbose￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "-><seq2seq4repair_space>recreating<seq2seq4repair_space>index:<seq2seq4repair_space>"￨5￨e +￨5￨e indexPath￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e (￨5￨e path￨5￨e .￨5￨e toOSString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j index￨4￨e =￨4￨e new￨4￨e Index￨4￨e (￨4￨e indexPath￨4￨e ,￨4￨e (￨4￨e "Index<seq2seq4repair_space>for<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e path￨4￨e .￨4￨e toOSString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e indexes￨4￨e .￨4￨e put￨4￨e (￨4￨e path￨4￨e ,￨4￨e index￨4￨e )￨4￨e ;￨4￨e index￨4￨e .￨4￨e monitor￨4￨e =￨4￨e monitor￨4￨e ;￨4￨e return￨4￨e index￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j JobManager￨5￨c .￨5￨c VERBOSE￨5￨c )￨4￨j {￨4￨j JobManager￨5￨e .￨5￨e verbose￨5￨e (￨5￨e (￨5￨e "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>recreate<seq2seq4repair_space>index<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e path￨5￨e .￨5￨e toOSString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e e￨5￨e .￨5￨e printStackTrace￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f String￨3￨p resourceName￨3￨p ,￨3￨p IPath￨3￨p indexedContainer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f removeIndex￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f removeIndexFamily￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSourceFolderFromIndex￨2￨f (￨2￨f JavaProject￨3￨p javaProject￨3￨p ,￨3￨p IPath￨3￨p sourceFolder￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p exclusionPatterns￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f saveIndex￨2￨f (￨2￨f Index￨2￨f index￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f saveIndexes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f scheduleDocumentIndexing￨2￨f (￨2￨f final￨3￨p SearchDocument￨3￨p searchDocument￨3￨p ,￨3￨p final￨3￨p IPath￨3￨p indexPath￨3￨p ,￨3￨p final￨3￨p SearchParticipant￨3￨p searchParticipant￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f char￨2￨f [￨2￨f ]￨2￨f readIndexState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateIndexState￨2￨f (￨2￨f String￨3￨p indexName￨3￨p ,￨3￨p Integer￨3￨p indexState￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CounterConfigGui￨1￨d extends￨1￨d AbstractPreProcessorGui￨1￨d {￨1￨d private￨2￨e JLabeledTextField￨2￨e startField￨2￨e ;￨2￨e private￨2￨e JLabeledTextField￨2￨e incrField￨2￨e ;￨2￨e private￨2￨e JLabeledTextField￨2￨e endField￨2￨e ;￨2￨e private￨2￨e JLabeledTextField￨2￨e varNameField￨2￨e ;￨2￨e private￨2￨e JCheckBox￨2￨e perUserField￨2￨e ;￨2￨e public￨2￨f CounterConfigGui￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLabelResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TestElement￨2￨f createTestElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f modifyTestElement￨2￨f (￨2￨f TestElement￨3￨p c￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j c￨4￨c instanceof￨4￨c CounterConfig￨4￨c )￨3￨j {￨3￨j CounterConfig￨4￨e config￨4￨e =￨4￨e (￨4￨e (￨4￨e CounterConfig￨4￨e )￨4￨e (￨4￨e c￨4￨e )￨4￨e )￨4￨e ;￨4￨e config￨4￨e .￨4￨e setStart￨4￨e (￨4￨e startField￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b endField￨4￨b .￨4￨b getText￨4￨b (￨4￨b )￨4￨b .￨4￨b length￨4￨b (￨4￨b )￨4￨b )￨4￨b >￨4￨b 0￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b config￨4￨e .￨4￨e setEnd￨4￨e (￨4￨e endField￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨4￨e config￨4￨e .￨4￨e setIncrement￨4￨e (￨4￨e incrField￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e config￨4￨e .￨4￨e setVarName￨4￨e (￨4￨e varNameField￨4￨e .￨4￨e getText￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e config￨4￨e .￨4￨e setIsPerUser￨4￨e (￨4￨e perUserField￨4￨e .￨4￨e isSelected￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j super￨3￨e .￨3￨e configureTestElement￨3￨e (￨3￨e c￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f configure￨2￨f (￨2￨f TestElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RemoteProxyControllerProtocolTestCase￨1￨d {￨1￨d final￨2￨e RemoteProxyControllerProtocolTestCase￨2￨e .￨2￨e DelegatingChannelHandler￨2￨e handler￨2￨e =￨2￨e new￨2￨e RemoteProxyControllerProtocolTestCase￨2￨e .￨2￨e DelegatingChannelHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e RemoteChannelPairSetup￨2￨e channels￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f channels￨3￨e =￨3￨e new￨3￨e RemoteChannelPairSetup￨3￨e (￨3￨e )￨3￨e ;￨3￨e channels￨3￨e .￨3￨e setupRemoting￨3￨e (￨3￨e handler￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b channels￨3￨b .￨3￨b startChannels￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f @￨2￨f Ignore￨2￨f (￨2￨f "OperationMessageHandlerProxy<seq2seq4repair_space>turned<seq2seq4repair_space>off<seq2seq4repair_space>temporarily"￨2￨f )￨2￨f public￨2￨f void￨2￨f testOperationMessageHandler￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testOperationControlFailed￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testOperationControlExceptionInController￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testTransactionCommit￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testTransactionRollback￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testAttachmentInputStreams￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testClosesBeforePrepare￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertArrays￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p expected￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f RemoteProxyController￨2￨f setupProxyHandlers￨2￨f (￨2￨f RemoteProxyControllerProtocolTestCase￨3￨p .￨3￨p MockModelController￨3￨p controller￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d abstract￨2￨d static￨2￨d class￨2￨d MockModelController￨2￨d implements￨2￨d ModelController￨2￨d {￨2￨d protected￨3￨e volatile￨3￨e ModelNode￨3￨e operation￨3￨e ;￨3￨e ModelNode￨3￨f getOperation￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f ModelControllerClient￨3￨f createClient￨3￨f (￨3￨f Executor￨4￨p executor￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d CommitProxyOperationControl￨2￨d implements￨2￨d ProxyOperationControl￨2￨d {￨2￨d final￨3￨e AtomicInteger￨3￨e txCompletionStatus￨3￨e =￨3￨e new￨3￨e AtomicInteger￨3￨e (￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e OperationTransaction￨3￨e tx￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f operationPrepared￨3￨f (￨3￨f OperationTransaction￨4￨p transaction￨4￨p ,￨4￨p ModelNode￨4￨p result￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f operationFailed￨3￨f (￨3￨f ModelNode￨4￨p response￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f operationCompleted￨3￨f (￨3￨f ModelNode￨4￨p response￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d TestFuture￨2￨d <￨2￨d T￨2￨d >￨2￨d extends￨2￨d AsyncFutureTask￨2￨d <￨2￨d T￨2￨d >￨2￨d {￨2￨d protected￨3￨f TestFuture￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f done￨3￨f (￨3￨f T￨4￨p result￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d DelegatingChannelHandler￨2￨d implements￨2￨d ManagementMessageHandler￨2￨d {￨2￨d private￨3￨e ManagementMessageHandler￨3￨e delegate￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f handleMessage￨3￨f (￨3￨f Channel￨3￨f channel￨3￨f ,￨3￨f DataInput￨3￨f input￨3￨f ,￨3￨f ManagementProtocolHeader￨3￨f header￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f setDelegate￨3￨f (￨3￨f ManagementMessageHandler￨4￨p delegate￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f shutdown￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f awaitCompletion￨3￨f (￨3￨f long￨3￨f timeout￨3￨f ,￨3￨f TimeUnit￨3￨f unit￨3￨f )￨3￨f throws￨3￨f InterruptedException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f shutdownNow￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
class￨1￨d InternalSpelExpressionParser￨1￨d extends￨1￨d TemplateAwareExpressionParser￨1￨d {￨1￨d private￨2￨e String￨2￨e expressionString￨2￨e ;￨2￨e private￨2￨e List￨2￨e <￨2￨e Token￨2￨e >￨2￨e tokenStream￨2￨e ;￨2￨e private￨2￨e int￨2￨e tokenStreamLength￨2￨e ;￨2￨e private￨2￨e int￨2￨e tokenStreamPointer￨2￨e ;￨2￨e private￨2￨e Stack￨2￨e <￨2￨e SpelNodeImpl￨2￨e >￨2￨e constructedNodes￨2￨e =￨2￨e new￨2￨e Stack￨2￨e <￨2￨e SpelNodeImpl￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e SpelParserConfiguration￨2￨e configuration￨2￨e ;￨2￨e public￨2￨f InternalSpelExpressionParser￨2￨f (￨2￨f SpelParserConfiguration￨3￨p configuration￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f SpelExpression￨2￨f doParseExpression￨2￨f (￨2￨f String￨2￨f expressionString￨2￨f ,￨2￨f ParserContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatLogicalOrExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatLogicalAndExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatRelationalExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatSumExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatProductExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatPowerExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatUnaryExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatPrimaryExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f maybeEatNonDottedNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatDottedNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatFunctionOrVar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f [￨2￨f ]￨2￨f maybeEatMethodArgs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f eatConstructorArgs￨2￨f (￨2￨f List￨3￨p <￨3￨p SpelNodeImpl￨3￨p >￨3￨p accumulatedArguments￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f consumeArguments￨2￨f (￨2￨f List￨3￨p <￨3￨p SpelNodeImpl￨3￨p >￨3￨p accumulatedArguments￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f positionOf￨2￨f (￨2￨f Token￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatStartNode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatBeanReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatTypeReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatNullReference￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j peekToken￨4￨c (￨4￨c IDENTIFIER￨4￨c )￨4￨c )￨3￨j {￨3￨j Token￨4￨e nullToken￨4￨e =￨4￨e peekToken￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b !￨4￨b (￨4￨b nullToken￨4￨b .￨4￨b stringValue￨4￨b (￨4￨b )￨4￨b .￨4￨b equals￨4￨b (￨4￨b "null"￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b return￨4￨e false￨4￨e ;￨4￨e }￨4￨e nextToken￨4￨e (￨4￨e )￨4￨e ;￨4￨e constructedNodes￨4￨e .￨4￨e push￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e springframework￨4￨e .￨4￨e expression￨4￨e .￨4￨e spel￨4￨e .￨4￨e ast￨4￨e .￨4￨e NullLiteral￨4￨e (￨4￨e toPos￨4￨e (￨4￨e nullToken￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e true￨4￨e ;￨4￨e }￨3￨j return￨3￨e false￨3￨e ;￨3￨e }￨2￨f private￨2￨f boolean￨2￨f maybeEatProjection￨2￨f (￨2￨f boolean￨3￨p nullSafeNavigation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatInlineList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatIndexer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatSelection￨2￨f (￨2￨f boolean￨3￨p nullSafeNavigation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f eatPossiblyQualifiedId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatMethodOrProperty￨2￨f (￨2￨f boolean￨3￨p nullSafeNavigation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatConstructorReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f push￨2￨f (￨2￨f SpelNodeImpl￨3￨p newNode￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SpelNodeImpl￨2￨f pop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatLiteral￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f maybeEatParenExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Token￨2￨f maybeEatRelationalOperator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Token￨2￨f eatToken￨2￨f (￨2￨f TokenKind￨3￨p expectedKind￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekToken￨2￨f (￨2￨f TokenKind￨3￨p desiredTokenKind￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekToken￨2￨f (￨2￨f TokenKind￨3￨p desiredTokenKind￨3￨p ,￨3￨p boolean￨3￨p consumeIfMatched￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekToken￨2￨f (￨2￨f TokenKind￨3￨p possible1￨3￨p ,￨3￨p TokenKind￨3￨p possible2￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekToken￨2￨f (￨2￨f TokenKind￨3￨p possible1￨3￨p ,￨3￨p TokenKind￨3￨p possible2￨3￨p ,￨3￨p TokenKind￨3￨p possible3￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekIdentifierToken￨2￨f (￨2￨f String￨3￨p identifierString￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f peekSelectToken￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f moreTokens￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Token￨2￨f nextToken￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Token￨2￨f peekToken￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f raiseInternalException￨2￨f (￨2￨f int￨3￨p pos￨3￨p ,￨3￨p SpelMessage￨3￨p message￨3￨p ,￨3￨p Object￨3￨p ...￨3￨p inserts￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f Token￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkRightOperand￨2￨f (￨2￨f Token￨3￨p token￨3￨p ,￨3￨p SpelNodeImpl￨3￨p operandExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f toPos￨2￨f (￨2￨f Token￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f toPos￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RuntimeMXBeanAttributeHandler￨1￨d extends￨1￨d AbstractPlatformMBeanAttributeHandler￨1￨d {￨1￨d public￨2￨e static￨2￨e RuntimeMXBeanAttributeHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e RuntimeMXBeanAttributeHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f RuntimeMXBeanAttributeHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeReadAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeWriteAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f register￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p registration￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f storeResult￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p store￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c (￨4￨c PlatformMBeanUtil￨4￨c .￨4￨c JVM_MAJOR_VERSION￨4￨c )￨4￨c >￨4￨c 6￨4￨c )￨4￨c &&￨4￨c (￨4￨c OBJECT_NAME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e RUNTIME_MXBEAN_NAME￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j NAME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j VM_NAME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getVmName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j VM_VENDOR￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getVmVendor￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j VM_VERSION￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getVmVersion￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j SPEC_NAME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getSpecName￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j SPEC_VENDOR￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getSpecVendor￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j SPEC_VERSION￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getSpecVersion￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j MANAGEMENT_SPEC_VERSION￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getManagementSpecVersion￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j CLASS_PATH￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getClassPath￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j LIBRARY_PATH￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getLibraryPath￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j BOOT_CLASS_PATH_SUPPORTED￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e isBootClassPathSupported￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j BOOT_CLASS_PATH￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getBootClassPath￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j INPUT_ARGUMENTS￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e setEmptyList￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c arg￨5￨c :￨5￨c ManagementFactory￨5￨c .￨5￨c getRuntimeMXBean￨5￨c (￨5￨c )￨5￨c .￨5￨c getInputArguments￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l store￨5￨e .￨5￨e add￨5￨e (￨5￨e arg￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j else￨3￨j if￨3￨j (￨3￨j UPTIME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getUptime￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j START_TIME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getStartTime￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j SYSTEM_PROPERTIES￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j store￨4￨e .￨4￨e setEmptyObject￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e TreeMap￨4￨e <￨4￨e String￨4￨e ,￨4￨e String￨4￨e >￨4￨e sorted￨4￨e =￨4￨e new￨4￨e TreeMap￨4￨e <￨4￨e String￨4￨e ,￨4￨e String￨4￨e >￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getRuntimeMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getSystemProperties￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l Map￨5￨c .￨5￨c Entry￨5￨c <￨5￨c String￨5￨c ,￨5￨c String￨5￨c >￨5￨c prop￨5￨c :￨5￨c sorted￨5￨c .￨5￨c entrySet￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l final￨5￨e ModelNode￨5￨e propNode￨5￨e =￨5￨e store￨5￨e .￨5￨e get￨5￨e (￨5￨e prop￨5￨e .￨5￨e getKey￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c prop￨6￨c .￨6￨c getValue￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j propNode￨6￨e .￨6￨e set￨6￨e (￨6￨e prop￨6￨e .￨6￨e getValue￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c RUNTIME_READ_ATTRIBUTES￨4￨c .￨4￨c contains￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c RUNTIME_METRICS￨4￨c .￨4￨c contains￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b IllegalStateException￨4￨b (￨4￨b String￨4￨b .￨4￨b format￨4￨b (￨4￨b "Read<seq2seq4repair_space>support<seq2seq4repair_space>for<seq2seq4repair_space>attribute<seq2seq4repair_space>%s<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>properly<seq2seq4repair_space>implemented"￨4￨b ,￨4￨b name￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractMoveFolderAction￨1￨d extends￨1￨d AbstractColumbaAction￨1￨d implements￨1￨d Observer￨1￨d ,￨1￨d ISelectionListener￨1￨d {￨1￨d private￨2￨e AbstractFolder￨2￨e lastSelectedFolder￨2￨e ;￨2￨e public￨2￨f AbstractMoveFolderAction￨2￨f (￨2￨f FrameMediator￨3￨p frameMediator￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f boolean￨2￨f isActionEnabledByIndex￨2￨f (￨2￨f int￨3￨p folderIndex￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f registerSortingObserver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f update￨2￨f (￨2￨f Observable￨3￨p o￨3￨p ,￨3￨p Object￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f enableAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f reenableActionFromSelectedFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c lastSelectedFolder￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j setEnabled￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j IFolderItem￨4￨e item￨4￨e =￨4￨e lastSelectedFolder￨4￨e .￨4￨e getConfiguration￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b item￨4￨b .￨4￨b get￨4￨b (￨4￨b "property"￨4￨b ,￨4￨b "accessrights"￨4￨b )￨4￨b .￨4￨b equals￨4￨b (￨4￨b "user"￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b int￨4￨e index￨4￨e =￨4￨e lastSelectedFolder￨4￨e .￨4￨e getParent￨4￨e (￨4￨e )￨4￨e .￨4￨e getIndex￨4￨e (￨4￨e lastSelectedFolder￨4￨e )￨4￨e ;￨4￨e setEnabled￨4￨e (￨4￨e isActionEnabledByIndex￨4￨e (￨4￨e index￨4￨e )￨4￨e )￨4￨e ;￨4￨e else￨4￨j {￨4￨j setEnabled￨5￨e (￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f public￨2￨f void￨2￨f selectionChanged￨2￨f (￨2￨f SelectionChangedEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f AbstractFolder￨2￨f getLastSelectedFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d IMAPMailCheckingAction￨1￨d extends￨1￨d AbstractMailCheckingAction￨1￨d {￨1￨d private￨2￨e int￨2￨e accountUid￨2￨e ;￨2￨e public￨2￨f IMAPMailCheckingAction￨2￨f (￨2￨f AccountItem￨3￨p accountItem￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f check￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isCheckAll￨2￨f (￨2￨f )￨2￨f {￨2￨f IMAPRootFolder￨3￨e imapRootFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e IMAPRootFolder￨3￨e )￨3￨e (￨3￨e FolderTreeModel￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e .￨3￨e getImapFolder￨3￨e (￨3￨e accountUid￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b !￨3￨b (￨3￨b imapRootFolder￨3￨b .￨3￨b getAccountItem￨3￨b (￨3￨b )￨3￨b .￨3￨b getImapItem￨3￨b (￨3￨b )￨3￨b .￨3￨b getBoolean￨3￨b (￨3￨b "exclude_from_checkall"￨3￨b ,￨3￨b false￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
class￨1￨d BufferedDeletes￨1￨d {￨1￨d static￨2￨e final￨2￨e int￨2￨e BYTES_PER_DEL_TERM￨2￨e =￨2￨e (￨2￨e (￨2￨e 9￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_REF￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e 7￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_HEADER￨2￨e )￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e 10￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_INT￨2￨e )￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e BYTES_PER_DEL_DOCID￨2￨e =￨2￨e (￨2￨e (￨2￨e 2￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_REF￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_HEADER￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_INT￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e BYTES_PER_DEL_QUERY￨2￨e =￨2￨e (￨2￨e (￨2￨e (￨2￨e 5￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_REF￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e 2￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_OBJECT_HEADER￨2￨e )￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e 2￨2￨e *￨2￨e (￨2￨e RamUsageEstimator￨2￨e .￨2￨e NUM_BYTES_INT￨2￨e )￨2￨e )￨2￨e )￨2￨e +￨2￨e 24￨2￨e ;￨2￨e final￨2￨e AtomicInteger￨2￨e numTermDeletes￨2￨e =￨2￨e new￨2￨e AtomicInteger￨2￨e (￨2￨e )￨2￨e ;￨2￨e final￨2￨e Map￨2￨e <￨2￨e Term￨2￨e ,￨2￨e Integer￨2￨e >￨2￨e terms￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Term￨2￨e ,￨2￨e Integer￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e final￨2￨e Map￨2￨e <￨2￨e Query￨2￨e ,￨2￨e Integer￨2￨e >￨2￨e queries￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e Query￨2￨e ,￨2￨e Integer￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e final￨2￨e List￨2￨e <￨2￨e Integer￨2￨e >￨2￨e docIDs￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e Integer￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e Integer￨2￨e MAX_INT￨2￨e =￨2￨e Integer￨2￨e .￨2￨e valueOf￨2￨e (￨2￨e Integer￨2￨e .￨2￨e MAX_VALUE￨2￨e )￨2￨e ;￨2￨e final￨2￨e AtomicLong￨2￨e bytesUsed￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e boolean￨2￨e VERBOSE_DELETES￨2￨e =￨2￨e false￨2￨e ;￨2￨e long￨2￨e gen￨2￨e ;￨2￨e public￨2￨f BufferedDeletes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f BufferedDeletes￨2￨f (￨2￨f AtomicLong￨3￨p bytesUsed￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j BufferedDeletes￨4￨c .￨4￨c VERBOSE_DELETES￨4￨c )￨3￨j {￨3￨j return￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "gen="￨4￨e +￨4￨e (￨4￨e gen￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>numTerms="￨4￨e )￨4￨e +￨4￨e (￨4￨e numTermDeletes￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>terms="￨4￨e )￨4￨e +￨4￨e (￨4￨e terms￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>queries="￨4￨e )￨4￨e +￨4￨e (￨4￨e queries￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>docIDs="￨4￨e )￨4￨e +￨4￨e (￨4￨e docIDs￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>bytesUsed="￨4￨e )￨4￨e +￨4￨e (￨4￨e bytesUsed￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j String￨4￨e s￨4￨e =￨4￨e "gen="￨4￨e +￨4￨e (￨4￨e gen￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c numTermDeletes￨5￨c .￨5￨c get￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b s￨5￨b +=￨5￨b (￨5￨b (￨5￨b (￨5￨b (￨5￨b "<seq2seq4repair_space>"￨5￨b +￨5￨b (￨5￨b numTermDeletes￨5￨b .￨5￨b get￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b +￨5￨b "<seq2seq4repair_space>deleted<seq2seq4repair_space>terms<seq2seq4repair_space>(unique<seq2seq4repair_space>count="￨5￨b )￨5￨b +￨5￨b (￨5￨b terms￨5￨b .￨5￨b size￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b +￨5￨b ")<seq2seq4repair_space>terms="￨5￨b )￨5￨b +￨5￨b (￨5￨b terms￨5￨b .￨5￨b keySet￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j if￨4￨j (￨4￨j (￨5￨c queries￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j s￨5￨e +=￨5￨e (￨5￨e "<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e queries￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>deleted<seq2seq4repair_space>queries"￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c docIDs￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j s￨5￨e +=￨5￨e (￨5￨e "<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e docIDs￨5￨e .￨5￨e size￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>deleted<seq2seq4repair_space>docIDs"￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c bytesUsed￨5￨c .￨5￨c get￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j s￨5￨e +=￨5￨e "<seq2seq4repair_space>bytesUsed="￨5￨e +￨5￨e (￨5￨e bytesUsed￨5￨e .￨5￨e get￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e s￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f addQuery￨2￨f (￨2￨f Query￨3￨p query￨3￨p ,￨3￨p int￨3￨p docIDUpto￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addDocID￨2￨f (￨2￨f int￨3￨p docID￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTerm￨2￨f (￨2￨f Term￨3￨p term￨3￨p ,￨3￨p int￨3￨p docIDUpto￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearDocIDs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f any￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d NewHostControllerBootstrap￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.jboss.as.host.controller"￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e SERVICE_NAME_BASE￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "host"￨2￨e ,￨2￨e "controller"￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e DEFAULT_POOL_SIZE￨2￨e =￨2￨e 20￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e =￨2￨e Factory￨2￨e .￨2￨e create￨2￨e (￨2￨e "host-controller"￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e HostControllerEnvironment￨2￨e environment￨2￨e ;￨2￨e private￨2￨e final￨2￨e byte￨2￨e [￨2￨e ]￨2￨e authCode￨2￨e ;￨2￨e public￨2￨f NewHostControllerBootstrap￨2￨f (￨2￨f final￨3￨p HostControllerEnvironment￨3￨p environment￨3￨p ,￨3￨p final￨3￨p byte￨3￨p [￨3￨p ]￨3￨p authCode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e serviceContainer￨3￨e ;￨3￨e <START_BUG>￨3￨b final￨3￨b ProcessControllerConnectionService￨3￨b processControllerClient￨3￨b =￨3￨b new￨3￨b ProcessControllerConnectionService￨3￨b (￨3￨b environment￨3￨b ,￨3￨b authCode￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e processControllerClient￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e threadFactoryServiceName￨3￨e =￨3￨e NewHostControllerBootstrap￨3￨e .￨3￨e SERVICE_NAME_BASE￨3￨e .￨3￨e append￨3￨e (￨3￨e "thread-factory"￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e executorServiceName￨3￨e =￨3￨e NewHostControllerBootstrap￨3￨e .￨3￨e SERVICE_NAME_BASE￨3￨e .￨3￨e append￨3￨e (￨3￨e "executor"￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e threadFactoryServiceName￨3￨e ,￨3￨e new￨3￨e ThreadFactoryService￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e NewHostControllerBootstrap￨3￨e .￨3￨e HostControllerExecutorService￨3￨e executorService￨3￨e =￨3￨e new￨3￨e NewHostControllerBootstrap￨3￨e .￨3￨e HostControllerExecutorService￨3￨e (￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e executorServiceName￨3￨e ,￨3￨e executorService￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e threadFactoryServiceName￨3￨e ,￨3￨e ThreadFactory￨3￨e .￨3￨e class￨3￨e ,￨3￨e executorService￨3￨e .￨3￨e threadFactoryValue￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e AbsolutePathService￨3￨e .￨3￨e addService￨3￨e (￨3￨e HOME_DIR￨3￨e ,￨3￨e environment￨3￨e .￨3￨e getHomeDir￨3￨e (￨3￨e )￨3￨e .￨3￨e getAbsolutePath￨3￨e (￨3￨e )￨3￨e ,￨3￨e serviceTarget￨3￨e )￨3￨e ;￨3￨e AbsolutePathService￨3￨e .￨3￨e addService￨3￨e (￨3￨e DOMAIN_CONFIG_DIR￨3￨e ,￨3￨e environment￨3￨e .￨3￨e getDomainConfigurationDir￨3￨e (￨3￨e )￨3￨e .￨3￨e getAbsolutePath￨3￨e (￨3￨e )￨3￨e ,￨3￨e serviceTarget￨3￨e )￨3￨e ;￨3￨e DomainModelControllerService￨3￨e .￨3￨e addService￨3￨e (￨3￨e serviceTarget￨3￨e ,￨3￨e environment￨3￨e ,￨3￨e new￨3￨e ControlledProcessState￨3￨e (￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f static￨2￨d final￨2￨d class￨2￨d HostControllerExecutorService￨2￨d implements￨2￨d Service￨2￨d <￨2￨d Executor￨2￨d >￨2￨d {￨2￨d final￨3￨e InjectedValue￨3￨e <￨3￨e ThreadFactory￨3￨e >￨3￨e threadFactoryValue￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e ThreadFactory￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e ScheduledExecutorService￨3￨e executorService￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f final￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f final￨4￨p StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f ScheduledExecutorService￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
class￨1￨d AppClientServerConfiguration￨1￨d {￨1￨d private￨2￨f AppClientServerConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f List￨2￨f <￨2￨f ModelNode￨2￨f >￨2￨f serverConfiguration￨2￨f (￨2￨f final￨3￨p String￨3￨p filePath￨3￨p ,￨3￨p final￨3￨p String￨3￨p deploymentName￨3￨p ,￨3￨p final￨3￨p String￨3￨p globalModules￨3￨p ,￨3￨p final￨3￨p String￨3￨p hostUrl￨3￨p ,￨3￨p final￨3￨p List￨3￨p <￨3￨p String￨3￨p >￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f webservices￨2￨f (￨2￨f final￨3￨p List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f appclient￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p ,￨3￨p final￨3￨p String￨3￨p filePath￨3￨p ,￨3￨p final￨3￨p String￨3￨p deploymentName￨3￨p ,￨3￨p final￨3￨p String￨3￨p hostUrl￨3￨p ,￨3￨p final￨3￨p List￨3￨p <￨3￨p String￨3￨p >￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f naming￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f ee￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p ,￨3￨p final￨3￨p String￨3￨p globalModules￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f ejb3￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f security￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f jacorb￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f transactions￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f socketBindings￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f interfaces￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p )￨2￨f {￨2￨f ModelNode￨3￨e add￨3￨e =￨3￨e new￨3￨e ModelNode￨3￨e (￨3￨e )￨3￨e ;￨3￨e add￨3￨e .￨3￨e get￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e new￨3￨e ModelNode￨3￨e (￨3￨e )￨3￨e .￨3￨e setEmptyList￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e add￨3￨e (￨3￨e INTERFACE￨3￨e ,￨3￨e "public"￨3￨e )￨3￨e ;￨3￨e add￨3￨e .￨3￨e get￨3￨e (￨3￨e OP￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e ADD￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b add￨3￨b .￨3￨b get￨3￨b (￨3￨b CRITERIA￨3￨b )￨3￨b .￨3￨b add￨3￨b (￨3￨b )￨3￨b .￨3￨b set￨3￨b (￨3￨b "inet-address"￨3￨b ,￨3￨b "127.0.0.1"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b nodes￨3￨e .￨3￨e add￨3￨e (￨3￨e add￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f void￨2￨f loadExtension￨2￨f (￨2￨f List￨3￨p <￨3￨p ModelNode￨3￨p >￨3￨p nodes￨3￨p ,￨3￨p String￨3￨p moduleName￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d Deprecated￨1￨d public￨1￨d class￨1￨d LengthNormModifier￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e Directory￨2￨e dir￨2￨e ;￨2￨e private￨2￨e Similarity￨2￨e sim￨2￨e ;￨2￨e public￨2￨f LengthNormModifier￨2￨f (￨2￨f Directory￨3￨p d￨3￨p ,￨3￨p Similarity￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reSetNorms￨2￨f (￨2￨f String￨2￨f field￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e fieldName￨3￨e =￨3￨e StringHelper￨3￨e .￨3￨e intern￨3￨e (￨3￨e field￨3￨e )￨3￨e ;￨3￨e int￨3￨e [￨3￨e ]￨3￨e termCounts￨3￨e =￨3￨e new￨3￨e int￨3￨e [￨3￨e 0￨3￨e ]￨3￨e ;￨3￨e IndexReader￨3￨e reader￨3￨e =￨3￨e IndexReader￨3￨e .￨3￨e open￨3￨e (￨3￨e dir￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f termCounts￨4￨e =￨4￨e new￨4￨e int￨4￨e [￨4￨e reader￨4￨e .￨4￨e maxDoc￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e Bits￨4￨e delDocs￨4￨e =￨4￨e MultiFields￨4￨e .￨4￨e getDeletedDocs￨4￨e (￨4￨e reader￨4￨e )￨4￨e ;￨4￨e DocsEnum￨4￨e docs￨4￨e =￨4￨e null￨4￨e ;￨4￨e Terms￨4￨e terms￨4￨e =￨4￨e MultiFields￨4￨e .￨4￨e getTerms￨4￨e (￨4￨e reader￨4￨e ,￨4￨e field￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j terms￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j TermsEnum￨5￨e termsEnum￨5￨e =￨5￨e terms￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l (￨6￨c termsEnum￨6￨c .￨6￨c next￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨l {￨5￨l docs￨6￨e =￨6￨e termsEnum￨6￨e .￨6￨e docs￨6￨e (￨6￨e delDocs￨6￨e ,￨6￨e docs￨6￨e )￨6￨e ;￨6￨e int￨6￨e doc￨6￨e ;￨6￨e while￨6￨l (￨6￨l (￨7￨c doc￨7￨c =￨7￨c docs￨7￨c .￨7￨c nextDoc￨7￨c (￨7￨c )￨7￨c )￨7￨c !=￨7￨c (￨7￨c DocsEnum￨7￨c .￨7￨c NO_MORE_DOCS￨7￨c )￨7￨c )￨6￨l {￨6￨l termCounts￨7￨e [￨7￨e doc￨7￨e ]￨7￨e +=￨7￨e docs￨7￨e .￨7￨e freq￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨l }￨5￨l }￨4￨j for￨4￨l (￨4￨l int￨5￨c d￨5￨c =￨5￨c 0￨5￨c ;￨5￨c d￨5￨c <￨5￨c (￨5￨c termCounts￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c d￨5￨c ++￨5￨c )￨4￨l {￨4￨l <START_BUG>￨5￨b if￨5￨b (￨5￨b !￨5￨b (￨5￨b reader￨5￨b .￨5￨b isDeleted￨5￨b (￨5￨b d￨5￨b )￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b byte￨5￨e norm￨5￨e =￨5￨e Similarity￨5￨e .￨5￨e encodeNorm￨5￨e (￨5￨e sim￨5￨e .￨5￨e lengthNorm￨5￨e (￨5￨e fieldName￨5￨e ,￨5￨e termCounts￨5￨e [￨5￨e d￨5￨e ]￨5￨e )￨5￨e )￨5￨e ;￨5￨e reader￨5￨e .￨5￨e setNorm￨5￨e (￨5￨e d￨5￨e ,￨5￨e fieldName￨5￨e ,￨5￨e norm￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f reader￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PageResource￨1￨d extends￨1￨d WizardPage￨1￨d implements￨1￨d Listener￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e PAGE_NAME￨2￨e =￨2￨e "DecryptPageResource"￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bOpen￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bEchoKeyPassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Button￨2￨e bEchoKeystorePassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Combo￨2￨e cEncryptionId￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeystore￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeystorePassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeyName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Text￨2￨e tKeyPassword￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e IFile￨2￨e file￨2￨e ;￨2￨e private￨2￨e Decryption￨2￨e decryption￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e LABELWIDTH￨2￨e =￨2￨e 120￨2￨e ;￨2￨e public￨2￨f PageResource￨2￨f (￨2￨f final￨3￨p Decryption￨3￨p decryption￨3￨p ,￨3￨p final￨3￨p IFile￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createControl￨2￨f (￨2￨f final￨3￨p Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createPageContent￨2￨f (￨2￨f final￨3￨p Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f determineIds￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e [￨3￨e ]￨3￨e ids￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b ids￨4￨b =￨4￨b Utils￨4￨b .￨4￨b getIds￨4￨b (￨4￨b file￨4￨b ,￨4￨b "encryption"￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f ids￨4￨f =￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ;￨4￨e }￨3￨f cEncryptionId￨3￨e .￨3￨e setItems￨3￨e (￨3￨e ids￨3￨e )￨3￨e ;￨3￨e cEncryptionId￨3￨e .￨3￨e select￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f addListeners￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateStatus￨2￨f (￨2￨f final￨3￨p String￨3￨p message￨3￨p ,￨3￨p final￨3￨p int￨3￨p status￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f dialogChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f handleEvent￨2￨f (￨2￨f final￨3￨p Event￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f echoPassword￨2￨f (￨2￨f final￨3￨p Event￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f openKeystore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPageComplete￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveDataToModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f loadSettings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f storeSettings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d .￨5￨e indexOf￨5￨e (￨5￨e "="￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j posEq￨6￨c >￨6￨c 0￨6￨c )￨5￨j {￨5￨j value￨6￨e =￨6￨e name￨6￨e .￨6￨e substring￨6￨e (￨6￨e (￨6￨e posEq￨6￨e +￨6￨e 1￨6￨e )￨6￨e )￨6￨e ;￨6￨e name￨6￨e =￨6￨e name￨6￨e .￨6￨e substring￨6￨e (￨6￨e 0￨6￨e ,￨6￨e posEq￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j i￨6￨c <￨6￨c (￨6￨c (￨6￨c args￨6￨c .￨6￨c length￨6￨c )￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j value￨6￨e =￨6￨e args￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e (￨6￨e "Missing<seq2seq4repair_space>value<seq2seq4repair_space>for<seq2seq4repair_space>property<seq2seq4repair_space>"￨6￨e +￨6￨e name￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j definedProps￨5￨e .￨5￨e put￨5￨e (￨5￨e name￨5￨e ,￨5￨e value￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-logger"￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c loggerClassname￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e (￨6￨e "Only<seq2seq4repair_space>one<seq2seq4repair_space>logger<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨6￨e +￨6￨e "<seq2seq4repair_space>be<seq2seq4repair_space>specified."￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f loggerClassname￨6￨e =￨6￨e args￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ArrayIndexOutOfBoundsException￨6￨p aioobe￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e (￨6￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨6￨e +￨6￨e "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-logger<seq2seq4repair_space>argument"￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-inputhandler"￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c inputHandlerClassname￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e (￨6￨e "Only<seq2seq4repair_space>one<seq2seq4repair_space>input<seq2seq4repair_space>handler<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨6￨e +￨6￨e "be<seq2seq4repair_space>specified."￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f inputHandlerClassname￨6￨e =￨6￨e args￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ArrayIndexOutOfBoundsException￨6￨p aioobe￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e (￨6￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨6￨e +￨6￨e (￨6￨e "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-inputhandler"￨6￨e +￨6￨e "<seq2seq4repair_space>argument"￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-emacs"￨5￨c )￨5￨c )￨4￨j {￨4￨j emacsMode￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-projecthelp"￨5￨c )￨5￨c )￨4￨j {￨4￨j projectHelp￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-find"￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j i￨6￨c <￨6￨c (￨6￨c (￨6￨c args￨6￨c .￨6￨c length￨6￨c )￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j searchForThis￨6￨e =￨6￨e args￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j searchForThis￨6￨e =￨6￨e Main￨6￨e .￨6￨e DEFAULT_BUILD_FILENAME￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c startsWith￨5￨c (￨5￨c "-propertyfile"￨5￨c )￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f propertyFiles￨6￨e .￨6￨e addElement￨6￨e (￨6￨e args￨6￨e [￨6￨e (￨6￨e i￨6￨e +￨6￨e 1￨6￨e )￨6￨e ]￨6￨e )￨6￨e ;￨6￨e i￨6￨e ++￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ArrayIndexOutOfBoundsException￨6￨p aioobe￨6￨p )￨5￨f {￨5￨f String￨6￨e msg￨6￨e =￨6￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>property<seq2seq4repair_space>filename<seq2seq4repair_space>when<seq2seq4repair_space>"￨6￨e +￨6￨e "using<seq2seq4repair_space>the<seq2seq4repair_space>-propertyfile<seq2seq4repair_space>argument"￨6￨e ;￨6￨e throw￨6￨e new￨6￨e BuildException￨6￨e (￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-k"￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c arg￨5￨c .￨5￨c equals￨5￨c (￨5￨c "-keep-going"￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j keepGoingMode￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j arg￨5￨c .￨5￨c startsWith￨5￨c (￨5￨c "-"￨5￨c )￨5￨c )￨4￨j {￨4￨j String￨5￨e msg￨5￨e =￨5￨e "Unknown<seq2seq4repair_space>argument:<seq2seq4repair_space>"￨5￨e +￨5￨e arg￨5￨e ;￨5￨e System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e msg￨5￨e )￨5￨e ;￨5￨e Main￨5￨e .￨5￨e printUsage￨5￨e (￨5￨e )￨5￨e ;￨5￨e throw￨5￨e new￨5￨e BuildException￨5￨e (￨5￨e ""￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j targets￨5￨e .￨5￨e addElement￨5￨e (￨5￨e arg￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j (￨4￨c buildFile￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j searchForThis￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j buildFile￨5￨e =￨5￨e findBuildFile￨5￨e (￨5￨e System￨5￨e .￨5￨e getProperty￨5￨e (￨5￨e "user.dir"￨5￨e )￨5￨e ,￨5￨e searchForThis￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j buildFile￨5￨e =￨5￨e new￨5￨e File￨5￨e (￨5￨e Main￨5￨e .￨5￨e DEFAULT_BUILD_FILENAME￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c buildFile￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e (￨4￨e "Buildfile:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e buildFile￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist!"￨4￨e )￨4￨e )￨4￨e ;￨4￨e throw￨4￨e new￨4￨e BuildException￨4￨e (￨4￨e "Build<seq2seq4repair_space>failed"￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j buildFile￨4￨c .￨4￨c isDirectory￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e (￨4￨e "What?<seq2seq4repair_space>Buildfile:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e buildFile￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>is<seq2seq4repair_space>a<seq2seq4repair_space>dir!"￨4￨e )￨4￨e )￨4￨e ;￨4￨e throw￨4￨e new￨4￨e BuildException￨4￨e (￨4￨e "Build<seq2seq4repair_space>failed"￨4￨e )￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l int￨4￨c propertyFileIndex￨4￨c =￨4￨c 0￨4￨c ;￨4￨c propertyFileIndex￨4￨c <￨4￨c (￨4￨c propertyFiles￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c propertyFileIndex￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e filename￨4￨e =￨4￨e (￨4￨e (￨4￨e String￨4￨e )￨4￨e (￨4￨e propertyFiles￨4￨e .￨4￨e elementAt￨4￨e (￨4￨e propertyFileIndex￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e Properties￨4￨e props￨4￨e =￨4￨e new￨4￨e Properties￨4￨e (￨4￨e )￨4￨e ;￨4￨e FileInputStream￨4￨e fis￨4￨e =￨4￨e null￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f fis￨5￨e =￨5￨e new￨5￨e FileInputStream￨5￨e (￨5￨e filename￨5￨e )￨5￨e ;￨5￨e props￨5￨e .￨5￨e load￨5￨e (￨5￨e fis￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>property<seq2seq4repair_space>file<seq2seq4repair_space>"￨5￨e +￨5￨e filename￨5￨e )￨5￨e +￨5￨e ":<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e (￨5￨e e￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j fis￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f fis￨7￨e .￨7￨e close￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IOException￨7￨p e￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j }￨4￨f Enumeration￨4￨e propertyNames￨4￨e =￨4￨e props￨4￨e .￨4￨e propertyNames￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l propertyNames￨5￨c .￨5￨c hasMoreElements￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l String￨5￨e name￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e propertyNames￨5￨e .￨5￨e nextElement￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c definedProps￨6￨c .￨6￨c getProperty￨6￨c (￨6￨c name￨6￨c )￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j definedProps￨6￨e .￨6￨e put￨6￨e (￨6￨e name￨6￨e ,￨6￨e props￨6￨e .￨6￨e getProperty￨6￨e (￨6￨e name￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨l if￨3￨j (￨3￨j (￨4￨c msgOutputLevel￨4￨c )￨4￨c >=￨4￨c (￨4￨c Project￨4￨c .￨4￨c MSG_INFO￨4￨c )￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e "Buildfile:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e buildFile￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j logTo￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Main￨4￨e .￨4￨e out￨4￨e =￨4￨e logTo￨4￨e ;￨4￨e Main￨4￨e .￨4￨e err￨4￨e =￨4￨e logTo￨4￨e ;￨4￨e System￨4￨e .￨4￨e setOut￨4￨e (￨4￨e Main￨4￨e .￨4￨e out￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b System￨4￨b .￨4￨b setErr￨4￨b (￨4￨b Main￨4￨b .￨4￨b out￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j readyToRun￨3￨e =￨3￨e true￨3￨e ;￨3￨e }￨2￨f private￨2￨f File￨2￨f getParentFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f findBuildFile￨2￨f (￨2￨f String￨2￨f start￨2￨f ,￨2￨f String￨2￨f suffix￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f runBuild￨2￨f (￨2￨f ClassLoader￨2￨f coreLoader￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addBuildListeners￨2￨f (￨2￨f Project￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addInputHandler￨2￨f (￨2￨f Project￨2￨f project￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f BuildLogger￨2￨f createLogger￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printUsage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printVersion￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e String￨2￨e antVersion￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f static￨2￨f synchronized￨2￨f String￨2￨f getAntVersion￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printDescription￨2￨f (￨2￨f Project￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printTargets￨2￨f (￨2￨f Project￨3￨p project￨3￨p ,￨3￨p boolean￨3￨p printSubTargets￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f int￨2￨f findTargetPosition￨2￨f (￨2￨f Vector￨3￨p names￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printTargets￨2￨f (￨2￨f Project￨3￨p project￨3￨p ,￨3￨p Vector￨3￨p names￨3￨p ,￨3￨p Vector￨3￨p descriptions￨3￨p ,￨3￨p String￨3￨p heading￨3￨p ,￨3￨p int￨3￨p maxlen￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PlatformMBeanResourceUnitTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e ServiceContainer￨2￨e container￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModelController￨2￨e controller￨2￨e ;￨2￨e private￨2￨e static￨2￨e ModelControllerClient￨2￨e client￨2￨e ;￨2￨e @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f setupController￨2￨f (￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f AfterClass￨2￨f public￨2￨f static￨2￨f void￨2￨f shutdownServiceContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRootResource￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testBufferPoolMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testClassLoadingMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testCompilationMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testGarbageCollectorMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMemoryMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMemoryManagerMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMemoryPoolMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testOperatingSystemMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Ignore￨2￨f (￨2￨f "[AS7-2185]"￨2￨f )￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testPlatformLoggingMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRuntimeMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testThreadingMXBean￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f findMainThread￨2￨f (￨2￨f ModelNode￨3￨p result￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f List￨2￨f <￨2￨f ModelNode￨2￨f >￨2￨f rootWithNamedChildResourceTest￨2￨f (￨2￨f final￨2￨f String￨2￨f childType￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f PlatformMBeanResourceUnitTestCase￨2￨f .￨2￨f DescribedResource￨2￨f basicResourceTest￨2￨f (￨2￨f final￨2￨f String￨2￨f type￨2￨f ,￨2￨f final￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validateResource￨2￨f (￨2￨f ModelNode￨3￨p description￨3￨p ,￨3￨p ModelNode￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f executeOp￨2￨f (￨2￨f ModelNode￨2￨f op￨2￨f ,￨2￨f boolean￨2￨f expectFailure￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f ModelNode￨3￨e response￨3￨e =￨3￨e PlatformMBeanResourceUnitTestCase￨3￨e .￨3￨e client￨3￨e .￨3￨e execute￨3￨e (￨3￨e op￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j expectFailure￨4￨c )￨3￨j {￨3￨j Assert￨4￨e .￨4￨e assertEquals￨4￨e (￨4￨e FAILED￨4￨e ,￨4￨e response￨4￨e .￨4￨e get￨4￨e (￨4￨e OUTCOME￨4￨e )￨4￨e .￨4￨e asString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e response￨4￨e .￨4￨e get￨4￨e (￨4￨e FAILURE_DESCRIPTION￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b Assert￨4￨b .￨4￨b assertEquals￨4￨b (￨4￨b SUCCESS￨4￨b ,￨4￨b response￨4￨b .￨4￨b get￨4￨b (￨4￨b OUTCOME￨4￨b )￨4￨b .￨4￨b asString￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e response￨4￨e .￨4￨e get￨4￨e (￨4￨e RESULT￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f static￨2￨f ModelNode￨2￨f getOperation￨2￨f (￨2￨f final￨3￨p String￨3￨p opName￨3￨p ,￨3￨p final￨3￨p String￨3￨p type￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ModelNode￨2￨f getAddress￨2￨f (￨2￨f final￨3￨p String￨3￨p type￨3￨p ,￨3￨p final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d DescribedResource￨2￨d {￨2￨d final￨3￨e ModelNode￨3￨e description￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e resource￨3￨e ;￨3￨e public￨3￨f DescribedResource￨3￨f (￨3￨f ModelNode￨4￨p description￨4￨p ,￨4￨p ModelNode￨4￨p resource￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d equalsIgnoreCase￨5￨c (￨5￨c DOM_CHECK_CHAR_NORMALIZATION￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j state￨6￨c )￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "FEATURE_NOT_SUPPORTED"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e NOT_SUPPORTED_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_ELEMENT_CONTENT_WHITESPACE￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j !￨6￨c state￨6￨c )￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "FEATURE_NOT_SUPPORTED"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e NOT_SUPPORTED_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOMConfigurationImpl￨5￨c .￨5￨c SEND_PSVI￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j !￨6￨c state￨6￨c )￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "FEATURE_NOT_SUPPORTED"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e NOT_SUPPORTED_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_PSVI￨5￨c )￨5￨c )￨4￨j {￨4￨j features￨5￨e =￨5￨e (￨5￨e (￨5￨e short￨5￨e )￨5￨e (￨5￨e (￨5￨e state￨5￨e )￨5￨e ?￨5￨e (￨5￨e features￨5￨e )￨5￨e |￨5￨e (￨5￨e DOMConfigurationImpl￨5￨e .￨5￨e PSVI￨5￨e )￨5￨e :￨5￨e (￨5￨e features￨5￨e )￨5￨e &￨5￨e (￨5￨e ~￨5￨e (￨5￨e DOMConfigurationImpl￨5￨e .￨5￨e PSVI￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j found￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c !￨4￨c found￨4￨c )￨4￨c ||￨4￨c (￨4￨c !￨4￨c (￨4￨c value￨4￨c instanceof￨4￨c Boolean￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j found￨4￨e =￨4￨e true￨4￨e ;￨4￨e if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_ERROR_HANDLER￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c value￨6￨c instanceof￨6￨c DOMErrorHandler￨6￨c )￨6￨c ||￨6￨c (￨6￨c value￨6￨c ==￨6￨c null￨6￨c )￨6￨c )￨5￨j {￨5￨j fErrorHandlerWrapper￨6￨e .￨6￨e setErrorHandler￨6￨e (￨6￨e (￨6￨e (￨6￨e DOMErrorHandler￨6￨e )￨6￨e (￨6￨e value￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e setErrorHandler￨6￨e (￨6￨e fErrorHandlerWrapper￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_RESOURCE_RESOLVER￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c value￨6￨c instanceof￨6￨c LSResourceResolver￨6￨c )￨6￨c ||￨6￨c (￨6￨c value￨6￨c ==￨6￨c null￨6￨c )￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f setEntityResolver￨7￨e (￨7￨e new￨7￨e DOMEntityResolverWrapper￨7￨e (￨7￨e (￨7￨e (￨7￨e LSResourceResolver￨7￨e )￨7￨e (￨7￨e value￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f XMLConfigurationException￨7￨p e￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_SCHEMA_LOCATION￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c value￨6￨c instanceof￨6￨c String￨6￨c )￨6￨c ||￨6￨c (￨6￨c value￨6￨c ==￨6￨c null￨6￨c )￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f setProperty￨7￨e (￨7￨e (￨7￨e (￨7￨e Constants￨7￨e .￨7￨e JAXP_PROPERTY_PREFIX￨7￨e )￨7￨e +￨7￨e (￨7￨e Constants￨7￨e .￨7￨e SCHEMA_SOURCE￨7￨e )￨7￨e )￨7￨e ,￨7￨e value￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f XMLConfigurationException￨7￨p e￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOM_SCHEMA_TYPE￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c value￨6￨c instanceof￨6￨c String￨6￨c )￨6￨c ||￨6￨c (￨6￨c value￨6￨c ==￨6￨c null￨6￨c )￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f if￨7￨j (￨7￨j value￨8￨c ==￨8￨c null￨8￨c )￨7￨j {￨7￨j setProperty￨8￨e (￨8￨e (￨8￨e (￨8￨e Constants￨8￨e .￨8￨e JAXP_PROPERTY_PREFIX￨8￨e )￨8￨e +￨8￨e (￨8￨e Constants￨8￨e .￨8￨e SCHEMA_LANGUAGE￨8￨e )￨8￨e )￨8￨e ,￨8￨e null￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j if￨7￨j (￨7￨j value￨8￨c .￨8￨c equals￨8￨c (￨8￨c NS_XMLSCHEMA￨8￨c )￨8￨c )￨7￨j {￨7￨j setProperty￨8￨e (￨8￨e (￨8￨e (￨8￨e Constants￨8￨e .￨8￨e JAXP_PROPERTY_PREFIX￨8￨e )￨8￨e +￨8￨e (￨8￨e Constants￨8￨e .￨8￨e SCHEMA_LANGUAGE￨8￨e )￨8￨e )￨8￨e ,￨8￨e NS_XMLSCHEMA￨8￨e )￨8￨e ;￨8￨e }￨7￨j else￨7￨j if￨7￨j (￨7￨j value￨8￨c .￨8￨c equals￨8￨c (￨8￨c NS_DTD￨8￨c )￨8￨c )￨7￨j {￨7￨j setProperty￨8￨e (￨8￨e (￨8￨e (￨8￨e Constants￨8￨e .￨8￨e JAXP_PROPERTY_PREFIX￨8￨e )￨8￨e +￨8￨e (￨8￨e Constants￨8￨e .￨8￨e SCHEMA_LANGUAGE￨8￨e )￨8￨e )￨8￨e ,￨8￨e NS_DTD￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨f catch￨6￨f (￨6￨f XMLConfigurationException￨7￨p e￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOMConfigurationImpl￨5￨c .￨5￨c ENTITY_RESOLVER￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c value￨6￨c instanceof￨6￨c XMLEntityResolver￨6￨c )￨6￨c ||￨6￨c (￨6￨c value￨6￨c ==￨6￨c null￨6￨c )￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f setEntityResolver￨7￨e (￨7￨e (￨7￨e (￨7￨e XMLEntityResolver￨7￨e )￨7￨e (￨7￨e value￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f XMLConfigurationException￨7￨p e￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOMConfigurationImpl￨5￨c .￨5￨c SYMBOL_TABLE￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j value￨6￨c instanceof￨6￨c SymbolTable￨6￨c )￨5￨j {￨5￨j setProperty￨6￨e (￨6￨e DOMConfigurationImpl￨6￨e .￨6￨e SYMBOL_TABLE￨6￨e ,￨6￨e value￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j name￨5￨c .￨5￨c equalsIgnoreCase￨5￨c (￨5￨c DOMConfigurationImpl￨5￨c .￨5￨c GRAMMAR_POOL￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b if￨5￨b (￨5￨b value￨5￨b instanceof￨5￨b XMLGrammarPool￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b setProperty￨5￨e (￨5￨e DOMConfigurationImpl￨5￨e .￨5￨e GRAMMAR_POOL￨5￨e ,￨5￨e value￨5￨e )￨5￨e ;￨5￨e else￨5￨j {￨5￨j String￨6￨f msg￨6￨f =￨6￨f DOMMessageFormatter￨6￨f .￨6￨f formatMessage￨6￨f (￨6￨f DOM_DOMAIN￨6￨f ,￨6￨f "TYPE_MISMATCH_ERR"￨6￨f ,￨6￨f new￨6￨f Object￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e throw￨6￨e new￨6￨e DOMException￨6￨e (￨6￨e DOMException￨6￨e .￨6￨e TYPE_MISMATCH_ERR￨6￨e ,￨6￨e msg￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j String￨5￨f msg￨5￨f =￨5￨f DOMMessageFormatter￨5￨f .￨5￨f formatMessage￨5￨f (￨5￨f DOM_DOMAIN￨5￨f ,￨5￨f "FEATURE_NOT_FOUND"￨5￨f ,￨5￨f new￨5￨f Object￨5￨f [￨5￨f ]￨5￨f (￨5￨f )￨5￨f {￨5￨f }￨5￨f )￨5￨e ;￨5￨e throw￨5￨e new￨5￨e DOMException￨5￨e (￨5￨e DOMException￨5￨e .￨5￨e NOT_FOUND_ERR￨5￨e ,￨5￨e msg￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f public￨2￨f Object￨2￨f getParameter￨2￨f (￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f DOMException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f canSetParameter￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DOMStringList￨2￨f getParameterNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f throws￨2￨f XNIException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkProperty￨2￨f (￨2￨f String￨2￨f propertyId￨2￨f )￨2￨f throws￨2￨f XMLConfigurationException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addComponent￨2￨f (￨2￨f XMLComponent￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ValidationManager￨2￨f createValidationManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f setDTDValidatorFactory￨2￨f (￨2￨f String￨3￨p version￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Driver20￨1￨d extends￨1￨d InternalDriver￨1￨d implements￨1￨d Driver￨1￨d {￨1￨d private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f BOOLEAN_CHOICES￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e Class￨2￨e antiGCDriverManager￨2￨e ;￨2￨e public￨2￨f void￨2￨f boot￨2￨f (￨2￨f boolean￨2￨f create￨2￨f ,￨2￨f Properties￨2￨f properties￨2￨f )￨2￨f throws￨2￨f StandardException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EmbedResultSet￨2￨f newEmbedResultSet￨2￨f (￨2￨f EmbedConnection￨2￨f conn￨2￨f ,￨2￨f ResultSet￨2￨f results￨2￨f ,￨2￨f boolean￨2￨f forMetaData￨2￨f ,￨2￨f EmbedStatement￨2￨f statement￨2￨f ,￨2￨f boolean￨2￨f isAtomic￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f BrokeredConnection￨2￨f newBrokeredConnection￨2￨f (￨2￨f BrokeredConnectionControl￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DriverPropertyInfo￨2￨f [￨2￨f ]￨2￨f getPropertyInfo￨2￨f (￨2￨f String￨2￨f url￨2￨f ,￨2￨f Properties￨2￨f info￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j info￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j Boolean￨5￨c .￨5￨c valueOf￨5￨c (￨5￨c info￨5￨c .￨5￨c getProperty￨5￨c (￨5￨c SHUTDOWN_ATTR￨5￨c )￨5￨c )￨5￨c .￨5￨c booleanValue￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e new￨5￨e DriverPropertyInfo￨5￨e [￨5￨e 0￨5￨e ]￨5￨e ;￨5￨e }￨4￨j }￨3￨j String￨3￨e dbname￨3￨e =￨3￨e InternalDriver￨3￨e .￨3￨e getDatabaseName￨3￨e (￨3￨e url￨3￨e ,￨3￨e info￨3￨e )￨3￨e ;￨3￨e FormatableProperties￨3￨e finfo￨3￨e =￨3￨e getAttributes￨3￨e (￨3￨e url￨3￨e ,￨3￨e info￨3￨e )￨3￨e ;￨3￨e info￨3￨e =￨3￨e null￨3￨e ;￨3￨e boolean￨3￨e encryptDB￨3￨e =￨3￨e Boolean￨3￨e .￨3￨e valueOf￨3￨e (￨3￨e finfo￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e DATA_ENCRYPTION￨3￨e )￨3￨e )￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e encryptpassword￨3￨e =￨3￨e finfo￨3￨e .￨3￨e getProperty￨3￨e (￨3￨e BOOT_PASSWORD￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b dbname￨3￨b .￨3￨b length￨3￨b (￨3￨b )￨3￨b )￨3￨b ==￨3￨b 0￨3￨b )￨3￨b ||￨3￨b (￨3￨b encryptDB￨3￨b =￨3￨b true￨3￨b &&￨3￨b (￨3￨b encryptpassword￨3￨b ==￨3￨b null￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f connStringAttributes￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f }￨3￨f ;￨3￨e String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f connBooleanAttributes￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f }￨3￨f ;￨3￨e String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f connStringSecretAttributes￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f }￨3￨f ;￨3￨e DriverPropertyInfo￨3￨e [￨3￨e ]￨3￨e optionsNoDB￨3￨e =￨3￨e new￨3￨e DriverPropertyInfo￨3￨e [￨3￨e (￨3￨e (￨3￨e connStringAttributes￨3￨e .￨3￨e length￨3￨e )￨3￨e +￨3￨e (￨3￨e connBooleanAttributes￨3￨e .￨3￨e length￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e connStringSecretAttributes￨3￨e .￨3￨e length￨3￨e )￨3￨e ]￨3￨e ;￨3￨e int￨3￨e attrIndex￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c connStringAttributes￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c ,￨4￨c attrIndex￨4￨c ++￨4￨c )￨3￨l {￨3￨l optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e =￨4￨e new￨4￨e DriverPropertyInfo￨4￨e (￨4￨e connStringAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ,￨4￨e finfo￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e connStringAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e )￨4￨e ;￨4￨e optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e .￨4￨e description￨4￨e =￨4￨e MessageService￨4￨e .￨4￨e getTextMessage￨4￨e (￨4￨e connStringAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 1￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l optionsNoDB￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e choices￨3￨e =￨3￨e Monitor￨3￨e .￨3￨e getMonitor￨3￨e (￨3￨e )￨3￨e .￨3￨e getServiceList￨3￨e (￨3￨e DATABASE_MODULE￨3￨e )￨3￨e ;￨3￨e optionsNoDB￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e value￨3￨e =￨3￨e dbname￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c connStringSecretAttributes￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c ,￨4￨c attrIndex￨4￨c ++￨4￨c )￨3￨l {￨3￨l optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e =￨4￨e new￨4￨e DriverPropertyInfo￨4￨e (￨4￨e connStringSecretAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ,￨4￨e (￨4￨e (￨4￨e finfo￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e connStringSecretAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e )￨4￨e ==￨4￨e null￨4￨e ?￨4￨e ""￨4￨e :￨4￨e "****"￨4￨e )￨4￨e )￨4￨e ;￨4￨e optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e .￨4￨e description￨4￨e =￨4￨e MessageService￨4￨e .￨4￨e getTextMessage￨4￨e (￨4￨e connStringSecretAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 1￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c connBooleanAttributes￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c ,￨4￨c attrIndex￨4￨c ++￨4￨c )￨3￨l {￨3￨l optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e =￨4￨e new￨4￨e DriverPropertyInfo￨4￨e (￨4￨e connBooleanAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e ,￨4￨e Boolean￨4￨e .￨4￨e valueOf￨4￨e (￨4￨e (￨4￨e finfo￨4￨e ==￨4￨e null￨4￨e ?￨4￨e ""￨4￨e :￨4￨e finfo￨4￨e .￨4￨e getProperty￨4￨e (￨4￨e connBooleanAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 0￨4￨e ]￨4￨e )￨4￨e )￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e .￨4￨e description￨4￨e =￨4￨e MessageService￨4￨e .￨4￨e getTextMessage￨4￨e (￨4￨e connBooleanAttributes￨4￨e [￨4￨e i￨4￨e ]￨4￨e [￨4￨e 1￨4￨e ]￨4￨e )￨4￨e ;￨4￨e optionsNoDB￨4￨e [￨4￨e attrIndex￨4￨e ]￨4￨e .￨4￨e choices￨4￨e =￨4￨e Driver20￨4￨e .￨4￨e BOOLEAN_CHOICES￨4￨e ;￨4￨e }￨3￨l return￨3￨e optionsNoDB￨3￨e ;￨3￨e }￨3￨e return￨3￨e new￨3￨e DriverPropertyInfo￨3￨e [￨3￨e 0￨3￨e ]￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f checkSystemPrivileges￨2￨f (￨2￨f String￨2￨f user￨2￨f ,￨2￨f Permission￨2￨f perm￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunAsClient￨1￨d @￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d DeploymentTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e TIMEOUT￨2￨e =￨2￨e 10000￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e WAR_JBOSS_FILE￨2￨e =￨2￨e "jboss-web.xml"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e JAR_JBOSS_FILE￨2￨e =￨2￨e "jboss.xml"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e EAR_JBOSS_FILE￨2￨e =￨2￨e "jboss-app.xml"￨2￨e ;￨2￨e @￨2￨e ArquillianResource￨2￨e private￨2￨e ManagementClient￨2￨e managementClient￨2￨e ;￨2￨e @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f fakeDeployment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDeployUndeployEAR￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f DeploymentManager￨2￨f getDeploymentManager￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ProgressObject￨2￨f jsr88Deploy￨2￨f (￨2￨f DeploymentManager￨2￨f manager￨2￨f ,￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f archive￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ProgressObject￨2￨f jsr88Undeploy￨2￨f (￨2￨f DeploymentManager￨2￨f manager￨2￨f ,￨2￨f TargetModuleID￨2￨f [￨2￨f ]￨2￨f resultTargetModuleIDs￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f StateType￨2￨f awaitCompletion￨2￨f (￨2￨f ProgressObject￨2￨f progress￨2￨f ,￨2￨f long￨2￨f timeout￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertServletAccess￨2￨f (￨2￨f String￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b URL￨3￨b servletURL￨3￨b =￨3￨b new￨3￨b URL￨3￨b (￨3￨b (￨3￨b "http://localhost:8080/"￨3￨b +￨3￨b context￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b BufferedReader￨3￨e br￨3￨e =￨3￨e new￨3￨e BufferedReader￨3￨e (￨3￨e new￨3￨e InputStreamReader￨3￨e (￨3￨e servletURL￨3￨e .￨3￨e openStream￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e String￨3￨e message￨3￨e =￨3￨e br￨3￨e .￨3￨e readLine￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e "Hello<seq2seq4repair_space>World!"￨3￨e ,￨3￨e message￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f InputStream￨2￨f createDeploymentPlan￨2￨f (￨2￨f String￨2￨f deploymentFile￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f getWebArchive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f getEjbArchive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Archive￨2￨f <￨2￨f ?￨2￨f >￨2￨f getEarArchive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
abstract￨1￨d class￨1￨d AbstractTrie￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d extends￨1￨d AbstractMap￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d Trie￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 5826987063535505652L￨2￨e ;￨2￨e protected￨2￨e final￨2￨e KeyAnalyzer￨2￨e <￨2￨e ?￨2￨e super￨2￨e K￨2￨e >￨2￨e keyAnalyzer￨2￨e ;￨2￨e public￨2￨f AbstractTrie￨2￨f (￨2￨f final￨3￨p KeyAnalyzer￨3￨p <￨3￨p ?￨3￨p super￨3￨p K￨3￨p >￨3￨p keyAnalyzer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f KeyAnalyzer￨2￨f <￨2￨f ?￨2￨f super￨2￨f K￨2￨f >￨2￨f getKeyAnalyzer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f K￨2￨f selectKey￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f V￨2￨f selectValue￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f final￨2￨f K￨2￨f castKey￨2￨f (￨2￨f final￨3￨p Object￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f lengthInBits￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f bitsPerElement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f boolean￨2￨f isBitSet￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p ,￨3￨p final￨3￨p int￨3￨p bitIndex￨3￨p ,￨3￨p final￨3￨p int￨3￨p lengthInBits￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f bitIndex￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p ,￨3￨p final￨3￨p K￨3￨p foundKey￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f boolean￨2￨f compareKeys￨2￨f (￨2￨f final￨3￨p K￨3￨p key￨3￨p ,￨3￨p final￨3￨p K￨3￨p other￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j key￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e other￨4￨e ==￨4￨e null￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j other￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b key￨4￨b ==￨4￨b null￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e (￨3￨e keyAnalyzer￨3￨e .￨3￨e compare￨3￨e (￨3￨e key￨3￨e ,￨3￨e other￨3￨e )￨3￨e )￨3￨e ==￨3￨e 0￨3￨e ;￨3￨e }￨2￨f static￨2￨f boolean￨2￨f compare￨2￨f (￨2￨f final￨3￨p Object￨3￨p a￨3￨p ,￨3￨p final￨3￨p Object￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f abstract￨2￨d static￨2￨d class￨2￨d BasicEntry￨2￨d <￨2￨d K￨2￨d ,￨2￨d V￨2￨d >￨2￨d implements￨2￨d Serializable￨2￨d ,￨2￨d Map￨2￨d .￨2￨d Entry￨2￨d <￨2￨d K￨2￨d ,￨2￨d V￨2￨d >￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e -￨3￨e 944364551314110330L￨3￨e ;￨3￨e protected￨3￨e K￨3￨e key￨3￨e ;￨3￨e protected￨3￨e V￨3￨e value￨3￨e ;￨3￨e private￨3￨e final￨3￨e int￨3￨e hashCode￨3￨e ;￨3￨e public￨3￨f BasicEntry￨3￨f (￨3￨f final￨4￨p K￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f BasicEntry￨3￨f (￨3￨f final￨4￨p K￨4￨p key￨4￨p ,￨4￨p final￨4￨p V￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f V￨3￨f setKeyValue￨3￨f (￨3￨f final￨4￨p K￨4￨p key￨4￨p ,￨4￨p final￨4￨p V￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f K￨3￨f getKey￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f V￨3￨f getValue￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f V￨3￨f setValue￨3￨f (￨3￨f final￨4￨p V￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f final￨4￨p Object￨4￨p o￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f String￨3￨f toString￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d Submitter￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e int￨2￨e STOCK_LEVEL￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e ORDER_STATUS_BY_NAME￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e ORDER_STATUS_BY_ID￨2￨e =￨2￨e 2￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e PAYMENT_BY_NAME￨2￨e =￨2￨e 3￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e PAYMENT_BY_ID￨2￨e =￨2￨e 4￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e DELIVERY_SCHEDULE￨2￨e =￨2￨e 5￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e NEW_ORDER￨2￨e =￨2￨e 6￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e NEW_ORDER_ROLLBACK￨2￨e =￨2￨e 7￨2￨e ;￨2￨e private￨2￨e final￨2￨e Display￨2￨e display￨2￨e ;￨2￨e private￨2￨e final￨2￨e Operations￨2￨e ops￨2￨e ;￨2￨e private￨2￨e final￨2￨e OERandom￨2￨e rand￨2￨e ;￨2￨e private￨2￨e final￨2￨e short￨2￨e maxW￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e [￨2￨e ]￨2￨e transactionCount￨2￨e ;￨2￨e public￨2￨f static￨2￨f OERandom￨2￨f getRuntimeRandom￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f stockLevelOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f orderStatusByIdOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f orderStatusByNameOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f paymentByIdOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f paymentByNameOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Submitter￨2￨f newOrderOnly￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Submitter￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Operations￨3￨p ops￨3￨p ,￨3￨p OERandom￨3￨p rand￨3￨p ,￨3￨p short￨3￨p maxW￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearTransactionCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f runTransactions￨2￨f (￨2￨f final￨2￨f Object￨2￨f displayData￨2￨f ,￨2￨f final￨2￨f int￨2￨f count￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f runTransaction￨2￨f (￨2￨f final￨2￨f Object￨2￨f displayData￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f mixType￨2￨f (￨2￨f final￨3￨p int￨3￨p chooseType￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runNewOrder￨2￨f (￨2￨f Object￨2￨f displayData￨2￨f ,￨2￨f boolean￨2￨f forRollback￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f short￨3￨e homeWarehouse￨3￨e =￨3￨e warehouse￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e orderItemCount￨3￨e =￨3￨e rand￨3￨e .￨3￨e randomInt￨3￨e (￨3￨e 5￨3￨e ,￨3￨e 15￨3￨e )￨3￨e ;￨3￨e int￨3￨e [￨3￨e ]￨3￨e items￨3￨e =￨3￨e new￨3￨e int￨3￨e [￨3￨e orderItemCount￨3￨e ]￨3￨e ;￨3￨e short￨3￨e [￨3￨e ]￨3￨e quantities￨3￨e =￨3￨e new￨3￨e short￨3￨e [￨3￨e orderItemCount￨3￨e ]￨3￨e ;￨3￨e short￨3￨e [￨3￨e ]￨3￨e supplyW￨3￨e =￨3￨e new￨3￨e short￨3￨e [￨3￨e orderItemCount￨3￨e ]￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c orderItemCount￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l items￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e rand￨4￨e .￨4￨e NURand8191￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c maxW￨5￨c )￨5￨c ==￨5￨c 1￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c rand￨5￨c .￨5￨c randomInt￨5￨c (￨5￨c 1￨5￨c ,￨5￨c 100￨5￨c )￨5￨c )￨5￨c >￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j supplyW￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e homeWarehouse￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j short￨5￨e sw￨5￨e =￨5￨e warehouse￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l sw￨6￨c ==￨6￨c homeWarehouse￨6￨c )￨5￨l {￨5￨l sw￨6￨e =￨6￨e warehouse￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l supplyW￨5￨e [￨5￨e i￨5￨e ]￨5￨e =￨5￨e sw￨5￨e ;￨5￨e }￨4￨j supplyW￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e (￨4￨e (￨4￨e rand￨4￨e .￨4￨e randomInt￨4￨e (￨4￨e 1￨4￨e ,￨4￨e 100￨4￨e )￨4￨e )￨4￨e >￨4￨e 1￨4￨e )￨4￨e ?￨4￨e homeWarehouse￨4￨e :￨4￨e warehouse￨4￨e (￨4￨e )￨4￨e ;￨4￨e quantities￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e (￨4￨e (￨4￨e short￨4￨e )￨4￨e (￨4￨e rand￨4￨e .￨4￨e randomInt￨4￨e (￨4￨e 1￨4￨e ,￨4￨e 10￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j forRollback￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b items￨4￨b [￨4￨b orderItemCount￨4￨b ]￨4￨b =￨4￨b 2334432￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j ops￨3￨e .￨3￨e newOrder￨3￨e (￨3￨e display￨3￨e ,￨3￨e displayData￨3￨e ,￨3￨e homeWarehouse￨3￨e ,￨3￨e rand￨3￨e .￨3￨e district￨3￨e (￨3￨e )￨3￨e ,￨3￨e rand￨3￨e .￨3￨e NURand1023￨3￨e (￨3￨e )￨3￨e ,￨3￨e items￨3￨e ,￨3￨e quantities￨3￨e ,￨3￨e supplyW￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f runScheduleDelivery￨2￨f (￨2￨f Object￨3￨p displayData￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runPayment￨2￨f (￨2￨f Object￨2￨f displayData￨2￨f ,￨2￨f boolean￨2￨f byName￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f short￨2￨f warehouse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runStockLevel￨2￨f (￨2￨f Object￨2￨f displayData￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runOrderStatus￨2￨f (￨2￨f Object￨2￨f displayData￨2￨f ,￨2￨f boolean￨2￨f byName￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f printReport￨2￨f (￨2￨f PrintStream￨3￨p out￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f transactionCount￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p int￨3￨p count￨3￨p ,￨3￨p int￨3￨p total￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f percent￨2￨f (￨2￨f int￨3￨p count￨3￨p ,￨3￨p int￨3￨p total￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f [￨2￨f ]￨2￨f getTransactionCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestCalendarFields￨1￨d extends￨1￨d BaseKernelTest￨1￨d {￨1￨d public￨2￨f TestCalendarFields￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFieldDefaultTimeZone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeZoneEquals￨2￨f (￨2￨f )￨2￨f {￨2￨f CalendarFields￨3￨e c1￨3￨e =￨3￨e new￨3￨e CalendarFields￨3￨e (￨3￨e )￨3￨e ;￨3￨e CalendarFields￨3￨e c2￨3￨e =￨3￨e new￨3￨e CalendarFields￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertTimeZonesEquals￨3￨e (￨3￨e c1￨3￨e ,￨3￨e c2￨3￨e )￨3￨e ;￨3￨e OpenJPAEntityManager￨3￨e pm￨3￨e ;￨3￨e pm￨3￨e =￨3￨e getPM￨3￨e (￨3￨e )￨3￨e ;￨3￨e startTx￨3￨e (￨3￨e pm￨3￨e )￨3￨e ;￨3￨e pm￨3￨e .￨3￨e persist￨3￨e (￨3￨e c2￨3￨e )￨3￨e ;￨3￨e int￨3￨e id2￨3￨e =￨3￨e c2￨3￨e .￨3￨e getId￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertTimeZonesEquals￨3￨e (￨3￨e c1￨3￨e ,￨3￨e c2￨3￨e )￨3￨e ;￨3￨e endTx￨3￨e (￨3￨e pm￨3￨e )￨3￨e ;￨3￨e assertTimeZonesEquals￨3￨e (￨3￨e c1￨3￨e ,￨3￨e c2￨3￨e )￨3￨e ;￨3￨e endEm￨3￨e (￨3￨e pm￨3￨e )￨3￨e ;￨3￨e pm￨3￨e =￨3￨e getPM￨3￨e (￨3￨e )￨3￨e ;￨3￨e c2￨3￨e =￨3￨e (￨3￨e (￨3￨e CalendarFields￨3￨e )￨3￨e (￨3￨e pm￨3￨e .￨3￨e find￨3￨e (￨3￨e CalendarFields￨3￨e .￨3￨e class￨3￨e ,￨3￨e id2￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertTimeZonesEquals￨3￨e (￨3￨e c1￨3￨e ,￨3￨e c2￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertTimeZonesEquals￨3￨b (￨3￨b c1￨3￨b ,￨3￨b (￨3￨b (￨3￨b CalendarFields￨3￨b )￨3￨b (￨3￨b pm￨3￨b .￨3￨b detach￨3￨b (￨3￨b c2￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b endEm￨3￨e (￨3￨e pm￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f testCalendarQuery￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Calendar￨2￨f newCalendar￨2￨f (￨2￨f Date￨3￨p date￨3￨p ,￨3￨p String￨3￨p tz￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMutateCalendarDirties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f setTimeInMillis￨2￨f (￨2￨f Calendar￨3￨p cal￨3￨p ,￨3￨p long￨3￨p millis￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertTimeZonesEquals￨2￨f (￨2￨f CalendarFields￨3￨p c1￨3￨p ,￨3￨p CalendarFields￨3￨p c2￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Argument￨1￨d extends￨1￨d LocalDeclaration￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e char￨2￨e [￨2￨e ]￨2￨e SET￨2￨e =￨2￨e "set"￨2￨e .￨2￨e toCharArray￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f Argument￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p name￨3￨p ,￨3￨p long￨3￨p posNom￨3￨p ,￨3￨p TypeReference￨3￨p tr￨3￨p ,￨3￨p int￨3￨p modifiers￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bind￨2￨f (￨2￨f MethodScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p typeBinding￨3￨p ,￨3￨p boolean￨3￨p used￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getKind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVarArgs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f print￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveForCatch￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f TypeBinding￨3￨e exceptionType￨3￨e =￨3￨e this￨3￨e .￨3￨e type￨3￨e .￨3￨e resolveType￨3￨e (￨3￨e scope￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e hasError￨3￨e ;￨3￨e if￨3￨j (￨3￨j exceptionType￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j hasError￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j hasError￨4￨e =￨4￨e false￨4￨e ;￨4￨e switch￨4￨s (￨4￨s exceptionType￨4￨c .￨4￨c kind￨4￨c (￨4￨c )￨4￨c )￨4￨s {￨4￨s case￨5￨c Binding￨5￨c .￨5￨c PARAMETERIZED_TYPE￨5￨c :￨5￨c if￨6￨j (￨6￨j exceptionType￨7￨c .￨7￨c isBoundParameterizedType￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j hasError￨7￨e =￨7￨e true￨7￨e ;￨7￨e scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e invalidParameterizedExceptionType￨7￨e (￨7￨e exceptionType￨7￨e ,￨7￨e this￨7￨e )￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c TYPE_PARAMETER￨5￨c :￨5￨c scope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e invalidTypeVariableAsException￨6￨e (￨6￨e exceptionType￨6￨e ,￨6￨e this￨6￨e )￨6￨e ;￨6￨e hasError￨6￨e =￨6￨e true￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c Binding￨5￨c .￨5￨c ARRAY_TYPE￨5￨c :￨5￨c if￨6￨j (￨6￨j (￨7￨c (￨7￨c (￨7￨c ArrayBinding￨7￨c )￨7￨c (￨7￨c exceptionType￨7￨c )￨7￨c )￨7￨c .￨7￨c leafComponentType￨7￨c )￨7￨c ==￨7￨c (￨7￨c TypeBinding￨7￨c .￨7￨c VOID￨7￨c )￨7￨c )￨6￨j {￨6￨j scope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e variableTypeCannotBeVoidArray￨7￨e (￨7￨e this￨7￨e )￨7￨e ;￨7￨e hasError￨7￨e =￨7￨e true￨7￨e ;￨7￨e }￨6￨j break￨6￨e ;￨6￨e }￨4￨s <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b exceptionType￨4￨b .￨4￨b findSuperTypeOriginatingFrom￨4￨b (￨4￨b TypeIds￨4￨b .￨4￨b T_JavaLangThrowable￨4￨b ,￨4￨b true￨4￨b )￨4￨b )￨4￨b ==￨4￨b null￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e cannotThrowType￨4￨e (￨4￨e this￨4￨e .￨4￨e type￨4￨e ,￨4￨e exceptionType￨4￨e )￨4￨e ;￨4￨e hasError￨4￨e =￨4￨e true￨4￨e ;￨4￨e }￨3￨j Binding￨3￨e existingVariable￨3￨e =￨3￨e scope￨3￨e .￨3￨e getBinding￨3￨e (￨3￨e name￨3￨e ,￨3￨e Binding￨3￨e .￨3￨e VARIABLE￨3￨e ,￨3￨e this￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c existingVariable￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c existingVariable￨4￨c .￨4￨c isValidBinding￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c existingVariable￨5￨c instanceof￨5￨c LocalVariableBinding￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c this￨5￨c .￨5￨c hiddenVariableDepth￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e redefineArgument￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e localVariableHiding￨5￨e (￨5￨e this￨5￨e ,￨5￨e existingVariable￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j this￨3￨e .￨3￨e binding￨3￨e =￨3￨e new￨3￨e LocalVariableBinding￨3￨e (￨3￨e this￨3￨e ,￨3￨e exceptionType￨3￨e ,￨3￨e modifiers￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e ASTNode￨3￨e .￨3￨e resolveAnnotations￨3￨e (￨3￨e scope￨3￨e ,￨3￨e this￨3￨e .￨3￨e annotations￨3￨e ,￨3￨e this￨3￨e .￨3￨e binding￨3￨e )￨3￨e ;￨3￨e scope￨3￨e .￨3￨e addLocalVariable￨3￨e (￨3￨e binding￨3￨e )￨3￨e ;￨3￨e binding￨3￨e .￨3￨e setConstant￨3￨e (￨3￨e Constant￨3￨e .￨3￨e NotAConstant￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j hasError￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j return￨3￨e exceptionType￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d ThreadLeakScope￨1￨d (￨1￨d Scope￨1￨d .￨1￨d NONE￨1￨d )￨1￨d public￨1￨d class￨1￨d HdfsLockFactoryTest￨1￨d extends￨1￨d SolrTestCaseJ4￨1￨d {￨1￨d private￨2￨e static￨2￨e MiniDFSCluster￨2￨e dfsCluster￨2￨e ;￨2￨e @￨2￨f BeforeClass￨2￨f public￨2￨f static￨2￨f void￨2￨f beforeClass￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f AfterClass￨2￨f public￨2￨f static￨2￨f void￨2￨f afterClass￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Before￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f After￨2￨f public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testBasic￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f URI￨3￨e uri￨3￨e =￨3￨e HdfsLockFactoryTest￨3￨e .￨3￨e dfsCluster￨3￨e .￨3￨e getURI￨3￨e (￨3￨e )￨3￨e ;￨3￨e Path￨3￨e lockPath￨3￨e =￨3￨e new￨3￨e Path￨3￨e (￨3￨e uri￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ,￨3￨e "/basedir/lock"￨3￨e )￨3￨e ;￨3￨e HdfsLockFactory￨3￨e lockFactory￨3￨e =￨3￨e new￨3￨e HdfsLockFactory￨3￨e (￨3￨e lockPath￨3￨e ,￨3￨e new￨3￨e Configuration￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Lock￨3￨e lock￨3￨e =￨3￨e lockFactory￨3￨e .￨3￨e makeLock￨3￨e (￨3￨e "testlock"￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e success￨3￨e =￨3￨e lock￨3￨e .￨3￨e obtain￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨3￨e ,￨3￨e success￨3￨e )￨3￨e ;￨3￨e success￨3￨e =￨3￨e lock￨3￨e .￨3￨e obtain￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨3￨e ,￨3￨e success￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b lock￨3￨b .￨3￨b release￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b success￨3￨e =￨3￨e lock￨3￨e .￨3￨e obtain￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨3￨e ,￨3￨e success￨3￨e )￨3￨e ;￨3￨e success￨3￨e =￨3￨e lock￨3￨e .￨3￨e obtain￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨3￨e ,￨3￨e success￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d RemotingExtension￨1￨d implements￨1￨d Extension￨1￨d {￨1￨d private￨2￨f static￨2￨f final￨2￨f SubsystemFactory￨2￨f <￨2￨f RemotingSubsystemElement￨2￨f >￨2￨f FACTORY￨2￨f =￨2￨f new￨2￨f SubsystemFactory￨2￨f <￨2￨f RemotingSubsystemElement￨2￨f >￨2￨f (￨2￨f )￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f RemotingSubsystemElement￨3￨f createSubsystemElement￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f ExtensionContext￨3￨p context￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b context￨3￨b .￨3￨b registerSubsystem￨3￨b (￨3￨b REMOTING_1_0￨3￨b .￨3￨b getUriString￨3￨b (￨3￨b )￨3￨b ,￨3￨b RemotingExtension￨3￨b .￨3￨b FACTORY￨3￨b ,￨3￨b RemotingSubsystemParser￨3￨b .￨3￨b getInstance￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f activate￨2￨f (￨2￨f final￨3￨p ServiceActivatorContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d URLCodec￨1￨d implements￨1￨d BinaryDecoder￨1￨d ,￨1￨d BinaryEncoder￨1￨d ,￨1￨d StringDecoder￨1￨d ,￨1￨d StringEncoder￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e RADIX￨2￨e =￨2￨e 16￨2￨e ;￨2￨e protected￨2￨e String￨2￨e charset￨2￨e ;￨2￨e protected￨2￨e static￨2￨e byte￨2￨e ESCAPE_CHAR￨2￨e =￨2￨e '%'￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e BitSet￨2￨e WWW_FORM_URL￨2￨e =￨2￨e new￨2￨e BitSet￨2￨e (￨2￨e 256￨2￨e )￨2￨e ;￨2￨e public￨2￨f URLCodec￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f URLCodec￨2￨f (￨2￨f String￨3￨p charset￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f encodeUrl￨2￨f (￨2￨f BitSet￨3￨p urlsafe￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f decodeUrl￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j bytes￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j ByteArrayOutputStream￨3￨e buffer￨3￨e =￨3￨e new￨3￨e ByteArrayOutputStream￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c bytes￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l int￨4￨e b￨4￨e =￨4￨e bytes￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e if￨4￨j (￨4￨j b￨5￨c ==￨5￨c '+'￨5￨c )￨4￨j {￨4￨j buffer￨5￨e .￨5￨e write￨5￨e (￨5￨e '<seq2seq4repair_space>'￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j b￨5￨c ==￨5￨c '%'￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f int￨6￨e u￨6￨e =￨6￨e URLCodec￨6￨e .￨6￨e toCharacterDigit￨6￨e (￨6￨e bytes￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e )￨6￨e ;￨6￨e int￨6￨e l￨6￨e =￨6￨e URLCodec￨6￨e .￨6￨e toCharacterDigit￨6￨e (￨6￨e bytes￨6￨e [￨6￨e (￨6￨e ++￨6￨e i￨6￨e )￨6￨e ]￨6￨e )￨6￨e ;￨6￨e buffer￨6￨e .￨6￨e write￨6￨e (￨6￨e (￨6￨e (￨6￨e char￨6￨e )￨6￨e (￨6￨e (￨6￨e u￨6￨e <<￨6￨e 4￨6￨e )￨6￨e +￨6￨e l￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f ArrayIndexOutOfBoundsException￨6￨p e￨6￨p )￨5￨f {￨5￨f <START_BUG>￨6￨b throw￨6￨b new￨6￨b DecoderException￨6￨b (￨6￨b "Invalid<seq2seq4repair_space>URL<seq2seq4repair_space>encoding:<seq2seq4repair_space>"￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f }￨4￨j else￨4￨j {￨4￨j buffer￨5￨e .￨5￨e write￨5￨e (￨5￨e b￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e buffer￨3￨e .￨3￨e toByteArray￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f int￨2￨f toCharacterDigit￨2￨f (￨2￨f byte￨2￨f b￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f encode￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f decode￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f bytes￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f encode￨2￨f (￨2￨f String￨2￨f pString￨2￨f ,￨2￨f String￨2￨f charset￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f encode￨2￨f (￨2￨f String￨2￨f pString￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f decode￨2￨f (￨2￨f String￨2￨f pString￨2￨f ,￨2￨f String￨2￨f charset￨2￨f )￨2￨f throws￨2￨f UnsupportedEncodingException￨2￨f ,￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f decode￨2￨f (￨2￨f String￨2￨f pString￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f encode￨2￨f (￨2￨f Object￨2￨f pObject￨2￨f )￨2￨f throws￨2￨f EncoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f decode￨2￨f (￨2￨f Object￨2￨f pObject￨2￨f )￨2￨f throws￨2￨f DecoderException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getEncoding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDefaultCharset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d SingleSignOnAdd￨1￨d extends￨1￨d AbstractAddStepHandler￨1￨d {￨1￨d @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e PathAddress￨3￨e address￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e PathAddress￨3￨e hostAddress￨3￨e =￨3￨e address￨3￨e .￨3￨e subAddress￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e (￨3￨e address￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e PathAddress￨3￨e serverAddress￨3￨e =￨3￨e hostAddress￨3￨e .￨3￨e subAddress￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e (￨3￨e hostAddress￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e domainModelNode￨3￨e =￨3￨e DOMAIN￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e pathNode￨3￨e =￨3￨e PATH￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e domain￨3￨e =￨3￨e (￨3￨e domainModelNode￨3￨e .￨3￨e isDefined￨3￨e (￨3￨e )￨3￨e )￨3￨e ?￨3￨e domainModelNode￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e :￨3￨e null￨3￨e ;￨3￨e final￨3￨e String￨3￨e path￨3￨e =￨3￨e (￨3￨e pathNode￨3￨e .￨3￨e isDefined￨3￨e (￨3￨e )￨3￨e )￨3￨e ?￨3￨e pathNode￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e :￨3￨e null￨3￨e ;￨3￨e final￨3￨e boolean￨3￨e secure￨3￨e =￨3￨e SECURE￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e .￨3￨e asBoolean￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e boolean￨3￨e httpOnly￨3￨e =￨3￨e HTTP_ONLY￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e .￨3￨e asBoolean￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e cookieName￨3￨e =￨3￨e COOKIE_NAME￨3￨e .￨3￨e resolveModelAttribute￨3￨e (￨3￨e context￨3￨e ,￨3￨e model￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e serverName￨3￨e =￨3￨e serverAddress￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e hostName￨3￨e =￨3￨e hostAddress￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e serviceName￨3￨e =￨3￨e UndertowService￨3￨e .￨3￨e ssoServiceName￨3￨e (￨3￨e serverName￨3￨e ,￨3￨e hostName￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e virtualHostServiceName￨3￨e =￨3￨e UndertowService￨3￨e .￨3￨e virtualHostName￨3￨e (￨3￨e serverName￨3￨e ,￨3￨e hostName￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceTarget￨3￨e target￨3￨e =￨3￨e context￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e ServiceName￨3￨e managerServiceName￨3￨e =￨3￨e serviceName￨3￨e .￨3￨e append￨3￨e (￨3￨e "manager"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b SingleSignOnManagerService￨3￨b .￨3￨b build￨3￨b (￨3￨b target￨3￨b ,￨3￨b managerServiceName￨3￨b ,￨3￨b virtualHostServiceName￨3￨b )￨3￨b .￨3￨b setInitialMode￨3￨b (￨3￨b ON_DEMAND￨3￨b )￨3￨b .￨3￨b install￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e SingleSignOnService￨3￨e service￨3￨e =￨3￨e new￨3￨e SingleSignOnService￨3￨e (￨3￨e domain￨3￨e ,￨3￨e path￨3￨e ,￨3￨e httpOnly￨3￨e ,￨3￨e secure￨3￨e ,￨3￨e cookieName￨3￨e )￨3￨e ;￨3￨e target￨3￨e .￨3￨e addService￨3￨e (￨3￨e serviceName￨3￨e ,￨3￨e service￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e virtualHostServiceName￨3￨e ,￨3￨e Host￨3￨e .￨3￨e class￨3￨e ,￨3￨e service￨3￨e .￨3￨e getHost￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e managerServiceName￨3￨e ,￨3￨e SingleSignOnManager￨3￨e .￨3￨e class￨3￨e ,￨3￨e service￨3￨e .￨3￨e getSingleSignOnSessionManager￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e setInitialMode￨3￨e (￨3￨e ACTIVE￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d FeedbackPanel￨1￨d extends￨1￨d Panel￨1￨d implements￨1￨d IValidationFeedback￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e -￨2￨e 3385823935971399988L￨2￨e ;￨2￨e private￨2￨e final￨2￨e FeedbackPanel￨2￨e .￨2￨e MessageListView￨2￨e messageListView￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d class￨2￨d MessageListView￨2￨d extends￨2￨d ListView￨2￨d {￨2￨d public￨3￨f MessageListView￨3￨f (￨3￨f final￨4￨p String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f populateItem￨3￨f (￨3￨f final￨4￨p ListItem￨4￨p listItem￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f FeedbackPanel￨2￨f (￨2￨f final￨3￨p String￨3￨p componentName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaxMessages￨2￨f (￨2￨f int￨3￨p maxMessages￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateValidationFeedback￨2￨f (￨2￨f final￨3￨p Form￨3￨p form￨3￨p )￨2￨f {￨2￨f messageListView￨3￨e .￨3￨e setModel￨3￨e (￨3￨e getPage￨3￨e (￨3￨e )￨3￨e .￨3￨e getFeedbackMessages￨3￨e (￨3￨e )￨3￨e .￨3￨e model￨3￨e (￨3￨e form￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b messageListView￨3￨b .￨3￨b invalidateModel￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DynamicFilterTest￨1￨d extends￨1￨d BuildFileTest￨1￨d {￨1￨d public￨2￨f DynamicFilterTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCustomFilter￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertStringContains￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p String￨3￨p contains￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertStringNotContains￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p String￨3￨p contains￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getFileString￨2￨f (￨2￨f String￨2￨f filename￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f Reader￨3￨e r￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f r￨4￨e =￨4￨e new￨4￨e FileReader￨4￨e (￨4￨e getProject￨4￨e (￨4￨e )￨4￨e .￨4￨e resolveFile￨4￨e (￨4￨e filename￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b return￨4￨b FileUtils￨4￨b .￨4￨b newFileUtils￨4￨b (￨4￨b )￨4￨b .￨4￨b readFully￨4￨b (￨4￨b r￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f try￨4￨f (￨4￨f )￨4￨f {￨4￨f r￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Throwable￨5￨p ignore￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨f }￨2￨f private￨2￨f String￨2￨f getFileString￨2￨f (￨2￨f String￨2￨f target￨2￨f ,￨2￨f String￨2￨f filename￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f expectFileContains￨2￨f (￨2￨f String￨2￨f name￨2￨f ,￨2￨f String￨2￨f contains￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f expectFileContains￨2￨f (￨2￨f String￨2￨f target￨2￨f ,￨2￨f String￨2￨f name￨2￨f ,￨2￨f String￨2￨f contains￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d CustomFilter￨2￨d implements￨2￨d ChainableReader￨2￨d {￨2￨d char￨3￨e replace￨3￨e =￨3￨e 'x'￨3￨e ;￨3￨e char￨3￨e with￨3￨e =￨3￨e 'y'￨3￨e ;￨3￨e public￨3￨f void￨3￨f setReplace￨3￨f (￨3￨f char￨4￨p replace￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setWith￨3￨f (￨3￨f char￨4￨p with￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f Reader￨3￨f chain￨3￨f (￨3￨f final￨4￨p Reader￨4￨p rdr￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d SecurityDependencyProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e ModuleIdentifier￨2￨e PICKETBOX_ID￨2￨e =￨2￨e ModuleIdentifier￨2￨e .￨2￨e create￨2￨e (￨2￨e PICKETBOX￨2￨e .￨2￨e getName￨2￨e (￨2￨e )￨2￨e ,￨2￨e PICKETBOX￨2￨e .￨2￨e getSlot￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModuleLoader￨3￨e moduleLoader￨3￨e =￨3￨e Module￨3￨e .￨3￨e getBootModuleLoader￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModuleSpecification￨3￨e moduleSpecification￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MODULE_SPECIFICATION￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b moduleSpecification￨3￨b .￨3￨b addDependency￨3￨b (￨3￨b new￨3￨b org￨3￨b .￨3￨b jboss￨3￨b .￨3￨b as￨3￨b .￨3￨b server￨3￨b .￨3￨b deployment￨3￨b .￨3￨b module￨3￨b .￨3￨b ModuleDependency￨3￨b (￨3￨b moduleLoader￨3￨b ,￨3￨b SecurityDependencyProcessor￨3￨b .￨3￨b PICKETBOX_ID￨3￨b ,￨3￨b false￨3￨b ,￨3￨b true￨3￨b ,￨3￨b false￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BoundedQueueThreadPoolService￨1￨d implements￨1￨d Service￨1￨d <￨1￨d ManagedQueueExecutorService￨1￨d >￨1￨d {￨1￨d private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e ThreadFactory￨2￨e >￨2￨e threadFactoryValue￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e ThreadFactory￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e Executor￨2￨e >￨2￨e handoffExecutorValue￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e Executor￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e ManagedQueueExecutorService￨2￨e executor￨2￨e ;￨2￨e private￨2￨e int￨2￨e coreThreads￨2￨e ;￨2￨e private￨2￨e int￨2￨e maxThreads￨2￨e ;￨2￨e private￨2￨e int￨2￨e queueLength￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e blocking￨2￨e ;￨2￨e private￨2￨e TimeSpec￨2￨e keepAlive￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e allowCoreTimeout￨2￨e ;￨2￨e public￨2￨f BoundedQueueThreadPoolService￨2￨f (￨2￨f int￨3￨p coreThreads￨3￨p ,￨3￨p int￨3￨p maxThreads￨3￨p ,￨3￨p int￨3￨p queueLength￨3￨p ,￨3￨p boolean￨3￨p blocking￨3￨p ,￨3￨p TimeSpec￨3￨p keepAlive￨3￨p ,￨3￨p boolean￨3￨p allowCoreTimeout￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨2￨f StartContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f StartException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f stop￨2￨f (￨2￨f final￨3￨p StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f ManagedQueueExecutorService￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ManagedQueueExecutorService￨3￨e value￨3￨e =￨3￨e this￨3￨e .￨3￨e executor￨3￨e ;￨3￨e if￨3￨j (￨3￨j value￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b ROOT_LOGGER￨4￨b .￨4￨b boundedQueueThreadPoolExecutorUninitialized￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j return￨3￨e value￨3￨e ;￨3￨e }￨2￨f public￨2￨f Injector￨2￨f <￨2￨f ThreadFactory￨2￨f >￨2￨f getThreadFactoryInjector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Injector￨2￨f <￨2￨f Executor￨2￨f >￨2￨f getHandoffExecutorInjector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setCoreThreads￨2￨f (￨2￨f int￨3￨p coreThreads￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setMaxThreads￨2￨f (￨2￨f int￨3￨p maxThreads￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setKeepAlive￨2￨f (￨2￨f TimeSpec￨3￨p keepAlive￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f setAllowCoreTimeout￨2￨f (￨2￨f boolean￨3￨p allowCoreTimeout￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getCurrentThreadCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getLargestThreadCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f TimeUnit￨2￨f getKeepAliveUnit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getRejectedCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getQueueSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d public￨2￨f void￨2￨f addSysproperty￨2￨f (￨2￨f Environment￨3￨p .￨3￨p Variable￨3￨p sysp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addConfiguredSysproperty￨2￨f (￨2￨f Environment￨3￨p .￨3￨p Variable￨3￨p sysp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSyspropertyset￨2￨f (￨2￨f PropertySet￨3￨p sysp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createClasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createBootclasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addEnv￨2￨f (￨2￨f Environment￨3￨p .￨3￨p Variable￨3￨p var￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setNewenvironment￨2￨f (￨2￨f boolean￨3￨p newenv￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f preConfigure￨2￨f (￨2￨f BaseTest￨3￨p test￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTest￨2￨f (￨2￨f JUnitTest￨3￨p test￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BatchTest￨2￨f createBatchTest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addFormatter￨2￨f (￨2￨f FormatterElement￨3￨p fe￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludeantruntime￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setShowOutput￨2￨f (￨2￨f boolean￨3￨p showOutput￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setOutputToFormatters￨2￨f (￨2￨f boolean￨3￨p outputToFormatters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLogFailedTests￨2￨f (￨2￨f boolean￨3￨p logFailedTests￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addAssertions￨2￨f (￨2￨f Assertions￨3￨p asserts￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Permissions￨2￨f createPermissions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCloneVm￨2￨f (￨2￨f boolean￨3￨p cloneVm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JUnitTask￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTempdir￨2￨f (￨2￨f File￨3￨p tmpDir￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnableTestListenerEvents￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getEnableTestListenerEvents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f JUnitTaskMirror￨2￨f createMirror￨2￨f (￨2￨f JUnitTask￨3￨p task￨3￨p ,￨3￨p ClassLoader￨3￨p loader￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setupJUnitDelegate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f execute￨2￨f (￨2￨f JUnitTest￨2￨f arg￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validateTestName￨2￨f (￨2￨f String￨2￨f testName￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f execute￨2￨f (￨2￨f List￨2￨f testList￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JUnitTask￨2￨f .￨2￨f TestResultHolder￨2￨f executeAsForked￨2￨f (￨2￨f JUnitTest￨2￨f test￨2￨f ,￨2￨f ExecuteWatchdog￨2￨f watchdog￨2￨f ,￨2￨f File￨2￨f casesFile￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkIncludeAntRuntime￨2￨f (￨2￨f CommandlineJava￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f equalsWithOutAndErr￨2￨f (￨2￨f String￨3￨p summaryOption￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkIncludeSummary￨2￨f (￨2￨f CommandlineJava￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkForkedPath￨2￨f (￨2￨f CommandlineJava￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f urlEquals￨2￨f (￨2￨f URL￨3￨p u1￨3￨p ,￨3￨p URL￨3￨p u2￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f maybeStripJarAndClass￨2￨f (￨2￨f URL￨3￨p u￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f createTempPropertiesFile￨2￨f (￨2￨f String￨3￨p prefix￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleOutput￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f handleInput￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buffer￨2￨f ,￨2￨f int￨2￨f offset￨2￨f ,￨2￨f int￨2￨f length￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleFlush￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f handleErrorOutput￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f handleErrorFlush￨2￨f (￨2￨f String￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f JUnitTask￨2￨f .￨2￨f TestResultHolder￨2￨f executeInVM￨2￨f (￨2￨f JUnitTest￨2￨f arg￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ExecuteWatchdog￨2￨f createWatchdog￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f OutputStream￨2￨f getDefaultOutput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Enumeration￨2￨f getIndividualTests￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkMethodLists￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Enumeration￨2￨f allTests￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f FormatterElement￨2￨f [￨2￨f ]￨2￨f mergeFormatters￨2￨f (￨2￨f JUnitTest￨3￨p test￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f File￨2￨f getOutput￨2￨f (￨2￨f FormatterElement￨3￨p fe￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addClasspathEntry￨2￨f (￨2￨f String￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f addClasspathResource￨2￨f (￨2￨f String￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨e final￨2￨e String￨2￨e TIMEOUT_MESSAGE￨2￨e =￨2￨e "Timeout<seq2seq4repair_space>occurred.<seq2seq4repair_space>Please<seq2seq4repair_space>note<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>report<seq2seq4repair_space>does"￨2￨e +￨2￨e "<seq2seq4repair_space>not<seq2seq4repair_space>reflect<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>until<seq2seq4repair_space>the<seq2seq4repair_space>timeout."￨2￨e ;￨2￨e private￨2￨f void￨2￨f logTimeout￨2￨f (￨2￨f FormatterElement￨3￨p [￨3￨p ]￨3￨p feArray￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p ,￨3￨p String￨3￨p testCase￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f logVmCrash￨2￨f (￨2￨f FormatterElement￨3￨p [￨3￨p ]￨3￨p feArray￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p ,￨3￨p String￨3￨p testCase￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f logVmExit￨2￨f (￨2￨f FormatterElement￨3￨p [￨3￨p ]￨3￨p feArray￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p ,￨3￨p String￨3￨p message￨3￨p ,￨3￨p String￨3￨p testCase￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createClassLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f cleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f deleteClassLoader￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f CommandlineJava￨2￨f getCommandline￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d final￨2￨d class￨2￨d ForkedTestConfiguration￨2￨d {￨2￨d private￨3￨e boolean￨3￨e filterTrace￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e haltOnError￨3￨e ;￨3￨e private￨3￨e boolean￨3￨e haltOnFailure￨3￨e ;￨3￨e private￨3￨e String￨3￨e errorProperty￨3￨e ;￨3￨e private￨3￨e String￨3￨e failureProperty￨3￨e ;￨3￨e ForkedTestConfiguration￨3￨f (￨3￨f boolean￨4￨p filterTrace￨4￨p ,￨4￨p boolean￨4￨p haltOnError￨4￨p ,￨4￨p boolean￨4￨p haltOnFailure￨4￨p ,￨4￨p String￨4￨p errorProperty￨4￨p ,￨4￨p String￨4￨p failureProperty￨4￨p )￨3￨f {￨3￨f }￨3￨f ForkedTestConfiguration￨3￨f (￨3￨f JUnitTest￨4￨p test￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f equals￨3￨f (￨3￨f Object￨4￨p other￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hashCode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d final￨2￨d class￨2￨d ForkMode￨2￨d extends￨2￨d EnumeratedAttribute￨2￨d {￨2￨d public￨3￨e static￨3￨e final￨3￨e String￨3￨e ONCE￨3￨e =￨3￨e "once"￨3￨e ;￨3￨e public￨3￨e static￨3￨e final￨3￨e String￨3￨e PER_TEST￨3￨e =￨3￨e "perTest"￨3￨e ;￨3￨e public￨3￨e static￨3￨e final￨3￨e String￨3￨e PER_BATCH￨3￨e =￨3￨e "perBatch"￨3￨e ;￨3￨e public￨3￨f ForkMode￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f ForkMode￨3￨f (￨3￨f String￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getValues￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d protected￨2￨f Collection￨2￨f executeOrQueue￨2￨f (￨2￨f Enumeration￨3￨p testList￨3￨p ,￨3￨p boolean￨3￨p runIndividual￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f actOnTestResult￨2￨f (￨2￨f int￨3￨p exitValue￨3￨p ,￨3￨p boolean￨3￨p wasKilled￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f actOnTestResult￨2￨f (￨2￨f JUnitTask￨3￨p .￨3￨p TestResultHolder￨3￨p result￨3￨p ,￨3￨p JUnitTest￨3￨p test￨3￨p ,￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨d static￨2￨d class￨2￨d TestResultHolder￨2￨d {￨2￨d public￨3￨e int￨3￨e exitCode￨3￨e =￨3￨e JUnitTestRunnerMirror￨3￨e .￨3￨e ERRORS￨3￨e ;￨3￨e public￨3￨e boolean￨3￨e timedOut￨3￨e =￨3￨e false￨3￨e ;￨3￨e public￨3￨e boolean￨3￨e crashed￨3￨e =￨3￨e false￨3￨e ;￨3￨e }￨2￨d protected￨2￨d static￨2￨d class￨2￨d JUnitLogOutputStream￨2￨d extends￨2￨d LogOutputStream￨2￨d {￨2￨d private￨3￨e Task￨3￨e task￨3￨e ;￨3￨e public￨3￨f JUnitLogOutputStream￨3￨f (￨3￨f Task￨4￨p task￨4￨p ,￨4￨p int￨4￨p level￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f void￨3￨f processLine￨3￨f (￨3￨f String￨4￨p line￨4￨p ,￨4￨p int￨4￨p level￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d protected￨2￨d static￨2￨d class￨2￨d JUnitLogStreamHandler￨2￨d extends￨2￨d PumpStreamHandler￨2￨d {￨2￨d public￨3￨f JUnitLogStreamHandler￨3￨f (￨3￨f Task￨4￨p task￨4￨p ,￨4￨p int￨4￨p outlevel￨4￨p ,￨4￨p int￨4￨p errlevel￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨e final￨2￨e String￨2￨e NAME_OF_DUMMY_TEST￨2￨e =￨2￨e "Batch-With-Multiple-Tests"￨2￨e ;￨2￨e private￨2￨f static￨2￨f JUnitTest￨2￨f createDummyTestForBatchTest￨2￨f (￨2￨f JUnitTest￨3￨p test￨3￨p )￨2￨f {￨2￨f JUnitTest￨3￨e t￨3￨e =￨3￨e (￨3￨e (￨3￨e JUnitTest￨3￨e )￨3￨e (￨3￨e test￨3￨e .￨3￨e clone￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b int￨3￨b index￨3￨b =￨3￨b test￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b .￨3￨b indexOf￨3￨b (￨3￨b '.'￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b String￨3￨e pack￨3￨e =￨3￨e (￨3￨e index￨3￨e >￨3￨e 0￨3￨e )￨3￨e ?￨3￨e test￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e .￨3￨e substring￨3￨e (￨3￨e 0￨3￨e ,￨3￨e (￨3￨e index￨3￨e +￨3￨e 1￨3￨e )￨3￨e )￨3￨e :￨3￨e ""￨3￨e ;￨3￨e t￨3￨e .￨3￨e setName￨3￨e (￨3￨e (￨3￨e pack￨3￨e +￨3￨e (￨3￨e JUnitTask￨3￨e .￨3￨e NAME_OF_DUMMY_TEST￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e t￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f void￨2￨f printDual￨2￨f (￨2￨f BufferedWriter￨2￨f w￨2￨f ,￨2￨f PrintStream￨2￨f s￨2￨f ,￨2￨f String￨2￨f text￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f printlnDual￨2￨f (￨2￨f BufferedWriter￨2￨f w￨2￨f ,￨2￨f PrintStream￨2￨f s￨2￨f ,￨2￨f String￨2￨f text￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d rtx￨8￨e =￨8￨e tx￨8￨e .￨8￨e resolve￨8￨e (￨8￨e (￨8￨e (￨8￨e AjLookupEnvironment￨8￨e )￨8￨e (￨8￨e declare￨8￨e .￨8￨e scope￨8￨e .￨8￨e environment￨8￨e (￨8￨e )￨8￨e )￨8￨e )￨8￨e .￨8￨e factory￨8￨e .￨8￨e getWorld￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j !￨9￨c (￨9￨c rtx￨9￨c .￨9￨c isInterface￨9￨c (￨9￨c )￨9￨c )￨9￨c )￨8￨j {￨8￨j kindOfDP￨9￨e =￨9￨e "extends<seq2seq4repair_space>"￨9￨e ;￨9￨e }￨8￨j }￨7￨f catch￨7￨f (￨7￨f Throwable￨8￨p t￨8￨p )￨7￨f {￨7￨f }￨7￨f }￨6￨j String￨6￨e typename￨6￨e =￨6￨e tp￨6￨e .￨6￨e toString￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c typename￨7￨c .￨7￨c lastIndexOf￨7￨c (￨7￨c "."￨7￨c )￨7￨c )￨7￨c !=￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨6￨j {￨6￨j typename￨7￨e =￨7￨e typename￨7￨e .￨7￨e substring￨7￨e (￨7￨e (￨7￨e (￨7￨e typename￨7￨e .￨7￨e lastIndexOf￨7￨e (￨7￨e "."￨7￨e )￨7￨e )￨7￨e +￨7￨e 1￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j details￨6￨e .￨6￨e append￨6￨e (￨6￨e typename￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c i￨7￨c +￨7￨c 1￨7￨c )￨7￨c <￨7￨c (￨7￨c newParents￨7￨c .￨7￨c length￨7￨c )￨7￨c )￨6￨j {￨6￨j details￨7￨e .￨7￨e append￨7￨e (￨7￨e ","￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l node￨5￨e .￨5￨e setDetails￨5￨e (￨5￨e (￨5￨e kindOfDP￨5￨e +￨5￨e (￨5￨e details￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c declare￨5￨c .￨5￨c declareDecl￨5￨c )￨5￨c instanceof￨5￨c DeclareSoft￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e IProgramElement￨5￨e .￨5￨e Kind￨5￨e .￨5￨e DECLARE_SOFT￨5￨e )￨5￨e ;￨5￨e DeclareSoft￨5￨e ds￨5￨e =￨5￨e (￨5￨e (￨5￨e DeclareSoft￨5￨e )￨5￨e (￨5￨e declare￨5￨e .￨5￨e declareDecl￨5￨e )￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e (￨5￨e name￨5￨e +￨5￨e (￨5￨e AsmElementFormatter￨5￨e .￨5￨e DECLARE_SOFT￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setDetails￨5￨e (￨5￨e genTypePatternLabel￨5￨e (￨5￨e ds￨5￨e .￨5￨e getException￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c declare￨5￨c .￨5￨c declareDecl￨5￨c )￨5￨c instanceof￨5￨c DeclarePrecedence￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e IProgramElement￨5￨e .￨5￨e Kind￨5￨e .￨5￨e DECLARE_PRECEDENCE￨5￨e )￨5￨e ;￨5￨e DeclarePrecedence￨5￨e ds￨5￨e =￨5￨e (￨5￨e (￨5￨e DeclarePrecedence￨5￨e )￨5￨e (￨5￨e declare￨5￨e .￨5￨e declareDecl￨5￨e )￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e (￨5￨e name￨5￨e +￨5￨e (￨5￨e AsmElementFormatter￨5￨e .￨5￨e DECLARE_PRECEDENCE￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setDetails￨5￨e (￨5￨e genPrecedenceListLabel￨5￨e (￨5￨e ds￨5￨e .￨5￨e getPatterns￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j (￨5￨c declare￨5￨c .￨5￨c declareDecl￨5￨c )￨5￨c instanceof￨5￨c DeclareAnnotation￨5￨c )￨4￨j {￨4￨j DeclareAnnotation￨5￨e deca￨5￨e =￨5￨e (￨5￨e (￨5￨e DeclareAnnotation￨5￨e )￨5￨e (￨5￨e declare￨5￨e .￨5￨e declareDecl￨5￨e )￨5￨e )￨5￨e ;￨5￨e String￨5￨e thekind￨5￨e =￨5￨e deca￨5￨e .￨5￨e getKind￨5￨e (￨5￨e )￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e (￨5￨e (￨5￨e name￨5￨e +￨5￨e "@"￨5￨e )￨5￨e +￨5￨e (￨5￨e thekind￨5￨e .￨5￨e substring￨5￨e (￨5￨e 3￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c deca￨6￨c .￨6￨c getKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c DeclareAnnotation￨6￨c .￨6￨c AT_CONSTRUCTOR￨6￨c )￨6￨c )￨5￨j {￨5￨j node￨6￨e .￨6￨e setKind￨6￨e (￨6￨e DECLARE_ANNOTATION_AT_CONSTRUCTOR￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c deca￨6￨c .￨6￨c getKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c DeclareAnnotation￨6￨c .￨6￨c AT_FIELD￨6￨c )￨6￨c )￨5￨j {￨5￨j node￨6￨e .￨6￨e setKind￨6￨e (￨6￨e DECLARE_ANNOTATION_AT_FIELD￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c deca￨6￨c .￨6￨c getKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c DeclareAnnotation￨6￨c .￨6￨c AT_METHOD￨6￨c )￨6￨c )￨5￨j {￨5￨j node￨6￨e .￨6￨e setKind￨6￨e (￨6￨e DECLARE_ANNOTATION_AT_METHOD￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j (￨6￨c deca￨6￨c .￨6￨c getKind￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c DeclareAnnotation￨6￨c .￨6￨c AT_TYPE￨6￨c )￨6￨c )￨5￨j {￨5￨j node￨6￨e .￨6￨e setKind￨6￨e (￨6￨e DECLARE_ANNOTATION_AT_TYPE￨6￨e )￨6￨e ;￨6￨e }￨5￨j node￨5￨e .￨5￨e setDetails￨5￨e (￨5￨e genDecaLabel￨5￨e (￨5￨e deca￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e ERROR￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e AsmElementFormatter￨5￨e .￨5￨e DECLARE_UNKNONWN￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j if￨3￨j (￨3￨j methodDeclaration￨4￨c instanceof￨4￨c InterTypeDeclaration￨4￨c )￨3￨j {￨3￨j InterTypeDeclaration￨4￨e itd￨4￨e =￨4￨e (￨4￨e (￨4￨e InterTypeDeclaration￨4￨e )￨4￨e (￨4￨e methodDeclaration￨4￨e )￨4￨e )￨4￨e ;￨4￨e String￨4￨e name￨4￨e =￨4￨e (￨4￨e (￨4￨e itd￨4￨e .￨4￨e getOnType￨4￨e (￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e +￨4￨e "."￨4￨e )￨4￨e +￨4￨e (￨4￨e new￨4￨e String￨4￨e (￨4￨e itd￨4￨e .￨4￨e getDeclaredSelector￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j methodDeclaration￨5￨c instanceof￨5￨c InterTypeFieldDeclaration￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e INTER_TYPE_FIELD￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e name￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodDeclaration￨5￨c instanceof￨5￨c InterTypeMethodDeclaration￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e INTER_TYPE_METHOD￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e name￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j methodDeclaration￨5￨c instanceof￨5￨c InterTypeConstructorDeclaration￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e INTER_TYPE_CONSTRUCTOR￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e (￨5￨e (￨5￨e (￨5￨e itd￨5￨e .￨5￨e getOnType￨5￨e (￨5￨e )￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e +￨5￨e "."￨5￨e )￨5￨e +￨5￨e (￨5￨e itd￨5￨e .￨5￨e getOnType￨5￨e (￨5￨e )￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e ERROR￨5￨e )￨5￨e ;￨5￨e node￨5￨e .￨5￨e setName￨5￨e (￨5￨e name￨5￨e )￨5￨e ;￨5￨e }￨4￨j node￨4￨e .￨4￨e setCorrespondingType￨4￨e (￨4￨e itd￨4￨e .￨4￨e returnType￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c node￨5￨c .￨5￨c getKind￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c Kind￨5￨c .￨5￨c INTER_TYPE_FIELD￨5￨c )￨5￨c )￨4￨j {￨4￨j setParameters￨5￨e (￨5￨e methodDeclaration￨5￨e ,￨5￨e node￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j if￨4￨j (￨4￨j methodDeclaration￨5￨c .￨5￨c isConstructor￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e CONSTRUCTOR￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j node￨5￨e .￨5￨e setKind￨5￨e (￨5￨e METHOD￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b if￨5￨b (￨5￨b (￨5￨b true￨5￨b &&￨5￨b (￨5￨b methodDeclaration￨5￨b !=￨5￨b null￨5￨b )￨5￨b )￨5￨b &&￨5￨b (￨5￨b (￨5￨b methodDeclaration￨5￨b .￨5￨b annotations￨5￨b )￨5￨b !=￨5￨b null￨5￨b )￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c methodDeclaration￨6￨c .￨6￨c annotations￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l Annotation￨6￨e annotation￨6￨e =￨6￨e methodDeclaration￨6￨e .￨6￨e annotations￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e String￨6￨e annotationSig￨6￨e =￨6￨e new￨6￨e String￨6￨e (￨6￨e annotation￨6￨e .￨6￨e type￨6￨e .￨6￨e getTypeBindingPublic￨6￨e (￨6￨e methodDeclaration￨6￨e .￨6￨e scope￨6￨e )￨6￨e .￨6￨e signature￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c annotationSig￨7￨c !=￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c annotationSig￨7￨c .￨7￨c charAt￨7￨c (￨7￨c 1￨7￨c )￨7￨c )￨7￨c ==￨7￨c 'o'￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j "Lorg/aspectj/lang/annotation/Pointcut;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨7￨j {￨7￨j node￨8￨e .￨8￨e setKind￨8￨e (￨8￨e POINTCUT￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e }￨7￨j else￨7￨j if￨7￨j (￨7￨j (￨8￨c (￨8￨c (￨8￨c (￨8￨c "Lorg/aspectj/lang/annotation/Before;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨8￨c ||￨8￨c (￨8￨c "Lorg/aspectj/lang/annotation/After;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨8￨c )￨8￨c ||￨8￨c (￨8￨c "Lorg/aspectj/lang/annotation/AfterReturning;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨8￨c )￨8￨c ||￨8￨c (￨8￨c "Lorg/aspectj/lang/annotation/AfterThrowing;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨8￨c )￨8￨c ||￨8￨c (￨8￨c "Lorg/aspectj/lang/annotation/Around;"￨8￨c .￨8￨c equals￨8￨c (￨8￨c annotationSig￨8￨c )￨8￨c )￨8￨c )￨7￨j {￨7￨j node￨8￨e .￨8￨e setKind￨8￨e (￨8￨e ADVICE￨8￨e )￨8￨e ;￨8￨e node￨8￨e .￨8￨e setDetails￨8￨e (￨8￨e AsmElementFormatter￨8￨e .￨8￨e POINTCUT_ANONYMOUS￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e }￨7￨j }￨6￨j }￨5￨l }￨4￨j node￨4￨e .￨4￨e setName￨4￨e (￨4￨e new￨4￨e String￨4￨e (￨4￨e methodDeclaration￨4￨e .￨4￨e selector￨4￨e )￨4￨e )￨4￨e ;￨4￨e setParameters￨4￨e (￨4￨e methodDeclaration￨4￨e ,￨4￨e node￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f String￨2￨f genDecaLabel￨2￨f (￨2￨f DeclareAnnotation￨3￨p deca￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f genPrecedenceListLabel￨2￨f (￨2￨f TypePatternList￨3￨p list￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setParameters￨2￨f (￨2￨f MethodDeclaration￨3￨p md￨3￨p ,￨3￨p IProgramElement￨3￨p pe￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f acceptArgument￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p String￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f genTypePatternLabel￨2￨f (￨2￨f TypePattern￨3￨p tp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f genDeclareMessage￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f translatePointcutName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d WebApplication￨1￨d extends￨1￨d Application￨1￨d {￨1￨d private￨2￨e final￨2￨e Map￨2￨e bufferedResponses￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e IRequestCycleProcessor￨2￨e requestCycleProcessor￨2￨e ;￨2￨e private￨2￨e String￨2￨e sessionAttributePrefix￨2￨e ;￨2￨e private￨2￨f ISessionFactory￨2￨f sessionFactory￨2￨f =￨2￨f new￨2￨f ISessionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f Session￨3￨f newSession￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e WicketServlet￨2￨e wicketServlet￨2￨e ;￨2￨e public￨2￨f WebApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getSessionAttributePrefix￨2￨f (￨2￨f final￨3￨p WebRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f WicketServlet￨2￨f getWicketServlet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mount￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p IRequestTargetUrlCodingStrategy￨3￨p encoder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mount￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Package￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mount￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p PackageName￨3￨p packageName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mountBookmarkablePage￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Class￨3￨p bookmarkablePageClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f mountBookmarkablePage￨2￨f (￨2￨f String￨3￨p path￨3￨p ,￨3￨p Class￨3￨p bookmarkablePageClass￨3￨p ,￨3￨p String￨3￨p pageMapName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setSessionFactory￨2￨f (￨2￨f final￨3￨p ISessionFactory￨3￨p sessionFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setWicketServlet￨2￨f (￨2￨f final￨3￨p WicketServlet￨3￨p wicketServlet￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f unmount￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleFactory￨2￨f getDefaultRequestCycleFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IRequestCycleProcessor￨2￨f getDefaultRequestCycleProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISessionFactory￨2￨f getSessionFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalDestroy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f internalInit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WebRequest￨2￨f newWebRequest￨2￨f (￨2￨f final￨3￨p HttpServletRequest￨3￨p servletRequest￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WebResponse￨2￨f newWebResponse￨2￨f (￨2￨f final￨3￨p HttpServletResponse￨3￨p servletResponse￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f addBufferedResponse￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p ,￨3￨p String￨3￨p bufferId￨3￨p ,￨3￨p BufferedHttpServletResponse￨3￨p renderedResponse￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f clearBufferedResponses￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f WebSession￨2￨f getSession￨2￨f (￨2￨f final￨3￨p WebRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f final￨3￨e HttpSession￨3￨e httpSession￨3￨e =￨3￨e request￨3￨e .￨3￨e getHttpServletRequest￨3￨e (￨3￨e )￨3￨e .￨3￨e getSession￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e sessionAttribute￨3￨e =￨3￨e (￨3￨e getSessionAttributePrefix￨3￨e (￨3￨e request￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e Session￨3￨e .￨3￨e SESSION_ATTRIBUTE_NAME￨3￨e )￨3￨e ;￨3￨e WebSession￨3￨e webSession￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j httpSession￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j webSession￨4￨e =￨4￨e (￨4￨e (￨4￨e WebSession￨4￨e )￨4￨e (￨4￨e httpSession￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e sessionAttribute￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j webSession￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j final￨4￨e Session￨4￨e session￨4￨e =￨4￨e getSessionFactory￨4￨e (￨4￨e )￨4￨e .￨4￨e newSession￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j session￨5￨c instanceof￨5￨c WebSession￨5￨c )￨4￨j {￨4￨j webSession￨5￨e =￨5￨e (￨5￨e (￨5￨e WebSession￨5￨e )￨5￨e (￨5￨e session￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e WicketRuntimeException￨5￨e (￨5￨e "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>WebApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>WebSession"￨5￨e )￨5￨e ;￨5￨e }￨4￨j webSession￨4￨e .￨4￨e setLocale￨4￨e (￨4￨e request￨4￨e .￨4￨e getLocale￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j httpSession￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j httpSession￨5￨e .￨5￨e setAttribute￨5￨e (￨5￨e sessionAttribute￨5￨e ,￨5￨e webSession￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j webSession￨3￨e .￨3￨e setApplication￨3￨e (￨3￨e this￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b webSession￨3￨b .￨3￨b init￨3￨b (￨3￨b getSessionAttributePrefix￨3￨b (￨3￨b request￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e webSession￨3￨e ;￨3￨e }￨2￨f final￨2￨f BufferedHttpServletResponse￨2￨f popBufferedResponse￨2￨f (￨2￨f String￨3￨p sessionId￨3￨p ,￨3￨p String￨3￨p bufferId￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkMountPath￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d OrderedIntDoubleMapping￨1￨d implements￨1￨d Serializable￨1￨d ,￨1￨d Cloneable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e double￨2￨e DEFAULT_VALUE￨2￨e =￨2￨e 0.0￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e indices￨2￨e ;￨2￨e private￨2￨e double￨2￨e [￨2￨e ]￨2￨e values￨2￨e ;￨2￨e private￨2￨e int￨2￨e numMappings￨2￨e ;￨2￨e OrderedIntDoubleMapping￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f OrderedIntDoubleMapping￨2￨f (￨2￨f int￨3￨p capacity￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f OrderedIntDoubleMapping￨2￨f (￨2￨f int￨3￨p [￨3￨p ]￨3￨p indices￨3￨p ,￨3￨p double￨3￨p [￨3￨p ]￨3￨p values￨3￨p ,￨3￨p int￨3￨p numMappings￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f [￨2￨f ]￨2￨f getIndices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f double￨2￨f [￨2￨f ]￨2￨f getValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getNumMappings￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f growTo￨2￨f (￨2￨f int￨3￨p newCapacity￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f find￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f get￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f set￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p double￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f OrderedIntDoubleMapping￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b OrderedIntDoubleMapping￨3￨b (￨3￨b indices￨3￨b ,￨3￨b values￨3￨b ,￨3￨b numMappings￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestReverseStringFilter￨1￨d extends￨1￨d BaseTokenStreamTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f testFilter￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testFilterWithMark￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReverseString￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReverseChar￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f void￨2￨f testBackCompat￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReverseSupplementary￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReverseSupplementaryChar￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomStrings￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f Analyzer￨3￨f a￨3￨f =￨3￨f new￨3￨f Analyzer￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f protected￨4￨f TokenStreamComponents￨4￨f createComponents￨4￨f (￨4￨f String￨5￨p fieldName￨5￨p ,￨5￨p Reader￨5￨p reader￨5￨p )￨4￨f {￨4￨f Tokenizer￨5￨e tokenizer￨5￨e =￨5￨e new￨5￨e MockTokenizer￨5￨e (￨5￨e reader￨5￨e ,￨5￨e MockTokenizer￨5￨e .￨5￨e WHITESPACE￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e return￨5￨e new￨5￨e TokenStreamComponents￨5￨e (￨5￨e tokenizer￨5￨e ,￨5￨e new￨5￨e ReverseStringFilter￨5￨e (￨5￨e TEST_VERSION_CURRENT￨5￨e ,￨5￨e tokenizer￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e <START_BUG>￨3￨b checkRandomData￨3￨b (￨3￨b random￨3￨b (￨3￨b )￨3￨b ,￨3￨b a￨3￨b ,￨3￨b (￨3￨b 10000￨3￨b *￨3￨b (￨3￨b RANDOM_MULTIPLIER￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testEmptyTerm￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TermQueryPrefixTreeStrategy￨1￨d extends￨1￨d PrefixTreeStrategy￨1￨d {￨1￨d public￨2￨f TermQueryPrefixTreeStrategy￨2￨f (￨2￨f SpatialPrefixTree￨3￨p grid￨3￨p ,￨3￨p String￨3￨p fieldName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Filter￨2￨f makeFilter￨2￨f (￨2￨f SpatialArgs￨3￨p args￨3￨p )￨2￨f {￨2￨f final￨3￨e SpatialOperation￨3￨e op￨3￨e =￨3￨e args￨3￨e .￨3￨e getOperation￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b SpatialOperation￨3￨b .￨3￨b is￨3￨b (￨3￨b op￨3￨b ,￨3￨b IsWithin￨3￨b ,￨3￨b Intersects￨3￨b ,￨3￨b BBoxWithin￨3￨b ,￨3￨b BBoxIntersects￨3￨b )￨3￨b )￨3￨b )￨3￨b <END_BUG>￨3￨b throw￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e spatial￨3￨e .￨3￨e query￨3￨e .￨3￨e UnsupportedSpatialOperation￨3￨e (￨3￨e op￨3￨e )￨3￨e ;￨3￨e Shape￨3￨e shape￨3￨e =￨3￨e args￨3￨e .￨3￨e getShape￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e detailLevel￨3￨e =￨3￨e grid￨3￨e .￨3￨e getLevelForDistance￨3￨e (￨3￨e args￨3￨e .￨3￨e resolveDistErr￨3￨e (￨3￨e ctx￨3￨e ,￨3￨e distErrPct￨3￨e )￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e Node￨3￨e >￨3￨e cells￨3￨e =￨3￨e grid￨3￨e .￨3￨e getNodes￨3￨e (￨3￨e shape￨3￨e ,￨3￨e detailLevel￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e TermsFilter￨3￨e filter￨3￨e =￨3￨e new￨3￨e TermsFilter￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Node￨4￨c cell￨4￨c :￨4￨c cells￨4￨c )￨3￨l {￨3￨l filter￨4￨e .￨4￨e addTerm￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e index￨4￨e .￨4￨e Term￨4￨e (￨4￨e getFieldName￨4￨e (￨4￨e )￨4￨e ,￨4￨e cell￨4￨e .￨4￨e getTokenString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e filter￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CollectionProperty￨1￨d extends￨1￨d MultiProperty￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 221L￨2￨e ;￨2￨e private￨2￨e Collection￨2￨e <￨2￨e JMeterProperty￨2￨e >￨2￨e value￨2￨e ;￨2￨e private￨2￨e transient￨2￨e Collection￨2￨e <￨2￨e JMeterProperty￨2￨e >￨2￨e savedValue￨2￨e ;￨2￨e public￨2￨f CollectionProperty￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Collection￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollectionProperty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f set￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f set￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p JMeterProperty￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JMeterProperty￨2￨f get￨2￨f (￨2￨f int￨3￨p row￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setObjectValue￨2￨f (￨2￨f Object￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f PropertyIterator￨2￨f iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getStringValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getObjectValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collection￨2￨f <￨2￨f JMeterProperty￨2￨f >￨2￨f cloneCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨e SuppressWarnings￨4￨e (￨4￨e "unchecked"￨4￨e )￨4￨e Collection￨4￨e <￨4￨e JMeterProperty￨4￨e >￨4￨e newCol￨4￨e =￨4￨e value￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e .￨4￨e newInstance￨4￨e (￨4￨e )￨4￨e ;￨4￨e PropertyIterator￨4￨e iter￨4￨e =￨4￨e iterator￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l iter￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l <START_BUG>￨5￨b newCol￨5￨b .￨5￨b add￨5￨b (￨5￨b iter￨5￨b .￨5￨b next￨5￨b (￨5￨b )￨5￨b .￨5￨b clone￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨l return￨4￨e newCol￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f log￨4￨e .￨4￨e error￨4￨e (￨4￨e "Couldn't<seq2seq4repair_space>clone<seq2seq4repair_space>collection"￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e return￨4￨e value￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f setCollection￨2￨f (￨2￨f Collection￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f addProperty￨2￨f (￨2￨f JMeterProperty￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addItem￨2￨f (￨2￨f Object￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Class￨2￨f <￨2￨f ?￨2￨f extends￨2￨f JMeterProperty￨2￨f >￨2￨f getPropertyType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f recoverRunningVersion￨2￨f (￨2￨f TestElement￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setRunningVersion￨2￨f (￨2￨f boolean￨3￨p running￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StandardToStringStyleTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d private￨2￨e final￨2￨e Integer￨2￨e base￨2￨e =￨2￨e new￨2￨e Integer￨2￨e (￨2￨e 5￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e baseStr￨2￨e =￨2￨e "Integer"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e StandardToStringStyle￨2￨e STYLE￨2￨e =￨2￨e new￨2￨e StandardToStringStyle￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f StandardToStringStyleTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e tearDown￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b ToStringBuilder￨3￨b .￨3￨b setDefaultStyle￨3￨b (￨3￨b StandardToStringStyleTest￨3￨b .￨3￨b STYLE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testBlank￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAppendSuper￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testPerson￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLong￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testObjectArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLongArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testLongArrayArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SMTPMin￨1￨d {￨1￨d static￨2￨d Category￨2￨d cat￨2￨d =￨2￨d Category￨2￨d .￨2￨d getInstance￨2￨d (￨2￨d SMTPMin￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d void￨2￨d main￨2￨d (￨2￨d String￨2￨d [￨2￨d ]￨2￨d argv￨2￨d )￨2￨d {￨2￨d }￨2￨d static￨2￨f void￨2￨f usage￨2￨f (￨2￨f String￨3￨p msg￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f init￨2￨f (￨2￨f String￨3￨p configFile￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f test￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e i￨3￨e =￨3￨e 0￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e debug￨3￨e (￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e debug￨3￨e (￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e ,￨3￨e new￨3￨e Exception￨3￨e (￨3￨e "Just<seq2seq4repair_space>testing."￨3￨e )￨3￨e )￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e info￨3￨e (￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e warn￨3￨e (￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e error￨3￨e (￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e SMTPMin￨3￨e .￨3￨e cat￨3￨e .￨3￨e log￨3￨e (￨3￨e Priority￨3￨e .￨3￨e FATAL￨3￨e ,￨3￨e (￨3￨e "Message<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e i￨3￨e ++￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Category￨3￨b .￨3￨b shutdown￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Thread￨3￨e .￨3￨e currentThread￨3￨e (￨3￨e )￨3￨e .￨3￨e getThreadGroup￨3￨e (￨3￨e )￨3￨e .￨3￨e list￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EclipseWorld￨1￨d extends￨1￨d World￨1￨d {￨1￨d public￨2￨e static￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨e AjBuildManager￨2￨e buildManager￨2￨e ;￨2￨e private￨2￨e LookupEnvironment￨2￨e lookupEnvironment￨2￨e ;￨2￨e private￨2￨e Map￨2￨e addedTypeBindings￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f EclipseWorld￨2￨f forLookupEnvironment￨2￨f (￨2￨f LookupEnvironment￨3￨p env￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f EclipseWorld￨2￨f fromScopeLookupEnvironment￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f EclipseWorld￨2￨f (￨2￨f LookupEnvironment￨3￨p lookupEnvironment￨3￨p ,￨3￨p IMessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Advice￨2￨f concreteAdvice￨2￨f (￨2￨f AjAttribute￨3￨p .￨3￨p AdviceAttribute￨3￨p attribute￨3￨p ,￨3￨p Pointcut￨3￨p pointcut￨3￨p ,￨3￨p Member￨3￨p signature￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ConcreteTypeMunger￨2￨f concreteTypeMunger￨2￨f (￨2￨f ResolvedTypeMunger￨3￨p munger￨3￨p ,￨3￨p ResolvedTypeX￨3￨p aspectType￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ResolvedTypeX￨2￨f resolveObjectType￨2￨f (￨2￨f TypeX￨3￨p ty￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResolvedTypeX￨2￨f fromEclipse￨2￨f (￨2￨f ReferenceBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResolvedTypeX￨2￨f [￨2￨f ]￨2￨f fromEclipse￨2￨f (￨2￨f ReferenceBinding￨3￨p [￨3￨p ]￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f getName￨2￨f (￨2￨f TypeBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f TypeX￨2￨f fromBinding￨2￨f (￨2￨f TypeBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f TypeX￨2￨f [￨2￨f ]￨2￨f fromBindings￨2￨f (￨2￨f TypeBinding￨3￨p [￨3￨p ]￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f AstNode￨2￨f astForLocation￨2￨f (￨2￨f IHasPosition￨3￨p location￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f getTypeMungers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ResolvedMember￨2￨f makeResolvedMember￨2￨f (￨2￨f MethodBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ResolvedMember￨2￨f makeResolvedMember￨2￨f (￨2￨f FieldBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f makeTypeBinding￨2￨f (￨2￨f TypeX￨3￨p typeX￨3￨p )￨2￨f {￨2￨f TypeBinding￨3￨e ret￨3￨e =￨3￨e (￨3￨e (￨3￨e TypeBinding￨3￨e )￨3￨e (￨3￨e addedTypeBindings￨3￨e .￨3￨e get￨3￨e (￨3￨e typeX￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j ret￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ret￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j typeX￨4￨c .￨4￨c isPrimitive￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c BOOLEAN￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e BooleanBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c BYTE￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e ByteBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c CHAR￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e CharBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c DOUBLE￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e DoubleBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c FLOAT￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e FloatBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c INT￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e IntBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c LONG￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e LongBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c SHORT￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e ShortBinding￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j typeX￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c VOID￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e BaseTypes￨5￨e .￨5￨e VoidBinding￨5￨e ;￨5￨e }￨4￨j throw￨4￨e new￨4￨e RuntimeException￨4￨e (￨4￨e (￨4￨e "weird<seq2seq4repair_space>primitive<seq2seq4repair_space>type<seq2seq4repair_space>"￨4￨e +￨4￨e typeX￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j typeX￨4￨c .￨4￨c isArray￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j int￨4￨e dim￨4￨e =￨4￨e 0￨4￨e ;￨4￨e while￨4￨l (￨4￨l typeX￨5￨c .￨5￨c isArray￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l dim￨5￨e ++￨5￨e ;￨5￨e typeX￨5￨e =￨5￨e typeX￨5￨e .￨5￨e getComponentType￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨l <START_BUG>￨4￨b return￨4￨b new￨4￨b ArrayBinding￨4￨b (￨4￨b makeTypeBinding￨4￨b (￨4￨b typeX￨4￨b )￨4￨b ,￨4￨b dim￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j else￨3￨j {￨3￨j ResolvedTypeX￨4￨e rt￨4￨e =￨4￨e typeX￨4￨e .￨4￨e resolve￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j rt￨5￨c ==￨5￨c (￨5￨c ResolvedTypeX￨5￨c .￨5￨c MISSING￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e RuntimeException￨5￨e (￨5￨e (￨5￨e "shouldn't<seq2seq4repair_space>be<seq2seq4repair_space>missing:<seq2seq4repair_space>"￨5￨e +￨5￨e typeX￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e (￨4￨e (￨4￨e EclipseObjectType￨4￨e )￨4￨e (￨4￨e rt￨4￨e )￨4￨e )￨4￨e .￨4￨e getBinding￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f TypeBinding￨2￨f [￨2￨f ]￨2￨f makeTypeBindings￨2￨f (￨2￨f TypeX￨3￨p [￨3￨p ]￨3￨p types￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f makeReferenceBindings￨2￨f (￨2￨f TypeX￨3￨p [￨3￨p ]￨3￨p types￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f makeFieldBinding￨2￨f (￨2￨f ResolvedMember￨3￨p member￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f makeMethodBinding￨2￨f (￨2￨f ResolvedMember￨3￨p member￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f makeMethodBindingForCall￨2￨f (￨2￨f Member￨3￨p member￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f finishedCompilationUnit￨2￨f (￨2￨f CompilationUnitDeclaration￨3￨p unit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addTypeBinding￨2￨f (￨2￨f TypeBinding￨3￨p binding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shadow￨2￨f makeShadow￨2￨f (￨2￨f AstNode￨3￨p location￨3￨p ,￨3￨p ReferenceContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shadow￨2￨f makeShadow￨2￨f (￨2￨f ReferenceContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d WebConnectorMetrics￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d static￨2￨e WebConnectorMetrics￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e WebConnectorMetrics￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e NO_LOCATION￨2￨e =￨2￨e new￨2￨e String￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f ATTRIBUTES￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b context￨3￨b .￨3￨b getType￨3￨b (￨3￨b )￨3￨b )￨3￨b ==￨3￨b (￨3￨b Type￨3￨b .￨3￨b SERVER￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f OperationStepHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f execute￨4￨f (￨4￨f OperationContext￨4￨f context￨4￨f ,￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e PathAddress￨5￨e address￨5￨e =￨5￨e PathAddress￨5￨e .￨5￨e pathAddress￨5￨e (￨5￨e operation￨5￨e .￨5￨e require￨5￨e (￨5￨e OP_ADDR￨5￨e )￨5￨e )￨5￨e ;￨5￨e final￨5￨e String￨5￨e name￨5￨e =￨5￨e address￨5￨e .￨5￨e getLastElement￨5￨e (￨5￨e )￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e ;￨5￨e final￨5￨e String￨5￨e attributeName￨5￨e =￨5￨e operation￨5￨e .￨5￨e require￨5￨e (￨5￨e NAME￨5￨e )￨5￨e .￨5￨e asString￨5￨e (￨5￨e )￨5￨e ;￨5￨e final￨5￨e ServiceController￨5￨e <￨5￨e ?￨5￨e >￨5￨e controller￨5￨e =￨5￨e context￨5￨e .￨5￨e getServiceRegistry￨5￨e (￨5￨e false￨5￨e )￨5￨e .￨5￨e getService￨5￨e (￨5￨e JBOSS_WEB_CONNECTOR￨5￨e .￨5￨e append￨5￨e (￨5￨e name￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j controller￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f final￨7￨e Connector￨7￨e connector￨7￨e =￨7￨e (￨7￨e (￨7￨e Connector￨7￨e )￨7￨e (￨7￨e controller￨7￨e .￨7￨e getValue￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e final￨7￨e ModelNode￨7￨e result￨7￨e =￨7￨e context￨7￨e .￨7￨e getResult￨7￨e (￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j (￨8￨c (￨8￨c connector￨8￨c .￨8￨c getProtocolHandler￨8￨c (￨8￨c )￨8￨c )￨8￨c !=￨8￨c null￨8￨c )￨8￨c &&￨8￨c (￨8￨c (￨8￨c connector￨8￨c .￨8￨c getProtocolHandler￨8￨c (￨8￨c )￨8￨c .￨8￨c getRequestGroupInfo￨8￨c (￨8￨c )￨8￨c )￨8￨c !=￨8￨c null￨8￨c )￨8￨c )￨7￨j {￨7￨j RequestGroupInfo￨8￨e info￨8￨e =￨8￨e connector￨8￨e .￨8￨e getProtocolHandler￨8￨e (￨8￨e )￨8￨e .￨8￨e getRequestGroupInfo￨8￨e (￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j BYTES_SENT￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getBytesSent￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j if￨8￨j (￨8￨j BYTES_RECEIVED￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getBytesReceived￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j if￨8￨j (￨8￨j PROCESSING_TIME￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getProcessingTime￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j if￨8￨j (￨8￨j ERROR_COUNT￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getErrorCount￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j if￨8￨j (￨8￨j MAX_TIME￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getMaxTime￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j else￨8￨j if￨8￨j (￨8￨j REQUEST_COUNT￨9￨c .￨9￨c equals￨9￨c (￨9￨c attributeName￨9￨c )￨9￨c )￨8￨j {￨8￨j result￨9￨e .￨9￨e set￨9￨e (￨9￨e (￨9￨e ""￨9￨e +￨9￨e (￨9￨e info￨9￨e .￨9￨e getRequestCount￨9￨e (￨9￨e )￨9￨e )￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨j }￨6￨f catch￨6￨f (￨6￨f Exception￨7￨p e￨7￨p )￨6￨f {￨6￨f throw￨7￨e new￨7￨e OperationFailedException￨7￨e (￨7￨e new￨7￨e ModelNode￨7￨e (￨7￨e )￨7￨e .￨7￨e set￨7￨e (￨7￨e WebMessages￨7￨e .￨7￨e MESSAGES￨7￨e .￨7￨e failedToGetMetrics￨7￨e (￨7￨e e￨7￨e .￨7￨e getMessage￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨j else￨5￨j {￨5￨j context￨6￨e .￨6￨e getResult￨6￨e (￨6￨e )￨6￨e .￨6￨e set￨6￨e (￨6￨e WebMessages￨6￨e .￨6￨e MESSAGES￨6￨e .￨6￨e noMetricsAvailable￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e WebMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e noMetricsAvailable￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d EJBComponent￨1￨d extends￨1￨d AbstractComponent￨1￨d implements￨1￨d org￨1￨d .￨1￨d jboss￨1￨d .￨1￨d ejb3￨1￨d .￨1￨d context￨1￨d .￨1￨d spi￨1￨d .￨1￨d EJBComponent￨1￨d ,￨1￨d TransactionalComponent￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d EJBComponent￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d ConcurrentMap￨2￨d <￨2￨d MethodIntf￨2￨d ,￨2￨d ConcurrentMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d ConcurrentMap￨2￨d <￨2￨d ArrayKey￨2￨d ,￨2￨d TransactionAttributeType￨2￨d >￨2￨d >￨2￨d >￨2￨d txAttrs￨2￨d ;￨2￨d private￨2￨d final￨2￨d EJBUtilities￨2￨d utilities￨2￨d ;￨2￨d private￨2￨d final￨2￨d boolean￨2￨d isBeanManagedTransaction￨2￨d ;￨2￨d private￨2￨d static￨2￨d volatile￨2￨d boolean￨2￨d youHaveBeenWarnedEJBTHREE2120￨2￨d =￨2￨d false￨2￨d ;￨2￨d protected￨2￨d EJBComponent￨2￨d (￨2￨d final￨2￨d EJBComponentConfiguration￨2￨d configuration￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f ApplicationException￨2￨f getApplicationException￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p exceptionClass￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f EJBHome￨2￨f getEJBHome￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f EJBLocalHome￨2￨f getEJBLocalHome￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f getRollbackOnly￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f TimerService￨2￨f getTimerService￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f TransactionAttributeType￨2￨f getTransactionAttributeType￨2￨f (￨2￨f Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TransactionAttributeType￨2￨f getTransactionAttributeType￨2￨f (￨2￨f MethodIntf￨3￨p methodIntf￨3￨p ,￨3￨p Method￨3￨p method￨3￨p )￨2￨f {￨2￨f ConcurrentMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e ConcurrentMap￨3￨e <￨3￨e ArrayKey￨3￨e ,￨3￨e TransactionAttributeType￨3￨e >￨3￨e >￨3￨e perMethodIntf￨3￨e =￨3￨e txAttrs￨3￨e .￨3￨e get￨3￨e (￨3￨e methodIntf￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j perMethodIntf￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalStateException￨4￨e (￨4￨e (￨4￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>"￨4￨e +￨4￨e methodIntf￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j ConcurrentMap￨3￨e <￨3￨e ArrayKey￨3￨e ,￨3￨e TransactionAttributeType￨3￨e >￨3￨e perMethod￨3￨e =￨3￨e perMethodIntf￨3￨e .￨3￨e get￨3￨e (￨3￨e method￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j perMethod￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalStateException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>name<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e method￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>via<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e methodIntf￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b TransactionAttributeType￨3￨b txAttr￨3￨b =￨3￨b perMethod￨3￨b .￨3￨b get￨3￨b (￨3￨b new￨3￨b ArrayKey￨3￨b (￨3￨b method￨3￨b .￨3￨b getParameterTypes￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j txAttr￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalStateException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attr<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>"￨4￨e +￨4￨e method￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>via<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e methodIntf￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e txAttr￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f TransactionManager￨2￨f getTransactionManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TransactionSynchronizationRegistry￨2￨f getTransactionSynchronizationRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f getTransactionTimeout￨2￨f (￨2￨f Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f UserTransaction￨2￨f getUserTransaction￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isBeanManagedTransaction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f isCallerInRole￨2￨f (￨2￨f Principal￨2￨f callerPrincipal￨2￨f ,￨2￨f String￨2￨f roleName￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f lookup￨2￨f (￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setRollbackOnly￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Evaluator￨1￨d {￨1￨d EvaluationContext￨2￨e context￨2￨e ;￨2￨e INameEnvironment￨2￨e environment￨2￨e ;￨2￨e Map￨2￨e options￨2￨e ;￨2￨e IRequestor￨2￨e requestor￨2￨e ;￨2￨e IProblemFactory￨2￨e problemFactory￨2￨e ;￨2￨e Evaluator￨2￨f (￨2￨f EvaluationContext￨3￨p context￨3￨p ,￨3￨p INameEnvironment￨3￨p environment￨3￨p ,￨3￨p Map￨3￨p options￨3￨p ,￨3￨p IRequestor￨3￨p requestor￨3￨p ,￨3￨p IProblemFactory￨3￨p problemFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f void￨2￨f addEvaluationResultForCompilationProblem￨2￨f (￨2￨f Map￨3￨p resultsByIDs￨3￨p ,￨3￨p IProblem￨3￨p problem￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p cuSource￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f EvaluationResult￨2￨f [￨2￨f ]￨2￨f evaluationResultsForCompilationProblems￨2￨f (￨2￨f CompilationResult￨3￨p result￨3￨p ,￨3￨p char￨3￨p [￨3￨p ]￨3￨p cuSource￨3￨p )￨2￨f {￨2￨f }￨2￨f ClassFile￨2￨f [￨2￨f ]￨2￨f getClasses￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e char￨3￨e [￨3￨e ]￨3￨e source￨3￨e =￨3￨e getSource￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ArrayList￨3￨e classDefinitions￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e (￨3￨e )￨3￨e ;￨3￨e class￨3￨d CompilerRequestor￨3￨d implements￨3￨d ICompilerRequestor￨3￨d {￨3￨d boolean￨4￨e hasErrors￨4￨e =￨4￨e false￨4￨e ;￨4￨e public￨4￨f void￨4￨f acceptResult￨4￨f (￨4￨f CompilationResult￨5￨p result￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j result￨6￨c .￨6￨c hasProblems￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j EvaluationResult￨6￨e [￨6￨e ]￨6￨e evalResults￨6￨e =￨6￨e evaluationResultsForCompilationProblems￨6￨e (￨6￨e result￨6￨e ,￨6￨e source￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ;￨7￨c i￨7￨c <￨7￨c (￨7￨c evalResults￨7￨c .￨7￨c length￨7￨c )￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l EvaluationResult￨7￨e evalResult￨7￨e =￨7￨e evalResults￨7￨e [￨7￨e i￨7￨e ]￨7￨e ;￨7￨e IProblem￨7￨e [￨7￨e ]￨7￨e problems￨7￨e =￨7￨e evalResult￨7￨e .￨7￨e getProblems￨7￨e (￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c (￨8￨c problems￨8￨c .￨8￨c length￨8￨c )￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l Evaluator￨8￨e .￨8￨e this￨8￨e .￨8￨e requestor￨8￨e .￨8￨e acceptProblem￨8￨e (￨8￨e problems￨8￨e [￨8￨e j￨8￨e ]￨8￨e ,￨8￨e evalResult￨8￨e .￨8￨e getEvaluationID￨8￨e (￨8￨e )￨8￨e ,￨8￨e evalResult￨8￨e .￨8￨e getEvaluationType￨8￨e (￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨l }￨6￨l }￨5￨j if￨5￨j (￨5￨j result￨6￨c .￨6￨c hasErrors￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b hasErrors￨6￨b =￨6￨b true￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j else￨5￨j {￨5￨j ClassFile￨6￨e [￨6￨e ]￨6￨e classFiles￨6￨e =￨6￨e result￨6￨e .￨6￨e getClassFiles￨6￨e (￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ;￨7￨c i￨7￨c <￨7￨c (￨7￨c classFiles￨7￨c .￨7￨c length￨7￨c )￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l ClassFile￨7￨e classFile￨7￨e =￨7￨e classFiles￨7￨e [￨7￨e i￨7￨e ]￨7￨e ;￨7￨e classDefinitions￨7￨e .￨7￨e add￨7￨e (￨7￨e classFile￨7￨e )￨7￨e ;￨7￨e }￨6￨l }￨5￨j }￨4￨f }￨3￨d CompilerRequestor￨3￨e compilerRequestor￨3￨e =￨3￨e new￨3￨e CompilerRequestor￨3￨e (￨3￨e )￨3￨e ;￨3￨e Compiler￨3￨e compiler￨3￨e =￨3￨e getCompiler￨3￨e (￨3￨e compilerRequestor￨3￨e )￨3￨e ;￨3￨e compiler￨3￨f .￨3￨f compile￨3￨f (￨3￨f new￨3￨f ICompilationUnit￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f new￨4￨f ICompilationUnit￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f char￨5￨f [￨5￨f ]￨5￨f getFileName￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e CharOperation￨6￨e .￨6￨e concat￨6￨e (￨6￨e Evaluator￨6￨e .￨6￨e this￨6￨e .￨6￨e getClassName￨6￨e (￨6￨e )￨6￨e ,￨6￨e SuffixConstants￨6￨e .￨6￨e SUFFIX_java￨6￨e )￨6￨e ;￨6￨e }￨5￨f public￨5￨f char￨5￨f [￨5￨f ]￨5￨f getContents￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e source￨6￨e ;￨6￨e }￨5￨f public￨5￨f char￨5￨f [￨5￨f ]￨5￨f getMainTypeName￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e Evaluator￨6￨e .￨6￨e this￨6￨e .￨6￨e getClassName￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f public￨5￨f char￨5￨f [￨5￨f ]￨5￨f [￨5￨f ]￨5￨f getPackageName￨5￨f (￨5￨f )￨5￨f {￨5￨f return￨6￨e null￨6￨e ;￨6￨e }￨5￨f }￨4￨f }￨3￨f )￨3￨e ;￨3￨e if￨3￨j (￨3￨j compilerRequestor￨4￨c .￨4￨c hasErrors￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j ClassFile￨4￨e [￨4￨e ]￨4￨e result￨4￨e =￨4￨e new￨4￨e ClassFile￨4￨e [￨4￨e classDefinitions￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ]￨4￨e ;￨4￨e classDefinitions￨4￨e .￨4￨e toArray￨4￨e (￨4￨e result￨4￨e )￨4￨e ;￨4￨e return￨4￨e result￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f abstract￨2￨f char￨2￨f [￨2￨f ]￨2￨f getClassName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Compiler￨2￨f getCompiler￨2￨f (￨2￨f ICompilerRequestor￨3￨p compilerRequestor￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f char￨2￨f [￨2￨f ]￨2￨f getSource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d ;￨3￨e inVMConnector￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e TransportConfigOperationHandlers￨3￨e .￨3￨e REMOVE￨3￨e ,￨3￨e CONNECTOR_REMOVE￨3￨e )￨3￨e ;￨3￨e IN_VM_ATTR￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e inVMConnector￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e MessagingExtension￨3￨e .￨3￨e createParamRegistration￨3￨e (￨3￨e inVMConnector￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e bridge￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e BRIDGE￨3￨e )￨3￨e ,￨3￨e BRIDGE_RESOURCE￨3￨e )￨3￨e ;￨3￨e bridge￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e BridgeAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e BridgeAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bridge￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e BridgeRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e BridgeRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e BridgeWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e bridge￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j registerRuntimeOnly￨4￨c )￨3￨j {￨3￨j BridgeControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e register￨4￨e (￨4￨e bridge￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e ManagementResourceRegistration￨3￨e cluster￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e CLUSTER_CONNECTION￨3￨e )￨3￨e ,￨3￨e CLUSTER_CONNECTION_RESOURCE￨3￨e )￨3￨e ;￨3￨e cluster￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e ClusterConnectionAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ClusterConnectionAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e cluster￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ClusterConnectionRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ClusterConnectionRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e ClusterConnectionWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e cluster￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j registerRuntimeOnly￨4￨c )￨3￨j {￨3￨j ClusterConnectionControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e register￨4￨e (￨4￨e cluster￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e ManagementResourceRegistration￨3￨e groupingHandler￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e GROUPING_HANDLER_PATH￨3￨e ,￨3￨e GROUPING_HANDLER_RESOURCE￨3￨e )￨3￨e ;￨3￨e groupingHandler￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e GroupingHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e GroupingHandlerAdd￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e groupingHandler￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e GroupingHandlerRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e GroupingHandlerRemove￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e GroupingHandlerWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e groupingHandler￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e connectorService￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e CONNECTOR_SERVICE￨3￨e )￨3￨e ,￨3￨e CONNECTOR_SERVICE_RESOURCE￨3￨e )￨3￨e ;￨3￨e connectorService￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e ConnectorServiceAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ConnectorServiceAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e connectorService￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ConnectorServiceRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ConnectorServiceRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e ConnectorServiceWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e connectorService￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e connectorServiceParam￨3￨e =￨3￨e connectorService￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e CommonAttributes￨3￨e .￨3￨e PARAM￨3￨e )￨3￨e ,￨3￨e CONNECTOR_SERVICE_PARAM_RESOURCE￨3￨e )￨3￨e ;￨3￨e connectorServiceParam￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e ConnectorServiceParamAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ConnectorServiceParamAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e connectorServiceParam￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ConnectorServiceParamRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ConnectorServiceParamRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e connectorServiceParam￨3￨e .￨3￨e registerReadWriteAttribute￨3￨e (￨3￨e VALUE￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e ,￨3￨e null￨3￨e ,￨3￨e ConnectorServiceParamWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e CONFIGURATION￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c String￨4￨c path￨4￨c :￨4￨c CommonAttributes￨4￨c .￨4￨c PATHS￨4￨c )￨3￨l {￨3￨l ManagementResourceRegistration￨4￨e bindings￨4￨e =￨4￨e serverRegistration￨4￨e .￨4￨e registerSubModel￨4￨e (￨4￨e PathElement￨4￨e .￨4￨e pathElement￨4￨e (￨4￨e PATH￨4￨e ,￨4￨e path￨4￨e )￨4￨e ,￨4￨e new￨4￨e MessagingSubsystemProviders￨4￨e .￨4￨e PathProvider￨4￨e (￨4￨e path￨4￨e )￨4￨e )￨4￨e ;￨4￨e MessagingPathHandlers￨4￨e .￨4￨e register￨4￨e (￨4￨e bindings￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e ManagementResourceRegistration￨3￨e cfs￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e CFS_PATH￨3￨e ,￨3￨e CF￨3￨e )￨3￨e ;￨3￨e cfs￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e ConnectionFactoryAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e CF_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e cfs￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ConnectionFactoryRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e CF_REMOVE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e ConnectionFactoryWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e cfs￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j registerRuntimeOnly￨4￨c )￨3￨j {￨3￨j ConnectionFactoryReadAttributeHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerAttributes￨4￨e (￨4￨e cfs￨4￨e )￨4￨e ;￨4￨e }￨3￨j ConnectionFactoryAddJndiHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerOperation￨3￨e (￨3￨e cfs￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e resourceAdapters￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e RA_PATH￨3￨e ,￨3￨e RA￨3￨e )￨3￨e ;￨3￨e resourceAdapters￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e PooledConnectionFactoryAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e RA_ADD￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e resourceAdapters￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e PooledConnectionFactoryRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e RA_REMOVE￨3￨e )￨3￨e ;￨3￨e PooledConnectionFactoryWriteAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e resourceAdapters￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e queues￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e JMS_QUEUE_PATH￨3￨e ,￨3￨e JMS_QUEUE_RESOURCE￨3￨e )￨3￨e ;￨3￨e queues￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e JMSQueueAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e JMSQueueAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e queues￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e JMSQueueRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e JMSQueueRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e JmsQueueConfigurationWriteHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e queues￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e JMSQueueAddJndiHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerOperation￨3￨e (￨3￨e queues￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j registerRuntimeOnly￨4￨c )￨3￨j {￨3￨j JmsQueueReadAttributeHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerAttributes￨4￨e (￨4￨e queues￨4￨e )￨4￨e ;￨4￨e JMSQueueControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerOperations￨4￨e (￨4￨e queues￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e ManagementResourceRegistration￨3￨e topics￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e TOPIC_PATH￨3￨e ,￨3￨e JMS_TOPIC_RESOURCE￨3￨e )￨3￨e ;￨3￨e topics￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e JMSTopicAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e JMSTopicAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e topics￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e JMSTopicRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e JMSTopicRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e JMSTopicConfigurationWriteHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e topics￨3￨e )￨3￨e ;￨3￨e JMSTopicAddJndiHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerOperation￨3￨e (￨3￨e topics￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j registerRuntimeOnly￨4￨c )￨3￨j {￨3￨j JMSTopicReadAttributeHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerAttributes￨4￨e (￨4￨e topics￨4￨e )￨4￨e ;￨4￨e JMSTopicControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerOperations￨4￨e (￨4￨e topics￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e ManagementResourceRegistration￨3￨e securitySettings￨3￨e =￨3￨e serverRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e SECURITY_SETTING￨3￨e ,￨3￨e MessagingSubsystemProviders￨3￨e .￨3￨e SECURITY_SETTING￨3￨e )￨3￨e ;￨3￨e securitySettings￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e SecuritySettingAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SecuritySettingAdd￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e securitySettings￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e SecuritySettingRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SecuritySettingRemove￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e securityRole￨3￨e =￨3￨e securitySettings￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e MessagingExtension￨3￨e .￨3￨e SECURITY_ROLE￨3￨e ,￨3￨e MessagingSubsystemProviders￨3￨e .￨3￨e SECURITY_ROLE￨3￨e )￨3￨e ;￨3￨e securityRole￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e SecurityRoleAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SecurityRoleAdd￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e securityRole￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e SecurityRoleRemove￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e SecurityRoleRemove￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e SecurityRoleAttributeHandler￨3￨e .￨3￨e INSTANCE￨3￨e .￨3￨e registerAttributes￨3￨e (￨3￨e securityRole￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j context￨4￨c .￨4￨c isRuntimeOnlyRegistrationValid￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j ResourceDefinition￨4￨e deploymentsDef￨4￨e =￨4￨e new￨4￨e org￨4￨e .￨4￨e jboss￨4￨e .￨4￨e as￨4￨e .￨4￨e controller￨4￨e .￨4￨e SimpleResourceDefinition￨4￨e (￨4￨e PathElement￨4￨e .￨4￨e pathElement￨4￨e (￨4￨e SUBSYSTEM￨4￨e ,￨4￨e MessagingExtension￨4￨e .￨4￨e SUBSYSTEM_NAME￨4￨e )￨4￨e ,￨4￨e MessagingExtension￨4￨e .￨4￨e getResourceDescriptionResolver￨4￨e (￨4￨e "deployed"￨4￨e )￨4￨e )￨4￨e ;￨4￨e final￨4￨e ManagementResourceRegistration￨4￨e deploymentsRegistration￨4￨e =￨4￨e subsystem￨4￨e .￨4￨e registerDeploymentModel￨4￨e (￨4￨e deploymentsDef￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b final￨4￨b ManagementResourceRegistration￨4￨b serverModel￨4￨b =￨4￨b deploymentsRegistration￨4￨b .￨4￨b registerSubModel￨4￨b (￨4￨b DeploymentHornetQServerResourceDefinition￨4￨b .￨4￨b INSTANCE￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b final￨4￨e ManagementResourceRegistration￨4￨e deploymentQueue￨4￨e =￨4￨e serverModel￨4￨e .￨4￨e registerSubModel￨4￨e (￨4￨e MessagingExtension￨4￨e .￨4￨e JMS_QUEUE_PATH￨4￨e ,￨4￨e JMS_QUEUE_RESOURCE￨4￨e )￨4￨e ;￨4￨e JmsQueueReadAttributeHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerAttributes￨4￨e (￨4￨e deploymentQueue￨4￨e )￨4￨e ;￨4￨e JMSQueueControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerOperations￨4￨e (￨4￨e deploymentQueue￨4￨e )￨4￨e ;￨4￨e final￨4￨e ManagementResourceRegistration￨4￨e deploymentTopics￨4￨e =￨4￨e serverModel￨4￨e .￨4￨e registerSubModel￨4￨e (￨4￨e MessagingExtension￨4￨e .￨4￨e TOPIC_PATH￨4￨e ,￨4￨e JMS_TOPIC_RESOURCE￨4￨e )￨4￨e ;￨4￨e JMSTopicReadAttributeHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerAttributes￨4￨e (￨4￨e deploymentTopics￨4￨e )￨4￨e ;￨4￨e JMSTopicControlHandler￨4￨e .￨4￨e INSTANCE￨4￨e .￨4￨e registerOperations￨4￨e (￨4￨e deploymentTopics￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f void￨2￨f initializeParsers￨2￨f (￨2￨f ExtensionParsingContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f createParamRegistration￨2￨f (￨2￨f final￨3￨p ManagementResourceRegistration￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LocalVariable￨1￨d extends￨1￨d JavaElement￨1￨d implements￨1￨d ILocalVariable￨1￨d ,￨1￨d ISourceReference￨1￨d {￨1￨d public￨2￨e int￨2￨e declarationSourceStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e declarationEnd￨2￨e ;￨2￨e public￨2￨e int￨2￨e nameStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e nameEnd￨2￨e ;￨2￨e public￨2￨f LocalVariable￨2￨f (￨2￨f JavaElement￨3￨p parent￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p int￨3￨p declarationSourceStart￨3￨p ,￨3￨p int￨3￨p declarationEnd￨3￨p ,￨3￨p int￨3￨p nameStart￨3￨p ,￨3￨p int￨3￨p nameEnd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f closing￨2￨f (￨2￨f Object￨2￨f info￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f createElementInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f generateInfos￨2￨f (￨2￨f Object￨2￨f info￨2￨f ,￨2￨f HashMap￨2￨f newElements￨2￨f ,￨2￨f IProgressMonitor￨2￨f pm￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getHandleFromMemento￨2￨f (￨2￨f String￨3￨p token￨3￨p ,￨3￨p StringTokenizer￨3￨p memento￨3￨p ,￨3￨p WorkingCopyOwner￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getHandleMemento￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f char￨2￨f getHandleMementoDelimiter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IResource￨2￨f getCorrespondingResource￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getElementType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ISourceRange￨2￨f getNameRange￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPath￨2￨f getPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IResource￨2￨f getResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSource￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b IOpenable￨3￨b openable￨3￨b =￨3￨b getOpenableParent￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b IBuffer￨3￨e buffer￨3￨e =￨3￨e openable￨3￨e .￨3￨e getBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j buffer￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j ISourceRange￨3￨e range￨3￨e =￨3￨e getSourceRange￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e offset￨3￨e =￨3￨e range￨3￨e .￨3￨e getOffset￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e length￨3￨e =￨3￨e range￨3￨e .￨3￨e getLength￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c offset￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c length￨4￨c ==￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f return￨4￨e buffer￨4￨e .￨4￨e getText￨4￨e (￨4￨e offset￨4￨e ,￨4￨e length￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f RuntimeException￨4￨p e￨4￨p )￨3￨f {￨3￨f return￨4￨e null￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f ISourceRange￨2￨f getSourceRange￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IResource￨2￨f getUnderlyingResource￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ExpressionStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d private￨2￨e Expression￨2￨e expression￨2￨e =￨2￨e null￨2￨e ;￨2￨e ExpressionStatement￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getNodeType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f ExpressionStatement￨3￨e result￨3￨e =￨3￨e new￨3￨e ExpressionStatement￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setSourceRange￨3￨e (￨3￨e this￨3￨e .￨3￨e getStartPosition￨3￨e (￨3￨e )￨3￨e ,￨3￨e this￨3￨e .￨3￨e getLength￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setLeadingComment￨3￨b (￨3￨b getLeadingComment￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e setExpression￨3￨e (￨3￨e (￨3￨e (￨3￨e Expression￨3￨e )￨3￨e (￨3￨e getExpression￨3￨e (￨3￨e )￨3￨e .￨3￨e clone￨3￨e (￨3￨e target￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f subtreeMatch￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f getExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpression￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractAvailableCondition￨1￨d implements￨1￨d Condition￨1￨d {￨1￨d private￨2￨e Path￨2￨e m_classpath￨2￨e =￨2￨e new￨2￨e Path￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f addClasspath￨2￨f (￨2￨f final￨2￨f Path￨2￨f classpath￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b m_classpath￨3￨b .￨3￨b addPath￨3￨b (￨3￨b classpath￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f ClassLoader￨2￨f buildClassLoader￨2￨f (￨2￨f final￨2￨f TaskContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DropTargetEffect￨1￨d extends￨1￨d DropTargetAdapter￨1￨d {￨1￨d Control￨2￨e control￨2￨e ;￨2￨e public￨2￨f DropTargetEffect￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f getControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Widget￨2￨f getItem￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f Widget￨2￨f getItem￨2￨f (￨2￨f Table￨3￨p table￨3￨p ,￨3￨p int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f Widget￨2￨f getItem￨2￨f (￨2￨f Tree￨3￨p tree￨3￨p ,￨3￨p int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p )￨2￨f {￨2￨f Point￨3￨e point￨3￨e =￨3￨e new￨3￨e Point￨3￨e (￨3￨e x￨3￨e ,￨3￨e y￨3￨e )￨3￨e ;￨3￨e point￨3￨e =￨3￨e tree￨3￨e .￨3￨e toControl￨3￨e (￨3￨e point￨3￨e )￨3￨e ;￨3￨e TreeItem￨3￨e item￨3￨e =￨3￨e tree￨3￨e .￨3￨e getItem￨3￨e (￨3￨e point￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j item￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j Rectangle￨4￨e area￨4￨e =￨4￨e tree￨4￨e .￨4￨e getClientArea￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j area￨5￨c .￨5￨c contains￨5￨c (￨5￨c point￨5￨c )￨5￨c )￨4￨j {￨4￨j int￨5￨e treeBottom￨5￨e =￨5￨e (￨5￨e area￨5￨e .￨5￨e y￨5￨e )￨5￨e +￨5￨e (￨5￨e area￨5￨e .￨5￨e height￨5￨e )￨5￨e ;￨5￨e item￨5￨e =￨5￨e tree￨5￨e .￨5￨e getTopItem￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l item￨6￨c !=￨6￨c null￨6￨c )￨5￨l {￨5￨l Rectangle￨6￨e rect￨6￨e =￨6￨e item￨6￨e .￨6￨e getBounds￨6￨e (￨6￨e )￨6￨e ;￨6￨e int￨6￨e itemBottom￨6￨e =￨6￨e (￨6￨e rect￨6￨e .￨6￨e y￨6￨e )￨6￨e +￨6￨e (￨6￨e rect￨6￨e .￨6￨e height￨6￨e )￨6￨e ;￨6￨e <START_BUG>￨6￨b if￨6￨b (￨6￨b (￨6￨b (￨6￨b rect￨6￨b .￨6￨b y￨6￨b )￨6￨b <=￨6￨b (￨6￨b point￨6￨b .￨6￨b y￨6￨b )￨6￨b )￨6￨b &&￨6￨b (￨6￨b (￨6￨b point￨6￨b .￨6￨b y￨6￨b )￨6￨b <=￨6￨b itemBottom￨6￨b )￨6￨b )￨6￨b <END_BUG>￨6￨b return￨6￨e item￨6￨e ;￨6￨e if￨6￨j (￨6￨j itemBottom￨7￨c >￨7￨c treeBottom￨7￨c )￨6￨j {￨6￨j break￨7￨e ;￨7￨e }￨6￨j item￨6￨e =￨6￨e nextItem￨6￨e (￨6￨e tree￨6￨e ,￨6￨e item￨6￨e )￨6￨e ;￨6￨e }￨5￨l return￨5￨e null￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e item￨3￨e ;￨3￨e }￨2￨f TreeItem￨2￨f nextItem￨2￨f (￨2￨f Tree￨3￨p tree￨3￨p ,￨3￨p TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f TreeItem￨2￨f previousItem￨2￨f (￨2￨f Tree￨3￨p tree￨3￨p ,￨3￨p TreeItem￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DivertRemove￨1￨d extends￨1￨d AbstractRemoveStepHandler￨1￨d implements￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e DivertRemove￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e DivertRemove￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f DivertRemove￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRemove￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f recoverServices￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ServiceRegistry￨3￨e registry￨3￨e =￨3￨e context￨3￨e .￨3￨e getServiceRegistry￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e hqServiceName￨3￨e =￨3￨e MessagingServices￨3￨e .￨3￨e getHornetQServiceName￨3￨e (￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e get￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e hqService￨3￨e =￨3￨e registry￨3￨e .￨3￨e getService￨3￨e (￨3￨e hqServiceName￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c hqService￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c hqService￨4￨c .￨4￨c getState￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c State￨4￨c .￨4￨c UP￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e String￨4￨e name￨4￨e =￨4￨e PathAddress￨4￨e .￨4￨e pathAddress￨4￨e (￨4￨e operation￨4￨e .￨4￨e require￨4￨e (￨4￨e OP_ADDR￨4￨e )￨4￨e )￨4￨e .￨4￨e getLastElement￨4￨e (￨4￨e )￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b final￨4￨b DivertConfiguration￨4￨b divertConfiguration￨4￨b =￨4￨b DivertAdd￨4￨b .￨4￨b createDivertConfiguration￨4￨b (￨4￨b name￨4￨b ,￨4￨b model￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b HornetQServer￨4￨e server￨4￨e =￨4￨e HornetQServer￨4￨e .￨4￨e class￨4￨e .￨4￨e cast￨4￨e (￨4￨e hqService￨4￨e .￨4￨e getValue￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e DivertAdd￨4￨e .￨4￨e createDivert￨4￨e (￨4￨e name￨4￨e ,￨4￨e divertConfiguration￨4￨e ,￨4￨e server￨4￨e .￨4￨e getHornetQServerControl￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LazilyCompactedRow￨1￨d extends￨1￨d AbstractCompactedRow￨1￨d implements￨1￨d IIterableColumns￨1￨d {￨1￨d private￨2￨e final￨2￨e List￨2￨e <￨2￨e SSTableIdentityIterator￨2￨e >￨2￨e rows￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e major￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e gcBefore￨2￨e ;￨2￨e private￨2￨e final￨2￨e DataOutputBuffer￨2￨e headerBuffer￨2￨e ;￨2￨e private￨2￨e ColumnFamily￨2￨e emptyColumnFamily￨2￨e ;￨2￨e private￨2￨e LazilyCompactedRow￨2￨e .￨2￨e LazyColumnIterator￨2￨e iter￨2￨e ;￨2￨e private￨2￨e int￨2￨e columnCount￨2￨e ;￨2￨e private￨2￨e long￨2￨e columnSerializedSize￨2￨e ;￨2￨e public￨2￨f LazilyCompactedRow￨2￨f (￨2￨f List￨3￨p <￨3￨p SSTableIdentityIterator￨3￨p >￨3￨p rows￨3￨p ,￨3￨p boolean￨3￨p major￨3￨p ,￨3￨p int￨3￨p gcBefore￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutput￨2￨f out￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f update￨2￨f (￨2￨f MessageDigest￨3￨p digest￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEmpty￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b boolean￨3￨b cfIrrelevant￨3￨b =￨3￨b (￨3￨b ColumnFamilyStore￨3￨b .￨3￨b removeDeleted￨3￨b (￨3￨b emptyColumnFamily￨3￨b ,￨3￨b gcBefore￨3￨b )￨3￨b )￨3￨b ==￨3￨b null￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e cfIrrelevant￨3￨e &&￨3￨e (￨3￨e (￨3￨e columnCount￨3￨e )￨3￨e ==￨3￨e 0￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f int￨2￨f getEstimatedColumnCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AbstractType￨2￨f getComparator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Iterator￨2￨f <￨2￨f IColumn￨2￨f >￨2￨f iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d LazyColumnIterator￨2￨d extends￨2￨d ReducingIterator￨2￨d <￨2￨d IColumn￨2￨d ,￨2￨d IColumn￨2￨d >￨2￨d {￨2￨d ColumnFamily￨3￨e container￨3￨e =￨3￨e emptyColumnFamily￨3￨e .￨3￨e cloneMeShallow￨3￨e (￨3￨e )￨3￨e ;￨3￨e long￨3￨e serializedSize￨3￨e =￨3￨e 4￨3￨e ;￨3￨e int￨3￨e size￨3￨e =￨3￨e 0￨3￨e ;￨3￨e public￨3￨f LazyColumnIterator￨3￨f (￨3￨f Iterator￨4￨p <￨4￨p IColumn￨4￨p >￨4￨p source￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f isEqual￨3￨f (￨3￨f IColumn￨4￨p o1￨4￨p ,￨4￨p IColumn￨4￨p o2￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f reduce￨3￨f (￨3￨f IColumn￨4￨p current￨4￨p )￨3￨f {￨3￨f }￨3￨f protected￨3￨f IColumn￨3￨f getReduced￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TextChatComposite￨1￨d extends￨1￨d Composite￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e Trace￨2￨e trace￨2￨e =￨2￨e Trace￨2￨e .￨2￨e create￨2￨e (￨2￨e "textchatcomposite"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e int￨2￨e DEFAULT_INPUT_HEIGHT￨2￨e =￨2￨e 25￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e int￨2￨e DEFAULT_INPUT_SEPARATOR￨2￨e =￨2￨e 5￨2￨e ;￨2￨e protected￨2￨e String￨2￨e TEXT_INPUT_INIT￨2￨e =￨2￨e MessageLoader￨2￨e .￨2￨e getString￨2￨e (￨2￨e "TextChatComposite.textinputinit"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e Color￨2￨e meColor￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e Color￨2￨e otherColor￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e Color￨2￨e systemColor￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e StyledText￨2￨e styledText￨2￨e ;￨2￨e protected￨2￨e TextViewer￨2￨e textoutput￨2￨e ;￨2￨e protected￨2￨e Text￨2￨e textinput￨2￨e ;￨2￨e protected￨2￨f int￨2￨f [￨2￨f ]￨2￨f sashWeights￨2￨f =￨2￨f new￨2￨f int￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e protected￨2￨e ChatLayout￨2￨e cl￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e isTyping￨2￨e ;￨2￨e protected￨2￨e String￨2￨e initText￨2￨e ;￨2￨e protected￨2￨e ITextInputHandler￨2￨e inputHandler￨2￨e ;￨2￨e SimpleDateFormat￨2￨e df￨2￨e =￨2￨e new￨2￨e SimpleDateFormat￨2￨e (￨2￨e "hh:mm<seq2seq4repair_space>a"￨2￨e )￨2￨e ;￨2￨e protected￨2￨e IUser￨2￨e localUser￨2￨e ;￨2￨e protected￨2￨e IUser￨2￨e remoteUser￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e showTimestamp￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e Action￨2￨e outputClear￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Action￨2￨e outputCopy￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Action￨2￨e outputPaste￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Action￨2￨e outputSelectAll￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f TextChatComposite￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p String￨3￨p initText￨3￨p ,￨3￨p ITextInputHandler￨3￨p handler￨3￨p ,￨3￨p IUser￨3￨p localUser￨3￨p ,￨3￨p IUser￨3￨p remoteUser￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f makeActions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f outputClear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f outputCopy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f outputPaste￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f outputSelectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f hookContextMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f fillContextMenu￨2￨f (￨2￨f IMenuManager￨3￨p manager￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLocalUser￨2￨f (￨2￨f IUser￨3￨p newUser￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRemoteUser￨2￨f (￨2￨f IUser￨3￨p remoteUser￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IUser￨2￨f getRemoteUser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getCurrentDateTime￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f makeLineWithTimestamp￨2￨f (￨2￨f String￨3￨p line￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IUser￨2￨f getLocalUser￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f appendText￨2￨f (￨2￨f ChatLine￨3￨p text￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleKeyPressed￨2￨f (￨2￨f KeyEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b evt￨3￨b .￨3￨b keyCode￨3￨b )￨3￨b ==￨3￨b (￨3￨b SWT￨3￨b .￨3￨b CR￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b handleEnter￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f handleEnter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f clearInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f sendTextLineInput￨2￨f (￨2￨f String￨3￨p text￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f sendStartedTyping￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getShellName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setDisposed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d MemoryMXBeanAttributeHandler￨1￨d extends￨1￨d AbstractPlatformMBeanAttributeHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e MemoryMXBeanAttributeHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e MemoryMXBeanAttributeHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f MemoryMXBeanAttributeHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeReadAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e String￨3￨e name￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e NAME￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b OBJECT_NAME￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b .￨3￨b equals￨3￨b (￨3￨b name￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b context￨3￨e .￨3￨e getResult￨3￨e (￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e ManagementFactory￨3￨e .￨3￨e MEMORY_MXBEAN_NAME￨3￨e )￨3￨e ;￨3￨e else￨3￨j if￨3￨j (￨3￨j OBJECT_PENDING_FINALIZATION_COUNT￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getMemoryMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getObjectPendingFinalizationCount￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j HEAP_MEMORY_USAGE￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e ModelNode￨4￨e mu￨4￨e =￨4￨e PlatformMBeanUtil￨4￨e .￨4￨e getDetypedMemoryUsage￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getMemoryMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getHeapMemoryUsage￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e mu￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j NON_HEAP_MEMORY_USAGE￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e ModelNode￨4￨e mu￨4￨e =￨4￨e PlatformMBeanUtil￨4￨e .￨4￨e getDetypedMemoryUsage￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getMemoryMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e getNonHeapMemoryUsage￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e mu￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j VERBOSE￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e ManagementFactory￨4￨e .￨4￨e getMemoryMXBean￨4￨e (￨4￨e )￨4￨e .￨4￨e isVerbose￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j (￨4￨c MEMORY_METRICS￨4￨c .￨4￨c contains￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c MEMORY_READ_WRITE_ATTRIBUTES￨4￨c .￨4￨c contains￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e ROOT_LOGGER￨4￨e .￨4￨e badReadAttributeImpl￨4￨e (￨4￨e name￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e unknownAttribute￨4￨e (￨4￨e operation￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeWriteAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RequestHandlerStackTest￨1￨d extends￨1￨d BaseRequestHandlerStackTest￨1￨d {￨1￨d public￨2￨f RequestHandlerStackTest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e testFlag1￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e testFlag2￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e testFlag3￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e testFlag4￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e detachedFlag1￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e detachedFlag2￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e detachedFlag3￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e detachedFlag4￨2￨e ;￨2￨e private￨2￨f void￨2￨f initFlags￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test1￨2￨f (￨2￨f )￨2￨f {￨2￨f initFlags￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Response￨3￨e originalResponse￨3￨e =￨3￨e newResponse￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e RequestHandlerStack￨3￨e stack￨3￨e =￨3￨e newStack￨3￨e (￨3￨e originalResponse￨3￨e )￨3￨e ;￨3￨e final￨3￨f IRequestHandler￨3￨f handler3￨3￨f =￨3￨f new￨3￨f IRequestHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f respond￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f testFlag3￨5￨e =￨5￨e false￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f detach￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f detachedFlag3￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e final￨3￨f IRequestHandler￨3￨f handler2￨3￨f =￨3￨f new￨3￨f IRequestHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f respond￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f testFlag2￨5￨e =￨5￨e false￨5￨e ;￨5￨e stack￨5￨e .￨5￨e replaceAllRequestHandlers￨5￨e (￨5￨e handler3￨5￨e )￨5￨e ;￨5￨e testFlag2￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f detach￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f detachedFlag2￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e final￨3￨f IRequestHandler￨3￨f handler1￨3￨f =￨3￨f new￨3￨f IRequestHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f respond￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f testFlag1￨5￨e =￨5￨e false￨5￨e ;￨5￨e Response￨5￨e resp￨5￨e =￨5￨e newResponse￨5￨e (￨5￨e )￨5￨e ;￨5￨e stack￨5￨e .￨5￨e setResponse￨5￨e (￨5￨e resp￨5￨e )￨5￨e ;￨5￨e stack￨5￨e .￨5￨e executeRequestHandler￨5￨e (￨5￨e handler2￨5￨e )￨5￨e ;￨5￨e assertEquals￨5￨e (￨5￨e stack￨5￨e .￨5￨e getResponse￨5￨e (￨5￨e )￨5￨e ,￨5￨e resp￨5￨e )￨5￨e ;￨5￨e testFlag1￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f detach￨4￨f (￨4￨f IRequestCycle￨5￨p requestCycle￨5￨p )￨4￨f {￨4￨f detachedFlag1￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e stack￨3￨e .￨3￨e executeRequestHandler￨3￨e (￨3￨e handler1￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e stack￨3￨e .￨3￨e getResponse￨3￨e (￨3￨e )￨3￨e ,￨3￨e originalResponse￨3￨e )￨3￨e ;￨3￨e stack￨3￨e .￨3￨e detach￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertTrue￨3￨b (￨3￨b testFlag1￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertFalse￨3￨e (￨3￨e testFlag2￨3￨e )￨3￨e ;￨3￨e assertFalse￨3￨e (￨3￨e testFlag3￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e detachedFlag1￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e detachedFlag2￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e detachedFlag3￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f test2￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test3￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d }￨2￨f public￨2￨f void￨2￨f setNextUid￨2￨f (￨2￨f int￨3￨p next￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JDialog￨2￨f showFilterDialog￨2￨f (￨2￨f AbstractMailFrameController￨3￨p frameController￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f exists￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f HeaderList￨2￨f getHeaderList￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSearchToHistory￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f VirtualFolder￨3￨e searchFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e VirtualFolder￨3￨e )￨3￨e (￨3￨e treeModel￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e 106￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c searchFolder￨4￨c .￨4￨c equals￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c searchFolder￨4￨c .￨4￨c getChildCount￨4￨c (￨4￨c )￨4￨c )￨4￨c >=￨4￨c 10￨4￨c )￨3￨j {￨3￨j MessageFolder￨4￨e child￨4￨e =￨4￨e (￨4￨e (￨4￨e MessageFolder￨4￨e )￨4￨e (￨4￨e searchFolder￨4￨e .￨4￨e getChildAt￨4￨e (￨4￨e 0￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e child￨4￨e .￨4￨e removeFromParent￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j String￨3￨e name￨3￨e =￨3￨e "search<seq2seq4repair_space>result"￨3￨e ;￨3￨e VirtualFolder￨3￨e newFolder￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f newFolder￨4￨e =￨4￨e (￨4￨e (￨4￨e VirtualFolder￨4￨e )￨4￨e (￨4￨e FolderFactory￨4￨e .￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e createChild￨4￨e (￨4￨e searchFolder￨4￨e ,￨4￨e name￨4￨e ,￨4￨e "VirtualFolder"￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f ex￨4￨e .￨4￨e printStackTrace￨4￨e (￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨f if￨3￨j (￨3￨j newFolder￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j int￨3￨e uid￨3￨e =￨3￨e getFolderItem￨3￨e (￨3￨e )￨3￨e .￨3￨e getInteger￨3￨e (￨3￨e "property"￨3￨e ,￨3￨e "source_uid"￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e includes￨3￨e =￨3￨e getFolderItem￨3￨e (￨3￨e )￨3￨e .￨3￨e getBoolean￨3￨e (￨3￨e "property"￨3￨e ,￨3￨e "include_subfolders"￨3￨e )￨3￨e ;￨3￨e FolderItem￨3￨e newFolderItem￨3￨e =￨3￨e newFolder￨3￨e .￨3￨e getFolderItem￨3￨e (￨3￨e )￨3￨e ;￨3￨e newFolderItem￨3￨e .￨3￨e set￨3￨e (￨3￨e "property"￨3￨e ,￨3￨e "source_uid"￨3￨e ,￨3￨e uid￨3￨e )￨3￨e ;￨3￨e newFolderItem￨3￨e .￨3￨e set￨3￨e (￨3￨e "property"￨3￨e ,￨3￨e "include_subfolders"￨3￨e ,￨3￨e includes￨3￨e )￨3￨e ;￨3￨e newFolderItem￨3￨e .￨3￨e getElement￨3￨e (￨3￨e "filter"￨3￨e )￨3￨e .￨3￨e removeFromParent￨3￨e (￨3￨e )￨3￨e ;￨3￨e newFolderItem￨3￨e .￨3￨e getRoot￨3￨e (￨3￨e )￨3￨e .￨3￨e addElement￨3￨e (￨3￨e (￨3￨e (￨3￨e XmlElement￨3￨e )￨3￨e (￨3￨e getFolderItem￨3￨e (￨3￨e )￨3￨e .￨3￨e getElement￨3￨e (￨3￨e "filter"￨3￨e )￨3￨e .￨3￨e clone￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e FilterCriteria￨3￨e newc￨3￨e =￨3￨e new￨3￨e Filter￨3￨e (￨3￨e getFolderItem￨3￨e (￨3￨e )￨3￨e .￨3￨e getElement￨3￨e (￨3￨e "filter"￨3￨e )￨3￨e )￨3￨e .￨3￨e getFilterRule￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e ;￨3￨e StringBuffer￨3￨e buf￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j newc￨4￨c .￨4￨c getType￨4￨c (￨4￨c )￨4￨c .￨4￨c equalsIgnoreCase￨4￨c (￨4￨c "flags"￨4￨c )￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "flags<seq2seq4repair_space>found"￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getType￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>("￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getCriteriaString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getPattern￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e ")"￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j newc￨4￨c .￨4￨c getType￨4￨c (￨4￨c )￨4￨c .￨4￨c equalsIgnoreCase￨4￨c (￨4￨c "custom<seq2seq4repair_space>headerfield"￨4￨c )￨4￨c )￨3￨j {￨3￨j buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getHeaderItemString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>("￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getCriteriaString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getPattern￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e ")"￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getType￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>("￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getCriteriaString￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>"￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e newc￨4￨e .￨4￨e getPattern￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e buf￨4￨e .￨4￨e append￨4￨e (￨4￨e ")"￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b newFolder￨3￨b .￨3￨b renameFolder￨3￨b (￨3￨b buf￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b treeModel￨3￨e .￨3￨e nodeStructureChanged￨3￨e (￨3￨e searchFolder￨3￨e )￨3￨e ;￨3￨e treeModel￨3￨e .￨3￨e nodeChanged￨3￨e (￨3￨e newFolder￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f applySearch￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f applySearch￨2￨f (￨2￨f MessageFolder￨2￨f parent￨2￨f ,￨2￨f Filter￨2￨f filter￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f DefaultSearchEngine￨2￨f getSearchEngine￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Filter￨2￨f getFilter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getVirtualUid￨2￨f (￨2￨f MessageFolder￨2￨f parent￨2￨f ,￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f ColumbaHeader￨2￨f header￨2￨f ,￨2￨f MessageFolder￨2￨f f￨2￨f ,￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f markMessage￨2￨f (￨2￨f Object￨2￨f [￨2￨f ]￨2￨f uids￨2￨f ,￨2￨f int￨2￨f variant￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f removeMessage￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MimePart￨2￨f getMimePart￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f Integer￨2￨f [￨2￨f ]￨2￨f address￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MimeTree￨2￨f getMimePartTree￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumbaHeader￨2￨f getMessageHeader￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ColumbaMessage￨2￨f getMessage￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f WorkerStatusController￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f searchMessages￨2￨f (￨2￨f Filter￨2￨f filter￨2￨f ,￨2￨f Object￨2￨f [￨2￨f ]￨2￨f uids￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f searchMessages￨2￨f (￨2￨f Filter￨2￨f filter￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDefaultChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f XmlElement￨2￨f getDefaultProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FolderCommandReference￨2￨f [￨2￨f ]￨2￨f getCommandReference￨2￨f (￨2￨f FolderCommandReference￨3￨p [￨3￨p ]￨3￨p r￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f tryToGetLock￨2￨f (￨2￨f Object￨3￨p locker￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f [￨2￨f ]￨2￨f getUids￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f addMessage￨2￨f (￨2￨f InputStream￨2￨f in￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getAttribute￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f String￨2￨f key￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Flags￨2￨f getFlags￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Header￨2￨f getHeaderFields￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f keys￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getMessageSourceStream￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getMimePartBodyStream￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f Integer￨2￨f [￨2￨f ]￨2￨f address￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InputStream￨2￨f getMimePartSourceStream￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f Integer￨2￨f [￨2￨f ]￨2￨f address￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsAddMessage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsAddFolder￨2￨f (￨2￨f AbstractFolder￨3￨p newFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f innerCopy￨2￨f (￨2￨f MailboxInterface￨3￨p destFolder￨3￨p ,￨3￨p Object￨3￨p [￨3￨p ]￨3￨p uids￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAttribute￨2￨f (￨2￨f Object￨2￨f uid￨2￨f ,￨2￨f String￨2￨f key￨2￨f ,￨2￨f Object￨2￨f value￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Attributes￨2￨f getAttributes￨2￨f (￨2￨f Object￨2￨f uid￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f addMessage￨2￨f (￨2￨f InputStream￨2￨f in￨2￨f ,￨2￨f Attributes￨2￨f attributes￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f HeaderListStorage￨2￨f getHeaderListStorage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d WebConnectorMetrics￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d static￨2￨e WebConnectorMetrics￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e WebConnectorMetrics￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e BYTES_SENT￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e BYTES_SENT￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e BYTES_RECEIVED￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e BYTES_RECEIVED￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e PROCESSING_TIME￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e PROCESSING_TIME￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e ERROR_COUNT￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e ERROR_COUNT￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e MAX_TIME￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e MAX_TIME￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e SimpleAttributeDefinition￨2￨e REQUEST_COUNT￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e SimpleAttributeDefinitionBuilder￨2￨e (￨2￨e Constants￨2￨e .￨2￨e REQUEST_COUNT￨2￨e ,￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e dmr￨2￨e .￨2￨e ModelType￨2￨e .￨2￨e INT￨2￨e ,￨2￨e true￨2￨e )￨2￨e .￨2￨e setStorageRuntime￨2￨e (￨2￨e )￨2￨e .￨2￨e build￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Deprecated￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f ATTRIBUTES_OLD￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e static￨2￨f final￨2￨f SimpleAttributeDefinition￨2￨f [￨2￨f ]￨2￨f ATTRIBUTES￨2￨f =￨2￨f new￨2￨f SimpleAttributeDefinition￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j context￨4￨c .￨4￨c isNormalServer￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨f .￨4￨f addStep￨4￨f (￨4￨f new￨4￨f OperationStepHandler￨4￨f (￨4￨f )￨4￨f {￨4￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f execute￨5￨f (￨5￨f OperationContext￨5￨f context￨5￨f ,￨5￨f ModelNode￨5￨f operation￨5￨f )￨5￨f throws￨5￨f OperationFailedException￨5￨f (￨5￨f )￨5￨f {￨5￨f final￨6￨e PathAddress￨6￨e address￨6￨e =￨6￨e PathAddress￨6￨e .￨6￨e pathAddress￨6￨e (￨6￨e operation￨6￨e .￨6￨e require￨6￨e (￨6￨e OP_ADDR￨6￨e )￨6￨e )￨6￨e ;￨6￨e final￨6￨e String￨6￨e name￨6￨e =￨6￨e address￨6￨e .￨6￨e getLastElement￨6￨e (￨6￨e )￨6￨e .￨6￨e getValue￨6￨e (￨6￨e )￨6￨e ;￨6￨e final￨6￨e String￨6￨e attributeName￨6￨e =￨6￨e operation￨6￨e .￨6￨e require￨6￨e (￨6￨e NAME￨6￨e )￨6￨e .￨6￨e asString￨6￨e (￨6￨e )￨6￨e ;￨6￨e final￨6￨e ServiceController￨6￨e <￨6￨e ?￨6￨e >￨6￨e controller￨6￨e =￨6￨e context￨6￨e .￨6￨e getServiceRegistry￨6￨e (￨6￨e false￨6￨e )￨6￨e .￨6￨e getService￨6￨e (￨6￨e JBOSS_WEB_CONNECTOR￨6￨e .￨6￨e append￨6￨e (￨6￨e name￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j controller￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j try￨7￨f (￨7￨f )￨7￨f {￨7￨f final￨8￨e Connector￨8￨e connector￨8￨e =￨8￨e (￨8￨e (￨8￨e Connector￨8￨e )￨8￨e (￨8￨e controller￨8￨e .￨8￨e getValue￨8￨e (￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e final￨8￨e ModelNode￨8￨e result￨8￨e =￨8￨e context￨8￨e .￨8￨e getResult￨8￨e (￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c (￨9￨c connector￨9￨c .￨9￨c getProtocolHandler￨9￨c (￨9￨c )￨9￨c )￨9￨c !=￨9￨c null￨9￨c )￨9￨c &&￨9￨c (￨9￨c (￨9￨c connector￨9￨c .￨9￨c getProtocolHandler￨9￨c (￨9￨c )￨9￨c .￨9￨c getRequestGroupInfo￨9￨c (￨9￨c )￨9￨c )￨9￨c !=￨9￨c null￨9￨c )￨9￨c )￨8￨j {￨8￨j RequestGroupInfo￨9￨e info￨9￨e =￨9￨e connector￨9￨e .￨9￨e getProtocolHandler￨9￨e (￨9￨e )￨9￨e .￨9￨e getRequestGroupInfo￨9￨e (￨9￨e )￨9￨e ;￨9￨e if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c BYTES_SENT￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getBytesSent￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c BYTES_RECEIVED￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getBytesReceived￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c PROCESSING_TIME￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getProcessingTime￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c ERROR_COUNT￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getErrorCount￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c MAX_TIME￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getMaxTime￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j if￨9￨j (￨9￨j Constants￨10￨c .￨10￨c REQUEST_COUNT￨10￨c .￨10￨c equals￨10￨c (￨10￨c attributeName￨10￨c )￨10￨c )￨9￨j {￨9￨j result￨10￨e .￨10￨e set￨10￨e (￨10￨e (￨10￨e ""￨10￨e +￨10￨e (￨10￨e info￨10￨e .￨10￨e getRequestCount￨10￨e (￨10￨e )￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j }￨8￨j }￨7￨f catch￨7￨f (￨7￨f Exception￨8￨p e￨8￨p )￨7￨f {￨7￨f throw￨8￨e new￨8￨e OperationFailedException￨8￨e (￨8￨e new￨8￨e ModelNode￨8￨e (￨8￨e )￨8￨e .￨8￨e set￨8￨e (￨8￨e WebMessages￨8￨e .￨8￨e MESSAGES￨8￨e .￨8￨e failedToGetMetrics￨8￨e (￨8￨e e￨8￨e .￨8￨e getMessage￨8￨e (￨8￨e )￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨j else￨6￨j {￨6￨j context￨7￨e .￨7￨e getResult￨7￨e (￨7￨e )￨7￨e .￨7￨e set￨7￨e (￨7￨e WebMessages￨7￨e .￨7￨e MESSAGES￨7￨e .￨7￨e noMetricsAvailable￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j context￨6￨e .￨6￨e completeStep￨6￨e (￨6￨e NOOP_ROLLBACK_HANDLER￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨f ,￨4￨e RUNTIME￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e WebMessages￨4￨e .￨4￨e MESSAGES￨4￨e .￨4￨e noMetricsAvailable￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b context￨3￨b .￨3￨b completeStep￨3￨b (￨3￨b NOOP_ROLLBACK_HANDLER￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d public￨2￨f void￨2￨f deselectAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f dropDown￨2￨f (￨2￨f boolean￨3￨p drop￨3￨p )￨2￨f {￨2￨f }￨2￨f Label￨2￨f getAssociatedLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f [￨2￨f ]￨2￨f getChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getEditable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getItem￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getItemHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getItems￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f char￨2￨f getMnemonic￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSelectionIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTextHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTextLimit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getVisibleItemCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f handleFocus￨2￨f (￨2￨f int￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f indexOf￨2￨f (￨2￨f String￨3￨p string￨3￨p ,￨3￨p int￨3￨p start￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f initAccessible￨2￨f (￨2￨f )￨2￨f {￨2￨f AccessibleAdapter￨3￨f accessibleAdapter￨3￨f =￨3￨f new￨3￨f AccessibleAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getName￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f String￨5￨e name￨5￨e =￨5￨e null￨5￨e ;￨5￨e Label￨5￨e label￨5￨e =￨5￨e getAssociatedLabel￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j label￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j name￨6￨e =￨6￨e stripMnemonic￨6￨e (￨6￨e label￨6￨e .￨6￨e getText￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j e￨5￨e .￨5￨e result￨5￨e =￨5￨e name￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getKeyboardShortcut￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f String￨5￨e shortcut￨5￨e =￨5￨e null￨5￨e ;￨5￨e Label￨5￨e label￨5￨e =￨5￨e getAssociatedLabel￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j label￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j String￨6￨e text￨6￨e =￨6￨e label￨6￨e .￨6￨e getText￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j text￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j char￨7￨e mnemonic￨7￨e =￨7￨e getMnemonic￨7￨e (￨7￨e text￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j mnemonic￨8￨c !=￨8￨c ' '￨8￨c )￨7￨j {￨7￨j shortcut￨8￨e =￨8￨e "Alt+"￨8￨e +￨8￨e mnemonic￨8￨e ;￨8￨e }￨7￨j }￨6￨j }￨5￨j e￨5￨e .￨5￨e result￨5￨e =￨5￨e shortcut￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getHelp￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e result￨5￨e =￨5￨e getToolTipText￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e getAccessible￨3￨e (￨3￨e )￨3￨e .￨3￨e addAccessibleListener￨3￨e (￨3￨e accessibleAdapter￨3￨e )￨3￨e ;￨3￨e text￨3￨e .￨3￨e getAccessible￨3￨e (￨3￨e )￨3￨e .￨3￨e addAccessibleListener￨3￨e (￨3￨e accessibleAdapter￨3￨e )￨3￨e ;￨3￨e list￨3￨e .￨3￨e getAccessible￨3￨e (￨3￨e )￨3￨e .￨3￨e addAccessibleListener￨3￨e (￨3￨e accessibleAdapter￨3￨e )￨3￨e ;￨3￨e arrow￨3￨f .￨3￨f getAccessible￨3￨f (￨3￨f )￨3￨f .￨3￨f addAccessibleListener￨3￨f (￨3￨f new￨3￨f AccessibleAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getName￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e result￨5￨e =￨5￨e (￨5￨e isDropped￨5￨e (￨5￨e )￨5￨e )￨5￨e ?￨5￨e "Close"￨5￨e :￨5￨e "Open"￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getKeyboardShortcut￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e result￨5￨e =￨5￨e "Alt+Down<seq2seq4repair_space>Arrow"￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getHelp￨4￨f (￨4￨f AccessibleEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e result￨5￨e =￨5￨e getToolTipText￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e getAccessible￨3￨f (￨3￨f )￨3￨f .￨3￨f addAccessibleTextListener￨3￨f (￨3￨f new￨3￨f AccessibleTextAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getCaretOffset￨4￨f (￨4￨f AccessibleTextEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e offset￨5￨e =￨5￨e text￨5￨e .￨5￨e getCaretPosition￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e getAccessible￨3￨f (￨3￨f )￨3￨f .￨3￨f addAccessibleControlListener￨3￨f (￨3￨f new￨3￨f AccessibleControlAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getChildAtPoint￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f Point￨5￨e testPoint￨5￨e =￨5￨e toControl￨5￨e (￨5￨e e￨5￨e .￨5￨e x￨5￨e ,￨5￨e e￨5￨e .￨5￨e y￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j getBounds￨6￨c (￨6￨c )￨6￨c .￨6￨c contains￨6￨c (￨6￨c testPoint￨6￨c )￨6￨c )￨5￨j {￨5￨j e￨6￨e .￨6￨e childID￨6￨e =￨6￨e ACC￨6￨e .￨6￨e CHILDID_SELF￨6￨e ;￨6￨e }￨5￨j }￨4￨f public￨4￨f void￨4￨f getLocation￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f Rectangle￨5￨e location￨5￨e =￨5￨e getBounds￨5￨e (￨5￨e )￨5￨e ;￨5￨e Point￨5￨e pt￨5￨e =￨5￨e toDisplay￨5￨e (￨5￨e location￨5￨e .￨5￨e x￨5￨e ,￨5￨e location￨5￨e .￨5￨e y￨5￨e )￨5￨e ;￨5￨e e￨5￨e .￨5￨e x￨5￨e =￨5￨e pt￨5￨e .￨5￨e x￨5￨e ;￨5￨e e￨5￨e .￨5￨e y￨5￨e =￨5￨e pt￨5￨e .￨5￨e y￨5￨e ;￨5￨e e￨5￨e .￨5￨e width￨5￨e =￨5￨e location￨5￨e .￨5￨e width￨5￨e ;￨5￨e e￨5￨e .￨5￨e height￨5￨e =￨5￨e location￨5￨e .￨5￨e height￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getChildCount￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e detail￨5￨e =￨5￨e 0￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getRole￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e detail￨5￨e =￨5￨e ACC￨5￨e .￨5￨e ROLE_COMBOBOX￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getState￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e detail￨5￨e =￨5￨e ACC￨5￨e .￨5￨e STATE_NORMAL￨5￨e ;￨5￨e }￨4￨f public￨4￨f void￨4￨f getValue￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e result￨5￨e =￨5￨e getText￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e text￨3￨f .￨3￨f getAccessible￨3￨f (￨3￨f )￨3￨f .￨3￨f addAccessibleControlListener￨3￨f (￨3￨f new￨3￨f AccessibleControlAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getRole￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f e￨5￨e .￨5￨e detail￨5￨e =￨5￨e (￨5￨e text￨5￨e .￨5￨e getEditable￨5￨e (￨5￨e )￨5￨e )￨5￨e ?￨5￨e ACC￨5￨e .￨5￨e ROLE_TEXT￨5￨e :￨5￨e ACC￨5￨e .￨5￨e ROLE_LABEL￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e arrow￨3￨f .￨3￨f getAccessible￨3￨f (￨3￨f )￨3￨f .￨3￨f addAccessibleControlListener￨3￨f (￨3￨f new￨3￨f AccessibleControlAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f getDefaultAction￨4￨f (￨4￨f AccessibleControlEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f <START_BUG>￨5￨b e￨5￨b .￨5￨b result￨5￨b =￨5￨b (￨5￨b isDropped￨5￨b (￨5￨b )￨5￨b )￨5￨b ?￨5￨b "Close"￨5￨b :￨5￨b "Open"￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f }￨3￨f )￨3￨e ;￨3￨e }￨2￨f boolean￨2￨f isDropped￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFocusControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f internalLayout￨2￨f (￨2￨f boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f listEvent￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f popupEvent￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f redraw￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f redraw￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f int￨3￨p start￨3￨p ,￨3￨p int￨3￨p end￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeModifyListener￨2￨f (￨2￨f ModifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f select￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBackground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEditable￨2￨f (￨2￨f boolean￨3￨p editable￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnabled￨2￨f (￨2￨f boolean￨3￨p enabled￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f setFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFont￨2￨f (￨2￨f Font￨3￨p font￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setForeground￨2￨f (￨2￨f Color￨3￨p color￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setItem￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setItems￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p items￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLayout￨2￨f (￨2￨f Layout￨3￨p layout￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f Point￨3￨p selection￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTextLimit￨2￨f (￨2￨f int￨3￨p limit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setToolTipText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisible￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisibleItemCount￨2￨f (￨2￨f int￨3￨p count￨3￨p )￨2￨f {￨2￨f }￨2￨f String￨2￨f stripMnemonic￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f textEvent￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AjaxTimerBehaviorTest￨1￨d extends￨1￨d WicketTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d AjaxTimerBehaviorTest￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d AjaxTimerBehaviorTest￨2￨d (￨2￨d String￨2￨d name￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f testAddToAjaxUpdate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddToWebPage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f validate￨2￨f (￨2￨f AjaxTimerBehaviorTest￨3￨p .￨3￨p MyAjaxSelfUpdatingTimerBehavior￨3￨p timer￨3￨p ,￨3￨p boolean￨3￨p inBodyOnLoad￨3￨p )￨2￨f {￨2￨f String￨3￨e document￨3￨e =￨3￨e tester￨3￨e .￨3￨e getServletResponse￨3￨e (￨3￨e )￨3￨e .￨3￨e getDocument￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e updateScript￨3￨e =￨3￨e timer￨3￨e .￨3￨e getUpdateScript￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j inBodyOnLoad￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b String￨4￨b bodyOnLoadUpdateScript￨4￨b =￨4￨b (￨4￨b "Wicket.Event.add(window,<seq2seq4repair_space>\"load\",<seq2seq4repair_space>function()<seq2seq4repair_space>{<seq2seq4repair_space>"￨4￨b +￨4￨b updateScript￨4￨b )￨4￨b +￨4￨b ";});"￨4￨b ;￨4￨b <END_BUG>￨4￨b validateTimerScript￨4￨e (￨4￨e document￨4￨e ,￨4￨e bodyOnLoadUpdateScript￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j validateTimerScript￨4￨e (￨4￨e document￨4￨e ,￨4￨e updateScript￨4￨e )￨4￨e ;￨4￨e }￨3￨j tester￨3￨e .￨3￨e executeBehavior￨3￨e (￨3￨e timer￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j inBodyOnLoad￨4￨c )￨3￨j {￨3￨j updateScript￨4￨e =￨4￨e timer￨4￨e .￨4￨e getUpdateScript￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j document￨3￨e =￨3￨e tester￨3￨e .￨3￨e getServletResponse￨3￨e (￨3￨e )￨3￨e .￨3￨e getDocument￨3￨e (￨3￨e )￨3￨e ;￨3￨e validateTimerScript￨3￨e (￨3￨e document￨3￨e ,￨3￨e updateScript￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f validateTimerScript￨2￨f (￨2￨f String￨3￨p document￨3￨p ,￨3￨p String￨3￨p updateScript￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f quote￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d MyAjaxSelfUpdatingTimerBehavior￨2￨d extends￨2￨d AjaxSelfUpdatingTimerBehavior￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e final￨3￨e Duration￨3￨e duration￨3￨e ;￨3￨e String￨3￨e updateScript￨3￨e ;￨3￨e public￨3￨f MyAjaxSelfUpdatingTimerBehavior￨3￨f (￨3￨f Duration￨4￨p updateInterval￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f onComponentRendered￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getUpdateScript￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d GenericSubsystemDescribeHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e GenericSubsystemDescribeHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e GenericSubsystemDescribeHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨f GenericSubsystemDescribeHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f final￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f describe￨2￨f (￨2￨f final￨3￨p Resource￨3￨p resource￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p address￨3￨p ,￨3￨p ModelNode￨3￨p result￨3￨p ,￨3￨p final￨3￨p ImmutableManagementResourceRegistration￨3￨p registration￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b registration￨3￨b .￨3￨b isRemote￨3￨b (￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b registration￨3￨b .￨3￨b isRuntimeOnly￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b resource￨3￨b .￨3￨b isProxy￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b resource￨3￨b .￨3￨b isRuntime￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e }￨3￨e final￨3￨e Set￨3￨e <￨3￨e PathElement￨3￨e >￨3￨e children￨3￨e =￨3￨e registration￨3￨e .￨3￨e getChildAddresses￨3￨e (￨3￨e EMPTY_ADDRESS￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e add￨3￨e (￨3￨e createAddOperation￨3￨e (￨3￨e address￨3￨e ,￨3￨e resource￨3￨e .￨3￨e getModel￨3￨e (￨3￨e )￨3￨e ,￨3￨e children￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c PathElement￨4￨c element￨4￨c :￨4￨c children￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j element￨5￨c .￨5￨c isMultiTarget￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j final￨5￨e String￨5￨e childType￨5￨e =￨5￨e element￨5￨e .￨5￨e getKey￨5￨e (￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l final￨6￨c Resource￨6￨c .￨6￨c ResourceEntry￨6￨c entry￨6￨c :￨6￨c resource￨6￨c .￨6￨c getChildren￨6￨c (￨6￨c childType￨6￨c )￨6￨c )￨5￨l {￨5￨l final￨6￨e ImmutableManagementResourceRegistration￨6￨e childRegistration￨6￨e =￨6￨e registration￨6￨e .￨6￨e getSubModel￨6￨e (￨6￨e PathAddress￨6￨e .￨6￨e pathAddress￨6￨e (￨6￨e PathElement￨6￨e .￨6￨e pathElement￨6￨e (￨6￨e childType￨6￨e ,￨6￨e entry￨6￨e .￨6￨e getName￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e final￨6￨e ModelNode￨6￨e childAddress￨6￨e =￨6￨e address￨6￨e .￨6￨e clone￨6￨e (￨6￨e )￨6￨e ;￨6￨e childAddress￨6￨e .￨6￨e add￨6￨e (￨6￨e childType￨6￨e ,￨6￨e entry￨6￨e .￨6￨e getName￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e describe￨6￨e (￨6￨e entry￨6￨e ,￨6￨e childAddress￨6￨e ,￨6￨e result￨6￨e ,￨6￨e childRegistration￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j else￨4￨j {￨4￨j final￨5￨e Resource￨5￨e child￨5￨e =￨5￨e resource￨5￨e .￨5￨e getChild￨5￨e (￨5￨e element￨5￨e )￨5￨e ;￨5￨e final￨5￨e ImmutableManagementResourceRegistration￨5￨e childRegistration￨5￨e =￨5￨e registration￨5￨e .￨5￨e getSubModel￨5￨e (￨5￨e PathAddress￨5￨e .￨5￨e pathAddress￨5￨e (￨5￨e element￨5￨e )￨5￨e )￨5￨e ;￨5￨e final￨5￨e ModelNode￨5￨e childAddress￨5￨e =￨5￨e address￨5￨e .￨5￨e clone￨5￨e (￨5￨e )￨5￨e ;￨5￨e childAddress￨5￨e .￨5￨e add￨5￨e (￨5￨e element￨5￨e .￨5￨e getKey￨5￨e (￨5￨e )￨5￨e ,￨5￨e element￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e describe￨5￨e (￨5￨e child￨5￨e ,￨5￨e childAddress￨5￨e ,￨5￨e result￨5￨e ,￨5￨e childRegistration￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f protected￨2￨f ModelNode￨2￨f createAddOperation￨2￨f (￨2￨f final￨3￨p ModelNode￨3￨p address￨3￨p ,￨3￨p final￨3￨p ModelNode￨3￨p subModel￨3￨p ,￨3￨p final￨3￨p Set￨3￨p <￨3￨p PathElement￨3￨p >￨3￨p children￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RaActivate￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e RaActivate￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e RaActivate￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ModelNode￨3￨e address￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e idName￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e address￨3￨e )￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e raName￨3￨e =￨3￨e context￨3￨e .￨3￨e readResource￨3￨e (￨3￨e EMPTY_ADDRESS￨3￨e )￨3￨e .￨3￨e getModel￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e "archive"￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j context￨4￨c .￨4￨c isNormalServer￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨f .￨4￨f addStep￨4￨f (￨4￨f new￨4￨f OperationStepHandler￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f void￨5￨f execute￨5￨f (￨5￨f final￨5￨f OperationContext￨5￨f context￨5￨f ,￨5￨f ModelNode￨5￨f operation￨5￨f )￨5￨f throws￨5￨f OperationFailedException￨5￨f (￨5￨f )￨5￨f {￨5￨f final￨6￨e ServiceVerificationHandler￨6￨e svh￨6￨e =￨6￨e new￨6￨e ServiceVerificationHandler￨6￨e (￨6￨e )￨6￨e ;￨6￨e ServiceName￨6￨e restartedServiceName￨6￨e =￨6￨e RaOperationUtil￨6￨e .￨6￨e restartIfPresent￨6￨e (￨6￨e context￨6￨e ,￨6￨e raName￨6￨e ,￨6￨e idName￨6￨e ,￨6￨e svh￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j restartedServiceName￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j RaOperationUtil￨7￨e .￨7￨e activate￨7￨e (￨7￨e context￨7￨e ,￨7￨e idName￨7￨e ,￨7￨e svh￨7￨e )￨7￨e ;￨7￨e }￨6￨j context￨6￨e .￨6￨e addStep￨6￨e (￨6￨e svh￨6￨e ,￨6￨e VERIFY￨6￨e )￨6￨e ;￨6￨e context￨6￨f .￨6￨f completeStep￨6￨f (￨6￨f new￨6￨f OperationContext￨6￨f .￨6￨f RollbackHandler￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f handleRollback￨7￨f (￨7￨f OperationContext￨8￨p context￨8￨p ,￨8￨p ModelNode￨8￨p operation￨8￨p )￨7￨f {￨7￨f try￨8￨f (￨8￨f )￨8￨f {￨8￨f <START_BUG>￨9￨b RaOperationUtil￨9￨b .￨9￨b removeIfActive￨9￨b (￨9￨b context￨9￨b ,￨9￨b raName￨9￨b )￨9￨b ;￨9￨b <END_BUG>￨9￨b }￨8￨f catch￨8￨f (￨8￨f OperationFailedException￨9￨p e￨9￨p )￨8￨f {￨8￨f }￨8￨f }￨7￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨f }￨4￨f ,￨4￨e RUNTIME￨4￨e )￨4￨e ;￨4￨e }￨3￨j context￨3￨e .￨3￨e stepCompleted￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d ServerInModuleDeploymentTestCase￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDeploymentStreamApi￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDeploymentFileApi￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testFilesystemScannerRegistration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testFilesystemDeployment_Marker￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testFilesystemDeployment_Auto￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testExplodedFilesystemDeployment￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ModelNode￨2￨f addDeploymentScanner￨2￨f (￨2￨f final￨2￨f File￨2￨f deployDir￨2￨f ,￨2￨f final￨2￨f ModelControllerClient￨2￨f client￨2￨f ,￨2￨f final￨2￨f String￨2￨f scannerName￨2￨f ,￨2￨f final￨2￨f boolean￨2￨f autoDeployZipped￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f removeDeploymentScanner￨2￨f (￨2￨f final￨2￨f ModelControllerClient￨2￨f client￨2￨f ,￨2￨f final￨2￨f String￨2￨f scannerName￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f createDeploymentDir￨2￨f (￨2￨f String￨3￨p dir￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f testDeployments￨2￨f (￨2￨f ModelControllerClient￨2￨f client￨2￨f ,￨2￨f ServerInModuleDeploymentTestCase￨2￨f .￨2￨f DeploymentExecutor￨2￨f deploymentExecutor￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b MBeanServerConnection￨3￨b mbeanServer￨3￨b =￨3￨b JMXConnectorFactory￨3￨b .￨3￨b connect￨3￨b (￨3￨b new￨3￨b JMXServiceURL￨3￨b (￨3￨b "service:jmx:remote://127.0.0.1:9999"￨3￨b )￨3￨b )￨3￨b .￨3￨b getMBeanServerConnection￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ObjectName￨3￨e name￨3￨e =￨3￨e new￨3￨e ObjectName￨3￨e (￨3￨e "jboss.test:service=testdeployments"￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f deploymentExecutor￨4￨e .￨4￨e initialDeploy￨4￨e (￨4￨e )￨4￨e ;￨4￨e PollingUtils￨4￨e .￨4￨e retryWithTimeout￨4￨e (￨4￨e 10000￨4￨e ,￨4￨e new￨4￨e PollingUtils￨4￨e .￨4￨e WaitForMBeanTask￨4￨e (￨4￨e mbeanServer￨4￨e ,￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e Assert￨4￨e .￨4￨e assertNotNull￨4￨e (￨4￨e mbeanServer￨4￨e .￨4￨e getMBeanInfo￨4￨e (￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e deploymentExecutor￨4￨e .￨4￨e fullReplace￨4￨e (￨4￨e )￨4￨e ;￨4￨e PollingUtils￨4￨e .￨4￨e retryWithTimeout￨4￨e (￨4￨e 10000￨4￨e ,￨4￨e new￨4￨e PollingUtils￨4￨e .￨4￨e WaitForMBeanTask￨4￨e (￨4￨e mbeanServer￨4￨e ,￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e Assert￨4￨e .￨4￨e assertNotNull￨4￨e (￨4￨e mbeanServer￨4￨e .￨4￨e getMBeanInfo￨4￨e (￨4￨e name￨4￨e )￨4￨e )￨4￨e ;￨4￨e deploymentExecutor￨4￨e .￨4￨e undeploy￨4￨e (￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f long￨5￨e start￨5￨e =￨5￨e System￨5￨e .￨5￨e currentTimeMillis￨5￨e (￨5￨e )￨5￨e ;￨5￨e while￨5￨l (￨5￨l (￨6￨c (￨6￨c System￨6￨c .￨6￨c currentTimeMillis￨6￨c (￨6￨c )￨6￨c )￨6￨c -￨6￨c start￨6￨c )￨6￨c <￨6￨c 10000￨6￨c )￨5￨l {￨5￨l mbeanServer￨6￨e .￨6￨e getMBeanInfo￨6￨e (￨6￨e name￨6￨e )￨6￨e ;￨6￨e Thread￨6￨e .￨6￨e sleep￨6￨e (￨6￨e 100￨6￨e )￨6￨e ;￨6￨e }￨5￨l Assert￨5￨e .￨5￨e fail￨5￨e (￨5￨e "Should<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>found<seq2seq4repair_space>MBean"￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p expected￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨f void￨2￨f awaitDeploymentExecution￨2￨f (￨2￨f Future￨3￨p <￨3￨p ?￨3￨p >￨3￨p future￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f cleanFile￨2￨f (￨2￨f File￨3￨p toClean￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f interface￨2￨f DeploymentExecutor￨2￨f (￨2￨f )￨2￨f {￨2￨f void￨3￨f initialDeploy￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f fullReplace￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f undeploy￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d TestNotificationListener￨2￨d implements￨2￨d NotificationListener￨2￨d {￨2￨d private￨3￨e final￨3￨e ObjectName￨3￨e name￨3￨e ;￨3￨e private￨3￨e volatile￨3￨e CountDownLatch￨3￨e latch￨3￨e =￨3￨e new￨3￨e CountDownLatch￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e private￨3￨f TestNotificationListener￨3￨f (￨3￨f ObjectName￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f handleNotification￨3￨f (￨3￨f Notification￨4￨p notification￨4￨p ,￨4￨p Object￨4￨p handback￨4￨p )￨3￨f {￨3￨f }￨3￨f void￨3￨f reset￨3￨f (￨3￨f int￨4￨p i￨4￨p )￨3￨f {￨3￨f }￨3￨f void￨3￨f await￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ImportDeclaration￨1￨d extends￨1￨d SourceRefElement￨1￨d implements￨1￨d IImportDeclaration￨1￨d {￨1￨d protected￨2￨e String￨2￨e name￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e isOnDemand￨2￨e ;￨2￨e protected￨2￨f ImportDeclaration￨2￨f (￨2￨f ImportContainer￨3￨p parent￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p boolean￨3￨p isOnDemand￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getElementName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getNameWithoutStar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getElementType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getFlags￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f getHandleMemento￨2￨f (￨2￨f StringBuffer￨3￨p buff￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f char￨2￨f getHandleMementoDelimiter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaElement￨2￨f getPrimaryElement￨2￨f (￨2￨f boolean￨3￨p checkOwner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isOnDemand￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f readableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f toStringInfo￨2￨f (￨2￨f int￨3￨p tab￨3￨p ,￨3￨p StringBuffer￨3￨p buffer￨3￨p ,￨3￨p Object￨3￨p info￨3￨p ,￨3￨p boolean￨3￨p showResolvedInfo￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b buffer￨3￨b .￨3￨b append￨3￨b (￨3￨b this￨3￨b .￨3￨b tabString￨3￨b (￨3￨b tab￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b buffer￨3￨e .￨3￨e append￨3￨e (￨3￨e "import<seq2seq4repair_space>"￨3￨e )￨3￨e ;￨3￨e toStringName￨3￨e (￨3￨e buffer￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j info￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j buffer￨4￨e .￨4￨e append￨4￨e (￨4￨e "<seq2seq4repair_space>(not<seq2seq4repair_space>open)"￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MethodInvokingJobDetailFactoryBean￨1￨d extends￨1￨d ArgumentConvertingMethodInvoker￨1￨d implements￨1￨d BeanClassLoaderAware￨1￨d ,￨1￨d BeanFactoryAware￨1￨d ,￨1￨d BeanNameAware￨1￨d ,￨1￨d FactoryBean￨1￨d <￨1￨d Object￨1￨d >￨1￨d ,￨1￨d InitializingBean￨1￨d {￨1￨d private￨2￨e String￨2￨e name￨2￨e ;￨2￨e private￨2￨e String￨2￨e group￨2￨e =￨2￨e Scheduler￨2￨e .￨2￨e DEFAULT_GROUP￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e concurrent￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e String￨2￨e targetBeanName￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e jobListenerNames￨2￨e ;￨2￨e private￨2￨e String￨2￨e beanName￨2￨e ;￨2￨e private￨2￨e ClassLoader￨2￨e beanClassLoader￨2￨e =￨2￨e ClassUtils￨2￨e .￨2￨e getDefaultClassLoader￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e BeanFactory￨2￨e beanFactory￨2￨e ;￨2￨e private￨2￨e JobDetail￨2￨e jobDetail￨2￨e ;￨2￨e public￨2￨f void￨2￨f setName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setGroup￨2￨f (￨2￨f String￨3￨p group￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConcurrent￨2￨f (￨2￨f boolean￨3￨p concurrent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTargetBeanName￨2￨f (￨2￨f String￨3￨p targetBeanName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setJobListenerNames￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p names￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBeanName￨2￨f (￨2￨f String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBeanClassLoader￨2￨f (￨2￨f ClassLoader￨3￨p classLoader￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBeanFactory￨2￨f (￨2￨f BeanFactory￨3￨p beanFactory￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Class￨2￨f resolveClassName￨2￨f (￨2￨f String￨2￨f className￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f afterPropertiesSet￨2￨f (￨2￨f )￨2￨f throws￨2￨f ClassNotFoundException￨2￨f ,￨2￨f NoSuchMethodException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f postProcessJobDetail￨2￨f (￨2￨f JobDetail￨3￨p jobDetail￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Class￨2￨f getTargetClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Object￨2￨f getTargetObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f getObjectType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSingleton￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d MethodInvokingJob￨2￨d extends￨2￨d QuartzJobBean￨2￨d {￨2￨d protected￨3￨d static￨3￨d final￨3￨d Log￨3￨d logger￨3￨d =￨3￨d LogFactory￨3￨d .￨3￨d getLog￨3￨d (￨3￨d MethodInvokingJobDetailFactoryBean￨3￨d .￨3￨d MethodInvokingJob￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d private￨3￨d MethodInvoker￨3￨d methodInvoker￨3￨d ;￨3￨d public￨3￨d void￨3￨d setMethodInvoker￨3￨d (￨3￨d MethodInvoker￨3￨d methodInvoker￨3￨d )￨3￨d {￨3￨d }￨3￨d @￨3￨f Override￨3￨f protected￨3￨f void￨3￨f executeInternal￨3￨f (￨3￨f JobExecutionContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f JobExecutionException￨3￨f (￨3￨f )￨3￨f {￨3￨f try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b this￨5￨b .￨5￨b methodInvoker￨5￨b .￨5￨b invoke￨5￨b (￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f InvocationTargetException￨5￨p ex￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c ex￨6￨c .￨6￨c getTargetException￨6￨c (￨6￨c )￨6￨c )￨6￨c instanceof￨6￨c JobExecutionException￨6￨c )￨5￨j {￨5￨j throw￨6￨e (￨6￨e (￨6￨e JobExecutionException￨6￨e )￨6￨e (￨6￨e ex￨6￨e .￨6￨e getTargetException￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j throw￨6￨e new￨6￨e JobMethodInvocationFailedException￨6￨e (￨6￨e this￨6￨e .￨6￨e methodInvoker￨6￨e ,￨6￨e ex￨6￨e .￨6￨e getTargetException￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f catch￨4￨f (￨4￨f Exception￨5￨p ex￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e JobMethodInvocationFailedException￨5￨e (￨5￨e this￨5￨e .￨5￨e methodInvoker￨5￨e ,￨5￨e ex￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StatefulMethodInvokingJob￨2￨d extends￨2￨d MethodInvokingJobDetailFactoryBean￨2￨d .￨2￨d MethodInvokingJob￨2￨d implements￨2￨d StatefulJob￨2￨d {￨2￨d }￨2￨d }￨1￨d
public￨1￨d class￨1￨d WithinPointcut￨1￨d extends￨1￨d Pointcut￨1￨d {￨1￨d TypePattern￨2￨e type￨2￨e ;￨2￨e public￨2￨f WithinPointcut￨2￨f (￨2￨f TypePattern￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f match￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Pointcut￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b type￨3￨b =￨3￨b type￨3￨b .￨3￨b resolveBindings￨3￨b (￨3￨b scope￨3￨b ,￨3￨b bindings￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f postRead￨2￨f (￨2￨f ResolvedTypeX￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Test￨2￨f findResidue￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p ,￨3￨p ExposedState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Pointcut￨2￨f concretize1￨2￨f (￨2￨f ResolvedTypeX￨3￨p inAspect￨3￨p ,￨3￨p IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d VFSResourceLoader￨1￨d implements￨1￨d ResourceLoader￨1￨d {￨1￨d private￨2￨e final￨2￨e ModuleIdentifier￨2￨e moduleIdentifier￨2￨e ;￨2￨e private￨2￨e final￨2￨e VirtualFile￨2￨e root￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e rootName￨2￨e ;￨2￨e private￨2￨e final￨2￨e Manifest￨2￨e manifest￨2￨e ;￨2￨e private￨2￨e final￨2￨e MountHandle￨2￨e mountHandle￨2￨e ;￨2￨e public￨2￨f VFSResourceLoader￨2￨f (￨2￨f final￨2￨f ModuleIdentifier￨2￨f moduleIdentifier￨2￨f ,￨2￨f final￨2￨f String￨2￨f rootName￨2￨f ,￨2￨f final￨2￨f VirtualFile￨2￨f root￨2￨f ,￨2￨f final￨2￨f MountHandle￨2￨f mountHandle￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ClassSpec￨2￨f getClassSpec￨2￨f (￨2￨f final￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PackageSpec￨2￨f getPackageSpec￨2￨f (￨2￨f final￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f getDefinedAttribute￨2￨f (￨2￨f Attributes￨3￨p .￨3￨p Name￨3￨p name￨3￨p ,￨3￨p Attributes￨3￨p entryAttribute￨3￨p ,￨3￨p Attributes￨3￨p mainAttribute￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getLibrary￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getRootName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PathFilter￨2￨f getExportFilter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Resource￨2￨f getResource￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e VirtualFile￨4￨e file￨4￨e =￨4￨e root￨4￨e .￨4￨e getChild￨4￨e (￨4￨e name￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c file￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e null￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b return￨4￨b new￨4￨b VFSResourceLoader￨4￨b .￨4￨b VFSEntryResource￨4￨b (￨4￨b file￨4￨b ,￨4￨b root￨4￨b .￨4￨b toURL￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f MalformedURLException￨4￨p e￨4￨p )￨3￨f {￨3￨f return￨4￨e null￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f String￨2￨f >￨2￨f getPaths￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d VFSEntryResource￨2￨d implements￨2￨d Resource￨2￨d {￨2￨d private￨3￨e final￨3￨e VirtualFile￨3￨e entry￨3￨e ;￨3￨e private￨3￨e final￨3￨e URL￨3￨e resourceURL￨3￨e ;￨3￨e VFSEntryResource￨3￨f (￨3￨f final￨4￨p VirtualFile￨4￨p entry￨4￨p ,￨4￨p final￨4￨p URL￨4￨p resourceURL￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getName￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f URL￨3￨f getURL￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f InputStream￨3￨f openStream￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f long￨3￨f getSize￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ConnectionPropertyAdd￨1￨d extends￨1￨d AbstractAddStepHandler￨1￨d implements￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e ConnectionPropertyAdd￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ConnectionPropertyAdd￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f populateModel￨2￨f (￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f modelNode￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f performRuntime￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f ,￨2￨f ModelNode￨2￨f recoveryEnvModel￨2￨f ,￨2￨f ServiceVerificationHandler￨2￨f verificationHandler￨2￨f ,￨2￨f List￨2￨f <￨2￨f ServiceController￨2￨f <￨2￨f ?￨2￨f >￨2￨f >￨2￨f serviceControllers￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b String￨3￨b configPropertyValue￨3￨b =￨3￨b Constants￨3￨b .￨3￨b CONNECTION_PROPERTY_VALUE￨3￨b .￨3￨b validateResolvedOperation￨3￨b (￨3￨b recoveryEnvModel￨3￨b )￨3￨b .￨3￨b asString￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ModelNode￨3￨e address￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e ;￨3￨e PathAddress￨3￨e path￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e address￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e jndiName￨3￨e =￨3￨e path￨3￨e .￨3￨e getElement￨3￨e (￨3￨e (￨3￨e (￨3￨e path￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e -￨3￨e 2￨3￨e )￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e configPropertyName￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e address￨3￨e )￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e ServiceName￨3￨e serviceName￨3￨e =￨3￨e SERVICE_NAME_BASE￨3￨e .￨3￨e append￨3￨e (￨3￨e jndiName￨3￨e )￨3￨e .￨3￨e append￨3￨e (￨3￨e configPropertyName￨3￨e )￨3￨e ;￨3￨e ServiceName￨3￨e dsServiceName￨3￨e =￨3￨e SERVICE_NAME_BASE￨3￨e .￨3￨e append￨3￨e (￨3￨e jndiName￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceRegistry￨3￨e registry￨3￨e =￨3￨e context￨3￨e .￨3￨e getServiceRegistry￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceName￨3￨e dataSourceConfigServiceName￨3￨e =￨3￨e SERVICE_NAME_BASE￨3￨e .￨3￨e append￨3￨e (￨3￨e jndiName￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceController￨3￨e <￨3￨e ?￨3￨e >￨3￨e dataSourceConfigController￨3￨e =￨3￨e registry￨3￨e .￨3￨e getService￨3￨e (￨3￨e dataSourceConfigServiceName￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c dataSourceConfigController￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c (￨4￨c (￨4￨c org￨4￨c .￨4￨c jboss￨4￨c .￨4￨c jca￨4￨c .￨4￨c common￨4￨c .￨4￨c api￨4￨c .￨4￨c metadata￨4￨c .￨4￨c ds￨4￨c .￨4￨c DataSource￨4￨c )￨4￨c (￨4￨c dataSourceConfigController￨4￨c .￨4￨c getValue￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c .￨4￨c isEnabled￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e ServiceTarget￨4￨e serviceTarget￨4￨e =￨4￨e context￨4￨e .￨4￨e getServiceTarget￨4￨e (￨4￨e )￨4￨e ;￨4￨e final￨4￨e ConnectionPropertiesService￨4￨e service￨4￨e =￨4￨e new￨4￨e ConnectionPropertiesService￨4￨e (￨4￨e configPropertyName￨4￨e ,￨4￨e configPropertyValue￨4￨e )￨4￨e ;￨4￨e serviceTarget￨4￨e .￨4￨e addService￨4￨e (￨4￨e serviceName￨4￨e ,￨4￨e service￨4￨e )￨4￨e .￨4￨e setInitialMode￨4￨e (￨4￨e ACTIVE￨4￨e )￨4￨e .￨4￨e addDependency￨4￨e (￨4￨e dsServiceName￨4￨e ,￨4￨e ModifiableDataSource￨4￨e .￨4￨e class￨4￨e ,￨4￨e service￨4￨e .￨4￨e getDSInjector￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e addListener￨4￨e (￨4￨e verificationHandler￨4￨e )￨4￨e .￨4￨e install￨4￨e (￨4￨e )￨4￨e ;￨4￨e context￨4￨e .￨4￨e addStep￨4￨e (￨4￨e verificationHandler￨4￨e ,￨4￨e VERIFY￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j context￨4￨e .￨4￨e reloadRequired￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d InterceptorsAnnotationParsingProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d INTERCEPTORS_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d Interceptors￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d EXCLUDE_DEFAULT_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d ExcludeDefaultInterceptors￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d EXCLUDE_CLASS_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d ExcludeClassInterceptors￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d deploy￨2￨d (￨2￨d DeploymentPhaseContext￨2￨d phaseContext￨2￨d )￨2￨d throws￨2￨d DeploymentUnitProcessingException￨2￨d {￨2￨d }￨2￨d private￨2￨f void￨2￨f processInterceptors￨2￨f (￨2￨f final￨2￨f EEModuleDescription￨2￨f eeModuleDescription￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f CompositeIndex￨2￨f index￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processMethodInterceptor￨2￨f (￨2￨f final￨3￨p EEModuleDescription￨3￨p eeModuleDescription￨3￨p ,￨3￨p final￨3￨p MethodInfo￨3￨p methodInfo￨3￨p ,￨3￨p final￨3￨p AnnotationInstance￨3￨p annotation￨3￨p ,￨3￨p final￨3￨p CompositeIndex￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processClassInterceptor￨2￨f (￨2￨f final￨3￨p EEModuleDescription￨3￨p eeModuleDescription￨3￨p ,￨3￨p final￨3￨p ClassInfo￨3￨p classInfo￨3￨p ,￨3￨p final￨3￨p AnnotationInstance￨3￨p annotation￨3￨p ,￨3￨p final￨3￨p CompositeIndex￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processExcludeDefault￨2￨f (￨2￨f final￨2￨f EEModuleDescription￨2￨f eeModuleDescription￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f CompositeIndex￨2￨f index￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processClassExcludeDefault￨2￨f (￨2￨f EEModuleDescription￨3￨p eeModuleDescription￨3￨p ,￨3￨p final￨3￨p ClassInfo￨3￨p classInfo￨3￨p ,￨3￨p final￨3￨p CompositeIndex￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processMethodExcludeDefault￨2￨f (￨2￨f EEModuleDescription￨3￨p eeModuleDescription￨3￨p ,￨3￨p MethodInfo￨3￨p methodInfo￨3￨p ,￨3￨p final￨3￨p CompositeIndex￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f processExcludeClass￨2￨f (￨2￨f final￨2￨f EEModuleDescription￨2￨f eeModuleDescription￨2￨f ,￨2￨f final￨2￨f AnnotationInstance￨2￨f annotation￨2￨f ,￨2￨f final￨2￨f CompositeIndex￨2￨f index￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f MethodIdentifier￨2￨f methodIdentifierFromMethodInfo￨2￨f (￨2￨f MethodInfo￨3￨p methodInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collection￨2￨f <￨2￨f ComponentDescription￨2￨f >￨2￨f getApplicableComponents￨2￨f (￨2￨f final￨3￨p CompositeIndex￨3￨p index￨3￨p ,￨3￨p final￨3￨p ClassInfo￨3￨p klass￨3￨p ,￨3￨p final￨3￨p EEModuleDescription￨3￨p eeModuleDescription￨3￨p )￨2￨f {￨2￨f Set￨3￨e <￨3￨e ComponentDescription￨3￨e >￨3￨e componentDescriptions￨3￨e =￨3￨e new￨3￨e HashSet￨3￨e <￨3￨e ComponentDescription￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ComponentDescription￨3￨e >￨3￨e descriptions￨3￨e =￨3￨e eeModuleDescription￨3￨e .￨3￨e getComponentsByClassName￨3￨e (￨3￨e klass￨3￨e .￨3￨e name￨3￨e (￨3￨e )￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b componentDescriptions￨3￨b .￨3￨b isEmpty￨3￨b (￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b componentDescriptions￨3￨e .￨3￨e addAll￨3￨e (￨3￨e descriptions￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j componentDescriptions￨4￨e .￨4￨e addAll￨4￨e (￨4￨e this￨4￨e .￨4￨e getKnownSubClassComponents￨4￨e (￨4￨e index￨4￨e ,￨4￨e klass￨4￨e ,￨4￨e eeModuleDescription￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e componentDescriptions￨3￨e ;￨3￨e }￨2￨f private￨2￨f Collection￨2￨f <￨2￨f ComponentDescription￨2￨f >￨2￨f getKnownSubClassComponents￨2￨f (￨2￨f final￨3￨p CompositeIndex￨3￨p index￨3￨p ,￨3￨p final￨3￨p ClassInfo￨3￨p superClass￨3￨p ,￨3￨p final￨3￨p EEModuleDescription￨3￨p eeModuleDescription￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ProgressView￨1￨d extends￨1￨d ViewPart￨1￨d implements￨1￨d IViewPart￨1￨d {￨1￨d ProgressTreeViewer￨2￨e viewer￨2￨e ;￨2￨e Action￨2￨e cancelAction￨2￨e ;￨2￨e public￨2￨f void￨2￨f createPartControl￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initContentProvider￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initContextMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initPulldownMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f IMenuManager￨3￨e menuMgr￨3￨e =￨3￨e (￨3￨e (￨3￨e org￨3￨e .￨3￨e eclipse￨3￨e .￨3￨e ui￨3￨e .￨3￨e internal￨3￨e .￨3￨e ViewSite￨3￨e )￨3￨e (￨3￨e getSite￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e getActionBars￨3￨e (￨3￨e )￨3￨e .￨3￨e getMenuManager￨3￨e (￨3￨e )￨3￨e ;￨3￨e menuMgr￨3￨f .￨3￨f add￨3￨f (￨3￨f new￨3￨f Action￨3￨f (￨3￨f ProgressMessages￨4￨p .￨4￨p getString￨4￨p (￨4￨p "ProgressView.VerboseAction"￨4￨p )￨4￨p ,￨4￨p IAction￨4￨p .￨4￨p AS_CHECK_BOX￨4￨p )￨3￨f {￨3￨f public￨4￨f void￨4￨f run￨4￨f (￨4￨f )￨4￨f {￨4￨f ProgressViewUpdater￨5￨e updater￨5￨e =￨5￨e ProgressViewUpdater￨5￨e .￨5￨e getSingleton￨5￨e (￨5￨e )￨5￨e ;￨5￨e updater￨5￨e .￨5￨e debug￨5￨e =￨5￨e !￨5￨e (￨5￨e updater￨5￨e .￨5￨e debug￨5￨e )￨5￨e ;￨5￨e setChecked￨5￨e (￨5￨e updater￨5￨e .￨5￨e debug￨5￨e )￨5￨e ;￨5￨e updater￨5￨e .￨5￨e refreshAll￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e <START_BUG>￨3￨b menuMgr￨3￨b .￨3￨b add￨3￨b (￨3￨b new￨3￨b Action￨3￨b (￨3￨b "&Toggle<seq2seq4repair_space>Floating<seq2seq4repair_space>Window"￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f {￨3￨f AnimationManager￨4￨e .￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e toggleFloatingWindow￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f IStructuredSelection￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f JobInfo￨2￨f getSelectedInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createCancelAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SwitchStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨e Statement￨2￨e [￨2￨e ]￨2￨e statements￨2￨e ;￨2￨e public￨2￨e BlockScope￨2￨e scope￨2￨e ;￨2￨e public￨2￨e int￨2￨e explicitDeclarations￨2￨e ;￨2￨e public￨2￨e Label￨2￨e breakLabel￨2￨e ;￨2￨e public￨2￨e CaseStatement￨2￨e [￨2￨e ]￨2￨e cases￨2￨e ;￨2￨e public￨2￨e CaseStatement￨2￨e defaultCase￨2￨e ;￨2￨e public￨2￨e int￨2￨e blockStart￨2￨e ;￨2￨e public￨2￨e int￨2￨e caseCount￨2￨e ;￨2￨e int￨2￨e [￨2￨e ]￨2￨e constants￨2￨e ;￨2￨e public￨2￨e SyntheticMethodBinding￨2￨e synthetic￨2￨e ;￨2￨e int￨2￨e preSwitchInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e mergedInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printStatement￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p upperScope￨3￨p )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f boolean￨4￨e isEnumSwitch￨4￨e =￨4￨e false￨4￨e ;￨4￨e TypeBinding￨4￨e expressionType￨4￨e =￨4￨e expression￨4￨e .￨4￨e resolveType￨4￨e (￨4￨e upperScope￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j expressionType￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j expression￨4￨e .￨4￨e computeConversion￨4￨e (￨4￨e upperScope￨4￨e ,￨4￨e expressionType￨4￨e ,￨4￨e expressionType￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j expressionType￨5￨c .￨5￨c isBaseType￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j expression￨6￨c .￨6￨c isConstantValueOfTypeAssignableToType￨6￨c (￨6￨c expressionType￨6￨c ,￨6￨c IntBinding￨6￨c )￨6￨c )￨5￨j {￨5￨j break￨6￨e checkType￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j expressionType￨6￨c .￨6￨c isCompatibleWith￨6￨c (￨6￨c IntBinding￨6￨c )￨6￨c )￨5￨j {￨5￨j break￨6￨e checkType￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j expressionType￨5￨c .￨5￨c isEnum￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j isEnumSwitch￨5￨e =￨5￨e true￨5￨e ;￨5￨e break￨5￨e checkType￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j upperScope￨5￨c .￨5￨c isBoxingCompatibleWith￨5￨c (￨5￨c expressionType￨5￨c ,￨5￨c IntBinding￨5￨c )￨5￨c )￨4￨j {￨4￨j expression￨5￨e .￨5￨e computeConversion￨5￨e (￨5￨e upperScope￨5￨e ,￨5￨e IntBinding￨5￨e ,￨5￨e expressionType￨5￨e )￨5￨e ;￨5￨e break￨5￨e checkType￨5￨e ;￨5￨e }￨4￨j upperScope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e incorrectSwitchType￨4￨e (￨4￨e expression￨4￨e ,￨4￨e expressionType￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c statements￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e =￨5￨e new￨5￨e BlockScope￨5￨e (￨5￨e upperScope￨5￨e )￨5￨e ;￨5￨e int￨5￨e length￨5￨e ;￨5￨e cases￨5￨e =￨5￨e new￨5￨e CaseStatement￨5￨e [￨5￨e length￨5￨e =￨5￨e statements￨5￨e .￨5￨e length￨5￨e ]￨5￨e ;￨5￨e this￨5￨e .￨5￨e constants￨5￨e =￨5￨e new￨5￨e int￨5￨e [￨5￨e length￨5￨e ]￨5￨e ;￨5￨e CaseStatement￨5￨e [￨5￨e ]￨5￨e duplicateCaseStatements￨5￨e =￨5￨e null￨5￨e ;￨5￨e int￨5￨e duplicateCaseStatementsCounter￨5￨e =￨5￨e 0￨5￨e ;￨5￨e int￨5￨e counter￨5￨e =￨5￨e 0￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c length￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l Constant￨6￨e constant￨6￨e ;￨6￨e final￨6￨e Statement￨6￨e statement￨6￨e =￨6￨e statements￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c constant￨7￨c =￨7￨c statement￨7￨c .￨7￨c resolveCase￨7￨c (￨7￨c scope￨7￨c ,￨7￨c expressionType￨7￨c ,￨7￨c this￨7￨c )￨7￨c )￨7￨c !=￨7￨c (￨7￨c Constant￨7￨c .￨7￨c NotAConstant￨7￨c )￨7￨c )￨6￨j {￨6￨j int￨7￨e key￨7￨e =￨7￨e constant￨7￨e .￨7￨e intValue￨7￨e (￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c counter￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l if￨8￨j (￨8￨j (￨9￨c this￨9￨c .￨9￨c constants￨9￨c [￨9￨c j￨9￨c ]￨9￨c )￨9￨c ==￨9￨c key￨9￨c )￨8￨j {￨8￨j final￨9￨e CaseStatement￨9￨e currentCaseStatement￨9￨e =￨9￨e (￨9￨e (￨9￨e CaseStatement￨9￨e )￨9￨e (￨9￨e statement￨9￨e )￨9￨e )￨9￨e ;￨9￨e if￨9￨j (￨9￨j duplicateCaseStatements￨10￨c ==￨10￨c null￨10￨c )￨9￨j {￨9￨j scope￨10￨e .￨10￨e problemReporter￨10￨e (￨10￨e )￨10￨e .￨10￨e duplicateCase￨10￨e (￨10￨e cases￨10￨e [￨10￨e j￨10￨e ]￨10￨e )￨10￨e ;￨10￨e scope￨10￨e .￨10￨e problemReporter￨10￨e (￨10￨e )￨10￨e .￨10￨e duplicateCase￨10￨e (￨10￨e currentCaseStatement￨10￨e )￨10￨e ;￨10￨e duplicateCaseStatements￨10￨e =￨10￨e new￨10￨e CaseStatement￨10￨e [￨10￨e length￨10￨e ]￨10￨e ;￨10￨e duplicateCaseStatements￨10￨e [￨10￨e (￨10￨e duplicateCaseStatementsCounter￨10￨e ++￨10￨e )￨10￨e ]￨10￨e =￨10￨e cases￨10￨e [￨10￨e j￨10￨e ]￨10￨e ;￨10￨e duplicateCaseStatements￨10￨e [￨10￨e (￨10￨e duplicateCaseStatementsCounter￨10￨e ++￨10￨e )￨10￨e ]￨10￨e =￨10￨e currentCaseStatement￨10￨e ;￨10￨e }￨9￨j else￨9￨j {￨9￨j boolean￨10￨e found￨10￨e =￨10￨e false￨10￨e ;￨10￨e for￨10￨l (￨10￨l int￨11￨c k￨11￨c =￨11￨c 2￨11￨c ;￨11￨c k￨11￨c <￨11￨c duplicateCaseStatementsCounter￨11￨c ;￨11￨c k￨11￨c ++￨11￨c )￨10￨l {￨10￨l if￨11￨j (￨11￨j (￨12￨c duplicateCaseStatements￨12￨c [￨12￨c k￨12￨c ]￨12￨c )￨12￨c ==￨12￨c statement￨12￨c )￨11￨j {￨11￨j found￨12￨e =￨12￨e true￨12￨e ;￨12￨e break￨12￨e searchReportedDuplicate￨12￨e ;￨12￨e }￨11￨j }￨10￨l if￨10￨j (￨10￨j !￨11￨c found￨11￨c )￨10￨j {￨10￨j scope￨11￨e .￨11￨e problemReporter￨11￨e (￨11￨e )￨11￨e .￨11￨e duplicateCase￨11￨e (￨11￨e currentCaseStatement￨11￨e )￨11￨e ;￨11￨e duplicateCaseStatements￨11￨e [￨11￨e (￨11￨e duplicateCaseStatementsCounter￨11￨e ++￨11￨e )￨11￨e ]￨11￨e =￨11￨e currentCaseStatement￨11￨e ;￨11￨e }￨10￨j }￨9￨j }￨8￨j }￨7￨l this￨7￨e .￨7￨e constants￨7￨e [￨7￨e (￨7￨e counter￨7￨e ++￨7￨e )￨7￨e ]￨7￨e =￨7￨e key￨7￨e ;￨7￨e }￨6￨j }￨5￨l if￨5￨j (￨5￨j length￨6￨c !=￨6￨c counter￨6￨c )￨5￨j {￨5￨j System￨6￨e .￨6￨e arraycopy￨6￨e (￨6￨e this￨6￨e .￨6￨e constants￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e (￨6￨e this￨6￨e .￨6￨e constants￨6￨e =￨6￨e new￨6￨e int￨6￨e [￨6￨e counter￨6￨e ]￨6￨e )￨6￨e ,￨6￨e 0￨6￨e ,￨6￨e counter￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c this￨6￨c .￨6￨c bits￨6￨c )￨6￨c &￨6￨c (￨6￨c ASTNode￨6￨c .￨6￨c UndocumentedEmptyBlock￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j upperScope￨6￨e .￨6￨e problemReporter￨6￨e (￨6￨e )￨6￨e .￨6￨e undocumentedEmptyBlock￨6￨e (￨6￨e this￨6￨e .￨6￨e blockStart￨6￨e ,￨6￨e this￨6￨e .￨6￨e sourceEnd￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j if￨4￨j (￨4￨j (￨5￨c isEnumSwitch￨5￨c &&￨5￨c (￨5￨c (￨5￨c defaultCase￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c upperScope￨5￨c .￨5￨c compilerOptions￨5￨c (￨5￨c )￨5￨c .￨5￨c getSeverity￨5￨c (￨5￨c IncompleteEnumSwitch￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c ProblemSeverities￨5￨c .￨5￨c Ignore￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j int￨5￨e constantCount￨5￨e =￨5￨e (￨5￨e (￨5￨e this￨5￨e .￨5￨e constants￨5￨e )￨5￨e ==￨5￨e null￨5￨e )￨5￨e ?￨5￨e 0￨5￨e :￨5￨e this￨5￨e .￨5￨e constants￨5￨e .￨5￨e length￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c constantCount￨6￨c ==￨6￨c (￨6￨c caseCount￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c caseCount￨6￨c )￨6￨c !=￨6￨c (￨6￨c (￨6￨c (￨6￨c ReferenceBinding￨6￨c )￨6￨c (￨6￨c expressionType￨6￨c )￨6￨c )￨6￨c .￨6￨c enumConstantCount￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j FieldBinding￨6￨e [￨6￨e ]￨6￨e enumFields￨6￨e =￨6￨e (￨6￨e (￨6￨e ReferenceBinding￨6￨e )￨6￨e (￨6￨e expressionType￨6￨e .￨6￨e erasure￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e .￨6￨e fields￨6￨e (￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ,￨7￨c max￨7￨c =￨7￨c enumFields￨7￨c .￨7￨c length￨7￨c ;￨7￨c i￨7￨c <￨7￨c max￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l FieldBinding￨7￨e enumConstant￨7￨e =￨7￨e enumFields￨7￨e [￨7￨e i￨7￨e ]￨7￨e ;￨7￨e <START_BUG>￨7￨b if￨7￨b (￨7￨b (￨7￨b (￨7￨b enumConstant￨7￨b .￨7￨b modifiers￨7￨b )￨7￨b &￨7￨b (￨7￨b AccEnum￨7￨b )￨7￨b )￨7￨b ==￨7￨b 0￨7￨b )￨7￨b <END_BUG>￨7￨b continue￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c j￨8￨c =￨8￨c 0￨8￨c ;￨8￨c j￨8￨c <￨8￨c (￨8￨c caseCount￨8￨c )￨8￨c ;￨8￨c j￨8￨c ++￨8￨c )￨7￨l {￨7￨l if￨8￨j (￨8￨j (￨9￨c enumConstant￨9￨c .￨9￨c id￨9￨c )￨9￨c ==￨9￨c (￨9￨c this￨9￨c .￨9￨c constants￨9￨c [￨9￨c j￨9￨c ]￨9￨c )￨9￨c )￨8￨j {￨8￨j break￨9￨e findConstant￨9￨e ;￨9￨e }￨8￨j }￨7￨l upperScope￨7￨e .￨7￨e problemReporter￨7￨e (￨7￨e )￨7￨e .￨7￨e missingEnumConstantCase￨7￨e (￨7￨e this￨7￨e ,￨7￨e enumConstant￨7￨e )￨7￨e ;￨7￨e }￨6￨l }￨5￨j }￨4￨j }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c scope￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e scope￨5￨e .￨5￨e enclosingCase￨5￨e =￨5￨e null￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f branchChainTo￨2￨f (￨2￨f Label￨3￨p label￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EditorsPreferencePage￨1￨d extends￨1￨d PreferencePage￨1￨d implements￨1￨d IWorkbenchPreferencePage￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e REUSE_INDENT￨2￨e =￨2￨e 10￨2￨e ;￨2￨e protected￨2￨e Composite￨2￨e editorReuseGroup￨2￨e ;￨2￨e private￨2￨e Button￨2￨e reuseEditors￨2￨e ;￨2￨e protected￨2￨e Button￨2￨e showMultipleEditorTabs￨2￨e ;￨2￨e protected￨2￨e Button￨2￨e useIPersistableEditor￨2￨e ;￨2￨e private￨2￨e Composite￨2￨e editorReuseIndentGroup￨2￨e ;￨2￨e private￨2￨e Composite￨2￨e editorReuseThresholdGroup￨2￨e ;￨2￨e private￨2￨e IntegerFieldEditor￨2￨e reuseEditorsThreshold￨2￨e ;￨2￨e private￨2￨e Group￨2￨e dirtyEditorReuseGroup￨2￨e ;￨2￨e private￨2￨e Button￨2￨e openNewEditor￨2￨e ;￨2￨e private￨2￨e Button￨2￨e promptToReuseEditor￨2￨e ;￨2￨e private￨2￨e IntegerFieldEditor￨2￨e recentFilesEditor￨2￨e ;￨2￨e private￨2￨f IPropertyChangeListener￨2￨f validityChangeListener￨2￨f =￨2￨f new￨2￨f IPropertyChangeListener￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f propertyChange￨3￨f (￨3￨f PropertyChangeEvent￨4￨p event￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e Button￨2￨e promptWhenStillOpenEditor￨2￨e ;￨2￨e protected￨2￨f Control￨2￨f createContents￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f Composite￨3￨e composite￨3￨e =￨3￨e createComposite￨3￨e (￨3￨e parent￨3￨e )￨3￨e ;￨3￨e createEditorHistoryGroup￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e createSpace￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e createShowMultipleEditorTabsPref￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e createUseIPersistablePref￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e createPromptWhenStillOpenPref￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e createEditorReuseGroup￨3￨e (￨3￨e composite￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b (￨3￨b (￨3￨b TabBehaviour￨3￨b )￨3￨b (￨3￨b Tweaklets￨3￨b .￨3￨b get￨3￨b (￨3￨b TabBehaviour￨3￨b .￨3￨b class￨3￨b )￨3￨b )￨3￨b )￨3￨b .￨3￨b setPreferenceVisibility￨3￨b (￨3￨b editorReuseGroup￨3￨b ,￨3￨b showMultipleEditorTabs￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b updateValidState￨3￨e (￨3￨e )￨3￨e ;￨3￨e setHelpContext￨3￨e (￨3￨e parent￨3￨e )￨3￨e ;￨3￨e return￨3￨e composite￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f setHelpContext￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createSpace￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createShowMultipleEditorTabsPref￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createUseIPersistablePref￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createPromptWhenStillOpenPref￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Composite￨2￨f createComposite￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f init￨2￨f (￨2￨f IWorkbench￨3￨p workbench￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f performDefaults￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f performOk￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IPreferenceStore￨2￨f doGetPreferenceStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IPreferenceStore￨2￨f getAPIPreferenceStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateValidState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createEditorReuseGroup￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createEditorHistoryGroup￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SevenZFile￨1￨d {￨1￨d static￨2￨e final￨2￨e int￨2￨e SIGNATURE_HEADER_SIZE￨2￨e =￨2￨e 32￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e DRAIN_BUF_SIZE￨2￨e =￨2￨e 64￨2￨e *￨2￨e 1024￨2￨e ;￨2￨e private￨2￨e RandomAccessFile￨2￨e file￨2￨e ;￨2￨e private￨2￨e final￨2￨e Archive￨2￨e archive￨2￨e ;￨2￨e private￨2￨e int￨2￨e currentEntryIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e int￨2￨e currentFolderIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e private￨2￨e InputStream￨2￨e currentFolderInputStream￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e InputStream￨2￨e currentEntryInputStream￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e byte￨2￨e [￨2￨e ]￨2￨e password￨2￨e ;￨2￨e static￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f sevenZSignature￨2￨f =￨2￨f new￨2￨f byte￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨f SevenZFile￨2￨f (￨2￨f final￨2￨f File￨2￨f filename￨2￨f ,￨2￨f final￨2￨f byte￨2￨f [￨2￨f ]￨2￨f password￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SevenZFile￨2￨f (￨2￨f final￨2￨f File￨2￨f filename￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SevenZArchiveEntry￨2￨f getNextEntry￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Archive￨2￨f readHeaders￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f password￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f StartHeader￨2￨f readStartHeader￨2￨f (￨2￨f final￨2￨f int￨2￨f startHeaderCrc￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readHeader￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readArchiveProperties￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f input￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f DataInputStream￨2￨f readEncodedHeader￨2￨f (￨2￨f final￨2￨f DataInputStream￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f password￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readStreamsInfo￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readPackInfo￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readUnpackInfo￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readSubStreamsInfo￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Folder￨2￨f readFolder￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f BitSet￨2￨f readAllOrBits￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f int￨2￨f size￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f BitSet￨2￨f readBits￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f int￨2￨f size￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readFilesInfo￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f header￨2￨f ,￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f calculateStreamMap￨2￨f (￨2￨f final￨2￨f Archive￨2￨f archive￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildDecodingStream￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f drainPreviousEntry￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f InputStream￨2￨f buildDecoderStack￨2￨f (￨2￨f final￨2￨f Folder￨2￨f folder￨2￨f ,￨2￨f final￨2￨f long￨2￨f folderOffset￨2￨f ,￨2￨f final￨2￨f int￨2￨f firstPackStreamIndex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f b￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f b￨2￨f ,￨2￨f int￨2￨f off￨2￨f ,￨2￨f int￨2￨f len￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f long￨2￨f readUint64￨2￨f (￨2￨f final￨2￨f DataInput￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b int￨3￨b firstByte￨3￨b =￨3￨b in￨3￨b .￨3￨b readUnsignedByte￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b int￨3￨e mask￨3￨e =￨3￨e 128￨3￨e ;￨3￨e long￨3￨e value￨3￨e =￨3￨e 0￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c 8￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j (￨5￨c firstByte￨5￨c &￨5￨c mask￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j return￨5￨e value￨5￨e |￨5￨e (￨5￨e (￨5￨e firstByte￨5￨e &￨5￨e (￨5￨e mask￨5￨e -￨5￨e 1￨5￨e )￨5￨e )￨5￨e <<￨5￨e (￨5￨e 8￨5￨e *￨5￨e i￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j long￨4￨e nextByte￨4￨e =￨4￨e in￨4￨e .￨4￨e readUnsignedByte￨4￨e (￨4￨e )￨4￨e ;￨4￨e value￨4￨e |=￨4￨e nextByte￨4￨e <<￨4￨e (￨4￨e 8￨4￨e *￨4￨e i￨4￨e )￨4￨e ;￨4￨e mask￨4￨e >>>=￨4￨e 1￨4￨e ;￨4￨e }￨3￨l return￨3￨e value￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MockRestServiceServer￨1￨d {￨1￨d private￨2￨e final￨2￨e List￨2￨e <￨2￨e RequestMatcherClientHttpRequest￨2￨e >￨2￨e expectedRequests￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e <￨2￨e RequestMatcherClientHttpRequest￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e List￨2￨e <￨2￨e RequestMatcherClientHttpRequest￨2￨e >￨2￨e actualRequests￨2￨e =￨2￨e new￨2￨e LinkedList￨2￨e <￨2￨e RequestMatcherClientHttpRequest￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f MockRestServiceServer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MockRestServiceServer￨2￨f createServer￨2￨f (￨2￨f RestTemplate￨3￨p restTemplate￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MockRestServiceServer￨2￨f createServer￨2￨f (￨2￨f AsyncRestTemplate￨3￨p asyncRestTemplate￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f MockRestServiceServer￨2￨f createServer￨2￨f (￨2￨f RestGatewaySupport￨3￨p restGateway￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResponseActions￨2￨f expect￨2￨f (￨2￨f RequestMatcher￨3￨p requestMatcher￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getVerifyMessage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d RequestMatcherClientHttpRequestFactory￨2￨d implements￨2￨d AsyncClientHttpRequestFactory￨2￨d ,￨2￨d ClientHttpRequestFactory￨2￨d {￨2￨d private￨3￨e Iterator￨3￨e <￨3￨e RequestMatcherClientHttpRequest￨3￨e >￨3￨e requestIterator￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f ClientHttpRequest￨3￨f createRequest￨3￨f (￨3￨f URI￨3￨f uri￨3￨f ,￨3￨f HttpMethod￨3￨f httpMethod￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f AsyncClientHttpRequest￨3￨f createAsyncRequest￨3￨f (￨3￨f URI￨3￨f uri￨3￨f ,￨3￨f HttpMethod￨3￨f httpMethod￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f RequestMatcherClientHttpRequest￨3￨f createRequestInternal￨3￨f (￨3￨f URI￨4￨p uri￨4￨p ,￨4￨p HttpMethod￨4￨p httpMethod￨4￨p )￨3￨f {￨3￨f Assert￨4￨e .￨4￨e notNull￨4￨e (￨4￨e uri￨4￨e ,￨4￨e "'uri'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4￨e )￨4￨e ;￨4￨e Assert￨4￨e .￨4￨e notNull￨4￨e (￨4￨e httpMethod￨4￨e ,￨4￨e "'httpMethod'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c requestIterator￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j this￨5￨e .￨5￨e requestIterator￨5￨e =￨5￨e MockRestServiceServer￨5￨e .￨5￨e this￨5￨e .￨5￨e expectedRequests￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j !￨5￨c (￨5￨c this￨5￨c .￨5￨c requestIterator￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b throw￨5￨b new￨5￨b AssertionError￨5￨b (￨5￨b "No<seq2seq4repair_space>further<seq2seq4repair_space>requests<seq2seq4repair_space>expected"￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j RequestMatcherClientHttpRequest￨4￨e request￨4￨e =￨4￨e this￨4￨e .￨4￨e requestIterator￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e ;￨4￨e request￨4￨e .￨4￨e setURI￨4￨e (￨4￨e uri￨4￨e )￨4￨e ;￨4￨e request￨4￨e .￨4￨e setMethod￨4￨e (￨4￨e httpMethod￨4￨e )￨4￨e ;￨4￨e MockRestServiceServer￨4￨e .￨4￨e this￨4￨e .￨4￨e actualRequests￨4￨e .￨4￨e add￨4￨e (￨4￨e request￨4￨e )￨4￨e ;￨4￨e return￨4￨e request￨4￨e ;￨4￨e }￨3￨f }￨2￨d }￨1￨d
public￨1￨d {￨3￨f }￨3￨f private￨3￨f String￨3￨f getString￨3￨f (￨3￨f Localizer￨4￨p localizer￨4￨p ,￨4￨p String￨4￨p key￨4￨p ,￨4￨p Component￨4￨p component￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f substitute￨3￨f (￨3￨f String￨3￨f string￨3￨f ,￨3￨f Map￨3￨f <￨3￨f String￨3￨f ,￨3￨f Object￨3￨f >￨3￨f vars￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f Map￨3￨f <￨3￨f String￨3￨f ,￨3￨f Object￨3￨f >￨3￨f addDefaultVars￨3￨f (￨3￨f Map￨4￨p <￨4￨p String￨4￨p ,￨4￨p Object￨4￨p >￨4￨p params￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f String￨3￨f getLabel￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d final￨2￨d class￨2￨d RequiredStateChange￨2￨d extends￨2￨d Change￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e private￨3￨e final￨3￨e boolean￨3￨e required￨3￨e =￨3￨e isRequired￨3￨e (￨3￨e )￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f undo￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d ValidatableAdapter￨2￨d implements￨2￨d IValidatable￨2￨d <￨2￨d T￨2￨d >￨2￨d {￨2￨d public￨3￨f void￨3￨f error￨3￨f (￨3￨f IValidationError￨4￨p error￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f T￨3￨f getValue￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isValid￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨e static￨2￨e String￨2￨e VALUE_SEPARATOR￨2￨e =￨2￨e ";"￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f EMPTY_STRING_ARRAY￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_PERSISTENT￨2￨e =￨2￨e FLAG_RESERVED2￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_REQUIRED￨2￨e =￨2￨e FLAG_RESERVED3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e NO_RAW_INPUT￨2￨e =￨2￨e "[-NO-RAW-INPUT-]"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e protected￨2￨e static￨2￨e final￨2￨e short￨2￨e FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨2￨e =￨2￨e FLAG_RESERVED1￨2￨e ;￨2￨e public￨2￨f static￨2￨f final￨2￨f void￨2￨f visitFormComponentsPostOrder￨2￨f (￨2￨f Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p FormComponent￨3￨p .￨3￨p IVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f Object￨2￨f visitFormComponentsPostOrderHelper￨2￨f (￨2￨f Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p FormComponent￨3￨p .￨3￨p IVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f final￨2￨f void￨2￨f visitComponentsPostOrder￨2￨f (￨2￨f Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p Component￨3￨p .￨3￨p IVisitor￨3￨p <￨3￨p Component￨3￨p >￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f Object￨2￨f visitComponentsPostOrderHelper￨2￨f (￨2￨f Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p Component￨3￨p .￨3￨p IVisitor￨3￨p <￨3￨p Component￨3￨p >￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e transient￨2￨e T￨2￨e convertedInput￨2￨e ;￨2￨e private￨2￨e String￨2￨e rawInput￨2￨e =￨2￨e FormComponent￨2￨e .￨2￨e NO_RAW_INPUT￨2￨e ;￨2￨e private￨2￨e String￨2￨e typeName￨2￨e ;￨2￨e private￨2￨e Object￨2￨e validators￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f FormComponent￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FormComponent￨2￨f (￨2￨f final￨3￨p String￨3￨p id￨3￨p ,￨3￨p IModel￨3￨p <￨3￨p T￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f add￨2￨f (￨2￨f final￨3￨p IValidator￨3￨p <￨3￨p T￨3￨p >￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f add￨2￨f (￨2￨f final￨3￨p IValidator￨3￨p <￨3￨p T￨3￨p >￨3￨p ...￨3￨p validators￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f checkRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f clearInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f error￨2￨f (￨2￨f IValidationError￨3￨p error￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f T￨2￨f getConvertedInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setConvertedInput￨2￨f (￨2￨f T￨3￨p convertedInput￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Form￨2￨f <￨2￨f ?￨2￨f >￨2￨f getForm￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getInputAsArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getInputName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getRawInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f final￨2￨f Class￨2￨f <￨2￨f T￨2￨f >￨2￨f getType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getValidatorKeyPrefix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f List￨2￨f <￨2￨f IValidator￨2￨f <￨2￨f T￨2￨f >￨2￨f >￨2￨f getValidators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f hasRawInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f inputChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f invalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInputNullable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isMultiPart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isPersistent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f processChildren￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f processInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f setLabel￨2￨f (￨2￨f IModel￨3￨p <￨3￨p String￨3￨p >￨3￨p labelModel￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deprecated￨2￨f public￨2￨f void￨2￨f setModelValue￨2￨f (￨2￨f final￨3￨p String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModelValue￨2￨f (￨2￨f final￨3￨p String￨3￨p [￨3￨p ]￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f setPersistent￨2￨f (￨2￨f final￨3￨p boolean￨3￨p persistent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f setRequired￨2￨f (￨2￨f final￨3￨p boolean￨3￨p required￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FormComponent￨2￨f <￨2￨f T￨2￨f >￨2￨f setType￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f valid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f validate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f private￨2￨f void￨2￨f validators_add￨2￨f (￨2￨f final￨3￨p IValidator￨3￨p <￨3￨p T￨3￨p >￨3￨p validator￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f private￨2￨f IValidator￨2￨f <￨2￨f T￨2￨f >￨2￨f validators_get￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f validators_size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f void￨2￨f convertInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f reportValidationError￨2￨f (￨2￨f ConversionException￨3￨p e￨3￨p ,￨3￨p ValidationError￨3￨p error￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f protected￨2￨f T￨2￨f convertValue￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f value￨2￨f )￨2￨f throws￨2￨f ConversionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getModelValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f inputAsInt￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f inputAsInt￨2￨f (￨2￨f final￨3￨p int￨3￨p defaultValue￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f int￨2￨f [￨2￨f ]￨2￨f inputAsIntArray￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f internalOnModelChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f tag￨3￨e .￨3￨e put￨3￨e (￨3￨e "name"￨3￨e ,￨3￨e getInputName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b !￨3￨b (￨3￨b FormComponent￨3￨b .￨3￨b isEnabled￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ||￨3￨b (￨3￨b !￨3￨b (￨3￨b FormComponent￨3￨b .￨3￨b isEnableAllowed￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b onDisabled￨3￨e (￨3￨e tag￨3￨e )￨3￨e ;￨3￨e }￨3￨e super￨3￨e .￨3￨e onComponentTag￨3￨e (￨3￨e tag￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onDetach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onDisabled￨2￨f (￨2￨f final￨3￨p ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onInvalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f shouldTrimInput￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f String￨2￨f trim￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f supportsPersistence￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f reportRequiredError￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f validateValidators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IValidatable￨2￨f <￨2￨f T￨2￨f >￨2￨f newValidatable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f final￨2￨f IModel￨2￨f <￨2￨f T￨2￨f >￨2￨f getModel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setModel￨2￨f (￨2￨f IModel￨3￨p <￨3￨p T￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f final￨2￨f T￨2￨f getModelObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setModelObject￨2￨f (￨2￨f T￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MultivariateNormalDistribution￨1￨d extends￨1￨d AbstractMultivariateRealDistribution￨1￨d {￨1￨d private￨2￨e final￨2￨e double￨2￨e [￨2￨e ]￨2￨e means￨2￨e ;￨2￨e private￨2￨e final￨2￨e RealMatrix￨2￨e covarianceMatrix￨2￨e ;￨2￨e private￨2￨e final￨2￨e RealMatrix￨2￨e covarianceMatrixInverse￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e covarianceMatrixDeterminant￨2￨e ;￨2￨e private￨2￨e final￨2￨e RealMatrix￨2￨e samplingMatrix￨2￨e ;￨2￨e public￨2￨f MultivariateNormalDistribution￨2￨f (￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f means￨2￨f ,￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f covariances￨2￨f )￨2￨f throws￨2￨f DimensionMismatchException￨2￨f ,￨2￨f NonPositiveDefiniteMatrixException￨2￨f ,￨2￨f SingularMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MultivariateNormalDistribution￨2￨f (￨2￨f RandomGenerator￨2￨f rng￨2￨f ,￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f means￨2￨f ,￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f covariances￨2￨f )￨2￨f throws￨2￨f DimensionMismatchException￨2￨f ,￨2￨f NonPositiveDefiniteMatrixException￨2￨f ,￨2￨f SingularMatrixException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f [￨2￨f ]￨2￨f getMeans￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f RealMatrix￨2￨f getCovariances￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f density￨2￨f (￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f vals￨2￨f )￨2￨f throws￨2￨f DimensionMismatchException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e int￨3￨e dim￨3￨e =￨3￨e getDimension￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c vals￨4￨c .￨4￨c length￨4￨c )￨4￨c !=￨4￨c dim￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e DimensionMismatchException￨4￨e (￨4￨e vals￨4￨e .￨4￨e length￨4￨e ,￨4￨e dim￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b FastMath￨3￨b .￨3￨b pow￨3￨b (￨3￨b (￨3￨b 2￨3￨b *￨3￨b (￨3￨b FastMath￨3￨b .￨3￨b PI￨3￨b )￨3￨b )￨3￨b ,￨3￨b (￨3￨b (￨3￨b -￨3￨b dim￨3￨b )￨3￨b /￨3￨b 2￨3￨b )￨3￨b )￨3￨b )￨3￨b *￨3￨b (￨3￨b FastMath￨3￨b .￨3￨b pow￨3￨b (￨3￨b covarianceMatrixDeterminant￨3￨b ,￨3￨b (￨3￨b -￨3￨b 0.5￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b *￨3￨b (￨3￨b getExponentTerm￨3￨b (￨3￨b vals￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f double￨2￨f [￨2￨f ]￨2￨f getStandardDeviations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f [￨2￨f ]￨2￨f sample￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f double￨2￨f getExponentTerm￨2￨f (￨2￨f final￨3￨p double￨3￨p [￨3￨p ]￨3￨p values￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DateTimeDV￨1￨d extends￨1￨d AbstractDateTimeDV￨1￨d {￨1￨d public￨2￨f Object￨2￨f getActualValue￨2￨f (￨2￨f String￨2￨f content￨2￨f ,￨2￨f ValidationContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f InvalidDatatypeValueException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b return￨4￨b parse￨4￨b (￨4￨b content￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p ex￨4￨p )￨3￨f {￨3￨f throw￨4￨f new￨4￨f InvalidDatatypeValueException￨4￨f (￨4￨f "cvc-datatype-valid.1.2.1"￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f int￨2￨f [￨2￨f ]￨2￨f parse￨2￨f (￨2￨f String￨2￨f str￨2￨f )￨2￨f throws￨2￨f SchemaDateTimeException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d EncodingTest￨1￨d extends￨1￨d TestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f test_1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f WicketTester￨3￨e tester￨3￨e =￨3￨e new￨3￨e WicketTester￨3￨e (￨3￨e )￨3￨e ;￨3￨e tester￨3￨e .￨3￨e startPage￨3￨e (￨3￨e Home￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e tester￨3￨e .￨3￨e assertContains￨3￨e (￨3￨e "Wicket<seq2seq4repair_space>Examples<seq2seq4repair_space>-<seq2seq4repair_space>encodings"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b tester￨3￨b .￨3￨b assertContains￨3￨b (￨3￨b "Hello<seq2seq4repair_space>world!<seq2seq4repair_space>Test:<seq2seq4repair_space>���"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
class￨1￨d MozillaDelegate￨1￨d {￨1￨d Browser￨2￨e browser￨2￨e ;￨2￨e MozillaDelegate￨2￨f (￨2￨f Browser￨3￨p browser￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f Browser￨2￨f findBrowser￨2￨f (￨2￨f int￨3￨p handle￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f char￨2￨f [￨2￨f ]￨2￨f mbcsToWcs￨2￨f (￨2￨f String￨3￨p codePage￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f byte￨2￨f [￨2￨f ]￨2￨f wcsToMbcs￨2￨f (￨2￨f String￨3￨p codePage￨3￨p ,￨3￨p String￨3￨p string￨3￨p ,￨3￨p boolean￨3￨p terminate￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f getHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getLibraryName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getSWTInitLibraryName￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "swt-xpcominit"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f void￨2￨f handleFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hookEnterExit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f needsSpinup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f onDispose￨2￨f (￨2￨f int￨3￨p embedHandle￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setSize￨2￨f (￨2￨f int￨3￨p embedHandle￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ModClusterEnableContext￨1￨d implements￨1￨d OperationStepHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d static￨2￨e final￨2￨e ModClusterEnableContext￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ModClusterEnableContext￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b context￨3￨b .￨3￨b getType￨3￨b (￨3￨b )￨3￨b )￨3￨b ==￨3￨b (￨3￨b Type￨3￨b .￨3￨b SERVER￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b context￨3￨f .￨3￨f addStep￨3￨f (￨3￨f new￨3￨f OperationStepHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f execute￨4￨f (￨4￨f OperationContext￨4￨f context￨4￨f ,￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f ServiceController￨5￨e <￨5￨e ?￨5￨e >￨5￨e controller￨5￨e =￨5￨e context￨5￨e .￨5￨e getServiceRegistry￨5￨e (￨5￨e false￨5￨e )￨5￨e .￨5￨e getService￨5￨e (￨5￨e NAME￨5￨e )￨5￨e ;￨5￨e ModCluster￨5￨e modcluster￨5￨e =￨5￨e (￨5￨e (￨5￨e ModCluster￨5￨e )￨5￨e (￨5￨e controller￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e ModClusterLogger￨5￨e .￨5￨e ROOT_LOGGER￨5￨e .￨5￨e debugf￨5￨e (￨5￨e "enable-context:<seq2seq4repair_space>%s"￨5￨e ,￨5￨e operation￨5￨e )￨5￨e ;￨5￨e ContextHost￨5￨e contexthost￨5￨e =￨5￨e new￨5￨e ContextHost￨5￨e (￨5￨e operation￨5￨e )￨5￨e ;￨5￨e modcluster￨5￨e .￨5￨e enableContext￨5￨e (￨5￨e contexthost￨5￨e .￨5￨e webhost￨5￨e ,￨5￨e contexthost￨5￨e .￨5￨e webcontext￨5￨e )￨5￨e ;￨5￨e context￨5￨e .￨5￨e completeStep￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ,￨3￨e RUNTIME￨3￨e )￨3￨e ;￨3￨e }￨3￨e context￨3￨e .￨3￨e completeStep￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
final￨1￨d class￨1￨d BcelMethod￨1￨d extends￨1￨d ResolvedMember￨1￨d {￨1￨d private￨2￨e Method￨2￨e method￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isAjSynthetic￨2￨e ;￨2￨e private￨2￨e ShadowMunger￨2￨e associatedShadowMunger￨2￨e ;￨2￨e private￨2￨e ResolvedPointcutDefinition￨2￨e preResolvedPointcut￨2￨e ;￨2￨e private￨2￨e ResolvedType￨2￨e [￨2￨e ]￨2￨e annotationTypes￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e AnnotationX￨2￨e [￨2￨e ]￨2￨e annotations￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e EffectiveSignatureAttribute￨2￨e effectiveSignature￨2￨e ;￨2￨e private￨2￨e MethodDeclarationLineNumberAttribute￨2￨e declarationLineNumber￨2￨e ;￨2￨e private￨2￨e ResolvedType￨2￨e [￨2￨e ]￨2￨e resolvedAnnotations￨2￨e ;￨2￨e private￨2￨e World￨2￨e world￨2￨e ;￨2￨e private￨2￨e BcelObjectType￨2￨e bcelObjectType￨2￨e ;￨2￨e BcelMethod￨2￨f (￨2￨f BcelObjectType￨3￨p declaringType￨3￨p ,￨3￨p Method￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f unpackJavaAttributes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f unpackAjAttributes￨2￨f (￨2￨f World￨3￨p world￨3￨p )￨2￨f {￨2￨f associatedShadowMunger￨3￨e =￨3￨e null￨3￨e ;￨3￨e <START_BUG>￨3￨b List￨3￨b as￨3￨b =￨3￨b BcelAttributes￨3￨b .￨3￨b readAjAttributes￨3￨b (￨3￨b getDeclaringType￨3￨b (￨3￨b )￨3￨b .￨3￨b getClassName￨3￨b (￨3￨b )￨3￨b ,￨3￨b method￨3￨b .￨3￨b getAttributes￨3￨b (￨3￨b )￨3￨b ,￨3￨b getSourceContext￨3￨b (￨3￨b world￨3￨b )￨3￨b ,￨3￨b world￨3￨b .￨3￨b getMessageHandler￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b processAttributes￨3￨e (￨3￨e world￨3￨e ,￨3￨e as￨3￨e )￨3￨e ;￨3￨e as￨3￨e =￨3￨e AtAjAttributes￨3￨e .￨3￨e readAj5MethodAttributes￨3￨e (￨3￨e method￨3￨e ,￨3￨e this￨3￨e ,￨3￨e world￨3￨e .￨3￨e resolve￨3￨e (￨3￨e getDeclaringType￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e preResolvedPointcut￨3￨e ,￨3￨e getSourceContext￨3￨e (￨3￨e world￨3￨e )￨3￨e ,￨3￨e world￨3￨e .￨3￨e getMessageHandler￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e processAttributes￨3￨e (￨3￨e world￨3￨e ,￨3￨e as￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f processAttributes￨2￨f (￨2￨f World￨3￨p world￨3￨p ,￨3￨p List￨3￨p as￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isAjSynthetic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ShadowMunger￨2￨f getAssociatedShadowMunger￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EffectiveSignatureAttribute￨2￨f getEffectiveSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasDeclarationLineNumberInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getDeclarationLineNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getDeclarationOffset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ISourceLocation￨2￨f getSourceLocation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Kind￨2￨f getKind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasAnnotation￨2￨f (￨2￨f UnresolvedType￨3￨p ofType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f AnnotationX￨2￨f [￨2￨f ]￨2￨f getAnnotations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ResolvedType￨2￨f [￨2￨f ]￨2￨f getAnnotationTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addAnnotation￨2￨f (￨2￨f AnnotationX￨3￨p annotation￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f ensureAnnotationTypesRetrieved￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e canBeParameterized￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f boolean￨2￨f canBeParameterized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e unpackedGenericSignature￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e UnresolvedType￨2￨e genericReturnType￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e UnresolvedType￨2￨e [￨2￨e ]￨2￨e genericParameterTypes￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f UnresolvedType￨2￨f [￨2￨f ]￨2￨f getGenericParameterTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f UnresolvedType￨2￨f getGenericReturnType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f unpackGenericSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FilenameUtils￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e char￨2￨e EXTENSION_SEPARATOR￨2￨e =￨2￨e '.'￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e EXTENSION_SEPARATOR_STR￨2￨e =￨2￨e Character￨2￨e .￨2￨e toString￨2￨e (￨2￨e FilenameUtils￨2￨e .￨2￨e EXTENSION_SEPARATOR￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e char￨2￨e UNIX_SEPARATOR￨2￨e =￨2￨e '/'￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e char￨2￨e WINDOWS_SEPARATOR￨2￨e =￨2￨e '\\'￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e char￨2￨e SYSTEM_SEPARATOR￨2￨e =￨2￨e File￨2￨e .￨2￨e separatorChar￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e char￨2￨e OTHER_SEPARATOR￨2￨e ;￨2￨e public￨2￨f FilenameUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f isSystemWindows￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f isSeparator￨2￨f (￨2￨f char￨3￨p ch￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f normalize￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f normalize￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p boolean￨3￨p unixSeparator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f normalizeNoEndSeparator￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f normalizeNoEndSeparator￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p boolean￨3￨p unixSeparator￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f doNormalize￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p char￨3￨p separator￨3￨p ,￨3￨p boolean￨3￨p keepSeparator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f concat￨2￨f (￨2￨f String￨3￨p basePath￨3￨p ,￨3￨p String￨3￨p fullFilenameToAdd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f separatorsToUnix￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f separatorsToWindows￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f separatorsToSystem￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f getPrefixLength￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f indexOfLastSeparator￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f indexOfExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPrefix￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPath￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getPathNoEndSeparator￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f doGetPath￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p int￨3￨p separatorAdd￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getFullPath￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getFullPathNoEndSeparator￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f doGetFullPath￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p boolean￨3￨p includeSeparator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getName￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getBaseName￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f getExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f removeExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f String￨3￨p filename1￨3￨p ,￨3￨p String￨3￨p filename2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equalsOnSystem￨2￨f (￨2￨f String￨3￨p filename1￨3￨p ,￨3￨p String￨3￨p filename2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equalsNormalized￨2￨f (￨2￨f String￨3￨p filename1￨3￨p ,￨3￨p String￨3￨p filename2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equalsNormalizedOnSystem￨2￨f (￨2￨f String￨3￨p filename1￨3￨p ,￨3￨p String￨3￨p filename2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f String￨3￨p filename1￨3￨p ,￨3￨p String￨3￨p filename2￨3￨p ,￨3￨p boolean￨3￨p normalized￨3￨p ,￨3￨p IOCase￨3￨p caseSensitivity￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c filename1￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c filename2￨4￨c ==￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b return￨4￨b filename1￨4￨b ==￨4￨b filename2￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j if￨3￨j (￨3￨j normalized￨4￨c )￨3￨j {￨3￨j filename1￨4￨e =￨4￨e FilenameUtils￨4￨e .￨4￨e normalize￨4￨e (￨4￨e filename1￨4￨e )￨4￨e ;￨4￨e filename2￨4￨e =￨4￨e FilenameUtils￨4￨e .￨4￨e normalize￨4￨e (￨4￨e filename2￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c filename1￨5￨c ==￨5￨c null￨5￨c )￨5￨c ||￨5￨c (￨5￨c filename2￨5￨c ==￨5￨c null￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e NullPointerException￨5￨e (￨5￨e "Error<seq2seq4repair_space>normalizing<seq2seq4repair_space>one<seq2seq4repair_space>or<seq2seq4repair_space>both<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>file<seq2seq4repair_space>names"￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j caseSensitivity￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j caseSensitivity￨4￨e =￨4￨e IOCase￨4￨e .￨4￨e SENSITIVE￨4￨e ;￨4￨e }￨3￨j return￨3￨e caseSensitivity￨3￨e .￨3￨e checkEquals￨3￨e (￨3￨e filename1￨3￨e ,￨3￨e filename2￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p extension￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p extensions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isExtension￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p String￨3￨p >￨3￨p extensions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f wildcardMatch￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p wildcardMatcher￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f wildcardMatchOnSystem￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p wildcardMatcher￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f wildcardMatch￨2￨f (￨2￨f String￨3￨p filename￨3￨p ,￨3￨p String￨3￨p wildcardMatcher￨3￨p ,￨3￨p IOCase￨3￨p caseSensitivity￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f splitOnTokens￨2￨f (￨2￨f String￨3￨p text￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JavaBuilder￨1￨d extends￨1￨d IncrementalProjectBuilder￨1￨d {￨1￨d IProject￨2￨e currentProject￨2￨e ;￨2￨e IJavaProject￨2￨e javaProject￨2￨e ;￨2￨e IWorkspaceRoot￨2￨e workspaceRoot￨2￨e ;￨2￨e ClasspathLocation￨2￨e [￨2￨e ]￨2￨e classpath￨2￨e ;￨2￨e IContainer￨2￨e outputFolder￨2￨e ;￨2￨e IContainer￨2￨e [￨2￨e ]￨2￨e sourceFolders￨2￨e ;￨2￨e SimpleLookupTable￨2￨e prereqOutputFolders￨2￨e ;￨2￨e State￨2￨e lastState￨2￨e ;￨2￨e BuildNotifier￨2￨e notifier￨2￨e ;￨2￨e char￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e resourceFilters￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e JAVA_EXTENSION￨2￨e =￨2￨e "java"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e CLASS_EXTENSION￨2￨e =￨2￨e "class"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e JAR_EXTENSION￨2￨e =￨2￨e "jar"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ZIP_EXTENSION￨2￨e =￨2￨e "zip"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e OPTION_ResourceCopyFilter￨2￨e =￨2￨e "org.eclipse.jdt.core.builder.resourceCopyExclusionFilters"￨2￨e ;￨2￨e public￨2￨e static￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e ProblemMarkerTag￨2￨e =￨2￨e IJavaModelMarker￨2￨e .￨2￨e JAVA_MODEL_PROBLEM_MARKER￨2￨e ;￨2￨e static￨2￨e ArrayList￨2￨e builtProjects￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f static￨2￨f IMarker￨2￨f [￨2￨f ]￨2￨f getProblemsFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f removeProblemsFor￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f State￨2￨f readState￨2￨f (￨2￨f DataInputStream￨2￨f in￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f writeState￨2￨f (￨2￨f Object￨2￨f state￨2￨f ,￨2￨f DataOutputStream￨2￨f out￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f JavaBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IProject￨2￨f [￨2￨f ]￨2￨f build￨2￨f (￨2￨f int￨2￨f kind￨2￨f ,￨2￨f Map￨2￨f ignored￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildAll￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildDeltas￨2￨f (￨2￨f SimpleLookupTable￨3￨p deltas￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cleanup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f clearLastState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f createFolder￨2￨f (￨2￨f IContainer￨2￨f folder￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f filterResource￨2￨f (￨2￨f IResource￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f SimpleLookupTable￨2￨f findDeltas￨2￨f (￨2￨f )￨2￨f {￨2￨f notifier￨3￨e .￨3￨e subTask￨3￨e (￨3￨e Util￨3￨e .￨3￨e bind￨3￨e (￨3￨e "build.readingDelta"￨3￨e ,￨3￨e currentProject￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e IResourceDelta￨3￨e delta￨3￨e =￨3￨e getDelta￨3￨e (￨3￨e currentProject￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b SimpleLookupTable￨3￨b deltas￨3￨b =￨3￨b new￨3￨b SimpleLookupTable￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j delta￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j deltas￨4￨e .￨4￨e put￨4￨e (￨4￨e currentProject￨4￨e ,￨4￨e delta￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j if￨4￨j (￨4￨j JavaBuilder￨5￨c .￨5￨c DEBUG￨5￨c )￨4￨j {￨4￨j System￨5￨e .￨5￨e out￨5￨e .￨5￨e println￨5￨e (￨5￨e (￨5￨e "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e currentProject￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j notifier￨4￨e .￨4￨e subTask￨4￨e (￨4￨e ""￨4￨e )￨4￨e ;￨4￨e return￨4￨e null￨4￨e ;￨4￨e }￨3￨j Object￨3￨e [￨3￨e ]￨3￨e keyTable￨3￨e =￨3￨e prereqOutputFolders￨3￨e .￨3￨e keyTable￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c l￨4￨c =￨4￨c keyTable￨4￨c .￨4￨c length￨4￨c ;￨4￨c i￨4￨c <￨4￨c l￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l IProject￨4￨e prereqProject￨4￨e =￨4￨e (￨4￨e (￨4￨e IProject￨4￨e )￨4￨e (￨4￨e keyTable￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c prereqProject￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c lastState￨5￨c .￨5￨c isStructurallyChanged￨5￨c (￨5￨c prereqProject￨5￨c ,￨5￨c getLastState￨5￨c (￨5￨c prereqProject￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j notifier￨5￨e .￨5￨e subTask￨5￨e (￨5￨e Util￨5￨e .￨5￨e bind￨5￨e (￨5￨e "build.readingDelta"￨5￨e ,￨5￨e prereqProject￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e delta￨5￨e =￨5￨e getDelta￨5￨e (￨5￨e prereqProject￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j delta￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j deltas￨6￨e .￨6￨e put￨6￨e (￨6￨e prereqProject￨6￨e ,￨6￨e delta￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j if￨6￨j (￨6￨j JavaBuilder￨7￨c .￨7￨c DEBUG￨7￨c )￨6￨j {￨6￨j System￨7￨e .￨7￨e out￨7￨e .￨7￨e println￨7￨e (￨7￨e (￨7￨e "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨7￨e +￨7￨e (￨7￨e prereqProject￨7￨e .￨7￨e getName￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j notifier￨6￨e .￨6￨e subTask￨6￨e (￨6￨e ""￨6￨e )￨6￨e ;￨6￨e return￨6￨e null￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨l notifier￨3￨e .￨3￨e subTask￨3￨e (￨3￨e ""￨3￨e )￨3￨e ;￨3￨e return￨3￨e deltas￨3￨e ;￨3￨e }￨2￨f private￨2￨f State￨2￨f getLastState￨2￨f (￨2￨f IProject￨3￨p project￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IProject￨2￨f [￨2￨f ]￨2￨f getRequiredProjects￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasClasspathChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f hasOutputLocationChanged￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeBuilder￨2￨f (￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f recordNewState￨2￨f (￨2￨f State￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SimplePasswordStrengthCheckerTestCase￨1￨d {￨1￨d private￨2￨e Keyboard￨2￨e keyboard￨2￨e =￨2￨e new￨2￨e SimpleKeyboard￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Dictionary￨2￨e dictionary￨2￨e =￨2￨e new￨2￨e SimpleDictionary￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e PasswordCheckUtil￨2￨e PCU￨2￨e =￨2￨e PasswordCheckUtil￨2￨e .￨2￨e create￨2￨e (￨2￨e null￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e PasswordRestriction￨2￨e ALPHA_RESTRICTION￨2￨e =￨2￨e SimplePasswordStrengthCheckerTestCase￨2￨e .￨2￨e PCU￨2￨e .￨2￨e createAlphaRestriction￨2￨e (￨2￨e 1￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e PasswordRestriction￨2￨e SYMBOL_RESTRICTION￨2￨e =￨2￨e SimplePasswordStrengthCheckerTestCase￨2￨e .￨2￨e PCU￨2￨e .￨2￨e createSymbolRestriction￨2￨e (￨2￨e 1￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e PasswordRestriction￨2￨e DIGIT_RESTRICTION￨2￨e =￨2￨e SimplePasswordStrengthCheckerTestCase￨2￨e .￨2￨e PCU￨2￨e .￨2￨e createDigitRestriction￨2￨e (￨2￨e 1￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e LengthRestriction￨2￨e LENGTH_RESTRICTION￨2￨e =￨2￨e new￨2￨e LengthRestriction￨2￨e (￨2￨e 8￨2￨e )￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testLengthRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDigitsRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSymbolsRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testAlphaRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testAdHocRestriction￨2￨f (￨2￨f )￨2￨f {￨2￨f List￨3￨e <￨3￨e PasswordRestriction￨3￨e >￨3￨e restrictions￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e PasswordRestriction￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e restrictions￨3￨e .￨3￨e add￨3￨e (￨3￨e SimplePasswordStrengthCheckerTestCase￨3￨e .￨3￨e ALPHA_RESTRICTION￨3￨e )￨3￨e ;￨3￨e restrictions￨3￨e .￨3￨e add￨3￨e (￨3￨e SimplePasswordStrengthCheckerTestCase￨3￨e .￨3￨e SYMBOL_RESTRICTION￨3￨e )￨3￨e ;￨3￨e SimplePasswordStrengthChecker￨3￨e checker￨3￨e =￨3￨e new￨3￨e SimplePasswordStrengthChecker￨3￨e (￨3￨e restrictions￨3￨e ,￨3￨e this￨3￨e .￨3￨e dictionary￨3￨e ,￨3￨e this￨3￨e .￨3￨e keyboard￨3￨e )￨3￨e ;￨3￨e String￨3￨e pwd￨3￨e =￨3￨e "!#*_3x"￨3￨e ;￨3￨e List￨3￨e <￨3￨e PasswordRestriction￨3￨e >￨3￨e adHocRestrictions￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e PasswordRestriction￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b ValueRestriction￨3￨b restriction￨3￨b =￨3￨b new￨3￨b ValueRestriction￨3￨b (￨3￨b new￨3￨b String￨3￨b [￨3￨b ]￨3￨b {￨3￨b pwd￨3￨b }￨3￨b ,￨3￨b true￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b adHocRestrictions￨3￨e .￨3￨e add￨3￨e (￨3￨e restriction￨3￨e )￨3￨e ;￨3￨e PasswordStrengthCheckResult￨3￨e result￨3￨e =￨3￨e checker￨3￨e .￨3￨e check￨3￨e (￨3￨e ""￨3￨e ,￨3￨e pwd￨3￨e ,￨3￨e adHocRestrictions￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e result￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e result￨3￨e .￨3￨e getPassedRestrictions￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e result￨3￨e .￨3￨e getRestrictionFailures￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 2￨3￨e ,￨3￨e result￨3￨e .￨3￨e getPassedRestrictions￨3￨e (￨3￨e )￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e result￨3￨e .￨3￨e getRestrictionFailures￨3￨e (￨3￨e )￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e result￨3￨e .￨3￨e getStrength￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e SimplePasswordStrengthCheckerTestCase￨3￨e .￨3￨e ALPHA_RESTRICTION￨3￨e ,￨3￨e result￨3￨e .￨3￨e getPassedRestrictions￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e SimplePasswordStrengthCheckerTestCase￨3￨e .￨3￨e SYMBOL_RESTRICTION￨3￨e ,￨3￨e result￨3￨e .￨3￨e getPassedRestrictions￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e DomainManagementMessages￨3￨e .￨3￨e MESSAGES￨3￨e .￨3￨e passwordMustNotBeEqual￨3￨e (￨3￨e pwd￨3￨e )￨3￨e .￨3￨e getMessage￨3￨e (￨3￨e )￨3￨e ,￨3￨e result￨3￨e .￨3￨e getRestrictionFailures￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e 0￨3￨e )￨3￨e .￨3￨e getMessage￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d Main￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f StandaloneServer￨2￨f create￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f Properties￨2￨e props￨2￨e =￨2￨e new￨2￨e Properties￨2￨e (￨2￨e System￨2￨e .￨2￨e getProperties￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e private￨2￨f Main￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f StandaloneServer￨2￨f boot￨2￨f (￨2￨f final￨3￨p String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f StandaloneServer￨3￨e server￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f ServerEnvironment￨4￨e config￨4￨e =￨4￨e Main￨4￨e .￨4￨e determineEnvironment￨4￨e (￨4￨e args￨4￨e ,￨4￨e props￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j config￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j abort￨5￨e (￨5￨e null￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j config￨6￨c .￨6￨c isStandalone￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b server￨6￨b =￨6￨b new￨6￨b StandaloneServer￨6￨b (￨6￨b config￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j else￨5￨j {￨5￨j throw￨6￨e new￨6￨e IllegalStateException￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j server￨5￨e .￨5￨e start￨5￨e (￨5￨e )￨5￨e ;￨5￨e return￨5￨e server￨5￨e ;￨5￨e }￨4￨j }￨3￨f catch￨3￨f (￨3￨f Throwable￨4￨p t￨4￨p )￨3￨f {￨3￨f abort￨4￨e (￨4￨e t￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e null￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f abort￨2￨f (￨2￨f Throwable￨3￨p t￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f ServerEnvironment￨2￨f determineEnvironment￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p ,￨3￨p Properties￨3￨p systemProperties￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f URL￨2￨f makeURL￨2￨f (￨2￨f String￨2￨f urlspec￨2￨f )￨2￨f throws￨2￨f MalformedURLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d RungeKuttaIntegrator￨1￨d extends￨1￨d AbstractIntegrator￨1￨d {￨1￨d private￨2￨e final￨2￨e double￨2￨e [￨2￨e ]￨2￨e c￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e [￨2￨e ]￨2￨e [￨2￨e ]￨2￨e a￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e [￨2￨e ]￨2￨e b￨2￨e ;￨2￨e private￨2￨e final￨2￨e RungeKuttaStepInterpolator￨2￨e prototype￨2￨e ;￨2￨e private￨2￨e final￨2￨e double￨2￨e step￨2￨e ;￨2￨e protected￨2￨f RungeKuttaIntegrator￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p ,￨3￨p final￨3￨p double￨3￨p [￨3￨p ]￨3￨p c￨3￨p ,￨3￨p final￨3￨p double￨3￨p [￨3￨p ]￨3￨p [￨3￨p ]￨3￨p a￨3￨p ,￨3￨p final￨3￨p double￨3￨p [￨3￨p ]￨3￨p b￨3￨p ,￨3￨p final￨3￨p RungeKuttaStepInterpolator￨3￨p prototype￨3￨p ,￨3￨p final￨3￨p double￨3￨p step￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f integrate￨2￨f (￨2￨f final￨2￨f FirstOrderDifferentialEquations￨2￨f equations￨2￨f ,￨2￨f final￨2￨f double￨2￨f t0￨2￨f ,￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f y0￨2￨f ,￨2￨f final￨2￨f double￨2￨f t￨2￨f ,￨2￨f final￨2￨f double￨2￨f [￨2￨f ]￨2￨f y￨2￨f )￨2￨f throws￨2￨f DerivativeException￨2￨f ,￨2￨f IntegratorException￨2￨f (￨2￨f )￨2￨f {￨2￨f sanityChecks￨3￨e (￨3￨e equations￨3￨e ,￨3￨e t0￨3￨e ,￨3￨e y0￨3￨e ,￨3￨e t￨3￨e ,￨3￨e y￨3￨e )￨3￨e ;￨3￨e setEquations￨3￨e (￨3￨e equations￨3￨e )￨3￨e ;￨3￨e resetEvaluations￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e boolean￨3￨e forward￨3￨e =￨3￨e t￨3￨e >￨3￨e t0￨3￨e ;￨3￨e final￨3￨e int￨3￨e stages￨3￨e =￨3￨e (￨3￨e c￨3￨e .￨3￨e length￨3￨e )￨3￨e +￨3￨e 1￨3￨e ;￨3￨e if￨3￨j (￨3￨j y￨4￨c !=￨4￨c y0￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e arraycopy￨4￨e (￨4￨e y0￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e y￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e y0￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e double￨3￨e [￨3￨e ]￨3￨e [￨3￨e ]￨3￨e yDotK￨3￨e =￨3￨e new￨3￨e double￨3￨e [￨3￨e stages￨3￨e ]￨3￨e [￨3￨e ]￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c stages￨4￨c ;￨4￨c ++￨4￨c i￨4￨c )￨3￨l {￨3￨l yDotK￨4￨e [￨4￨e i￨4￨e ]￨4￨e =￨4￨e new￨4￨e double￨4￨e [￨4￨e y0￨4￨e .￨4￨e length￨4￨e ]￨4￨e ;￨4￨e }￨3￨l final￨3￨e double￨3￨e [￨3￨e ]￨3￨e yTmp￨3￨e =￨3￨e new￨3￨e double￨3￨e [￨3￨e y0￨3￨e .￨3￨e length￨3￨e ]￨3￨e ;￨3￨e AbstractStepInterpolator￨3￨e interpolator￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c requiresDenseOutput￨4￨c (￨4￨c )￨4￨c )￨4￨c ||￨4￨c (￨4￨c !￨4￨c (￨4￨c eventsHandlersManager￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e RungeKuttaStepInterpolator￨4￨e rki￨4￨e =￨4￨e (￨4￨e (￨4￨e RungeKuttaStepInterpolator￨4￨e )￨4￨e (￨4￨e prototype￨4￨e .￨4￨e copy￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e rki￨4￨e .￨4￨e reinitialize￨4￨e (￨4￨e this￨4￨e ,￨4￨e yTmp￨4￨e ,￨4￨e yDotK￨4￨e ,￨4￨e forward￨4￨e )￨4￨e ;￨4￨e interpolator￨4￨e =￨4￨e rki￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b interpolator￨4￨b =￨4￨b new￨4￨b DummyStepInterpolator￨4￨b (￨4￨b yTmp￨4￨b ,￨4￨b forward￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j interpolator￨3￨e .￨3￨e storeTime￨3￨e (￨3￨e t0￨3￨e )￨3￨e ;￨3￨e stepStart￨3￨e =￨3￨e t0￨3￨e ;￨3￨e stepSize￨3￨e =￨3￨e (￨3￨e forward￨3￨e )￨3￨e ?￨3￨e step￨3￨e :￨3￨e -￨3￨e (￨3￨e step￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l StepHandler￨4￨c handler￨4￨c :￨4￨c stepHandlers￨4￨c )￨3￨l {￨3￨l handler￨4￨e .￨4￨e reset￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l CombinedEventsManager￨3￨e manager￨3￨e =￨3￨e addEndTimeChecker￨3￨e (￨3￨e t0￨3￨e ,￨3￨e t￨3￨e ,￨3￨e eventsHandlersManager￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e lastStep￨3￨e =￨3￨e false￨3￨e ;￨3￨e while￨3￨l (￨3￨l !￨4￨c lastStep￨4￨c )￨3￨l {￨3￨l interpolator￨4￨e .￨4￨e shift￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l boolean￨5￨c loop￨5￨c =￨5￨c true￨5￨c ;￨5￨c loop￨5￨c ;￨5￨c )￨4￨l {￨4￨l computeDerivatives￨5￨e (￨5￨e stepStart￨5￨e ,￨5￨e y￨5￨e ,￨5￨e yDotK￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c k￨6￨c =￨6￨c 1￨6￨c ;￨6￨c k￨6￨c <￨6￨c stages￨6￨c ;￨6￨c ++￨6￨c k￨6￨c )￨5￨l {￨5￨l for￨6￨l (￨6￨l int￨7￨c j￨7￨c =￨7￨c 0￨7￨c ;￨7￨c j￨7￨c <￨7￨c (￨7￨c y0￨7￨c .￨7￨c length￨7￨c )￨7￨c ;￨7￨c ++￨7￨c j￨7￨c )￨6￨l {￨6￨l double￨7￨e sum￨7￨e =￨7￨e (￨7￨e a￨7￨e [￨7￨e (￨7￨e k￨7￨e -￨7￨e 1￨7￨e )￨7￨e ]￨7￨e [￨7￨e 0￨7￨e ]￨7￨e )￨7￨e *￨7￨e (￨7￨e yDotK￨7￨e [￨7￨e 0￨7￨e ]￨7￨e [￨7￨e j￨7￨e ]￨7￨e )￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c l￨8￨c =￨8￨c 1￨8￨c ;￨8￨c l￨8￨c <￨8￨c k￨8￨c ;￨8￨c ++￨8￨c l￨8￨c )￨7￨l {￨7￨l sum￨8￨e +=￨8￨e (￨8￨e a￨8￨e [￨8￨e (￨8￨e k￨8￨e -￨8￨e 1￨8￨e )￨8￨e ]￨8￨e [￨8￨e l￨8￨e ]￨8￨e )￨8￨e *￨8￨e (￨8￨e yDotK￨8￨e [￨8￨e l￨8￨e ]￨8￨e [￨8￨e j￨8￨e ]￨8￨e )￨8￨e ;￨8￨e }￨7￨l yTmp￨7￨e [￨7￨e j￨7￨e ]￨7￨e =￨7￨e (￨7￨e y￨7￨e [￨7￨e j￨7￨e ]￨7￨e )￨7￨e +￨7￨e (￨7￨e (￨7￨e stepSize￨7￨e )￨7￨e *￨7￨e sum￨7￨e )￨7￨e ;￨7￨e }￨6￨l computeDerivatives￨6￨e (￨6￨e (￨6￨e (￨6￨e stepStart￨6￨e )￨6￨e +￨6￨e (￨6￨e (￨6￨e c￨6￨e [￨6￨e (￨6￨e k￨6￨e -￨6￨e 1￨6￨e )￨6￨e ]￨6￨e )￨6￨e *￨6￨e (￨6￨e stepSize￨6￨e )￨6￨e )￨6￨e )￨6￨e ,￨6￨e yTmp￨6￨e ,￨6￨e yDotK￨6￨e [￨6￨e k￨6￨e ]￨6￨e )￨6￨e ;￨6￨e }￨5￨l for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c (￨6￨c y0￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c ++￨6￨c j￨6￨c )￨5￨l {￨5￨l double￨6￨e sum￨6￨e =￨6￨e (￨6￨e b￨6￨e [￨6￨e 0￨6￨e ]￨6￨e )￨6￨e *￨6￨e (￨6￨e yDotK￨6￨e [￨6￨e 0￨6￨e ]￨6￨e [￨6￨e j￨6￨e ]￨6￨e )￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c l￨7￨c =￨7￨c 1￨7￨c ;￨7￨c l￨7￨c <￨7￨c stages￨7￨c ;￨7￨c ++￨7￨c l￨7￨c )￨6￨l {￨6￨l sum￨7￨e +=￨7￨e (￨7￨e b￨7￨e [￨7￨e l￨7￨e ]￨7￨e )￨7￨e *￨7￨e (￨7￨e yDotK￨7￨e [￨7￨e l￨7￨e ]￨7￨e [￨7￨e j￨7￨e ]￨7￨e )￨7￨e ;￨7￨e }￨6￨l yTmp￨6￨e [￨6￨e j￨6￨e ]￨6￨e =￨6￨e (￨6￨e y￨6￨e [￨6￨e j￨6￨e ]￨6￨e )￨6￨e +￨6￨e (￨6￨e (￨6￨e stepSize￨6￨e )￨6￨e *￨6￨e sum￨6￨e )￨6￨e ;￨6￨e }￨5￨l interpolator￨5￨e .￨5￨e storeTime￨5￨e (￨5￨e (￨5￨e (￨5￨e stepStart￨5￨e )￨5￨e +￨5￨e (￨5￨e stepSize￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j manager￨6￨c .￨6￨c evaluateStep￨6￨c (￨6￨c interpolator￨6￨c )￨6￨c )￨5￨j {￨5￨j final￨6￨e double￨6￨e dt￨6￨e =￨6￨e (￨6￨e manager￨6￨e .￨6￨e getEventTime￨6￨e (￨6￨e )￨6￨e )￨6￨e -￨6￨e (￨6￨e stepStart￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c Math￨7￨c .￨7￨c abs￨7￨c (￨7￨c dt￨7￨c )￨7￨c )￨7￨c <=￨7￨c (￨7￨c Math￨7￨c .￨7￨c ulp￨7￨c (￨7￨c stepStart￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j loop￨7￨e =￨7￨e false￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j stepSize￨7￨e =￨7￨e dt￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j loop￨6￨e =￨6￨e false￨6￨e ;￨6￨e }￨5￨j }￨4￨l final￨4￨e double￨4￨e nextStep￨4￨e =￨4￨e (￨4￨e stepStart￨4￨e )￨4￨e +￨4￨e (￨4￨e stepSize￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e arraycopy￨4￨e (￨4￨e yTmp￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e y￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e y0￨4￨e .￨4￨e length￨4￨e )￨4￨e ;￨4￨e manager￨4￨e .￨4￨e stepAccepted￨4￨e (￨4￨e nextStep￨4￨e ,￨4￨e y￨4￨e )￨4￨e ;￨4￨e lastStep￨4￨e =￨4￨e manager￨4￨e .￨4￨e stop￨4￨e (￨4￨e )￨4￨e ;￨4￨e interpolator￨4￨e .￨4￨e storeTime￨4￨e (￨4￨e nextStep￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l StepHandler￨5￨c handler￨5￨c :￨5￨c stepHandlers￨5￨c )￨4￨l {￨4￨l handler￨5￨e .￨5￨e handleStep￨5￨e (￨5￨e interpolator￨5￨e ,￨5￨e lastStep￨5￨e )￨5￨e ;￨5￨e }￨4￨l stepStart￨4￨e =￨4￨e nextStep￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c manager￨5￨c .￨5￨c reset￨5￨c (￨5￨c stepStart￨5￨c ,￨5￨c y￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c lastStep￨5￨c )￨5￨c )￨4￨j {￨4￨j computeDerivatives￨5￨e (￨5￨e stepStart￨5￨e ,￨5￨e y￨5￨e ,￨5￨e yDotK￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨j stepSize￨4￨e =￨4￨e (￨4￨e forward￨4￨e )￨4￨e ?￨4￨e step￨4￨e :￨4￨e -￨4￨e (￨4￨e step￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e double￨3￨e stopTime￨3￨e =￨3￨e stepStart￨3￨e ;￨3￨e stepStart￨3￨e =￨3￨e Double￨3￨e .￨3￨e NaN￨3￨e ;￨3￨e stepSize￨3￨e =￨3￨e Double￨3￨e .￨3￨e NaN￨3￨e ;￨3￨e return￨3￨e stopTime￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CleanDatabaseTestSetup￨1￨d extends￨1￨d BaseJDBCTestSetup￨1￨d {￨1￨d public￨2￨f CleanDatabaseTestSetup￨2￨f (￨2￨f Test￨3￨p test￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f decorateSQL￨2￨f (￨2￨f Statement￨2￨f s￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f cleanDatabase￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f CLEAR_DB_PROPERTIES￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f void￨2￨f clearProperties￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f removeObjects￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f DatabaseMetaData￨3￨e dmd￨3￨e =￨3￨e conn￨3￨e .￨3￨e getMetaData￨3￨e (￨3￨e )￨3￨e ;￨3￨e SQLException￨3￨e sqle￨3￨e =￨3￨e null￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c count￨4￨c =￨4￨c 0￨4￨c ;￨4￨c count￨4￨c <￨4￨c 5￨4￨c ;￨4￨c count￨4￨c ++￨4￨c )￨3￨l {￨3￨l List￨4￨e schemas￨4￨e =￨4￨e new￨4￨e ArrayList￨4￨e (￨4￨e )￨4￨e ;￨4￨e ResultSet￨4￨e rs￨4￨e =￨4￨e dmd￨4￨e .￨4￨e getSchemas￨4￨e (￨4￨e )￨4￨e ;￨4￨e while￨4￨l (￨4￨l rs￨5￨c .￨5￨c next￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l String￨5￨e schema￨5￨e =￨5￨e rs￨5￨e .￨5￨e getString￨5￨e (￨5￨e "TABLE_SCHEM"￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j schema￨6￨c .￨6￨c startsWith￨6￨c (￨6￨c "SYS"￨6￨c )￨6￨c )￨5￨j {￨5￨j continue￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j schema￨6￨c .￨6￨c equals￨6￨c (￨6￨c "SQLJ"￨6￨c )￨6￨c )￨5￨j {￨5￨j continue￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j schema￨6￨c .￨6￨c equals￨6￨c (￨6￨c "NULLID"￨6￨c )￨6￨c )￨5￨j {￨5￨j continue￨6￨e ;￨6￨e }￨5￨j schemas￨5￨e .￨5￨e add￨5￨e (￨5￨e schema￨5￨e )￨5￨e ;￨5￨e }￨4￨l rs￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e sqle￨4￨e =￨4￨e null￨4￨e ;￨4￨e for￨4￨l (￨4￨l Iterator￨5￨c i￨5￨c =￨5￨c schemas￨5￨c .￨5￨c iterator￨5￨c (￨5￨c )￨5￨c ;￨5￨c i￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c ;￨5￨c )￨4￨l {￨4￨l String￨5￨e schema￨5￨e =￨5￨e (￨5￨e (￨5￨e String￨5￨e )￨5￨e (￨5￨e i￨5￨e .￨5￨e next￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f JDBC￨6￨e .￨6￨e dropSchema￨6￨e (￨6￨e dmd￨6￨e ,￨6￨e schema￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f SQLException￨6￨p e￨6￨p )￨5￨f {￨5￨f <START_BUG>￨6￨b sqle￨6￨b =￨6￨b null￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f }￨4￨l if￨4￨j (￨4￨j sqle￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j }￨3￨l throw￨3￨e sqle￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f final￨2￨f String￨2￨f [￨2￨f ]￨2￨f COMPRESS_DB_OBJECTS￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨f static￨2￨f void￨2￨f compressObjects￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Test_org_eclipse_swt_widgets_TableItem￨1￨d extends￨1￨d Test_org_eclipse_swt_widgets_Item￨1￨d {￨1￨d public￨2￨f Test_org_eclipse_swt_widgets_TableItem￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_ConstructorLorg_eclipse_swt_widgets_TableI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_ConstructorLorg_eclipse_swt_widgets_TableII￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getBackgroundI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getBoundsI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getChecked￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getFont￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getFontI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getForegroundI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getGrayed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getImageBoundsI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getImageI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getImageIndent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_getTextI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setBackgroundILorg_eclipse_swt_graphics_Color￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setBackgroundLorg_eclipse_swt_graphics_Color￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setCheckedZ￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setFontLorg_eclipse_swt_graphics_Font￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setFontILorg_eclipse_swt_graphics_Font￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setForegroundILorg_eclipse_swt_graphics_Color￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setForegroundLorg_eclipse_swt_graphics_Color￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setGrayedZ￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setImage$Lorg_eclipse_swt_graphics_Image￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setImageILorg_eclipse_swt_graphics_Image￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setImageIndentI￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b SwtJunit￨3￨b .￨3￨b isCarbon￨3￨b )￨3￨b ||￨3￨b (￨3￨b SwtJunit￨3￨b .￨3￨b isGTK￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b tableItem￨3￨e .￨3￨e setImageIndent￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e return￨3￨e ;￨3￨e }￨3￨e assertEquals￨3￨e (￨3￨e 0￨3￨e ,￨3￨e tableItem￨3￨e .￨3￨e getImageIndent￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e tableItem￨3￨e .￨3￨e setImageIndent￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e tableItem￨3￨e .￨3￨e getImageIndent￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e tableItem￨3￨e .￨3￨e setImageIndent￨3￨e (￨3￨e (￨3￨e -￨3￨e 1￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 1￨3￨e ,￨3￨e tableItem￨3￨e .￨3￨e getImageIndent￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f test_setText$Ljava_lang_String￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f test_setTextILjava_lang_String￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Vector￨2￨f methodNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runTest￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Table￨2￨e table￨2￨e ;￨2￨e TableItem￨2￨e tableItem￨2￨e ;￨2￨e private￨2￨f void￨2￨f makeCleanEnvironment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d BehavioralFeature￨1￨d extends￨1￨d Feature￨1￨d {￨1￨d public￨2￨e boolean￨2￨e _isQuery￨2￨e ;￨2￨e public￨2￨e Vector￨2￨e _parameter￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e Vector￨2￨e _raisedException￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f BehavioralFeature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f BehavioralFeature￨2￨f (￨2￨f Name￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BehavioralFeature￨2￨f (￨2￨f String￨3￨p nameStr￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getIsQuery￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIsQuery￨2￨f (￨2￨f boolean￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Classifier￨2￨f getReturnType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setReturnType￨2￨f (￨2￨f Classifier￨2￨f rt￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f Parameter￨3￨e p￨3￨e =￨3￨e findParameter￨3￨e (￨3￨e RETURN_NAME￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j p￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b p￨4￨b =￨4￨b new￨4￨b Parameter￨4￨b (￨4￨b rt￨4￨b ,￨4￨b Parameter￨4￨b .￨4￨b RETURN_NAME￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b addParameter￨4￨e (￨4￨e p￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j p￨4￨e .￨4￨e setType￨4￨e (￨4￨e rt￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f Parameter￨2￨f findParameter￨2￨f (￨2￨f Name￨3￨p n￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getParameter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setParameter￨2￨f (￨2￨f Vector￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addParameter￨2￨f (￨2￨f Parameter￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeParameter￨2￨f (￨2￨f Parameter￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Vector￨2￨f getRaisedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRaisedException￨2￨f (￨2￨f Vector￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addRaisedException￨2￨f (￨2￨f MMException￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeRaisedException￨2￨f (￨2￨f MMException￨2￨f x￨2￨f )￨2￨f throws￨2￨f PropertyVetoException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 7697916359219415113L￨2￨e ;￨2￨e }￨1￨d
public￨1￨d class￨1￨d ArgoFileFilter￨1￨d extends￨1￨d FileFilter￨1￨d {￨1￨d public￨2￨f boolean￨2￨f accept￨2￨f (￨2￨f File￨3￨p f￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getExtension￨2￨f (￨2￨f File￨3￨p f￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getDescription￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b "Argo<seq2seq4repair_space>v0.3.1<seq2seq4repair_space>native<seq2seq4repair_space>file<seq2seq4repair_space>type"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ExpandItem￨1￨d extends￨1￨d Item￨1￨d {￨1￨d ExpandBar￨2￨e parent￨2￨e ;￨2￨e Control￨2￨e control￨2￨e ;￨2￨e boolean￨2￨e expanded￨2￨e ;￨2￨e boolean￨2￨e hover￨2￨e ;￨2￨e int￨2￨e x￨2￨e ;￨2￨e int￨2￨e y￨2￨e ;￨2￨e int￨2￨e width￨2￨e ;￨2￨e int￨2￨e height￨2￨e ;￨2￨e int￨2￨e imageHeight￨2￨e ;￨2￨e int￨2￨e imageWidth￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e TEXT_INSET￨2￨e =￨2￨e 6￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e BORDER￨2￨e =￨2￨e 1￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e CHEVRON_SIZE￨2￨e =￨2￨e 24￨2￨e ;￨2￨e public￨2￨f ExpandItem￨2￨f (￨2￨f ExpandBar￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ExpandItem￨2￨f (￨2￨f ExpandBar￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f ExpandBar￨2￨f checkNull￨2￨f (￨2￨f ExpandBar￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f drawChevron￨2￨f (￨2￨f int￨3￨p hDC￨3￨p ,￨3￨p RECT￨3￨p rect￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f drawItem￨2￨f (￨2￨f GC￨3￨p gc￨3￨p ,￨3￨p int￨3￨p hTheme￨3￨p ,￨3￨p RECT￨3￨p clipRect￨3￨p ,￨3￨p boolean￨3￨p drawFocus￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Control￨2￨f getControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getExpanded￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getHeaderHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ExpandBar￨2￨f getParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f getPreferredWidth￨2￨f (￨2￨f int￨3￨p hTheme￨3￨p ,￨3￨p int￨3￨p hDC￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f redraw￨2￨f (￨2￨f boolean￨3￨p all￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p size￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpanded￨2￨f (￨2￨f boolean￨3￨p expanded￨3￨p )￨2￨f {￨2￨f checkWidget￨3￨e (￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e expanded￨3￨e =￨3￨e expanded￨3￨e ;￨3￨e <START_BUG>￨3￨b parent￨3￨b .￨3￨b showItem￨3￨b (￨3￨b parent￨3￨b .￨3￨b indexOf￨3￨b (￨3￨b this￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f setHeight￨2￨f (￨2￨f int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImage￨2￨f (￨2￨f Image￨3￨p image￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d containsValue￨2￨f (￨2￨f Value￨3￨p map￨3￨p ,￨3￨p Value￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f isInstance￨2￨f (￨2￨f Value￨3￨p val￨3￨p ,￨3￨p Class￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f and￨2￨f (￨2￨f Expression￨3￨p exp1￨3￨p ,￨3￨p Expression￨3￨p exp2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f or￨2￨f (￨2￨f Expression￨3￨p exp1￨3￨p ,￨3￨p Expression￨3￨p exp2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f not￨2￨f (￨2￨f Expression￨3￨p exp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f bindVariable￨2￨f (￨2￨f Value￨3￨p var￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f bindKeyVariable￨2￨f (￨2￨f Value￨3￨p var￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f bindValueVariable￨2￨f (￨2￨f Value￨3￨p var￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f startsWith￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f endsWith￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f notMatches￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p ,￨3￨p String￨3￨p single￨3￨p ,￨3￨p String￨3￨p multi￨3￨p ,￨3￨p String￨3￨p esc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f matches￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p ,￨3￨p String￨3￨p single￨3￨p ,￨3￨p String￨3￨p multi￨3￨p ,￨3￨p String￨3￨p esc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Subquery￨2￨f newSubquery￨2￨f (￨2￨f ClassMetaData￨3￨p candidate￨3￨p ,￨3￨p boolean￨3￨p subs￨3￨p ,￨3￨p String￨3￨p alias￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f newPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f newPath￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Literal￨2￨f newLiteral￨2￨f (￨2￨f Object￨3￨p val￨3￨p ,￨3￨p int￨3￨p ptype￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Literal￨2￨f newTypeLiteral￨2￨f (￨2￨f Object￨3￨p val￨3￨p ,￨3￨p int￨3￨p ptype￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f getThis￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f getNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f T￨2￨f extends￨2￨f Date￨2￨f >￨2￨f Value￨2￨f getCurrentDate￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p dateType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f T￨2￨f extends￨2￨f Date￨2￨f >￨2￨f Value￨2￨f getCurrentTime￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p dateType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f <￨2￨f T￨2￨f extends￨2￨f Date￨2￨f >￨2￨f Value￨2￨f getCurrentTimestamp￨2￨f (￨2￨f Class￨3￨p <￨3￨p T￨3￨p >￨3￨p dateType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Parameter￨2￨f newParameter￨2￨f (￨2￨f Object￨3￨p name￨3￨p ,￨3￨p Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Parameter￨2￨f newCollectionValuedParameter￨2￨f (￨2￨f Object￨3￨p key￨3￨p ,￨3￨p Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f newExtension￨2￨f (￨2￨f FilterListener￨3￨p listener￨3￨p ,￨3￨p Value￨3￨p target￨3￨p ,￨3￨p Value￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f newAggregate￨2￨f (￨2￨f AggregateListener￨3￨p listener￨3￨p ,￨3￨p Value￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Arguments￨2￨f newArgumentList￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Arguments￨2￨f newArgumentList￨2￨f (￨2￨f Value￨3￨p ...￨3￨p vs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f newUnboundVariable￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f newBoundVariable￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Class￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f cast￨2￨f (￨2￨f Value￨3￨p val￨3￨p ,￨3￨p Class￨3￨p cls￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f add￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f subtract￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f multiply￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f divide￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f mod￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f abs￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f indexOf￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f concat￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f stringLength￨2￨f (￨2￨f Value￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f trim￨2￨f (￨2￨f Value￨3￨p str￨3￨p ,￨3￨p Value￨3￨p trimChar￨3￨p ,￨3￨p Boolean￨3￨p where￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f sqrt￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f substring￨2￨f (￨2￨f Value￨3￨p v1￨3￨p ,￨3￨p Value￨3￨p v2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f toUpperCase￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f toLowerCase￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f avg￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f count￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f distinct￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f max￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f min￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f sum￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f any￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f all￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f size￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f index￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f type￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f mapEntry￨2￨f (￨2￨f Value￨3￨p key￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f mapKey￨2￨f (￨2￨f Value￨3￨p key￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f getKey￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f getObjectId￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f getMapValue￨2￨f (￨2￨f Value￨3￨p map￨3￨p ,￨3￨p Value￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Value￨2￨f getLiteralRawString￨2￨f (￨2￨f Value￨3￨p val￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j val￨4￨c instanceof￨4￨c Lit￨4￨c )￨3￨j {￨3￨j Lit￨4￨e lit￨4￨e =￨4￨e (￨4￨e (￨4￨e Lit￨4￨e )￨4￨e (￨4￨e val￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b StringBuffer￨4￨b value￨4￨b =￨4￨b new￨4￨b StringBuffer￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b int￨4￨e pType￨4￨e =￨4￨e lit￨4￨e .￨4￨e getParseType￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c pType￨5￨c ==￨5￨c (￨5￨c Literal￨5￨c .￨5￨c TYPE_SQ_STRING￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c pType￨5￨c ==￨5￨c (￨5￨c Literal￨5￨c .￨5￨c TYPE_STRING￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j value￨5￨e .￨5￨e append￨5￨e (￨5￨e "'"￨5￨e )￨5￨e .￨5￨e append￨5￨e (￨5￨e lit￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e .￨5￨e append￨5￨e (￨5￨e "'"￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j pType￨5￨c ==￨5￨c (￨5￨c Literal￨5￨c .￨5￨c TYPE_BOOLEAN￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c (￨6￨c Boolean￨6￨c )￨6￨c (￨6￨c lit￨6￨c .￨6￨c getValue￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j value￨6￨e .￨6￨e append￨6￨e (￨6￨e "1"￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j value￨6￨e .￨6￨e append￨6￨e (￨6￨e "0"￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j if￨4￨j (￨4￨j pType￨5￨c ==￨5￨c (￨5￨c Literal￨5￨c .￨5￨c TYPE_ENUM￨5￨c )￨5￨c )￨4￨j {￨4￨j lit￨5￨e .￨5￨e setRaw￨5￨e (￨5￨e true￨5￨e )￨5￨e ;￨5￨e return￨5￨e val￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j value￨5￨e .￨5￨e append￨5￨e (￨5￨e lit￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j lit￨4￨e .￨4￨e setValue￨4￨e (￨4￨e new￨4￨e Raw￨4￨e (￨4￨e value￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e lit￨4￨e ;￨4￨e }￨3￨j return￨3￨e val￨3￨e ;￨3￨e }￨2￨f public￨2￨f Value￨2￨f simpleCaseExpression￨2￨f (￨2￨f Value￨3￨p caseOperand￨3￨p ,￨3￨p Expression￨3￨p [￨3￨p ]￨3￨p exp￨3￨p ,￨3￨p Value￨3￨p val1￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f generalCaseExpression￨2￨f (￨2￨f Expression￨3￨p [￨3￨p ]￨3￨p exp￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f whenCondition￨2￨f (￨2￨f Expression￨3￨p exp￨3￨p ,￨3￨p Value￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f whenScalar￨2￨f (￨2￨f Value￨3￨p val1￨3￨p ,￨3￨p Value￨3￨p val2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f coalesceExpression￨2￨f (￨2￨f Value￨3￨p [￨3￨p ]￨3￨p vals￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f nullIfExpression￨2￨f (￨2￨f Value￨3￨p val1￨3￨p ,￨3￨p Value￨3￨p val2￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Value￨2￨f newFunction￨2￨f (￨2￨f String￨3￨p functionName￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p resultType￨3￨p ,￨3￨p Value￨3￨p ...￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d IncomingStreamReader￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d IncomingStreamReader￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d protected￨2￨d final￨2￨d PendingFile￨2￨d localFile￨2￨d ;￨2￨d protected￨2￨d final￨2￨d PendingFile￨2￨d remoteFile￨2￨d ;￨2￨d protected￨2￨d final￨2￨d StreamInSession￨2￨d session￨2￨d ;￨2￨d private￨2￨d final￨2￨d Socket￨2￨d socket￨2￨d ;￨2￨d public￨2￨d IncomingStreamReader￨2￨d (￨2￨d StreamHeader￨2￨d header￨2￨d ,￨2￨d Socket￨2￨d socket￨2￨d )￨2￨d throws￨2￨d IOException￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f read￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f SSTableReader￨2￨f streamIn￨2￨f (￨2￨f DataInput￨2￨f input￨2￨f ,￨2￨f PendingFile￨2￨f localFile￨2￨f ,￨2￨f PendingFile￨2￨f remoteFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f ColumnFamilyStore￨3￨e cfs￨3￨e =￨3￨e Table￨3￨e .￨3￨e open￨3￨e (￨3￨e localFile￨3￨e .￨3￨e desc￨3￨e .￨3￨e ksname￨3￨e )￨3￨e .￨3￨e getColumnFamilyStore￨3￨e (￨3￨e localFile￨3￨e .￨3￨e desc￨3￨e .￨3￨e cfname￨3￨e )￨3￨e ;￨3￨e DecoratedKey￨3￨e key￨3￨e ;￨3￨e SSTableWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e SSTableWriter￨3￨e (￨3￨e localFile￨3￨e .￨3￨e getFilename￨3￨e (￨3￨e )￨3￨e ,￨3￨e remoteFile￨3￨e .￨3￨e estimatedKeys￨3￨e )￨3￨e ;￨3￨e CompactionController￨3￨e controller￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f BytesReadTracker￨4￨e in￨4￨e =￨4￨e new￨4￨e BytesReadTracker￨4￨e (￨4￨e input￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l Pair￨5￨c <￨5￨c Long￨5￨c ,￨5￨c Long￨5￨c >￨5￨c section￨5￨c :￨5￨c localFile￨5￨c .￨5￨c sections￨5￨c )￨4￨l {￨4￨l long￨5￨e length￨5￨e =￨5￨e (￨5￨e section￨5￨e .￨5￨e right￨5￨e )￨5￨e -￨5￨e (￨5￨e section￨5￨e .￨5￨e left￨5￨e )￨5￨e ;￨5￨e long￨5￨e bytesRead￨5￨e =￨5￨e 0￨5￨e ;￨5￨e while￨5￨l (￨5￨l bytesRead￨6￨c <￨6￨c length￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b in￨6￨b .￨6￨b reset￨6￨b (￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b key￨6￨e =￨6￨e SSTableReader￨6￨e .￨6￨e decodeKey￨6￨e (￨6￨e StorageService￨6￨e .￨6￨e getPartitioner￨6￨e (￨6￨e )￨6￨e ,￨6￨e localFile￨6￨e .￨6￨e desc￨6￨e ,￨6￨e ByteBufferUtil￨6￨e .￨6￨e readWithShortLength￨6￨e (￨6￨e in￨6￨e )￨6￨e )￨6￨e ;￨6￨e long￨6￨e dataSize￨6￨e =￨6￨e SSTableReader￨6￨e .￨6￨e readRowSize￨6￨e (￨6￨e in￨6￨e ,￨6￨e localFile￨6￨e .￨6￨e desc￨6￨e )￨6￨e ;￨6￨e ColumnFamily￨6￨e cf￨6￨e =￨6￨e null￨6￨e ;￨6￨e if￨6￨j (￨6￨j cfs￨7￨c .￨7￨c metadata￨7￨c .￨7￨c getDefaultValidator￨7￨c (￨7￨c )￨7￨c .￨7￨c isCommutative￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j controller￨8￨c ==￨8￨c null￨8￨c )￨7￨j {￨7￨j controller￨8￨e =￨8￨e new￨8￨e CompactionController￨8￨e (￨8￨e cfs￨8￨e ,￨8￨e Collections￨8￨e .￨8￨e <￨8￨e SSTableReader￨8￨e >￨8￨e emptyList￨8￨e (￨8￨e )￨8￨e ,￨8￨e Integer￨8￨e .￨8￨e MAX_VALUE￨8￨e ,￨8￨e true￨8￨e )￨8￨e ;￨8￨e }￨7￨j SSTableIdentityIterator￨7￨e iter￨7￨e =￨7￨e new￨7￨e SSTableIdentityIterator￨7￨e (￨7￨e cfs￨7￨e .￨7￨e metadata￨7￨e ,￨7￨e in￨7￨e ,￨7￨e key￨7￨e ,￨7￨e 0￨7￨e ,￨7￨e dataSize￨7￨e ,￨7￨e true￨7￨e )￨7￨e ;￨7￨e AbstractCompactedRow￨7￨e row￨7￨e =￨7￨e controller￨7￨e .￨7￨e getCompactedRow￨7￨e (￨7￨e iter￨7￨e )￨7￨e ;￨7￨e writer￨7￨e .￨7￨e append￨7￨e (￨7￨e row￨7￨e )￨7￨e ;￨7￨e writer￨7￨e .￨7￨e updateMaxTimestamp￨7￨e (￨7￨e row￨7￨e .￨7￨e maxTimestamp￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j row￨8￨c instanceof￨8￨c PrecompactedRow￨8￨c )￨7￨j {￨7￨j cf￨8￨e =￨8￨e (￨8￨e (￨8￨e PrecompactedRow￨8￨e )￨8￨e (￨8￨e row￨8￨e )￨8￨e )￨8￨e .￨8￨e getFullColumnFamily￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨j else￨6￨j {￨6￨j IndexHelper￨7￨e .￨7￨e skipBloomFilter￨7￨e (￨7￨e in￨7￨e )￨7￨e ;￨7￨e IndexHelper￨7￨e .￨7￨e skipIndex￨7￨e (￨7￨e in￨7￨e )￨7￨e ;￨7￨e cf￨7￨e =￨7￨e ColumnFamily￨7￨e .￨7￨e create￨7￨e (￨7￨e cfs￨7￨e .￨7￨e metadata￨7￨e )￨7￨e ;￨7￨e ColumnFamily￨7￨e .￨7￨e serializer￨7￨e (￨7￨e )￨7￨e .￨7￨e deserializeFromSSTableNoColumns￨7￨e (￨7￨e cf￨7￨e ,￨7￨e in￨7￨e )￨7￨e ;￨7￨e ColumnFamily￨7￨e .￨7￨e serializer￨7￨e (￨7￨e )￨7￨e .￨7￨e deserializeColumns￨7￨e (￨7￨e in￨7￨e ,￨7￨e cf￨7￨e ,￨7￨e true￨7￨e ,￨7￨e true￨7￨e )￨7￨e ;￨7￨e writer￨7￨e .￨7￨e append￨7￨e (￨7￨e key￨7￨e ,￨7￨e cf￨7￨e )￨7￨e ;￨7￨e }￨6￨j ColumnFamily￨6￨e cached￨6￨e =￨6￨e cfs￨6￨e .￨6￨e getRawCachedRow￨6￨e (￨6￨e key￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j cached￨7￨c !=￨7￨c null￨7￨c )￨6￨j {￨6￨j switch￨7￨s (￨7￨s remoteFile￨7￨c .￨7￨c type￨7￨c )￨7￨s {￨7￨s case￨8￨c AES￨8￨c :￨8￨c if￨9￨j (￨9￨j dataSize￨10￨c >￨10￨c (￨10￨c DatabaseDescriptor￨10￨c .￨10￨c getInMemoryCompactionLimit￨10￨c (￨10￨c )￨10￨c )￨10￨c )￨9￨j {￨9￨j IncomingStreamReader￨10￨e .￨10￨e logger￨10￨e .￨10￨e warn￨10￨e (￨10￨e "Found<seq2seq4repair_space>a<seq2seq4repair_space>cached<seq2seq4repair_space>row<seq2seq4repair_space>over<seq2seq4repair_space>the<seq2seq4repair_space>in<seq2seq4repair_space>memory<seq2seq4repair_space>compaction<seq2seq4repair_space>limit<seq2seq4repair_space>during<seq2seq4repair_space>post-streaming<seq2seq4repair_space>rebuilt;<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>highly<seq2seq4repair_space>recommended<seq2seq4repair_space>to<seq2seq4repair_space>avoid<seq2seq4repair_space>huge<seq2seq4repair_space>row<seq2seq4repair_space>on<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>with<seq2seq4repair_space>row<seq2seq4repair_space>cache<seq2seq4repair_space>enabled."￨10￨e )￨10￨e ;￨10￨e cfs￨10￨e .￨10￨e invalidateCachedRow￨10￨e (￨10￨e key￨10￨e )￨10￨e ;￨10￨e }￨9￨j else￨9￨j {￨9￨j assert￨10￨e cf￨10￨e !=￨10￨e null￨10￨e ;￨10￨e cfs￨10￨e .￨10￨e updateRowCache￨10￨e (￨10￨e key￨10￨e ,￨10￨e cf￨10￨e )￨10￨e ;￨10￨e }￨9￨j break￨9￨e ;￨9￨e default￨8￨c :￨8￨c cfs￨9￨e .￨9￨e invalidateCachedRow￨9￨e (￨9￨e key￨9￨e )￨9￨e ;￨9￨e break￨9￨e ;￨9￨e }￨7￨s }￨6￨j bytesRead￨6￨e +=￨6￨e in￨6￨e .￨6￨e getBytesRead￨6￨e (￨6￨e )￨6￨e ;￨6￨e remoteFile￨6￨e .￨6￨e progress￨6￨e +=￨6￨e in￨6￨e .￨6￨e getBytesRead￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨l return￨4￨e writer￨4￨e .￨4￨e closeAndOpenReader￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f writer￨4￨e .￨4￨e cleanupIfNecessary￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f void￨2￨f retry￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Label￨1￨d {￨1￨d public￨2￨e CodeStream￨2￨e codeStream￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e POS_NOT_SET￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨e int￨2￨e position￨2￨e =￨2￨e Label￨2￨e .￨2￨e POS_NOT_SET￨2￨e ;￨2￨e int￨2￨e [￨2￨e ]￨2￨e forwardReferences￨2￨e =￨2￨e new￨2￨e int￨2￨e [￨2￨e 10￨2￨e ]￨2￨e ;￨2￨e int￨2￨e forwardReferenceCount￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isWide￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f Label￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Label￨2￨f (￨2￨f CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f addForwardReference￨2￨f (￨2￨f int￨3￨p iPos￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f appendForwardReferencesFrom￨2￨f (￨2￨f Label￨3￨p otherLabel￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f branch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f branchWide￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasForwardReferences￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f inlineForwardReferencesFromLabelsTargeting￨2￨f (￨2￨f int￨3￨p gotoLocation￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStandardLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f place￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c position￨4￨c )￨4￨c ==￨4￨c (￨4￨c Label￨4￨c .￨4￨c POS_NOT_SET￨4￨c )￨4￨c )￨3￨j {￨3￨j position￨4￨e =￨4￨e codeStream￨4￨e .￨4￨e position￨4￨e ;￨4￨e codeStream￨4￨e .￨4￨e addLabel￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e int￨4￨e oldPosition￨4￨e =￨4￨e position￨4￨e ;￨4￨e boolean￨4￨e optimizedBranch￨4￨e =￨4￨e false￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c forwardReferenceCount￨5￨c )￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j optimizedBranch￨6￨c =￨6￨c (￨6￨c (￨6￨c (￨6￨c forwardReferences￨6￨c [￨6￨c (￨6￨c (￨6￨c forwardReferenceCount￨6￨c )￨6￨c -￨6￨c 1￨6￨c )￨6￨c ]￨6￨c )￨6￨c +￨6￨c 2￨6￨c )￨6￨c ==￨6￨c (￨6￨c position￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c codeStream￨6￨c .￨6￨c bCodeStream￨6￨c [￨6￨c (￨6￨c (￨6￨c codeStream￨6￨c .￨6￨c classFileOffset￨6￨c )￨6￨c -￨6￨c 3￨6￨c )￨6￨c ]￨6￨c )￨6￨c ==￨6￨c (￨6￨c OPC_goto￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e position￨6￨e =￨6￨e position￨6￨e -=￨6￨e 3￨6￨e ;￨6￨e codeStream￨6￨e .￨6￨e classFileOffset￨6￨e -=￨6￨e 3￨6￨e ;￨6￨e (￨6￨e forwardReferenceCount￨6￨e )￨6￨e --￨6￨e ;￨6￨e int￨6￨e index￨6￨e =￨6￨e (￨6￨e codeStream￨6￨e .￨6￨e pcToSourceMapSize￨6￨e )￨6￨e -￨6￨e 2￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c codeStream￨7￨c .￨7￨c lastEntryPC￨7￨c )￨7￨c ==￨7￨c oldPosition￨7￨c )￨6￨j {￨6￨j codeStream￨7￨e .￨7￨e lastEntryPC￨7￨e =￨7￨e position￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j (￨7￨c index￨7￨c >=￨7￨c 0￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c codeStream￨7￨c .￨7￨c pcToSourceMap￨7￨c [￨7￨c index￨7￨c ]￨7￨c )￨7￨c ==￨7￨c (￨7￨c position￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j codeStream￨7￨e .￨7￨e pcToSourceMapSize￨7￨e -=￨7￨e 2￨7￨e ;￨7￨e }￨6￨j if￨6￨j (￨6￨j codeStream￨7￨c .￨7￨c generateLocalVariableTableAttributes￨7￨c )￨6￨j {￨6￨j LocalVariableBinding￨7￨e [￨7￨e ]￨7￨e locals￨7￨e =￨7￨e codeStream￨7￨e .￨7￨e locals￨7￨e ;￨7￨e for￨7￨l (￨7￨l int￨8￨c i￨8￨c =￨8￨c 0￨8￨c ,￨8￨c max￨8￨c =￨8￨c locals￨8￨c .￨8￨c length￨8￨c ;￨8￨c i￨8￨c <￨8￨c max￨8￨c ;￨8￨c i￨8￨c ++￨8￨c )￨7￨l {￨7￨l LocalVariableBinding￨8￨e local￨8￨e =￨8￨e locals￨8￨e [￨8￨e i￨8￨e ]￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c local￨9￨c !=￨9￨c null￨9￨c )￨9￨c &&￨9￨c (￨9￨c (￨9￨c local￨9￨c .￨9￨c initializationCount￨9￨c )￨9￨c >￨9￨c 0￨9￨c )￨9￨c )￨8￨j {￨8￨j if￨9￨j (￨9￨j (￨10￨c local￨10￨c .￨10￨c initializationPCs￨10￨c [￨10￨c (￨10￨c (￨10￨c (￨10￨c (￨10￨c local￨10￨c .￨10￨c initializationCount￨10￨c )￨10￨c -￨10￨c 1￨10￨c )￨10￨c <<￨10￨c 1￨10￨c )￨10￨c +￨10￨c 1￨10￨c )￨10￨c ]￨10￨c )￨10￨c ==￨10￨c oldPosition￨10￨c )￨9￨j {￨9￨j if￨10￨j (￨10￨j (￨11￨c local￨11￨c .￨11￨c initializationPCs￨11￨c [￨11￨c (￨11￨c (￨11￨c (￨11￨c local￨11￨c .￨11￨c initializationCount￨11￨c )￨11￨c -￨11￨c 1￨11￨c )￨11￨c <<￨11￨c 1￨11￨c )￨11￨c ]￨11￨c )￨11￨c ==￨11￨c oldPosition￨11￨c )￨10￨j {￨10￨j local￨11￨e .￨11￨e initializationPCs￨11￨e [￨11￨e (￨11￨e (￨11￨e (￨11￨e local￨11￨e .￨11￨e initializationCount￨11￨e )￨11￨e -￨11￨e 1￨11￨e )￨11￨e <<￨11￨e 1￨11￨e )￨11￨e ]￨11￨e =￨11￨e position￨11￨e ;￨11￨e }￨10￨j local￨10￨e .￨10￨e initializationPCs￨10￨e [￨10￨e (￨10￨e (￨10￨e (￨10￨e (￨10￨e local￨10￨e .￨10￨e initializationCount￨10￨e )￨10￨e -￨10￨e 1￨10￨e )￨10￨e <<￨10￨e 1￨10￨e )￨10￨e +￨10￨e 1￨10￨e )￨10￨e ]￨10￨e =￨10￨e position￨10￨e ;￨10￨e }￨9￨j }￨8￨j }￨7￨l }￨6￨j }￨5￨j }￨4￨j for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c forwardReferenceCount￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l int￨5￨e offset￨5￨e =￨5￨e (￨5￨e (￨5￨e position￨5￨e )￨5￨e -￨5￨e (￨5￨e forwardReferences￨5￨e [￨5￨e i￨5￨e ]￨5￨e )￨5￨e )￨5￨e +￨5￨e 1￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c offset￨6￨c >￨6￨c 32767￨6￨c )￨6￨c &&￨6￨c (￨6￨c !￨6￨c (￨6￨c this￨6￨c .￨6￨c codeStream￨6￨c .￨6￨c wideMode￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b throw￨6￨b new￨6￨b AbortMethod￨6￨b (￨6￨b null￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j if￨5￨j (￨5￨j this￨6￨c .￨6￨c codeStream￨6￨c .￨6￨c wideMode￨6￨c )￨5￨j {￨5￨j if￨6￨j (￨6￨j this￨7￨c .￨7￨c isWide￨7￨c )￨6￨j {￨6￨j codeStream￨7￨e .￨7￨e writeSignedWord￨7￨e (￨7￨e forwardReferences￨7￨e [￨7￨e i￨7￨e ]￨7￨e ,￨7￨e offset￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j codeStream￨7￨e .￨7￨e writeSignedShort￨7￨e (￨7￨e forwardReferences￨7￨e [￨7￨e i￨7￨e ]￨7￨e ,￨7￨e (￨7￨e (￨7￨e short￨7￨e )￨7￨e (￨7￨e offset￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e writeSignedShort￨6￨e (￨6￨e forwardReferences￨6￨e [￨6￨e i￨6￨e ]￨6￨e ,￨6￨e (￨6￨e (￨6￨e short￨6￨e )￨6￨e (￨6￨e offset￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l if￨4￨j (￨4￨j optimizedBranch￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c codeStream￨6￨c .￨6￨c countLabels￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l Label￨6￨e label￨6￨e =￨6￨e codeStream￨6￨e .￨6￨e labels￨6￨e [￨6￨e i￨6￨e ]￨6￨e ;￨6￨e if￨6￨j (￨6￨j oldPosition￨7￨c ==￨7￨c (￨7￨c label￨7￨c .￨7￨c position￨7￨c )￨7￨c )￨6￨j {￨6￨j label￨7￨e .￨7￨e position￨7￨e =￨7￨e position￨7￨e ;￨7￨e if￨7￨j (￨7￨j label￨8￨c instanceof￨8￨c CaseLabel￨8￨c )￨7￨j {￨7￨j int￨8￨e offset￨8￨e =￨8￨e (￨8￨e position￨8￨e )￨8￨e -￨8￨e (￨8￨e (￨8￨e (￨8￨e CaseLabel￨8￨e )￨8￨e (￨8￨e label￨8￨e )￨8￨e )￨8￨e .￨8￨e instructionPosition￨8￨e )￨8￨e ;￨8￨e for￨8￨l (￨8￨l int￨9￨c j￨9￨c =￨9￨c 0￨9￨c ;￨9￨c j￨9￨c <￨9￨c (￨9￨c label￨9￨c .￨9￨c forwardReferenceCount￨9￨c )￨9￨c ;￨9￨c j￨9￨c ++￨9￨c )￨8￨l {￨8￨l int￨9￨e forwardPosition￨9￨e =￨9￨e label￨9￨e .￨9￨e forwardReferences￨9￨e [￨9￨e j￨9￨e ]￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e writeSignedWord￨9￨e (￨9￨e forwardPosition￨9￨e ,￨9￨e offset￨9￨e )￨9￨e ;￨9￨e }￨8￨l }￨7￨j else￨7￨j {￨7￨j for￨8￨l (￨8￨l int￨9￨c j￨9￨c =￨9￨c 0￨9￨c ;￨9￨c j￨9￨c <￨9￨c (￨9￨c label￨9￨c .￨9￨c forwardReferenceCount￨9￨c )￨9￨c ;￨9￨c j￨9￨c ++￨9￨c )￨8￨l {￨8￨l int￨9￨e forwardPosition￨9￨e =￨9￨e label￨9￨e .￨9￨e forwardReferences￨9￨e [￨9￨e j￨9￨e ]￨9￨e ;￨9￨e int￨9￨e offset￨9￨e =￨9￨e (￨9￨e (￨9￨e position￨9￨e )￨9￨e -￨9￨e forwardPosition￨9￨e )￨9￨e +￨9￨e 1￨9￨e ;￨9￨e if￨9￨j (￨9￨j (￨10￨c offset￨10￨c >￨10￨c 32767￨10￨c )￨10￨c &&￨10￨c (￨10￨c !￨10￨c (￨10￨c this￨10￨c .￨10￨c codeStream￨10￨c .￨10￨c wideMode￨10￨c )￨10￨c )￨10￨c )￨9￨j {￨9￨j throw￨10￨e new￨10￨e AbortMethod￨10￨e (￨10￨e CodeStream￨10￨e .￨10￨e RESTART_IN_WIDE_MODE￨10￨e )￨10￨e ;￨10￨e }￨9￨j if￨9￨j (￨9￨j this￨10￨c .￨10￨c codeStream￨10￨c .￨10￨c wideMode￨10￨c )￨9￨j {￨9￨j if￨10￨j (￨10￨j this￨11￨c .￨11￨c isWide￨11￨c )￨10￨j {￨10￨j codeStream￨11￨e .￨11￨e writeSignedWord￨11￨e (￨11￨e forwardPosition￨11￨e ,￨11￨e offset￨11￨e )￨11￨e ;￨11￨e }￨10￨j else￨10￨j {￨10￨j codeStream￨11￨e .￨11￨e writeSignedShort￨11￨e (￨11￨e forwardPosition￨11￨e ,￨11￨e (￨11￨e (￨11￨e short￨11￨e )￨11￨e (￨11￨e offset￨11￨e )￨11￨e )￨11￨e )￨11￨e ;￨11￨e }￨10￨j }￨9￨j else￨9￨j {￨9￨j codeStream￨10￨e .￨10￨e writeSignedShort￨10￨e (￨10￨e forwardPosition￨10￨e ,￨10￨e (￨10￨e (￨10￨e short￨10￨e )￨10￨e (￨10￨e offset￨10￨e )￨10￨e )￨10￨e )￨10￨e ;￨10￨e }￨9￨j }￨8￨l }￨7￨j }￨6￨j }￨5￨l }￨4￨j }￨3￨j }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetStateForCodeGeneration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Assert￨1￨d {￨1￨d protected￨2￨f Assert￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertTrue￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p boolean￨3￨p condition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertTrue￨2￨f (￨2￨f boolean￨3￨p condition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertFalse￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p boolean￨3￨p condition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertFalse￨2￨f (￨2￨f boolean￨3￨p condition￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f fail￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f fail￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p String￨3￨p expected￨3￨p ,￨3￨p String￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p expected￨3￨p ,￨3￨p String￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f double￨3￨p expected￨3￨p ,￨3￨p double￨3￨p actual￨3￨p ,￨3￨p double￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p float￨3￨p expected￨3￨p ,￨3￨p float￨3￨p actual￨3￨p ,￨3￨p float￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f float￨3￨p expected￨3￨p ,￨3￨p float￨3￨p actual￨3￨p ,￨3￨p float￨3￨p delta￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p long￨3￨p expected￨3￨p ,￨3￨p long￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f long￨3￨p expected￨3￨p ,￨3￨p long￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p boolean￨3￨p expected￨3￨p ,￨3￨p boolean￨3￨p actual￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b Assert￨3￨b .￨3￨b assertEquals￨3￨b (￨3￨b message￨3￨b ,￨3￨b new￨3￨b Boolean￨3￨b (￨3￨b expected￨3￨b )￨3￨b ,￨3￨b new￨3￨b Boolean￨3￨b (￨3￨b actual￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f boolean￨3￨p expected￨3￨p ,￨3￨p boolean￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p byte￨3￨p expected￨3￨p ,￨3￨p byte￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f byte￨3￨p expected￨3￨p ,￨3￨p byte￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p char￨3￨p expected￨3￨p ,￨3￨p char￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f char￨3￨p expected￨3￨p ,￨3￨p char￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p short￨3￨p expected￨3￨p ,￨3￨p short￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f short￨3￨p expected￨3￨p ,￨3￨p short￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p int￨3￨p expected￨3￨p ,￨3￨p int￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertEquals￨2￨f (￨2￨f int￨3￨p expected￨3￨p ,￨3￨p int￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNotNull￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNotNull￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNull￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNull￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertSame￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertSame￨2￨f (￨2￨f Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNotSame￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f assertNotSame￨2￨f (￨2￨f Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f failSame￨2￨f (￨2￨f String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f failNotSame￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f failNotEquals￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f String￨2￨f format￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p Object￨3￨p expected￨3￨p ,￨3￨p Object￨3￨p actual￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d InitBinderDataBinderFactory￨1￨d extends￨1￨d DefaultDataBinderFactory￨1￨d {￨1￨d private￨2￨e final￨2￨e List￨2￨e <￨2￨e InvocableHandlerMethod￨2￨e >￨2￨e binderMethods￨2￨e ;￨2￨e public￨2￨f InitBinderDataBinderFactory￨2￨f (￨2￨f List￨3￨p <￨3￨p InvocableHandlerMethod￨3￨p >￨3￨p binderMethods￨3￨p ,￨3￨p WebBindingInitializer￨3￨p initializer￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initBinder￨2￨f (￨2￨f WebDataBinder￨2￨f binder￨2￨f ,￨2￨f NativeWebRequest￨2￨f request￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f for￨3￨l (￨3￨l InvocableHandlerMethod￨4￨c binderMethod￨4￨c :￨4￨c this￨4￨c .￨4￨c binderMethods￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j !￨5￨c (￨5￨c isBinderMethodApplicable￨5￨c (￨5￨c binderMethod￨5￨c ,￨5￨c binder￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j continue￨5￨e ;￨5￨e }￨4￨j Object￨4￨e returnValue￨4￨e =￨4￨e binderMethod￨4￨e .￨4￨e invokeForRequest￨4￨e (￨4￨e request￨4￨e ,￨4￨e null￨4￨e ,￨4￨e binder￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j returnValue￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b throw￨5￨b new￨5￨b IllegalStateException￨5￨b (￨5￨b (￨5￨b "This<seq2seq4repair_space>@InitBinder<seq2seq4repair_space>method<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>return<seq2seq4repair_space>void:<seq2seq4repair_space>"￨5￨b +￨5￨b binderMethod￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨l }￨2￨f protected￨2￨f boolean￨2￨f isBinderMethodApplicable￨2￨f (￨2￨f HandlerMethod￨3￨p binderMethod￨3￨p ,￨3￨p WebDataBinder￨3￨p binder￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestSynchronizedCollection￨1￨d <￨1￨d E￨1￨d >￨1￨d extends￨1￨d AbstractTestCollection￨1￨d <￨1￨d E￨1￨d >￨1￨d {￨1￨d public￨2￨f TestSynchronizedCollection￨2￨f (￨2￨f String￨3￨p testName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeObject￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b SynchronizedCollection￨3￨b .￨3￨b decorate￨3￨b (￨3￨b new￨3￨b ArrayList￨3￨b <￨3￨b E￨3￨b >￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeConfirmedCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Collection￨2￨f <￨2￨f E￨2￨f >￨2￨f makeConfirmedFullCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getCompatibilityVersion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Recorder￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d HiddenField￨1￨d <￨1￨d Object￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e [￨2￨e ]￨2￨e EMPTY_IDS￨2￨e =￨2￨e new￨2￨e String￨2￨e [￨2￨e 0￨2￨e ]￨2￨e ;￨2￨e private￨2￨e String￨2￨e [￨2￨e ]￨2￨e ids￨2￨e ;￨2￨e private￨2￨e final￨2￨e Palette￨2￨e <￨2￨e T￨2￨e >￨2￨e palette￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e attached￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f Palette￨2￨f <￨2￨f T￨2￨f >￨2￨f getPalette￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Recorder￨2￨f (￨2￨f String￨3￨p id￨3￨p ,￨3￨p Palette￨3￨p <￨3￨p T￨3￨p >￨3￨p palette￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onBeforeRender￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initIds￨2￨f (￨2￨f )￨2￨f {￨2￨f IChoiceRenderer￨3￨e <￨3￨e T￨3￨e >￨3￨e renderer￨3￨e =￨3￨e getPalette￨3￨e (￨3￨e )￨3￨e .￨3￨e getChoiceRenderer￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b StringBuffer￨3￨b modelStringBuffer￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Collection￨3￨e <￨3￨e T￨3￨e >￨3￨e modelCollection￨3￨e =￨3￨e getPalette￨3￨e (￨3￨e )￨3￨e .￨3￨e getModelCollection￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j modelCollection￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e WicketRuntimeException￨4￨e (￨4￨e (￨4￨e "Expected<seq2seq4repair_space>getPalette().getModelCollection()<seq2seq4repair_space>to<seq2seq4repair_space>return<seq2seq4repair_space>a<seq2seq4repair_space>non-null<seq2seq4repair_space>value."￨4￨e +￨4￨e "<seq2seq4repair_space>Please<seq2seq4repair_space>make<seq2seq4repair_space>sure<seq2seq4repair_space>you<seq2seq4repair_space>have<seq2seq4repair_space>model<seq2seq4repair_space>object<seq2seq4repair_space>assigned<seq2seq4repair_space>to<seq2seq4repair_space>the<seq2seq4repair_space>palette"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j Iterator￨3￨e <￨3￨e T￨3￨e >￨3￨e selection￨3￨e =￨3￨e modelCollection￨3￨e .￨3￨e iterator￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e i￨3￨e =￨3￨e 0￨3￨e ;￨3￨e while￨3￨l (￨3￨l selection￨4￨c .￨4￨c hasNext￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l modelStringBuffer￨4￨e .￨4￨e append￨4￨e (￨4￨e renderer￨4￨e .￨4￨e getIdValue￨4￨e (￨4￨e selection￨4￨e .￨4￨e next￨4￨e (￨4￨e )￨4￨e ,￨4￨e (￨4￨e i￨4￨e ++￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j selection￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j modelStringBuffer￨5￨e .￨5￨e append￨5￨e (￨5￨e ","￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l String￨3￨e modelString￨3￨e =￨3￨e modelStringBuffer￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e setDefaultModel￨3￨e (￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e wicket￨3￨e .￨3￨e model￨3￨e .￨3￨e Model￨3￨e <￨3￨e String￨3￨e >￨3￨e (￨3￨e modelString￨3￨e )￨3￨e )￨3￨e ;￨3￨e updateIds￨3￨e (￨3￨e modelString￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onValid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f Iterator￨2￨f <￨2￨f T￨2￨f >￨2￨f getSelectedChoices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Iterator￨2￨f <￨2￨f T￨2￨f >￨2￨f getUnselectedChoices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onInvalid￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateIds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f updateIds￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BinaryMemtable￨1￨d implements￨1￨d IFlushable￨1￨d <￨1￨d DecoratedKey￨1￨d >￨1￨d {￨1￨d private￨2￨d static￨2￨d Logger￨2￨d logger_￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d BinaryMemtable￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d int￨2￨d threshold_￨2￨d =￨2￨d (￨2￨d (￨2￨d DatabaseDescriptor￨2￨d .￨2￨d getBMTThreshold￨2￨d (￨2￨d )￨2￨d )￨2￨d *￨2￨d 1024￨2￨d )￨2￨d *￨2￨d 1024￨2￨d ;￨2￨d private￨2￨d AtomicInteger￨2￨d currentSize_￨2￨d =￨2￨d new￨2￨d AtomicInteger￨2￨d (￨2￨d 0￨2￨d )￨2￨d ;￨2￨d private￨2￨d String￨2￨d table_￨2￨d ;￨2￨d private￨2￨d String￨2￨d cfName_￨2￨d ;￨2￨d private￨2￨d boolean￨2￨d isFrozen_￨2￨d =￨2￨d false￨2￨d ;￨2￨d private￨2￨d Map￨2￨d <￨2￨d DecoratedKey￨2￨d ,￨2￨d byte￨2￨d [￨2￨d ]￨2￨d >￨2￨d columnFamilies_￨2￨d =￨2￨d new￨2￨d org￨2￨d .￨2￨d cliffc￨2￨d .￨2￨d high_scale_lib￨2￨d .￨2￨d NonBlockingHashMap￨2￨d <￨2￨d DecoratedKey￨2￨d ,￨2￨d byte￨2￨d [￨2￨d ]￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d Lock￨2￨d lock_￨2￨d =￨2￨d new￨2￨d ReentrantLock￨2￨d (￨2￨d )￨2￨d ;￨2￨d Condition￨2￨d condition_￨2￨d ;￨2￨d private￨2￨d final￨2￨d IPartitioner￨2￨d partitioner_￨2￨d =￨2￨d StorageService￨2￨d .￨2￨d getPartitioner￨2￨d (￨2￨d )￨2￨d ;￨2￨d BinaryMemtable￨2￨d (￨2￨d String￨2￨d table￨2￨d ,￨2￨d String￨2￨d cfName￨2￨d )￨2￨d throws￨2￨d IOException￨2￨d {￨2￨d }￨2￨d public￨2￨f int￨2￨f getMemtableThreshold￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f resolveSize￨2￨f (￨2￨f int￨3￨p oldSize￨3￨p ,￨3￨p int￨3￨p newSize￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isThresholdViolated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f String￨2￨f getColumnFamily￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f put￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buffer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f resolve￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p byte￨3￨p [￨3￨p ]￨3￨p buffer￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f <￨2￨f DecoratedKey￨2￨f >￨2￨f getSortedKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SSTableReader￨2￨f writeSortedContents￨2￨f (￨2￨f List￨2￨f <￨2￨f DecoratedKey￨2￨f >￨2￨f sortedKeys￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f BinaryMemtable￨3￨e .￨3￨e logger_￨3￨e .￨3￨e info￨3￨e (￨3￨e (￨3￨e "Writing<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e this￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e ColumnFamilyStore￨3￨e cfStore￨3￨e =￨3￨e Table￨3￨e .￨3￨e open￨3￨e (￨3￨e table_￨3￨e )￨3￨e .￨3￨e getColumnFamilyStore￨3￨e (￨3￨e cfName_￨3￨e )￨3￨e ;￨3￨e String￨3￨e path￨3￨e =￨3￨e cfStore￨3￨e .￨3￨e getTempSSTablePath￨3￨e (￨3￨e )￨3￨e ;￨3￨e SSTableWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e SSTableWriter￨3￨e (￨3￨e path￨3￨e ,￨3￨e sortedKeys￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e ,￨3￨e StorageService￨3￨e .￨3￨e getPartitioner￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l DecoratedKey￨4￨c key￨4￨c :￨4￨c sortedKeys￨4￨c )￨3￨l {￨3￨l byte￨4￨e [￨4￨e ]￨4￨e bytes￨4￨e =￨4￨e columnFamilies_￨4￨e .￨4￨e get￨4￨e (￨4￨e key￨4￨e )￨4￨e ;￨4￨e assert￨4￨e (￨4￨e bytes￨4￨e .￨4￨e length￨4￨e )￨4￨e >￨4￨e 0￨4￨e ;￨4￨e writer￨4￨e .￨4￨e append￨4￨e (￨4￨e key￨4￨e ,￨4￨e bytes￨4￨e )￨4￨e ;￨4￨e }￨3￨l <START_BUG>￨3￨b SSTableReader￨3￨b sstable￨3￨b =￨3￨b writer￨3￨b .￨3￨b closeAndOpenReader￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b BinaryMemtable￨3￨e .￨3￨e logger_￨3￨e .￨3￨e info￨3￨e (￨3￨e (￨3￨e "Completed<seq2seq4repair_space>flushing<seq2seq4repair_space>"￨3￨e +￨3￨e (￨3￨e writer￨3￨e .￨3￨e getFilename￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e sstable￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d HtmlHandler￨1￨d extends￨1￨d AbstractMarkupFilter￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d HtmlHandler￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d ArrayListStack￨2￨d <￨2￨d ComponentTag￨2￨d >￨2￨d stack￨2￨d =￨2￨d new￨2￨d ArrayListStack￨2￨d <￨2￨d ComponentTag￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d Map￨2￨d <￨2￨d String￨2￨d ,￨2￨d Boolean￨2￨d >￨2￨d doesNotRequireCloseTag￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d Boolean￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d public￨2￨d HtmlHandler￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f MarkupElement￨2￨f nextTag￨2￨f (￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b final￨3￨b ComponentTag￨3￨b tag￨3￨b =￨3￨b (￨3￨b (￨3￨b ComponentTag￨3￨b )￨3￨b (￨3￨b getParent￨3￨b (￨3￨b )￨3￨b .￨3￨b nextTag￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j tag￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j while￨4￨l (￨4￨l (￨5￨c stack￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨l {￨4￨l final￨5￨e ComponentTag￨5￨e top￨5￨e =￨5￨e stack￨5￨e .￨5￨e peek￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j !￨6￨c (￨6￨c HtmlHandler￨6￨c .￨6￨c requiresCloseTag￨6￨c (￨6￨c top￨6￨c .￨6￨c getName￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j stack￨6￨e .￨6￨e pop￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j throw￨6￨e new￨6￨e org￨6￨e .￨6￨e apache￨6￨e .￨6￨e wicket￨6￨e .￨6￨e markup￨6￨e .￨6￨e WicketParseException￨6￨e (￨6￨e "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag:"￨6￨e ,￨6￨e top￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l return￨4￨e tag￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j HtmlHandler￨4￨c .￨4￨c log￨4￨c .￨4￨c isDebugEnabled￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j HtmlHandler￨4￨e .￨4￨e log￨4￨e .￨4￨e debug￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "tag:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e tag￨4￨e .￨4￨e toUserDebugString￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e +￨4￨e ",<seq2seq4repair_space>stack:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e stack￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j tag￨4￨c .￨4￨c isOpen￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j stack￨4￨e .￨4￨e push￨4￨e (￨4￨e tag￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j tag￨4￨c .￨4￨c isClose￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c stack￨5￨c .￨5￨c size￨5￨c (￨5￨c )￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j ComponentTag￨5￨e top￨5￨e =￨5￨e stack￨5￨e .￨5￨e pop￨5￨e (￨5￨e )￨5￨e ;￨5￨e boolean￨5￨e mismatch￨5￨e =￨5￨e !￨5￨e (￨5￨e top￨5￨e .￨5￨e hasEqualTagName￨5￨e (￨5￨e tag￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j mismatch￨6￨c )￨5￨j {￨5￨j top￨6￨e .￨6￨e setHasNoCloseTag￨6￨e (￨6￨e true￨6￨e )￨6￨e ;￨6￨e while￨6￨l (￨6￨l mismatch￨7￨c &&￨7￨c (￨7￨c !￨7￨c (￨7￨c HtmlHandler￨7￨c .￨7￨c requiresCloseTag￨7￨c (￨7￨c top￨7￨c .￨7￨c getName￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨7￨c )￨6￨l {￨6￨l top￨7￨e .￨7￨e setHasNoCloseTag￨7￨e (￨7￨e true￨7￨e )￨7￨e ;￨7￨e if￨7￨j (￨7￨j stack￨8￨c .￨8￨c isEmpty￨8￨c (￨8￨c )￨8￨c )￨7￨j {￨7￨j break￨8￨e ;￨8￨e }￨7￨j top￨7￨e =￨7￨e stack￨7￨e .￨7￨e pop￨7￨e (￨7￨e )￨7￨e ;￨7￨e mismatch￨7￨e =￨7￨e !￨7￨e (￨7￨e top￨7￨e .￨7￨e hasEqualTagName￨7￨e (￨7￨e tag￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨l if￨6￨j (￨6￨j mismatch￨7￨c )￨6￨j {￨6￨j throw￨7￨e new￨7￨e ParseException￨7￨e (￨7￨e (￨7￨e (￨7￨e (￨7￨e "Tag<seq2seq4repair_space>"￨7￨e +￨7￨e (￨7￨e top￨7￨e .￨7￨e toUserDebugString￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e +￨7￨e "<seq2seq4repair_space>has<seq2seq4repair_space>a<seq2seq4repair_space>mismatched<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>at<seq2seq4repair_space>"￨7￨e )￨7￨e +￨7￨e (￨7￨e tag￨7￨e .￨7￨e toUserDebugString￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ,￨7￨e top￨7￨e .￨7￨e getPos￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j tag￨5￨e .￨5￨e setOpenTag￨5￨e (￨5￨e top￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j throw￨5￨e new￨5￨e org￨5￨e .￨5￨e apache￨5￨e .￨5￨e wicket￨5￨e .￨5￨e markup￨5￨e .￨5￨e WicketParseException￨5￨e (￨5￨e "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>matching<seq2seq4repair_space>open<seq2seq4repair_space>tag:"￨5￨e ,￨5￨e tag￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j if￨3￨j (￨3￨j tag￨4￨c .￨4￨c isOpenClose￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j tag￨4￨e .￨4￨e setOpenTag￨4￨e (￨4￨e tag￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e tag￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f requiresCloseTag￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestIndexReaderReopen￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨e File￨2￨e indexDir￨2￨e ;￨2￨e public￨2￨f void￨2￨f testReopen￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testParallelReaderReopen￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCommitReopenFS￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCommitRecreateFS￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCommitReopenRAM￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testCommitRecreateRAM￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestReopenWithCommit￨2￨f (￨2￨f Random￨2￨f random￨2￨f ,￨2￨f Directory￨2￨f dir￨2￨f ,￨2￨f boolean￨2￨f withReopen￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMultiReaderReopen￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testMixedReaders￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f performDefaultTests￨2￨f (￨2￨f TestIndexReaderReopen￨2￨f .￨2￨f TestReopen￨2￨f test￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReferenceCounting￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReferenceCountingMultiReader￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReferenceCountingParallelReader￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testNormsRefCounting￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f performTestsWithExceptionInReopen￨2￨f (￨2￨f TestIndexReaderReopen￨2￨f .￨2￨f TestReopen￨2￨f test￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testThreadSafety￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d ReaderCouple￨2￨d {￨2￨d ReaderCouple￨3￨f (￨3￨f IndexReader￨4￨p r1￨4￨p ,￨4￨p IndexReader￨4￨p r2￨4￨p )￨3￨f {￨3￨f }￨3￨f IndexReader￨3￨e newReader￨3￨e ;￨3￨e IndexReader￨3￨e refreshedReader￨3￨e ;￨3￨e }￨2￨d private￨2￨d abstract￨2￨d static￨2￨d class￨2￨d ReaderThreadTask￨2￨d {￨2￨d protected￨3￨e volatile￨3￨e boolean￨3￨e stopped￨3￨e ;￨3￨e public￨3￨f void￨3￨f stop￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f abstract￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d ReaderThread￨2￨d extends￨2￨d Thread￨2￨d {￨2￨d private￨3￨e TestIndexReaderReopen￨3￨e .￨3￨e ReaderThreadTask￨3￨e task￨3￨e ;￨3￨e private￨3￨e Throwable￨3￨e error￨3￨e ;￨3￨e ReaderThread￨3￨f (￨3￨f TestIndexReaderReopen￨4￨p .￨4￨p ReaderThreadTask￨4￨p task￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f stopThread￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨e Object￨2￨e createReaderMutex￨2￨e =￨2￨e new￨2￨e Object￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f TestIndexReaderReopen￨2￨f .￨2￨f ReaderCouple￨2￨f refreshReader￨2￨f (￨2￨f IndexReader￨2￨f reader￨2￨f ,￨2￨f boolean￨2￨f hasChanges￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f TestIndexReaderReopen￨2￨f .￨2￨f ReaderCouple￨2￨f refreshReader￨2￨f (￨2￨f IndexReader￨2￨f reader￨2￨f ,￨2￨f TestIndexReaderReopen￨2￨f .￨2￨f TestReopen￨2￨f test￨2￨f ,￨2￨f int￨2￨f modify￨2￨f ,￨2￨f boolean￨2￨f hasChanges￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f createIndex￨2￨f (￨2￨f Random￨2￨f random￨2￨f ,￨2￨f Directory￨2￨f dir￨2￨f ,￨2￨f boolean￨2￨f multiSegment￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Document￨2￨f createDocument￨2￨f (￨2￨f int￨3￨p n￨3￨p ,￨3￨p int￨3￨p numFields￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f modifyIndex￨2￨f (￨2￨f int￨2￨f i￨2￨f ,￨2￨f Directory￨2￨f dir￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertReaderClosed￨2￨f (￨2￨f IndexReader￨3￨p reader￨3￨p ,￨3￨p boolean￨3￨p checkSubReaders￨3￨p ,￨3￨p boolean￨3￨p checkNormsClosed￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f assertRefCountEquals￨2￨f (￨2￨f int￨3￨p refCount￨3￨p ,￨3￨p IndexReader￨3￨p reader￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d abstract￨2￨d static￨2￨d class￨2￨d TestReopen￨2￨d {￨2￨d protected￨3￨f abstract￨3￨f IndexReader￨3￨f openReader￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f abstract￨3￨f void￨3￨f modifyIndex￨3￨f (￨3￨f int￨3￨f i￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b indexDir￨3￨b =￨3￨b new￨3￨b File￨3￨b (￨3￨b TEMP_DIR￨3￨b ,￨3￨b "IndexReaderReopen"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testCloseOrig￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testDeletes￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testDeletes2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d KeepAllCommits￨2￨d implements￨2￨d IndexDeletionPolicy￨2￨d {￨2￨d public￨3￨f void￨3￨f onInit￨3￨f (￨3￨f List￨4￨p <￨4￨p ?￨4￨p extends￨4￨p IndexCommit￨4￨p >￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f onCommit￨3￨f (￨3￨f List￨4￨p <￨4￨p ?￨4￨p extends￨4￨p IndexCommit￨4￨p >￨4￨p commits￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f testReopenOnCommit￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d DiscoveryTest￨1￨d extends￨1￨d AbstractDiscoveryTest￨1￨d {￨1￨d protected￨2￨e IServiceInfo￨2￨e serviceInfo￨2￨e ;￨2￨e protected￨2￨e IServiceInfo￨2￨e serviceInfo2￨2￨e ;￨2￨e protected￨2￨e IServiceInfo￨2￨e serviceInfo3￨2￨e ;￨2￨e protected￨2￨e String￨2￨e containerUnderTest￨2￨e ;￨2￨e protected￨2￨e long￨2￨e waitTimeForProvider￨2￨e =￨2￨e 1000￨2￨e ;￨2￨e protected￨2￨e Comparator￨2￨e comparator￨2￨e =￨2￨e new￨2￨e ServiceInfoComparator￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e protocol￨2￨e =￨2￨e PROTOCOL￨2￨e ;￨2￨e private￨2￨e String￨2￨e scope￨2￨e =￨2￨e SCOPE￨2￨e ;￨2￨e private￨2￨e String￨2￨e namingAuthority￨2￨e =￨2￨e NAMINGAUTHORITY￨2￨e ;￨2￨e protected￨2￨e IContainer￨2￨e container￨2￨e =￨2￨e null￨2￨e ;￨2￨e protected￨2￨e IDiscoveryContainerAdapter￨2￨e discoveryContainer￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f DiscoveryTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IDiscoveryContainerAdapter￨2￨f getAdapter￨2￨f (￨2￨f Class￨3￨p clazz￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IServiceID￨2￨f createServiceID￨2￨f (￨2￨f String￨2￨f serviceType￨2￨f ,￨2￨f String￨2￨f serviceName￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f registerService￨2￨f (￨2￨f IServiceInfo￨2￨f serviceInfo￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f unregisterService￨2￨f (￨2￨f IServiceInfo￨2￨f serviceInfo￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setWaitTimeForProvider￨2￨f (￨2￨f long￨3￨p aWaitTimeForProvider￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setComparator￨2￨f (￨2￨f Comparator￨3￨p comparator￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setProtocol￨2￨f (￨2￨f String￨3￨p protocol￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setScope￨2￨f (￨2￨f String￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setNamingAuthority￨2￨f (￨2￨f String￨3￨p namingAuthority￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getServiceType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e containerUnderTest￨3￨e )￨3￨e ;￨3￨e assertTrue￨3￨e (￨3￨e containerUnderTest￨3￨e .￨3￨e startsWith￨3￨e (￨3￨e "ecf.discovery."￨3￨e )￨3￨e )￨3￨e ;￨3￨e container￨3￨e =￨3￨e ContainerFactory￨3￨e .￨3￨e getDefault￨3￨e (￨3￨e )￨3￨e .￨3￨e createContainer￨3￨e (￨3￨e containerUnderTest￨3￨e )￨3￨e ;￨3￨e discoveryContainer￨3￨d =￨3￨d getAdapter￨3￨d (￨3￨d IDiscoveryContainerAdapter￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d assertNotNull￨3￨d (￨3￨d container￨3￨d )￨3￨d ;￨3￨d assertNotNull￨3￨d (￨3￨d discoveryContainer￨3￨d )￨3￨d ;￨3￨d final￨3￨d Properties￨3￨d props￨3￨d =￨3￨d new￨3￨d Properties￨3￨d (￨3￨d )￨3￨d ;￨3￨d final￨3￨d URI￨3￨d uri￨3￨d =￨3￨d createDefaultURI￨3￨d (￨3￨d )￨3￨d ;￨3￨d IServiceID￨3￨d serviceID￨3￨d =￨3￨d (￨3￨d (￨3￨d IServiceID￨3￨d )￨3￨d (￨3￨d IDFactory￨3￨d .￨3￨d getDefault￨3￨d (￨3￨d )￨3￨d .￨3￨d createID￨3￨d (￨3￨d discoveryContainer￨3￨d .￨3￨d getServicesNamespace￨3￨d (￨3￨d )￨3￨d ,￨3￨d new￨3￨d Object￨3￨d [￨3￨d ]￨3￨d {￨3￨d }￨3￨d )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceID￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceProperties￨3￨e serviceProperties￨3￨e =￨3￨e new￨3￨e ServiceProperties￨3￨e (￨3￨e props￨3￨e )￨3￨e ;￨3￨e serviceProperties￨3￨d .￨3￨d setPropertyString￨3￨d (￨3￨d (￨3￨d (￨3￨d DiscoveryTest￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d +￨3￨d "servicePropertiesString"￨3￨d )￨3￨d ,￨3￨d "serviceProperties"￨3￨d )￨3￨d ;￨3￨d serviceProperties￨3￨d .￨3￨d setProperty￨3￨d (￨3￨d (￨3￨d (￨3￨d DiscoveryTest￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d +￨3￨d "servicePropertiesIntegerMax"￨3￨d )￨3￨d ,￨3￨d new￨3￨d Integer￨3￨d (￨3￨d Integer￨3￨d .￨3￨d MIN_VALUE￨3￨d )￨3￨d )￨3￨d ;￨3￨d serviceProperties￨3￨d .￨3￨d setProperty￨3￨d (￨3￨d (￨3￨d (￨3￨d DiscoveryTest￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d +￨3￨d "servicePropertiesIntegerMin"￨3￨d )￨3￨d ,￨3￨d new￨3￨d Integer￨3￨d (￨3￨d Integer￨3￨d .￨3￨d MAX_VALUE￨3￨d )￨3￨d )￨3￨d ;￨3￨d serviceProperties￨3￨d .￨3￨d setProperty￨3￨d (￨3￨d (￨3￨d (￨3￨d DiscoveryTest￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d +￨3￨d "servicePropertiesBoolean"￨3￨d )￨3￨d ,￨3￨d new￨3￨d Boolean￨3￨d (￨3￨d false￨3￨d )￨3￨d )￨3￨d ;￨3￨d <START_BUG>￨3￨d serviceProperties￨3￨d .￨3￨d setPropertyBytes￨3￨d (￨3￨d (￨3￨d (￨3￨d DiscoveryTest￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d +￨3￨d "servicePropertiesByte"￨3￨d )￨3￨d ,￨3￨d new￨3￨d byte￨3￨d [￨3￨d ]￨3￨d {￨3￨d }￨3￨d )￨3￨e ;￨3￨e <END_BUG>￨3￨e serviceInfo￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e eclipse￨3￨e .￨3￨e ecf￨3￨e .￨3￨e discovery￨3￨e .￨3￨e ServiceInfo￨3￨e (￨3￨e uri￨3￨e ,￨3￨e serviceID￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e 1￨3￨e ,￨3￨e serviceProperties￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceInfo￨3￨e )￨3￨e ;￨3￨e IServiceID￨3￨f serviceID2￨3￨f =￨3￨f (￨3￨f (￨3￨f IServiceID￨3￨f )￨3￨f (￨3￨f IDFactory￨3￨f .￨3￨f getDefault￨3￨f (￨3￨f )￨3￨f .￨3￨f createID￨3￨f (￨3￨f discoveryContainer￨3￨f .￨3￨f getServicesNamespace￨3￨f (￨3￨f )￨3￨f ,￨3￨f new￨3￨f Object￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceID￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceProperties￨3￨e serviceProperties2￨3￨e =￨3￨e new￨3￨e ServiceProperties￨3￨e (￨3￨e props￨3￨e )￨3￨e ;￨3￨e serviceProperties2￨3￨e .￨3￨e setPropertyString￨3￨e (￨3￨e "serviceProperties2"￨3￨e ,￨3￨e "serviceProperties2"￨3￨e )￨3￨e ;￨3￨e serviceInfo2￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e eclipse￨3￨e .￨3￨e ecf￨3￨e .￨3￨e discovery￨3￨e .￨3￨e ServiceInfo￨3￨e (￨3￨e uri￨3￨e ,￨3￨e serviceID2￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e 2￨3￨e ,￨3￨e serviceProperties2￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceInfo2￨3￨e )￨3￨e ;￨3￨e IServiceID￨3￨f serviceID3￨3￨f =￨3￨f (￨3￨f (￨3￨f IServiceID￨3￨f )￨3￨f (￨3￨f IDFactory￨3￨f .￨3￨f getDefault￨3￨f (￨3￨f )￨3￨f .￨3￨f createID￨3￨f (￨3￨f discoveryContainer￨3￨f .￨3￨f getServicesNamespace￨3￨f (￨3￨f )￨3￨f ,￨3￨f new￨3￨f Object￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceID￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceProperties￨3￨e serviceProperties3￨3￨e =￨3￨e new￨3￨e ServiceProperties￨3￨e (￨3￨e props￨3￨e )￨3￨e ;￨3￨e serviceProperties3￨3￨e .￨3￨e setPropertyString￨3￨e (￨3￨e "serviceProperties3"￨3￨e ,￨3￨e "serviceProperties3"￨3￨e )￨3￨e ;￨3￨e serviceInfo3￨3￨e =￨3￨e new￨3￨e org￨3￨e .￨3￨e eclipse￨3￨e .￨3￨e ecf￨3￨e .￨3￨e discovery￨3￨e .￨3￨e ServiceInfo￨3￨e (￨3￨e uri￨3￨e ,￨3￨e serviceID3￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e 3￨3￨e ,￨3￨e serviceProperties3￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e serviceInfo3￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f registerService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f unregisterService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testConnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testConnectTwoTimes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testDisconnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReconnect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServiceInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServiceInfoWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServiceTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServices￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServicesIServiceTypeID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServicesIServiceTypeIDWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegisterService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRegisterServiceWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnregisterService￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnregisterServiceWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testDispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addServiceListener￨2￨f (￨2￨f TestListener￨3￨p serviceListener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceListenerIServiceListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceListenerIServiceListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceListenerIServiceTypeIDIServiceListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addListenerRegisterAndWait￨2￨f (￨2￨f TestListener￨3￨p testServiceListener￨3￨p ,￨3￨p IServiceInfo￨3￨p aServiceInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceListenerIServiceTypeIDIServiceListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceTypeListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IServiceTypeListener￨2￨f createServiceTypeListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testAddServiceTypeListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetConnectNamespace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetID￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testGetServicesNamespace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceListenerIServiceListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceListenerIServiceListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceListenerIServiceTypeIDIServiceListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceListenerIServiceTypeIDIServiceListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceTypeListener￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRemoveServiceTypeListenerWithNull￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Resources￨1￨d extends￨1￨d DataType￨1￨d implements￨1￨d ResourceCollection￨1￨d {￨1￨d public￨2￨f static￨2￨f final￨2￨f ResourceCollection￨2￨f NONE￨2￨f =￨2￨f new￨2￨f ResourceCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f boolean￨3￨f isFilesystemOnly￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Iterator￨3￨f iterator￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f size￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e public￨2￨f static￨2￨f final￨2￨f Iterator￨2￨f EMPTY_ITERATOR￨2￨f =￨2￨f new￨2￨f Iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f Object￨3￨f next￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f hasNext￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f remove￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨d class￨2￨d MyCollection￨2￨d extends￨2￨d AbstractCollection￨2￨d {￨2￨d private￨3￨e int￨3￨e size￨3￨e ;￨3￨e MyCollection￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f size￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Iterator￨3￨f iterator￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨d class￨3￨d MyIterator￨3￨d implements￨3￨d Iterator￨3￨d {￨3￨d private￨4￨e Iterator￨4￨e rci￨4￨e =￨4￨e getNested￨4￨e (￨4￨e )￨4￨e .￨4￨e iterator￨4￨e (￨4￨e )￨4￨e ;￨4￨e private￨4￨e Iterator￨4￨e ri￨4￨e =￨4￨e null￨4￨e ;￨4￨e public￨4￨f boolean￨4￨f hasNext￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f public￨4￨f Object￨4￨f next￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f public￨4￨f void￨4￨f remove￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f }￨3￨d }￨2￨d private￨2￨e Vector￨2￨e rc￨2￨e ;￨2￨e private￨2￨e Collection￨2￨e coll￨2￨e ;￨2￨e public￨2￨f synchronized￨2￨f void￨2￨f add￨2￨f (￨2￨f ResourceCollection￨3￨p c￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f Iterator￨2￨f iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isFilesystemOnly￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f dieOnCircularReference￨2￨f (￨2￨f Stack￨2￨f stk￨2￨f ,￨2￨f Project￨2￨f p￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j isChecked￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j isReference￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j super￨4￨e .￨4￨e dieOnCircularReference￨4￨e (￨4￨e stk￨4￨e ,￨4￨e p￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j for￨4￨l (￨4￨l Iterator￨5￨c i￨5￨c =￨5￨c getNested￨5￨c (￨5￨c )￨5￨c .￨5￨c iterator￨5￨c (￨5￨c )￨5￨c ;￨5￨c i￨5￨c .￨5￨c hasNext￨5￨c (￨5￨c )￨5￨c ;￨5￨c )￨4￨l {￨4￨l Object￨5￨e o￨5￨e =￨5￨e i￨5￨e .￨5￨e next￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j o￨6￨c instanceof￨6￨c DataType￨6￨c )￨5￨j {￨5￨j <START_BUG>￨6￨b invokeCircularReferenceCheck￨6￨b (￨6￨b (￨6￨b (￨6￨b DataType￨6￨b )￨6￨b (￨6￨b o￨6￨b )￨6￨b )￨6￨b ,￨6￨b stk￨6￨b ,￨6￨b p￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨j }￨4￨l setChecked￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f invalidateExistingIterators￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ResourceCollection￨2￨f getRef￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f synchronized￨2￨f void￨2￨f validate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f synchronized￨2￨f List￨2￨f getNested￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestTimeLimitingCollector￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e SLOW_DOWN￨2￨e =￨2￨e 3￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e TIME_ALLOWED￨2￨e =￨2￨e 17￨2￨e *￨2￨e (￨2￨e TestTimeLimitingCollector￨2￨e .￨2￨e SLOW_DOWN￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e double￨2￨e MULTI_THREAD_SLACK￨2￨e =￨2￨e 7￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_DOCS￨2￨e =￨2￨e 3000￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e N_THREADS￨2￨e =￨2￨e 50￨2￨e ;￨2￨e private￨2￨e Searcher￨2￨e searcher￨2￨e ;￨2￨e private￨2￨e Directory￨2￨e directory￨2￨e ;￨2￨e private￨2￨e IndexReader￨2￨e reader￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e FIELD_NAME￨2￨e =￨2￨e "body"￨2￨e ;￨2￨e private￨2￨e Query￨2￨e query￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨f String￨3￨f [￨3￨f ]￨3￨f docText￨3￨f =￨3￨f new￨3￨f String￨3￨f [￨3￨f ]￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f ;￨3￨e directory￨3￨e =￨3￨e newDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b RandomIndexWriter￨3￨b iw￨3￨b =￨3￨b new￨3￨b RandomIndexWriter￨3￨b (￨3￨b random￨3￨b ,￨3￨b directory￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c TestTimeLimitingCollector￨4￨c .￨4￨c N_DOCS￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l add￨4￨e (￨4￨e docText￨4￨e [￨4￨e (￨4￨e i￨4￨e %￨4￨e (￨4￨e docText￨4￨e .￨4￨e length￨4￨e )￨4￨e )￨4￨e ]￨4￨e ,￨4￨e iw￨4￨e )￨4￨e ;￨4￨e }￨3￨l reader￨3￨e =￨3￨e iw￨3￨e .￨3￨e getReader￨3￨e (￨3￨e )￨3￨e ;￨3￨e iw￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e searcher￨3￨e =￨3￨e newSearcher￨3￨e (￨3￨e reader￨3￨e )￨3￨e ;￨3￨e String￨3￨e qtxt￨3￨e =￨3￨e "one"￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 1￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c docText￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l qtxt￨4￨e +=￨4￨e '<seq2seq4repair_space>'￨4￨e +￨4￨e (￨4￨e docText￨4￨e [￨4￨e i￨4￨e ]￨4￨e )￨4￨e ;￨4￨e }￨3￨l QueryParser￨3￨e queryParser￨3￨e =￨3￨e new￨3￨e QueryParser￨3￨e (￨3￨e TEST_VERSION_CURRENT￨3￨e ,￨3￨e FIELD_NAME￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e apache￨3￨e .￨3￨e lucene￨3￨e .￨3￨e analysis￨3￨e .￨3￨e MockAnalyzer￨3￨e (￨3￨e random￨3￨e )￨3￨e )￨3￨e ;￨3￨e query￨3￨e =￨3￨e queryParser￨3￨e .￨3￨e parse￨3￨e (￨3￨e qtxt￨3￨e )￨3￨e ;￨3￨e searcher￨3￨e .￨3￨e search￨3￨e (￨3￨e query￨3￨e ,￨3￨e null￨3￨e ,￨3￨e 1000￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f add￨2￨f (￨2￨f String￨2￨f value￨2￨f ,￨2￨f RandomIndexWriter￨2￨f iw￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f search￨2￨f (￨2￨f Collector￨2￨f collector￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestSearch￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collector￨2￨f createTimedCollector￨2￨f (￨2￨f TestTimeLimitingCollector￨3￨p .￨3￨p MyHitCollector￨3￨p hc￨3￨p ,￨3￨p long￨3￨p timeAllowed￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutNotGreedy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestTimeout￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p ,￨3￨p boolean￨3￨p greedy￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f long￨2￨f maxTime￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f maxTimeStr￨2￨f (￨2￨f boolean￨3￨p multiThreaded￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testModifyResolution￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testSearchMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testTimeoutMultiThreaded￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f doTestMultiThreads￨2￨f (￨2￨f final￨2￨f boolean￨2￨f withTimeout￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d MyHitCollector￨2￨d extends￨2￨d Collector￨2￨d {￨2￨d private￨3￨e final￨3￨e BitSet￨3￨e bits￨3￨e =￨3￨e new￨3￨e BitSet￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e int￨3￨e slowdown￨3￨e =￨3￨e 0￨3￨e ;￨3￨e private￨3￨e int￨3￨e lastDocCollected￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e private￨3￨e int￨3￨e docBase￨3￨e =￨3￨e 0￨3￨e ;￨3￨e public￨3￨f void￨3￨f setSlowDown￨3￨f (￨3￨f int￨4￨p milliseconds￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f hitCount￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f getLastDocCollected￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setScorer￨3￨f (￨3￨f Scorer￨3￨f scorer￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f collect￨3￨f (￨3￨f final￨3￨f int￨3￨f doc￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setNextReader￨3￨f (￨3￨f IndexReader￨4￨p reader￨4￨p ,￨4￨p int￨4￨p base￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f boolean￨3￨f acceptsDocsOutOfOrder￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d WizardNewFileCreationPage￨1￨d extends￨1￨d WizardPage￨1￨d implements￨1￨d Listener￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e SIZING_CONTAINER_GROUP_HEIGHT￨2￨e =￨2￨e 250￨2￨e ;￨2￨e private￨2￨e IStructuredSelection￨2￨e currentSelection￨2￨e ;￨2￨e private￨2￨e IFile￨2￨e newFile￨2￨e ;￨2￨e private￨2￨e IPath￨2￨e linkTargetPath￨2￨e ;￨2￨e private￨2￨e String￨2￨e initialFileName￨2￨e ;￨2￨e private￨2￨e IPath￨2￨e initialContainerFullPath￨2￨e ;￨2￨e private￨2￨e Composite￨2￨e topLevel￨2￨e ;￨2￨e private￨2￨e ResourceAndContainerGroup￨2￨e resourceGroup￨2￨e ;￨2￨e private￨2￨e Button￨2￨e advancedButton￨2￨e ;￨2￨e private￨2￨e CreateLinkedResourceGroup￨2￨e linkedResourceGroup￨2￨e ;￨2￨e public￨2￨f WizardNewFileCreationPage￨2￨f (￨2￨f String￨3￨p pageName￨3￨p ,￨3￨p IStructuredSelection￨3￨p selection￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createAdvancedControls￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f createControl￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createFile￨2￨f (￨2￨f IFile￨2￨f fileHandle￨2￨f ,￨2￨f InputStream￨2￨f contents￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IFile￨2￨f createFileHandle￨2￨f (￨2￨f IPath￨3￨p filePath￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f createLinkTarget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFile￨2￨f createNewFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPath￨2￨f getContainerFullPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getFileName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f InputStream￨2￨f getInitialContents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getNewFileLabel￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f handleAdvancedButtonSelect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f handleEvent￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initialPopulateContainerNameField￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setContainerFullPath￨2￨f (￨2￨f IPath￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFileName￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IStatus￨2￨f validateLinkedResource￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f validatePage￨2￨f (￨2￨f )￨2￨f {￨2￨f boolean￨3￨e valid￨3￨e =￨3￨e true￨3￨e ;￨3￨e IWorkspace￨3￨e workspace￨3￨e =￨3￨e WorkbenchPlugin￨3￨e .￨3￨e getPluginWorkspace￨3￨e (￨3￨e )￨3￨e ;￨3￨e String￨3￨e fileName￨3￨e =￨3￨e getFileName￨3￨e (￨3￨e )￨3￨e ;￨3￨e IStatus￨3￨e nameStatus￨3￨e =￨3￨e workspace￨3￨e .￨3￨e validateName￨3￨e (￨3￨e fileName￨3￨e ,￨3￨e IResource￨3￨e .￨3￨e FILE￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c nameStatus￨4￨c .￨4￨c isOK￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j setErrorMessage￨4￨e (￨4￨e nameStatus￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e false￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c resourceGroup￨4￨c .￨4￨c areAllValuesValid￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c (￨5￨c resourceGroup￨5￨c .￨5￨c getProblemType￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c ResourceAndContainerGroup￨5￨c .￨5￨c PROBLEM_RESOURCE_EMPTY￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c (￨5￨c resourceGroup￨5￨c .￨5￨c getProblemType￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c (￨5￨c ResourceAndContainerGroup￨5￨c .￨5￨c PROBLEM_CONTAINER_EMPTY￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j setMessage￨5￨e (￨5￨e resourceGroup￨5￨e .￨5￨e getProblemMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e setErrorMessage￨5￨e (￨5￨e null￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j setErrorMessage￨5￨e (￨5￨e resourceGroup￨5￨e .￨5￨e getProblemMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j valid￨4￨e =￨4￨e false￨4￨e ;￨4￨e }￨3￨j IPath￨3￨e container￨3￨e =￨3￨e workspace￨3￨e .￨3￨e getRoot￨3￨e (￨3￨e )￨3￨e .￨3￨e getLocation￨3￨e (￨3￨e )￨3￨e .￨3￨e append￨3￨e (￨3￨e getContainerFullPath￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e File￨3￨e systemFile￨3￨e =￨3￨e new￨3￨e File￨3￨e (￨3￨e container￨3￨e .￨3￨e toOSString￨3￨e (￨3￨e )￨3￨e ,￨3￨e fileName￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j systemFile￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j setErrorMessage￨4￨f (￨4￨f WorkbenchMessages￨4￨f .￨4￨f format￨4￨f (￨4￨f "WizardNewFileCreationPage.fileExistsMessage"￨4￨f ,￨4￨f new￨4￨f String￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e )￨4￨e ;￨4￨e valid￨4￨e =￨4￨e false￨4￨e ;￨4￨e }￨3￨j IStatus￨3￨e linkedResourceStatus￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j valid￨4￨c &&￨4￨c (￨4￨c (￨4￨c linkedResourceGroup￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j linkedResourceStatus￨4￨e =￨4￨e validateLinkedResource￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b linkedResourceStatus￨4￨b .￨4￨b getCode￨4￨b (￨4￨b )￨4￨b )￨4￨b ==￨4￨b (￨4￨b IStatus￨4￨b .￨4￨b ERROR￨4￨b )￨4￨b )￨4￨b <END_BUG>￨4￨b valid￨4￨e =￨4￨e false￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j valid￨4￨c &&￨4￨c (￨4￨c (￨4￨c linkedResourceStatus￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c linkedResourceStatus￨4￨c .￨4￨c isOK￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j setMessage￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e setErrorMessage￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨e valid￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setVisible￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d MethodDeclaration￨1￨d extends￨1￨d BodyDeclaration￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e LEGAL_MODIFIERS￨2￨e =￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PUBLIC￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PRIVATE￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e PROTECTED￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STATIC￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e FINAL￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e SYNCHRONIZED￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e NATIVE￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e ABSTRACT￨2￨e )￨2￨e )￨2￨e |￨2￨e (￨2￨e Modifier￨2￨e .￨2￨e STRICTFP￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isConstructor￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e int￨2￨e modifiers￨2￨e =￨2￨e Modifier￨2￨e .￨2￨e NONE￨2￨e ;￨2￨e private￨2￨e SimpleName￨2￨e methodName￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d parameters￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d true￨2￨d ,￨2￨d SingleVariableDeclaration￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d Type￨2￨d returnType￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d thrownExceptions￨2￨d =￨2￨d new￨2￨d ASTNode￨2￨d .￨2￨d NodeList￨2￨d (￨2￨d false￨2￨d ,￨2￨d Name￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d Block￨2￨d optionalBody￨2￨d =￨2￨d null￨2￨d ;￨2￨d MethodDeclaration￨2￨d (￨2￨d AST￨2￨d ast￨2￨d )￨2￨d {￨2￨d }￨2￨d ASTNode￨2￨f clone￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f equalSubtrees￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConstructor￨2￨f (￨2￨f boolean￨3￨p isConstructor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModifiers￨2￨f (￨2￨f int￨3￨p modifiers￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b modifiers￨3￨b &=￨3￨b ~￨3￨b (￨3￨b IConstants￨3￨b .￨3￨b AccDeprecated￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c modifiers￨4￨c &￨4￨c (￨4￨c ~￨4￨c (￨4￨c MethodDeclaration￨4￨c .￨4￨c LEGAL_MODIFIERS￨4￨c )￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j modifying￨3￨e (￨3￨e )￨3￨e ;￨3￨e this￨3￨e .￨3￨e modifiers￨3￨e =￨3￨e modifiers￨3￨e ;￨3￨e }￨2￨f public￨2￨f SimpleName￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setName￨2￨f (￨2￨f SimpleName￨3￨p methodName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f parameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f thrownExceptions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Type￨2￨f getReturnType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setReturnType￨2￨f (￨2￨f Type￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Block￨2￨f getBody￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setBody￨2￨f (￨2￨f Block￨3￨p body￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMethodBinding￨2￨f resolveBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d Display￨3￨p display￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f Shell￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Shell￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p handle￨3￨p ,￨3￨p boolean￨3￨p embedded￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Shell￨2￨f internal_new￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p int￨3￨p handle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Shell￨2￨f cocoa_new￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p int￨3￨p handle￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f accessibilityIsIgnored￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addShellListener￨2￨f (￨2￨f ShellListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f bringToTop￨2￨f (￨2￨f boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f canBecomeKeyWindow￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkOpen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f closeWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f destroyWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f drawBackground￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p NSGraphicsContext￨3￨p context￨3￨p ,￨3￨p NSRect￨3￨p rect￨3￨p )￨2￨f {￨2￨f }￨2￨f Control￨2￨f findBackgroundControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Composite￨2￨f findDeferredControl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Cursor￨2￨f findCursor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f fixResize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f fixShell￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p ,￨3￨p Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceActive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAlpha￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getClientArea￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getFullScreen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getImeInputMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getLocation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMaximized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Shell￨2￨f getModalShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getModified￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getMinimized￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getMinimumSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f float￨2￨f [￨2￨f ]￨2￨f getParentBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Region￨2￨f getRegion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f getShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f [￨2￨f ]￨2￨f getShells￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f float￨2￨f getThemeAlpha￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hasBorder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f helpRequested￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p theEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f invalidateVisibleRegion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isDrawing￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f isEnabledCursor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f makeFirstResponder￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f noResponderFor￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f open￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f print￨2￨f (￨2￨f GC￨3￨p gc￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseParent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeShellListener￨2￨f (￨2￨f ShellListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f sendToolTipEvent￨2￨f (￨2￨f boolean￨3￨p enter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setActive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setActiveControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAlpha￨2￨f (￨2￨f int￨3￨p alpha￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p resize￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c window￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j fullScreen￨4￨c )￨3￨j {￨3￨j setFullScreen￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j int￨3￨e screenHeight￨3￨e =￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e display￨3￨e .￨3￨e getPrimaryFrame￨3￨e (￨3￨e )￨3￨e .￨3￨e height￨3￨e )￨3￨e )￨3￨e ;￨3￨e NSRect￨3￨e frame￨3￨e =￨3￨e window￨3￨e .￨3￨e frame￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c move￨4￨c )￨3￨j {￨3￨j x￨4￨e =￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e frame￨4￨e .￨4￨e x￨4￨e )￨4￨e )￨4￨e ;￨4￨e y￨4￨e =￨4￨e screenHeight￨4￨e -￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e (￨4￨e frame￨4￨e .￨4￨e y￨4￨e )￨4￨e +￨4￨e (￨4￨e frame￨4￨e .￨4￨e height￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c resize￨4￨c )￨3￨j {￨3￨j width￨4￨e =￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e frame￨4￨e .￨4￨e width￨4￨e )￨4￨e )￨4￨e ;￨4￨e height￨4￨e =￨4￨e (￨4￨e (￨4￨e int￨4￨e )￨4￨e (￨4￨e frame￨4￨e .￨4￨e height￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j frame￨3￨e .￨3￨e x￨3￨e =￨3￨e x￨3￨e ;￨3￨e frame￨3￨e .￨3￨e y￨3￨e =￨3￨e screenHeight￨3￨e -￨3￨e (￨3￨e (￨3￨e int￨3￨e )￨3￨e (￨3￨e y￨3￨e +￨3￨e height￨3￨e )￨3￨e )￨3￨e ;￨3￨e frame￨3￨e .￨3￨e width￨3￨e =￨3￨e width￨3￨e ;￨3￨e frame￨3￨e .￨3￨e height￨3￨e =￨3￨e height￨3￨e ;￨3￨e <START_BUG>￨3￨b window￨3￨b .￨3￨b setFrame￨3￨b (￨3￨b frame￨3￨b ,￨3￨b true￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f void￨2￨f setClipRegion￨2￨f (￨2￨f float￨3￨p x￨3￨p ,￨3￨p float￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnabled￨2￨f (￨2￨f boolean￨3￨p enabled￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setFullScreen￨2￨f (￨2￨f boolean￨3￨p fullScreen￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMenuBar￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImeInputMode￨2￨f (￨2￨f int￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaximized￨2￨f (￨2￨f boolean￨3￨p maximized￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimized￨2￨f (￨2￨f boolean￨3￨p minimized￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimumSize￨2￨f (￨2￨f int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimumSize￨2￨f (￨2￨f Point￨3￨p size￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setModified￨2￨f (￨2￨f boolean￨3￨p modified￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRegion￨2￨f (￨2￨f Region￨3￨p region￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisible￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setWindowVisible￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p ,￨3￨p boolean￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setZOrder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setZOrder￨2￨f (￨2￨f Control￨3￨p control￨3￨p ,￨3￨p boolean￨3￨p above￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f traverseEscape￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateModal￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateParent￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateSystemUIMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f view_stringForToolTip_point_userData￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p view￨3￨p ,￨3￨p int￨3￨p tag￨3￨p ,￨3￨p int￨3￨p point￨3￨p ,￨3￨p int￨3￨p userData￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f windowDidBecomeKey￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f windowDidMove￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f windowDidResize￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f windowDidResignKey￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p notification￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f windowSendEvent￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f windowShouldClose￨2￨f (￨2￨f int￨3￨p id￨3￨p ,￨3￨p int￨3￨p sel￨3￨p ,￨3￨p int￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ColumnFamilyStoreTest￨1￨d extends￨1￨d CleanupHelper￨1￨d {￨1￨d static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e bytes1￨2￨e ;￨2￨e static￨2￨e byte￨2￨e [￨2￨e ]￨2￨e bytes2￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testGetColumnWithWrongBF￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testEmptyRow￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testSkipStartKey￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testIndexScan￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testLargeScan￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testIndexDeletions￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testIndexUpdate￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testIndexCreate￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f ,￨2￨f ConfigurationException￨2￨f (￨2￨f )￨2￨f {￨2￨f Table￨3￨e table￨3￨e =￨3￨e Table￨3￨e .￨3￨e open￨3￨e (￨3￨e "Keyspace1"￨3￨e )￨3￨e ;￨3￨e RowMutation￨3￨e rm￨3￨e ;￨3￨e rm￨3￨e =￨3￨e new￨3￨e RowMutation￨3￨e (￨3￨e "Keyspace1"￨3￨e ,￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e "k1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e rm￨3￨e .￨3￨e add￨3￨e (￨3￨e new￨3￨e QueryPath￨3￨e (￨3￨e "Indexed2"￨3￨e ,￨3￨e null￨3￨e ,￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e "birthdate"￨3￨e )￨3￨e )￨3￨e ,￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e 1L￨3￨e )￨3￨e ,￨3￨e 1￨3￨e )￨3￨e ;￨3￨e rm￨3￨e .￨3￨e apply￨3￨e (￨3￨e )￨3￨e ;￨3￨e ColumnFamilyStore￨3￨e cfs￨3￨e =￨3￨e table￨3￨e .￨3￨e getColumnFamilyStore￨3￨e (￨3￨e "Indexed2"￨3￨e )￨3￨e ;￨3￨e ColumnDefinition￨3￨e old￨3￨e =￨3￨e cfs￨3￨e .￨3￨e metadata￨3￨e .￨3￨e getColumn_metadata￨3￨e (￨3￨e )￨3￨e .￨3￨e get￨3￨e (￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e "birthdate"￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b ColumnDefinition￨3￨b cd￨3￨b =￨3￨b new￨3￨b ColumnDefinition￨3￨b (￨3￨b old￨3￨b .￨3￨b name￨3￨b ,￨3￨b old￨3￨b .￨3￨b validator￨3￨b ,￨3￨b IndexType￨3￨b .￨3￨b KEYS￨3￨b ,￨3￨b "birthdate_index"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Future￨3￨e <￨3￨e ?￨3￨e >￨3￨e future￨3￨e =￨3￨e cfs￨3￨e .￨3￨e addIndex￨3￨e (￨3￨e cd￨3￨e )￨3￨e ;￨3￨e future￨3￨e .￨3￨e get￨3￨e (￨3￨e )￨3￨e ;￨3￨e assert￨3￨e (￨3￨e cfs￨3￨e .￨3￨e getIndexedColumnFamilyStore￨3￨e (￨3￨e cd￨3￨e .￨3￨e name￨3￨e )￨3￨e .￨3￨e getSSTables￨3￨e (￨3￨e )￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e >￨3￨e 0￨3￨e ;￨3￨e queryBirthdate￨3￨e (￨3￨e table￨3￨e )￨3￨e ;￨3￨e ColumnFamilyStore￨3￨e indexedCfs￨3￨e =￨3￨e cfs￨3￨e .￨3￨e getIndexedColumnFamilyStore￨3￨e (￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e "birthdate"￨3￨e )￨3￨e )￨3￨e ;￨3￨e cfs￨3￨e .￨3￨e removeIndex￨3￨e (￨3￨e ByteBufferUtil￨3￨e .￨3￨e bytes￨3￨e (￨3￨e "birthdate"￨3￨e )￨3￨e )￨3￨e ;￨3￨e assert￨3￨e !￨3￨e (￨3￨e indexedCfs￨3￨e .￨3￨e isIndexBuilt￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e future￨3￨e =￨3￨e cfs￨3￨e .￨3￨e addIndex￨3￨e (￨3￨e cd￨3￨e )￨3￨e ;￨3￨e future￨3￨e .￨3￨e get￨3￨e (￨3￨e )￨3￨e ;￨3￨e queryBirthdate￨3￨e (￨3￨e table￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f queryBirthdate￨2￨f (￨2￨f Table￨2￨f table￨2￨f )￨2￨f throws￨2￨f CharacterCodingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDeleteSuperRowSticksAfterFlush￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f assertRowAndColCount￨2￨f (￨2￨f int￨3￨p rowCount￨3￨p ,￨3￨p int￨3￨p colCount￨3￨p ,￨3￨p ByteBuffer￨3￨p sc￨3￨p ,￨3￨p boolean￨3￨p isDeleted￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Row￨3￨p >￨3￨p rows￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f str￨2￨f (￨2￨f ColumnFamily￨3￨p cf￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f putColsSuper￨2￨f (￨2￨f ColumnFamilyStore￨2￨f cfs￨2￨f ,￨2￨f DecoratedKey￨2￨f key￨2￨f ,￨2￨f ByteBuffer￨2￨f scfName￨2￨f ,￨2￨f Column￨2￨f ...￨2￨f cols￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f putColsStandard￨2￨f (￨2￨f ColumnFamilyStore￨2￨f cfs￨2￨f ,￨2￨f DecoratedKey￨2￨f key￨2￨f ,￨2￨f Column￨2￨f ...￨2￨f cols￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testDeleteStandardRowSticksAfterFlush￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f ColumnFamilyStore￨2￨f insertKey1Key2￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f InterruptedException￨2￨f ,￨2￨f ExecutionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testBackupAfterFlush￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Stream￨1￨d implements￨1￨d IAggregatableStream￨1￨d {￨1￨d Node￨2￨e _node￨2￨e ;￨2￨e TridentTopology￨2￨e _topology￨2￨e ;￨2￨e String￨2￨e _name￨2￨e ;￨2￨e protected￨2￨f Stream￨2￨f (￨2￨f TridentTopology￨3￨p topology￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p Node￨3￨p node￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f name￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f parallelismHint￨2￨f (￨2￨f int￨3￨p hint￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f project￨2￨f (￨2￨f Fields￨3￨p keepFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f GroupedStream￨2￨f groupBy￨2￨f (￨2￨f Fields￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionBy￨2￨f (￨2￨f Fields￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partition￨2￨f (￨2￨f CustomStreamGrouping￨3￨p partitioner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f shuffle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f global￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f batchGlobal￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f broadcast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f identityPartition￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partition￨2￨f (￨2￨f Grouping￨3￨p grouping￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f applyAssembly￨2￨f (￨2￨f Assembly￨3￨p assembly￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Stream￨2￨f each￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p Function￨3￨p function￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p Aggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f stateQuery￨2￨f (￨2￨f TridentState￨3￨p state￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p QueryFunction￨3￨p function￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateSpec￨3￨p stateSpec￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateSpec￨3￨p stateSpec￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f each￨2￨f (￨2￨f Function￨3￨p function￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f each￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p Filter￨3￨p filter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ChainedAggregatorDeclarer￨2￨f chainedAgg￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f Aggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f partitionAggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f Aggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p Aggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f aggregate￨2￨f (￨2￨f Fields￨3￨p inputFields￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateSpec￨3￨p stateSpec￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f partitionPersist￨2￨f (￨2￨f StateSpec￨3￨p stateSpec￨3￨p ,￨3￨p StateUpdater￨3￨p updater￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateSpec￨3￨p spec￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateSpec￨3￨p spec￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p CombinerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateSpec￨3￨p spec￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateFactory￨3￨p stateFactory￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TridentState￨2￨f persistentAggregate￨2￨f (￨2￨f StateSpec￨3￨p spec￨3￨p ,￨3￨p Fields￨3￨p inputFields￨3￨p ,￨3￨p ReducerAggregator￨3￨p agg￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Stream￨2￨f stateQuery￨2￨f (￨2￨f TridentState￨3￨p state￨3￨p ,￨3￨p QueryFunction￨3￨p function￨3￨p ,￨3￨p Fields￨3￨p functionFields￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Stream￨2￨f toStream￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Fields￨2￨f getOutputFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d BatchGlobalAggScheme￨2￨d implements￨2￨d GlobalAggregationScheme￨2￨d <￨2￨d Stream￨2￨d >￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f IAggregatableStream￨3￨f aggPartition￨3￨f (￨3￨f Stream￨4￨p s￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BatchToPartition￨3￨f singleEmitPartitioner￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d GlobalAggScheme￨2￨d implements￨2￨d GlobalAggregationScheme￨2￨d <￨2￨d Stream￨2￨d >￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f IAggregatableStream￨3￨f aggPartition￨3￨f (￨3￨f Stream￨4￨p s￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BatchToPartition￨3￨f singleEmitPartitioner￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨f void￨2￨f projectionValidation￨2￨f (￨2￨f Fields￨3￨p projFields￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j projFields￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j Fields￨3￨e allFields￨3￨e =￨3￨e this￨3￨e .￨3￨e getOutputFields￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l String￨4￨c field￨4￨c :￨4￨c projFields￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j !￨5￨c (￨5￨c allFields￨5￨c .￨5￨c contains￨5￨c (￨5￨c field￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b throw￨5￨b new￨5￨b IllegalArgumentException￨5￨b (￨5￨b (￨5￨b (￨5￨b (￨5￨b (￨5￨b "Trying<seq2seq4repair_space>to<seq2seq4repair_space>select<seq2seq4repair_space>non-existent<seq2seq4repair_space>field:<seq2seq4repair_space>'"￨5￨b +￨5￨b field￨5￨b )￨5￨b +￨5￨b "'<seq2seq4repair_space>from<seq2seq4repair_space>all<seq2seq4repair_space>fields:<seq2seq4repair_space>"￨5￨b )￨5￨b +￨5￨b allFields￨5￨b )￨5￨b +￨5￨b "!"￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨j }￨3￨l }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ShowBugDatabaseAction￨1￨d extends￨1￨d FrameAction￨1￨d {￨1￨d public￨2￨f ShowBugDatabaseAction￨2￨f (￨2￨f AbstractFrameController￨3￨p frameController￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f URLController￨3￨e c￨3￨e =￨3￨e new￨3￨e URLController￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b c￨4￨b .￨4￨b open￨4￨b (￨4￨b new￨4￨b URL￨4￨b (￨4￨b "http://www.sourceforge.net/projects/columba/bugs"￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f MalformedURLException￨4￨p mue￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CheckableListEditor￨1￨d extends￨1￨d DefaultCellEditor￨1￨d implements￨1￨d ActionListener￨1￨d {￨1￨d private￨2￨e JCheckBox￨2￨e checkbox￨2￨e ;￨2￨e private￨2￨e Boolean￨2￨e selected￨2￨e ;￨2￨e public￨2￨f CheckableListEditor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Component￨2￨f getTableCellEditorComponent￨2￨f (￨2￨f JTable￨3￨p table￨3￨p ,￨3￨p Object￨3￨p value￨3￨p ,￨3￨p boolean￨3￨p isSelected￨3￨p ,￨3￨p int￨3￨p row￨3￨p ,￨3￨p int￨3￨p column￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getCellEditorValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b selected￨3￨b =￨3￨b new￨3￨b Boolean￨3￨b (￨3￨b checkbox￨3￨b .￨3￨b isSelected￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b fireEditingStopped￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f Component￨2￨f getComponent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d NormValueSource￨1￨d extends￨1￨d ValueSource￨1￨d {￨1￨d protected￨2￨e final￨2￨e String￨2￨e field￨2￨e ;￨2￨e public￨2￨f NormValueSource￨2￨f (￨2￨f String￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f name￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f description￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f createWeight￨2￨f (￨2￨f Map￨2￨f context￨2￨f ,￨2￨f IndexSearcher￨2￨f searcher￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f FunctionValues￨2￨f getValues￨2￨f (￨2￨f Map￨2￨f context￨2￨f ,￨2￨f AtomicReaderContext￨2￨f readerContext￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f IndexSearcher￨3￨e searcher￨3￨e =￨3￨e (￨3￨e (￨3￨e IndexSearcher￨3￨e )￨3￨e (￨3￨e context￨3￨e .￨3￨e get￨3￨e (￨3￨e "searcher"￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e TFIDFSimilarity￨3￨e similarity￨3￨e =￨3￨e IDFValueSource￨3￨e .￨3￨e asTFIDF￨3￨e (￨3￨e searcher￨3￨e .￨3￨e getSimilarity￨3￨e (￨3￨e )￨3￨e ,￨3￨e field￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j similarity￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e UnsupportedOperationException￨4￨e (￨4￨e "requires<seq2seq4repair_space>a<seq2seq4repair_space>TFIDFSimilarity<seq2seq4repair_space>(such<seq2seq4repair_space>as<seq2seq4repair_space>DefaultSimilarity)"￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b final￨3￨b NumericDocValues￨3￨b norms￨3￨b =￨3￨b readerContext￨3￨b .￨3￨b reader￨3￨b (￨3￨b )￨3￨b .￨3￨b simpleNormValues￨3￨b (￨3￨b field￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j norms￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e new￨4￨e ConstDoubleDocValues￨4￨e (￨4￨e 0.0￨4￨e ,￨4￨e this￨4￨e )￨4￨e ;￨4￨e }￨3￨j return￨3￨f new￨3￨f FloatDocValues￨3￨f (￨3￨f this￨4￨p )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f float￨4￨f floatVal￨4￨f (￨4￨f int￨5￨p doc￨5￨p )￨4￨f {￨4￨f return￨5￨e similarity￨5￨e .￨5￨e decodeNormValue￨5￨e (￨5￨e (￨5￨e (￨5￨e byte￨5￨e )￨5￨e (￨5￨e norms￨5￨e .￨5￨e get￨5￨e (￨5￨e doc￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ServletWebRequest￨1￨d extends￨1￨d WebRequest￨1￨d {￨1￨d private￨2￨e final￨2￨e HttpServletRequest￨2￨e httpServletRequest￨2￨e ;￨2￨e private￨2￨e final￨2￨e Url￨2￨e url￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e filterPrefix￨2￨e ;￨2￨e private￨2￨e final￨2￨e ErrorAttributes￨2￨e errorAttributes￨2￨e ;￨2￨e public￨2￨f ServletWebRequest￨2￨f (￨2￨f HttpServletRequest￨3￨p httpServletRequest￨3￨p ,￨3￨p String￨3￨p filterPrefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServletWebRequest￨2￨f (￨2￨f HttpServletRequest￨3￨p httpServletRequest￨3￨p ,￨3￨p String￨3￨p filterPrefix￨3￨p ,￨3￨p Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Url￨2￨f getClientUrl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Url￨2￨f setParameters￨2￨f (￨2￨f Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Url￨2￨f getUrl￨2￨f (￨2￨f HttpServletRequest￨3￨p request￨3￨p ,￨3￨p String￨3￨p filterPrefix￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getFilterPrefix￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f Cookie￨2￨f >￨2￨f getCookies￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Locale￨2￨f getLocale￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Time￨2￨f getDateHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f long￨3￨e value￨3￨e =￨3￨e httpServletRequest￨3￨e .￨3￨e getDateHeader￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j value￨4￨c ==￨4￨c (￨4￨c -￨4￨c 1￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b return￨3￨b Time￨3￨b .￨3￨b valueOf￨3￨b (￨3￨b value￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getHeader￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f @￨2￨f Override￨2￨f public￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getHeaders￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e List￨2￨e <￨2￨e StringValue￨2￨e >￨2￨e >￨2￨e postParameters￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨f static￨2￨f boolean￨2￨f isMultiPart￨2￨f (￨2￨f ServletRequest￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f StringValue￨2￨f >￨2￨f >￨2￨f generatePostParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f List￨2￨f <￨2￨f StringValue￨2￨f >￨2￨f >￨2￨f getPostRequestParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f IRequestParameters￨2￨f postRequestParameters￨2￨f =￨2￨f new￨2￨f IWritableRequestParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f reset￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setParameterValues￨3￨f (￨3￨f String￨4￨p key￨4￨p ,￨4￨p List￨4￨p <￨4￨p StringValue￨4￨p >￨4￨p values￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f Set￨3￨f <￨3￨f String￨3￨f >￨3￨f getParameterNames￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f StringValue￨3￨f getParameterValue￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f List￨3￨f <￨3￨f StringValue￨3￨f >￨3￨f getParameterValues￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f IRequestParameters￨2￨f getPostParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Url￨2￨f getUrl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ServletWebRequest￨2￨f cloneWithUrl￨2￨f (￨2￨f Url￨3￨p url￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MultipartServletWebRequest￨2￨f newMultipartWebRequest￨2￨f (￨2￨f Bytes￨2￨f maxSize￨2￨f )￨2￨f throws￨2￨f FileUploadException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MultipartServletWebRequest￨2￨f newMultipartWebRequest￨2￨f (￨2￨f Bytes￨2￨f maxSize￨2￨f ,￨2￨f FileItemFactory￨2￨f factory￨2￨f )￨2￨f throws￨2￨f FileUploadException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d ServletWebRequest￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d @￨2￨d Override￨2￨d public￨2￨d String￨2￨d getPrefixToContextPath￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f Charset￨2￨f getCharset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f HttpServletRequest￨2￨f getContainerRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getContextPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f getFilterPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f shouldPreserveClientUrl￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d ,￨3￨p int￨3￨p field￨3￨p ,￨3￨p short￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f providedStringField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p ,￨3￨p String￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f replaceBooleanField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f replaceByteField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f replaceCharField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f replaceDoubleField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f float￨2￨f replaceFloatField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f replaceIntField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f replaceLongField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f replaceObjectField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f short￨2￨f replaceShortField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f replaceStringField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f fetchBoolean￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f fetchBooleanField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f fetchByte￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f fetchByteField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f fetchChar￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f fetchCharField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f fetchDouble￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f double￨2￨f fetchDoubleField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f float￨2￨f fetchFloat￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f float￨2￨f fetchFloatField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f fetchInt￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f fetchIntField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f fetchLong￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f fetchLongField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f fetchObject￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f fetchObjectField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f short￨2￨f fetchShort￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f short￨2￨f fetchShortField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f fetchString￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f fetchStringField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeBoolean￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p boolean￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeBooleanField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p boolean￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeByte￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p byte￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeByteField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p byte￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeChar￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p char￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeCharField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p char￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeDouble￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p double￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeDoubleField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p double￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeFloat￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p float￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeFloatField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p float￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeInt￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p int￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeIntField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p int￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeLong￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p long￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeLongField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p long￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeObject￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p Object￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeObjectField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p Object￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeShort￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p short￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeShortField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p short￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeString￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p String￨3￨p externalVal￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f storeStringField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p String￨3￨p curVal￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f storeField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p Object￨3￨p val￨3￨p ,￨3￨p FieldManager￨3￨p fm￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f eraseFlush￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setLoaded￨2￨f (￨2￨f boolean￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setDirty￨2￨f (￨2￨f boolean￨3￨p val￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearFields￨2￨f (￨2￨f )￨2￨f {￨2￨f fireLifecycleEvent￨3￨e (￨3￨e BEFORE_CLEAR￨3￨e )￨3￨e ;￨3￨e unproxyFields￨3￨e (￨3￨e )￨3￨e ;￨3￨e lock￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f FieldMetaData￨4￨e [￨4￨e ]￨4￨e fmds￨4￨e =￨4￨e _meta￨4￨e .￨4￨e getFields￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c (￨5￨c fmds￨5￨c .￨5￨c length￨5￨c )￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c !￨6￨c (￨6￨c fmds￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c isPrimaryKey￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨6￨c &&￨6￨c (￨6￨c (￨6￨c fmds￨6￨c [￨6￨c i￨6￨c ]￨6￨c .￨6￨c getManagement￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c (￨6￨c FieldMetaData￨6￨c .￨6￨c MANAGE_PERSISTENT￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j replaceField￨6￨e (￨6￨e _pc￨6￨e ,￨6￨e ClearFieldManager￨6￨e .￨6￨e getInstance￨6￨e (￨6￨e )￨6￨e ,￨6￨e i￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l setLoaded￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b assignVersionField￨4￨b (￨4￨b null￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b _loadVersion￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c _fieldImpl￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j Arrays￨5￨e .￨5￨e fill￨5￨e (￨5￨e _fieldImpl￨5￨e ,￨5￨e null￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f unlock￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f fireLifecycleEvent￨3￨e (￨3￨e AFTER_CLEAR￨3￨e )￨3￨e ;￨3￨e }￨2￨f void￨2￨f saveFields￨2￨f (￨2￨f boolean￨3￨p immediate￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f saveField￨2￨f (￨2￨f int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f clearSavedFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f restoreFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f proxyFields￨2￨f (￨2￨f boolean￨3￨p reset￨3￨p ,￨3￨p boolean￨3￨p replaceNull￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f unproxyFields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f preFlush￨2￨f (￨2￨f boolean￨3￨p logical￨3￨p ,￨3￨p OpCallbacks￨3￨p call￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f preDelete￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f cascadeDelete￨2￨f (￨2￨f OpCallbacks￨3￨p call￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f cascadePersist￨2￨f (￨2￨f OpCallbacks￨3￨p call￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f loadFields￨2￨f (￨2￨f BitSet￨3￨p fields￨3￨p ,￨3￨p FetchConfiguration￨3￨p fetch￨3￨p ,￨3￨p int￨3￨p lockLevel￨3￨p ,￨3￨p Object￨3￨p sdata￨3￨p ,￨3￨p boolean￨3￨p forWrite￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f loadField￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p int￨3￨p lockLevel￨3￨p ,￨3￨p boolean￨3￨p forWrite￨3￨p ,￨3￨p boolean￨3￨p fgs￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f provideField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p FieldManager￨3￨p store￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f replaceField￨2￨f (￨2￨f PersistenceCapable￨3￨p pc￨3￨p ,￨3￨p FieldManager￨3￨p load￨3￨p ,￨3￨p int￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setLoaded￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p boolean￨3￨p isLoaded￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f postLoad￨2￨f (￨2￨f int￨3￨p field￨3￨p ,￨3￨p FetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f postLoad￨2￨f (￨2￨f String￨3￨p fgName￨3￨p ,￨3￨p FetchConfiguration￨3￨p fetch￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f syncVersion￨2￨f (￨2￨f Object￨3￨p sdata￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVersionCheckRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setCheckVersion￨2￨f (￨2￨f boolean￨3￨p versionCheck￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVersionUpdateRequired￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setUpdateVersion￨2￨f (￨2￨f boolean￨3￨p versionUpdate￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f RuntimeException￨2￨f translate￨2￨f (￨2￨f RuntimeException￨3￨p re￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f lock￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f unlock￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractServicePublicationTest￨1￨d extends￨1￨d TestCase￨1￨d implements￨1￨d RemoteServicePublication￨1￨d ,￨1￨d IDistributionConstants￨1￨d {￨1￨d protected￨2￨f static￨2￨f void￨2￨f assertStringsEqual￨2￨f (￨2￨f final￨3￨p String￨3￨p [￨3￨p ]￨3￨p s1￨3￨p ,￨3￨p final￨3￨p String￨3￨p [￨3￨p ]￨3￨p s2￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨e IContainer￨2￨e container￨2￨e ;￨2￨e protected￨2￨e String￨2￨e [￨2￨e ]￨2￨e ifaces￨2￨e ;￨2￨e protected￨2￨e ServiceRegistration￨2￨e registration￨2￨e ;￨2￨e protected￨2￨f abstract￨2￨f IContainer￨2￨f createContainer￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f String￨2￨f [￨2￨f ]￨2￨f createInterfaces￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨e ServiceReference￨2￨e reference￨2￨e ;￨2￨e public￨2￨f ServiceReference￨2￨f getReference￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f removeFromContainerManager￨2￨f (￨2￨f IContainer￨3￨p container￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IContainer￨2￨f getContainer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setContainer￨2￨f (￨2￨f IContainer￨3￨p container￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testServicePublication￨2￨f (￨2￨f )￨2￨f throws￨2￨f InterruptedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e BundleContext￨3￨e context￨3￨e =￨3￨e Activator￨3￨e .￨3￨e getDefault￨3￨e (￨3￨e )￨3￨e .￨3￨e getContext￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e Dictionary￨3￨e props￨3￨e =￨3￨e new￨3￨e Hashtable￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b props￨3￨b .￨3￨b put￨3￨b (￨3￨b REMOTE_INTERFACES￨3￨b ,￨3￨b getInterfaces￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨d ServiceTracker￨3￨d tracker￨3￨d =￨3￨d new￨3￨d ServiceTracker￨3￨d (￨3￨d context￨3￨d ,￨3￨d TestServiceInterface1￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d ,￨3￨d null￨3￨d )￨3￨d ;￨3￨d tracker￨3￨d .￨3￨d open￨3￨d (￨3￨d )￨3￨d ;￨3￨d registration￨3￨d =￨3￨d context￨3￨d .￨3￨d registerService￨3￨d (￨3￨d TestServiceInterface1￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d ,￨3￨d new￨3￨d TestService1￨3￨d (￨3￨d )￨3￨d ,￨3￨d props￨3￨d )￨3￨d ;￨3￨d tracker￨3￨d .￨3￨d waitForService￨3￨d (￨3￨d 10000￨3￨d )￨3￨d ;￨3￨d final￨3￨d ServiceReference￨3￨d ref￨3￨d =￨3￨d context￨3￨d .￨3￨d getServiceReference￨3￨d (￨3￨d ServicePublication￨3￨d .￨3￨d class￨3￨d .￨3￨d getName￨3￨d (￨3￨d )￨3￨d )￨3￨d ;￨3￨d assertTrue￨3￨d (￨3￨d (￨3￨d ref￨3￨d !=￨3￨d null￨3￨d )￨3￨d )￨3￨d ;￨3￨d final￨3￨d Object￨3￨d o￨3￨d =￨3￨d ref￨3￨d .￨3￨d getProperty￨3￨d (￨3￨d SERVICE_INTERFACE_NAME￨3￨d )￨3￨d ;￨3￨d assertTrue￨3￨d (￨3￨d (￨3￨d o￨3￨d instanceof￨3￨d Collection￨3￨d )￨3￨d )￨3￨d ;￨3￨d final￨3￨d Collection￨3￨d refIfaces￨3￨d =￨3￨d (￨3￨d (￨3￨d Collection￨3￨d )￨3￨d (￨3￨d o￨3￨d )￨3￨d )￨3￨d ;￨3￨d AbstractServicePublicationTest￨3￨d .￨3￨d assertStringsEqual￨3￨d (￨3￨d getInterfaces￨3￨d (￨3￨d )￨3￨d ,￨3￨d (￨3￨d (￨3￨d String￨3￨d [￨3￨d ]￨3￨d )￨3￨d (￨3￨d refIfaces￨3￨d .￨3￨d toArray￨3￨d (￨3￨d new￨3￨d String￨3￨d [￨3￨d ]￨3￨d {￨3￨d }￨3￨d )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Thread￨3￨e .￨3￨e sleep￨3￨e (￨3￨e 10000￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setInterfaces￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p interfaces￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TestExplanations￨1￨d extends￨1￨d LuceneTestCase￨1￨d {￨1￨d protected￨2￨e IndexSearcher￨2￨e searcher￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e KEY￨2￨e =￨2￨e "KEY"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e FIELD￨2￨e =￨2￨e "field"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e QueryParser￨2￨e qp￨2￨e =￨2￨e new￨2￨e QueryParser￨2￨e (￨2￨e TestExplanations￨2￨e .￨2￨e FIELD￨2￨e ,￨2￨e new￨2￨e WhitespaceAnalyzer￨2￨e (￨2￨e )￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f super￨3￨e .￨3￨e setUp￨3￨e (￨3￨e )￨3￨e ;￨3￨e RAMDirectory￨3￨e directory￨3￨e =￨3￨e new￨3￨e RAMDirectory￨3￨e (￨3￨e )￨3￨e ;￨3￨e IndexWriter￨3￨e writer￨3￨e =￨3￨e new￨3￨e IndexWriter￨3￨e (￨3￨e directory￨3￨e ,￨3￨e new￨3￨e WhitespaceAnalyzer￨3￨e (￨3￨e )￨3￨e ,￨3￨e true￨3￨e ,￨3￨e MaxFieldLength￨3￨e .￨3￨e LIMITED￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c docFields￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l Document￨4￨e doc￨4￨e =￨4￨e new￨4￨e Document￨4￨e (￨4￨e )￨4￨e ;￨4￨e doc￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e document￨4￨e .￨4￨e Field￨4￨e (￨4￨e TestExplanations￨4￨e .￨4￨e KEY￨4￨e ,￨4￨e (￨4￨e ""￨4￨e +￨4￨e i￨4￨e )￨4￨e ,￨4￨e Store￨4￨e .￨4￨e NO￨4￨e ,￨4￨e Index￨4￨e .￨4￨e NOT_ANALYZED￨4￨e )￨4￨e )￨4￨e ;￨4￨e doc￨4￨e .￨4￨e add￨4￨e (￨4￨e new￨4￨e org￨4￨e .￨4￨e apache￨4￨e .￨4￨e lucene￨4￨e .￨4￨e document￨4￨e .￨4￨e Field￨4￨e (￨4￨e TestExplanations￨4￨e .￨4￨e FIELD￨4￨e ,￨4￨e docFields￨4￨e [￨4￨e i￨4￨e ]￨4￨e ,￨4￨e Store￨4￨e .￨4￨e NO￨4￨e ,￨4￨e Index￨4￨e .￨4￨e ANALYZED￨4￨e )￨4￨e )￨4￨e ;￨4￨e writer￨4￨e .￨4￨e addDocument￨4￨e (￨4￨e doc￨4￨e )￨4￨e ;￨4￨e }￨3￨l writer￨3￨e .￨3￨e close￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b searcher￨3￨b =￨3￨b new￨3￨b IndexSearcher￨3￨b (￨3￨b directory￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f String￨2￨f [￨2￨f ]￨2￨f docFields￨2￨f =￨2￨f new￨2￨f String￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e public￨2￨f Query￨2￨f makeQuery￨2￨f (￨2￨f String￨2￨f queryText￨2￨f )￨2￨f throws￨2￨f ParseException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f qtest￨2￨f (￨2￨f String￨2￨f queryText￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f expDocNrs￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f qtest￨2￨f (￨2￨f Query￨2￨f q￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f expDocNrs￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bqtest￨2￨f (￨2￨f Query￨2￨f q￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f expDocNrs￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f bqtest￨2￨f (￨2￨f String￨2￨f queryText￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f expDocNrs￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d ItemizedFilter￨2￨d extends￨2￨d FieldCacheTermsFilter￨2￨d {￨2￨d private￨3￨f static￨3￨f String￨3￨f [￨3￨f ]￨3￨f int2str￨3￨f (￨3￨f int￨4￨p [￨4￨p ]￨4￨p terms￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ItemizedFilter￨3￨f (￨3￨f String￨4￨p keyField￨4￨p ,￨4￨p int￨4￨p [￨4￨p ]￨4￨p keys￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ItemizedFilter￨3￨f (￨3￨f int￨4￨p [￨4￨p ]￨4￨p keys￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f static￨2￨f Term￨2￨f [￨2￨f ]￨2￨f ta￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanTermQuery￨2￨f st￨2￨f (￨2￨f String￨3￨p s￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanNotQuery￨2￨f snot￨2￨f (￨2￨f SpanQuery￨3￨p i￨3￨p ,￨3￨p SpanQuery￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanOrQuery￨2￨f sor￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p String￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanOrQuery￨2￨f sor￨2￨f (￨2￨f SpanQuery￨3￨p s￨3￨p ,￨3￨p SpanQuery￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanOrQuery￨2￨f sor￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p String￨3￨p m￨3￨p ,￨3￨p String￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanOrQuery￨2￨f sor￨2￨f (￨2￨f SpanQuery￨3￨p s￨3￨p ,￨3￨p SpanQuery￨3￨p m￨3￨p ,￨3￨p SpanQuery￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanNearQuery￨2￨f snear￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p String￨3￨p e￨3￨p ,￨3￨p int￨3￨p slop￨3￨p ,￨3￨p boolean￨3￨p inOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanNearQuery￨2￨f snear￨2￨f (￨2￨f SpanQuery￨3￨p s￨3￨p ,￨3￨p SpanQuery￨3￨p e￨3￨p ,￨3￨p int￨3￨p slop￨3￨p ,￨3￨p boolean￨3￨p inOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanNearQuery￨2￨f snear￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p String￨3￨p m￨3￨p ,￨3￨p String￨3￨p e￨3￨p ,￨3￨p int￨3￨p slop￨3￨p ,￨3￨p boolean￨3￨p inOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanNearQuery￨2￨f snear￨2￨f (￨2￨f SpanQuery￨3￨p s￨3￨p ,￨3￨p SpanQuery￨3￨p m￨3￨p ,￨3￨p SpanQuery￨3￨p e￨3￨p ,￨3￨p int￨3￨p slop￨3￨p ,￨3￨p boolean￨3￨p inOrder￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SpanFirstQuery￨2￨f sf￨2￨f (￨2￨f String￨3￨p s￨3￨p ,￨3￨p int￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Query￨2￨f optB￨2￨f (￨2￨f String￨2￨f q￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Query￨2￨f optB￨2￨f (￨2￨f Query￨2￨f q￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Query￨2￨f reqB￨2￨f (￨2￨f String￨2￨f q￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Query￨2￨f reqB￨2￨f (￨2￨f Query￨2￨f q￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testNoop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ExternalFoldersManager￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e EXTERNAL_PROJECT_NAME￨2￨e =￨2￨e ".org.eclipse.jdt.core.external.folders"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e LINKED_FOLDER_NAME￨2￨e =￨2￨e ".link"￨2￨e ;￨2￨e private￨2￨e HashMap￨2￨e folders￨2￨e ;￨2￨e private￨2￨e int￨2￨e counter￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨f static￨2￨f HashSet￨2￨f getExternalFolders￨2￨f (￨2￨f IClasspathEntry￨3￨p [￨3￨p ]￨3￨p classpath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isExternalFolderPath￨2￨f (￨2￨f IPath￨3￨p externalPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isInternalPathForExternalFolder￨2￨f (￨2￨f IPath￨3￨p resourcePath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFolder￨2￨f addFolder￨2￨f (￨2￨f IPath￨3￨p externalFolderPath￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f synchronized￨2￨f IFolder￨2￨f addFolder￨2￨f (￨2￨f IPath￨3￨p externalFolderPath￨3￨p ,￨3￨p IProject￨3￨p externalFoldersProject￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IFolder￨2￨f createLinkFolder￨2￨f (￨2￨f IPath￨2￨f externalFolderPath￨2￨f ,￨2￨f boolean￨2￨f refreshIfExistAlready￨2￨f ,￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f cleanUp￨2￨f (￨2￨f IProgressMonitor￨2￨f monitor￨2￨f )￨2￨f throws￨2￨f CoreException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IProject￨2￨f getExternalFoldersProject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IProject￨2￨f createExternalFoldersProject￨2￨f (￨2￨f IProgressMonitor￨3￨p monitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f IFolder￨2￨f getFolder￨2￨f (￨2￨f IPath￨3￨p externalFolderPath￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f HashMap￨2￨f getFolders￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f refreshReferences￨2￨f (￨2￨f IProject￨3￨p source￨3￨p ,￨3￨p IProgressMonitor￨3￨p monitor￨3￨p )￨2￨f {￨2￨f IProject￨3￨e externalProject￨3￨e =￨3￨e getExternalFoldersProject￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j source￨4￨c .￨4￨c equals￨4￨c (￨4￨c externalProject￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c JavaProject￨4￨c .￨4￨c hasJavaNature￨4￨c (￨4￨c source￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b HashSet￨4￨b externalFolders￨4￨b =￨4￨b ExternalFoldersManager￨4￨b .￨4￨b getExternalFolders￨4￨b (￨4￨b JavaCore￨4￨b .￨4￨b create￨4￨b (￨4￨b source￨4￨b )￨4￨b .￨4￨b getResolvedClasspath￨4￨b (￨4￨b true￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j externalFolders￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j final￨4￨e Iterator￨4￨e iterator￨4￨e =￨4￨e externalFolders￨4￨e .￨4￨e iterator￨4￨e (￨4￨e )￨4￨e ;￨4￨e Job￨4￨f refreshJob￨4￨f =￨4￨f new￨4￨f Job￨4￨f (￨4￨f Messages￨5￨p .￨5￨p refreshing_external_folders￨5￨p )￨4￨f {￨4￨f public￨5￨f boolean￨5￨f belongsTo￨5￨f (￨5￨f Object￨6￨p family￨6￨p )￨5￨f {￨5￨f return￨6￨e family￨6￨e ==￨6￨e (￨6￨e ResourcesPlugin￨6￨e .￨6￨e FAMILY_MANUAL_REFRESH￨6￨e )￨6￨e ;￨6￨e }￨5￨f protected￨5￨f IStatus￨5￨f run￨5￨f (￨5￨f IProgressMonitor￨6￨p pm￨6￨p )￨5￨f {￨5￨f try￨6￨f (￨6￨f )￨6￨f {￨6￨f while￨7￨l (￨7￨l iterator￨8￨c .￨8￨c hasNext￨8￨c (￨8￨c )￨8￨c )￨7￨l {￨7￨l IPath￨8￨e externalPath￨8￨e =￨8￨e (￨8￨e (￨8￨e IPath￨8￨e )￨8￨e (￨8￨e iterator￨8￨e .￨8￨e next￨8￨e (￨8￨e )￨8￨e )￨8￨e )￨8￨e ;￨8￨e IFolder￨8￨e folder￨8￨e =￨8￨e getFolder￨8￨e (￨8￨e externalPath￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j folder￨9￨c !=￨9￨c null￨9￨c )￨8￨j {￨8￨j folder￨9￨e .￨9￨e refreshLocal￨9￨e (￨9￨e IResource￨9￨e .￨9￨e DEPTH_INFINITE￨9￨e ,￨9￨e pm￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨7￨l }￨6￨f catch￨6￨f (￨6￨f CoreException￨7￨p e￨7￨p )￨6￨f {￨6￨f return￨7￨e e￨7￨e .￨7￨e getStatus￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f return￨6￨e Status￨6￨e .￨6￨e OK_STATUS￨6￨e ;￨6￨e }￨5￨f }￨4￨f ;￨4￨e refreshJob￨4￨e .￨4￨e schedule￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f CoreException￨4￨p e￨4￨p )￨3￨f {￨3￨f Util￨4￨e .￨4￨e log￨4￨e (￨4￨e e￨4￨e ,￨4￨e "Exception<seq2seq4repair_space>while<seq2seq4repair_space>refreshing<seq2seq4repair_space>external<seq2seq4repair_space>project"￨4￨e )￨4￨e ;￨4￨e }￨3￨f return￨3￨e ;￨3￨e }￨2￨f public￨2￨f synchronized￨2￨f IFolder￨2￨f removeFolder￨2￨f (￨2￨f IPath￨3￨p externalFolderPath￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RequestResponseBodyMethodProcessor￨1￨d extends￨1￨d AbstractMessageConverterMethodProcessor￨1￨d {￨1￨d public￨2￨f RequestResponseBodyMethodProcessor￨2￨f (￨2￨f List￨3￨p <￨3￨p HttpMessageConverter￨3￨p <￨3￨p ?￨3￨p >￨3￨p >￨3￨p messageConverters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsParameter￨2￨f (￨2￨f MethodParameter￨3￨p parameter￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsReturnType￨2￨f (￨2￨f MethodParameter￨3￨p returnType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f resolveArgument￨2￨f (￨2￨f MethodParameter￨2￨f parameter￨2￨f ,￨2￨f ModelAndViewContainer￨2￨f mavContainer￨2￨f ,￨2￨f NativeWebRequest￨2￨f webRequest￨2￨f ,￨2￨f WebDataBinderFactory￨2￨f binderFactory￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f Object￨3￨e arg￨3￨e =￨3￨e readWithMessageConverters￨3￨e (￨3￨e webRequest￨3￨e ,￨3￨e parameter￨3￨e ,￨3￨e parameter￨3￨e .￨3￨e getParameterType￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e Annotation￨3￨e [￨3￨e ]￨3￨e annotations￨3￨e =￨3￨e parameter￨3￨e .￨3￨e getParameterAnnotations￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Annotation￨4￨c annot￨4￨c :￨4￨c annotations￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b if￨4￨b (￨4￨b "Valid"￨4￨b .￨4￨b equals￨4￨b (￨4￨b annot￨4￨b .￨4￨b annotationType￨4￨b (￨4￨b )￨4￨b .￨4￨b getSimpleName￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b String￨4￨e name￨4￨e =￨4￨e Conventions￨4￨e .￨4￨e getVariableNameForParameter￨4￨e (￨4￨e parameter￨4￨e )￨4￨e ;￨4￨e WebDataBinder￨4￨e binder￨4￨e =￨4￨e binderFactory￨4￨e .￨4￨e createBinder￨4￨e (￨4￨e webRequest￨4￨e ,￨4￨e arg￨4￨e ,￨4￨e name￨4￨e )￨4￨e ;￨4￨e Object￨4￨e hints￨4￨e =￨4￨e AnnotationUtils￨4￨e .￨4￨e getValue￨4￨e (￨4￨e annot￨4￨e )￨4￨e ;￨4￨e binder￨4￨f .￨4￨f validate￨4￨f (￨4￨f (￨4￨f hints￨4￨f instanceof￨4￨f Object￨4￨f [￨4￨f ]￨4￨f ?￨4￨f (￨4￨f (￨4￨f Object￨4￨f [￨4￨f ]￨4￨f )￨4￨f (￨4￨f hints￨4￨f )￨4￨f )￨4￨f :￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e )￨4￨e ;￨4￨e BindingResult￨4￨e bindingResult￨4￨e =￨4￨e binder￨4￨e .￨4￨e getBindingResult￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j bindingResult￨5￨c .￨5￨c hasErrors￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e org￨5￨e .￨5￨e springframework￨5￨e .￨5￨e web￨5￨e .￨5￨e method￨5￨e .￨5￨e annotation￨5￨e .￨5￨e support￨5￨e .￨5￨e MethodArgumentNotValidException￨5￨e (￨5￨e parameter￨5￨e ,￨5￨e bindingResult￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e arg￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f handleReturnValue￨2￨f (￨2￨f Object￨2￨f returnValue￨2￨f ,￨2￨f MethodParameter￨2￨f returnType￨2￨f ,￨2￨f ModelAndViewContainer￨2￨f mavContainer￨2￨f ,￨2￨f NativeWebRequest￨2￨f webRequest￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f HttpMediaTypeNotAcceptableException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ProgressFeedbackDialog￨1￨d extends￨1￨d Dialog￨1￨d {￨1￨d private￨2￨e IStructuredContentProvider￨2￨e provider￨2￨e ;￨2￨e ListViewer￨2￨e viewer￨2￨e ;￨2￨e public￨2￨f ProgressFeedbackDialog￨2￨f (￨2￨f IStructuredContentProvider￨3￨p contentProvider￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ILabelProvider￨2￨f getLabelProvider￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f refreshViewer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f configureShell￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createDialogArea￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f setBlockOnOpen￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e Composite￨3￨e mainArea￨3￨e =￨3￨e (￨3￨e (￨3￨e Composite￨3￨e )￨3￨e (￨3￨e super￨3￨e .￨3￨e createDialogArea￨3￨e (￨3￨e parent￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e viewer￨3￨e =￨3￨e new￨3￨e ListViewer￨3￨e (￨3￨e mainArea￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e BORDER￨3￨e )￨3￨e ;￨3￨e GridData￨3￨e data￨3￨e =￨3￨e new￨3￨e GridData￨3￨e (￨3￨e (￨3￨e (￨3￨e (￨3￨e GridData￨3￨e .￨3￨e FILL_BOTH￨3￨e )￨3￨e |￨3￨e (￨3￨e GridData￨3￨e .￨3￨e GRAB_HORIZONTAL￨3￨e )￨3￨e )￨3￨e |￨3￨e (￨3￨e GridData￨3￨e .￨3￨e GRAB_VERTICAL￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b data￨3￨b .￨3￨b widthHint￨3￨b =￨3￨b convertHorizontalDLUsToPixels￨3￨b (￨3￨b 200￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b data￨3￨e .￨3￨e heightHint￨3￨e =￨3￨e convertVerticalDLUsToPixels￨3￨e (￨3￨e 100￨3￨e )￨3￨e ;￨3￨e viewer￨3￨e .￨3￨e getControl￨3￨e (￨3￨e )￨3￨e .￨3￨e setLayoutData￨3￨e (￨3￨e data￨3￨e )￨3￨e ;￨3￨e viewer￨3￨e .￨3￨e setContentProvider￨3￨e (￨3￨e provider￨3￨e )￨3￨e ;￨3￨e viewer￨3￨e .￨3￨e setLabelProvider￨3￨e (￨3￨e getLabelProvider￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e viewer￨3￨e .￨3￨e setInput￨3￨e (￨3￨e ProgressFeedbackManager￨3￨e .￨3￨e getFeedbackManager￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e viewer￨3￨f .￨3￨f addDoubleClickListener￨3￨f (￨3￨f new￨3￨f IDoubleClickListener￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f doubleClick￨4￨f (￨4￨f DoubleClickEvent￨5￨p event￨5￨p )￨4￨f {￨4￨f ISelection￨5￨e selection￨5￨e =￨5￨e event￨5￨e .￨5￨e getSelection￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j selection￨6￨c instanceof￨6￨c IStructuredSelection￨6￨c )￨5￨j {￨5￨j IStructuredSelection￨6￨e structured￨6￨e =￨6￨e (￨6￨e (￨6￨e IStructuredSelection￨6￨e )￨6￨e (￨6￨e selection￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c structured￨7￨c .￨7￨c size￨7￨c (￨7￨c )￨7￨c )￨7￨c >￨7￨c 0￨7￨c )￨6￨j {￨6￨j AwaitingFeedbackInfo￨7￨e info￨7￨e =￨7￨e (￨7￨e (￨7￨e AwaitingFeedbackInfo￨7￨e )￨7￨e (￨7￨e structured￨7￨e .￨7￨e getFirstElement￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e info￨7￨e .￨7￨e getJob￨7￨e (￨7￨e )￨7￨e .￨7￨e schedule￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e return￨3￨e mainArea￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f createButtonsForButtonBar￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParameterizedTypeBinding￨1￨d extends￨1￨d ReferenceBinding￨1￨d implements￨1￨d Substitution￨1￨d {￨1￨d public￨2￨e ReferenceBinding￨2￨e type￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e [￨2￨e ]￨2￨e arguments￨2￨e ;￨2￨e public￨2￨e LookupEnvironment￨2￨e environment￨2￨e ;￨2￨e public￨2￨e char￨2￨e [￨2￨e ]￨2￨e genericTypeSignature￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e superclass￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e superInterfaces￨2￨e ;￨2￨e public￨2￨e FieldBinding￨2￨e [￨2￨e ]￨2￨e fields￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e [￨2￨e ]￨2￨e memberTypes￨2￨e ;￨2￨e public￨2￨e MethodBinding￨2￨e [￨2￨e ]￨2￨e methods￨2￨e ;￨2￨e public￨2￨e ReferenceBinding￨2￨e enclosingType￨2￨e ;￨2￨e public￨2￨f ParameterizedTypeBinding￨2￨f (￨2￨f ReferenceBinding￨3￨p type￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p ReferenceBinding￨3￨p enclosingType￨3￨p ,￨3￨p LookupEnvironment￨3￨p environment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f collectSubstitutes￨2￨f (￨2￨f TypeBinding￨3￨p otherType￨3￨p ,￨3￨p Map￨3￨p substitutes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f computeId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f constantPoolName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ParameterizedMethodBinding￨2￨f createParameterizedMethod￨2￨f (￨2￨f MethodBinding￨3￨p originalMethod￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b ParameterizedMethodBinding￨3￨b (￨3￨b this￨3￨b ,￨3￨b originalMethod￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f String￨2￨f debugName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f enclosingType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f erasure￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f fieldCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f [￨2￨f ]￨2￨f fields￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f genericTypeSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactConstructor￨2￨f (￨2￨f TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f getExactMethod￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p ,￨3￨p CompilationUnitScope￨3￨p refScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FieldBinding￨2￨f getField￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p fieldName￨3￨p ,￨3￨p boolean￨3￨p needResolve￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f getMemberType￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p typeName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f getMethods￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p selector￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f hasMemberTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f implementsMethod￨2￨f (￨2￨f MethodBinding￨3￨p method￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f initialize￨2￨f (￨2￨f ReferenceBinding￨3￨p someType￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p someArguments￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initializeArguments￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEquivalentTo￨2￨f (￨2￨f TypeBinding￨3￨p otherType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isParameterizedType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f memberTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MethodBinding￨2￨f [￨2￨f ]￨2￨f methods￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f qualifiedSourceName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f readableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ReferenceBinding￨2￨f resolve￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f shortReadableName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f signature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f sourceName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f substitute￨2￨f (￨2￨f TypeBinding￨3￨p originalType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f superclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f superInterfaces￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f swapUnresolved￨2￨f (￨2￨f UnresolvedReferenceBinding￨3￨p unresolvedType￨3￨p ,￨3￨p ReferenceBinding￨3￨p resolvedType￨3￨p ,￨3￨p LookupEnvironment￨3￨p env￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferenceBinding￨2￨f [￨2￨f ]￨2￨f syntheticEnclosingInstanceTypes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SyntheticArgumentBinding￨2￨f [￨2￨f ]￨2￨f syntheticOuterLocalVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f qualifiedPackageName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeVariableBinding￨2￨f [￨2￨f ]￨2￨f typeVariables￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Jaxb2MarshallerTests￨1￨d extends￨1￨d AbstractMarshallerTests￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e CONTEXT_PATH￨2￨e =￨2￨e "org.springframework.oxm.jaxb.test"￨2￨e ;￨2￨e private￨2￨e Jaxb2Marshaller￨2￨e marshaller￨2￨e ;￨2￨e private￨2￨e Flights￨2￨e flights￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f Marshaller￨2￨f createMarshaller￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f Object￨2￨f createFlights￨2￨f (￨2￨f )￨2￨f {￨2￨f FlightType￨3￨e flight￨3￨e =￨3￨e new￨3￨e FlightType￨3￨e (￨3￨e )￨3￨e ;￨3￨e flight￨3￨e .￨3￨e setNumber￨3￨e (￨3￨e 42L￨3￨e )￨3￨e ;￨3￨e flights￨3￨e =￨3￨e new￨3￨e Flights￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b flights￨3￨b .￨3￨b getFlight￨3￨b (￨3￨b )￨3￨b .￨3￨b configureBinding￨3￨b (￨3￨b flight￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e flights￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f marshalSAXResult￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f laxyInit￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f properties￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨d Test￨2￨d (￨2￨d expected￨2￨d =￨2￨d IllegalArgumentException￨2￨d .￨2￨d class￨2￨d )￨2￨d public￨2￨d void￨2￨d noContextPathOrClassesToBeBound￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d @￨2￨d Test￨2￨d (￨2￨d expected￨2￨d =￨2￨d UncategorizedMappingException￨2￨d .￨2￨d class￨2￨d )￨2￨d public￨2￨d void￨2￨d testInvalidContextPath￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d @￨2￨d Test￨2￨d (￨2￨d expected￨2￨d =￨2￨d XmlMappingException￨2￨d .￨2￨d class￨2￨d )￨2￨d public￨2￨d void￨2￨d marshalInvalidClass￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f supportsContextPath￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f supportsClassesToBeBound￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f marshalAttachments￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Spinner￨1￨d extends￨1￨d Composite￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e int￨2￨e LIMIT￨2￨e ;￨2￨e public￨2￨f Spinner￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f checkSubclass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addModifyListener￨2￨f (￨2￨f ModifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f addVerifyListener￨2￨f (￨2￨f VerifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f computeSize￨2￨f (￨2￨f int￨3￨p wHint￨3￨p ,￨3￨p int￨3￨p hHint￨3￨p ,￨3￨p boolean￨3￨p changed￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f copy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f cut￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f defaultBackground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f defaultForeground￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getDigits￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getIncrement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMaximum￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getMinimum￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getPageIncrement￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getSelection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getText￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getTextLimit￨2￨f (￨2￨f )￨2￨f {￨2￨f checkWidget￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b 0￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f boolean￨2￨f hasFocus￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f hookEvents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f paste￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f Pt_CB_NUMERIC_CHANGED￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p info￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeModifyListener￨2￨f (￨2￨f ModifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeSelectionListener￨2￨f (￨2￨f SelectionListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f removeVerifyListener￨2￨f (￨2￨f VerifyListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDigits￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncrement￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaximum￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimum￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPageIncrement￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSelection￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTextLimit￨2￨f (￨2￨f int￨3￨p limit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setValues￨2￨f (￨2￨f int￨3￨p selection￨3￨p ,￨3￨p int￨3￨p minimum￨3￨p ,￨3￨p int￨3￨p maximum￨3￨p ,￨3￨p int￨3￨p digits￨3￨p ,￨3￨p int￨3￨p increment￨3￨p ,￨3￨p int￨3￨p pageIncrement￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f translateTraversal￨2￨f (￨2￨f int￨3￨p key_sym￨3￨p ,￨3￨p PhKeyEvent_t￨3￨p phEvent￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f widgetClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FieldInfo￨1￨d extends￨1￨d ClassFileStruct￨1￨d implements￨1￨d Comparable￨1￨d ,￨1￨d AttributeNamesConstants￨1￨d ,￨1￨d IBinaryField￨1￨d ,￨1￨d TypeIds￨1￨d {￨1￨d private￨2￨e int￨2￨e accessFlags￨2￨e ;￨2￨e private￨2￨e int￨2￨e attributeBytes￨2￨e ;￨2￨e private￨2￨e Constant￨2￨e constant￨2￨e ;￨2￨e private￨2￨e int￨2￨e [￨2￨e ]￨2￨e constantPoolOffsets￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e descriptor￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e name￨2￨e ;￨2￨e private￨2￨e char￨2￨e [￨2￨e ]￨2￨e signature￨2￨e ;￨2￨e private￨2￨e int￨2￨e signatureUtf8Offset￨2￨e ;￨2￨e private￨2￨e long￨2￨e tagBits￨2￨e ;￨2￨e private￨2￨e Object￨2￨e wrappedConstantValue￨2￨e ;￨2￨e public￨2￨f FieldInfo￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p classFileBytes￨3￨p ,￨3￨p int￨3￨p [￨3￨p ]￨3￨p offsets￨3￨p ,￨3￨p int￨3￨p offset￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f compareTo￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f decodeAnnotation￨2￨f (￨2￨f int￨3￨p offset￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f decodeElementValue￨2￨f (￨2￨f int￨3￨p offset￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f decodeStandardAnnotations￨2￨f (￨2￨f int￨3￨p offset￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f getConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getGenericSignature￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getModifiers￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f long￨2￨f getTagBits￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f char￨2￨f [￨2￨f ]￨2￨f getTypeName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getWrappedConstantValue￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c wrappedConstantValue￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j hasConstant￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j Constant￨5￨e fieldConstant￨5￨e =￨5￨e getConstant￨5￨e (￨5￨e )￨5￨e ;￨5￨e switch￨5￨s (￨5￨s fieldConstant￨5￨c .￨5￨c typeID￨5￨c (￨5￨c )￨5￨c )￨5￨s {￨5￨s case￨6￨c TypeIds￨6￨c .￨6￨c T_int￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Integer￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e intValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_byte￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Byte￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e byteValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_short￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Short￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e shortValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_char￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Character￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e charValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_float￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Float￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e floatValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_double￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Double￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e doubleValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_boolean￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e Util￨7￨e .￨7￨e toBoolean￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e booleanValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e case￨6￨c TypeIds￨6￨c .￨6￨c T_long￨6￨c :￨6￨c this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e new￨7￨e Long￨7￨e (￨7￨e fieldConstant￨7￨e .￨7￨e longValue￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e break￨7￨e ;￨7￨e <START_BUG>￨7￨b <END_BUG>￨7￨b case￨6￨c T_String￨6￨c :￨6￨c <END_BUG>￨7￨e this￨7￨e .￨7￨e wrappedConstantValue￨7￨e =￨7￨e fieldConstant￨7￨e .￨7￨e stringValue￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨5￨s }￨4￨j }￨3￨j return￨3￨e this￨3￨e .￨3￨e wrappedConstantValue￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f hasConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f initialize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isSynthetic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readConstantAttribute￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readModifierRelatedAttributes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f sizeInBytes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f throwFormatException￨2￨f (￨2￨f )￨2￨f throws￨2￨f ClassFormatException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ModClusterEnableContext￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e ModClusterEnableContext￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ModClusterEnableContext￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨f OperationDefinition￨2￨f getDefinition￨2￨f (￨2￨f ResourceDescriptionResolver￨3￨p descriptionResolver￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c context￨4￨c .￨4￨c isNormalServer￨4￨c (￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c context￨4￨c .￨4￨c getServiceRegistry￨4￨c (￨4￨c false￨4￨c )￨4￨c .￨4￨c getService￨4￨c (￨4￨c SERVICE_NAME￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨f .￨4￨f addStep￨4￨f (￨4￨f new￨4￨f OperationStepHandler￨4￨f (￨4￨f )￨4￨f {￨4￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f execute￨5￨f (￨5￨f OperationContext￨5￨f context￨5￨f ,￨5￨f ModelNode￨5￨f operation￨5￨f )￨5￨f throws￨5￨f OperationFailedException￨5￨f (￨5￨f )￨5￨f {￨5￨f ServiceController￨6￨e <￨6￨e ?￨6￨e >￨6￨e controller￨6￨e =￨6￨e context￨6￨e .￨6￨e getServiceRegistry￨6￨e (￨6￨e false￨6￨e )￨6￨e .￨6￨e getService￨6￨e (￨6￨e SERVICE_NAME￨6￨e )￨6￨e ;￨6￨e final￨6￨e ModClusterServiceMBean￨6￨e service￨6￨e =￨6￨e (￨6￨e (￨6￨e ModClusterServiceMBean￨6￨e )￨6￨e (￨6￨e controller￨6￨e .￨6￨e getValue￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e ModClusterLogger￨6￨e .￨6￨e ROOT_LOGGER￨6￨e .￨6￨e debugf￨6￨e (￨6￨e "enable-context:<seq2seq4repair_space>%s"￨6￨e ,￨6￨e operation￨6￨e )￨6￨e ;￨6￨e final￨6￨e String￨6￨e webHost￨6￨e =￨6￨e ModClusterSubsystemResourceDefinition￨6￨e .￨6￨e VIRTUAL_HOST￨6￨e .￨6￨e resolveModelAttribute￨6￨e (￨6￨e context￨6￨e ,￨6￨e operation￨6￨e )￨6￨e .￨6￨e asString￨6￨e (￨6￨e )￨6￨e ;￨6￨e final￨6￨e String￨6￨e webContext￨6￨e =￨6￨e ModClusterSubsystemResourceDefinition￨6￨e .￨6￨e CONTEXT￨6￨e .￨6￨e resolveModelAttribute￨6￨e (￨6￨e context￨6￨e ,￨6￨e operation￨6￨e )￨6￨e .￨6￨e asString￨6￨e (￨6￨e )￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f service￨7￨e .￨7￨e enableContext￨7￨e (￨7￨e webHost￨7￨e ,￨7￨e webContext￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f IllegalArgumentException￨7￨p e￨7￨p )￨6￨f {￨6￨f <START_BUG>￨7￨b throw￨7￨b new￨7￨b OperationFailedException￨7￨b (￨7￨b new￨7￨b ModelNode￨7￨b (￨7￨b )￨7￨b .￨7￨b set￨7￨b (￨7￨b ROOT_LOGGER￨7￨b .￨7￨b contextOrHostNotFound￨7￨b (￨7￨b webHost￨7￨b ,￨7￨b webContext￨7￨b )￨7￨b )￨7￨b )￨7￨b ;￨7￨b <END_BUG>￨7￨b }￨6￨f context￨6￨f .￨6￨f completeStep￨6￨f (￨6￨f new￨6￨f OperationContext￨6￨f .￨6￨f RollbackHandler￨6￨f (￨6￨f )￨6￨f {￨6￨f @￨7￨f Override￨7￨f public￨7￨f void￨7￨f handleRollback￨7￨f (￨7￨f OperationContext￨8￨p context￨8￨p ,￨8￨p ModelNode￨8￨p operation￨8￨p )￨7￨f {￨7￨f service￨8￨e .￨8￨e disableContext￨8￨e (￨8￨e webHost￨8￨e ,￨8￨e webContext￨8￨e )￨8￨e ;￨8￨e }￨7￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨f }￨4￨f ,￨4￨e RUNTIME￨4￨e )￨4￨e ;￨4￨e }￨3￨j context￨3￨e .￨3￨e stepCompleted￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConstantInitializer￨1￨d <￨1￨d T￨1￨d >￨1￨d implements￨1￨d ConcurrentInitializer￨1￨d <￨1￨d T￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e FMT_TO_STRING￨2￨e =￨2￨e "ConstantInitializer@%d<seq2seq4repair_space>[<seq2seq4repair_space>object<seq2seq4repair_space>=<seq2seq4repair_space>%s<seq2seq4repair_space>]"￨2￨e ;￨2￨e private￨2￨e final￨2￨e T￨2￨e object￨2￨e ;￨2￨e public￨2￨f ConstantInitializer￨2￨f (￨2￨f final￨3￨p T￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f T￨2￨f getObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f T￨2￨f get￨2￨f (￨2￨f )￨2￨f throws￨2￨f ConcurrentException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f final￨3￨p Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c )￨4￨c ==￨4￨c obj￨4￨c )￨3￨j {￨3￨j return￨4￨e true￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c obj￨4￨c instanceof￨4￨c ConstantInitializer￨4￨c <￨4￨c ?￨4￨c >￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e false￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b ConstantInitializer￨3￨b <￨3￨b ?￨3￨b >￨3￨b c￨3￨b =￨3￨b (￨3￨b (￨3￨b ConstantInitializer￨3￨b <￨3￨b ?￨3￨b >￨3￨b )￨3￨b (￨3￨b obj￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e ObjectUtils￨3￨e .￨3￨e equals￨3￨e (￨3￨e getObject￨3￨e (￨3￨e )￨3￨e ,￨3￨e c￨3￨e .￨3￨e getObject￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d WriteAttributeHandlers￨1￨d {￨1￨d public￨2￨d static￨2￨d class￨2￨d WriteAttributeOperationHandler￨2￨d implements￨2￨d ModelUpdateOperationHandler￨2￨d {￨2￨d public￨3￨e static￨3￨e OperationHandler￨3￨e INSTANCE￨3￨e =￨3￨e new￨3￨e WriteAttributeHandlers￨3￨e .￨3￨e WriteAttributeOperationHandler￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ParameterValidator￨3￨e validator￨3￨e ;￨3￨e private￨3￨f WriteAttributeOperationHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f protected￨3￨f WriteAttributeOperationHandler￨3￨f (￨3￨f ParameterValidator￨4￨p validator￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Cancellable￨3￨f execute￨3￨f (￨3￨f final￨4￨p NewOperationContext￨4￨p context￨4￨p ,￨4￨p final￨4￨p ModelNode￨4￨p operation￨4￨p ,￨4￨p final￨4￨p ResultHandler￨4￨p resultHandler￨4￨p )￨3￨f {￨3￨f Cancellable￨4￨e cancellable￨4￨e =￨4￨e Cancellable￨4￨e .￨4￨e NULL￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e String￨5￨e name￨5￨e =￨5￨e operation￨5￨e .￨5￨e require￨5￨e (￨5￨e NAME￨5￨e )￨5￨e .￨5￨e asString￨5￨e (￨5￨e )￨5￨e ;￨5￨e final￨5￨e ModelNode￨5￨e value￨5￨e =￨5￨e operation￨5￨e .￨5￨e get￨5￨e (￨5￨e VALUE￨5￨e )￨5￨e ;￨5￨e String￨5￨e error￨5￨e =￨5￨e validateValue￨5￨e (￨5￨e name￨5￨e ,￨5￨e value￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j error￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j resultHandler￨6￨e .￨6￨e handleFailed￨6￨e (￨6￨e new￨6￨e ModelNode￨6￨e (￨6￨e )￨6￨e .￨6￨e set￨6￨e (￨6￨e error￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j <START_BUG>￨6￨b context￨6￨b .￨6￨b getSubModel￨6￨b (￨6￨b )￨6￨b .￨6￨b require￨6￨b (￨6￨b name￨6￨b )￨6￨b .￨6￨b set￨6￨b (￨6￨b value￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b resultHandler￨6￨e .￨6￨e handleResultComplete￨6￨e (￨6￨e null￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f catch￨4￨f (￨4￨f final￨5￨p Exception￨5￨p e￨5￨p )￨4￨f {￨4￨f resultHandler￨5￨e .￨5￨e handleFailed￨5￨e (￨5￨e new￨5￨e ModelNode￨5￨e (￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e e￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f return￨4￨e cancellable￨4￨e ;￨4￨e }￨3￨f protected￨3￨f String￨3￨f validateValue￨3￨f (￨3￨f String￨4￨p name￨4￨p ,￨4￨p ModelNode￨4￨p value￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d ModelTypeValidatingHandler￨2￨d extends￨2￨d WriteAttributeHandlers￨2￨d .￨2￨d WriteAttributeOperationHandler￨2￨d {￨2￨d public￨3￨f ModelTypeValidatingHandler￨3￨f (￨3￨f final￨4￨p ModelType￨4￨p type￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ModelTypeValidatingHandler￨3￨f (￨3￨f final￨4￨p ModelType￨4￨p type￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ModelTypeValidatingHandler￨3￨f (￨3￨f final￨4￨p ModelType￨4￨p type￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p allowExpressions￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ModelTypeValidatingHandler￨3￨f (￨3￨f final￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p allowExpressions￨4￨p ,￨4￨p ModelType￨4￨p firstValidType￨4￨p ,￨4￨p ModelType￨4￨p ...￨4￨p otherValidTypes￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d StringLengthValidatingHandler￨2￨d extends￨2￨d WriteAttributeHandlers￨2￨d .￨2￨d WriteAttributeOperationHandler￨2￨d {￨2￨d public￨3￨f StringLengthValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f StringLengthValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f StringLengthValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p ,￨4￨p final￨4￨p int￨4￨p max￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p allowExpressions￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d IntRangeValidatingHandler￨2￨d extends￨2￨d WriteAttributeHandlers￨2￨d .￨2￨d WriteAttributeOperationHandler￨2￨d {￨2￨d public￨3￨f IntRangeValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f IntRangeValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f IntRangeValidatingHandler￨3￨f (￨3￨f final￨4￨p int￨4￨p min￨4￨p ,￨4￨p final￨4￨p int￨4￨p max￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p allowExpressions￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d InetAddressValidatingHandler￨2￨d extends￨2￨d WriteAttributeHandlers￨2￨d .￨2￨d WriteAttributeOperationHandler￨2￨d {￨2￨d public￨3￨f InetAddressValidatingHandler￨3￨f (￨3￨f final￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p final￨4￨p boolean￨4￨p allowExpressions￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨d static￨2￨d class￨2￨d ListValidatatingHandler￨2￨d extends￨2￨d WriteAttributeHandlers￨2￨d .￨2￨d WriteAttributeOperationHandler￨2￨d {￨2￨d public￨3￨f ListValidatatingHandler￨3￨f (￨3￨f ParameterValidator￨4￨p elementValidator￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ListValidatatingHandler￨3￨f (￨3￨f ParameterValidator￨4￨p elementValidator￨4￨p ,￨4￨p boolean￨4￨p nullable￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f ListValidatatingHandler￨3￨f (￨3￨f ParameterValidator￨4￨p elementValidator￨4￨p ,￨4￨p boolean￨4￨p nullable￨4￨p ,￨4￨p int￨4￨p minSize￨4￨p ,￨4￨p int￨4￨p maxSize￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d EJB3SubsystemXMLPersister￨1￨d implements￨1￨d XMLElementWriter￨1￨d <￨1￨d SubsystemMarshallingContext￨1￨d >￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e EJB3SubsystemXMLPersister￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e EJB3SubsystemXMLPersister￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨f Override￨2￨f public￨2￨f void￨2￨f writeContent￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f SubsystemMarshallingContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b context￨3￨b .￨3￨b startSubsystemElement￨3￨b (￨3￨b EJB3_1_5￨3￨b .￨3￨b getUriString￨3￨b (￨3￨b )￨3￨b ,￨3￨b false￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b writeElements￨3￨e (￨3￨e writer￨3￨e ,￨3￨e context￨3￨e )￨3￨e ;￨3￨e writer￨3￨e .￨3￨e writeEndElement￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f protected￨2￨f void￨2￨f writeElements￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f SubsystemMarshallingContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeIIOP￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeThreadPools￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f threadPoolsModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f writeRemote￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeAsync￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeMDB￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f mdbModelNode￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeEntityBean￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f entityModelNode￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeSingletonBean￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f singletonBeanModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeStatefulBean￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f statefulBeanModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeDefaultSLSBPool￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeBeanInstancePools￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f beanInstancePoolModelNode￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeStrictMaxPoolConfig￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f Property￨2￨f strictMaxPoolModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeCaches￨2￨f (￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeClusterPassivationStores￨2￨f (￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeFilePassivationStores￨2￨f (￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f ModelNode￨2￨f model￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeTimerService￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f timerServiceModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeDatabaseDataStores￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f timerServiceModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeFileDataStores￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f timerServiceModel￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeChannelCreationOptions￨2￨f (￨2￨f final￨2￨f XMLExtendedStreamWriter￨2￨f writer￨2￨f ,￨2￨f final￨2￨f ModelNode￨2￨f node￨2￨f )￨2￨f throws￨2￨f XMLStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SingleNameReference￨1￨d extends￨1￨d NameReference￨1￨d implements￨1￨d OperatorIds￨1￨d {￨1￨d public￨2￨e char￨2￨e [￨2￨e ]￨2￨e token￨2￨e ;￨2￨e public￨2￨e MethodBinding￨2￨e [￨2￨e ]￨2￨e syntheticAccessors￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e READ￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e int￨2￨e WRITE￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨f SingleNameReference￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p source￨3￨p ,￨3￨p long￨3￨p pos￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p isCompound￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f checkFieldAccess￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f FieldBinding￨3￨e fieldBinding￨3￨e =￨3￨e (￨3￨e (￨3￨e FieldBinding￨3￨e )￨3￨e (￨3￨e binding￨3￨e )￨3￨e )￨3￨e ;￨3￨e bits￨3￨e &=￨3￨e ~￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e RestrictiveFlagMASK￨3￨e )￨3￨e ;￨3￨e bits￨3￨e |=￨3￨e FIELD￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c (￨4￨c (￨4￨c FieldBinding￨4￨c )￨4￨c (￨4￨c binding￨4￨c )￨4￨c )￨4￨c .￨4￨c isStatic￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j scope￨5￨c .￨5￨c methodScope￨5￨c (￨5￨c )￨5￨c .￨5￨c isStatic￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e staticFieldAccessToNonStaticVariable￨5￨e (￨5￨e this￨5￨e ,￨5￨e fieldBinding￨5￨e )￨5￨e ;￨5￨e constant￨5￨e =￨5￨e NotAConstant￨5￨e ;￨5￨e return￨5￨e null￨5￨e ;￨5￨e }￨4￨j }￨3￨j <START_BUG>￨3￨b constant￨3￨b =￨3￨b FieldReference￨3￨b .￨3￨b getConstantFor￨3￨b (￨3￨b fieldBinding￨3￨b ,￨3￨b true￨3￨b ,￨3￨b this￨3￨b ,￨3￨b 0￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j isFieldUseDeprecated￨4￨c (￨4￨c fieldBinding￨4￨c ,￨4￨c scope￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e problemReporter￨4￨e (￨4￨e )￨4￨e .￨4￨e deprecatedField￨4￨e (￨4￨e fieldBinding￨4￨e ,￨4￨e this￨4￨e )￨4￨e ;￨4￨e }￨3￨j MethodScope￨3￨e ms￨3￨e =￨3￨e scope￨3￨e .￨3￨e methodScope￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c (￨4￨c ms￨4￨c .￨4￨c enclosingSourceType￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c fieldBinding￨4￨c .￨4￨c declaringClass￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c ms￨4￨c .￨4￨c fieldDeclarationIndex￨4￨c )￨4￨c !=￨4￨c (￨4￨c ms￨4￨c .￨4￨c NotInFieldDecl￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c fieldBinding￨4￨c .￨4￨c id￨4￨c )￨4￨c >=￨4￨c (￨4￨c ms￨4￨c .￨4￨c fieldDeclarationIndex￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c !￨5￨c (￨5￨c fieldBinding￨5￨c .￨5￨c isStatic￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c ms￨5￨c .￨5￨c isStatic￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e problemReporter￨5￨e (￨5￨e )￨5￨e .￨5￨e forwardReference￨5￨e (￨5￨e this￨5￨e ,￨5￨e 0￨5￨e ,￨5￨e scope￨5￨e .￨5￨e enclosingSourceType￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e fieldBinding￨3￨e .￨3￨e type￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Assignment￨3￨p assignment￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCompoundAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p assignmentImplicitConversion￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCompoundAssignment￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p MethodBinding￨3￨p writeAccessor￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p assignmentImplicitConversion￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generatePostIncrement￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p CompoundAssignment￨3￨p postIncrement￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateReceiver￨2￨f (￨2￨f CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageEnclosingInstanceAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticReadAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f manageSyntheticWriteAccessIfNecessary￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f reportError￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toStringExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f unboundReferenceErrorName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Session￨1￨d implements￨1￨d IClusterable￨1￨d ,￨1￨d IEventSink￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d Session￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d String￨2￨d SESSION_ATTRIBUTE_NAME￨2￨d =￨2￨d "session"￨2￨d ;￨2￨d private￨2￨d int￨2￨d sequence￨2￨d =￨2￨d 1￨2￨d ;￨2￨d private￨2￨d int￨2￨d pageId￨2￨d =￨2￨d 0￨2￨d ;￨2￨d public￨2￨d static￨2￨d boolean￨2￨d exists￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f static￨2￨f Session￨2￨f get￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨e ClientInfo￨2￨e clientInfo￨2￨e ;￨2￨e private￨2￨e transient￨2￨e boolean￨2￨e dirty￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e final￨2￨e FeedbackMessages￨2￨e feedbackMessages￨2￨e =￨2￨e new￨2￨e FeedbackMessages￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e String￨2￨e id￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Locale￨2￨e locale￨2￨e ;￨2￨e private￨2￨e MetaDataEntry￨2￨e <￨2￨e ?￨2￨e >￨2￨e [￨2￨e ]￨2￨e metaData￨2￨e ;￨2￨e private￨2￨e transient￨2￨e boolean￨2￨e sessionInvalidated￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e transient￨2￨e ISessionStore￨2￨e sessionStore￨2￨e ;￨2￨e private￨2￨e String￨2￨e style￨2￨e ;￨2￨e private￨2￨e transient￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e Serializable￨2￨e >￨2￨e temporarySessionAttributes￨2￨e ;￨2￨e public￨2￨f Session￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f bind￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f cleanupFeedbackMessages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f error￨2￨f (￨2￨f final￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Application￨2￨f getApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IAuthorizationStrategy￨2￨f getAuthorizationStrategy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IClassResolver￨2￨f getClassResolver￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f ClientInfo￨2￨f getClientInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f FeedbackMessages￨2￨f getFeedbackMessages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Locale￨2￨f getLocale￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f <￨2￨f M￨2￨f extends￨2￨f Serializable￨2￨f >￨2￨f M￨2￨f getMetaData￨2￨f (￨2￨f final￨3￨p MetaDataKey￨3￨p <￨3￨p M￨3￨p >￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isCurrentRequestValid￨2￨f (￨2￨f RequestCycle￨3￨p lockedRequestCycle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IPageFactory￨2￨f getPageFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f long￨2￨f getSizeInBytes￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f String￨2￨f getStyle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f info￨2￨f (￨2￨f final￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f invalidate￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c sessionInvalidated￨4￨c )￨4￨c ==￨4￨c false￨4￨c )￨3￨j {￨3￨j RequestCycle￨4￨f .￨4￨f get￨4￨f (￨4￨f )￨4￨f .￨4￨f getListeners￨4￨f (￨4￨f )￨4￨f .￨4￨f add￨4￨f (￨4￨f new￨4￨f AbstractRequestCycleListener￨4￨f (￨4￨f )￨4￨f {￨4￨f @￨5￨f Override￨5￨f public￨5￨f void￨5￨f onDetach￨5￨f (￨5￨f final￨6￨p RequestCycle￨6￨p cycle￨6￨p )￨5￨f {￨5￨f <START_BUG>￨6￨b destroy￨6￨b (￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j sessionInvalidated￨3￨e =￨3￨e true￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f destroy￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f invalidateNow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f replaceSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isSessionInvalidated￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f isTemporary￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setClientInfo￨2￨f (￨2￨f ClientInfo￨3￨p clientInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setLocale￨2￨f (￨2￨f final￨3￨p Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setMetaData￨2￨f (￨2￨f final￨3￨p MetaDataKey￨3￨p <￨3￨p ?￨3￨p >￨3￨p key￨3￨p ,￨3￨p final￨3￨p Serializable￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Session￨2￨f setStyle￨2￨f (￨2￨f final￨3￨p String￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f warn￨2￨f (￨2￨f final￨3￨p String￨3￨p message￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addFeedbackMessage￨2￨f (￨2￨f String￨3￨p message￨3￨p ,￨3￨p int￨3￨p level￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f detach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f dirty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Serializable￨2￨f getAttribute￨2￨f (￨2￨f final￨3￨p String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f getAttributeNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ISessionStore￨2￨f getSessionStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f removeAttribute￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setAttribute￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Serializable￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f int￨2￨f nextSequenceValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f synchronized￨2￨f int￨2￨f nextPageId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IPageManager￨2￨f getPageManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f onEvent￨2￨f (￨2￨f IEvent￨3￨p <￨3￨p ?￨3￨p >￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CommitWorkingCopyOperation￨1￨d extends￨1￨d JavaModelOperation￨1￨d {￨1￨d public￨2￨f CommitWorkingCopyOperation￨2￨f (￨2￨f ICompilationUnit￨3￨p element￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f executeOperation￨2￨f (￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f beginTask￨4￨e (￨4￨e Util￨4￨e .￨4￨e bind￨4￨e (￨4￨e "workingCopy.commit"￨4￨e )￨4￨e ,￨4￨e 2￨4￨e )￨4￨e ;￨4￨e CompilationUnit￨4￨e workingCopy￨4￨e =￨4￨e (￨4￨e (￨4￨e CompilationUnit￨4￨e )￨4￨e (￨4￨e getCompilationUnit￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e IFile￨4￨e resource￨4￨e =￨4￨e (￨4￨e (￨4￨e IFile￨4￨e )￨4￨e (￨4￨e workingCopy￨4￨e .￨4￨e getResource￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e ICompilationUnit￨4￨e primary￨4￨e =￨4￨e workingCopy￨4￨e .￨4￨e getPrimary￨4￨e (￨4￨e )￨4￨e ;￨4￨e boolean￨4￨e isPrimary￨4￨e =￨4￨e workingCopy￨4￨e .￨4￨e isPrimary￨4￨e (￨4￨e )￨4￨e ;￨4￨e JavaElementDeltaBuilder￨4￨e deltaBuilder￨4￨e =￨4￨e null￨4￨e ;￨4￨e PackageFragmentRoot￨4￨e root￨4￨e =￨4￨e (￨4￨e (￨4￨e PackageFragmentRoot￨4￨e )￨4￨e (￨4￨e workingCopy￨4￨e .￨4￨e getAncestor￨4￨e (￨4￨e IJavaElement￨4￨e .￨4￨e PACKAGE_FRAGMENT_ROOT￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b isPrimary￨4￨b ||￨4￨b (￨4￨b (￨4￨b root￨4￨b .￨4￨b isOnClasspath￨4￨b (￨4￨b )￨4￨b )￨4￨b &&￨4￨b (￨4￨b resource￨4￨b .￨4￨b isAccessible￨4￨b (￨4￨b )￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c !￨5￨c isPrimary￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c primary￨5￨c .￨5￨c isOpen￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j primary￨5￨e .￨5￨e open￨5￨e (￨5￨e null￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c !￨5￨c (￨5￨c Util￨5￨c .￨5￨c isExcluded￨5￨c (￨5￨c workingCopy￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c !￨5￨c isPrimary￨5￨c )￨5￨c ||￨5￨c (￨5￨c !￨5￨c (￨5￨c workingCopy￨5￨c .￨5￨c isConsistent￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j deltaBuilder￨5￨e =￨5￨e new￨5￨e JavaElementDeltaBuilder￨5￨e (￨5￨e primary￨5￨e )￨5￨e ;￨5￨e }￨4￨j IBuffer￨4￨e primaryBuffer￨4￨e =￨4￨e primary￨4￨e .￨4￨e getBuffer￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c isPrimary￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j primaryBuffer￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j char￨5￨e [￨5￨e ]￨5￨e primaryContents￨5￨e =￨5￨e primaryBuffer￨5￨e .￨5￨e getCharacters￨5￨e (￨5￨e )￨5￨e ;￨5￨e boolean￨5￨e hasSaved￨5￨e =￨5￨e false￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f IBuffer￨6￨e workingCopyBuffer￨6￨e =￨6￨e workingCopy￨6￨e .￨6￨e getBuffer￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j workingCopyBuffer￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j return￨7￨e ;￨7￨e }￨6￨j primaryBuffer￨6￨e .￨6￨e setContents￨6￨e (￨6￨e workingCopyBuffer￨6￨e .￨6￨e getCharacters￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e primaryBuffer￨6￨e .￨6￨e save￨6￨e (￨6￨e fMonitor￨6￨e ,￨6￨e fForce￨6￨e )￨6￨e ;￨6￨e primary￨6￨e .￨6￨e makeConsistent￨6￨e (￨6￨e this￨6￨e )￨6￨e ;￨6￨e hasSaved￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨f finally￨5￨f (￨5￨f )￨5￨f {￨5￨f if￨6￨j (￨6￨j !￨7￨c hasSaved￨7￨c )￨6￨j {￨6￨j primaryBuffer￨7￨e .￨7￨e setContents￨7￨e (￨7￨e primaryContents￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f }￨4￨j else￨4￨j {￨4￨j primaryBuffer￨5￨e .￨5￨e save￨5￨e (￨5￨e fMonitor￨5￨e ,￨5￨e fForce￨5￨e )￨5￨e ;￨5￨e primary￨5￨e .￨5￨e makeConsistent￨5￨e (￨5￨e this￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j String￨5￨e encoding￨5￨e =￨5￨e workingCopy￨5￨e .￨5￨e getJavaProject￨5￨e (￨5￨e )￨5￨e .￨5￨e getOption￨5￨e (￨5￨e JavaCore￨5￨e .￨5￨e CORE_ENCODING￨5￨e ,￨5￨e true￨5￨e )￨5￨e ;￨5￨e String￨5￨e contents￨5￨e =￨5￨e workingCopy￨5￨e .￨5￨e getSource￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j contents￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f byte￨6￨e [￨6￨e ]￨6￨e bytes￨6￨e =￨6￨e (￨6￨e encoding￨6￨e ==￨6￨e null￨6￨e )￨6￨e ?￨6￨e contents￨6￨e .￨6￨e getBytes￨6￨e (￨6￨e )￨6￨e :￨6￨e contents￨6￨e .￨6￨e getBytes￨6￨e (￨6￨e encoding￨6￨e )￨6￨e ;￨6￨e ByteArrayInputStream￨6￨e stream￨6￨e =￨6￨e new￨6￨e ByteArrayInputStream￨6￨e (￨6￨e bytes￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j resource￨7￨c .￨7￨c exists￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j resource￨7￨e .￨7￨e setContents￨7￨e (￨7￨e stream￨7￨e ,￨7￨e (￨7￨e fForce￨7￨e ?￨7￨e (￨7￨e IResource￨7￨e .￨7￨e FORCE￨7￨e )￨7￨e |￨7￨e (￨7￨e IResource￨7￨e .￨7￨e KEEP_HISTORY￨7￨e )￨7￨e :￨7￨e IResource￨7￨e .￨7￨e KEEP_HISTORY￨7￨e )￨7￨e ,￨7￨e null￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j resource￨7￨e .￨7￨e create￨7￨e (￨7￨e stream￨7￨e ,￨7￨e fForce￨7￨e ,￨7￨e fMonitor￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f catch￨5￨f (￨5￨f CoreException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e JavaModelException￨6￨e (￨6￨e e￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f UnsupportedEncodingException￨6￨p e￨6￨p )￨5￨f {￨5￨f throw￨6￨e new￨6￨e JavaModelException￨6￨e (￨6￨e e￨6￨e ,￨6￨e IJavaModelStatusConstants￨6￨e .￨6￨e IO_EXCEPTION￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j JavaModelOperation￨4￨e .￨4￨e setAttribute￨4￨e (￨4￨e JavaModelOperation￨4￨e .￨4￨e HAS_MODIFIED_RESOURCE_ATTR￨4￨e ,￨4￨e JavaModelOperation￨4￨e .￨4￨e TRUE￨4￨e )￨4￨e ;￨4￨e workingCopy￨4￨e .￨4￨e updateTimeStamp￨4￨e (￨4￨e (￨4￨e (￨4￨e CompilationUnit￨4￨e )￨4￨e (￨4￨e primary￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e workingCopy￨4￨e .￨4￨e makeConsistent￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e worked￨4￨e (￨4￨e 1￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j deltaBuilder￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j deltaBuilder￨5￨e .￨5￨e buildDeltas￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c deltaBuilder￨6￨c .￨6￨c delta￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j addDelta￨6￨e (￨6￨e deltaBuilder￨6￨e .￨6￨e delta￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j worked￨4￨e (￨4￨e 1￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f done￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f protected￨2￨f ICompilationUnit￨2￨f getCompilationUnit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IJavaModelStatus￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Shell￨1￨d extends￨1￨d Decorations￨1￨d {￨1￨d int￨2￨e shellHandle￨2￨e ;￨2￨e int￨2￨e tooltipsHandle￨2￨e ;￨2￨e boolean￨2￨e mapped￨2￨e ;￨2￨e boolean￨2￨e moved￨2￨e ;￨2￨e boolean￨2￨e resized￨2￨e ;￨2￨e boolean￨2￨e opened￨2￨e ;￨2￨e int￨2￨e oldX￨2￨e ;￨2￨e int￨2￨e oldY￨2￨e ;￨2￨e int￨2￨e oldWidth￨2￨e ;￨2￨e int￨2￨e oldHeight￨2￨e ;￨2￨e int￨2￨e minWidth￨2￨e ;￨2￨e int￨2￨e minHeight￨2￨e ;￨2￨e Control￨2￨e lastActive￨2￨e ;￨2￨e Region￨2￨e region￨2￨e ;￨2￨e public￨2￨f Shell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Display￨3￨p display￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f Shell￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p Shell￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p ,￨3￨p int￨3￨p handle￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f (￨2￨f Shell￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Shell￨2￨f gtk_new￨2￨f (￨2￨f Display￨3￨p display￨3￨p ,￨3￨p int￨3￨p handle￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f checkStyle￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addShellListener￨2￨f (￨2￨f ShellListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f adjustTrim￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f bringToTop￨2￨f (￨2￨f boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c OS￨4￨c .￨4￨c GTK_WIDGET_VISIBLE￨4￨c (￨4￨c shellHandle￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j Display￨3￨e display￨3￨e =￨3￨e this￨3￨e .￨3￨e display￨3￨e ;￨3￨e Shell￨3￨e activeShell￨3￨e =￨3￨e display￨3￨e .￨3￨e activeShell￨3￨e ;￨3￨e if￨3￨j (￨3￨j activeShell￨4￨c ==￨4￨c (￨4￨c this￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c force￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j activeShell￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j return￨5￨e ;￨5￨e }￨4￨j int￨4￨e focusHandle￨4￨e =￨4￨e OS￨4￨e .￨4￨e gtk_window_get_focus￨4￨e (￨4￨e activeShell￨4￨e .￨4￨e shellHandle￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j focusHandle￨5￨c !=￨5￨c 0￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j !￨6￨c (￨6￨c OS￨6￨c .￨6￨c GTK_WIDGET_HAS_FOCUS￨6￨c (￨6￨c focusHandle￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j if￨3￨j (￨3￨j activeShell￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j display￨4￨e .￨4￨e activeShell￨4￨e =￨4￨e null￨4￨e ;￨4￨e }￨3￨j int￨3￨e window￨3￨e =￨3￨e OS￨3￨e .￨3￨e GTK_WIDGET_WINDOW￨3￨e (￨3￨e shellHandle￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c (￨4￨c style￨4￨c )￨4￨c &￨4￨c (￨4￨c SWT￨4￨c .￨4￨c ON_TOP￨4￨c )￨4￨c )￨4￨c !=￨4￨c 0￨4￨c )￨4￨c &&￨4￨c (￨4￨c OS￨4￨c .￨4￨c GDK_WINDOWING_X11￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j int￨4￨e xDisplay￨4￨e =￨4￨e OS￨4￨e .￨4￨e gdk_x11_drawable_get_xdisplay￨4￨e (￨4￨e window￨4￨e )￨4￨e ;￨4￨e int￨4￨e xWindow￨4￨e =￨4￨e OS￨4￨e .￨4￨e gdk_x11_drawable_get_xid￨4￨e (￨4￨e window￨4￨e )￨4￨e ;￨4￨e OS￨4￨e .￨4￨e gdk_error_trap_push￨4￨e (￨4￨e )￨4￨e ;￨4￨e OS￨4￨e .￨4￨e XSetInputFocus￨4￨e (￨4￨e xDisplay￨4￨e ,￨4￨e xWindow￨4￨e ,￨4￨e RevertToParent￨4￨e ,￨4￨e CurrentTime￨4￨e )￨4￨e ;￨4￨e OS￨4￨e .￨4￨e gdk_error_trap_pop￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j <START_BUG>￨4￨b OS￨4￨b .￨4￨b gdk_window_focus￨4￨b (￨4￨b window￨4￨b ,￨4￨b OS￨4￨b .￨4￨b gtk_get_current_event_time￨4￨b (￨4￨b )￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j display￨3￨e .￨3￨e activeShell￨3￨e =￨3￨e this￨3￨e ;￨3￨e }￨2￨f void￨2￨f checkBorder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f checkOpen￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f closeWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createHandle￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f hasBorder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f hookEvents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isEnabled￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isLayoutDeferred￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChild￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f topHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f filterProc￨2￨f (￨2￨f int￨3￨p xEvent￨3￨p ,￨3￨p int￨3￨p gdkEvent￨3￨p ,￨3￨p int￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f fixShell￨2￨f (￨2￨f Shell￨3￨p newShell￨3￨p ,￨3￨p Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f forceResize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getLocation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getMinimumSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Point￨2￨f getSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f getVisible￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Region￨2￨f getRegion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getImeInputMode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Shell￨2￨f _getShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Shell￨2￨f [￨2￨f ]￨2￨f getShells￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_configure_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_delete_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_enter_notify_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_focus￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p directionType￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_move_focus￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p directionType￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_focus_in_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_focus_out_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_map_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_size_allocate￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p allocation￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_realize￨2￨f (￨2￨f int￨3￨p widget￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_unmap_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_window_state_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f open￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f removeShellListener￨2￨f (￨2￨f ShellListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setActive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setActiveControl￨2￨f (￨2￨f Control￨3￨p control￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f resizeBounds￨2￨f (￨2￨f int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p notify￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f setBounds￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p move￨3￨p ,￨3￨p boolean￨3￨p resize￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setCursor￨2￨f (￨2￨f int￨3￨p cursor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setEnabled￨2￨f (￨2￨f boolean￨3￨p enabled￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setImeInputMode￨2￨f (￨2￨f int￨3￨p mode￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setInitialBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMaximized￨2￨f (￨2￨f boolean￨3￨p maximized￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMenuBar￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimized￨2￨f (￨2￨f boolean￨3￨p minimized￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimumSize￨2￨f (￨2￨f int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setMinimumSize￨2￨f (￨2￨f Point￨3￨p size￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRegion￨2￨f (￨2￨f Region￨3￨p region￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setText￨2￨f (￨2￨f String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVisible￨2￨f (￨2￨f boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f setZOrder￨2￨f (￨2￨f Control￨3￨p sibling￨3￨p ,￨3￨p boolean￨3￨p above￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f shellMapProc￨2￨f (￨2￨f int￨3￨p handle￨3￨p ,￨3￨p int￨3￨p arg0￨3￨p ,￨3￨p int￨3￨p user_data￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f showWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f traverseEscape￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f trimHeight￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f trimWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f forceActive￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getBounds￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseShells￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setToolTipText￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p String￨3￨p string￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HostControllerBootstrap￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e Logger￨2￨e .￨2￨e getLogger￨2￨e (￨2￨e "org.jboss.as.host.controller"￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e SERVICE_NAME_BASE￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "host"￨2￨e ,￨2￨e "controller"￨2￨e )￨2￨e ;￨2￨e static￨2￨e final￨2￨e int￨2￨e DEFAULT_POOL_SIZE￨2￨e =￨2￨e 20￨2￨e ;￨2￨e private￨2￨e final￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e =￨2￨e Factory￨2￨e .￨2￨e create￨2￨e (￨2￨e "host-controller"￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e HostControllerEnvironment￨2￨e environment￨2￨e ;￨2￨e private￨2￨e final￨2￨e byte￨2￨e [￨2￨e ]￨2￨e authCode￨2￨e ;￨2￨e public￨2￨f HostControllerBootstrap￨2￨f (￨2￨f final￨3￨p HostControllerEnvironment￨3￨p environment￨3￨p ,￨3￨p final￨3￨p byte￨3￨p [￨3￨p ]￨3￨p authCode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e File￨3￨e configDir￨3￨e =￨3￨e environment￨3￨e .￨3￨e getDomainConfigurationDir￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ConfigurationFile￨3￨e configurationFile￨3￨e =￨3￨e environment￨3￨e .￨3￨e getHostConfigurationFile￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ExtensibleConfigurationPersister￨3￨e configurationPersister￨3￨e =￨3￨e HostControllerBootstrap￨3￨e .￨3￨e createHostConfigurationPersister￨3￨e (￨3￨e configDir￨3￨e ,￨3￨e configurationFile￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ModelNode￨3￨e >￨3￨e operations￨3￨e =￨3￨e configurationPersister￨3￨e .￨3￨e load￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e serviceContainer￨3￨e ;￨3￨e serviceTarget￨3￨f .￨3￨f addListener￨3￨f (￨3￨f new￨3￨f org￨3￨f .￨3￨f jboss￨3￨f .￨3￨f msc￨3￨f .￨3￨f service￨3￨f .￨3￨f AbstractServiceListener￨3￨f <￨3￨f Object￨3￨f >￨3￨f (￨3￨f )￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f transition￨4￨f (￨4￨f final￨5￨p ServiceController￨5￨p <￨5￨p ?￨5￨p extends￨5￨p Object￨5￨p >￨5￨p controller￨5￨p ,￨5￨p final￨5￨p ServiceController￨5￨p .￨5￨p Transition￨5￨p transition￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j transition￨6￨c ==￨6￨c (￨6￨c Transition￨6￨c .￨6￨c STARTING_to_START_FAILED￨6￨c )￨6￨c )￨5￨j {￨5￨j HostControllerBootstrap￨6￨e .￨6￨e log￨6￨e .￨6￨e errorf￨6￨e (￨6￨e controller￨6￨e .￨6￨e getStartException￨6￨e (￨6￨e )￨6￨e ,￨6￨e "Service<seq2seq4repair_space>[%s]<seq2seq4repair_space>failed."￨6￨e ,￨6￨e controller￨6￨e .￨6￨e getName￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f }￨3￨f )￨3￨e ;￨3￨e registerBaseServices￨3￨e (￨3￨e serviceTarget￨3￨e )￨3￨e ;￨3￨e HostControllerBootstrap￨3￨e .￨3￨e DomainModelProxyImpl￨3￨e domainModelProxy￨3￨e =￨3￨e new￨3￨e HostControllerBootstrap￨3￨e .￨3￨e DomainModelProxyImpl￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNodeRegistration￨3￨e hostRegistry￨3￨e =￨3￨e HostModelUtil￨3￨e .￨3￨e createHostRegistry￨3￨e (￨3￨e configurationPersister￨3￨e ,￨3￨e environment￨3￨e ,￨3￨e domainModelProxy￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNodeRegistration￨3￨e rootRegistration￨3￨e =￨3￨e HostModelUtil￨3￨e .￨3￨e createBootstrapHostRegistry￨3￨e (￨3￨e hostRegistry￨3￨e ,￨3￨e domainModelProxy￨3￨e )￨3￨e ;￨3￨e DomainModelImpl￨3￨e domainModel￨3￨e =￨3￨e new￨3￨e DomainModelImpl￨3￨e (￨3￨e rootRegistration￨3￨e ,￨3￨e serviceContainer￨3￨e ,￨3￨e configurationPersister￨3￨e )￨3￨e ;￨3￨e domainModelProxy￨3￨e .￨3￨e setDomainModel￨3￨e (￨3￨e domainModel￨3￨e )￨3￨e ;￨3￨e final￨3￨e AtomicInteger￨3￨e count￨3￨e =￨3￨e new￨3￨e AtomicInteger￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e final￨3￨f ResultHandler￨3￨f resultHandler￨3￨f =￨3￨f new￨3￨f ResultHandler￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f handleResultFragment￨4￨f (￨4￨f final￨5￨p String￨5￨p [￨5￨p ]￨5￨p location￨5￨p ,￨5￨p final￨5￨p ModelNode￨5￨p result￨5￨p )￨4￨f {￨4￨f }￨4￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f handleResultComplete￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c count￨6￨c .￨6￨c decrementAndGet￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j }￨5￨j }￨4￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f handleFailed￨4￨f (￨4￨f final￨5￨p ModelNode￨5￨p failureDescription￨5￨p )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c count￨6￨c .￨6￨c decrementAndGet￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j }￨5￨j }￨4￨f @￨4￨f Override￨4￨f public￨4￨f void￨4￨f handleCancellation￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j (￨6￨c count￨6￨c .￨6￨c decrementAndGet￨6￨c (￨6￨c )￨6￨c )￨6￨c ==￨6￨c 0￨6￨c )￨5￨j {￨5￨j }￨5￨j }￨4￨f }￨3￨f ;￨3￨e for￨3￨l (￨3￨l final￨4￨c ModelNode￨4￨c operation￨4￨c :￨4￨c operations￨4￨c )￨3￨l {￨3￨l count￨4￨e .￨4￨e incrementAndGet￨4￨e (￨4￨e )￨4￨e ;￨4￨e operation￨4￨e .￨4￨e get￨4￨e (￨4￨e OPERATION_HEADERS￨4￨e ,￨4￨e ROLLBACK_ON_RUNTIME_FAILURE￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e domainModel￨4￨e .￨4￨e execute￨4￨e (￨4￨e OperationBuilder￨4￨e .￨4￨e Factory￨4￨e .￨4￨e create￨4￨e (￨4￨e operation￨4￨e )￨4￨e .￨4￨e build￨4￨e (￨4￨e )￨4￨e ,￨4￨e resultHandler￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j (￨4￨c count￨4￨c .￨4￨c decrementAndGet￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c 0￨4￨c )￨3￨j {￨3￨j }￨3￨j final￨3￨e String￨3￨e hostName￨3￨e =￨3￨e domainModel￨3￨e .￨3￨e getLocalHostName￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ModelNode￨3￨e hostModelNode￨3￨e =￨3￨e domainModel￨3￨e .￨3￨e getHostModel￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e mgmtNetwork￨3￨e =￨3￨e hostModelNode￨3￨e .￨3￨e get￨3￨e (￨3￨e MANAGEMENT_INTERFACE￨3￨e ,￨3￨e NATIVE_INTERFACE￨3￨e ,￨3￨e INTERFACE￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e mgmtPort￨3￨e =￨3￨e hostModelNode￨3￨e .￨3￨e get￨3￨e (￨3￨e MANAGEMENT_INTERFACE￨3￨e ,￨3￨e NATIVE_INTERFACE￨3￨e ,￨3￨e PORT￨3￨e )￨3￨e .￨3￨e asInt￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServerInventoryService￨3￨e inventory￨3￨e =￨3￨e new￨3￨e ServerInventoryService￨3￨e (￨3￨e environment￨3￨e ,￨3￨e mgmtPort￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e inventory￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e ProcessControllerConnectionService￨3￨e .￨3￨e SERVICE_NAME￨3￨e ,￨3￨e ProcessControllerConnectionService￨3￨e .￨3￨e class￨3￨e ,￨3￨e inventory￨3￨e .￨3￨e getClient￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e JBOSS_NETWORK_INTERFACE￨3￨e .￨3￨e append￨3￨e (￨3￨e mgmtNetwork￨3￨e )￨3￨e ,￨3￨e NetworkInterfaceBinding￨3￨e .￨3￨e class￨3￨e ,￨3￨e inventory￨3￨e .￨3￨e getInterface￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e HostControllerService￨3￨e hc￨3￨e =￨3￨e new￨3￨e HostControllerService￨3￨e (￨3￨e hostName￨3￨e ,￨3￨e hostModelNode￨3￨e ,￨3￨e configurationPersister￨3￨e ,￨3￨e hostRegistry￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e HostController￨3￨e .￨3￨e SERVICE_NAME￨3￨e ,￨3￨e hc￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e ServerInventory￨3￨e .￨3￨e class￨3￨e ,￨3￨e hc￨3￨e .￨3￨e getServerInventory￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e ServerToHostOperationHandler￨3￨e .￨3￨e SERVICE_NAME￨3￨e )￨3￨e .￨3￨e setInitialMode￨3￨e (￨3￨e ACTIVE￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ServerToHostOperationHandler￨3￨e serverToHost￨3￨e =￨3￨e new￨3￨e ServerToHostOperationHandler￨3￨e (￨3￨e )￨3￨e ;￨3￨e serviceTarget￨3￨e .￨3￨e addService￨3￨e (￨3￨e ServerToHostOperationHandler￨3￨e .￨3￨e SERVICE_NAME￨3￨e ,￨3￨e serverToHost￨3￨e )￨3￨e .￨3￨e addDependency￨3￨e (￨3￨e SERVICE_NAME￨3￨e ,￨3￨e ManagedServerLifecycleCallback￨3￨e .￨3￨e class￨3￨e ,￨3￨e serverToHost￨3￨e .￨3￨e getCallbackInjector￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e install￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b RemotingServices￨3￨b .￨3￨b installChannelOpenListenerService￨3￨b (￨3￨b serviceTarget￨3￨b ,￨3￨b "server"￨3￨b ,￨3￨b ServerToHostOperationHandler￨3￨b .￨3￨b SERVICE_NAME￨3￨b ,￨3￨b null￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f void￨2￨f registerBaseServices￨2￨f (￨2￨f final￨3￨p ServiceTarget￨3￨p serviceTarget￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f ExtensibleConfigurationPersister￨2￨f createHostConfigurationPersister￨2￨f (￨2￨f final￨3￨p File￨3￨p configDir￨3￨p ,￨3￨p final￨3￨p ConfigurationFile￨3￨p configurationFile￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d final￨2￨d class￨2￨d HostControllerExecutorService￨2￨d implements￨2￨d Service￨2￨d <￨2￨d Executor￨2￨d >￨2￨d {￨2￨d final￨3￨e InjectedValue￨3￨e <￨3￨e ThreadFactory￨3￨e >￨3￨e threadFactoryValue￨3￨e =￨3￨e new￨3￨e InjectedValue￨3￨e <￨3￨e ThreadFactory￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e private￨3￨e ScheduledExecutorService￨3￨e executorService￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f start￨3￨f (￨3￨f final￨3￨f StartContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f StartException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f void￨3￨f stop￨3￨f (￨3￨f final￨4￨p StopContext￨4￨p context￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f synchronized￨3￨f ScheduledExecutorService￨3￨f getValue￨3￨f (￨3￨f )￨3￨f throws￨3￨f IllegalStateException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d final￨2￨d class￨2￨d DomainModelProxyImpl￨2￨d implements￨2￨d DomainModelProxy￨2￨d {￨2￨d private￨3￨e DomainModelImpl￨3￨e domainModel￨3￨e ;￨3￨e public￨3￨f void￨3￨f setDomainModel￨3￨f (￨3￨f final￨4￨p DomainModelImpl￨4￨p domainModel￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f DomainModelImpl￨3￨f getDomainModel￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d FilteredPreferenceDialog￨1￨d extends￨1￨d PreferenceDialog￨1￨d {￨1￨d protected￨2￨e TreeViewer￨2￨e filteredViewer￨2￨e ;￨2￨e protected￨2￨e TreeViewer￨2￨e unfilteredViewer￨2￨e ;￨2￨e private￨2￨e StackLayout￨2￨e stackLayout￨2￨e ;￨2￨e private￨2￨e Composite￨2￨e stackComposite￨2￨e ;￨2￨e private￨2￨e Button￨2￨e showAllCheck￨2￨e ;￨2￨e public￨2￨f FilteredPreferenceDialog￨2￨f (￨2￨f Shell￨3￨p parentShell￨3￨p ,￨3￨p PreferenceManager￨3￨p manager￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Control￨2￨f createTreeAreaContents￨2￨f (￨2￨f Composite￨3￨p composite￨3￨p )￨2￨f {￨2￨f Composite￨3￨e treeArea￨3￨e =￨3￨e new￨3￨e Composite￨3￨e (￨3￨e composite￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e None￨3￨e )￨3￨e ;￨3￨e GridLayout￨3￨e layout￨3￨e =￨3￨e new￨3￨e GridLayout￨3￨e (￨3￨e )￨3￨e ;￨3￨e layout￨3￨e .￨3￨e marginHeight￨3￨e =￨3￨e 0￨3￨e ;￨3￨e layout￨3￨e .￨3￨e marginWidth￨3￨e =￨3￨e 0￨3￨e ;￨3￨e treeArea￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e layout￨3￨e )￨3￨e ;￨3￨e stackComposite￨3￨e =￨3￨e new￨3￨e Composite￨3￨e (￨3￨e treeArea￨3￨e ,￨3￨e SWT￨3￨e .￨3￨e NONE￨3￨e )￨3￨e ;￨3￨e stackLayout￨3￨e =￨3￨e new￨3￨e StackLayout￨3￨e (￨3￨e )￨3￨e ;￨3￨e stackComposite￨3￨e .￨3￨e setLayout￨3￨e (￨3￨e stackLayout￨3￨e )￨3￨e ;￨3￨e stackComposite￨3￨e .￨3￨e setLayoutData￨3￨e (￨3￨e new￨3￨e GridData￨3￨e (￨3￨e GridData￨3￨e .￨3￨e FILL_BOTH￨3￨e )￨3￨e )￨3￨e ;￨3￨e stackComposite￨3￨e .￨3￨e setFont￨3￨e (￨3￨e composite￨3￨e .￨3￨e getFont￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e layoutTreeAreaControl￨3￨e (￨3￨e treeArea￨3￨e )￨3￨e ;￨3￨e filteredViewer￨3￨e =￨3￨e createTreeViewer￨3￨e (￨3￨e stackComposite￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j WorkbenchActivityHelper￨4￨c .￨4￨c showAll￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j unfilteredViewer￨4￨e =￨4￨e createTreeViewer￨4￨e (￨4￨e stackComposite￨4￨e ,￨4￨e false￨4￨e )￨4￨e ;￨4￨e showAllCheck￨4￨e =￨4￨e new￨4￨e Button￨4￨e (￨4￨e treeArea￨4￨e ,￨4￨e SWT￨4￨e .￨4￨e CHECK￨4￨e )￨4￨e ;￨4￨e showAllCheck￨4￨e .￨4￨e setLayoutData￨4￨e (￨4￨e new￨4￨e GridData￨4￨e (￨4￨e GridData￨4￨e .￨4￨e FILL_HORIZONTAL￨4￨e )￨4￨e )￨4￨e ;￨4￨e showAllCheck￨4￨e .￨4￨e setText￨4￨e (￨4￨e ActivityMessages￨4￨e .￨4￨e getString￨4￨e (￨4￨e "ActivityFiltering.showAll"￨4￨e )￨4￨e )￨4￨e ;￨4￨e showAllCheck￨4￨f .￨4￨f addSelectionListener￨4￨f (￨4￨f new￨4￨f SelectionAdapter￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f void￨5￨f widgetSelected￨5￨f (￨5￨f SelectionEvent￨6￨p e￨6￨p )￨5￨f {￨5￨f if￨6￨j (￨6￨j !￨7￨c (￨7￨c showAllCheck￨7￨c .￨7￨c getSelection￨7￨c (￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j filteredViewer￨7￨e .￨7￨e setExpandedElements￨7￨e (￨7￨e unfilteredViewer￨7￨e .￨7￨e getExpandedElements￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e filteredViewer￨7￨e .￨7￨e setSelection￨7￨e (￨7￨e unfilteredViewer￨7￨e .￨7￨e getSelection￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e stackLayout￨7￨e .￨7￨e topControl￨7￨e =￨7￨e filteredViewer￨7￨e .￨7￨e getControl￨7￨e (￨7￨e )￨7￨e ;￨7￨e stackComposite￨7￨e .￨7￨e layout￨7￨e (￨7￨e )￨7￨e ;￨7￨e showPage￨7￨e (￨7￨e getSingleSelection￨7￨e (￨7￨e filteredViewer￨7￨e .￨7￨e getSelection￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j unfilteredViewer￨7￨e .￨7￨e setExpandedElements￨7￨e (￨7￨e filteredViewer￨7￨e .￨7￨e getExpandedElements￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e unfilteredViewer￨7￨e .￨7￨e setSelection￨7￨e (￨7￨e filteredViewer￨7￨e .￨7￨e getSelection￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e stackLayout￨7￨e .￨7￨e topControl￨7￨e =￨7￨e unfilteredViewer￨7￨e .￨7￨e getControl￨7￨e (￨7￨e )￨7￨e ;￨7￨e stackComposite￨7￨e .￨7￨e layout￨7￨e (￨7￨e )￨7￨e ;￨7￨e showPage￨7￨e (￨7￨e getSingleSelection￨7￨e (￨7￨e unfilteredViewer￨7￨e .￨7￨e getSelection￨7￨e (￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f }￨4￨f )￨4￨e ;￨4￨e }￨3￨j stackLayout￨3￨e .￨3￨e topControl￨3￨e =￨3￨e filteredViewer￨3￨e .￨3￨e getControl￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b stackComposite￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f TreeViewer￨2￨f createTreeViewer￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p boolean￨3￨p filtering￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IPreferenceNode￨2￨f findNodeMatching￨2￨f (￨2￨f String￨3￨p nodeId￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f TreeViewer￨2￨f getTreeViewer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f updateTreeFont￨2￨f (￨2￨f Font￨3￨p dialogFont￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d HashCodeBuilder￨1￨d implements￨1￨d Builder￨1￨d <￨1￨d Integer￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e ThreadLocal￨2￨e <￨2￨e Set￨2￨e <￨2￨e IDKey￨2￨e >￨2￨e >￨2￨e REGISTRY￨2￨e =￨2￨e new￨2￨e ThreadLocal￨2￨e <￨2￨e Set￨2￨e <￨2￨e IDKey￨2￨e >￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e static￨2￨f Set￨2￨f <￨2￨f IDKey￨2￨f >￨2￨f getRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f boolean￨2￨f isRegistered￨2￨f (￨2￨f Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f reflectionAppend￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clazz￨3￨p ,￨3￨p HashCodeBuilder￨3￨p builder￨3￨p ,￨3￨p boolean￨3￨p useTransients￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p excludeFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f int￨3￨p initialNonZeroOddNumber￨3￨p ,￨3￨p int￨3￨p multiplierNonZeroOddNumber￨3￨p ,￨3￨p Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f int￨3￨p initialNonZeroOddNumber￨3￨p ,￨3￨p int￨3￨p multiplierNonZeroOddNumber￨3￨p ,￨3￨p Object￨3￨p object￨3￨p ,￨3￨p boolean￨3￨p testTransients￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f <￨2￨f T￨2￨f >￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f int￨3￨p initialNonZeroOddNumber￨3￨p ,￨3￨p int￨3￨p multiplierNonZeroOddNumber￨3￨p ,￨3￨p T￨3￨p object￨3￨p ,￨3￨p boolean￨3￨p testTransients￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p super￨3￨p T￨3￨p >￨3￨p reflectUpToClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f <￨2￨f T￨2￨f >￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f int￨3￨p initialNonZeroOddNumber￨3￨p ,￨3￨p int￨3￨p multiplierNonZeroOddNumber￨3￨p ,￨3￨p T￨3￨p object￨3￨p ,￨3￨p boolean￨3￨p testTransients￨3￨p ,￨3￨p Class￨3￨p <￨3￨p ?￨3￨p super￨3￨p T￨3￨p >￨3￨p reflectUpToClass￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p excludeFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p boolean￨3￨p testTransients￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p String￨3￨p >￨3￨p excludeFields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f int￨2￨f reflectionHashCode￨2￨f (￨2￨f Object￨3￨p object￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p excludeFields￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f register￨2￨f (￨2￨f Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f void￨2￨f unregister￨2￨f (￨2￨f Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e int￨2￨e iConstant￨2￨e ;￨2￨e private￨2￨e int￨2￨e iTotal￨2￨e =￨2￨e 0￨2￨e ;￨2￨e public￨2￨f HashCodeBuilder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f (￨2￨f int￨3￨p initialNonZeroOddNumber￨3￨p ,￨3￨p int￨3￨p multiplierNonZeroOddNumber￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f boolean￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f boolean￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f byte￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f char￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f char￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f double￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f double￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f float￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f float￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f int￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f int￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f long￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f long￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f Object￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f short￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f append￨2￨f (￨2￨f short￨3￨p [￨3￨p ]￨3￨p array￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HashCodeBuilder￨2￨f appendSuper￨2￨f (￨2￨f int￨3￨p superHashCode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f toHashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Integer￨2￨f build￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b toHashCode￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ManagedBeanDependencyProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d DotName￨2￨d MANAGED_BEAN_ANNOTATION_NAME￨2￨d =￨2￨d DotName￨2￨d .￨2￨d createSimple￨2￨d (￨2￨d ManagedBean￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d ModuleIdentifier￨2￨d JAVASSIST_ID￨2￨d =￨2￨d ModuleIdentifier￨2￨d .￨2￨d create￨2￨d (￨2￨d "org.javassist"￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d ModuleIdentifier￨2￨d JAVAEE_API_ID￨2￨d =￨2￨d ModuleIdentifier￨2￨d .￨2￨d create￨2￨d (￨2￨d "javaee.api"￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d ModuleIdentifier￨2￨d JBOSS_LOGGING_ID￨2￨d =￨2￨d ModuleIdentifier￨2￨d .￨2￨d create￨2￨d (￨2￨d "org.jboss.logging"￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d deploy￨2￨d (￨2￨d DeploymentPhaseContext￨2￨d phaseContext￨2￨d )￨2￨d throws￨2￨d DeploymentUnitProcessingException￨2￨d {￨2￨d final￨3￨e Index￨3￨e index￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e ANNOTATION_INDEX￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j index￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b index￨3￨b .￨3￨b getAnnotationTargets￨3￨b (￨3￨b ManagedBeanDependencyProcessor￨3￨b .￨3￨b MANAGED_BEAN_ANNOTATION_NAME￨3￨b )￨3￨b )￨3￨b ==￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b return￨3￨e ;￨3￨e }￨3￨e phaseContext￨3￨e .￨3￨e addToAttachmentList￨3￨e (￨3￨e MODULE_DEPENDENCIES￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e ManagedBeanDependencyProcessor￨3￨e .￨3￨e JAVAEE_API_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addToAttachmentList￨3￨e (￨3￨e MODULE_DEPENDENCIES￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e ManagedBeanDependencyProcessor￨3￨e .￨3￨e JBOSS_LOGGING_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e phaseContext￨3￨e .￨3￨e addToAttachmentList￨3￨e (￨3￨e MODULE_DEPENDENCIES￨3￨e ,￨3￨e new￨3￨e org￨3￨e .￨3￨e jboss￨3￨e .￨3￨e as￨3￨e .￨3￨e deployment￨3￨e .￨3￨e module￨3￨e .￨3￨e ModuleDependency￨3￨e (￨3￨e ManagedBeanDependencyProcessor￨3￨e .￨3￨e JAVASSIST_ID￨3￨e ,￨3￨e false￨3￨e ,￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨d public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f final￨3￨p DeploymentUnitContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d @￨1￨d RunAsClient￨1￨d public￨1￨d class￨1￨d EJBClientClusterConfigurationTestCase￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d logger￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d EJBClientClusterConfigurationTestCase￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d MODULE_NAME￨2￨d =￨2￨d "server-to-server-clustered-ejb-invocation"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d DEFAULT_JBOSSAS￨2￨d =￨2￨d "default-jbossas"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨2￨d =￨2￨d "jbossas-with-remote-outbound-connection"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d DEFAULT_AS_DEPLOYMENT￨2￨d =￨2￨d "default-jbossas-deployment"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨2￨d =￨2￨d "other-deployment"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d DEFAULT_JBOSSAS_NODE_NAME￨2￨d =￨2￨d "default-jbossas"￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d JBOSSAS_WITH_OUTBOUND_CONNECTION_NODE_NAME￨2￨d =￨2￨d "jbossas-with-remote-outbound-connection"￨2￨d ;￨2￨d @￨2￨d ArquillianResource￨2￨d private￨2￨d ContainerController￨2￨d container￨2￨d ;￨2￨d @￨2￨d ArquillianResource￨2￨d private￨2￨d Deployer￨2￨d deployer￨2￨d ;￨2￨d private￨2￨d static￨2￨d Context￨2￨d context￨2￨d ;￨2￨d private￨2￨d static￨2￨d ContextSelector￨2￨d <￨2￨d EJBClientContext￨2￨d >￨2￨d previousClientContextSelector￨2￨d ;￨2￨d @￨2￨d BeforeClass￨2￨d public￨2￨d static￨2￨d void￨2￨d beforeClass￨2￨d (￨2￨d )￨2￨d throws￨2￨d Exception￨2￨d {￨2￨d }￨2￨d @￨2￨f AfterClass￨2￨f public￨2￨f static￨2￨f void￨2￨f afterClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deployment￨2￨f (￨2￨f name￨2￨f =￨2￨f EJBClientClusterConfigurationTestCase￨2￨f .￨2￨f DEFAULT_AS_DEPLOYMENT￨2￨f ,￨2￨f managed￨2￨f =￨2￨f false￨2￨f ,￨2￨f testable￨2￨f =￨2￨f false￨2￨f )￨2￨f @￨2￨f TargetsContainer￨2￨f (￨2￨f EJBClientClusterConfigurationTestCase￨2￨f .￨2￨f DEFAULT_JBOSSAS￨2￨f )￨2￨f public￨2￨f static￨2￨f Archive￨2￨f createContainer1Deployment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deployment￨2￨f (￨2￨f name￨2￨f =￨2￨f EJBClientClusterConfigurationTestCase￨2￨f .￨2￨f DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨2￨f ,￨2￨f managed￨2￨f =￨2￨f false￨2￨f ,￨2￨f testable￨2￨f =￨2￨f false￨2￨f )￨2￨f @￨2￨f TargetsContainer￨2￨f (￨2￨f EJBClientClusterConfigurationTestCase￨2￨f .￨2￨f JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨2￨f )￨2￨f public￨2￨f static￨2￨f Archive￨2￨f createContainer2Deployment￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e JavaArchive￨3￨e ejbJar￨3￨e =￨3￨e ShrinkWrap￨3￨e .￨3￨e create￨3￨e (￨3￨e JavaArchive￨3￨e .￨3￨e class￨3￨e ,￨3￨e (￨3￨e (￨3￨e EJBClientClusterConfigurationTestCase￨3￨e .￨3￨e MODULE_NAME￨3￨e )￨3￨e +￨3￨e ".jar"￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b ejbJar￨3￨b .￨3￨b addClasses￨3￨b (￨3￨b ClusteredStatefulNodeNameEcho￨3￨b .￨3￨b class￨3￨b ,￨3￨b NonClusteredStatefulNodeNameEcho￨3￨b .￨3￨b class￨3￨b ,￨3￨b NodeNameEcho￨3￨b .￨3￨b class￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b ejbJar￨3￨e .￨3￨e addAsManifestResource￨3￨e (￨3￨e NonClusteredStatefulNodeNameEcho￨3￨e .￨3￨e class￨3￨e .￨3￨e getPackage￨3￨e (￨3￨e )￨3￨e ,￨3￨e "jboss-ejb-client.xml"￨3￨e ,￨3￨e "jboss-ejb-client.xml"￨3￨e )￨3￨e ;￨3￨e return￨3￨e ejbJar￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testServerToServerClusterFormation￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ContextSelector￨2￨f <￨2￨f EJBClientContext￨2￨f >￨2￨f setupEJBClientContextSelector￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d SingleMemberAnnotation￨1￨d extends￨1￨d Annotation￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d TYPE_NAME_PROPERTY￨2￨d =￨2￨d Annotation￨2￨d .￨2￨d internalTypeNamePropertyFactory￨2￨d (￨2￨d SingleMemberAnnotation￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d VALUE_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d SingleMemberAnnotation￨2￨d .￨2￨d class￨2￨d ,￨2￨d "value"￨2￨d ,￨2￨d Expression￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨e Expression￨2￨e value￨2￨e =￨2￨e null￨2￨e ;￨2￨e SingleMemberAnnotation￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ChildPropertyDescriptor￨2￨f internalTypeNameProperty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f SingleMemberAnnotation￨3￨e result￨3￨e =￨3￨e new￨3￨e SingleMemberAnnotation￨3￨e (￨3￨e target￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b result￨3￨b .￨3￨b setSourceRange￨3￨b (￨3￨b this￨3￨b .￨3￨b getStartPosition￨3￨b (￨3￨b )￨3￨b ,￨3￨b this￨3￨b .￨3￨b getLength￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b result￨3￨e .￨3￨e setTypeName￨3￨e (￨3￨e (￨3￨e (￨3￨e Name￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getTypeName￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e result￨3￨e .￨3￨e setValue￨3￨e (￨3￨e (￨3￨e (￨3￨e Expression￨3￨e )￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e copySubtree￨3￨e (￨3￨e target￨3￨e ,￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Expression￨2￨f getValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setValue￨2￨f (￨2￨f Expression￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d BindingTypePattern￨1￨d extends￨1￨d ExactTypePattern￨1￨d implements￨1￨d BindingPattern￨1￨d {￨1￨d private￨2￨e int￨2￨e formalIndex￨2￨e ;￨2￨e public￨2￨f BindingTypePattern￨2￨f (￨2￨f TypeX￨3￨p type￨3￨p ,￨3￨p int￨3￨p index￨3￨p ,￨3￨p boolean￨3￨p isVarArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f BindingTypePattern￨2￨f (￨2￨f FormalBinding￨3￨p binding￨3￨p ,￨3￨p boolean￨3￨p isVarArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getFormalIndex￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f out￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f TypePattern￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypePattern￨2￨f remapAdviceFormals￨2￨f (￨2￨f IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b (￨3￨b (￨3￨b (￨3￨b "BindingTypePattern("￨3￨b +￨3￨b (￨3￨b type￨3￨b .￨3￨b toString￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b +￨3￨b ",<seq2seq4repair_space>"￨3￨b )￨3￨b +￨3￨b (￨3￨b formalIndex￨3￨b )￨3￨b )￨3￨b +￨3￨b ")"￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d DeleteResourceElementsOperation￨1￨d extends￨1￨d MultiOperation￨1￨d {￨1￨d protected￨2￨f DeleteResourceElementsOperation￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elementsToProcess￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f deletePackageFragment￨2￨f (￨2￨f IPackageFragment￨2￨f frag￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f IResource￨3￨e res￨3￨e =￨3￨e frag￨3￨e .￨3￨e getResource￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c res￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c res￨4￨c .￨4￨c getType￨4￨c (￨4￨c )￨4￨c )￨4￨c ==￨4￨c (￨4￨c IResource￨4￨c .￨4￨c FOLDER￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j IJavaElement￨4￨e [￨4￨e ]￨4￨e childrenOfInterest￨4￨e =￨4￨e frag￨4￨e .￨4￨e getChildren￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c childrenOfInterest￨5￨c .￨5￨c length￨5￨c )￨5￨c >￨5￨c 0￨5￨c )￨4￨j {￨4￨j IResource￨5￨e [￨5￨e ]￨5￨e resources￨5￨e =￨5￨e new￨5￨e IResource￨5￨e [￨5￨e childrenOfInterest￨5￨e .￨5￨e length￨5￨e ]￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c childrenOfInterest￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l <START_BUG>￨6￨b resources￨6￨b [￨6￨b i￨6￨b ]￨6￨b =￨6￨b childrenOfInterest￨6￨b [￨6￨b i￨6￨b ]￨6￨b .￨6￨b getCorrespondingResource￨6￨b (￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨l deleteResources￨5￨e (￨5￨e resources￨5￨e ,￨5￨e fForce￨5￨e )￨5￨e ;￨5￨e }￨4￨j Object￨4￨e [￨4￨e ]￨4￨e nonJavaResources￨4￨e =￨4￨e frag￨4￨e .￨4￨e getNonJavaResources￨4￨e (￨4￨e )￨4￨e ;￨4￨e int￨4￨e actualResourceCount￨4￨e =￨4￨e 0￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c nonJavaResources￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c nonJavaResources￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c instanceof￨6￨c IResource￨6￨c )￨5￨j {￨5￨j actualResourceCount￨6￨e ++￨6￨e ;￨6￨e }￨5￨j }￨4￨l IResource￨4￨e [￨4￨e ]￨4￨e actualNonJavaResources￨4￨e =￨4￨e new￨4￨e IResource￨4￨e [￨4￨e actualResourceCount￨4￨e ]￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c max￨5￨c =￨5￨c nonJavaResources￨5￨c .￨5￨c length￨5￨c ,￨5￨c index￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c max￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j (￨6￨c nonJavaResources￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c instanceof￨6￨c IResource￨6￨c )￨5￨j {￨5￨j actualNonJavaResources￨6￨e [￨6￨e (￨6￨e index￨6￨e ++￨6￨e )￨6￨e ]￨6￨e =￨6￨e (￨6￨e (￨6￨e IResource￨6￨e )￨6￨e (￨6￨e nonJavaResources￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l deleteResources￨4￨e (￨4￨e actualNonJavaResources￨4￨e ,￨4￨e fForce￨4￨e )￨4￨e ;￨4￨e IResource￨4￨e [￨4￨e ]￨4￨e remainingFiles￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f remainingFiles￨5￨e =￨5￨e (￨5￨e (￨5￨e IFolder￨5￨e )￨5￨e (￨5￨e res￨5￨e )￨5￨e )￨5￨e .￨5￨e members￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f CoreException￨5￨p ce￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e JavaModelException￨5￨e (￨5￨e ce￨5￨e )￨5￨e ;￨5￨e }￨4￨f boolean￨4￨e isEmpty￨4￨e =￨4￨e true￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ,￨5￨c length￨5￨c =￨5￨c remainingFiles￨5￨c .￨5￨c length￨5￨c ;￨5￨c i￨5￨c <￨5￨c length￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l IResource￨5￨e file￨5￨e =￨5￨e remainingFiles￨5￨e [￨5￨e i￨5￨e ]￨5￨e ;￨5￨e if￨5￨j (￨5￨j file￨6￨c instanceof￨6￨c IFile￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e deleteResource￨6￨e (￨6￨e file￨6￨e ,￨6￨e (￨6￨e (￨6￨e IResource￨6￨e .￨6￨e FORCE￨6￨e )￨6￨e |￨6￨e (￨6￨e IResource￨6￨e .￨6￨e KEEP_HISTORY￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j isEmpty￨6￨e =￨6￨e false￨6￨e ;￨6￨e }￨5￨j }￨4￨l if￨4￨j (￨4￨j isEmpty￨5￨c )￨4￨j {￨4￨j deleteEmptyPackageFragment￨5￨e (￨5￨e frag￨5￨e ,￨5￨e false￨5￨e ,￨5￨e frag￨5￨e .￨5￨e getParent￨5￨e (￨5￨e )￨5￨e .￨5￨e getResource￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j }￨2￨f protected￨2￨f String￨2￨f getMainTaskName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f processElement￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f verify￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f ,￨2￨f String￨2￨f p4￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f SplitFunction￨2￨f SplitParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f BeanShell￨2￨f BSHFParams￨2￨f (￨2￨f String￨2￨f p1￨2￨f ,￨2￨f String￨2￨f p2￨2￨f ,￨2￨f String￨2￨f p3￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Collection￨2￨f MakeParams￨2￨f (￨2￨f String￨3￨p p1￨3￨p ,￨3￨p String￨3￨p p2￨3￨p ,￨3￨p String￨3￨p p3￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b TestSuite￨3￨b allsuites￨3￨b =￨3￨b new￨3￨b TestSuite￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b TestSuite￨3￨e bsh￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "BeanShell"￨3￨e )￨3￨e ;￨3￨e bsh￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "BSH1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e bsh￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e suite￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "SingleThreaded"￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVParams"￨3￨e )￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVNoFile"￨3￨e )￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVSetup"￨3￨e )￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVRun"￨3￨e )￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSValias"￨3￨e )￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVBlankLine"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e suite￨3￨e )￨3￨e ;￨3￨e suite￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVSetup"￨3￨e )￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e par￨3￨e =￨3￨e new￨3￨e ActiveTestSuite￨3￨e (￨3￨e "Parallel"￨3￨e )￨3￨e ;￨3￨e par￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVThread1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e par￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "CSVThread2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e par￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e sff￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "StringFromFile"￨3￨e )￨3￨e ;￨3￨e sff￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SFFTest1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e sff￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SFFTest2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e sff￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SFFTest3"￨3￨e )￨3￨e )￨3￨e ;￨3￨e sff￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SFFTest4"￨3￨e )￨3￨e )￨3￨e ;￨3￨e sff￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SFFTest5"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e sff￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e split￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "SplitFunction"￨3￨e )￨3￨e ;￨3￨e split￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "SplitTest1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e split￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e xpath￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "XPath"￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathtestColumns"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathtestDefault"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathtestNull"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathtestrowNum"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathEmpty"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathFile1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathFile2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e xpath￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathNoFile"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e xpath￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e random￨3￨e =￨3￨e new￨3￨e TestSuite￨3￨e (￨3￨e "Random"￨3￨e )￨3￨e ;￨3￨e random￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "RandomTest1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e random￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathSetup1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e par2￨3￨e =￨3￨e new￨3￨e ActiveTestSuite￨3￨e (￨3￨e "ParallelXPath1"￨3￨e )￨3￨e ;￨3￨e par2￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathThread1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e par2￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathThread2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e par2￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathSetup2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e TestSuite￨3￨e par3￨3￨e =￨3￨e new￨3￨e ActiveTestSuite￨3￨e (￨3￨e "ParallelXPath2"￨3￨e )￨3￨e ;￨3￨e par3￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathThread1"￨3￨e )￨3￨e )￨3￨e ;￨3￨e par3￨3￨e .￨3￨e addTest￨3￨e (￨3￨e new￨3￨e PackageTest￨3￨e (￨3￨e "XPathThread2"￨3￨e )￨3￨e )￨3￨e ;￨3￨e allsuites￨3￨e .￨3￨e addTest￨3￨e (￨3￨e par3￨3￨e )￨3￨e ;￨3￨e return￨3￨e allsuites￨3￨e ;￨3￨e }￨2￨f private￨2￨e JMeterContext￨2￨e jmctx￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e JMeterVariables￨2￨e vars￨2￨e =￨2￨e null￨2￨e ;￨2￨e public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f BSH1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SplitTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest3￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest4￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f SFFTest5￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e CSVRead￨2￨e cr1￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr2￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr3￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr4￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr5￨2￨e ;￨2￨e private￨2￨e static￨2￨e CSVRead￨2￨e cr6￨2￨e ;￨2￨e private￨2￨d static￨2￨d class￨2￨d Baton￨2￨d {￨2￨d void￨3￨f pass￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f done￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨e static￨2￨e PackageTest￨2￨e .￨2￨e Baton￨2￨e baton￨2￨e =￨2￨e new￨2￨e PackageTest￨2￨e .￨2￨e Baton￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f void￨2￨f CSVThread1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVThread2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVRun￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVParams￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVSetup￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSValias￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVNoFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f CSVBlankLine￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestNull￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestrowNum￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestColumns￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathtestDefault￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathEmpty￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathNoFile￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathFile1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathFile2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨e static￨2￨e XPath￨2￨e sxp1￨2￨e ;￨2￨e private￨2￨e static￨2￨e XPath￨2￨e sxp2￨2￨e ;￨2￨e public￨2￨f void￨2￨f XPathSetup1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathSetup2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathThread1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f XPathThread2￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f XPath￨2￨f setupXPath￨2￨f (￨2￨f String￨2￨f file￨2￨f ,￨2￨f String￨2￨f expr￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f RandomTest1￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d RequestCycle￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e ThreadLocal￨2￨e current￨2￨e =￨2￨e new￨2￨e ThreadLocal￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e DETACH_REQUEST￨2￨e =￨2￨e 6￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e DONE￨2￨e =￨2￨e 7￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e HANDLE_EXCEPTION￨2￨e =￨2￨e 5￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d log￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d RequestCycle￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d NOT_STARTED￨2￨d =￨2￨d 0￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d PREPARE_REQUEST￨2￨d =￨2￨d 1￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d PROCESS_EVENTS￨2￨d =￨2￨d 3￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d RESOLVE_TARGET￨2￨d =￨2￨d 2￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d int￨2￨d RESPOND￨2￨d =￨2￨d 4￨2￨d ;￨2￨d public￨2￨d static￨2￨d RequestCycle￨2￨d get￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f static￨2￨f void￨2￨f set￨2￨f (￨2￨f RequestCycle￨3￨p cycle￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e automaticallyClearFeedbackMessages￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e int￨2￨e currentStep￨2￨e =￨2￨e RequestCycle￨2￨e .￨2￨e NOT_STARTED￨2￨e ;￨2￨e private￨2￨e final￨2￨e Response￨2￨e originalResponse￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e redirect￨2￨e ;￨2￨e private￨2￨e final￨2￨e transient￨2￨e ArrayListStack￨2￨e requestTargets￨2￨e =￨2￨e new￨2￨e ArrayListStack￨2￨e (￨2￨e 3￨2￨e )￨2￨e ;￨2￨e private￨2￨e PageParameters￨2￨e pageParameters￨2￨e ;￨2￨e private￨2￨e Session￨2￨e session￨2￨e ;￨2￨e private￨2￨e final￨2￨e long￨2￨e startTime￨2￨e =￨2￨e System￨2￨e .￨2￨e currentTimeMillis￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e final￨2￨e Application￨2￨e application￨2￨e ;￨2￨e protected￨2￨e final￨2￨e IRequestCycleProcessor￨2￨e processor￨2￨e ;￨2￨e protected￨2￨e Request￨2￨e request￨2￨e ;￨2￨e protected￨2￨e Response￨2￨e response￨2￨e ;￨2￨e protected￨2￨f RequestCycle￨2￨f (￨2￨f final￨3￨p Application￨3￨p application￨3￨p ,￨3￨p final￨3￨p Request￨3￨p request￨3￨p ,￨3￨p final￨3￨p Response￨3￨p response￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Application￨2￨f getApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f ClientInfo￨2￨f getClientInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Response￨2￨f getOriginalResponse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f PageParameters￨2￨f getPageParameters￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f IRequestCycleProcessor￨2￨f getProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f boolean￨2￨f getRedirect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Request￨2￨f getRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f IRequestTarget￨2￨f getRequestTarget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Response￨2￨f getResponse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Page￨2￨f getResponsePage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Class￨2￨f getResponsePageClass￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Session￨2￨f getSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f long￨2￨f getStartTime￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRedirect￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Page￨2￨f onRuntimeException￨2￨f (￨2￨f Page￨3￨p page￨3￨p ,￨3￨p RuntimeException￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f void￨2￨f redirectTo￨2￨f (￨2￨f final￨3￨p Page￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f request￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f request￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f request￨2￨f (￨2￨f IRequestTarget￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAutomaticallyClearFeedbackMessages￨2￨f (￨2￨f boolean￨3￨p automaticallyClearFeedbackMessages￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setRedirect￨2￨f (￨2￨f final￨3￨p boolean￨3￨p redirect￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setRequest￨2￨f (￨2￨f Request￨3￨p request￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setRequestTarget￨2￨f (￨2￨f IRequestTarget￨3￨p requestTarget￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Response￨2￨f setResponse￨2￨f (￨2￨f final￨3￨p Response￨3￨p response￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setResponsePage￨2￨f (￨2￨f final￨3￨p Class￨3￨p pageClass￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setResponsePage￨2￨f (￨2￨f final￨3￨p Class￨3￨p pageClass￨3￨p ,￨3￨p final￨3￨p PageParameters￨3￨p pageParameters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f setResponsePage￨2￨f (￨2￨f final￨3￨p Page￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p Class￨3￨p pageClass￨3￨p ,￨3￨p final￨3￨p PageParameters￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p IBehavior￨3￨p behaviour￨3￨p ,￨3￨p final￨3￨p RequestListenerInterface￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p Component￨3￨p component￨3￨p ,￨3￨p final￨3￨p RequestListenerInterface￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p IPageMap￨3￨p pageMap￨3￨p ,￨3￨p final￨3￨p Class￨3￨p pageClass￨3￨p ,￨3￨p final￨3￨p PageParameters￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p IRequestTarget￨3￨p requestTarget￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p Page￨3￨p page￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p ResourceReference￨3￨p resourceReference￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f CharSequence￨2￨f urlFor￨2￨f (￨2￨f final￨3￨p ResourceReference￨3￨p resourceReference￨3￨p ,￨3￨p ValueMap￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkReuse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f detach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f prepare￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f processEventsAndRespond￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f respond￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f IRequestCycleProcessor￨2￨f safeGetRequestProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f sessionExists￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f step￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f steps￨2￨f (￨2￨f )￨2￨f {￨2￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f IRequestCycleProcessor￨4￨e processor￨4￨e =￨4￨e safeGetRequestProcessor￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b final￨4￨b int￨4￨b maxSteps￨4￨b =￨4￨b Short￨4￨b .￨4￨b MAX_VALUE￨4￨b ;￨4￨b <END_BUG>￨4￨b for￨4￨l (￨4￨l int￨5￨c totalSteps￨5￨c =￨5￨c 0￨5￨c ;￨5￨c (￨5￨c currentStep￨5￨c )￨5￨c <￨5￨c (￨5￨c RequestCycle￨5￨c .￨5￨c DONE￨5￨c )￨5￨c ;￨5￨c totalSteps￨5￨c ++￨5￨c )￨4￨l {￨4￨l if￨5￨j (￨5￨j totalSteps￨6￨c >=￨6￨c maxSteps￨6￨c )￨5￨j {￨5￨j throw￨6￨e new￨6￨e IllegalStateException￨6￨e (￨6￨e (￨6￨e (￨6￨e "Request<seq2seq4repair_space>processing<seq2seq4repair_space>executed<seq2seq4repair_space>"￨6￨e +￨6￨e maxSteps￨6￨e )￨6￨e +￨6￨e "<seq2seq4repair_space>steps,<seq2seq4repair_space>which<seq2seq4repair_space>means<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>probably<seq2seq4repair_space>in<seq2seq4repair_space>an<seq2seq4repair_space>infinite<seq2seq4repair_space>loop."￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f step￨6￨e (￨6￨e )￨6￨e ;￨6￨e (￨6￨e currentStep￨6￨e )￨6￨e ++￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f AbstractRestartResponseException￨6￨p e￨6￨p )￨5￨f {￨5￨f currentStep￨6￨e =￨6￨e RequestCycle￨6￨e .￨6￨e RESPOND￨6￨e ;￨6￨e }￨5￨f }￨4￨l }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f currentStep￨4￨e =￨4￨e RequestCycle￨4￨e .￨4￨e DETACH_REQUEST￨4￨e ;￨4￨e detach￨4￨e (￨4￨e )￨4￨e ;￨4￨e currentStep￨4￨e =￨4￨e RequestCycle￨4￨e .￨4￨e DONE￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f threadDetach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f final￨2￨f void￨2￨f setPageParameters￨2￨f (￨2￨f PageParameters￨3￨p parameters￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f logRuntimeException￨2￨f (￨2￨f RuntimeException￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f ClientInfo￨2￨f newClientInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onBeginRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f onEndRequest￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d LocalEjbReceiver￨1￨d extends￨1￨d EJBReceiver￨1￨d implements￨1￨d RegistryCollector￨1￨d .￨1￨d Listener￨1￨d <￨1￨d String￨1￨d ,￨1￨d List￨1￨d <￨1￨d ClientMapping￨1￨d >￨1￨d >￨1￨d ,￨1￨d Service￨1￨d <￨1￨d LocalEjbReceiver￨1￨d >￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "ejb"￨2￨e )￨2￨e .￨2￨e append￨2￨e (￨2￨e "default-local-ejb-receiver-service"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e BY_VALUE_SERVICE_NAME￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "ejb3"￨2￨e ,￨2￨e "localEjbReceiver"￨2￨e ,￨2￨e "value"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e ServiceName￨2￨e BY_REFERENCE_SERVICE_NAME￨2￨e =￨2￨e JBOSS￨2￨e .￨2￨e append￨2￨e (￨2￨e "ejb3"￨2￨e ,￨2￨e "localEjbReceiver"￨2￨e ,￨2￨e "reference"￨2￨e )￨2￨e ;￨2￨e private￨2￨f static￨2￨f final￨2￨f Object￨2￨f [￨2￨f ]￨2￨f EMPTY_OBJECT_ARRAY￨2￨f =￨2￨f new￨2￨f Object￨2￨f [￨2￨f ]￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ;￨2￨e private￨2￨e final￨2￨e List￨2￨e <￨2￨e EJBReceiverContext￨2￨e >￨2￨e contexts￨2￨e =￨2￨e new￨2￨e CopyOnWriteArrayList￨2￨e <￨2￨e EJBReceiverContext￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e DeploymentRepository￨2￨e >￨2￨e deploymentRepository￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e DeploymentRepository￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e @￨2￨e SuppressWarnings￨2￨e (￨2￨e "rawtypes"￨2￨e )￨2￨e private￨2￨e final￨2￨e InjectedValue￨2￨e <￨2￨e RegistryCollector￨2￨e >￨2￨e clusterRegistryCollector￨2￨e =￨2￨e new￨2￨e InjectedValue￨2￨e <￨2￨e RegistryCollector￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e LocalEjbReceiver￨2￨e .￨2￨e Listener￨2￨e deploymentListener￨2￨e =￨2￨e new￨2￨e LocalEjbReceiver￨2￨e .￨2￨e Listener￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e allowPassByReference￨2￨e ;￨2￨e public￨2￨f LocalEjbReceiver￨2￨f (￨2￨f final￨3￨p String￨3￨p nodeName￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowPassByReference￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f associate￨2￨f (￨2￨f final￨3￨p EJBReceiverContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f processInvocation￨2￨f (￨2￨f final￨2￨f EJBClientInvocationContext￨2￨f invocation￨2￨f ,￨2￨f final￨2￨f EJBReceiverInvocationContext￨2￨f receiverContext￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f <￨2￨f T￨2￨f >￨2￨f StatefulEJBLocator￨2￨f <￨2￨f T￨2￨f >￨2￨f openSession￨2￨f (￨2￨f EJBReceiverContext￨2￨f context￨2￨f ,￨2￨f Class￨2￨f <￨2￨f T￨2￨f >￨2￨f viewType￨2￨f ,￨2￨f String￨2￨f appName￨2￨f ,￨2￨f String￨2￨f moduleName￨2￨f ,￨2￨f String￨2￨f distinctName￨2￨f ,￨2￨f String￨2￨f beanName￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e EjbDeploymentInformation￨3￨e ejbInfo￨3￨e =￨3￨e findBean￨3￨e (￨3￨e appName￨3￨e ,￨3￨e moduleName￨3￨e ,￨3￨e distinctName￨3￨e ,￨3￨e beanName￨3￨e )￨3￨e ;￨3￨e final￨3￨e EJBComponent￨3￨e component￨3￨e =￨3￨e ejbInfo￨3￨e .￨3￨e getEjbComponent￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c component￨4￨c instanceof￨4￨c StatefulSessionComponent￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e (￨4￨e "EJB<seq2seq4repair_space>"￨4￨e +￨4￨e beanName￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>Stateful<seq2seq4repair_space>Session<seq2seq4repair_space>bean<seq2seq4repair_space>in<seq2seq4repair_space>app:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e appName￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>module:<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e moduleName￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>distinct<seq2seq4repair_space>name:"￨4￨e )￨4￨e +￨4￨e distinctName￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j final￨3￨e StatefulSessionComponent￨3￨e statefulComponent￨3￨e =￨3￨e (￨3￨e (￨3￨e StatefulSessionComponent￨3￨e )￨3￨e (￨3￨e component￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e SessionID￨3￨e sessionID￨3￨e =￨3￨e statefulComponent￨3￨e .￨3￨e createSession￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b return￨3￨b new￨3￨b StatefulEJBLocator￨3￨b <￨3￨b T￨3￨b >￨3￨b (￨3￨b viewType￨3￨b ,￨3￨b appName￨3￨b ,￨3￨b moduleName￨3￨b ,￨3￨b beanName￨3￨b ,￨3￨b distinctName￨3￨b ,￨3￨b sessionID￨3￨b ,￨3￨b statefulComponent￨3￨b .￨3￨b getCache￨3￨b (￨3￨b )￨3￨b .￨3￨b getStrictAffinity￨3￨b (￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f Object￨2￨f clone￨2￨f (￨2￨f final￨3￨p Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p target￨3￨p ,￨3￨p final￨3￨p ObjectCloner￨3￨p cloner￨3￨p ,￨3￨p final￨3￨p Object￨3￨p object￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p allowPassByReference￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f Object￨2￨f clone￨2￨f (￨2￨f final￨3￨p ObjectCloner￨3￨p cloner￨3￨p ,￨3￨p final￨3￨p Object￨3￨p object￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f boolean￨2￨f exists￨2￨f (￨2￨f final￨3￨p String￨3￨p appName￨3￨p ,￨3￨p final￨3￨p String￨3￨p moduleName￨3￨p ,￨3￨p final￨3￨p String￨3￨p distinctName￨3￨p ,￨3￨p final￨3￨p String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f int￨2￨f sendPrepare￨2￨f (￨2￨f EJBReceiverContext￨2￨f context￨2￨f ,￨2￨f TransactionID￨2￨f transactionID￨2￨f )￨2￨f throws￨2￨f XAException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f sendCommit￨2￨f (￨2￨f EJBReceiverContext￨2￨f context￨2￨f ,￨2￨f TransactionID￨2￨f transactionID￨2￨f ,￨2￨f boolean￨2￨f onePhase￨2￨f )￨2￨f throws￨2￨f XAException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f sendRollback￨2￨f (￨2￨f EJBReceiverContext￨2￨f context￨2￨f ,￨2￨f TransactionID￨2￨f transactionID￨2￨f )￨2￨f throws￨2￨f XAException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f sendForget￨2￨f (￨2￨f EJBReceiverContext￨2￨f context￨2￨f ,￨2￨f TransactionID￨2￨f transactionID￨2￨f )￨2￨f throws￨2￨f XAException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f beforeCompletion￨2￨f (￨2￨f EJBReceiverContext￨3￨p context￨3￨p ,￨3￨p TransactionID￨3￨p transactionID￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f EjbDeploymentInformation￨2￨f findBean￨2￨f (￨2￨f final￨3￨p String￨3￨p appName￨3￨p ,￨3￨p final￨3￨p String￨3￨p moduleName￨3￨p ,￨3￨p final￨3￨p String￨3￨p distinctName￨3￨p ,￨3￨p final￨3￨p String￨3￨p beanName￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f final￨2￨f StartContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f StartException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f final￨3￨p StopContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f LocalEjbReceiver￨2￨f getValue￨2￨f (￨2￨f )￨2￨f throws￨2￨f IllegalArgumentException￨2￨f ,￨2￨f IllegalStateException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f InjectedValue￨2￨f <￨2￨f DeploymentRepository￨2￨f >￨2￨f getDeploymentRepository￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registryAdded￨2￨f (￨2￨f Registry￨3￨p <￨3￨p String￨3￨p ,￨3￨p List￨3￨p <￨3￨p ClientMapping￨3￨p >￨3￨p >￨3￨p registry￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registryRemoved￨2￨f (￨2￨f Registry￨3￨p <￨3￨p String￨3￨p ,￨3￨p List￨3￨p <￨3￨p ClientMapping￨3￨p >￨3￨p >￨3￨p registry￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "rawtypes"￨2￨f )￨2￨f public￨2￨f Injector￨2￨f <￨2￨f RegistryCollector￨2￨f >￨2￨f getClusterRegistryCollectorInjector￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d ImmediateResultProducer￨2￨d implements￨2￨d EJBReceiverInvocationContext￨2￨d .￨2￨d ResultProducer￨2￨d {￨2￨d private￨3￨e final￨3￨e Object￨3￨e clonedResult￨3￨e ;￨3￨e public￨3￨f ImmediateResultProducer￨3￨f (￨3￨f final￨4￨p Object￨4￨p clonedResult￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Object￨3￨f getResult￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f discardResult￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d Listener￨2￨d implements￨2￨d DeploymentRepositoryListener￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f void￨3￨f listenerAdded￨3￨f (￨3￨f final￨4￨p DeploymentRepository￨4￨p repository￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f deploymentAvailable￨3￨f (￨3￨f final￨4￨p DeploymentModuleIdentifier￨4￨p deployment￨4￨p ,￨4￨p final￨4￨p ModuleDeployment￨4￨p moduleDeployment￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f deploymentRemoved￨3￨f (￨3￨f final￨4￨p DeploymentModuleIdentifier￨4￨p deployment￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d LocalClusterNodeManager￨2￨d implements￨2￨d ClusterNodeManager￨2￨d {￨2￨d @￨3￨f Override￨3￨f public￨3￨f String￨3￨f getNodeName￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f EJBReceiver￨3￨f getEJBReceiver￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d SystemMenuSizeFastView￨1￨d extends￨1￨d ContributionItem￨1￨d {￨1￨d private￨2￨e FastViewPane￨2￨e fastViewPane￨2￨e ;￨2￨e public￨2￨f SystemMenuSizeFastView￨2￨f (￨2￨f FastViewPane￨3￨p fastViewPane￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fill￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b MenuItem￨3￨b item￨3￨b =￨3￨b new￨3￨b MenuItem￨3￨b (￨3￨b menu￨3￨b ,￨3￨b SWT￨3￨b .￨3￨b NONE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b item￨3￨e .￨3￨e setText￨3￨e (￨3￨e WorkbenchMessages￨3￨e .￨3￨e getString￨3￨e (￨3￨e "PartPane.size"￨3￨e )￨3￨e )￨3￨e ;￨3￨e item￨3￨f .￨3￨f addSelectionListener￨3￨f (￨3￨f new￨3￨f SelectionAdapter￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f widgetSelected￨4￨f (￨4￨f SelectionEvent￨5￨p e￨5￨p )￨4￨f {￨4￨f fastViewPane￨5￨e .￨5￨e moveSash￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e item￨3￨e .￨3￨e setEnabled￨3￨e (￨3￨e (￨3￨e (￨3￨e fastViewPane￨3￨e .￨3￨e getCurrentPane￨3￨e (￨3￨e )￨3￨e )￨3￨e !=￨3￨e null￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f boolean￨2￨f isDynamic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ComplexPropertiesParseUtils￨1￨d {￨1￨d public￨2￨f static￨2￨f Properties￨2￨f commonDsProperties￨2￨f (￨2￨f String￨3￨p jndiName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Properties￨2￨f xaDsProperties￨2￨f (￨2￨f String￨3￨p jndiName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Properties￨2￨f nonXaDsProperties￨2￨f (￨2￨f String￨3￨p jndiName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Properties￨2￨f raCommonProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Properties￨2￨f raConnectionProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f Properties￨3￨e params￨3￨e =￨3￨e new￨3￨e Properties￨3￨e (￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "use-java-context"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "class-name"￨3￨e ,￨3￨e "Class1"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "use-ccm"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "jndi-name"￨3￨e ,￨3￨e "java:jboss/name1"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "enabled"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "min-pool-size"￨3￨e ,￨3￨e "1"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "max-pool-size"￨3￨e ,￨3￨e "5"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "pool-prefill"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "pool-use-strict-min"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "flush-strategy"￨3￨e ,￨3￨e "IdleConnections"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "same-rm-override"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "interleaving"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "no-tx-separate-pool"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "pad-xid"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "wrap-xa-resource"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b params￨3￨b .￨3￨b put￨3￨b (￨3￨b "application"￨3￨b ,￨3￨b "true"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b params￨3￨e .￨3￨e put￨3￨e (￨3￨e "background-validation"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "background-validation-millis"￨3￨e ,￨3￨e "5000"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "use-fast-fail"￨3￨e ,￨3￨e "true"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "blocking-timeout-wait-millis"￨3￨e ,￨3￨e "5000"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "idle-timeout-minutes"￨3￨e ,￨3￨e "4"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "allocation-retry"￨3￨e ,￨3￨e "2"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "allocation-retry-wait-millis"￨3￨e ,￨3￨e "3000"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "xa-resource-timeout"￨3￨e ,￨3￨e "300"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "no-recovery"￨3￨e ,￨3￨e "false"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "recovery-plugin-class-name"￨3￨e ,￨3￨e "someClass2"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "recovery-username"￨3￨e ,￨3￨e "sa"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "recovery-password"￨3￨e ,￨3￨e "sa-pass"￨3￨e )￨3￨e ;￨3￨e params￨3￨e .￨3￨e put￨3￨e (￨3￨e "recovery-security-domain"￨3￨e ,￨3￨e "HsqlDbRealm"￨3￨e )￨3￨e ;￨3￨e return￨3￨e params￨3￨e ;￨3￨e }￨2￨f public￨2￨f static￨2￨f Properties￨2￨f raAdminProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f setOperationParams￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p ,￨3￨p Properties￨3￨p params￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f addExtensionProperties￨2￨f (￨2￨f ModelNode￨3￨p operation￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f checkModelParams￨2￨f (￨2￨f ModelNode￨3￨p node￨3￨p ,￨3￨p Properties￨3￨p params￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JmxMonitoredMap￨1￨d <￨1￨d K￨1￨d ,￨1￨d V￨1￨d >￨1￨d extends￨1￨d ConcurrentHashMap￨1￨d <￨1￨d String￨1￨d ,￨1￨d SolrInfoMBean￨1￨d >￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Logger￨2￨d LOG￨2￨d =￨2￨d LoggerFactory￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d JmxMonitoredMap￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d MBeanServer￨2￨d server￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d String￨2￨d jmxRootName￨2￨d ;￨2￨d private￨2￨d String￨2￨d coreHashCode￨2￨d ;￨2￨d public￨2￨d JmxMonitoredMap￨2￨d (￨2￨d String￨2￨d coreName￨2￨d ,￨2￨d String￨2￨d coreHashCode￨2￨d ,￨2￨d final￨2￨d JmxConfiguration￨2￨d jmxConfig￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f SolrInfoMBean￨2￨f put￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p SolrInfoMBean￨3￨p infoBean￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f SolrInfoMBean￨2￨f remove￨2￨f (￨2￨f Object￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f unregister￨2￨f (￨2￨f String￨3￨p key￨3￨p ,￨3￨p SolrInfoMBean￨3￨p infoBean￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ObjectName￨2￨f getObjectName￨2￨f (￨2￨f String￨2￨f key￨2￨f ,￨2￨f SolrInfoMBean￨2￨f infoBean￨2￨f )￨2￨f throws￨2￨f MalformedObjectNameException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f MBeanServer￨2￨f getServer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨d class￨2￨d SolrDynamicMBean￨2￨d implements￨2￨d DynamicMBean￨2￨d {￨2￨d private￨3￨e SolrInfoMBean￨3￨e infoBean￨3￨e ;￨3￨e private￨3￨e HashSet￨3￨e <￨3￨e String￨3￨e >￨3￨e staticStats￨3￨e ;￨3￨e private￨3￨e String￨3￨e coreHashCode￨3￨e ;￨3￨e public￨3￨f SolrDynamicMBean￨3￨f (￨3￨f String￨4￨p coreHashCode￨4￨p ,￨4￨p SolrInfoMBean￨4￨p managedResource￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f MBeanInfo￨3￨f getMBeanInfo￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f OpenType￨3￨f determineType￨3￨f (￨3￨f Class￨4￨p type￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Object￨3￨f getAttribute￨3￨f (￨3￨f String￨3￨f attribute￨3￨f )￨3￨f throws￨3￨f AttributeNotFoundException￨3￨f ,￨3￨f MBeanException￨3￨f ,￨3￨f ReflectionException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f AttributeList￨3￨f getAttributes￨3￨f (￨3￨f String￨4￨p [￨4￨p ]￨4￨p attributes￨4￨p )￨3￨f {￨3￨f AttributeList￨4￨e list￨4￨e =￨4￨e new￨4￨e AttributeList￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c attribute￨5￨c :￨5￨c attributes￨5￨c )￨4￨l {￨4￨l try￨5￨f (￨5￨f )￨5￨f {￨5￨f list￨6￨e .￨6￨e add￨6￨e (￨6￨e new￨6￨e Attribute￨6￨e (￨6￨e attribute￨6￨e ,￨6￨e getAttribute￨6￨e (￨6￨e attribute￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f Exception￨6￨p e￨6￨p )￨5￨f {￨5￨f <START_BUG>￨6￨b JmxMonitoredMap￨6￨b .￨6￨b LOG￨6￨b .￨6￨b warn￨6￨b (￨6￨b (￨6￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>attibute<seq2seq4repair_space>"￨6￨b +￨6￨b attribute￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f }￨4￨l return￨4￨e list￨4￨e ;￨4￨e }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f setAttribute￨3￨f (￨3￨f Attribute￨3￨f attribute￨3￨f )￨3￨f throws￨3￨f AttributeNotFoundException￨3￨f ,￨3￨f InvalidAttributeValueException￨3￨f ,￨3￨f MBeanException￨3￨f ,￨3￨f ReflectionException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f AttributeList￨3￨f setAttributes￨3￨f (￨3￨f AttributeList￨4￨p attributes￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Object￨3￨f invoke￨3￨f (￨3￨f String￨3￨f actionName￨3￨f ,￨3￨f Object￨3￨f [￨3￨f ]￨3￨f params￨3￨f ,￨3￨f String￨3￨f [￨3￨f ]￨3￨f signature￨3￨f )￨3￨f throws￨3￨f MBeanException￨3￨f ,￨3￨f ReflectionException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d TestExternalValues￨1￨d extends￨1￨d SingleEMFTestCase￨1￨d {￨1￨d public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b super￨3￨b .￨3￨b setUp￨3￨b (￨3￨b CLEAR_TABLES￨3￨b ,￨3￨b EntityA￨3￨b .￨3￨b class￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f void￨2￨f testExternalValues￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testUnrecognizedExternalValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PropertyColumn￨1￨d extends￨1￨d AbstractColumn￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e propertyExpression￨2￨e ;￨2￨e public￨2￨f PropertyColumn￨2￨f (￨2￨f IModel￨3￨p displayModel￨3￨p ,￨3￨p String￨3￨p sortProperty￨3￨p ,￨3￨p String￨3￨p propertyExpression￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PropertyColumn￨2￨f (￨2￨f IModel￨3￨p displayModel￨3￨p ,￨3￨p String￨3￨p propertyExpressions￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f populateItem￨2￨f (￨2￨f Item￨3￨p item￨3￨p ,￨3￨p String￨3￨p componentId￨3￨p ,￨3￨p IModel￨3￨p model￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b item￨3￨b .￨3￨b add￨3￨b (￨3￨b new￨3￨b wicket￨3￨b .￨3￨b markup￨3￨b .￨3￨b html￨3￨b .￨3￨b basic￨3￨b .￨3￨b Label￨3￨b (￨3￨b item￨3￨b ,￨3￨b componentId￨3￨b ,￨3￨b createLabelModel￨3￨b (￨3￨b model￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f IModel￨2￨f createLabelModel￨2￨f (￨2￨f IModel￨3￨p embeddedModel￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getPropertyExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d SortedBytesMergeUtils￨1￨d {￨1￨d private￨2￨f SortedBytesMergeUtils￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f static￨2￨f SortedBytesMergeUtils￨2￨f .￨2￨f MergeContext￨2￨f init￨2￨f (￨2￨f ValueType￨3￨p type￨3￨p ,￨3￨p IndexDocValues￨3￨p [￨3￨p ]￨3￨p docValues￨3￨p ,￨3￨p Comparator￨3￨p <￨3￨p BytesRef￨3￨p >￨3￨p comp￨3￨p ,￨3￨p MergeState￨3￨p mergeState￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d final￨2￨d class￨2￨d MergeContext￨2￨d {￨2￨d private￨3￨e final￨3￨e Comparator￨3￨e <￨3￨e BytesRef￨3￨e >￨3￨e comp￨3￨e ;￨3￨e private￨3￨e final￨3￨e BytesRef￨3￨e missingValue￨3￨e =￨3￨e new￨3￨e BytesRef￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e int￨3￨e sizePerValues￨3￨e ;￨3￨e final￨3￨e ValueType￨3￨e type￨3￨e ;￨3￨e final￨3￨e int￨3￨e [￨3￨e ]￨3￨e docToEntry￨3￨e ;￨3￨e long￨3￨e [￨3￨e ]￨3￨e offsets￨3￨e ;￨3￨e public￨3￨f MergeContext￨3￨f (￨3￨f Comparator￨4￨p <￨4￨p BytesRef￨4￨p >￨4￨p comp￨4￨p ,￨4￨p MergeState￨4￨p mergeState￨4￨p ,￨4￨p int￨4￨p size￨4￨p ,￨4￨p ValueType￨4￨p type￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨f List￨2￨f <￨2￨f SortedBytesMergeUtils￨2￨f .￨2￨f SortedSourceSlice￨2￨f >￨2￨f buildSlices￨2￨f (￨2￨f MergeState￨2￨f mergeState￨2￨f ,￨2￨f IndexDocValues￨2￨f [￨2￨f ]￨2￨f docValues￨2￨f ,￨2￨f SortedBytesMergeUtils￨2￨f .￨2￨f MergeContext￨2￨f ctx￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f createOrdMapping￨2￨f (￨2￨f MergeState￨3￨p mergeState￨3￨p ,￨3￨p SortedBytesMergeUtils￨3￨p .￨3￨p SortedSourceSlice￨3￨p currentSlice￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨f int￨2￨f mergeRecords￨2￨f (￨2￨f SortedBytesMergeUtils￨2￨f .￨2￨f MergeContext￨2￨f ctx￨2￨f ,￨2￨f IndexOutput￨2￨f datOut￨2￨f ,￨2￨f List￨2￨f <￨2￨f SortedBytesMergeUtils￨2￨f .￨2￨f SortedSourceSlice￨2￨f >￨2￨f slices￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d final￨2￨d class￨2￨d RecordMerger￨2￨d {￨2￨d private￨3￨e final￨3￨e SortedBytesMergeUtils￨3￨e .￨3￨e MergeQueue￨3￨e queue￨3￨e ;￨3￨e private￨3￨e final￨3￨e SortedBytesMergeUtils￨3￨e .￨3￨e SortedSourceSlice￨3￨e [￨3￨e ]￨3￨e top￨3￨e ;￨3￨e private￨3￨e int￨3￨e numTop￨3￨e ;￨3￨e BytesRef￨3￨e current￨3￨e ;￨3￨e int￨3￨e currentOrd￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e RecordMerger￨3￨f (￨3￨f SortedBytesMergeUtils￨4￨p .￨4￨p MergeQueue￨4￨p queue￨4￨p ,￨4￨p SortedBytesMergeUtils￨4￨p .￨4￨p SortedSourceSlice￨4￨p [￨4￨p ]￨4￨p top￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f pullTop￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f pushTop￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d static￨2￨d class￨2￨d SortedSourceSlice￨2￨d {￨2￨d final￨3￨e SortedSource￨3￨e source￨3￨e ;￨3￨e final￨3￨e int￨3￨e readerIdx￨3￨e ;￨3￨e final￨3￨e int￨3￨e [￨3￨e ]￨3￨e docIDToRelativeOrd￨3￨e ;￨3￨e final￨3￨e int￨3￨e [￨3￨e ]￨3￨e ordMapping￨3￨e ;￨3￨e final￨3￨e int￨3￨e docToOrdStart￨3￨e ;￨3￨e final￨3￨e int￨3￨e docToOrdEnd￨3￨e ;￨3￨e BytesRef￨3￨e current￨3￨e =￨3￨e new￨3￨e BytesRef￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e relativeOrd￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e SortedSourceSlice￨3￨f (￨3￨f int￨4￨p readerIdx￨4￨p ,￨4￨p SortedSource￨4￨p source￨4￨p ,￨4￨p MergeState￨4￨p state￨4￨p ,￨4￨p int￨4￨p [￨4￨p ]￨4￨p docToOrd￨4￨p )￨3￨f {￨3￨f }￨3￨f private￨3￨f static￨3￨f int￨3￨f numDocs￨3￨f (￨3￨f MergeState￨4￨p state￨4￨p ,￨4￨p int￨4￨p readerIndex￨4￨p )￨3￨f {￨3￨f }￨3￨f BytesRef￨3￨f next￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f void￨3￨f writeOrds￨3￨f (￨3￨f PackedInts￨3￨f .￨3￨f Writer￨3￨f writer￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d final￨2￨d class￨2￨d MissingValueSource￨2￨d extends￨2￨d SortedSource￨2￨d {￨2￨d private￨3￨e BytesRef￨3￨e missingValue￨3￨e ;￨3￨e public￨3￨f MissingValueSource￨3￨f (￨3￨f SortedBytesMergeUtils￨4￨p .￨4￨p MergeContext￨4￨p ctx￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f ord￨3￨f (￨3￨f int￨4￨p docID￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f BytesRef￨3￨f getByOrd￨3￨f (￨3￨f int￨4￨p ord￨4￨p ,￨4￨p BytesRef￨4￨p bytesRef￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b bytesRef￨4￨b .￨4￨b copy￨4￨b (￨4￨b missingValue￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b return￨4￨e bytesRef￨4￨e ;￨4￨e }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Reader￨3￨f getDocToOrd￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f int￨3￨f getValueCount￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d final￨2￨d class￨2￨d MergeQueue￨2￨d extends￨2￨d PriorityQueue￨2￨d <￨2￨d SortedBytesMergeUtils￨2￨d .￨2￨d SortedSourceSlice￨2￨d >￨2￨d {￨2￨d final￨3￨e Comparator￨3￨e <￨3￨e BytesRef￨3￨e >￨3￨e comp￨3￨e ;￨3￨e public￨3￨f MergeQueue￨3￨f (￨3￨f int￨4￨p maxSize￨4￨p ,￨4￨p Comparator￨4￨p <￨4￨p BytesRef￨4￨p >￨4￨p comp￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f boolean￨3￨f lessThan￨3￨f (￨3￨f SortedBytesMergeUtils￨4￨p .￨4￨p SortedSourceSlice￨4￨p a￨4￨p ,￨4￨p SortedBytesMergeUtils￨4￨p .￨4￨p SortedSourceSlice￨4￨p b￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d OddEvenListItem￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d ListItem￨1￨d <￨1￨d T￨1￨d >￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CLASS_EVEN￨2￨e =￨2￨e "even"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e CLASS_ODD￨2￨e =￨2￨e "odd"￨2￨e ;￨2￨e public￨2￨f OddEvenListItem￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p IModel￨3￨p <￨3￨p T￨3￨p >￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentTag￨2￨f (￨2￨f ComponentTag￨3￨p tag￨3￨p )￨2￨f {￨2￨f super￨3￨e .￨3￨e onComponentTag￨3￨e (￨3￨e tag￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b tag￨3￨b .￨3￨b put￨3￨b (￨3￨b "class"￨3￨b ,￨3￨b (￨3￨b (￨3￨b (￨3￨b OddEvenListItem￨3￨b .￨3￨b getIndex￨3￨b (￨3￨b )￨3￨b )￨3￨b %￨3￨b 2￨3￨b )￨3￨b ==￨3￨b 0￨3￨b ?￨3￨b OddEvenListItem￨3￨b .￨3￨b CLASS_EVEN￨3￨b :￨3￨b OddEvenListItem￨3￨b .￨3￨b CLASS_ODD￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CommandlineJava￨1￨d implements￨1￨d Cloneable￨1￨d {￨1￨d private￨2￨e Commandline￨2￨e vmCommand￨2￨e =￨2￨e new￨2￨e Commandline￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Commandline￨2￨e javaCommand￨2￨e =￨2￨e new￨2￨e Commandline￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e CommandlineJava￨2￨e .￨2￨e SysProperties￨2￨e sysProperties￨2￨e =￨2￨e new￨2￨e CommandlineJava￨2￨e .￨2￨e SysProperties￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Path￨2￨e classpath￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e String￨2￨e vmVersion￨2￨e ;￨2￨e public￨2￨d static￨2￨d class￨2￨d SysProperties￨2￨d extends￨2￨d Environment￨2￨d implements￨2￨d Cloneable￨2￨d {￨2￨d Properties￨3￨e sys￨3￨e =￨3￨e null￨3￨e ;￨3￨e public￨3￨f String￨3￨f [￨3￨f ]￨3￨f getVariables￨3￨f (￨3￨f )￨3￨f throws￨3￨f BuildException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f int￨3￨f size￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setSystem￨3￨f (￨3￨f )￨3￨f throws￨3￨f BuildException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f restoreSystem￨3￨f (￨3￨f )￨3￨f throws￨3￨f BuildException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f clone￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f CommandlineJava￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Argument￨2￨f createArgument￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Argument￨2￨f createVmArgument￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSysproperty￨2￨f (￨2￨f Environment￨3￨p .￨3￨p Variable￨3￨p sysp￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVm￨2￨f (￨2￨f String￨3￨p vm￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setVmversion￨2￨f (￨2￨f String￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setClassname￨2￨f (￨2￨f String￨3￨p classname￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getClassname￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f createClasspath￨2￨f (￨2￨f Project￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getVmversion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCommandline￨2￨f (￨2￨f )￨2￨f {￨2￨f Path￨3￨e fullClasspath￨3￨e =￨3￨e (￨3￨e (￨3￨e classpath￨3￨e )￨3￨e !=￨3￨e null￨3￨e )￨3￨e ?￨3￨e classpath￨3￨e .￨3￨e concatSystemClasspath￨3￨e (￨3￨e "ignore"￨3￨e )￨3￨e :￨3￨e null￨3￨e ;￨3￨e int￨3￨e size￨3￨e =￨3￨e (￨3￨e (￨3￨e vmCommand￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e javaCommand￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e +￨3￨e (￨3￨e sysProperties￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c fullClasspath￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c fullClasspath￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨4￨c )￨3￨j {￨3￨j size￨4￨e +=￨4￨e 2￨4￨e ;￨4￨e }￨3￨j String￨3￨e [￨3￨e ]￨3￨e result￨3￨e =￨3￨e new￨3￨e String￨3￨e [￨3￨e size￨3￨e ]￨3￨e ;￨3￨e System￨3￨e .￨3￨e arraycopy￨3￨e (￨3￨e vmCommand￨3￨e .￨3￨e getCommandline￨3￨e (￨3￨e )￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e result￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e vmCommand￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e int￨3￨e pos￨3￨e =￨3￨e vmCommand￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c sysProperties￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j System￨4￨e .￨4￨e arraycopy￨4￨e (￨4￨e sysProperties￨4￨e .￨4￨e getVariables￨4￨e (￨4￨e )￨4￨e ,￨4￨e 0￨4￨e ,￨4￨e result￨4￨e ,￨4￨e pos￨4￨e ,￨4￨e sysProperties￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e pos￨4￨e +=￨4￨e sysProperties￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b fullClasspath￨3￨b !=￨3￨b null￨3￨b )￨3￨b &&￨3￨b (￨3￨b (￨3￨b fullClasspath￨3￨b .￨3￨b size￨3￨b (￨3￨b )￨3￨b )￨3￨b >￨3￨b 0￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b result￨3￨e [￨3￨e (￨3￨e pos￨3￨e ++￨3￨e )￨3￨e ]￨3￨e =￨3￨e "-classpath"￨3￨e ;￨3￨e result￨3￨e [￨3￨e (￨3￨e pos￨3￨e ++￨3￨e )￨3￨e ]￨3￨e =￨3￨e fullClasspath￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨3￨e System￨3￨e .￨3￨e arraycopy￨3￨e (￨3￨e javaCommand￨3￨e .￨3￨e getCommandline￨3￨e (￨3￨e )￨3￨e ,￨3￨e 0￨3￨e ,￨3￨e result￨3￨e ,￨3￨e pos￨3￨e ,￨3￨e javaCommand￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Commandline￨2￨f getJavaCommand￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Commandline￨2￨f getVmCommand￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Path￨2￨f getClasspath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSystemProperties￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f restoreSystemProperties￨2￨f (￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CommandlineJava￨2￨f .￨2￨f SysProperties￨2￨f getSystemProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clearJavaArgs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ConstructorDeclaration￨1￨d extends￨1￨d AbstractMethodDeclaration￨1￨d {￨1￨d public￨2￨e ExplicitConstructorCall￨2￨e constructorCall￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e char￨2￨e [￨2￨e ]￨2￨e ConstantPoolName￨2￨e =￨2￨e "<init>"￨2￨e .￨2￨e toCharArray￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e isDefaultConstructor￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f ConstructorDeclaration￨2￨f (￨2￨f CompilationResult￨3￨p compilationResult￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f analyseCode￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p ,￨3￨p InitializationFlowContext￨3￨p initializerFlowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p ,￨3￨p ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateSyntheticFieldInitializationsIfNecessary￨2￨f (￨2￨f MethodScope￨3￨p methodScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p ReferenceBinding￨3￨p declaringClass￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalGenerateCode￨2￨f (￨2￨f ClassScope￨3￨p classScope￨3￨p ,￨3￨p ClassFile￨3￨p classFile￨3￨p )￨2￨f {￨2￨f classFile￨3￨e .￨3￨e generateMethodInfoHeader￨3￨e (￨3￨e binding￨3￨e )￨3￨e ;￨3￨e int￨3￨e methodAttributeOffset￨3￨e =￨3￨e classFile￨3￨e .￨3￨e contentsOffset￨3￨e ;￨3￨e int￨3￨e attributeNumber￨3￨e =￨3￨e classFile￨3￨e .￨3￨e generateMethodInfoAttribute￨3￨e (￨3￨e binding￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c !￨4￨c (￨4￨c binding￨4￨c .￨4￨c isNative￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c binding￨4￨c .￨4￨c isAbstract￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j TypeDeclaration￨4￨e declaringType￨4￨e =￨4￨e classScope￨4￨e .￨4￨e referenceContext￨4￨e ;￨4￨e int￨4￨e codeAttributeOffset￨4￨e =￨4￨e classFile￨4￨e .￨4￨e contentsOffset￨4￨e ;￨4￨e classFile￨4￨e .￨4￨e generateCodeAttributeHeader￨4￨e (￨4￨e )￨4￨e ;￨4￨e CodeStream￨4￨e codeStream￨4￨e =￨4￨e classFile￨4￨e .￨4￨e codeStream￨4￨e ;￨4￨e codeStream￨4￨e .￨4￨e reset￨4￨e (￨4￨e this￨4￨e ,￨4￨e classFile￨4￨e )￨4￨e ;￨4￨e ReferenceBinding￨4￨e declaringClass￨4￨e =￨4￨e binding￨4￨e .￨4￨e declaringClass￨4￨e ;￨4￨e int￨4￨e argSlotSize￨4￨e =￨4￨e 1￨4￨e ;￨4￨e if￨4￨j (￨4￨j declaringClass￨5￨c .￨5￨c isNestedType￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j NestedTypeBinding￨5￨e nestedType￨5￨e =￨5￨e (￨5￨e (￨5￨e NestedTypeBinding￨5￨e )￨5￨e (￨5￨e declaringClass￨5￨e )￨5￨e )￨5￨e ;￨5￨e this￨5￨e .￨5￨e scope￨5￨e .￨5￨e extraSyntheticArguments￨5￨e =￨5￨e nestedType￨5￨e .￨5￨e syntheticOuterLocalVariables￨5￨e (￨5￨e )￨5￨e ;￨5￨e scope￨5￨e .￨5￨e computeLocalVariablePositions￨5￨e (￨5￨e (￨5￨e (￨5￨e nestedType￨5￨e .￨5￨e enclosingInstancesSlotSize￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e ,￨5￨e codeStream￨5￨e )￨5￨e ;￨5￨e argSlotSize￨5￨e +=￨5￨e nestedType￨5￨e .￨5￨e enclosingInstancesSlotSize￨5￨e ;￨5￨e argSlotSize￨5￨e +=￨5￨e nestedType￨5￨e .￨5￨e outerLocalVariablesSlotSize￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j scope￨5￨e .￨5￨e computeLocalVariablePositions￨5￨e (￨5￨e 1￨5￨e ,￨5￨e codeStream￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c arguments￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c max￨6￨c =￨6￨c arguments￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c max￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l LocalVariableBinding￨6￨e argBinding￨6￨e ;￨6￨e codeStream￨6￨e .￨6￨e addVisibleLocalVariable￨6￨e (￨6￨e (￨6￨e argBinding￨6￨e =￨6￨e arguments￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e binding￨6￨e )￨6￨e )￨6￨e ;￨6￨e argBinding￨6￨e .￨6￨e recordInitializationStartPC￨6￨e (￨6￨e 0￨6￨e )￨6￨e ;￨6￨e TypeBinding￨6￨e argType￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c (￨7￨c argType￨7￨c =￨7￨c argBinding￨7￨c .￨7￨c type￨7￨c )￨7￨c ==￨7￨c (￨7￨c LongBinding￨7￨c )￨7￨c )￨7￨c ||￨7￨c (￨7￨c argType￨7￨c ==￨7￨c (￨7￨c DoubleBinding￨7￨c )￨7￨c )￨7￨c )￨6￨j {￨6￨j argSlotSize￨7￨e +=￨7￨e 2￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j argSlotSize￨7￨e ++￨7￨e ;￨7￨e }￨6￨j }￨5￨l }￨4￨j MethodScope￨4￨e initializerScope￨4￨e =￨4￨e declaringType￨4￨e .￨4￨e initializerScope￨4￨e ;￨4￨e initializerScope￨4￨e .￨4￨e computeLocalVariablePositions￨4￨e (￨4￨e argSlotSize￨4￨e ,￨4￨e codeStream￨4￨e )￨4￨e ;￨4￨e boolean￨4￨e needFieldInitializations￨4￨e =￨4￨e (￨4￨e (￨4￨e constructorCall￨4￨e )￨4￨e ==￨4￨e null￨4￨e )￨4￨e ||￨4￨e (￨4￨e (￨4￨e constructorCall￨4￨e .￨4￨e accessMode￨4￨e )￨4￨e !=￨4￨e (￨4￨e ExplicitConstructorCall￨4￨e .￨4￨e This￨4￨e )￨4￨e )￨4￨e ;￨4￨e boolean￨4￨e preInitSyntheticFields￨4￨e =￨4￨e (￨4￨e scope￨4￨e .￨4￨e environment￨4￨e (￨4￨e )￨4￨e .￨4￨e options￨4￨e .￨4￨e targetJDK￨4￨e )￨4￨e >=￨4￨e (￨4￨e ClassFileConstants￨4￨e .￨4￨e JDK1_4￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j needFieldInitializations￨5￨c &&￨5￨c preInitSyntheticFields￨5￨c )￨4￨j {￨4￨j generateSyntheticFieldInitializationsIfNecessary￨5￨e (￨5￨e scope￨5￨e ,￨5￨e codeStream￨5￨e ,￨5￨e declaringClass￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c constructorCall￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j constructorCall￨5￨e .￨5￨e generateCode￨5￨e (￨5￨e scope￨5￨e ,￨5￨e codeStream￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j needFieldInitializations￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j !￨6￨c preInitSyntheticFields￨6￨c )￨5￨j {￨5￨j generateSyntheticFieldInitializationsIfNecessary￨6￨e (￨6￨e scope￨6￨e ,￨6￨e codeStream￨6￨e ,￨6￨e declaringClass￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c declaringType￨6￨c .￨6￨c fields￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ,￨7￨c max￨7￨c =￨7￨c declaringType￨7￨c .￨7￨c fields￨7￨c .￨7￨c length￨7￨c ;￨7￨c i￨7￨c <￨7￨c max￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l FieldDeclaration￨7￨e fieldDecl￨7￨e ;￨7￨e if￨7￨j (￨7￨j !￨8￨c (￨8￨c (￨8￨c fieldDecl￨8￨c =￨8￨c declaringType￨8￨c .￨8￨c fields￨8￨c [￨8￨c i￨8￨c ]￨8￨c )￨8￨c .￨8￨c isStatic￨8￨c (￨8￨c )￨8￨c )￨8￨c )￨7￨j {￨7￨j fieldDecl￨8￨e .￨8￨e generateCode￨8￨e (￨8￨e initializerScope￨8￨e ,￨8￨e codeStream￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨l }￨5￨j }￨4￨j if￨4￨j (￨4￨j (￨5￨c statements￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ,￨6￨c max￨6￨c =￨6￨c statements￨6￨c .￨6￨c length￨6￨c ;￨6￨c i￨6￨c <￨6￨c max￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l statements￨6￨e [￨6￨e i￨6￨e ]￨6￨e .￨6￨e generateCode￨6￨e (￨6￨e scope￨6￨e ,￨6￨e codeStream￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j if￨4￨j (￨4￨j this￨5￨c .￨5￨c needFreeReturn￨5￨c )￨4￨j {￨4￨j codeStream￨5￨e .￨5￨e return_￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j codeStream￨4￨e .￨4￨e exitUserScope￨4￨e (￨4￨e scope￨4￨e )￨4￨e ;￨4￨e codeStream￨4￨e .￨4￨e recordPositionsFrom￨4￨e (￨4￨e 0￨4￨e ,￨4￨e this￨4￨e .￨4￨e bodyEnd￨4￨e )￨4￨e ;￨4￨e classFile￨4￨e .￨4￨e completeCodeAttribute￨4￨e (￨4￨e codeAttributeOffset￨4￨e )￨4￨e ;￨4￨e attributeNumber￨4￨e ++￨4￨e ;￨4￨e }￨3￨j classFile￨3￨e .￨3￨e completeMethodInfo￨3￨e (￨3￨e methodAttributeOffset￨3￨e ,￨3￨e attributeNumber￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j ignoreFurtherInvestigation￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b throw￨4￨b new￨4￨b org￨4￨b .￨4￨b eclipse￨4￨b .￨4￨b jdt￨4￨b .￨4￨b internal￨4￨b .￨4￨b compiler￨4￨b .￨4￨b problem￨4￨b .￨4￨b AbortMethod￨4￨b (￨4￨b scope￨4￨b .￨4￨b referenceCompilationUnit￨4￨b (￨4￨b )￨4￨b .￨4￨b compilationResult￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j }￨2￨f public￨2￨f boolean￨2￨f isConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDefaultConstructor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInitializationMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isRecursive￨2￨f (￨2￨f ArrayList￨3￨p visited￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f parseStatements￨2￨f (￨2￨f Parser￨3￨p parser￨3￨p ,￨3￨p CompilationUnitDeclaration￨3￨p unit￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printBody￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveJavadoc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveStatements￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p ClassScope￨3￨p classScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d PureTestCase￨1￨d extends￨1￨d AbstractMgmtTestBase￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f AfterClass￨2￨f public￨2￨f static￨2￨f void￨2￨f tearDown￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f ResourceAdapterArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨e Inject￨2￨e public￨2￨e ServiceContainer￨2￨e serviceContainer￨2￨e ;￨2￨e @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRegistryConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b ServiceController￨3￨b <￨3￨b ?￨3￨b >￨3￨b controller￨3￨b =￨3￨b serviceContainer￨3￨b .￨3￨b getService￨3￨b (￨3￨b RA_REPOSISTORY_SERVICE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b assertNotNull￨3￨e (￨3￨e controller￨3￨e )￨3￨e ;￨3￨e ResourceAdapterRepository￨3￨e repository￨3￨e =￨3￨e (￨3￨e (￨3￨e ResourceAdapterRepository￨3￨e )￨3￨e (￨3￨e controller￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e repository￨3￨e )￨3￨e ;￨3￨e Set￨3￨e <￨3￨e String￨3￨e >￨3￨e ids￨3￨e =￨3￨e repository￨3￨e .￨3￨e getResourceAdapters￨3￨e (￨3￨e )￨3￨e ;￨3￨e assertNotNull￨3￨e (￨3￨e ids￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e 2￨3￨e ,￨3￨e ids￨3￨e .￨3￨e size￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l String￨4￨c piId￨4￨c :￨4￨c ids￨4￨c )￨3￨l {￨3￨l assertNotNull￨4￨e (￨4￨e piId￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e (￨4￨e "PID:"￨4￨e +￨4￨e piId￨4￨e )￨4￨e )￨4￨e ;￨4￨e assertNotNull￨4￨e (￨4￨e repository￨4￨e .￨4￨e getResourceAdapter￨4￨e (￨4￨e piId￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testMetadataConfiguration￨2￨f (￨2￨f )￨2￨f throws￨2￨f Throwable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d MemoryManagerMXBeanAttributeHandler￨1￨d extends￨1￨d AbstractPlatformMBeanAttributeHandler￨1￨d {￨1￨d static￨2￨e final￨2￨e MemoryManagerMXBeanAttributeHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e MemoryManagerMXBeanAttributeHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f MemoryManagerMXBeanAttributeHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeReadAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e String￨3￨e mmName￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e OP_ADDR￨3￨e )￨3￨e )￨3￨e .￨3￨e getLastElement￨3￨e (￨3￨e )￨3￨e .￨3￨e getValue￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e name￨3￨e =￨3￨e operation￨3￨e .￨3￨e require￨3￨e (￨3￨e NAME￨3￨e )￨3￨e .￨3￨e asString￨3￨e (￨3￨e )￨3￨e ;￨3￨e MemoryManagerMXBean￨3￨e memoryManagerMXBean￨3￨e =￨3￨e null￨3￨e ;￨3￨e for￨3￨l (￨3￨l MemoryManagerMXBean￨4￨c mbean￨4￨c :￨4￨c ManagementFactory￨4￨c .￨4￨c getMemoryManagerMXBeans￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j mmName￨5￨c .￨5￨c equals￨5￨c (￨5￨c PlatformMBeanUtil￨5￨c .￨5￨c escapeMBeanName￨5￨c (￨5￨c mbean￨5￨c .￨5￨c getName￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j memoryManagerMXBean￨5￨e =￨5￨e mbean￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j memoryManagerMXBean￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e ROOT_LOGGER￨4￨e .￨4￨e unknownMemoryManager￨4￨e (￨4￨e mmName￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b if￨3￨b (￨3￨b OBJECT_NAME￨3￨b .￨3￨b getName￨3￨b (￨3￨b )￨3￨b .￨3￨b equals￨3￨b (￨3￨b name￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b final￨3￨e String￨3￨e objName￨3￨e =￨3￨e PlatformMBeanUtil￨3￨e .￨3￨e getObjectNameStringWithNameKey￨3￨e (￨3￨e ManagementFactory￨3￨e .￨3￨e MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE￨3￨e ,￨3￨e mmName￨3￨e )￨3￨e ;￨3￨e context￨3￨e .￨3￨e getResult￨3￨e (￨3￨e )￨3￨e .￨3￨e set￨3￨e (￨3￨e objName￨3￨e )￨3￨e ;￨3￨e else￨3￨j if￨3￨j (￨3￨j NAME￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e PlatformMBeanUtil￨4￨e .￨4￨e escapeMBeanName￨4￨e (￨4￨e memoryManagerMXBean￨4￨e .￨4￨e getName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j VALID￨4￨c .￨4￨c getName￨4￨c (￨4￨c )￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e memoryManagerMXBean￨4￨e .￨4￨e isValid￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j MEMORY_POOL_NAMES￨4￨c .￨4￨c equals￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j final￨4￨e ModelNode￨4￨e result￨4￨e =￨4￨e context￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e ;￨4￨e result￨4￨e .￨4￨e setEmptyList￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c pool￨5￨c :￨5￨c memoryManagerMXBean￨5￨c .￨5￨c getMemoryPoolNames￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l result￨5￨e .￨5￨e add￨5￨e (￨5￨e PlatformMBeanUtil￨5￨e .￨5￨e escapeMBeanName￨5￨e (￨5￨e pool￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j else￨3￨j if￨3￨j (￨3￨j MEMORY_MANAGER_READ_ATTRIBUTES￨4￨c .￨4￨c contains￨4￨c (￨4￨c name￨4￨c )￨4￨c )￨3￨j {￨3￨j throw￨4￨e ROOT_LOGGER￨4￨e .￨4￨e badReadAttributeImpl￨4￨e (￨4￨e name￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e unknownAttribute￨4￨e (￨4￨e operation￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f executeWriteAttribute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PathExtensionContentNegotiationStrategyTests￨1￨d {￨1￨d private￨2￨e NativeWebRequest￨2￨e webRequest￨2￨e ;￨2￨e private￨2￨e MockHttpServletRequest￨2￨e servletRequest￨2￨e ;￨2￨e @￨2￨f Before￨2￨f public￨2￨f void￨2￨f setup￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f resolveMediaTypesFromMapping￨2￨f (￨2￨f )￨2￨f {￨2￨f this￨3￨e .￨3￨e servletRequest￨3￨e .￨3￨e setRequestURI￨3￨e (￨3￨e "test.html"￨3￨e )￨3￨e ;￨3￨e PathExtensionContentNegotiationStrategy￨3￨e strategy￨3￨e =￨3￨e new￨3￨e PathExtensionContentNegotiationStrategy￨3￨e (￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e MediaType￨3￨e >￨3￨e mediaTypes￨3￨e =￨3￨e strategy￨3￨e .￨3￨e resolveMediaTypes￨3￨e (￨3￨e this￨3￨e .￨3￨e webRequest￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e new￨3￨e MediaType￨3￨e (￨3￨e "text"￨3￨e ,￨3￨e "html"￨3￨e )￨3￨e )￨3￨e ,￨3￨e mediaTypes￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b strategy￨3￨b =￨3￨b new￨3￨b PathExtensionContentNegotiationStrategy￨3￨b (￨3￨b Collections￨3￨b .￨3￨b singletonMap￨3￨b (￨3￨b "HTML"￨3￨b ,￨3￨b "application/xhtml+xml"￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b mediaTypes￨3￨e =￨3￨e strategy￨3￨e .￨3￨e resolveMediaTypes￨3￨e (￨3￨e this￨3￨e .￨3￨e webRequest￨3￨e )￨3￨e ;￨3￨e assertEquals￨3￨e (￨3￨e Arrays￨3￨e .￨3￨e asList￨3￨e (￨3￨e new￨3￨e MediaType￨3￨e (￨3￨e "application"￨3￨e ,￨3￨e "xhtml+xml"￨3￨e )￨3￨e )￨3￨e ,￨3￨e mediaTypes￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f resolveMediaTypesFromJaf￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getMediaTypeFromFilenameNoJaf￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getMediaTypeFilenameWithContextPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getMediaTypeFilenameWithEncodedURI￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StatisticalSampleSender￨1￨d extends￨1￨d AbstractSampleSender￨1￨d implements￨1￨d Serializable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 240L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e Logger￨2￨e log￨2￨e =￨2￨e LoggingManager￨2￨e .￨2￨e getLoggerForClass￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨2￨e =￨2￨e 100￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e DEFAULT_TIME_THRESHOLD￨2￨e =￨2￨e 60000L￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e NUM_SAMPLES_THRESHOLD￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "num_sample_threshold"￨2￨e ,￨2￨e StatisticalSampleSender￨2￨e .￨2￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e TIME_THRESHOLD_MS￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "time_threshold"￨2￨e ,￨2￨e StatisticalSampleSender￨2￨e .￨2￨e DEFAULT_TIME_THRESHOLD￨2￨e )￨2￨e ;￨2￨e private￨2￨e static￨2￨e boolean￨2￨e KEY_ON_THREADNAME￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "key_on_threadname"￨2￨e ,￨2￨e false￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e clientConfiguredNumSamplesThreshold￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "num_sample_threshold"￨2￨e ,￨2￨e StatisticalSampleSender￨2￨e .￨2￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e long￨2￨e clientConfiguredTimeThresholdMs￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "time_threshold"￨2￨e ,￨2￨e StatisticalSampleSender￨2￨e .￨2￨e DEFAULT_TIME_THRESHOLD￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e boolean￨2￨e clientConfiguredKeyOnThreadName￨2￨e =￨2￨e JMeterUtils￨2￨e .￨2￨e getPropDefault￨2￨e (￨2￨e "key_on_threadname"￨2￨e ,￨2￨e false￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e RemoteSampleListener￨2￨e listener￨2￨e ;￨2￨e private￨2￨e final￨2￨e List￨2￨e <￨2￨e SampleEvent￨2￨e >￨2￨e sampleStore￨2￨e =￨2￨e new￨2￨e ArrayList￨2￨e <￨2￨e SampleEvent￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e final￨2￨e Map￨2￨e <￨2￨e String￨2￨e ,￨2￨e StatisticalSampleResult￨2￨e >￨2￨e sampleTable￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e <￨2￨e String￨2￨e ,￨2￨e StatisticalSampleResult￨2￨e >￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e transient￨2￨e int￨2￨e numSamplesThreshold￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e transient￨2￨e long￨2￨e timeThresholdMs￨2￨e ;￨2￨e private￨2￨e volatile￨2￨e transient￨2￨e boolean￨2￨e keyOnThreadName￨2￨e ;￨2￨e private￨2￨e transient￨2￨e int￨2￨e sampleCount￨2￨e ;￨2￨e private￨2￨e transient￨2￨e long￨2￨e batchSendTime￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e @￨2￨f Deprecated￨2￨f public￨2￨f StatisticalSampleSender￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f StatisticalSampleSender￨2￨f (￨2￨f RemoteSampleListener￨3￨p listener￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f testEnded￨2￨f (￨2￨f String￨3￨p host￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f sampleOccurred￨2￨f (￨2￨f SampleEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f synchronized￨3￨f (￨3￨f sampleStore￨4￨p )￨3￨f {￨3￨f String￨4￨e key￨4￨e =￨4￨e StatisticalSampleResult￨4￨e .￨4￨e getKey￨4￨e (￨4￨e e￨4￨e ,￨4￨e keyOnThreadName￨4￨e )￨4￨e ;￨4￨e StatisticalSampleResult￨4￨e statResult￨4￨e =￨4￨e sampleTable￨4￨e .￨4￨e get￨4￨e (￨4￨e key￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j statResult￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j <START_BUG>￨5￨b statResult￨5￨b =￨5￨b new￨5￨b StatisticalSampleResult￨5￨b (￨5￨b e￨5￨b .￨5￨b getResult￨5￨b (￨5￨b )￨5￨b ,￨5￨b keyOnThreadName￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b sampleTable￨5￨e .￨5￨e put￨5￨e (￨5￨e key￨5￨e ,￨5￨e statResult￨5￨e )￨5￨e ;￨5￨e sampleStore￨5￨e .￨5￨e add￨5￨e (￨5￨e new￨5￨e SampleEvent￨5￨e (￨5￨e statResult￨5￨e ,￨5￨e e￨5￨e .￨5￨e getThreadGroup￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j statResult￨4￨e .￨4￨e add￨4￨e (￨4￨e e￨4￨e .￨4￨e getResult￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e (￨4￨e sampleCount￨4￨e )￨4￨e ++￨4￨e ;￨4￨e boolean￨4￨e sendNow￨4￨e =￨4￨e false￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c numSamplesThreshold￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c sampleCount￨6￨c )￨6￨c >=￨6￨c (￨6￨c numSamplesThreshold￨6￨c )￨6￨c )￨5￨j {￨5￨j sendNow￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j }￨4￨j long￨4￨e now￨4￨e =￨4￨e 0￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c timeThresholdMs￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j now￨5￨e =￨5￨e System￨5￨e .￨5￨e currentTimeMillis￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c batchSendTime￨6￨c )￨6￨c ==￨6￨c (￨6￨c -￨6￨c 1￨6￨c )￨6￨c )￨5￨j {￨5￨j this￨6￨e .￨6￨e batchSendTime￨6￨e =￨6￨e now￨6￨e +￨6￨e (￨6￨e timeThresholdMs￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j (￨6￨c batchSendTime￨6￨c )￨6￨c <￨6￨c now￨6￨c )￨5￨j {￨5￨j sendNow￨6￨e =￨6￨e true￨6￨e ;￨6￨e }￨5￨j }￨4￨j if￨4￨j (￨4￨j sendNow￨5￨c )￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f if￨6￨j (￨6￨j StatisticalSampleSender￨7￨c .￨7￨c log￨7￨c .￨7￨c isDebugEnabled￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j StatisticalSampleSender￨7￨e .￨7￨e log￨7￨e .￨7￨e debug￨7￨e (￨7￨e "Firing<seq2seq4repair_space>sample"￨7￨e )￨7￨e ;￨7￨e }￨6￨j sendBatch￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c timeThresholdMs￨7￨c )￨7￨c !=￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨6￨j {￨6￨j this￨7￨e .￨7￨e batchSendTime￨7￨e =￨7￨e now￨7￨e +￨7￨e (￨7￨e timeThresholdMs￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f catch￨5￨f (￨5￨f RemoteException￨6￨p err￨6￨p )￨5￨f {￨5￨f StatisticalSampleSender￨6￨e .￨6￨e log￨6￨e .￨6￨e warn￨6￨e (￨6￨e "sampleOccurred"￨6￨e ,￨6￨e err￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j }￨3￨f }￨2￨f private￨2￨f void￨2￨f sendBatch￨2￨f (￨2￨f )￨2￨f throws￨2￨f RemoteException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Object￨2￨f readResolve￨2￨f (￨2￨f )￨2￨f throws￨2￨f ObjectStreamException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractTestComparator￨1￨d <￨1￨d T￨1￨d >￨1￨d extends￨1￨d AbstractTestObject￨1￨d {￨1￨d public￨2￨f AbstractTestComparator￨2￨f (￨2￨f String￨3￨p testName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f List￨2￨f <￨2￨f T￨2￨f >￨2￨f getComparableObjectsOrdered￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f Comparator￨2￨f <￨2￨f T￨2￨f >￨2￨f makeObject￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsEmptyCollections￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f supportsFullCollections￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getCompatibilityVersion￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f reverseObjects￨2￨f (￨2￨f List￨3￨p <￨3￨p ?￨3￨p >￨3￨p list￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f randomizeObjects￨2￨f (￨2￨f List￨3￨p <￨3￨p ?￨3￨p >￨3￨p list￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f sortObjects￨2￨f (￨2￨f List￨3￨p <￨3￨p T￨3￨p >￨3￨p list￨3￨p ,￨3￨p Comparator￨3￨p <￨3￨p ?￨3￨p super￨3￨p T￨3￨p >￨3￨p comparator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testEmptyListSort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testReverseListSort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testRandomListSort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testComparatorIsSerializable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getCanonicalComparatorName￨2￨f (￨2￨f Object￨3￨p object￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b StringBuffer￨3￨b retval￨3￨b =￨3￨b new￨3￨b StringBuffer￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b retval￨3￨e .￨3￨e append￨3￨e (￨3￨e "data/test/"￨3￨e )￨3￨e ;￨3￨e String￨3￨e colName￨3￨e =￨3￨e object￨3￨e .￨3￨e getClass￨3￨e (￨3￨e )￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e ;￨3￨e colName￨3￨e =￨3￨e colName￨3￨e .￨3￨e substring￨3￨e (￨3￨e (￨3￨e (￨3￨e colName￨3￨e .￨3￨e lastIndexOf￨3￨e (￨3￨e "."￨3￨e )￨3￨e )￨3￨e +￨3￨e 1￨3￨e )￨3￨e ,￨3￨e colName￨3￨e .￨3￨e length￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e retval￨3￨e .￨3￨e append￨3￨e (￨3￨e colName￨3￨e )￨3￨e ;￨3￨e retval￨3￨e .￨3￨e append￨3￨e (￨3￨e ".version"￨3￨e )￨3￨e ;￨3￨e retval￨3￨e .￨3￨e append￨3￨e (￨3￨e getCompatibilityVersion￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e retval￨3￨e .￨3￨e append￨3￨e (￨3￨e ".obj"￨3￨e )￨3￨e ;￨3￨e return￨3￨e retval￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f void￨2￨f testComparatorCompatibility￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d AbstractAutoCompleteBehavior￨1￨d extends￨1￨d AbstractDefaultAjaxBehavior￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d CompressedResourceReference￨2￨d AUTOCOMPLETE_JS￨2￨d =￨2￨d new￨2￨d CompressedResourceReference￨2￨d (￨2￨d AutoCompleteBehavior￨2￨d .￨2￨d class￨2￨d ,￨2￨d "wicket-autocomplete.js"￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d long￨2￨d serialVersionUID￨2￨d =￨2￨d 1L￨2￨d ;￨2￨d @￨2￨d Override￨2￨d public￨2￨d void￨2￨d renderHead￨2￨d (￨2￨d IHeaderResponse￨2￨d response￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f onComponentRendered￨2￨f (￨2￨f )￨2￨f {￨2￨f Response￨3￨e response￨3￨e =￨3￨e getComponent￨3￨e (￨3￨e )￨3￨e .￨3￨e getResponse￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e String￨3￨e id￨3￨e =￨3￨e getComponent￨3￨e (￨3￨e )￨3￨e .￨3￨e getMarkupId￨3￨e (￨3￨e )￨3￨e ;￨3￨e response￨3￨e .￨3￨e write￨3￨e (￨3￨e SCRIPT_OPEN_TAG￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b response￨3￨b .￨3￨b write￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b (￨3￨b "new<seq2seq4repair_space>Wicket.Ajax.AutoComplete('"￨3￨b +￨3￨b id￨3￨b )￨3￨b +￨3￨b "','"￨3￨b )￨3￨b +￨3￨b (￨3￨b getCallbackUrl￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b +￨3￨b "');"￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b response￨3￨e .￨3￨e write￨3￨e (￨3￨e SCRIPT_CLOSE_TAG￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f respond￨2￨f (￨2￨f AjaxRequestTarget￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f abstract￨2￨f void￨2￨f onRequest￨2￨f (￨2￨f String￨3￨p input￨3￨p ,￨3￨p RequestCycle￨3￨p requestCycle￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RAttributeAttributeGroup￨1￨d extends￨1￨d org￨1￨d .￨1￨d tigris￨1￨d .￨1￨d scarab￨1￨d .￨1￨d om￨1￨d .￨1￨d BaseRAttributeAttributeGroup￨1￨d implements￨1￨d UnsecurePersistent￨1￨d {￨1￨d public￨2￨f void￨2￨f delete￨2￨f (￨2￨f ScarabUser￨2￨f user￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b ModuleEntity￨3￨b module￨3￨b =￨3￨b getAttributeGroup￨3￨b (￨3￨b )￨3￨b .￨3￨b getScarabModule￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b ScarabSecurity￨3￨e security￨3￨e =￨3￨e SecurityFactory￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j security￨4￨c .￨4￨c hasPermission￨4￨c (￨4￨c ITEM__APPROVE￨4￨c ,￨4￨c user￨4￨c ,￨4￨c module￨4￨c )￨4￨c )￨3￨j {￨3￨j Criteria￨4￨e c￨4￨e =￨4￨e new￨4￨e Criteria￨4￨e (￨4￨e )￨4￨e .￨4￨e add￨4￨e (￨4￨e GROUP_ID￨4￨e ,￨4￨e getGroupId￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e add￨4￨e (￨4￨e ATTRIBUTE_ID￨4￨e ,￨4￨e getAttributeId￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e RAttributeAttributeGroupPeer￨4￨e .￨4￨e doDelete￨4￨e (￨4￨e c￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e new￨4￨e org￨4￨e .￨4￨e tigris￨4￨e .￨4￨e scarab￨4￨e .￨4￨e util￨4￨e .￨4￨e ScarabException￨4￨e (￨4￨e ScarabConstants￨4￨e .￨4￨e NO_PERMISSION_MESSAGE￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParsedRaDeploymentProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d public￨2￨f ParsedRaDeploymentProcessor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f deploy￨2￨f (￨2￨f DeploymentPhaseContext￨2￨f phaseContext￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ConnectorXmlDescriptor￨3￨e connectorXmlDescriptor￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e ATTACHMENT_KEY￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e registration￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e baseRegistration￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MUTABLE_REGISTRATION_ATTACHMENT￨3￨e )￨3￨e ;￨3￨e final￨3￨e Resource￨3￨e deploymentResource￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e DEPLOYMENT_RESOURCE￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j connectorXmlDescriptor￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j final￨3￨e ServiceTarget￨3￨e serviceTarget￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getServiceTarget￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e DeploymentUnit￨3￨e deploymentUnit￨3￨e =￨3￨e phaseContext￨3￨e .￨3￨e getDeploymentUnit￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c deploymentUnit￨4￨c .￨4￨c getParent￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j registration￨4￨e =￨4￨e baseRegistration￨4￨e .￨4￨e getSubModel￨4￨e (￨4￨e PathAddress￨4￨e .￨4￨e pathAddress￨4￨e (￨4￨e PathElement￨4￨e .￨4￨e pathElement￨4￨e (￨4￨e "subdeployment"￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j registration￨4￨e =￨4￨e baseRegistration￨4￨e ;￨4￨e }￨3￨j final￨3￨e IronJacamarXmlDescriptor￨3￨e ironJacamarXmlDescriptor￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e IronJacamarXmlDescriptor￨3￨e .￨3￨e ATTACHMENT_KEY￨3￨e )￨3￨e ;￨3￨e final￨3￨e Module￨3￨e module￨3￨e =￨3￨e deploymentUnit￨3￨e .￨3￨e getAttachment￨3￨e (￨3￨e MODULE￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j module￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e ROOT_LOGGER￨4￨e .￨4￨e failedToGetModuleAttachment￨4￨e (￨4￨e phaseContext￨4￨e .￨4￨e getDeploymentUnit￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j DEPLOYMENT_CONNECTOR_LOGGER￨3￨e .￨3￨e debugf￨3￨e (￨3￨e "ParsedRaDeploymentProcessor:<seq2seq4repair_space>Processing=%s"￨3￨e ,￨3￨e deploymentUnit￨3￨e )￨3￨e ;￨3￨e final￨3￨e ClassLoader￨3￨e classLoader￨3￨e =￨3￨e module￨3￨e .￨3￨e getClassLoader￨3￨e (￨3￨e )￨3￨e ;￨3￨e Map￨3￨e <￨3￨e ResourceRoot￨3￨e ,￨3￨e Index￨3￨e >￨3￨e annotationIndexes￨3￨e =￨3￨e AnnotationIndexUtils￨3￨e .￨3￨e getAnnotationIndexes￨3￨e (￨3￨e deploymentUnit￨3￨e )￨3￨e ;￨3￨e ServiceBuilder￨3￨e builder￨3￨e =￨3￨e ParsedRaDeploymentProcessor￨3￨e .￨3￨e process￨3￨e (￨3￨e connectorXmlDescriptor￨3￨e ,￨3￨e ironJacamarXmlDescriptor￨3￨e ,￨3￨e classLoader￨3￨e ,￨3￨e serviceTarget￨3￨e ,￨3￨e annotationIndexes￨3￨e ,￨3￨e deploymentUnit￨3￨e .￨3￨e getServiceName￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j builder￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j String￨4￨e bootstrapCtx￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c ironJacamarXmlDescriptor￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c ironJacamarXmlDescriptor￨5￨c .￨5￨c getIronJacamar￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c ironJacamarXmlDescriptor￨5￨c .￨5￨c getIronJacamar￨5￨c (￨5￨c )￨5￨c .￨5￨c getBootstrapContext￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨5￨c )￨4￨j {￨4￨j bootstrapCtx￨5￨e =￨5￨e ironJacamarXmlDescriptor￨5￨e .￨5￨e getIronJacamar￨5￨e (￨5￨e )￨5￨e .￨5￨e getBootstrapContext￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j bootstrapCtx￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j bootstrapCtx￨5￨e =￨5￨e "default"￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c registration￨5￨c .￨5￨c isAllowsOverride￨5￨c (￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c registration￨5￨c .￨5￨c getOverrideModel￨5￨c (￨5￨c deploymentUnit￨5￨c .￨5￨c getName￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨5￨c )￨4￨j {￨4￨j registration￨5￨f .￨5￨f registerOverrideModel￨5￨f (￨5￨f deploymentUnit￨5￨f .￨5￨f getName￨5￨f (￨5￨f )￨5￨f ,￨5￨f new￨5￨f OverrideDescriptionProvider￨5￨f (￨5￨f )￨5￨f {￨5￨f @￨6￨f Override￨6￨f public￨6￨f Map￨6￨f <￨6￨f String￨6￨f ,￨6￨f ModelNode￨6￨f >￨6￨f getAttributeOverrideDescriptions￨6￨f (￨6￨f Locale￨7￨p locale￨7￨p )￨6￨f {￨6￨f return￨7￨e Collections￨7￨e .￨7￨e emptyMap￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f @￨6￨f Override￨6￨f public￨6￨f Map￨6￨f <￨6￨f String￨6￨f ,￨6￨f ModelNode￨6￨f >￨6￨f getChildTypeOverrideDescriptions￨6￨f (￨6￨f Locale￨7￨p locale￨7￨p )￨6￨f {￨6￨f return￨7￨e Collections￨7￨e .￨7￨e emptyMap￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨f )￨5￨e ;￨5￨e }￨4￨j <START_BUG>￨4￨b builder￨4￨b .￨4￨b addListener￨4￨b (￨4￨b new￨4￨b AbstractResourceAdapterDeploymentServiceListener￨4￨b (￨4￨b registration￨4￨b ,￨4￨b deploymentUnit￨4￨b .￨4￨b getName￨4￨b (￨4￨b )￨4￨b ,￨4￨b deploymentResource￨4￨b ,￨4￨b bootstrapCtx￨4￨b ,￨4￨b deploymentUnit￨4￨b .￨4￨b getName￨4￨b (￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b @￨4￨f Override￨4￨f protected￨4￨f void￨4￨f registerIronjacamar￨4￨f (￨4￨f final￨5￨p ServiceController￨5￨p <￨5￨p ?￨5￨p extends￨5￨p Object￨5￨p >￨5￨p controller￨5￨p ,￨5￨p final￨5￨p ManagementResourceRegistration￨5￨p subRegistration￨5￨p ,￨5￨p final￨5￨p Resource￨5￨p subsystemResource￨5￨p )￨4￨f {￨4￨f try￨5￨f (￨5￨f )￨5￨f {￨5￨f subRegistration￨6￨e .￨6￨e registerSubModel￨6￨e (￨6￨e new￨6￨e IronJacamarResourceDefinition￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f IllegalArgumentException￨6￨p iae￨6￨p )￨5￨f {￨5￨f }￨5￨f AS7MetadataRepository￨5￨e mdr￨5￨e =￨5￨e (￨5￨e (￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e connector￨5￨e .￨5￨e services￨5￨e .￨5￨e resourceadapters￨5￨e .￨5￨e deployment￨5￨e .￨5￨e ResourceAdapterDeploymentService￨5￨e )￨5￨e (￨5￨e controller￨5￨e .￨5￨e getService￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e .￨5￨e getMdr￨5￨e (￨5￨e )￨5￨e ;￨5￨e INSTANCE￨5￨e .￨5￨e execute￨5￨e (￨5￨e subsystemResource￨5￨e ,￨5￨e mdr￨5￨e )￨5￨e ;￨5￨e }￨4￨f @￨4￨f Override￨4￨f protected￨4￨f CommonDeployment￨4￨f getDeploymentMetadata￨4￨f (￨4￨f final￨5￨p ServiceController￨5￨p <￨5￨p ?￨5￨p extends￨5￨p Object￨5￨p >￨5￨p controller￨5￨p )￨4￨f {￨4￨f return￨5￨e (￨5￨e (￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e connector￨5￨e .￨5￨e services￨5￨e .￨5￨e resourceadapters￨5￨e .￨5￨e deployment￨5￨e .￨5￨e ResourceAdapterDeploymentService￨5￨e )￨5￨e (￨5￨e controller￨5￨e .￨5￨e getService￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e .￨5￨e getRaDeployment￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨4￨e )￨4￨e ;￨4￨e builder￨4￨e .￨4￨e setInitialMode￨4￨e (￨4￨e ACTIVE￨4￨e )￨4￨e .￨4￨e install￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f ServiceBuilder￨2￨f process￨2￨f (￨2￨f final￨2￨f ConnectorXmlDescriptor￨2￨f connectorXmlDescriptor￨2￨f ,￨2￨f final￨2￨f IronJacamarXmlDescriptor￨2￨f ironJacamarXmlDescriptor￨2￨f ,￨2￨f final￨2￨f ClassLoader￨2￨f classLoader￨2￨f ,￨2￨f final￨2￨f ServiceTarget￨2￨f serviceTarget￨2￨f ,￨2￨f final￨2￨f Map￨2￨f <￨2￨f ResourceRoot￨2￨f ,￨2￨f Index￨2￨f >￨2￨f annotationIndexes￨2￨f ,￨2￨f final￨2￨f ServiceName￨2￨f duServiceName￨2￨f )￨2￨f throws￨2￨f DeploymentUnitProcessingException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f final￨3￨p DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SendAllMessagesCommand￨1￨d extends￨1￨d FolderCommand￨1￨d {￨1￨d protected￨2￨e SendListManager￨2￨e sendListManager￨2￨e =￨2￨e new￨2￨e SendListManager￨2￨e (￨2￨e )￨2￨e ;￨2￨e protected￨2￨e OutboxFolder￨2￨e outboxFolder￨2￨e ;￨2￨e public￨2￨f SendAllMessagesCommand￨2￨f (￨2￨f FrameController￨3￨p frameController￨3￨p ,￨3￨p DefaultCommandReference￨3￨p [￨3￨p ]￨3￨p references￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f Worker￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f FolderCommandReference￨3￨e [￨3￨e ]￨3￨e r￨3￨e =￨3￨e (￨3￨e (￨3￨e FolderCommandReference￨3￨e [￨3￨e ]￨3￨e )￨3￨e (￨3￨e getReferences￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e outboxFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e OutboxFolder￨3￨e )￨3￨e (￨3￨e r￨3￨e [￨3￨e 0￨3￨e ]￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e Object￨3￨e [￨3￨e ]￨3￨e uids￨3￨e =￨3￨e outboxFolder￨3￨e .￨3￨e getUids￨3￨e (￨3￨e worker￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c uids￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b outboxFolder￨4￨b .￨4￨b exists￨4￨b (￨4￨b uids￨4￨b [￨4￨b i￨4￨b ]￨4￨b )￨4￨b )￨4￨b ==￨4￨b true￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b SendableMessage￨4￨e message￨4￨e =￨4￨e (￨4￨e (￨4￨e SendableMessage￨4￨e )￨4￨e (￨4￨e outboxFolder￨4￨e .￨4￨e getMessage￨4￨e (￨4￨e uids￨4￨e [￨4￨e i￨4￨e ]￨4￨e ,￨4￨e worker￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e sendListManager￨4￨e .￨4￨e add￨4￨e (￨4￨e message￨4￨e )￨4￨e ;￨4￨e }￨3￨l int￨3￨e actAccountUid￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e Vector￨3￨e sentList￨3￨e =￨3￨e new￨3￨e Vector￨3￨e (￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e open￨3￨e =￨3￨e false￨3￨e ;￨3￨e SMTPServer￨3￨e smtpServer￨3￨e =￨3￨e null￨3￨e ;￨3￨e Folder￨3￨e sentFolder￨3￨e =￨3￨e null￨3￨e ;￨3￨e while￨3￨l (￨3￨l sendListManager￨4￨c .￨4￨c hasMoreMessages￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l SendableMessage￨4￨e message￨4￨e =￨4￨e sendListManager￨4￨e .￨4￨e getNextMessage￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c message￨5￨c .￨5￨c getAccountUid￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c actAccountUid￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c sentList￨6￨c .￨6￨c size￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c 0￨6￨c )￨5￨j {￨5￨j sentList￨6￨e .￨6￨e clear￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j actAccountUid￨5￨e =￨5￨e message￨5￨e .￨5￨e getAccountUid￨5￨e (￨5￨e )￨5￨e ;￨5￨e AccountItem￨5￨e accountItem￨5￨e =￨5￨e MailConfig￨5￨e .￨5￨e getAccountList￨5￨e (￨5￨e )￨5￨e .￨5￨e uidGet￨5￨e (￨5￨e actAccountUid￨5￨e )￨5￨e ;￨5￨e sentFolder￨5￨e =￨5￨e (￨5￨e (￨5￨e Folder￨5￨e )￨5￨e (￨5￨e treeModel￨5￨e .￨5￨e getFolder￨5￨e (￨5￨e Integer￨5￨e .￨5￨e parseInt￨5￨e (￨5￨e accountItem￨5￨e .￨5￨e getSpecialFoldersItem￨5￨e (￨5￨e )￨5￨e .￨5￨e getSent￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e smtpServer￨5￨e =￨5￨e new￨5￨e SMTPServer￨5￨e (￨5￨e accountItem￨5￨e )￨5￨e ;￨5￨e open￨5￨e =￨5￨e smtpServer￨5￨e .￨5￨e openConnection￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j open￨5￨c )￨4￨j {￨4￨j smtpServer￨5￨e .￨5￨e sendMessage￨5￨e (￨5￨e message￨5￨e )￨5￨e ;￨5￨e sentList￨5￨e .￨5￨e add￨5￨e (￨5￨e message￨5￨e .￨5￨e getHeader￨5￨e (￨5￨e )￨5￨e .￨5￨e get￨5￨e (￨5￨e "columba.uid"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j (￨4￨c sentList￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c >￨4￨c 0￨4￨c )￨3￨j {￨3￨j moveToSentFolder￨4￨e (￨4￨e sentList￨4￨e ,￨4￨e sentFolder￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f protected￨2￨f void￨2￨f moveToSentFolder￨2￨f (￨2￨f Vector￨3￨p v￨3￨p ,￨3￨p Folder￨3￨p sentFolder￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ContentConflictsUnitTestCase￨1￨d extends￨1￨d AbstractTaskTestCase￨1￨d {￨1￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testApply￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testRollback￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f assertConflicts￨2￨f (￨2￨f CommandLineException￨3￨p e￨3￨p ,￨3￨p String￨3￨p ...￨3￨p conflicts￨3￨p )￨2￨f {￨2￨f final￨3￨e StringBuilder￨3￨e buf￨3￨e =￨3￨e new￨3￨e StringBuilder￨3￨e (￨3￨e )￨3￨e ;￨3￨e buf￨3￨e .￨3￨e append￨3￨e (￨3￨e "Conflicts<seq2seq4repair_space>detected:<seq2seq4repair_space>"￨3￨e )￨3￨e ;￨3￨e int￨3￨e i￨3￨e =￨3￨e 0￨3￨e ;￨3￨e while￨3￨l (￨3￨l i￨4￨c <￨4￨c (￨4￨c conflicts￨4￨c .￨4￨c length￨4￨c )￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b buf￨4￨b .￨4￨b append￨4￨b (￨4￨b conflicts￨4￨b [￨4￨b (￨4￨b i￨4￨b ++￨4￨b )￨4￨b ]￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j i￨5￨c <￨5￨c (￨5￨c conflicts￨5￨c .￨5￨c length￨5￨c )￨5￨c )￨4￨j {￨4￨j buf￨5￨e .￨5￨e append￨5￨e (￨5￨e ",<seq2seq4repair_space>"￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l assertEquals￨3￨e (￨3￨e e￨3￨e .￨3￨e getMessage￨3￨e (￨3￨e )￨3￨e ,￨3￨e buf￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
@￨1￨d RunWith￨1￨d (￨1￨d Arquillian￨1￨d .￨1￨d class￨1￨d )￨1￨d public￨1￨d class￨1￨d RestEasyIntegrationTestCase￨1￨d {￨1￨d static￨2￨e final￨2￨e String￨2￨e DEPLOYMENT_NAME￨2￨e =￨2￨e "resteasy-osgi-client.war"￨2￨e ;￨2￨e @￨2￨e ArquillianResource￨2￨e public￨2￨e Deployer￨2￨e deployer￨2￨e ;￨2￨e @￨2￨e Inject￨2￨e public￨2￨e Bundle￨2￨e bundle￨2￨e ;￨2￨e @￨2￨f Deployment￨2￨f public￨2￨f static￨2￨f JavaArchive￨2￨f createDeployment￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Deployment￨2￨f (￨2￨f name￨2￨f =￨2￨f RestEasyIntegrationTestCase￨2￨f .￨2￨f DEPLOYMENT_NAME￨2￨f ,￨2￨f managed￨2￨f =￨2￨f false￨2￨f ,￨2￨f testable￨2￨f =￨2￨f false￨2￨f )￨2￨f public￨2￨f static￨2￨f WebArchive￨2￨f endpointWar￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨d WebArchive￨3￨d archive￨3￨d =￨3￨d ShrinkWrap￨3￨d .￨3￨d create￨3￨d (￨3￨d WebArchive￨3￨d .￨3￨d class￨3￨d ,￨3￨d RestEasyIntegrationTestCase￨3￨d .￨3￨d DEPLOYMENT_NAME￨3￨d )￨3￨d ;￨3￨d archive￨3￨d .￨3￨d addClass￨3￨d (￨3￨d SimpleRestEndpoint￨3￨d .￨3￨d class￨3￨d )￨3￨d ;￨3￨d <START_BUG>￨3￨d archive￨3￨d .￨3￨d setWebXML￨3￨d (￨3￨d "osgi/jaxrs/web.xml"￨3￨d )￨3￨d ;￨3￨d <END_BUG>￨3￨d archive￨3￨d .￨3￨d add￨3￨d (￨3￨d new￨3￨d Asset￨3￨d (￨3￨d )￨3￨d {￨3￨d public￨4￨f InputStream￨4￨f openStream￨4￨f (￨4￨f )￨4￨f {￨4￨f ManifestBuilder￨5￨e builder￨5￨e =￨5￨e ManifestBuilder￨5￨e .￨5￨e newInstance￨5￨e (￨5￨e )￨5￨e ;￨5￨e builder￨5￨e .￨5￨e addManifestHeader￨5￨e (￨5￨e "Dependencies"￨5￨e ,￨5￨e "org.osgi.core,deployment.jaxrs-osgi-target:0.0.0"￨5￨e )￨5￨e ;￨5￨e return￨5￨e builder￨5￨e .￨5￨e openStream￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨d ,￨3￨e JarFile￨3￨e .￨3￨e MANIFEST_NAME￨3￨e )￨3￨e ;￨3￨e return￨3￨e archive￨3￨e ;￨3￨e }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f testServiceAccess￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getHttpResponse￨2￨f (￨2￨f String￨2￨f message￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ExecutionException￨2￨f ,￨2￨f TimeoutException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f formatPossibleIpv6Address￨2￨f (￨2￨f String￨3￨p address￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TreeView￨1￨d extends￨1￨d JTree￨1￨d {￨1￨d private￨2￨e TreePath￨2￨e selectedPathBeforeDrag￨2￨e ;￨2￨e private￨2￨e TreePath￨2￨e dropTargetPath￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isInDndMode￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e Timer￨2￨e dndAutoExpanderTimer￨2￨e ;￨2￨e public￨2￨f TreeView￨2￨f (￨2￨f TreeModel￨3￨p model￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f expand￨2￨f (￨2￨f AbstractFolder￨3￨p parent￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b FolderItem￨3￨b item￨3￨b =￨3￨b parent￨3￨b .￨3￨b getFolderItem￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b XmlElement￨3￨e property￨3￨e =￨3￨e item￨3￨e .￨3￨e getElement￨3￨e (￨3￨e "property"￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j property￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j String￨4￨e expanded￨4￨e =￨4￨e property￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e "expanded"￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j expanded￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j expanded￨5￨e =￨5￨e "true"￨5￨e ;￨5￨e }￨4￨j int￨4￨e row￨4￨e =￨4￨e getRowForPath￨4￨e (￨4￨e new￨4￨e TreePath￨4￨e (￨4￨e parent￨4￨e .￨4￨e getPath￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j expanded￨5￨c .￨5￨c equals￨5￨c (￨5￨c "true"￨5￨c )￨5￨c )￨4￨j {￨4￨j expandRow￨5￨e (￨5￨e row￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c parent￨4￨c .￨4￨c getChildCount￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l AbstractFolder￨4￨e child￨4￨e =￨4￨e (￨4￨e (￨4￨e AbstractFolder￨4￨e )￨4￨e (￨4￨e parent￨4￨e .￨4￨e getChildAt￨4￨e (￨4￨e i￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e expand￨4￨e (￨4￨e child￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f public￨2￨f AbstractFolder￨2￨f getDropTargetFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f resetDropTargetFolder￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f AbstractFolder￨2￨f getSelectedNodeBeforeDragAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isInDndAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f setUpDndAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f resetDndAction￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d DropHandler￨2￨d extends￨2￨d DropTarget￨2￨d {￨2￨d private￨3￨e boolean￨3￨e canImport￨3￨e ;￨3￨e private￨3￨e Point￨3￨e location￨3￨e ;￨3￨e public￨3￨f void￨3￨f dragOver￨3￨f (￨3￨f DropTargetDragEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f dragEnter￨3￨f (￨3￨f DropTargetDragEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f dragExit￨3￨f (￨3￨f DropTargetEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f drop￨3￨f (￨3￨f DropTargetDropEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f dropActionChanged￨3￨f (￨3￨f DropTargetDragEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d class￨2￨d TreeLeafActionListener￨2￨d implements￨2￨d ActionListener￨2￨d {￨2￨d private￨3￨e JTree￨3￨e treeParent￨3￨e ;￨3￨e public￨3￨f TreeLeafActionListener￨3￨f (￨3￨f JTree￨4￨p parent￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f actionPerformed￨3￨f (￨3￨f ActionEvent￨4￨p e￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ExampleRunner￨1￨d {￨1￨d public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ModelControllerClient￨3￨e client￨3￨e =￨3￨e Factory￨3￨e .￨3￨e create￨3￨e (￨3￨e "localhost"￨3￨e ,￨3￨e 9999￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f final￨4￨e ModelNode￨4￨e domainOp￨4￨e =￨4￨e new￨4￨e ModelNode￨4￨e (￨4￨e )￨4￨e ;￨4￨e domainOp￨4￨e .￨4￨e get￨4￨e (￨4￨e OP￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e READ_RESOURCE_OPERATION￨4￨e )￨4￨e ;￨4￨e domainOp￨4￨e .￨4￨e get￨4￨e (￨4￨e OP_ADDR￨4￨e )￨4￨e .￨4￨e setEmptyList￨4￨e (￨4￨e )￨4￨e ;￨4￨e domainOp￨4￨e .￨4￨e get￨4￨e (￨4￨e RECURSIVE￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e domainOp￨4￨e .￨4￨e get￨4￨e (￨4￨e "proxies"￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e ModelNode￨4￨e result￨4￨e =￨4￨e client￨4￨e .￨4￨e execute￨4￨e (￨4￨e domainOp￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c SUCCESS￨5￨c .￨5￨c equals￨5￨c (￨5￨c result￨5￨c .￨5￨c get￨5￨c (￨5￨c OUTCOME￨5￨c )￨5￨c .￨5￨c asString￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e controller￨5￨e .￨5￨e OperationFailedException￨5￨e (￨5￨e result￨5￨e .￨5￨e get￨5￨e (￨5￨e FAILURE_DESCRIPTION￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "--<seq2seq4repair_space>domain<seq2seq4repair_space>configuration"￨4￨e )￨4￨e ;￨4￨e final￨4￨e ModelNode￨4￨e domainResult￨4￨e =￨4￨e result￨4￨e .￨4￨e get￨4￨e (￨4￨e RESULT￨4￨e )￨4￨e .￨4￨e clone￨4￨e (￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e domainResult￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "--"￨4￨e )￨4￨e ;￨4￨e final￨4￨e ModelNode￨4￨e hostOp￨4￨e =￨4￨e new￨4￨e ModelNode￨4￨e (￨4￨e )￨4￨e ;￨4￨e hostOp￨4￨e .￨4￨e get￨4￨e (￨4￨e OP￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e READ_RESOURCE_OPERATION￨4￨e )￨4￨e ;￨4￨e hostOp￨4￨e .￨4￨e get￨4￨e (￨4￨e OP_ADDR￨4￨e )￨4￨e .￨4￨e setEmptyList￨4￨e (￨4￨e )￨4￨e .￨4￨e add￨4￨e (￨4￨e HOST￨4￨e ,￨4￨e "local"￨4￨e )￨4￨e ;￨4￨e hostOp￨4￨e .￨4￨e get￨4￨e (￨4￨e RECURSIVE￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e hostOp￨4￨e .￨4￨e get￨4￨e (￨4￨e "proxies"￨4￨e )￨4￨e .￨4￨e set￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e result￨4￨e =￨4￨e client￨4￨e .￨4￨e execute￨4￨e (￨4￨e hostOp￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j !￨5￨c (￨5￨c SUCCESS￨5￨c .￨5￨c equals￨5￨c (￨5￨c result￨5￨c .￨5￨c get￨5￨c (￨5￨c OUTCOME￨5￨c )￨5￨c .￨5￨c asString￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j throw￨5￨e new￨5￨e org￨5￨e .￨5￨e jboss￨5￨e .￨5￨e as￨5￨e .￨5￨e controller￨5￨e .￨5￨e OperationFailedException￨5￨e (￨5￨e result￨5￨e .￨5￨e get￨5￨e (￨5￨e FAILURE_DESCRIPTION￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "--<seq2seq4repair_space>host<seq2seq4repair_space>configuration"￨4￨e )￨4￨e ;￨4￨e final￨4￨e ModelNode￨4￨e hostResult￨4￨e =￨4￨e result￨4￨e .￨4￨e get￨4￨e (￨4￨e RESULT￨4￨e )￨4￨e .￨4￨e clone￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b System￨4￨b .￨4￨b out￨4￨b .￨4￨b println￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b System￨4￨e .￨4￨e out￨4￨e .￨4￨e println￨4￨e (￨4￨e "--"￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f StreamUtils￨4￨e .￨4￨e safeClose￨4￨e (￨4￨e client￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TarArchiveInputStream￨1￨d extends￨1￨d ArchiveInputStream￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e int￨2￨e SMALL_BUFFER_SIZE￨2￨e =￨2￨e 256￨2￨e ;￨2￨e private￨2￨e final￨2￨e byte￨2￨e [￨2￨e ]￨2￨e SMALL_BUF￨2￨e =￨2￨e new￨2￨e byte￨2￨e [￨2￨e TarArchiveInputStream￨2￨e .￨2￨e SMALL_BUFFER_SIZE￨2￨e ]￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e recordSize￨2￨e ;￨2￨e private￨2￨e final￨2￨e int￨2￨e blockSize￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e hasHitEOF￨2￨e ;￨2￨e private￨2￨e long￨2￨e entrySize￨2￨e ;￨2￨e private￨2￨e long￨2￨e entryOffset￨2￨e ;￨2￨e private￨2￨e final￨2￨e InputStream￨2￨e is￨2￨e ;￨2￨e private￨2￨e TarArchiveEntry￨2￨e currEntry￨2￨e ;￨2￨e private￨2￨e final￨2￨e ZipEncoding￨2￨e encoding￨2￨e ;￨2￨e public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p int￨3￨p blockSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p int￨3￨p blockSize￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p int￨3￨p blockSize￨3￨p ,￨3￨p int￨3￨p recordSize￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveInputStream￨2￨f (￨2￨f InputStream￨3￨p is￨3￨p ,￨3￨p int￨3￨p blockSize￨3￨p ,￨3￨p int￨3￨p recordSize￨3￨p ,￨3￨p String￨3￨p encoding￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f close￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getRecordSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f available￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f long￨2￨f skip￨2￨f (￨2￨f long￨2￨f numToSkip￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f synchronized￨2￨f void￨2￨f reset￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveEntry￨2￨f getNextTarEntry￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f skipRecordPadding￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getLongNameData￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f byte￨2￨f [￨2￨f ]￨2￨f getRecord￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isEOFRecord￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p record￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f byte￨2￨f [￨2￨f ]￨2￨f readRecord￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f paxHeaders￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f Map￨2￨f <￨2￨f String￨2￨f ,￨2￨f String￨2￨f >￨2￨f parsePaxHeaders￨2￨f (￨2￨f InputStream￨2￨f i￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e String￨3￨e >￨3￨e headers￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e String￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l true￨4￨c )￨3￨l {￨3￨l int￨4￨e ch￨4￨e ;￨4￨e int￨4￨e len￨4￨e =￨4￨e 0￨4￨e ;￨4￨e int￨4￨e read￨4￨e =￨4￨e 0￨4￨e ;￨4￨e while￨4￨l (￨4￨l (￨5￨c ch￨5￨c =￨5￨c i￨5￨c .￨5￨c read￨5￨c (￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨l {￨4￨l read￨5￨e ++￨5￨e ;￨5￨e if￨5￨j (￨5￨j ch￨6￨c ==￨6￨c '<seq2seq4repair_space>'￨6￨c )￨5￨j {￨5￨j ByteArrayOutputStream￨6￨e coll￨6￨e =￨6￨e new￨6￨e ByteArrayOutputStream￨6￨e (￨6￨e )￨6￨e ;￨6￨e while￨6￨l (￨6￨l (￨7￨c ch￨7￨c =￨7￨c i￨7￨c .￨7￨c read￨7￨c (￨7￨c )￨7￨c )￨7￨c !=￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨6￨l {￨6￨l read￨7￨e ++￨7￨e ;￨7￨e if￨7￨j (￨7￨j ch￨8￨c ==￨8￨c '='￨8￨c )￨7￨j {￨7￨j String￨8￨e keyword￨8￨e =￨8￨e coll￨8￨e .￨8￨e toString￨8￨e (￨8￨e UTF_8￨8￨e )￨8￨e ;￨8￨e byte￨8￨e [￨8￨e ]￨8￨e rest￨8￨e =￨8￨e new￨8￨e byte￨8￨e [￨8￨e len￨8￨e -￨8￨e read￨8￨e ]￨8￨e ;￨8￨e <START_BUG>￨8￨b int￨8￨b got￨8￨b =￨8￨b i￨8￨b .￨8￨b read￨8￨b (￨8￨b rest￨8￨b )￨8￨b ;￨8￨b <END_BUG>￨8￨b if￨8￨j (￨8￨j got￨9￨c !=￨9￨c (￨9￨c len￨9￨c -￨9￨c read￨9￨c )￨9￨c )￨8￨j {￨8￨j throw￨9￨e new￨9￨e IOException￨9￨e (￨9￨e (￨9￨e (￨9￨e (￨9￨e (￨9￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>read<seq2seq4repair_space>"￨9￨e +￨9￨e "Paxheader.<seq2seq4repair_space>Expected<seq2seq4repair_space>"￨9￨e )￨9￨e +￨9￨e (￨9￨e len￨9￨e -￨9￨e read￨9￨e )￨9￨e )￨9￨e +￨9￨e "<seq2seq4repair_space>bytes,<seq2seq4repair_space>read<seq2seq4repair_space>"￨9￨e )￨9￨e +￨9￨e got￨9￨e )￨9￨e )￨9￨e ;￨9￨e }￨8￨j String￨8￨e value￨8￨e =￨8￨e new￨8￨e String￨8￨e (￨8￨e rest￨8￨e ,￨8￨e 0￨8￨e ,￨8￨e (￨8￨e (￨8￨e len￨8￨e -￨8￨e read￨8￨e )￨8￨e -￨8￨e 1￨8￨e )￨8￨e ,￨8￨e CharsetNames￨8￨e .￨8￨e UTF_8￨8￨e )￨8￨e ;￨8￨e headers￨8￨e .￨8￨e put￨8￨e (￨8￨e keyword￨8￨e ,￨8￨e value￨8￨e )￨8￨e ;￨8￨e break￨8￨e ;￨8￨e }￨7￨j coll￨7￨e .￨7￨e write￨7￨e (￨7￨e (￨7￨e (￨7￨e byte￨7￨e )￨7￨e (￨7￨e ch￨7￨e )￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨l break￨6￨e ;￨6￨e }￨5￨j len￨5￨e *=￨5￨e 10￨5￨e ;￨5￨e len￨5￨e +=￨5￨e ch￨5￨e -￨5￨e '0'￨5￨e ;￨5￨e }￨4￨l if￨4￨j (￨4￨j ch￨5￨c ==￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j }￨3￨l return￨3￨e headers￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f applyPaxHeadersToCurrentEntry￨2￨f (￨2￨f Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p String￨3￨p >￨3￨p headers￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readGNUSparse￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ArchiveEntry￨2￨f getNextEntry￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f tryToConsumeSecondEOFRecord￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f read￨2￨f (￨2￨f byte￨2￨f [￨2￨f ]￨2￨f buf￨2￨f ,￨2￨f int￨2￨f offset￨2￨f ,￨2￨f int￨2￨f numToRead￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f canReadEntryData￨2￨f (￨2￨f ArchiveEntry￨3￨p ae￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TarArchiveEntry￨2￨f getCurrentEntry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f setCurrentEntry￨2￨f (￨2￨f TarArchiveEntry￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f boolean￨2￨f isAtEOF￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f setAtEOF￨2￨f (￨2￨f boolean￨3￨p b￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f consumeRemainderOfLastBlock￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f matches￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p signature￨3￨p ,￨3￨p int￨3￨p length￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ChannelInstanceResourceDefinition￨1￨d extends￨1￨d SimpleResourceDefinition￨1￨d {￨1￨d static￨2￨f PathElement￨2￨f pathElement￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e boolean￨2￨e runtimeRegistration￨2￨e ;￨2￨e ChannelInstanceResourceDefinition￨2￨f (￨2￨f String￨3￨p channelName￨3￨p ,￨3￨p boolean￨3￨p runtimeRegistration￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f registerAttributes￨2￨f (￨2￨f ManagementResourceRegistration￨3￨p registration￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f addChannelProtocolMetricsRegistrationStep￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p String￨3￨p channelName￨3￨p ,￨3￨p String￨3￨p stackName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f registerChannelProtocolMetrics￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f String￨2￨f channelName￨2￨f ,￨2￨f String￨2￨f stackName￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j stackName￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j stackName￨4￨e =￨4￨e ChannelInstanceResourceDefinition￨4￨e .￨4￨e getDefaultStack￨4￨e (￨4￨e context￨4￨e )￨4￨e ;￨4￨e }￨3￨j PathAddress￨3￨e address￨3￨e =￨3￨e PathAddress￨3￨e .￨3￨e pathAddress￨3￨e (￨3￨e PATH￨3￨e )￨3￨e ;￨3￨e PathAddress￨3￨e stackAddress￨3￨e =￨3￨e address￨3￨e .￨3￨e append￨3￨e (￨3￨e StackResourceDefinition￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e stackName￨3￨e )￨3￨e )￨3￨e ;￨3￨e ModelNode￨3￨e stack￨3￨e =￨3￨e Tools￨3￨e .￨3￨e readModel￨3￨e (￨3￨e context￨3￨e .￨3￨e readResourceFromRoot￨3￨e (￨3￨e stackAddress￨3￨e ,￨3￨e true￨3￨e )￨3￨e )￨3￨e ;￨3￨e ModelNode￨3￨e transport￨3￨e =￨3￨e stack￨3￨e .￨3￨e get￨3￨e (￨3￨e TRANSPORT￨3￨e ,￨3￨e TRANSPORT_NAME￨3￨e )￨3￨e .￨3￨e clone￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b String￨3￨b transportName￨3￨b =￨3￨b transport￨3￨b .￨3￨b get￨3￨b (￨3￨b TYPE￨3￨b )￨3￨b .￨3￨b asString￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b ResourceDefinition￨3￨e transportDefinition￨3￨e =￨3￨e ChannelInstanceResourceDefinition￨3￨e .￨3￨e getProtocolMetricResourceDefinition￨3￨e (￨3￨e context￨3￨e ,￨3￨e channelName￨3￨e ,￨3￨e transportName￨3￨e )￨3￨e ;￨3￨e List￨3￨e <￨3￨e ModelNode￨3￨e >￨3￨e protocolOrdering￨3￨e =￨3￨e stack￨3￨e .￨3￨e get￨3￨e (￨3￨e PROTOCOLS￨3￨e )￨3￨e .￨3￨e clone￨3￨e (￨3￨e )￨3￨e .￨3￨e asList￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e List￨3￨e <￨3￨e ResourceDefinition￨3￨e >￨3￨e protocolDefinitions￨3￨e =￨3￨e new￨3￨e ArrayList￨3￨e <￨3￨e ResourceDefinition￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l ModelNode￨4￨c protocolNameModelNode￨4￨c :￨4￨c protocolOrdering￨4￨c )￨3￨l {￨3￨l String￨4￨e protocolName￨4￨e =￨4￨e protocolNameModelNode￨4￨e .￨4￨e asString￨4￨e (￨4￨e )￨4￨e ;￨4￨e ResourceDefinition￨4￨e protocolDefinition￨4￨e =￨4￨e ChannelInstanceResourceDefinition￨4￨e .￨4￨e getProtocolMetricResourceDefinition￨4￨e (￨4￨e context￨4￨e ,￨4￨e channelName￨4￨e ,￨4￨e protocolName￨4￨e )￨4￨e ;￨4￨e protocolDefinitions￨4￨e .￨4￨e add￨4￨e (￨4￨e protocolDefinition￨4￨e )￨4￨e ;￨4￨e }￨3￨l ResourceDefinition￨3￨e relayDefinition￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j stack￨4￨c .￨4￨c hasDefined￨4￨c (￨4￨c RELAY￨4￨c )￨4￨c )￨3￨j {￨3￨j relayDefinition￨4￨e =￨4￨e ChannelInstanceResourceDefinition￨4￨e .￨4￨e getProtocolMetricResourceDefinition￨4￨e (￨4￨e context￨4￨e ,￨4￨e channelName￨4￨e ,￨4￨e "relay.RELAY2"￨4￨e )￨4￨e ;￨4￨e }￨3￨j ManagementResourceRegistration￨3￨e subsystemRootRegistration￨3￨e =￨3￨e context￨3￨e .￨3￨e getResourceRegistrationForUpdate￨3￨e (￨3￨e )￨3￨e ;￨3￨e ManagementResourceRegistration￨3￨e channelRegistration￨3￨e =￨3￨e subsystemRootRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e new￨3￨e ChannelInstanceResourceDefinition￨3￨e (￨3￨e channelName￨3￨e ,￨3￨e true￨3￨e )￨3￨e )￨3￨e ;￨3￨e channelRegistration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e transportDefinition￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l ResourceDefinition￨4￨c protocolDefinition￨4￨c :￨4￨c protocolDefinitions￨4￨c )￨3￨l {￨3￨l channelRegistration￨4￨e .￨4￨e registerSubModel￨4￨e (￨4￨e protocolDefinition￨4￨e )￨4￨e ;￨4￨e }￨3￨l if￨3￨j (￨3￨j stack￨4￨c .￨4￨c hasDefined￨4￨c (￨4￨c RELAY￨4￨c )￨4￨c )￨3￨j {￨3￨j channelRegistration￨4￨e .￨4￨e registerSubModel￨4￨e (￨4￨e relayDefinition￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f static￨2￨f void￨2￨f addChannelProtocolMetricsDeregistrationStep￨2￨f (￨2￨f OperationContext￨3￨p context￨3￨p ,￨3￨p String￨3￨p channelName￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f String￨2￨f getDefaultStack￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ResourceDefinition￨2￨f getProtocolMetricResourceDefinition￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f String￨2￨f channelName￨2￨f ,￨2￨f String￨2￨f protocolName￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f addAttributeDefinition￨2￨f (￨2￨f List￨3￨p <￨3￨p AttributeDefinition￨3￨p >￨3￨p attributes￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p String￨3￨p >￨3￨p map￨3￨p ,￨3￨p String￨3￨p protocolName￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p ModelType￨3￨p type￨3￨p ,￨3￨p String￨3￨p description￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f isEquivalentModelTypeAvailable￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f ModelType￨2￨f getEquivalentModelType￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p typeClass￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f Field￨2￨f [￨2￨f ]￨2￨f getProtocolFields￨2￨f (￨2￨f Class￨3￨p <￨3￨p ?￨3￨p >￨3￨p clazz￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d ProtocolResources￨2￨d extends￨2￨d ResourceBundle￨2￨d {￨2￨d private￨3￨e static￨3￨e Map￨3￨e <￨3￨e String￨3￨e ,￨3￨e String￨3￨e >￨3￨e resources￨3￨e =￨3￨e new￨3￨e HashMap￨3￨e <￨3￨e String￨3￨e ,￨3￨e String￨3￨e >￨3￨e (￨3￨e )￨3￨e ;￨3￨e public￨3￨f static￨3￨f void￨3￨f addProtocolMapEntries￨3￨f (￨3￨f Map￨4￨p <￨4￨p String￨4￨p ,￨4￨p String￨4￨p >￨4￨p map￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Object￨3￨f handleGetObject￨3￨f (￨3￨f String￨4￨p key￨4￨p )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f Enumeration￨3￨f <￨3￨f String￨3￨f >￨3￨f getKeys￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f protected￨3￨f Set￨3￨f <￨3￨f String￨3￨f >￨3￨f handleKeySet￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d {￨2￨d int￨3￨e size￨3￨e ;￨3￨e int￨3￨e [￨3￨e ]￨3￨e elements￨3￨e ;￨3￨e IntList￨3￨f (￨3￨f int￨4￨p [￨4￨p ]￨4￨p elements￨4￨p )￨3￨f {￨3￨f }￨3￨f void￨3￨f add￨3￨f (￨3￨f int￨4￨p newElement￨4￨p )￨3￨f {￨3￨f }￨3￨f int￨3￨f [￨3￨f ]￨3￨f asArray￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d DiskIndex￨2￨f (￨2￨f String￨3￨p fileName￨3￨p )￨2￨f {￨2￨f }￨2￨f SimpleSet￨2￨f addDocumentNames￨2￨f (￨2￨f String￨2￨f substring￨2￨f ,￨2￨f MemoryIndex￨2￨f memoryIndex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f HashtableOfObject￨2￨f addQueryResult￨2￨f (￨2￨f HashtableOfObject￨2￨f results￨2￨f ,￨2￨f char￨2￨f [￨2￨f ]￨2￨f word￨2￨f ,￨2￨f HashtableOfObject￨2￨f wordsToDocNumbers￨2￨f ,￨2￨f MemoryIndex￨2￨f memoryIndex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f HashtableOfObject￨2￨f addQueryResults￨2￨f (￨2￨f char￨2￨f [￨2￨f ]￨2￨f [￨2￨f ]￨2￨f categories￨2￨f ,￨2￨f char￨2￨f [￨2￨f ]￨2￨f key￨2￨f ,￨2￨f int￨2￨f matchRule￨2￨f ,￨2￨f MemoryIndex￨2￨f memoryIndex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f cacheDocumentNames￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f [￨2￨f ]￨2￨f computeDocumentNames￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p onDiskNames￨3￨p ,￨3￨p int￨3￨p [￨3￨p ]￨3￨p positions￨3￨p ,￨3￨p SimpleLookupTable￨3￨p indexedDocuments￨3￨p ,￨3￨p MemoryIndex￨3￨p memoryIndex￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f copyQueryResults￨2￨f (￨2￨f HashtableOfObject￨3￨p categoryToWords￨3￨p ,￨3￨p int￨3￨p newPosition￨3￨p )￨2￨f {￨2￨f }￨2￨f File￨2￨f getIndexFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f initialize￨2￨f (￨2￨f boolean￨2￨f reuseExistingFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeFrom￨2￨f (￨2￨f DiskIndex￨2￨f diskIndex￨2￨f ,￨2￨f File￨2￨f newIndexFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f mergeCategories￨2￨f (￨2￨f DiskIndex￨2￨f onDisk￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f positions￨2￨f ,￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f mergeCategory￨2￨f (￨2￨f char￨2￨f [￨2￨f ]￨2￨f categoryName￨2￨f ,￨2￨f DiskIndex￨2￨f onDisk￨2￨f ,￨2￨f int￨2￨f [￨2￨f ]￨2￨f positions￨2￨f ,￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f DiskIndex￨2￨f mergeWith￨2￨f (￨2￨f MemoryIndex￨2￨f memoryIndex￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f synchronized￨2￨f String￨2￨f [￨2￨f ]￨2￨f readAllDocumentNames￨2￨f (￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f synchronized￨2￨f HashtableOfObject￨2￨f readCategoryTable￨2￨f (￨2￨f char￨2￨f [￨2￨f ]￨2￨f categoryName￨2￨f ,￨2￨f boolean￨2￨f readDocNumbers￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f int￨3￨e offset￨3￨e =￨3￨e this￨3￨e .￨3￨e categoryOffsets￨3￨e .￨3￨e get￨3￨e (￨3￨e categoryName￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j offset￨4￨c ==￨4￨c (￨4￨c HashtableOfIntValues￨4￨c .￨4￨c NO_VALUE￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c categoryTables￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j this￨4￨e .￨4￨e categoryTables￨4￨e =￨4￨e new￨4￨e HashtableOfObject￨4￨e (￨4￨e 3￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j HashtableOfObject￨4￨e cachedTable￨4￨e =￨4￨e (￨4￨e (￨4￨e HashtableOfObject￨4￨e )￨4￨e (￨4￨e this￨4￨e .￨4￨e categoryTables￨4￨e .￨4￨e get￨4￨e (￨4￨e categoryName￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j cachedTable￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j readDocNumbers￨6￨c )￨5￨j {￨5￨j Object￨6￨e [￨6￨e ]￨6￨e arrayOffsets￨6￨e =￨6￨e cachedTable￨6￨e .￨6￨e valueTable￨6￨e ;￨6￨e for￨6￨l (￨6￨l int￨7￨c i￨7￨c =￨7￨c 0￨7￨c ,￨7￨c l￨7￨c =￨7￨c arrayOffsets￨7￨c .￨7￨c length￨7￨c ;￨7￨c i￨7￨c <￨7￨c l￨7￨c ;￨7￨c i￨7￨c ++￨7￨c )￨6￨l {￨6￨l if￨7￨j (￨7￨j (￨8￨c arrayOffsets￨8￨c [￨8￨c i￨8￨c ]￨8￨c )￨8￨c instanceof￨8￨c Integer￨8￨c )￨7￨j {￨7￨j arrayOffsets￨8￨e [￨8￨e i￨8￨e ]￨8￨e =￨8￨e readDocumentNumbers￨8￨e (￨8￨e arrayOffsets￨8￨e [￨8￨e i￨8￨e ]￨8￨e )￨8￨e ;￨8￨e }￨7￨j }￨6￨l }￨5￨j return￨5￨e cachedTable￨5￨e ;￨5￨e }￨4￨j }￨3￨j DataInputStream￨3￨e stream￨3￨e =￨3￨e new￨3￨e DataInputStream￨3￨e (￨3￨e new￨3￨e BufferedInputStream￨3￨e (￨3￨e new￨3￨e FileInputStream￨3￨e (￨3￨e getIndexFile￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e 2048￨3￨e )￨3￨e )￨3￨e ;￨3￨e HashtableOfObject￨3￨e categoryTable￨3￨e =￨3￨e null￨3￨e ;￨3￨e char￨3￨e [￨3￨e ]￨3￨e [￨3￨e ]￨3￨e matchingWords￨3￨e =￨3￨e null￨3￨e ;￨3￨e int￨3￨e count￨3￨e =￨3￨e 0￨3￨e ;￨3￨e int￨3￨e firstOffset￨3￨e =￨3￨e -￨3￨e 1￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f stream￨4￨e .￨4￨e skip￨4￨e (￨4￨e offset￨4￨e )￨4￨e ;￨4￨e int￨4￨e size￨4￨e =￨4￨e stream￨4￨e .￨4￨e readInt￨4￨e (￨4￨e )￨4￨e ;￨4￨e categoryTable￨4￨e =￨4￨e new￨4￨e HashtableOfObject￨4￨e (￨4￨e size￨4￨e )￨4￨e ;￨4￨e int￨4￨e largeArraySize￨4￨e =￨4￨e 256￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c size￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l char￨5￨e [￨5￨e ]￨5￨e word￨5￨e =￨5￨e org￨5￨e .￨5￨e eclipse￨5￨e .￨5￨e jdt￨5￨e .￨5￨e internal￨5￨e .￨5￨e core￨5￨e .￨5￨e util￨5￨e .￨5￨e Util￨5￨e .￨5￨e readUTF￨5￨e (￨5￨e stream￨5￨e )￨5￨e ;￨5￨e int￨5￨e arrayOffset￨5￨e =￨5￨e stream￨5￨e .￨5￨e readInt￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j arrayOffset￨6￨c <=￨6￨c 0￨6￨c )￨5￨j {￨5￨j categoryTable￨6￨f .￨6￨f put￨6￨f (￨6￨f word￨6￨f ,￨6￨f new￨6￨f int￨6￨f [￨6￨f ]￨6￨f (￨6￨f )￨6￨f {￨6￨f }￨6￨f )￨6￨e ;￨6￨e }￨5￨j else￨5￨j if￨5￨j (￨5￨j arrayOffset￨6￨c <￨6￨c largeArraySize￨6￨c )￨5￨j {￨5￨j categoryTable￨6￨e .￨6￨e put￨6￨e (￨6￨e word￨6￨e ,￨6￨e readDocumentArray￨6￨e (￨6￨e stream￨6￨e ,￨6￨e arrayOffset￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j else￨5￨j {￨5￨j arrayOffset￨6￨e =￨6￨e stream￨6￨e .￨6￨e readInt￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j readDocNumbers￨7￨c )￨6￨j {￨6￨j if￨7￨j (￨7￨j matchingWords￨8￨c ==￨8￨c null￨8￨c )￨7￨j {￨7￨j matchingWords￨8￨e =￨8￨e new￨8￨e char￨8￨e [￨8￨e size￨8￨e ]￨8￨e [￨8￨e ]￨8￨e ;￨8￨e }￨7￨j if￨7￨j (￨7￨j count￨8￨c ==￨8￨c 0￨8￨c )￨7￨j {￨7￨j firstOffset￨8￨e =￨8￨e arrayOffset￨8￨e ;￨8￨e }￨7￨j matchingWords￨7￨e [￨7￨e (￨7￨e count￨7￨e ++￨7￨e )￨7￨e ]￨7￨e =￨7￨e word￨7￨e ;￨7￨e }￨6￨j categoryTable￨6￨e .￨6￨e put￨6￨e (￨6￨e word￨6￨e ,￨6￨e new￨6￨e Integer￨6￨e (￨6￨e arrayOffset￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l this￨4￨e .￨4￨e categoryTables￨4￨e .￨4￨e put￨4￨e (￨4￨e categoryName￨4￨e ,￨4￨e categoryTable￨4￨e )￨4￨e ;￨4￨e this￨4￨e .￨4￨e cachedCategoryName￨4￨e =￨4￨e (￨4￨e (￨4￨e categoryTable￨4￨e .￨4￨e elementSize￨4￨e )￨4￨e <￨4￨e 10000￨4￨e )￨4￨e ?￨4￨e categoryName￨4￨e :￨4￨e null￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f stream￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b count￨3￨b >￨3￨b 0￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b stream￨3￨e =￨3￨e new￨3￨e DataInputStream￨3￨e (￨3￨e new￨3￨e BufferedInputStream￨3￨e (￨3￨e new￨3￨e FileInputStream￨3￨e (￨3￨e getIndexFile￨3￨e (￨3￨e )￨3￨e )￨3￨e ,￨3￨e 2048￨3￨e )￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f stream￨4￨e .￨4￨e skip￨4￨e (￨4￨e firstOffset￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c count￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l categoryTable￨5￨e .￨5￨e put￨5￨e (￨5￨e matchingWords￨5￨e [￨5￨e i￨5￨e ]￨5￨e ,￨5￨e readDocumentArray￨5￨e (￨5￨e stream￨5￨e ,￨5￨e stream￨5￨e .￨5￨e readInt￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f stream￨4￨e .￨4￨e close￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨3￨e return￨3￨e categoryTable￨3￨e ;￨3￨e }￨2￨f private￨2￨f void￨2￨f readChunk￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f docNames￨2￨f ,￨2￨f DataInputStream￨2￨f stream￨2￨f ,￨2￨f int￨2￨f index￨2￨f ,￨2￨f int￨2￨f size￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f [￨2￨f ]￨2￨f readDocumentArray￨2￨f (￨2￨f DataInputStream￨2￨f stream￨2￨f ,￨2￨f int￨2￨f arraySize￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f String￨2￨f readDocumentName￨2￨f (￨2￨f int￨2￨f docNumber￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f int￨2￨f [￨2￨f ]￨2￨f readDocumentNumbers￨2￨f (￨2￨f Object￨2￨f arrayOffset￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readHeaderInfo￨2￨f (￨2￨f RandomAccessFile￨2￨f file￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f void￨2￨f startQuery￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f synchronized￨2￨f void￨2￨f stopQuery￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeAllDocumentNames￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f sortedDocNames￨2￨f ,￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeCategories￨2￨f (￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeCategoryTable￨2￨f (￨2￨f char￨2￨f [￨2￨f ]￨2￨f categoryName￨2￨f ,￨2￨f HashtableOfObject￨2￨f wordsToDocs￨2￨f ,￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeDocumentNumbers￨2￨f (￨2￨f int￨2￨f [￨2￨f ]￨2￨f documentNumbers￨2￨f ,￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeHeaderInfo￨2￨f (￨2￨f DataOutputStream￨2￨f stream￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeOffsetToHeader￨2￨f (￨2￨f int￨2￨f offsetToHeader￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
class￨1￨d OperationTransformationOverrideBuilderImpl￨1￨d extends￨1￨d AttributeTransformationDescriptionBuilderImpl￨1￨d implements￨1￨d OperationTransformationOverrideBuilder￨1￨d {￨1￨d private￨2￨e boolean￨2￨e inherit￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e DiscardPolicy￨2￨e discardPolicy￨2￨e =￨2￨e DiscardPolicy￨2￨e .￨2￨e NEVER￨2￨e ;￨2￨e private￨2￨e OperationTransformer￨2￨e transformer￨2￨e =￨2￨e OperationTransformer￨2￨e .￨2￨e DEFAULT￨2￨e ;￨2￨e private￨2￨e String￨2￨e newName￨2￨e ;￨2￨e protected￨2￨f OperationTransformationOverrideBuilderImpl￨2￨f (￨2￨f ResourceTransformationDescriptionBuilder￨3￨p builder￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f OperationTransformationOverrideBuilder￨2￨f inherit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f OperationTransformationOverrideBuilder￨2￨f setOperationTransformer￨2￨f (￨2￨f OperationTransformer￨3￨p transformer￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f OperationTransformationOverrideBuilder￨2￨f rename￨2￨f (￨2￨f String￨3￨p newName￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f OperationTransformer￨2￨f createTransformer￨2￨f (￨2￨f final￨3￨p AttributeTransformationDescriptionBuilderRegistry￨3￨p resourceRegistry￨3￨p )￨2￨f {￨2￨f final￨3￨e AttributeTransformationDescriptionBuilderRegistry￨3￨e registry￨3￨e =￨3￨e resultingRegistry￨3￨e (￨3￨e resourceRegistry￨3￨e )￨3￨e ;￨3￨e final￨3￨e AttributeTransformationRule￨3￨e first￨3￨e =￨3￨e new￨3￨e AttributeTransformationRule￨3￨e (￨3￨e registry￨3￨e .￨3￨e buildAttributes￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e return￨3￨f new￨3￨f OperationTransformer￨3￨f (￨3￨f )￨3￨f {￨3￨f @￨4￨f Override￨4￨f public￨4￨f TransformedOperation￨4￨f transformOperation￨4￨f (￨4￨f final￨4￨f TransformationContext￨4￨f ctx￨4￨f ,￨4￨f final￨4￨f PathAddress￨4￨f address￨4￨f ,￨4￨f final￨4￨f ModelNode￨4￨f operation￨4￨f )￨4￨f throws￨4￨f OperationFailedException￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j discardPolicy￨6￨c .￨6￨c discard￨6￨c (￨6￨c operation￨6￨c ,￨6￨c address￨6￨c ,￨6￨c ctx￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e DISCARD￨6￨e .￨6￨e transformOperation￨6￨e (￨6￨e ctx￨6￨e ,￨6￨e address￨6￨e ,￨6￨e operation￨6￨e )￨6￨e ;￨6￨e }￨5￨j final￨5￨e Iterator￨5￨e <￨5￨e TransformationRule￨5￨e >￨5￨e iterator￨5￨e =￨5￨e Collections￨5￨e .￨5￨e <￨5￨e TransformationRule￨5￨e >￨5￨e emptyList￨5￨e (￨5￨e )￨5￨e .￨5￨e iterator￨5￨e (￨5￨e )￨5￨e ;￨5￨e final￨5￨e ModelNode￨5￨e originalModel￨5￨e =￨5￨e operation￨5￨e .￨5￨e clone￨5￨e (￨5￨e )￨5￨e ;￨5￨e originalModel￨5￨e .￨5￨e protect￨5￨e (￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b final￨5￨b TransformationRule￨5￨b .￨5￨b OperationContext￨5￨b context￨5￨b =￨5￨b new￨5￨b TransformationRule￨5￨b .￨5￨b OperationContext￨5￨b (￨5￨b ctx￨5￨b )￨5￨b {￨5￨b <END_BUG>￨5￨b @￨5￨f Override￨5￨f void￨5￨f invokeNext￨5￨f (￨5￨f OperationTransformer￨5￨f .￨5￨f TransformedOperation￨5￨f transformedOperation￨5￨f )￨5￨f throws￨5￨f OperationFailedException￨5￨f (￨5￨f )￨5￨f {￨5￨f recordTransformedOperation￨6￨e (￨6￨e transformedOperation￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j iterator￨7￨c .￨7￨c hasNext￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j final￨7￨e TransformationRule￨7￨e next￨7￨e =￨7￨e iterator￨7￨e .￨7￨e next￨7￨e (￨7￨e )￨7￨e ;￨7￨e next￨7￨e .￨7￨e transformOperation￨7￨e (￨7￨e transformedOperation￨7￨e .￨7￨e getTransformedOperation￨7￨e (￨7￨e )￨7￨e ,￨7￨e address￨7￨e ,￨7￨e this￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j if￨7￨j (￨7￨j (￨8￨c newName￨8￨c )￨8￨c !=￨8￨c null￨8￨c )￨7￨j {￨7￨j transformedOperation￨8￨e .￨8￨e getTransformedOperation￨8￨e (￨8￨e )￨8￨e .￨8￨e get￨8￨e (￨8￨e OP￨8￨e )￨8￨e .￨8￨e set￨8￨e (￨8￨e newName￨8￨e )￨8￨e ;￨8￨e }￨7￨j final￨7￨e TransformationContext￨7￨e ctx￨7￨e =￨7￨e getContext￨7￨e (￨7￨e )￨7￨e ;￨7￨e transformer￨7￨e .￨7￨e transformOperation￨7￨e (￨7￨e ctx￨7￨e ,￨7￨e address￨7￨e ,￨7￨e transformedOperation￨7￨e .￨7￨e getTransformedOperation￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨f }￨5￨e ;￨5￨e operation￨5￨e .￨5￨e get￨5￨e (￨5￨e OP_ADDR￨5￨e )￨5￨e .￨5￨e set￨5￨e (￨5￨e address￨5￨e .￨5￨e toModelNode￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e first￨5￨e .￨5￨e transformOperation￨5￨e (￨5￨e operation￨5￨e ,￨5￨e address￨5￨e ,￨5￨e context￨5￨e )￨5￨e ;￨5￨e return￨5￨e context￨5￨e .￨5￨e createOp￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f ;￨3￨e }￨2￨f protected￨2￨f AttributeTransformationDescriptionBuilderRegistry￨2￨f resultingRegistry￨2￨f (￨2￨f final￨3￨p AttributeTransformationDescriptionBuilderRegistry￨3￨p resourceRegistry￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d ServerCommunicationHandlerFactory￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e ServerCommunicationHandlerFactory￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e ServerCommunicationHandlerFactory￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f ServerCommunicationHandlerFactory￨2￨f getInstance￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ServerCommunicationHandler￨2￨f getServerCommunicationHandler￨2￨f (￨2￨f ServerEnvironment￨3￨p environment￨3￨p ,￨3￨p MessageHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b ServerCommunicationHandler￨3￨b (￨3￨b environment￨3￨b .￨3￨b getProcessName￨3￨b (￨3￨b )￨3￨b ,￨3￨b environment￨3￨b .￨3￨b getProcessManagerAddress￨3￨b (￨3￨b )￨3￨b ,￨3￨b environment￨3￨b .￨3￨b getProcessManagerPort￨3￨b (￨3￨b )￨3￨b ,￨3￨b handler￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f private￨2￨f ServerCommunicationHandlerFactory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d IndexReaderFactory￨1￨d implements￨1￨d NamedListInitializedPlugin￨1￨d {￨1￨d protected￨2￨e int￨2￨e termInfosIndexDivisor￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨f void￨2￨f init￨2￨f (￨2￨f NamedList￨3￨p args￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b Integer￨3￨b v￨3￨b =￨3￨b (￨3￨b (￨3￨b Integer￨3￨b )￨3￨b (￨3￨b args￨3￨b .￨3￨b get￨3￨b (￨3￨b "setTermIndexInterval"￨3￨b )￨3￨b )￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j v￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j termInfosIndexDivisor￨4￨e =￨4￨e v￨4￨e .￨4￨e intValue￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f int￨2￨f getTermInfosIndexDivisor￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f abstract￨2￨f IndexReader￨2￨f newReader￨2￨f (￨2￨f Directory￨2￨f indexDir￨2￨f ,￨2￨f boolean￨2￨f readOnly￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CopyElementsOperation￨1￨d extends￨1￨d MultiOperation￨1￨d implements￨1￨d SuffixConstants￨1￨d {￨1￨d private￨2￨e Map￨2￨e sources￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f CopyElementsOperation￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elementsToCopy￨3￨p ,￨3￨p IJavaElement￨3￨p [￨3￨p ]￨3￨p destContainers￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CopyElementsOperation￨2￨f (￨2￨f IJavaElement￨3￨p [￨3￨p ]￨3￨p elementsToCopy￨3￨p ,￨3￨p IJavaElement￨3￨p destContainer￨3￨p ,￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f String￨2￨f getMainTaskName￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b org￨3￨b .￨3￨b eclipse￨3￨b .￨3￨b jdt￨3￨b .￨3￨b internal￨3￨b .￨3￨b compiler￨3￨b .￨3￨b util￨3￨b .￨3￨b Util￨3￨b .￨3￨b bind￨3￨b (￨3￨b "operation.copyElementProgress"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f protected￨2￨f JavaModelOperation￨2￨f getNestedOperation￨2￨f (￨2￨f IJavaElement￨3￨p element￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getSourceFor￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f isRenamingMainType￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f ,￨2￨f IJavaElement￨2￨f dest￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f processElement￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IJavaElement￨2￨f resolveRenameAnchor￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IJavaModelStatus￨2￨f verify￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f verify￨2￨f (￨2￨f IJavaElement￨2￨f element￨2￨f )￨2￨f throws￨2￨f JavaModelException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ImageFigure￨1￨d extends￨1￨d AttributeFigure￨1￨d implements￨1￨d ImageObserver￨1￨d {￨1￨d private￨2￨e String￨2￨e fFileName￨2￨e ;￨2￨e private￨2￨e transient￨2￨e Image￨2￨e fImage￨2￨e ;￨2￨e private￨2￨e Rectangle￨2￨e fDisplayBox￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 148012030121282439L￨2￨e ;￨2￨e private￨2￨e int￨2￨e imageFigureSerializedDataVersion￨2￨e =￨2￨e 1￨2￨e ;￨2￨e public￨2￨f ImageFigure￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ImageFigure￨2￨f (￨2￨f Image￨3￨p image￨3￨p ,￨3￨p String￨3￨p fileName￨3￨p ,￨3￨p Point￨3￨p origin￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f basicDisplayBox￨2￨f (￨2￨f Point￨3￨p origin￨3￨p ,￨3￨p Point￨3￨p corner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f HandleEnumeration￨2￨f handles￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f displayBox￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f basicMoveBy￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f draw￨2￨f (￨2￨f Graphics￨3￨p g￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c fImage￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b fImage￨4￨b =￨4￨b Iconkit￨4￨b .￨4￨b instance￨4￨b (￨4￨b )￨4￨b .￨4￨b getImage￨4￨b (￨4￨b fFileName￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨j if￨3￨j (￨3￨j (￨4￨c fImage￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j g￨4￨e .￨4￨e drawImage￨4￨e (￨4￨e fImage￨4￨e ,￨4￨e fDisplayBox￨4￨e .￨4￨e x￨4￨e ,￨4￨e fDisplayBox￨4￨e .￨4￨e y￨4￨e ,￨4￨e fDisplayBox￨4￨e .￨4￨e width￨4￨e ,￨4￨e fDisplayBox￨4￨e .￨4￨e height￨4￨e ,￨4￨e this￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j drawGhost￨4￨e (￨4￨e g￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f drawGhost￨2￨f (￨2￨f Graphics￨3￨p g￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f imageUpdate￨2￨f (￨2￨f Image￨3￨p img￨3￨p ,￨3￨p int￨3￨p flags￨3￨p ,￨3￨p int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p w￨3￨p ,￨3￨p int￨3￨p h￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f release￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f StorableOutput￨3￨p dw￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f read￨2￨f (￨2￨f StorableInput￨2￨f dr￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f readObject￨2￨f (￨2￨f ObjectInputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ClassNotFoundException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d JcaExtension￨1￨d implements￨1￨d Extension￨1￨d {￨1￨d public￨2￨e static￨2￨e String￨2￨e SUBSYSTEM_NAME￨2￨e =￨2￨e "jca"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MANAGEMENT_API_MAJOR_VERSION￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MANAGEMENT_API_MINOR_VERSION￨2￨e =￨2￨e 1￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MANAGEMENT_API_MICRO_VERSION￨2￨e =￨2￨e 0￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d String￨2￨d RESOURCE_NAME￨2￨d =￨2￨d (￨2￨d JcaExtension￨2￨d .￨2￨d class￨2￨d .￨2￨d getPackage￨2￨d (￨2￨d )￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d +￨2￨d ".LocalDescriptions"￨2￨d ;￨2￨d protected￨2￨d static￨2￨d final￨2￨d PathElement￨2￨d PATH_SUBSYSTEM￨2￨d =￨2￨d PathElement￨2￨d .￨2￨d pathElement￨2￨d (￨2￨d SUBSYSTEM￨2￨d ,￨2￨d JcaExtension￨2￨d .￨2￨d SUBSYSTEM_NAME￨2￨d )￨2￨d ;￨2￨d protected￨2￨d static￨2￨d final￨2￨d PathElement￨2￨d PATH_ARCHIVE_VALIDATION￨2￨d =￨2￨d PathElement￨2￨d .￨2￨d pathElement￨2￨d (￨2￨d Constants￨2￨d .￨2￨d ARCHIVE_VALIDATION￨2￨d ,￨2￨d Constants￨2￨d .￨2￨d ARCHIVE_VALIDATION￨2￨d )￨2￨d ;￨2￨d static￨2￨d StandardResourceDescriptionResolver￨2￨d getResourceDescriptionResolver￨2￨d (￨2￨d final￨2￨d String￨2￨d ...￨2￨d keyPrefix￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f final￨3￨p ExtensionContext￨3￨p context￨3￨p )￨2￨f {￨2￨f ROOT_LOGGER￨3￨e .￨3￨e debugf￨3￨e (￨3￨e "Initializing<seq2seq4repair_space>Connector<seq2seq4repair_space>Extension"￨3￨e )￨3￨e ;￨3￨e final￨3￨e boolean￨3￨e registerRuntimeOnly￨3￨e =￨3￨e context￨3￨e .￨3￨e isRuntimeOnlyRegistrationValid￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e SubsystemRegistration￨3￨e subsystem￨3￨e =￨3￨e context￨3￨e .￨3￨e registerSubsystem￨3￨e (￨3￨e JcaExtension￨3￨e .￨3￨e SUBSYSTEM_NAME￨3￨e ,￨3￨e JcaExtension￨3￨e .￨3￨e MANAGEMENT_API_MAJOR_VERSION￨3￨e ,￨3￨e JcaExtension￨3￨e .￨3￨e MANAGEMENT_API_MINOR_VERSION￨3￨e ,￨3￨e JcaExtension￨3￨e .￨3￨e MANAGEMENT_API_MICRO_VERSION￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e registration￨3￨e =￨3￨e subsystem￨3￨e .￨3￨e registerSubsystemModel￨3￨e (￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b registration￨3￨b .￨3￨b registerOperationHandler￨3￨b (￨3￨b DESCRIBE￨3￨b ,￨3￨b GenericSubsystemDescribeHandler￨3￨b .￨3￨b INSTANCE￨3￨b ,￨3￨b GenericSubsystemDescribeHandler￨3￨b .￨3￨b INSTANCE￨3￨b ,￨3￨b false￨3￨b ,￨3￨b PRIVATE￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e ManagementResourceRegistration￨3￨e archiveValidation￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e JcaArchiveValidationDefinition￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e beanValidation￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e Constants￨3￨e .￨3￨e BEAN_VALIDATION￨3￨e ,￨3￨e Constants￨3￨e .￨3￨e BEAN_VALIDATION￨3￨e )￨3￨e ,￨3￨e BEAN_VALIDATION_DESC￨3￨e )￨3￨e ;￨3￨e beanValidation￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e BeanValidationAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ADD_BEAN_VALIDATION_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e beanValidation￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ReloadRequiredRemoveStepHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e REMOVE_BEAN_VALIDATION_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c BeanValidationAdd￨4￨c .￨4￨c BeanValidationParameters￨4￨c parameter￨4￨c :￨4￨c BeanValidationParameters￨4￨c .￨4￨c values￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l beanValidation￨4￨e .￨4￨e registerReadWriteAttribute￨4￨e (￨4￨e parameter￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e JcaAttributeWriteHandler￨4￨e .￨4￨e INSTANCE￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e ManagementResourceRegistration￨3￨e cachedConnectionManager￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e Constants￨3￨e .￨3￨e CACHED_CONNECTION_MANAGER￨3￨e ,￨3￨e Constants￨3￨e .￨3￨e CACHED_CONNECTION_MANAGER￨3￨e )￨3￨e ,￨3￨e CACHED_CONNECTION_MANAGER_DESC￨3￨e )￨3￨e ;￨3￨e cachedConnectionManager￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e CachedConnectionManagerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ADD_CACHED_CONNECTION_MANAGER_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e cachedConnectionManager￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ReloadRequiredRemoveStepHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e REMOVE_CACHED_CONNECTION_MANAGER_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c CachedConnectionManagerAdd￨4￨c .￨4￨c CcmParameters￨4￨c parameter￨4￨c :￨4￨c CcmParameters￨4￨c .￨4￨c values￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j parameter￨5￨c !=￨5￨c (￨5￨c CcmParameters￨5￨c .￨5￨c INSTALL￨5￨c )￨5￨c )￨4￨j {￨4￨j cachedConnectionManager￨5￨e .￨5￨e registerReadWriteAttribute￨5￨e (￨5￨e parameter￨5￨e .￨5￨e getAttribute￨5￨e (￨5￨e )￨5￨e ,￨5￨e null￨5￨e ,￨5￨e JcaAttributeWriteHandler￨5￨e .￨5￨e INSTANCE￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j cachedConnectionManager￨5￨e .￨5￨e registerReadWriteAttribute￨5￨e (￨5￨e parameter￨5￨e .￨5￨e getAttribute￨5￨e (￨5￨e )￨5￨e ,￨5￨e null￨5￨e ,￨5￨e new￨5￨e ReloadRequiredWriteAttributeHandler￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l final￨3￨e ManagementResourceRegistration￨3￨e workManager￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e Constants￨3￨e .￨3￨e WORKMANAGER￨3￨e )￨3￨e ,￨3￨e WORKMANAGER_DESC￨3￨e )￨3￨e ;￨3￨e workManager￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e WorkManagerAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ADD_WORKMANAGER_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e workManager￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ReloadRequiredRemoveStepHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e REMOVE_WORKMANAGER_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c WorkManagerAdd￨4￨c .￨4￨c WmParameters￨4￨c parameter￨4￨c :￨4￨c WmParameters￨4￨c .￨4￨c values￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l workManager￨4￨e .￨4￨e registerReadWriteAttribute￨4￨e (￨4￨e parameter￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e new￨4￨e ReloadRequiredWriteAttributeHandler￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l workManager￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e BoundedQueueThreadPoolResourceDefinition￨3￨e .￨3￨e create￨3￨e (￨3￨e Constants￨3￨e .￨3￨e WORKMANAGER_SHORT_RUNNING￨3￨e ,￨3￨e STANDARD_THREAD_FACTORY_RESOLVER￨3￨e ,￨3￨e STANDARD_HANDOFF_EXECUTOR_RESOLVER￨3￨e ,￨3￨e EXECUTOR￨3￨e .￨3￨e append￨3￨e (￨3￨e Constants￨3￨e .￨3￨e WORKMANAGER_SHORT_RUNNING￨3￨e )￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e )￨3￨e ;￨3￨e workManager￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e BoundedQueueThreadPoolResourceDefinition￨3￨e .￨3￨e create￨3￨e (￨3￨e Constants￨3￨e .￨3￨e WORKMANAGER_LONG_RUNNING￨3￨e ,￨3￨e STANDARD_THREAD_FACTORY_RESOLVER￨3￨e ,￨3￨e STANDARD_HANDOFF_EXECUTOR_RESOLVER￨3￨e ,￨3￨e EXECUTOR￨3￨e .￨3￨e append￨3￨e (￨3￨e Constants￨3￨e .￨3￨e WORKMANAGER_LONG_RUNNING￨3￨e )￨3￨e ,￨3￨e registerRuntimeOnly￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e ManagementResourceRegistration￨3￨e bootstrapContext￨3￨e =￨3￨e registration￨3￨e .￨3￨e registerSubModel￨3￨e (￨3￨e PathElement￨3￨e .￨3￨e pathElement￨3￨e (￨3￨e Constants￨3￨e .￨3￨e BOOTSTRAP_CONTEXT￨3￨e )￨3￨e ,￨3￨e BOOTSTRAP_CONTEXT_DESC￨3￨e )￨3￨e ;￨3￨e bootstrapContext￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e ADD￨3￨e ,￨3￨e BootstrapContextAdd￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e ADD_BOOTSTRAP_CONTEXT_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e bootstrapContext￨3￨e .￨3￨e registerOperationHandler￨3￨e (￨3￨e REMOVE￨3￨e ,￨3￨e ReloadRequiredRemoveStepHandler￨3￨e .￨3￨e INSTANCE￨3￨e ,￨3￨e REMOVE_BOOTSTRAP_CONTEXT_DESC￨3￨e ,￨3￨e false￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l final￨4￨c BootstrapContextAdd￨4￨c .￨4￨c BootstrapCtxParameters￨4￨c parameter￨4￨c :￨4￨c BootstrapCtxParameters￨4￨c .￨4￨c values￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l bootstrapContext￨4￨e .￨4￨e registerReadWriteAttribute￨4￨e (￨4￨e parameter￨4￨e .￨4￨e getAttribute￨4￨e (￨4￨e )￨4￨e ,￨4￨e null￨4￨e ,￨4￨e new￨4￨e ReloadRequiredWriteAttributeHandler￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨l subsystem￨3￨e .￨3￨e registerXMLElementWriter￨3￨e (￨3￨e JcaExtension￨3￨e .￨3￨e ConnectorSubsystemParser￨3￨e .￨3￨e INSTANCE￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f initializeParsers￨2￨f (￨2￨f final￨3￨p ExtensionParsingContext￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f static￨2￨d final￨2￨d class￨2￨d ConnectorSubsystemParser￨2￨d implements￨2￨d XMLStreamConstants￨2￨d ,￨2￨d XMLElementReader￨2￨d <￨2￨d List￨2￨d <￨2￨d ModelNode￨2￨d >￨2￨d >￨2￨d ,￨2￨d XMLElementWriter￨2￨d <￨2￨d SubsystemMarshallingContext￨2￨d >￨2￨d {￨2￨d static￨3￨e final￨3￨e JcaExtension￨3￨e .￨3￨e ConnectorSubsystemParser￨3￨e INSTANCE￨3￨e =￨3￨e new￨3￨e JcaExtension￨3￨e .￨3￨e ConnectorSubsystemParser￨3￨e (￨3￨e )￨3￨e ;￨3￨e @￨3￨f Override￨3￨f public￨3￨f void￨3￨f writeContent￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f SubsystemMarshallingContext￨3￨f context￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeArchiveValidation￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeBeanValidation￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeCachedConnectionManager￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeWorkManagers￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f writeBootstrapContexts￨3￨f (￨3￨f XMLExtendedStreamWriter￨3￨f writer￨3￨f ,￨3￨f ModelNode￨3￨f parentNode￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f @￨3￨f Override￨3￨f public￨3￨f void￨3￨f readElement￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseArchiveValidation￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f parseWorkManager￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentAddress￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f node￨3￨f ,￨3￨f boolean￨3￨f defaultWm￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseBeanValidation￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f ModelNode￨3￨f parseCcm￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentOperation￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f private￨3￨f void￨3￨f parseBootstrapContexts￨3￨f (￨3￨f final￨3￨f XMLExtendedStreamReader￨3￨f reader￨3￨f ,￨3￨f final￨3￨f ModelNode￨3￨f parentAddress￨3￨f ,￨3￨f final￨3￨f List￨3￨f <￨3￨f ModelNode￨3￨f >￨3￨f list￨3￨f )￨3￨f throws￨3￨f XMLStreamException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f rawAttributeText￨3￨f (￨3￨f XMLStreamReader￨4￨p reader￨4￨p ,￨4￨p String￨4￨p attributeName￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
class￨1￨d LRSProxyMap￨1￨d extends￨1￨d AbstractLRSProxyMap￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d LRSProxyMap￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d LRSMapFieldStrategy￨2￨d _strat￨2￨d ;￨2￨d public￨2￨d LRSProxyMap￨2￨d (￨2￨d LRSMapFieldStrategy￨2￨d strat￨2￨d )￨2￨d {￨2￨d }￨2￨d protected￨2￨f synchronized￨2￨f int￨2￨f count￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f hasKey￨2￨f (￨2￨f Object￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f hasValue￨2￨f (￨2￨f Object￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f has￨2￨f (￨2￨f final￨3￨p Object￨3￨p obj￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Collection￨2￨f keys￨2￨f (￨2￨f final￨3￨p Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f value￨2￨f (￨2￨f final￨3￨p Object￨3￨p obj￨3￨p )￨2￨f {￨2￨f final￨3￨e OpenJPAStateManager￨3￨e sm￨3￨e =￨3￨e assertOwner￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e JDBCStore￨3￨e store￨3￨e =￨3￨e getStore￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c _strat￨4￨c .￨4￨c getFieldMapping￨4￨c (￨4￨c )￨4￨c .￨4￨c getElement￨4￨c (￨4￨c )￨4￨c .￨4￨c getValueMappedBy￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j Object￨4￨e val￨4￨e =￨4￨e _strat￨4￨e .￨4￨e deriveValue￨4￨e (￨4￨e store￨4￨e ,￨4￨e obj￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j hasValue￨5￨c (￨5￨c val￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e val￨5￨e ;￨5￨e }￨4￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨j final￨3￨e JDBCFetchConfiguration￨3￨e fetch￨3￨e =￨3￨e store￨3￨e .￨3￨e getFetchConfiguration￨3￨e (￨3￨e )￨3￨e ;￨3￨e final￨3￨e ClassMapping￨3￨e [￨3￨e ]￨3￨e clss￨3￨e =￨3￨e _strat￨3￨e .￨3￨e getIndependentValueMappings￨3￨e (￨3￨e true￨3￨e )￨3￨e ;￨3￨e final￨3￨e Joins￨3￨e [￨3￨e ]￨3￨e resJoins￨3￨e =￨3￨e new￨3￨e Joins￨3￨e [￨3￨e Math￨3￨e .￨3￨e max￨3￨e (￨3￨e 1￨3￨e ,￨3￨e clss￨3￨e .￨3￨e length￨3￨e )￨3￨e ]￨3￨e ;￨3￨e Union￨3￨e union￨3￨e =￨3￨e store￨3￨e .￨3￨e getSQLFactory￨3￨e (￨3￨e )￨3￨e .￨3￨e newUnion￨3￨e (￨3￨e Math￨3￨e .￨3￨e max￨3￨e (￨3￨e 1￨3￨e ,￨3￨e clss￨3￨e .￨3￨e length￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b union￨3￨b .￨3￨b setSingleResult￨3￨b (￨3￨b true￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c fetch￨4￨c .￨4￨c getSubclassFetchMode￨4￨c (￨4￨c _strat￨4￨c .￨4￨c getFieldMapping￨4￨c (￨4￨c )￨4￨c .￨4￨c getElementMapping￨4￨c (￨4￨c )￨4￨c .￨4￨c getTypeMapping￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c !=￨4￨c (￨4￨c JDBCFetchConfiguration￨4￨c .￨4￨c EAGER_JOIN￨4￨c )￨4￨c )￨3￨j {￨3￨j union￨4￨e .￨4￨e abortUnion￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j union￨3￨f .￨3￨f select￨3￨f (￨3￨f new￨3￨f Union￨3￨f .￨3￨f Selector￨3￨f (￨3￨f )￨3￨f {￨3￨f public￨4￨f void￨4￨f select￨4￨f (￨4￨f Select￨5￨p sel￨5￨p ,￨5￨p int￨5￨p idx￨5￨p )￨4￨f {￨4￨f ClassMapping￨5￨e cls￨5￨e =￨5￨e (￨5￨e (￨5￨e clss￨5￨e .￨5￨e length￨5￨e )￨5￨e ==￨5￨e 0￨5￨e )￨5￨e ?￨5￨e null￨5￨e :￨5￨e clss￨5￨e [￨5￨e idx￨5￨e ]￨5￨e ;￨5￨e sel￨5￨e .￨5￨e whereForeignKey￨5￨e (￨5￨e _strat￨5￨e .￨5￨e getJoinForeignKey￨5￨e (￨5￨e cls￨5￨e )￨5￨e ,￨5￨e sm￨5￨e .￨5￨e getObjectId￨5￨e (￨5￨e )￨5￨e ,￨5￨e _strat￨5￨e .￨5￨e getFieldMapping￨5￨e (￨5￨e )￨5￨e .￨5￨e getDefiningMapping￨5￨e (￨5￨e )￨5￨e ,￨5￨e store￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c _strat￨6￨c .￨6￨c getFieldMapping￨6￨c (￨6￨c )￨6￨c .￨6￨c getKey￨6￨c (￨6￨c )￨6￨c .￨6￨c getValueMappedBy￨6￨c (￨6￨c )￨6￨c )￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j resJoins￨6￨e [￨6￨e idx￨6￨e ]￨6￨e =￨6￨e _strat￨6￨e .￨6￨e joinValueRelation￨6￨e (￨6￨e sel￨6￨e .￨6￨e newJoins￨6￨e (￨6￨e )￨6￨e ,￨6￨e cls￨6￨e )￨6￨e ;￨6￨e }￨5￨j Object￨5￨e key￨5￨e =￨5￨e _strat￨5￨e .￨5￨e toKeyDataStoreValue￨5￨e (￨5￨e obj￨5￨e ,￨5￨e store￨5￨e )￨5￨e ;￨5￨e Column￨5￨e [￨5￨e ]￨5￨e cols￨5￨e =￨5￨e _strat￨5￨e .￨5￨e getKeyColumns￨5￨e (￨5￨e cls￨5￨e )￨5￨e ;￨5￨e Object￨5￨e [￨5￨e ]￨5￨e vals￨5￨e =￨5￨e (￨5￨e (￨5￨e cols￨5￨e .￨5￨e length￨5￨e )￨5￨e ==￨5￨e 1￨5￨e )￨5￨e ?￨5￨e null￨5￨e :￨5￨e (￨5￨e (￨5￨e Object￨5￨e [￨5￨e ]￨5￨e )￨5￨e (￨5￨e key￨5￨e )￨5￨e )￨5￨e ;￨5￨e SQLBuffer￨5￨e sql￨5￨e =￨5￨e new￨5￨e SQLBuffer￨5￨e (￨5￨e store￨5￨e .￨5￨e getDBDictionary￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c 0￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c cols￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j i￨7￨c >￨7￨c 0￨7￨c )￨6￨j {￨6￨j sql￨7￨e .￨7￨e append￨7￨e (￨7￨e "<seq2seq4repair_space>AND<seq2seq4repair_space>"￨7￨e )￨7￨e ;￨7￨e }￨6￨j sql￨6￨e .￨6￨e append￨6￨e (￨6￨e sel￨6￨e .￨6￨e getColumnAlias￨6￨e (￨6￨e cols￨6￨e [￨6￨e i￨6￨e ]￨6￨e ,￨6￨e resJoins￨6￨e [￨6￨e idx￨6￨e ]￨6￨e )￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j vals￨7￨c ==￨7￨c null￨7￨c )￨6￨j {￨6￨j sql￨7￨e .￨7￨e append￨7￨e (￨7￨e (￨7￨e key￨7￨e ==￨7￨e null￨7￨e ?￨7￨e "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨7￨e :￨7￨e "<seq2seq4repair_space>=<seq2seq4repair_space>"￨7￨e )￨7￨e )￨7￨e .￨7￨e appendValue￨7￨e (￨7￨e key￨7￨e ,￨7￨e cols￨7￨e [￨7￨e i￨7￨e ]￨7￨e )￨7￨e ;￨7￨e }￨6￨j else￨6￨j {￨6￨j sql￨7￨e .￨7￨e append￨7￨e (￨7￨e (￨7￨e (￨7￨e vals￨7￨e [￨7￨e i￨7￨e ]￨7￨e )￨7￨e ==￨7￨e null￨7￨e ?￨7￨e "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨7￨e :￨7￨e "<seq2seq4repair_space>=<seq2seq4repair_space>"￨7￨e )￨7￨e )￨7￨e .￨7￨e appendValue￨7￨e (￨7￨e vals￨7￨e [￨7￨e i￨7￨e ]￨7￨e ,￨7￨e cols￨7￨e [￨7￨e i￨7￨e ]￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨l sel￨5￨e .￨5￨e where￨5￨e (￨5￨e sql￨5￨e ,￨5￨e resJoins￨5￨e [￨5￨e idx￨5￨e ]￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c resJoins￨6￨c [￨6￨c idx￨6￨c ]￨6￨c )￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j resJoins￨6￨e [￨6￨e idx￨6￨e ]￨6￨e =￨6￨e _strat￨6￨e .￨6￨e joinValueRelation￨6￨e (￨6￨e sel￨6￨e .￨6￨e newJoins￨6￨e (￨6￨e )￨6￨e ,￨6￨e cls￨6￨e )￨6￨e ;￨6￨e }￨5￨j _strat￨5￨e .￨5￨e selectValue￨5￨e (￨5￨e sel￨5￨e ,￨5￨e cls￨5￨e ,￨5￨e sm￨5￨e ,￨5￨e store￨5￨e ,￨5￨e fetch￨5￨e ,￨5￨e resJoins￨5￨e [￨5￨e idx￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f )￨3￨e ;￨3￨e Result￨3￨e res￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f res￨4￨e =￨4￨e union￨4￨e .￨4￨e execute￨4￨e (￨4￨e store￨4￨e ,￨4￨e fetch￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j res￨5￨c .￨5￨c next￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j return￨5￨e _strat￨5￨e .￨5￨e loadValue￨5￨e (￨5￨e sm￨5￨e ,￨5￨e store￨5￨e ,￨5￨e fetch￨5￨e ,￨5￨e res￨5￨e ,￨5￨e resJoins￨5￨e [￨5￨e res￨5￨e .￨5￨e indexOf￨5￨e (￨5￨e )￨5￨e ]￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e null￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f SQLException￨4￨p se￨4￨p )￨3￨f {￨3￨f throw￨4￨e SQLExceptions￨4￨e .￨4￨e getStore￨4￨e (￨4￨e se￨4￨e ,￨4￨e store￨4￨e .￨4￨e getDBDictionary￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j res￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j res￨5￨e .￨5￨e close￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨2￨f protected￨2￨f Iterator￨2￨f itr￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f OpenJPAStateManager￨2￨f assertOwner￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f JDBCStore￨2￨f getStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d ResultIterator￨2￨d implements￨2￨d Iterator￨2￨d ,￨2￨d Closeable￨2￨d {￨2￨d private￨3￨e final￨3￨e OpenJPAStateManager￨3￨e _sm￨3￨e ;￨3￨e private￨3￨e final￨3￨e JDBCStore￨3￨e _store￨3￨e ;￨3￨e private￨3￨e final￨3￨e JDBCFetchConfiguration￨3￨e _fetch￨3￨e ;￨3￨e private￨3￨e final￨3￨e Result￨3￨e [￨3￨e ]￨3￨e _res￨3￨e ;￨3￨e private￨3￨e final￨3￨e Joins￨3￨e [￨3￨e ]￨3￨e _joins￨3￨e ;￨3￨e private￨3￨e Boolean￨3￨e _next￨3￨e =￨3￨e null￨3￨e ;￨3￨e public￨3￨f ResultIterator￨3￨f (￨3￨f OpenJPAStateManager￨4￨p sm￨4￨p ,￨4￨p JDBCStore￨4￨p store￨4￨p ,￨4￨p JDBCFetchConfiguration￨4￨p fetch￨4￨p ,￨4￨p Result￨4￨p [￨4￨p ]￨4￨p res￨4￨p ,￨4￨p Joins￨4￨p [￨4￨p ]￨4￨p joins￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f hasNext￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f next￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f remove￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f close￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d Entry￨2￨d implements￨2￨d Map￨2￨d .￨2￨d Entry￨2￨d {￨2￨d public￨3￨e Object￨3￨e key￨3￨e ;￨3￨e public￨3￨e Object￨3￨e val￨3￨e ;￨3￨e public￨3￨f Object￨3￨f getKey￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f getValue￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Object￨3￨f setValue￨3￨f (￨3￨f Object￨4￨p val￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d DefaultCompilerAdapter￨1￨d extends￨1￨d AbstractLogEnabled￨1￨d implements￨1￨d CompilerAdapter￨1￨d {￨1￨d protected￨2￨e boolean￨2￨e m_debug￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_optimize￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_deprecation￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_depend￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_verbose￨2￨e ;￨2￨e protected￨2￨e Javac￨2￨e m_attributes￨2￨e ;￨2￨e protected￨2￨e Path￨2￨e m_bootclasspath￨2￨e ;￨2￨e protected￨2￨e Path￨2￨e m_compileClasspath￨2￨e ;￨2￨e protected￨2￨e File￨2￨e [￨2￨e ]￨2￨e m_compileList￨2￨e ;￨2￨e protected￨2￨e File￨2￨e m_destDir￨2￨e ;￨2￨e protected￨2￨e String￨2￨e m_encoding￨2￨e ;￨2￨e protected￨2￨e Path￨2￨e m_extdirs￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_includeAntRuntime￨2￨e ;￨2￨e protected￨2￨e boolean￨2￨e m_includeJavaRuntime￨2￨e ;￨2￨e protected￨2￨e String￨2￨e m_memoryInitialSize￨2￨e ;￨2￨e protected￨2￨e String￨2￨e m_memoryMaximumSize￨2￨e ;￨2￨e protected￨2￨e File￨2￨e m_baseDir￨2￨e ;￨2￨e protected￨2￨e Path￨2￨e src￨2￨e ;￨2￨e protected￨2￨e String￨2￨e target￨2￨e ;￨2￨e public￨2￨f void￨2￨f setJavac￨2￨f (￨2￨f Javac￨3￨p attributes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Javac￨2￨f getJavac￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupJavacCommand￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupJavacCommand￨2￨f (￨2￨f boolean￨2￨f debugLevelCheck￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupJavacCommandlineSwitches￨2￨f (￨2￨f Commandline￨2￨f cmd￨2￨f ,￨2￨f boolean￨2￨f useDebugLevel￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupModernJavacCommand￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Commandline￨2￨f setupModernJavacCommandlineSwitches￨2￨f (￨2￨f Commandline￨2￨f cmd￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Path￨2￨f getCompileClasspath￨2￨f (￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f addCurrentCompilerArgs￨2￨f (￨2￨f Commandline￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f executeExternalCompile￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f ,￨2￨f int￨2￨f firstFileName￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f String￨3￨e [￨3￨e ]￨3￨e commandArray￨3￨e =￨3￨e null￨3￨e ;￨3￨e File￨3￨e tmpFile￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b Commandline￨4￨b .￨4￨b toString￨4￨b (￨4￨b args￨4￨b )￨4￨b .￨4￨b length￨4￨b (￨4￨b )￨4￨b )￨4￨b >￨4￨b 4096￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b PrintWriter￨4￨e out￨4￨e =￨4￨e null￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f tmpFile￨5￨e =￨5￨e File￨5￨e .￨5￨e createTempFile￨5￨e (￨5￨e "jikes"￨5￨e ,￨5￨e ""￨5￨e ,￨5￨e new￨5￨e File￨5￨e (￨5￨e "."￨5￨e )￨5￨e )￨5￨e ;￨5￨e out￨5￨e =￨5￨e new￨5￨e PrintWriter￨5￨e (￨5￨e new￨5￨e FileWriter￨5￨e (￨5￨e tmpFile￨5￨e )￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c i￨6￨c =￨6￨c firstFileName￨6￨c ;￨6￨c i￨6￨c <￨6￨c (￨6￨c args￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c i￨6￨c ++￨6￨c )￨5￨l {￨5￨l out￨6￨e .￨6￨e println￨6￨e (￨6￨e args￨6￨e [￨6￨e i￨6￨e ]￨6￨e )￨6￨e ;￨6￨e }￨5￨l out￨5￨e .￨5￨e flush￨5￨e (￨5￨e )￨5￨e ;￨5￨e commandArray￨5￨e =￨5￨e new￨5￨e String￨5￨e [￨5￨e firstFileName￨5￨e +￨5￨e 1￨5￨e ]￨5￨e ;￨5￨e System￨5￨e .￨5￨e arraycopy￨5￨e (￨5￨e args￨5￨e ,￨5￨e 0￨5￨e ,￨5￨e commandArray￨5￨e ,￨5￨e 0￨5￨e ,￨5￨e firstFileName￨5￨e )￨5￨e ;￨5￨e commandArray￨5￨e [￨5￨e firstFileName￨5￨e ]￨5￨e =￨5￨e "@"￨5￨e +￨5￨e (￨5￨e tmpFile￨5￨e .￨5￨e getAbsolutePath￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e TaskException￨5￨e (￨5￨e "Error<seq2seq4repair_space>creating<seq2seq4repair_space>temporary<seq2seq4repair_space>file"￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f finally￨4￨f (￨4￨f )￨4￨f {￨4￨f if￨5￨j (￨5￨j out￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j try￨6￨f (￨6￨f )￨6￨f {￨6￨f out￨7￨e .￨7￨e close￨7￨e (￨7￨e )￨7￨e ;￨7￨e }￨6￨f catch￨6￨f (￨6￨f Throwable￨7￨p t￨7￨p )￨6￨f {￨6￨f }￨6￨f }￨5￨j }￨4￨f else￨4￨j {￨4￨j commandArray￨5￨e =￨5￨e args￨5￨e ;￨5￨e }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f final￨5￨e Execute2￨5￨e exe￨5￨e =￨5￨e new￨5￨e Execute2￨5￨e (￨5￨e )￨5￨e ;￨5￨e setupLogger￨5￨e (￨5￨e exe￨5￨e )￨5￨e ;￨5￨e exe￨5￨e .￨5￨e setWorkingDirectory￨5￨e (￨5￨e m_baseDir￨5￨e )￨5￨e ;￨5￨e exe￨5￨e .￨5￨e setCommandline￨5￨e (￨5￨e commandArray￨5￨e )￨5￨e ;￨5￨e return￨5￨e exe￨5￨e .￨5￨e execute￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f IOException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e TaskException￨5￨e (￨5￨e (￨5￨e (￨5￨e "Error<seq2seq4repair_space>running<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e args￨5￨e [￨5￨e 0￨5￨e ]￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>compiler"￨5￨e )￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f if￨4￨j (￨4￨j tmpFile￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j tmpFile￨5￨e .￨5￨e delete￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f }￨2￨f protected￨2￨f void￨2￨f logAndAddFilesToCompile￨2￨f (￨2￨f Commandline￨3￨p cmd￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CastExpression￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨e Expression￨2￨e expression￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e type￨2￨e ;￨2￨e public￨2￨e TypeBinding￨2￨e expectedType￨2￨e ;￨2￨e public￨2￨f CastExpression￨2￨f (￨2￨f Expression￨3￨p expression￨3￨p ,￨3￨p Expression￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForAssignedCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p expectedType￨3￨p ,￨3￨p CastExpression￨3￨p rhs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForEnclosingInstanceCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p enclosingInstance￨3￨p ,￨3￨p TypeBinding￨3￨p enclosingInstanceType￨3￨p ,￨3￨p TypeBinding￨3￨p memberType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCast￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p operatorSignature￨3￨p ,￨3￨p Expression￨3￨p expression￨3￨p ,￨3￨p int￨3￨p expressionTypeId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCasts￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p receiver￨3￨p ,￨3￨p TypeBinding￨3￨p receiverType￨3￨p ,￨3￨p MethodBinding￨3￨p binding￨3￨p ,￨3￨p Expression￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p argumentTypes￨3￨p ,￨3￨p final￨3￨p InvocationSite￨3￨p invocationSite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f checkNeedForArgumentCasts￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p int￨3￨p operator￨3￨p ,￨3￨p int￨3￨p operatorSignature￨3￨p ,￨3￨p Expression￨3￨p left￨3￨p ,￨3￨p int￨3￨p leftTypeId￨3￨p ,￨3￨p boolean￨3￨p leftIsCast￨3￨p ,￨3￨p Expression￨3￨p right￨3￨p ,￨3￨p int￨3￨p rightTypeId￨3￨p ,￨3￨p boolean￨3￨p rightIsCast￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f void￨2￨f checkAlternateBinding￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p Expression￨3￨p receiver￨3￨p ,￨3￨p TypeBinding￨3￨p receiverType￨3￨p ,￨3￨p MethodBinding￨3￨p binding￨3￨p ,￨3￨p Expression￨3￨p [￨3￨p ]￨3￨p arguments￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p originalArgumentTypes￨3￨p ,￨3￨p TypeBinding￨3￨p [￨3￨p ]￨3￨p alternateArgumentTypes￨3￨p ,￨3￨p final￨3￨p InvocationSite￨3￨p invocationSite￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f checkUnsafeCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p ,￨3￨p TypeBinding￨3￨p expressionType￨3￨p ,￨3￨p TypeBinding￨3￨p match￨3￨p ,￨3￨p boolean￨3￨p isNarrowing￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f int￨3￨e pc￨3￨e =￨3￨e codeStream￨3￨e .￨3￨e position￨3￨e ;￨3￨e boolean￨3￨e needRuntimeCheckcast￨3￨e =￨3￨e (￨3￨e (￨3￨e this￨3￨e .￨3￨e bits￨3￨e )￨3￨e &￨3￨e (￨3￨e ASTNode￨3￨e .￨3￨e GenerateCheckcast￨3￨e )￨3￨e )￨3￨e !=￨3￨e 0￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c constant￨4￨c )￨4￨c !=￨4￨c (￨4￨c Constant￨4￨c .￨4￨c NotAConstant￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j valueRequired￨5￨c ||￨5￨c needRuntimeCheckcast￨5￨c )￨4￨j {￨4￨j codeStream￨5￨e .￨5￨e generateConstant￨5￨e (￨5￨e constant￨5￨e ,￨5￨e implicitConversion￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j needRuntimeCheckcast￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e checkcast￨6￨e (￨6￨e this￨6￨e .￨6￨e resolvedType￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j !￨6￨c valueRequired￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e pop￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j codeStream￨4￨e .￨4￨e recordPositionsFrom￨4￨e (￨4￨e pc￨4￨e ,￨4￨e this￨4￨e .￨4￨e sourceStart￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j expression￨3￨e .￨3￨e generateCode￨3￨e (￨3￨e currentScope￨3￨e ,￨3￨e codeStream￨3￨e ,￨3￨e (￨3￨e valueRequired￨3￨e ||￨3￨e needRuntimeCheckcast￨3￨e )￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b needRuntimeCheckcast￨3￨b &&￨3￨b (￨3￨b (￨3￨b this￨3￨b .￨3￨b expression￨3￨b .￨3￨b postConversionType￨3￨b (￨3￨b currentScope￨3￨b )￨3￨b )￨3￨b !=￨3￨b (￨3￨b this￨3￨b .￨3￨b resolvedType￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b codeStream￨3￨e .￨3￨e checkcast￨3￨e (￨3￨e this￨3￨e .￨3￨e resolvedType￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j valueRequired￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e generateImplicitConversion￨4￨e (￨4￨e implicitConversion￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j if￨3￨j (￨3￨j needRuntimeCheckcast￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e pop￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j codeStream￨3￨e .￨3￨e recordPositionsFrom￨3￨e (￨3￨e pc￨3￨e ,￨3￨e this￨3￨e .￨3￨e sourceStart￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f Expression￨2￨f innermostCastedExpression￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f LocalVariableBinding￨2￨f localVariableBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f nullStatus￨2￨f (￨2￨f FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Constant￨2￨f optimizedBooleanConstant￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveType￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExpectedType￨2￨f (￨2￨f TypeBinding￨3￨p expectedType￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isIndirectlyUsed￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsNeedCheckCast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f tagAsUnnecessaryCast￨2￨f (￨2￨f Scope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p castType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ParameterData￨1￨d extends￨1￨d ItemData￨1￨d {￨1￨d Method￨2￨e method￨2￨e ;￨2￨e int￨2￨e parameter￨2￨e ;￨2￨e public￨2￨f ParameterData￨2￨f (￨2￨f Method￨3￨p method￨3￨p ,￨3￨p int￨3￨p parameter￨3￨p ,￨3￨p String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f String￨2￨f [￨2￨f ]￨2￨f getAllFlags￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b String￨3￨b [￨3￨b ]￨3￨b {￨3￨b FLAG_NO_IN￨3￨b ,￨3￨b FLAG_NO_OUT￨3￨b ,￨3￨b FLAG_CRITICAL￨3￨b ,￨3￨b FLAG_INIT￨3￨b ,￨3￨b FLAG_STRUCT￨3￨b ,￨3￨b FLAG_UNICODE￨3￨b ,￨3￨b FLAG_SENTINEL￨3￨b }￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f String￨2￨f getCast￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Method￨2￨f getMethod￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getParameter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCast￨2￨f (￨2￨f String￨3￨p str￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Sort￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e Sort￨2￨e RELEVANCE￨2￨e =￨2￨e new￨2￨e Sort￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e Sort￨2￨e INDEXORDER￨2￨e =￨2￨e new￨2￨e Sort￨2￨e (￨2￨e SortField￨2￨e .￨2￨e FIELD_DOC￨2￨e )￨2￨e ;￨2￨e SortField￨2￨e [￨2￨e ]￨2￨e fields￨2￨e ;￨2￨e public￨2￨f Sort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Sort￨2￨f (￨2￨f SortField￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Sort￨2￨f (￨2￨f SortField￨3￨p ...￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSort￨2￨f (￨2￨f SortField￨3￨p field￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSort￨2￨f (￨2￨f SortField￨3￨p ...￨3￨p fields￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SortField￨2￨f [￨2￨f ]￨2￨f getSort￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Sort￨2￨f rewrite￨2￨f (￨2￨f IndexSearcher￨2￨f searcher￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f needsScores￨2￨f (￨2￨f )￨2￨f {￨2￨f for￨3￨l (￨3￨l SortField￨4￨c sortField￨4￨c :￨4￨c fields￨4￨c )￨3￨l {￨3￨l <START_BUG>￨4￨b if￨4￨b (￨4￨b (￨4￨b sortField￨4￨b .￨4￨b getType￨4￨b (￨4￨b )￨4￨b )￨4￨b ==￨4￨b (￨4￨b Type￨4￨b .￨4￨b SCORE￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b return￨4￨e true￨4￨e ;￨4￨e }￨3￨l return￨3￨e false￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ServiceActivatorDependencyProcessor￨1￨d implements￨1￨d DeploymentUnitProcessor￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d String￨2￨d SERVICE_ACTIVATOR_PATH￨2￨d =￨2￨d "META-INF/services/"￨2￨d +￨2￨d (￨2￨d ServiceActivator￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d ModuleDependency￨2￨d MSC_DEP￨2￨d =￨2￨d new￨2￨d ModuleDependency￨2￨d (￨2￨d null￨2￨d ,￨2￨d ModuleIdentifier￨2￨d .￨2￨d create￨2￨d (￨2￨d "org.jboss.msc"￨2￨d )￨2￨d ,￨2￨d false￨2￨d ,￨2￨d false￨2￨d ,￨2￨d false￨2￨d )￨2￨d ;￨2￨d public￨2￨d void￨2￨d deploy￨2￨d (￨2￨d DeploymentPhaseContext￨2￨d phaseContext￨2￨d )￨2￨d throws￨2￨d DeploymentUnitProcessingException￨2￨d {￨2￨d <START_BUG>￨3￨b final￨3￨b ResourceRoot￨3￨b deploymentRoot￨3￨b =￨3￨b phaseContext￨3￨b .￨3￨b getAttachment￨3￨b (￨3￨b DEPLOYMENT_ROOT￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j deploymentRoot￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j deploymentRoot￨4￨c .￨4￨c getRoot￨4￨c (￨4￨c )￨4￨c .￨4￨c getChild￨4￨c (￨4￨c ServiceActivatorDependencyProcessor￨4￨c .￨4￨c SERVICE_ACTIVATOR_PATH￨4￨c )￨4￨c .￨4￨c exists￨4￨c (￨4￨c )￨4￨c )￨3￨j {￨3￨j phaseContext￨4￨e .￨4￨e putAttachment￨4￨e (￨4￨e ATTACHMENT_KEY￨4￨e ,￨4￨e new￨4￨e ServiceActivatorMarker￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e phaseContext￨4￨e .￨4￨e addToAttachmentList￨4￨e (￨4￨e MODULE_DEPENDENCIES￨4￨e ,￨4￨e ServiceActivatorDependencyProcessor￨4￨e .￨4￨e MSC_DEP￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨d public￨2￨f void￨2￨f undeploy￨2￨f (￨2￨f final￨3￨p DeploymentUnit￨3￨p context￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SendMessageCommand￨1￨d extends￨1￨d Command￨1￨d {￨1￨d private￨2￨e SendMessageDialog￨2￨e sendMessageDialog￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e showComposer￨2￨e =￨2￨e false￨2￨e ;￨2￨e private￨2￨e ComposerController￨2￨e composerController￨2￨e ;￨2￨e public￨2￨f SendMessageCommand￨2￨f (￨2￨f ICommandReference￨3￨p reference￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f showInvalidRecipientMessage￨2￨f (￨2￨f String￨3￨p recipient￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f validArguments￨2￨f (￨2￨f ComposerCommandReference￨3￨p reference￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f IWorkerStatusController￨2￨f worker￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f ComposerCommandReference￨3￨e r￨3￨e =￨3￨e (￨3￨e (￨3￨e ComposerCommandReference￨3￨e )￨3￨e (￨3￨e getReference￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c validArguments￨4￨c (￨4￨c r￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j return￨4￨e ;￨4￨e }￨3￨j worker￨3￨e .￨3￨e setDisplayText￨3￨e (￨3￨e MailResourceLoader￨3￨e .￨3￨e getString￨3￨e (￨3￨e "statusbar"￨3￨e ,￨3￨e "message"￨3￨e ,￨3￨e "send_message_compose"￨3￨e )￨3￨e )￨3￨e ;￨3￨e composerController￨3￨e =￨3￨e r￨3￨e .￨3￨e getComposerController￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c composerController￨4￨c .￨4￨c getView￨4￨c (￨4￨c )￨4￨c .￨4￨c getFrame￨4￨c (￨4￨c )￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j composerController￨4￨e .￨4￨e getView￨4￨e (￨4￨e )￨4￨e .￨4￨e getFrame￨4￨e (￨4￨e )￨4￨e .￨4￨e setVisible￨4￨e (￨4￨e false￨4￨e )￨4￨e ;￨4￨e }￨3￨j sendMessageDialog￨3￨e =￨3￨e new￨3￨e SendMessageDialog￨3￨e (￨3￨e worker￨3￨e )￨3￨e ;￨3￨e ComposerModel￨3￨e model￨3￨e =￨3￨e (￨3￨e (￨3￨e ComposerModel￨3￨e )￨3￨e (￨3￨e composerController￨3￨e .￨3￨e getModel￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e AccountItem￨3￨e item￨3￨e =￨3￨e model￨3￨e .￨3￨e getAccountItem￨3￨e (￨3￨e )￨3￨e ;￨3￨e AbstractMessageFolder￨3￨e sentFolder￨3￨e =￨3￨e (￨3￨e (￨3￨e AbstractMessageFolder￨3￨e )￨3￨e (￨3￨e FolderTreeModel￨3￨e .￨3￨e getInstance￨3￨e (￨3￨e )￨3￨e .￨3￨e getFolder￨3￨e (￨3￨e item￨3￨e .￨3￨e getSpecialFoldersItem￨3￨e (￨3￨e )￨3￨e .￨3￨e getInteger￨3￨e (￨3￨e "sent"￨3￨e )￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e SendableMessage￨3￨e message￨3￨e =￨3￨e null￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f <START_BUG>￨4￨b message￨4￨b =￨4￨b new￨4￨b org￨4￨b .￨4￨b columba￨4￨b .￨4￨b mail￨4￨b .￨4￨b composer￨4￨b .￨4￨b MessageComposer￨4￨b (￨4￨b model￨4￨b )￨4￨b .￨4￨b compose￨4￨b (￨4￨b worker￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f JSCFException￨4￨p e1￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j e1￨5￨c instanceof￨5￨c CancelledException￨5￨c )￨4￨j {￨4￨j showComposer￨5￨e =￨5￨e true￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j JOptionPane￨5￨e .￨5￨e showMessageDialog￨5￨e (￨5￨e null￨5￨e ,￨5￨e e1￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e showComposer￨5￨e =￨5￨e true￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j }￨3￨f worker￨3￨e .￨3￨e setDisplayText￨3￨e (￨3￨e MailResourceLoader￨3￨e .￨3￨e getString￨3￨e (￨3￨e "statusbar"￨3￨e ,￨3￨e "message"￨3￨e ,￨3￨e "send_message_connect"￨3￨e )￨3￨e )￨3￨e ;￨3￨e final￨3￨e SMTPServer￨3￨e server￨3￨e =￨3￨e new￨3￨e SMTPServer￨3￨e (￨3￨e item￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f worker￨4￨e .￨4￨e setDisplayText￨4￨e (￨4￨e MailResourceLoader￨4￨e .￨4￨e getString￨4￨e (￨4￨e "statusbar"￨4￨e ,￨4￨e "message"￨4￨e ,￨4￨e "send_message"￨4￨e )￨4￨e )￨4￨e ;￨4￨e IWorkerStatusChangeListener￨4￨f listener￨4￨f =￨4￨f new￨4￨f IWorkerStatusChangeListener￨4￨f (￨4￨f )￨4￨f {￨4￨f public￨5￨f void￨5￨f workerStatusChanged￨5￨f (￨5￨f WorkerStatusChangedEvent￨6￨p e￨6￨p )￨5￨f {￨5￨f if￨6￨j (￨6￨j e￨7￨c .￨7￨c getSource￨7￨c (￨7￨c )￨7￨c .￨7￨c cancelled￨7￨c (￨7￨c )￨7￨c )￨6￨j {￨6￨j try￨7￨f (￨7￨f )￨7￨f {￨7￨f server￨8￨e .￨8￨e dropConnection￨8￨e (￨8￨e )￨8￨e ;￨8￨e }￨7￨f catch￨7￨f (￨7￨f IOException￨8￨p e1￨8￨p )￨7￨f {￨7￨f }￨7￨f }￨6￨j }￨5￨f }￨4￨f ;￨4￨e worker￨4￨e .￨4￨e addWorkerStatusChangeListener￨4￨e (￨4￨e listener￨4￨e )￨4￨e ;￨4￨e server￨4￨e .￨4￨e sendMessage￨4￨e (￨4￨e message￨4￨e ,￨4￨e worker￨4￨e )￨4￨e ;￨4￨e worker￨4￨e .￨4￨e removeWorkerStatusChangeListener￨4￨e (￨4￨e listener￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j worker￨5￨c .￨5￨c cancelled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j showComposer￨5￨e =￨5￨e true￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j Flags￨4￨e flags￨4￨e =￨4￨e new￨4￨e Flags￨4￨e (￨4￨e )￨4￨e ;￨4￨e flags￨4￨e .￨4￨e setSeen￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e message￨4￨e .￨4￨e getHeader￨4￨e (￨4￨e )￨4￨e .￨4￨e setFlags￨4￨e (￨4￨e flags￨4￨e )￨4￨e ;￨4￨e ComposerCommandReference￨4￨e ref￨4￨e =￨4￨e new￨4￨e ComposerCommandReference￨4￨e (￨4￨e composerController￨4￨e ,￨4￨e sentFolder￨4￨e )￨4￨e ;￨4￨e ref￨4￨e .￨4￨e setMessage￨4￨e (￨4￨e message￨4￨e )￨4￨e ;￨4￨e SaveMessageCommand￨4￨e c￨4￨e =￨4￨e new￨4￨e SaveMessageCommand￨4￨e (￨4￨e ref￨4￨e )￨4￨e ;￨4￨e CommandProcessor￨4￨e .￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e addOp￨4￨e (￨4￨e c￨4￨e )￨4￨e ;￨4￨e MailFolderCommandReference￨4￨e ref2￨4￨e =￨4￨e model￨4￨e .￨4￨e getSourceReference￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c ref2￨5￨c !=￨5￨c null￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c (￨5￨c IMailbox￨5￨c )￨5￨c (￨5￨c ref2￨5￨c .￨5￨c getSourceFolder￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c .￨5￨c exists￨5￨c (￨5￨c ref2￨5￨c .￨5￨c getUids￨5￨c (￨5￨c )￨5￨c [￨5￨c 0￨5￨c ]￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j ref2￨5￨e .￨5￨e setMarkVariant￨5￨e (￨5￨e MARK_AS_ANSWERED￨5￨e )￨5￨e ;￨5￨e MarkMessageCommand￨5￨e c1￨5￨e =￨5￨e new￨5￨e MarkMessageCommand￨5￨e (￨5￨e ref2￨5￨e )￨5￨e ;￨5￨e CommandProcessor￨5￨e .￨5￨e getInstance￨5￨e (￨5￨e )￨5￨e .￨5￨e addOp￨5￨e (￨5￨e c1￨5￨e )￨5￨e ;￨5￨e }￨4￨j worker￨4￨e .￨4￨e setDisplayText￨4￨e (￨4￨e MailResourceLoader￨4￨e .￨4￨e getString￨4￨e (￨4￨e "statusbar"￨4￨e ,￨4￨e "message"￨4￨e ,￨4￨e "send_message_closing"￨4￨e )￨4￨e )￨4￨e ;￨4￨e server￨4￨e .￨4￨e closeConnection￨4￨e (￨4￨e )￨4￨e ;￨4￨e worker￨4￨e .￨4￨e setDisplayText￨4￨e (￨4￨e MailResourceLoader￨4￨e .￨4￨e getString￨4￨e (￨4￨e "statusbar"￨4￨e ,￨4￨e "message"￨4￨e ,￨4￨e "send_message_success"￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f Exception￨4￨p e￨4￨p )￨3￨f {￨3￨f showComposer￨4￨e =￨4￨e true￨4￨e ;￨4￨e throw￨4￨e e￨4￨e ;￨4￨e }￨3￨f }￨2￨f public￨2￨f void￨2￨f updateGUI￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SendMessageDialog￨1￨d extends￨1￨d JDialog￨1￨d implements￨1￨d ActionListener￨1￨d ,￨1￨d WorkerStatusChangeListener￨1￨d {￨1￨d private￨2￨e JProgressBar￨2￨e progressBar￨2￨e ;￨2￨e private￨2￨e JButton￨2￨e cancelButton￨2￨e ;￨2￨e private￨2￨e JLabel￨2￨e label￨2￨e ;￨2￨e private￨2￨e WorkerStatusController￨2￨e worker￨2￨e ;￨2￨e public￨2￨f SendMessageDialog￨2￨f (￨2￨f WorkerStatusController￨2￨f worker￨2￨f )￨2￨f throws￨2￨f HeadlessException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f initComponents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f layoutComponents￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f workerStatusChanged￨2￨f (￨2￨f WorkerStatusChangedEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p arg0￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b arg0￨3￨b .￨3￨b equals￨3￨b (￨3￨b "CANCEL"￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b worker￨3￨e .￨3￨e cancel￨3￨e (￨3￨e )￨3￨e ;￨3￨e setVisible￨3￨e (￨3￨e false￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setWorker￨2￨f (￨2￨f WorkerStatusController￨3￨p worker￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ForStatement￨1￨d extends￨1￨d Statement￨1￨d {￨1￨d public￨2￨e Statement￨2￨e [￨2￨e ]￨2￨e initializations￨2￨e ;￨2￨e public￨2￨e Expression￨2￨e condition￨2￨e ;￨2￨e public￨2￨e Statement￨2￨e [￨2￨e ]￨2￨e increments￨2￨e ;￨2￨e public￨2￨e Statement￨2￨e action￨2￨e ;￨2￨e public￨2￨e boolean￨2￨e neededScope￨2￨e ;￨2￨e public￨2￨e BlockScope￨2￨e scope￨2￨e ;￨2￨e private￨2￨e Label￨2￨e breakLabel￨2￨e ;￨2￨e private￨2￨e Label￨2￨e continueLabel￨2￨e ;￨2￨e int￨2￨e preCondInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e condIfTrueInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e int￨2￨e mergedInitStateIndex￨2￨e =￨2￨e -￨2￨e 1￨2￨e ;￨2￨e public￨2￨f ForStatement￨2￨f (￨2￨f Statement￨3￨p [￨3￨p ]￨3￨p initializations￨3￨p ,￨3￨p Expression￨3￨p condition￨3￨p ,￨3￨p Statement￨3￨p [￨3￨p ]￨3￨p increments￨3￨p ,￨3￨p Statement￨3￨p action￨3￨p ,￨3￨p boolean￨3￨p neededScope￨3￨p ,￨3￨p int￨3￨p s￨3￨p ,￨3￨p int￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f breakLabel￨3￨e =￨3￨e new￨3￨e Label￨3￨e (￨3￨e )￨3￨e ;￨3￨e continueLabel￨3￨e =￨3￨e new￨3￨e Label￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c initializations￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j int￨4￨e count￨4￨e =￨4￨e initializations￨4￨e .￨4￨e length￨4￨e ;￨4￨e int￨4￨e i￨4￨e =￨4￨e 0￨4￨e ;￨4￨e while￨4￨l (￨4￨l i￨5￨c <￨5￨c count￨5￨c )￨4￨l {￨4￨l flowInfo￨5￨e =￨5￨e initializations￨5￨e [￨5￨e (￨5￨e i￨5￨e ++￨5￨e )￨5￨e ]￨5￨e .￨5￨e analyseCode￨5￨e (￨5￨e scope￨5￨e ,￨5￨e flowContext￨5￨e ,￨5￨e flowInfo￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨3￨j preCondInitStateIndex￨3￨e =￨3￨e currentScope￨3￨e .￨3￨e methodScope￨3￨e (￨3￨e )￨3￨e .￨3￨e recordInitializationStates￨3￨e (￨3￨e flowInfo￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e conditionIsInlinedToTrue￨3￨e =￨3￨e (￨3￨e (￨3￨e condition￨3￨e )￨3￨e ==￨3￨e null￨3￨e )￨3￨e ||￨3￨e (￨3￨e (￨3￨e (￨3￨e condition￨3￨e .￨3￨e constant￨3￨e )￨3￨e !=￨3￨e (￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e condition￨3￨e .￨3￨e constant￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e true￨3￨e )￨3￨e )￨3￨e ;￨3￨e boolean￨3￨e conditionIsInlinedToFalse￨3￨e =￨3￨e (￨3￨e !￨3￨e conditionIsInlinedToTrue￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e (￨3￨e condition￨3￨e .￨3￨e constant￨3￨e )￨3￨e !=￨3￨e (￨3￨e NotAConstant￨3￨e )￨3￨e )￨3￨e &&￨3￨e (￨3￨e (￨3￨e condition￨3￨e .￨3￨e constant￨3￨e .￨3￨e booleanValue￨3￨e (￨3￨e )￨3￨e )￨3￨e ==￨3￨e false￨3￨e )￨3￨e )￨3￨e ;￨3￨e LoopingFlowContext￨3￨e condLoopContext￨3￨e =￨3￨e null￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c condition￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j !￨5￨c conditionIsInlinedToTrue￨5￨c )￨4￨j {￨4￨j flowInfo￨5￨e =￨5￨e condition￨5￨e .￨5￨e analyseCode￨5￨e (￨5￨e scope￨5￨e ,￨5￨e (￨5￨e condLoopContext￨5￨e =￨5￨e new￨5￨e LoopingFlowContext￨5￨e (￨5￨e flowContext￨5￨e ,￨5￨e this￨5￨e ,￨5￨e null￨5￨e ,￨5￨e null￨5￨e ,￨5￨e scope￨5￨e )￨5￨e )￨5￨e ,￨5￨e flowInfo￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j LoopingFlowContext￨3￨e loopingContext￨3￨e ;￨3￨e FlowInfo￨3￨e actionInfo￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c action￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨4￨c ||￨4￨c (￨4￨c action￨4￨c .￨4￨c isEmptyBlock￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j condLoopContext￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j condLoopContext￨5￨e .￨5￨e complainOnFinalAssignmentsInLoop￨5￨e (￨5￨e scope￨5￨e ,￨5￨e flowInfo￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j conditionIsInlinedToTrue￨5￨c )￨4￨j {￨4￨j return￨5￨e DeadEnd￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j conditionIsInlinedToFalse￨6￨c )￨5￨j {￨5￨j continueLabel￨6￨e =￨6￨e null￨6￨e ;￨6￨e }￨5￨j actionInfo￨5￨e =￨5￨e flowInfo￨5￨e .￨5￨e initsWhenTrue￨5￨e (￨5￨e )￨5￨e .￨5￨e copy￨5￨e (￨5￨e )￨5￨e ;￨5￨e loopingContext￨5￨e =￨5￨e new￨5￨e LoopingFlowContext￨5￨e (￨5￨e flowContext￨5￨e ,￨5￨e this￨5￨e ,￨5￨e breakLabel￨5￨e ,￨5￨e continueLabel￨5￨e ,￨5￨e scope￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j else￨3￨j {￨3￨j loopingContext￨4￨e =￨4￨e new￨4￨e LoopingFlowContext￨4￨e (￨4￨e flowContext￨4￨e ,￨4￨e this￨4￨e ,￨4￨e breakLabel￨4￨e ,￨4￨e continueLabel￨4￨e ,￨4￨e scope￨4￨e )￨4￨e ;￨4￨e FlowInfo￨4￨e initsWhenTrue￨4￨e =￨4￨e flowInfo￨4￨e .￨4￨e initsWhenTrue￨4￨e (￨4￨e )￨4￨e ;￨4￨e condIfTrueInitStateIndex￨4￨e =￨4￨e currentScope￨4￨e .￨4￨e methodScope￨4￨e (￨4￨e )￨4￨e .￨4￨e recordInitializationStates￨4￨e (￨4￨e initsWhenTrue￨4￨e )￨4￨e ;￨4￨e actionInfo￨4￨e =￨4￨e (￨4￨e conditionIsInlinedToFalse￨4￨e )￨4￨e ?￨4￨e DeadEnd￨4￨e :￨4￨e initsWhenTrue￨4￨e .￨4￨e copy￨4￨e (￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b if￨4￨b (￨4￨b !￨4￨b (￨4￨b actionInfo￨4￨b .￨4￨b complainIfUnreachable￨4￨b (￨4￨b action￨4￨b ,￨4￨b scope￨4￨b )￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b actionInfo￨4￨e =￨4￨e action￨4￨e .￨4￨e analyseCode￨4￨e (￨4￨e scope￨4￨e ,￨4￨e loopingContext￨4￨e ,￨4￨e actionInfo￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c actionInfo￨5￨c ==￨5￨c (￨5￨c DeadEnd￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c actionInfo￨5￨c .￨5￨c isFakeReachable￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c (￨5￨c (￨5￨c loopingContext￨5￨c .￨5￨c initsOnContinue￨5￨c )￨5￨c ==￨5￨c (￨5￨c DeadEnd￨5￨c )￨5￨c )￨5￨c ||￨5￨c (￨5￨c loopingContext￨5￨c .￨5￨c initsOnContinue￨5￨c .￨5￨c isFakeReachable￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j continueLabel￨5￨e =￨5￨e null￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j if￨5￨j (￨5￨j condLoopContext￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j condLoopContext￨6￨e .￨6￨e complainOnFinalAssignmentsInLoop￨6￨e (￨6￨e scope￨6￨e ,￨6￨e flowInfo￨6￨e )￨6￨e ;￨6￨e }￨5￨j loopingContext￨5￨e .￨5￨e complainOnFinalAssignmentsInLoop￨5￨e (￨5￨e scope￨5￨e ,￨5￨e actionInfo￨5￨e )￨5￨e ;￨5￨e actionInfo￨5￨e =￨5￨e actionInfo￨5￨e .￨5￨e mergedWith￨5￨e (￨5￨e loopingContext￨5￨e .￨5￨e initsOnContinue￨5￨e .￨5￨e unconditionalInits￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j if￨3￨j (￨3￨j (￨4￨c (￨4￨c continueLabel￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c (￨4￨c increments￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨4￨c )￨3￨j {￨3￨j LoopingFlowContext￨4￨e loopContext￨4￨e =￨4￨e new￨4￨e LoopingFlowContext￨4￨e (￨4￨e flowContext￨4￨e ,￨4￨e this￨4￨e ,￨4￨e null￨4￨e ,￨4￨e null￨4￨e ,￨4￨e scope￨4￨e )￨4￨e ;￨4￨e int￨4￨e i￨4￨e =￨4￨e 0￨4￨e ;￨4￨e int￨4￨e count￨4￨e =￨4￨e increments￨4￨e .￨4￨e length￨4￨e ;￨4￨e while￨4￨l (￨4￨l i￨5￨c <￨5￨c count￨5￨c )￨4￨l {￨4￨l actionInfo￨5￨e =￨5￨e increments￨5￨e [￨5￨e (￨5￨e i￨5￨e ++￨5￨e )￨5￨e ]￨5￨e .￨5￨e analyseCode￨5￨e (￨5￨e scope￨5￨e ,￨5￨e loopContext￨5￨e ,￨5￨e actionInfo￨5￨e )￨5￨e ;￨5￨e }￨4￨l loopContext￨4￨e .￨4￨e complainOnFinalAssignmentsInLoop￨4￨e (￨4￨e scope￨4￨e ,￨4￨e flowInfo￨4￨e )￨4￨e ;￨4￨e }￨3￨j FlowInfo￨3￨e mergedInfo￨3￨e ;￨3￨e if￨3￨j (￨3￨j conditionIsInlinedToTrue￨4￨c )￨3￨j {￨3￨j mergedInitStateIndex￨4￨e =￨4￨e currentScope￨4￨e .￨4￨e methodScope￨4￨e (￨4￨e )￨4￨e .￨4￨e recordInitializationStates￨4￨e (￨4￨e (￨4￨e mergedInfo￨4￨e =￨4￨e loopingContext￨4￨e .￨4￨e initsOnBreak￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e mergedInfo￨4￨e ;￨4￨e }￨3￨j mergedInfo￨3￨e =￨3￨e flowInfo￨3￨e .￨3￨e initsWhenFalse￨3￨e (￨3￨e )￨3￨e .￨3￨e unconditionalInits￨3￨e (￨3￨e )￨3￨e .￨3￨e mergedWith￨3￨e (￨3￨e loopingContext￨3￨e .￨3￨e initsOnBreak￨3￨e .￨3￨e unconditionalInits￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e mergedInitStateIndex￨3￨e =￨3￨e currentScope￨3￨e .￨3￨e methodScope￨3￨e (￨3￨e )￨3￨e .￨3￨e recordInitializationStates￨3￨e (￨3￨e mergedInfo￨3￨e )￨3￨e ;￨3￨e return￨3￨e mergedInfo￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resetStateForCodeGeneration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolve￨2￨f (￨2￨f BlockScope￨3￨p upperScope￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f int￨3￨p tab￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f IAbstractSyntaxTreeVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p blockScope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CollectionProperty￨1￨d extends￨1￨d MultiProperty￨1￨d {￨1￨d protected￨2￨e Collection￨2￨e value￨2￨e ;￨2￨e private￨2￨e Collection￨2￨e savedValue￨2￨e ;￨2￨e public￨2￨f CollectionProperty￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p Collection￨3￨p value￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f CollectionProperty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p o￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f set￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p String￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f set￨2￨f (￨2￨f int￨3￨p index￨3￨p ,￨3￨p JMeterProperty￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JMeterProperty￨2￨f get￨2￨f (￨2￨f int￨3￨p row￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setObjectValue￨2￨f (￨2￨f Object￨3￨p v￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PropertyIterator￨2￨f iterator￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b return￨3￨b new￨3￨b PropertyIteratorImpl￨3￨b (￨3￨b value￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f String￨2￨f getStringValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f getObjectValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f size￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Collection￨2￨f cloneCollection￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCollection￨2￨f (￨2￨f Collection￨3￨p coll￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f clear￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addProperty￨2￨f (￨2￨f JMeterProperty￨3￨p prop￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addItem￨2￨f (￨2￨f Object￨3￨p item￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Class￨2￨f getPropertyType￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f recoverRunningVersion￨2￨f (￨2￨f TestElement￨3￨p owner￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Test￨2￨d extends￨2￨d JMeterTestCase￨2￨d {￨2￨d public￨3￨f Test￨3￨f (￨3￨f String￨4￨p name￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f testAddingProperties￨3￨f (￨3￨f )￨3￨f throws￨3￨f Exception￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f void￨2￨f setRunningVersion￨2￨f (￨2￨f boolean￨3￨p running￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
final￨1￨d class￨1￨d Behaviors￨1￨d implements￨1￨d IDetachable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e final￨2￨e Component￨2￨e component￨2￨e ;￨2￨e public￨2￨f Behaviors￨2￨f (￨2￨f Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f Behavior￨3￨p ...￨3￨p behaviors￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalAdd￨2￨f (￨2￨f final￨3￨p Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f component￨3￨e .￨3￨e data_add￨3￨e (￨3￨e behavior￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b behavior￨3￨b .￨3￨b isStateless￨3￨b (￨3￨b component￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b getBehaviorId￨3￨e (￨3￨e behavior￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f <￨2￨f M￨2￨f extends￨2￨f Behavior￨2￨f >￨2￨f List￨2￨f <￨2￨f M￨2￨f >￨2￨f getBehaviors￨2￨f (￨2￨f Class￨3￨p <￨3￨p M￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f detach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f internalRemove￨2￨f (￨2￨f final￨3￨p Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f removeBehaviorsIdList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Behaviors￨2￨f .￨2￨f BehaviorIdList￨2￨f getBehaviorsIdList￨2￨f (￨2￨f boolean￨3￨p createIfNotFound￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d BehaviorIdList￨2￨d extends￨2￨d ArrayList￨2￨d <￨2￨d Behavior￨2￨d >￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f BehaviorIdList￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f final￨2￨f int￨2￨f getBehaviorId￨2￨f (￨2￨f Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Behavior￨2￨f getBehaviorById￨2￨f (￨2￨f int￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CoreContainer￨1￨d {￨1￨d protected￨2￨d static￨2￨d Logger￨2￨d log￨2￨d =￨2￨d Logger￨2￨d .￨2￨d getLogger￨2￨d (￨2￨d CoreContainer￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d protected￨2￨d final￨2￨d Map￨2￨d <￨2￨d String￨2￨d ,￨2￨d SolrCore￨2￨d >￨2￨d cores￨2￨d =￨2￨d new￨2￨d LinkedHashMap￨2￨d <￨2￨d String￨2￨d ,￨2￨d SolrCore￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d protected￨2￨d boolean￨2￨d persistent￨2￨d =￨2￨d false￨2￨d ;￨2￨d protected￨2￨d String￨2￨d adminPath￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d String￨2￨d managementPath￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d CoreAdminHandler￨2￨d coreAdminHandler￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d File￨2￨d configFile￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d String￨2￨d libDir￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d ClassLoader￨2￨d libLoader￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d SolrResourceLoader￨2￨d loader￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d WeakReference￨2￨d <￨2￨d SolrCore￨2￨d >￨2￨d adminCore￨2￨d =￨2￨d null￨2￨d ;￨2￨d protected￨2￨d Properties￨2￨d containerProperties￨2￨d ;￨2￨d public￨2￨d CoreContainer￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f Properties￨2￨f getContainerProperties￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨d static￨2￨d class￨2￨d Initializer￨2￨d {￨2￨d protected￨3￨e String￨3￨e solrConfigFilename￨3￨e =￨3￨e null￨3￨e ;￨3￨e protected￨3￨e boolean￨3￨e abortOnConfigurationError￨3￨e =￨3￨e true￨3￨e ;￨3￨e public￨3￨f boolean￨3￨f isAbortOnConfigurationError￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setAbortOnConfigurationError￨3￨f (￨3￨f boolean￨4￨p abortOnConfigurationError￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getSolrConfigFilename￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setSolrConfigFilename￨3￨f (￨3￨f String￨4￨p solrConfigFilename￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f CoreContainer￨3￨f initialize￨3￨f (￨3￨f )￨3￨f throws￨3￨f IOException￨3￨f ,￨3￨f ParserConfigurationException￨3￨f ,￨3￨f SAXException￨3￨f (￨3￨f )￨3￨f {￨3￨f CoreContainer￨4￨e cores￨4￨e =￨4￨e null￨4￨e ;￨4￨e String￨4￨e instanceDir￨4￨e =￨4￨e SolrResourceLoader￨4￨e .￨4￨e locateInstanceDir￨4￨e (￨4￨e )￨4￨e ;￨4￨e File￨4￨e fconf￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e instanceDir￨4￨e ,￨4￨e (￨4￨e (￨4￨e solrConfigFilename￨4￨e )￨4￨e ==￨4￨e null￨4￨e ?￨4￨e "solr.xml"￨4￨e :￨4￨e solrConfigFilename￨4￨e )￨4￨e )￨4￨e ;￨4￨e CoreContainer￨4￨e .￨4￨e log￨4￨e .￨4￨e info￨4￨e (￨4￨e (￨4￨e "looking<seq2seq4repair_space>for<seq2seq4repair_space>solr.xml:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e fconf￨4￨e .￨4￨e getAbsolutePath￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j fconf￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j cores￨5￨e =￨5￨e new￨5￨e CoreContainer￨5￨e (￨5￨e )￨5￨e ;￨5￨e cores￨5￨e .￨5￨e load￨5￨e (￨5￨e instanceDir￨5￨e ,￨5￨e fconf￨5￨e )￨5￨e ;￨5￨e abortOnConfigurationError￨5￨e =￨5￨e false￨5￨e ;￨5￨e for￨5￨l (￨5￨l SolrCore￨6￨c c￨6￨c :￨6￨c cores￨6￨c .￨6￨c getCores￨6￨c (￨6￨c )￨6￨c )￨5￨l {￨5￨l if￨6￨j (￨6￨j c￨7￨c .￨7￨c getSolrConfig￨7￨c (￨7￨c )￨7￨c .￨7￨c getBool￨7￨c (￨7￨c "abortOnConfigurationError"￨7￨c ,￨7￨c false￨7￨c )￨7￨c )￨6￨j {￨6￨j abortOnConfigurationError￨7￨e =￨7￨e true￨7￨e ;￨7￨e break￨7￨e ;￨7￨e }￨6￨j }￨5￨l solrConfigFilename￨5￨e =￨5￨e cores￨5￨e .￨5￨e getConfigFile￨5￨e (￨5￨e )￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j cores￨5￨e =￨5￨e new￨5￨e CoreContainer￨5￨e (￨5￨e new￨5￨e SolrResourceLoader￨5￨e (￨5￨e instanceDir￨5￨e )￨5￨e )￨5￨e ;￨5￨e SolrConfig￨5￨e cfg￨5￨e =￨5￨e (￨5￨e (￨5￨e solrConfigFilename￨5￨e )￨5￨e ==￨5￨e null￨5￨e )￨5￨e ?￨5￨e new￨5￨e SolrConfig￨5￨e (￨5￨e )￨5￨e :￨5￨e new￨5￨e SolrConfig￨5￨e (￨5￨e solrConfigFilename￨5￨e )￨5￨e ;￨5￨e <START_BUG>￨5￨b CoreDescriptor￨5￨b dcore￨5￨b =￨5￨b new￨5￨b CoreDescriptor￨5￨b (￨5￨b cores￨5￨b ,￨5￨b ""￨5￨b ,￨5￨b cfg￨5￨b .￨5￨b getResourceLoader￨5￨b (￨5￨b )￨5￨b .￨5￨b getInstanceDir￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b SolrCore￨5￨e singlecore￨5￨e =￨5￨e new￨5￨e SolrCore￨5￨e (￨5￨e null￨5￨e ,￨5￨e null￨5￨e ,￨5￨e cfg￨5￨e ,￨5￨e null￨5￨e ,￨5￨e dcore￨5￨e )￨5￨e ;￨5￨e abortOnConfigurationError￨5￨e =￨5￨e cfg￨5￨e .￨5￨e getBool￨5￨e (￨5￨e "abortOnConfigurationError"￨5￨e ,￨5￨e abortOnConfigurationError￨5￨e )￨5￨e ;￨5￨e cores￨5￨e .￨5￨e register￨5￨e (￨5￨e ""￨5￨e ,￨5￨e singlecore￨5￨e ,￨5￨e false￨5￨e )￨5￨e ;￨5￨e cores￨5￨e .￨5￨e setPersistent￨5￨e (￨5￨e false￨5￨e )￨5￨e ;￨5￨e solrConfigFilename￨5￨e =￨5￨e cfg￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j return￨4￨e cores￨4￨e ;￨4￨e }￨3￨f }￨2￨d public￨2￨f CoreContainer￨2￨f (￨2￨f String￨2￨f dir￨2￨f ,￨2￨f File￨2￨f configFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ParserConfigurationException￨2￨f ,￨2￨f SAXException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CoreContainer￨2￨f (￨2￨f SolrResourceLoader￨3￨p loader￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f load￨2￨f (￨2￨f String￨2￨f dir￨2￨f ,￨2￨f File￨2￨f configFile￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ParserConfigurationException￨2￨f ,￨2￨f SAXException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Properties￨2￨f readProperties￨2￨f (￨2￨f Config￨2￨f cfg￨2￨f ,￨2￨f Node￨2￨f node￨2￨f )￨2￨f throws￨2￨f XPathExpressionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f protected￨2￨f void￨2￨f finalize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f SolrCore￨2￨f register￨2￨f (￨2￨f String￨3￨p name￨3￨p ,￨3￨p SolrCore￨3￨p core￨3￨p ,￨3￨p boolean￨3￨p returnPrev￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SolrCore￨2￨f create￨2￨f (￨2￨f CoreDescriptor￨2￨f dcore￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ParserConfigurationException￨2￨f ,￨2￨f SAXException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f SolrCore￨2￨f >￨2￨f getCores￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f String￨2￨f >￨2￨f getCoreNames￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f String￨2￨f >￨2￨f getCoreNames￨2￨f (￨2￨f SolrCore￨3￨p core￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f reload￨2￨f (￨2￨f String￨2￨f name￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f ,￨2￨f ParserConfigurationException￨2￨f ,￨2￨f SAXException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f swap￨2￨f (￨2￨f String￨3￨p n0￨3￨p ,￨3￨p String￨3￨p n1￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SolrCore￨2￨f remove￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SolrCore￨2￨f getCore￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAdminCore￨2￨f (￨2￨f SolrCore￨3￨p core￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f SolrCore￨2￨f getAdminCore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f CoreAdminHandler￨2￨f createMultiCoreHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f CoreAdminHandler￨2￨f getMultiCoreHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isPersistent￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPersistent￨2￨f (￨2￨f boolean￨3￨p persistent￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getAdminPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAdminPath￨2￨f (￨2￨f String￨3￨p adminPath￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getManagementPath￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setManagementPath￨2￨f (￨2￨f String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getConfigFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f persist￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f persistFile￨2￨f (￨2￨f File￨3￨p file￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f persist￨2￨f (￨2￨f Writer￨2￨f writer￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f persist￨2￨f (￨2￨f Writer￨2￨f writer￨2￨f ,￨2￨f List￨2￨f <￨2￨f String￨2￨f >￨2￨f aliases￨2￨f ,￨2￨f CoreDescriptor￨2￨f dcore￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f writeProperties￨2￨f (￨2￨f Writer￨2￨f writer￨2￨f ,￨2￨f Properties￨2￨f props￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f fileCopy￨2￨f (￨2￨f File￨2￨f src￨2￨f ,￨2￨f File￨2￨f dest￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ArrayInitializer￨1￨d extends￨1￨d Expression￨1￨d {￨1￨d public￨2￨e Expression￨2￨e [￨2￨e ]￨2￨e expressions￨2￨e ;￨2￨e public￨2￨e ArrayBinding￨2￨e binding￨2￨e ;￨2￨e public￨2￨f ArrayInitializer￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FlowInfo￨2￨f analyseCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p FlowContext￨3￨p flowContext￨3￨p ,￨3￨p FlowInfo￨3￨p flowInfo￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f generateCode￨2￨f (￨2￨f BlockScope￨3￨p currentScope￨3￨p ,￨3￨p CodeStream￨3￨p codeStream￨3￨p ,￨3￨p boolean￨3￨p valueRequired￨3￨p )￨2￨f {￨2￨f int￨3￨e pc￨3￨e =￨3￨e codeStream￨3￨e .￨3￨e position￨3￨e ;￨3￨e int￨3￨e expressionLength￨3￨e =￨3￨e (￨3￨e (￨3￨e expressions￨3￨e )￨3￨e ==￨3￨e null￨3￨e )￨3￨e ?￨3￨e 0￨3￨e :￨3￨e expressions￨3￨e .￨3￨e length￨3￨e ;￨3￨e codeStream￨3￨e .￨3￨e generateInlinedValue￨3￨e (￨3￨e expressionLength￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b codeStream￨3￨b .￨3￨b newArray￨3￨b (￨3￨b currentScope￨3￨b ,￨3￨b binding￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b if￨3￨j (￨3￨j (￨4￨c expressions￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j int￨4￨e elementsTypeID￨4￨e =￨4￨e (￨4￨e (￨4￨e binding￨4￨e .￨4￨e dimensions￨4￨e )￨4￨e >￨4￨e 1￨4￨e )￨4￨e ?￨4￨e -￨4￨e 1￨4￨e :￨4￨e binding￨4￨e .￨4￨e leafComponentType￨4￨e .￨4￨e id￨4￨e ;￨4￨e for￨4￨l (￨4￨l int￨5￨c i￨5￨c =￨5￨c 0￨5￨c ;￨5￨c i￨5￨c <￨5￨c expressionLength￨5￨c ;￨5￨c i￨5￨c ++￨5￨c )￨4￨l {￨4￨l Expression￨5￨e expr￨5￨e ;￨5￨e if￨5￨j (￨5￨j (￨6￨c (￨6￨c expr￨6￨c =￨6￨c expressions￨6￨c [￨6￨c i￨6￨c ]￨6￨c )￨6￨c .￨6￨c constant￨6￨c )￨6￨c !=￨6￨c (￨6￨c NotAConstant￨6￨c )￨6￨c )￨5￨j {￨5￨j switch￨6￨s (￨6￨s elementsTypeID￨6￨c )￨6￨s {￨6￨s case￨7￨c TypeIds￨7￨c .￨7￨c T_int￨7￨c :￨7￨c case￨7￨c TypeIds￨7￨c .￨7￨c T_short￨7￨c :￨7￨c case￨7￨c TypeIds￨7￨c .￨7￨c T_byte￨7￨c :￨7￨c case￨7￨c TypeIds￨7￨c .￨7￨c T_char￨7￨c :￨7￨c case￨7￨c TypeIds￨7￨c .￨7￨c T_long￨7￨c :￨7￨c if￨8￨j (￨8￨j (￨9￨c expr￨9￨c .￨9￨c constant￨9￨c .￨9￨c longValue￨9￨c (￨9￨c )￨9￨c )￨9￨c !=￨9￨c 0￨9￨c )￨8￨j {￨8￨j codeStream￨9￨e .￨9￨e dup￨9￨e (￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e generateInlinedValue￨9￨e (￨9￨e i￨9￨e )￨9￨e ;￨9￨e expr￨9￨e .￨9￨e generateCode￨9￨e (￨9￨e currentScope￨9￨e ,￨9￨e codeStream￨9￨e ,￨9￨e true￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e arrayAtPut￨9￨e (￨9￨e elementsTypeID￨9￨e ,￨9￨e false￨9￨e )￨9￨e ;￨9￨e }￨8￨j break￨8￨e ;￨8￨e case￨7￨c TypeIds￨7￨c .￨7￨c T_float￨7￨c :￨7￨c case￨7￨c TypeIds￨7￨c .￨7￨c T_double￨7￨c :￨7￨c double￨8￨e constantValue￨8￨e =￨8￨e expr￨8￨e .￨8￨e constant￨8￨e .￨8￨e doubleValue￨8￨e (￨8￨e )￨8￨e ;￨8￨e if￨8￨j (￨8￨j (￨9￨c constantValue￨9￨c ==￨9￨c (￨9￨c -￨9￨c 0.0￨9￨c )￨9￨c )￨9￨c ||￨9￨c (￨9￨c constantValue￨9￨c !=￨9￨c 0￨9￨c )￨9￨c )￨8￨j {￨8￨j codeStream￨9￨e .￨9￨e dup￨9￨e (￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e generateInlinedValue￨9￨e (￨9￨e i￨9￨e )￨9￨e ;￨9￨e expr￨9￨e .￨9￨e generateCode￨9￨e (￨9￨e currentScope￨9￨e ,￨9￨e codeStream￨9￨e ,￨9￨e true￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e arrayAtPut￨9￨e (￨9￨e elementsTypeID￨9￨e ,￨9￨e false￨9￨e )￨9￨e ;￨9￨e }￨8￨j break￨8￨e ;￨8￨e case￨7￨c TypeIds￨7￨c .￨7￨c T_boolean￨7￨c :￨7￨c if￨8￨j (￨8￨j (￨9￨c expr￨9￨c .￨9￨c constant￨9￨c .￨9￨c booleanValue￨9￨c (￨9￨c )￨9￨c )￨9￨c !=￨9￨c false￨9￨c )￨8￨j {￨8￨j codeStream￨9￨e .￨9￨e dup￨9￨e (￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e generateInlinedValue￨9￨e (￨9￨e i￨9￨e )￨9￨e ;￨9￨e expr￨9￨e .￨9￨e generateCode￨9￨e (￨9￨e currentScope￨9￨e ,￨9￨e codeStream￨9￨e ,￨9￨e true￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e arrayAtPut￨9￨e (￨9￨e elementsTypeID￨9￨e ,￨9￨e false￨9￨e )￨9￨e ;￨9￨e }￨8￨j break￨8￨e ;￨8￨e default￨7￨c :￨7￨c if￨8￨j (￨8￨j !￨9￨c (￨9￨c expr￨9￨c instanceof￨9￨c NullLiteral￨9￨c )￨9￨c )￨8￨j {￨8￨j codeStream￨9￨e .￨9￨e dup￨9￨e (￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e generateInlinedValue￨9￨e (￨9￨e i￨9￨e )￨9￨e ;￨9￨e expr￨9￨e .￨9￨e generateCode￨9￨e (￨9￨e currentScope￨9￨e ,￨9￨e codeStream￨9￨e ,￨9￨e true￨9￨e )￨9￨e ;￨9￨e codeStream￨9￨e .￨9￨e arrayAtPut￨9￨e (￨9￨e elementsTypeID￨9￨e ,￨9￨e false￨9￨e )￨9￨e ;￨9￨e }￨8￨j }￨6￨s }￨5￨j else￨5￨j if￨5￨j (￨5￨j !￨6￨c (￨6￨c expr￨6￨c instanceof￨6￨c NullLiteral￨6￨c )￨6￨c )￨5￨j {￨5￨j codeStream￨6￨e .￨6￨e dup￨6￨e (￨6￨e )￨6￨e ;￨6￨e codeStream￨6￨e .￨6￨e generateInlinedValue￨6￨e (￨6￨e i￨6￨e )￨6￨e ;￨6￨e expr￨6￨e .￨6￨e generateCode￨6￨e (￨6￨e currentScope￨6￨e ,￨6￨e codeStream￨6￨e ,￨6￨e true￨6￨e )￨6￨e ;￨6￨e codeStream￨6￨e .￨6￨e arrayAtPut￨6￨e (￨6￨e elementsTypeID￨6￨e ,￨6￨e false￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨l }￨3￨j if￨3￨j (￨3￨j !￨4￨c valueRequired￨4￨c )￨3￨j {￨3￨j codeStream￨4￨e .￨4￨e pop￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j codeStream￨3￨e .￨3￨e recordPositionsFrom￨3￨e (￨3￨e pc￨3￨e ,￨3￨e this￨3￨e .￨3￨e sourceStart￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f StringBuffer￨2￨f printExpression￨2￨f (￨2￨f int￨3￨p indent￨3￨p ,￨3￨p StringBuffer￨3￨p output￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f TypeBinding￨2￨f resolveTypeExpecting￨2￨f (￨2￨f BlockScope￨3￨p scope￨3￨p ,￨3￨p TypeBinding￨3￨p expectedTb￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f traverse￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p ,￨3￨p BlockScope￨3￨p scope￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ReferencePointcut￨1￨d extends￨1￨d Pointcut￨1￨d {￨1￨d public￨2￨e TypeX￨2￨e onType￨2￨e ;￨2￨e public￨2￨e TypePattern￨2￨e onTypeSymbolic￨2￨e ;￨2￨e public￨2￨e String￨2￨e name￨2￨e ;￨2￨e public￨2￨e TypePatternList￨2￨e arguments￨2￨e ;￨2￨e public￨2￨f ReferencePointcut￨2￨f (￨2￨f TypePattern￨3￨p onTypeSymbolic￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p TypePatternList￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ReferencePointcut￨2￨f (￨2￨f TypeX￨3￨p onType￨3￨p ,￨3￨p String￨3￨p name￨3￨p ,￨3￨p TypePatternList￨3￨p arguments￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f fastMatch￨2￨f (￨2￨f JavaClass￨3￨p jc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FuzzyBoolean￨2￨f match￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f toString￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f write￨2￨f (￨2￨f DataOutputStream￨2￨f s￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Pointcut￨2￨f read￨2￨f (￨2￨f DataInputStream￨2￨f s￨2￨f ,￨2￨f ISourceContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f IOException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f resolveBindings￨2￨f (￨2￨f IScope￨3￨p scope￨3￨p ,￨3￨p Bindings￨3￨p bindings￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c onTypeSymbolic￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j onType￨4￨e =￨4￨e onTypeSymbolic￨4￨e .￨4￨e resolveExactType￨4￨e (￨4￨e scope￨4￨e ,￨4￨e bindings￨4￨e )￨4￨e ;￨4￨e }￨3￨j ResolvedTypeX￨3￨e searchType￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c onType￨4￨c )￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j searchType￨4￨e =￨4￨e scope￨4￨e .￨4￨e getWorld￨4￨e (￨4￨e )￨4￨e .￨4￨e resolve￨4￨e (￨4￨e onType￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j searchType￨4￨e =￨4￨e scope￨4￨e .￨4￨e getEnclosingType￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨j arguments￨3￨e .￨3￨e resolveBindings￨3￨e (￨3￨e scope￨3￨e ,￨3￨e bindings￨3￨e ,￨3￨e true￨3￨e ,￨3￨e true￨3￨e )￨3￨e ;￨3￨e ResolvedPointcutDefinition￨3￨e pointcutDef￨3￨e =￨3￨e searchType￨3￨e .￨3￨e findPointcut￨3￨e (￨3￨e name￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b onType￨3￨b )￨3￨b ==￨3￨b null￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b while￨3￨l (￨3￨l true￨4￨c )￨3￨l {￨3￨l TypeX￨4￨e declaringType￨4￨e =￨4￨e searchType￨4￨e .￨4￨e getDeclaringType￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j declaringType￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j break￨5￨e ;￨5￨e }￨4￨j searchType￨4￨e =￨4￨e declaringType￨4￨e .￨4￨e resolve￨4￨e (￨4￨e scope￨4￨e .￨4￨e getWorld￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e pointcutDef￨4￨e =￨4￨e searchType￨4￨e .￨4￨e findPointcut￨4￨e (￨4￨e name￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j pointcutDef￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j onType￨5￨e =￨5￨e searchType￨5￨e ;￨5￨e break￨5￨e ;￨5￨e }￨4￨j }￨3￨l if￨3￨j (￨3￨j pointcutDef￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e message￨4￨e (￨4￨e ERROR￨4￨e ,￨4￨e this￨4￨e ,￨4￨e "can't<seq2seq4repair_space>find<seq2seq4repair_space>referenced<seq2seq4repair_space>pointcut"￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c pointcutDef￨4￨c .￨4￨c isVisible￨4￨c (￨4￨c scope￨4￨c .￨4￨c getEnclosingType￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e message￨4￨e (￨4￨e ERROR￨4￨e ,￨4￨e this￨4￨e ,￨4￨e (￨4￨e (￨4￨e "pointcut<seq2seq4repair_space>declaration<seq2seq4repair_space>"￨4￨e +￨4￨e pointcutDef￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>accessible"￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j Modifier￨4￨c .￨4￨c isAbstract￨4￨c (￨4￨c pointcutDef￨4￨c .￨4￨c getModifiers￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j if￨4￨j (￨4￨j (￨5￨c onType￨5￨c )￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e message￨5￨e (￨5￨e ERROR￨5￨e ,￨5￨e this￨5￨e ,￨5￨e "can't<seq2seq4repair_space>make<seq2seq4repair_space>static<seq2seq4repair_space>reference<seq2seq4repair_space>to<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut"￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j else￨4￨j if￨4￨j (￨4￨j !￨5￨c (￨5￨c searchType￨5￨c .￨5￨c isAbstract￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e message￨5￨e (￨5￨e ERROR￨5￨e ,￨5￨e this￨5￨e ,￨5￨e "can't<seq2seq4repair_space>use<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut<seq2seq4repair_space>in<seq2seq4repair_space>concrete<seq2seq4repair_space>context"￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j }￨3￨j ResolvedTypeX￨3￨e [￨3￨e ]￨3￨e parameterTypes￨3￨e =￨3￨e scope￨3￨e .￨3￨e getWorld￨3￨e (￨3￨e )￨3￨e .￨3￨e resolve￨3￨e (￨3￨e pointcutDef￨3￨e .￨3￨e getParameterTypes￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c parameterTypes￨4￨c .￨4￨c length￨4￨c )￨4￨c !=￨4￨c (￨4￨c arguments￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j scope￨4￨e .￨4￨e message￨4￨e (￨4￨e ERROR￨4￨e ,￨4￨e this￨4￨e ,￨4￨e (￨4￨e (￨4￨e (￨4￨e "incompatible<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>arguments<seq2seq4repair_space>to<seq2seq4repair_space>pointcut,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e parameterTypes￨4￨e .￨4￨e length￨4￨e )￨4￨e )￨4￨e +￨4￨e "<seq2seq4repair_space>found<seq2seq4repair_space>"￨4￨e )￨4￨e +￨4￨e (￨4￨e arguments￨4￨e .￨4￨e size￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e return￨4￨e ;￨4￨e }￨3￨j for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ,￨4￨c len￨4￨c =￨4￨c arguments￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c ;￨4￨c i￨4￨c <￨4￨c len￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l TypePattern￨4￨e p￨4￨e =￨4￨e arguments￨4￨e .￨4￨e get￨4￨e (￨4￨e i￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j p￨5￨c ==￨5￨c (￨5￨c TypePattern￨5￨c .￨5￨c NO￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e message￨5￨e (￨5￨e ERROR￨5￨e ,￨5￨e this￨5￨e ,￨5￨e "bad<seq2seq4repair_space>parameter<seq2seq4repair_space>to<seq2seq4repair_space>pointcut<seq2seq4repair_space>reference"￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j (￨5￨c !￨5￨c (￨5￨c p￨5￨c .￨5￨c matchesSubtypes￨5￨c (￨5￨c parameterTypes￨5￨c [￨5￨c i￨5￨c ]￨5￨c )￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c p￨5￨c .￨5￨c getExactType￨5￨c (￨5￨c )￨5￨c .￨5￨c equals￨5￨c (￨5￨c OBJECT￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j scope￨5￨e .￨5￨e message￨5￨e (￨5￨e ERROR￨5￨e ,￨5￨e p￨5￨e ,￨5￨e (￨5￨e (￨5￨e (￨5￨e "incompatible<seq2seq4repair_space>type,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨5￨e +￨5￨e (￨5￨e parameterTypes￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e )￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>found<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e p￨5￨e )￨5￨e )￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨2￨f public￨2￨f void￨2￨f postRead￨2￨f (￨2￨f ResolvedTypeX￨3￨p enclosingType￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Test￨2￨f findResidue￨2￨f (￨2￨f Shadow￨3￨p shadow￨3￨p ,￨3￨p ExposedState￨3￨p state￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e boolean￨2￨e concretizing￨2￨e =￨2￨e false￨2￨e ;￨2￨e public￨2￨f Pointcut￨2￨f concretize1￨2￨f (￨2￨f ResolvedTypeX￨3￨p searchStart￨3￨p ,￨3￨p IntMap￨3￨p bindings￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f equals￨2￨f (￨2￨f Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f hashCode￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PathFileList￨1￨d implements￨1￨d FileList￨1￨d {￨1￨d private￨2￨e String￨2￨e m_path￨2￨e ;￨2￨e public￨2￨f void￨2￨f setPath￨2￨f (￨2￨f final￨3￨p String￨3￨p path￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f FileObject￨2￨f [￨2￨f ]￨2￨f listFiles￨2￨f (￨2￨f final￨2￨f TaskContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f FileSystemManager￨3￨d fileSystemManager￨3￨d =￨3￨d (￨3￨d (￨3￨d FileSystemManager￨3￨d )￨3￨d (￨3￨d context￨3￨d .￨3￨d getService￨3￨d (￨3￨d FileSystemManager￨3￨d .￨3￨d class￨3￨d )￨3￨d )￨3￨d )￨3￨d ;￨3￨d final￨3￨d String￨3￨d [￨3￨d ]￨3￨d elements￨3￨d =￨3￨d FileUtils￨3￨d .￨3￨d parsePath￨3￨d (￨3￨d m_path￨3￨d )￨3￨d ;￨3￨d final￨3￨d FileObject￨3￨d [￨3￨d ]￨3￨d result￨3￨d =￨3￨d new￨3￨d FileObject￨3￨d [￨3￨d elements￨3￨d .￨3￨d length￨3￨d ]￨3￨d ;￨3￨d for￨3￨d (￨3￨d int￨3￨d i￨3￨d =￨3￨d 0￨3￨d ;￨3￨d i￨3￨d <￨3￨d (￨3￨d elements￨3￨d .￨3￨d length￨3￨d )￨3￨d ;￨3￨d i￨3￨d ++￨3￨d )￨3￨d {￨3￨d String￨4￨e element￨4￨e =￨4￨e elements￨4￨e [￨4￨e i￨4￨e ]￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b result￨5￨b [￨5￨b i￨5￨b ]￨5￨b =￨5￨b fileSystemManager￨5￨b .￨5￨b resolveFile￨5￨b (￨5￨b element￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f FileSystemException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e TaskException￨5￨e (￨5￨e e￨5￨e .￨5￨e getMessage￨5￨e (￨5￨e )￨5￨e ,￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨d return￨3￨e result￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d SessionManagerAdapterTestCase￨1￨d {￨1￨d private￨2￨d final￨2￨d SessionManager￨2￨d <￨2￨d LocalSessionContext￨2￨d >￨2￨d manager￨2￨d =￨2￨d mock￨2￨d (￨2￨d SessionManager￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d SessionListener￨2￨d listener￨2￨d =￨2￨d mock￨2￨d (￨2￨d SessionListener￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d SessionManagerAdapter￨2￨d adapter￨2￨d =￨2￨d new￨2￨d SessionManagerAdapter￨2￨d (￨2￨d this￨2￨d .￨2￨d manager￨2￨d )￨2￨d ;￨2￨d @￨2￨d Before￨2￨d public￨2￨d void￨2￨d init￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d @￨2￨f Test￨2￨f public￨2￨f void￨2￨f parse￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f format￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f start￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f stop￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f setDefaultSessionTimeout￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f createSessionNoSessionId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f createSessionSpecifiedSessionId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f createSessionAlreadyExists￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getSession￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getSessionNoSessionId￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getSessionNotExists￨2￨f (￨2￨f )￨2￨f {￨2￨f HttpServerExchange￨3￨e exchange￨3￨e =￨3￨e new￨3￨e HttpServerExchange￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e Batcher￨3￨e batcher￨3￨e =￨3￨e mock￨3￨e (￨3￨e Batcher￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e Batch￨3￨e batch￨3￨e =￨3￨e mock￨3￨e (￨3￨e Batch￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e SessionConfig￨3￨e config￨3￨e =￨3￨e mock￨3￨e (￨3￨e SessionConfig￨3￨e .￨3￨e class￨3￨e )￨3￨e ;￨3￨e String￨3￨e requestedSessionId￨3￨e =￨3￨e "session.route1"￨3￨e ;￨3￨e String￨3￨e sessionId￨3￨e =￨3￨e "session"￨3￨e ;￨3￨e when￨3￨e (￨3￨e config￨3￨e .￨3￨e findSessionId￨3￨e (￨3￨e exchange￨3￨e )￨3￨e )￨3￨e .￨3￨e thenReturn￨3￨e (￨3￨e requestedSessionId￨3￨e )￨3￨e ;￨3￨e when￨3￨e (￨3￨e this￨3￨e .￨3￨e manager￨3￨e .￨3￨e findSession￨3￨e (￨3￨e sessionId￨3￨e )￨3￨e )￨3￨e .￨3￨e thenReturn￨3￨e (￨3￨e null￨3￨e )￨3￨e ;￨3￨e when￨3￨e (￨3￨e this￨3￨e .￨3￨e manager￨3￨e .￨3￨e getBatcher￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e thenReturn￨3￨e (￨3￨e batcher￨3￨e )￨3￨e ;￨3￨e when￨3￨e (￨3￨e batcher￨3￨e .￨3￨e startBatch￨3￨e (￨3￨e )￨3￨e )￨3￨e .￨3￨e thenReturn￨3￨e (￨3￨e batch￨3￨e )￨3￨e ;￨3￨e Session￨3￨e sessionAdapter￨3￨e =￨3￨e this￨3￨e .￨3￨e adapter￨3￨e .￨3￨e getSession￨3￨e (￨3￨e exchange￨3￨e ,￨3￨e config￨3￨e )￨3￨e ;￨3￨e assertNull￨3￨e (￨3￨e sessionAdapter￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b verify￨3￨b (￨3￨b batch￨3￨b )￨3￨b .￨3￨b discard￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f activeSessions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getTransientSessions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getActiveSessions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getAllSessions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getSessionByIdentifier￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Test￨2￨f public￨2￨f void￨2￨f getSessionByIdentifierNotExists￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RunTestNotifier￨1￨d extends￨1￨d Notifier￨1￨d {￨1￨d private￨2￨e final￨2￨e Statement￨2￨e fNext￨2￨e ;￨2￨e public￨2￨f RunTestNotifier￨2￨f (￨2￨f Statement￨3￨p next￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f run￨2￨f (￨2￨f EachTestNotifier￨3￨p context￨3￨p )￨2￨f {￨2￨f context￨3￨e .￨3￨e fireTestStarted￨3￨e (￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f fNext￨4￨e .￨4￨e evaluate￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f AssumptionViolatedException￨4￨p e￨4￨p )￨3￨f {￨3￨f <START_BUG>￨4￨b context￨4￨b .￨4￨b addIgnorance￨4￨b (￨4￨b e￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨f catch￨3￨f (￨3￨f Throwable￨4￨p e￨4￨p )￨3￨f {￨3￨f context￨4￨e .￨4￨e addFailure￨4￨e (￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f context￨4￨e .￨4￨e fireTestFinished￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FormInputTest￨1￨d extends￨1￨d WebTestCase￨1￨d {￨1￨d public￨2￨f FormInputTest￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUp￨2￨f (￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f testHelloWorld￨2￨f (￨2￨f )￨2￨f {￨2￨f beginAt￨3￨e (￨3￨e "/forminput"￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b assertTitleEquals￨3￨b (￨3￨b "Wicket<seq2seq4repair_space>-<seq2seq4repair_space>Form<seq2seq4repair_space>Input<seq2seq4repair_space>Example"￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f public￨2￨f static￨2￨f Test￨2￨f suite￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d FileSet￨1￨d extends￨1￨d DataType￨1￨d implements￨1￨d Cloneable￨1￨d {￨1￨d private￨2￨e PatternSet￨2￨e defaultPatterns￨2￨e =￨2￨e new￨2￨e PatternSet￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e Vector￨2￨e additionalPatterns￨2￨e =￨2￨e new￨2￨e Vector￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e File￨2￨e dir￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e useDefaultExcludes￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e isCaseSensitive￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨e String￨2￨e dataTypeName￨2￨e =￨2￨e "fileset"￨2￨e ;￨2￨e public￨2￨f FileSet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FileSet￨2￨f (￨2￨f FileSet￨3￨p fileset￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setRefid￨2￨f (￨2￨f Reference￨2￨f r￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDir￨2￨f (￨2￨f File￨2￨f dir￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f File￨2￨f getDir￨2￨f (￨2￨f Project￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f PatternSet￨2￨f createPatternSet￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NameEntry￨2￨f createInclude￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NameEntry￨2￨f createIncludesFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NameEntry￨2￨f createExclude￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f NameEntry￨2￨f createExcludesFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludes￨2￨f (￨2￨f String￨3￨p includes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExcludes￨2￨f (￨2￨f String￨3￨p excludes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncludesfile￨2￨f (￨2￨f File￨2￨f incl￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setExcludesfile￨2￨f (￨2￨f File￨2￨f excl￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setDefaultexcludes￨2￨f (￨2￨f boolean￨3￨p useDefaultExcludes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setCaseSensitive￨2￨f (￨2￨f boolean￨3￨p isCaseSensitive￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f final￨2￨f void￨2￨f setDataTypeName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f DirectoryScanner￨2￨f getDirectoryScanner￨2￨f (￨2￨f Project￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setupDirectoryScanner￨2￨f (￨2￨f FileScanner￨3￨p ds￨3￨p ,￨3￨p Project￨3￨p p￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f FileSet￨2￨f getRef￨2￨f (￨2￨f Project￨3￨p p￨3￨p )￨2￨f {￨2￨f if￨3￨j (￨3￨j !￨4￨c (￨4￨c checked￨4￨c )￨4￨c )￨3￨j {￨3￨j Stack￨4￨e stk￨4￨e =￨4￨e new￨4￨e Stack￨4￨e (￨4￨e )￨4￨e ;￨4￨e stk￨4￨e .￨4￨e push￨4￨e (￨4￨e this￨4￨e )￨4￨e ;￨4￨e dieOnCircularReference￨4￨e (￨4￨e stk￨4￨e ,￨4￨e p￨4￨e )￨4￨e ;￨4￨e }￨3￨j Object￨3￨e o￨3￨e =￨3￨e ref￨3￨e .￨3￨e getReferencedObject￨3￨e (￨3￨e p￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b o￨3￨b .￨3￨b getClass￨3￨b (￨3￨b )￨3￨b .￨3￨b equals￨3￨b (￨3￨b getClass￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b String￨3￨e msg￨3￨e =￨3￨e (￨3￨e (￨3￨e ref￨3￨e .￨3￨e getRefId￨3￨e (￨3￨e )￨3￨e )￨3￨e +￨3￨e "<seq2seq4repair_space>doesn\'t<seq2seq4repair_space>denote<seq2seq4repair_space>a<seq2seq4repair_space>"￨3￨e )￨3￨e +￨3￨e (￨3￨e dataTypeName￨3￨e )￨3￨e ;￨3￨e throw￨3￨e new￨3￨e BuildException￨3￨e (￨3￨e msg￨3￨e )￨3￨e ;￨3￨e else￨3￨j {￨3￨j return￨4￨e (￨4￨e (￨4￨e FileSet￨4￨e )￨4￨e (￨4￨e o￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f public￨2￨f Object￨2￨f clone￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CustomResourceLoadingApplication￨1￨d extends￨1￨d WicketExampleApplication￨1￨d {￨1￨d private￨2￨d static￨2￨d final￨2￨d Log￨2￨d log￨2￨d =￨2￨d LogFactory￨2￨d .￨2￨d getLog￨2￨d (￨2￨d CustomResourceLoadingApplication￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d final￨2￨d class￨2￨d CustomResourceStreamLocator￨2￨d extends￨2￨d AbstractResourceStreamLocator￨2￨d {￨2￨d private￨3￨e ClassLoaderResourceStreamLocator￨3￨e classLoaderLocator￨3￨e =￨3￨e new￨3￨e ClassLoaderResourceStreamLocator￨3￨e (￨3￨e )￨3￨e ;￨3￨e protected￨3￨f IResourceStream￨3￨f locate￨3￨f (￨3￨f Class￨4￨p clazz￨4￨p ,￨4￨p String￨4￨p path￨4￨p )￨3￨f {￨3￨f if￨4￨j (￨4￨j CustomResourceLoadingApplication￨5￨c .￨5￨c log￨5￨c .￨5￨c isDebugEnabled￨5￨c (￨5￨c )￨5￨c )￨4￨j {￨4￨j CustomResourceLoadingApplication￨5￨e .￨5￨e log￨5￨e .￨5￨e debug￨5￨e (￨5￨e (￨5￨e (￨5￨e "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>locate<seq2seq4repair_space>resource<seq2seq4repair_space>'"￨5￨e +￨5￨e path￨5￨e )￨5￨e +￨5￨e "'<seq2seq4repair_space>using<seq2seq4repair_space>classloader<seq2seq4repair_space>the<seq2seq4repair_space>servlet<seq2seq4repair_space>context"￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j String￨4￨e location￨4￨e ;￨4￨e if￨4￨j (￨4￨j clazz￨5￨c ==￨5￨c (￨5￨c AlternativePageFromWebContext￨5￨c .￨5￨c class￨5￨c )￨5￨c )￨4￨j {￨4￨j String￨5￨e extension￨5￨e =￨5￨e path￨5￨e .￨5￨e substring￨5￨e (￨5￨e (￨5￨e (￨5￨e path￨5￨e .￨5￨e lastIndexOf￨5￨e (￨5￨e '.'￨5￨e )￨5￨e )￨5￨e +￨5￨e 1￨5￨e )￨5￨e )￨5￨e ;￨5￨e String￨5￨e simpleFileName￨5￨e =￨5￨e Strings￨5￨e .￨5￨e lastPathComponent￨5￨e (￨5￨e clazz￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e ,￨5￨e '.'￨5￨e )￨5￨e ;￨5￨e location￨5￨e =￨5￨e (￨5￨e (￨5￨e "/WEB-INF/templates/"￨5￨e +￨5￨e simpleFileName￨5￨e )￨5￨e +￨5￨e "."￨5￨e )￨5￨e +￨5￨e extension￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j location￨5￨e =￨5￨e "/WEB-INF/templates/"￨5￨e +￨5￨e path￨5￨e ;￨5￨e }￨4￨j URL￨4￨e url￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b url￨5￨b =￨5￨b getWicketServlet￨5￨b (￨5￨b )￨5￨b .￨5￨b getServletContext￨5￨b (￨5￨b )￨5￨b .￨5￨b getResource￨5￨b (￨5￨b location￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b if￨5￨j (￨5￨j url￨6￨c !=￨6￨c null￨6￨c )￨5￨j {￨5￨j return￨6￨e new￨6￨e UrlResourceStream￨6￨e (￨6￨e url￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨f catch￨4￨f (￨4￨f MalformedURLException￨5￨p e￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e WicketRuntimeException￨5￨e (￨5￨e e￨5￨e )￨5￨e ;￨5￨e }￨4￨f return￨4￨e classLoaderLocator￨4￨e .￨4￨e locate￨4￨e (￨4￨e clazz￨4￨e ,￨4￨e path￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨d public￨2￨f CustomResourceLoadingApplication￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Class￨2￨f getHomePage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f init￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ResourceAvailableCondition￨1￨d extends￨1￨d AbstractAvailableCondition￨1￨d implements￨1￨d Condition￨1￨d {￨1￨d private￨2￨e String￨2￨e m_resource￨2￨e ;￨2￨e public￨2￨f void￨2￨f setResource￨2￨f (￨2￨f final￨3￨p String￨3￨p resource￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f evaluate￨2￨f (￨2￨f final￨2￨f TaskContext￨2￨f context￨2￨f )￨2￨f throws￨2￨f TaskException￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c m_resource￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j throw￨4￨e new￨4￨e TaskException￨4￨e (￨4￨e "Resource<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>specified."￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b final￨3￨b ClassLoader￨3￨b classLoader￨3￨b =￨3￨b buildClassLoader￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b final￨3￨e InputStream￨3￨e instr￨3￨e =￨3￨e classLoader￨3￨e .￨3￨e getResourceAsStream￨3￨e (￨3￨e m_resource￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j instr￨4￨c !=￨4￨c null￨4￨c )￨3￨j {￨3￨j IOUtil￨4￨e .￨4￨e shutdownStream￨4￨e (￨4￨e instr￨4￨e )￨4￨e ;￨4￨e return￨4￨e true￨4￨e ;￨4￨e }￨3￨j return￨3￨e false￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d RuntimeMXBeanReadResourceHandler￨1￨d implements￨1￨d OperationStepHandler￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e RuntimeMXBeanReadResourceHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e RuntimeMXBeanReadResourceHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨f RuntimeMXBeanReadResourceHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f void￨2￨f execute￨2￨f (￨2￨f OperationContext￨2￨f context￨2￨f ,￨2￨f ModelNode￨2￨f operation￨2￨f )￨2￨f throws￨2￨f OperationFailedException￨2￨f (￨2￨f )￨2￨f {￨2￨f final￨3￨e ModelNode￨3￨e result￨3￨e =￨3￨e context￨3￨e .￨3￨e getResult￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l String￨4￨c attribute￨4￨c :￨4￨c PlatformMBeanConstants￨4￨c .￨4￨c RUNTIME_READ_ATTRIBUTES￨4￨c )￨3￨l {￨3￨l final￨4￨e ModelNode￨4￨e store￨4￨e =￨4￨e result￨4￨e .￨4￨e get￨4￨e (￨4￨e attribute￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f RuntimeMXBeanAttributeHandler￨5￨e .￨5￨e storeResult￨5￨e (￨5￨e attribute￨5￨e ,￨5￨e store￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f SecurityException￨5￨p ignored￨5￨p )￨4￨f {￨4￨f }￨4￨f catch￨4￨f (￨4￨f UnsupportedOperationException￨5￨p ignored￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨l for￨3￨l (￨3￨l String￨4￨c attribute￨4￨c :￨4￨c PlatformMBeanConstants￨4￨c .￨4￨c RUNTIME_METRICS￨4￨c )￨3￨l {￨3￨l final￨4￨e ModelNode￨4￨e store￨4￨e =￨4￨e result￨4￨e .￨4￨e get￨4￨e (￨4￨e attribute￨4￨e )￨4￨e ;￨4￨e try￨4￨f (￨4￨f )￨4￨f {￨4￨f RuntimeMXBeanAttributeHandler￨5￨e .￨5￨e storeResult￨5￨e (￨5￨e attribute￨5￨e ,￨5￨e store￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f SecurityException￨5￨p ignored￨5￨p )￨4￨f {￨4￨f }￨4￨f catch￨4￨f (￨4￨f UnsupportedOperationException￨5￨p ignored￨5￨p )￨4￨f {￨4￨f }￨4￨f }￨3￨l if￨3￨j (￨3￨j (￨4￨c PlatformMBeanUtil￨4￨c .￨4￨c JVM_MAJOR_VERSION￨4￨c )￨4￨c >￨4￨c 6￨4￨c )￨3￨j {￨3￨j final￨4￨e ModelNode￨4￨e store￨4￨e =￨4￨e result￨4￨e .￨4￨e get￨4￨e (￨4￨e OBJECT_NAME￨4￨e )￨4￨e ;￨4￨e RuntimeMXBeanAttributeHandler￨4￨e .￨4￨e storeResult￨4￨e (￨4￨e OBJECT_NAME￨4￨e ,￨4￨e store￨4￨e )￨4￨e ;￨4￨e }￨3￨j <START_BUG>￨3￨b context￨3￨b .￨3￨b completeStep￨3￨b (￨3￨b NOOP_ROLLBACK_HANDLER￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f }￨1￨d
final￨1￨d class￨1￨d Behaviors￨1￨d implements￨1￨d IDetachable￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e long￨2￨e serialVersionUID￨2￨e =￨2￨e 1L￨2￨e ;￨2￨e private￨2￨e final￨2￨e Component￨2￨e component￨2￨e ;￨2￨e public￨2￨f Behaviors￨2￨f (￨2￨f Component￨3￨p component￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f add￨2￨f (￨2￨f Behavior￨3￨p ...￨3￨p behaviors￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f internalAdd￨2￨f (￨2￨f final￨3￨p Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f component￨3￨e .￨3￨e data_add￨3￨e (￨3￨e behavior￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b !￨3￨b (￨3￨b behavior￨3￨b .￨3￨b getStatelessHint￨3￨b (￨3￨b component￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b getBehaviorId￨3￨e (￨3￨e behavior￨3￨e )￨3￨e ;￨3￨e }￨2￨f @￨2￨f SuppressWarnings￨2￨f (￨2￨f "unchecked"￨2￨f )￨2￨f public￨2￨f <￨2￨f M￨2￨f extends￨2￨f Behavior￨2￨f >￨2￨f List￨2￨f <￨2￨f M￨2￨f >￨2￨f getBehaviors￨2￨f (￨2￨f Class￨3￨p <￨3￨p M￨3￨p >￨3￨p type￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f remove￨2￨f (￨2￨f Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f void￨2￨f detach￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f internalRemove￨2￨f (￨2￨f final￨3￨p Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f removeBehaviorsIdList￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f Behaviors￨2￨f .￨2￨f BehaviorIdList￨2￨f getBehaviorsIdList￨2￨f (￨2￨f boolean￨3￨p createIfNotFound￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d BehaviorIdList￨2￨d extends￨2￨d ArrayList￨2￨d <￨2￨d Behavior￨2￨d >￨2￨d {￨2￨d private￨3￨e static￨3￨e final￨3￨e long￨3￨e serialVersionUID￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨f BehaviorIdList￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f final￨2￨f int￨2￨f getBehaviorId￨2￨f (￨2￨f Behavior￨3￨p behavior￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f final￨2￨f Behavior￨2￨f getBehaviorById￨2￨f (￨2￨f int￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d PackageDeclaration￨1￨d extends￨1￨d ASTNode￨1￨d {￨1￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d JAVADOC_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d PackageDeclaration￨2￨d .￨2￨d class￨2￨d ,￨2￨d "javadoc"￨2￨d ,￨2￨d Javadoc￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d OPTIONAL￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildListPropertyDescriptor￨2￨d ANNOTATIONS_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildListPropertyDescriptor￨2￨d (￨2￨d PackageDeclaration￨2￨d .￨2￨d class￨2￨d ,￨2￨d "annotations"￨2￨d ,￨2￨d Annotation￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d final￨2￨d ChildPropertyDescriptor￨2￨d NAME_PROPERTY￨2￨d =￨2￨d new￨2￨d ChildPropertyDescriptor￨2￨d (￨2￨d PackageDeclaration￨2￨d .￨2￨d class￨2￨d ,￨2￨d "name"￨2￨d ,￨2￨d Name￨2￨d .￨2￨d class￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d MANDATORY￨2￨d ,￨2￨d ASTNode￨2￨d .￨2￨d NO_CYCLE_RISK￨2￨d )￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS_2_0￨2￨d ;￨2￨d private￨2￨d static￨2￨d final￨2￨d List￨2￨d PROPERTY_DESCRIPTORS_3_0￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d propertyDescriptors￨2￨d (￨2￨d int￨2￨d apiLevel￨2￨d )￨2￨d {￨2￨d }￨2￨d Javadoc￨2￨e optionalDocComment￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e ASTNode￨2￨e .￨2￨e NodeList￨2￨e annotations￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e Name￨2￨e packageName￨2￨e =￨2￨e null￨2￨e ;￨2￨e PackageDeclaration￨2￨f (￨2￨f AST￨3￨p ast￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalStructuralPropertiesForType￨2￨f (￨2￨f int￨3￨p apiLevel￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f ASTNode￨2￨f internalGetSetChildProperty￨2￨f (￨2￨f ChildPropertyDescriptor￨3￨p property￨3￨p ,￨3￨p boolean￨3￨p get￨3￨p ,￨3￨p ASTNode￨3￨p child￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f List￨2￨f internalGetChildListProperty￨2￨f (￨2￨f ChildListPropertyDescriptor￨3￨p property￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f int￨2￨f getNodeType0￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f ASTNode￨2￨f clone0￨2￨f (￨2￨f AST￨3￨p target￨3￨p )￨2￨f {￨2￨f }￨2￨f final￨2￨f boolean￨2￨f subtreeMatch0￨2￨f (￨2￨f ASTMatcher￨3￨p matcher￨3￨p ,￨3￨p Object￨3￨p other￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f accept0￨2￨f (￨2￨f ASTVisitor￨3￨p visitor￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f List￨2￨f annotations￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Javadoc￨2￨f getJavadoc￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setJavadoc￨2￨f (￨2￨f Javadoc￨3￨p docComment￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Name￨2￨f getName￨2￨f (￨2￨f )￨2￨f {￨2￨f if￨3￨j (￨3￨j (￨4￨c this￨4￨c .￨4￨c packageName￨4￨c )￨4￨c ==￨4￨c null￨4￨c )￨3￨j {￨3￨j <START_BUG>￨4￨b synchronized￨4￨b (￨4￨b this￨4￨b .￨4￨b ast￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b if￨4￨j (￨4￨j (￨5￨c this￨5￨c .￨5￨c packageName￨5￨c )￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j preLazyInit￨5￨e (￨5￨e )￨5￨e ;￨5￨e this￨5￨e .￨5￨e packageName￨5￨e =￨5￨e new￨5￨e SimpleName￨5￨e (￨5￨e this￨5￨e .￨5￨e ast￨5￨e )￨5￨e ;￨5￨e postLazyInit￨5￨e (￨5￨e this￨5￨e .￨5￨e packageName￨5￨e ,￨5￨e PackageDeclaration￨5￨e .￨5￨e NAME_PROPERTY￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e this￨3￨e .￨3￨e packageName￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f setName￨2￨f (￨2￨f Name￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPackageBinding￨2￨f resolveBinding￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f memSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f treeSize￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d AddNamespaceHandler￨1￨d implements￨1￨d ModelUpdateOperationHandler￨1￨d ,￨1￨d DescriptionProvider￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e OPERATION_NAME￨2￨e =￨2￨e "add-namespace"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e AddNamespaceHandler￨2￨e INSTANCE￨2￨e =￨2￨e new￨2￨e AddNamespaceHandler￨2￨e (￨2￨e )￨2￨e ;￨2￨e public￨2￨f static￨2￨f ModelNode￨2￨f getAddNamespaceOperation￨2￨f (￨2￨f ModelNode￨3￨p address￨3￨p ,￨3￨p ModelNode￨3￨p namespace￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e ParameterValidator￨2￨e typeValidator￨2￨e =￨2￨e new￨2￨e org￨2￨e .￨2￨e jboss￨2￨e .￨2￨e as￨2￨e .￨2￨e controller￨2￨e .￨2￨e operations￨2￨e .￨2￨e validation￨2￨e .￨2￨e ModelTypeValidator￨2￨e (￨2￨e ModelType￨2￨e .￨2￨e PROPERTY￨2￨e )￨2￨e ;￨2￨e private￨2￨f AddNamespaceHandler￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f Cancellable￨2￨f execute￨2￨f (￨2￨f NewOperationContext￨3￨p context￨3￨p ,￨3￨p ModelNode￨3￨p operation￨3￨p ,￨3￨p ResultHandler￨3￨p resultHandler￨3￨p )￨2￨f {￨2￨f }￨2￨f @￨2￨f Override￨2￨f public￨2￨f ModelNode￨2￨f getModelDescription￨2￨f (￨2￨f Locale￨3￨p locale￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f validate￨2￨f (￨2￨f ModelNode￨3￨p param￨3￨p ,￨3￨p ModelNode￨3￨p namespaces￨3￨p )￨2￨f {￨2￨f String￨3￨e failure￨3￨e =￨3￨e typeValidator￨3￨e .￨3￨e validateParameter￨3￨e (￨3￨e NAMESPACE￨3￨e ,￨3￨e param￨3￨e )￨3￨e ;￨3￨e String￨3￨e name￨3￨e =￨3￨e param￨3￨e .￨3￨e asProperty￨3￨e (￨3￨e )￨3￨e .￨3￨e getName￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b failure￨3￨b ==￨3￨b null￨3￨b )￨3￨b &&￨3￨b (￨3￨b !￨3￨b (￨3￨b namespaces￨3￨b .￨3￨b isDefined￨3￨b (￨3￨b )￨3￨b )￨3￨b )￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b for￨3￨l (￨3￨l ModelNode￨4￨c node￨4￨c :￨4￨c namespaces￨4￨c .￨4￨c asList￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l if￨4￨j (￨4￨j name￨5￨c .￨5￨c equals￨5￨c (￨5￨c node￨5￨c .￨5￨c asProperty￨5￨c (￨5￨c )￨5￨c .￨5￨c getName￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j failure￨5￨e =￨5￨e (￨5￨e (￨5￨e "Namespace<seq2seq4repair_space>with<seq2seq4repair_space>prefix<seq2seq4repair_space>"￨5￨e +￨5￨e name￨5￨e )￨5￨e +￨5￨e "<seq2seq4repair_space>already<seq2seq4repair_space>registered<seq2seq4repair_space>with<seq2seq4repair_space>schema<seq2seq4repair_space>URI<seq2seq4repair_space>"￨5￨e )￨5￨e +￨5￨e (￨5￨e node￨5￨e .￨5￨e asProperty￨5￨e (￨5￨e )￨5￨e .￨5￨e getValue￨5￨e (￨5￨e )￨5￨e .￨5￨e asString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l }￨3￨e return￨3￨e failure￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d XQDTUriResolver￨1￨d implements￨1￨d IXQDTUriResolver￨1￨d {￨1￨d public￨2￨f URI￨2￨f resolveModuleImport￨2￨f (￨2￨f URI￨3￨p baseUri￨3￨p ,￨3￨p String￨3￨p uri￨3￨p ,￨3￨p String￨3￨p [￨3￨p ]￨3￨p hints￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f URI￨2￨f resolveUri￨2￨f (￨2￨f URI￨3￨p baseUri￨3￨p ,￨3￨p String￨3￨p uriString￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f ISourceModule￨2￨f locateSourceModule￨2￨f (￨2￨f URI￨3￨p uri￨3￨p ,￨3￨p IScriptProject￨3￨p project￨3￨p )￨2￨f {￨2￨f IPath￨3￨e projectLoc￨3￨e =￨3￨e project￨3￨e .￨3￨e getProject￨3￨e (￨3￨e )￨3￨e .￨3￨e getLocation￨3￨e (￨3￨e )￨3￨e ;￨3￨e IPath￨3￨e path￨3￨e =￨3￨e new￨3￨e Path￨3￨e (￨3￨e uri￨3￨e .￨3￨e getPath￨3￨e (￨3￨e )￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j projectLoc￨4￨c .￨4￨c isPrefixOf￨4￨c (￨4￨c path￨4￨c )￨4￨c )￨3￨j {￨3￨j IPath￨4￨e packageAbolutePath￨4￨e =￨4￨e path￨4￨e .￨4￨e removeLastSegments￨4￨e (￨4￨e 1￨4￨e )￨4￨e ;￨4￨e IPath￨4￨e packageRelativePath￨4￨e =￨4￨e packageAbolutePath￨4￨e .￨4￨e removeFirstSegments￨4￨e (￨4￨e projectLoc￨4￨e .￨4￨e segmentCount￨4￨e (￨4￨e )￨4￨e )￨4￨e .￨4￨e makeRelative￨4￨e (￨4￨e )￨4￨e .￨4￨e setDevice￨4￨e (￨4￨e null￨4￨e )￨4￨e ;￨4￨e IModelElement￨4￨e folder￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c packageRelativePath￨5￨c .￨5￨c segmentCount￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j folder￨5￨e =￨5￨e project￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j try￨5￨f (￨5￨f )￨5￨f {￨5￨f <START_BUG>￨6￨b folder￨6￨b =￨6￨b project￨6￨b .￨6￨b findScriptFolder￨6￨b (￨6￨b packageRelativePath￨6￨b .￨6￨b makeAbsolute￨6￨b (￨6￨b )￨6￨b )￨6￨b ;￨6￨b <END_BUG>￨6￨b }￨5￨f catch￨5￨f (￨5￨f ModelException￨6￨p e￨6￨p )￨5￨f {￨5￨f e￨6￨e .￨6￨e printStackTrace￨6￨e (￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j if￨4￨j (￨4￨j folder￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j File￨5￨e f￨5￨e =￨5￨e new￨5￨e File￨5￨e (￨5￨e path￨5￨e .￨5￨e toOSString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j f￨6￨c .￨6￨c exists￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j return￨6￨e DLTKCore￨6￨e .￨6￨e createSourceModuleFrom￨6￨e (￨6￨e (￨6￨e (￨6￨e IContainer￨6￨e )￨6￨e (￨6￨e folder￨6￨e .￨6￨e getResource￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e .￨6￨e getFile￨6￨e (￨6￨e new￨6￨e Path￨6￨e (￨6￨e path￨6￨e .￨6￨e lastSegment￨6￨e (￨6￨e )￨6￨e )￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j }￨3￨j return￨3￨e null￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d XpandBackendFacade￨1￨d {￨1￨d private￨2￨e final￨2￨e String￨2￨e _xpandFile￨2￨e ;￨2￨e private￨2￨e final￨2￨e MiddleEnd￨2￨e _middleEnd￨2￨e ;￨2￨e private￨2￨e final￨2￨e String￨2￨e _fileEncoding￨2￨e ;￨2￨e private￨2￨e final￨2￨e Collection￨2￨e <￨2￨e MetaModel￨2￨e >￨2￨e _mms￨2￨e ;￨2￨e private￨2￨e final￨2￨e Collection￨2￨e <￨2￨e Outlet￨2￨e >￨2￨e _outlets￨2￨e ;￨2￨e private￨2￨d static￨2￨d Log￨2￨d log￨2￨d =￨2￨d LogFactory￨2￨d .￨2￨d getLog￨2￨d (￨2￨d XpandBackendFacade￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d Object￨2￨d executeStatement￨2￨d (￨2￨d String￨2￨d code￨2￨d ,￨2￨d Collection￨2￨d <￨2￨d MetaModel￨2￨d >￨2￨d mms￨2￨d ,￨2￨d Map￨2￨d <￨2￨d String￨2￨d ,￨2￨d Object￨2￨d >￨2￨d variables￨2￨d ,￨2￨d Collection￨2￨d <￨2￨d Outlet￨2￨d >￨2￨d outlets￨2￨d ,￨2￨d XpandProtectedRegionResolver￨2￨d resolver￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f static￨2￨f Object￨2￨f executeStatement￨2￨f (￨2￨f String￨3￨p code￨3￨p ,￨3￨p String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Object￨3￨p >￨3￨p variables￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p ,￨3￨p XpandProtectedRegionResolver￨3￨p resolver￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f Object￨2￨f executeStatement￨2￨f (￨2￨f String￨3￨p code￨3￨p ,￨3￨p String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Object￨3￨p >￨3￨p variables￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p ,￨3￨p List￨3￨p <￨3￨p String￨3￨p >￨3￨p advice￨3￨p ,￨3￨p XpandProtectedRegionResolver￨3￨p resolver￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f executeStatement￨2￨f (￨2￨f String￨3￨p code￨3￨p ,￨3￨p Map￨3￨p <￨3￨p String￨3￨p ,￨3￨p Object￨3￨p >￨3￨p variables￨3￨p ,￨3￨p List￨3￨p <￨3￨p String￨3￨p >￨3￨p advice￨3￨p ,￨3￨p XpandProtectedRegionResolver￨3￨p resolver￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f registerOutlets￨2￨f (￨2￨f ExecutionContext￨3￨p ctx￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f registerProtectedRegionResolver￨2￨f (￨2￨f ExecutionContext￨3￨p ctx￨3￨p ,￨3￨p XpandProtectedRegionResolver￨3￨p resolver￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d static￨2￨d class￨2￨d InMemoryPpAdapter￨2￨d implements￨2￨d InMemoryPostprocessor￨2￨d {￨2￨d private￨3￨e final￨3￨e PostProcessor￨3￨e _oldPp￨3￨e ;￨3￨e private￨3￨e final￨3￨e Outlet￨3￨e _outlet￨3￨e ;￨3￨e public￨3￨f InMemoryPpAdapter￨3￨f (￨3￨f PostProcessor￨4￨p oldPp￨4￨p ,￨4￨p Outlet￨4￨p outlet￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f CharSequence￨3￨f process￨3￨f (￨3￨f CharSequence￨4￨p unprocessed￨4￨p ,￨4￨p String￨4￨p uri￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d FileHandleImpl￨2￨d implements￨2￨d FileHandle￨2￨d {￨2￨d private￨3￨e CharSequence￨3￨e _buffer￨3￨e ;￨3￨e private￨3￨e final￨3￨e Outlet￨3￨e _outlet￨3￨e ;￨3￨e private￨3￨e final￨3￨e File￨3￨e _file￨3￨e ;￨3￨e public￨3￨f FileHandleImpl￨3￨f (￨3￨f CharSequence￨4￨p buffer￨4￨p ,￨4￨p Outlet￨4￨p outlet￨4￨p ,￨4￨p File￨4￨p file￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f CharSequence￨3￨f getBuffer￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f getFileEncoding￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f Outlet￨3￨f getOutlet￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f File￨3￨f getTargetFile￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isAppend￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f isOverwrite￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f setBuffer￨3￨f (￨3￨f CharSequence￨4￨p buffer￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f writeAndClose￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d private￨2￨d static￨2￨d class￨2￨d UriBasedPpAdapter￨2￨d implements￨2￨d UriBasedPostprocessor￨2￨d {￨2￨d private￨3￨e final￨3￨e PostProcessor￨3￨e _oldPp￨3￨e ;￨3￨e private￨3￨e final￨3￨e Outlet￨3￨e _outlet￨3￨e ;￨3￨e public￨3￨f UriBasedPpAdapter￨3￨f (￨3￨f PostProcessor￨4￨p oldPp￨4￨p ,￨4￨p Outlet￨4￨p outlet￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f process￨3￨f (￨3￨f String￨4￨p uri￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d public￨2￨f static￨2￨f XpandBackendFacade￨2￨f createForFile￨2￨f (￨2￨f String￨3￨p xpandFilename￨3￨p ,￨3￨p String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f XpandExecutionContext￨2￨f createXpandExecutionContext￨2￨f (￨2￨f String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p )￨2￨f {￨2￨f fileEncoding￨3￨e =￨3￨e OldHelper￨3￨e .￨3￨e normalizedFileEncoding￨3￨e (￨3￨e fileEncoding￨3￨e )￨3￨e ;￨3￨e final￨3￨e Output￨3￨e output￨3￨e =￨3￨e new￨3￨e OutputImpl￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l Outlet￨4￨c outlet￨4￨c :￨4￨c outlets￨4￨c )￨3￨l {￨3￨l output￨4￨e .￨4￨e addOutlet￨4￨e (￨4￨e outlet￨4￨e )￨4￨e ;￨4￨e }￨3￨l final￨3￨e XpandExecutionContextImpl￨3￨e ctx￨3￨e =￨3￨e new￨3￨e XpandExecutionContextImpl￨3￨e (￨3￨e output￨3￨e ,￨3￨e null￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l MetaModel￨4￨c mm￨4￨c :￨4￨c mms￨4￨c )￨3￨l {￨3￨l ctx￨4￨e .￨4￨e registerMetaModel￨4￨e (￨4￨e mm￨4￨e )￨4￨e ;￨4￨e }￨3￨l <START_BUG>￨3￨b ctx￨3￨b .￨3￨b setFileEncoding￨3￨b (￨3￨b fileEncoding￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b return￨3￨e ctx￨3￨e ;￨3￨e }￨2￨f private￨2￨f Map￨2￨f <￨2￨f Class￨2￨f <￨2￨f ?￨2￨f >￨2￨f ,￨2￨f Object￨2￨f >￨2￨f createSpecificParameters￨2￨f (￨2￨f String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f XpandBackendFacade￨2￨f (￨2￨f String￨3￨p xpandFilename￨3￨p ,￨3￨p String￨3￨p fileEncoding￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p MetaModel￨3￨p >￨3￨p mms￨3￨p ,￨3￨p Collection￨3￨p <￨3￨p Outlet￨3￨p >￨3￨p outlets￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Collection￨2￨f <￨2￨f NamedFunction￨2￨f >￨2￨f getContributedFunctions￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f FunctionDefContext￨2￨f getFunctionDefContext￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ActionExit￨1￨d extends￨1￨d UMLAction￨1￨d {￨1￨d public￨2￨e static￨2￨e ActionExit￨2￨e SINGLETON￨2￨e =￨2￨e new￨2￨e ActionExit￨2￨e (￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e active￨2￨e =￨2￨e false￨2￨e ;￨2￨e protected￨2￨f ActionExit￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p ae￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b ProjectBrowser￨3￨b pb￨3￨b =￨3￨b ProjectBrowser￨3￨b .￨3￨b TheInstance￨3￨b ;￨3￨b <END_BUG>￨3￨b Project￨3￨e p￨3￨e =￨3￨e ProjectManager￨3￨e .￨3￨e getManager￨3￨e (￨3￨e )￨3￨e .￨3￨e getCurrentProject￨3￨e (￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c (￨4￨c p￨4￨c !=￨4￨c null￨4￨c )￨4￨c &&￨4￨c (￨4￨c p￨4￨c .￨4￨c needsSave￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨4￨c &&￨4￨c (￨4￨c !￨4￨c (￨4￨c active￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j active￨4￨e =￨4￨e true￨4￨e ;￨4￨e String￨4￨f t￨4￨f =￨4￨f MessageFormat￨4￨f .￨4￨f format￨4￨f (￨4￨f Argo￨4￨f .￨4￨f localize￨4￨f (￨4￨f "Actions"￨4￨f ,￨4￨f "template.exit.save_changes_to"￨4￨f )￨4￨f ,￨4￨f new￨4￨f Object￨4￨f [￨4￨f ]￨4￨f (￨4￨f )￨4￨f {￨4￨f }￨4￨f )￨4￨e ;￨4￨e int￨4￨e response￨4￨e =￨4￨e JOptionPane￨4￨e .￨4￨e showConfirmDialog￨4￨e (￨4￨e pb￨4￨e ,￨4￨e t￨4￨e ,￨4￨e t￨4￨e ,￨4￨e JOptionPane￨4￨e .￨4￨e YES_NO_CANCEL_OPTION￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j response￨5￨c ==￨5￨c (￨5￨c JOptionPane￨5￨c .￨5￨c CANCEL_OPTION￨5￨c )￨5￨c )￨4￨j {￨4￨j active￨5￨e =￨5￨e false￨5￨e ;￨5￨e return￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j response￨5￨c ==￨5￨c (￨5￨c JOptionPane￨5￨c .￨5￨c YES_OPTION￨5￨c )￨5￨c )￨4￨j {￨4￨j boolean￨5￨e safe￨5￨e =￨5￨e false￨5￨e ;￨5￨e if￨5￨j (￨5￨j ActionSaveProject￨6￨c .￨6￨c SINGLETON￨6￨c .￨6￨c shouldBeEnabled￨6￨c (￨6￨c )￨6￨c )￨5￨j {￨5￨j safe￨6￨e =￨6￨e ActionSaveProject￨6￨e .￨6￨e SINGLETON￨6￨e .￨6￨e trySave￨6￨e (￨6￨e true￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j !￨6￨c safe￨6￨c )￨5￨j {￨5￨j safe￨6￨e =￨6￨e ActionSaveProjectAs￨6￨e .￨6￨e SINGLETON￨6￨e .￨6￨e trySave￨6￨e (￨6￨e false￨6￨e )￨6￨e ;￨6￨e }￨5￨j if￨5￨j (￨5￨j !￨6￨c safe￨6￨c )￨5￨j {￨5￨j active￨6￨e =￨6￨e false￨6￨e ;￨6￨e return￨6￨e ;￨6￨e }￨5￨j }￨4￨j active￨4￨e =￨4￨e false￨4￨e ;￨4￨e }￨3￨j if￨3￨j (￨3￨j !￨4￨c (￨4￨c active￨4￨c )￨4￨c )￨3￨j {￨3￨j Configuration￨4￨e .￨4￨e save￨4￨e (￨4￨e )￨4￨e ;￨4￨e ArgoSecurityManager￨4￨e .￨4￨e getInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e setAllowExit￨4￨e (￨4￨e true￨4￨e )￨4￨e ;￨4￨e System￨4￨e .￨4￨e exit￨4￨e (￨4￨e 0￨4￨e )￨4￨e ;￨4￨e }￨3￨j }￨2￨f }￨1￨d
public￨1￨d final￨1￨d class￨1￨d WorkbenchKeyboard￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e boolean￨2￨e DEBUG￨2￨e =￨2￨e Policy￨2￨e .￨2￨e DEBUG_KEY_BINDINGS￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e boolean￨2￨e DEBUG_VERBOSE￨2￨e =￨2￨e Policy￨2￨e .￨2￨e DEBUG_KEY_BINDINGS_VERBOSE￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MULTI_KEY_ASSIST_SHELL_MAX_HEIGHT￨2￨e =￨2￨e 175￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e int￨2￨e MULTI_KEY_ASSIST_SHELL_MAX_WIDTH￨2￨e =￨2￨e 300￨2￨e ;￨2￨e static￨2￨e final￨2￨e String￨2￨e OUT_OF_ORDER_KEYS￨2￨e =￨2￨e "OutOfOrderKeys"￨2￨e ;￨2￨e static￨2￨e KeySequence￨2￨e outOfOrderKeys￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d ResourceBundle￨2￨d RESOURCE_BUNDLE￨2￨d =￨2￨d ResourceBundle￨2￨d .￨2￨d getBundle￨2￨d (￨2￨d WorkbenchKeyboard￨2￨d .￨2￨d class￨2￨d .￨2￨d getName￨2￨d (￨2￨d )￨2￨d )￨2￨d ;￨2￨d public￨2￨d static￨2￨d List￨2￨d generatePossibleKeyStrokes￨2￨d (￨2￨d Event￨2￨d event￨2￨d )￨2￨d {￨2￨d }￨2￨d private￨2￨f static￨2￨f void￨2￨f initializeOutOfOrderKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f isOutOfOrderKey￨2￨f (￨2￨f List￨3￨p keyStrokes￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨e final￨2￨e IActivityManager￨2￨e activityManager￨2￨e ;￨2￨e private￨2￨e final￨2￨e ICommandManager￨2￨e commandManager￨2￨e ;￨2￨e private￨2￨f final￨2￨f Listener￨2￨f keyDownFilter￨2￨f =￨2￨f new￨2￨f Listener￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f handleEvent￨3￨f (￨3￨f Event￨4￨p event￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e Shell￨2￨e multiKeyAssistShell￨2￨e =￨2￨e null￨2￨e ;￨2￨e private￨2￨e long￨2￨e startTime￨2￨e =￨2￨e Long￨2￨e .￨2￨e MAX_VALUE￨2￨e ;￨2￨e private￨2￨e final￨2￨e KeyBindingState￨2￨e state￨2￨e ;￨2￨e private￨2￨f final￨2￨f IWindowListener￨2￨f windowListener￨2￨f =￨2￨f new￨2￨f IWindowListener￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f windowActivated￨3￨f (￨3￨f IWorkbenchWindow￨4￨p window￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f windowClosed￨3￨f (￨3￨f IWorkbenchWindow￨4￨p window￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f windowDeactivated￨3￨f (￨3￨f IWorkbenchWindow￨4￨p window￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f windowOpened￨3￨f (￨3￨f IWorkbenchWindow￨4￨p window￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e final￨2￨e IWorkbench￨2￨e workbench￨2￨e ;￨2￨e public￨2￨f WorkbenchKeyboard￨2￨f (￨2￨f Workbench￨3￨p associatedWorkbench￨3￨p ,￨3￨p IActivityManager￨3￨p associatedActivityManager￨3￨p ,￨3￨p ICommandManager￨3￨p associatedCommandManager￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkActiveWindow￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f closeMultiKeyAssistShell￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f static￨2￨f boolean￨2￨f isEnabled￨2￨f (￨2￨f ICommand￨3￨p command￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f executeCommand￨2￨f (￨2￨f String￨2￨f commandId￨2￨f )￨2￨f throws￨2￨f CommandException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f filterKeySequenceBindings￨2￨f (￨2￨f Event￨3￨p event￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f Listener￨2￨f getKeyDownFilter￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f String￨2￨f getPerfectMatch￨2￨f (￨2￨f KeySequence￨3￨p keySequence￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f incrementState￨2￨f (￨2￨f KeySequence￨3￨p sequence￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isPartialMatch￨2￨f (￨2￨f KeySequence￨3￨p keySequence￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f isPerfectMatch￨2￨f (￨2￨f KeySequence￨3￨p keySequence￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f final￨2￨f void￨2￨f logException￨2￨f (￨2￨f CommandException￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f openMultiKeyAssistShell￨2￨f (￨2￨f final￨3￨p Display￨3￨p display￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f press￨2￨f (￨2￨f List￨2￨f potentialKeyStrokes￨2￨f ,￨2￨f Event￨2￨f event￨2￨f )￨2￨f throws￨2￨f CommandException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f processKeyEvent￨2￨f (￨2￨f List￨3￨p keyStrokes￨3￨p ,￨3￨p Event￨3￨p event￨3￨p )￨2￨f {￨2￨f boolean￨3￨e eatKey￨3￨e =￨3￨e false￨3￨e ;￨3￨e if￨3￨j (￨3￨j !￨4￨c (￨4￨c keyStrokes￨4￨c .￨4￨c isEmpty￨4￨c (￨4￨c )￨4￨c )￨4￨c )￨3￨j {￨3￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f eatKey￨5￨e =￨5￨e press￨5￨e (￨5￨e keyStrokes￨5￨e ,￨5￨e event￨5￨e )￨5￨e ;￨5￨e }￨4￨f catch￨4￨f (￨4￨f CommandException￨5￨p e￨5￨p )￨4￨f {￨4￨f logException￨5￨e (￨5￨e e￨5￨e )￨5￨e ;￨5￨e eatKey￨5￨e =￨5￨e true￨5￨e ;￨5￨e }￨4￨f }￨3￨j if￨3￨j (￨3￨j eatKey￨4￨c )￨3￨j {￨3￨j switch￨4￨s (￨4￨s event￨4￨c .￨4￨c type￨4￨c )￨4￨s {￨4￨s case￨5￨c SWT￨5￨c .￨5￨c KeyDown￨5￨c :￨5￨c event￨6￨e .￨6￨e doit￨6￨e =￨6￨e false￨6￨e ;￨6￨e break￨6￨e ;￨6￨e case￨5￨c SWT￨5￨c .￨5￨c Traverse￨5￨c :￨5￨c event￨6￨e .￨6￨e detail￨6￨e =￨6￨e SWT￨6￨e .￨6￨e TRAVERSE_NONE￨6￨e ;￨6￨e <START_BUG>￨6￨b event￨6￨b .￨6￨b doit￨6￨b =￨6￨b true￨6￨b ;￨6￨b <END_BUG>￨6￨b break￨6￨e ;￨6￨e default￨5￨c :￨5￨c }￨4￨s event￨4￨e .￨4￨e type￨4￨e =￨4￨e SWT￨4￨e .￨4￨e NONE￨4￨e ;￨4￨e }￨3￨j }￨2￨f private￨2￨f void￨2￨f resetState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d TableJDBCSeq￨1￨d extends￨1￨d AbstractJDBCSeq￨1￨d implements￨1￨d Configurable￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e ACTION_DROP￨2￨e =￨2￨e "drop"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ACTION_ADD￨2￨e =￨2￨e "add"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ACTION_GET￨2￨e =￨2￨e "get"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ACTION_SET￨2￨e =￨2￨e "set"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e DEFAULT_TABLE￨2￨e =￨2￨e "OPENJPA_SEQUENCE_TABLE"￨2￨e ;￨2￨e private￨2￨d static￨2￨d final￨2￨d Localizer￨2￨d _loc￨2￨d =￨2￨d Localizer￨2￨d .￨2￨d forPackage￨2￨d (￨2￨d TableJDBCSeq￨2￨d .￨2￨d class￨2￨d )￨2￨d ;￨2￨d private￨2￨d transient￨2￨d JDBCConfiguration￨2￨d _conf￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d transient￨2￨d Log￨2￨d _log￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d int￨2￨d _alloc￨2￨d =￨2￨d 50￨2￨d ;￨2￨d private￨2￨d int￨2￨d _intValue￨2￨d =￨2￨d 1￨2￨d ;￨2￨d private￨2￨d final￨2￨d HashMap￨2￨d <￨2￨d ClassMapping￨2￨d ,￨2￨d TableJDBCSeq￨2￨d .￨2￨d Status￨2￨d >￨2￨d _stat￨2￨d =￨2￨d new￨2￨d HashMap￨2￨d <￨2￨d ClassMapping￨2￨d ,￨2￨d TableJDBCSeq￨2￨d .￨2￨d Status￨2￨d >￨2￨d (￨2￨d )￨2￨d ;￨2￨d private￨2￨d String￨2￨d _table￨2￨d =￨2￨d TableJDBCSeq￨2￨d .￨2￨d DEFAULT_TABLE￨2￨d ;￨2￨d private￨2￨d String￨2￨d _seqColumnName￨2￨d =￨2￨d "SEQUENCE_VALUE"￨2￨d ;￨2￨d private￨2￨d String￨2￨d _pkColumnName￨2￨d =￨2￨d "ID"￨2￨d ;￨2￨d private￨2￨d String￨2￨d [￨2￨d ]￨2￨d _uniqueColumnNames￨2￨d ;￨2￨d private￨2￨d String￨2￨d _uniqueConstraintName￨2￨d ;￨2￨d private￨2￨d Column￨2￨d _seqColumn￨2￨d =￨2￨d null￨2￨d ;￨2￨d private￨2￨d Column￨2￨d _pkColumn￨2￨d =￨2￨d null￨2￨d ;￨2￨d public￨2￨d String￨2￨d getTable￨2￨d (￨2￨d )￨2￨d {￨2￨d }￨2￨d public￨2￨f void￨2￨f setTable￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setTableName￨2￨f (￨2￨f String￨3￨p name￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getSequenceColumn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setSequenceColumn￨2￨f (￨2￨f String￨3￨p sequenceColumn￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getPrimaryKeyColumn￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setPrimaryKeyColumn￨2￨f (￨2￨f String￨3￨p primaryKeyColumn￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getAllocate￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setAllocate￨2￨f (￨2￨f int￨3￨p alloc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getInitialValue￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInitialValue￨2￨f (￨2￨f int￨3￨p intValue￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUniqueColumns￨2￨f (￨2￨f String￨3￨p columnNames￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getUniqueColumns￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setIncrement￨2￨f (￨2￨f int￨3￨p inc￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f JDBCConfiguration￨2￨f getConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setConfiguration￨2￨f (￨2￨f Configuration￨3￨p conf￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f startConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f endConfiguration￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f addSchema￨2￨f (￨2￨f ClassMapping￨3￨p mapping￨3￨p ,￨3￨p SchemaGroup￨3￨p group￨3￨p )￨2￨f {￨2￨f Schema￨3￨e [￨3￨e ]￨3￨e schemas￨3￨e =￨3￨e group￨3￨e .￨3￨e getSchemas￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c schemas￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l String￨4￨e schemaName￨4￨e =￨4￨e Strings￨4￨e .￨4￨e getPackageName￨4￨e (￨4￨e _table￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c schemaName￨5￨c .￨5￨c length￨5￨c (￨5￨c )￨5￨c )￨5￨c ==￨5￨c 0￨5￨c )￨4￨j {￨4￨j schemaName￨5￨e =￨5￨e Schemas￨5￨e .￨5￨e getNewTableSchema￨5￨e (￨5￨e _conf￨5￨e )￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j schemaName￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j schemaName￨5￨e =￨5￨e schemas￨5￨e [￨5￨e i￨5￨e ]￨5￨e .￨5￨e getName￨5￨e (￨5￨e )￨5￨e ;￨5￨e }￨4￨j Schema￨4￨e schema￨4￨e =￨4￨e group￨4￨e .￨4￨e getSchema￨4￨e (￨4￨e schemaName￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j schema￨5￨c ==￨5￨c null￨5￨c )￨4￨j {￨4￨j schema￨5￨e =￨5￨e group￨5￨e .￨5￨e addSchema￨5￨e (￨5￨e schemaName￨5￨e )￨5￨e ;￨5￨e }￨4￨j Table￨4￨e copy￨4￨e =￨4￨e schema￨4￨e .￨4￨e importTable￨4￨e (￨4￨e _pkColumn￨4￨e .￨4￨e getTable￨4￨e (￨4￨e )￨4￨e )￨4￨e ;￨4￨e Unique￨4￨e [￨4￨e ]￨4￨e uniques￨4￨e =￨4￨e _pkColumn￨4￨e .￨4￨e getTable￨4￨e (￨4￨e )￨4￨e .￨4￨e getUniques￨4￨e (￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l Unique￨5￨c u￨5￨c :￨5￨c uniques￨5￨c )￨4￨l {￨4￨l <START_BUG>￨5￨b copy￨5￨b .￨5￨b importUnique￨5￨b (￨5￨b u￨5￨b ,￨5￨b _conf￨5￨b .￨5￨b getDBDictionaryInstance￨5￨b (￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨l _pkColumn￨4￨e .￨4￨e resetTableName￨4￨e (￨4￨e (￨4￨e (￨4￨e schemaName￨4￨e +￨4￨e "."￨4￨e )￨4￨e +￨4￨e (￨4￨e _pkColumn￨4￨e .￨4￨e getTableName￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e _conf￨4￨e .￨4￨e getDBDictionaryInstance￨4￨e (￨4￨e )￨4￨e .￨4￨e createIndexIfNecessary￨4￨e (￨4￨e schema￨4￨e ,￨4￨e _table￨4￨e ,￨4￨e _pkColumn￨4￨e )￨4￨e ;￨4￨e }￨3￨l }￨2￨f protected￨2￨f Object￨2￨f nextInternal￨2￨f (￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f ClassMapping￨2￨f mapping￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f currentInternal￨2￨f (￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f ClassMapping￨2￨f mapping￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f allocateInternal￨2￨f (￨2￨f int￨2￨f count￨2￨f ,￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f ClassMapping￨2￨f mapping￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f TableJDBCSeq￨2￨f .￨2￨f Status￨2￨f getStatus￨2￨f (￨2￨f ClassMapping￨3￨p mapping￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Column￨2￨f addPrimaryKeyColumn￨2￨f (￨2￨f Table￨3￨p table￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f Object￨2￨f getPrimaryKey￨2￨f (￨2￨f ClassMapping￨3￨p mapping￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f buildTable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f allocateSequence￨2￨f (￨2￨f JDBCStore￨2￨f store￨2￨f ,￨2￨f ClassMapping￨2￨f mapping￨2￨f ,￨2￨f TableJDBCSeq￨2￨f .￨2￨f Status￨2￨f stat￨2￨f ,￨2￨f int￨2￨f alloc￨2￨f ,￨2￨f boolean￨2￨f updateStatSeq￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f insertSequence￨2￨f (￨2￨f ClassMapping￨2￨f mapping￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f long￨2￨f getSequence￨2￨f (￨2￨f ClassMapping￨2￨f mapping￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f boolean￨2￨f setSequence￨2￨f (￨2￨f ClassMapping￨2￨f mapping￨2￨f ,￨2￨f TableJDBCSeq￨2￨f .￨2￨f Status￨2￨f stat￨2￨f ,￨2￨f int￨2￨f inc￨2￨f ,￨2￨f boolean￨2￨f updateStatSeq￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f resolveTableName￨2￨f (￨2￨f ClassMapping￨3￨p mapping￨3￨p ,￨3￨p Table￨3￨p table￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f refreshTable￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dropTable￨2￨f (￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f run￨2￨f (￨2￨f JDBCConfiguration￨2￨f conf￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f ,￨2￨f Options￨2￨f opts￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f boolean￨2￨f run￨2￨f (￨2￨f JDBCConfiguration￨2￨f conf￨2￨f ,￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f ,￨2￨f String￨2￨f action￨2￨f )￨2￨f throws￨2￨f Exception￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨d static￨2￨d class￨2￨d Status￨2￨d implements￨2￨d Serializable￨2￨d {￨2￨d public￨3￨e long￨3￨e seq￨3￨e =￨3￨e 1L￨3￨e ;￨3￨e public￨3￨e long￨3￨e max￨3￨e =￨3￨e 0L￨3￨e ;￨3￨e }￨2￨d protected￨2￨f PreparedStatement￨2￨f prepareStatement￨2￨f (￨2￨f Connection￨2￨f conn￨2￨f ,￨2￨f SQLBuffer￨2￨f buf￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f executeUpdate￨2￨f (￨2￨f JDBCConfiguration￨2￨f conf￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f ,￨2￨f PreparedStatement￨2￨f stmnt￨2￨f ,￨2￨f SQLBuffer￨2￨f buf￨2￨f ,￨2￨f int￨2￨f opcode￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f ResultSet￨2￨f executeQuery￨2￨f (￨2￨f JDBCConfiguration￨2￨f conf￨2￨f ,￨2￨f Connection￨2￨f conn￨2￨f ,￨2￨f PreparedStatement￨2￨f stmnt￨2￨f ,￨2￨f SQLBuffer￨2￨f buf￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f long￨2￨f getSequence￨2￨f (￨2￨f ResultSet￨2￨f rs￨2￨f ,￨2￨f DBDictionary￨2￨f dict￨2￨f )￨2￨f throws￨2￨f SQLException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setUniqueConstraintName￨2￨f (￨2￨f String￨3￨p _uniqueConstraintName￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f getUniqueConstraintName￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨d class￨2￨d AllocateSequenceRunnable￨2￨d implements￨2￨d Runnable￨2￨d {￨2￨d JDBCStore￨3￨e store￨3￨e =￨3￨e null￨3￨e ;￨3￨e ClassMapping￨3￨e mapping￨3￨e =￨3￨e null￨3￨e ;￨3￨e TableJDBCSeq￨3￨e .￨3￨e Status￨3￨e stat￨3￨e =￨3￨e null￨3￨e ;￨3￨e int￨3￨e alloc￨3￨e ;￨3￨e boolean￨3￨e updateStatSeq￨3￨e ;￨3￨e AllocateSequenceRunnable￨3￨f (￨3￨f JDBCStore￨4￨p store￨4￨p ,￨4￨p ClassMapping￨4￨p mapping￨4￨p ,￨4￨p TableJDBCSeq￨4￨p .￨4￨p Status￨4￨p stat￨4￨p ,￨4￨p int￨4￨p alloc￨4￨p ,￨4￨p boolean￨4￨p updateStatSeq￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f throws￨3￨f RuntimeException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d protected￨2￨d class￨2￨d CurrentSequenceRunnable￨2￨d implements￨2￨d Runnable￨2￨d {￨2￨d private￨3￨e JDBCStore￨3￨e _store￨3￨e ;￨3￨e private￨3￨e ClassMapping￨3￨e _mapping￨3￨e ;￨3￨e CurrentSequenceRunnable￨3￨f (￨3￨f JDBCStore￨4￨p store￨4￨p ,￨4￨p ClassMapping￨4￨p mapping￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f void￨3￨f run￨3￨f (￨3￨f )￨3￨f throws￨3￨f RuntimeException￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ShowInMenu￨1￨d extends￨1￨d ContributionItem￨1￨d implements￨1￨d IWorkbenchContribution￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e String￨2￨e NO_TARGETS_MSG￨2￨e =￨2￨e WorkbenchMessages￨2￨e .￨2￨e Workbench_showInNoTargets￨2￨e ;￨2￨e private￨2￨e IWorkbenchWindow￨2￨e window￨2￨e ;￨2￨e private￨2￨e Map￨2￨e actions￨2￨e =￨2￨e new￨2￨e HashMap￨2￨e (￨2￨e 21￨2￨e )￨2￨e ;￨2￨e private￨2￨e boolean￨2￨e dirty￨2￨e =￨2￨e true￨2￨e ;￨2￨e private￨2￨f IMenuListener￨2￨f menuListener￨2￨f =￨2￨f new￨2￨f IMenuListener￨2￨f (￨2￨f )￨2￨f {￨2￨f public￨3￨f void￨3￨f menuAboutToShow￨3￨f (￨3￨f IMenuManager￨4￨p manager￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨f ;￨2￨e private￨2￨e IServiceLocator￨2￨e locator￨2￨e ;￨2￨e private￨2￨e MenuManager￨2￨e currentManager￨2￨e ;￨2￨e public￨2￨f ShowInMenu￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ShowInMenu￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p ,￨3￨p String￨3￨p id￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDirty￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isDynamic￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f fill￨2￨f (￨2￨f Menu￨3￨p menu￨3￨p ,￨3￨p int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f fillMenu￨2￨f (￨2￨f IMenuManager￨3￨p innerMgr￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IAction￨2￨f getAction￨2￨f (￨2￨f IViewDescriptor￨3￨p desc￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ArrayList￨2￨f getShowInPartIds￨2￨f (￨2￨f IWorkbenchPart￨3￨p sourcePart￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IWorkbenchPart￨2￨f getSourcePart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IShowInSource￨2￨f getShowInSource￨2￨f (￨2￨f IWorkbenchPart￨3￨p sourcePart￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IShowInTargetList￨2￨f getShowInTargetList￨2￨f (￨2￨f IWorkbenchPart￨3￨p sourcePart￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f ShowInContext￨2￨f getContext￨2￨f (￨2￨f IWorkbenchPart￨3￨p sourcePart￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IViewDescriptor￨2￨f [￨2￨f ]￨2￨f getViewDescriptors￨2￨f (￨2￨f IWorkbenchPart￨3￨p sourcePart￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f initialize￨2￨f (￨2￨f IServiceLocator￨3￨p serviceLocator￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f IWorkbenchWindow￨2￨f getWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f dispose￨2￨f (￨2￨f )￨2￨f {￨2￨f <START_BUG>￨3￨b if￨3￨b (￨3￨b (￨3￨b currentManager￨3￨b .￨3￨b getSize￨3￨b (￨3￨b )￨3￨b )￨3￨b >￨3￨b 0￨3￨b )￨3￨b {￨3￨b <END_BUG>￨3￨b IMenuService￨3￨e service￨3￨e =￨3￨e (￨3￨e (￨3￨e IMenuService￨3￨e )￨3￨e (￨3￨e locator￨3￨e .￨3￨e getService￨3￨e (￨3￨e IMenuService￨3￨e .￨3￨e class￨3￨e )￨3￨e )￨3￨e )￨3￨e ;￨3￨e service￨3￨e .￨3￨e releaseContributions￨3￨e (￨3￨e currentManager￨3￨e )￨3￨e ;￨3￨e currentManager￨3￨e .￨3￨e removeAll￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d CreateFilterOnToAction￨1￨d extends￨1￨d AbstractColumbaAction￨1￨d implements￨1￨d SelectionListener￨1￨d {￨1￨d public￨2￨f CreateFilterOnToAction￨2￨f (￨2￨f FrameMediator￨3￨p frameMediator￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f actionPerformed￨2￨f (￨2￨f ActionEvent￨3￨p evt￨3￨p )￨2￨f {￨2￨f FolderCommandReference￨3￨e [￨3￨e ]￨3￨e r￨3￨e =￨3￨e (￨3￨e (￨3￨e org￨3￨e .￨3￨e columba￨3￨e .￨3￨e mail￨3￨e .￨3￨e gui￨3￨e .￨3￨e frame￨3￨e .￨3￨e MailFrameMediator￨3￨e )￨3￨e (￨3￨e getFrameMediator￨3￨e (￨3￨e )￨3￨e )￨3￨e )￨3￨e .￨3￨e getTableSelection￨3￨e (￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b CreateFilterOnMessageCommand￨3￨b c￨3￨b =￨3￨b new￨3￨b CreateFilterOnMessageCommand￨3￨b (￨3￨b r￨3￨b ,￨3￨b CreateFilterOnMessageCommand￨3￨b .￨3￨b FILTER_ON_TO￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b processor￨3￨e .￨3￨e addOp￨3￨e (￨3￨e c￨3￨e )￨3￨e ;￨3￨e }￨2￨f public￨2￨f void￨2￨f selectionChanged￨2￨f (￨2￨f SelectionChangedEvent￨3￨p e￨3￨p )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d abstract￨1￨d class￨1￨d Scrollable￨1￨d extends￨1￨d Control￨1￨d {￨1￨d int￨2￨e scrolledHandle￨2￨e ;￨2￨e ScrollBar￨2￨e horizontalBar￨2￨e ;￨2￨e ScrollBar￨2￨e verticalBar￨2￨e ;￨2￨e Scrollable￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Scrollable￨2￨f (￨2￨f Composite￨3￨p parent￨3￨p ,￨3￨p int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f clientHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f computeTrim￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f ScrollBar￨2￨f createScrollBar￨2￨f (￨2￨f int￨3￨p style￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f createWidget￨2￨f (￨2￨f int￨3￨p index￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f deregister￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getBorderWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Rectangle￨2￨f getClientArea￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ScrollBar￨2￨f getHorizontalBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ScrollBar￨2￨f getVerticalBar￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f gtk_scroll_event￨2￨f (￨2￨f int￨3￨p widget￨3￨p ,￨3￨p int￨3￨p eventPtr￨3￨p )￨2￨f {￨2￨f }￨2￨f int￨2￨f hScrollBarWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f setOrientation￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f boolean￨2￨f setScrollBarVisible￨2￨f (￨2￨f ScrollBar￨3￨p bar￨3￨p ,￨3￨p boolean￨3￨p visible￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f redrawBackgroundImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f redrawWidget￨2￨f (￨2￨f int￨3￨p x￨3￨p ,￨3￨p int￨3￨p y￨3￨p ,￨3￨p int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p ,￨3￨p boolean￨3￨p redrawAll￨3￨p ,￨3￨p boolean￨3￨p all￨3￨p ,￨3￨p boolean￨3￨p trim￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f register￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f releaseChildren￨2￨f (￨2￨f boolean￨3￨p destroy￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f resizeHandle￨2￨f (￨2￨f int￨3￨p width￨3￨p ,￨3￨p int￨3￨p height￨3￨p )￨2￨f {￨2￨f }￨2￨f void￨2￨f showWidget￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f int￨2￨f topHandle￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f void￨2￨f updateScrollBarValue￨2￨f (￨2￨f ScrollBar￨3￨p bar￨3￨p )￨2￨f {￨2￨f <START_BUG>￨3￨b parent￨3￨b .￨3￨b redrawBackgroundImage￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b }￨2￨f int￨2￨f vScrollBarWidth￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Launcher￨1￨d {￨1￨d public￨2￨e static￨2￨e final￨2￨e String￨2￨e ANTHOME_PROPERTY￨2￨e =￨2￨e MagicNames￨2￨e .￨2￨e ANT_HOME￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ANTLIBDIR_PROPERTY￨2￨e =￨2￨e "ant.library.dir"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ANT_PRIVATEDIR￨2￨e =￨2￨e ".ant"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e ANT_PRIVATELIB￨2￨e =￨2￨e "lib"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e USER_LIBDIR￨2￨e =￨2￨e (￨2￨e (￨2￨e Launcher￨2￨e .￨2￨e ANT_PRIVATEDIR￨2￨e )￨2￨e +￨2￨e (￨2￨e File￨2￨e .￨2￨e separatorChar￨2￨e )￨2￨e )￨2￨e +￨2￨e (￨2￨e Launcher￨2￨e .￨2￨e ANT_PRIVATELIB￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e MAIN_CLASS￨2￨e =￨2￨e "org.apache.tools.ant.Main"￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e String￨2￨e USER_HOMEDIR￨2￨e =￨2￨e "user.home"￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e String￨2￨e JAVA_CLASS_PATH￨2￨e =￨2￨e "java.class.path"￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p args￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f addPath￨2￨f (￨2￨f String￨2￨f path￨2￨f ,￨2￨f boolean￨2￨f getJars￨2￨f ,￨2￨f List￨2￨f libPathURLs￨2￨f )￨2￨f throws￨2￨f MalformedURLException￨2￨f (￨2￨f )￨2￨f {￨2￨f StringTokenizer￨3￨e tokenizer￨3￨e =￨3￨e new￨3￨e StringTokenizer￨3￨e (￨3￨e path￨3￨e ,￨3￨e File￨3￨e .￨3￨e pathSeparator￨3￨e )￨3￨e ;￨3￨e while￨3￨l (￨3￨l tokenizer￨4￨c .￨4￨c hasMoreElements￨4￨c (￨4￨c )￨4￨c )￨3￨l {￨3￨l String￨4￨e elementName￨4￨e =￨4￨e tokenizer￨4￨e .￨4￨e nextToken￨4￨e (￨4￨e )￨4￨e ;￨4￨e File￨4￨e element￨4￨e =￨4￨e new￨4￨e File￨4￨e (￨4￨e elementName￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j (￨5￨c (￨5￨c elementName￨5￨c .￨5￨c indexOf￨5￨c (￨5￨c "%"￨5￨c )￨5￨c )￨5￨c !=￨5￨c (￨5￨c -￨5￨c 1￨5￨c )￨5￨c )￨5￨c &&￨5￨c (￨5￨c !￨5￨c (￨5￨c element￨5￨c .￨5￨c exists￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j continue￨5￨e ;￨5￨e }￨4￨j if￨4￨j (￨4￨j getJars￨5￨c &&￨5￨c (￨5￨c element￨5￨c .￨5￨c isDirectory￨5￨c (￨5￨c )￨5￨c )￨5￨c )￨4￨j {￨4￨j URL￨5￨e [￨5￨e ]￨5￨e dirURLs￨5￨e =￨5￨e Locator￨5￨e .￨5￨e getLocationURLs￨5￨e (￨5￨e element￨5￨e )￨5￨e ;￨5￨e for￨5￨l (￨5￨l int￨6￨c j￨6￨c =￨6￨c 0￨6￨c ;￨6￨c j￨6￨c <￨6￨c (￨6￨c dirURLs￨6￨c .￨6￨c length￨6￨c )￨6￨c ;￨6￨c ++￨6￨c j￨6￨c )￨5￨l {￨5￨l libPathURLs￨6￨e .￨6￨e add￨6￨e (￨6￨e dirURLs￨6￨e [￨6￨e j￨6￨e ]￨6￨e )￨6￨e ;￨6￨e }￨5￨l }￨4￨j try￨4￨f (￨4￨f )￨4￨f {￨4￨f <START_BUG>￨5￨b libPathURLs￨5￨b .￨5￨b add￨5￨b (￨5￨b new￨5￨b URL￨5￨b (￨5￨b Locator￨5￨b .￨5￨b encodeUri￨5￨b (￨5￨b element￨5￨b .￨5￨b toURL￨5￨b (￨5￨b )￨5￨b .￨5￨b toString￨5￨b (￨5￨b )￨5￨b )￨5￨b )￨5￨b )￨5￨b ;￨5￨b <END_BUG>￨5￨b }￨4￨f catch￨4￨f (￨4￨f UnsupportedEncodingException￨5￨p ex￨5￨p )￨4￨f {￨4￨f throw￨5￨e new￨5￨e MalformedURLException￨5￨e (￨5￨e ex￨5￨e .￨5￨e toString￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨f }￨3￨l }￨2￨f private￨2￨f void￨2￨f run￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f MalformedURLException￨2￨f ,￨2￨f LaunchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f saveAllEditors￨2￨f (￨2￨f boolean￨3￨p confirm￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IWorkbenchWindow￨2￨f busyOpenWorkbenchWindow￨2￨f (￨2￨f String￨2￨f perspID￨2￨f ,￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f checkUpdates￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f Object￨3￨p returnCode￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f close￨2￨f (￨2￨f Object￨3￨p returnCode￨3￨p ,￨3￨p final￨3￨p boolean￨3￨p force￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WorkbenchActionBuilder￨2￨f createActionBuilder￨2￨f (￨2￨f IWorkbenchWindow￨3￨p window￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f connectToWorkspace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f disconnectFromWorkspace￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f getActiveWorkbenchWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f [￨2￨f ]￨2￨f getCommandLineArgs￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f EditorHistory￨2￨f getEditorHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PerspectiveHistory￨2￨f getPerspectiveHistory￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IEditorRegistry￨2￨f getEditorRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getNewWindowNumber￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPerspectiveRegistry￨2￨f getPerspectiveRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f PreferenceManager￨2￨f getPreferenceManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IPreferenceStore￨2￨f getPreferenceStore￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f ISharedImages￨2￨f getSharedImages￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IMarkerHelpRegistry￨2￨f getMarkerHelpRegistry￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WindowManager￨2￨f getWindowManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f WorkbenchConfigurationInfo￨2￨f getConfigurationInfo￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f File￨2￨f getWorkbenchStateFile￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f int￨2￨f getWorkbenchWindowCount￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f [￨2￨f ]￨2￨f getWorkbenchWindows￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkingSetManager￨2￨f getWorkingSetManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f updateKeys￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f init￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f refreshFromLocal￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f forceOpenPerspective￨2￨f (￨2￨f String￨3￨p [￨3￨p ]￨3￨p commandLineArgs￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeSingleClickOption￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeFonts￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeFont￨2￨f (￨2￨f String￨3￨p fontKey￨3￨p ,￨3￨p FontRegistry￨3￨p registry￨3￨p ,￨3￨p IPreferenceStore￨3￨p store￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f initializeProductImage￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isClosing￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f isStarting￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f WorkbenchWindow￨2￨f newWorkbenchWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f openFirstTimeWindow￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f openPreviousWorkbenchState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f openWorkbenchWindow￨2￨f (￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchWindow￨2￨f openWorkbenchWindow￨2￨f (￨2￨f final￨2￨f String￨2￨f perspID￨2￨f ,￨2￨f final￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f XMLMemento￨2￨f recordWorkbenchState￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f boolean￨2￨f restart￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f IStatus￨2￨f restoreState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f MultiStatus￨3￨e result￨3￨e =￨3￨e new￨3￨e MultiStatus￨3￨e (￨3￨e PlatformUI￨3￨e .￨3￨e PLUGIN_ID￨3￨e ,￨3￨e IStatus￨3￨e .￨3￨e OK￨3￨e ,￨3￨e WorkbenchMessages￨3￨e .￨3￨e getString￨3￨e (￨3￨e "Workbench.problemsRestoring"￨3￨e )￨3￨e ,￨3￨e null￨3￨e )￨3￨e ;￨3￨e IMemento￨3￨e childMem￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e start￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "PerspectiveHistory"￨4￨e )￨4￨e ;￨4￨e childMem￨4￨e =￨4￨e memento￨4￨e .￨4￨e getChild￨4￨e (￨4￨e TAG_PERSPECTIVE_HISTORY￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j childMem￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j result￨5￨e .￨5￨e add￨5￨e (￨5￨e getPerspectiveHistory￨5￨e (￨5￨e )￨5￨e .￨5￨e restoreState￨5￨e (￨5￨e childMem￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e end￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "PerspectiveHistory"￨4￨e )￨4￨e ;￨4￨e }￨3￨f try￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e start￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "MRUList"￨4￨e )￨4￨e ;￨4￨e IMemento￨4￨e mruMemento￨4￨e =￨4￨e memento￨4￨e .￨4￨e getChild￨4￨e (￨4￨e TAG_MRU_LIST￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j mruMemento￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j result￨5￨e .￨5￨e add￨5￨e (￨5￨e getEditorHistory￨5￨e (￨5￨e )￨5￨e .￨5￨e restoreState￨5￨e (￨5￨e mruMemento￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨f finally￨3￨f (￨3￨f )￨3￨f {￨3￨f UIStats￨4￨e .￨4￨e end￨4￨e (￨4￨e RESTORE_WORKBENCH￨4￨e ,￨4￨e "MRUList"￨4￨e )￨4￨e ;￨4￨e }￨3￨f IMemento￨3￨e [￨3￨e ]￨3￨e children￨3￨e =￨3￨e memento￨3￨e .￨3￨e getChildren￨3￨e (￨3￨e TAG_WINDOW￨3￨e )￨3￨e ;￨3￨e IPerspectiveRegistry￨3￨e reg￨3￨e =￨3￨e WorkbenchPlugin￨3￨e .￨3￨e getDefault￨3￨e (￨3￨e )￨3￨e .￨3￨e getPerspectiveRegistry￨3￨e (￨3￨e )￨3￨e ;￨3￨e AboutInfo￨3￨e [￨3￨e ]￨3￨e newFeaturesWithPerspectives￨3￨e =￨3￨e getConfigurationInfo￨3￨e (￨3￨e )￨3￨e .￨3￨e collectNewFeaturesWithPerspectives￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c x￨4￨c =￨4￨c 0￨4￨c ;￨4￨c x￨4￨c <￨4￨c (￨4￨c children￨4￨c .￨4￨c length￨4￨c )￨4￨c ;￨4￨c x￨4￨c ++￨4￨c )￨3￨l {￨3￨l childMem￨4￨e =￨4￨e children￨4￨e [￨4￨e x￨4￨e ]￨4￨e ;￨4￨e WorkbenchWindow￨4￨e newWindow￨4￨e =￨4￨e newWorkbenchWindow￨4￨e (￨4￨e )￨4￨e ;￨4￨e newWindow￨4￨e .￨4￨e create￨4￨e (￨4￨e )￨4￨e ;￨4￨e IPerspectiveDescriptor￨4￨e desc￨4￨e =￨4￨e null￨4￨e ;￨4￨e if￨4￨j (￨4￨j x￨5￨c <￨5￨c (￨5￨c newFeaturesWithPerspectives￨5￨c .￨5￨c length￨5￨c )￨5￨c )￨4￨j {￨4￨j desc￨5￨e =￨5￨e reg￨5￨e .￨5￨e findPerspectiveWithId￨5￨e (￨5￨e newFeaturesWithPerspectives￨5￨e [￨5￨e x￨5￨e ]￨5￨e .￨5￨e getWelcomePerspective￨5￨e (￨5￨e )￨5￨e )￨5￨e ;￨5￨e }￨4￨j result￨4￨e .￨4￨e merge￨4￨e (￨4￨e newWindow￨4￨e .￨4￨e restoreState￨4￨e (￨4￨e childMem￨4￨e ,￨4￨e desc￨4￨e )￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j desc￨5￨c !=￨5￨c null￨5￨c )￨4￨j {￨4￨j IWorkbenchPage￨5￨e page￨5￨e =￨5￨e newWindow￨5￨e .￨5￨e getActivePage￨5￨e (￨5￨e )￨5￨e ;￨5￨e if￨5￨j (￨5￨j page￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j IWorkbenchPage￨6￨e [￨6￨e ]￨6￨e pages￨6￨e =￨6￨e newWindow￨6￨e .￨6￨e getPages￨6￨e (￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j (￨7￨c pages￨7￨c !=￨7￨c null￨7￨c )￨7￨c &&￨7￨c (￨7￨c (￨7￨c pages￨7￨c .￨7￨c length￨7￨c )￨7￨c >￨7￨c 0￨7￨c )￨7￨c )￨6￨j {￨6￨j page￨7￨e =￨7￨e pages￨7￨e [￨7￨e 0￨7￨e ]￨7￨e ;￨7￨e }￨6￨j }￨5￨j if￨5￨j (￨5￨j page￨6￨c ==￨6￨c null￨6￨c )￨5￨j {￨5￨j IContainer￨6￨e root￨6￨e =￨6￨e WorkbenchPlugin￨6￨e .￨6￨e getPluginWorkspace￨6￨e (￨6￨e )￨6￨e .￨6￨e getRoot￨6￨e (￨6￨e )￨6￨e ;￨6￨e try￨6￨f (￨6￨f )￨6￨f {￨6￨f <START_BUG>￨7￨b page￨7￨b =￨7￨b (￨7￨b (￨7￨b WorkbenchPage￨7￨b )￨7￨b (￨7￨b getActiveWorkbenchWindow￨7￨b (￨7￨b )￨7￨b .￨7￨b openPage￨7￨b (￨7￨b newFeaturesWithPerspectives￨7￨b [￨7￨b x￨7￨b ]￨7￨b .￨7￨b getWelcomePerspective￨7￨b (￨7￨b )￨7￨b ,￨7￨b root￨7￨b )￨7￨b )￨7￨b )￨7￨b ;￨7￨b <END_BUG>￨7￨b }￨6￨f catch￨6￨f (￨6￨f WorkbenchException￨7￨p e￨7￨p )￨6￨f {￨6￨f result￨7￨e .￨7￨e add￨7￨e (￨7￨e e￨7￨e .￨7￨e getStatus￨7￨e (￨7￨e )￨7￨e )￨7￨e ;￨7￨e }￨6￨f }￨5￨j else￨5￨j {￨5￨j page￨6￨e .￨6￨e setPerspective￨6￨e (￨6￨e desc￨6￨e )￨6￨e ;￨6￨e }￨5￨j newWindow￨5￨e .￨5￨e setActivePage￨5￨e (￨5￨e page￨5￨e )￨5￨e ;￨5￨e try￨5￨f (￨5￨f )￨5￨f {￨5￨f page￨6￨e .￨6￨e openEditor￨6￨e (￨6￨e new￨6￨e org￨6￨e .￨6￨e eclipse￨6￨e .￨6￨e ui￨6￨e .￨6￨e internal￨6￨e .￨6￨e dialogs￨6￨e .￨6￨e WelcomeEditorInput￨6￨e (￨6￨e newFeaturesWithPerspectives￨6￨e [￨6￨e x￨6￨e ]￨6￨e )￨6￨e ,￨6￨e Workbench￨6￨e .￨6￨e WELCOME_EDITOR_ID￨6￨e ,￨6￨e true￨6￨e )￨6￨e ;￨6￨e }￨5￨f catch￨5￨f (￨5￨f PartInitException￨6￨p e￨6￨p )￨5￨f {￨5￨f result￨6￨e .￨6￨e add￨6￨e (￨6￨e e￨6￨e .￨6￨e getStatus￨6￨e (￨6￨e )￨6￨e )￨6￨e ;￨6￨e }￨5￨f }￨4￨j windowManager￨4￨e .￨4￨e add￨4￨e (￨4￨e newWindow￨4￨e )￨4￨e ;￨4￨e newWindow￨4￨e .￨4￨e open￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨l return￨3￨e result￨3￨e ;￨3￨e }￨2￨f public￨2￨f IPluginDescriptor￨2￨f [￨2￨f ]￨2￨f getEarlyActivatedPlugins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f startPlugins￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f Object￨2￨f run￨2￨f (￨2￨f Object￨3￨p arg￨3￨p )￨2￨f {￨2￨f }￨2￨f protected￨2￨f void￨2￨f runEventLoop￨2￨f (￨2￨f Window￨3￨p .￨3￨p IExceptionHandler￨3￨p handler￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f IStatus￨2￨f saveState￨2￨f (￨2￨f IMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f boolean￨2￨f saveWorkbenchState￨2￨f (￨2￨f XMLMemento￨3￨p memento￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f setInitializationData￨2￨f (￨2￨f IConfigurationElement￨3￨p configElement￨3￨p ,￨3￨p String￨3￨p propertyName￨3￨p ,￨3￨p Object￨3￨p data￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchPage￨2￨f showPerspective￨2￨f (￨2￨f String￨2￨f perspectiveId￨2￨f ,￨2￨f IWorkbenchWindow￨2￨f window￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f IWorkbenchPage￨2￨f showPerspective￨2￨f (￨2￨f String￨2￨f perspectiveId￨2￨f ,￨2￨f IWorkbenchWindow￨2￨f window￨2￨f ,￨2￨f IAdaptable￨2￨f input￨2￨f )￨2￨f throws￨2￨f WorkbenchException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f private￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f refreshPluginActions￨2￨f (￨2￨f String￨3￨p pluginId￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f IDecoratorManager￨2￨f getDecoratorManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d ShutdownManager￨1￨d {￨1￨d Vector￨2￨e list￨2￨e ;￨2￨e public￨2￨f ShutdownManager￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f register￨2￨f (￨2￨f ShutdownPluginInterface￨3￨p plugin￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f void￨2￨f shutdown￨2￨f (￨2￨f )￨2￨f {￨2￨f for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c list￨4￨c .￨4￨c size￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l ShutdownPluginInterface￨4￨e plugin￨4￨e =￨4￨e (￨4￨e (￨4￨e ShutdownPluginInterface￨4￨e )￨4￨e (￨4￨e list￨4￨e .￨4￨e get￨4￨e (￨4￨e i￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b plugin￨4￨b .￨4￨b run￨4￨b (￨4￨b )￨4￨b ;￨4￨b <END_BUG>￨4￨b }￨3￨l System￨3￨e .￨3￨e exit￨3￨e (￨3￨e 1￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
public￨1￨d class￨1￨d StompMessageConverter￨1￨d {￨1￨d private￨2￨e static￨2￨e final￨2￨e Charset￨2￨e STOMP_CHARSET￨2￨e =￨2￨e Charset￨2￨e .￨2￨e forName￨2￨e (￨2￨e "UTF-8"￨2￨e )￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e byte￨2￨e LF￨2￨e =￨2￨e 10￨2￨e ;￨2￨e public￨2￨e static￨2￨e final￨2￨e byte￨2￨e CR￨2￨e =￨2￨e 13￨2￨e ;￨2￨e private￨2￨e static￨2￨e final￨2￨e byte￨2￨e COLON￨2￨e =￨2￨e ':'￨2￨e ;￨2￨e public￨2￨f Message￨2￨f <￨2￨f ?￨2￨f >￨2￨f toMessage￨2￨f (￨2￨f Object￨3￨p stompContent￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨f int￨2￨f findIndexOfPayload￨2￨f (￨2￨f byte￨3￨p [￨3￨p ]￨3￨p bytes￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f byte￨2￨f [￨2￨f ]￨2￨f fromMessage￨2￨f (￨2￨f Message￨3￨p <￨3￨p ?￨3￨p >￨3￨p message￨3￨p )￨2￨f {￨2￨f byte￨3￨e [￨3￨e ]￨3￨e payload￨3￨e ;￨3￨e if￨3￨j (￨3￨j (￨4￨c message￨4￨c .￨4￨c getPayload￨4￨c (￨4￨c )￨4￨c )￨4￨c instanceof￨4￨c byte￨4￨c [￨4￨c ]￨4￨c )￨3￨j {￨3￨j payload￨4￨e =￨4￨e (￨4￨e (￨4￨e byte￨4￨e [￨4￨e ]￨4￨e )￨4￨e (￨4￨e message￨4￨e .￨4￨e getPayload￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j throw￨4￨e new￨4￨e IllegalArgumentException￨4￨e (￨4￨e (￨4￨e "stompContent<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>byte[]:<seq2seq4repair_space>"￨4￨e +￨4￨e (￨4￨e message￨4￨e .￨4￨e getPayload￨4￨e (￨4￨e )￨4￨e .￨4￨e getClass￨4￨e (￨4￨e )￨4￨e )￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j ByteArrayOutputStream￨3￨e out￨3￨e =￨3￨e new￨3￨e ByteArrayOutputStream￨3￨e (￨3￨e )￨3￨e ;￨3￨e StompHeaderAccessor￨3￨e stompHeaders￨3￨e =￨3￨e StompHeaderAccessor￨3￨e .￨3￨e wrap￨3￨e (￨3￨e message￨3￨e )￨3￨e ;￨3￨e try￨3￨f (￨3￨f )￨3￨f {￨3￨f out￨4￨e .￨4￨e write￨4￨e (￨4￨e stompHeaders￨4￨e .￨4￨e getCommand￨4￨e (￨4￨e )￨4￨e .￨4￨e toString￨4￨e (￨4￨e )￨4￨e .￨4￨e getBytes￨4￨e (￨4￨e "UTF-8"￨4￨e )￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e write￨4￨e (￨4￨e StompMessageConverter￨4￨e .￨4￨e LF￨4￨e )￨4￨e ;￨4￨e <START_BUG>￨4￨b for￨4￨b (￨4￨b Map￨4￨b .￨4￨b Entry￨4￨b <￨4￨b String￨4￨b ,￨4￨b List￨4￨b <￨4￨b String￨4￨b >￨4￨b >￨4￨b entry￨4￨b :￨4￨b stompHeaders￨4￨b .￨4￨b toNativeHeaderMap￨4￨b (￨4￨b )￨4￨b .￨4￨b entrySet￨4￨b (￨4￨b )￨4￨b )￨4￨b {￨4￨b <END_BUG>￨4￨b String￨4￨e key￨4￨e =￨4￨e entry￨4￨e .￨4￨e getKey￨4￨e (￨4￨e )￨4￨e ;￨4￨e key￨4￨e =￨4￨e replaceAllOutbound￨4￨e (￨4￨e key￨4￨e )￨4￨e ;￨4￨e for￨4￨l (￨4￨l String￨5￨c value￨5￨c :￨5￨c entry￨5￨c .￨5￨c getValue￨5￨c (￨5￨c )￨5￨c )￨4￨l {￨4￨l out￨5￨e .￨5￨e write￨5￨e (￨5￨e key￨5￨e .￨5￨e getBytes￨5￨e (￨5￨e "UTF-8"￨5￨e )￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e write￨5￨e (￨5￨e StompMessageConverter￨5￨e .￨5￨e COLON￨5￨e )￨5￨e ;￨5￨e value￨5￨e =￨5￨e replaceAllOutbound￨5￨e (￨5￨e value￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e write￨5￨e (￨5￨e value￨5￨e .￨5￨e getBytes￨5￨e (￨5￨e "UTF-8"￨5￨e )￨5￨e )￨5￨e ;￨5￨e out￨5￨e .￨5￨e write￨5￨e (￨5￨e StompMessageConverter￨5￨e .￨5￨e LF￨5￨e )￨5￨e ;￨5￨e }￨4￨l }￨4￨e out￨4￨e .￨4￨e write￨4￨e (￨4￨e StompMessageConverter￨4￨e .￨4￨e LF￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e write￨4￨e (￨4￨e payload￨4￨e )￨4￨e ;￨4￨e out￨4￨e .￨4￨e write￨4￨e (￨4￨e 0￨4￨e )￨4￨e ;￨4￨e return￨4￨e out￨4￨e .￨4￨e toByteArray￨4￨e (￨4￨e )￨4￨e ;￨4￨e }￨3￨f catch￨3￨f (￨3￨f IOException￨4￨p e￨4￨p )￨3￨f {￨3￨f throw￨4￨e new￨4￨e StompConversionException￨4￨e (￨4￨e (￨4￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>serialize<seq2seq4repair_space>"￨4￨e +￨4￨e message￨4￨e )￨4￨e ,￨4￨e e￨4￨e )￨4￨e ;￨4￨e }￨3￨f }￨2￨f private￨2￨f String￨2￨f replaceAllOutbound￨2￨f (￨2￨f String￨3￨p key￨3￨p )￨2￨f {￨2￨f }￨2￨f private￨2￨d class￨2￨d Parser￨2￨d {￨2￨d private￨3￨e final￨3￨e String￨3￨e content￨3￨e ;￨3￨e private￨3￨e int￨3￨e offset￨3￨e ;￨3￨e public￨3￨f Parser￨3￨f (￨3￨f String￨4￨p content￨4￨p )￨3￨f {￨3￨f }￨3￨f public￨3￨f boolean￨3￨f hasNext￨3￨f (￨3￨f )￨3￨f {￨3￨f }￨3￨f public￨3￨f String￨3￨f nextToken￨3￨f (￨3￨f byte￨4￨p delimiter￨4￨p )￨3￨f {￨3￨f }￨3￨f }￨2￨d }￨1￨d
public￨1￨d class￨1￨d ParseStuff￨1￨d {￨1￨d private￨2￨e static￨2￨e boolean￨2￨e useNodeParser￨2￨e ;￨2￨e public￨2￨f static￨2￨f void￨2￨f main￨2￨f (￨2￨f String￨2￨f [￨2￨f ]￨2￨f args￨2￨f )￨2￨f throws￨2￨f RecognitionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f public￨2￨f static￨2￨f void￨2￨f parseWithNodeParser￨2￨f (￨2￨f String￨2￨f s￨2￨f )￨2￨f throws￨2￨f RecognitionException￨2￨f (￨2￨f )￨2￨f {￨2￨f ANTLRStringStream￨3￨e stream￨3￨e =￨3￨e new￨3￨e ANTLRStringStream￨3￨e (￨3￨e s￨3￨e )￨3￨e ;￨3￨e Xpand3NodeLexer￨3￨e lexer￨3￨e =￨3￨e new￨3￨e Xpand3NodeLexer￨3￨e (￨3￨e stream￨3￨e )￨3￨e ;￨3￨e CommonTokenStream￨3￨e tokenStream￨3￨e =￨3￨e new￨3￨e CommonTokenStream￨3￨e (￨3￨e lexer￨3￨e )￨3￨e ;￨3￨e Xpand3NodeParser￨3￨e xpand3NodeParser￨3￨e =￨3￨e new￨3￨e Xpand3NodeParser￨3￨e (￨3￨e tokenStream￨3￨e )￨3￨e ;￨3￨e <START_BUG>￨3￨b Node￨3￨b rootNode￨3￨b =￨3￨b xpand3NodeParser￨3￨b .￨3￨b file￨3￨b (￨3￨b )￨3￨b ;￨3￨b <END_BUG>￨3￨b Node2AstTransformer￨3￨e node2AstTransformer￨3￨e =￨3￨e new￨3￨e Node2AstTransformer￨3￨e (￨3￨e )￨3￨e ;￨3￨e node2AstTransformer￨3￨e .￨3￨e doSwitch￨3￨e (￨3￨e rootNode￨3￨e )￨3￨e ;￨3￨e }￨2￨f private￨2￨f static￨2￨f void￨2￨f checkFor￨2￨f (￨2￨f int￨2￨f extensions￨2￨f )￨2￨f throws￨2￨f RecognitionException￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f }￨1￨d
public￨1￨d class￨1￨d Jdk14RegexpRegexp￨1￨d extends￨1￨d Jdk14RegexpMatcher￨1￨d implements￨1￨d Regexp￨1￨d {￨1￨d public￨2￨f Jdk14RegexpRegexp￨2￨f (￨2￨f )￨2￨f {￨2￨f }￨2￨f protected￨2￨f int￨2￨f getSubsOptions￨2￨f (￨2￨f int￨3￨p options￨3￨p )￨2￨f {￨2￨f }￨2￨f public￨2￨f String￨2￨f substitute￨2￨f (￨2￨f String￨2￨f input￨2￨f ,￨2￨f String￨2￨f argument￨2￨f ,￨2￨f int￨2￨f options￨2￨f )￨2￨f throws￨2￨f BuildException￨2￨f (￨2￨f )￨2￨f {￨2￨f StringBuffer￨3￨e subst￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e for￨3￨l (￨3￨l int￨4￨c i￨4￨c =￨4￨c 0￨4￨c ;￨4￨c i￨4￨c <￨4￨c (￨4￨c argument￨4￨c .￨4￨c length￨4￨c (￨4￨c )￨4￨c )￨4￨c ;￨4￨c i￨4￨c ++￨4￨c )￨3￨l {￨3￨l char￨4￨e c￨4￨e =￨4￨e argument￨4￨e .￨4￨e charAt￨4￨e (￨4￨e i￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j c￨5￨c ==￨5￨c '\\'￨5￨c )￨4￨j {￨4￨j if￨5￨j (￨5￨j (￨6￨c ++￨6￨c i￨6￨c )￨6￨c <￨6￨c (￨6￨c argument￨6￨c .￨6￨c length￨6￨c (￨6￨c )￨6￨c )￨6￨c )￨5￨j {￨5￨j c￨6￨e =￨6￨e argument￨6￨e .￨6￨e charAt￨6￨e (￨6￨e i￨6￨e )￨6￨e ;￨6￨e int￨6￨e value￨6￨e =￨6￨e Character￨6￨e .￨6￨e digit￨6￨e (￨6￨e c￨6￨e ,￨6￨e 10￨6￨e )￨6￨e ;￨6￨e if￨6￨j (￨6￨j value￨7￨c >￨7￨c (￨7￨c -￨7￨c 1￨7￨c )￨7￨c )￨6￨j {￨6￨j <START_BUG>￨7￨b subst￨7￨b .￨7￨b append￨7￨b (￨7￨b "$("￨7￨b )￨7￨b .￨7￨b append￨7￨b (￨7￨b value￨7￨b )￨7￨b .￨7￨b append￨7￨b (￨7￨b ")"￨7￨b )￨7￨b ;￨7￨b <END_BUG>￨7￨b }￨6￨j else￨6￨j {￨6￨j subst￨7￨e .￨7￨e append￨7￨e (￨7￨e c￨7￨e )￨7￨e ;￨7￨e }￨6￨j }￨5￨j else￨5￨j {￨5￨j subst￨6￨e .￨6￨e append￨6￨e (￨6￨e '\\'￨6￨e )￨6￨e ;￨6￨e }￨5￨j }￨4￨j else￨4￨j {￨4￨j subst￨5￨e .￨5￨e append￨5￨e (￨5￨e c￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨l argument￨3￨e =￨3￨e subst￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e int￨3￨e sOptions￨3￨e =￨3￨e getSubsOptions￨3￨e (￨3￨e options￨3￨e )￨3￨e ;￨3￨e Pattern￨3￨e p￨3￨e =￨3￨e getCompiledPattern￨3￨e (￨3￨e options￨3￨e )￨3￨e ;￨3￨e StringBuffer￨3￨e sb￨3￨e =￨3￨e new￨3￨e StringBuffer￨3￨e (￨3￨e )￨3￨e ;￨3￨e Matcher￨3￨e m￨3￨e =￨3￨e p￨3￨e .￨3￨e matcher￨3￨e (￨3￨e input￨3￨e )￨3￨e ;￨3￨e if￨3￨j (￨3￨j RegexpUtil￨4￨c .￨4￨c hasFlag￨4￨c (￨4￨c sOptions￨4￨c ,￨4￨c REPLACE_ALL￨4￨c )￨4￨c )￨3￨j {￨3￨j sb￨4￨e .￨4￨e append￨4￨e (￨4￨e m￨4￨e .￨4￨e replaceAll￨4￨e (￨4￨e argument￨4￨e )￨4￨e )￨4￨e ;￨4￨e }￨3￨j else￨3￨j {￨3￨j boolean￨4￨e res￨4￨e =￨4￨e m￨4￨e .￨4￨e find￨4￨e (￨4￨e )￨4￨e ;￨4￨e if￨4￨j (￨4￨j res￨5￨c )￨4￨j {￨4￨j m￨5￨e .￨5￨e appendReplacement￨5￨e (￨5￨e sb￨5￨e ,￨5￨e argument￨5￨e )￨5￨e ;￨5￨e m￨5￨e .￨5￨e appendTail￨5￨e (￨5￨e sb￨5￨e )￨5￨e ;￨5￨e }￨4￨j else￨4￨j {￨4￨j sb￨5￨e .￨5￨e append￨5￨e (￨5￨e input￨5￨e )￨5￨e ;￨5￨e }￨4￨j }￨3￨j return￨3￨e sb￨3￨e .￨3￨e toString￨3￨e (￨3￨e )￨3￨e ;￨3￨e }￨2￨f }￨1￨d
