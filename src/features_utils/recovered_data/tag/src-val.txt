public￨d class￨d GenericController￨d extends￨d AbstractTestElement￨d implements￨d Serializable￨d ,￨d Controller￨d ,￨d PerThreadClonable￨d {￨d protected￨e List￨e subControllersAndSamplers￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e protected￨e int￨e current￨e ;￨e protected￨e Iterator￨e controlIt￨e ;￨e private￨e List￨e configs￨e =￨e new￨e LinkedList￨e (￨e )￨e ;￨e private￨e boolean￨e returnedNull￨e =￨e false￨e ;￨e private￨e boolean￨e done￨e =￨e false￨e ;￨e private￨e boolean￨e timeForNext￨e =￨e false￨e ;￨e private￨e List￨e assertions￨e =￨e new￨e LinkedList￨e (￨e )￨e ;￨e public￨f GenericController￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNextFirst￨f (￨f )￨f {￨f }￨f protected￨f List￨f getConfigElements￨f (￨f )￨f {￨f }￨f private￨f void￨f addConfigElement￨f (￨f TestElement￨p el￨p )￨f {￨f }￨f public￨f void￨f initialize￨f (￨f )￨f {￨f }￨f public￨f void￨f reInitialize￨f (￨f )￨f {￨f }￨f protected￨f void￨f removeCurrentController￨f (￨f )￨f {￨f }￨f protected￨f void￨f resetCurrent￨f (￨f )￨f {￨f }￨f protected￨f void￨f incrementCurrent￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f hasNextAtEnd￨f (￨f )￨f {￨f }￨f protected￨f void￨f nextAtEnd￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f protected￨f void￨f currentHasNextIsFalse￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f shortCircuitIsDone￨f (￨f )￨f {￨f }￨f protected￨f void￨f setShortCircuit￨f (￨f boolean￨p done￨p )￨f {￨f }￨f public￨f boolean￨f isDone￨f (￨f )￨f {￨f }￨f protected￨f TestElement￨f getCurrentController￨f (￨f )￨f {￨f }￨f protected￨f List￨f getSubControllers￨f (￨f )￨f {￨f }￨f public￨f void￨f addTestElement￨f (￨f TestElement￨p child￨p )￨f {￨f }￨f private￨f void￨f addController￨f (￨f TestElement￨p child￨p )￨f {￨f }￨f public￨f Sampler￨f next￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d Test￨d extends￨d TestCase￨d {￨d public￨f Test￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f testProcessing￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f GenericController￨e controller￨e =￨e new￨e GenericController￨e (￨e )￨e ;￨e GenericController￨e sub_1￨e =￨e new￨e GenericController￨e (￨e )￨e ;￨e sub_1￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "one"￨e )￨e )￨e ;￨e sub_1￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "two"￨e )￨e )￨e ;￨e controller￨e .￨e addTestElement￨e (￨e sub_1￨e )￨e ;￨e controller￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "three"￨e )￨e )￨e ;￨e GenericController￨e sub_2￨e =￨e new￨e GenericController￨e (￨e )￨e ;￨e GenericController￨e sub_3￨e =￨e new￨e GenericController￨e (￨e )￨e ;￨e sub_2￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "four"￨e )￨e )￨e ;￨e sub_3￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "five"￨e )￨e )￨e ;￨e sub_3￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "six"￨e )￨e )￨e ;￨e sub_2￨e .￨e addTestElement￨e (￨e sub_3￨e )￨e ;￨e sub_2￨e .￨e addTestElement￨e (￨e makeSampler￨e (￨e "seven"￨e )￨e )￨e ;￨e controller￨e .￨e addTestElement￨e (￨e sub_2￨e )￨e ;￨e String￨f [￨f ]￨f order￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e int￨e counter￨e =￨e 7￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 2￨c ;￨c i￨c ++￨c )￨l {￨l assertEquals￨e (￨e 7￨e ,￨e counter￨e )￨e ;￨e counter￨e =￨e 0￨e ;￨e while￨l (￨l controller￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l TestElement￨e sampler￨e =￨e controller￨e .￨e next￨e (￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b order￨b [￨b (￨b counter￨b ++￨b )￨b ]￨b ,￨b sampler￨b .￨b getProperty￨b (￨b NAME￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l }￨l }￨f private￨f TestElement￨f makeSampler￨f (￨f String￨p name￨p )￨f {￨f }￨f class￨d TestSampler￨d extends￨d AbstractSampler￨d implements￨d PerSampleClonable￨d {￨d public￨f void￨f addCustomTestElement￨f (￨f TestElement￨p t￨p )￨f {￨f }￨f public￨f SampleResult￨f sample￨f (￨f Entry￨p e￨p )￨f {￨f }￨f }￨d }￨d }￨d
public￨d class￨d RenameFolderAction￨d extends￨d AbstractColumbaAction￨d implements￨d ISelectionListener￨d {￨d public￨f RenameFolderAction￨f (￨f FrameMediator￨p frameMediator￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f selectionChanged￨f (￨f SelectionChangedEvent￨p evt￨p )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b (￨b (￨b org￨b .￨b columba￨b .￨b mail￨b .￨b gui￨b .￨b tree￨b .￨b selection￨b .￨b TreeSelectionChangedEvent￨b )￨b (￨b evt￨b )￨b )￨b .￨b getSelected￨b (￨b )￨b .￨b length￨b )￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b AbstractFolder￨e folder￨e =￨e (￨e (￨e org￨e .￨e columba￨e .￨e mail￨e .￨e gui￨e .￨e tree￨e .￨e selection￨e .￨e TreeSelectionChangedEvent￨e )￨e (￨e evt￨e )￨e )￨e .￨e getSelected￨e (￨e )￨e [￨e 0￨e ]￨e ;￨e if￨j (￨j (￨c folder￨c !=￨c null￨c )￨c &&￨c (￨c folder￨c instanceof￨c AbstractMessageFolder￨c )￨c )￨j {￨j IFolderItem￨e item￨e =￨e folder￨e .￨e getConfiguration￨e (￨e )￨e ;￨e if￨j (￨j item￨c .￨c getString￨c (￨c "property"￨c ,￨c "accessrights"￨c )￨c .￨c equals￨c (￨c "user"￨c )￨c )￨j {￨j setEnabled￨e (￨e true￨e )￨e ;￨e }￨j else￨j {￨j setEnabled￨e (￨e false￨e )￨e ;￨e }￨j }￨j else￨j {￨j setEnabled￨e (￨e false￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d ResourceUrlEncodingFilter￨d extends￨d OncePerRequestFilter￨d {￨d private￨d static￨d final￨d Log￨d logger￨d =￨d LogFactory￨d .￨d getLog￨d (￨d ResourceUrlEncodingFilter￨d .￨d class￨d )￨d ;￨d @￨d Override￨d protected￨d void￨d doFilterInternal￨d (￨d HttpServletRequest￨d request￨d ,￨d HttpServletResponse￨d response￨d ,￨d FilterChain￨d filterChain￨d )￨d throws￨d IOException￨d ,￨d ServletException￨d {￨d }￨d private￨d static￨d class￨d ResourceUrlEncodingResponseWrapper￨d extends￨d HttpServletResponseWrapper￨d {￨d private￨e HttpServletRequest￨e request￨e ;￨e private￨e Integer￨e indexLookupPath￨e ;￨e private￨f ResourceUrlEncodingResponseWrapper￨f (￨f HttpServletRequest￨p request￨p ,￨p HttpServletResponse￨p wrapped￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f encodeURL￨f (￨f String￨p url￨p )￨f {￨f }￨f private￨f ResourceUrlProvider￨f getResourceUrlProvider￨f (￨f )￨f {￨f }￨f private￨f void￨f initIndexLookupPath￨f (￨f ResourceUrlProvider￨p urlProvider￨p )￨f {￨f if￨j (￨j (￨c this￨c .￨c indexLookupPath￨c )￨c ==￨c null￨c )￨j {￨j String￨e requestUri￨e =￨e urlProvider￨e .￨e getPathHelper￨e (￨e )￨e .￨e getRequestUri￨e (￨e this￨e .￨e request￨e )￨e ;￨e String￨e lookupPath￨e =￨e urlProvider￨e .￨e getPathHelper￨e (￨e )￨e .￨e getLookupPathForRequest￨e (￨e this￨e .￨e request￨e )￨e ;￨e <START_BUG>￨b this￨b .￨b indexLookupPath￨b =￨b requestUri￨b .￨b indexOf￨b (￨b lookupPath￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f }￨d }￨d
public￨d class￨d TextFile￨d extends￨d File￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e String￨e encoding￨e =￨e null￨e ;￨e public￨f TextFile￨f (￨f File￨p filename￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f public￨f TextFile￨f (￨f File￨p filename￨p )￨f {￨f }￨f public￨f TextFile￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f TextFile￨f (￨f String￨p filename￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p body￨p )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f String￨e lineEnd￨e =￨e System￨e .￨e getProperty￨e (￨e "line.separator"￨e )￨e ;￨e <START_BUG>￨b StringBuffer￨b sb￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b Reader￨e reader￨e =￨e null￨e ;￨e BufferedReader￨e br￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j (￨c encoding￨c )￨c ==￨c null￨c )￨j {￨j reader￨e =￨e new￨e FileReader￨e (￨e this￨e )￨e ;￨e }￨j else￨j {￨j reader￨e =￨e new￨e InputStreamReader￨e (￨e new￨e FileInputStream￨e (￨e this￨e )￨e ,￨e encoding￨e )￨e ;￨e }￨j br￨e =￨e new￨e BufferedReader￨e (￨e reader￨e )￨e ;￨e String￨e line￨e =￨e "NOTNULL"￨e ;￨e while￨l (￨l line￨c !=￨c null￨c )￨l {￨l line￨e =￨e br￨e .￨e readLine￨e (￨e )￨e ;￨e if￨j (￨j line￨c !=￨c null￨c )￨j {￨j sb￨e .￨e append￨e (￨e (￨e line￨e +￨e lineEnd￨e )￨e )￨e ;￨e }￨j }￨l }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f TextFile￨e .￨e log￨e .￨e error￨e (￨e ""￨e ,￨e ioe￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f JOrphanUtils￨e .￨e closeQuietly￨e (￨e br￨e )￨e ;￨e }￨f return￨e sb￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f String￨f getEncoding￨f (￨f )￨f {￨f }￨f public￨f void￨f setEncoding￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d class￨d DigestAlgorithm￨d implements￨d Algorithm￨d {￨d private￨e static￨e final￨e int￨e BYTE_MASK￨e =￨e 255￨e ;￨e private￨e static￨e final￨e int￨e BUFFER_SIZE￨e =￨e 8192￨e ;￨e private￨e String￨e algorithm￨e =￨e "MD5"￨e ;￨e private￨e String￨e provider￨e =￨e null￨e ;￨e private￨e MessageDigest￨e messageDigest￨e =￨e null￨e ;￨e private￨e int￨e readBufferSize￨e =￨e DigestAlgorithm￨e .￨e BUFFER_SIZE￨e ;￨e public￨f void￨f setAlgorithm￨f (￨f String￨p algorithm￨p )￨f {￨f }￨f public￨f void￨f setProvider￨f (￨f String￨p provider￨p )￨f {￨f }￨f public￨f void￨f initMessageDigest￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isValid￨f (￨f )￨f {￨f }￨f public￨f String￨f getValue￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b StringBuffer￨b buf￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b buf￨e .￨e append￨e (￨e "<DigestAlgorithm:"￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "algorithm="￨e )￨e .￨e append￨e (￨e algorithm￨e )￨e ;￨e buf￨e .￨e append￨e (￨e ";provider="￨e )￨e .￨e append￨e (￨e provider￨e )￨e ;￨e buf￨e .￨e append￨e (￨e ">"￨e )￨e ;￨e return￨e buf￨e .￨e toString￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d ChangePassword￨d extends￨d ScarabTemplateAction￨d {￨d public￨f void￨f doChangepassword￨f (￨f RunData￨f data￨f ,￨f TemplateContext￨f context￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f String￨e template￨e =￨e getCurrentTemplate￨e (￨e data￨e ,￨e null￨e )￨e ;￨e String￨e nextTemplate￨e =￨e getNextTemplate￨e (￨e data￨e ,￨e template￨e )￨e ;￨e IntakeTool￨e intake￨e =￨e getIntakeTool￨e (￨e context￨e )￨e ;￨e if￨j (￨j intake￨c .￨c isAllValid￨c (￨c )￨c )￨j {￨j Object￨e user￨e =￨e data￨e .￨e getUser￨e (￨e )￨e .￨e getTemp￨e (￨e SESSION_REGISTER￨e )￨e ;￨e Group￨e register￨e =￨e null￨e ;￨e if￨j (￨j (￨c user￨c !=￨c null￨c )￨c &&￨c (￨c user￨c instanceof￨c ScarabUser￨c )￨c )￨j {￨j register￨e =￨e intake￨e .￨e get￨e (￨e "Register"￨e ,￨e (￨e (￨e ScarabUser￨e )￨e (￨e user￨e )￨e )￨e .￨e getQueryKey￨e (￨e )￨e ,￨e false￨e )￨e ;￨e }￨j else￨j {￨j register￨e =￨e intake￨e .￨e get￨e (￨e "Register"￨e ,￨e DEFAULT_KEY￨e ,￨e false￨e )￨e ;￨e }￨j <START_BUG>￨b String￨b username￨b =￨b register￨b .￨b get￨b (￨b "Email"￨b )￨b .￨b toString￨b (￨b )￨b ;￨b <END_BUG>￨b String￨e oldPassword￨e =￨e register￨e .￨e get￨e (￨e "OldPassword"￨e )￨e .￨e toString￨e (￨e )￨e ;￨e String￨e password￨e =￨e register￨e .￨e get￨e (￨e "Password"￨e )￨e .￨e toString￨e (￨e )￨e ;￨e String￨e passwordConfirm￨e =￨e register￨e .￨e get￨e (￨e "PasswordConfirm"￨e )￨e .￨e toString￨e (￨e )￨e ;￨e if￨j (￨j oldPassword￨c .￨c equals￨c (￨c password￨c )￨c )￨j {￨j getScarabRequestTool￨e (￨e context￨e )￨e .￨e setInfoMessage￨e (￨e (￨e "Your<seq2seq4repair_space>new<seq2seq4repair_space>password<seq2seq4repair_space>was<seq2seq4repair_space>the<seq2seq4repair_space>same<seq2seq4repair_space>as<seq2seq4repair_space>your<seq2seq4repair_space>old<seq2seq4repair_space>one.<seq2seq4repair_space>"￨e +￨e "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>not<seq2seq4repair_space>been<seq2seq4repair_space>changed!"￨e )￨e )￨e ;￨e setTarget￨e (￨e data￨e ,￨e template￨e )￨e ;￨e }￨j else￨j if￨j (￨j password￨c .￨c equals￨c (￨c passwordConfirm￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f ScarabUser￨e confirmedUser￨e =￨e (￨e (￨e ScarabUser￨e )￨e (￨e TurbineSecurity￨e .￨e getUser￨e (￨e username￨e )￨e )￨e )￨e ;￨e confirmedUser￨e .￨e setPasswordExpire￨e (￨e )￨e ;￨e confirmedUser￨e .￨e setHasLoggedIn￨e (￨e Boolean￨e .￨e FALSE￨e )￨e ;￨e data￨e .￨e setUser￨e (￨e confirmedUser￨e )￨e ;￨e data￨e .￨e save￨e (￨e )￨e ;￨e TurbineSecurity￨e .￨e changePassword￨e (￨e confirmedUser￨e ,￨e oldPassword￨e ,￨e password￨e )￨e ;￨e getScarabRequestTool￨e (￨e context￨e )￨e .￨e setConfirmMessage￨e (￨e (￨e "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>been<seq2seq4repair_space>changed."￨e +￨e "<seq2seq4repair_space>Please<seq2seq4repair_space>login<seq2seq4repair_space>with<seq2seq4repair_space>your<seq2seq4repair_space>new<seq2seq4repair_space>password."￨e )￨e )￨e ;￨e setTarget￨e (￨e data￨e ,￨e "Login.vm"￨e )￨e ;￨e }￨f catch￨f (￨f PasswordMismatchException￨p pme￨p )￨f {￨f getScarabRequestTool￨e (￨e context￨e )￨e .￨e setAlertMessage￨e (￨e pme￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e setTarget￨e (￨e data￨e ,￨e template￨e )￨e ;￨e }￨f }￨j else￨j {￨j getScarabRequestTool￨e (￨e context￨e )￨e .￨e setAlertMessage￨e (￨e "The<seq2seq4repair_space>passwords<seq2seq4repair_space>you<seq2seq4repair_space>entered<seq2seq4repair_space>do<seq2seq4repair_space>not<seq2seq4repair_space>match!"￨e )￨e ;￨e setTarget￨e (￨e data￨e ,￨e template￨e )￨e ;￨e }￨j }￨j }￨f }￨d
public￨d }￨f void￨f setBackgroundPixel￨f (￨f int￨p pixel￨p )￨f {￨f }￨f void￨f setCheckboxImageListColor￨f (￨f )￨f {￨f }￨f void￨f setCheckboxImageList￨f (￨f int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f void￨f setFocusIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f Font￨p font￨p )￨f {￨f }￨f void￨f setForegroundPixel￨f (￨f int￨p pixel￨p )￨f {￨f }￨f public￨f void￨f setHeaderVisible￨f (￨f boolean￨p show￨p )￨f {￨f }￨f public￨f void￨f setItemCount￨f (￨f int￨p count￨p )￨f {￨f }￨f void￨f setItemHeight￨f (￨f )￨f {￨f }￨f public￨f void￨f setLinesVisible￨f (￨f boolean￨p show￨p )￨f {￨f }￨f public￨f void￨f setRedraw￨f (￨f boolean￨p redraw￨p )￨f {￨f }￨f boolean￨f setScrollWidth￨f (￨f TableItem￨p item￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p [￨p ]￨p indices￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f TableItem￨p [￨p ]￨p items￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f void￨f setTableEmpty￨f (￨f )￨f {￨f }￨f public￨f void￨f setTopIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f showColumn￨f (￨f TableColumn￨p column￨p )￨f {￨f }￨f void￨f showItem￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f showItem￨f (￨f TableItem￨p item￨p )￨f {￨f }￨f public￨f void￨f showSelection￨f (￨f )￨f {￨f }￨f String￨f toolTipText￨f (￨f NMTTDISPINFO￨p hdr￨p )￨f {￨f }￨f int￨f widgetStyle￨f (￨f )￨f {￨f }￨f TCHAR￨f windowClass￨f (￨f )￨f {￨f }￨f int￨f windowProc￨f (￨f )￨f {￨f }￨f LRESULT￨f WM_CHAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_ERASEBKGND￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_GETOBJECT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_KEYDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONDBLCLK￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSEHOVER￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PAINT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NOTIFY￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f NMHDR￨e hdr￨e =￨e new￨e NMHDR￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e hdr￨e ,￨e lParam￨e ,￨e sizeof￨e )￨e ;￨e int￨e hwndHeader￨e =￨e OS￨e .￨e SendMessage￨e (￨e handle￨e ,￨e LVM_GETHEADER￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j (￨c hdr￨c .￨c hwndFrom￨c )￨c ==￨c hwndHeader￨c )￨j {￨j switch￨s (￨s hdr￨c .￨c code￨c )￨s {￨s case￨c OS￨c .￨c HDN_BEGINTRACKW￨c :￨c case￨c OS￨c .￨c HDN_BEGINTRACKA￨c :￨c case￨c OS￨c .￨c HDN_DIVIDERDBLCLICKW￨c :￨c case￨c OS￨c .￨c HDN_DIVIDERDBLCLICKA￨c :￨c {￨e NMHEADER￨e phdn￨e =￨e new￨e NMHEADER￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e phdn￨e ,￨e lParam￨e ,￨e NMHEADER￨e .￨e sizeof￨e )￨e ;￨e TableColumn￨e column￨e =￨e columns￨e [￨e phdn￨e .￨e iItem￨e ]￨e ;￨e if￨j (￨j (￨c column￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c column￨c .￨c getResizable￨c (￨c )￨c )￨c )￨c )￨j {￨j return￨e LRESULT￨e .￨e ONE￨e ;￨e }￨j break￨e ;￨e case￨c OS￨c .￨c HDN_ITEMCHANGEDW￨c :￨c case￨c OS￨c .￨c HDN_ITEMCHANGEDA￨c :￨c {￨e int￨e width￨e =￨e OS￨e .￨e SendMessage￨e (￨e handle￨e ,￨e LVM_GETCOLUMNWIDTH￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j (￨c (￨c lastWidth￨c )￨c ==￨c 0￨c )￨c &&￨c (￨c width￨c >￨c 0￨c )￨c )￨j {￨j int￨e bits￨e =￨e OS￨e .￨e SendMessage￨e (￨e handle￨e ,￨e LVM_GETEXTENDEDLISTVIEWSTYLE￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j (￨c bits￨c &￨c (￨c OS￨c .￨c LVS_EX_GRIDLINES￨c )￨c )￨c !=￨c 0￨c )￨j {￨j RECT￨e rect￨e =￨e new￨e RECT￨e (￨e )￨e ;￨e OS￨e .￨e GetClientRect￨e (￨e handle￨e ,￨e rect￨e )￨e ;￨e rect￨e .￨e right￨e =￨e (￨e rect￨e .￨e left￨e )￨e +￨e width￨e ;￨e OS￨e .￨e InvalidateRect￨e (￨e handle￨e ,￨e rect￨e ,￨e true￨e )￨e ;￨e }￨j }￨j lastWidth￨e =￨e width￨e ;￨e if￨j (￨j !￨c (￨c ignoreResize￨c )￨c )￨j {￨j NMHEADER￨e phdn￨e =￨e new￨e NMHEADER￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e phdn￨e ,￨e lParam￨e ,￨e NMHEADER￨e .￨e sizeof￨e )￨e ;￨e if￨j (￨j (￨c phdn￨c .￨c pitem￨c )￨c !=￨c 0￨c )￨j {￨j HDITEM￨e pitem￨e =￨e new￨e HDITEM￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e pitem￨e ,￨e phdn￨e .￨e pitem￨e ,￨e HDITEM￨e .￨e sizeof￨e )￨e ;￨e if￨j (￨j (￨c (￨c pitem￨c .￨c mask￨c )￨c &￨c (￨c OS￨c .￨c HDI_WIDTH￨c )￨c )￨c !=￨c 0￨c )￨j {￨j TableColumn￨e column￨e =￨e columns￨e [￨e phdn￨e .￨e iItem￨e ]￨e ;￨e if￨j (￨j column￨c !=￨c null￨c )￨j {￨j column￨e .￨e sendEvent￨e (￨e Resize￨e )￨e ;￨e if￨j (￨j isDisposed￨c (￨c )￨c )￨j {￨j return￨e LRESULT￨e .￨e ZERO￨e ;￨e }￨j int￨e count￨e =￨e OS￨e .￨e SendMessage￨e (￨e hwndHeader￨e ,￨e HDM_GETITEMCOUNT￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j (￨c count￨c ==￨c 1￨c )￨c &&￨c (￨c (￨c columns￨c [￨c 0￨c ]￨c )￨c ==￨c null￨c )￨c )￨j {￨j count￨e =￨e 0￨e ;￨e }￨j TableColumn￨e [￨e ]￨e newColumns￨e =￨e new￨e TableColumn￨e [￨e count￨e ]￨e ;￨e System￨e .￨e arraycopy￨e (￨e columns￨e ,￨e 0￨e ,￨e newColumns￨e ,￨e 0￨e ,￨e count￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c (￨c phdn￨c .￨c iItem￨c )￨c +￨c 1￨c ;￨c i￨c <￨c count￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b if￨b (￨b (￨b (￨b newColumns￨b [￨b i￨b ]￨b )￨b !=￨b null￨b )￨b &&￨b (￨b !￨b (￨b newColumns￨b [￨b i￨b ]￨b .￨b isDisposed￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b newColumns￨e [￨e i￨e ]￨e .￨e sendEvent￨e (￨e Move￨e )￨e ;￨e }￨l }￨j }￨j }￨j }￨j break￨e ;￨e case￨c OS￨c .￨c HDN_ITEMDBLCLICKW￨c :￨c case￨c OS￨c .￨c HDN_ITEMDBLCLICKA￨c :￨c {￨e NMHEADER￨e phdn￨e =￨e new￨e NMHEADER￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e phdn￨e ,￨e lParam￨e ,￨e NMHEADER￨e .￨e sizeof￨e )￨e ;￨e TableColumn￨e column￨e =￨e columns￨e [￨e phdn￨e .￨e iItem￨e ]￨e ;￨e if￨j (￨j column￨c !=￨c null￨c )￨j {￨j column￨e .￨e postEvent￨e (￨e DefaultSelection￨e )￨e ;￨e }￨j break￨e ;￨e }￨s }￨j return￨e super￨e .￨e WM_NOTIFY￨e (￨e wParam￨e ,￨e lParam￨e )￨e ;￨e }￨f LRESULT￨f WM_RBUTTONDBLCLK￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_RBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETFOCUS￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SIZE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SYSCOLORCHANGE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_VSCROLL￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_WINDOWPOSCHANGED￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmNotifyChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f }￨d
class￨d (￨c baseValidator￨c .￨c getVariety￨c (￨c )￨c )￨c ==￨c (￨c XSSimpleType￨c .￨c VARIETY_UNION￨c )￨c )￨j {￨j XSSimpleType￨e [￨e ]￨e types￨e =￨e (￨e (￨e org￨e .￨e apache￨e .￨e xerces￨e .￨e impl￨e .￨e dv￨e .￨e XSUnionSimpleType￨e )￨e (￨e baseValidator￨e )￨e )￨e .￨e getMemberTypes￨e (￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c types￨c .￨c length￨c )￨c ;￨c j￨c ++￨c )￨l {￨l dTValidators￨e .￨e addElement￨e (￨e types￨e [￨e j￨e ]￨e )￨e ;￨e }￨l }￨j else￨j {￨j dTValidators￨e .￨e addElement￨e (￨e baseValidator￨e )￨e ;￨e }￨j }￨j }￨l }￨j if￨j (￨j baseTypeName￨c ==￨c null￨c )￨j {￨j content￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e content￨e )￨e ;￨e }￨j else￨j {￨j content￨e =￨e DOMUtil￨e .￨e getFirstChildElement￨e (￨e content￨e )￨e ;￨e if￨j (￨j content￨c !=￨c null￨c )￨j {￨j if￨j (￨j DOMUtil￨c .￨c getLocalName￨c (￨c content￨c )￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨j {￨j traverseAnnotationDecl￨e (￨e content￨e ,￨e attrValues￨e ,￨e false￨e ,￨e schemaDoc￨e )￨e ;￨e content￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e content￨e )￨e ;￨e }￨j }￨j }￨j if￨j (￨j union￨c )￨j {￨j if￨j (￨j memberTypes￨c !=￨c null￨c )￨j {￨j if￨j (￨j content￨c !=￨c null￨c )￨j {￨j if￨j (￨j DOMUtil￨c .￨c getLocalName￨c (￨c content￨c )￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨j {￨j traverseAnnotationDecl￨e (￨e content￨e ,￨e attrValues￨e ,￨e false￨e ,￨e schemaDoc￨e )￨e ;￨e content￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e content￨e )￨e ;￨e }￨j }￨j if￨j (￨j content￨c !=￨c null￨c )￨j {￨j if￨j (￨j DOMUtil￨c .￨c getLocalName￨c (￨c content￨c )￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨j {￨j Object￨f [￨f ]￨f args￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e reportSchemaError￨e (￨e "dt-union-memberType"￨e ,￨e args￨e )￨e ;￨e }￨j }￨j }￨j while￨l (￨l content￨c !=￨c null￨c )￨l {￨l baseValidator￨e =￨e traverseLocal￨e (￨e content￨e ,￨e schemaDoc￨e ,￨e grammar￨e )￨e ;￨e if￨j (￨j baseValidator￨c !=￨c null￨c )￨j {￨j if￨j (￨j (￨c (￨c fListName￨c .￨c length￨c (￨c )￨c )￨c !=￨c 0￨c )￨c &&￨c (￨c (￨c baseValidator￨c .￨c getVariety￨c (￨c )￨c )￨c ==￨c (￨c XSSimpleType￨c .￨c VARIETY_LIST￨c )￨c )￨c )￨j {￨j reportCosListOfAtomic￨e (￨e qualifiedName￨e )￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j (￨c baseValidator￨c .￨c getVariety￨c (￨c )￨c )￨c ==￨c (￨c XSSimpleType￨c .￨c VARIETY_UNION￨c )￨c )￨j {￨j XSSimpleType￨e [￨e ]￨e types￨e =￨e (￨e (￨e org￨e .￨e apache￨e .￨e xerces￨e .￨e impl￨e .￨e dv￨e .￨e XSUnionSimpleType￨e )￨e (￨e baseValidator￨e )￨e )￨e .￨e getMemberTypes￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c types￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l dTValidators￨e .￨e addElement￨e (￨e types￨e [￨e i￨e ]￨e )￨e ;￨e }￨l }￨j else￨j {￨j dTValidators￨e .￨e addElement￨e (￨e baseValidator￨e )￨e ;￨e }￨j }￨j if￨j (￨j baseValidator￨c ==￨c null￨c )￨j {￨j Object￨f [￨f ]￨f args￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e reportSchemaError￨e (￨e "dt-unknown-basetype"￨e ,￨e args￨e )￨e ;￨e baseValidator￨e =￨e SchemaGrammar￨e .￨e fAnySimpleType￨e ;￨e }￨j content￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e content￨e )￨e ;￨e }￨l }￨j if￨j (￨j (￨c fListName￨c .￨c length￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j if￨j (￨j fListName￨c .￨c equals￨c (￨c qualifiedName￨c )￨c )￨j {￨j fListName￨e =￨e SchemaSymbols￨e .￨e EMPTY_STRING￨e ;￨e }￨j }￨j XSFacets￨e facetData￨e =￨e null￨e ;￨e short￨e presentFacets￨e =￨e 0￨e ;￨e short￨e fixedFacets￨e =￨e 0￨e ;￨e if￨j (￨j restriction￨c &&￨c (￨c content￨c !=￨c null￨c )￨c )￨j {￨j FacetInfo￨e fi￨e =￨e traverseFacets￨e (￨e content￨e ,￨e contentAttrs￨e ,￨e nameProperty￨e ,￨e baseValidator￨e ,￨e schemaDoc￨e ,￨e grammar￨e )￨e ;￨e content￨e =￨e fi￨e .￨e nodeAfterFacets￨e ;￨e if￨j (￨j content￨c !=￨c null￨c )￨j {￨j content￨e =￨e null￨e ;￨e reportSchemaError￨f (￨f "s4s-elt-must-match"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j facetData￨e =￨e fi￨e .￨e facetdata￨e ;￨e presentFacets￨e =￨e fi￨e .￨e fPresentFacets￨e ;￨e fixedFacets￨e =￨e fi￨e .￨e fFixedFacets￨e ;￨e }￨j else￨j if￨j (￨j list￨c &&￨c (￨c content￨c !=￨c null￨c )￨c )￨j {￨j if￨j (￨j baseTypeName￨c !=￨c null￨c )￨j {￨j if￨j (￨j DOMUtil￨c .￨c getLocalName￨c (￨c content￨c )￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨j {￨j traverseAnnotationDecl￨e (￨e content￨e ,￨e attrValues￨e ,￨e false￨e ,￨e schemaDoc￨e )￨e ;￨e content￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e content￨e )￨e ;￨e }￨j if￨j (￨j content￨c !=￨c null￨c )￨j {￨j Object￨f [￨f ]￨f args￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e reportSchemaError￨e (￨e "dt-list-itemType"￨e ,￨e args￨e )￨e ;￨e }￨j }￨j else￨j {￨j reportSchemaError￨f (￨f "s4s-elt-must-match"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j }￨j else￨j if￨j (￨j union￨c &&￨c (￨c content￨c !=￨c null￨c )￨c )￨j {￨j reportSchemaError￨f (￨f "s4s-elt-must-match"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j XSSimpleType￨e newDecl￨e =￨e null￨e ;￨e if￨j (￨j list￨c )￨j {￨j newDecl￨e =￨e schemaFactory￨e .￨e createTypeList￨e (￨e nameProperty￨e ,￨e schemaDoc￨e .￨e fTargetNamespace￨e ,￨e (￨e (￨e short￨e )￨e (￨e finalProperty￨e )￨e )￨e ,￨e baseValidator￨e )￨e ;￨e }￨j else￨j if￨j (￨j restriction￨c )￨j {￨j newDecl￨e =￨e schemaFactory￨e .￨e createTypeRestriction￨e (￨e nameProperty￨e ,￨e schemaDoc￨e .￨e fTargetNamespace￨e ,￨e (￨e (￨e short￨e )￨e (￨e finalProperty￨e )￨e )￨e ,￨e baseValidator￨e )￨e ;￨e try￨f (￨f )￨f {￨f fValidationState￨e .￨e setNamespaceSupport￨e (￨e schemaDoc￨e .￨e fNamespaceSupport￨e )￨e ;￨e newDecl￨e .￨e applyFacets￨e (￨e facetData￨e ,￨e presentFacets￨e ,￨e fixedFacets￨e ,￨e fValidationState￨e )￨e ;￨e }￨f catch￨f (￨f InvalidDatatypeFacetException￨p ex￨p )￨f {￨f <START_BUG>￨b reportGenericSchemaError￨b (￨b (￨b (￨b (￨b "facet<seq2seq4repair_space>error<seq2seq4repair_space>when<seq2seq4repair_space>creating<seq2seq4repair_space>type<seq2seq4repair_space>'"￨b +￨b qualifiedName￨b )￨b +￨b "':<seq2seq4repair_space>"￨b )￨b +￨b (￨b ex￨b .￨b getLocalizedMessage￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨j else￨j {￨j XSSimpleType￨e [￨e ]￨e memberDecls￨e =￨e new￨e XSSimpleType￨e [￨e dTValidators￨e .￨e size￨e (￨e )￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c dTValidators￨c .￨c size￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l memberDecls￨e [￨e i￨e ]￨e =￨e (￨e (￨e XSSimpleType￨e )￨e (￨e dTValidators￨e .￨e elementAt￨e (￨e i￨e )￨e )￨e )￨e ;￨e }￨l newDecl￨e =￨e schemaFactory￨e .￨e createTypeUnion￨e (￨e nameProperty￨e ,￨e schemaDoc￨e .￨e fTargetNamespace￨e ,￨e (￨e (￨e short￨e )￨e (￨e finalProperty￨e )￨e )￨e ,￨e memberDecls￨e )￨e ;￨e }￨j if￨j (￨j (￨c nameProperty￨c ==￨c null￨c )￨c &&￨c isGlobal￨c )￨j {￨j return￨e null￨e ;￨e }￨j if￨j (￨j (￨c newDecl￨c !=￨c null￨c )￨c &&￨c isGlobal￨c )￨j {￨j grammar￨e .￨e addGlobalTypeDecl￨e (￨e newDecl￨e )￨e ;￨e }￨j return￨e newDecl￨e ;￨e }￨f private￨f void￨f reportCosListOfAtomic￨f (￨f String￨p qualifiedName￨p )￨f {￨f }￨f private￨f XSSimpleType￨f findDTValidator￨f (￨f Element￨p elm￨p ,￨p QName￨p baseTypeStr￨p ,￨p short￨p baseRefContext￨p ,￨p XSDocumentInfo￨p schemaDoc￨p )￨f {￨f }￨f private￨f boolean￨f isListDatatype￨f (￨f XSSimpleType￨p validator￨p )￨f {￨f }￨f }￨d
public￨d class￨d WarWebXmlInterceptor￨d extends￨d BaseInterceptor￨d implements￨d ContextInterceptor￨d {￨d private￨e static￨e StringManager￨e sm￨e =￨e StringManager￨e .￨e getManager￨e (￨e "org.apache.tomcat.core"￨e )￨e ;￨e public￨f WarWebXmlInterceptor￨f (￨f )￨f {￨f }￨f public￨f void￨f contextInit￨f (￨f Context￨p ctx￨p )￨f {￨f if￨j (￨j !￨c (￨c ctx￨c .￨c getDocumentBase￨c (￨c )￨c .￨c getProtocol￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c "war"￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j WebApplicationReader￨e webXmlReader￨e =￨e new￨e WebApplicationReader￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f webXmlReader￨e .￨e processDefaultWebApp￨e (￨e ctx￨e )￨e ;￨e String￨e s￨e =￨e ctx￨e .￨e getDocumentBase￨e (￨e )￨e .￨e toString￨e (￨e )￨e ;￨e if￨j (￨j s￨c .￨c endsWith￨c (￨c "/"￨c )￨c )￨j {￨j s￨e =￨e s￨e .￨e substring￨e (￨e 0￨e ,￨e (￨e (￨e s￨e .￨e length￨e (￨e )￨e )￨e -￨e 1￨e )￨e )￨e ;￨e }￨j URL￨e webURL￨e =￨e null￨e ;￨e <START_BUG>￨b webURL￨b =￨b new￨b URL￨b (￨b (￨b (￨b s￨b +￨b "!/"￨b )￨b +￨b (￨b Constants￨b .￨b Context￨b .￨b ConfigFile￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b InputStream￨e is￨e =￨e webURL￨e .￨e openConnection￨e (￨e )￨e .￨e getInputStream￨e (￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e (￨e "Context("￨e +￨e (￨e ctx￨e .￨e getPath￨e (￨e )￨e )￨e )￨e +￨e "):<seq2seq4repair_space>"￨e )￨e +￨e (￨e webURL￨e .￨e getFile￨e (￨e )￨e )￨e )￨e )￨e ;￨e webXmlReader￨e .￨e processWebApp￨e (￨e ctx￨e ,￨e is￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f String￨e msg￨e =￨e WarWebXmlInterceptor￨e .￨e sm￨e .￨e getString￨e (￨e "context.getConfig.e"￨e ,￨e (￨e (￨e (￨e ctx￨e .￨e getPath￨e (￨e )￨e )￨e +￨e "<seq2seq4repair_space>"￨e )￨e +￨e (￨e ctx￨e .￨e getDocBase￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d Choices￨d <￨d T￨d >￨d extends￨d AbstractOptions￨d <￨d T￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f Choices￨f (￨f String￨p id￨p ,￨p Palette￨p <￨p T￨p >￨p palette￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f ComponentTag￨p tag￨p )￨f {￨f super￨e .￨e onComponentTag￨e (￨e tag￨e )￨e ;￨e IValueMap￨e attrs￨e =￨e tag￨e .￨e getAttributes￨e (￨e )￨e ;￨e String￨e onFocus￨e =￨e Choices￨e .￨e getPalette￨e (￨e )￨e .￨e getChoicesOnFocusJS￨e (￨e )￨e ;￨e if￨j (￨j onFocus￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b attrs￨b .￨b put￨b (￨b "onFocus"￨b ,￨b onFocus￨b )￨b ;￨b <END_BUG>￨b }￨j tag￨e .￨e getAttributes￨e (￨e )￨e .￨e put￨e (￨e "ondblclick"￨e ,￨e Choices￨e .￨e getPalette￨e (￨e )￨e .￨e getAddOnClickJS￨e (￨e )￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f Iterator￨f <￨f T￨f >￨f getOptionsIterator￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CodeFlow￨d implements￨d Opcodes￨d {￨d private￨e final￨e Stack￨e <￨e ArrayList￨e <￨e String￨e >￨e >￨e compilationScopes￨e ;￨e public￨f CodeFlow￨f (￨f )￨f {￨f }￨f public￨f void￨f loadTarget￨f (￨f MethodVisitor￨p mv￨p )￨f {￨f }￨f public￨f void￨f pushDescriptor￨f (￨f String￨p descriptor￨p )￨f {￨f <START_BUG>￨b Assert￨b .￨b notNull￨b (￨b descriptor￨b )￨b ;￨b <END_BUG>￨b this￨e .￨e compilationScopes￨e .￨e peek￨e (￨e )￨e .￨e add￨e (￨e descriptor￨e )￨e ;￨e }￨f public￨f void￨f enterCompilationScope￨f (￨f )￨f {￨f }￨f public￨f void￨f exitCompilationScope￨f (￨f )￨f {￨f }￨f public￨f String￨f lastDescriptor￨f (￨f )￨f {￨f }￨f public￨f void￨f unboxBooleanIfNecessary￨f (￨f MethodVisitor￨p mv￨p )￨f {￨f }￨f public￨f static￨f void￨f insertUnboxInsns￨f (￨f MethodVisitor￨p mv￨p ,￨p char￨p ch￨p ,￨p boolean￨p isObject￨p )￨f {￨f }￨f public￨f static￨f String￨f createSignatureDescriptor￨f (￨f Method￨p method￨p )￨f {￨f }￨f public￨f static￨f String￨f createSignatureDescriptor￨f (￨f Constructor￨p <￨p ?￨p >￨p ctor￨p )￨f {￨f }￨f public￨f static￨f String￨f toJVMDescriptor￨f (￨f Class￨p <￨p ?￨p >￨p clazz￨p )￨f {￨f }￨f public￨f static￨f String￨f toDescriptorFromObject￨f (￨f Object￨p value￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isBooleanCompatible￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isPrimitive￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isPrimitiveArray￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f boolean￨f areBoxingCompatible￨f (￨f String￨p desc1￨p ,￨p String￨p desc2￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isPrimitiveOrUnboxableSupportedNumberOrBoolean￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isPrimitiveOrUnboxableSupportedNumber￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f char￨f toPrimitiveTargetDesc￨f (￨f String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f void￨f insertCheckCast￨f (￨f MethodVisitor￨p mv￨p ,￨p String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f void￨f insertBoxIfNecessary￨f (￨f MethodVisitor￨p mv￨p ,￨p String￨p descriptor￨p )￨f {￨f }￨f public￨f static￨f void￨f insertBoxIfNecessary￨f (￨f MethodVisitor￨p mv￨p ,￨p char￨p ch￨p )￨f {￨f }￨f public￨f static￨f String￨f toDescriptor￨f (￨f Class￨p <￨p ?￨p >￨p type￨p )￨f {￨f }￨f public￨f static￨f String￨f [￨f ]￨f toParamDescriptors￨f (￨f Method￨p method￨p )￨f {￨f }￨f public￨f static￨f String￨f [￨f ]￨f toParamDescriptors￨f (￨f Constructor￨p <￨p ?￨p >￨p ctor￨p )￨f {￨f }￨f private￨f static￨f String￨f [￨f ]￨f toDescriptors￨f (￨f Class￨p <￨p ?￨p >￨p [￨p ]￨p types￨p )￨f {￨f }￨f }￨d
public￨d class￨d Form￨d extends￨d WebMarkupContainer￨d implements￨d IFormSubmitListener￨d {￨d public￨d abstract￨d static￨d class￨d ValidationVisitor￨d implements￨d FormComponent￨d .￨d IVisitor￨d {￨d public￨f Object￨f formComponent￨f (￨f IFormVisitorParticipant￨p component￨p )￨f {￨f }￨f public￨f abstract￨f void￨f validate￨f (￨f FormComponent￨p formComponent￨p )￨f {￨f }￨f }￨d class￨d FormDispatchRequest￨d extends￨d Request￨d {￨d private￨e final￨e ValueMap￨e params￨e =￨e new￨e ValueMap￨e (￨e )￨e ;￨e private￨e final￨e Request￨e realRequest￨e ;￨e private￨e final￨e String￨e url￨e ;￨e public￨f FormDispatchRequest￨f (￨f final￨p Request￨p realRequest￨p ,￨p final￨p String￨p url￨p )￨f {￨f }￨f public￨f Locale￨f getLocale￨f (￨f )￨f {￨f }￨f public￨f String￨f getParameter￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f Map￨f getParameterMap￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getParameters￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f String￨f getPath￨f (￨f )￨f {￨f }￨f public￨f String￨f getRelativePathPrefixToContextRoot￨f (￨f )￨f {￨f }￨f public￨f String￨f getRelativePathPrefixToWicketHandler￨f (￨f )￨f {￨f }￨f public￨f String￨f getURL￨f (￨f )￨f {￨f }￨f }￨d public￨e static￨e final￨e String￨e METHOD_GET￨e =￨e "get"￨e ;￨e public￨e static￨e final￨e String￨e METHOD_POST￨e =￨e "post"￨e ;￨e private￨e static￨e final￨e short￨e FLAG_SUBMITTED￨e =￨e FLAG_RESERVED1￨e ;￨e private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d Form￨d .￨d class￨d )￨d ;￨d private￨d static￨d final￨d long￨d serialVersionUID￨d =￨d 1L￨d ;￨d private￨d static￨d final￨d String￨d UPLOAD_FAILED_RESOURCE_KEY￨d =￨d "uploadFailed"￨d ;￨d private￨d static￨d final￨d String￨d UPLOAD_TOO_LARGE_RESOURCE_KEY￨d =￨d "uploadTooLarge"￨d ;￨d private￨d IFormSubmittingComponent￨d defaultSubmittingComponent￨d ;￨d private￨d Object￨d formValidators￨d =￨d null￨d ;￨d private￨d String￨d javascriptId￨d ;￨d private￨d Bytes￨d maxSize￨d =￨d null￨d ;￨d private￨d boolean￨d multiPart￨d =￨d false￨d ;￨d public￨d Form￨d (￨d final￨d String￨d id￨d )￨d {￨d }￨d public￨f Form￨f (￨f final￨p String￨p id￨p ,￨p IModel￨p model￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f IFormValidator￨p validator￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f IFormValidator￨p validator￨p )￨f {￨f }￨f private￨f final￨f int￨f formValidators_indexOf￨f (￨f IFormValidator￨p validator￨p )￨f {￨f }￨f private￨f final￨f IFormValidator￨f formValidators_remove￨f (￨f IFormValidator￨p validator￨p )￨f {￨f }￨f private￨f final￨f IFormValidator￨f formValidators_remove￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f final￨f void￨f clearInput￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f error￨f (￨f String￨p error￨p ,￨p Map￨p args￨p )￨f {￨f }￨f public￨f final￨f IFormSubmittingComponent￨f findSubmittingButton￨f (￨f )￨f {￨f }￨f public￨f final￨f IFormSubmittingComponent￨f getDefaultButton￨f (￨f )￨f {￨f }￨f public￨f final￨f CharSequence￨f getJsForInterfaceUrl￨f (￨f CharSequence￨p url￨p )￨f {￨f }￨f public￨f Bytes￨f getMaxSize￨f (￨f )￨f {￨f }￨f public￨f Form￨f getRootForm￨f (￨f )￨f {￨f }￨f public￨f String￨f getValidatorKeyPrefix￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f hasError￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRootForm￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isSubmitted￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVersioned￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f loadPersistentFormComponentValues￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f onFormSubmitted￨f (￨f )￨f {￨f }￨f public￨f boolean￨f process￨f (￨f )￨f {￨f }￨f private￨f void￨f callOnError￨f (￨f )￨f {￨f }￨f private￨f void￨f markFormsSubmitted￨f (￨f )￨f {￨f }￨f public￨f void￨f removePersistentFormComponentValues￨f (￨f final￨p boolean￨p disablePersistence￨p )￨f {￨f }￨f public￨f final￨f void￨f setDefaultButton￨f (￨f IFormSubmittingComponent￨p submittingComponent￨p )￨f {￨f }￨f public￨f void￨f setMaxSize￨f (￨f final￨p Bytes￨p maxSize￨p )￨f {￨f }￨f public￨f void￨f setMultiPart￨f (￨f boolean￨p multiPart￨p )￨f {￨f }￨f public￨f final￨f Component￨f setVersioned￨f (￨f final￨p boolean￨p isVersioned￨p )￨f {￨f }￨f public￨f final￨f void￨f visitFormComponents￨f (￨f final￨p FormComponent￨p .￨p IVisitor￨p visitor￨p )￨f {￨f }￨f public￨f final￨f void￨f visitFormComponentsPostOrder￨f (￨f final￨p FormComponent￨p .￨p IVisitor￨p visitor￨p )￨f {￨f }￨f private￨f void￨f visitChildrenInContainingBorder￨f (￨f final￨p FormComponent￨p .￨p IVisitor￨p visitor￨p )￨f {￨f }￨f private￨f boolean￨f anyFormComponentError￨f (￨f )￨f {￨f }￨f private￨f void￨f dispatchEvent￨f (￨f final￨p Page￨p page￨p ,￨p final￨p String￨p url￨p )￨f {￨f }￨f private￨f void￨f formValidators_add￨f (￨f final￨p IFormValidator￨p validator￨p )￨f {￨f }￨f private￨f IFormValidator￨f formValidators_get￨f (￨f int￨p index￨p )￨f {￨f }￨f private￨f int￨f formValidators_size￨f (￨f )￨f {￨f }￨f private￨f void￨f inputChanged￨f (￨f )￨f {￨f }￨f private￨f void￨f persistFormComponentData￨f (￨f )￨f {￨f }￨f protected￨f void￨f appendDefaultButtonField￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f protected￨f void￨f beforeUpdateFormComponentModels￨f (￨f )￨f {￨f }￨f protected￨f void￨f delegateSubmit￨f (￨f IFormSubmittingComponent￨p submittingComponent￨p )￨f {￨f }￨f protected￨f final￨f String￨f getHiddenFieldId￨f (￨f )￨f {￨f }￨f protected￨f final￨f String￨f getJavascriptId￨f (￨f )￨f {￨f }￨f protected￨f String￨f getMethod￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f getStatelessHint￨f (￨f )￨f {￨f }￨f protected￨f IValuePersister￨f getValuePersister￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f handleMultiPart￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalOnModelChanged￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f markFormComponentsInvalid￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f markFormComponentsValid￨f (￨f )￨f {￨f }￨f private￨f void￨f markNestedFormComponentsValid￨f (￨f )￨f {￨f }￨f private￨f void￨f internalMarkFormComponentsValid￨f (￨f )￨f {￨f }￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f protected￨f void￨f onComponentTagBody￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f protected￨f void￨f onDetach￨f (￨f )￨f {￨f }￨f protected￨f void￨f onError￨f (￨f )￨f {￨f }￨f protected￨f void￨f onRender￨f (￨f final￨p MarkupStream￨p markupStream￨p )￨f {￨f }￨f protected￨f void￨f onSubmit￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f updateFormComponentModels￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f updateNestedFormComponentModels￨f (￨f )￨f {￨f }￨f private￨f void￨f internalUpdateFormComponentModels￨f (￨f )￨f {￨f }￨f protected￨f void￨f validate￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f validateComponents￨f (￨f )￨f {￨f <START_BUG>￨b visitFormComponents￨b (￨b new￨b Form￨b .￨b ValidationVisitor￨b (￨b )￨b {￨b <END_BUG>￨b public￨f void￨f validate￨f (￨f final￨p FormComponent￨p formComponent￨p )￨f {￨f final￨e Form￨e form￨e =￨e formComponent￨e .￨e getForm￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c form￨c ==￨c (￨c Form￨c .￨c this￨c )￨c )￨c &&￨c (￨c form￨c .￨c isEnabled￨c (￨c )￨c )￨c )￨c &&￨c (￨c form￨c .￨c isEnableAllowed￨c (￨c )￨c )￨c )￨c &&￨c (￨c form￨c .￨c isVisibleInHierarchy￨c (￨c )￨c )￨c )￨j {￨j formComponent￨e .￨e validate￨e (￨e )￨e ;￨e }￨j }￨f }￨e )￨e ;￨e }￨f private￨f boolean￨f isFormComponentVisibleInPage￨f (￨f FormComponent￨p fc￨p )￨f {￨f }￨f protected￨f final￨f void￨f validateFormValidator￨f (￨f final￨p IFormValidator￨p validator￨p )￨f {￨f }￨f protected￨f final￨f void￨f validateFormValidators￨f (￨f )￨f {￨f }￨f private￨f void￨f validateNestedForms￨f (￨f )￨f {￨f }￨f private￨d class￨d FormValidatorRemovedChange￨d extends￨d Change￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e IFormValidator￨e removed￨e ;￨e public￨f FormValidatorRemovedChange￨f (￨f final￨p IFormValidator￨p removed￨p )￨f {￨f }￨f public￨f void￨f undo￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d final￨d class￨d LegacyActionPersistence￨d extends￨d RegistryPersistence￨d {￨d private￨e static￨e final￨e int￨e INDEX_ACTION_SETS￨e =￨e 0￨e ;￨e private￨e static￨e final￨e int￨e INDEX_EDITOR_CONTRIBUTIONS￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e INDEX_OBJECT_CONTRIBUTIONS￨e =￨e 2￨e ;￨e private￨e static￨e final￨e int￨e INDEX_VIEW_CONTRIBUTIONS￨e =￨e 3￨e ;￨e private￨e static￨e final￨e int￨e INDEX_VIEWER_CONTRIBUTIONS￨e =￨e 4￨e ;￨e private￨f static￨f final￨f SLocation￨f createLocation￨f (￨f final￨p String￨p barType￨p ,￨p final￨p String￨p path￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p char￨p mnemonic￨p ,￨p final￨p String￨p imageStyle￨p )￨f {￨f final￨e LeafLocationElement￨e leafElement￨e =￨e new￨e SBar￨e (￨e barType￨e ,￨e path￨e )￨e ;￨e final￨e LocationElement￨e locationElement￨e ;￨e if￨j (￨j locationInfo￨c ==￨c null￨c )￨j {￨j locationElement￨e =￨e leafElement￨e ;￨e }￨j else￨j {￨j locationElement￨e =￨e locationInfo￨e .￨e append￨e (￨e leafElement￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b new￨b SLocation￨b (￨b mnemonic￨b ,￨b imageStyle￨b ,￨b null￨b ,￨b locationElement￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f static￨f final￨f Expression￨f readVisibility￨f (￨f final￨p IConfigurationElement￨p parentElement￨p ,￨p final￨p String￨p parentId￨p ,￨p final￨p List￨p warningsToLog￨p )￨f {￨f }￨f private￨e final￨e BindingManager￨e bindingManager￨e ;￨e private￨e final￨e CommandImageManager￨e commandImageManager￨e ;￨e private￨e final￨e CommandManager￨e commandManager￨e ;￨e private￨e final￨e Collection￨e menuContributions￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e private￨e final￨e IMenuService￨e menuService￨e ;￨e public￨f LegacyActionPersistence￨f (￨f final￨p CommandManager￨p commandManager￨p ,￨p final￨p BindingManager￨p bindingManager￨p ,￨p final￨p CommandImageManager￨p commandImageManager￨p ,￨p final￨p IMenuService￨p menuService￨p )￨f {￨f }￨f private￨f final￨f void￨f clearBindings￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f clearImages￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f clearMenus￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f convertActionToBinding￨f (￨f final￨p IConfigurationElement￨p element￨p ,￨p final￨p ParameterizedCommand￨p command￨p )￨f {￨f }￨f private￨f final￨f ParameterizedCommand￨f convertActionToCommand￨f (￨f final￨p IConfigurationElement￨p element￨p ,￨p final￨p String￨p primaryId￨p ,￨p final￨p String￨p secondaryId￨p ,￨p final￨p List￨p warningsToLog￨p )￨f {￨f }￨f private￨f final￨f String￨f convertActionToImages￨f (￨f final￨p IConfigurationElement￨p element￨p ,￨p final￨p ParameterizedCommand￨p command￨p )￨f {￨f }￨f private￨f final￨f void￨f convertActionToItem￨f (￨f final￨p IConfigurationElement￨p element￨p ,￨p final￨p List￨p warningsToLog￨p ,￨p final￨p ParameterizedCommand￨p command￨p ,￨p final￨p String￨p imageStyle￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p Expression￨p visibleWhenExpression￨p )￨f {￨f }￨f protected￨f final￨f boolean￨f isChangeImportant￨f (￨f final￨p IRegistryChangeEvent￨p event￨p )￨f {￨f }￨f public￨f final￨f void￨f dispose￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f read￨f (￨f )￨f {￨f }￨f private￨f final￨f SReference￨f [￨f ]￨f readActions￨f (￨f final￨p String￨p primaryId￨p ,￨p final￨p IConfigurationElement￨p [￨p ]￨p elements￨p ,￨p final￨p List￨p warningsToLog￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p Expression￨p visibleWhenExpression￨p )￨f {￨f }￨f private￨f final￨f SReference￨f [￨f ]￨f readActionsAndMenus￨f (￨f final￨p IConfigurationElement￨p element￨p ,￨p final￨p String￨p id￨p ,￨p final￨p List￨p warningsToLog￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p Expression￨p visibleWhenExpression￨p )￨f {￨f }￨f private￨f final￨f void￨f readActionSets￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p configurationElements￨p ,￨p final￨p int￨p configurationElementCount￨p )￨f {￨f }￨f private￨f final￨f void￨f readEditorContributions￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p configurationElements￨p ,￨p final￨p int￨p configurationElementCount￨p )￨f {￨f }￨f private￨f final￨f SReference￨f [￨f ]￨f readGroups￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p elements￨p ,￨p final￨p List￨p warningsToLog￨p ,￨p final￨p String￨p path￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p Expression￨p visibleWhenExpression￨p ,￨p final￨p boolean￨p separatorsVisible￨p )￨f {￨f }￨f private￨f final￨f SReference￨f [￨f ]￨f readMenusAndGroups￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p menuElements￨p ,￨p final￨p String￨p contributionId￨p ,￨p final￨p List￨p warningsToLog￨p ,￨p final￨p LegacyLocationInfo￨p locationInfo￨p ,￨p final￨p Expression￨p visibleWhenExpression￨p )￨f {￨f }￨f private￨f final￨f void￨f readObjectContributions￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p configurationElements￨p ,￨p final￨p int￨p configurationElementCount￨p )￨f {￨f }￨f private￨f final￨f void￨f readViewContributions￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p configurationElements￨p ,￨p final￨p int￨p configurationElementCount￨p )￨f {￨f }￨f private￨f final￨f void￨f readViewerContributions￨f (￨f final￨p IConfigurationElement￨p [￨p ]￨p configurationElements￨p ,￨p final￨p int￨p configurationElementCount￨p )￨f {￨f }￨f }￨d
public￨d class￨d HelloHostApplication￨d implements￨d IDistributionConstants￨d ,￨d IApplication￨d {￨d private￨e static￨e final￨e String￨e DEFAULT_CONTAINER_TYPE￨e =￨e "ecf.r_osgi.peer"￨e ;￨e public￨e static￨e final￨e String￨e DEFAULT_CONTAINER_ID￨e =￨e null￨e ;￨e private￨e BundleContext￨e bundleContext￨e ;￨e private￨e ServiceTracker￨e containerManagerServiceTracker￨e ;￨e private￨e String￨e containerType￨e =￨e HelloHostApplication￨e .￨e DEFAULT_CONTAINER_TYPE￨e ;￨e private￨e String￨e containerId￨e =￨e HelloHostApplication￨e .￨e DEFAULT_CONTAINER_ID￨e ;￨e private￨e final￨e Object￨e appLock￨e =￨e new￨e Object￨e (￨e )￨e ;￨e private￨e boolean￨e done￨e =￨e false￨e ;￨e private￨e ServiceRegistration￨e helloRegistration￨e ;￨e public￨f Object￨f start￨f (￨f IApplicationContext￨f appContext￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f bundleContext￨e =￨e Activator￨e .￨e getContext￨e (￨e )￨e ;￨e processArgs￨e (￨e appContext￨e )￨e ;￨e IContainerManager￨e containerManager￨e =￨e getContainerManagerService￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c containerId￨c )￨c ==￨c null￨c )￨c ||￨c (￨c ""￨c .￨c equals￨c (￨c containerId￨c )￨c )￨c )￨j {￨j containerManager￨e .￨e getContainerFactory￨e (￨e )￨e .￨e createContainer￨e (￨e containerType￨e )￨e ;￨e }￨j else￨j {￨j containerManager￨f .￨f getContainerFactory￨f (￨f )￨f .￨f createContainer￨f (￨f containerType￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j Properties￨e props￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e <START_BUG>￨b props￨b .￨b put￨b (￨b REMOTE_INTERFACES￨b ,￨b REMOTE_INTERFACES_WILDCARD￨b )￨b ;￨b <END_BUG>￨b helloRegistration￨e =￨e bundleContext￨e .￨e registerService￨e (￨e IHello￨e .￨e class￨e .￨e getName￨e (￨e )￨e ,￨e new￨e Hello￨e (￨e )￨e ,￨e props￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "Host:<seq2seq4repair_space>Hello<seq2seq4repair_space>Service<seq2seq4repair_space>Registered"￨e )￨e ;￨e waitForDone￨e (￨e )￨e ;￨e return￨e IApplication￨e .￨e EXIT_OK￨e ;￨e }￨f public￨f void￨f stop￨f (￨f )￨f {￨f }￨f private￨f IContainerManager￨f getContainerManagerService￨f (￨f )￨f {￨f }￨f private￨f void￨f processArgs￨f (￨f IApplicationContext￨p appContext￨p )￨f {￨f }￨f private￨f void￨f waitForDone￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ImageTransfer￨d extends￨d ByteArrayTransfer￨d {￨d private￨e static￨e ImageTransfer￨e _instance￨e =￨e new￨e ImageTransfer￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e CF_DIB￨e =￨e "CF_DIB"￨e ;￨e private￨e static￨e final￨e int￨e CF_DIBID￨e =￨e COM￨e .￨e CF_DIB￨e ;￨e private￨f ImageTransfer￨f (￨f )￨f {￨f }￨f public￨f static￨f ImageTransfer￨f getInstance￨f (￨f )￨f {￨f }￨f public￨f void￨f javaToNative￨f (￨f Object￨p object￨p ,￨p TransferData￨p transferData￨p )￨f {￨f }￨f public￨f Object￨f nativeToJava￨f (￨f TransferData￨p transferData￨p )￨f {￨f if￨j (￨j (￨c !￨c (￨c isSupportedType￨c (￨c transferData￨c )￨c )￨c )￨c ||￨c (￨c (￨c transferData￨c .￨c pIDataObject￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j IDataObject￨e dataObject￨e =￨e new￨e IDataObject￨e (￨e transferData￨e .￨e pIDataObject￨e )￨e ;￨e dataObject￨e .￨e AddRef￨e (￨e )￨e ;￨e FORMATETC￨e formatetc￨e =￨e new￨e FORMATETC￨e (￨e )￨e ;￨e formatetc￨e .￨e cfFormat￨e =￨e COM￨e .￨e CF_DIB￨e ;￨e formatetc￨e .￨e ptd￨e =￨e 0￨e ;￨e formatetc￨e .￨e dwAspect￨e =￨e COM￨e .￨e DVASPECT_CONTENT￨e ;￨e formatetc￨e .￨e lindex￨e =￨e -￨e 1￨e ;￨e formatetc￨e .￨e tymed￨e =￨e COM￨e .￨e TYMED_HGLOBAL￨e ;￨e STGMEDIUM￨e stgmedium￨e =￨e new￨e STGMEDIUM￨e (￨e )￨e ;￨e stgmedium￨e .￨e tymed￨e =￨e COM￨e .￨e TYMED_HGLOBAL￨e ;￨e transferData￨e .￨e result￨e =￨e getData￨e (￨e dataObject￨e ,￨e formatetc￨e ,￨e stgmedium￨e )￨e ;￨e if￨j (￨j (￨c transferData￨c .￨c result￨c )￨c !=￨c (￨c COM￨c .￨c S_OK￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j int￨e hMem￨e =￨e stgmedium￨e .￨e unionField￨e ;￨e dataObject￨e .￨e Release￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f int￨e ptr￨e =￨e OS￨e .￨e GlobalLock￨e (￨e hMem￨e )￨e ;￨e if￨j (￨j ptr￨c ==￨c 0￨c )￨j {￨j return￨e null￨e ;￨e }￨j try￨f (￨f )￨f {￨f BITMAPINFOHEADER￨e bmiHeader￨e =￨e new￨e BITMAPINFOHEADER￨e (￨e )￨e ;￨e OS￨e .￨e MoveMemory￨e (￨e bmiHeader￨e ,￨e ptr￨e ,￨e sizeof￨e )￨e ;￨e int￨e [￨e ]￨e pBits￨e =￨e new￨e int￨e [￨e 1￨e ]￨e ;￨e int￨e memDib￨e =￨e OS￨e .￨e CreateDIBSection￨e (￨e 0￨e ,￨e ptr￨e ,￨e DIB_RGB_COLORS￨e ,￨e pBits￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j memDib￨c ==￨c 0￨c )￨j {￨j SWT￨e .￨e error￨e (￨e ERROR_NO_HANDLES￨e )￨e ;￨e }￨j int￨e bits￨e =￨e ptr￨e +￨e (￨e bmiHeader￨e .￨e biSize￨e )￨e ;￨e if￨j (￨j (￨c bmiHeader￨c .￨c biBitCount￨c )￨c <=￨c 8￨c )￨j {￨j <START_BUG>￨b bits￨b +=￨b (￨b 1￨b <<￨b (￨b bmiHeader￨b .￨b biBitCount￨b )￨b )￨b *￨b 4￨b ;￨b <END_BUG>￨b }￨j else￨j if￨j (￨j (￨c bmiHeader￨c .￨c biCompression￨c )￨c ==￨c (￨c OS￨c .￨c BI_BITFIELDS￨c )￨c )￨j {￨j bits￨e +=￨e 12￨e ;￨e }￨j if￨j (￨j (￨c bmiHeader￨c .￨c biHeight￨c )￨c <￨c 0￨c )￨j {￨j OS￨e .￨e MoveMemory￨e (￨e pBits￨e [￨e 0￨e ]￨e ,￨e bits￨e ,￨e bmiHeader￨e .￨e biSizeImage￨e )￨e ;￨e }￨j else￨j {￨j DIBSECTION￨e dib￨e =￨e new￨e DIBSECTION￨e (￨e )￨e ;￨e OS￨e .￨e GetObject￨e (￨e memDib￨e ,￨e DIBSECTION￨e .￨e sizeof￨e ,￨e dib￨e )￨e ;￨e int￨e biHeight￨e =￨e dib￨e .￨e biHeight￨e ;￨e int￨e scanline￨e =￨e (￨e dib￨e .￨e biSizeImage￨e )￨e /￨e biHeight￨e ;￨e int￨e pDestBits￨e =￨e pBits￨e [￨e 0￨e ]￨e ;￨e int￨e pSourceBits￨e =￨e bits￨e +￨e (￨e scanline￨e *￨e (￨e biHeight￨e -￨e 1￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c biHeight￨c ;￨c i￨c ++￨c )￨l {￨l OS￨e .￨e MoveMemory￨e (￨e pDestBits￨e ,￨e pSourceBits￨e ,￨e scanline￨e )￨e ;￨e pDestBits￨e +=￨e scanline￨e ;￨e pSourceBits￨e -=￨e scanline￨e ;￨e }￨l }￨j Image￨e image￨e =￨e Image￨e .￨e win32_new￨e (￨e null￨e ,￨e BITMAP￨e ,￨e memDib￨e )￨e ;￨e ImageData￨e data￨e =￨e image￨e .￨e getImageData￨e (￨e )￨e ;￨e OS￨e .￨e DeleteObject￨e (￨e memDib￨e )￨e ;￨e image￨e .￨e dispose￨e (￨e )￨e ;￨e return￨e data￨e ;￨e }￨f finally￨f (￨f )￨f {￨f OS￨e .￨e GlobalUnlock￨e (￨e hMem￨e )￨e ;￨e }￨f }￨f finally￨f (￨f )￨f {￨f OS￨e .￨e GlobalFree￨e (￨e hMem￨e )￨e ;￨e }￨f }￨f protected￨f int￨f [￨f ]￨f getTypeIds￨f (￨f )￨f {￨f }￨f protected￨f String￨f [￨f ]￨f getTypeNames￨f (￨f )￨f {￨f }￨f boolean￨f checkImage￨f (￨f Object￨p object￨p )￨f {￨f }￨f protected￨f boolean￨f validate￨f (￨f Object￨p object￨p )￨f {￨f }￨f }￨d
public￨d class￨d FunctionReference￨d extends￨d SpelNodeImpl￨d {￨d private￨e final￨e String￨e name￨e ;￨e public￨f FunctionReference￨f (￨f String￨p functionName￨p ,￨p int￨p pos￨p ,￨p SpelNodeImpl￨p ...￨p arguments￨p )￨f {￨f }￨f @￨f Override￨f public￨f TypedValue￨f getValueInternal￨f (￨f ExpressionState￨f state￨f )￨f throws￨f EvaluationException￨f (￨f )￨f {￨f }￨f private￨f TypedValue￨f executeFunctionJLRMethod￨f (￨f ExpressionState￨f state￨f ,￨f Method￨f method￨f )￨f throws￨f EvaluationException￨f (￨f )￨f {￨f Object￨e [￨e ]￨e functionArgs￨e =￨e getArguments￨e (￨e state￨e )￨e ;￨e if￨j (￨j (￨c !￨c (￨c method￨c .￨c isVarArgs￨c (￨c )￨c )￨c )￨c &&￨c (￨c (￨c method￨c .￨c getParameterTypes￨c (￨c )￨c .￨c length￨c )￨c !=￨c (￨c functionArgs￨c .￨c length￨c )￨c )￨c )￨j {￨j throw￨e new￨e org￨e .￨e springframework￨e .￨e expression￨e .￨e spel￨e .￨e SpelEvaluationException￨e (￨e SpelMessage￨e .￨e INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION￨e ,￨e functionArgs￨e .￨e length￨e ,￨e method￨e .￨e getParameterTypes￨e (￨e )￨e .￨e length￨e )￨e ;￨e }￨j if￨j (￨j !￨c (￨c Modifier￨c .￨c isStatic￨c (￨c method￨c .￨c getModifiers￨c (￨c )￨c )￨c )￨c )￨j {￨j throw￨e new￨e org￨e .￨e springframework￨e .￨e expression￨e .￨e spel￨e .￨e SpelEvaluationException￨e (￨e getStartPosition￨e (￨e )￨e ,￨e SpelMessage￨e .￨e FUNCTION_MUST_BE_STATIC￨e ,￨e (￨e (￨e (￨e method￨e .￨e getDeclaringClass￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e method￨e .￨e getName￨e (￨e )￨e )￨e )￨e ,￨e name￨e )￨e ;￨e }￨j if￨j (￨j functionArgs￨c !=￨c null￨c )￨j {￨j TypeConverter￨e converter￨e =￨e state￨e .￨e getEvaluationContext￨e (￨e )￨e .￨e getTypeConverter￨e (￨e )￨e ;￨e ReflectionHelper￨e .￨e convertAllArguments￨e (￨e converter￨e ,￨e functionArgs￨e ,￨e method￨e )￨e ;￨e }￨j if￨j (￨j method￨c .￨c isVarArgs￨c (￨c )￨c )￨j {￨j functionArgs￨e =￨e ReflectionHelper￨e .￨e setupArgumentsForVarargsInvocation￨e (￨e method￨e .￨e getParameterTypes￨e (￨e )￨e ,￨e functionArgs￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f ReflectionUtils￨e .￨e makeAccessible￨e (￨e method￨e )￨e ;￨e Object￨e result￨e =￨e method￨e .￨e invoke￨e (￨e method￨e .￨e getClass￨e (￨e )￨e ,￨e functionArgs￨e )￨e ;￨e <START_BUG>￨b return￨b new￨b TypedValue￨b (￨b result￨b ,￨b new￨b org￨b .￨b springframework￨b .￨b core￨b .￨b convert￨b .￨b TypeDescriptor￨b (￨b new￨b MethodParameter￨b (￨b method￨b ,￨b (￨b -￨b 1￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f throw￨e new￨e org￨e .￨e springframework￨e .￨e expression￨e .￨e spel￨e .￨e SpelEvaluationException￨e (￨e getStartPosition￨e (￨e )￨e ,￨e ex￨e ,￨e SpelMessage￨e .￨e EXCEPTION_DURING_FUNCTION_CALL￨e ,￨e this￨e .￨e name￨e ,￨e ex￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f String￨f toStringAST￨f (￨f )￨f {￨f }￨f private￨f Object￨f [￨f ]￨f getArguments￨f (￨f ExpressionState￨f state￨f )￨f throws￨f EvaluationException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ReturnStatement￨d extends￨d Statement￨d {￨d public￨e Expression￨e expression￨e ;￨e public￨e TypeBinding￨e expressionType￨e ;￨e public￨e boolean￨e isSynchronized￨e ;￨e public￨e AstNode￨e [￨e ]￨e subroutines￨e ;￨e public￨e LocalVariableBinding￨e saveValueVariable￨e ;￨e public￨f ReturnStatement￨f (￨f Expression￨p expr￨p ,￨p int￨p s￨p ,￨p int￨p e￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f generateReturnBytecode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f generateStoreSaveValueIfNecessary￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f boolean￨f needValue￨f (￨f )￨f {￨f }￨f public￨f void￨f prepareSaveValueLocation￨f (￨f TryStatement￨p targetTryStatement￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f MethodScope￨e methodScope￨e =￨e scope￨e .￨e methodScope￨e (￨e )￨e ;￨e MethodBinding￨e methodBinding￨e ;￨e TypeBinding￨e methodType￨e =￨e (￨e (￨e methodScope￨e .￨e referenceContext￨e )￨e instanceof￨e AbstractMethodDeclaration￨e )￨e ?￨e (￨e methodBinding￨e =￨e (￨e (￨e AbstractMethodDeclaration￨e )￨e (￨e methodScope￨e .￨e referenceContext￨e )￨e )￨e .￨e binding￨e )￨e ==￨e null￨e ?￨e null￨e :￨e methodBinding￨e .￨e returnType￨e :￨e VoidBinding￨e ;￨e if￨j (￨j methodType￨c ==￨c (￨c VoidBinding￨c )￨c )￨j {￨j if￨j (￨j (￨c expression￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c expressionType￨c =￨c expression￨c .￨c resolveType￨c (￨c scope￨c )￨c )￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e attemptToReturnNonVoidExpression￨e (￨e this￨e ,￨e expressionType￨e )￨e ;￨e }￨j return￨e ;￨e }￨j if￨j (￨j (￨c expression￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j methodType￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e shouldReturn￨e (￨e methodType￨e ,￨e this￨e )￨e ;￨e }￨j return￨e ;￨e }￨j if￨j (￨j (￨c expressionType￨c =￨c expression￨c .￨c resolveType￨c (￨c scope￨c )￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c methodType￨c !=￨c null￨c )￨c &&￨c (￨c expression￨c .￨c isConstantValueOfTypeAssignableToType￨c (￨c expressionType￨c ,￨c methodType￨c )￨c )￨c )￨j {￨j expression￨e .￨e implicitWidening￨e (￨e methodType￨e ,￨e expressionType￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j (￨c expressionType￨c )￨c ==￨c (￨c VoidBinding￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e attemptToReturnVoidValue￨e (￨e this￨e )￨e ;￨e return￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b methodType￨b !=￨b null￨b )￨b &&￨b (￨b org￨b .￨b eclipse￨b .￨b jdt￨b .￨b internal￨b .￨b compiler￨b .￨b lookup￨b .￨b Scope￨b .￨b areTypesCompatible￨b (￨b expressionType￨b ,￨b methodType￨b )￨b )￨b )￨b {￨b <END_BUG>￨b expression￨e .￨e implicitWidening￨e (￨e methodType￨e ,￨e expressionType￨e )￨e ;￨e return￨e ;￨e if￨j (￨j methodType￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e typeMismatchErrorActualTypeExpectedType￨e (￨e expression￨e ,￨e expressionType￨e ,￨e methodType￨e )￨e ;￨e }￨j }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d WeldEjbServices￨d implements￨d EjbServices￨d {￨d private￨e final￨e ServiceRegistry￨e serviceRegistry￨e ;￨e private￨e volatile￨e Map￨e <￨e String￨e ,￨e InterceptorBindings￨e >￨e bindings￨e =￨e Collections￨e .￨e emptyMap￨e (￨e )￨e ;￨e public￨f WeldEjbServices￨f (￨f ServiceRegistry￨p serviceRegistry￨p )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f void￨f registerInterceptors￨f (￨f EjbDescriptor￨p <￨p ?￨p >￨p ejbDescriptor￨p ,￨p InterceptorBindings￨p interceptorBindings￨p )￨f {￨f }￨f @￨f Override￨f public￨f SessionObjectReference￨f resolveEjb￨f (￨f EjbDescriptor￨p <￨p ?￨p >￨p ejbDescriptor￨p )￨f {￨f if￨j (￨j ejbDescriptor￨c .￨c isStateful￨c (￨c )￨c )￨j {￨j return￨e new￨e StatefulSessionObjectReferenceImpl￨e (￨e (￨e (￨e EjbDescriptorImpl￨e <￨e ?￨e >￨e )￨e (￨e ejbDescriptor￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b return￨b new￨b org￨b .￨b jboss￨b .￨b as￨b .￨b weld￨b .￨b ejb￨b .￨b SessionObjectReferenceImpl￨b (￨b (￨b (￨b EjbDescriptorImpl￨b <￨b ?￨b >￨b )￨b (￨b ejbDescriptor￨b )￨b )￨b ,￨b serviceRegistry￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f @￨f Override￨f public￨f void￨f cleanup￨f (￨f )￨f {￨f }￨f public￨f InterceptorBindings￨f getBindings￨f (￨f String￨p ejbName￨p )￨f {￨f }￨f }￨d
public￨d class￨d JMXSubsystemTestCase￨d extends￨d AbstractSubsystemTest￨d {￨d private￨e static￨e final￨e String￨e LAUNCH_TYPE￨e =￨e "launch-type"￨e ;￨e private￨e static￨e final￨e String￨e TYPE_STANDALONE￨e =￨e "STANDALONE"￨e ;￨e public￨f JMXSubsystemTestCase￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseEmptySubsystem￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseSubsystemWithBadChild￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseSubsystemWithBadAttribute￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseSubsystemWithConnector￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseSubsystemWithTwoConnectors￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseSubsystemWithBadConnectorAttribute￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testInstallIntoController￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModel1_0￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModel1_1WithShowModel￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModelWithRemoteConnectorRef1_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModel1_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModel1_2WithShowModels￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseAndMarshalModel1_2WithShowModelsAndOldPropertyFormat￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDescribeHandler￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testShowModelAlias￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testTransformationAS712￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testTransformationAS713￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f testTransformation_1_0_0￨f (￨f ModelTestControllerVersion￨f controllerVersion￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRejectExpressionsAS712￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRejectExpressionsAS713￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f testRejectExpressions_1_0_0￨f (￨f ModelTestControllerVersion￨f controllerVersion￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f List￨f <￨f FailedOperationTransformationConfig￨f .￨f AttributesPathAddressConfig￨f <￨f ?￨f >￨f >￨f createChainedConfigList￨f (￨f FailedOperationTransformationConfig￨p <￨p ?￨p >￨p ...￨p cfgs￨p )￨f {￨f }￨f private￨f void￨f check_1_0_0_Model￨f (￨f ModelNode￨p legacySubsystem￨p ,￨p boolean￨p remotingConnector￨p ,￨p boolean￨p showModel￨p )￨f {￨f }￨f private￨f void￨f assertJmxConnectorAddress￨f (￨f ModelNode￨p address￨p )￨f {￨f }￨f private￨f void￨f assertJmxSubsystemAddress￨f (￨f ModelNode￨p address￨p )￨f {￨f }￨f private￨f static￨f ModelNode￨f createOperation￨f (￨f String￨p name￨p ,￨p String￨p ...￨p addressElements￨p )￨f {￨f }￨f private￨d static￨d class￨d BaseAdditionalInitalization￨d extends￨d AdditionalInitialization￨d {￨d @￨f Override￨f protected￨f void￨f initializeExtraSubystemsAndModel￨f (￨f ExtensionRegistry￨p extensionRegistry￨p ,￨p Resource￨p rootResource￨p ,￨p ManagementResourceRegistration￨p rootRegistration￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f setupController￨f (￨f ControllerInitializer￨p controllerInitializer￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f addExtraServices￨f (￨f final￨p ServiceTarget￨p target￨p )￨f {￨f <START_BUG>￨b ManagementRemotingServices￨b .￨b installRemotingEndpoint￨b (￨b target￨b ,￨b MANAGEMENT_ENDPOINT￨b ,￨b "loaclhost"￨b ,￨b MANAGEMENT￨b ,￨b null￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b ServiceName￨e tmpDirPath￨e =￨e JBOSS￨e .￨e append￨e (￨e "server"￨e ,￨e "path"￨e ,￨e "jboss.controller.temp.dir"￨e )￨e ;￨e RemotingServices￨e .￨e installSecurityServices￨e (￨e target￨e ,￨e "remote"￨e ,￨e null￨e ,￨e null￨e ,￨e tmpDirPath￨e ,￨e null￨e ,￨e null￨e )￨e ;￨e RemotingServices￨e .￨e installConnectorServicesForSocketBinding￨e (￨e target￨e ,￨e MANAGEMENT_ENDPOINT￨e ,￨e "remote"￨e ,￨e JBOSS_BINDING_NAME￨e .￨e append￨e (￨e "remote"￨e )￨e ,￨e EMPTY￨e ,￨e null￨e ,￨e null￨e )￨e ;￨e }￨f }￨d private￨d static￨d class￨d CorrectDomainNameConfig￨d extends￨d FailedOperationTransformationConfig￨d .￨d AttributesPathAddressConfig￨d <￨d JMXSubsystemTestCase￨d .￨d CorrectDomainNameConfig￨d >￨d {￨d public￨f CorrectDomainNameConfig￨f (￨f AttributeDefinition￨p ...￨p attributes￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f isAttributeWritable￨f (￨f String￨p attributeName￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f checkValue￨f (￨f String￨p attrName￨p ,￨p ModelNode￨p attribute￨p ,￨p boolean￨p isWriteAttribute￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelNode￨f correctValue￨f (￨f ModelNode￨p toResolve￨p ,￨p boolean￨p isWriteAttribute￨p )￨f {￨f }￨f }￨d private￨d static￨d class￨d CorrectPropertyFormatConfig￨d extends￨d FailedOperationTransformationConfig￨d .￨d AttributesPathAddressConfig￨d <￨d JMXSubsystemTestCase￨d .￨d CorrectDomainNameConfig￨d >￨d {￨d public￨f CorrectPropertyFormatConfig￨f (￨f AttributeDefinition￨p ...￨p attributes￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f isAttributeWritable￨f (￨f String￨p attributeName￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f checkValue￨f (￨f String￨p attrName￨p ,￨p ModelNode￨p attribute￨p ,￨p boolean￨p isWriteAttribute￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelNode￨f correctValue￨f (￨f ModelNode￨p toResolve￨p ,￨p boolean￨p isWriteAttribute￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d BootStrapperTest￨d {￨d @￨f Test￨f public￨f void￨f testGuessToken￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f StorageService￨e ss￨e =￨e StorageService￨e .￨e instance￨e (￨e )￨e ;￨e generateFakeEndpoints￨e (￨e 3￨e )￨e ;￨e InetAddress￨e one￨e =￨e InetAddress￨e .￨e getByName￨e (￨e "127.0.0.2"￨e )￨e ;￨e InetAddress￨e two￨e =￨e InetAddress￨e .￨e getByName￨e (￨e "127.0.0.3"￨e )￨e ;￨e InetAddress￨e three￨e =￨e InetAddress￨e .￨e getByName￨e (￨e "127.0.0.4"￨e )￨e ;￨e Map￨e <￨e InetAddress￨e ,￨e Double￨e >￨e load￨e =￨e new￨e HashMap￨e <￨e InetAddress￨e ,￨e Double￨e >￨e (￨e )￨e ;￨e load￨e .￨e put￨e (￨e one￨e ,￨e 1.0￨e )￨e ;￨e load￨e .￨e put￨e (￨e two￨e ,￨e 2.0￨e )￨e ;￨e load￨e .￨e put￨e (￨e three￨e ,￨e 3.0￨e )￨e ;￨e TokenMetadata￨e tmd￨e =￨e ss￨e .￨e getTokenMetadata￨e (￨e )￨e ;￨e InetAddress￨e source￨e =￨e BootStrapper￨e .￨e getBootstrapSource￨e (￨e tmd￨e ,￨e load￨e )￨e ;￨e assert￨e three￨e .￨e equals￨e (￨e source￨e )￨e ;￨e InetAddress￨e myEndpoint￨e =￨e InetAddress￨e .￨e getByName￨e (￨e "127.0.0.1"￨e )￨e ;￨e Range￨e range3￨e =￨e ss￨e .￨e getPrimaryRangeForEndPoint￨e (￨e three￨e )￨e ;￨e <START_BUG>￨b Token￨b fakeToken￨b =￨b (￨b (￨b IPartitioner￨b )￨b (￨b StorageService￨b .￨b getPartitioner￨b (￨b )￨b )￨b )￨b .￨b midpoint￨b (￨b range3￨b .￨b left￨b (￨b )￨b ,￨b range3￨b .￨b right￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b assert￨e range3￨e .￨e contains￨e (￨e fakeToken￨e )￨e ;￨e ss￨e .￨e onChange￨e (￨e myEndpoint￨e ,￨e MOVE_STATE￨e ,￨e new￨e org￨e .￨e apache￨e .￨e cassandra￨e .￨e gms￨e .￨e ApplicationState￨e (￨e (￨e (￨e (￨e StorageService￨e .￨e STATE_BOOTSTRAPPING￨e )￨e +￨e (￨e StorageService￨e .￨e Delimiter￨e )￨e )￨e +￨e (￨e ss￨e .￨e getPartitioner￨e (￨e )￨e .￨e getTokenFactory￨e (￨e )￨e .￨e toString￨e (￨e fakeToken￨e )￨e )￨e )￨e )￨e )￨e ;￨e tmd￨e =￨e ss￨e .￨e getTokenMetadata￨e (￨e )￨e ;￨e InetAddress￨e source2￨e =￨e BootStrapper￨e .￨e getBootstrapSource￨e (￨e tmd￨e ,￨e load￨e )￨e ;￨e assert￨e two￨e .￨e equals￨e (￨e source2￨e )￨e :￨e source2￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testSourceTargetComputation￨f (￨f )￨f throws￨f UnknownHostException￨f (￨f )￨f {￨f }￨f private￨f void￨f testSourceTargetComputation￨f (￨f int￨f numOldNodes￨f )￨f throws￨f UnknownHostException￨f (￨f )￨f {￨f }￨f private￨f void￨f generateFakeEndpoints￨f (￨f int￨f numOldNodes￨f )￨f throws￨f UnknownHostException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FieldReference￨d extends￨d Reference￨d implements￨d InvocationSite￨d {￨d public￨e Expression￨e receiver￨e ;￨e public￨e char￨e [￨e ]￨e token￨e ;￨e public￨e FieldBinding￨e binding￨e ;￨e public￨e FieldBinding￨e codegenBinding￨e ;￨e public￨e long￨e nameSourcePosition￨e ;￨e MethodBinding￨e syntheticReadAccessor￨e ;￨e MethodBinding￨e syntheticWriteAccessor￨e ;￨e public￨e TypeBinding￨e receiverType￨e ;￨e public￨f FieldReference￨f (￨f char￨p [￨p ]￨p source￨p ,￨p long￨p pos￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p isCompound￨p )￨f {￨f if￨j (￨j isCompound￨c )￨j {￨j if￨j (￨j (￨c (￨c (￨c binding￨c .￨c isBlankFinal￨c (￨c )￨c )￨c &&￨c (￨c receiver￨c .￨c isThis￨c (￨c )￨c )￨c )￨c &&￨c (￨c currentScope￨c .￨c allowBlankFinalFieldAssignment￨c (￨c binding￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c flowInfo￨c .￨c isDefinitelyAssigned￨c (￨c binding￨c )￨c )￨c )￨c )￨j {￨j currentScope￨e .￨e problemReporter￨e (￨e )￨e .￨e uninitializedBlankFinalField￨e (￨e binding￨e ,￨e this￨e )￨e ;￨e }￨j manageSyntheticReadAccessIfNecessary￨e (￨e currentScope￨e ,￨e flowInfo￨e )￨e ;￨e }￨j flowInfo￨e =￨e receiver￨e .￨e analyseCode￨e (￨e currentScope￨e ,￨e flowContext￨e ,￨e flowInfo￨e ,￨e (￨e !￨e (￨e binding￨e .￨e isStatic￨e (￨e )￨e )￨e )￨e )￨e .￨e unconditionalInits￨e (￨e )￨e ;￨e if￨j (￨j (￨c assignment￨c .￨c expression￨c )￨c !=￨c null￨c )￨j {￨j flowInfo￨e =￨e assignment￨e .￨e expression￨e .￨e analyseCode￨e (￨e currentScope￨e ,￨e flowContext￨e ,￨e flowInfo￨e )￨e .￨e unconditionalInits￨e (￨e )￨e ;￨e }￨j manageSyntheticWriteAccessIfNecessary￨e (￨e currentScope￨e ,￨e flowInfo￨e )￨e ;￨e if￨j (￨j binding￨c .￨c isFinal￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c (￨c (￨c (￨c binding￨c .￨c isBlankFinal￨c (￨c )￨c )￨c &&￨c (￨c !￨c isCompound￨c )￨c )￨c &&￨c (￨c receiver￨c .￨c isThis￨c (￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c (￨c receiver￨c )￨c instanceof￨c QualifiedThisReference￨c )￨c )￨c )￨c &&￨c (￨c (￨c (￨c receiver￨c .￨c bits￨c )￨c &￨c (￨c ASTNode￨c .￨c ParenthesizedMASK￨c )￨c )￨c ==￨c 0￨c )￨c )￨c &&￨c (￨c currentScope￨c .￨c allowBlankFinalFieldAssignment￨c (￨c binding￨c )￨c )￨c )￨j {￨j if￨j (￨j flowInfo￨c .￨c isPotentiallyAssigned￨c (￨c binding￨c )￨c )￨j {￨j currentScope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateInitializationOfBlankFinalField￨e (￨e binding￨e ,￨e this￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b flowContext￨b .￨b recordSettingFinal￨b (￨b binding￨b ,￨b this￨b )￨b ;￨b <END_BUG>￨b }￨j flowInfo￨e .￨e markAsDefinitelyAssigned￨e (￨e binding￨e )￨e ;￨e }￨j else￨j {￨j currentScope￨e .￨e problemReporter￨e (￨e )￨e .￨e cannotAssignToFinalField￨e (￨e binding￨e ,￨e this￨e )￨e ;￨e }￨j }￨j return￨e flowInfo￨e ;￨e }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f FieldBinding￨f fieldBinding￨f (￨f )￨f {￨f }￨f public￨f void￨f generateAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCompoundAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Expression￨p expression￨p ,￨p int￨p operator￨p ,￨p int￨p assignmentImplicitConversion￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generatePostIncrement￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p CompoundAssignment￨p postIncrement￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f static￨f final￨f Constant￨f getConstantFor￨f (￨f FieldBinding￨p binding￨p ,￨p Reference￨p reference￨p ,￨p boolean￨p isImplicit￨p ,￨p Scope￨p referenceScope￨p )￨f {￨f }￨f public￨f boolean￨f isSuperAccess￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isTypeAccess￨f (￨f )￨f {￨f }￨f public￨f void￨f manageSyntheticReadAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f manageSyntheticWriteAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f setActualReceiverType￨f (￨f ReferenceBinding￨p receiverType￨p )￨f {￨f }￨f public￨f void￨f setDepth￨f (￨f int￨p depth￨p )￨f {￨f }￨f public￨f void￨f setFieldIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d PossibleMatch￨d implements￨d ICompilationUnit￨d {￨d public￨e static￨e final￨e String￨e NO_SOURCE_FILE_NAME￨e =￨e "NO<seq2seq4repair_space>SOURCE<seq2seq4repair_space>FILE<seq2seq4repair_space>NAME"￨e ;￨e public￨e IResource￨e resource￨e ;￨e public￨e Openable￨e openable￨e ;￨e public￨e MatchingNodeSet￨e nodeSet￨e ;￨e public￨e char￨e [￨e ]￨e [￨e ]￨e compoundName￨e ;￨e CompilationUnitDeclaration￨e parsedUnit￨e ;￨e public￨e SearchDocument￨e document￨e ;￨e private￨e String￨e sourceFileName￨e ;￨e private￨e char￨e [￨e ]￨e source￨e ;￨e public￨f PossibleMatch￨f (￨f MatchLocator￨p locator￨p ,￨p IResource￨p resource￨p ,￨p Openable￨p openable￨p ,￨p SearchDocument￨p document￨p ,￨p boolean￨p mustResolve￨p )￨f {￨f }￨f public￨f void￨f cleanUp￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p obj￨p )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getContents￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getFileName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getMainTypeName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f [￨f ]￨f getPackageName￨f (￨f )￨f {￨f }￨f private￨f char￨f [￨f ]￨f getQualifiedName￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c openable￨c )￨c instanceof￨c CompilationUnit￨c )￨j {￨j <START_BUG>￨b String￨b fileName￨b =￨b this￨b .￨b resource￨b .￨b getFullPath￨b (￨b )￨b .￨b lastSegment￨b (￨b )￨b ;￨b <END_BUG>￨b char￨e [￨e ]￨e mainTypeName￨e =￨e Util￨e .￨e getNameWithoutJavaLikeExtension￨e (￨e fileName￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e CompilationUnit￨e cu￨e =￨e (￨e (￨e CompilationUnit￨e )￨e (￨e this￨e .￨e openable￨e )￨e )￨e ;￨e return￨e cu￨e .￨e getType￨e (￨e new￨e String￨e (￨e mainTypeName￨e )￨e )￨e .￨e getFullyQualifiedName￨e (￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c this￨c .￨c openable￨c )￨c instanceof￨c ClassFile￨c )￨j {￨j String￨e fileName￨e =￨e getSourceFileName￨e (￨e )￨e ;￨e if￨j (￨j fileName￨c ==￨c (￨c PossibleMatch￨c .￨c NO_SOURCE_FILE_NAME￨c )￨c )￨j {￨j return￨e (￨e (￨e ClassFile￨e )￨e (￨e this￨e .￨e openable￨e )￨e )￨e .￨e getType￨e (￨e )￨e .￨e getFullyQualifiedName￨e (￨e '.'￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e }￨j int￨e index￨e =￨e Util￨e .￨e indexOfJavaLikeExtension￨e (￨e fileName￨e )￨e ;￨e String￨e simpleName￨e =￨e (￨e index￨e ==￨e (￨e -￨e 1￨e )￨e )￨e ?￨e fileName￨e :￨e fileName￨e .￨e substring￨e (￨e 0￨e ,￨e index￨e )￨e ;￨e PackageFragment￨e pkg￨e =￨e (￨e (￨e PackageFragment￨e )￨e (￨e this￨e .￨e openable￨e .￨e getParent￨e (￨e )￨e )￨e )￨e ;￨e return￨e Util￨e .￨e concatWith￨e (￨e pkg￨e .￨e names￨e ,￨e simpleName￨e ,￨e '.'￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e }￨j return￨e null￨e ;￨e }￨f private￨f String￨f getSourceFileName￨f (￨f )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d WebRequestCycle￨d extends￨d RequestCycle￨d {￨d private￨d static￨d final￨d Log￨d log￨d =￨d LogFactory￨d .￨d getLog￨d (￨d WebRequestCycle￨d .￨d class￨d )￨d ;￨d public￨d WebRequestCycle￨d (￨d final￨d WebSession￨d session￨d ,￨d final￨d WebRequest￨d request￨d ,￨d final￨d Response￨d response￨d )￨d {￨d }￨d public￨f WebRequest￨f getWebRequest￨f (￨f )￨f {￨f }￨f public￨f WebResponse￨f getWebResponse￨f (￨f )￨f {￨f }￨f public￨f WebSession￨f getWebSession￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f redirectTo￨f (￨f final￨p Page￨p page￨p )￨f {￨f String￨e redirectUrl￨e =￨e null￨e ;￨e ApplicationSettings￨e settings￨e =￨e application￨e .￨e getSettings￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c settings￨c .￨c getRenderStrategy￨c (￨c )￨c )￨c ==￨c (￨c ApplicationSettings￨c .￨c REDIRECT_TO_BUFFER￨c )￨c )￨c &&￨c (￨c (￨c application￨c )￨c instanceof￨c WebApplication￨c )￨c )￨j {￨j final￨e Response￨e currentResponse￨e =￨e getResponse￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨f BufferedResponse￨f redirectResponse￨f =￨f new￨f BufferedResponse￨f (￨f )￨f {￨f public￨f String￨f encodeURL￨f (￨f String￨p url￨p )￨f {￨f return￨e currentResponse￨e .￨e encodeURL￨e (￨e url￨e )￨e ;￨e }￨f }￨f ;￨e redirectResponse￨e .￨e setCharacterEncoding￨e (￨e currentResponse￨e .￨e getCharacterEncoding￨e (￨e )￨e )￨e ;￨e setResponse￨e (￨e redirectResponse￨e )￨e ;￨e page￨e .￨e doRender￨e (￨e )￨e ;￨e setResponse￨e (￨e currentResponse￨e )￨e ;￨e final￨e String￨e responseRedirect￨e =￨e redirectResponse￨e .￨e getRedirectUrl￨e (￨e )￨e ;￨e if￨j (￨j responseRedirect￨c !=￨c null￨c )￨j {￨j redirectUrl￨e =￨e responseRedirect￨e ;￨e }￨j else￨j if￨j (￨j (￨c redirectResponse￨c .￨c getContentLength￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j redirectResponse￨e .￨e setCharacterEncoding￨e (￨e currentResponse￨e .￨e getCharacterEncoding￨e (￨e )￨e )￨e ;￨e redirectResponse￨e .￨e filter￨e (￨e )￨e ;￨e redirectResponse￨e .￨e close￨e (￨e )￨e ;￨e redirectUrl￨e =￨e page￨e .￨e urlFor￨e (￨e page￨e ,￨e IRedirectListener￨e .￨e class￨e )￨e ;￨e <START_BUG>￨b (￨b (￨b WebApplication￨b )￨b (￨b application￨b )￨b )￨b .￨b addRedirect￨b (￨b getWebRequest￨b (￨b )￨b .￨b getHttpServletRequest￨b (￨b )￨b ,￨b redirectUrl￨b ,￨b redirectResponse￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f catch￨f (￨f RuntimeException￨p ex￨p )￨f {￨f setResponse￨e (￨e currentResponse￨e )￨e ;￨e WebRequestCycle￨e .￨e log￨e .￨e error￨e (￨e ex￨e .￨e getMessage￨e (￨e )￨e ,￨e ex￨e )￨e ;￨e IRequestCycleProcessor￨e processor￨e =￨e getRequestCycleProcessor￨e (￨e )￨e ;￨e processor￨e .￨e respond￨e (￨e ex￨e ,￨e this￨e )￨e ;￨e return￨e ;￨e }￨f }￨j else￨j {￨j session￨e .￨e touch￨e (￨e page￨e )￨e ;￨e page￨e .￨e internalEndRequest￨e (￨e )￨e ;￨e }￨j if￨j (￨j redirectUrl￨c ==￨c null￨c )￨j {￨j redirectUrl￨e =￨e page￨e .￨e urlFor￨e (￨e page￨e ,￨e IRedirectListener￨e .￨e class￨e )￨e ;￨e }￨j response￨e .￨e redirect￨e (￨e redirectUrl￨e )￨e ;￨e }￨f protected￨f ClientInfo￨f newClientInfo￨f (￨f )￨f {￨f }￨f public￨f IRequestCycleProcessor￨f getRequestCycleProcessor￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DomainClientImpl￨d implements￨d DomainClient￨d {￨d private￨e volatile￨e DomainDeploymentManager￨e deploymentManager￨e ;￨e private￨e final￨e ModelControllerClient￨e delegate￨e ;￨e public￨f DomainClientImpl￨f (￨f InetAddress￨p address￨p ,￨p int￨p port￨p )￨f {￨f }￨f @￨f Override￨f public￨f OperationResult￨f execute￨f (￨f ModelNode￨p operation￨p ,￨p ResultHandler￨p handler￨p )￨f {￨f }￨f @￨f Override￨f public￨f ModelNode￨f execute￨f (￨f ModelNode￨f operation￨f )￨f throws￨f IOException￨f ,￨f CancellationException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f OperationResult￨f execute￨f (￨f Operation￨p operation￨p ,￨p ResultHandler￨p handler￨p )￨f {￨f }￨f @￨f Override￨f public￨f ModelNode￨f execute￨f (￨f Operation￨f operation￨f )￨f throws￨f IOException￨f ,￨f CancellationException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f byte￨f [￨f ]￨f addDeploymentContent￨f (￨f InputStream￨p stream￨p )￨f {￨f }￨f @￨f Override￨f public￨f DomainDeploymentManager￨f getDeploymentManager￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f List￨f <￨f String￨f >￨f getHostControllerNames￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Map￨f <￨f ServerIdentity￨f ,￨f ServerStatus￨f >￨f getServerStatuses￨f (￨f )￨f {￨f }￨f private￨f Set￨f <￨f String￨f >￨f getServerNames￨f (￨f String￨p host￨p )￨f {￨f ModelNode￨e op￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e op￨e .￨e get￨e (￨e "operation"￨e )￨e .￨e set￨e (￨e "read-children-names"￨e )￨e ;￨e op￨e .￨e get￨e (￨e "child-type"￨e )￨e .￨e set￨e (￨e "server-config"￨e )￨e ;￨e <START_BUG>￨b op￨b .￨b get￨b (￨b "address"￨b )￨b .￨b set￨b (￨b "host"￨b ,￨b host￨b )￨b ;￨b <END_BUG>￨b ModelNode￨e result￨e =￨e executeForResult￨e (￨e Factory￨e .￨e create￨e (￨e op￨e )￨e .￨e build￨e (￨e )￨e )￨e ;￨e Set￨e <￨e String￨e >￨e servers￨e =￨e new￨e HashSet￨e <￨e String￨e >￨e (￨e )￨e ;￨e for￨l (￨l ModelNode￨c server￨c :￨c result￨c .￨c asList￨c (￨c )￨c )￨l {￨l servers￨e .￨e add￨e (￨e server￨e .￨e asString￨e (￨e )￨e )￨e ;￨e }￨l return￨e servers￨e ;￨e }￨f private￨f ModelNode￨f readAttribute￨f (￨f String￨p name￨p ,￨p ModelNode￨p address￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServerStatus￨f startServer￨f (￨f String￨p hostControllerName￨p ,￨p String￨p serverName￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServerStatus￨f stopServer￨f (￨f String￨p hostControllerName￨p ,￨p String￨p serverName￨p ,￨p long￨p gracefulShutdownTimeout￨p ,￨p TimeUnit￨p timeUnit￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServerStatus￨f restartServer￨f (￨f String￨p hostControllerName￨p ,￨p String￨p serverName￨p ,￨p long￨p gracefulShutdownTimeout￨p ,￨p TimeUnit￨p timeUnit￨p )￨f {￨f }￨f boolean￨f isDeploymentNameUnique￨f (￨f final￨p String￨p deploymentName￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f ModelNode￨f executeForResult￨f (￨f Operation￨p op￨p )￨f {￨f }￨f }￨d
public￨d class￨d RarConfigProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨e static￨e ModuleIdentifier￨e JAVAX_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "javax.resource.api"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e LOGGING_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.logging"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e IRON_JACAMAR_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.ironjacamar.api"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e IRON_JACAMAR_IMPL_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.ironjacamar.impl"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e NAMING_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.as.naming"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e VALIDATION_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "javax.validation.api"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e HIBERNATE_VALIDATOR_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.hibernate.validator"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e COMMON_CORE_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.common-core"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e SYSTEM_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "javax.api"￨e )￨e ;￨e public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f if￨j (￨j (￨c phaseContext￨c .￨c getDeploymentUnit￨c (￨c )￨c .￨c getAttachment￨c (￨c ATTACHMENT_KEY￨c )￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e <START_BUG>￨b final￨b ModuleLoader￨b moduleLoader￨b =￨b Module￨b .￨b getSystemModuleLoader￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e ModuleSpecification￨e moduleSpecification￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e MODULE_SPECIFICATION￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e JAVAX_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e LOGGING_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e IRON_JACAMAR_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e IRON_JACAMAR_IMPL_ID￨e ,￨e false￨e ,￨e true￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e SYSTEM_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e NAMING_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e VALIDATION_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e HIBERNATE_VALIDATOR_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e moduleSpecification￨e .￨e addDependency￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e moduleLoader￨e ,￨e RarConfigProcessor￨e .￨e COMMON_CORE_ID￨e ,￨e false￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e }￨f public￨f void￨f undeploy￨f (￨f final￨p DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d ReturnStatement￨d extends￨d Statement￨d {￨d public￨e Expression￨e expression￨e ;￨e public￨e boolean￨e isSynchronized￨e ;￨e public￨e SubRoutineStatement￨e [￨e ]￨e subroutines￨e ;￨e public￨e boolean￨e isAnySubRoutineEscaping￨e =￨e false￨e ;￨e public￨e LocalVariableBinding￨e saveValueVariable￨e ;￨e public￨f ReturnStatement￨f (￨f Expression￨p expr￨p ,￨p int￨p s￨p ,￨p int￨p e￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f generateReturnBytecode￨f (￨f CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f generateStoreSaveValueIfNecessary￨f (￨f CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f boolean￨f needValue￨f (￨f )￨f {￨f }￨f public￨f void￨f prepareSaveValueLocation￨f (￨f TryStatement￨p targetTryStatement￨p )￨f {￨f }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f MethodScope￨e methodScope￨e =￨e scope￨e .￨e methodScope￨e (￨e )￨e ;￨e MethodBinding￨e methodBinding￨e ;￨e TypeBinding￨e methodType￨e =￨e (￨e (￨e methodScope￨e .￨e referenceContext￨e )￨e instanceof￨e AbstractMethodDeclaration￨e )￨e ?￨e (￨e methodBinding￨e =￨e (￨e (￨e AbstractMethodDeclaration￨e )￨e (￨e methodScope￨e .￨e referenceContext￨e )￨e )￨e .￨e binding￨e )￨e ==￨e null￨e ?￨e null￨e :￨e methodBinding￨e .￨e returnType￨e :￨e VoidBinding￨e ;￨e TypeBinding￨e expressionType￨e ;￨e if￨j (￨j methodType￨c ==￨c (￨c VoidBinding￨c )￨c )￨j {￨j if￨j (￨j (￨c expression￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c expressionType￨c =￨c expression￨c .￨c resolveType￨c (￨c scope￨c )￨c )￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e attemptToReturnNonVoidExpression￨e (￨e this￨e ,￨e expressionType￨e )￨e ;￨e }￨j return￨e ;￨e }￨j if￨j (￨j (￨c expression￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j methodType￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e shouldReturn￨e (￨e methodType￨e ,￨e this￨e )￨e ;￨e }￨j return￨e ;￨e }￨j expression￨e .￨e setExpectedType￨e (￨e methodType￨e )￨e ;￨e if￨j (￨j (￨c expressionType￨c =￨c expression￨c .￨c resolveType￨c (￨c scope￨c )￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j expressionType￨c ==￨c (￨c VoidBinding￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e attemptToReturnVoidValue￨e (￨e this￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j methodType￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b expressionType￨b .￨b isRawType￨b (￨b )￨b )￨b &&￨b (￨b (￨b methodType￨b .￨b isBoundParameterizedType￨b (￨b )￨b )￨b ||￨b (￨b methodType￨b .￨b isGenericType￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e unsafeRawConversion￨e (￨e this￨e .￨e expression￨e ,￨e expressionType￨e ,￨e methodType￨e )￨e ;￨e if￨j (￨j expression￨c .￨c isConstantValueOfTypeAssignableToType￨c (￨c expressionType￨c ,￨c methodType￨c )￨c )￨j {￨j expression￨e .￨e computeConversion￨e (￨e scope￨e ,￨e methodType￨e ,￨e expressionType￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j expressionType￨c .￨c isCompatibleWith￨c (￨c methodType￨c )￨c )￨j {￨j expression￨e .￨e computeConversion￨e (￨e scope￨e ,￨e methodType￨e ,￨e expressionType￨e )￨e ;￨e return￨e ;￨e }￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e typeMismatchError￨e (￨e expressionType￨e ,￨e methodType￨e ,￨e expression￨e )￨e ;￨e }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d PanelTest￨d extends￨d WicketTestCase￨d {￨d public￨f PanelTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f testRenderHomePage_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f boolean￨e hit￨e =￨e false￨e ;￨e try￨f (￨f )￨f {￨f executeTest￨e (￨e PanelPage_1￨e .￨e class￨e ,￨e "Dummy.html"￨e )￨e ;￨e }￨f catch￨f (￨f MarkupException￨p mex￨p )￨f {￨f hit￨e =￨e true￨e ;￨e assertNotNull￨e (￨e mex￨e .￨e getMarkupStream￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b assertTrue￨b (￨b mex￨b .￨b getMessage￨b (￨b )￨b .￨b contains￨b (￨b "does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag"￨b )￨b )￨b ;￨b <END_BUG>￨b assertTrue￨e (￨e mex￨e .￨e getMessage￨e (￨e )￨e .￨e contains￨e (￨e "SimplePanel_1.html"￨e )￨e )￨e ;￨e }￨f assertTrue￨e (￨e "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨e ,￨e hit￨e )￨e ;￨e }￨f public￨f void￨f testRenderHomePage_2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanel3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanel4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_5￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_6￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanelWithAttributeModifier￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_7￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_8￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testStartPanel￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SegmentTest￨d {￨d @￨f Test￨f public￨f void￨f testDistance￨f (￨f )￨f {￨f Vector2D￨e start￨e =￨e new￨e Vector2D￨e (￨e 2￨e ,￨e 2￨e )￨e ;￨e Vector2D￨e end￨e =￨e new￨e Vector2D￨e (￨e (￨e -￨e 2￨e )￨e ,￨e (￨e -￨e 2￨e )￨e )￨e ;￨e <START_BUG>￨b Segment￨b segment￨b =￨b new￨b Segment￨b (￨b start￨b ,￨b end￨b ,￨b new￨b Line￨b (￨b start￨b ,￨b end￨b )￨b )￨b ;￨b <END_BUG>￨b Assert￨e .￨e assertEquals￨e (￨e FastMath￨e .￨e sqrt￨e (￨e 2￨e )￨e ,￨e segment￨e .￨e distance￨e (￨e new￨e Vector2D￨e (￨e 1￨e ,￨e (￨e -￨e 1￨e )￨e )￨e )￨e ,￨e 1.0E-10￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e FastMath￨e .￨e sin￨e (￨e (￨e (￨e Math￨e .￨e PI￨e )￨e /￨e 4.0￨e )￨e )￨e ,￨e segment￨e .￨e distance￨e (￨e new￨e Vector2D￨e (￨e 0￨e ,￨e (￨e -￨e 1￨e )￨e )￨e )￨e ,￨e 1.0E-10￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e FastMath￨e .￨e sqrt￨e (￨e 8￨e )￨e ,￨e segment￨e .￨e distance￨e (￨e new￨e Vector2D￨e (￨e 0￨e ,￨e 4￨e )￨e )￨e ,￨e 1.0E-10￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e FastMath￨e .￨e sqrt￨e (￨e 8￨e )￨e ,￨e segment￨e .￨e distance￨e (￨e new￨e Vector2D￨e (￨e 0￨e ,￨e (￨e -￨e 4￨e )￨e )￨e )￨e ,￨e 1.0E-10￨e )￨e ;￨e }￨f }￨d
public￨d class￨d Wizard￨d extends￨d Panel￨d implements￨d IWizard￨d ,￨d IWizardModelListener￨d {￨d public￨e static￨e final￨e String￨e BUTTONS_ID￨e =￨e "buttons"￨e ;￨e public￨e static￨e final￨e String￨e FEEDBACK_ID￨e =￨e "feedback"￨e ;￨e public￨e static￨e final￨e String￨e HEADER_ID￨e =￨e "header"￨e ;￨e public￨e static￨e final￨e String￨e OVERVIEW_ID￨e =￨e "overview"￨e ;￨e public￨e static￨e final￨e String￨e FORM_ID￨e =￨e "form"￨e ;￨e public￨e static￨e final￨e String￨e VIEW_ID￨e =￨e "view"￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e IWizardStep￨e activeStep￨e ;￨e private￨e Form￨e form￨e ;￨e private￨e IWizardModel￨e wizardModel￨e ;￨e public￨f Wizard￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f Wizard￨f (￨f String￨p id￨p ,￨p boolean￨p addDefaultCssStyle￨p )￨f {￨f }￨f public￨f Wizard￨f (￨f String￨p id￨p ,￨p IWizardModel￨p wizardModel￨p )￨f {￨f }￨f public￨f Wizard￨f (￨f String￨p id￨p ,￨p IWizardModel￨p wizardModel￨p ,￨p boolean￨p addDefaultCssStyle￨p )￨f {￨f }￨f public￨f final￨f void￨f addDefaultCssStyle￨f (￨f )￨f {￨f }￨f public￨f final￨f IWizardStep￨f getActiveStep￨f (￨f )￨f {￨f }￨f public￨f Form￨f getForm￨f (￨f )￨f {￨f }￨f public￨f final￨f IWizardModel￨f getWizardModel￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVersioned￨f (￨f )￨f {￨f }￨f public￨f void￨f onActiveStepChanged￨f (￨f IWizardStep￨p newStep￨p )￨f {￨f }￨f public￨f void￨f onCancel￨f (￨f )￨f {￨f }￨f public￨f void￨f onFinish￨f (￨f )￨f {￨f }￨f protected￨f void￨f init￨f (￨f IWizardModel￨p wizardModel￨p )￨f {￨f }￨f protected￨f Component￨f newButtonBar￨f (￨f String￨p id￨p )￨f {￨f }￨f protected￨f FeedbackPanel￨f newFeedbackPanel￨f (￨f String￨p id￨p )￨f {￨f }￨f protected￨f Form￨f newForm￨f (￨f String￨p id￨p )￨f {￨f }￨f protected￨f void￨f onBeforeRender￨f (￨f )￨f {￨f super￨e .￨e onBeforeRender￨e (￨e )￨e ;￨e <START_BUG>￨b Component￨b buttonBar￨b =￨b get￨b (￨b Wizard￨b .￨b BUTTONS_ID￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j buttonBar￨c instanceof￨c IDefaultButtonProvider￨c )￨j {￨j IFormSubmittingComponent￨e defaultButton￨e =￨e (￨e (￨e IDefaultButtonProvider￨e )￨e (￨e buttonBar￨e )￨e )￨e .￨e getDefaultButton￨e (￨e wizardModel￨e )￨e ;￨e form￨e .￨e setDefaultButton￨e (￨e defaultButton￨e )￨e ;￨e }￨j }￨f protected￨f Component￨f newOverviewBar￨f (￨f String￨p id￨p )￨f {￨f }￨f }￨d
public￨d class￨d WorkingSetManager￨d implements￨d IWorkingSetManager￨d {￨d private￨e static￨e final￨e String￨e WORKING_SET_STATE_FILENAME￨e =￨e "workingsets.xml"￨e ;￨e private￨e static￨e final￨e int￨e MRU_SIZE￨e =￨e 5￨e ;￨e private￨e SortedSet￨e workingSets￨e =￨e new￨e TreeSet￨e (￨e new￨e WorkingSetComparator￨e (￨e )￨e )￨e ;￨e private￨e List￨e recentWorkingSets￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e private￨e ListenerList￨e propertyChangeListeners￨e =￨e new￨e ListenerList￨e (￨e )￨e ;￨e public￨f void￨f addRecentWorkingSet￨f (￨f IWorkingSet￨p workingSet￨p )￨f {￨f }￨f public￨f void￨f addWorkingSet￨f (￨f IWorkingSet￨p workingSet￨p )￨f {￨f }￨f public￨f void￨f addPropertyChangeListener￨f (￨f IPropertyChangeListener￨p listener￨p )￨f {￨f }￨f public￨f IWorkingSet￨f createWorkingSet￨f (￨f String￨p name￨p ,￨p IAdaptable￨p [￨p ]￨p elements￨p )￨f {￨f }￨f public￨f IWorkingSetEditWizard￨f createWorkingSetEditWizard￨f (￨f IWorkingSet￨p workingSet￨p )￨f {￨f }￨f public￨f IWorkingSetSelectionDialog￨f createWorkingSetSelectionDialog￨f (￨f Shell￨p parent￨p )￨f {￨f }￨f public￨f IWorkingSetSelectionDialog￨f createWorkingSetSelectionDialog￨f (￨f Shell￨p parent￨p ,￨p boolean￨p multi￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p object￨p )￨f {￨f }￨f private￨f void￨f firePropertyChange￨f (￨f String￨p changeId￨p ,￨p Object￨p oldValue￨p ,￨p Object￨p newValue￨p )￨f {￨f }￨f public￨f IWorkingSet￨f [￨f ]￨f getRecentWorkingSets￨f (￨f )￨f {￨f }￨f public￨f IWorkingSet￨f getWorkingSet￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f IWorkingSet￨f [￨f ]￨f getWorkingSets￨f (￨f )￨f {￨f }￨f private￨f File￨f getWorkingSetStateFile￨f (￨f )￨f {￨f }￨f public￨f void￨f removePropertyChangeListener￨f (￨f IPropertyChangeListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeWorkingSet￨f (￨f IWorkingSet￨p workingSet￨p )￨f {￨f }￨f private￨f void￨f restoreMruList￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f public￨f void￨f restoreState￨f (￨f )￨f {￨f File￨e stateFile￨e =￨e getWorkingSetStateFile￨e (￨e )￨e ;￨e if￨j (￨j stateFile￨c .￨c exists￨c (￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f FileInputStream￨e input￨e =￨e new￨e FileInputStream￨e (￨e stateFile￨e )￨e ;￨e <START_BUG>￨b InputStreamReader￨b reader￨b =￨b new￨b InputStreamReader￨b (￨b input￨b ,￨b "utf-8"￨b )￨b ;￨b <END_BUG>￨b IMemento￨e memento￨e =￨e XMLMemento￨e .￨e createReadRoot￨e (￨e reader￨e )￨e ;￨e restoreWorkingSetState￨e (￨e memento￨e )￨e ;￨e restoreMruList￨e (￨e memento￨e )￨e ;￨e reader￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f MessageDialog￨e .￨e openError￨e (￨e (￨e (￨e Shell￨e )￨e (￨e null￨e )￨e )￨e ,￨e WorkbenchMessages￨e .￨e getString￨e (￨e "ProblemRestoringWorkingSetState.title"￨e )￨e ,￨e WorkbenchMessages￨e .￨e getString￨e (￨e "ProblemRestoringWorkingSetState.message"￨e )￨e )￨e ;￨e }￨f catch￨f (￨f WorkbenchException￨p e￨p )￨f {￨f ErrorDialog￨e .￨e openError￨e (￨e (￨e (￨e Shell￨e )￨e (￨e null￨e )￨e )￨e ,￨e WorkbenchMessages￨e .￨e getString￨e (￨e "ProblemRestoringWorkingSetState.title"￨e )￨e ,￨e WorkbenchMessages￨e .￨e getString￨e (￨e "ProblemRestoringWorkingSetState.message"￨e )￨e ,￨e e￨e .￨e getStatus￨e (￨e )￨e )￨e ;￨e }￨f }￨j }￨f private￨f IWorkingSet￨f restoreWorkingSet￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f private￨f void￨f restoreWorkingSetState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f private￨f void￨f saveState￨f (￨f )￨f {￨f }￨f private￨f void￨f saveMruList￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f private￨f void￨f saveWorkingSetState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f public￨f void￨f workingSetChanged￨f (￨f IWorkingSet￨p changedWorkingSet￨p ,￨p String￨p propertyChangeId￨p )￨f {￨f }￨f }￨d
public￨d class￨d Text￨d extends￨d Scrollable￨d {￨d int￨e txnObject￨e ;￨e int￨e txnFrameID￨e ;￨e int￨e textLimit￨e =￨e Text￨e .￨e LIMIT￨e ;￨e int￨e tabs￨e =￨e 8￨e ;￨e char￨e echoCharacter￨e ;￨e boolean￨e doubleClick￨e ;￨e String￨e hiddenText￨e ;￨e ControlEditTextSelectionRec￨e selection￨e ;￨e public￨e static￨e final￨e int￨e LIMIT￨e ;￨e public￨e static￨e final￨e String￨e DELIMITER￨e ;￨e static￨e final￨e char￨e PASSWORD￨e =￨e '¥'￨e ;￨e public￨f Text￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f void￨f addModifyListener￨f (￨f ModifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addVerifyListener￨f (￨f VerifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f append￨f (￨f String￨p string￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f int￨f callFocusEventHandler￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f public￨f void￨f clearSelection￨f (￨f )￨f {￨f }￨f public￨f Point￨f computeSize￨f (￨f int￨p wHint￨p ,￨p int￨p hHint￨p ,￨p boolean￨p changed￨p )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f public￨f void￨f copy￨f (￨f )￨f {￨f }￨f void￨f copy￨f (￨f char￨p [￨p ]￨p buffer￨p )￨f {￨f }￨f void￨f createHandle￨f (￨f )￨f {￨f }￨f ScrollBar￨f createScrollBar￨f (￨f int￨p style￨p )￨f {￨f }￨f void￨f createWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f cut￨f (￨f )￨f {￨f }￨f Color￨f defaultBackground￨f (￨f )￨f {￨f }￨f Color￨f defaultForeground￨f (￨f )￨f {￨f }￨f void￨f drawBackground￨f (￨f int￨p control￨p ,￨p int￨p context￨p )￨f {￨f if￨j (￨j !￨c (￨c OS￨c .￨c HIVIEW￨c )￨c )￨j {￨j <START_BUG>￨b drawFocus￨b (￨b control￨b ,￨b context￨b ,￨b (￨b (￨b hasFocus￨b (￨b )￨b )￨b &&￨b (￨b drawFocusRing￨b (￨b )￨b )￨b )￨b ,￨b hasBorder￨b (￨b )￨b ,￨b getParentBackground￨b (￨b )￨b ,￨b inset￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f void￨f drawWidget￨f (￨f int￨p control￨p ,￨p int￨p context￨p ,￨p int￨p damageRgn￨p ,￨p int￨p visibleRgn￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f public￨f int￨f getCaretLineNumber￨f (￨f )￨f {￨f }￨f public￨f Point￨f getCaretLocation￨f (￨f )￨f {￨f }￨f public￨f int￨f getCaretPosition￨f (￨f )￨f {￨f }￨f public￨f int￨f getCharCount￨f (￨f )￨f {￨f }￨f String￨f getClipboardText￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getDoubleClickEnabled￨f (￨f )￨f {￨f }￨f public￨f char￨f getEchoChar￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getEditable￨f (￨f )￨f {￨f }￨f Rect￨f getInset￨f (￨f )￨f {￨f }￨f public￨f int￨f getLineCount￨f (￨f )￨f {￨f }￨f public￨f String￨f getLineDelimiter￨f (￨f )￨f {￨f }￨f public￨f int￨f getLineHeight￨f (￨f )￨f {￨f }￨f public￨f int￨f getOrientation￨f (￨f )￨f {￨f }￨f public￨f Point￨f getSelection￨f (￨f )￨f {￨f }￨f public￨f int￨f getSelectionCount￨f (￨f )￨f {￨f }￨f public￨f String￨f getSelectionText￨f (￨f )￨f {￨f }￨f public￨f int￨f getTabs￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f char￨f [￨f ]￨f getEditText￨f (￨f int￨p start￨p ,￨p int￨p end￨p ,￨p boolean￨p hidden￨p )￨f {￨f }￨f public￨f int￨f getTextLimit￨f (￨f )￨f {￨f }￨f public￨f int￨f getTopIndex￨f (￨f )￨f {￨f }￨f public￨f int￨f getTopPixel￨f (￨f )￨f {￨f }￨f String￨f getTXNText￨f (￨f int￨p iStartOffset￨p ,￨p int￨p iEndOffset￨p )￨f {￨f }￨f Rect￨f inset￨f (￨f )￨f {￨f }￨f public￨f void￨f insert￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f insertEditText￨f (￨f String￨p string￨p )￨f {￨f }￨f int￨f kEventControlActivate￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlBoundsChanged￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlClick￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlDeactivate￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlGetFocusPart￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventMouseDown￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlSetCursor￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventControlSetFocusPart￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f int￨f kEventUnicodeKeyPressed￨f (￨f int￨p nextHandler￨p ,￨p int￨p theEvent￨p ,￨p int￨p userData￨p )￨f {￨f }￨f org￨f .￨f eclipse￨f .￨f swt￨f .￨f internal￨f .￨f carbon￨f .￨f Point￨f measureSpace￨f (￨f )￨f {￨f }￨f public￨f void￨f paste￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f removeModifyListener￨f (￨f ModifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeVerifyListener￨f (￨f VerifyListener￨p listener￨p )￨f {￨f }￨f void￨f resetVisibleRegion￨f (￨f int￨p control￨p )￨f {￨f }￨f public￨f void￨f selectAll￨f (￨f )￨f {￨f }￨f boolean￨f sendKeyEvent￨f (￨f int￨p type￨p ,￨p Event￨p event￨p )￨f {￨f }￨f void￨f setBackground￨f (￨f float￨p [￨p ]￨p color￨p )￨f {￨f }￨f int￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p resize￨p ,￨p boolean￨p events￨p )￨f {￨f }￨f public￨f void￨f setDoubleClickEnabled￨f (￨f boolean￨p doubleClick￨p )￨f {￨f }￨f public￨f void￨f setEchoChar￨f (￨f char￨p echo￨p )￨f {￨f }￨f public￨f void￨f setEditable￨f (￨f boolean￨p editable￨p )￨f {￨f }￨f void￨f setForeground￨f (￨f float￨p [￨p ]￨p color￨p )￨f {￨f }￨f void￨f setFontStyle￨f (￨f Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setOrientation￨f (￨f int￨p orientation￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p start￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f Point￨p selection￨p )￨f {￨f }￨f public￨f void￨f setTabs￨f (￨f int￨p tabs￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f setEditText￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f setTXNBounds￨f (￨f )￨f {￨f }￨f void￨f setTXNText￨f (￨f int￨p iStartOffset￨p ,￨p int￨p iEndOffset￨p ,￨p String￨p string￨p )￨f {￨f }￨f public￨f void￨f setTextLimit￨f (￨f int￨p limit￨p )￨f {￨f }￨f public￨f void￨f setTopIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f showSelection￨f (￨f )￨f {￨f }￨f int￨f traversalCode￨f (￨f int￨p key￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f String￨f verifyText￨f (￨f String￨p string￨p ,￨p int￨p start￨p ,￨p int￨p end￨p ,￨p Event￨p keyEvent￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d Program￨d {￨d String￨e name￨e ;￨e String￨e command￨e ;￨e String￨e iconName￨e ;￨e Program￨f (￨f )￨f {￨f }￨f public￨f static￨f Program￨f findProgram￨f (￨f String￨p extension￨p )￨f {￨f }￨f public￨f static￨f String￨f [￨f ]￨f getExtensions￨f (￨f )￨f {￨f }￨f static￨f String￨f getKeyValue￨f (￨f String￨p string￨p ,￨p boolean￨p expand￨p )￨f {￨f }￨f static￨f Program￨f getProgram￨f (￨f String￨p key￨p )￨f {￨f String￨e name￨e =￨e Program￨e .￨e getKeyValue￨e (￨e key￨e ,￨e false￨e )￨e ;￨e if￨j (￨j (￨c name￨c ==￨c null￨c )￨c ||￨c (￨c (￨c name￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j name￨e =￨e key￨e ;￨e }￨j String￨e DEFAULT_COMMAND￨e =￨e "\\shell"￨e ;￨e String￨e defaultCommand￨e =￨e Program￨e .￨e getKeyValue￨e (￨e (￨e key￨e +￨e DEFAULT_COMMAND￨e )￨e ,￨e true￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b defaultCommand￨b ==￨b null￨b )￨b <END_BUG>￨b defaultCommand￨e =￨e "open"￨e ;￨e String￨e COMMAND￨e =￨e (￨e "\\shell\\"￨e +￨e defaultCommand￨e )￨e +￨e "\\command"￨e ;￨e String￨e command￨e =￨e Program￨e .￨e getKeyValue￨e (￨e (￨e key￨e +￨e COMMAND￨e )￨e ,￨e true￨e )￨e ;￨e if￨j (￨j (￨c command￨c ==￨c null￨c )￨c ||￨c (￨c (￨c command￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j String￨e DEFAULT_ICON￨e =￨e "\\DefaultIcon"￨e ;￨e String￨e iconName￨e =￨e Program￨e .￨e getKeyValue￨e (￨e (￨e key￨e +￨e DEFAULT_ICON￨e )￨e ,￨e true￨e )￨e ;￨e if￨j (￨j (￨c iconName￨c ==￨c null￨c )￨c ||￨c (￨c (￨c iconName￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j Program￨e program￨e =￨e new￨e Program￨e (￨e )￨e ;￨e program￨e .￨e name￨e =￨e name￨e ;￨e program￨e .￨e command￨e =￨e command￨e ;￨e program￨e .￨e iconName￨e =￨e iconName￨e ;￨e return￨e program￨e ;￨e }￨f public￨f static￨f Program￨f [￨f ]￨f getPrograms￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f launch￨f (￨f String￨p fileName￨p )￨f {￨f }￨f public￨f boolean￨f execute￨f (￨f String￨p fileName￨p )￨f {￨f }￨f public￨f ImageData￨f getImageData￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ShowViewDialog￨d extends￨d Dialog￨d implements￨d IDoubleClickListener￨d ,￨d ISelectionChangedListener￨d {￨d private￨e static￨e final￨e String￨e DIALOG_SETTING_SECTION_NAME￨e =￨e "ShowViewDialog"￨e ;￨e private￨e static￨e final￨e int￨e LIST_HEIGHT￨e =￨e 300￨e ;￨e private￨e static￨e final￨e int￨e LIST_WIDTH￨e =￨e 250￨e ;￨e private￨e static￨e final￨e String￨e STORE_EXPANDED_CATEGORIES_ID￨e =￨e (￨e ShowViewDialog￨e .￨e DIALOG_SETTING_SECTION_NAME￨e )￨e +￨e ".STORE_EXPANDED_CATEGORIES_ID"￨e ;￨e private￨e static￨e final￨e String￨e STORE_SELECTED_VIEW_ID￨e =￨e (￨e ShowViewDialog￨e .￨e DIALOG_SETTING_SECTION_NAME￨e )￨e +￨e ".STORE_SELECTED_VIEW_ID"￨e ;￨e private￨e FilteredTree￨e filteredTree￨e ;￨e private￨e Button￨e okButton￨e ;￨e private￨e IViewDescriptor￨e [￨e ]￨e viewDescs￨e =￨e new￨e IViewDescriptor￨e [￨e 0￨e ]￨e ;￨e private￨e IViewRegistry￨e viewReg￨e ;￨e private￨e IWorkbenchWindow￨e window￨e ;￨e private￨e Color￨e dimmedForeground￨e ;￨e public￨f ShowViewDialog￨f (￨f IWorkbenchWindow￨p window￨p ,￨p IViewRegistry￨p viewReg￨p )￨f {￨f }￨f protected￨f void￨f buttonPressed￨f (￨f int￨p buttonId￨p )￨f {￨f }￨f protected￨f void￨f cancelPressed￨f (￨f )￨f {￨f }￨f protected￨f void￨f configureShell￨f (￨f Shell￨p shell￨p )￨f {￨f }￨f protected￨f void￨f createButtonsForButtonBar￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f Control￨f createDialogArea￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f private￨f static￨f RGB￨f blend￨f (￨f RGB￨p c1￨p ,￨p RGB￨p c2￨p ,￨p int￨p ratio￨p )￨f {￨f }￨f private￨f static￨f int￨f blend￨f (￨f int￨p v1￨p ,￨p int￨p v2￨p ,￨p int￨p ratio￨p )￨f {￨f }￨f private￨f void￨f createFilteredTreeViewer￨f (￨f Composite￨p parent￨p )￨f {￨f PatternFilter￨e filter￨e =￨e new￨e ViewPatternFilter￨e (￨e )￨e ;￨e int￨e styleBits￨e =￨e (￨e (￨e (￨e SWT￨e .￨e MULTI￨e )￨e |￨e (￨e SWT￨e .￨e H_SCROLL￨e )￨e )￨e |￨e (￨e SWT￨e .￨e V_SCROLL￨e )￨e )￨e |￨e (￨e SWT￨e .￨e BORDER￨e )￨e ;￨e filteredTree￨e =￨e new￨e FilteredTree￨e (￨e parent￨e ,￨e styleBits￨e ,￨e filter￨e )￨e ;￨e filteredTree￨e .￨e setBackground￨e (￨e parent￨e .￨e getDisplay￨e (￨e )￨e .￨e getSystemColor￨e (￨e COLOR_WIDGET_BACKGROUND￨e )￨e )￨e ;￨e TreeViewer￨e treeViewer￨e =￨e filteredTree￨e .￨e getViewer￨e (￨e )￨e ;￨e Control￨e treeControl￨e =￨e treeViewer￨e .￨e getControl￨e (￨e )￨e ;￨e RGB￨e dimmedRGB￨e =￨e ShowViewDialog￨e .￨e blend￨e (￨e treeControl￨e .￨e getForeground￨e (￨e )￨e .￨e getRGB￨e (￨e )￨e ,￨e treeControl￨e .￨e getBackground￨e (￨e )￨e .￨e getRGB￨e (￨e )￨e ,￨e 60￨e )￨e ;￨e dimmedForeground￨e =￨e new￨e Color￨e (￨e treeControl￨e .￨e getDisplay￨e (￨e )￨e ,￨e dimmedRGB￨e )￨e ;￨e treeControl￨f .￨f addDisposeListener￨f (￨f new￨f DisposeListener￨f (￨f )￨f {￨f public￨f void￨f widgetDisposed￨f (￨f DisposeEvent￨p e￨p )￨f {￨f dimmedForeground￨e .￨e dispose￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e treeViewer￨e .￨e setLabelProvider￨e (￨e new￨e ViewLabelProvider￨e (￨e window￨e ,￨e dimmedForeground￨e )￨e )￨e ;￨e treeViewer￨e .￨e setContentProvider￨e (￨e new￨e ViewContentProvider￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b treeViewer￨b .￨b setSorter￨b (￨b new￨b ViewSorter￨b (￨b (￨b (￨b ViewRegistry￨b )￨b (￨b viewReg￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b treeViewer￨e .￨e setInput￨e (￨e viewReg￨e )￨e ;￨e treeViewer￨e .￨e addSelectionChangedListener￨e (￨e this￨e )￨e ;￨e treeViewer￨e .￨e addDoubleClickListener￨e (￨e this￨e )￨e ;￨e treeViewer￨e .￨e addFilter￨e (￨e new￨e CapabilityFilter￨e (￨e )￨e )￨e ;￨e if￨j (￨j hasAtMostOneView￨c (￨c filteredTree￨c .￨c getViewer￨c (￨c )￨c )￨c )￨j {￨j Text￨e filterText￨e =￨e filteredTree￨e .￨e getFilterControl￨e (￨e )￨e ;￨e if￨j (￨j filterText￨c !=￨c null￨c )￨j {￨j filterText￨e .￨e setEnabled￨e (￨e false￨e )￨e ;￨e }￨j }￨j applyDialogFont￨e (￨e filteredTree￨e )￨e ;￨e }￨f private￨f boolean￨f hasAtMostOneView￨f (￨f TreeViewer￨p tree￨p )￨f {￨f }￨f public￨f void￨f doubleClick￨f (￨f DoubleClickEvent￨p event￨p )￨f {￨f }￨f protected￨f IDialogSettings￨f getDialogSettings￨f (￨f )￨f {￨f }￨f public￨f IViewDescriptor￨f [￨f ]￨f getSelection￨f (￨f )￨f {￨f }￨f private￨f void￨f layoutTopControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f protected￨f void￨f restoreWidgetValues￨f (￨f )￨f {￨f }￨f protected￨f void￨f saveWidgetValues￨f (￨f )￨f {￨f }￨f public￨f void￨f selectionChanged￨f (￨f SelectionChangedEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f updateButtons￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateSelection￨f (￨f SelectionChangedEvent￨p event￨p )￨f {￨f }￨f }￨d
public￨d class￨d FieldReference￨d extends￨d Reference￨d implements￨d InvocationSite￨d {￨d public￨e Expression￨e receiver￨e ;￨e public￨e char￨e [￨e ]￨e token￨e ;￨e public￨e FieldBinding￨e binding￨e ;￨e public￨e FieldBinding￨e codegenBinding￨e ;￨e public￨e long￨e nameSourcePosition￨e ;￨e MethodBinding￨e syntheticReadAccessor￨e ;￨e MethodBinding￨e syntheticWriteAccessor￨e ;￨e public￨e TypeBinding￨e receiverType￨e ;￨e public￨f FieldReference￨f (￨f char￨p [￨p ]￨p source￨p ,￨p long￨p pos￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p isCompound￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f FieldBinding￨f fieldBinding￨f (￨f )￨f {￨f }￨f public￨f void￨f generateAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCompoundAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Expression￨p expression￨p ,￨p int￨p operator￨p ,￨p int￨p assignmentImplicitConversion￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generatePostIncrement￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p CompoundAssignment￨p postIncrement￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f static￨f final￨f Constant￨f getConstantFor￨f (￨f FieldBinding￨p binding￨p ,￨p Reference￨p reference￨p ,￨p boolean￨p isImplicit￨p ,￨p Scope￨p referenceScope￨p )￨f {￨f }￨f public￨f boolean￨f isSuperAccess￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isTypeAccess￨f (￨f )￨f {￨f }￨f public￨f void￨f manageSyntheticReadAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f manageSyntheticWriteAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f this￨e .￨e receiverType￨e =￨e receiver￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c receiverType￨c )￨c ==￨c null￨c )￨j {￨j constant￨e =￨e NotAConstant￨e ;￨e return￨e null￨e ;￨e }￨j this￨e .￨e codegenBinding￨e =￨e this￨e .￨e binding￨e =￨e scope￨e .￨e getField￨e (￨e this￨e .￨e receiverType￨e ,￨e token￨e ,￨e this￨e )￨e ;￨e if￨j (￨j !￨c (￨c binding￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j constant￨e =￨e NotAConstant￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e invalidField￨e (￨e this￨e ,￨e this￨e .￨e receiverType￨e )￨e ;￨e return￨e null￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b isFieldUseDeprecated￨b (￨b binding￨b ,￨b scope￨b )￨b )￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e deprecatedField￨e (￨e binding￨e ,￨e this￨e )￨e ;￨e boolean￨e isImplicitThisRcv￨e =￨e receiver￨e .￨e isImplicitThis￨e (￨e )￨e ;￨e constant￨e =￨e FieldReference￨e .￨e getConstantFor￨e (￨e binding￨e ,￨e this￨e ,￨e isImplicitThisRcv￨e ,￨e scope￨e )￨e ;￨e if￨j (￨j !￨c isImplicitThisRcv￨c )￨j {￨j constant￨e =￨e NotAConstant￨e ;￨e }￨j if￨j (￨j binding￨c .￨c isStatic￨c (￨c )￨c )￨j {￨j if￨j (￨j !￨c (￨c (￨c isImplicitThisRcv￨c ||￨c (￨c receiver￨c .￨c isSuper￨c (￨c )￨c )￨c )￨c ||￨c (￨c (￨c (￨c receiver￨c )￨c instanceof￨c NameReference￨c )￨c &&￨c (￨c (￨c (￨c (￨c (￨c NameReference￨c )￨c (￨c receiver￨c )￨c )￨c .￨c bits￨c )￨c &￨c (￨c BindingIds￨c .￨c TYPE￨c )￨c )￨c !=￨c 0￨c )￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e unnecessaryReceiverForStaticField￨e (￨e this￨e ,￨e binding￨e )￨e ;￨e }￨j }￨j return￨e this￨e .￨e resolvedType￨e =￨e binding￨e .￨e type￨e ;￨e }￨f public￨f void￨f setActualReceiverType￨f (￨f ReferenceBinding￨p receiverType￨p )￨f {￨f }￨f public￨f void￨f setDepth￨f (￨f int￨p depth￨p )￨f {￨f }￨f public￨f void￨f setFieldIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f String￨f toStringExpression￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d ;￨d private￨d static￨d final￨d AtomicInteger￨d archiveCount￨d =￨d new￨d AtomicInteger￨d (￨d )￨d ;￨d private￨d final￨d ServiceContainer￨d serviceContainer￨d ;￨d private￨d OSGiSubsystemState￨d subsystemState￨d ;￨d private￨d DeploymentChain￨d deploymentChain￨d ;￨d private￨d Selector￨d selector￨d ;￨d public￨d OSGiSubsystemSupport￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d public￨f OSGiSubsystemSupport￨f (￨f final￨f OSGiSubsystemState￨f subsystemState￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f ServiceContainer￨f getServiceContainer￨f (￨f )￨f {￨f }￨f public￨f ModuleLoader￨f getClassifyingModuleLoader￨f (￨f )￨f {￨f }￨f public￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getTestModuleLoader￨f (￨f )￨f {￨f }￨f public￨f DeploymentChain￨f getDeploymentChain￨f (￨f )￨f {￨f }￨f public￨f String￨f getUniqueName￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f assertServiceUp￨f (￨f ServiceName￨p serviceName￨p )￨f {￨f }￨f public￨f void￨f assertServiceDown￨f (￨f ServiceName￨p serviceName￨p )￨f {￨f }￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f public￨f void￨f removeDeploymentChain￨f (￨f )￨f {￨f }￨f public￨f void￨f setupServices￨f (￨f final￨f BatchBuilder￨f batchBuilder￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f setupEnvironmentServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupModuleLoaderServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupDeploymentServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupFrameworkServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f batchBuilder￨e .￨e addService￨e (￨e SERVICE_NAME￨e ,￨e new￨e MBeanServerService￨e (￨e )￨e )￨e ;￨e OSGiSubsystemSupport￨e .￨e TestBundleManagerService￨e .￨e addService￨e (￨e batchBuilder￨e )￨e ;￨e <START_BUG>￨b FrameworkService￨b .￨b addService￨b (￨b batchBuilder￨b ,￨b IMMEDIATE￨b )￨b ;￨b <END_BUG>￨b PackageAdminService￨e .￨e addService￨e (￨e batchBuilder￨e )￨e ;￨e }￨f private￨f Selector￨f getDeploymentChainSelector￨f (￨f )￨f {￨f }￨f public￨f BundleManager￨f getBundleManager￨f (￨f )￨f {￨f }￨f public￨f BundleContext￨f getSystemContext￨f (￨f )￨f {￨f }￨f public￨f Configuration￨f getSubsystemConfig￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f ,￨f ModuleIdentifier￨f exporterId￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClassFails￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Class￨f <￨f ?￨f >￨f loadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Module￨f loadModule￨f (￨f ModuleIdentifier￨f identifier￨f )￨f throws￨f ModuleLoadException￨f (￨f )￨f {￨f }￨f public￨f Bundle￨f executeDeploy￨f (￨f final￨f JavaArchive￨f archive￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f executeUndeploy￨f (￨f final￨f JavaArchive￨f archive￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f List￨f <￨f ServiceName￨f >￨f runWithLatchedBatch￨f (￨f final￨f OSGiSubsystemSupport￨f .￨f BatchedWork￨f work￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f interface￨f BatchedWork￨f (￨f )￨f {￨f void￨f execute￨f (￨f final￨f BatchBuilder￨f batchBuilder￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨f private￨d static￨d class￨d TestServiceListener￨d extends￨d AbstractServiceListener￨d <￨d Object￨d >￨d {￨d final￨e List￨e <￨e ServiceName￨e >￨e registeredServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ServiceName￨e >￨e startedServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ServiceName￨e >￨e failedServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e Map￨e <￨e Mode￨e ,￨e List￨e <￨e ServiceName￨e >￨e >￨e initialModes￨e ;￨e private￨e final￨e AtomicInteger￨e count￨e =￨e new￨e AtomicInteger￨e (￨e 1￨e )￨e ;￨e private￨e final￨e Runnable￨e finishTask￨e ;￨e public￨f TestServiceListener￨f (￨f Runnable￨p finishTask￨p ,￨p Map￨p <￨p Mode￨p ,￨p List￨p <￨p ServiceName￨p >￨p >￨p initialModes￨p )￨f {￨f }￨f public￨f void￨f listenerAdded￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f serviceStarted￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f serviceFailed￨f (￨f ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p ,￨p StartException￨p reason￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f serviceRemoved￨f (￨f ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f finishBatch￨f (￨f )￨f {￨f }￨f private￨f void￨f batchComplete￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d TestModuleLoader￨d extends￨d ModuleLoader￨d implements￨d Service￨d <￨d OSGiSubsystemSupport￨d .￨d TestModuleLoader￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "module"￨e ,￨e "loader"￨e ,￨e "support"￨e )￨e ;￨e private￨e String￨e prefix￨e ;￨e private￨e Map￨e <￨e ModuleIdentifier￨e ,￨e ModuleSpec￨e >￨e modules￨e =￨e new￨e HashMap￨e <￨e ModuleIdentifier￨e ,￨e ModuleSpec￨e >￨e (￨e )￨e ;￨e private￨e Injector￨e <￨e ClassifyingModuleLoaderService￨e >￨e injector￨e ;￨e TestModuleLoader￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f addModuleSpec￨f (￨f ModuleSpec￨p moduleSpec￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModuleSpec￨f findModule￨f (￨f ModuleIdentifier￨f identifier￨f )￨f throws￨f ModuleLoadException￨f (￨f )￨f {￨f }￨f public￨f static￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f public￨f synchronized￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d TestBundleManagerService￨d implements￨d Service￨d <￨d BundleManager￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e BundleManagerService￨e .￨e SERVICE_NAME￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.osgi"￨e )￨e ;￨e private￨e InjectedValue￨e <￨e Configuration￨e >￨e injectedConfig￨e =￨e new￨e InjectedValue￨e <￨e Configuration￨e >￨e (￨e )￨e ;￨e private￨e InjectedValue￨e <￨e ClassifyingModuleLoaderService￨e >￨e injectedModuleLoader￨e =￨e new￨e InjectedValue￨e <￨e ClassifyingModuleLoaderService￨e >￨e (￨e )￨e ;￨e private￨e Injector￨e <￨e ClassifyingModuleLoaderService￨e >￨e moduleLoaderInjector￨e ;￨e private￨e BundleManager￨e bundleManager￨e ;￨e public￨f static￨f void￨f addService￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f static￨f BundleManager￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f BundleManager￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d TestServerDeploymentRepository￨d implements￨d ServerDeploymentRepository￨d ,￨d Service￨d <￨d ServerDeploymentRepository￨d >￨d {￨d private￨e Map￨e <￨e String￨e ,￨e JavaArchive￨e >￨e repository￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e JavaArchive￨e >￨e (￨e )￨e ;￨e public￨f static￨f OSGiSubsystemSupport￨f .￨f TestServerDeploymentRepository￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f void￨f registerDeploymentArchive￨f (￨f String￨p name￨p ,￨p JavaArchive￨p archive￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServerDeploymentRepository￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f byte￨f [￨f ]￨f addDeploymentContent￨f (￨f String￨f name￨f ,￨f String￨f runtimeName￨f ,￨f InputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Closeable￨f mountDeploymentContent￨f (￨f String￨f name￨f ,￨f String￨f runtimeName￨f ,￨f byte￨f [￨f ]￨f deploymentHash￨f ,￨f VirtualFile￨f mountPoint￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d JavadocAllocationExpression￨d extends￨d AllocationExpression￨d {￨d public￨e int￨e tagSourceStart￨e ;￨e public￨e int￨e tagSourceEnd￨e ;￨e public￨e int￨e tagValue￨e ;￨e public￨e boolean￨e superAccess￨e =￨e false￨e ;￨e public￨f JavadocAllocationExpression￨f (￨f long￨p pos￨p )￨f {￨f }￨f private￨f TypeBinding￨f internalResolveType￨f (￨f Scope￨p scope￨p )￨f {￨f this￨e .￨e constant￨e =￨e NotAConstant￨e ;￨e if￨j (￨j (￨c this￨c .￨c type￨c )￨c ==￨c null￨c )￨j {￨j this￨e .￨e resolvedType￨e =￨e scope￨e .￨e enclosingSourceType￨e (￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c scope￨c .￨c kind￨c )￨c ==￨c (￨c Scope￨c .￨c CLASS_SCOPE￨c )￨c )￨j {￨j this￨e .￨e resolvedType￨e =￨e this￨e .￨e type￨e .￨e resolveType￨e (￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b this￨b .￨b resolvedType￨b =￨b this￨b .￨b type￨b .￨b resolveType￨b (￨b (￨b (￨b BlockScope￨b )￨b (￨b scope￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j TypeBinding￨e [￨e ]￨e argumentTypes￨e =￨e NoParameters￨e ;￨e if￨j (￨j (￨c this￨c .￨c arguments￨c )￨c !=￨c null￨c )￨j {￨j boolean￨e argHasError￨e =￨e false￨e ;￨e int￨e length￨e =￨e this￨e .￨e arguments￨e .￨e length￨e ;￨e argumentTypes￨e =￨e new￨e TypeBinding￨e [￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l Expression￨e argument￨e =￨e this￨e .￨e arguments￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c scope￨c .￨c kind￨c )￨c ==￨c (￨c Scope￨c .￨c CLASS_SCOPE￨c )￨c )￨j {￨j argumentTypes￨e [￨e i￨e ]￨e =￨e argument￨e .￨e resolveType￨e (￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j argumentTypes￨e [￨e i￨e ]￨e =￨e argument￨e .￨e resolveType￨e (￨e (￨e (￨e BlockScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c argumentTypes￨c [￨c i￨c ]￨c )￨c ==￨c null￨c )￨j {￨j argHasError￨e =￨e true￨e ;￨e }￨j }￨l if￨j (￨j argHasError￨c )￨j {￨j return￨e null￨e ;￨e }￨j }￨j if￨j (￨j (￨c this￨c .￨c resolvedType￨c )￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j this￨e .￨e superAccess￨e =￨e scope￨e .￨e enclosingSourceType￨e (￨e )￨e .￨e isCompatibleWith￨e (￨e this￨e .￨e resolvedType￨e )￨e ;￨e ReferenceBinding￨e allocationType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e this￨e .￨e resolvedType￨e )￨e )￨e ;￨e this￨e .￨e binding￨e =￨e scope￨e .￨e getConstructor￨e (￨e allocationType￨e ,￨e argumentTypes￨e ,￨e this￨e )￨e ;￨e if￨j (￨j !￨c (￨c this￨c .￨c binding￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j MethodBinding￨e methodBinding￨e =￨e scope￨e .￨e getMethod￨e (￨e this￨e .￨e resolvedType￨e ,￨e this￨e .￨e resolvedType￨e .￨e sourceName￨e (￨e )￨e ,￨e argumentTypes￨e ,￨e this￨e )￨e ;￨e if￨j (￨j methodBinding￨c .￨c isValidBinding￨c (￨c )￨c )￨j {￨j this￨e .￨e binding￨e =￨e methodBinding￨e ;￨e }￨j else￨j {￨j if￨j (￨j (￨c this￨c .￨c binding￨c .￨c declaringClass￨c )￨c ==￨c null￨c )￨j {￨j this￨e .￨e binding￨e .￨e declaringClass￨e =￨e allocationType￨e ;￨e }￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e javadocInvalidConstructor￨e (￨e this￨e ,￨e this￨e .￨e binding￨e ,￨e scope￨e .￨e getDeclarationModifiers￨e (￨e )￨e )￨e ;￨e }￨j return￨e this￨e .￨e resolvedType￨e ;￨e }￨j if￨j (￨j isMethodUseDeprecated￨c (￨c this￨c .￨c binding￨c ,￨c scope￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e javadocDeprecatedMethod￨e (￨e this￨e .￨e binding￨e ,￨e this￨e ,￨e scope￨e .￨e getDeclarationModifiers￨e (￨e )￨e )￨e ;￨e }￨j return￨e allocationType￨e ;￨e }￨f public￨f boolean￨f isSuperAccess￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d OracleDictionary￨d extends￨d DBDictionary￨d {￨d public￨e static￨e final￨e String￨e SELECT_HINT￨e =￨e "openjpa.hint.OracleSelectHint"￨e ;￨e public￨e static￨e final￨e String￨e VENDOR_ORACLE￨e =￨e "oracle"￨e ;￨e private￨e static￨e final￨e int￨e BEHAVE_OTHER￨e =￨e 0￨e ;￨e private￨e static￨e final￨e int￨e BEHAVE_ORACLE￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e BEHAVE_DATADIRECT31￨e =￨e 2￨e ;￨e private￨e static￨e Blob￨e EMPTY_BLOB￨e =￨e null￨e ;￨e private￨e static￨e Clob￨e EMPTY_CLOB￨e =￨e null￨e ;￨e private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d OracleDictionary￨d .￨d class￨d )￨d ;￨d public￨d boolean￨d useTriggersForAutoAssign￨d =￨d false￨d ;￨d public￨d String￨d autoAssignSequenceName￨d =￨d null￨d ;￨d public￨d boolean￨d openjpa3GeneratedKeyNames￨d =￨d false￨d ;￨d public￨d boolean￨d useSetFormOfUseForUnicode￨d =￨d true￨d ;￨d private￨d boolean￨d _checkedUpdateBug￨d =￨d false￨d ;￨d private￨d boolean￨d _warnedCharColumn￨d =￨d false￨d ;￨d private￨d boolean￨d _warnedNcharColumn￨d =￨d false￨d ;￨d private￨d int￨d _driverBehavior￨d =￨d -￨d 1￨d ;￨d private￨d Method￨d _putBytes￨d =￨d null￨d ;￨d private￨d Method￨d _putString￨d =￨d null￨d ;￨d private￨d Method￨d _putChars￨d =￨d null￨d ;￨d private￨d int￨d defaultBatchLimit￨d =￨d 100￨d ;￨d public￨d OracleDictionary￨d (￨d )￨d {￨d }￨d public￨f void￨f endConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f connectedConfiguration￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f cacheDriverBehavior￨f (￨f String￨p driverVendor￨p )￨f {￨f }￨f public￨f void￨f ensureDriverVendor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f supportsLocking￨f (￨f Select￨p sel￨p )￨f {￨f }￨f protected￨f SQLBuffer￨f getSelects￨f (￨f Select￨p sel￨p ,￨p boolean￨p distinctIdentifiers￨p ,￨p boolean￨p forUpdate￨p )￨f {￨f }￨f public￨f boolean￨f canOuterJoin￨f (￨f int￨p syntax￨p ,￨p ForeignKey￨p fk￨p )￨f {￨f }￨f public￨f SQLBuffer￨f toNativeJoin￨f (￨f Join￨p join￨p )￨f {￨f }￨f protected￨f SQLBuffer￨f toSelect￨f (￨f SQLBuffer￨p select￨p ,￨p JDBCFetchConfiguration￨p fetch￨p ,￨p SQLBuffer￨p tables￨p ,￨p SQLBuffer￨p where￨p ,￨p SQLBuffer￨p group￨p ,￨p SQLBuffer￨p having￨p ,￨p SQLBuffer￨p order￨p ,￨p boolean￨p distinct￨p ,￨p boolean￨p forUpdate￨p ,￨p long￨p start￨p ,￨p long￨p end￨p ,￨p boolean￨p subselect￨p ,￨p Select￨p sel￨p )￨f {￨f }￨f protected￨f SQLBuffer￨f toSelect￨f (￨f SQLBuffer￨p select￨p ,￨p JDBCFetchConfiguration￨p fetch￨p ,￨p SQLBuffer￨p tables￨p ,￨p SQLBuffer￨p where￨p ,￨p SQLBuffer￨p group￨p ,￨p SQLBuffer￨p having￨p ,￨p SQLBuffer￨p order￨p ,￨p boolean￨p distinct￨p ,￨p boolean￨p forUpdate￨p ,￨p long￨p start￨p ,￨p long￨p end￨p ,￨p Select￨p sel￨p )￨f {￨f }￨f private￨f boolean￨f requiresSubselectForRange￨f (￨f long￨p start￨p ,￨p long￨p end￨p ,￨p boolean￨p distinct￨p ,￨p SQLBuffer￨p order￨p )￨f {￨f }￨f public￨f String￨f getSelectOperation￨f (￨f JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f setString￨f (￨f PreparedStatement￨f stmnt￨f ,￨f int￨f idx￨f ,￨f String￨f val￨f ,￨f Column￨f col￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f setNull￨f (￨f PreparedStatement￨f stmnt￨f ,￨f int￨f idx￨f ,￨f int￨f colType￨f ,￨f Column￨f col￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f getClobString￨f (￨f ResultSet￨f rs￨f ,￨f int￨f column￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Timestamp￨f getTimestamp￨f (￨f ResultSet￨f rs￨f ,￨f int￨f column￨f ,￨f Calendar￨f cal￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Object￨f getObject￨f (￨f ResultSet￨f rs￨f ,￨f int￨f column￨f ,￨f Map￨f map￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f static￨f Object￨f convertFromOracleType￨f (￨f Object￨f obj￨f ,￨f String￨f convertMethod￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Column￨f [￨f ]￨f getColumns￨f (￨f DatabaseMetaData￨f meta￨f ,￨f String￨f catalog￨f ,￨f String￨f schemaName￨f ,￨f String￨f tableName￨f ,￨f String￨f columnName￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f PrimaryKey￨f [￨f ]￨f getPrimaryKeys￨f (￨f DatabaseMetaData￨f meta￨f ,￨f String￨f catalog￨f ,￨f String￨f schemaName￨f ,￨f String￨f tableName￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Index￨f [￨f ]￨f getIndexInfo￨f (￨f DatabaseMetaData￨f meta￨f ,￨f String￨f catalog￨f ,￨f String￨f schemaName￨f ,￨f String￨f tableName￨f ,￨f boolean￨f unique￨f ,￨f boolean￨f approx￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f ForeignKey￨f [￨f ]￨f getImportedKeys￨f (￨f DatabaseMetaData￨f meta￨f ,￨f String￨f catalog￨f ,￨f String￨f schemaName￨f ,￨f String￨f tableName￨f ,￨f Connection￨f conn￨f ,￨f boolean￨f partialKeys￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getCreateTableSQL￨f (￨f Table￨p table￨p )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getCreateSequenceSQL￨f (￨f Sequence￨p seq￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f getJDBCType￨f (￨f int￨p metaTypeCode￨p ,￨p boolean￨p lob￨p ,￨p int￨p precis￨p ,￨p int￨p scale￨p ,￨p boolean￨p xml￨p )￨f {￨f <START_BUG>￨b return￨b getJDBCType￨b (￨b metaTypeCode￨b ,￨b (￨b lob￨b &&￨b (￨b !￨b xml￨b )￨b )￨b ,￨b precis￨b ,￨b scale￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f String￨f getSequencesSQL￨f (￨f String￨p schemaName￨p ,￨p String￨p sequenceName￨p )￨f {￨f }￨f public￨f boolean￨f isSystemSequence￨f (￨f String￨p name￨p ,￨p String￨p schema￨p ,￨p boolean￨p targetSchema￨p )￨f {￨f }￨f public￨f Object￨f getGeneratedKey￨f (￨f Column￨f col￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f String￨f getGeneratedKeyTriggerName￨f (￨f Column￨p col￨p )￨f {￨f }￨f protected￨f String￨f getOpenJPA3GeneratedKeySequenceName￨f (￨f Column￨p col￨p )￨f {￨f }￨f protected￨f String￨f getOpenJPA3GeneratedKeyTriggerName￨f (￨f Column￨p col￨p )￨f {￨f }￨f public￨f void￨f putBytes￨f (￨f Blob￨f blob￨f ,￨f byte￨f [￨f ]￨f data￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f putString￨f (￨f Clob￨f clob￨f ,￨f String￨f data￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f putChars￨f (￨f Clob￨f clob￨f ,￨f char￨f [￨f ]￨f data￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f invokePutLobMethod￨f (￨f Method￨f method￨f ,￨f Object￨f target￨f ,￨f Object￨f data￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f Clob￨f getEmptyClob￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f Blob￨f getEmptyBlob￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f static￨f boolean￨f isOraclePreparedStatement￨f (￨f Statement￨p stmnt￨p )￨f {￨f }￨f public￨f void￨f appendXmlComparison￨f (￨f SQLBuffer￨p buf￨p ,￨p String￨p op￨p ,￨p FilterValue￨p lhs￨p ,￨p FilterValue￨p rhs￨p ,￨p boolean￨p lhsxml￨p ,￨p boolean￨p rhsxml￨p )￨f {￨f }￨f private￨f void￨f appendXmlComparison1￨f (￨f SQLBuffer￨p buf￨p ,￨p String￨p op￨p ,￨p FilterValue￨p lhs￨p ,￨p FilterValue￨p rhs￨p )￨f {￨f }￨f private￨f void￨f appendXmlComparison2￨f (￨f SQLBuffer￨p buf￨p ,￨p String￨p op￨p ,￨p FilterValue￨p lhs￨p ,￨p FilterValue￨p rhs￨p )￨f {￨f }￨f private￨f void￨f appendXmlExtractValue￨f (￨f SQLBuffer￨p buf￨p ,￨p FilterValue￨p val￨p )￨f {￨f }￨f public￨f void￨f insertClobForStreamingLoad￨f (￨f Row￨f row￨f ,￨f Column￨f col￨f ,￨f Object￨f ob￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f int￨f getBatchUpdateCount￨f (￨f PreparedStatement￨f ps￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f Boolean￨f matchErrorState￨f (￨f int￨p subtype￨p ,￨p Set￨p <￨p String￨p >￨p errorStates￨p ,￨p SQLException￨p ex￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f insertBlobForStreamingLoad￨f (￨f Row￨f row￨f ,￨f Column￨f col￨f ,￨f JDBCStore￨f store￨f ,￨f Object￨f ob￨f ,￨f Select￨f sel￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ModClusterEnableContext￨d implements￨d OperationStepHandler￨d ,￨d DescriptionProvider￨d {￨d static￨e final￨e ModClusterEnableContext￨e INSTANCE￨e =￨e new￨e ModClusterEnableContext￨e (￨e )￨e ;￨e @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b context￨b .￨b getProcessType￨b (￨b )￨b .￨b isServer￨b (￨b )￨b )￨b {￨b <END_BUG>￨b context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e NAME￨e )￨e ;￨e ModCluster￨e modcluster￨e =￨e (￨e (￨e ModCluster￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e ModClusterLogger￨e .￨e ROOT_LOGGER￨e .￨e debugf￨e (￨e "enable-context:<seq2seq4repair_space>%s"￨e ,￨e operation￨e )￨e ;￨e ContextHost￨e contexthost￨e =￨e new￨e ContextHost￨e (￨e operation￨e )￨e ;￨e modcluster￨e .￨e enableContext￨e (￨e contexthost￨e .￨e webhost￨e ,￨e contexthost￨e .￨e webcontext￨e )￨e ;￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨d
class￨d ASTSyntaxErrorPropagator￨d extends￨d ASTVisitor￨d {￨d private￨e IProblem￨e [￨e ]￨e problems￨e ;￨e ASTSyntaxErrorPropagator￨f (￨f IProblem￨p [￨p ]￨p problems￨p )￨f {￨f }￨f private￨f boolean￨f checkAndTagAsMalformed￨f (￨f ASTNode￨p node￨p )￨f {￨f boolean￨e tagWithErrors￨e =￨e false￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c this￨c .￨c problems￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l IProblem￨e problem￨e =￨e this￨e .￨e problems￨e [￨e i￨e ]￨e ;￨e switch￨s (￨s problem￨c .￨c getID￨c (￨c )￨c )￨s {￨s case￨c IProblem￨c .￨c ParsingErrorOnKeywordNoSuggestion￨c :￨c case￨c IProblem￨c .￨c ParsingErrorOnKeyword￨c :￨c case￨c IProblem￨c .￨c ParsingError￨c :￨c case￨c IProblem￨c .￨c ParsingErrorNoSuggestion￨c :￨c break￨e ;￨e case￨c IProblem￨c .￨c ParsingErrorInsertTokenBefore￨c :￨c case￨c IProblem￨c .￨c ParsingErrorInsertTokenAfter￨c :￨c case￨c IProblem￨c .￨c ParsingErrorDeleteToken￨c :￨c case￨c IProblem￨c .￨c ParsingErrorDeleteTokens￨c :￨c case￨c IProblem￨c .￨c ParsingErrorMergeTokens￨c :￨c case￨c IProblem￨c .￨c ParsingErrorInvalidToken￨c :￨c case￨c IProblem￨c .￨c ParsingErrorMisplacedConstruct￨c :￨c case￨c IProblem￨c .￨c ParsingErrorReplaceTokens￨c :￨c case￨c IProblem￨c .￨c ParsingErrorNoSuggestionForTokens￨c :￨c case￨c IProblem￨c .￨c ParsingErrorUnexpectedEOF￨c :￨c case￨c IProblem￨c .￨c ParsingErrorInsertToComplete￨c :￨c case￨c IProblem￨c .￨c ParsingErrorInsertToCompleteScope￨c :￨c case￨c IProblem￨c .￨c ParsingErrorInsertToCompletePhrase￨c :￨c break￨e ;￨e default￨c :￨c continue￨e search￨e ;￨e }￨s int￨e position￨e =￨e problem￨e .￨e getSourceStart￨e (￨e )￨e ;￨e int￨e start￨e =￨e node￨e .￨e getStartPosition￨e (￨e )￨e ;￨e int￨e end￨e =￨e start￨e +￨e (￨e node￨e .￨e getLength￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c start￨c <=￨c position￨c )￨c &&￨c (￨c position￨c <=￨c end￨c )￨c )￨j {￨j <START_BUG>￨b node￨b .￨b setFlags￨b (￨b ASTNode￨b .￨b MALFORMED￨b )￨b ;￨b <END_BUG>￨b ASTNode￨e currentNode￨e =￨e node￨e .￨e getParent￨e (￨e )￨e ;￨e while￨l (￨l currentNode￨c !=￨c null￨c )￨l {￨l currentNode￨e .￨e setFlags￨e (￨e (￨e (￨e currentNode￨e .￨e getFlags￨e (￨e )￨e )￨e &￨e (￨e ~￨e (￨e ASTNode￨e .￨e MALFORMED￨e )￨e )￨e )￨e )￨e ;￨e currentNode￨e =￨e currentNode￨e .￨e getParent￨e (￨e )￨e ;￨e }￨l tagWithErrors￨e =￨e true￨e ;￨e }￨j }￨l return￨e tagWithErrors￨e ;￨e }￨f public￨f boolean￨f visit￨f (￨f FieldDeclaration￨p node￨p )￨f {￨f }￨f public￨f boolean￨f visit￨f (￨f MethodDeclaration￨p node￨p )￨f {￨f }￨f public￨f boolean￨f visit￨f (￨f PackageDeclaration￨p node￨p )￨f {￨f }￨f public￨f boolean￨f visit￨f (￨f ImportDeclaration￨p node￨p )￨f {￨f }￨f public￨f boolean￨f visit￨f (￨f CompilationUnit￨p node￨p )￨f {￨f }￨f public￨f boolean￨f visit￨f (￨f Initializer￨p node￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestBufferedIndexInput￨d extends￨d LuceneTestCase￨d {￨d private￨f static￨f void￨f writeBytes￨f (￨f File￨f aFile￨f ,￨f long￨f size￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨e static￨e final￨e long￨e TEST_FILE_LENGTH￨e =￨e 1024￨e *￨e 1024￨e ;￨e public￨f void￨f testReadByte￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReadBytes￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f runReadBytesAndClose￨f (￨f IndexInput￨f input￨f ,￨f int￨f bufferSize￨f ,￨f Random￨f r￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f runReadBytes￨f (￨f IndexInput￨f input￨f ,￨f int￨f bufferSize￨f ,￨f Random￨f r￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨e byte￨e [￨e ]￨e buffer￨e =￨e new￨e byte￨e [￨e 10￨e ]￨e ;￨e private￨f void￨f checkReadBytes￨f (￨f IndexInput￨f input￨f ,￨f int￨f size￨f ,￨f int￨f pos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testEOF￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f byte￨f byten￨f (￨f long￨p n￨p )￨f {￨f }￨f private￨d static￨d class￨d MyBufferedIndexInput￨d extends￨d BufferedIndexInput￨d {￨d private￨e long￨e pos￨e ;￨e private￨e long￨e len￨e ;￨e public￨f MyBufferedIndexInput￨f (￨f long￨p len￨p )￨f {￨f }￨f public￨f MyBufferedIndexInput￨f (￨f )￨f {￨f }￨f protected￨f void￨f readInternal￨f (￨f byte￨f [￨f ]￨f b￨f ,￨f int￨f offset￨f ,￨f int￨f length￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f seekInternal￨f (￨f long￨f pos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f long￨f length￨f (￨f )￨f {￨f }￨f }￨d public￨f void￨f testSetBufferSize￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f File￨e indexDir￨e =￨e new￨e File￨e (￨e System￨e .￨e getProperty￨e (￨e "tempDir"￨e )￨e ,￨e "testSetBufferSize"￨e )￨e ;￨e TestBufferedIndexInput￨e .￨e MockFSDirectory￨e dir￨e =￨e new￨e TestBufferedIndexInput￨e .￨e MockFSDirectory￨e (￨e indexDir￨e ,￨e newRandom￨e (￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f IndexWriter￨e writer￨e =￨e new￨e IndexWriter￨e (￨e dir￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e ,￨e true￨e ,￨e MaxFieldLength￨e .￨e LIMITED￨e )￨e ;￨e writer￨e .￨e setUseCompoundFile￨e (￨e false￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 37￨c ;￨c i￨c ++￨c )￨l {￨l Document￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e "content"￨e ,￨e (￨e "aaa<seq2seq4repair_space>bbb<seq2seq4repair_space>ccc<seq2seq4repair_space>ddd"￨e +￨e i￨e )￨e ,￨e Store￨e .￨e YES￨e ,￨e Index￨e .￨e ANALYZED￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e "id"￨e ,￨e (￨e ""￨e +￨e i￨e )￨e ,￨e Store￨e .￨e YES￨e ,￨e Index￨e .￨e ANALYZED￨e )￨e )￨e ;￨e writer￨e .￨e addDocument￨e (￨e doc￨e )￨e ;￨e }￨l writer￨e .￨e close￨e (￨e )￨e ;￨e dir￨e .￨e allIndexInputs￨e .￨e clear￨e (￨e )￨e ;￨e <START_BUG>￨b IndexReader￨b reader￨b =￨b IndexReader￨b .￨b open￨b (￨b dir￨b )￨b ;￨b <END_BUG>￨b Term￨e aaa￨e =￨e new￨e Term￨e (￨e "content"￨e ,￨e "aaa"￨e )￨e ;￨e Term￨e bbb￨e =￨e new￨e Term￨e (￨e "content"￨e ,￨e "bbb"￨e )￨e ;￨e Term￨e ccc￨e =￨e new￨e Term￨e (￨e "content"￨e ,￨e "ccc"￨e )￨e ;￨e assertEquals￨e (￨e 37￨e ,￨e reader￨e .￨e docFreq￨e (￨e ccc￨e )￨e )￨e ;￨e reader￨e .￨e deleteDocument￨e (￨e 0￨e )￨e ;￨e assertEquals￨e (￨e 37￨e ,￨e reader￨e .￨e docFreq￨e (￨e aaa￨e )￨e )￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e reader￨e .￨e deleteDocument￨e (￨e 4￨e )￨e ;￨e assertEquals￨e (￨e reader￨e .￨e docFreq￨e (￨e bbb￨e )￨e ,￨e 37￨e )￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e IndexSearcher￨e searcher￨e =￨e new￨e IndexSearcher￨e (￨e reader￨e )￨e ;￨e ScoreDoc￨e [￨e ]￨e hits￨e =￨e searcher￨e .￨e search￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e search￨e .￨e TermQuery￨e (￨e bbb￨e )￨e ,￨e null￨e ,￨e 1000￨e )￨e .￨e scoreDocs￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e assertEquals￨e (￨e 35￨e ,￨e hits￨e .￨e length￨e )￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e hits￨e =￨e searcher￨e .￨e search￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e search￨e .￨e TermQuery￨e (￨e new￨e Term￨e (￨e "id"￨e ,￨e "33"￨e )￨e )￨e ,￨e null￨e ,￨e 1000￨e )￨e .￨e scoreDocs￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e hits￨e .￨e length￨e )￨e ;￨e hits￨e =￨e searcher￨e .￨e search￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e search￨e .￨e TermQuery￨e (￨e aaa￨e )￨e ,￨e null￨e ,￨e 1000￨e )￨e .￨e scoreDocs￨e ;￨e dir￨e .￨e tweakBufferSizes￨e (￨e )￨e ;￨e assertEquals￨e (￨e 35￨e ,￨e hits￨e .￨e length￨e )￨e ;￨e searcher￨e .￨e close￨e (￨e )￨e ;￨e reader￨e .￨e close￨e (￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f _TestUtil￨e .￨e rmDir￨e (￨e indexDir￨e )￨e ;￨e }￨f }￨f private￨d static￨d class￨d MockFSDirectory￨d extends￨d Directory￨d {￨d List￨e allIndexInputs￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e Random￨e rand￨e ;￨e private￨e Directory￨e dir￨e ;￨e public￨f MockFSDirectory￨f (￨f File￨f path￨f ,￨f Random￨f rand￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f IndexInput￨f openInput￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f tweakBufferSizes￨f (￨f )￨f {￨f }￨f public￨f IndexInput￨f openInput￨f (￨f String￨f name￨f ,￨f int￨f bufferSize￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f IndexOutput￨f createOutput￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f deleteFile￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f touchFile￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f long￨f fileModified￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f fileExists￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f list￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f listAll￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f long￨f fileLength￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f renameFile￨f (￨f String￨f from￨f ,￨f String￨f to￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TestCustomSearcherSort￨d extends￨d LuceneTestCase￨d implements￨d Serializable￨d {￨d private￨e Directory￨e index￨e =￨e null￨e ;￨e private￨e Query￨e query￨e =￨e null￨e ;￨e private￨e static￨e final￨e int￨e INDEX_SIZE￨e =￨e 2000￨e ;￨e public￨f TestCustomSearcherSort￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p argv￨p )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f private￨f Directory￨f getIndex￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f RAMDirectory￨e indexStore￨e =￨e new￨e RAMDirectory￨e (￨e )￨e ;￨e <START_BUG>￨b IndexWriter￨b writer￨b =￨b new￨b IndexWriter￨b (￨b indexStore￨b ,￨b new￨b org￨b .￨b apache￨b .￨b lucene￨b .￨b analysis￨b .￨b standard￨b .￨b StandardAnalyzer￨b (￨b Version￨b .￨b LUCENE_CURRENT￨b )￨b ,￨b true￨b ,￨b MaxFieldLength￨b .￨b LIMITED￨b )￨b ;￨b <END_BUG>￨b TestCustomSearcherSort￨e .￨e RandomGen￨e random￨e =￨e new￨e TestCustomSearcherSort￨e .￨e RandomGen￨e (￨e newRandom￨e (￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestCustomSearcherSort￨c .￨c INDEX_SIZE￨c )￨c ;￨c ++￨c i￨c )￨l {￨l Document￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e if￨j (￨j (￨c i￨c %￨c 5￨c )￨c !=￨c 0￨c )￨j {￨j doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e "publicationDate_"￨e ,￨e random￨e .￨e getLuceneDate￨e (￨e )￨e ,￨e Store￨e .￨e YES￨e ,￨e Index￨e .￨e NOT_ANALYZED￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c i￨c %￨c 7￨c )￨c ==￨c 0￨c )￨j {￨j doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e "content"￨e ,￨e "test"￨e ,￨e Store￨e .￨e YES￨e ,￨e Index￨e .￨e ANALYZED￨e )￨e )￨e ;￨e }￨j doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e "mandant"￨e ,￨e Integer￨e .￨e toString￨e (￨e (￨e i￨e %￨e 3￨e )￨e )￨e ,￨e Store￨e .￨e YES￨e ,￨e Index￨e .￨e NOT_ANALYZED￨e )￨e )￨e ;￨e writer￨e .￨e addDocument￨e (￨e doc￨e )￨e ;￨e }￨l writer￨e .￨e optimize￨e (￨e )￨e ;￨e writer￨e .￨e close￨e (￨e )￨e ;￨e return￨e indexStore￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldSortCustomSearcher￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldSortSingleSearcher￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldSortMultiCustomSearcher￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f matchHits￨f (￨f Searcher￨f searcher￨f ,￨f Sort￨f sort￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkHits￨f (￨f ScoreDoc￨p [￨p ]￨p hits￨p ,￨p String￨p prefix￨p )￨f {￨f }￨f private￨f void￨f log￨f (￨f String￨p message￨p )￨f {￨f }￨f public￨d class￨d CustomSearcher￨d extends￨d IndexSearcher￨d {￨d private￨e int￨e switcher￨e ;￨e public￨f CustomSearcher￨f (￨f Directory￨f directory￨f ,￨f int￨f switcher￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f CustomSearcher￨f (￨f IndexReader￨p r￨p ,￨p int￨p switcher￨p )￨f {￨f }￨f @￨f Override￨f public￨f TopFieldDocs￨f search￨f (￨f Query￨f query￨f ,￨f Filter￨f filter￨f ,￨f int￨f nDocs￨f ,￨f Sort￨f sort￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f TopDocs￨f search￨f (￨f Query￨f query￨f ,￨f Filter￨f filter￨f ,￨f int￨f nDocs￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d private￨d class￨d RandomGen￨d {￨d RandomGen￨f (￨f Random￨p random￨p )￨f {￨f }￨f private￨e Random￨e random￨e ;￨e private￨e Calendar￨e base￨e =￨e new￨e GregorianCalendar￨e (￨e 1980￨e ,￨e 1￨e ,￨e 1￨e )￨e ;￨e private￨f String￨f getLuceneDate￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d BasicSearchEngine￨d {￨d private￨e Parser￨e parser￨e ;￨e private￨e CompilerOptions￨e compilerOptions￨e ;￨e private￨e ICompilationUnit￨e [￨e ]￨e workingCopies￨e ;￨e private￨e WorkingCopyOwner￨e workingCopyOwner￨e ;￨e public￨e static￨e boolean￨e VERBOSE￨e =￨e false￨e ;￨e public￨f BasicSearchEngine￨f (￨f )￨f {￨f }￨f public￨f BasicSearchEngine￨f (￨f ICompilationUnit￨p [￨p ]￨p workingCopies￨p )￨f {￨f }￨f char￨f convertTypeKind￨f (￨f int￨p typeDeclarationKind￨p )￨f {￨f }￨f public￨f BasicSearchEngine￨f (￨f WorkingCopyOwner￨p workingCopyOwner￨p )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createHierarchyScope￨f (￨f IType￨f type￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createHierarchyScope￨f (￨f IType￨f type￨f ,￨f WorkingCopyOwner￨f owner￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createJavaSearchScope￨f (￨f IJavaElement￨p [￨p ]￨p elements￨p )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createJavaSearchScope￨f (￨f IJavaElement￨p [￨p ]￨p elements￨p ,￨p boolean￨p includeReferencedProjects￨p )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createJavaSearchScope￨f (￨f IJavaElement￨p [￨p ]￨p elements￨p ,￨p int￨p includeMask￨p )￨f {￨f }￨f public￨f static￨f IJavaSearchScope￨f createWorkspaceScope￨f (￨f )￨f {￨f <START_BUG>￨b return￨b JavaWorkspaceScope￨b .￨b createScope￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f findMatches￨f (￨f SearchPattern￨f pattern￨f ,￨f SearchParticipant￨f [￨f ]￨f participants￨f ,￨f IJavaSearchScope￨f scope￨f ,￨f SearchRequestor￨f requestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f public￨f static￨f SearchParticipant￨f getDefaultSearchParticipant￨f (￨f )￨f {￨f }￨f private￨f Parser￨f getParser￨f (￨f )￨f {￨f }￨f private￨f IResource￨f getResource￨f (￨f IJavaElement￨p element￨p )￨f {￨f }￨f private￨f ICompilationUnit￨f [￨f ]￨f getWorkingCopies￨f (￨f )￨f {￨f }￨f private￨f ICompilationUnit￨f [￨f ]￨f getWorkingCopies￨f (￨f IJavaElement￨p element￨p )￨f {￨f }￨f boolean￨f match￨f (￨f char￨p patternTypeSuffix￨p ,￨p int￨p modifiers￨p )￨f {￨f }￨f boolean￨f match￨f (￨f char￨p patternTypeSuffix￨p ,￨p char￨p [￨p ]￨p patternPkg￨p ,￨p char￨p [￨p ]￨p patternTypeName￨p ,￨p int￨p matchRule￨p ,￨p int￨p typeKind￨p ,￨p char￨p [￨p ]￨p pkg￨p ,￨p char￨p [￨p ]￨p typeName￨p )￨f {￨f }￨f public￨f void￨f search￨f (￨f SearchPattern￨f pattern￨f ,￨f SearchParticipant￨f [￨f ]￨f participants￨f ,￨f IJavaSearchScope￨f scope￨f ,￨f SearchRequestor￨f requestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchAllTypeNames￨f (￨f final￨f char￨f [￨f ]￨f packageName￨f ,￨f final￨f char￨f [￨f ]￨f typeName￨f ,￨f final￨f int￨f matchRule￨f ,￨f int￨f searchFor￨f ,￨f IJavaSearchScope￨f scope￨f ,￨f final￨f IRestrictedAccessTypeRequestor￨f nameRequestor￨f ,￨f int￨f waitingPolicy￨f ,￨f IProgressMonitor￨f progressMonitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchAllTypeNames￨f (￨f final￨f char￨f [￨f ]￨f [￨f ]￨f qualifications￨f ,￨f final￨f char￨f [￨f ]￨f [￨f ]￨f typeNames￨f ,￨f final￨f int￨f matchRule￨f ,￨f int￨f searchFor￨f ,￨f IJavaSearchScope￨f scope￨f ,￨f final￨f IRestrictedAccessTypeRequestor￨f nameRequestor￨f ,￨f int￨f waitingPolicy￨f ,￨f IProgressMonitor￨f progressMonitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchDeclarations￨f (￨f IJavaElement￨f enclosingElement￨f ,￨f SearchRequestor￨f requestor￨f ,￨f SearchPattern￨f pattern￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchDeclarationsOfAccessedFields￨f (￨f IJavaElement￨f enclosingElement￨f ,￨f SearchRequestor￨f requestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchDeclarationsOfReferencedTypes￨f (￨f IJavaElement￨f enclosingElement￨f ,￨f SearchRequestor￨f requestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f searchDeclarationsOfSentMessages￨f (￨f IJavaElement￨f enclosingElement￨f ,￨f SearchRequestor￨f requestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f }￨d
class￨d TypeBinding￨d implements￨d ITypeBinding￨d {￨d private￨e static￨e final￨e IMethodBinding￨e [￨e ]￨e NO_METHOD_BINDINGS￨e =￨e new￨e IMethodBinding￨e [￨e 0￨e ]￨e ;￨e private￨e static￨e final￨e String￨e NO_NAME￨e =￨e ""￨e ;￨e private￨e static￨e final￨e ITypeBinding￨e [￨e ]￨e NO_TYPE_BINDINGS￨e =￨e new￨e ITypeBinding￨e [￨e 0￨e ]￨e ;￨e private￨e static￨e final￨e IVariableBinding￨e [￨e ]￨e NO_VARIABLE_BINDINGS￨e =￨e new￨e IVariableBinding￨e [￨e 0￨e ]￨e ;￨e private￨e static￨e final￨e int￨e VALID_MODIFIERS￨e =￨e (￨e (￨e (￨e (￨e (￨e (￨e Modifier￨e .￨e PUBLIC￨e )￨e |￨e (￨e Modifier￨e .￨e PROTECTED￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e PRIVATE￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e ABSTRACT￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STATIC￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e FINAL￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STRICTFP￨e )￨e ;￨e private￨e org￨e .￨e eclipse￨e .￨e jdt￨e .￨e internal￨e .￨e compiler￨e .￨e lookup￨e .￨e TypeBinding￨e binding￨e ;￨e private￨e String￨e key￨e ;￨e private￨e BindingResolver￨e resolver￨e ;￨e public￨f TypeBinding￨f (￨f BindingResolver￨p resolver￨p ,￨p org￨p .￨p eclipse￨p .￨p jdt￨p .￨p internal￨p .￨p compiler￨p .￨p lookup￨p .￨p TypeBinding￨p binding￨p )￨f {￨f }￨f public￨f String￨f getBinaryName￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getBound￨f (￨f )￨f {￨f }￨f private￨f IClassFile￨f getClassFile￨f (￨f char￨p [￨p ]￨p fileName￨p )￨f {￨f }￨f private￨f ICompilationUnit￨f getCompilationUnit￨f (￨f char￨p [￨p ]￨p fileName￨p )￨f {￨f }￨f public￨f IVariableBinding￨f [￨f ]￨f getDeclaredFields￨f (￨f )￨f {￨f }￨f public￨f IMethodBinding￨f [￨f ]￨f getDeclaredMethods￨f (￨f )￨f {￨f }￨f public￨f int￨f getDeclaredModifiers￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f [￨f ]￨f getDeclaredTypes￨f (￨f )￨f {￨f }￨f public￨f IMethodBinding￨f getDeclaringMethod￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getDeclaringClass￨f (￨f )￨f {￨f }￨f public￨f int￨f getDimensions￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getElementType￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getTypeDeclaration￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getErasure￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f [￨f ]￨f getInterfaces￨f (￨f )￨f {￨f }￨f public￨f IJavaElement￨f getJavaElement￨f (￨f )￨f {￨f }￨f private￨f JavaElement￨f getUnresolvedJavaElement￨f (￨f )￨f {￨f }￨f public￨f String￨f getKey￨f (￨f )￨f {￨f }￨f public￨f int￨f getKind￨f (￨f )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f IPackageBinding￨f getPackage￨f (￨f )￨f {￨f }￨f private￨f IPackageFragment￨f getPackageFragment￨f (￨f char￨p [￨p ]￨p fileName￨p ,￨p int￨p lastSlash￨p )￨f {￨f }￨f public￨f String￨f getQualifiedName￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getSuperclass￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f [￨f ]￨f getTypeArguments￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f [￨f ]￨f getTypeBounds￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f [￨f ]￨f getTypeParameters￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f getWildcard￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isGenericType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAnnotation￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAnonymous￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isArray￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAssignmentCompatible￨f (￨f ITypeBinding￨p type￨p )￨f {￨f }￨f public￨f boolean￨f isCapture￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isCastCompatible￨f (￨f ITypeBinding￨p type￨p )￨f {￨f }￨f public￨f boolean￨f isClass￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDeprecated￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEnum￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEqualTo￨f (￨f IBinding￨p other￨p )￨f {￨f }￨f public￨f boolean￨f isFromSource￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInterface￨f (￨f )￨f {￨f <START_BUG>￨b return￨b this￨b .￨b binding￨b .￨b isInterface￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f boolean￨f isLocal￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMember￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNested￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNullType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isParameterizedType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPrimitive￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRawType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSubTypeCompatible￨f (￨f ITypeBinding￨p type￨p )￨f {￨f }￨f public￨f boolean￨f isSynthetic￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isTopLevel￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isTypeVariable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isUpperbound￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isWildcardType￨f (￨f )￨f {￨f }￨f private￨f boolean￨f shouldBeRemoved￨f (￨f MethodBinding￨p methodBinding￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestPlan￨d extends￨d AbstractTestElement￨d implements￨d Serializable￨d ,￨d TestListener￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 233L￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e FUNCTIONAL_MODE￨e =￨e "TestPlan.functional_mode"￨e ;￨e private￨e static￨e final￨e String￨e USER_DEFINED_VARIABLES￨e =￨e "TestPlan.user_defined_variables"￨e ;￨e private￨e static￨e final￨e String￨e SERIALIZE_THREADGROUPS￨e =￨e "TestPlan.serialize_threadgroups"￨e ;￨e private￨e static￨e final￨e String￨e CLASSPATHS￨e =￨e "TestPlan.user_define_classpath"￨e ;￨e private￨e static￨e final￨e String￨e CLASSPATH_SEPARATOR￨e =￨e ","￨e ;￨e private￨e static￨e final￨e String￨e BASEDIR￨e =￨e "basedir"￨e ;￨e private￨e transient￨e List￨e <￨e ThreadGroup￨e >￨e threadGroups￨e =￨e new￨e LinkedList￨e <￨e ThreadGroup￨e >￨e (￨e )￨e ;￨e private￨e static￨e volatile￨e boolean￨e functionalMode￨e =￨e false￨e ;￨e public￨f TestPlan￨f (￨f )￨f {￨f }￨f public￨f TestPlan￨f (￨f String￨p name￨p )￨f {￨f }￨f private￨f Object￨f readResolve￨f (￨f )￨f {￨f }￨f public￨f void￨f prepareForPreCompile￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFunctionalMode￨f (￨f )￨f {￨f }￨f public￨f void￨f setUserDefinedVariables￨f (￨f Arguments￨p vars￨p )￨f {￨f }￨f public￨f JMeterProperty￨f getUserDefinedVariablesAsProperty￨f (￨f )￨f {￨f }￨f public￨f String￨f getBasedir￨f (￨f )￨f {￨f }￨f public￨f void￨f setBasedir￨f (￨f String￨p b￨p )￨f {￨f }￨f public￨f Arguments￨f getArguments￨f (￨f )￨f {￨f }￨f public￨f Map￨f <￨f String￨f ,￨f String￨f >￨f getUserDefinedVariables￨f (￨f )￨f {￨f }￨f private￨f Arguments￨f getVariables￨f (￨f )￨f {￨f }￨f public￨f void￨f setFunctionalMode￨f (￨f boolean￨p funcMode￨p )￨f {￨f }￨f public￨f static￨f boolean￨f getFunctionalMode￨f (￨f )￨f {￨f }￨f public￨f void￨f setSerialized￨f (￨f boolean￨p serializeTGs￨p )￨f {￨f }￨f public￨f void￨f setTestPlanClasspath￨f (￨f String￨p text￨p )￨f {￨f }￨f public￨f void￨f setTestPlanClasspathArray￨f (￨f String￨p [￨p ]￨p text￨p )￨f {￨f <START_BUG>￨b StringBuffer￨b cat￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c idx￨c =￨c 0￨c ;￨c idx￨c <￨c (￨c text￨c .￨c length￨c )￨c ;￨c idx￨c ++￨c )￨l {￨l if￨j (￨j idx￨c >￨c 0￨c )￨j {￨j cat￨e .￨e append￨e (￨e TestPlan￨e .￨e CLASSPATH_SEPARATOR￨e )￨e ;￨e }￨j cat￨e .￨e append￨e (￨e text￨e [￨e idx￨e ]￨e )￨e ;￨e }￨l this￨e .￨e setTestPlanClasspath￨e (￨e cat￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨f public￨f String￨f [￨f ]￨f getTestPlanClasspathArray￨f (￨f )￨f {￨f }￨f public￨f String￨f getTestPlanClasspath￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSerialized￨f (￨f )￨f {￨f }￨f public￨f void￨f addParameter￨f (￨f String￨p name￨p ,￨p String￨p value￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f addTestElement￨f (￨f TestElement￨p tg￨p )￨f {￨f }￨f public￨f void￨f addThreadGroup￨f (￨f ThreadGroup￨p group￨p )￨f {￨f }￨f public￨f void￨f testEnded￨f (￨f )￨f {￨f }￨f public￨f void￨f testEnded￨f (￨f String￨p host￨p )￨f {￨f }￨f public￨f void￨f testIterationStart￨f (￨f LoopIterationEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f testStarted￨f (￨f )￨f {￨f }￨f public￨f void￨f testStarted￨f (￨f String￨p host￨p )￨f {￨f }￨f }￨d
public￨d class￨d AboutFeaturesDialog￨d extends￨d ProductInfoDialog￨d {￨d private￨e static￨e final￨e int￨e TABLE_HEIGHT￨e =￨e 150￨e ;￨e private￨e static￨e final￨e int￨e INFO_HEIGHT￨e =￨e 100￨e ;￨e private￨e static￨e final￨e int￨e MORE_ID￨e =￨e (￨e IDialogConstants￨e .￨e CLIENT_ID￨e )￨e +￨e 1￨e ;￨e private￨e static￨e final￨e int￨e PLUGINS_ID￨e =￨e (￨e IDialogConstants￨e .￨e CLIENT_ID￨e )￨e +￨e 2￨e ;￨e private￨e static￨e final￨e int￨e COLUMNS_ID￨e =￨e (￨e IDialogConstants￨e .￨e CLIENT_ID￨e )￨e +￨e 3￨e ;￨e private￨e Table￨e table￨e ;￨e private￨e Label￨e imageLabel￨e ;￨e private￨e StyledText￨e text￨e ;￨e private￨e Composite￨e infoArea￨e ;￨e private￨e Map￨e cachedImages￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨f String￨f [￨f ]￨f columnTitles￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e String￨e productName￨e ;￨e private￨e AboutBundleGroupData￨e [￨e ]￨e bundleGroupInfos￨e ;￨e private￨e int￨e lastColumnChosen￨e =￨e 0￨e ;￨e private￨e boolean￨e reverseSort￨e =￨e false￨e ;￨e private￨e AboutBundleGroupData￨e lastSelection￨e =￨e null￨e ;￨e private￨e Button￨e moreButton￨e ;￨e private￨e Button￨e pluginsButton￨e ;￨e private￨e static￨e Map￨e featuresMap￨e ;￨e public￨f AboutFeaturesDialog￨f (￨f Shell￨p parentShell￨p ,￨p String￨p productName￨p ,￨p AboutBundleGroupData￨p [￨p ]￨p bundleGroupInfos￨p )￨f {￨f }￨f private￨f void￨f handleMoreInfoPressed￨f (￨f )￨f {￨f }￨f private￨f void￨f handlePluginInfoPressed￨f (￨f )￨f {￨f }￨f protected￨f void￨f buttonPressed￨f (￨f int￨p buttonId￨p )￨f {￨f }￨f private￨f void￨f handleColumnsPressed￨f (￨f )￨f {￨f }￨f protected￨f void￨f configureShell￨f (￨f Shell￨p newShell￨p )￨f {￨f }￨f protected￨f void￨f createButtonsForButtonBar￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f Control￨f createDialogArea￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createInfoArea￨f (￨f Composite￨p parent￨p )￨f {￨f Font￨e font￨e =￨e parent￨e .￨e getFont￨e (￨e )￨e ;￨e infoArea￨e =￨e new￨e Composite￨e (￨e parent￨e ,￨e SWT￨e .￨e NULL￨e )￨e ;￨e GridData￨e data￨e =￨e new￨e GridData￨e (￨e GridData￨e .￨e FILL￨e ,￨e GridData￨e .￨e FILL￨e ,￨e true￨e ,￨e true￨e )￨e ;￨e data￨e .￨e heightHint￨e =￨e convertVerticalDLUsToPixels￨e (￨e AboutFeaturesDialog￨e .￨e INFO_HEIGHT￨e )￨e ;￨e infoArea￨e .￨e setLayoutData￨e (￨e data￨e )￨e ;￨e GridLayout￨e layout￨e =￨e new￨e GridLayout￨e (￨e )￨e ;￨e layout￨e .￨e numColumns￨e =￨e 2￨e ;￨e infoArea￨e .￨e setLayout￨e (￨e layout￨e )￨e ;￨e imageLabel￨e =￨e new￨e Label￨e (￨e infoArea￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e data￨e =￨e new￨e GridData￨e (￨e GridData￨e .￨e FILL￨e ,￨e GridData￨e .￨e BEGINNING￨e ,￨e false￨e ,￨e false￨e )￨e ;￨e data￨e .￨e widthHint￨e =￨e 32￨e ;￨e data￨e .￨e heightHint￨e =￨e 32￨e ;￨e imageLabel￨e .￨e setLayoutData￨e (￨e data￨e )￨e ;￨e imageLabel￨e .￨e setFont￨e (￨e font￨e )￨e ;￨e <START_BUG>￨b text￨b =￨b new￨b StyledText￨b (￨b infoArea￨b ,￨b (￨b (￨b SWT￨b .￨b MULTI￨b )￨b |￨b (￨b SWT￨b .￨b READ_ONLY￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b text￨e .￨e setCaret￨e (￨e null￨e )￨e ;￨e text￨e .￨e setFont￨e (￨e parent￨e .￨e getFont￨e (￨e )￨e )￨e ;￨e data￨e =￨e new￨e GridData￨e (￨e GridData￨e .￨e FILL￨e ,￨e GridData￨e .￨e FILL￨e ,￨e true￨e ,￨e true￨e )￨e ;￨e text￨e .￨e setLayoutData￨e (￨e data￨e )￨e ;￨e text￨e .￨e setFont￨e (￨e font￨e )￨e ;￨e text￨e .￨e setCursor￨e (￨e null￨e )￨e ;￨e text￨e .￨e setBackground￨e (￨e infoArea￨e .￨e getBackground￨e (￨e )￨e )￨e ;￨e addListeners￨e (￨e text￨e )￨e ;￨e TableItem￨e [￨e ]￨e items￨e =￨e table￨e .￨e getSelection￨e (￨e )￨e ;￨e if￨j (￨j (￨c items￨c .￨c length￨c )￨c >￨c 0￨c )￨j {￨j updateInfoArea￨e (￨e (￨e (￨e AboutBundleGroupData￨e )￨e (￨e items￨e [￨e 0￨e ]￨e .￨e getData￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨f protected￨f void￨f createTable￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f )￨f {￨f }￨f private￨f void￨f updateButtons￨f (￨f AboutBundleGroupData￨p info￨p )￨f {￨f }￨f private￨f void￨f updateInfoArea￨f (￨f AboutBundleGroupData￨p info￨p )￨f {￨f }￨f public￨f void￨f setInitialSelection￨f (￨f AboutBundleGroupData￨p info￨p )￨f {￨f }￨f private￨f void￨f sort￨f (￨f int￨p column￨p )￨f {￨f }￨f private￨f void￨f refreshTable￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f [￨f ]￨f createRow￨f (￨f AboutBundleGroupData￨p info￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d UploadForm￨d extends￨d Form￨d {￨d Bytes￨e maxSize￨e =￨e Bytes￨e .￨e MAX￨e ;￨e public￨f UploadForm￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f UploadForm￨f (￨f final￨p String￨p id￨p ,￨p IFeedback￨p validationFeedback￨p )￨f {￨f }￨f public￨f UploadForm￨f (￨f final￨p String￨p id￨p ,￨p IModel￨p model￨p ,￨p IFeedback￨p feedback￨p )￨f {￨f }￨f public￨f void￨f process￨f (￨f )￨f {￨f final￨e HttpServletRequest￨e request￨e =￨e (￨e (￨e wicket￨e .￨e protocol￨e .￨e http￨e .￨e WebRequest￨e )￨e (￨e getRequest￨e (￨e )￨e )￨e )￨e .￨e getHttpServletRequest￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e MultipartWebRequest￨e multipartWebRequest￨e =￨e new￨e MultipartWebRequest￨e (￨e this￨e ,￨e request￨e )￨e ;￨e getRequestCycle￨e (￨e )￨e .￨e setRequest￨e (￨e multipartWebRequest￨e )￨e ;￨e <START_BUG>￨b super￨b .￨b onFormSubmitted￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f FileUploadException￨p e￨p )￨f {￨f final￨e HashMap￨e model￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e model￨e .￨e put￨e (￨e "exception"￨e ,￨e e￨e )￨e ;￨e model￨e .￨e put￨e (￨e "maxSize"￨e ,￨e maxSize￨e )￨e ;￨e if￨j (￨j e￨c instanceof￨c SizeLimitExceededException￨c )￨j {￨j final￨e String￨e defaultValue￨e =￨e "Upload<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>less<seq2seq4repair_space>than<seq2seq4repair_space>"￨e +￨e (￨e maxSize￨e )￨e ;￨e error￨e (￨e getString￨e (￨e (￨e (￨e getId￨e (￨e )￨e )￨e +￨e ".uploadTooLarge"￨e )￨e ,￨e Model￨e .￨e valueOf￨e (￨e model￨e )￨e ,￨e defaultValue￨e )￨e )￨e ;￨e }￨j else￨j {￨j final￨e String￨e defaultValue￨e =￨e "Upload<seq2seq4repair_space>failed:<seq2seq4repair_space>"￨e +￨e (￨e e￨e .￨e getLocalizedMessage￨e (￨e )￨e )￨e ;￨e error￨e (￨e getString￨e (￨e (￨e (￨e getId￨e (￨e )￨e )￨e +￨e ".uploadFailed"￨e )￨e ,￨e Model￨e .￨e valueOf￨e (￨e model￨e )￨e ,￨e defaultValue￨e )￨e )￨e ;￨e }￨j }￨f }￨f public￨f void￨f setMaxSize￨f (￨f final￨p Bytes￨p maxSize￨p )￨f {￨f }￨f protected￨f final￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f protected￨f abstract￨f void￨f onSubmit￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FloatDatatypeValidator￨d extends￨d AbstractNumericValidator￨d {￨d public￨f FloatDatatypeValidator￨f (￨f )￨f throws￨f InvalidDatatypeFacetException￨f (￨f )￨f {￨f }￨f public￨f FloatDatatypeValidator￨f (￨f DatatypeValidator￨f base￨f ,￨f Hashtable￨f facets￨f ,￨f boolean￨f derivedByList￨f )￨f throws￨f InvalidDatatypeFacetException￨f (￨f )￨f {￨f }￨f public￨f int￨f compare￨f (￨f String￨p value1￨p ,￨p String￨p value2￨p )￨f {￨f }￨f protected￨f void￨f assignAdditionalFacets￨f (￨f String￨f key￨f ,￨f Hashtable￨f facets￨f )￨f throws￨f InvalidDatatypeFacetException￨f (￨f )￨f {￨f }￨f protected￨f int￨f compareValues￨f (￨f Object￨p value1￨p ,￨p Object￨p value2￨p )￨f {￨f }￨f protected￨f void￨f setMaxInclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMinInclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMaxExclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMinExclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setEnumeration￨f (￨f Vector￨f enumeration￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f }￨f protected￨f String￨f getMaxInclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMinInclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMaxExclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMinExclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f void￨f checkContent￨f (￨f String￨f content￨f ,￨f Object￨f state￨f ,￨f Vector￨f enumeration￨f ,￨f boolean￨f asBase￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b this￨b .￨b fBaseValidator￨b )￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b (￨e (￨e FloatDatatypeValidator￨e )￨e (￨e fBaseValidator￨e )￨e )￨e .￨e checkContent￨e (￨e content￨e ,￨e state￨e ,￨e enumeration￨e ,￨e true￨e )￨e ;￨e if￨j (￨j (￨c (￨c fFacetsDefined￨c )￨c &￨c (￨c DatatypeValidator￨c .￨c FACET_PATTERN￨c )￨c )￨c !=￨c 0￨c )￨j {￨j if￨j (￨j (￨c (￨c fRegex￨c )￨c ==￨c null￨c )￨c ||￨c (￨c (￨c fRegex￨c .￨c matches￨c (￨c content￨c )￨c )￨c ==￨c false￨c )￨c )￨j {￨j throw￨e new￨e InvalidDatatypeValueException￨e (￨e (￨e (￨e (￨e "Value'"￨e +￨e content￨e )￨e +￨e "does<seq2seq4repair_space>not<seq2seq4repair_space>match<seq2seq4repair_space>regular<seq2seq4repair_space>expression<seq2seq4repair_space>facet"￨e )￨e +￨e (￨e fPattern￨e )￨e )￨e )￨e ;￨e }￨j }￨j if￨j (￨j asBase￨c )￨j {￨j return￨e ;￨e }￨j Float￨e f￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f f￨e =￨e FloatDatatypeValidator￨e .￨e fValueOf￨e (￨e content￨e )￨e ;￨e }￨f catch￨f (￨f NumberFormatException￨p nfe￨p )￨f {￨f String￨f msg￨f =￨f getErrorString￨f (￨f DatatypeMessageProvider￨f .￨f fgMessageKeys￨f [￨f DatatypeMessageProvider￨f .￨f NOT_FLOAT￨f ]￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e InvalidDatatypeValueException￨e (￨e msg￨e )￨e ;￨e }￨f if￨j (￨j enumeration￨c !=￨c null￨c )￨j {￨j int￨e size￨e =￨e enumeration￨e .￨e size￨e (￨e )￨e ;￨e Float￨e [￨e ]￨e enumFloats￨e =￨e new￨e Float￨e [￨e size￨e ]￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e try￨f (￨f )￨f {￨f for￨l (￨l ;￨c i￨c <￨c size￨c ;￨c i￨c ++￨c )￨l {￨l enumFloats￨e [￨e i￨e ]￨e =￨e FloatDatatypeValidator￨e .￨e fValueOf￨e (￨e (￨e (￨e String￨e )￨e (￨e enumeration￨e .￨e elementAt￨e (￨e i￨e )￨e )￨e )￨e )￨e ;￨e }￨l }￨f catch￨f (￨f NumberFormatException￨p nfe￨p )￨f {￨f String￨f msg￨f =￨f getErrorString￨f (￨f DatatypeMessageProvider￨f .￨f fgMessageKeys￨f [￨f DatatypeMessageProvider￨f .￨f INVALID_ENUM_VALUE￨f ]￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e InvalidDatatypeValueException￨e (￨e msg￨e )￨e ;￨e }￨f enumCheck￨e (￨e f￨e .￨e floatValue￨e (￨e )￨e ,￨e enumFloats￨e )￨e ;￨e }￨j boundsCheck￨e (￨e f￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c fFacetsDefined￨c )￨c &￨c (￨c DatatypeValidator￨c .￨c FACET_ENUMERATION￨c )￨c )￨c !=￨c 0￨c )￨c &&￨c (￨c (￨c fEnumeration￨c )￨c !=￨c null￨c )￨c )￨j {￨j enumCheck￨e (￨e f￨e .￨e floatValue￨e (￨e )￨e ,￨e (￨e (￨e Float￨e [￨e ]￨e )￨e (￨e fEnumeration￨e )￨e )￨e )￨e ;￨e }￨j }￨f protected￨f int￨f getInvalidFacetMsg￨f (￨f )￨f {￨f }￨f private￨f void￨f enumCheck￨f (￨f float￨f v￨f ,￨f Float￨f [￨f ]￨f enumFloats￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f }￨f private￨f static￨f Float￨f fValueOf￨f (￨f String￨f s￨f )￨f throws￨f NumberFormatException￨f (￨f )￨f {￨f }￨f private￨f int￨f compareFloats￨f (￨f float￨p f1￨p ,￨p float￨p f2￨p )￨f {￨f }￨f }￨d
public￨d class￨d Echo￨d extends￨d Task￨d {￨d protected￨e String￨e message￨e =￨e ""￨e ;￨e protected￨e File￨e file￨e =￨e null￨e ;￨e protected￨e boolean￨e append￨e =￨e false￨e ;￨e protected￨e int￨e logLevel￨e =￨e Project￨e .￨e MSG_WARN￨e ;￨e public￨f void￨f setAppend￨f (￨f boolean￨p append￨p )￨f {￨f }￨f public￨f void￨f setFile￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f void￨f setLevel￨f (￨f Echo￨p .￨p EchoLevel￨p echoLevel￨p )￨f {￨f }￨f public￨f void￨f setMessage￨f (￨f String￨p msg￨p )￨f {￨f }￨f public￨f void￨f addText￨f (￨f String￨f msg￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f <START_BUG>￨b message￨b +=￨b project￨b .￨b replaceProperties￨b (￨b msg￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d EchoLevel￨d extends￨d EnumeratedAttribute￨d {￨d public￨f String￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d SSTableExport￨d {￨d private￨e static￨e int￨e INPUT_FILE_BUFFER_SIZE￨e =￨e (￨e 8￨e *￨e 1024￨e )￨e *￨e 1024￨e ;￨e private￨e static￨e final￨e String￨e KEY_OPTION￨e =￨e "k"￨e ;￨e private￨e static￨e final￨e String￨e EXCLUDEKEY_OPTION￨e =￨e "x"￨e ;￨e private￨e static￨e final￨e String￨e ENUMERATEKEYS_OPTION￨e =￨e "e"￨e ;￨e private￨e static￨e Options￨e options￨e ;￨e private￨e static￨e CommandLine￨e cmd￨e ;￨e private￨f static￨f String￨f quote￨f (￨f String￨p val￨p )￨f {￨f }￨f private￨f static￨f String￨f asKey￨f (￨f String￨p val￨p )￨f {￨f }￨f @￨f Deprecated￨f private￨f static￨f String￨f asStr￨f (￨f byte￨p [￨p ]￨p val￨p )￨f {￨f }￨f private￨f static￨f String￨f serializeColumns￨f (￨f Collection￨p <￨p IColumn￨p >￨p cols￨p ,￨p AbstractType￨p comp￨p )￨f {￨f }￨f private￨f static￨f String￨f serializeRow￨f (￨f SSTableIdentityIterator￨f row￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f enumeratekeys￨f (￨f String￨f ssTableFile￨f ,￨f PrintStream￨f outs￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f IPartitioner￨e partitioner￨e =￨e StorageService￨e .￨e getPartitioner￨e (￨e )￨e ;￨e BufferedRandomAccessFile￨e input￨e =￨e new￨e BufferedRandomAccessFile￨e (￨e SSTable￨e .￨e indexFilename￨e (￨e ssTableFile￨e )￨e ,￨e "r"￨e )￨e ;￨e while￨l (￨l !￨c (￨c input￨c .￨c isEOF￨c (￨c )￨c )￨c )￨l {￨l <START_BUG>￨b DecoratedKey￨b decoratedKey￨b =￨b partitioner￨b .￨b convertFromDiskFormat￨b (￨b input￨b .￨b readUTF￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b long￨e dataPosition￨e =￨e input￨e .￨e readLong￨e (￨e )￨e ;￨e outs￨e .￨e println￨e (￨e SSTableExport￨e .￨e asStr￨e (￨e decoratedKey￨e .￨e key￨e )￨e )￨e ;￨e }￨l outs￨e .￨e flush￨e (￨e )￨e ;￨e }￨f public￨f static￨f void￨f enumeratekeys￨f (￨f String￨f ssTableFile￨f ,￨f String￨f outFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f export￨f (￨f String￨f ssTableFile￨f ,￨f PrintStream￨f outs￨f ,￨f String￨f [￨f ]￨f keys￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f export￨f (￨f String￨f ssTableFile￨f ,￨f String￨f outFile￨f ,￨f String￨f [￨f ]￨f keys￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f static￨f void￨f export￨f (￨f SSTableReader￨f reader￨f ,￨f PrintStream￨f outs￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f export￨f (￨f String￨f ssTableFile￨f ,￨f PrintStream￨f outs￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f export￨f (￨f String￨f ssTableFile￨f ,￨f String￨f outFile￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f export￨f (￨f String￨f ssTableFile￨f ,￨f String￨f [￨f ]￨f excludes￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DomainUtil￨d {￨d public￨f static￨f void￨f writeResponse￨f (￨f final￨p HttpServerExchange￨p exchange￨p ,￨p final￨p int￨p status￨p ,￨p ModelNode￨p response￨p ,￨p OperationParameter￨p operationParameter￨p )￨f {￨f }￨f private￨f static￨f int￨f getResponseLength￨f (￨f final￨f ModelNode￨f modelNode￨f ,￨f final￨f OperationParameter￨f operationParameter￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f writeCacheHeaders￨f (￨f final￨p HttpServerExchange￨p exchange￨p ,￨p final￨p int￨p status￨p ,￨p final￨p OperationParameter￨p operationParameter￨p )￨f {￨f }￨f public￨f static￨f String￨f constructUrl￨f (￨f final￨p HttpServerExchange￨p exchange￨p ,￨p final￨p String￨p path￨p )￨f {￨f final￨e HeaderMap￨e headers￨e =￨e exchange￨e .￨e getRequestHeaders￨e (￨e )￨e ;￨e String￨e host￨e =￨e headers￨e .￨e getFirst￨e (￨e HOST￨e )￨e ;￨e <START_BUG>￨b String￨b protocol￨b =￨b (￨b (￨b exchange￨b .￨b getConnection￨b (￨b )￨b .￨b getSslSession￨b (￨b )￨b )￨b !=￨b null￨b )￨b ?￨b "https"￨b :￨b "http"￨b ;￨b <END_BUG>￨b return￨e (￨e (￨e protocol￨e +￨e "://"￨e )￨e +￨e host￨e )￨e +￨e path￨e ;￨e }￨f }￨d
final￨d class￨d ComponentEventSender￨d implements￨d IEventSource￨d {￨d private￨e final￨e Component￨e source￨e ;￨e private￨e final￨e IEventDispatcher￨e dispatcher￨e ;￨e public￨f ComponentEventSender￨f (￨f Component￨p source￨p ,￨p IEventDispatcher￨p dispatcher￨p )￨f {￨f }￨f public￨f <￨f T￨f >￨f void￨f send￨f (￨f IEventSink￨p sink￨p ,￨p Broadcast￨p type￨p ,￨p T￨p payload￨p )￨f {￨f }￨f private￨f void￨f breadth￨f (￨f final￨p ComponentEvent￨p <￨p ?￨p >￨p event￨p )￨f {￨f IEventSink￨e sink￨e =￨e event￨e .￨e getSink￨e (￨e )￨e ;￨e boolean￨e targetsApplication￨e =￨e sink￨e instanceof￨e Application￨e ;￨e boolean￨e targetsSession￨e =￨e targetsApplication￨e ||￨e (￨e sink￨e instanceof￨e Session￨e )￨e ;￨e boolean￨e targetsCycle￨e =￨e targetsSession￨e ||￨e (￨e sink￨e instanceof￨e RequestCycle￨e )￨e ;￨e boolean￨e targetsComponent￨e =￨e sink￨e instanceof￨e Component￨e ;￨e if￨j (￨j (￨c !￨c targetsComponent￨c )￨c &&￨c (￨c !￨c targetsCycle￨c )￨c )￨j {￨j dispatcher￨e .￨e dispatchEvent￨e (￨e sink￨e ,￨e event￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j targetsApplication￨c )￨j {￨j dispatcher￨e .￨e dispatchEvent￨e (￨e source￨e .￨e getApplication￨e (￨e )￨e ,￨e event￨e )￨e ;￨e }￨j if￨j (￨j event￨c .￨c isStop￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j targetsSession￨c )￨j {￨j dispatcher￨e .￨e dispatchEvent￨e (￨e source￨e .￨e getSession￨e (￨e )￨e ,￨e event￨e )￨e ;￨e }￨j if￨j (￨j event￨c .￨c isStop￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j targetsCycle￨c )￨j {￨j dispatcher￨e .￨e dispatchEvent￨e (￨e source￨e .￨e getRequestCycle￨e (￨e )￨e ,￨e event￨e )￨e ;￨e }￨j if￨j (￨j event￨c .￨c isStop￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j <START_BUG>￨b Component￨b cursor￨b =￨b (￨b targetsCycle￨b )￨b ?￨b cursor￨b =￨b source￨b .￨b getPage￨b (￨b )￨b :￨b (￨b (￨b Component￨b )￨b (￨b sink￨b )￨b )￨b ;￨b <END_BUG>￨b dispatcher￨e .￨e dispatchEvent￨e (￨e cursor￨e ,￨e event￨e )￨e ;￨e if￨j (￨j event￨c .￨c isStop￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j event￨e .￨e resetShallow￨e (￨e )￨e ;￨e if￨j (￨j cursor￨c instanceof￨c MarkupContainer￨c )￨j {￨j (￨e (￨e MarkupContainer￨e )￨e (￨e cursor￨e )￨e )￨e .￨e visitChildren￨e (￨e new￨e ComponentEventSender￨e .￨e ComponentEventVisitor￨e (￨e event￨e ,￨e dispatcher￨e )￨e )￨e ;￨e }￨j }￨f private￨f void￨f depth￨f (￨f final￨p ComponentEvent￨p <￨p ?￨p >￨p event￨p )￨f {￨f }￨f private￨f void￨f bubble￨f (￨f ComponentEvent￨p <￨p ?￨p >￨p event￨p )￨f {￨f }￨f private￨d static￨d class￨d ComponentEventVisitor￨d implements￨d IVisitor￨d <￨d Component￨d ,￨d Void￨d >￨d {￨d private￨e final￨e ComponentEvent￨e <￨e ?￨e >￨e e￨e ;￨e private￨e final￨e IEventDispatcher￨e dispatcher￨e ;￨e private￨f ComponentEventVisitor￨f (￨f ComponentEvent￨p <￨p ?￨p >￨p event￨p ,￨p IEventDispatcher￨p dispatcher￨p )￨f {￨f }￨f public￨f void￨f component￨f (￨f Component￨p object￨p ,￨p IVisit￨p <￨p Void￨p >￨p visit￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ModelBean￨d implements￨d Serializable￨d {￨d private￨e String￨e property1￨e ;￨e private￨e String￨e property2￨e ;￨e private￨e String￨e property3￨e ;￨e private￨e String￨e property4￨e ;￨e private￨e String￨e property5￨e ;￨e private￨e String￨e property6￨e ;￨e public￨f ModelBean￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f String￨f getProperty1￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty1￨f (￨f String￨p property1￨p )￨f {￨f }￨f public￨f String￨f getProperty2￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty2￨f (￨f String￨p property2￨p )￨f {￨f }￨f public￨f String￨f getProperty3￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty3￨f (￨f String￨p property3￨p )￨f {￨f }￨f public￨f String￨f getProperty4￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty4￨f (￨f String￨p property4￨p )￨f {￨f }￨f public￨f String￨f getProperty5￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty5￨f (￨f String￨p property5￨p )￨f {￨f }￨f public￨f String￨f getProperty6￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty6￨f (￨f String￨p property6￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b getProperty1￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d Version￨d {￨d private￨f Version￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f id￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "4.5-SNAPSHOT-20080602-1631"￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f }￨d
class￨d MethodVerifier15￨d extends￨d MethodVerifier￨d {￨d MethodVerifier15￨f (￨f LookupEnvironment￨p environment￨p )￨f {￨f }￨f boolean￨f areMethodsEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p substituteTwo￨p )￨f {￨f }￨f boolean￨f areParametersEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f areReturnTypesEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p substituteTwo￨p )￨f {￨f }￨f boolean￨f areTypesEqual￨f (￨f TypeBinding￨p one￨p ,￨p TypeBinding￨p two￨p )￨f {￨f }￨f boolean￨f canSkipInheritedMethods￨f (￨f )￨f {￨f }￨f boolean￨f canSkipInheritedMethods￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f void￨f checkConcreteInheritedMethod￨f (￨f MethodBinding￨p concreteMethod￨p ,￨p MethodBinding￨p [￨p ]￨p abstractMethods￨p )￨f {￨f }￨f void￨f checkForBridgeMethod￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p [￨p ]￨p otherInheritedMethods￨p )￨f {￨f }￨f void￨f checkForInheritedNameClash￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p otherInheritedMethod￨p )￨f {￨f }￨f void￨f checkForNameClash￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f void￨f checkInheritedMethods￨f (￨f MethodBinding￨p [￨p ]￨p methods￨p ,￨p int￨p length￨p )￨f {￨f }￨f void￨f checkTypeVariableMethods￨f (￨f )￨f {￨f }￨f MethodBinding￨f computeSubstituteMethod￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p currentMethod￨p )￨f {￨f }￨f boolean￨f detectInheritedMethodClash￨f (￨f MethodBinding￨p inherited￨p ,￨p MethodBinding￨p otherInherited￨p )￨f {￨f }￨f boolean￨f detectNameClash￨f (￨f MethodBinding￨p current￨p ,￨p MethodBinding￨p inherited￨p )￨f {￨f }￨f public￨f boolean￨f doesMethodOverride￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f doParametersClash￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p substituteTwo￨p )￨f {￨f }￨f public￨f boolean￨f doReturnTypesCollide￨f (￨f MethodBinding￨p method￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f boolean￨f doTypeVariablesClash￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p substituteTwo￨p )￨f {￨f <START_BUG>￨b return￨b (￨b (￨b one￨b .￨b typeVariables￨b .￨b length￨b )￨b >￨b 0￨b )￨b &&￨b (￨b !￨b (￨b one￨b .￨b areTypeVariableErasuresEqual￨b (￨b substituteTwo￨b .￨b original￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f boolean￨f isInterfaceMethodImplemented￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p existingMethod￨p ,￨p ReferenceBinding￨p superType￨p )￨f {￨f }￨f boolean￨f mustImplementAbstractMethod￨f (￨f ReferenceBinding￨p declaringClass￨p )￨f {￨f }￨f void￨f verify￨f (￨f SourceTypeBinding￨p someType￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d JavaElement￨d extends￨d PlatformObject￨d implements￨d IJavaElement￨d {￨d public￨e static￨e final￨e char￨e JEM_JAVAPROJECT￨e =￨e '='￨e ;￨e public￨e static￨e final￨e char￨e JEM_PACKAGEFRAGMENTROOT￨e =￨e Path￨e .￨e SEPARATOR￨e ;￨e public￨e static￨e final￨e char￨e JEM_PACKAGEFRAGMENT￨e =￨e '<'￨e ;￨e public￨e static￨e final￨e char￨e JEM_FIELD￨e =￨e '^'￨e ;￨e public￨e static￨e final￨e char￨e JEM_METHOD￨e =￨e '~'￨e ;￨e public￨e static￨e final￨e char￨e JEM_INITIALIZER￨e =￨e '|'￨e ;￨e public￨e static￨e final￨e char￨e JEM_COMPILATIONUNIT￨e =￨e '{'￨e ;￨e public￨e static￨e final￨e char￨e JEM_CLASSFILE￨e =￨e '('￨e ;￨e public￨e static￨e final￨e char￨e JEM_TYPE￨e =￨e '['￨e ;￨e public￨e static￨e final￨e char￨e JEM_PACKAGEDECLARATION￨e =￨e '%'￨e ;￨e public￨e static￨e final￨e char￨e JEM_IMPORTDECLARATION￨e =￨e '#'￨e ;￨e protected￨e int￨e fOccurrenceCount￨e =￨e 1￨e ;￨e protected￨e int￨e fLEType￨e =￨e 0￨e ;￨e protected￨e IJavaElement￨e fParent￨e ;￨e protected￨e String￨e fName￨e ;￨e protected￨e static￨e JavaModelManager￨e fgJavaModelManager￨e =￨e JavaModelManager￨e .￨e getJavaModelManager￨e (￨e )￨e ;￨e protected￨e static￨e final￨e Object￨e NO_INFO￨e =￨e new￨e Object￨e (￨e )￨e ;￨e protected￨f JavaElement￨f (￨f int￨f type￨f ,￨f IJavaElement￨f parent￨f ,￨f String￨f name￨f )￨f throws￨f IllegalArgumentException￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f Object￨e info￨e =￨e JavaElement￨e .￨e fgJavaModelManager￨e .￨e peekAtInfo￨e (￨e this￨e )￨e ;￨e if￨j (￨j info￨c !=￨c null￨c )￨j {￨j if￨j (￨j (￨c JavaModelManager￨c .￨c VERBOSE￨c )￨c &&￨c (￨c (￨c this￨c )￨c instanceof￨c JavaModel￨c )￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e "CLOSING<seq2seq4repair_space>Java<seq2seq4repair_space>Model"￨e )￨e ;￨e JavaModelManager￨e .￨e VERBOSE￨e =￨e false￨e ;￨e }￨j if￨j (￨j (￨c this￨c )￨c instanceof￨c IParent￨c )￨j {￨j IJavaElement￨e [￨e ]￨e children￨e =￨e (￨e (￨e JavaElementInfo￨e )￨e (￨e info￨e )￨e )￨e .￨e getChildren￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c size￨c =￨c children￨c .￨c length￨c ;￨c i￨c <￨c size￨c ;￨c ++￨c i￨c )￨l {￨l JavaElement￨e child￨e =￨e (￨e (￨e JavaElement￨e )￨e (￨e children￨e [￨e i￨e ]￨e )￨e )￨e ;￨e child￨e .￨e close￨e (￨e )￨e ;￨e }￨l }￨j closing￨e (￨e info￨e )￨e ;￨e JavaElement￨e .￨e fgJavaModelManager￨e .￨e removeInfo￨e (￨e this￨e )￨e ;￨e if￨j (￨j JavaModelManager￨c .￨c VERBOSE￨c )￨j {￨j <START_BUG>￨b System￨b .￨b out￨b .￨b println￨b (￨b (￨b (￨b "-><seq2seq4repair_space>Package<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨b +￨b (￨b JavaElement￨b .￨b fgJavaModelManager￨b .￨b cache￨b .￨b pkgFillingRate￨b (￨b )￨b )￨b )￨b +￨b "%"￨b )￨b )￨b ;￨b <END_BUG>￨b System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e "-><seq2seq4repair_space>Openable<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨e +￨e (￨e JavaElement￨e .￨e fgJavaModelManager￨e .￨e cache￨e .￨e openableFillingRate￨e (￨e )￨e )￨e )￨e +￨e "%"￨e )￨e )￨e ;￨e }￨j }￨j }￨f protected￨f void￨f closing￨f (￨f Object￨f info￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f protected￨f boolean￨f equalsDOMNode￨f (￨f IDOMNode￨f node￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f exists￨f (￨f )￨f {￨f }￨f public￨f IDOMNode￨f findNode￨f (￨f IDOMCompilationUnit￨p dom￨p )￨f {￨f }￨f protected￨f IDOMNode￨f followPath￨f (￨f ArrayList￨p path￨p ,￨p int￨p position￨p ,￨p IDOMNode￨p node￨p )￨f {￨f }￨f public￨f IJavaElement￨f getAncestor￨f (￨f int￨p ancestorType￨p )￨f {￨f }￨f public￨f IJavaElement￨f [￨f ]￨f getChildren￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f ArrayList￨f getChildrenOfType￨f (￨f int￨f type￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IClassFile￨f getClassFile￨f (￨f )￨f {￨f }￨f public￨f ICompilationUnit￨f getCompilationUnit￨f (￨f )￨f {￨f }￨f public￨f JavaElementInfo￨f getElementInfo￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f String￨f getElementName￨f (￨f )￨f {￨f }￨f public￨f int￨f getElementType￨f (￨f )￨f {￨f }￨f public￨f String￨f getHandleIdentifier￨f (￨f )￨f {￨f }￨f public￨f String￨f getHandleMemento￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f char￨f getHandleMementoDelimiter￨f (￨f )￨f {￨f }￨f public￨f IJavaModel￨f getJavaModel￨f (￨f )￨f {￨f }￨f public￨f JavaModelManager￨f getJavaModelManager￨f (￨f )￨f {￨f }￨f public￨f IJavaProject￨f getJavaProject￨f (￨f )￨f {￨f }￨f protected￨f int￨f getOccurrenceCount￨f (￨f )￨f {￨f }￨f public￨f IOpenable￨f getOpenable￨f (￨f )￨f {￨f }￨f public￨f IOpenable￨f getOpenableParent￨f (￨f )￨f {￨f }￨f public￨f IJavaElement￨f getParent￨f (￨f )￨f {￨f }￨f public￨f Object￨f getRawInfo￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f IJavaElement￨f getSourceElementAt￨f (￨f int￨f position￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f SourceMapper￨f getSourceMapper￨f (￨f )￨f {￨f }￨f public￨f abstract￨f IResource￨f getUnderlyingResource￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IWorkspace￨f getWorkspace￨f (￨f )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isAncestorOf￨f (￨f IJavaElement￨p e￨p )￨f {￨f }￨f public￨f boolean￨f isReadOnly￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isStructureKnown￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f JavaModelException￨f newNotPresentException￨f (￨f )￨f {￨f }￨f public￨f void￨f offsetSourceEndAndChildren￨f (￨f int￨p amount￨p ,￨p IJavaElement￨p child￨p )￨f {￨f }￨f public￨f void￨f offsetSourceRange￨f (￨f int￨p amount￨p )￨f {￨f }￨f protected￨f void￨f openHierarchy￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f opening￨f (￨f Object￨p info￨p )￨f {￨f }￨f public￨f String￨f readableName￨f (￨f )￨f {￨f }￨f protected￨f void￨f removeInfo￨f (￨f )￨f {￨f }￨f public￨f abstract￨f IJavaElement￨f rootedAt￨f (￨f IJavaProject￨p project￨p )￨f {￨f }￨f protected￨f void￨f runOperation￨f (￨f JavaModelOperation￨f operation￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f setOccurrenceCount￨f (￨f int￨p count￨p )￨f {￨f }￨f protected￨f String￨f tabString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f String￨f toDebugString￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f protected￨f void￨f toString￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p )￨f {￨f }￨f public￨f String￨f toStringWithAncestors￨f (￨f )￨f {￨f }￨f protected￨f void￨f toStringAncestors￨f (￨f StringBuffer￨p buffer￨p )￨f {￨f }￨f protected￨f void￨f toStringChildren￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p ,￨p Object￨p info￨p )￨f {￨f }￨f public￨f Object￨f toStringInfo￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p )￨f {￨f }￨f protected￨f void￨f toStringInfo￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p ,￨p Object￨p info￨p )￨f {￨f }￨f public￨f void￨f triggerSourceEndOffset￨f (￨f int￨p amount￨p ,￨p int￨p nameStart￨p ,￨p int￨p nameEnd￨p )￨f {￨f }￨f public￨f void￨f triggerSourceRangeOffset￨f (￨f int￨p amount￨p ,￨p int￨p nameStart￨p ,￨p int￨p nameEnd￨p )￨f {￨f }￨f }￨d
public￨d class￨d CastExpression￨d extends￨d Expression￨d {￨d public￨e Expression￨e expression￨e ;￨e public￨e Expression￨e type￨e ;￨e public￨e TypeBinding￨e expectedType￨e ;￨e public￨f CastExpression￨f (￨f Expression￨p expression￨p ,￨p Expression￨p type￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForAssignedCast￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p expectedType￨p ,￨p CastExpression￨p rhs￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForEnclosingInstanceCast￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p enclosingInstance￨p ,￨p TypeBinding￨p enclosingInstanceType￨p ,￨p TypeBinding￨p memberType￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCast￨f (￨f BlockScope￨p scope￨p ,￨p int￨p operator￨p ,￨p int￨p operatorSignature￨p ,￨p Expression￨p expression￨p ,￨p int￨p expressionTypeId￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCasts￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p receiver￨p ,￨p TypeBinding￨p receiverType￨p ,￨p MethodBinding￨p binding￨p ,￨p Expression￨p [￨p ]￨p arguments￨p ,￨p TypeBinding￨p [￨p ]￨p argumentTypes￨p ,￨p final￨p InvocationSite￨p invocationSite￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCasts￨f (￨f BlockScope￨p scope￨p ,￨p int￨p operator￨p ,￨p int￨p operatorSignature￨p ,￨p Expression￨p left￨p ,￨p int￨p leftTypeId￨p ,￨p boolean￨p leftIsCast￨p ,￨p Expression￨p right￨p ,￨p int￨p rightTypeId￨p ,￨p boolean￨p rightIsCast￨p )￨f {￨f }￨f private￨f static￨f void￨f checkAlternateBinding￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p receiver￨p ,￨p TypeBinding￨p receiverType￨p ,￨p MethodBinding￨p binding￨p ,￨p Expression￨p [￨p ]￨p arguments￨p ,￨p TypeBinding￨p [￨p ]￨p originalArgumentTypes￨p ,￨p TypeBinding￨p [￨p ]￨p alternateArgumentTypes￨p ,￨p final￨p InvocationSite￨p invocationSite￨p )￨f {￨f }￨f public￨f boolean￨f checkUnsafeCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p TypeBinding￨p match￨p ,￨p boolean￨p isNarrowing￨p )￨f {￨f if￨j (￨j match￨c ==￨c castType￨c )￨j {￨j if￨j (￨j (￨c !￨c isNarrowing￨c )￨c &&￨c (￨c match￨c ==￨c (￨c this￨c .￨c resolvedType￨c .￨c leafComponentType￨c (￨c )￨c )￨c )￨c )￨j {￨j tagAsUnnecessaryCast￨e (￨e scope￨e ,￨e castType￨e )￨e ;￨e }￨j return￨e true￨e ;￨e }￨j if￨j (￨j match￨c !=￨c null￨c )￨j {￨j if￨j (￨j isNarrowing￨c ?￨c checkProvablyDistinctTypes￨c (￨c scope￨c ,￨c match￨c ,￨c expressionType￨c ,￨c 0￨c )￨c :￨c checkProvablyDistinctTypes￨c (￨c scope￨c ,￨c castType￨c ,￨c match￨c ,￨c 0￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j }￨j switch￨s (￨s castType￨c .￨c kind￨c (￨c )￨c )￨s {￨s case￨c Binding￨c .￨c PARAMETERIZED_TYPE￨c :￨c if￨j (￨j castType￨c .￨c isBoundParameterizedType￨c (￨c )￨c )￨j {￨j if￨j (￨j match￨c ==￨c null￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨j switch￨s (￨s match￨c .￨c kind￨c (￨c )￨c )￨s {￨s }￨s }￨j case￨c Binding￨c .￨c PARAMETERIZED_TYPE￨c :￨c if￨j (￨j isNarrowing￨c )￨j {￨j if￨j (￨j (￨c expressionType￨c .￨c isRawType￨c (￨c )￨c )￨c ||￨c (￨c !￨c (￨c expressionType￨c .￨c isEquivalentTo￨c (￨c match￨c )￨c )￨c )￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨j TypeBinding￨e genericCastType￨e =￨e castType￨e .￨e erasure￨e (￨e )￨e ;￨e <START_BUG>￨b TypeBinding￨b genericMatch￨b =￨b genericCastType￨b .￨b findSuperTypeWithSameErasure￨b (￨b expressionType￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j genericMatch￨c ==￨c match￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e }￨j return￨e true￨e ;￨e }￨j else￨j {￨j if￨j (￨j !￨c (￨c match￨c .￨c isEquivalentTo￨c (￨c castType￨c )￨c )￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨j }￨j break￨e ;￨e case￨c Binding￨c .￨c RAW_TYPE￨c :￨c this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e default￨c :￨c if￨j (￨j isNarrowing￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨j break￨e ;￨e }￨e }￨e break￨e ;￨e case￨c Binding￨c .￨c ARRAY_TYPE￨c :￨c TypeBinding￨e leafType￨e =￨e castType￨e .￨e leafComponentType￨e (￨e )￨e ;￨e if￨j (￨j isNarrowing￨c &&￨c (￨c (￨c leafType￨c .￨c isBoundParameterizedType￨c (￨c )￨c )￨c ||￨c (￨c leafType￨c .￨c isTypeVariable￨c (￨c )￨c )￨c )￨c )￨j {￨j this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c TYPE_PARAMETER￨c :￨c this￨e .￨e bits￨e |=￨e ASTNode￨e .￨e UnsafeCast￨e ;￨e return￨e true￨e ;￨e }￨s if￨j (￨j (￨c !￨c isNarrowing￨c )￨c &&￨c (￨c match￨c ==￨c (￨c this￨c .￨c resolvedType￨c .￨c leafComponentType￨c (￨c )￨c )￨c )￨c )￨j {￨j tagAsUnnecessaryCast￨e (￨e scope￨e ,￨e castType￨e )￨e ;￨e }￨j return￨e true￨e ;￨e }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f Expression￨f innermostCastedExpression￨f (￨f )￨f {￨f }￨f public￨f LocalVariableBinding￨f localVariableBinding￨f (￨f )￨f {￨f }￨f public￨f int￨f nullStatus￨f (￨f FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f Constant￨f optimizedBooleanConstant￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f setExpectedType￨f (￨f TypeBinding￨p expectedType￨p )￨f {￨f }￨f private￨f boolean￨f isIndirectlyUsed￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsNeedCheckCast￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsUnnecessaryCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f }￨d
public￨d class￨d PanelTest￨d extends￨d WicketTestCase￨d {￨d public￨f PanelTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f testRenderHomePage_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f boolean￨e hit￨e =￨e false￨e ;￨e try￨f (￨f )￨f {￨f executeTest￨e (￨e PanelPage_1￨e .￨e class￨e ,￨e "Dummy.html"￨e )￨e ;￨e }￨f catch￨f (￨f MarkupException￨p mex￨p )￨f {￨f hit￨e =￨e true￨e ;￨e assertNotNull￨e (￨e mex￨e .￨e getMarkupStream￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b assertTrue￨b (￨b mex￨b .￨b getMessage￨b (￨b )￨b .￨b contains￨b (￨b "Expected<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>for<seq2seq4repair_space>"￨b )￨b )￨b ;￨b <END_BUG>￨b assertTrue￨e (￨e mex￨e .￨e getMessage￨e (￨e )￨e .￨e contains￨e (￨e "SimplePanel_1.html"￨e )￨e )￨e ;￨e }￨f assertTrue￨e (￨e "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨e ,￨e hit￨e )￨e ;￨e }￨f public￨f void￨f testRenderHomePage_2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanel3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanel4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_5￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_6￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testPanelWithAttributeModifier￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_7￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testInlinePanel_8￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testStartPanel￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DomainServerCommunicationServices￨d implements￨d Serializable￨d ,￨d ServiceActivator￨d {￨d private￨e static￨e final￨e OptionMap￨e DEFAULTS￨e =￨e OptionMap￨e .￨e create￨e (￨e RECEIVE_WINDOW_SIZE￨e ,￨e WINDOW_SIZE￨e )￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1593964083902839384L￨e ;￨e private￨e static￨e volatile￨e int￨e initialOperationID￨e ;￨e private￨e final￨e ModelNode￨e endpointConfig￨e ;￨e private￨e final￨e InetSocketAddress￨e managementSocket￨e ;￨e private￨e final￨e String￨e serverName￨e ;￨e private￨e final￨e String￨e serverProcessName￨e ;￨e private￨e final￨e byte￨e [￨e ]￨e authKey￨e ;￨e private￨e final￨e boolean￨e managementSubsystemEndpoint￨e ;￨e DomainServerCommunicationServices￨f (￨f ModelNode￨p endpointConfig￨p ,￨p InetSocketAddress￨p managementSocket￨p ,￨p String￨p serverName￨p ,￨p String￨p serverProcessName￨p ,￨p byte￨p [￨p ]￨p authKey￨p ,￨p boolean￨p managementSubsystemEndpoint￨p )￨f {￨f }￨f static￨f void￨f updateOperationID￨f (￨f final￨p int￨p operationID￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f activate￨f (￨f final￨f ServiceActivatorContext￨f serviceActivatorContext￨f )￨f throws￨f ServiceRegistryException￨f (￨f )￨f {￨f final￨e ServiceTarget￨e serviceTarget￨e =￨e serviceActivatorContext￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e final￨e ServiceName￨e endpointName￨e =￨e (￨e managementSubsystemEndpoint￨e )￨e ?￨e RemotingServices￨e .￨e SUBSYSTEM_ENDPOINT￨e :￨e ManagementRemotingServices￨e .￨e MANAGEMENT_ENDPOINT￨e ;￨e final￨e EndpointService￨e .￨e EndpointType￨e endpointType￨e =￨e (￨e managementSubsystemEndpoint￨e )￨e ?￨e EndpointType￨e .￨e SUBSYSTEM￨e :￨e EndpointType￨e .￨e MANAGEMENT￨e ;￨e try￨f (￨f )￨f {￨f @￨e SuppressWarnings￨e (￨e "deprecation"￨e )￨e final￨e OptionMap￨e options￨e =￨e EndpointConfigFactory￨e .￨e create￨e (￨e DEFAULT￨e ,￨e endpointConfig￨e ,￨e DomainServerCommunicationServices￨e .￨e DEFAULTS￨e )￨e ;￨e <START_BUG>￨b ManagementRemotingServices￨b .￨b installRemotingManagementEndpoint￨b (￨b serviceTarget￨b ,￨b endpointName￨b ,￨b WildFlySecurityManager￨b .￨b getPropertyPrivileged￨b (￨b NODE_NAME￨b ,￨b null￨b )￨b ,￨b endpointType￨b ,￨b options￨b ,￨b null￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b final￨e int￨e port￨e =￨e managementSocket￨e .￨e getPort￨e (￨e )￨e ;￨e final￨e String￨e host￨e =￨e managementSocket￨e .￨e getAddress￨e (￨e )￨e .￨e getHostAddress￨e (￨e )￨e ;￨e HostControllerConnectionService￨e service￨e =￨e new￨e HostControllerConnectionService￨e (￨e host￨e ,￨e port￨e ,￨e serverName￨e ,￨e serverProcessName￨e ,￨e authKey￨e ,￨e DomainServerCommunicationServices￨e .￨e initialOperationID￨e ,￨e managementSubsystemEndpoint￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e SERVICE_NAME￨e ,￨e service￨e )￨e .￨e addDependency￨e (￨e endpointName￨e ,￨e Endpoint￨e .￨e class￨e ,￨e service￨e .￨e getEndpointInjector￨e (￨e )￨e )￨e .￨e addDependency￨e (￨e ControlledProcessStateService￨e .￨e SERVICE_NAME￨e ,￨e ControlledProcessStateService￨e .￨e class￨e ,￨e service￨e .￨e getProcessStateServiceInjectedValue￨e (￨e )￨e )￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e }￨f catch￨f (￨f OperationFailedException￨p e￨p )￨f {￨f throw￨e new￨e ServiceRegistryException￨e (￨e e￨e )￨e ;￨e }￨f }￨f public￨f static￨f ServiceActivator￨f create￨f (￨f final￨p ModelNode￨p endpointConfig￨p ,￨p final￨p InetSocketAddress￨p managementSocket￨p ,￨p final￨p String￨p serverName￨p ,￨p final￨p String￨p serverProcessName￨p ,￨p final￨p byte￨p [￨p ]￨p authKey￨p ,￨p final￨p boolean￨p managementSubsystemEndpoint￨p )￨f {￨f }￨f public￨f interface￨f OperationIDUpdater￨f (￨f )￨f {￨f void￨f updateOperationID￨f (￨f int￨p operationID￨p )￨f {￨f }￨f }￨f }￨d
public￨d class￨d Base64￨d {￨d private￨f static￨f final￨f char￨f [￨f ]￨f intToBase64￨f =￨f new￨f char￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f final￨f byte￨f [￨f ]￨f base64ToInt￨f =￨f new￨f byte￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f static￨f String￨f byteArrayToBase64￨f (￨f byte￨p [￨p ]￨p a￨p ,￨p int￨p offset￨p ,￨p int￨p len￨p )￨f {￨f int￨e aLen￨e =￨e len￨e ;￨e int￨e numFullGroups￨e =￨e aLen￨e /￨e 3￨e ;￨e int￨e numBytesInPartialGroup￨e =￨e aLen￨e -￨e (￨e 3￨e *￨e numFullGroups￨e )￨e ;￨e int￨e resultLen￨e =￨e 4￨e *￨e (￨e (￨e aLen￨e +￨e 2￨e )￨e /￨e 3￨e )￨e ;￨e <START_BUG>￨b StringBuffer￨b result￨b =￨b new￨b StringBuffer￨b (￨b resultLen￨b )￨b ;￨b <END_BUG>￨b char￨e [￨e ]￨e intToAlpha￨e =￨e Base64￨e .￨e intToBase64￨e ;￨e int￨e inCursor￨e =￨e offset￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c numFullGroups￨c ;￨c i￨c ++￨c )￨l {￨l int￨e byte0￨e =￨e (￨e a￨e [￨e (￨e inCursor￨e ++￨e )￨e ]￨e )￨e &￨e 255￨e ;￨e int￨e byte1￨e =￨e (￨e a￨e [￨e (￨e inCursor￨e ++￨e )￨e ]￨e )￨e &￨e 255￨e ;￨e int￨e byte2￨e =￨e (￨e a￨e [￨e (￨e inCursor￨e ++￨e )￨e ]￨e )￨e &￨e 255￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e byte0￨e >￨e >￨e 2￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e (￨e (￨e byte0￨e <<￨e 4￨e )￨e &￨e 63￨e )￨e |￨e (￨e byte1￨e >￨e >￨e 4￨e )￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e (￨e (￨e byte1￨e <<￨e 2￨e )￨e &￨e 63￨e )￨e |￨e (￨e byte2￨e >￨e >￨e 6￨e )￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e byte2￨e &￨e 63￨e )￨e ]￨e )￨e ;￨e }￨l if￨j (￨j numBytesInPartialGroup￨c !=￨c 0￨c )￨j {￨j int￨e byte0￨e =￨e (￨e a￨e [￨e (￨e inCursor￨e ++￨e )￨e ]￨e )￨e &￨e 255￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e byte0￨e >￨e >￨e 2￨e )￨e ]￨e )￨e ;￨e if￨j (￨j numBytesInPartialGroup￨c ==￨c 1￨c )￨j {￨j result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e (￨e byte0￨e <<￨e 4￨e )￨e &￨e 63￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e "=="￨e )￨e ;￨e }￨j else￨j {￨j int￨e byte1￨e =￨e (￨e a￨e [￨e (￨e inCursor￨e ++￨e )￨e ]￨e )￨e &￨e 255￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e (￨e (￨e byte0￨e <<￨e 4￨e )￨e &￨e 63￨e )￨e |￨e (￨e byte1￨e >￨e >￨e 4￨e )￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e intToAlpha￨e [￨e (￨e (￨e byte1￨e <<￨e 2￨e )￨e &￨e 63￨e )￨e ]￨e )￨e ;￨e result￨e .￨e append￨e (￨e '='￨e )￨e ;￨e }￨j }￨j return￨e result￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f static￨f byte￨f [￨f ]￨f base64ToByteArray￨f (￨f String￨p s￨p )￨f {￨f }￨f private￨f static￨f int￨f base64toInt￨f (￨f char￨p c￨p ,￨p byte￨p [￨p ]￨p alphaToInt￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractCollectionTest￨d <￨d E￨d >￨d extends￨d AbstractObjectTest￨d {￨d private￨e Collection￨e <￨e E￨e >￨e collection￨e ;￨e private￨e Collection￨e <￨e E￨e >￨e confirmed￨e ;￨e public￨f AbstractCollectionTest￨f (￨f String￨p testName￨p )￨f {￨f }￨f public￨f boolean￨f areEqualElementsDistinguishable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAddSupported￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRemoveSupported￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNullSupported￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFailFastSupported￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f isEqualsCheckable￨f (￨f )￨f {￨f }￨f public￨f void￨f verify￨f (￨f )￨f {￨f }￨f public￨f void￨f resetEmpty￨f (￨f )￨f {￨f }￨f public￨f void￨f resetFull￨f (￨f )￨f {￨f }￨f public￨f abstract￨f Collection￨f <￨f E￨f >￨f makeConfirmedCollection￨f (￨f )￨f {￨f }￨f public￨f abstract￨f Collection￨f <￨f E￨f >￨f makeConfirmedFullCollection￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f abstract￨f Collection￨f <￨f E￨f >￨f makeObject￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f E￨f >￨f makeFullCollection￨f (￨f )￨f {￨f }￨f public￨f Map￨f .￨f Entry￨f <￨f E￨f ,￨f E￨f >￨f cloneMapEntry￨f (￨f Map￨p .￨p Entry￨p <￨p E￨p ,￨p E￨p >￨p entry￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f E￨f [￨f ]￨f getFullElements￨f (￨f )￨f {￨f }￨f public￨f E￨f [￨f ]￨f getOtherElements￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f E￨f [￨f ]￨f getFullNonNullElements￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f E￨f [￨f ]￨f getOtherNonNullElements￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getFullNonNullStringElements￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getOtherNonNullStringElements￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionAdd￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionAddAll￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnsupportedAdd￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionClear￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionContains￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionContainsAll￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionIsEmpty￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionIterator￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f void￨f testCollectionIteratorRemove￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionRemove￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionRemoveAll￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionRetainAll￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionSize￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionToArray￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionToArray2￨f (￨f )￨f {￨f }￨f public￨f void￨f testCollectionToString￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnsupportedRemove￨f (￨f )￨f {￨f if￨j (￨j isRemoveSupported￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j resetEmpty￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f getCollection￨e (￨e )￨e .￨e clear￨e (￨e )￨e ;￨e AbstractCollectionTest￨e .￨e fail￨e (￨e "clear<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedOperationException￨p e￨p )￨f {￨f }￨f verify￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f getCollection￨e (￨e )￨e .￨e remove￨e (￨e null￨e )￨e ;￨e AbstractCollectionTest￨e .￨e fail￨e (￨e "remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedOperationException￨p e￨p )￨f {￨f }￨f verify￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f getCollection￨e (￨e )￨e .￨e removeAll￨e (￨e null￨e )￨e ;￨e AbstractCollectionTest￨e .￨e fail￨e (￨e "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedOperationException￨p e￨p )￨f {￨f }￨f verify￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f getCollection￨e (￨e )￨e .￨e retainAll￨e (￨e null￨e )￨e ;￨e <START_BUG>￨b AbstractCollectionTest￨b .￨b fail￨b (￨b "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f UnsupportedOperationException￨p e￨p )￨f {￨f }￨f verify￨e (￨e )￨e ;￨e resetFull￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Iterator￨e <￨e E￨e >￨e iterator￨e =￨e getCollection￨e (￨e )￨e .￨e iterator￨e (￨e )￨e ;￨e iterator￨e .￨e next￨e (￨e )￨e ;￨e iterator￨e .￨e remove￨e (￨e )￨e ;￨e AbstractCollectionTest￨e .￨e fail￨e (￨e "iterator.remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedOperationException￨p e￨p )￨f {￨f }￨f verify￨e (￨e )￨e ;￨e }￨f public￨f void￨f testCollectionIteratorFailFast￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f testSerializeDeserializeThenCompare￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f E￨f >￨f getCollection￨f (￨f )￨f {￨f }￨f public￨f void￨f setCollection￨f (￨f Collection￨p <￨p E￨p >￨p collection￨p )￨f {￨f }￨f public￨f Collection￨f <￨f E￨f >￨f getConfirmed￨f (￨f )￨f {￨f }￨f public￨f void￨f setConfirmed￨f (￨f Collection￨p <￨p E￨p >￨p confirmed￨p )￨f {￨f }￨f protected￨f static￨f void￨f assertNotCollectionContains￨f (￨f Collection￨p <￨p ?￨p >￨p coll￨p ,￨p Object￨p element￨p )￨f {￨f }￨f protected￨f static￨f void￨f assertNotCollectionContainsAll￨f (￨f Collection￨p <￨p ?￨p >￨p coll￨p ,￨p Collection￨p <￨p ?￨p >￨p sub￨p )￨f {￨f }￨f protected￨f static￨f void￨f assertNotRemoveFromCollection￨f (￨f Collection￨p <￨p ?￨p >￨p coll￨p ,￨p Object￨p element￨p )￨f {￨f }￨f protected￨f static￨f void￨f assertNotRemoveAllFromCollection￨f (￨f Collection￨p <￨p ?￨p >￨p coll￨p ,￨p Collection￨p <￨p ?￨p >￨p sub￨p )￨f {￨f }￨f }￨d
public￨d class￨d NativeRemotingManagementAddHandler￨d extends￨d AbstractAddStepHandler￨d implements￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e NativeRemotingManagementAddHandler￨e INSTANCE￨e =￨e new￨e NativeRemotingManagementAddHandler￨e (￨e )￨e ;￨e public￨e static￨e final￨e String￨e OPERATION_NAME￨e =￨e ModelDescriptionConstants￨e .￨e ADD￨e ;￨e protected￨f void￨f populateModel￨f (￨f ModelNode￨p operation￨p ,￨p ModelNode￨p model￨p )￨f {￨f }￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p ,￨p ModelNode￨p model￨p ,￨p ServiceVerificationHandler￨p verificationHandler￨p ,￨p List￨p <￨p ServiceController￨p <￨p ?￨p >￨p >￨p newControllers￨p )￨f {￨f }￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f <START_BUG>￨b return￨b ManagementDescription￨b .￨b getAddNativeManagementDescription￨b (￨b locale￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d ;￨e if￨j (￨j index￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j if￨j (￨j (￨c oldResolvedPath￨c [￨c i￨c ]￨c .￨c getEntryKind￨c (￨c )￨c )￨c ==￨c (￨c IClasspathEntry￨c .￨c CPE_PROJECT￨c )￨c )￨j {￨j needToUpdateDependents￨e =￨e true￨e ;￨e this￨e .￨e needCycleCheck￨e =￨e true￨e ;￨e continue￨e ;￨e }￨j IPackageFragmentRoot￨e [￨e ]￨e pkgFragmentRoots￨e =￨e null￨e ;￨e if￨j (￨j removedRoots￨c !=￨c null￨c )￨j {￨j IPackageFragmentRoot￨e removedRoot￨e =￨e (￨e (￨e IPackageFragmentRoot￨e )￨e (￨e removedRoots￨e .￨e get￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getPath￨e (￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j removedRoot￨c !=￨c null￨c )￨j {￨j pkgFragmentRoots￨f =￨f new￨f IPackageFragmentRoot￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e }￨j }￨j if￨j (￨j pkgFragmentRoots￨c ==￨c null￨c )￨j {￨j pkgFragmentRoots￨e =￨e project￨e .￨e computePackageFragmentRoots￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e )￨e ;￨e }￨j addClasspathDeltas￨e (￨e pkgFragmentRoots￨e ,￨e IJavaElementDelta￨e .￨e F_REMOVED_FROM_CLASSPATH￨e ,￨e delta￨e )￨e ;￨e int￨e changeKind￨e =￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getEntryKind￨e (￨e )￨e ;￨e needToUpdateDependents￨e |=￨e (￨e changeKind￨e ==￨e (￨e IClasspathEntry￨e .￨e CPE_SOURCE￨e )￨e )￨e ||￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c indexManager￨c !=￨c null￨c )￨c &&￨c (￨c changeKind￨c ==￨c (￨c IClasspathEntry￨c .￨c CPE_SOURCE￨c )￨c )￨c )￨j {￨j final￨e IPath￨e path￨e =￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getPath￨e (￨e )￨e ;￨e postAction￨f (￨f new￨f JavaModelOperation￨f .￨f IPostAction￨f (￨f )￨f {￨f public￨f String￨f getID￨f (￨f )￨f {￨f return￨e path￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f void￨f run￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f indexManager￨e .￨e removeSourceFolderFromIndex￨e (￨e project￨e ,￨e path￨e )￨e ;￨e }￨f }￨f ,￨e JavaModelOperation￨e .￨e REMOVEALL_APPEND￨e )￨e ;￨e }￨j hasDelta￨e =￨e true￨e ;￨e }￨j else￨j {￨j if￨j (￨j (￨c oldResolvedPath￨c [￨c i￨c ]￨c .￨c getEntryKind￨c (￨c )￨c )￨c ==￨c (￨c IClasspathEntry￨c .￨c CPE_PROJECT￨c )￨c )￨j {￨j this￨e .￨e needCycleCheck￨e |=￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e !=￨e (￨e newResolvedPath￨e [￨e index￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e ;￨e continue￨e ;￨e }￨j needToUpdateDependents￨e |=￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e !=￨e (￨e newResolvedPath￨e [￨e index￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e ;￨e if￨j (￨j oldResolvedPathLongest￨c &&￨c (￨c index￨c !=￨c i￨c )￨c )￨j {￨j addClasspathDeltas￨e (￨e project￨e .￨e computePackageFragmentRoots￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e )￨e ,￨e IJavaElementDelta￨e .￨e F_CLASSPATH_REORDER￨e ,￨e delta￨e )￨e ;￨e int￨e changeKind￨e =￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getEntryKind￨e (￨e )￨e ;￨e needToUpdateDependents￨e |=￨e changeKind￨e ==￨e (￨e IClasspathEntry￨e .￨e CPE_SOURCE￨e )￨e ;￨e hasDelta￨e =￨e true￨e ;￨e }￨j int￨e sourceAttachmentFlags￨e =￨e this￨e .￨e getSourceAttachmentDeltaFlag￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getSourceAttachmentPath￨e (￨e )￨e ,￨e newResolvedPath￨e [￨e index￨e ]￨e .￨e getSourceAttachmentPath￨e (￨e )￨e )￨e ;￨e int￨e sourceAttachmentRootFlags￨e =￨e this￨e .￨e getSourceAttachmentDeltaFlag￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e .￨e getSourceAttachmentRootPath￨e (￨e )￨e ,￨e newResolvedPath￨e [￨e index￨e ]￨e .￨e getSourceAttachmentRootPath￨e (￨e )￨e )￨e ;￨e int￨e flags￨e =￨e sourceAttachmentFlags￨e |￨e sourceAttachmentRootFlags￨e ;￨e if￨j (￨j flags￨c !=￨c 0￨c )￨j {￨j addClasspathDeltas￨e (￨e project￨e .￨e computePackageFragmentRoots￨e (￨e oldResolvedPath￨e [￨e i￨e ]￨e )￨e ,￨e flags￨e ,￨e delta￨e )￨e ;￨e hasDelta￨e =￨e true￨e ;￨e }￨j }￨j }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c newResolvedPath￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l int￨e index￨e =￨e classpathContains￨e (￨e oldResolvedPath￨e ,￨e newResolvedPath￨e [￨e i￨e ]￨e )￨e ;￨e if￨j (￨j index￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j if￨j (￨j (￨c newResolvedPath￨c [￨c i￨c ]￨c .￨c getEntryKind￨c (￨c )￨c )￨c ==￨c (￨c IClasspathEntry￨c .￨c CPE_PROJECT￨c )￨c )￨j {￨j needToUpdateDependents￨e =￨e true￨e ;￨e this￨e .￨e needCycleCheck￨e =￨e true￨e ;￨e continue￨e ;￨e }￨j addClasspathDeltas￨e (￨e project￨e .￨e computePackageFragmentRoots￨e (￨e newResolvedPath￨e [￨e i￨e ]￨e )￨e ,￨e IJavaElementDelta￨e .￨e F_ADDED_TO_CLASSPATH￨e ,￨e delta￨e )￨e ;￨e int￨e changeKind￨e =￨e newResolvedPath￨e [￨e i￨e ]￨e .￨e getEntryKind￨e (￨e )￨e ;￨e if￨j (￨j indexManager￨c !=￨c null￨c )￨j {￨j switch￨s (￨s changeKind￨c )￨s {￨s case￨c IClasspathEntry￨c .￨c CPE_LIBRARY￨c :￨c boolean￨e pathHasChanged￨e =￨e true￨e ;￨e final￨e IPath￨e newPath￨e =￨e newResolvedPath￨e [￨e i￨e ]￨e .￨e getPath￨e (￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c oldResolvedPath￨c .￨c length￨c )￨c ;￨c j￨c ++￨c )￨l {￨l IClasspathEntry￨e oldEntry￨e =￨e oldResolvedPath￨e [￨e j￨e ]￨e ;￨e if￨j (￨j oldEntry￨c .￨c getPath￨c (￨c )￨c .￨c equals￨c (￨c newPath￨c )￨c )￨j {￨j pathHasChanged￨e =￨e false￨e ;￨e break￨e ;￨e }￨j }￨l if￨j (￨j pathHasChanged￨c )￨j {￨j postAction￨f (￨f new￨f JavaModelOperation￨f .￨f IPostAction￨f (￨f )￨f {￨f public￨f String￨f getID￨f (￨f )￨f {￨f return￨e newPath￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f void￨f run￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f indexManager￨e .￨e indexLibrary￨e (￨e newPath￨e ,￨e project￨e .￨e getProject￨e (￨e )￨e )￨e ;￨e }￨f }￨f ,￨e JavaModelOperation￨e .￨e REMOVEALL_APPEND￨e )￨e ;￨e }￨j break￨e ;￨e case￨c IClasspathEntry￨c .￨c CPE_SOURCE￨c :￨c IClasspathEntry￨e entry￨e =￨e newResolvedPath￨e [￨e i￨e ]￨e ;￨e final￨e IPath￨e path￨e =￨e entry￨e .￨e getPath￨e (￨e )￨e ;￨e <START_BUG>￨b final￨b char￨b [￨b ]￨b [￨b ]￨b exclusionPatterns￨b =￨b (￨b (￨b ClasspathEntry￨b )￨b (￨b entry￨b )￨b )￨b .￨b fulExclusionPatternChars￨b (￨b )￨b ;￨b <END_BUG>￨b postAction￨f (￨f new￨f JavaModelOperation￨f .￨f IPostAction￨f (￨f )￨f {￨f public￨f String￨f getID￨f (￨f )￨f {￨f return￨e path￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f void￨f run￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f indexManager￨e .￨e indexSourceFolder￨e (￨e project￨e ,￨e path￨e ,￨e exclusionPatterns￨e )￨e ;￨e }￨f }￨f ,￨e JavaModelOperation￨e .￨e APPEND￨e )￨e ;￨e break￨e ;￨e }￨s }￨j needToUpdateDependents￨e |=￨e (￨e changeKind￨e ==￨e (￨e IClasspathEntry￨e .￨e CPE_SOURCE￨e )￨e )￨e ||￨e (￨e newResolvedPath￨e [￨e i￨e ]￨e .￨e isExported￨e (￨e )￨e )￨e ;￨e hasDelta￨e =￨e true￨e ;￨e }￨j }￨l if￨j (￨j hasDelta￨c )￨j {￨j this￨e .￨e addDelta￨e (￨e delta￨e )￨e ;￨e }￨j if￨j (￨j needToUpdateDependents￨c )￨j {￨j updateAffectedProjects￨e (￨e project￨e .￨e getProject￨e (￨e )￨e .￨e getFullPath￨e (￨e )￨e )￨e ;￨e }￨j }￨f protected￨f JavaProject￨f getProject￨f (￨f )￨f {￨f }￨f private￨f int￨f getSourceAttachmentDeltaFlag￨f (￨f IPath￨p oldPath￨p ,￨p IPath￨p newPath￨p )￨f {￨f }￨f public￨f boolean￨f isReadOnly￨f (￨f )￨f {￨f }￨f protected￨f void￨f saveClasspathIfNecessary￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f private￨f void￨f updateClasspath￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateAffectedProjects￨f (￨f IPath￨p prerequisiteProjectPath￨p )￨f {￨f }￨f protected￨f void￨f updateCycleMarkersIfNecessary￨f (￨f IClasspathEntry￨p [￨p ]￨p newResolvedPath￨p )￨f {￨f }￨f protected￨f void￨f updateOutputLocation￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateProjectReferencesIfNecessary￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IJavaModelStatus￨f verify￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d BundleContextService￨d implements￨d Service￨d <￨d BundleContext￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "osgi"￨e ,￨e "context"￨e )￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.osgi"￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e BundleManager￨e >￨e injectedBundleManager￨e =￨e new￨e InjectedValue￨e <￨e BundleManager￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e Framework￨e >￨e injectedFramework￨e =￨e new￨e InjectedValue￨e <￨e Framework￨e >￨e (￨e )￨e ;￨e private￨e BundleContext￨e sysContext￨e ;￨e public￨f static￨f void￨f addService￨f (￨f final￨p ServiceTarget￨p target￨p ,￨p Activation￨p policy￨p )￨f {￨f }￨f public￨f static￨f BundleContext￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f sysContext￨e =￨e injectedFramework￨e .￨e getValue￨e (￨e )￨e .￨e getBundleContext￨e (￨e )￨e ;￨e BundleListener￨f bundleListener￨f =￨f new￨f BundleListener￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f bundleChanged￨f (￨f BundleEvent￨p event￨p )￨f {￨f if￨j (￨j (￨c event￨c .￨c getType￨c (￨c )￨c )￨c ==￨c (￨c BundleEvent￨c .￨c INSTALLED￨c )￨c )￨j {￨j AbstractUserBundle￨e userBundle￨e ;￨e try￨f (￨f )￨f {￨f userBundle￨e =￨e AbstractUserBundle￨e .￨e assertBundleState￨e (￨e event￨e .￨e getBundle￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f RuntimeException￨p ex￨p )￨f {￨f return￨e ;￨e }￨f Deployment￨e dep￨e =￨e userBundle￨e .￨e getDeployment￨e (￨e )￨e ;￨e String￨e contextName￨e =￨e DeploymentHolderService￨e .￨e getContextName￨e (￨e dep￨e )￨e ;￨e ServiceContainer￨e container￨e =￨e context￨e .￨e getController￨e (￨e )￨e .￨e getServiceContainer￨e (￨e )￨e ;￨e ServiceName￨e osgiDeploymentService￨e =￨e OSGiDeploymentService￨e .￨e getServiceName￨e (￨e contextName￨e )￨e ;￨e <START_BUG>￨b ServiceName￨b deploymentService￨b =￨b JBOSS_DEPLOYMENT￨b .￨b append￨b (￨b contextName￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c (￨c container￨c .￨c getService￨c (￨c deploymentService￨c )￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c container￨c .￨c getService￨c (￨c osgiDeploymentService￨c )￨c )￨c ==￨c null￨c )￨c )￨j {￨j ServiceName￨e serviceName￨e =￨e ModuleRegistrationService￨e .￨e getServiceName￨e (￨e contextName￨e )￨e ;￨e try￨f (￨f )￨f {￨f BundleContextService￨e .￨e log￨e .￨e tracef￨e (￨e "Register<seq2seq4repair_space>service:<seq2seq4repair_space>%s"￨e ,￨e serviceName￨e )￨e ;￨e BatchBuilder￨e batchBuilder￨e =￨e container￨e .￨e batchBuilder￨e (￨e )￨e ;￨e ModuleRegistrationService￨e .￨e addService￨e (￨e batchBuilder￨e ,￨e dep￨e ,￨e contextName￨e )￨e ;￨e batchBuilder￨e .￨e install￨e (￨e )￨e ;￨e }￨f catch￨f (￨f ServiceRegistryException￨p ex￨p )￨f {￨f throw￨e new￨e IllegalStateException￨e (￨e (￨e "Cannot<seq2seq4repair_space>register<seq2seq4repair_space>service:<seq2seq4repair_space>"￨e +￨e serviceName￨e )￨e ,￨e ex￨e )￨e ;￨e }￨f }￨j }￨j }￨f }￨f ;￨e sysContext￨e .￨e addBundleListener￨e (￨e bundleListener￨e )￨e ;￨e }￨f public￨f synchronized￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f BundleContext￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d StreamThread￨d extends￨d Thread￨d {￨d InputStream￨e is￨e ;￨e String￨e type￨e ;￨e StringBuffer￨e buf￨e ;￨e public￨f StreamThread￨f (￨f InputStream￨p is￨p ,￨p String￨p type￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f InputStreamReader￨e isr￨e =￨e new￨e InputStreamReader￨e (￨e is￨e )￨e ;￨e BufferedReader￨e br￨e =￨e new￨e BufferedReader￨e (￨e isr￨e )￨e ;￨e String￨e line￨e =￨e null￨e ;￨e while￨l (￨l (￨c line￨c =￨c br￨c .￨c readLine￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l <START_BUG>￨b log￨b .￨b debug￨b (￨b (￨b (￨b (￨b type￨b )￨b +￨b ">"￨b )￨b +￨b line￨b )￨b )￨b ;￨b <END_BUG>￨b buf￨e .￨e append￨e (￨e (￨e line￨e +￨e "\n"￨e )￨e )￨e ;￨e }￨l }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f ioe￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f public￨f String￨f getBuffer￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractPathService￨d implements￨d Service￨d <￨d String￨d >￨d {￨d private￨e static￨e final￨e ServiceName￨e SERVICE_NAME_BASE￨e =￨e JBOSS￨e .￨e append￨e (￨e "server"￨e ,￨e "path"￨e )￨e ;￨e public￨f static￨f ServiceName￨f pathNameOf￨f (￨f String￨p pathName￨p )￨f {￨f }￨f private￨e String￨e path￨e ;￨e @￨f Override￨f public￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f <START_BUG>￨b this￨b .￨b path￨b =￨b resolvePath￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f String￨f resolvePath￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Path￨d extends￨d Resource￨d {￨d public￨e int￨e handle￨e ;￨e PointF￨e currentPoint￨e =￨e new￨e PointF￨e (￨e )￨e ;￨e PointF￨e startPoint￨e =￨e new￨e PointF￨e (￨e )￨e ;￨e public￨f Path￨f (￨f Device￨p device￨p )￨f {￨f }￨f public￨f void￨f addArc￨f (￨f float￨p x￨p ,￨p float￨p y￨p ,￨p float￨p width￨p ,￨p float￨p height￨p ,￨p float￨p startAngle￨p ,￨p float￨p arcAngle￨p )￨f {￨f if￨j (￨j isDisposed￨c (￨c )￨c )￨j {￨j SWT￨e .￨e error￨e (￨e ERROR_GRAPHIC_DISPOSED￨e )￨e ;￨e }￨j if￨j (￨j width￨c <￨c 0￨c )￨j {￨j x￨e =￨e x￨e +￨e width￨e ;￨e width￨e =￨e -￨e width￨e ;￨e }￨j if￨j (￨j height￨c <￨c 0￨c )￨j {￨j y￨e =￨e y￨e +￨e height￨e ;￨e height￨e =￨e -￨e height￨e ;￨e }￨j if￨j (￨j (￨c (￨c width￨c ==￨c 0￨c )￨c ||￨c (￨c height￨c ==￨c 0￨c )￨c )￨c ||￨c (￨c arcAngle￨c ==￨c 0￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j width￨c ==￨c height￨c )￨j {￨j Gdip￨e .￨e GraphicsPath_AddArc￨e (￨e handle￨e ,￨e x￨e ,￨e y￨e ,￨e width￨e ,￨e height￨e ,￨e (￨e -￨e startAngle￨e )￨e ,￨e (￨e -￨e arcAngle￨e )￨e )￨e ;￨e }￨j else￨j {￨j int￨e path￨e =￨e Gdip￨e .￨e GraphicsPath_new￨e (￨e FillModeAlternate￨e )￨e ;￨e if￨j (￨j path￨c ==￨c 0￨c )￨j {￨j SWT￨e .￨e error￨e (￨e ERROR_NO_HANDLES￨e )￨e ;￨e }￨j int￨e matrix￨e =￨e Gdip￨e .￨e Matrix_new￨e (￨e width￨e ,￨e 0￨e ,￨e 0￨e ,￨e height￨e ,￨e x￨e ,￨e y￨e )￨e ;￨e if￨j (￨j matrix￨c ==￨c 0￨c )￨j {￨j SWT￨e .￨e error￨e (￨e ERROR_NO_HANDLES￨e )￨e ;￨e }￨j Gdip￨e .￨e GraphicsPath_AddArc￨e (￨e path￨e ,￨e 0￨e ,￨e 0￨e ,￨e 1￨e ,￨e 1￨e ,￨e (￨e -￨e startAngle￨e )￨e ,￨e (￨e -￨e arcAngle￨e )￨e )￨e ;￨e Gdip￨e .￨e GraphicsPath_Transform￨e (￨e path￨e ,￨e matrix￨e )￨e ;￨e <START_BUG>￨b Gdip￨b .￨b GraphicsPath_AddPath￨b (￨b handle￨b ,￨b path￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b Gdip￨e .￨e Matrix_delete￨e (￨e matrix￨e )￨e ;￨e Gdip￨e .￨e GraphicsPath_delete￨e (￨e path￨e )￨e ;￨e }￨j Gdip￨e .￨e GraphicsPath_GetLastPoint￨e (￨e handle￨e ,￨e currentPoint￨e )￨e ;￨e }￨f public￨f void￨f addPath￨f (￨f Path￨p path￨p )￨f {￨f }￨f public￨f void￨f addRectangle￨f (￨f float￨p x￨p ,￨p float￨p y￨p ,￨p float￨p width￨p ,￨p float￨p height￨p )￨f {￨f }￨f public￨f void￨f addString￨f (￨f String￨p string￨p ,￨p float￨p x￨p ,￨p float￨p y￨p ,￨p Font￨p font￨p )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f public￨f boolean￨f contains￨f (￨f float￨p x￨p ,￨p float￨p y￨p ,￨p GC￨p gc￨p ,￨p boolean￨p outline￨p )￨f {￨f }￨f public￨f void￨f cubicTo￨f (￨f float￨p cx1￨p ,￨p float￨p cy1￨p ,￨p float￨p cx2￨p ,￨p float￨p cy2￨p ,￨p float￨p x￨p ,￨p float￨p y￨p )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f public￨f void￨f getBounds￨f (￨f float￨p [￨p ]￨p bounds￨p )￨f {￨f }￨f public￨f void￨f getCurrentPoint￨f (￨f float￨p [￨p ]￨p point￨p )￨f {￨f }￨f public￨f PathData￨f getPathData￨f (￨f )￨f {￨f }￨f public￨f void￨f lineTo￨f (￨f float￨p x￨p ,￨p float￨p y￨p )￨f {￨f }￨f public￨f boolean￨f isDisposed￨f (￨f )￨f {￨f }￨f public￨f void￨f moveTo￨f (￨f float￨p x￨p ,￨p float￨p y￨p )￨f {￨f }￨f public￨f void￨f quadTo￨f (￨f float￨p cx￨p ,￨p float￨p cy￨p ,￨p float￨p x￨p ,￨p float￨p y￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CodeSnippetClassFile￨d extends￨d ClassFile￨d {￨d public￨f CodeSnippetClassFile￨f (￨f SourceTypeBinding￨p aType￨p ,￨p ClassFile￨p enclosingClassFile￨p ,￨p boolean￨p creatingProblemType￨p )￨f {￨f }￨f public￨f static￨f void￨f createProblemType￨f (￨f TypeDeclaration￨p typeDeclaration￨p ,￨p CompilationResult￨p unitResult￨p )￨f {￨f SourceTypeBinding￨e typeBinding￨e =￨e typeDeclaration￨e .￨e binding￨e ;￨e ClassFile￨e classFile￨e =￨e new￨e CodeSnippetClassFile￨e (￨e typeBinding￨e ,￨e null￨e ,￨e true￨e )￨e ;￨e if￨j (￨j typeBinding￨c .￨c isMemberType￨c (￨c )￨c )￨j {￨j classFile￨e .￨e recordEnclosingTypeAttributes￨e (￨e typeBinding￨e )￨e ;￨e }￨j FieldBinding￨e [￨e ]￨e fields￨e =￨e typeBinding￨e .￨e fields￨e ;￨e if￨j (￨j (￨c fields￨c !=￨c null￨c )￨c &&￨c (￨c fields￨c !=￨c (￨c NoFields￨c )￨c )￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c fields￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b if￨b (￨b (￨b fields￨b [￨b i￨b ]￨b .￨b constant￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b org￨e .￨e eclipse￨e .￨e jdt￨e .￨e internal￨e .￨e compiler￨e .￨e ast￨e .￨e FieldReference￨e .￨e getConstantFor￨e (￨e fields￨e [￨e i￨e ]￨e ,￨e null￨e ,￨e false￨e ,￨e null￨e )￨e ;￨e }￨l classFile￨e .￨e addFieldInfos￨e (￨e )￨e ;￨e }￨j else￨j {￨j classFile￨e .￨e contents￨e [￨e (￨e (￨e classFile￨e .￨e contentsOffset￨e )￨e ++￨e )￨e ]￨e =￨e 0￨e ;￨e classFile￨e .￨e contents￨e [￨e (￨e (￨e classFile￨e .￨e contentsOffset￨e )￨e ++￨e )￨e ]￨e =￨e 0￨e ;￨e }￨j classFile￨e .￨e setForMethodInfos￨e (￨e )￨e ;￨e MethodBinding￨e [￨e ]￨e methods￨e =￨e typeBinding￨e .￨e methods￨e ;￨e AbstractMethodDeclaration￨e [￨e ]￨e methodDeclarations￨e =￨e typeDeclaration￨e .￨e methods￨e ;￨e int￨e maxMethodDecl￨e =￨e (￨e methodDeclarations￨e ==￨e null￨e )￨e ?￨e 0￨e :￨e methodDeclarations￨e .￨e length￨e ;￨e int￨e problemsLength￨e ;￨e IProblem￨e [￨e ]￨e problems￨e =￨e unitResult￨e .￨e getErrors￨e (￨e )￨e ;￨e if￨j (￨j problems￨c ==￨c null￨c )￨j {￨j problems￨e =￨e new￨e IProblem￨e [￨e 0￨e ]￨e ;￨e }￨j IProblem￨e [￨e ]￨e problemsCopy￨e =￨e new￨e IProblem￨e [￨e problemsLength￨e =￨e problems￨e .￨e length￨e ]￨e ;￨e System￨e .￨e arraycopy￨e (￨e problems￨e ,￨e 0￨e ,￨e problemsCopy￨e ,￨e 0￨e ,￨e problemsLength￨e )￨e ;￨e if￨j (￨j methods￨c !=￨c null￨c )￨j {￨j if￨j (￨j typeBinding￨c .￨c isInterface￨c (￨c )￨c )￨j {￨j classFile￨e .￨e addProblemClinit￨e (￨e problemsCopy￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c methods￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l MethodBinding￨e methodBinding￨e ;￨e if￨j (￨j (￨c methodBinding￨c =￨c methods￨c [￨c i￨c ]￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c maxMethodDecl￨c ;￨c j￨c ++￨c )￨l {￨l if￨j (￨j (￨c (￨c methodDeclarations￨c [￨c j￨c ]￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c methodDeclarations￨c [￨c j￨c ]￨c .￨c binding￨c )￨c ==￨c (￨c methods￨c [￨c i￨c ]￨c )￨c )￨c )￨j {￨j if￨j (￨j !￨c (￨c methodBinding￨c .￨c isConstructor￨c (￨c )￨c )￨c )￨j {￨j classFile￨e .￨e addAbstractMethod￨e (￨e methodDeclarations￨e [￨e j￨e ]￨e ,￨e methodBinding￨e )￨e ;￨e }￨j break￨e ;￨e }￨j }￨l }￨j }￨l }￨j else￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c methods￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l MethodBinding￨e methodBinding￨e ;￨e if￨j (￨j (￨c methodBinding￨c =￨c methods￨c [￨c i￨c ]￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c maxMethodDecl￨c ;￨c j￨c ++￨c )￨l {￨l if￨j (￨j (￨c (￨c methodDeclarations￨c [￨c j￨c ]￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c methodDeclarations￨c [￨c j￨c ]￨c .￨c binding￨c )￨c ==￨c (￨c methods￨c [￨c i￨c ]￨c )￨c )￨c )￨j {￨j AbstractMethodDeclaration￨e methodDecl￨e ;￨e if￨j (￨j (￨c methodDecl￨c =￨c methodDeclarations￨c [￨c j￨c ]￨c )￨c .￨c isConstructor￨c (￨c )￨c )￨j {￨j classFile￨e .￨e addProblemConstructor￨e (￨e methodDecl￨e ,￨e methodBinding￨e ,￨e problemsCopy￨e )￨e ;￨e }￨j else￨j {￨j classFile￨e .￨e addProblemMethod￨e (￨e methodDecl￨e ,￨e methodBinding￨e ,￨e problemsCopy￨e )￨e ;￨e }￨j break￨e ;￨e }￨j }￨l }￨j }￨l }￨j classFile￨e .￨e addDefaultAbstractMethods￨e (￨e )￨e ;￨e }￨j if￨j (￨j (￨c typeDeclaration￨c .￨c memberTypes￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c typeDeclaration￨c .￨c memberTypes￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l TypeDeclaration￨e memberType￨e =￨e typeDeclaration￨e .￨e memberTypes￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c memberType￨c .￨c binding￨c )￨c !=￨c null￨c )￨j {￨j classFile￨e .￨e recordNestedMemberAttribute￨e (￨e memberType￨e .￨e binding￨e )￨e ;￨e ClassFile￨e .￨e createProblemType￨e (￨e memberType￨e ,￨e unitResult￨e )￨e ;￨e }￨j }￨l }￨j classFile￨e .￨e addAttributes￨e (￨e )￨e ;￨e unitResult￨e .￨e record￨e (￨e typeBinding￨e .￨e constantPoolName￨e (￨e )￨e ,￨e classFile￨e )￨e ;￨e }￨f }￨d
public￨d class￨d CommandProvider￨d extends￨d QuickAccessProvider￨d {￨d private￨e Map￨e idToElement￨e ;￨e private￨e IEvaluationContext￨e contextSnapshot￨e ;￨e private￨e HandlerService￨e realHandlerService￨e ;￨e public￨f CommandProvider￨f (￨f )￨f {￨f }￨f public￨f String￨f getId￨f (￨f )￨f {￨f }￨f public￨f QuickAccessElement￨f getElementForId￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f QuickAccessElement￨f [￨f ]￨f getElements￨f (￨f )￨f {￨f }￨f public￨f ImageDescriptor￨f getImageDescriptor￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f private￨f void￨f saveApplicationContext￨f (￨f )￨f {￨f realHandlerService￨e =￨e (￨e (￨e HandlerService￨e )￨e (￨e PlatformUI￨e .￨e getWorkbench￨e (￨e )￨e .￨e getService￨e (￨e IHandlerService￨e .￨e class￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b contextSnapshot￨b =￨b realHandlerService￨b .￨b getContextSnapshot￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f HandlerService￨f getRealHandlerService￨f (￨f )￨f {￨f }￨f IEvaluationContext￨f getContextSnapshot￨f (￨f )￨f {￨f }￨f }￨d
public￨d final￨d class￨d SelectionEngine￨d extends￨d Engine￨d implements￨d ISearchRequestor￨d {￨d public￨e static￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e public￨e static￨e boolean￨e PERF￨e =￨e false￨e ;￨e SelectionParser￨e parser￨e ;￨e ISelectionRequestor￨e requestor￨e ;￨e boolean￨e acceptedAnswer￨e ;￨e private￨e int￨e actualSelectionStart￨e ;￨e private￨e int￨e actualSelectionEnd￨e ;￨e private￨e char￨e [￨e ]￨e selectedIdentifier￨e ;￨e private￨e char￨e [￨e ]￨e [￨e ]￨e [￨e ]￨e acceptedClasses￨e ;￨e private￨e int￨e [￨e ]￨e acceptedClassesModifiers￨e ;￨e private￨e char￨e [￨e ]￨e [￨e ]￨e [￨e ]￨e acceptedInterfaces￨e ;￨e private￨e int￨e [￨e ]￨e acceptedInterfacesModifiers￨e ;￨e private￨e char￨e [￨e ]￨e [￨e ]￨e [￨e ]￨e acceptedEnums￨e ;￨e private￨e int￨e [￨e ]￨e acceptedEnumsModifiers￨e ;￨e private￨e char￨e [￨e ]￨e [￨e ]￨e [￨e ]￨e acceptedAnnotations￨e ;￨e private￨e int￨e [￨e ]￨e acceptedAnnotationsModifiers￨e ;￨e int￨e acceptedClassesCount￨e ;￨e int￨e acceptedInterfacesCount￨e ;￨e int￨e acceptedEnumsCount￨e ;￨e int￨e acceptedAnnotationsCount￨e ;￨e boolean￨e noProposal￨e =￨e true￨e ;￨e CategorizedProblem￨e problem￨e =￨e null￨e ;￨e public￨f SelectionEngine￨f (￨f SearchableEnvironment￨p nameEnvironment￨p ,￨p ISelectionRequestor￨p requestor￨p ,￨p Map￨p settings￨p )￨f {￨f }￨f public￨f void￨f acceptType￨f (￨f char￨p [￨p ]￨p packageName￨p ,￨p char￨p [￨p ]￨p simpleTypeName￨p ,￨p char￨p [￨p ]￨p [￨p ]￨p enclosingTypeNames￨p ,￨p int￨p modifiers￨p ,￨p AccessRestriction￨p accessRestriction￨p )￨f {￨f }￨f public￨f void￨f acceptPackage￨f (￨f char￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f private￨f void￨f acceptQualifiedTypes￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkSelection￨f (￨f char￨p [￨p ]￨p source￨p ,￨p int￨p selectionStart￨p ,￨p int￨p selectionEnd￨p )￨f {￨f }￨f private￨f boolean￨f checkTypeArgument￨f (￨f Scanner￨f scanner￨f )￨f throws￨f InvalidInputException￨f (￨f )￨f {￨f }￨f public￨f AssistParser￨f getParser￨f (￨f )￨f {￨f }￨f private￨f boolean￨f isLocal￨f (￨f ReferenceBinding￨p binding￨p )￨f {￨f }￨f public￨f void￨f select￨f (￨f ICompilationUnit￨p sourceUnit￨p ,￨p int￨p selectionSourceStart￨p ,￨p int￨p selectionSourceEnd￨p )￨f {￨f }￨f private￨f void￨f selectMemberTypeFromImport￨f (￨f CompilationUnitDeclaration￨p parsedUnit￨p ,￨p char￨p [￨p ]￨p lastToken￨p ,￨p ReferenceBinding￨p ref￨p ,￨p boolean￨p staticOnly￨p )￨f {￨f }￨f private￨f void￨f selectStaticFieldFromStaticImport￨f (￨f CompilationUnitDeclaration￨p parsedUnit￨p ,￨p char￨p [￨p ]￨p lastToken￨p ,￨p ReferenceBinding￨p ref￨p )￨f {￨f }￨f private￨f void￨f selectStaticMethodFromStaticImport￨f (￨f CompilationUnitDeclaration￨p parsedUnit￨p ,￨p char￨p [￨p ]￨p lastToken￨p ,￨p ReferenceBinding￨p ref￨p )￨f {￨f }￨f private￨f void￨f selectFrom￨f (￨f Binding￨p binding￨p ,￨p CompilationUnitDeclaration￨p parsedUnit￨p ,￨p boolean￨p isDeclaration￨p )￨f {￨f }￨f private￨f void￨f selectLocalDeclaration￨f (￨f ASTNode￨p node￨p )￨f {￨f }￨f public￨f void￨f selectType￨f (￨f ISourceType￨p sourceType￨p ,￨p char￨p [￨p ]￨p typeName￨p ,￨p SourceTypeElementInfo￨p [￨p ]￨p topLevelTypes￨p ,￨p boolean￨p searchInEnvironment￨p )￨f {￨f }￨f private￨f boolean￨f selectDeclaration￨f (￨f CompilationUnitDeclaration￨p compilationUnit￨p )￨f {￨f char￨e [￨e ]￨e assistIdentifier￨e =￨e this￨e .￨e getParser￨e (￨e )￨e .￨e assistIdentifier￨e (￨e )￨e ;￨e if￨j (￨j assistIdentifier￨c ==￨c null￨c )￨j {￨j return￨e false￨e ;￨e }￨j ImportReference￨e currentPackage￨e =￨e compilationUnit￨e .￨e currentPackage￨e ;￨e <START_BUG>￨b char￨b [￨b ]￨b packageName￨b =￨b (￨b currentPackage￨b ==￨b null￨b )￨b ?￨b new￨b char￨b [￨b 0￨b ]￨b :￨b CharOperation￨b .￨b concatWith￨b (￨b currentPackage￨b .￨b tokens￨b ,￨b '.'￨b )￨b ;￨b <END_BUG>￨b TypeDeclaration￨e [￨e ]￨e types￨e =￨e compilationUnit￨e .￨e types￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c length￨c =￨c (￨c types￨c ==￨c null￨c )￨c ?￨c 0￨c :￨c types￨c .￨c length￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j selectDeclaration￨c (￨c types￨c [￨c i￨c ]￨c ,￨c assistIdentifier￨c ,￨c packageName￨c )￨c )￨j {￨j return￨e true￨e ;￨e }￨j }￨l return￨e false￨e ;￨e }￨f private￨f boolean￨f selectDeclaration￨f (￨f TypeDeclaration￨p typeDeclaration￨p ,￨p char￨p [￨p ]￨p assistIdentifier￨p ,￨p char￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d AllTests￨d {￨d private￨e static￨e transient￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨f AllTests￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f logprop￨f (￨f String￨p prop￨p ,￨p boolean￨p show￨p )￨f {￨f }￨f private￨f static￨f void￨f logprop￨f (￨f String￨p prop￨p )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f if￨j (￨j (￨c args￨c .￨c length￨c )￨c <￨c 1￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>comma-delimited<seq2seq4repair_space>list<seq2seq4repair_space>of<seq2seq4repair_space>paths<seq2seq4repair_space>to<seq2seq4repair_space>search<seq2seq4repair_space>"￨e +￨e "for<seq2seq4repair_space>unit<seq2seq4repair_space>tests"￨e )￨e )￨e ;￨e System￨e .￨e exit￨e (￨e 0￨e )￨e ;￨e }￨j AllTests￨e .￨e initializeLogging￨e (￨e args￨e )￨e ;￨e AllTests￨e .￨e initializeManager￨e (￨e args￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.version"￨e ,￨e true￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.vendor"￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.home"￨e ,￨e true￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "user.home"￨e )￨e ;￨e <START_BUG>￨b AllTests￨b .￨b logprop￨b (￨b "user.dir"￨b )￨b ;￨b <END_BUG>￨b AllTests￨e .￨e logprop￨e (￨e "os.name"￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "os.version"￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "os.arch"￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.class.version"￨e )￨e ;￨e String￨e cp￨e =￨e System￨e .￨e getProperty￨e (￨e "java.class.path"￨e )￨e ;￨e String￨e [￨e ]￨e cpe￨e =￨e JOrphanUtils￨e .￨e split￨e (￨e cp￨e ,￨e File￨e .￨e pathSeparator￨e )￨e ;￨e StringBuffer￨e sb￨e =￨e new￨e StringBuffer￨e (￨e 3000￨e )￨e ;￨e sb￨e .￨e append￨e (￨e "java.class.path="￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c cpe￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l sb￨e .￨e append￨e (￨e "\n"￨e )￨e ;￨e sb￨e .￨e append￨e (￨e cpe￨e [￨e i￨e ]￨e )￨e ;￨e if￨j (￨j new￨c File￨c (￨c cpe￨c [￨c i￨c ]￨c )￨c .￨c exists￨c (￨c )￨c )￨j {￨j sb￨e .￨e append￨e (￨e "<seq2seq4repair_space>-<seq2seq4repair_space>OK"￨e )￨e ;￨e }￨j else￨j {￨j sb￨e .￨e append￨e (￨e "<seq2seq4repair_space>-<seq2seq4repair_space>??"￨e )￨e ;￨e }￨j }￨l AllTests￨e .￨e log￨e .￨e info￨e (￨e sb￨e .￨e toString￨e (￨e )￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "+++++++++++"￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.awt.headless"￨e ,￨e true￨e )￨e ;￨e AllTests￨e .￨e logprop￨e (￨e "java.awt.graphicsenv"￨e ,￨e true￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "------------"￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "Creating<seq2seq4repair_space>test<seq2seq4repair_space>suite"￨e )￨e ;￨e TestSuite￨e suite￨e =￨e AllTests￨e .￨e suite￨e (￨e args￨e [￨e 0￨e ]￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "Starting<seq2seq4repair_space>test<seq2seq4repair_space>run"￨e )￨e ;￨e TestRunner￨e .￨e run￨e (￨e suite￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "+++++++++++"￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "------------"￨e )￨e ;￨e System￨e .￨e exit￨e (￨e 0￨e )￨e ;￨e }￨f protected￨f static￨f void￨f initializeLogging￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f static￨f void￨f initializeManager￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f public￨f static￨f TestSuite￨f suite￨f (￨f )￨f {￨f }￨f private￨f static￨f TestSuite￨f suite￨f (￨f String￨p searchPaths￨p )￨f {￨f }￨f }￨d
public￨d class￨d AttachmentController￨d implements￨d KeyListener￨d {￨d AttachmentView￨e view￨e ;￨e ComposerController￨e controller￨e ;￨e AttachmentActionListener￨e actionListener￨e ;￨e AttachmentMenu￨e menu￨e ;￨e private￨e JFileChooser￨e fileChooser￨e ;￨e public￨f AttachmentController￨f (￨f ComposerController￨p controller￨p )￨f {￨f }￨f public￨f ActionListener￨f getActionListener￨f (￨f )￨f {￨f }￨f public￨f void￨f installListener￨f (￨f )￨f {￨f }￨f public￨f void￨f updateComponents￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f MimePart￨p part￨p )￨f {￨f }￨f public￨f void￨f removeSelected￨f (￨f )￨f {￨f }￨f public￨f void￨f addFileAttachment￨f (￨f )￨f {￨f int￨e returnValue￨e ;￨e File￨e [￨e ]￨e files￨e ;￨e <START_BUG>￨b fileChooser￨b .￨b setDialogTitle￨b (￨b MailResourceLoader￨b .￨b getString￨b (￨b "menu"￨b ,￨b "mainframe"￨b ,￨b "composer_attach_file"￨b )￨b )￨b ;￨b <END_BUG>￨b fileChooser￨e .￨e setFileSelectionMode￨e (￨e JFileChooser￨e .￨e FILES_ONLY￨e )￨e ;￨e fileChooser￨e .￨e setMultiSelectionEnabled￨e (￨e true￨e )￨e ;￨e returnValue￨e =￨e fileChooser￨e .￨e showOpenDialog￨e (￨e view￨e )￨e ;￨e if￨j (￨j returnValue￨c ==￨c (￨c JFileChooser￨c .￨c APPROVE_OPTION￨c )￨c )￨j {￨j files￨e =￨e fileChooser￨e .￨e getSelectedFiles￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c files￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l File￨e file￨e =￨e files￨e [￨e i￨e ]￨e ;￨e FileNameMap￨e fileNameMap￨e =￨e URLConnection￨e .￨e getFileNameMap￨e (￨e )￨e ;￨e String￨e mimetype￨e =￨e fileNameMap￨e .￨e getContentTypeFor￨e (￨e file￨e .￨e getName￨e (￨e )￨e )￨e ;￨e if￨j (￨j mimetype￨c ==￨c null￨c )￨j {￨j mimetype￨e =￨e "application/octet-stream"￨e ;￨e }￨j MimeHeader￨e header￨e =￨e new￨e MimeHeader￨e (￨e mimetype￨e .￨e substring￨e (￨e 0￨e ,￨e mimetype￨e .￨e indexOf￨e (￨e '/'￨e )￨e )￨e ,￨e mimetype￨e .￨e substring￨e (￨e (￨e (￨e mimetype￨e .￨e indexOf￨e (￨e '/'￨e )￨e )￨e +￨e 1￨e )￨e )￨e )￨e ;￨e ComposerAttachment￨e mimePart￨e =￨e new￨e ComposerAttachment￨e (￨e header￨e ,￨e file￨e )￨e ;￨e view￨e .￨e add￨e (￨e mimePart￨e )￨e ;￨e }￨l }￨j }￨f public￨f void￨f keyPressed￨f (￨f KeyEvent￨p k￨p )￨f {￨f }￨f public￨f void￨f keyReleased￨f (￨f KeyEvent￨p k￨p )￨f {￨f }￨f public￨f void￨f keyTyped￨f (￨f KeyEvent￨p k￨p )￨f {￨f }￨f class￨d PopupListener￨d extends￨d MouseAdapter￨d {￨d public￨f void￨f mousePressed￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f mouseReleased￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f private￨f void￨f maybeShowPopup￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f }￨d }￨d
public￨d final￨d class￨d LocalizedResource￨d implements￨d PrivilegedAction￨d {￨d private￨e static￨e final￨e boolean￨e SUPPORTS_BIG_DECIMAL_CALLS￨e ;￨e private￨e ResourceBundle￨e res￨e ;￨e private￨e Locale￨e locale￨e ;￨e private￨e String￨e encode￨e ;￨e private￨e static￨e final￨e String￨e MESSAGE_FILE￨e =￨e "org.apache.derby.loc.toolsmessages"￨e ;￨e private￨e static￨e final￨e String￨e ENV_CODESET￨e =￨e "derby.ui.codeset"￨e ;￨e private￨e static￨e final￨e String￨e ENV_LOCALE￨e =￨e "derby.ui.locale"￨e ;￨e private￨e String￨e messageFileName￨e ;￨e private￨e String￨e resourceKey￨e ;￨e private￨e LocalizedOutput￨e out￨e ;￨e private￨e LocalizedInput￨e in￨e ;￨e private￨e boolean￨e enableLocalized￨e ;￨e private￨e boolean￨e unicodeEscape￨e ;￨e private￨e static￨e LocalizedResource￨e local￨e ;￨e private￨e int￨e dateSize￨e ;￨e private￨e int￨e timeSize￨e ;￨e private￨e int￨e timestampSize￨e ;￨e private￨e DateFormat￨e formatDate￨e ;￨e private￨e DateFormat￨e formatTime￨e ;￨e private￨e DateFormat￨e formatTimestamp￨e ;￨e private￨e NumberFormat￨e formatNumber￨e ;￨e private￨e DecimalFormat￨e formatDecimal￨e ;￨e public￨f LocalizedResource￨f (￨f )￨f {￨f }￨f public￨f LocalizedResource￨f (￨f String￨p encStr￨p ,￨p String￨p locStr￨p ,￨p String￨p msgF￨p )￨f {￨f }￨f public￨f static￨f LocalizedResource￨f getInstance￨f (￨f )￨f {￨f }￨f public￨f void￨f init￨f (￨f )￨f {￨f }￨f public￨f void￨f init￨f (￨f String￨p encStr￨p ,￨p String￨p locStr￨p ,￨p String￨p msgF￨p )￨f {￨f }￨f private￨f void￨f setResource￨f (￨f )￨f {￨f if￨j (￨j (￨c res￨c )￨c !=￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c (￨c locale￨c )￨c ==￨c null￨c )￨c ||￨c (￨c locale￨c .￨c toString￨c (￨c )￨c .￨c equals￨c (￨c "none"￨c )￨c )￨c )￨j {￨j <START_BUG>￨b res￨b =￨b ResourceBundle￨b .￨b getBundle￨b (￨b LocalizedResource￨b .￨b MESSAGE_FILE￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j try￨f (￨f )￨f {￨f res￨e =￨e ResourceBundle￨e .￨e getBundle￨e (￨e messageFileName￨e ,￨e locale￨e )￨e ;￨e }￨f }￨j }￨f catch￨f (￨f MissingResourceException￨p e￨p )￨f {￨f res￨e =￨e ResourceBundle￨e .￨e getBundle￨e (￨e messageFileName￨e ,￨e Locale￨e .￨e ENGLISH￨e )￨e ;￨e }￨f }￨f private￨f void￨f initMaxSizes2￨f (￨f )￨f {￨f }￨f public￨f LocalizedInput￨f getNewInput￨f (￨f InputStream￨p i￨p )￨f {￨f }￨f public￨f LocalizedInput￨f getNewEncodedInput￨f (￨f InputStream￨p i￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f public￨f LocalizedOutput￨f getNewOutput￨f (￨f OutputStream￨p o￨p )￨f {￨f }￨f public￨f LocalizedOutput￨f getNewEncodedOutput￨f (￨f OutputStream￨f o￨f ,￨f String￨f encoding￨f )￨f throws￨f UnsupportedEncodingException￨f (￨f )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p ,￨p Object￨p o￨p )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p ,￨p Object￨p o3￨p )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p ,￨p Object￨p o3￨p ,￨p Object￨p o4￨p )￨f {￨f }￨f private￨f Locale￨f getNewLocale￨f (￨f String￨p locStr￨p )￨f {￨f }￨f public￨f String￨f getTextMessage￨f (￨f String￨p key￨p ,￨p Object￨p [￨p ]￨p objectArr￨p )￨f {￨f }￨f public￨f String￨f getLocalizedString￨f (￨f ResultSet￨f rs￨f ,￨f ResultSetMetaData￨f rsm￨f ,￨f int￨f columnNumber￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f getDateAsString￨f (￨f Date￨p d￨p )￨f {￨f }￨f public￨f String￨f getTimeAsString￨f (￨f Date￨p t￨p )￨f {￨f }￨f public￨f String￨f getNumberAsString￨f (￨f int￨p o￨p )￨f {￨f }￨f public￨f String￨f getNumberAsString￨f (￨f long￨p o￨p )￨f {￨f }￨f public￨f String￨f getNumberAsString￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f String￨f getNumberAsString￨f (￨f double￨p o￨p )￨f {￨f }￨f public￨f String￨f getTimestampAsString￨f (￨f Timestamp￨p t￨p )￨f {￨f }￨f public￨f int￨f getColumnDisplaySize￨f (￨f ResultSetMetaData￨f rsm￨f ,￨f int￨f columnNumber￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f getStringFromDate￨f (￨f String￨f dateStr￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f public￨f String￨f getStringFromTime￨f (￨f String￨f timeStr￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f public￨f String￨f getStringFromValue￨f (￨f String￨f val￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f public￨f String￨f getStringFromTimestamp￨f (￨f String￨f timestampStr￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f public￨f Locale￨f getLocale￨f (￨f )￨f {￨f }￨f private￨f final￨f synchronized￨f String￨f getEnvProperty￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f final￨f Object￨f run￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f enableLocalization￨f (￨f boolean￨p mode￨p )￨f {￨f }￨f public￨f boolean￨f isLocalized￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f getMessage￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f String￨f getMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p )￨f {￨f }￨f public￨f static￨f String￨f getMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p )￨f {￨f }￨f public￨f static￨f String￨f getMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p ,￨p Object￨p o3￨p )￨f {￨f }￨f public￨f static￨f String￨f getMessage￨f (￨f String￨p key￨p ,￨p Object￨p o1￨p ,￨p Object￨p o2￨p ,￨p Object￨p o3￨p ,￨p Object￨p o4￨p )￨f {￨f }￨f public￨f static￨f LocalizedOutput￨f OutputWriter￨f (￨f )￨f {￨f }￨f public￨f static￨f LocalizedInput￨f InputReader￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f getNumber￨f (￨f long￨p o￨p )￨f {￨f }￨f public￨f static￨f String￨f getNumber￨f (￨f int￨p o￨p )￨f {￨f }￨f public￨f static￨f void￨f setUnicodeEscape￨f (￨f boolean￨p u￨p )￨f {￨f }￨f public￨f static￨f boolean￨f getUnicodeEscape￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Page￨d extends￨d MarkupContainer￨d implements￨d IRedirectListener￨d {￨d protected￨e static￨e final￨e boolean￨e ACCESS_ALLOWED￨e =￨e true￨e ;￨e protected￨e static￨e final￨e boolean￨e ACCESS_DENIED￨e =￨e false￨e ;￨e private￨d static￨d final￨d Log￨d log￨d =￨d LogFactory￨d .￨d getLog￨d (￨d Page￨d .￨d class￨d )￨d ;￨d private￨d int￨d autoIndex￨d ;￨d private￨d transient￨d int￨d changeCount￨d ;￨d private￨d IFeedback￨d feedback￨d ;￨d private￨d FeedbackMessages￨d feedbackMessages￨d ;￨d private￨d int￨d id￨d =￨d -￨d 1￨d ;￨d private￨d transient￨d Set￨d renderedComponents￨d ;￨d private￨d transient￨d Session￨d session￨d =￨d null￨d ;￨d private￨d boolean￨d trackChanges￨d =￨d false￨d ;￨d private￨d IPageVersionManager￨d versionManager￨d ;￨d protected￨d Page￨d (￨d )￨d {￨d }￨d protected￨f Page￨f (￨f final￨p IModel￨p model￨p )￨f {￨f }￨f public￨f int￨f getAutoIndex￨f (￨f )￨f {￨f }￨f public￨f final￨f int￨f getCurrentVersionNumber￨f (￨f )￨f {￨f }￨f public￨f FeedbackMessages￨f getFeedbackMessages￨f (￨f )￨f {￨f }￨f public￨f final￨f int￨f getId￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f final￨f Session￨f getSession￨f (￨f )￨f {￨f }￨f public￨f Page￨f getVersion￨f (￨f final￨p int￨p versionNumber￨p )￨f {￨f }￨f public￨f PageState￨f newPageState￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f onRedirect￨f (￨f )￨f {￨f <START_BUG>￨b getRequestCycle￨b (￨b )￨b .￨b setPage￨b (￨b this￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f final￨f void￨f removePersistedFormData￨f (￨f final￨p Class￨p formClass￨p ,￨p final￨p boolean￨p disablePersistence￨p )￨f {￨f }￨f public￨f void￨f setFeedback￨f (￨f final￨p IFeedback￨p feedback￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f checkAccess￨f (￨f )￨f {￨f }￨f protected￨f void￨f configureResponse￨f (￨f )￨f {￨f }￨f protected￨f IModel￨f initModel￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalOnModelChanged￨f (￨f )￨f {￨f }￨f protected￨f IPageVersionManager￨f newVersionManager￨f (￨f )￨f {￨f }￨f protected￨f void￨f onEndRequest￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f onRender￨f (￨f )￨f {￨f }￨f final￨f void￨f componentAdded￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f final￨f void￨f componentModelChangeImpending￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f final￨f void￨f componentRemoved￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f final￨f void￨f componentRendered￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f final￨f void￨f internalOnBeginRender￨f (￨f )￨f {￨f }￨f final￨f void￨f internalOnEndRender￨f (￨f )￨f {￨f }￨f final￨f void￨f internalOnEndRequest￨f (￨f )￨f {￨f }￨f final￨f void￨f resetMarkupStreams￨f (￨f )￨f {￨f }￨f final￨f void￨f setId￨f (￨f final￨p int￨p id￨p )￨f {￨f }￨f private￨f final￨f void￨f checkRendering￨f (￨f )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f onChanged￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestUmlNamespace￨d extends￨d GenericObjectTestFixture￨d {￨d public￨f TestUmlNamespace￨f (￨f String￨p arg0￨p )￨f {￨f }￨f public￨f void￨f testNamespace￨f (￨f )￨f {￨f <START_BUG>￨b Object￨b o￨b =￨b getFactory￨b (￨b )￨b .￨b create￨b (￨b NAMESPACE￨b )￨b ;￨b <END_BUG>￨b assertNotNull￨e (￨e "Didn't<seq2seq4repair_space>create<seq2seq4repair_space>object"￨e ,￨e o￨e )￨e ;￨e assertTrue￨e (￨e "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>base"￨e ,￨e ModelFacade￨e .￨e isABase￨e (￨e o￨e )￨e )￨e ;￨e assertTrue￨e (￨e "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>namespace"￨e ,￨e ModelFacade￨e .￨e isANamespace￨e (￨e o￨e )￨e )￨e ;￨e runTruthTests￨e (￨e o￨e )￨e ;￨e }￨f protected￨f void￨f initializeTruth￨f (￨f )￨f {￨f }￨f }￨d
final￨d class￨d TermScorer￨d extends￨d Scorer￨d {￨d private￨e Weight￨e weight￨e ;￨e private￨e DocsEnum￨e docsEnum￨e ;￨e private￨e byte￨e [￨e ]￨e norms￨e ;￨e private￨e float￨e weightValue￨e ;￨e private￨e int￨e doc￨e =￨e -￨e 1￨e ;￨e private￨e int￨e freq￨e ;￨e private￨e int￨e pointer￨e ;￨e private￨e int￨e pointerMax￨e ;￨e private￨e static￨e final￨e int￨e SCORE_CACHE_SIZE￨e =￨e 32￨e ;￨e private￨e float￨e [￨e ]￨e scoreCache￨e =￨e new￨e float￨e [￨e TermScorer￨e .￨e SCORE_CACHE_SIZE￨e ]￨e ;￨e private￨e int￨e [￨e ]￨e docs￨e ;￨e private￨e int￨e [￨e ]￨e freqs￨e ;￨e private￨e final￨e BulkReadResult￨e bulkResult￨e ;￨e TermScorer￨f (￨f Weight￨p weight￨p ,￨p DocsEnum￨p td￨p ,￨p Similarity￨p similarity￨p ,￨p byte￨p [￨p ]￨p norms￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f score￨f (￨f Collector￨f c￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f refillBuffer￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f score￨f (￨f Collector￨f c￨f ,￨f int￨f end￨f ,￨f int￨f firstDocID￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f docID￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f nextDoc￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f float￨f score￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f advance￨f (￨f int￨f target￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f for￨l (￨l (￨c pointer￨c )￨c ++￨c ;￨c (￨c pointer￨c )￨c <￨c (￨c pointerMax￨c )￨c ;￨c (￨c pointer￨c )￨c ++￨c )￨l {￨l if￨j (￨j (￨c docs￨c [￨c pointer￨c ]￨c )￨c >=￨c target￨c )￨j {￨j freq￨e =￨e freqs￨e [￨e pointer￨e ]￨e ;￨e return￨e doc￨e =￨e docs￨e [￨e pointer￨e ]￨e ;￨e }￨j }￨l int￨e newDoc￨e =￨e docsEnum￨e .￨e advance￨e (￨e target￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b newDoc￨b !=￨b (￨b DocsEnum￨b .￨b NO_MORE_DOCS￨b )￨b )￨b {￨b <END_BUG>￨b doc￨e =￨e newDoc￨e ;￨e freq￨e =￨e docsEnum￨e .￨e freq￨e (￨e )￨e ;￨e else￨j {￨j doc￨e =￨e NO_MORE_DOCS￨e ;￨e }￨j return￨e doc￨e ;￨e }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d final￨d class￨d LocalShowHistoryHandler￨d implements￨d OperationStepHandler￨d {￨d public￨e static￨e final￨e OperationStepHandler￨e INSTANCE￨e =￨e new￨e LocalShowHistoryHandler￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f execute￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f context￨e .￨e acquireControllerLock￨e (￨e )￨e ;￨e final￨e InstallationManager￨e installationManager￨e =￨e (￨e (￨e InstallationManager￨e )￨e (￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getRequiredService￨e (￨e NAME￨e )￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e PatchableTarget￨e .￨e TargetInfo￨e info￨e =￨e installationManager￨e .￨e getIdentity￨e (￨e )￨e .￨e loadTargetInfo￨e (￨e )￨e ;￨e final￨e InstalledImage￨e installedImage￨e =￨e info￨e .￨e getDirectoryStructure￨e (￨e )￨e .￨e getInstalledImage￨e (￨e )￨e ;￨e final￨e ModelNode￨e result￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e result￨e .￨e setEmptyList￨e (￨e )￨e ;￨e final￨e String￨e releaseID￨e =￨e info￨e .￨e getCumulativePatchID￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c Constants￨c .￨c BASE￨c .￨c equals￨c (￨c releaseID￨c )￨c )￨c )￨j {￨j fillHistory￨e (￨e result￨e ,￨e CUMULATIVE￨e ,￨e releaseID￨e ,￨e installedImage￨e .￨e getPatchHistoryDir￨e (￨e releaseID￨e )￨e )￨e ;￨e }￨j final￨e List￨e <￨e String￨e >￨e oneOffPatchIDs￨e =￨e info￨e .￨e getPatchIDs￨e (￨e )￨e ;￨e for￨l (￨l String￨c oneOffPatchID￨c :￨c oneOffPatchIDs￨c )￨l {￨l File￨e historyDir￨e =￨e installedImage￨e .￨e getPatchHistoryDir￨e (￨e oneOffPatchID￨e )￨e ;￨e fillHistory￨e (￨e result￨e ,￨e ONE_OFF￨e ,￨e oneOffPatchID￨e ,￨e historyDir￨e )￨e ;￨e }￨l context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e result￨e )￨e ;￨e context￨e .￨e stepCompleted￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f <START_BUG>￨b t￨b .￨b printStackTrace￨b (￨b )￨b ;￨b <END_BUG>￨b throw￨e MESSAGES￨e .￨e failedToShowHistory￨e (￨e t￨e )￨e ;￨e }￨f }￨f private￨f void￨f fillHistory￨f (￨f ModelNode￨f result￨f ,￨f PatchType￨f type￨f ,￨f String￨f oneOffPatchID￨f ,￨f File￨f historyDir￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TreeItem￨d extends￨d Item￨d {￨d Tree￨e parent￨e ;￨e TreeItem￨e parentItem￨e ;￨e TreeItem￨e [￨e ]￨e items￨e ;￨e int￨e itemCount￨e ;￨e String￨e [￨e ]￨e strings￨e ;￨e Image￨e [￨e ]￨e images￨e ;￨e boolean￨e checked￨e ;￨e boolean￨e grayed￨e ;￨e boolean￨e cached￨e ;￨e Color￨e foreground￨e ;￨e Color￨e background￨e ;￨e Color￨e [￨e ]￨e cellForeground￨e ;￨e Color￨e [￨e ]￨e cellBackground￨e ;￨e Font￨e font￨e ;￨e Font￨e [￨e ]￨e cellFont￨e ;￨e int￨e width￨e =￨e -￨e 1￨e ;￨e SWTTreeItem￨e handle￨e ;￨e static￨e final￨e int￨e IMAGETEXT_MARGIN￨e =￨e 2￨e ;￨e public￨f TreeItem￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TreeItem￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f TreeItem￨f (￨f TreeItem￨p parentItem￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TreeItem￨f (￨f TreeItem￨p parentItem￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f TreeItem￨f (￨f Tree￨p parent￨p ,￨p TreeItem￨p parentItem￨p ,￨p int￨p style￨p ,￨p int￨p index￨p ,￨p boolean￨p create￨p )￨f {￨f }￨f static￨f TreeItem￨f checkNull￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f static￨f Tree￨f checkNull￨f (￨f Tree￨p parent￨p )￨f {￨f }￨f static￨f int￨f checkIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f int￨f calculateWidth￨f (￨f int￨p index￨p ,￨p GC￨p gc￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f clear￨f (￨f )￨f {￨f }￨f public￨f void￨f clear￨f (￨f int￨p index￨p ,￨p boolean￨p all￨p )￨f {￨f }￨f public￨f void￨f clearAll￨f (￨f boolean￨p all￨p )￨f {￨f }￨f void￨f clearSelection￨f (￨f )￨f {￨f }￨f NSObject￨f createString￨f (￨f int￨p index￨p )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f Color￨f getBackground￨f (￨f )￨f {￨f }￨f public￨f Color￨f getBackground￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f boolean￨f getChecked￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getExpanded￨f (￨f )￨f {￨f }￨f public￨f Font￨f getFont￨f (￨f )￨f {￨f }￨f public￨f Font￨f getFont￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Color￨f getForeground￨f (￨f )￨f {￨f }￨f public￨f Color￨f getForeground￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f boolean￨f getGrayed￨f (￨f )￨f {￨f }￨f public￨f Image￨f getImage￨f (￨f )￨f {￨f }￨f public￨f Image￨f getImage￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getImageBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f TreeItem￨f getItem￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f getItemCount￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f [￨f ]￨f getItems￨f (￨f )￨f {￨f }￨f String￨f getNameText￨f (￨f )￨f {￨f }￨f public￨f Tree￨f getParent￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f getParentItem￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getTextBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f void￨f redraw￨f (￨f int￨p columnIndex￨p )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b parent￨b .￨b ignoreRedraw￨b )￨b ||￨b (￨b (￨b parent￨b .￨b drawCount￨b )￨b !=￨b 0￨b )￨b )￨b <END_BUG>￨b return￨e ;￨e NSOutlineView￨e outlineView￨e =￨e (￨e (￨e NSOutlineView￨e )￨e (￨e parent￨e .￨e view￨e )￨e )￨e ;￨e NSRect￨e rect￨e ;￨e if￨j (￨j (￨c (￨c (￨c columnIndex￨c ==￨c (￨c -￨c 1￨c )￨c )￨c ||￨c (￨c parent￨c .￨c hooks￨c (￨c MeasureItem￨c )￨c )￨c )￨c ||￨c (￨c parent￨c .￨c hooks￨c (￨c EraseItem￨c )￨c )￨c )￨c ||￨c (￨c parent￨c .￨c hooks￨c (￨c PaintItem￨c )￨c )￨c )￨j {￨j rect￨e =￨e outlineView￨e .￨e rectOfRow￨e (￨e outlineView￨e .￨e rowForItem￨e (￨e handle￨e )￨e )￨e ;￨e }￨j else￨j {￨j int￨e index￨e ;￨e if￨j (￨j (￨c parent￨c .￨c columnCount￨c )￨c ==￨c 0￨c )￨j {￨j index￨e =￨e (￨e (￨e (￨e parent￨e .￨e style￨e )￨e &￨e (￨e SWT￨e .￨e CHECK￨e )￨e )￨e !=￨e 0￨e )￨e ?￨e 1￨e :￨e 0￨e ;￨e }￨j else￨j {￨j TreeColumn￨e column￨e =￨e parent￨e .￨e getColumn￨e (￨e columnIndex￨e )￨e ;￨e index￨e =￨e (￨e (￨e int￨e )￨e (￨e outlineView￨e .￨e columnWithIdentifier￨e (￨e column￨e .￨e nsColumn￨e )￨e )￨e )￨e ;￨e }￨j rect￨e =￨e outlineView￨e .￨e frameOfCellAtColumn￨e (￨e index￨e ,￨e outlineView￨e .￨e rowForItem￨e (￨e handle￨e )￨e )￨e ;￨e }￨j outlineView￨e .￨e setNeedsDisplayInRect￨e (￨e rect￨e )￨e ;￨e }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f release￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f removeAll￨f (￨f )￨f {￨f }￨f public￨f void￨f setBackground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setBackground￨f (￨f int￨p index￨p ,￨p Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setChecked￨f (￨f boolean￨p checked￨p )￨f {￨f }￨f public￨f void￨f setExpanded￨f (￨f boolean￨p expanded￨p )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f int￨p index￨p ,￨p Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setForeground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setForeground￨f (￨f int￨p index￨p ,￨p Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setGrayed￨f (￨f boolean￨p grayed￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p [￨p ]￨p images￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f int￨p index￨p ,￨p Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setItemCount￨f (￨f int￨p count￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p [￨p ]￨p strings￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f int￨p index￨p ,￨p String￨p string￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d RawMarkup￨d extends￨d MarkupElement￨d {￨d private￨e final￨e CharSequence￨e string￨e ;￨e public￨f RawMarkup￨f (￨f final￨p CharSequence￨p string￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f final￨p Object￨p o￨p )￨f {￨f <START_BUG>￨b if￨b (￨b o￨b instanceof￨b String￨b )￨b {￨b <END_BUG>￨b return￨e string￨e .￨e equals￨e (￨e o￨e )￨e ;￨e if￨j (￨j o￨c instanceof￨c RawMarkup￨c )￨j {￨j return￨e string￨e .￨e equals￨e (￨e (￨e (￨e RawMarkup￨e )￨e (￨e o￨e )￨e )￨e .￨e string￨e )￨e ;￨e }￨j return￨e false￨e ;￨e }￨f @￨f Override￨f public￨f boolean￨f equalTo￨f (￨f final￨p MarkupElement￨p element￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f CharSequence￨f toCharSequence￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toUserDebugString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PersistenceContextInjectionSource￨d extends￨d InjectionSource￨d {￨d private￨e final￨e PersistenceContextType￨e type￨e ;￨e private￨e final￨e PersistenceContextInjectionSource￨e .￨e PersistenceContextJndiInjectable￨e injectable￨e ;￨e private￨e final￨e ServiceName￨e puServiceName￨e ;￨e public￨f PersistenceContextInjectionSource￨f (￨f final￨p PersistenceContextType￨p type￨p ,￨p final￨p SynchronizationType￨p synchronizationType￨p ,￨p final￨p Map￨p properties￨p ,￨p final￨p ServiceName￨p puServiceName￨p ,￨p final￨p ServiceRegistry￨p serviceRegistry￨p ,￨p final￨p String￨p scopedPuName￨p ,￨p final￨p String￨p injectionTypeName￨p ,￨p final￨p PersistenceUnitMetadata￨p pu￨p ,￨p final￨p JPADeploymentSettings￨p jpaDeploymentSettings￨p )￨f {￨f }￨f public￨f void￨f getResourceValue￨f (￨f final￨f ResolutionContext￨f resolutionContext￨f ,￨f final￨f ServiceBuilder￨f <￨f ?￨f >￨f serviceBuilder￨f ,￨f final￨f DeploymentPhaseContext￨f phaseContext￨f ,￨f final￨f Injector￨f <￨f ManagedReferenceFactory￨f >￨f injector￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f private￨d static￨d final￨d class￨d PersistenceContextJndiInjectable￨d implements￨d ManagedReferenceFactory￨d {￨d private￨e final￨e ServiceName￨e puServiceName￨e ;￨e private￨e final￨e ServiceRegistry￨e serviceRegistry￨e ;￨e private￨e final￨e PersistenceContextType￨e type￨e ;￨e private￨e final￨e SynchronizationType￨e synchronizationType￨e ;￨e private￨e final￨e Map￨e properties￨e ;￨e private￨e final￨e String￨e unitName￨e ;￨e private￨e final￨e String￨e injectionTypeName￨e ;￨e private￨e final￨e PersistenceUnitMetadata￨e pu￨e ;￨e private￨e final￨e JPADeploymentSettings￨e jpaDeploymentSettings￨e ;￨e private￨e static￨e final￨e String￨e ENTITY_MANAGER_CLASS￨e =￨e "javax.persistence.EntityManager"￨e ;￨e public￨f PersistenceContextJndiInjectable￨f (￨f final￨p ServiceName￨p puServiceName￨p ,￨p final￨p ServiceRegistry￨p serviceRegistry￨p ,￨p final￨p PersistenceContextType￨p type￨p ,￨p SynchronizationType￨p synchronizationType￨p ,￨p final￨p Map￨p properties￨p ,￨p final￨p String￨p unitName￨p ,￨p final￨p String￨p injectionTypeName￨p ,￨p final￨p PersistenceUnitMetadata￨p pu￨p ,￨p final￨p JPADeploymentSettings￨p jpaDeploymentSettings￨p )￨f {￨f }￨f @￨f Override￨f public￨f ManagedReference￨f getReference￨f (￨f )￨f {￨f PersistenceUnitServiceImpl￨e service￨e =￨e (￨e (￨e PersistenceUnitServiceImpl￨e )￨e (￨e serviceRegistry￨e .￨e getRequiredService￨e (￨e puServiceName￨e )￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e EntityManagerFactory￨e emf￨e =￨e service￨e .￨e getEntityManagerFactory￨e (￨e )￨e ;￨e EntityManager￨e entityManager￨e ;￨e boolean￨e standardEntityManager￨e =￨e PersistenceContextInjectionSource￨e .￨e PersistenceContextJndiInjectable￨e .￨e ENTITY_MANAGER_CLASS￨e .￨e equals￨e (￨e injectionTypeName￨e )￨e ;￨e if￨j (￨j type￨c .￨c equals￨c (￨c TRANSACTION￨c )￨c )￨j {￨j entityManager￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e jpa￨e .￨e container￨e .￨e TransactionScopedEntityManager￨e (￨e unitName￨e ,￨e properties￨e ,￨e emf￨e ,￨e synchronizationType￨e )￨e ;￨e if￨j (￨j JPA_LOGGER￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j JPA_LOGGER￨e .￨e debugf￨e (￨e "created<seq2seq4repair_space>new<seq2seq4repair_space>TransactionScopedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s"￨e ,￨e unitName￨e )￨e ;￨e }￨j }￨j else￨j {￨j boolean￨e useDeepInheritance￨e =￨e !￨e (￨e SHALLOW￨e .￨e equals￨e (￨e JPAService￨e .￨e getDefaultExtendedPersistenceInheritance￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c jpaDeploymentSettings￨c )￨c !=￨c null￨c )￨j {￨j useDeepInheritance￨e =￨e DEEP￨e .￨e equals￨e (￨e jpaDeploymentSettings￨e .￨e getExtendedPersistenceInheritanceType￨e (￨e )￨e )￨e ;￨e }￨j boolean￨e createdNewExtendedPersistence￨e =￨e false￨e ;￨e ExtendedEntityManager￨e entityManager1￨e ;￨e if￨j (￨j useDeepInheritance￨c )￨j {￨j entityManager1￨e =￨e INSTANCE￨e .￨e findExtendedPersistenceContext￨e (￨e unitName￨e )￨e ;￨e }￨j else￨j {￨j entityManager1￨e =￨e ExtendedPersistenceShallowInheritance￨e .￨e INSTANCE￨e .￨e findExtendedPersistenceContext￨e (￨e unitName￨e )￨e ;￨e }￨j if￨j (￨j entityManager1￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b entityManager1￨b =￨b new￨b ExtendedEntityManager￨b (￨b unitName￨b ,￨b emf￨b .￨b createEntityManager￨b (￨b properties￨b )￨b ,￨b synchronizationType￨b )￨b ;￨b <END_BUG>￨b createdNewExtendedPersistence￨e =￨e true￨e ;￨e if￨j (￨j JPA_LOGGER￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j JPA_LOGGER￨e .￨e debugf￨e (￨e "created<seq2seq4repair_space>new<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨e ,￨e unitName￨e ,￨e useDeepInheritance￨e )￨e ;￨e }￨j }￨j else￨j {￨j entityManager1￨e .￨e increaseReferenceCount￨e (￨e )￨e ;￨e if￨j (￨j JPA_LOGGER￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j JPA_LOGGER￨e .￨e debugf￨e (￨e (￨e "inherited<seq2seq4repair_space>existing<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>from<seq2seq4repair_space>SFSB<seq2seq4repair_space>invocation<seq2seq4repair_space>stack,<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>"￨e +￨e "%d<seq2seq4repair_space>beans<seq2seq4repair_space>sharing<seq2seq4repair_space>ExtendedEntityManager,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨e )￨e ,￨e unitName￨e ,￨e entityManager1￨e .￨e getReferenceCount￨e (￨e )￨e ,￨e useDeepInheritance￨e )￨e ;￨e }￨j }￨j entityManager￨e =￨e entityManager1￨e ;￨e CreatedEntityManagers￨e .￨e registerPersistenceContext￨e (￨e entityManager1￨e )￨e ;￨e if￨j (￨j createdNewExtendedPersistence￨c )￨j {￨j if￨j (￨j useDeepInheritance￨c )￨j {￨j INSTANCE￨e .￨e registerExtendedPersistenceContext￨e (￨e unitName￨e ,￨e entityManager1￨e )￨e ;￨e }￨j else￨j {￨j ExtendedPersistenceShallowInheritance￨e .￨e INSTANCE￨e .￨e registerExtendedPersistenceContext￨e (￨e unitName￨e ,￨e entityManager1￨e )￨e ;￨e }￨j }￨j }￨j if￨j (￨j !￨c standardEntityManager￨c )￨j {￨j Class￨e extensionClass￨e ;￨e try￨f (￨f )￨f {￨f extensionClass￨e =￨e pu￨e .￨e getClassLoader￨e (￨e )￨e .￨e loadClass￨e (￨e injectionTypeName￨e )￨e ;￨e }￨f catch￨f (￨f ClassNotFoundException￨p e￨p )￨f {￨f throw￨e MESSAGES￨e .￨e cannotLoadFromJpa￨e (￨e e￨e ,￨e injectionTypeName￨e )￨e ;￨e }￨f Object￨e targetValueToInject￨e =￨e entityManager￨e .￨e unwrap￨e (￨e extensionClass￨e )￨e ;￨e Class￨e [￨e ]￨e targetInterfaces￨e =￨e targetValueToInject￨e .￨e getClass￨e (￨e )￨e .￨e getInterfaces￨e (￨e )￨e ;￨e Class￨e [￨e ]￨e proxyInterfaces￨e =￨e new￨e Class￨e [￨e (￨e targetInterfaces￨e .￨e length￨e )￨e +￨e 1￨e ]￨e ;￨e boolean￨e alreadyHasInterfaceClass￨e =￨e false￨e ;￨e for￨l (￨l int￨c interfaceIndex￨c =￨c 0￨c ;￨c interfaceIndex￨c <￨c (￨c targetInterfaces￨c .￨c length￨c )￨c ;￨c interfaceIndex￨c ++￨c )￨l {￨l Class￨e interfaceClass￨e =￨e targetInterfaces￨e [￨e interfaceIndex￨e ]￨e ;￨e if￨j (￨j interfaceClass￨c .￨c equals￨c (￨c extensionClass￨c )￨c )￨j {￨j proxyInterfaces￨e =￨e targetInterfaces￨e ;￨e alreadyHasInterfaceClass￨e =￨e true￨e ;￨e break￨e ;￨e }￨j proxyInterfaces￨e [￨e (￨e 1￨e +￨e interfaceIndex￨e )￨e ]￨e =￨e interfaceClass￨e ;￨e }￨l if￨j (￨j !￨c alreadyHasInterfaceClass￨c )￨j {￨j proxyInterfaces￨e [￨e 0￨e ]￨e =￨e extensionClass￨e ;￨e }￨j EntityManagerUnwrappedTargetInvocationHandler￨e entityManagerUnwrappedTargetInvocationHandler￨e =￨e new￨e EntityManagerUnwrappedTargetInvocationHandler￨e (￨e entityManager￨e ,￨e extensionClass￨e )￨e ;￨e Object￨e proxyForUnwrappedObject￨e =￨e Proxy￨e .￨e newProxyInstance￨e (￨e extensionClass￨e .￨e getClassLoader￨e (￨e )￨e ,￨e proxyInterfaces￨e ,￨e entityManagerUnwrappedTargetInvocationHandler￨e )￨e ;￨e if￨j (￨j JPA_LOGGER￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j JPA_LOGGER￨e .￨e debugf￨e (￨e "injecting<seq2seq4repair_space>entity<seq2seq4repair_space>manager<seq2seq4repair_space>into<seq2seq4repair_space>a<seq2seq4repair_space>'%s'<seq2seq4repair_space>(unit<seq2seq4repair_space>name=%s)"￨e ,￨e extensionClass￨e .￨e getName￨e (￨e )￨e ,￨e unitName￨e )￨e ;￨e }￨j return￨e new￨e ValueManagedReference￨e (￨e new￨e org￨e .￨e jboss￨e .￨e msc￨e .￨e value￨e .￨e ImmediateValue￨e <￨e Object￨e >￨e (￨e proxyForUnwrappedObject￨e )￨e )￨e ;￨e }￨j return￨e new￨e ValueManagedReference￨e (￨e new￨e org￨e .￨e jboss￨e .￨e msc￨e .￨e value￨e .￨e ImmediateValue￨e <￨e Object￨e >￨e (￨e entityManager￨e )￨e )￨e ;￨e }￨f }￨d }￨d
public￨d class￨d TestPlanGui￨d extends￨d AbstractJMeterGuiComponent￨d {￨d private￨e JCheckBox￨e functionalMode￨e ;￨e private￨e JCheckBox￨e serializedMode￨e ;￨e private￨e ArgumentsPanel￨e argsPanel￨e ;￨e public￨f TestPlanGui￨f (￨f )￨f {￨f }￨f public￨f JPopupMenu￨f createPopupMenu￨f (￨f )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyTestElement￨f (￨f TestElement￨p plan￨p )￨f {￨f }￨f public￨f String￨f getStaticLabel￨f (￨f )￨f {￨f <START_BUG>￨b return￨b JMeterUtils￨b .￨b getResString￨b (￨b "Test<seq2seq4repair_space>Plan"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Collection￨f getMenuCategories￨f (￨f )￨f {￨f }￨f public￨f void￨f configure￨f (￨f TestElement￨p el￨p )￨f {￨f }￨f private￨f JPanel￨f createVariablePanel￨f (￨f )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PackageMapper￨d extends￨d AbstractBookmarkableMapper￨d {￨d private￨e final￨e String￨e mountPath￨e ;￨e private￨e final￨e PackageName￨e packageName￨e ;￨e private￨e final￨e IPageParametersEncoder￨e pageParametersEncoder￨e ;￨e public￨f PackageMapper￨f (￨f final￨p String￨p mountPath￨p ,￨p final￨p PackageName￨p packageName￨p )￨f {￨f }￨f public￨f PackageMapper￨f (￨f final￨p String￨p mountPath￨p ,￨p final￨p PackageName￨p packageName￨p ,￨p final￨p IPageParametersEncoder￨p pageParametersEncoder￨p )￨f {￨f }￨f @￨f Override￨f protected￨f Url￨f buildUrl￨f (￨f UrlInfo￨p info￨p )￨f {￨f Class￨e <￨e ?￨e extends￨e IRequestablePage￨e >￨e pageClass￨e =￨e info￨e .￨e getPageClass￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b pageClass￨b .￨b getName￨b (￨b )￨b .￨b startsWith￨b (￨b packageName￨b .￨b getName￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b Url￨e url￨e =￨e new￨e Url￨e (￨e )￨e ;￨e url￨e .￨e getSegments￨e (￨e )￨e .￨e add￨e (￨e mountPath￨e )￨e ;￨e url￨e .￨e getSegments￨e (￨e )￨e .￨e add￨e (￨e pageClass￨e .￨e getSimpleName￨e (￨e )￨e )￨e ;￨e encodePageComponentInfo￨e (￨e url￨e ,￨e info￨e .￨e getPageComponentInfo￨e (￨e )￨e )￨e ;￨e return￨e encodePageParameters￨e (￨e url￨e ,￨e info￨e .￨e getPageParameters￨e (￨e )￨e ,￨e pageParametersEncoder￨e )￨e ;￨e }￨e return￨e null￨e ;￨e }￨f @￨f Override￨f protected￨f UrlInfo￨f parseRequest￨f (￨f Request￨p request￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f pageMustHaveBeenCreatedBookmarkable￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f getCompatibilityScore￨f (￨f Request￨p request￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d ResourceRefTestCase￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d ResourceRefTestCase￨d .￨d class￨d )￨d ;￨d @￨d Deployment￨d public￨d static￨d Archive￨d <￨d ?￨d >￨d deployment￨d (￨d )￨d {￨d }￨d @￨f Test￨f public￨f void￨f testCorrectBinding￨f (￨f )￨f throws￨f NamingException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testInjection￨f (￨f )￨f throws￨f NamingException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testResourceRefEntriesWithoutResType￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testResourceEnvRefWithoutInjectionTarget￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f test2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f ResUrlChecker￨e bean￨e =￨e (￨e (￨e ResUrlChecker￨e )￨e (￨e new￨e InitialContext￨e (￨e )￨e .￨e lookup￨e (￨e "java:app/resource-ref-test/ResUrlCheckerBean"￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b URL￨b expected￨b =￨b new￨b URL￨b (￨b "http://localhost/url2"￨b )￨b ;￨b <END_BUG>￨b URL￨e actual￨e =￨e bean￨e .￨e getURL2￨e (￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e expected￨e ,￨e actual￨e )￨e ;￨e }￨f }￨d
public￨d class￨d Gcj￨d extends￨d DefaultCompilerAdapter￨d {￨d public￨f boolean￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupGCJCommand￨f (￨f )￨f {￨f Commandline￨e cmd￨e =￨e new￨e Commandline￨e (￨e )￨e ;￨e Path￨e classpath￨e =￨e new￨e Path￨e (￨e project￨e )￨e ;￨e if￨j (￨j (￨c bootclasspath￨c )￨c !=￨c null￨c )￨j {￨j classpath￨e .￨e append￨e (￨e bootclasspath￨e )￨e ;￨e }￨j <START_BUG>￨b addExtdirsToClasspath￨b (￨b classpath￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c (￨c bootclasspath￨c )￨c ==￨c null￨c )￨c ||￨c (￨c (￨c bootclasspath￨c .￨c size￨c (￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j includeJavaRuntime￨e =￨e true￨e ;￨e }￨j classpath￨e .￨e append￨e (￨e getCompileClasspath￨e (￨e )￨e )￨e ;￨e classpath￨e .￨e append￨e (￨e src￨e )￨e ;￨e cmd￨e .￨e setExecutable￨e (￨e "gcj"￨e )￨e ;￨e if￨j (￨j (￨c destDir￨c )￨c !=￨c null￨c )￨j {￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e "-d"￨e )￨e ;￨e cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setFile￨e (￨e destDir￨e )￨e ;￨e if￨j (￨j destDir￨c .￨c mkdirs￨c (￨c )￨c )￨j {￨j throw￨e new￨e BuildException￨e (￨e "Can't<seq2seq4repair_space>make<seq2seq4repair_space>output<seq2seq4repair_space>directories.<seq2seq4repair_space>Maybe<seq2seq4repair_space>permission<seq2seq4repair_space>is<seq2seq4repair_space>wrong.<seq2seq4repair_space>"￨e )￨e ;￨e }￨j }￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e "-classpath"￨e )￨e ;￨e cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setPath￨e (￨e classpath￨e )￨e ;￨e if￨j (￨j (￨c encoding￨c )￨c !=￨c null￨c )￨j {￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e (￨e "--encoding="￨e +￨e (￨e encoding￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j debug￨c )￨j {￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e "-g1"￨e )￨e ;￨e }￨j if￨j (￨j optimize￨c )￨j {￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e "-O"￨e )￨e ;￨e }￨j cmd￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e "-C"￨e )￨e ;￨e addCurrentCompilerArgs￨e (￨e cmd￨e )￨e ;￨e return￨e cmd￨e ;￨e }￨f }￨d
public￨d class￨d PerformanceTest￨d {￨d private￨e final￨e int￨e max￨e =￨e 10￨e ;￨e private￨e static￨e final￨e File￨e BIG_FILE￨e =￨e new￨e File￨e (￨e System￨e .￨e getProperty￨e (￨e "java.io.tmpdir"￨e )￨e ,￨e "worldcitiespop.txt"￨e )￨e ;￨e @￨f BeforeClass￨f public￨f static￨f void￨f setUpClass￨f (￨f )￨f throws￨f FileNotFoundException￨f ,￨f IOException￨f (￨f )￨f {￨f }￨f private￨f BufferedReader￨f getBufferedReader￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f long￨f parse￨f (￨f final￨f Reader￨f in￨f ,￨f boolean￨f traverseColumns￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b final￨b CSVFormat￨b format￨b =￨b CSVFormat￨b .￨b defaults￨b (￨b )￨b .￨b withIgnoreSurroundingSpaces￨b (￨b false￨b )￨b .￨b build￨b (￨b )￨b ;￨b <END_BUG>￨b long￨e recordCount￨e =￨e 0￨e ;￨e for￨l (￨l final￨c CSVRecord￨c record￨c :￨c format￨c .￨c parse￨c (￨c in￨c )￨c )￨l {￨l recordCount￨e ++￨e ;￨e if￨j (￨j traverseColumns￨c )￨j {￨j for￨l (￨l String￨c value￨c :￨c record￨c )￨l {￨l }￨l }￨j }￨l return￨e recordCount￨e ;￨e }￨f private￨f void￨f println￨f (￨f final￨p String￨p s￨p )￨f {￨f }￨f private￨f long￨f readAll￨f (￨f final￨f BufferedReader￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f long￨f testParseBigFile￨f (￨f boolean￨f traverseColumns￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testParseBigFileRepeat￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testReadBigFile￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d EqualExpression￨d extends￨d BinaryExpression￨d {￨d public￨f EqualExpression￨f (￨f Expression￨p left￨p ,￨p Expression￨p right￨p ,￨p int￨p operator￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f final￨f boolean￨f areTypesCastCompatible￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p )￨f {￨f }￨f public￨f final￨f void￨f computeConstant￨f (￨f TypeBinding￨p leftType￨p ,￨p TypeBinding￨p rightType￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedBoolean￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Label￨p trueLabel￨p ,￨p Label￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedBooleanEqual￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Label￨p trueLabel￨p ,￨p Label￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedNonBooleanEqual￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Label￨p trueLabel￨p ,￨p Label￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f boolean￨f isCompactableOperation￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f boolean￨e argsContainCast￨e =￨e false￨e ;￨e if￨j (￨j (￨c left￨c )￨c instanceof￨c CastExpression￨c )￨j {￨j left￨e .￨e bits￨e |=￨e IgnoreNeedForCastCheckMASK￨e ;￨e argsContainCast￨e =￨e true￨e ;￨e }￨j TypeBinding￨e leftType￨e =￨e left￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e if￨j (￨j (￨c right￨c )￨c instanceof￨c CastExpression￨c )￨j {￨j right￨e .￨e bits￨e |=￨e IgnoreNeedForCastCheckMASK￨e ;￨e argsContainCast￨e =￨e true￨e ;￨e }￨j TypeBinding￨e rightType￨e =￨e right￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e if￨j (￨j (￨c leftType￨c ==￨c null￨c )￨c ||￨c (￨c rightType￨c ==￨c null￨c )￨c )￨j {￨j constant￨e =￨e NotAConstant￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j (￨c leftType￨c .￨c isBaseType￨c (￨c )￨c )￨c &&￨c (￨c rightType￨c .￨c isBaseType￨c (￨c )￨c )￨c )￨j {￨j <START_BUG>￨b int￨b operatorSignature￨b =￨b ResolveTypeTables￨b [￨b OperatorIds￨b .￨b EQUAL_EQUAL￨b ]￨b [￨b (￨b (￨b (￨b leftType￨b .￨b id￨b )￨b <<￨b 4￨b )￨b +￨b (￨b rightType￨b .￨b id￨b )￨b )￨b ]￨b ;￨b <END_BUG>￨b left￨e .￨e implicitConversion￨e =￨e operatorSignature￨e >￨e >￨e >￨e 12￨e ;￨e right￨e .￨e implicitConversion￨e =￨e (￨e operatorSignature￨e >￨e >￨e >￨e 4￨e )￨e &￨e 255￨e ;￨e bits￨e |=￨e operatorSignature￨e &￨e 15￨e ;￨e if￨j (￨j (￨c operatorSignature￨c &￨c 15￨c )￨c ==￨c (￨c TypeIds￨c .￨c T_undefined￨c )￨c )￨j {￨j constant￨e =￨e Constant￨e .￨e NotAConstant￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e invalidOperator￨e (￨e this￨e ,￨e leftType￨e ,￨e rightType￨e )￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j argsContainCast￨c )￨j {￨j CastExpression￨e .￨e checkNeedForArgumentCasts￨e (￨e scope￨e ,￨e OperatorIds￨e .￨e EQUAL_EQUAL￨e ,￨e operatorSignature￨e ,￨e left￨e ,￨e leftType￨e .￨e id￨e ,￨e right￨e ,￨e rightType￨e .￨e id￨e )￨e ;￨e }￨j computeConstant￨e (￨e leftType￨e ,￨e rightType￨e )￨e ;￨e return￨e this￨e .￨e resolvedType￨e =￨e BooleanBinding￨e ;￨e }￨j if￨j (￨j (￨c areTypesCastCompatible￨c (￨c scope￨c ,￨c rightType￨c ,￨c leftType￨c )￨c )￨c ||￨c (￨c areTypesCastCompatible￨c (￨c scope￨c ,￨c leftType￨c ,￨c rightType￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c rightType￨c .￨c id￨c )￨c ==￨c (￨c T_String￨c )￨c )￨c &&￨c (￨c (￨c leftType￨c .￨c id￨c )￨c ==￨c (￨c T_String￨c )￨c )￨c )￨j {￨j computeConstant￨e (￨e leftType￨e ,￨e rightType￨e )￨e ;￨e }￨j else￨j {￨j constant￨e =￨e NotAConstant￨e ;￨e }￨j if￨j (￨j (￨c rightType￨c .￨c id￨c )￨c ==￨c (￨c T_String￨c )￨c )￨j {￨j right￨e .￨e implicitConversion￨e =￨e TypeIds￨e .￨e String2String￨e ;￨e }￨j if￨j (￨j (￨c leftType￨c .￨c id￨c )￨c ==￨c (￨c T_String￨c )￨c )￨j {￨j left￨e .￨e implicitConversion￨e =￨e TypeIds￨e .￨e String2String￨e ;￨e }￨j boolean￨e unnecessaryLeftCast￨e =￨e (￨e (￨e left￨e .￨e bits￨e )￨e &￨e (￨e UnnecessaryCastMask￨e )￨e )￨e !=￨e 0￨e ;￨e boolean￨e unnecessaryRightCast￨e =￨e (￨e (￨e right￨e .￨e bits￨e )￨e &￨e (￨e UnnecessaryCastMask￨e )￨e )￨e !=￨e 0￨e ;￨e if￨j (￨j unnecessaryLeftCast￨c ||￨c unnecessaryRightCast￨c )￨j {￨j TypeBinding￨e alternateLeftType￨e =￨e (￨e unnecessaryLeftCast￨e )￨e ?￨e (￨e (￨e CastExpression￨e )￨e (￨e left￨e )￨e )￨e .￨e expression￨e .￨e resolvedType￨e :￨e leftType￨e ;￨e TypeBinding￨e alternateRightType￨e =￨e (￨e unnecessaryRightCast￨e )￨e ?￨e (￨e (￨e CastExpression￨e )￨e (￨e right￨e )￨e )￨e .￨e expression￨e .￨e resolvedType￨e :￨e rightType￨e ;￨e if￨j (￨j (￨c areTypesCastCompatible￨c (￨c scope￨c ,￨c alternateLeftType￨c ,￨c alternateRightType￨c )￨c )￨c ||￨c (￨c areTypesCastCompatible￨c (￨c scope￨c ,￨c alternateRightType￨c ,￨c alternateLeftType￨c )￨c )￨c )￨j {￨j if￨j (￨j unnecessaryLeftCast￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e unnecessaryCast￨e (￨e (￨e (￨e CastExpression￨e )￨e (￨e left￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j unnecessaryRightCast￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e unnecessaryCast￨e (￨e (￨e (￨e CastExpression￨e )￨e (￨e right￨e )￨e )￨e )￨e ;￨e }￨j }￨j }￨j return￨e this￨e .￨e resolvedType￨e =￨e BooleanBinding￨e ;￨e }￨j constant￨e =￨e NotAConstant￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e notCompatibleTypesError￨e (￨e this￨e ,￨e leftType￨e ,￨e rightType￨e )￨e ;￨e return￨e null￨e ;￨e }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
class￨d DefaultFailureDetailView￨d implements￨d FailureDetailView￨d {￨d JTextArea￨e fTextArea￨e ;￨e public￨f Component￨f getComponent￨f (￨f )￨f {￨f }￨f public￨f void￨f showFailure￨f (￨f TestFailure￨p failure￨p )￨f {￨f <START_BUG>￨b fTextArea￨b .￨b setText￨b (￨b BaseTestRunner￨b .￨b getFilteredTrace￨b (￨b failure￨b .￨b thrownException￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b fTextArea￨e .￨e select￨e (￨e 0￨e ,￨e 0￨e )￨e ;￨e }￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DatabaseTimerPersistence￨d implements￨d TimerPersistence￨d ,￨d Service￨d <￨d DatabaseTimerPersistence￨d >￨d {￨d private￨e final￨e InjectedValue￨e <￨e ManagedReferenceFactory￨e >￨e dataSourceInjectedValue￨e =￨e new￨e InjectedValue￨e <￨e ManagedReferenceFactory￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e ModuleLoader￨e >￨e moduleLoader￨e =￨e new￨e InjectedValue￨e <￨e ModuleLoader￨e >￨e (￨e )￨e ;￨e private￨e final￨e String￨e name￨e ;￨e private￨e final￨e String￨e database￨e ;￨e private￨e final￨e String￨e partition￨e ;￨e private￨e volatile￨e ManagedReference￨e managedReference￨e ;￨e private￨e volatile￨e DataSource￨e dataSource￨e ;￨e private￨e volatile￨e Properties￨e sql￨e ;￨e private￨e MarshallerFactory￨e factory￨e ;￨e private￨e MarshallingConfiguration￨e configuration￨e ;￨e private￨e static￨e final￨e String￨e CREATE_TABLE￨e =￨e "create-table"￨e ;￨e private￨e static￨e final￨e String￨e CREATE_TIMER￨e =￨e "create-timer"￨e ;￨e private￨e static￨e final￨e String￨e UPDATE_TIMER￨e =￨e "update-timer"￨e ;￨e private￨e static￨e final￨e String￨e LOAD_ALL_TIMERS￨e =￨e "load-all-timers"￨e ;￨e private￨e static￨e final￨e String￨e LOAD_TIMER￨e =￨e "load-timer"￨e ;￨e private￨e static￨e final￨e String￨e DELETE_TIMER￨e =￨e "delete-timer"￨e ;￨e public￨f DatabaseTimerPersistence￨f (￨f final￨p String￨p name￨p ,￨p final￨p String￨p database￨p ,￨p String￨p partition￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f void￨f runCreateTable￨f (￨f )￨f {￨f }￨f private￨f String￨f sql￨f (￨f final￨p String￨p key￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f addTimer￨f (￨f final￨p TimerImpl￨p timerEntity￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f persistTimer￨f (￨f final￨p TimerImpl￨p timerEntity￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f timerUndeployed￨f (￨f final￨p String￨p timedObjectId￨p )￨f {￨f }￨f @￨f Override￨f public￨f List￨f <￨f TimerImpl￨f >￨f loadActiveTimers￨f (￨f final￨p String￨p timedObjectId￨p ,￨p final￨p TimerServiceImpl￨p timerService￨p )￨f {￨f }￨f @￨f Override￨f public￨f DatabaseTimerPersistence￨f getValue￨f (￨f )￨f throws￨f IllegalArgumentException￨f ,￨f IllegalStateException￨f (￨f )￨f {￨f }￨f private￨f TimerImpl￨f timerFromResult￨f (￨f final￨f ResultSet￨f resultSet￨f ,￨f final￨f TimerServiceImpl￨f timerService￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f boolean￨e calendarTimer￨e =￨e resultSet￨e .￨e getBoolean￨e (￨e 24￨e )￨e ;￨e TimerImpl￨e .￨e Builder￨e builder￨e =￨e null￨e ;￨e if￨j (￨j calendarTimer￨c )￨j {￨j CalendarTimer￨e .￨e Builder￨e cb￨e =￨e CalendarTimer￨e .￨e builder￨e (￨e )￨e ;￨e builder￨e =￨e cb￨e ;￨e cb￨e .￨e setScheduleExprSecond￨e (￨e resultSet￨e .￨e getString￨e (￨e 10￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprMinute￨e (￨e resultSet￨e .￨e getString￨e (￨e 11￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprHour￨e (￨e resultSet￨e .￨e getString￨e (￨e 12￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprDayOfWeek￨e (￨e resultSet￨e .￨e getString￨e (￨e 13￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprDayOfMonth￨e (￨e resultSet￨e .￨e getString￨e (￨e 14￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprMonth￨e (￨e resultSet￨e .￨e getString￨e (￨e 15￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprYear￨e (￨e resultSet￨e .￨e getString￨e (￨e 16￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprStartDate￨e (￨e resultSet￨e .￨e getTimestamp￨e (￨e 17￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprEndDate￨e (￨e resultSet￨e .￨e getTimestamp￨e (￨e 18￨e )￨e )￨e ;￨e cb￨e .￨e setScheduleExprTimezone￨e (￨e resultSet￨e .￨e getString￨e (￨e 19￨e )￨e )￨e ;￨e cb￨e .￨e setAutoTimer￨e (￨e resultSet￨e .￨e getBoolean￨e (￨e 20￨e )￨e )￨e ;￨e final￨e String￨e clazz￨e =￨e resultSet￨e .￨e getString￨e (￨e 21￨e )￨e ;￨e final￨e String￨e methodName￨e =￨e resultSet￨e .￨e getString￨e (￨e 22￨e )￨e ;￨e if￨j (￨j methodName￨c !=￨c null￨c )￨j {￨j final￨e String￨e paramString￨e =￨e resultSet￨e .￨e getString￨e (￨e 23￨e )￨e ;￨e final￨e String￨e [￨e ]￨e params￨e =￨e (￨e (￨e paramString￨e ==￨e null￨e )￨e ||￨e (￨e paramString￨e .￨e isEmpty￨e (￨e )￨e )￨e )￨e ?￨e new￨e String￨e [￨e 0￨e ]￨e :￨e paramString￨e .￨e split￨e (￨e ";"￨e )￨e ;￨e <START_BUG>￨b final￨b Method￨b timeoutMethod￨b =￨b CalendarTimer￨b .￨b getTimeoutMethod￨b (￨b new￨b TimeoutMethod￨b (￨b clazz￨b ,￨b methodName￨b ,￨b params￨b )￨b ,￨b timerService￨b .￨b getTimedObjectInvoker￨b (￨b )￨b .￨b getValue￨b (￨b )￨b .￨b getClassLoader￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j timeoutMethod￨c ==￨c null￨c )￨j {￨j ROOT_LOGGER￨e .￨e timerReinstatementFailed￨e (￨e resultSet￨e .￨e getString￨e (￨e 2￨e )￨e ,￨e resultSet￨e .￨e getString￨e (￨e 1￨e )￨e ,￨e new￨e NoSuchMethodException￨e (￨e )￨e )￨e ;￨e }￨j cb￨e .￨e setTimeoutMethod￨e (￨e timeoutMethod￨e )￨e ;￨e }￨j }￨j else￨j {￨j builder￨e =￨e TimerImpl￨e .￨e builder￨e (￨e )￨e ;￨e }￨j builder￨e .￨e setId￨e (￨e resultSet￨e .￨e getString￨e (￨e 1￨e )￨e )￨e ;￨e builder￨e .￨e setTimedObjectId￨e (￨e resultSet￨e .￨e getString￨e (￨e 2￨e )￨e )￨e ;￨e builder￨e .￨e setInitialDate￨e (￨e resultSet￨e .￨e getTimestamp￨e (￨e 3￨e )￨e )￨e ;￨e builder￨e .￨e setRepeatInterval￨e (￨e resultSet￨e .￨e getLong￨e (￨e 4￨e )￨e )￨e ;￨e builder￨e .￨e setNextDate￨e (￨e resultSet￨e .￨e getTimestamp￨e (￨e 5￨e )￨e )￨e ;￨e builder￨e .￨e setPreviousRun￨e (￨e resultSet￨e .￨e getTimestamp￨e (￨e 6￨e )￨e )￨e ;￨e builder￨e .￨e setPrimaryKey￨e (￨e deSerialize￨e (￨e resultSet￨e .￨e getString￨e (￨e 7￨e )￨e )￨e )￨e ;￨e builder￨e .￨e setInfo￨e (￨e (￨e (￨e Serializable￨e )￨e (￨e deSerialize￨e (￨e resultSet￨e .￨e getString￨e (￨e 8￨e )￨e )￨e )￨e )￨e )￨e ;￨e builder￨e .￨e setTimerState￨e (￨e TimerState￨e .￨e valueOf￨e (￨e resultSet￨e .￨e getString￨e (￨e 9￨e )￨e )￨e )￨e ;￨e builder￨e .￨e setPersistent￨e (￨e true￨e )￨e ;￨e return￨e builder￨e .￨e build￨e (￨e timerService￨e )￨e ;￨e }￨f private￨f void￨f statementParameters￨f (￨f final￨f TimerImpl￨f timerEntity￨f ,￨f final￨f PreparedStatement￨f statement￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f String￨f serialize￨f (￨f final￨p Serializable￨p serializable￨p )￨f {￨f }￨f public￨f Object￨f deSerialize￨f (￨f final￨f String￨f data￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f Timestamp￨f timestamp￨f (￨f final￨p Date￨p date￨p )￨f {￨f }￨f public￨f InjectedValue￨f <￨f ManagedReferenceFactory￨f >￨f getDataSourceInjectedValue￨f (￨f )￨f {￨f }￨f public￨f InjectedValue￨f <￨f ModuleLoader￨f >￨f getModuleLoader￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f safeClose￨f (￨f final￨p Closeable￨p resource￨p )￨f {￨f }￨f private￨f static￨f void￨f safeClose￨f (￨f final￨p Statement￨p resource￨p )￨f {￨f }￨f private￨f static￨f void￨f safeClose￨f (￨f final￨p Connection￨p resource￨p )￨f {￨f }￨f private￨f static￨f void￨f safeClose￨f (￨f final￨p ResultSet￨p resource￨p )￨f {￨f }￨f }￨d
public￨d class￨d JaxrsSpringProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨e static￨e final￨e String￨e VERSION_KEY￨e =￨e "resteasy.version"￨e ;￨e private￨e static￨e final￨e String￨e SPRING_INT_JAR_BASE￨e =￨e "resteasy-spring"￨e ;￨e private￨e static￨e final￨e String￨e JAR_LOCATION￨e =￨e "resteasy-spring-jar"￨e ;￨e private￨e static￨e final￨e ModuleIdentifier￨e MODULE￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.resteasy.resteasy-spring"￨e )￨e ;￨e public￨e static￨e final￨e String￨e SPRING_LISTENER￨e =￨e "org.jboss.resteasy.plugins.spring.SpringContextLoaderListener"￨e ;￨e public￨e static￨e final￨e String￨e SPRING_SERVLET￨e =￨e "org.springframework.web.servlet.DispatcherServlet"￨e ;￨e @￨e Deprecated￨e public￨e static￨e final￨e String￨e DISABLE_PROPERTY￨e =￨e "org.jboss.as.jaxrs.disableSpringIntegration"￨e ;￨e public￨e static￨e final￨e String￨e ENABLE_PROPERTY￨e =￨e "org.jboss.as.jaxrs.enableSpringIntegration"￨e ;￨e public￨e static￨e final￨e String￨e SERVICE_NAME￨e =￨e "resteasy-spring-integration-resource-root"￨e ;￨e private￨e final￨e ServiceTarget￨e serviceTarget￨e ;￨e private￨e VirtualFile￨e resourceRoot￨e ;￨e public￨f JaxrsSpringProcessor￨f (￨f ServiceTarget￨p serviceTarget￨p )￨f {￨f }￨f protected￨f synchronized￨f VirtualFile￨f getResteasySpringVirtualFile￨f (￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f Module￨e module￨e =￨e Module￨e .￨e getBootModuleLoader￨e (￨e )￨e .￨e loadModule￨e (￨e JaxrsSpringProcessor￨e .￨e MODULE￨e )￨e ;￨e URL￨e fileUrl￨e =￨e module￨e .￨e getClassLoader￨e (￨e )￨e .￨e getResource￨e (￨e JaxrsSpringProcessor￨e .￨e JAR_LOCATION￨e )￨e ;￨e if￨j (￨j fileUrl￨c ==￨c null￨c )￨j {￨j throw￨e JAXRS_LOGGER￨e .￨e noSpringIntegrationJar￨e (￨e )￨e ;￨e }￨j <START_BUG>￨b File￨b dir￨b =￨b new￨b File￨b (￨b fileUrl￨b .￨b getFile￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b File￨e file￨e =￨e null￨e ;￨e for￨l (￨l String￨c jar￨c :￨c dir￨c .￨c list￨c (￨c )￨c )￨l {￨l if￨j (￨j jar￨c .￨c endsWith￨c (￨c ".jar"￨c )￨c )￨j {￨j file￨e =￨e new￨e File￨e (￨e dir￨e ,￨e jar￨e )￨e ;￨e break￨e ;￨e }￨j }￨l if￨j (￨j file￨c ==￨c null￨c )￨j {￨j throw￨e JAXRS_LOGGER￨e .￨e noSpringIntegrationJar￨e (￨e )￨e ;￨e }￨j VirtualFile￨e vf￨e =￨e VFS￨e .￨e getChild￨e (￨e file￨e .￨e toURI￨e (￨e )￨e )￨e ;￨e final￨e Closeable￨e mountHandle￨e =￨e VFS￨e .￨e mountZip￨e (￨e file￨e ,￨e vf￨e ,￨e TempFileProviderService￨e .￨e provider￨e (￨e )￨e )￨e ;￨e Service￨f <￨f Closeable￨f >￨f mountHandleService￨f =￨f new￨f Service￨f <￨f Closeable￨f >￨f (￨f )￨f (￨f )￨f {￨f public￨f void￨f start￨f (￨f StartContext￨f startContext￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f void￨f stop￨f (￨f StopContext￨p stopContext￨p )￨f {￨f VFSUtils￨e .￨e safeClose￨e (￨e mountHandle￨e )￨e ;￨e }￨f public￨f Closeable￨f getValue￨f (￨f )￨f throws￨f IllegalArgumentException￨f ,￨f IllegalStateException￨f (￨f )￨f {￨f return￨e mountHandle￨e ;￨e }￨f }￨f ;￨e ServiceBuilder￨e <￨e Closeable￨e >￨e builder￨e =￨e serviceTarget￨e .￨e addService￨e (￨e JBOSS￨e .￨e append￨e (￨e JaxrsSpringProcessor￨e .￨e SERVICE_NAME￨e )￨e ,￨e mountHandleService￨e )￨e ;￨e builder￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e resourceRoot￨e =￨e vf￨e ;￨e return￨e resourceRoot￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e DeploymentUnitProcessingException￨e (￨e e￨e )￨e ;￨e }￨f }￨f public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d FormComponent￨d <￨d T￨d >￨d extends￨d WebMarkupContainer￨d <￨d T￨d >￨d implements￨d IFormProcessingListener￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f EMPTY_STRING_ARRAY￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨e static￨e final￨e String￨e VALUE_SEPARATOR￨e =￨e ";"￨e ;￨e public￨f static￨f interface￨f IVisitor￨f (￨f )￨f {￨f public￨f Object￨f formComponent￨f (￨f IFormProcessingListener￨p formComponent￨p )￨f {￨f }￨f }￨f public￨d abstract￨d static￨d class￨d AbstractVisitor￨d implements￨d FormComponent￨d .￨d IVisitor￨d {￨d public￨f Object￨f formComponent￨f (￨f IFormProcessingListener￨p component￨p )￨f {￨f }￨f protected￨f abstract￨f void￨f onFormComponent￨f (￨f FormComponent￨p formComponent￨p )￨f {￨f }￨f }￨d private￨d final￨d class￨d RequiredStateChange￨d extends￨d Change￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e boolean￨e required￨e =￨e isRequired￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f undo￨f (￨f )￨f {￨f }￨f }￨d private￨e Class￨e type￨e ;￨e protected￨e static￨e final￨e short￨e FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨e =￨e FLAG_RESERVED1￨e ;￨e private￨e static￨e final￨e short￨e FLAG_PERSISTENT￨e =￨e FLAG_RESERVED2￨e ;￨e private￨e static￨e final￨e short￨e FLAG_REQUIRED￨e =￨e FLAG_RESERVED3￨e ;￨e private￨e static￨e final￨e String￨e NO_RAW_INPUT￨e =￨e "[-NO-RAW-INPUT-]"￨e ;￨e private￨e String￨e rawInput￨e =￨e FormComponent￨e .￨e NO_RAW_INPUT￨e ;￨e private￨e Object￨e validators￨e =￨e null￨e ;￨e private￨e IModel￨e labelModel￨e =￨e null￨e ;￨e private￨e transient￨e T￨e convertedInput￨e ;￨e public￨f FormComponent￨f (￨f MarkupContainer￨p parent￨p ,￨p final￨p String￨p id￨p )￨f {￨f }￨f public￨f FormComponent￨f (￨f MarkupContainer￨p parent￨p ,￨p final￨p String￨p id￨p ,￨p IModel￨p <￨p T￨p >￨p model￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f add￨f (￨f final￨p IValidator￨p validator￨p )￨f {￨f }￨f public￨f Form￨f getForm￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f FormComponent￨f setLabel￨f (￨f final￨p IModel￨p labelModel￨p )￨f {￨f }￨f public￨f IModel￨f getLabel￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getInput￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getInputAsArray￨f (￨f )￨f {￨f }￨f public￨f String￨f getInputName￨f (￨f )￨f {￨f String￨e id￨e =￨e FormComponent￨e .￨e getId￨e (￨e )￨e ;￨e final￨e PrependingStringBuffer￨e inputName￨e =￨e new￨e PrependingStringBuffer￨e (￨e id￨e .￨e length￨e (￨e )￨e )￨e ;￨e Component￨e c￨e =￨e this￨e ;￨e while￨l (￨l true￨c )￨l {￨l inputName￨e .￨e prepend￨e (￨e id￨e )￨e ;￨e c￨e =￨e c￨e .￨e getParent￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b c￨b ==￨b null￨b )￨b ||￨b (￨b c￨b instanceof￨b Form￨b )￨b )￨b ||￨b (￨b c￨b instanceof￨b Page￨b )￨b )￨b {￨b <END_BUG>￨b break￨e ;￨e }￨e inputName￨e .￨e prepend￨e (￨e PATH_SEPARATOR￨e )￨e ;￨e id￨e =￨e c￨e .￨e getId￨e (￨e )￨e ;￨e }￨l return￨e inputName￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f final￨f List￨f <￨f IValidator￨f >￨f getValidators￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getValue￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getRawInput￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f hasRawInput￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f invalid￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMultiPart￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isPersistent￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isValid￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isValidated￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInputNullable￨f (￨f )￨f {￨f }￨f public￨f void￨f setModelValue￨f (￨f final￨p String￨p value￨p )￨f {￨f }￨f public￨f void￨f setModelValue￨f (￨f final￨p String￨p [￨p ]￨p value￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f setPersistent￨f (￨f final￨p boolean￨p persistent￨p )￨f {￨f }￨f public￨f void￨f updateModel￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f valid￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f clearInput￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f checkRequired￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f validateRequired￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f final￨f void￨f convert￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f T￨f convertValue￨f (￨f String￨f [￨f ]￨f value￨f )￨f throws￨f ConversionException￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f validate￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f final￨f void￨f validateValidators￨f (￨f )￨f {￨f }￨f protected￨f String￨f getModelValue￨f (￨f )￨f {￨f }￨f protected￨f final￨f int￨f inputAsInt￨f (￨f )￨f {￨f }￨f protected￨f final￨f int￨f inputAsInt￨f (￨f final￨p int￨p defaultValue￨p )￨f {￨f }￨f protected￨f final￨f int￨f [￨f ]￨f inputAsIntArray￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f protected￨f void￨f onInvalid￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f internalOnModelChanged￨f (￨f )￨f {￨f }￨f protected￨f void￨f onValid￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f supportsPersistence￨f (￨f )￨f {￨f }￨f private￨f void￨f validators_add￨f (￨f final￨p IValidator￨p validator￨p )￨f {￨f }￨f private￨f IValidator￨f validators_get￨f (￨f int￨p index￨p )￨f {￨f }￨f private￨f int￨f validators_size￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f inputChanged￨f (￨f )￨f {￨f }￨f public￨f final￨f FormComponent￨f setRequired￨f (￨f final￨p boolean￨p required￨p )￨f {￨f }￨f public￨f boolean￨f isRequired￨f (￨f )￨f {￨f }￨f public￨f final￨f T￨f getConvertedInput￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onDetach￨f (￨f )￨f {￨f }￨f public￨f final￨f Class￨f getType￨f (￨f )￨f {￨f }￨f public￨f final￨f FormComponent￨f setType￨f (￨f Class￨p type￨p )￨f {￨f }￨f public￨f String￨f getValidatorKeyPrefix￨f (￨f )￨f {￨f }￨f public￨f void￨f error￨f (￨f IValidationError￨p error￨p )￨f {￨f }￨f public￨f final￨f void￨f processInput￨f (￨f )￨f {￨f }￨f private￨d class￨d ValidatableAdapter￨d implements￨d IValidatable￨d <￨d T￨d >￨d {￨d public￨f void￨f error￨f (￨f IValidationError￨p error￨p )￨f {￨f }￨f public￨f T￨f getValue￨f (￨f )￨f {￨f }￨f }￨d private￨d class￨d MessageSource￨d implements￨d IMessageSource￨d {￨d public￨f String￨f getMessage￨f (￨f String￨p key￨p )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f addDefaultVars￨f (￨f Map￨p <￨p String￨p ,￨p Object￨p >￨p params￨p )￨f {￨f }￨f private￨f Object￨f getLabel￨f (￨f )￨f {￨f }￨f public￨f String￨f substitute￨f (￨f String￨f string￨f ,￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f vars￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d public￨f boolean￨f processChildren￨f (￨f )￨f {￨f }￨f }￨d
class￨d AddCompilationUnitToIndex￨d extends￨d IndexRequest￨d {￨d IFile￨e resource￨e ;￨e IndexManager￨e manager￨e ;￨e IPath￨e indexedContainer￨e ;￨e char￨e [￨e ]￨e contents￨e ;￨e public￨f AddCompilationUnitToIndex￨f (￨f IFile￨p resource￨p ,￨p IndexManager￨p manager￨p ,￨p IPath￨p indexedContainer￨p )￨f {￨f }￨f public￨f boolean￨f belongsTo￨f (￨f String￨p jobFamily￨p )￨f {￨f }￨f public￨f boolean￨f execute￨f (￨f IProgressMonitor￨p progressMonitor￨p )￨f {￨f if￨j (￨j (￨c progressMonitor￨c !=￨c null￨c )￨c &&￨c (￨c progressMonitor￨c .￨c isCanceled￨c (￨c )￨c )￨c )￨j {￨j return￨e IJob￨e .￨e COMPLETE￨e ;￨e }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b IIndex￨b index￨b =￨b manager￨b .￨b getIndex￨b (￨b this￨b .￨b indexedContainer￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j index￨c ==￨c null￨c )￨j {￨j return￨e IJob￨e .￨e COMPLETE￨e ;￨e }￨j ReadWriteMonitor￨e monitor￨e =￨e manager￨e .￨e getMonitorFor￨e (￨e index￨e )￨e ;￨e if￨j (￨j monitor￨c ==￨c null￨c )￨j {￨j return￨e IJob￨e .￨e COMPLETE￨e ;￨e }￨j try￨f (￨f )￨f {￨f monitor￨e .￨e enterWrite￨e (￨e )￨e ;￨e char￨e [￨e ]￨e contents￨e =￨e this￨e .￨e getContents￨e (￨e )￨e ;￨e if￨j (￨j contents￨c ==￨c null￨c )￨j {￨j return￨e IJob￨e .￨e FAILED￨e ;￨e }￨j index￨e .￨e add￨e (￨e new￨e IFileDocument￨e (￨e resource￨e ,￨e contents￨e )￨e ,￨e new￨e SourceIndexer￨e (￨e )￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f monitor￨e .￨e exitWrite￨e (￨e )￨e ;￨e }￨f }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f if￨j (￨j JobManager￨c .￨c VERBOSE￨c )￨j {￨j JobManager￨e .￨e verbose￨e (￨e (￨e (￨e "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>index<seq2seq4repair_space>"￨e +￨e (￨e this￨e .￨e resource￨e )￨e )￨e +￨e "<seq2seq4repair_space>because<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>following<seq2seq4repair_space>exception:"￨e )￨e )￨e ;￨e e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨j return￨e IJob￨e .￨e FAILED￨e ;￨e }￨f return￨e IJob￨e .￨e COMPLETE￨e ;￨e }￨f private￨f char￨f [￨f ]￨f getContents￨f (￨f )￨f {￨f }￨f public￨f void￨f initializeContents￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CreateVFolderOnMessageCommand￨d extends￨d FolderCommand￨d {￨d private￨e static￨e final￨e Logger￨e LOG￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.columba.mail.folder.command"￨e )￨e ;￨e public￨e static￨e final￨e String￨e VFOLDER_ON_SUBJECT￨e =￨e "Subject"￨e ;￨e public￨e static￨e final￨e String￨e VFOLDER_ON_FROM￨e =￨e "From"￨e ;￨e public￨e static￨e final￨e String￨e VFOLDER_ON_TO￨e =￨e "To"￨e ;￨e private￨e String￨e vfolderType￨e ;￨e private￨e MessageFolder￨e parentFolder￨e =￨e null￨e ;￨e private￨e VirtualFolder￨e vfolder￨e =￨e null￨e ;￨e public￨f CreateVFolderOnMessageCommand￨f (￨f FrameMediator￨p frameController￨p ,￨p DefaultCommandReference￨p [￨p ]￨p references￨p ,￨p String￨p vfolderType￨p )￨f {￨f }￨f public￨f void￨f updateGUI￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f treeModel￨e .￨e nodeStructureChanged￨e (￨e parentFolder￨e )￨e ;￨e if￨j (￨j (￨c vfolder￨c )￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b new￨b org￨b .￨b columba￨b .￨b mail￨b .￨b gui￨b .￨b config￨b .￨b filter￨b .￨b ConfigFrame￨b (￨b getFrameMediator￨b (￨b )￨b .￨b getView￨b (￨b )￨b .￨b getFrame￨b (￨b )￨b ,￨b vfolder￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f public￨f void￨f execute￨f (￨f WorkerStatusController￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f VirtualFolder￨f createVirtualFolder￨f (￨f String￨p folderName￨p ,￨p String￨p headerField￨p ,￨p String￨p pattern￨p ,￨p MessageFolder￨p parent￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d StatisticalSummaryValuesTest￨d extends￨d TestCase￨d {￨d public￨f StatisticalSummaryValuesTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f public￨f void￨f testSerialization￨f (￨f )￨f {￨f }￨f public￨f void￨f testEqualsAndHashCode￨f (￨f )￨f {￨f StatisticalSummaryValues￨e u￨e =￨e new￨e StatisticalSummaryValues￨e (￨e 1￨e ,￨e 2￨e ,￨e 3￨e ,￨e 4￨e ,￨e 5￨e ,￨e 6￨e )￨e ;￨e StatisticalSummaryValues￨e t￨e =￨e null￨e ;￨e assertTrue￨e (￨e "reflexive"￨e ,￨e u￨e .￨e equals￨e (￨e u￨e )￨e )￨e ;￨e assertFalse￨e (￨e "non-null<seq2seq4repair_space>compared<seq2seq4repair_space>to<seq2seq4repair_space>null"￨e ,￨e u￨e .￨e equals￨e (￨e t￨e )￨e )￨e ;￨e <START_BUG>￨b assertFalse￨b (￨b "wrong<seq2seq4repair_space>type"￨b ,￨b u￨b .￨b equals￨b (￨b Double￨b .￨b valueOf￨b (￨b 0￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b t￨e =￨e new￨e StatisticalSummaryValues￨e (￨e 1￨e ,￨e 2￨e ,￨e 3￨e ,￨e 4￨e ,￨e 5￨e ,￨e 6￨e )￨e ;￨e assertTrue￨e (￨e "instances<seq2seq4repair_space>with<seq2seq4repair_space>same<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>equal"￨e ,￨e t￨e .￨e equals￨e (￨e u￨e )￨e )￨e ;￨e assertEquals￨e (￨e "hash<seq2seq4repair_space>code"￨e ,￨e u￨e .￨e hashCode￨e (￨e )￨e ,￨e t￨e .￨e hashCode￨e (￨e )￨e )￨e ;￨e u￨e =￨e new￨e StatisticalSummaryValues￨e (￨e Double￨e .￨e NaN￨e ,￨e 2￨e ,￨e 3￨e ,￨e 4￨e ,￨e 5￨e ,￨e 6￨e )￨e ;￨e t￨e =￨e new￨e StatisticalSummaryValues￨e (￨e 1￨e ,￨e Double￨e .￨e NaN￨e ,￨e 3￨e ,￨e 4￨e ,￨e 5￨e ,￨e 6￨e )￨e ;￨e assertFalse￨e (￨e "instances<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>different<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>different"￨e ,￨e (￨e (￨e u￨e .￨e equals￨e (￨e t￨e )￨e )￨e ||￨e (￨e t￨e .￨e equals￨e (￨e u￨e )￨e )￨e )￨e )￨e ;￨e }￨f private￨f void￨f verifyEquality￨f (￨f StatisticalSummaryValues￨p s￨p ,￨p StatisticalSummaryValues￨p u￨p )￨f {￨f }￨f }￨d
public￨d class￨d Composite￨d extends￨d Scrollable￨d {￨d Layout￨e layout￨e ;￨e Control￨e [￨e ]￨e tabList￨e ;￨e int￨e layoutCount￨e ;￨e int￨e backgroundMode￨e ;￨e boolean￨e keyInputHappened￨e ;￨e Composite￨f (￨f )￨f {￨f }￨f public￨f Composite￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f Control￨f [￨f ]￨f _getChildren￨f (￨f )￨f {￨f }￨f Control￨f [￨f ]￨f _getTabList￨f (￨f )￨f {￨f }￨f boolean￨f acceptsFirstResponder￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f int￨f accessibilityAttributeNames￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f boolean￨f accessibilityIsIgnored￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f public￨f void￨f changed￨f (￨f Control￨p [￨p ]￨p changed￨p )￨f {￨f }￨f public￨f Point￨f computeSize￨f (￨f int￨p wHint￨p ,￨p int￨p hHint￨p ,￨p boolean￨p changed￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f Control￨f [￨f ]￨f computeTabList￨f (￨f )￨f {￨f }￨f void￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p resize￨p )￨f {￨f }￨f void￨f createHandle￨f (￨f )￨f {￨f state￨e |=￨e CANVAS￨e ;￨e boolean￨e scrolled￨e =￨e (￨e (￨e style￨e )￨e &￨e (￨e (￨e SWT￨e .￨e V_SCROLL￨e )￨e |￨e (￨e SWT￨e .￨e H_SCROLL￨e )￨e )￨e )￨e !=￨e 0￨e ;￨e if￨j (￨j !￨c scrolled￨c )￨j {￨j state￨e |=￨e THEME_BACKGROUND￨e ;￨e }￨j NSRect￨e rect￨e =￨e new￨e NSRect￨e (￨e )￨e ;￨e if￨j (￨j scrolled￨c ||￨c (￨c hasBorder￨c (￨c )￨c )￨c )￨j {￨j NSScrollView￨e scrollWidget￨e =￨e (￨e (￨e NSScrollView￨e )￨e (￨e new￨e SWTScrollView￨e (￨e )￨e .￨e alloc￨e (￨e )￨e )￨e )￨e ;￨e scrollWidget￨e .￨e initWithFrame￨e (￨e rect￨e )￨e ;￨e scrollWidget￨e .￨e setDrawsBackground￨e (￨e false￨e )￨e ;￨e if￨j (￨j (￨c (￨c style￨c )￨c &￨c (￨c SWT￨c .￨c H_SCROLL￨c )￨c )￨c !=￨c 0￨c )￨j {￨j scrollWidget￨e .￨e setHasHorizontalScroller￨e (￨e true￨e )￨e ;￨e }￨j if￨j (￨j (￨c (￨c style￨c )￨c &￨c (￨c SWT￨c .￨c V_SCROLL￨c )￨c )￨c !=￨c 0￨c )￨j {￨j scrollWidget￨e .￨e setHasVerticalScroller￨e (￨e true￨e )￨e ;￨e }￨j scrollWidget￨e .￨e setBorderType￨e (￨e (￨e hasBorder￨e (￨e )￨e ?￨e OS￨e .￨e NSBezelBorder￨e :￨e OS￨e .￨e NSNoBorder￨e )￨e )￨e ;￨e scrollView￨e =￨e scrollWidget￨e ;￨e }￨j <START_BUG>￨b NSView￨b widget￨b =￨b (￨b (￨b NSView￨b )￨b (￨b new￨b SWTView￨b (￨b )￨b .￨b alloc￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b widget￨e .￨e initWithFrame￨e (￨e rect￨e )￨e ;￨e view￨e =￨e widget￨e ;￨e }￨f void￨f doCommandBySelector￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p selector￨p )￨f {￨f }￨f void￨f drawWidget￨f (￨f int￨p id￨p ,￨p NSGraphicsContext￨p context￨p ,￨p NSRect￨p rect￨p ,￨p boolean￨p sendPaint￨p )￨f {￨f }￨f void￨f flagsChanged￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f Composite￨f findDeferredControl￨f (￨f )￨f {￨f }￨f Menu￨f [￨f ]￨f findMenus￨f (￨f Control￨p control￨p )￨f {￨f }￨f void￨f fixChildren￨f (￨f Shell￨p newShell￨p ,￨p Shell￨p oldShell￨p ,￨p Decorations￨p newDecorations￨p ,￨p Decorations￨p oldDecorations￨p ,￨p Menu￨p [￨p ]￨p menus￨p )￨f {￨f }￨f void￨f fixTabList￨f (￨f Control￨p control￨p )￨f {￨f }￨f public￨f int￨f getBackgroundMode￨f (￨f )￨f {￨f }￨f public￨f Control￨f [￨f ]￨f getChildren￨f (￨f )￨f {￨f }￨f int￨f getChildrenCount￨f (￨f )￨f {￨f }￨f public￨f Layout￨f getLayout￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getLayoutDeferred￨f (￨f )￨f {￨f }￨f public￨f Control￨f [￨f ]￨f getTabList￨f (￨f )￨f {￨f }￨f boolean￨f hooksKeys￨f (￨f )￨f {￨f }￨f boolean￨f insertText￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p string￨p )￨f {￨f }￨f public￨f boolean￨f isLayoutDeferred￨f (￨f )￨f {￨f }￨f boolean￨f isOpaque￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f boolean￨f isTabGroup￨f (￨f )￨f {￨f }￨f void￨f keyDown￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f public￨f void￨f layout￨f (￨f )￨f {￨f }￨f public￨f void￨f layout￨f (￨f boolean￨p changed￨p )￨f {￨f }￨f public￨f void￨f layout￨f (￨f boolean￨p changed￨p ,￨p boolean￨p all￨p )￨f {￨f }￨f public￨f void￨f layout￨f (￨f Control￨p [￨p ]￨p changed￨p )￨f {￨f }￨f void￨f markLayout￨f (￨f boolean￨p changed￨p ,￨p boolean￨p all￨p )￨f {￨f }￨f Point￨f minimumSize￨f (￨f int￨p wHint￨p ,￨p int￨p Hint￨p ,￨p boolean￨p changed￨p )￨f {￨f }￨f void￨f pageDown￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p sender￨p )￨f {￨f }￨f void￨f pageUp￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p sender￨p )￨f {￨f }￨f void￨f reflectScrolledClipView￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p aClipView￨p )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f void￨f removeControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f void￨f resized￨f (￨f )￨f {￨f }￨f void￨f scrollWheel￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f public￨f void￨f setBackgroundMode￨f (￨f int￨p mode￨p )￨f {￨f }￨f public￨f boolean￨f setFocus￨f (￨f )￨f {￨f }￨f public￨f void￨f setLayout￨f (￨f Layout￨p layout￨p )￨f {￨f }￨f public￨f void￨f setLayoutDeferred￨f (￨f boolean￨p defer￨p )￨f {￨f }￨f boolean￨f setMarkedText_selectedRange￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p string￨p ,￨p int￨p range￨p )￨f {￨f }￨f boolean￨f setScrollBarVisible￨f (￨f ScrollBar￨p bar￨p ,￨p boolean￨p visible￨p )￨f {￨f }￨f boolean￨f setTabGroupFocus￨f (￨f )￨f {￨f }￨f public￨f void￨f setTabList￨f (￨f Control￨p [￨p ]￨p tabList￨p )￨f {￨f }￨f int￨f traversalCode￨f (￨f int￨p key￨p ,￨p NSEvent￨p theEvent￨p )￨f {￨f }￨f void￨f updateBackgroundMode￨f (￨f )￨f {￨f }￨f void￨f updateLayout￨f (￨f boolean￨p all￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d JMSMessageDrivenBeanTestCase￨d {￨d @￨f Deployment￨f public￨f static￨f Archive￨f <￨f ?￨f >￨f deployment￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSendMessage￨f (￨f )￨f throws￨f JMSException￨f ,￨f NamingException￨f (￨f )￨f {￨f final￨e InitialContext￨e ctx￨e =￨e new￨e InitialContext￨e (￨e )￨e ;￨e final￨e QueueConnectionFactory￨e factory￨e =￨e (￨e (￨e QueueConnectionFactory￨e )￨e (￨e ctx￨e .￨e lookup￨e (￨e "java:/JmsXA"￨e )￨e )￨e )￨e ;￨e final￨e QueueConnection￨e connection￨e =￨e factory￨e .￨e createQueueConnection￨e (￨e )￨e ;￨e connection￨e .￨e start￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e QueueSession￨e session￨e =￨e connection￨e .￨e createQueueSession￨e (￨e false￨e ,￨e AUTO_ACKNOWLEDGE￨e )￨e ;￨e final￨e Queue￨e replyDestination￨e =￨e session￨e .￨e createTemporaryQueue￨e (￨e )￨e ;￨e final￨e QueueReceiver￨e receiver￨e =￨e session￨e .￨e createReceiver￨e (￨e replyDestination￨e )￨e ;￨e final￨e Message￨e message￨e =￨e session￨e .￨e createTextMessage￨e (￨e "Test"￨e )￨e ;￨e message￨e .￨e setJMSReplyTo￨e (￨e replyDestination￨e )￨e ;￨e <START_BUG>￨b final￨b Destination￨b destination￨b =￨b (￨b (￨b Destination￨b )￨b (￨b ctx￨b .￨b lookup￨b (￨b "java:jboss/jms/queue/test"￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b final￨e MessageProducer￨e producer￨e =￨e session￨e .￨e createProducer￨e (￨e destination￨e )￨e ;￨e producer￨e .￨e send￨e (￨e message￨e )￨e ;￨e producer￨e .￨e close￨e (￨e )￨e ;￨e final￨e Message￨e reply￨e =￨e receiver￨e .￨e receive￨e (￨e 1000￨e )￨e ;￨e assertNotNull￨e (￨e reply￨e )￨e ;￨e final￨e String￨e result￨e =￨e (￨e (￨e javax￨e .￨e jms￨e .￨e TextMessage￨e )￨e (￨e reply￨e )￨e )￨e .￨e getText￨e (￨e )￨e ;￨e assertEquals￨e (￨e "replying<seq2seq4repair_space>Test"￨e ,￨e result￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f }￨f }￨f }￨d
public￨d class￨d LuceneSegmentInputSplitTest￨d extends￨d AbstractLuceneStorageTest￨d {￨d private￨e Configuration￨e configuration￨e ;￨e @￨f Before￨f public￨f void￨f before￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b configuration￨b =￨b new￨b Configuration￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f After￨f public￨f void￨f after￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testGetSegment￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨d Test￨d (￨d expected￨d =￨d IllegalArgumentException￨d .￨d class￨d )￨d public￨d void￨d testGetSegmentNonExistingSegment￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d private￨f void￨f assertSegmentContainsOneDoc￨f (￨f String￨f segmentName￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DeleteResourceElementsOperation￨d extends￨d MultiOperation￨d {￨d protected￨f DeleteResourceElementsOperation￨f (￨f IJavaElement￨p [￨p ]￨p elementsToProcess￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f private￨f void￨f deletePackageFragment￨f (￨f IPackageFragment￨f frag￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f IResource￨e res￨e =￨e frag￨e .￨e getResource￨e (￨e )￨e ;￨e if￨j (￨j (￨c res￨c !=￨c null￨c )￨c &&￨c (￨c (￨c res￨c .￨c getType￨c (￨c )￨c )￨c ==￨c (￨c IResource￨c .￨c FOLDER￨c )￨c )￨c )￨j {￨j IJavaElement￨e [￨e ]￨e childrenOfInterest￨e =￨e frag￨e .￨e getChildren￨e (￨e )￨e ;￨e if￨j (￨j (￨c childrenOfInterest￨c .￨c length￨c )￨c >￨c 0￨c )￨j {￨j IResource￨e [￨e ]￨e resources￨e =￨e new￨e IResource￨e [￨e childrenOfInterest￨e .￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c childrenOfInterest￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l resources￨e [￨e i￨e ]￨e =￨e childrenOfInterest￨e [￨e i￨e ]￨e .￨e getCorrespondingResource￨e (￨e )￨e ;￨e }￨l deleteResources￨e (￨e resources￨e ,￨e fForce￨e )￨e ;￨e }￨j Object￨e [￨e ]￨e nonJavaResources￨e =￨e frag￨e .￨e getNonJavaResources￨e (￨e )￨e ;￨e int￨e actualResourceCount￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c nonJavaResources￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c nonJavaResources￨c [￨c i￨c ]￨c )￨c instanceof￨c IResource￨c )￨j {￨j actualResourceCount￨e ++￨e ;￨e }￨j }￨l IResource￨e [￨e ]￨e actualNonJavaResources￨e =￨e new￨e IResource￨e [￨e actualResourceCount￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c nonJavaResources￨c .￨c length￨c ,￨c index￨c =￨c 0￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c nonJavaResources￨c [￨c i￨c ]￨c )￨c instanceof￨c IResource￨c )￨j {￨j actualNonJavaResources￨e [￨e (￨e index￨e ++￨e )￨e ]￨e =￨e (￨e (￨e IResource￨e )￨e (￨e nonJavaResources￨e [￨e i￨e ]￨e )￨e )￨e ;￨e }￨j }￨l deleteResources￨e (￨e actualNonJavaResources￨e ,￨e fForce￨e )￨e ;￨e IResource￨e [￨e ]￨e remainingFiles￨e ;￨e try￨f (￨f )￨f {￨f remainingFiles￨e =￨e (￨e (￨e IFolder￨e )￨e (￨e res￨e )￨e )￨e .￨e members￨e (￨e )￨e ;￨e }￨f catch￨f (￨f CoreException￨p ce￨p )￨f {￨f throw￨e new￨e JavaModelException￨e (￨e ce￨e )￨e ;￨e }￨f boolean￨e isEmpty￨e =￨e true￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c length￨c =￨c remainingFiles￨c .￨c length￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l IResource￨e file￨e =￨e remainingFiles￨e [￨e i￨e ]￨e ;￨e if￨j (￨j file￨c instanceof￨c IFile￨c )￨j {￨j this￨e .￨e deleteResource￨e (￨e file￨e ,￨e (￨e (￨e IResource￨e .￨e FORCE￨e )￨e |￨e (￨e IResource￨e .￨e KEEP_HISTORY￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j isEmpty￨e =￨e false￨e ;￨e }￨j }￨l <START_BUG>￨b if￨b (￨b isEmpty￨b )￨b {￨b <END_BUG>￨b IResource￨e fragResource￨e =￨e frag￨e .￨e getResource￨e (￨e )￨e ;￨e if￨j (￨j fragResource￨c !=￨c null￨c )￨j {￨j deleteEmptyPackageFragment￨e (￨e frag￨e ,￨e false￨e ,￨e fragResource￨e .￨e getParent￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨f protected￨f String￨f getMainTaskName￨f (￨f )￨f {￨f }￨f protected￨f void￨f processElement￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f verify￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d OperationCoordinatorStepHandler￨d {￨d private￨e final￨e LocalHostControllerInfo￨e localHostControllerInfo￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e ProxyController￨e >￨e hostProxies￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e ProxyController￨e >￨e serverProxies￨e ;￨e private￨e final￨e OperationSlaveStepHandler￨e localSlaveHandler￨e ;￨e private￨e volatile￨e ExecutorService￨e executorService￨e ;￨e OperationCoordinatorStepHandler￨f (￨f final￨p LocalHostControllerInfo￨p localHostControllerInfo￨p ,￨p final￨p Map￨p <￨p String￨p ,￨p ProxyController￨p >￨p hostProxies￨p ,￨p final￨p Map￨p <￨p String￨p ,￨p ProxyController￨p >￨p serverProxies￨p ,￨p final￨p OperationSlaveStepHandler￨p localSlaveHandler￨p )￨f {￨f }￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f void￨f setExecutorService￨f (￨f ExecutorService￨p executorService￨p )￨f {￨f }￨f private￨f ExecutorService￨f getExecutorService￨f (￨f )￨f {￨f }￨f private￨f void￨f routetoMasterDomainController￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p )￨f {￨f <START_BUG>￨b context￨b .￨b getFailureDescription￨b (￨b )￨b .￨b set￨b (￨b String￨b .￨b format￨b (￨b (￨b "Operation<seq2seq4repair_space>%s<seq2seq4repair_space>for<seq2seq4repair_space>address<seq2seq4repair_space>%s<seq2seq4repair_space>can<seq2seq4repair_space>only<seq2seq4repair_space>handled<seq2seq4repair_space>by<seq2seq4repair_space>the<seq2seq4repair_space>"￨b +￨b "master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller;<seq2seq4repair_space>this<seq2seq4repair_space>host<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>the<seq2seq4repair_space>master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller"￨b )￨b ,￨b operation￨b .￨b get￨b (￨b OP￨b )￨b .￨b asString￨b (￨b )￨b ,￨b PathAddress￨b .￨b pathAddress￨b (￨b operation￨b .￨b get￨b (￨b OP_ADDR￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f private￨f void￨f executeDirect￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f void￨f executeTwoPhaseOperation￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f OperationRouting￨f routing￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f void￨f storeDeploymentContent￨f (￨f ModelNode￨f opNode￨f ,￨f OperationContext￨f context￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasStorableContent￨f (￨f ModelNode￨p operation￨p )￨f {￨f }￨f private￨e static￨e final￨e List￨e <￨e String￨e >￨e CONTENT_ADDITION_PARAMETERS￨e =￨e Arrays￨e .￨e asList￨e (￨e INPUT_STREAM_INDEX￨e ,￨e BYTES￨e ,￨e URL￨e )￨e ;￨e private￨f static￨f boolean￨f hasValidContentAdditionParameterDefined￨f (￨f ModelNode￨p item￨p )￨f {￨f }￨f }￨d
class￨d Substring￨d extends￨d AbstractVal￨d implements￨d Val￨d {￨d private￨e final￨e Val￨e _val1￨e ;￨e private￨e final￨e Val￨e _val2￨e ;￨e private￨e Joins￨e _joins￨e =￨e null￨e ;￨e private￨e ClassMetaData￨e _meta￨e =￨e null￨e ;￨e public￨f Substring￨f (￨f Val￨p val1￨p ,￨p Val￨p val2￨p )￨f {￨f }￨f public￨f ClassMetaData￨f getMetaData￨f (￨f )￨f {￨f }￨f public￨f void￨f setMetaData￨f (￨f ClassMetaData￨p meta￨p )￨f {￨f }￨f public￨f boolean￨f isVariable￨f (￨f )￨f {￨f }￨f public￨f Class￨f getType￨f (￨f )￨f {￨f }￨f public￨f void￨f setImplicitType￨f (￨f Class￨p type￨p )￨f {￨f }￨f public￨f void￨f initialize￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p boolean￨p nullTest￨p )￨f {￨f }￨f public￨f Joins￨f getJoins￨f (￨f )￨f {￨f }￨f public￨f Object￨f toDataStoreValue￨f (￨f Object￨p val￨p ,￨p JDBCStore￨p store￨p )￨f {￨f }￨f public￨f void￨f select￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p pks￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f selectColumns￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p pks￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f groupBy￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f <START_BUG>￨b sel￨b .￨b groupBy￨b (￨b newSQLBuffer￨b (￨b sel￨b ,￨b store￨b ,￨b params￨b ,￨b fetch￨b )￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f orderBy￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p asc￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f private￨f SQLBuffer￨f newSQLBuffer￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f Object￨f load￨f (￨f Result￨f res￨f ,￨f JDBCStore￨f store￨f ,￨f JDBCFetchConfiguration￨f fetch￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasVariable￨f (￨f Variable￨p var￨p )￨f {￨f }￨f public￨f void￨f calculateValue￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p Val￨p other￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f clearParameters￨f (￨f )￨f {￨f }￨f public￨f int￨f length￨f (￨f )￨f {￨f }￨f public￨f void￨f appendTo￨f (￨f SQLBuffer￨p sql￨p ,￨p int￨p index￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f }￨d
public￨d class￨d LoggerLevelChange￨d extends￨d AbstractModelUpdateHandler￨d {￨d static￨e final￨e String￨e OPERATION_NAME￨e =￨e "change-log-level"￨e ;￨e static￨e final￨e LoggerLevelChange￨e INSTANCE￨e =￨e new￨e LoggerLevelChange￨e (￨e )￨e ;￨e @￨f Override￨f protected￨f void￨f updateModel￨f (￨f final￨f ModelNode￨f operation￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f ,￨f final￨f ModelNode￨f model￨f ,￨f final￨f ServiceVerificationHandler￨f verificationHandler￨f ,￨f final￨f List￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f newControllers￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e String￨e name￨e =￨e address￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e ModelNode￨e level￨e =￨e CommonAttributes￨e .￨e LEVEL￨e .￨e validateResolvedOperation￨e (￨e model￨e )￨e ;￨e <START_BUG>￨b final￨b ServiceRegistry￨b serviceRegistry￨b =￨b context￨b .￨b getServiceRegistry￨b (￨b false￨b )￨b ;￨b <END_BUG>￨b final￨e ServiceController￨e <￨e Logger￨e >￨e controller￨e =￨e (￨e (￨e ServiceController￨e <￨e Logger￨e >￨e )￨e (￨e serviceRegistry￨e .￨e getService￨e (￨e LogServices￨e .￨e loggerName￨e (￨e name￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c controller￨c !=￨c null￨c )￨c &&￨c (￨c level￨c .￨c isDefined￨c (￨c )￨c )￨c )￨j {￨j controller￨e .￨e getValue￨e (￨e )￨e .￨e setLevel￨e (￨e Level￨e .￨e parse￨e (￨e level￨e .￨e asString￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨f }￨d
public￨d abstract￨d class￨d AbstractMessageChannel￨d implements￨d BeanNameAware￨d ,￨d MessageChannel￨d {￨d protected￨e Log￨e logger￨e =￨e LogFactory￨e .￨e getLog￨e (￨e getClass￨e (￨e )￨e )￨e ;￨e private￨e String￨e beanName￨e ;￨e private￨e final￨e ChannelInterceptorChain￨e interceptorChain￨e =￨e new￨e ChannelInterceptorChain￨e (￨e )￨e ;￨e public￨f AbstractMessageChannel￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setBeanName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f String￨f getBeanName￨f (￨f )￨f {￨f }￨f public￨f void￨f setInterceptors￨f (￨f List￨p <￨p ChannelInterceptor￨p >￨p interceptors￨p )￨f {￨f }￨f public￨f void￨f addInterceptor￨f (￨f ChannelInterceptor￨p interceptor￨p )￨f {￨f }￨f public￨f List￨f <￨f ChannelInterceptor￨f >￨f getInterceptors￨f (￨f )￨f {￨f }￨f protected￨f ChannelInterceptorChain￨f getInterceptorChain￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f final￨f boolean￨f send￨f (￨f Message￨p <￨p ?￨p >￨p message￨p )￨f {￨f }￨f @￨f Override￨f public￨f final￨f boolean￨f send￨f (￨f Message￨p <￨p ?￨p >￨p message￨p ,￨p long￨p timeout￨p )￨f {￨f Assert￨e .￨e notNull￨e (￨e message￨e ,￨e "Message<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e )￨e ;￨e if￨j (￨j logger￨c .￨c isTraceEnabled￨c (￨c )￨c )￨j {￨j <START_BUG>￨b logger￨b .￨b trace￨b (￨b (￨b (￨b (￨b "["￨b +￨b (￨b this￨b .￨b beanName￨b )￨b )￨b +￨b "]<seq2seq4repair_space>sending<seq2seq4repair_space>message<seq2seq4repair_space>"￨b )￨b +￨b message￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j message￨e =￨e this￨e .￨e interceptorChain￨e .￨e preSend￨e (￨e message￨e ,￨e this￨e )￨e ;￨e if￨j (￨j message￨c ==￨c null￨c )￨j {￨j return￨e false￨e ;￨e }￨j try￨f (￨f )￨f {￨f boolean￨e sent￨e =￨e sendInternal￨e (￨e message￨e ,￨e timeout￨e )￨e ;￨e this￨e .￨e interceptorChain￨e .￨e postSend￨e (￨e message￨e ,￨e this￨e ,￨e sent￨e )￨e ;￨e return￨e sent￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f if￨j (￨j e￨c instanceof￨c MessagingException￨c )￨j {￨j throw￨e (￨e (￨e MessagingException￨e )￨e (￨e e￨e )￨e )￨e ;￨e }￨j throw￨e new￨e org￨e .￨e springframework￨e .￨e messaging￨e .￨e MessageDeliveryException￨e (￨e message￨e ,￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>send<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>channel<seq2seq4repair_space>'"￨e +￨e (￨e this￨e .￨e getBeanName￨e (￨e )￨e )￨e )￨e +￨e "'"￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f protected￨f abstract￨f boolean￨f sendInternal￨f (￨f Message￨p <￨p ?￨p >￨p message￨p ,￨p long￨p timeout￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PlatformLoggingMXBeanGetLoggerLevelHandler￨d implements￨d OperationStepHandler￨d ,￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨e INSTANCE￨e =￨e new￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨e (￨e )￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f SIGNATURE￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e final￨e ParametersValidator￨e parametersValidator￨e =￨e new￨e ParametersValidator￨e (￨e )￨e ;￨e private￨f PlatformLoggingMXBeanGetLoggerLevelHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f parametersValidator￨e .￨e validate￨e (￨e operation￨e )￨e ;￨e final￨e String￨e loggerName￨e =￨e operation￨e .￨e require￨e (￨e LOGGER_NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Object￨f level￨f =￨f ManagementFactory￨f .￨f getPlatformMBeanServer￨f (￨f )￨f .￨f invoke￨f (￨f PLATFORM_LOGGING_OBJECT_NAME￨f ,￨f "getLoggerLevel"￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨e PlatformLoggingMXBeanGetLoggerLevelHandler￨e .￨e SIGNATURE￨e )￨e ;￨e final￨e ModelNode￨e result￨e =￨e context￨e .￨e getResult￨e (￨e )￨e ;￨e if￨j (￨j level￨c !=￨c null￨c )￨j {￨j result￨e .￨e set￨e (￨e level￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j }￨f catch￨f (￨f JMRuntimeException￨p e￨p )￨f {￨f throw￨e e￨e ;￨e }￨f catch￨f (￨f JMException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f <START_BUG>￨b context￨b .￨b completeStep￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f }￨d
@￨d ServerSetup￨d (￨d NonExistingProfileTestCase￨d .￨d NonExistingProfileTestCaseSetup￨d .￨d class￨d )￨d @￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d NonExistingProfileTestCase￨d extends￨d AbstractLoggingTest￨d {￨d private￨d static￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d NonExistingProfileTestCase￨d .￨d class￨d )￨d ;￨d @￨d ArquillianResource￨d (￨d LoggingServlet￨d .￨d class￨d )￨d URL￨d url￨d ;￨d private￨d static￨d final￨d String￨d LOG_FILE_NAME￨d =￨d "non-existing-profile-test.log"￨d ;￨d private￨d static￨d File￨d loggingTestLog￨d ;￨d static￨d class￨d NonExistingProfileTestCaseSetup￨d extends￨d AbstractMgmtServerSetupTask￨d {￨d @￨f Override￨f protected￨f void￨f doSetup￨f (￨f ManagementClient￨f managementClient￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f tearDown￨f (￨f ManagementClient￨f managementClient￨f ,￨f String￨f containerId￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d @￨f Deployment￨f public￨f static￨f WebArchive￨f createDeployment￨f (￨f )￨f {￨f }￨f @￨f AfterClass￨f @￨f RunAsClient￨f public￨f static￨f void￨f cleanCustomFile￨f (￨f )￨f {￨f }￨f @￨f Test￨f @￨f RunAsClient￨f public￨f void￨f warningMessageTest￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f BufferedReader￨e br￨e =￨e new￨e BufferedReader￨e (￨e new￨e InputStreamReader￨e (￨e new￨e FileInputStream￨e (￨e NonExistingProfileTestCase￨e .￨e loggingTestLog￨e )￨e ,￨e StandardCharsets￨e .￨e UTF_8￨e )￨e )￨e ;￨e String￨e line￨e ;￨e boolean￨e warningFound￨e =￨e false￨e ;￨e while￨l (￨l (￨c line￨c =￨c br￨c .￨c readLine￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l <START_BUG>￨b if￨b (￨b line￨b .￨b contains￨b (￨b "JBAS011509"￨b )￨b )￨b {￨b <END_BUG>￨b warningFound￨e =￨e true￨e ;￨e break￨e ;￨e }￨l br￨e .￨e close￨e (￨e )￨e ;￨e Assert￨e .￨e assertTrue￨e (￨e warningFound￨e )￨e ;￨e }￨f @￨f Test￨f @￨f RunAsClient￨f public￨f void￨f defaultLoggingTest￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ForStatement￨d extends￨d Statement￨d {￨d private￨d ASTNode￨d .￨d NodeList￨d initializers￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d true￨d ,￨d Expression￨d .￨d class￨d )￨d ;￨d private￨d Expression￨d optionalConditionExpression￨d =￨d null￨d ;￨d private￨d ASTNode￨d .￨d NodeList￨d updaters￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d true￨d ,￨d Expression￨d .￨d class￨d )￨d ;￨d private￨d Statement￨d body￨d =￨d null￨d ;￨d ForStatement￨d (￨d AST￨d ast￨d )￨d {￨d }￨d public￨f int￨f getNodeType￨f (￨f )￨f {￨f }￨f ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f ForStatement￨e result￨e =￨e new￨e ForStatement￨e (￨e target￨e )￨e ;￨e result￨e .￨e setSourceRange￨e (￨e this￨e .￨e getStartPosition￨e (￨e )￨e ,￨e this￨e .￨e getLength￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setLeadingComment￨b (￨b getLeadingComment￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e initializers￨e (￨e )￨e .￨e addAll￨e (￨e ASTNode￨e .￨e copySubtrees￨e (￨e target￨e ,￨e initializers￨e (￨e )￨e )￨e )￨e ;￨e result￨e .￨e setExpression￨e (￨e (￨e (￨e Expression￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getExpression￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e result￨e .￨e updaters￨e (￨e )￨e .￨e addAll￨e (￨e ASTNode￨e .￨e copySubtrees￨e (￨e target￨e ,￨e updaters￨e (￨e )￨e )￨e )￨e ;￨e result￨e .￨e setBody￨e (￨e (￨e (￨e Statement￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getBody￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f public￨f boolean￨f subtreeMatch￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f List￨f initializers￨f (￨f )￨f {￨f }￨f public￨f Expression￨f getExpression￨f (￨f )￨f {￨f }￨f public￨f void￨f setExpression￨f (￨f Expression￨p expression￨p )￨f {￨f }￨f public￨f List￨f updaters￨f (￨f )￨f {￨f }￨f public￨f Statement￨f getBody￨f (￨f )￨f {￨f }￨f public￨f void￨f setBody￨f (￨f Statement￨p statement￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d BeanShell￨d {￨d public￨f static￨f void￨f evalSelection￨f (￨f View￨p view￨p ,￨p JEditTextArea￨p textArea￨p )￨f {￨f }￨f public￨f static￨f void￨f showEvaluateDialog￨f (￨f View￨p view￨p )￨f {￨f }￨f public￨f static￨f void￨f showEvaluateLinesDialog￨f (￨f View￨p view￨p )￨f {￨f }￨f public￨f static￨f void￨f runScript￨f (￨f View￨p view￨p ,￨p String￨p path￨p ,￨p Reader￨p in￨p ,￨p boolean￨p ownNamespace￨p )￨f {￨f }￨f public￨f static￨f void￨f _runScript￨f (￨f View￨f view￨f ,￨f String￨f path￨f ,￨f Reader￨f in￨f ,￨f boolean￨f ownNamespace￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f Object￨f eval￨f (￨f View￨p view￨p ,￨p NameSpace￨p namespace￨p ,￨p String￨p command￨p )￨f {￨f }￨f public￨f static￨f Object￨f _eval￨f (￨f View￨f view￨f ,￨f NameSpace￨f namespace￨f ,￨f String￨f command￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f BshMethod￨f cacheBlock￨f (￨f String￨f id￨f ,￨f String￨f code￨f ,￨f boolean￨f namespace￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f String￨e name￨e =￨e "__internal_"￨e +￨e id￨e ;￨e if￨j (￨j namespace￨c )￨j {￨j <START_BUG>￨b BeanShell￨b .￨b _eval￨b (￨b null￨b ,￨b BeanShell￨b .￨b global￨b ,￨b (￨b (￨b (￨b name￨b +￨b "(ns)<seq2seq4repair_space>{\this.callstack.set(0,ns);\n"￨b )￨b +￨b code￨b )￨b +￨b "\n}"￨b )￨b )￨b ;￨b <END_BUG>￨b return￨f BeanShell￨f .￨f global￨f .￨f getMethod￨f (￨f name￨f ,￨f new￨f Class￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j else￨j {￨j BeanShell￨e .￨e _eval￨e (￨e null￨e ,￨e BeanShell￨e .￨e global￨e ,￨e (￨e (￨e (￨e name￨e +￨e "()<seq2seq4repair_space>{\n"￨e )￨e +￨e code￨e )￨e +￨e "\n}"￨e )￨e )￨e ;￨e return￨e BeanShell￨e .￨e global￨e .￨e getMethod￨e (￨e name￨e ,￨e new￨e Class￨e [￨e 0￨e ]￨e )￨e ;￨e }￨j }￨f public￨f static￨f Object￨f runCachedBlock￨f (￨f BshMethod￨f method￨f ,￨f View￨f view￨f ,￨f NameSpace￨f namespace￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f isScriptRunning￨f (￨f )￨f {￨f }￨f public￨f static￨f NameSpace￨f getNameSpace￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f runScript￨f (￨f View￨p view￨p ,￨p String￨p path￨p ,￨p boolean￨p ownNamespace￨p ,￨p boolean￨p rethrowBshErrors￨p )￨f {￨f }￨f public￨f static￨f void￨f runScript￨f (￨f View￨p view￨p ,￨p String￨p path￨p ,￨p Reader￨p in￨p ,￨p boolean￨p ownNamespace￨p ,￨p boolean￨p rethrowBshErrors￨p )￨f {￨f }￨f public￨f static￨f Object￨f eval￨f (￨f View￨p view￨p ,￨p String￨p command￨p ,￨p boolean￨p rethrowBshErrors￨p )￨f {￨f }￨f public￨f static￨f Object￨f eval￨f (￨f View￨p view￨p ,￨p NameSpace￨p namespace￨p ,￨p String￨p command￨p ,￨p boolean￨p rethrowBshErrors￨p )￨f {￨f }￨f static￨f void￨f init￨f (￨f )￨f {￨f }￨f private￨e static￨e final￨e Object￨e [￨e ]￨e NO_ARGS￨e =￨e new￨e Object￨e [￨e 0￨e ]￨e ;￨e private￨e static￨e Interpreter￨e interpForMethods￨e ;￨e private￨e static￨e NameSpace￨e global￨e ;￨e private￨e static￨e boolean￨e running￨e ;￨e private￨f static￨f void￨f unwrapException￨f (￨f Exception￨f e￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f handleException￨f (￨f View￨p view￨p ,￨p String￨p path￨p ,￨p Throwable￨p t￨p )￨f {￨f }￨f private￨f static￨f Interpreter￨f createInterpreter￨f (￨f NameSpace￨p nameSpace￨p )￨f {￨f }￨f }￨d
public￨d class￨d PackageTest￨d extends￨d JMeterTestCase￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e public￨f PackageTest￨f (￨f String￨p arg0￨p )￨f {￨f }￨f private￨f static￨f CSVRead￨f setCSVReadParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f StringFromFile￨f SFFParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f ,￨f String￨f p4￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f SplitFunction￨f SplitParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f BeanShell￨f BSHFParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f Collection￨f MakeParams￨f (￨f String￨p p1￨p ,￨p String￨p p2￨p ,￨p String￨p p3￨p )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨e JMeterContext￨e jmctx￨e =￨e null￨e ;￨e private￨e JMeterVariables￨e vars￨e =￨e null￨e ;￨e public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f BSH1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f splitTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest5￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨e static￨e CSVRead￨e cr1￨e ;￨e private￨e static￨e CSVRead￨e cr2￨e ;￨e private￨e static￨e CSVRead￨e cr3￨e ;￨e private￨e static￨e CSVRead￨e cr4￨e ;￨e private￨e static￨e CSVRead￨e cr5￨e ;￨e private￨e static￨e CSVRead￨e cr6￨e ;￨e private￨d static￨d class￨d Baton￨d {￨d void￨f pass￨f (￨f )￨f {￨f }￨f void￨f done￨f (￨f )￨f {￨f }￨f }￨d private￨e static￨e final￨e PackageTest￨e .￨e Baton￨e baton￨e =￨e new￨e PackageTest￨e .￨e Baton￨e (￨e )￨e ;￨e public￨f void￨f CSVThread1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVThread2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVRun￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVParams￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVSetup￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSValias￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVNoFile￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVBlankLine￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestNull￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestrowNum￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestColumns￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestDefault￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f XPathFileContainer￨e f￨e =￨e new￨e XPathFileContainer￨e (￨e "../build.xml"￨e ,￨e "/project/@default"￨e )￨e ;￨e assertNotNull￨e (￨e f￨e )￨e ;￨e assertTrue￨e (￨e "Not<seq2seq4repair_space>empty"￨e ,￨e (￨e (￨e f￨e .￨e size￨e (￨e )￨e )￨e >￨e 0￨e )￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b "all"￨b ,￨b f￨b .￨b getXPathString￨b (￨b 0￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f XPathEmpty￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathNoFile￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathFile1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathFile2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨e static￨e XPath￨e sxp1￨e ;￨e private￨e static￨e XPath￨e sxp2￨e ;￨e public￨f void￨f XPathSetup1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathSetup2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathThread1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathThread2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f XPath￨f setupXPath￨f (￨f String￨f file￨f ,￨f String￨f expr￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f randomTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f variableTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f evalTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f evalTest2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f sumTest￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f checkSum￨f (￨f AbstractFunction￨f func￨f ,￨f String￨f value￨f ,￨f String￨f [￨f ]￨f addends￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f checkSumNoVar￨f (￨f AbstractFunction￨f func￨f ,￨f String￨f value￨f ,￨f String￨f [￨f ]￨f addends￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d AnnotProxyFieldValueFactory￨d implements￨d IFieldValueFactory￨d {￨d private￨e final￨e ISpringContextLocator￨e contextLocator￨e ;￨e private￨e final￨e ConcurrentHashMap￨e <￨e SpringBeanLocator￨e ,￨e Object￨e >￨e cache￨e =￨e Generics￨e .￨e newConcurrentHashMap￨e (￨e )￨e ;￨e private￨e final￨e ConcurrentHashMap￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e String￨e >￨e beanNameCache￨e =￨e Generics￨e .￨e newConcurrentHashMap￨e (￨e )￨e ;￨e private￨e final￨e boolean￨e wrapInProxies￨e ;￨e public￨f AnnotProxyFieldValueFactory￨f (￨f ISpringContextLocator￨p contextLocator￨p )￨f {￨f }￨f public￨f AnnotProxyFieldValueFactory￨f (￨f ISpringContextLocator￨p contextLocator￨p ,￨p boolean￨p wrapInProxies￨p )￨f {￨f }￨f public￨f Object￨f getFieldValue￨f (￨f Field￨p field￨p ,￨p Object￨p fieldOwner￨p )￨f {￨f <START_BUG>￨b if￨b (￨b field￨b .￨b isAnnotationPresent￨b (￨b SpringBean￨b .￨b class￨b )￨b )￨b {￨b <END_BUG>￨b SpringBeanLocator￨e locator￨e =￨e new￨e SpringBeanLocator￨e (￨e getBeanName￨e (￨e field￨e )￨e ,￨e field￨e .￨e getType￨e (￨e )￨e ,￨e contextLocator￨e )￨e ;￨e Object￨e cachedValue￨e =￨e cache￨e .￨e get￨e (￨e locator￨e )￨e ;￨e if￨j (￨j cachedValue￨c !=￨c null￨c )￨j {￨j return￨e cachedValue￨e ;￨e }￨j final￨e Object￨e target￨e ;￨e if￨j (￨j wrapInProxies￨c )￨j {￨j target￨e =￨e LazyInitProxyFactory￨e .￨e createProxy￨e (￨e field￨e .￨e getType￨e (￨e )￨e ,￨e locator￨e )￨e ;￨e }￨j else￨j {￨j target￨e =￨e locator￨e .￨e locateProxyTarget￨e (￨e )￨e ;￨e }￨j if￨j (￨j locator￨c .￨c isSingletonBean￨c (￨c )￨c )￨j {￨j cache￨e .￨e put￨e (￨e locator￨e ,￨e target￨e )￨e ;￨e }￨j return￨e target￨e ;￨e }￨e return￨e null￨e ;￨e }￨f private￨f String￨f getBeanName￨f (￨f final￨p Field￨p field￨p )￨f {￨f }￨f private￨f final￨f String￨f getBeanNameOfClass￨f (￨f ApplicationContext￨p ctx￨p ,￨p Class￨p <￨p ?￨p >￨p clazz￨p )￨f {￨f }￨f public￨f boolean￨f supportsField￨f (￨f Field￨p field￨p )￨f {￨f }￨f }￨d
class￨d PrefixMapper￨d {￨d private￨e static￨e int￨e debug￨e =￨e 1￨e ;￨e SimpleHashtable￨e vhostMaps￨e =￨e new￨e SimpleHashtable￨e (￨e )￨e ;￨e SimpleHashtable￨e vhostMapsWC￨e =￨e new￨e SimpleHashtable￨e (￨e )￨e ;￨e SimpleHashtable￨e prefixMappedServlets￨e ;￨e SimpleHashtable￨e exactMappedServlets￨e ;￨e SimpleHashtable￨e mapCache￨e ;￨e boolean￨e mapCacheEnabled￨e =￨e false￨e ;￨e boolean￨e ignoreCase￨e =￨e false￨e ;￨e public￨f PrefixMapper￨f (￨f )￨f {￨f }￨f public￨f void￨f setMapCache￨f (￨f boolean￨p v￨p )￨f {￨f }￨f public￨f void￨f setIgnoreCase￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f void￨f removeAllMappings￨f (￨f String￨p host￨p ,￨p Context￨p ctx￨p )￨f {￨f PrefixMapper￨e vmap￨e =￨e this￨e ;￨e if￨j (￨j host￨c !=￨c null￨c )￨j {￨j host￨e =￨e host￨e .￨e toLowerCase￨e (￨e )￨e ;￨e if￨j (￨j host￨c .￨c startsWith￨c (￨c "*"￨c )￨c )￨j {￨j vmap￨e =￨e (￨e (￨e PrefixMapper￨e )￨e (￨e vhostMapsWC￨e .￨e get￨e (￨e host￨e .￨e substring￨e (￨e 1￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j vmap￨e =￨e (￨e (￨e PrefixMapper￨e )￨e (￨e vhostMaps￨e .￨e get￨e (￨e host￨e )￨e )￨e )￨e ;￨e }￨j }￨j Enumeration￨e en￨e =￨e vmap￨e .￨e prefixMappedServlets￨e .￨e keys￨e (￨e )￨e ;￨e while￨l (￨l en￨c .￨c hasMoreElements￨c (￨c )￨c )￨l {￨l String￨e s￨e =￨e (￨e (￨e String￨e )￨e (￨e en￨e .￨e nextElement￨e (￨e )￨e )￨e )￨e ;￨e Container￨e ct￨e =￨e (￨e (￨e Container￨e )￨e (￨e vmap￨e .￨e prefixMappedServlets￨e .￨e get￨e (￨e s￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b ct￨b .￨b getContext￨b (￨b )￨b )￨b ==￨b ctx￨b )￨b {￨b <END_BUG>￨b if￨j (￨j (￨c PrefixMapper￨c .￨c debug￨c )￨c >￨c 0￨c )￨j {￨j ctx￨e .￨e log￨e (￨e (￨e "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨e +￨e s￨e )￨e )￨e ;￨e }￨j vmap￨e .￨e prefixMappedServlets￨e .￨e remove￨e (￨e s￨e )￨e ;￨e }￨l en￨e =￨e vmap￨e .￨e exactMappedServlets￨e .￨e keys￨e (￨e )￨e ;￨e while￨l (￨l en￨c .￨c hasMoreElements￨c (￨c )￨c )￨l {￨l String￨e s￨e =￨e (￨e (￨e String￨e )￨e (￨e en￨e .￨e nextElement￨e (￨e )￨e )￨e )￨e ;￨e Container￨e ct￨e =￨e (￨e (￨e Container￨e )￨e (￨e vmap￨e .￨e exactMappedServlets￨e .￨e get￨e (￨e s￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c ct￨c .￨c getContext￨c (￨c )￨c )￨c ==￨c ctx￨c )￨j {￨j if￨j (￨j (￨c PrefixMapper￨c .￨c debug￨c )￨c >￨c 0￨c )￨j {￨j ctx￨e .￨e log￨e (￨e (￨e "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨e +￨e s￨e )￨e )￨e ;￨e }￨j vmap￨e .￨e exactMappedServlets￨e .￨e remove￨e (￨e s￨e )￨e ;￨e }￨j }￨l mapCache￨e =￨e new￨e SimpleHashtable￨e (￨e )￨e ;￨e }￨f void￨f addMapping￨f (￨f String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f void￨f addExactMapping￨f (￨f String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f public￨f void￨f addMapping￨f (￨f String￨p host￨p ,￨p String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f public￨f void￨f addMappings￨f (￨f Enumeration￨p hostAliases￨p ,￨p String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f public￨f void￨f addExactMapping￨f (￨f String￨p host￨p ,￨p String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f public￨f void￨f addExactMappings￨f (￨f Enumeration￨p hostAliases￨p ,￨p String￨p path￨p ,￨p Object￨p target￨p )￨f {￨f }￨f public￨f Object￨f getLongestPrefixMatch￨f (￨f MessageBytes￨p hostMB￨p ,￨p MessageBytes￨p pathMB￨p )￨f {￨f }￨f }￨d
class￨d MethodVerifier15￨d extends￨d MethodVerifier￨d {￨d MethodVerifier15￨f (￨f LookupEnvironment￨p environment￨p )￨f {￨f }￨f boolean￨f areTypesEqual￨f (￨f TypeBinding￨p one￨p ,￨p TypeBinding￨p two￨p )￨f {￨f }￨f void￨f checkAgainstInheritedMethods￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p [￨p ]￨p methods￨p ,￨p int￨p length￨p )￨f {￨f }￨f boolean￨f doesMethodOverride￨f (￨f MethodBinding￨p method￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f boolean￨f hasBoundedParameters￨f (￨f ParameterizedTypeBinding￨p parameterizedType￨p )￨f {￨f }￨f boolean￨f isReturnTypeSubstituable￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f isTypeSubstituable￨f (￨f TypeBinding￨p one￨p ,￨p TypeBinding￨p two￨p )￨f {￨f if￨j (￨j one￨c ==￨c two￨c )￨j {￨j return￨e true￨e ;￨e }￨j if￨j (￨j (￨c one￨c .￨c isArrayType￨c (￨c )￨c )￨c ||￨c (￨c two￨c .￨c isArrayType￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c one￨c .￨c isArrayType￨c (￨c )￨c )￨c !=￨c (￨c two￨c .￨c isArrayType￨c (￨c )￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j ArrayBinding￨e arrayOne￨e =￨e (￨e (￨e ArrayBinding￨e )￨e (￨e one￨e )￨e )￨e ;￨e ArrayBinding￨e arrayTwo￨e =￨e (￨e (￨e ArrayBinding￨e )￨e (￨e two￨e )￨e )￨e ;￨e if￨j (￨j (￨c arrayOne￨c .￨c dimensions￨c )￨c !=￨c (￨c arrayTwo￨c .￨c dimensions￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j one￨e =￨e arrayOne￨e .￨e leafComponentType￨e ;￨e two￨e =￨e arrayTwo￨e .￨e leafComponentType￨e ;￨e }￨j if￨j (￨j (￨c one￨c .￨c isBaseType￨c (￨c )￨c )￨c ||￨c (￨c two￨c .￨c isBaseType￨c (￨c )￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j ReferenceBinding￨e subType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e one￨e )￨e )￨e ;￨e ReferenceBinding￨e superType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e two￨e )￨e )￨e ;￨e if￨j (￨j CharOperation￨c .￨c equals￨c (￨c subType￨c .￨c compoundName￨c ,￨c superType￨c .￨c compoundName￨c )￨c )￨j {￨j return￨e true￨e ;￨e }￨j superType￨e =￨e BinaryTypeBinding￨e .￨e resolveType￨e (￨e superType￨e ,￨e this￨e .￨e environment￨e ,￨e true￨e )￨e ;￨e subType￨e =￨e BinaryTypeBinding￨e .￨e resolveType￨e (￨e subType￨e ,￨e this￨e .￨e environment￨e ,￨e true￨e )￨e ;￨e if￨j (￨j superType￨c .￨c isInterface￨c (￨c )￨c )￨j {￨j return￨e subType￨e .￨e implementsInterface￨e (￨e superType￨e ,￨e true￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b (￨b subType￨b .￨b isClass￨b (￨b )￨b )￨b &&￨b (￨b isSameClassOrSubclassOf￨b (￨b subType￨b ,￨b superType￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d TCPSyslogServer￨d extends￨d TCPNetSyslogServer￨d {￨d private￨d static￨d final￨d Logger￨d LOGGER￨d =￨d Logger￨d .￨d getLogger￨d (￨d TCPSyslogServer￨d .￨d class￨d )￨d ;￨d @￨d SuppressWarnings￨d (￨d "unchecked"￨d )￨d public￨d TCPSyslogServer￨d (￨d )￨d {￨d }￨d @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f TCPSyslogServer￨e .￨e LOGGER￨e .￨e debug￨e (￨e "Creating<seq2seq4repair_space>Syslog<seq2seq4repair_space>server<seq2seq4repair_space>socket"￨e )￨e ;￨e this￨e .￨e serverSocket￨e =￨e createServerSocket￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f TCPSyslogServer￨e .￨e LOGGER￨e .￨e error￨e (￨e "ServerSocket<seq2seq4repair_space>creation<seq2seq4repair_space>failed."￨e ,￨e e￨e )￨e ;￨e throw￨e new￨e SyslogRuntimeException￨e (￨e e￨e )￨e ;￨e }￨f while￨l (￨l !￨c (￨c this￨c .￨c shutdown￨c )￨c )￨l {￨l try￨f (￨f )￨f {￨f final￨e Socket￨e socket￨e =￨e this￨e .￨e serverSocket￨e .￨e accept￨e (￨e )￨e ;￨e if￨j (￨j TCPSyslogServer￨c .￨c LOGGER￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j TCPSyslogServer￨e .￨e LOGGER￨e .￨e debug￨e (￨e (￨e "Handling<seq2seq4repair_space>Syslog<seq2seq4repair_space>client<seq2seq4repair_space>"￨e +￨e (￨e socket￨e .￨e getInetAddress￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j new￨e Thread￨e (￨e new￨e TCPSyslogSocketHandler￨e (￨e this￨e .￨e sockets￨e ,￨e this￨e ,￨e socket￨e )￨e )￨e .￨e start￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f <START_BUG>￨b TCPSyslogServer￨b .￨b LOGGER￨b .￨b error￨b (￨b "IOException<seq2seq4repair_space>occurred."￨b ,￨b e￨b )￨b ;￨b <END_BUG>￨b }￨f }￨l }￨f }￨d
public￨d class￨d WeblogicDeploymentTool￨d extends￨d GenericDeploymentTool￨d {￨d public￨e static￨e final￨e String￨e PUBLICID_EJB11￨e =￨e "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>1.1//EN"￨e ;￨e public￨e static￨e final￨e String￨e PUBLICID_EJB20￨e =￨e "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>2.0//EN"￨e ;￨e public￨e static￨e final￨e String￨e PUBLICID_WEBLOGIC_EJB510￨e =￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>5.1.0<seq2seq4repair_space>EJB//EN"￨e ;￨e public￨e static￨e final￨e String￨e PUBLICID_WEBLOGIC_EJB600￨e =￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>6.0.0<seq2seq4repair_space>EJB//EN"￨e ;￨e public￨e static￨e final￨e String￨e PUBLICID_WEBLOGIC_EJB700￨e =￨e "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>7.0.0<seq2seq4repair_space>EJB//EN"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL51_EJB11_DTD_LOCATION￨e =￨e "/weblogic/ejb/deployment/xml/ejb-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL60_EJB11_DTD_LOCATION￨e =￨e "/weblogic/ejb20/dd/xml/ejb11-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL60_EJB20_DTD_LOCATION￨e =￨e "/weblogic/ejb20/dd/xml/ejb20-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL51_DTD_LOCATION￨e =￨e "/weblogic/ejb/deployment/xml/weblogic-ejb-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL60_51_DTD_LOCATION￨e =￨e "/weblogic/ejb20/dd/xml/weblogic510-ejb-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL60_DTD_LOCATION￨e =￨e "/weblogic/ejb20/dd/xml/weblogic600-ejb-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_WL70_DTD_LOCATION￨e =￨e "/weblogic/ejb20/dd/xml/weblogic700-ejb-jar.dtd"￨e ;￨e protected￨e static￨e final￨e String￨e DEFAULT_COMPILER￨e =￨e "default"￨e ;￨e protected￨e static￨e final￨e String￨e WL_DD￨e =￨e "weblogic-ejb-jar.xml"￨e ;￨e protected￨e static￨e final￨e String￨e WL_CMP_DD￨e =￨e "weblogic-cmp-rdbms-jar.xml"￨e ;￨e protected￨e static￨e final￨e String￨e COMPILER_EJB11￨e =￨e "weblogic.ejbc"￨e ;￨e protected￨e static￨e final￨e String￨e COMPILER_EJB20￨e =￨e "weblogic.ejbc20"￨e ;￨e private￨e String￨e jarSuffix￨e =￨e ".jar"￨e ;￨e private￨e String￨e weblogicDTD￨e ;￨e private￨e String￨e ejb11DTD￨e ;￨e private￨e boolean￨e keepgenerated￨e =￨e false￨e ;￨e private￨e String￨e ejbcClass￨e =￨e null￨e ;￨e private￨e String￨e additionalArgs￨e =￨e ""￨e ;￨e private￨e String￨e additionalJvmArgs￨e =￨e ""￨e ;￨e private￨e boolean￨e keepGeneric￨e =￨e false￨e ;￨e private￨e String￨e compiler￨e =￨e null￨e ;￨e private￨e boolean￨e alwaysRebuild￨e =￨e true￨e ;￨e private￨e boolean￨e noEJBC￨e =￨e false￨e ;￨e private￨e boolean￨e newCMP￨e =￨e false￨e ;￨e private￨e Path￨e wlClasspath￨e =￨e null￨e ;￨e private￨e Vector￨e sysprops￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e Integer￨e jvmDebugLevel￨e =￨e null￨e ;￨e private￨e FileUtils￨e fileUtils￨e =￨e FileUtils￨e .￨e newFileUtils￨e (￨e )￨e ;￨e private￨e File￨e outputDir￨e ;￨e public￨f void￨f addSysproperty￨f (￨f Environment￨p .￨p Variable￨p sysp￨p )￨f {￨f }￨f public￨f Path￨f createWLClasspath￨f (￨f )￨f {￨f }￨f public￨f void￨f setOutputDir￨f (￨f File￨p outputDir￨p )￨f {￨f }￨f public￨f void￨f setWLClasspath￨f (￨f Path￨p wlClasspath￨p )￨f {￨f }￨f public￨f void￨f setCompiler￨f (￨f String￨p compiler￨p )￨f {￨f }￨f public￨f void￨f setRebuild￨f (￨f boolean￨p rebuild￨p )￨f {￨f }￨f public￨f void￨f setJvmDebugLevel￨f (￨f Integer￨p jvmDebugLevel￨p )￨f {￨f }￨f public￨f Integer￨f getJvmDebugLevel￨f (￨f )￨f {￨f }￨f public￨f void￨f setSuffix￨f (￨f String￨p inString￨p )￨f {￨f }￨f public￨f void￨f setKeepgeneric￨f (￨f boolean￨p inValue￨p )￨f {￨f }￨f public￨f void￨f setKeepgenerated￨f (￨f String￨p inValue￨p )￨f {￨f }￨f public￨f void￨f setArgs￨f (￨f String￨p args￨p )￨f {￨f }￨f public￨f void￨f setJvmargs￨f (￨f String￨p args￨p )￨f {￨f }￨f public￨f void￨f setEjbcClass￨f (￨f String￨p ejbcClass￨p )￨f {￨f }￨f public￨f String￨f getEjbcClass￨f (￨f )￨f {￨f }￨f public￨f void￨f setWeblogicdtd￨f (￨f String￨p inString￨p )￨f {￨f }￨f public￨f void￨f setWLdtd￨f (￨f String￨p inString￨p )￨f {￨f }￨f public￨f void￨f setEJBdtd￨f (￨f String￨p inString￨p )￨f {￨f }￨f public￨f void￨f setOldCMP￨f (￨f boolean￨p oldCMP￨p )￨f {￨f }￨f public￨f void￨f setNewCMP￨f (￨f boolean￨p newCMP￨p )￨f {￨f }￨f public￨f void￨f setNoEJBC￨f (￨f boolean￨p noEJBC￨p )￨f {￨f }￨f protected￨f void￨f registerKnownDTDs￨f (￨f DescriptorHandler￨p handler￨p )￨f {￨f }￨f protected￨f DescriptorHandler￨f getWeblogicDescriptorHandler￨f (￨f final￨p File￨p srcDir￨p )￨f {￨f }￨f protected￨f void￨f addVendorFiles￨f (￨f Hashtable￨p ejbFiles￨p ,￨p String￨p ddPrefix￨p )￨f {￨f }￨f File￨f getVendorOutputJarFile￨f (￨f String￨p baseName￨p )￨f {￨f }￨f private￨f void￨f buildWeblogicJar￨f (￨f File￨p sourceJar￨p ,￨p File￨p destJar￨p ,￨p String￨p publicId￨p )￨f {￨f }￨f protected￨f void￨f writeJar￨f (￨f String￨f baseName￨f ,￨f File￨f jarFile￨f ,￨f Hashtable￨f files￨f ,￨f String￨f publicId￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f validateConfigured￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isRebuildRequired￨f (￨f File￨p genericJarFile￨p ,￨p File￨p weblogicJarFile￨p )￨f {￨f }￨f protected￨f ClassLoader￨f getClassLoaderFromJar￨f (￨f File￨f classjar￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f Path￨e lookupPath￨e =￨e new￨e Path￨e (￨e getTask￨e (￨e )￨e .￨e getProject￨e (￨e )￨e )￨e ;￨e lookupPath￨e .￨e setLocation￨e (￨e classjar￨e )￨e ;￨e Path￨e classpath￨e =￨e getCombinedClasspath￨e (￨e )￨e ;￨e if￨j (￨j classpath￨c !=￨c null￨c )￨j {￨j lookupPath￨e .￨e append￨e (￨e classpath￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b new￨b org￨b .￨b apache￨b .￨b tools￨b .￨b ant￨b .￨b AntClassLoader￨b (￨b getTask￨b (￨b )￨b .￨b getProject￨b (￨b )￨b ,￨b lookupPath￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d MenuSeparatorContribution￨d extends￨d CommonMenuAddition￨d {￨d public￨f MenuSeparatorContribution￨f (￨f IConfigurationElement￨p element￨p )￨f {￨f }￨f public￨f boolean￨f isVisible￨f (￨f )￨f {￨f String￨e val￨e =￨e element￨e .￨e getAttribute￨e (￨e ATT_VISIBLE￨e )￨e ;￨e <START_BUG>￨b return￨b Boolean￨b .￨b parseBoolean￨b (￨b val￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f fill￨f (￨f Menu￨p parent￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f void￨f fill￨f (￨f ToolBar￨p parent￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Copy￨d extends￨d Task￨d {￨d protected￨e File￨e file￨e =￨e null￨e ;￨e protected￨e File￨e destFile￨e =￨e null￨e ;￨e protected￨e File￨e destDir￨e =￨e null￨e ;￨e protected￨e Vector￨e filesets￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e protected￨e boolean￨e filtering￨e =￨e false￨e ;￨e protected￨e boolean￨e forceOverwrite￨e =￨e false￨e ;￨e protected￨e boolean￨e flatten￨e =￨e false￨e ;￨e protected￨e int￨e verbosity￨e =￨e Project￨e .￨e MSG_VERBOSE￨e ;￨e protected￨e boolean￨e includeEmpty￨e =￨e true￨e ;￨e protected￨e Hashtable￨e fileCopyMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e protected￨e Hashtable￨e dirCopyMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e public￨f void￨f setFile￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f void￨f setTofile￨f (￨f File￨p destFile￨p )￨f {￨f }￨f public￨f void￨f setTodir￨f (￨f File￨p destDir￨p )￨f {￨f }￨f public￨f void￨f setFiltering￨f (￨f boolean￨p filtering￨p )￨f {￨f }￨f public￨f void￨f setOverwrite￨f (￨f boolean￨p overwrite￨p )￨f {￨f }￨f public￨f void￨f setFlatten￨f (￨f boolean￨p flatten￨p )￨f {￨f }￨f public￨f void￨f setVerbose￨f (￨f boolean￨p verbose￨p )￨f {￨f }￨f public￨f void￨f setIncludeEmptyDirs￨f (￨f boolean￨p includeEmpty￨p )￨f {￨f }￨f public￨f void￨f addFileset￨f (￨f FileSet￨p set￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f validateAttributes￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f scan￨f (￨f File￨p fromDir￨p ,￨p File￨p toDir￨p ,￨p String￨p [￨p ]￨p files￨p ,￨p String￨p [￨p ]￨p dirs￨p )￨f {￨f }￨f protected￨f void￨f buildMap￨f (￨f File￨p fromDir￨p ,￨p File￨p toDir￨p ,￨p String￨p [￨p ]￨p names￨p ,￨p FileNameMapper￨p mapper￨p ,￨p Hashtable￨p map￨p )￨f {￨f String￨e [￨e ]￨e toCopy￨e =￨e null￨e ;￨e if￨j (￨j forceOverwrite￨c )￨j {￨j toCopy￨e =￨e names￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b SourceFileScanner￨b ds￨b =￨b new￨b SourceFileScanner￨b (￨b )￨b ;￨b <END_BUG>￨b toCopy￨e =￨e ds￨e .￨e restrict￨e (￨e names￨e ,￨e fromDir￨e ,￨e toDir￨e ,￨e mapper￨e )￨e ;￨e }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c toCopy￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l File￨e src￨e =￨e new￨e File￨e (￨e fromDir￨e ,￨e toCopy￨e [￨e i￨e ]￨e )￨e ;￨e File￨e dest￨e =￨e new￨e File￨e (￨e toDir￨e ,￨e mapper￨e .￨e mapFileName￨e (￨e toCopy￨e [￨e i￨e ]￨e )￨e [￨e 0￨e ]￨e )￨e ;￨e map￨e .￨e put￨e (￨e src￨e .￨e getAbsolutePath￨e (￨e )￨e ,￨e dest￨e .￨e getAbsolutePath￨e (￨e )￨e )￨e ;￨e }￨l }￨f protected￨f void￨f doFileOperations￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SearchGroupsRequestFactory￨d implements￨d ShardRequestFactory￨d {￨d public￨f ShardRequest￨f [￨f ]￨f constructRequest￨f (￨f ResponseBuilder￨p rb￨p )￨f {￨f ShardRequest￨e sreq￨e =￨e new￨e ShardRequest￨e (￨e )￨e ;￨e GroupingSpecification￨e groupingSpecification￨e =￨e rb￨e .￨e getGroupingSpec￨e (￨e )￨e ;￨e if￨j (￨j (￨c groupingSpecification￨c .￨c getFields￨c (￨c )￨c .￨c length￨c )￨c ==￨c 0￨c )￨j {￨j return￨e new￨e ShardRequest￨e [￨e 0￨e ]￨e ;￨e }￨j sreq￨e .￨e purpose￨e =￨e ShardRequest￨e .￨e PURPOSE_GET_TOP_GROUPS￨e ;￨e sreq￨e .￨e params￨e =￨e new￨e org￨e .￨e apache￨e .￨e solr￨e .￨e common￨e .￨e params￨e .￨e ModifiableSolrParams￨e (￨e rb￨e .￨e req￨e .￨e getParams￨e (￨e )￨e )￨e ;￨e sreq￨e .￨e params￨e .￨e remove￨e (￨e SHARDS￨e )￨e ;￨e if￨j (￨j (￨c rb￨c .￨c shards_start￨c )￨c >￨c (￨c -￨c 1￨c )￨c )￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e START￨e ,￨e rb￨e .￨e shards_start￨e )￨e ;￨e }￨j else￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e START￨e ,￨e "0"￨e )￨e ;￨e }￨j if￨j (￨j (￨c rb￨c .￨c shards_rows￨c )￨c >￨c (￨c -￨c 1￨c )￨c )￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e ROWS￨e ,￨e rb￨e .￨e shards_rows￨e )￨e ;￨e }￨j else￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e ROWS￨e ,￨e (￨e (￨e rb￨e .￨e getSortSpec￨e (￨e )￨e .￨e getOffset￨e (￨e )￨e )￨e +￨e (￨e rb￨e .￨e getSortSpec￨e (￨e )￨e .￨e getCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b sreq￨b .￨b params￨b .￨b set￨b (￨b "group.distibuted.first"￨b ,￨b "true"￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c (￨c (￨c rb￨c .￨c getFieldFlags￨c (￨c )￨c )￨c &￨c (￨c SolrIndexSearcher￨c .￨c GET_SCORES￨c )￨c )￨c !=￨c 0￨c )￨c ||￨c (￨c rb￨c .￨c getSortSpec￨c (￨c )￨c .￨c includesScore￨c (￨c )￨c )￨c )￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e FL￨e ,￨e (￨e (￨e rb￨e .￨e req￨e .￨e getSchema￨e (￨e )￨e .￨e getUniqueKeyField￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e +￨e ",score"￨e )￨e )￨e ;￨e }￨j else￨j {￨j sreq￨e .￨e params￨e .￨e set￨e (￨e FL￨e ,￨e rb￨e .￨e req￨e .￨e getSchema￨e (￨e )￨e .￨e getUniqueKeyField￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e ;￨e }￨j return￨f new￨f ShardRequest￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e }￨f }￨d
public￨d final￨d class￨d UnmodifiableBoundedCollection￨d <￨d E￨d >￨d extends￨d AbstractCollectionDecorator￨d <￨d E￨d >￨d implements￨d BoundedCollection￨d <￨d E￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 7112672385450340330L￨e ;￨e public￨f static￨f <￨f E￨f >￨f BoundedCollection￨f <￨f E￨f >￨f unmodifiableBoundedCollection￨f (￨f final￨p BoundedCollection￨p <￨p E￨p >￨p coll￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f static￨f <￨f E￨f >￨f BoundedCollection￨f <￨f E￨f >￨f unmodifiableBoundedCollection￨f (￨f Collection￨p <￨p ?￨p extends￨p E￨p >￨p coll￨p )￨f {￨f if￨j (￨j coll￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "The<seq2seq4repair_space>collection<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e )￨e ;￨e }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 1000￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j coll￨c instanceof￨c BoundedCollection￨c )￨j {￨j break￨e ;￨e }￨j if￨j (￨j coll￨c instanceof￨c AbstractCollectionDecorator￨c )￨j {￨j coll￨e =￨e (￨e (￨e AbstractCollectionDecorator￨e <￨e E￨e >￨e )￨e (￨e coll￨e )￨e )￨e .￨e collection￨e ;￨e }￨j else￨j if￨j (￨j coll￨c instanceof￨c SynchronizedCollection￨c )￨j {￨j <START_BUG>￨b coll￨b =￨b (￨b (￨b SynchronizedCollection￨b <￨b E￨b >￨b )￨b (￨b coll￨b )￨b )￨b .￨b collection￨b ;￨b <END_BUG>￨b }￨j }￨l if￨j (￨j (￨c coll￨c instanceof￨c BoundedCollection￨c )￨c ==￨c false￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "The<seq2seq4repair_space>collection<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>bounded<seq2seq4repair_space>collection"￨e )￨e ;￨e }￨j return￨e new￨e UnmodifiableBoundedCollection￨e <￨e E￨e >￨e (￨e (￨e (￨e BoundedCollection￨e <￨e E￨e >￨e )￨e (￨e coll￨e )￨e )￨e )￨e ;￨e }￨f private￨f UnmodifiableBoundedCollection￨f (￨f final￨p BoundedCollection￨p <￨p E￨p >￨p coll￨p )￨f {￨f }￨f @￨f Override￨f public￨f Iterator￨f <￨f E￨f >￨f iterator￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f add￨f (￨f final￨p E￨p object￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f addAll￨f (￨f final￨p Collection￨p <￨p ?￨p extends￨p E￨p >￨p coll￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f remove￨f (￨f final￨p Object￨p object￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f removeAll￨f (￨f final￨p Collection￨p <￨p ?￨p >￨p coll￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f retainAll￨f (￨f final￨p Collection￨p <￨p ?￨p >￨p coll￨p )￨f {￨f }￨f public￨f boolean￨f isFull￨f (￨f )￨f {￨f }￨f public￨f int￨f maxSize￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f BoundedCollection￨f <￨f E￨f >￨f decorated￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ColumnIndexer￨d {￨d public￨f static￨f void￨f serialize￨f (￨f ColumnFamily￨p columnFamily￨p ,￨p DataOutput￨p dos￨p )￨f {￨f }￨f private￨f static￨f BloomFilter￨f createColumnBloomFilter￨f (￨f Collection￨p <￨p IColumn￨p >￨p columns￨p )￨f {￨f int￨e columnCount￨e =￨e 0￨e ;￨e for￨l (￨l IColumn￨c column￨c :￨c columns￨c )￨l {￨l columnCount￨e +=￨e column￨e .￨e getObjectCount￨e (￨e )￨e ;￨e }￨l <START_BUG>￨b BloomFilter￨b bf￨b =￨b new￨b BloomFilter￨b (￨b columnCount￨b ,￨b 4￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l IColumn￨c column￨c :￨c columns￨c )￨l {￨l bf￨e .￨e add￨e (￨e column￨e .￨e name￨e (￨e )￨e )￨e ;￨e if￨j (￨j column￨c instanceof￨c SuperColumn￨c )￨j {￨j Collection￨e <￨e IColumn￨e >￨e subColumns￨e =￨e column￨e .￨e getSubColumns￨e (￨e )￨e ;￨e for￨l (￨l IColumn￨c subColumn￨c :￨c subColumns￨c )￨l {￨l bf￨e .￨e add￨e (￨e subColumn￨e .￨e name￨e (￨e )￨e )￨e ;￨e }￨l }￨j }￨l return￨e bf￨e ;￨e }￨f private￨f static￨f void￨f doIndexing￨f (￨f AbstractType￨f comparator￨f ,￨f Collection￨f <￨f IColumn￨f >￨f columns￨f ,￨f DataOutput￨f dos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JavadocArgumentExpression￨d extends￨d Expression￨d {￨d public￨e char￨e [￨e ]￨e token￨e ;￨e public￨e Argument￨e argument￨e ;￨e public￨f JavadocArgumentExpression￨f (￨f char￨p [￨p ]￨p name￨p ,￨p int￨p startPos￨p ,￨p int￨p endPos￨p ,￨p TypeReference￨p typeRef￨p )￨f {￨f }￨f private￨f TypeBinding￨f internalResolveType￨f (￨f Scope￨p scope￨p )￨f {￨f this￨e .￨e constant￨e =￨e Constant￨e .￨e NotAConstant￨e ;￨e if￨j (￨j (￨c this￨c .￨c resolvedType￨c )￨c !=￨c null￨c )￨j {￨j return￨e this￨e .￨e resolvedType￨e .￨e isValidBinding￨e (￨e )￨e ?￨e this￨e .￨e resolvedType￨e :￨e null￨e ;￨e }￨j if￨j (￨j (￨c this￨c .￨c argument￨c )￨c !=￨c null￨c )￨j {￨j TypeReference￨e typeRef￨e =￨e this￨e .￨e argument￨e .￨e type￨e ;￨e if￨j (￨j typeRef￨c !=￨c null￨c )￨j {￨j this￨e .￨e resolvedType￨e =￨e typeRef￨e .￨e getTypeBinding￨e (￨e scope￨e )￨e ;￨e typeRef￨e .￨e resolvedType￨e =￨e this￨e .￨e resolvedType￨e ;￨e if￨j (￨j (￨c (￨c typeRef￨c instanceof￨c SingleTypeReference￨c )￨c &&￨c (￨c (￨c this￨c .￨c resolvedType￨c .￨c leafComponentType￨c (￨c )￨c .￨c enclosingType￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨c &&￨c (￨c (￨c scope￨c .￨c compilerOptions￨c (￨c )￨c .￨c complianceLevel￨c )￨c <=￨c (￨c ClassFileConstants￨c .￨c JDK1_4￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e javadocInvalidMemberTypeQualification￨e (￨e this￨e .￨e sourceStart￨e ,￨e this￨e .￨e sourceEnd￨e ,￨e scope￨e .￨e getDeclarationModifiers￨e (￨e )￨e )￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j !￨c (￨c this￨c .￨c resolvedType￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e javadocInvalidType￨e (￨e typeRef￨e ,￨e this￨e .￨e resolvedType￨e ,￨e scope￨e .￨e getDeclarationModifiers￨e (￨e )￨e )￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j isTypeUseDeprecated￨c (￨c this￨c .￨c resolvedType￨c ,￨c scope￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e javadocDeprecatedType￨e (￨e this￨e .￨e resolvedType￨e ,￨e typeRef￨e ,￨e scope￨e .￨e getDeclarationModifiers￨e (￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b this￨b .￨b resolvedType￨b =￨b scope￨b .￨b environment￨b (￨b )￨b .￨b convertToRawType￨b (￨b this￨b .￨b resolvedType￨b )￨b ;￨b <END_BUG>￨b }￨j }￨j return￨e null￨e ;￨e }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p blockScope￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d InflowTestCase￨d extends￨d ContainerResourceMgmtTestBase￨d {￨d @￨f Deployment￨f public￨f static￨f ResourceAdapterArchive￨f createDeployment￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨e ArquillianResource￨e ServiceContainer￨e serviceContainer￨e ;￨e @￨f Test￨f public￨f void￨f testRegistryConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e serviceContainer￨e .￨e getService￨e (￨e RA_REPOSITORY_SERVICE￨e )￨e ;￨e assertNotNull￨e (￨e controller￨e )￨e ;￨e ResourceAdapterRepository￨e repository￨e =￨e (￨e (￨e ResourceAdapterRepository￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e repository￨e )￨e ;￨e Set￨e <￨e String￨e >￨e ids￨e =￨e repository￨e .￨e getResourceAdapters￨e (￨e MessageListener￨e .￨e class￨e )￨e ;￨e assertNotNull￨e (￨e ids￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b 1￨b ,￨b ids￨b .￨b size￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b String￨e piId￨e =￨e ids￨e .￨e iterator￨e (￨e )￨e .￨e next￨e (￨e )￨e ;￨e assertNotNull￨e (￨e piId￨e )￨e ;￨e Endpoint￨e endpoint￨e =￨e repository￨e .￨e getEndpoint￨e (￨e piId￨e )￨e ;￨e assertNotNull￨e (￨e endpoint￨e )￨e ;￨e List￨e <￨e MessageListener￨e >￨e listeners￨e =￨e repository￨e .￨e getMessageListeners￨e (￨e piId￨e )￨e ;￨e assertNotNull￨e (￨e listeners￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e listeners￨e .￨e size￨e (￨e )￨e )￨e ;￨e MessageListener￨e listener￨e =￨e listeners￨e .￨e get￨e (￨e 0￨e )￨e ;￨e ActivationSpec￨e as￨e =￨e listener￨e .￨e getActivation￨e (￨e )￨e .￨e createInstance￨e (￨e )￨e ;￨e assertNotNull￨e (￨e as￨e )￨e ;￨e assertNotNull￨e (￨e as￨e .￨e getResourceAdapter￨e (￨e )￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testMetadataConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ThrowStatement￨d extends￨d Statement￨d {￨d public￨e Expression￨e exception￨e ;￨e public￨e TypeBinding￨e exceptionType￨e ;￨e public￨f ThrowStatement￨f (￨f Expression￨p exception￨p ,￨p int￨p startPosition￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f exception￨e .￨e analyseCode￨e (￨e currentScope￨e ,￨e flowContext￨e ,￨e flowInfo￨e )￨e ;￨e flowContext￨e .￨e checkExceptionHandlers￨e (￨e exceptionType￨e ,￨e this￨e ,￨e flowInfo￨e ,￨e currentScope￨e )￨e ;￨e <START_BUG>￨b return￨b DeadEnd￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f }￨d
public￨d class￨d WildcardType￨d extends￨d Type￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d BOUND_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d WildcardType￨d .￨d class￨d ,￨d "bound"￨d ,￨d Type￨d .￨d class￨d ,￨d ASTNode￨d .￨d OPTIONAL￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d SimplePropertyDescriptor￨d UPPER_BOUND_PROPERTY￨d =￨d new￨d SimplePropertyDescriptor￨d (￨d WildcardType￨d .￨d class￨d ,￨d "upperBound"￨d ,￨d boolean￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d private￨e Type￨e optionalBound￨e =￨e null￨e ;￨e private￨e boolean￨e isUpperBound￨e =￨e true￨e ;￨e WildcardType￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f boolean￨f internalGetSetBooleanProperty￨f (￨f SimplePropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p boolean￨p value￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f WildcardType￨e result￨e =￨e new￨e WildcardType￨e (￨e target￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setSourceRange￨b (￨b this￨b .￨b getStartPosition￨b (￨b )￨b ,￨b this￨b .￨b getLength￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e setBound￨e (￨e (￨e (￨e Type￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getBound￨e (￨e )￨e )￨e )￨e )￨e ,￨e isUpperBound￨e (￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f boolean￨f isUpperBound￨f (￨f )￨f {￨f }￨f public￨f Type￨f getBound￨f (￨f )￨f {￨f }￨f public￨f void￨f setBound￨f (￨f Type￨p type￨p ,￨p boolean￨p isUpperBound￨p )￨f {￨f }￨f public￨f void￨f setBound￨f (￨f Type￨p type￨p )￨f {￨f }￨f public￨f void￨f setUpperBound￨f (￨f boolean￨p isUpperBound￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
class￨d ProcessDestroyer￨d implements￨d Runnable￨d {￨d private￨e Vector￨e processes￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e Method￨e addShutdownHookMethod￨e ;￨e private￨e Method￨e removeShutdownHookMethod￨e ;￨e private￨e ProcessDestroyer￨e .￨e ProcessDestroyerImpl￨e destroyProcessThread￨e =￨e null￨e ;￨e private￨e boolean￨e added￨e =￨e false￨e ;￨e private￨d class￨d ProcessDestroyerImpl￨d extends￨d Thread￨d {￨d private￨e boolean￨e shouldDestroy￨e =￨e true￨e ;￨e public￨f ProcessDestroyerImpl￨f (￨f )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f public￨f void￨f setShouldDestroy￨f (￨f boolean￨p shouldDestroy￨p )￨f {￨f }￨f }￨d public￨f ProcessDestroyer￨f (￨f )￨f {￨f }￨f private￨f void￨f addShutdownHook￨f (￨f )￨f {￨f }￨f private￨f void￨f removeShutdownHook￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAddedAsShutdownHook￨f (￨f )￨f {￨f }￨f public￨f boolean￨f add￨f (￨f Process￨p process￨p )￨f {￨f }￨f public￨f boolean￨f remove￨f (￨f Process￨p process￨p )￨f {￨f synchronized￨f (￨f processes￨p )￨f {￨f boolean￨e processRemoved￨e =￨e processes￨e .￨e removeElement￨e (￨e process￨e )￨e ;￨e if￨j (￨j (￨c processes￨c .￨c size￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j <START_BUG>￨b processes￨b .￨b notify￨b (￨b )￨b ;￨b <END_BUG>￨b removeShutdownHook￨e (￨e )￨e ;￨e }￨j return￨e processRemoved￨e ;￨e }￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d QuickVerificationCommand￨d extends￨d AbstractHandler￨d {￨d private￨e String￨e signatureId￨e ;￨e private￨e boolean￨e preferencesComplete￨e =￨e false￨e ;￨e private￨e ExecutionEvent￨e event￨e ;￨e private￨e IFile￨e file￨e =￨e null￨e ;￨e public￨f Object￨f execute￨f (￨f ExecutionEvent￨f event￨f )￨f throws￨f ExecutionException￨f (￨f )￨f {￨f }￨f private￨f void￨f createVerification￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f VerifySignature￨e verify￨e =￨e new￨e VerifySignature￨e (￨e )￨e ;￨e ArrayList￨e <￨e VerificationResult￨e >￨e results￨e =￨e new￨e ArrayList￨e <￨e VerificationResult￨e >￨e (￨e )￨e ;￨e if￨j (￨j (￨c HandlerUtil￨c .￨c getActivePart￨c (￨c event￨c )￨c )￨c instanceof￨c IEditorPart￨c )￨j {￨j final￨e IEditorPart￨e editorPart￨e =￨e (￨e (￨e IEditorPart￨e )￨e (￨e HandlerUtil￨e .￨e getActivePart￨e (￨e event￨e )￨e )￨e )￨e ;￨e if￨j (￨j editorPart￨c .￨c isDirty￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c null￨c !=￨c (￨c editorPart￨c .￨c getTitle￨c (￨c )￨c )￨c )￨c &&￨c (￨c (￨c editorPart￨c .￨c getTitle￨c (￨c )￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨c )￨j {￨j IRunnableWithProgress￨f op￨f =￨f new￨f IRunnableWithProgress￨f (￨f )￨f {￨f public￨f void￨f run￨f (￨f final￨p IProgressMonitor￨p monitor￨p )￨f {￨f editorPart￨e .￨e doSave￨e (￨e monitor￨e )￨e ;￨e }￨f }￨f ;￨e try￨f (￨f )￨f {￨f PlatformUI￨e .￨e getWorkbench￨e (￨e )￨e .￨e getProgressService￨e (￨e )￨e .￨e runInUI￨e (￨e XSTUIPlugin￨e .￨e getActiveWorkbenchWindow￨e (￨e )￨e ,￨e op￨e ,￨e ResourcesPlugin￨e .￨e getWorkspace￨e (￨e )￨e .￨e getRoot￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f InvocationTargetException￨p ite￨p )￨f {￨f Utils￨e .￨e log￨e (￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨e ,￨e ite￨e )￨e ;￨e }￨f catch￨f (￨f InterruptedException￨p ie￨p )￨f {￨f Utils￨e .￨e log￨e (￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨e ,￨e ie￨e )￨e ;￨e }￨f }￨j else￨j {￨j editorPart￨e .￨e doSaveAs￨e (￨e )￨e ;￨e }￨j }￨j file￨e =￨e (￨e (￨e IFile￨e )￨e (￨e editorPart￨e .￨e getEditorInput￨e (￨e )￨e .￨e getAdapter￨e (￨e IFile￨e .￨e class￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j ISelection￨e selection￨e =￨e HandlerUtil￨e .￨e getCurrentSelection￨e (￨e event￨e )￨e ;￨e if￨j (￨j selection￨c instanceof￨c IStructuredSelection￨c )￨j {￨j file￨e =￨e (￨e (￨e IFile￨e )￨e (￨e (￨e (￨e IStructuredSelection￨e )￨e (￨e selection￨e )￨e )￨e .￨e getFirstElement￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨j if￨j (￨j (￨c (￨c file￨c )￨c !=￨c null￨c )￨c &&￨c (￨c file￨c .￨c isAccessible￨c (￨c )￨c )￨c )￨j {￨j results￨e =￨e verify￨e .￨e verify￨e (￨e file￨e .￨e getLocation￨e (￨e )￨e .￨e toString￨e (￨e )￨e ,￨e signatureId￨e )￨e ;￨e }￨j else￨j {￨j MessageDialog￨e .￨e openInformation￨e (￨e HandlerUtil￨e .￨e getActiveShell￨e (￨e event￨e )￨e ,￨e QuickVerificationCommand_0￨e ,￨e NLS￨e .￨e bind￨e (￨e RemoveReadOnlyFlag￨e ,￨e QuickVerificationCommand_5￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c results￨c .￨c size￨c (￨c )￨c )￨c ==￨c 1￨c )￨j {￨j VerificationResult￨e result￨e =￨e (￨e (￨e VerificationResult￨e )￨e (￨e results￨e .￨e get￨e (￨e 0￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c result￨c .￨c getSignature￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b Verification￨b .￨b showVerificationResult￨b (￨b result￨b ,￨b HandlerUtil￨b .￨b getActiveShell￨b (￨b event￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j MessageDialog￨e .￨e openError￨e (￨e HandlerUtil￨e .￨e getActiveShell￨e (￨e event￨e )￨e ,￨e QuickVerificationCommand_0￨e ,￨e NLS￨e .￨e bind￨e (￨e QuickVerificationCommand_4￨e ,￨e signatureId￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j MessageDialog￨e .￨e openError￨e (￨e HandlerUtil￨e .￨e getActiveShell￨e (￨e event￨e )￨e ,￨e QuickVerificationCommand_0￨e ,￨e NLS￨e .￨e bind￨e (￨e QuickVerificationCommand_4￨e ,￨e signatureId￨e )￨e )￨e ;￨e }￨j }￨f private￨f void￨f getPreferenceValues￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkPreferences￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JMXProtocolPackager￨d implements￨d DeploymentPackager￨d {￨d private￨e static￨e final￨e List￨e <￨e String￨e >￨e defaultDependencies￨e =￨e new￨e ArrayList￨e <￨e String￨e >￨e (￨e )￨e ;￨e private￨d static￨d final￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d JMXProtocolPackager￨d .￨d class￨d )￨d ;￨d private￨d ServiceArchiveHolder￨d archiveHolder￨d ;￨d JMXProtocolPackager￨d (￨d ServiceArchiveHolder￨d archiveHolder￨d )￨d {￨d }￨d @￨f Override￨f public￨f Archive￨f <￨f ?￨f >￨f generateDeployment￨f (￨f TestDeployment￨p testDeployment￨p ,￨p Collection￨p <￨p ProtocolArchiveProcessor￨p >￨p protocolProcessors￨p )￨f {￨f }￨f private￨f JavaArchive￨f generateArquillianServiceArchive￨f (￨f Collection￨f <￨f Archive￨f <￨f ?￨f >￨f >￨f auxArchives￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨d JavaArchive￨d archive￨d =￨d ShrinkWrap￨d .￨d create￨d (￨d JavaArchive￨d .￨d class￨d ,￨d "arquillian-service"￨d )￨d ;￨d JMXProtocolPackager￨d .￨d log￨d .￨d debugf￨d (￨d "Generating:<seq2seq4repair_space>%s"￨d ,￨d archive￨d .￨d getName￨d (￨d )￨d )￨d ;￨d archive￨d .￨d addPackage￨d (￨d ArquillianService￨d .￨d class￨d .￨d getPackage￨d (￨d )￨d )￨d ;￨d archive￨d .￨d addPackage￨d (￨d AbstractJMXProtocol￨d .￨d class￨d .￨d getPackage￨d (￨d )￨d )￨d ;￨d archive￨d .￨d addClasses￨d (￨d ServerSetup￨d .￨d class￨d ,￨d ServerSetupTask￨d .￨d class￨d ,￨d ManagementClient￨d .￨d class￨d ,￨d Authentication￨d .￨d class￨d ,￨d NetworkUtils￨d .￨d class￨d )￨d ;￨d final￨d Set￨d <￨d ModuleIdentifier￨d >￨d archiveDependencies￨d =￨d new￨d LinkedHashSet￨d <￨d ModuleIdentifier￨d >￨d (￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.as.jmx"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.as.server"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.as.controller-client"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.jandex"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.logging"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.modules"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.dmr"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.msc"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.osgi.core"￨d )￨d )￨d ;￨d archiveDependencies￨d .￨d add￨d (￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.wildfly.security.manager"￨d )￨d )￨d ;￨d final￨d Set￨d <￨d String￨d >￨d loadableExtensions￨d =￨d new￨d HashSet￨d <￨d String￨d >￨d (￨d )￨d ;￨d final￨d String￨d loadableExtensionsPath￨d =￨d "META-INF/services/"￨d +￨d (￨d RemoteLoadableExtension￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d for￨d (￨d Archive￨d <￨d ?￨d >￨d aux￨d :￨d auxArchives￨d )￨d {￨d Node￨e node￨e =￨e aux￨e .￨e get￨e (￨e loadableExtensionsPath￨e )￨e ;￨e if￨j (￨j node￨c !=￨c null￨c )￨j {￨j BufferedReader￨e br￨e =￨e new￨e BufferedReader￨e (￨e new￨e InputStreamReader￨e (￨e node￨e .￨e getAsset￨e (￨e )￨e .￨e openStream￨e (￨e )￨e )￨e )￨e ;￨e String￨e line￨e =￨e br￨e .￨e readLine￨e (￨e )￨e ;￨e while￨l (￨l line￨c !=￨c null￨c )￨l {￨l loadableExtensions￨e .￨e add￨e (￨e line￨e )￨e ;￨e ClassLoader￨e classLoader￨e =￨e getClass￨e (￨e )￨e .￨e getClassLoader￨e (￨e )￨e ;￨e Object￨e extension￨e =￨e classLoader￨e .￨e loadClass￨e (￨e line￨e )￨e .￨e newInstance￨e (￨e )￨e ;￨e if￨j (￨j extension￨c instanceof￨c DependenciesProvider￨c )￨j {￨j DependenciesProvider￨e provider￨e =￨e (￨e (￨e DependenciesProvider￨e )￨e (￨e extension￨e )￨e )￨e ;￨e archiveDependencies￨e .￨e addAll￨e (￨e provider￨e .￨e getDependencies￨e (￨e )￨e )￨e ;￨e }￨j line￨e =￨e br￨e .￨e readLine￨e (￨e )￨e ;￨e }￨l }￨j JMXProtocolPackager￨e .￨e log￨e .￨e debugf￨e (￨e "Merging<seq2seq4repair_space>archive:<seq2seq4repair_space>%s"￨e ,￨e aux￨e )￨e ;￨e archive￨e .￨e merge￨e (￨e aux￨e )￨e ;￨e }￨d loadableExtensions￨d .￨d add￨d (￨d JMXProtocolEndpointExtension￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d loadableExtensions￨d .￨d add￨d (￨d InContainerManagementClientExtension￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d archive￨d .￨d setManifest￨d (￨d new￨d Asset￨d (￨d )￨d {￨d public￨f InputStream￨f openStream￨f (￨f )￨f {￨f ManifestBuilder￨e builder￨e =￨e ManifestBuilder￨e .￨e newInstance￨e (￨e )￨e ;￨e Iterator￨e <￨e ModuleIdentifier￨e >￨e itdep￨e =￨e archiveDependencies￨e .￨e iterator￨e (￨e )￨e ;￨e StringBuffer￨e depspec￨e =￨e new￨e StringBuffer￨e (￨e (￨e ""￨e +￨e (￨e itdep￨e .￨e next￨e (￨e )￨e )￨e )￨e )￨e ;￨e while￨l (￨l itdep￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l depspec￨e .￨e append￨e (￨e (￨e ","￨e +￨e (￨e itdep￨e .￨e next￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨l builder￨e .￨e addManifestHeader￨e (￨e "Dependencies"￨e ,￨e depspec￨e .￨e toString￨e (￨e )￨e )￨e ;￨e return￨e builder￨e .￨e openStream￨e (￨e )￨e ;￨e }￨f }￨d )￨e ;￨e String￨d serviceActivatorPath￨d =￨d "META-INF/services/"￨d +￨d (￨d ServiceActivator￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d final￨d URL￨d serviceActivatorURL￨d =￨d this￨d .￨d getClass￨d (￨d )￨d .￨d getClassLoader￨d (￨d )￨d .￨d getResource￨d (￨d (￨d "arquillian-service/"￨d +￨d serviceActivatorPath￨d )￨d )￨d ;￨d if￨d (￨d serviceActivatorURL￨d ==￨d null￨d )￨d {￨d throw￨e new￨e RuntimeException￨e (￨e (￨e (￨e (￨e "No<seq2seq4repair_space>arquillian-service/"￨e +￨e serviceActivatorPath￨e )￨e +￨e "<seq2seq4repair_space>found<seq2seq4repair_space>by<seq2seq4repair_space>classloader:<seq2seq4repair_space>"￨e )￨e +￨e (￨e this￨e .￨e getClass￨e (￨e )￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨d archive￨e .￨e addAsResource￨e (￨e new￨e UrlAsset￨e (￨e serviceActivatorURL￨e )￨e ,￨e serviceActivatorPath￨e )￨e ;￨e archive￨f .￨f addAsResource￨f (￨f new￨f Asset￨f (￨f )￨f {￨f public￨f InputStream￨f openStream￨f (￨f )￨f {￨f ByteArrayOutputStream￨e baos￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Properties￨e props￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e Constants￨e .￨e BUNDLE_SYMBOLICNAME￨e ,￨e "arquillian-service"￨e )￨e ;￨e StringBuilder￨e builder￨e =￨e new￨e StringBuilder￨e (￨e )￨e ;￨e builder￨e .￨e append￨e (￨e "org.jboss.arquillian.container.test.api,org.jboss.arquillian.junit,"￨e )￨e ;￨e builder￨e .￨e append￨e (￨e "org.jboss.arquillian.osgi,org.jboss.arquillian.test.api,"￨e )￨e ;￨e <START_BUG>￨b builder￨b .￨b append￨b (￨b "org.jboss.as.arquillian.api,org.jboss.as.arquillian.container,org.jboss.as.osgi,"￨b )￨b ;￨b <END_BUG>￨b builder￨e .￨e append￨e (￨e "org.jboss.shrinkwrap.api,org.jboss.shrinkwrap.api.asset,org.jboss.shrinkwrap.api.spec,"￨e )￨e ;￨e builder￨e .￨e append￨e (￨e "org.junit,org.junit.runner"￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e Constants￨e .￨e EXPORT_PACKAGE￨e ,￨e builder￨e .￨e toString￨e (￨e )￨e )￨e ;￨e props￨e .￨e store￨e (￨e baos￨e ,￨e null￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ex￨p )￨f {￨f throw￨e new￨e IllegalStateException￨e (￨e "Cannot<seq2seq4repair_space>write<seq2seq4repair_space>osgi<seq2seq4repair_space>metadata"￨e ,￨e ex￨e )￨e ;￨e }￨f return￨e new￨e ByteArrayInputStream￨e (￨e baos￨e .￨e toByteArray￨e (￨e )￨e )￨e ;￨e }￨f }￨f ,￨e "META-INF/jbosgi-xservice.properties"￨e )￨e ;￨e archive￨e .￨e delete￨e (￨e ArchivePaths￨e .￨e create￨e (￨e loadableExtensionsPath￨e )￨e )￨e ;￨e archive￨f .￨f addAsResource￨f (￨f new￨f Asset￨f (￨f )￨f {￨f @￨f Override￨f public￨f InputStream￨f openStream￨f (￨f )￨f {￨f ByteArrayOutputStream￨e baos￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e PrintWriter￨e pw￨e =￨e new￨e PrintWriter￨e (￨e new￨e OutputStreamWriter￨e (￨e baos￨e )￨e )￨e ;￨e for￨l (￨l String￨c line￨c :￨c loadableExtensions￨c )￨l {￨l pw￨e .￨e println￨e (￨e line￨e )￨e ;￨e }￨l pw￨e .￨e close￨e (￨e )￨e ;￨e return￨e new￨e ByteArrayInputStream￨e (￨e baos￨e .￨e toByteArray￨e (￨e )￨e )￨e ;￨e }￨f }￨f ,￨e loadableExtensionsPath￨e )￨e ;￨e JMXProtocolPackager￨e .￨e log￨e .￨e debugf￨e (￨e "Loadable<seq2seq4repair_space>extensions:<seq2seq4repair_space>%s"￨e ,￨e loadableExtensions￨e )￨e ;￨e JMXProtocolPackager￨e .￨e log￨e .￨e tracef￨e (￨e "Archive<seq2seq4repair_space>content:<seq2seq4repair_space>%s\n%s"￨e ,￨e archive￨e ,￨e archive￨e .￨e toString￨e (￨e true￨e )￨e )￨e ;￨e return￨e archive￨e ;￨e }￨f private￨f void￨f addModulesManifestDependencies￨f (￨f Archive￨p <￨p ?￨p >￨p appArchive￨p )￨f {￨f }￨f }￨d
public￨d class￨d OverseerCollectionProcessor￨d implements￨d Runnable￨d ,￨d ClosableThread￨d {￨d public￨e static￨e final￨e String￨e NUM_SLICES￨e =￨e "numShards"￨e ;￨e public￨e static￨e final￨e String￨e REPLICATION_FACTOR￨e =￨e "replicationFactor"￨e ;￨e public￨e static￨e final￨e String￨e MAX_SHARDS_PER_NODE￨e =￨e "maxShardsPerNode"￨e ;￨e public￨e static￨e final￨e String￨e CREATE_NODE_SET￨e =￨e "createNodeSet"￨e ;￨e public￨e static￨e final￨e String￨e DELETECOLLECTION￨e =￨e "deletecollection"￨e ;￨e public￨e static￨e final￨e String￨e CREATECOLLECTION￨e =￨e "createcollection"￨e ;￨e public￨e static￨e final￨e String￨e RELOADCOLLECTION￨e =￨e "reloadcollection"￨e ;￨e private￨e static￨e final￨e String￨e QUEUE_OPERATION￨e =￨e "operation"￨e ;￨e private￨d static￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d OverseerCollectionProcessor￨d .￨d class￨d )￨d ;￨d private￨d DistributedQueue￨d workQueue￨d ;￨d private￨d String￨d myId￨d ;￨d private￨d ShardHandler￨d shardHandler￨d ;￨d private￨d String￨d adminPath￨d ;￨d private￨d ZkStateReader￨d zkStateReader￨d ;￨d private￨d boolean￨d isClosed￨d ;￨d public￨d OverseerCollectionProcessor￨d (￨d ZkStateReader￨d zkStateReader￨d ,￨d String￨d myId￨d ,￨d ShardHandler￨d shardHandler￨d ,￨d String￨d adminPath￨d )￨d {￨d }￨d protected￨f OverseerCollectionProcessor￨f (￨f ZkStateReader￨p zkStateReader￨p ,￨p String￨p myId￨p ,￨p ShardHandler￨p shardHandler￨p ,￨p String￨p adminPath￨p ,￨p DistributedQueue￨p workQueue￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f amILeader￨f (￨f )￨f {￨f }￨f protected￨f SolrResponse￨f processMessage￨f (￨f ZkNodeProps￨p message￨p ,￨p String￨p operation￨p )￨f {￨f NamedList￨e results￨e =￨e new￨e NamedList￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j OverseerCollectionProcessor￨c .￨c CREATECOLLECTION￨c .￨c equals￨c (￨c operation￨c )￨c )￨j {￨j createCollection￨e (￨e zkStateReader￨e .￨e getClusterState￨e (￨e )￨e ,￨e message￨e )￨e ;￨e }￨j else￨j if￨j (￨j OverseerCollectionProcessor￨c .￨c DELETECOLLECTION￨c .￨c equals￨c (￨c operation￨c )￨c )￨j {￨j ModifiableSolrParams￨e params￨e =￨e new￨e ModifiableSolrParams￨e (￨e )￨e ;￨e params￨e .￨e set￨e (￨e ACTION￨e ,￨e UNLOAD￨e .￨e toString￨e (￨e )￨e )￨e ;￨e params￨e .￨e set￨e (￨e DELETE_INSTANCE_DIR￨e ,￨e true￨e )￨e ;￨e collectionCmd￨e (￨e zkStateReader￨e .￨e getClusterState￨e (￨e )￨e ,￨e message￨e ,￨e params￨e )￨e ;￨e }￨j else￨j if￨j (￨j OverseerCollectionProcessor￨c .￨c RELOADCOLLECTION￨c .￨c equals￨c (￨c operation￨c )￨c )￨j {￨j ModifiableSolrParams￨e params￨e =￨e new￨e ModifiableSolrParams￨e (￨e )￨e ;￨e params￨e .￨e set￨e (￨e ACTION￨e ,￨e RELOAD￨e .￨e toString￨e (￨e )￨e )￨e ;￨e collectionCmd￨e (￨e zkStateReader￨e .￨e getClusterState￨e (￨e )￨e ,￨e message￨e ,￨e params￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e SolrException￨e (￨e ErrorCode￨e .￨e BAD_REQUEST￨e ,￨e (￨e "Unknow<seq2seq4repair_space>the<seq2seq4repair_space>operation:"￨e +￨e operation￨e )￨e )￨e ;￨e }￨j int￨e failed￨e =￨e 0￨e ;￨e ShardResponse￨e srsp￨e ;￨e do￨l {￨l srsp￨e =￨e shardHandler￨e .￨e takeCompletedIncludingErrors￨e (￨e )￨e ;￨e if￨j (￨j srsp￨c !=￨c null￨c )￨j {￨j Throwable￨e e￨e =￨e srsp￨e .￨e getException￨e (￨e )￨e ;￨e if￨j (￨j e￨c !=￨c null￨c )￨j {￨j failed￨e ++￨e ;￨e OverseerCollectionProcessor￨e .￨e log￨e .￨e error￨e (￨e (￨e "Error<seq2seq4repair_space>talking<seq2seq4repair_space>to<seq2seq4repair_space>shard:<seq2seq4repair_space>"￨e +￨e (￨e srsp￨e .￨e getShard￨e (￨e )￨e )￨e )￨e ,￨e e￨e )￨e ;￨e results￨e .￨e add￨e (￨e srsp￨e .￨e getShard￨e (￨e )￨e ,￨e e￨e )￨e ;￨e }￨j else￨j {￨j results￨e .￨e add￨e (￨e srsp￨e .￨e getShard￨e (￨e )￨e ,￨e srsp￨e .￨e getSolrResponse￨e (￨e )￨e .￨e getResponse￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨l while￨l (￨l srsp￨c !=￨c null￨c )￨l ;￨l }￨f catch￨f (￨f SolrException￨p ex￨p )￨f {￨f SolrException￨e .￨e log￨e (￨e OverseerCollectionProcessor￨e .￨e log￨e ,￨e (￨e (￨e (￨e (￨e "Collection<seq2seq4repair_space>"￨e +￨e operation￨e )￨e +￨e "<seq2seq4repair_space>of<seq2seq4repair_space>"￨e )￨e +￨e operation￨e )￨e +￨e "<seq2seq4repair_space>failed"￨e )￨e )￨e ;￨e <START_BUG>￨b results￨b .￨b add￨b (￨b (￨b (￨b "Operation<seq2seq4repair_space>"￨b +￨b operation￨b )￨b +￨b "<seq2seq4repair_space>cause<seq2seq4repair_space>exception:"￨b )￨b ,￨b ex￨b )￨b ;￨b <END_BUG>￨b }￨f finally￨f (￨f )￨f {￨f return￨e new￨e OverseerSolrResponse￨e (￨e results￨e )￨e ;￨e }￨f }￨f private￨f boolean￨f createCollection￨f (￨f ClusterState￨p clusterState￨p ,￨p ZkNodeProps￨p message￨p )￨f {￨f }￨f private￨f boolean￨f collectionCmd￨f (￨f ClusterState￨p clusterState￨p ,￨p ZkNodeProps￨p message￨p ,￨p ModifiableSolrParams￨p params￨p )￨f {￨f }￨f private￨f int￨f msgStrToInt￨f (￨f ZkNodeProps￨f message￨f ,￨f String￨f key￨f ,￨f Integer￨f def￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f isClosed￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d OutputAttribute￨d extends￨d ProjectComponent￨d {￨d public￨e static￨e final￨e String￨e STDOUT￨e =￨e "stdout"￨e ;￨e public￨e static￨e final￨e String￨e STDERR￨e =￨e "stderr"￨e ;￨e protected￨e String￨e value￨e ;￨e public￨f OutputAttribute￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f OutputStream￨f getOutputStream￨f (￨f )￨f {￨f if￨j (￨j OutputAttribute￨c .￨c STDOUT￨c .￨c equals￨c (￨c value￨c )￨c )￨j {￨j return￨e new￨e KeepAliveOutputStream￨e (￨e System￨e .￨e out￨e )￨e ;￨e }￨j else￨j if￨j (￨j OutputAttribute￨c .￨c STDERR￨c .￨c equals￨c (￨c value￨c )￨c )￨j {￨j return￨e new￨e KeepAliveOutputStream￨e (￨e System￨e .￨e err￨e )￨e ;￨e }￨j <START_BUG>￨b File￨b f￨b =￨b project￨b .￨b resolveFile￨b (￨b value￨b )￨b ;￨b <END_BUG>￨b try￨f (￨f )￨f {￨f return￨e new￨e FileOutputStream￨e (￨e f￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e BuildException￨e (￨e e￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d LookAndFeelCommand￨d implements￨d Command￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e JMETER_LAF￨e =￨e "jmeter.laf"￨e ;￨e private￨e static￨e final￨e Set￨e <￨e String￨e >￨e commands￨e =￨e new￨e HashSet￨e <￨e String￨e >￨e (￨e )￨e ;￨e private￨f static￨f String￨f getJMeterLaf￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f checkLafName￨f (￨f String￨p laf￨p )￨f {￨f }￨f public￨f LookAndFeelCommand￨f (￨f )￨f {￨f }￨f public￨f void￨f doAction￨f (￨f ActionEvent￨p ev￨p )￨f {￨f try￨f (￨f )￨f {￨f <START_BUG>￨b String￨b className￨b =￨b ev￨b .￨b getActionCommand￨b (￨b )￨b .￨b substring￨b (￨b 4￨b )￨b .￨b replace￨b (￨b '/'￨b ,￨b '.'￨b )￨b ;￨b <END_BUG>￨b UIManager￨e .￨e setLookAndFeel￨e (￨e className￨e )￨e ;￨e SwingUtilities￨e .￨e updateComponentTreeUI￨e (￨e GuiPackage￨e .￨e getInstance￨e (￨e )￨e .￨e getMainFrame￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedLookAndFeelException￨p e￨p )￨f {￨f JMeterUtils￨e .￨e reportErrorToUser￨e (￨e (￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨e +￨e (￨e e￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f InstantiationException￨p e￨p )￨f {￨f JMeterUtils￨e .￨e reportErrorToUser￨e (￨e (￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨e +￨e (￨e e￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f ClassNotFoundException￨p e￨p )￨f {￨f JMeterUtils￨e .￨e reportErrorToUser￨e (￨e (￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨e +￨e (￨e e￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IllegalAccessException￨p e￨p )￨f {￨f JMeterUtils￨e .￨e reportErrorToUser￨e (￨e (￨e "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨e +￨e (￨e e￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨f public￨f Set￨f <￨f String￨f >￨f getActionNames￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SSLTest￨d extends￨d BaseJDBCTestCase￨d {￨d private￨e InputStream￨e [￨e ]￨e _inputStreamHolder￨e ;￨e private￨e NetworkServerTestSetup￨e nsTestSetup￨e ;￨e public￨f SSLTest￨f (￨f String￨p testName￨p )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f Test￨f decorateTest￨f (￨f String￨p testName￨p )￨f {￨f }￨f private￨f static￨f String￨f [￨f ]￨f getStartupProperties￨f (￨f )￨f {￨f }￨f public￨f void￨f testSSLBasicDSConnect￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testSSLBasicDSPlainConnect￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f DataSource￨e ds￨e =￨e JDBCDataSource￨e .￨e getDataSource￨e (￨e )￨e ;￨e JDBCDataSource￨e .￨e setBeanProperty￨e (￨e ds￨e ,￨e "createDatabase"￨e ,￨e "create"￨e )￨e ;￨e try￨f (￨f )￨f {￨f Connection￨e c2￨e =￨e ds￨e .￨e getConnection￨e (￨e )￨e ;￨e c2￨e .￨e close￨e (￨e )￨e ;￨e fail￨e (￨e )￨e ;￨e }￨f catch￨f (￨f SQLException￨p e￨p )￨f {￨f <START_BUG>￨b assertSQLState￨b (￨b "58009"￨b ,￨b e￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f }￨d
public￨d final￨d class￨d TagTypeHandler￨d extends￨d AbstractMarkupFilter￨d {￨d private￨e final￨e ArrayListStack￨e <￨e ComponentTag￨e >￨e stack￨e =￨e new￨e ArrayListStack￨e <￨e ComponentTag￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e Map￨e <￨e String￨e ,￨e Boolean￨e >￨e requireOpenBodyCloseTag￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e Boolean￨e >￨e (￨e )￨e ;￨e public￨f TagTypeHandler￨f (￨f final￨p IMarkupFilter￨p parent￨p )￨f {￨f }￨f public￨f MarkupElement￨f nextTag￨f (￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f while￨l (￨l (￨c stack￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨l {￨l final￨e ComponentTag￨e top￨e =￨e stack￨e .￨e pop￨e (￨e )￨e ;￨e return￨e top￨e ;￨e }￨l final￨e ComponentTag￨e tag￨e =￨e nextComponentTag￨e (￨e )￨e ;￨e if￨j (￨j tag￨c ==￨c null￨c )￨j {￨j return￨e tag￨e ;￨e }￨j if￨j (￨j tag￨c .￨c isOpenClose￨c (￨c )￨c )￨j {￨j String￨e name￨e =￨e tag￨e .￨e getName￨e (￨e )￨e ;￨e if￨j (￨j (￨c tag￨c .￨c getNamespace￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j name￨e =￨e (￨e (￨e tag￨e .￨e getNamespace￨e (￨e )￨e )￨e +￨e ":"￨e )￨e +￨e (￨e tag￨e .￨e getName￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j TagTypeHandler￨c .￨c requiresOpenBodyCloseTag￨c (￨c name￨c )￨c )￨j {￨j tag￨e .￨e setType￨e (￨e OPEN￨e )￨e ;￨e <START_BUG>￨b XmlTag￨b closeTag￨b =￨b new￨b XmlTag￨b (￨b )￨b ;￨b <END_BUG>￨b closeTag￨e .￨e setType￨e (￨e CLOSE￨e )￨e ;￨e closeTag￨e .￨e setName￨e (￨e tag￨e .￨e getName￨e (￨e )￨e )￨e ;￨e closeTag￨e .￨e setNamespace￨e (￨e tag￨e .￨e getNamespace￨e (￨e )￨e )￨e ;￨e closeTag￨e .￨e closes￨e (￨e tag￨e )￨e ;￨e stack￨e .￨e push￨e (￨e new￨e ComponentTag￨e (￨e closeTag￨e )￨e )￨e ;￨e }￨j }￨j return￨e tag￨e ;￨e }￨f public￨f static￨f boolean￨f requiresOpenBodyCloseTag￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f }￨d
public￨d class￨d SolrDispatchFilter￨d implements￨d Filter￨d {￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d SolrDispatchFilter￨d .￨d class￨d )￨d ;￨d protected￨d CoreContainer￨d cores￨d ;￨d protected￨d String￨d pathPrefix￨d =￨d null￨d ;￨d protected￨d String￨d abortErrorMessage￨d =￨d null￨d ;￨d protected￨d String￨d solrConfigFilename￨d =￨d null￨d ;￨d protected￨d final￨d Map￨d <￨d SolrConfig￨d ,￨d SolrRequestParsers￨d >￨d parsers￨d =￨d new￨d WeakHashMap￨d <￨d SolrConfig￨d ,￨d SolrRequestParsers￨d >￨d (￨d )￨d ;￨d protected￨d final￨d SolrRequestParsers￨d adminRequestParser￨d ;￨d private￨d static￨d final￨d Charset￨d UTF8￨d =￨d Charset￨d .￨d forName￨d (￨d "UTF-8"￨d )￨d ;￨d public￨d SolrDispatchFilter￨d (￨d )￨d {￨d }￨d public￨f void￨f init￨f (￨f FilterConfig￨f config￨f )￨f throws￨f ServletException￨f (￨f )￨f {￨f log￨e .￨e info￨e (￨e "SolrDispatchFilter.init()"￨e )￨e ;￨e boolean￨e abortOnConfigurationError￨e =￨e true￨e ;￨e CoreContainer￨e .￨e Initializer￨e init￨e =￨e createInitializer￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f this￨e .￨e pathPrefix￨e =￨e config￨e .￨e getInitParameter￨e (￨e "path-prefix"￨e )￨e ;￨e init￨e .￨e setSolrConfigFilename￨e (￨e config￨e .￨e getInitParameter￨e (￨e "solrconfig-filename"￨e )￨e )￨e ;￨e this￨e .￨e cores￨e =￨e init￨e .￨e initialize￨e (￨e )￨e ;￨e abortOnConfigurationError￨e =￨e init￨e .￨e isAbortOnConfigurationError￨e (￨e )￨e ;￨e log￨e .￨e info￨e (￨e (￨e "user.dir="￨e +￨e (￨e System￨e .￨e getProperty￨e (￨e "user.dir"￨e )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f <START_BUG>￨b log￨b .￨b error￨b (￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>start<seq2seq4repair_space>Solr.<seq2seq4repair_space>Check<seq2seq4repair_space>solr/home<seq2seq4repair_space>property"￨b ,￨b t￨b )￨b ;￨b <END_BUG>￨b severeErrors￨e .￨e add￨e (￨e t￨e )￨e ;￨e SolrCore￨e .￨e log￨e (￨e t￨e )￨e ;￨e }￨f if￨j (￨j abortOnConfigurationError￨c &&￨c (￨c (￨c severeErrors￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨c )￨j {￨j StringWriter￨e sw￨e =￨e new￨e StringWriter￨e (￨e )￨e ;￨e PrintWriter￨e out￨e =￨e new￨e PrintWriter￨e (￨e sw￨e )￨e ;￨e out￨e .￨e println￨e (￨e "Severe<seq2seq4repair_space>errors<seq2seq4repair_space>in<seq2seq4repair_space>solr<seq2seq4repair_space>configuration.\n"￨e )￨e ;￨e out￨e .￨e println￨e (￨e "Check<seq2seq4repair_space>your<seq2seq4repair_space>log<seq2seq4repair_space>files<seq2seq4repair_space>for<seq2seq4repair_space>more<seq2seq4repair_space>detailed<seq2seq4repair_space>information<seq2seq4repair_space>on<seq2seq4repair_space>what<seq2seq4repair_space>may<seq2seq4repair_space>be<seq2seq4repair_space>wrong.\n"￨e )￨e ;￨e out￨e .￨e println￨e (￨e "If<seq2seq4repair_space>you<seq2seq4repair_space>want<seq2seq4repair_space>solr<seq2seq4repair_space>to<seq2seq4repair_space>continue<seq2seq4repair_space>after<seq2seq4repair_space>configuration<seq2seq4repair_space>errors,<seq2seq4repair_space>change:<seq2seq4repair_space>\n"￨e )￨e ;￨e out￨e .￨e println￨e (￨e "<seq2seq4repair_space><abortOnConfigurationError>false</abortOnConfigurationError>\n"￨e )￨e ;￨e out￨e .￨e println￨e (￨e (￨e (￨e "in<seq2seq4repair_space>"￨e +￨e (￨e init￨e .￨e getSolrConfigFilename￨e (￨e )￨e )￨e )￨e +￨e "\n"￨e )￨e )￨e ;￨e for￨l (￨l Throwable￨c t￨c :￨c SolrConfig￨c .￨c severeErrors￨c )￨l {￨l out￨e .￨e println￨e (￨e "-------------------------------------------------------------"￨e )￨e ;￨e t￨e .￨e printStackTrace￨e (￨e out￨e )￨e ;￨e }￨l out￨e .￨e flush￨e (￨e )￨e ;￨e abortErrorMessage￨e =￨e sw￨e .￨e toString￨e (￨e )￨e ;￨e }￨j log￨e .￨e info￨e (￨e "SolrDispatchFilter.init()<seq2seq4repair_space>done"￨e )￨e ;￨e }￨f protected￨f Initializer￨f createInitializer￨f (￨f )￨f {￨f }￨f public￨f void￨f destroy￨f (￨f )￨f {￨f }￨f public￨f void￨f doFilter￨f (￨f ServletRequest￨f request￨f ,￨f ServletResponse￨f response￨f ,￨f FilterChain￨f chain￨f )￨f throws￨f IOException￨f ,￨f ServletException￨f (￨f )￨f {￨f }￨f private￨f void￨f handleAdminRequest￨f (￨f HttpServletRequest￨f req￨f ,￨f ServletResponse￨f response￨f ,￨f SolrRequestHandler￨f handler￨f ,￨f SolrQueryRequest￨f solrReq￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeResponse￨f (￨f SolrQueryResponse￨f solrRsp￨f ,￨f ServletResponse￨f response￨f ,￨f QueryResponseWriter￨f responseWriter￨f ,￨f SolrQueryRequest￨f solrReq￨f ,￨f Method￨f reqMethod￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f execute￨f (￨f HttpServletRequest￨p req￨p ,￨p SolrRequestHandler￨p handler￨p ,￨p SolrQueryRequest￨p sreq￨p ,￨p SolrQueryResponse￨p rsp￨p )￨f {￨f }￨f protected￨f void￨f sendError￨f (￨f HttpServletResponse￨f res￨f ,￨f Throwable￨f ex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f setPathPrefix￨f (￨f String￨p pathPrefix￨p )￨f {￨f }￨f public￨f String￨f getPathPrefix￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d BCodec￨d extends￨d RFC1522Codec￨d implements￨d StringDecoder￨d ,￨d StringEncoder￨d {￨d private￨e final￨e String￨e charset￨e ;￨e public￨f BCodec￨f (￨f )￨f {￨f }￨f public￨f BCodec￨f (￨f final￨p String￨p charset￨p )￨f {￨f }￨f protected￨f String￨f getEncoding￨f (￨f )￨f {￨f }￨f protected￨f byte￨f [￨f ]￨f doEncoding￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f protected￨f byte￨f [￨f ]￨f doDecoding￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f String￨f encode￨f (￨f final￨f String￨f value￨f ,￨f final￨f String￨f charset￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f if￨j (￨j value￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j try￨f (￨f )￨f {￨f return￨e encodeText￨e (￨e value￨e ,￨e charset￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedEncodingException￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b EncoderException￨b (￨b e￨b .￨b getMessage￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f public￨f String￨f encode￨f (￨f String￨f value￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f decode￨f (￨f String￨f value￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f Object￨f encode￨f (￨f Object￨f value￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f }￨f public￨f Object￨f decode￨f (￨f Object￨f value￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f getDefaultCharset￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d HttpManagementWriteAttributeHandler￨d extends￨d AbstractWriteAttributeHandler￨d <￨d Void￨d >￨d {￨d private￨e final￨e LocalHostControllerInfoImpl￨e hostControllerInfo￨e ;￨e private￨e final￨e HostControllerEnvironment￨e environment￨e ;￨e public￨f HttpManagementWriteAttributeHandler￨f (￨f final￨p LocalHostControllerInfoImpl￨p hostControllerInfo￨p ,￨p final￨p HostControllerEnvironment￨p environment￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f applyUpdateToRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f String￨f attributeName￨f ,￨f ModelNode￨f resolvedValue￨f ,￨f ModelNode￨f currentValue￨f ,￨f HandbackHolder￨f <￨f Void￨f >￨f handbackHolder￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f revertUpdateToRuntime￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f ,￨f final￨f String￨f attributeName￨f ,￨f final￨f ModelNode￨f valueToRestore￨f ,￨f final￨f ModelNode￨f valueToRevert￨f ,￨f final￨f Void￨f handback￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f static￨f void￨f updateHttpManagementService￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f subModel￨f ,￨f final￨f LocalHostControllerInfoImpl￨f hostControllerInfo￨f ,￨f final￨f HostControllerEnvironment￨f environment￨f ,￨f final￨f ServiceVerificationHandler￨f verificationHandler￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f HttpManagementRemoveHandler￨e .￨e removeHttpManagementService￨e (￨e context￨e )￨e ;￨e HttpManagementAddHandler￨e .￨e populateHostControllerInfo￨e (￨e hostControllerInfo￨e ,￨e context￨e ,￨e subModel￨e )￨e ;￨e <START_BUG>￨b HttpManagementAddHandler￨b .￨b installHttpManagementServices￨b (￨b context￨b .￨b getRunningMode￨b (￨b )￨b ,￨b context￨b .￨b getServiceTarget￨b (￨b )￨b ,￨b hostControllerInfo￨b ,￨b environment￨b ,￨b verificationHandler￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d ModuleContextProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e if￨j (￨j DeploymentTypeMarker￨c .￨c isType￨c (￨c EAR￨c ,￨c deploymentUnit￨c )￨c )￨j {￨j return￨e ;￨e }￨j EEModuleDescription￨e moduleDescription￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e EE_MODULE_DESCRIPTION￨e )￨e ;￨e final￨e ServiceTarget￨e serviceTarget￨e =￨e phaseContext￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e final￨e ServiceName￨e appContextServiceName￨e =￨e ContextNames￨e .￨e contextServiceNameOfApplication￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e )￨e ;￨e final￨e ServiceName￨e moduleContextServiceName￨e =￨e ContextNames￨e .￨e contextServiceNameOfModule￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e ,￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e )￨e ;￨e final￨e NamingStoreService￨e contextService￨e =￨e new￨e NamingStoreService￨e (￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e moduleContextServiceName￨e ,￨e contextService￨e )￨e .￨e install￨e (￨e )￨e ;￨e final￨e BinderService￨e moduleNameBinder￨e =￨e new￨e BinderService￨e (￨e "ModuleName"￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e moduleContextServiceName￨e .￨e append￨e (￨e "ModuleName"￨e )￨e ,￨e moduleNameBinder￨e )￨e .￨e addInjection￨e (￨e moduleNameBinder￨e .￨e getManagedObjectInjector￨e (￨e )￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e naming￨e .￨e ValueManagedReferenceFactory￨e (￨e Values￨e .￨e immediateValue￨e (￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e )￨e )￨e )￨e .￨e addDependency￨e (￨e moduleContextServiceName￨e ,￨e ServiceBasedNamingStore￨e .￨e class￨e ,￨e moduleNameBinder￨e .￨e getNamingStoreInjector￨e (￨e )￨e )￨e .￨e install￨e (￨e )￨e ;￨e deploymentUnit￨e .￨e putAttachment￨e (￨e Attachments￨e .￨e MODULE_CONTEXT_CONFIG￨e ,￨e moduleContextServiceName￨e )￨e ;￨e final￨e InjectedEENamespaceContextSelector￨e selector￨e =￨e new￨e InjectedEENamespaceContextSelector￨e (￨e )￨e ;￨e phaseContext￨e .￨e addDependency￨e (￨e appContextServiceName￨e ,￨e NamingStore￨e .￨e class￨e ,￨e selector￨e .￨e getAppContextInjector￨e (￨e )￨e )￨e ;￨e phaseContext￨e .￨e addDependency￨e (￨e moduleContextServiceName￨e ,￨e NamingStore￨e .￨e class￨e ,￨e selector￨e .￨e getModuleContextInjector￨e (￨e )￨e )￨e ;￨e phaseContext￨e .￨e addDependency￨e (￨e moduleContextServiceName￨e ,￨e NamingStore￨e .￨e class￨e ,￨e selector￨e .￨e getCompContextInjector￨e (￨e )￨e )￨e ;￨e phaseContext￨e .￨e addDependency￨e (￨e JBOSS_CONTEXT_SERVICE_NAME￨e ,￨e NamingStore￨e .￨e class￨e ,￨e selector￨e .￨e getJbossContextInjector￨e (￨e )￨e )￨e ;￨e phaseContext￨e .￨e addDependency￨e (￨e GLOBAL_CONTEXT_SERVICE_NAME￨e ,￨e NamingStore￨e .￨e class￨e ,￨e selector￨e .￨e getGlobalContextInjector￨e (￨e )￨e )￨e ;￨e moduleDescription￨e .￨e setNamespaceContextSelector￨e (￨e selector￨e )￨e ;￨e final￨e Set￨e <￨e ServiceName￨e >￨e serviceNames￨e =￨e new￨e HashSet￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e serviceNames￨e .￨e add￨e (￨e appContextServiceName￨e )￨e ;￨e serviceNames￨e .￨e add￨e (￨e moduleContextServiceName￨e )￨e ;￨e serviceNames￨e .￨e add￨e (￨e JBOSS_CONTEXT_SERVICE_NAME￨e )￨e ;￨e serviceNames￨e .￨e add￨e (￨e GLOBAL_CONTEXT_SERVICE_NAME￨e )￨e ;￨e final￨e JavaNamespaceSetup￨e setupAction￨e =￨e new￨e JavaNamespaceSetup￨e (￨e selector￨e ,￨e serviceTarget￨e )￨e ;￨e deploymentUnit￨e .￨e addToAttachmentList￨e (￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deployment￨e .￨e Attachments￨e .￨e SETUP_ACTIONS￨e ,￨e setupAction￨e )￨e ;￨e <START_BUG>￨b deploymentUnit￨b .￨b addToAttachmentList￨b (￨b EE_SETUP_ACTIONS￨b ,￨b setupAction￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d HttpRequestHdr￨d {￨d Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerFor￨e (￨e HTTP￨e )￨e ;￨e public￨e String￨e method￨e =￨e new￨e String￨e (￨e )￨e ;￨e public￨e String￨e url￨e =￨e new￨e String￨e (￨e )￨e ;￨e public￨e String￨e version￨e =￨e new￨e String￨e (￨e )￨e ;￨e public￨e String￨e postData￨e =￨e ""￨e ;￨e static￨e String￨e CR￨e =￨e "\r\n"￨e ;￨e private￨e Map￨e headers￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e public￨f byte￨f [￨f ]￨f parse￨f (￨f InputStream￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f parseFirstLine￨f (￨f String￨p firstLine￨p )￨f {￨f }￨f public￨f int￨f parseLine￨f (￨f String￨p nextLine￨p )￨f {￨f }￨f public￨f HeaderManager￨f getHeaderManager￨f (￨f )￨f {￨f HeaderManager￨e manager￨e =￨e new￨e HeaderManager￨e (￨e )￨e ;￨e Iterator￨e keys￨e =￨e headers￨e .￨e keySet￨e (￨e )￨e .￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l keys￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l String￨e key￨e =￨e (￨e (￨e String￨e )￨e (￨e keys￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b !￨b (￨b key￨b .￨b equals￨b (￨b "proxy-connection"￨b )￨b )￨b )￨b &&￨b (￨b !￨b (￨b key￨b .￨b equals￨b (￨b "content-length"￨b )￨b )￨b )￨b )￨b &&￨b (￨b !￨b (￨b key￨b .￨b equals￨b (￨b "accept-encoding"￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b manager￨e .￨e add￨e (￨e (￨e (￨e Header￨e )￨e (￨e headers￨e .￨e get￨e (￨e key￨e )￨e )￨e )￨e )￨e ;￨e }￨l manager￨e .￨e setName￨e (￨e "Browser-derived<seq2seq4repair_space>headers"￨e )￨e ;￨e manager￨e .￨e setProperty￨e (￨e TEST_CLASS￨e ,￨e HeaderManager￨e .￨e class￨e .￨e getName￨e (￨e )￨e )￨e ;￨e manager￨e .￨e setProperty￨e (￨e GUI_CLASS￨e ,￨e HeaderPanel￨e .￨e class￨e .￨e getName￨e (￨e )￨e )￨e ;￨e return￨e manager￨e ;￨e }￨f public￨f HTTPSampler￨f getSampler￨f (￨f )￨f throws￨f IOException￨f ,￨f MalformedURLException￨f ,￨f ProtocolException￨f (￨f )￨f {￨f }￨f public￨f String￨f getContentType￨f (￨f )￨f {￨f }￨f public￨f static￨f MultipartUrlConfig￨f isMultipart￨f (￨f String￨p contentType￨p )￨f {￨f }￨f private￨f HTTPSampler￨f createSampler￨f (￨f )￨f {￨f }￨f public￨f String￨f serverName￨f (￨f )￨f {￨f }￨f public￨f int￨f serverPort￨f (￨f )￨f {￨f }￨f public￨f String￨f serverUrl￨f (￨f )￨f {￨f }￨f String￨f getToken￨f (￨f StringTokenizer￨p tk￨p )￨f {￨f }￨f String￨f getRemainder￨f (￨f StringTokenizer￨p tk￨p )￨f {￨f }￨f public￨d static￨d class￨d Test￨d extends￨d TestCase￨d {￨d public￨f Test￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f testRepeatedArguments￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d SaveAttachmentCommand￨d extends￨d FolderCommand￨d {￨d File￨e tempFile￨e =￨e null￨e ;￨e MimePart￨e part￨e ;￨e static￨e File￨e lastDir￨e =￨e null￨e ;￨e public￨f SaveAttachmentCommand￨f (￨f DefaultCommandReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f public￨f void￨f updateGUI￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f execute￨f (￨f Worker￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f FolderCommandReference￨e [￨e ]￨e r￨e =￨e (￨e (￨e FolderCommandReference￨e [￨e ]￨e )￨e (￨e getReferences￨e (￨e )￨e )￨e )￨e ;￨e Folder￨e folder￨e =￨e (￨e (￨e Folder￨e )￨e (￨e r￨e [￨e 0￨e ]￨e .￨e getFolder￨e (￨e )￨e )￨e )￨e ;￨e Object￨e [￨e ]￨e uids￨e =￨e r￨e [￨e 0￨e ]￨e .￨e getUids￨e (￨e )￨e ;￨e Integer￨e [￨e ]￨e address￨e =￨e r￨e [￨e 0￨e ]￨e .￨e getAddress￨e (￨e )￨e ;￨e <START_BUG>￨b part￨b =￨b folder￨b .￨b getMimePart￨b (￨b uids￨b [￨b 0￨b ]￨b ,￨b address￨b ,￨b worker￨b )￨b ;￨b <END_BUG>￨b String￨e fileName￨e =￨e part￨e .￨e getHeader￨e (￨e )￨e .￨e getContentParameter￨e (￨e "name"￨e )￨e ;￨e if￨j (￨j fileName￨c ==￨c null￨c )￨j {￨j fileName￨e =￨e part￨e .￨e getHeader￨e (￨e )￨e .￨e getDispositionParameter￨e (￨e "filename"￨e )￨e ;￨e }￨j cFileChooser￨e fileChooser￨e ;￨e if￨j (￨j (￨c SaveAttachmentCommand￨c .￨c lastDir￨c )￨c ==￨c null￨c )￨j {￨j fileChooser￨e =￨e new￨e cFileChooser￨e (￨e )￨e ;￨e }￨j else￨j {￨j fileChooser￨e =￨e new￨e cFileChooser￨e (￨e SaveAttachmentCommand￨e .￨e lastDir￨e )￨e ;￨e }￨j cFileFilter￨e fileFilter￨e =￨e new￨e cFileFilter￨e (￨e )￨e ;￨e fileFilter￨e .￨e acceptFilesWithProperty￨e (￨e FILEPROPERTY_FILE￨e )￨e ;￨e fileChooser￨e .￨e setDialogTitle￨e (￨e "Save<seq2seq4repair_space>Attachment<seq2seq4repair_space>as<seq2seq4repair_space>..."￨e )￨e ;￨e if￨j (￨j fileName￨c !=￨c null￨c )￨j {￨j fileChooser￨e .￨e forceSelectedFile￨e (￨e new￨e File￨e (￨e fileName￨e )￨e )￨e ;￨e }￨j fileChooser￨e .￨e setSelectFilter￨e (￨e fileFilter￨e )￨e ;￨e while￨l (￨l true￨c )￨l {￨l if￨j (￨j (￨c fileChooser￨c .￨c showSaveDialog￨c (￨c null￨c )￨c )￨c !=￨c (￨c JFileChooser￨c .￨c APPROVE_OPTION￨c )￨c )￨j {￨j return￨e ;￨e }￨j tempFile￨e =￨e fileChooser￨e .￨e getSelectedFile￨e (￨e )￨e ;￨e SaveAttachmentCommand￨e .￨e lastDir￨e =￨e tempFile￨e .￨e getParentFile￨e (￨e )￨e ;￨e if￨j (￨j tempFile￨c .￨c exists￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c JOptionPane￨c .￨c showConfirmDialog￨c (￨c null￨c ,￨c "Overwrite<seq2seq4repair_space>File?"￨c ,￨c "Warning"￨c ,￨c JOptionPane￨c .￨c YES_NO_OPTION￨c ,￨c JOptionPane￨c .￨c WARNING_MESSAGE￨c )￨c )￨c ==￨c (￨c JOptionPane￨c .￨c YES_OPTION￨c )￨c )￨j {￨j break￨e ;￨e }￨j }￨j else￨j {￨j break￨e ;￨e }￨j }￨l Decoder￨e decoder￨e ;￨e MimeHeader￨e header￨e ;￨e header￨e =￨e part￨e .￨e getHeader￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f decoder￨e =￨e CoderRouter￨e .￨e getDecoder￨e (￨e header￨e .￨e contentTransferEncoding￨e )￨e ;￨e decoder￨e .￨e decode￨e (￨e new￨e ByteArrayInputStream￨e (￨e part￨e .￨e getBody￨e (￨e )￨e .￨e getBytes￨e (￨e "ISO_8859_1"￨e )￨e )￨e ,￨e new￨e FileOutputStream￨e (￨e tempFile￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d ContactGenerator￨d {￨d private￨e static￨e ContactGenerator￨e instance￨e =￨e new￨e ContactGenerator￨e (￨e )￨e ;￨e private￨e static￨e long￨e nextId￨e =￨e 1￨e ;￨e public￨f static￨f ContactGenerator￨f getInstance￨f (￨f )￨f {￨f }￨f private￨f final￨f String￨f [￨f ]￨f firstNames￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f final￨f String￨f [￨f ]￨f lastNames￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f ContactGenerator￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f long￨f generateId￨f (￨f )￨f {￨f }￨f public￨f Contact￨f generate￨f (￨f )￨f {￨f }￨f public￨f void￨f generate￨f (￨f Collection￨p <￨p Contact￨p >￨p collection￨p ,￨p int￨p count￨p )￨f {￨f }￨f private￨f String￨f generatePhoneNumber￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b StringBuffer￨b (￨b )￨b .￨b append￨b (￨b rint￨b (￨b 2￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b rint￨b (￨b 0￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b rint￨b (￨b 0￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b "-555-"￨b )￨b .￨b append￨b (￨b rint￨b (￨b 1￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b rint￨b (￨b 0￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b rint￨b (￨b 0￨b ,￨b 9￨b )￨b )￨b .￨b append￨b (￨b rint￨b (￨b 0￨b ,￨b 9￨b )￨b )￨b .￨b toString￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f int￨f rint￨f (￨f int￨p min￨p ,￨p int￨p max￨p )￨f {￨f }￨f private￨f String￨f randomString￨f (￨f String￨p [￨p ]￨p choices￨p )￨f {￨f }￨f }￨d
public￨d class￨d AutoWebApp￨d extends￨d BaseInterceptor￨d {￨d int￨e debug￨e =￨e 0￨e ;￨e Hashtable￨e hosts￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e String￨e appsD￨e =￨e "webapps"￨e ;￨e String￨e defaultHost￨e =￨e null￨e ;￨e boolean￨e flat￨e =￨e true￨e ;￨e char￨e hostSeparator￨e =￨e '@'￨e ;￨e char￨e dotReplacement￨e =￨e '_'￨e ;￨e char￨e slashReplacement￨e =￨e '_'￨e ;￨e public￨f AutoWebApp￨f (￨f )￨f {￨f }￨f public￨f void￨f setDir￨f (￨f String￨p d￨p )￨f {￨f }￨f public￨f void￨f setHost￨f (￨f String￨p h￨p )￨f {￨f }￨f public￨f void￨f setFlat￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f void￨f engineInit￨f (￨f ContextManager￨f cm￨f )￨f throws￨f TomcatException￨f (￨f )￨f {￨f }￨f private￨f void￨f addWebApp￨f (￨f ContextManager￨f cm￨f ,￨f File￨f dir￨f ,￨f String￨f host￨f ,￨f String￨f name￨f )￨f throws￨f TomcatException￨f (￨f )￨f {￨f host￨e =￨e unEscapeHost￨e (￨e host￨e )￨e ;￨e if￨j (￨j host￨c ==￨c null￨c )￨j {￨j host￨e =￨e "DEFAULT"￨e ;￨e }￨j String￨e path￨e =￨e "/"￨e +￨e (￨e unEscapePath￨e (￨e name￨e )￨e )￨e ;￨e log￨e (￨e (￨e (￨e (￨e (￨e (￨e "Auto-Adding<seq2seq4repair_space>"￨e +￨e name￨e )￨e +￨e "<seq2seq4repair_space>"￨e )￨e +￨e host￨e )￨e +￨e "<seq2seq4repair_space>"￨e )￨e +￨e path￨e )￨e )￨e ;￨e if￨j (￨j path￨c .￨c equals￨c (￨c "/ROOT"￨c )￨c )￨j {￨j path￨e =￨e ""￨e ;￨e }￨j Hashtable￨e loaded￨e =￨e (￨e (￨e Hashtable￨e )￨e (￨e hosts￨e .￨e get￨e (￨e host￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b loaded￨b .￨b get￨b (￨b path￨b )￨b )￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b log￨e (￨e "Already<seq2seq4repair_space>loaded"￨e )￨e ;￨e return￨e ;￨e if￨j (￨j dir￨c .￨c isDirectory￨c (￨c )￨c )￨j {￨j Context￨e ctx￨e =￨e new￨e Context￨e (￨e )￨e ;￨e ctx￨e .￨e setContextManager￨e (￨e cm￨e )￨e ;￨e ctx￨e .￨e setPath￨e (￨e path￨e )￨e ;￨e if￨j (￨j !￨c (￨c "DEFAULT"￨c .￨c equals￨c (￨c host￨c )￨c )￨c )￨j {￨j ctx￨e .￨e setHost￨e (￨e host￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f ctx￨e .￨e setDocBase￨e (￨e dir￨e .￨e getCanonicalPath￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ex￨p )￨f {￨f ctx￨e .￨e setDocBase￨e (￨e dir￨e .￨e getAbsolutePath￨e (￨e )￨e )￨e ;￨e }￨f if￨j (￨j (￨c debug￨c )￨c >￨c 0￨c )￨j {￨j log￨e (￨e (￨e (￨e (￨e (￨e (￨e "automatic<seq2seq4repair_space>add<seq2seq4repair_space>"￨e +￨e host￨e )￨e +￨e ":"￨e )￨e +￨e (￨e ctx￨e .￨e toString￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>"￨e )￨e +￨e path￨e )￨e )￨e ;￨e }￨j cm￨e .￨e addContext￨e (￨e ctx￨e )￨e ;￨e }￨j else￨j {￨j log￨e (￨e (￨e "Not<seq2seq4repair_space>a<seq2seq4repair_space>dir<seq2seq4repair_space>"￨e +￨e (￨e dir￨e .￨e getAbsolutePath￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨f private￨f void￨f addVHost￨f (￨f ContextManager￨f cm￨f ,￨f File￨f dir￨f ,￨f String￨f host￨f )￨f throws￨f TomcatException￨f (￨f )￨f {￨f }￨f private￨f String￨f unEscapeHost￨f (￨f String￨p hostName￨p )￨f {￨f }￨f private￨f String￨f unEscapePath￨f (￨f String￨p pathDir￨p )￨f {￨f }￨f private￨f String￨f unEscapeString￨f (￨f String￨p s￨p ,￨p char￨p esc￨p ,￨p char￨p repl￨p )￨f {￨f }￨f }￨d
public￨d class￨d LocalizerTest￨d extends￨d WicketTestCase￨d {￨d private￨e IResourceSettings￨e settings￨e ;￨e private￨e Localizer￨e localizer￨e ;￨e public￨f LocalizerTest￨f (￨f String￨p message￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringValidString￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringMissingStringReturnDefault￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringMissingStringNoDefault￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringMissingStringDoNotUseDefault￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringMissingStringExceptionThrown￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetStringPropertySubstitution￨f (￨f )￨f {￨f }￨f public￨f void￨f testInComponentConstructor￨f (￨f )￨f {￨f <START_BUG>￨b new￨b LocalizerTest￨b .￨b MyLabel￨b (￨b new￨b EmptyPage￨b (￨b )￨b ,￨b "myLabel"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testTwoComponents￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d MyLabel￨d extends￨d Label￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f MyLabel￨f (￨f MarkupContainer￨p parent￨p ,￨p final￨p String￨p id￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d GammaTest￨d extends￨d TestCase￨d {￨d public￨f GammaTest￨f (￨f String￨p name￨p )￨f {￨f }￨f private￨f void￨f testRegularizedGamma￨f (￨f double￨p expected￨p ,￨p double￨p a￨p ,￨p double￨p x￨p )￨f {￨f }￨f private￨f void￨f testLogGamma￨f (￨f double￨p expected￨p ,￨p double￨p x￨p )￨f {￨f <START_BUG>￨b double￨b actual￨b =￨b Gamma￨b .￨b logGamma￨b (￨b x￨b ,￨b 1.0E-4￨b ,￨b Integer￨b .￨b MAX_VALUE￨b )￨b ;￨b <END_BUG>￨b TestUtils￨e .￨e assertEquals￨e (￨e expected￨e ,￨e actual￨e ,￨e 1.0E-4￨e )￨e ;￨e }￨f public￨f void￨f testRegularizedGammaNanPositive￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaPositiveNan￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaNegativePositive￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaPositiveNegative￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaZeroPositive￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaPositiveZero￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegularizedGammaPositivePositive￨f (￨f )￨f {￨f }￨f public￨f void￨f testLogGammaNan￨f (￨f )￨f {￨f }￨f public￨f void￨f testLogGammaNegative￨f (￨f )￨f {￨f }￨f public￨f void￨f testLogGammaZero￨f (￨f )￨f {￨f }￨f public￨f void￨f testLogGammaPositive￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d ParentNode￨d extends￨d NodeImpl￨d {￨d static￨e final￨e long￨e serialVersionUID￨e =￨e 2815829867152120872L￨e ;￨e protected￨e DocumentImpl￨e ownerDocument￨e ;￨e protected￨e ChildNode￨e firstChild￨e =￨e null￨e ;￨e protected￨e int￨e changes￨e =￨e 0￨e ;￨e protected￨e transient￨e int￨e nodeListLength￨e =￨e -￨e 1￨e ;￨e protected￨e transient￨e ChildNode￨e nodeListNode￨e ;￨e protected￨e transient￨e int￨e nodeListIndex￨e =￨e -￨e 1￨e ;￨e protected￨f ParentNode￨f (￨f DocumentImpl￨p ownerDocument￨p )￨f {￨f }￨f public￨f ParentNode￨f (￨f )￨f {￨f }￨f public￨f Node￨f cloneNode￨f (￨f boolean￨p deep￨p )￨f {￨f }￨f public￨f Document￨f getOwnerDocument￨f (￨f )￨f {￨f }￨f DocumentImpl￨f ownerDocument￨f (￨f )￨f {￨f }￨f void￨f setOwnerDocument￨f (￨f DocumentImpl￨p doc￨p )￨f {￨f }￨f public￨f boolean￨f hasChildNodes￨f (￨f )￨f {￨f }￨f public￨f NodeList￨f getChildNodes￨f (￨f )￨f {￨f }￨f public￨f Node￨f getFirstChild￨f (￨f )￨f {￨f }￨f public￨f Node￨f getLastChild￨f (￨f )￨f {￨f }￨f final￨f ChildNode￨f lastChild￨f (￨f )￨f {￨f }￨f final￨f void￨f lastChild￨f (￨f ChildNode￨p node￨p )￨f {￨f }￨f public￨f Node￨f insertBefore￨f (￨f Node￨f newChild￨f ,￨f Node￨f refChild￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f Node￨f internalInsertBefore￨f (￨f Node￨f newChild￨f ,￨f Node￨f refChild￨f ,￨f int￨f mutationMask￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f public￨f Node￨f removeChild￨f (￨f Node￨f oldChild￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f Node￨f internalRemoveChild￨f (￨f Node￨f oldChild￨f ,￨f int￨f mutationMask￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f public￨f Node￨f replaceChild￨f (￨f Node￨f newChild￨f ,￨f Node￨f oldChild￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f public￨f int￨f getLength￨f (￨f )￨f {￨f }￨f public￨f Node￨f item￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f normalize￨f (￨f )￨f {￨f }￨f public￨f void￨f setReadOnly￨f (￨f boolean￨p readOnly￨p ,￨p boolean￨p deep￨p )￨f {￨f }￨f protected￨f void￨f changed￨f (￨f )￨f {￨f }￨f protected￨f int￨f changes￨f (￨f )￨f {￨f }￨f protected￨f void￨f synchronizeChildren￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f synchronizeChildren￨f (￨f int￨p nodeIndex￨p )￨f {￨f }￨f private￨f void￨f writeObject￨f (￨f ObjectOutputStream￨f out￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b syncChildren￨b (￨b )￨b )￨b {￨b <END_BUG>￨b synchronizeChildren￨e (￨e )￨e ;￨e }￨e out￨e .￨e defaultWriteObject￨e (￨e )￨e ;￨e }￨f private￨f void￨f readObject￨f (￨f ObjectInputStream￨f ois￨f )￨f throws￨f IOException￨f ,￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d QueryNodeImpl￨d implements￨d Cloneable￨d ,￨d QueryNode￨d {￨d public￨e static￨e final￨e String￨e PLAINTEXT_FIELD_NAME￨e =￨e "_plain"￨e ;￨e private￨e boolean￨e isLeaf￨e =￨e true￨e ;￨e private￨e Hashtable￨e <￨e String￨e ,￨e Object￨e >￨e tags￨e =￨e new￨e Hashtable￨e <￨e String￨e ,￨e Object￨e >￨e (￨e )￨e ;￨e private￨e List￨e <￨e QueryNode￨e >￨e clauses￨e =￨e null￨e ;￨e protected￨f void￨f allocate￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f add￨f (￨f QueryNode￨p child￨p )￨f {￨f }￨f public￨f final￨f void￨f add￨f (￨f List￨p <￨p QueryNode￨p >￨p children￨p )￨f {￨f }￨f public￨f boolean￨f isLeaf￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f set￨f (￨f List￨p <￨p QueryNode￨p >￨p children￨p )￨f {￨f }￨f public￨f QueryNode￨f cloneTree￨f (￨f )￨f throws￨f CloneNotSupportedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f clone￨f (￨f )￨f throws￨f CloneNotSupportedException￨f (￨f )￨f {￨f }￨f protected￨f void￨f setLeaf￨f (￨f boolean￨p isLeaf￨p )￨f {￨f }￨f public￨f final￨f List￨f <￨f QueryNode￨f >￨f getChildren￨f (￨f )￨f {￨f }￨f public￨f void￨f setTag￨f (￨f String￨p tagName￨p ,￨p Object￨p value￨p )￨f {￨f }￨f public￨f void￨f unsetTag￨f (￨f String￨p tagName￨p )￨f {￨f }￨f public￨f boolean￨f containsTag￨f (￨f String￨p tagName￨p )￨f {￨f <START_BUG>￨b return￨b this￨b .￨b tags￨b .￨b containsKey￨b (￨b tagName￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Object￨f getTag￨f (￨f String￨p tagName￨p )￨f {￨f }￨f private￨e QueryNode￨e parent￨e =￨e null￨e ;￨e private￨f void￨f setParent￨f (￨f QueryNode￨p parent￨p )￨f {￨f }￨f public￨f QueryNode￨f getParent￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isRoot￨f (￨f )￨f {￨f }￨f protected￨e boolean￨e toQueryStringIgnoreFields￨e =￨e false￨e ;￨e protected￨f boolean￨f isDefaultField￨f (￨f CharSequence￨p fld￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f getTagMap￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d UMLAction￨d extends￨d AbstractAction￨d {￨d protected￨d static￨d Category￨d cat￨d =￨d Category￨d .￨d getInstance￨d (￨d UMLAction￨d .￨d class￨d )￨d ;￨d public￨d static￨d boolean￨d HAS_ICON￨d =￨d true￨d ;￨d public￨d static￨d boolean￨d NO_ICON￨d =￨d false￨d ;￨d public￨d UMLAction￨d (￨d String￨d name￨d )￨d {￨d }￨d public￨f UMLAction￨f (￨f String￨p name￨p ,￨p boolean￨p hasIcon￨p )￨f {￨f }￨f public￨f UMLAction￨f (￨f String￨p name￨p ,￨p boolean￨p global￨p ,￨p boolean￨p hasIcon￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f markNeedsSave￨f (￨f )￨f {￨f if￨j (￨j (￨c ProjectBrowser￨c .￨c TheInstance￨c )￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b Project￨b p￨b =￨b TheInstance￨b .￨b getProject￨b (￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j p￨c !=￨c null￨c )￨j {￨j p￨e .￨e setNeedsSave￨e (￨e true￨e )￨e ;￨e }￨j }￨j }￨f public￨f void￨f updateEnabled￨f (￨f Object￨p target￨p )￨f {￨f }￨f public￨f void￨f updateEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f shouldBeEnabled￨f (￨f )￨f {￨f }￨f protected￨f static￨f String￨f stripJunk￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f static￨f final￨f KeyStroke￨f getShortcut￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f final￨f String￨f getMnemonic￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f boolean￨f isEnabled￨f (￨f )￨f {￨f }￨f }￨d
final￨d class￨d Persistence￨d {￨d static￨e final￨e String￨e PACKAGE_BASE￨e =￨e "activities"￨e ;￨e static￨e final￨e String￨e PACKAGE_FULL￨e =￨e "org.eclipse.ui."￨e +￨e (￨e Persistence￨e .￨e PACKAGE_BASE￨e )￨e ;￨e static￨e final￨e String￨e TAG_ACTIVITY_BINDING￨e =￨e "activityBinding"￨e ;￨e static￨e final￨e String￨e TAG_ACTIVITY_ID￨e =￨e "activityId"￨e ;￨e static￨e final￨e String￨e TAG_DESCRIPTION￨e =￨e "description"￨e ;￨e static￨e final￨e String￨e TAG_ID￨e =￨e "id"￨e ;￨e static￨e final￨e String￨e TAG_NAME￨e =￨e "name"￨e ;￨e static￨e final￨e String￨e TAG_PARENT_ID￨e =￨e "parentId"￨e ;￨e static￨e final￨e String￨e TAG_PATTERN￨e =￨e "pattern"￨e ;￨e static￨e final￨e String￨e TAG_PLUGIN_ID￨e =￨e "pluginId"￨e ;￨e static￨e final￨e String￨e TAG_ACTIVITY￨e =￨e "activity"￨e ;￨e static￨f IActivityPatternBindingDefinition￨f readActivityBindingDefinition￨f (￨f IMemento￨p memento￨p ,￨p String￨p pluginIdOverride￨p )￨f {￨f if￨j (￨j memento￨c ==￨c null￨c )￨j {￨j throw￨e new￨e NullPointerException￨e (￨e )￨e ;￨e }￨j String￨e activityId￨e =￨e memento￨e .￨e getString￨e (￨e Persistence￨e .￨e TAG_ACTIVITY_ID￨e )￨e ;￨e String￨e pluginId￨e =￨e (￨e pluginIdOverride￨e !=￨e null￨e )￨e ?￨e pluginIdOverride￨e :￨e memento￨e .￨e getString￨e (￨e Persistence￨e .￨e TAG_PLUGIN_ID￨e )￨e ;￨e String￨e pattern￨e =￨e memento￨e .￨e getString￨e (￨e Persistence￨e .￨e TAG_PATTERN￨e )￨e ;￨e <START_BUG>￨b return￨b new￨b ActivityPatternBindingDefinition￨b (￨b activityId￨b ,￨b pluginId￨b ,￨b activityId￨b )￨b ;￨b <END_BUG>￨b }￨f static￨f List￨f readActivityBindingDefinitions￨f (￨f IMemento￨p memento￨p ,￨p String￨p name￨p ,￨p String￨p pluginIdOverride￨p )￨f {￨f }￨f static￨f IActivityDefinition￨f readActivityDefinition￨f (￨f IMemento￨p memento￨p ,￨p String￨p pluginIdOverride￨p )￨f {￨f }￨f static￨f List￨f readActivityDefinitions￨f (￨f IMemento￨p memento￨p ,￨p String￨p name￨p ,￨p String￨p pluginIdOverride￨p )￨f {￨f }￨f static￨f void￨f writeActivityBindingDefinition￨f (￨f IMemento￨p memento￨p ,￨p IActivityPatternBindingDefinition￨p activityBindingDefinition￨p )￨f {￨f }￨f static￨f void￨f writeActivityBindingDefinitions￨f (￨f IMemento￨p memento￨p ,￨p String￨p name￨p ,￨p List￨p activityBindingDefinitions￨p )￨f {￨f }￨f static￨f void￨f writeActivityDefinition￨f (￨f IMemento￨p memento￨p ,￨p IActivityDefinition￨p activityDefinition￨p )￨f {￨f }￨f static￨f void￨f writeActivityDefinitions￨f (￨f IMemento￨p memento￨p ,￨p String￨p name￨p ,￨p List￨p activityDefinitions￨p )￨f {￨f }￨f private￨f Persistence￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FileUploadFieldTest￨d extends￨d WicketTestCase￨d {￨d public￨f FileUploadFieldTest￨f (￨f )￨f {￨f }￨f public￨f void￨f testInternalDetach￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e MockPageWithFormAndUploadField￨e page￨e =￨e new￨e MockPageWithFormAndUploadField￨e (￨e )￨e ;￨e FileUploadField￨e field￨e =￨e new￨e FileUploadField￨e (￨e page￨e .￨e getForm￨e (￨e )￨e ,￨e "upload"￨e )￨e ;￨e tester￨f .￨f startPage￨f (￨f new￨f ITestPageSource￨f (￨f )￨f {￨f private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f Page￨f getTestPage￨f (￨f )￨f {￨f return￨e page￨e ;￨e }￨f }￨f )￨e ;￨e RequestCycle￨e requestCycle￨e =￨e tester￨e .￨e createRequestCycle￨e (￨e )￨e ;￨e MockHttpServletRequest￨e servletRequest￨e =￨e tester￨e .￨e getServletRequest￨e (￨e )￨e ;￨e servletRequest￨e .￨e setMethod￨e (￨e "POST"￨e )￨e ;￨e servletRequest￨e .￨e setParameter￨e (￨e "form2:hf:fs"￨e ,￨e ""￨e )￨e ;￨e servletRequest￨e .￨e setParameter￨e (￨e "wicketState"￨e ,￨e ""￨e )￨e ;￨e servletRequest￨e .￨e addFile￨e (￨e "upload"￨e ,￨e new￨e File￨e (￨e "pom.xml"￨e )￨e ,￨e "text/xml"￨e )￨e ;￨e requestCycle￨e .￨e setRequest￨e (￨e new￨e wicket￨e .￨e protocol￨e .￨e http￨e .￨e servlet￨e .￨e MultipartServletWebRequest￨e (￨e servletRequest￨e ,￨e Bytes￨e .￨e MAX￨e )￨e )￨e ;￨e FileUpload￨e fileUpload￨e =￨e field￨e .￨e getFileUpload￨e (￨e )￨e ;￨e assertNotNull￨e (￨e fileUpload￨e )￨e ;￨e InputStream￨e is￨e =￨e fileUpload￨e .￨e getInputStream￨e (￨e )￨e ;￨e assertTrue￨e (￨e (￨e (￨e is￨e .￨e read￨e (￨e )￨e )￨e !=￨e (￨e -￨e 1￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b field￨b .￨b internalOnDetach￨b (￨b )￨b ;￨b <END_BUG>￨b try￨f (￨f )￨f {￨f is￨e .￨e read￨e (￨e )￨e ;￨e fail￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f fail￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d CLIWrapper￨d {￨d private￨e final￨e CommandContext￨e ctx￨e ;￨e private￨e ByteArrayOutputStream￨e consoleOut￨e ;￨e public￨f CLIWrapper￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f CLIWrapper￨f (￨f boolean￨f connect￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f CLIWrapper￨f (￨f boolean￨f connect￨f ,￨f String￨f cliAddress￨f )￨f throws￨f CliInitializationException￨f (￨f )￨f {￨f }￨f protected￨f InputStream￨f createConsoleInput￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isConnected￨f (￨f )￨f {￨f }￨f public￨f boolean￨f sendConnect￨f (￨f )￨f {￨f }￨f public￨f boolean￨f sendConnect￨f (￨f String￨p cliAddress￨p )￨f {￨f String￨e addr￨e =￨e (￨e cliAddress￨e !=￨e null￨e )￨e ?￨e cliAddress￨e :￨e TestSuiteEnvironment￨e .￨e getServerAddress￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b ctx￨b .￨b connectController￨b (￨b addr￨b ,￨b TestSuiteEnvironment￨b .￨b getServerPort￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e true￨e ;￨e }￨f catch￨f (￨f CommandLineException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e return￨e false￨e ;￨e }￨f }￨f public￨f boolean￨f sendLine￨f (￨f String￨p line￨p ,￨p boolean￨p ignoreError￨p )￨f {￨f }￨f public￨f void￨f sendLine￨f (￨f String￨p line￨p )￨f {￨f }￨f public￨f String￨f readOutput￨f (￨f )￨f {￨f }￨f public￨f CLIOpResult￨f readAllAsOpResult￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f quit￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasQuit￨f (￨f )￨f {￨f }￨f protected￨f String￨f getUsername￨f (￨f )￨f {￨f }￨f protected￨f String￨f getPassword￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CharacterLiteral￨d extends￨d Expression￨d {￨d private￨e String￨e escapedValue￨e =￨e "\'X\'"￨e ;￨e CharacterLiteral￨f (￨f AST￨p ast￨p )￨f {￨f }￨f public￨f int￨f getNodeType￨f (￨f )￨f {￨f }￨f ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f }￨f public￨f boolean￨f subtreeMatch￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f <START_BUG>￨b boolean￨b visitChildren￨b =￨b visitor￨b .￨b visit￨b (￨b this￨b )￨b ;￨b <END_BUG>￨b visitor￨e .￨e endVisit￨e (￨e this￨e )￨e ;￨e }￨f public￨f String￨f getEscapedValue￨f (￨f )￨f {￨f }￨f public￨f void￨f setEscapedValue￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f char￨f charValue￨f (￨f )￨f {￨f }￨f public￨f void￨f setCharValue￨f (￨f char￨p value￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
class￨d XSDAttributeGroupTraverser￨d extends￨d XSDAbstractTraverser￨d {￨d XSDAttributeGroupTraverser￨f (￨f XSDHandler￨p handler￨p ,￨p XSAttributeChecker￨p gAttrCheck￨p )￨f {￨f }￨f XSAttributeGroupDecl￨f traverseLocal￨f (￨f Element￨p elmNode￨p ,￨p XSDocumentInfo￨p schemaDoc￨p ,￨p SchemaGrammar￨p grammar￨p )￨f {￨f }￨f XSAttributeGroupDecl￨f traverseGlobal￨f (￨f Element￨p elmNode￨p ,￨p XSDocumentInfo￨p schemaDoc￨p ,￨p SchemaGrammar￨p grammar￨p )￨f {￨f XSAttributeGroupDecl￨e attrGrp￨e =￨e new￨e XSAttributeGroupDecl￨e (￨e )￨e ;￨e Object￨e [￨e ]￨e attrValues￨e =￨e fAttrChecker￨e .￨e checkAttributes￨e (￨e elmNode￨e ,￨e true￨e ,￨e schemaDoc￨e )￨e ;￨e String￨e nameAttr￨e =￨e (￨e (￨e String￨e )￨e (￨e attrValues￨e [￨e XSAttributeChecker￨e .￨e ATTIDX_NAME￨e ]￨e )￨e )￨e ;￨e if￨j (￨j nameAttr￨c ==￨c null￨c )￨j {￨j reportSchemaError￨f (￨f "s4s-att-must-appear"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨e elmNode￨e )￨e ;￨e nameAttr￨e =￨e "no<seq2seq4repair_space>name"￨e ;￨e }￨j attrGrp￨e .￨e fName￨e =￨e nameAttr￨e ;￨e attrGrp￨e .￨e fTargetNamespace￨e =￨e schemaDoc￨e .￨e fTargetNamespace￨e ;￨e Element￨e child￨e =￨e DOMUtil￨e .￨e getFirstChildElement￨e (￨e elmNode￨e )￨e ;￨e XSAnnotationImpl￨e annotation￨e =￨e null￨e ;￨e if￨j (￨j (￨c child￨c !=￨c null￨c )￨c &&￨c (￨c DOMUtil￨c .￨c getLocalName￨c (￨c child￨c )￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨c )￨j {￨j annotation￨e =￨e traverseAnnotationDecl￨e (￨e child￨e ,￨e attrValues￨e ,￨e false￨e ,￨e schemaDoc￨e )￨e ;￨e child￨e =￨e DOMUtil￨e .￨e getNextSiblingElement￨e (￨e child￨e )￨e ;￨e }￨j else￨j {￨j String￨e text￨e =￨e DOMUtil￨e .￨e getSyntheticAnnotation￨e (￨e elmNode￨e )￨e ;￨e if￨j (￨j text￨c !=￨c null￨c )￨j {￨j annotation￨e =￨e traverseSyntheticAnnotation￨e (￨e elmNode￨e ,￨e text￨e ,￨e attrValues￨e ,￨e false￨e ,￨e schemaDoc￨e )￨e ;￨e }￨j }￨j Element￨e nextNode￨e =￨e traverseAttrsAndAttrGrps￨e (￨e child￨e ,￨e attrGrp￨e ,￨e schemaDoc￨e ,￨e grammar￨e ,￨e null￨e )￨e ;￨e if￨j (￨j nextNode￨c !=￨c null￨c )￨j {￨j Object￨f [￨f ]￨f args￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e reportSchemaError￨e (￨e "s4s-elt-must-match.1"￨e ,￨e args￨e ,￨e nextNode￨e )￨e ;￨e }￨j attrGrp￨e .￨e removeProhibitedAttrs￨e (￨e )￨e ;￨e XSAttributeGroupDecl￨e redefinedAttrGrp￨e =￨e (￨e (￨e XSAttributeGroupDecl￨e )￨e (￨e fSchemaHandler￨e .￨e getGrpOrAttrGrpRedefinedByRestriction￨e (￨e ATTRIBUTEGROUP_TYPE￨e ,￨e new￨e org￨e .￨e apache￨e .￨e xerces￨e .￨e xni￨e .￨e QName￨e (￨e XMLSymbols￨e .￨e EMPTY_STRING￨e ,￨e nameAttr￨e ,￨e nameAttr￨e ,￨e schemaDoc￨e .￨e fTargetNamespace￨e )￨e ,￨e schemaDoc￨e ,￨e elmNode￨e )￨e )￨e )￨e ;￨e if￨j (￨j redefinedAttrGrp￨c !=￨c null￨c )￨j {￨j Object￨e [￨e ]￨e errArgs￨e =￨e attrGrp￨e .￨e validRestrictionOf￨e (￨e nameAttr￨e ,￨e redefinedAttrGrp￨e )￨e ;￨e if￨j (￨j errArgs￨c !=￨c null￨c )￨j {￨j reportSchemaError￨e (￨e (￨e (￨e String￨e )￨e (￨e errArgs￨e [￨e (￨e (￨e errArgs￨e .￨e length￨e )￨e -￨e 1￨e )￨e ]￨e )￨e )￨e ,￨e errArgs￨e ,￨e child￨e )￨e ;￨e reportSchemaError￨f (￨f "src-redefine.7.2.2"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨e child￨e )￨e ;￨e }￨j }￨j XSObjectList￨e annotations￨e ;￨e if￨j (￨j annotation￨c !=￨c null￨c )￨j {￨j annotations￨e =￨e new￨e XSObjectListImpl￨e (￨e )￨e ;￨e <START_BUG>￨b (￨b (￨b XSObjectListImpl￨b )￨b (￨b annotations￨b )￨b )￨b .￨b add￨b (￨b annotation￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j annotations￨e =￨e XSObjectListImpl￨e .￨e EMPTY_LIST￨e ;￨e }￨j attrGrp￨e .￨e fAnnotations￨e =￨e annotations￨e ;￨e grammar￨e .￨e addGlobalAttributeGroupDecl￨e (￨e attrGrp￨e )￨e ;￨e fAttrChecker￨e .￨e returnAttrArray￨e (￨e attrValues￨e ,￨e schemaDoc￨e )￨e ;￨e return￨e attrGrp￨e ;￨e }￨f }￨d
public￨d class￨d EvaluationTest￨d {￨d public￨f LeastSquaresBuilder￨f builder￨f (￨f StatisticalReferenceDataset￨p dataset￨p )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeResiduals￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeCovariance￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeValueAndJacobian￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeCost￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeRMS￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testComputeSigma￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testEvaluateCopiesPoint￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testLazyEvaluation￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testLazyEvaluationPrecondition￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDirectEvaluation￨f (￨f )￨f {￨f final￨f RealVector￨f dummy￨f =￨f new￨f ArrayRealVector￨f (￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e final￨e LeastSquaresProblem￨e p￨e =￨e LeastSquaresFactory￨e .￨e create￨e (￨e LeastSquaresFactory￨e .￨e model￨e (￨e dummyModel￨e (￨e )￨e ,￨e dummyJacobian￨e (￨e )￨e )￨e ,￨e dummy￨e ,￨e dummy￨e ,￨e null￨e ,￨e 0￨e ,￨e 0￨e ,￨e false￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b final￨b Evaluation￨b eval￨b =￨b p￨b .￨b evaluate￨b (￨b dummy￨b )￨b ;￨b <END_BUG>￨b Assert￨e .￨e fail￨e (￨e "Exception<seq2seq4repair_space>expected"￨e )￨e ;￨e }￨f catch￨f (￨f RuntimeException￨p e￨p )￨f {￨f final￨e String￨e msg￨e =￨e e￨e .￨e getMessage￨e (￨e )￨e ;￨e Assert￨e .￨e assertTrue￨e (￨e (￨e (￨e msg￨e .￨e equals￨e (￨e "dummyModel"￨e )￨e )￨e ||￨e (￨e msg￨e .￨e equals￨e (￨e "dummyJacobian"￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨f private￨f MultivariateVectorFunction￨f dummyModel￨f (￨f )￨f {￨f }￨f private￨f MultivariateMatrixFunction￨f dummyJacobian￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d AuthorizationInterceptor￨d implements￨d Interceptor￨d {￨d private￨d static￨d final￨d Logger￨d logger￨d =￨d Logger￨d .￨d getLogger￨d (￨d AuthorizationInterceptor￨d .￨d class￨d )￨d ;￨d private￨d final￨d EJBMethodSecurityMetaData￨d ejbMethodSecurityMetaData￨d ;￨d private￨d final￨d String￨d viewClassName￨d ;￨d private￨d final￨d Method￨d viewMethod￨d ;￨d public￨d AuthorizationInterceptor￨d (￨d final￨d EJBMethodSecurityMetaData￨d ejbMethodSecurityMetaData￨d ,￨d final￨d String￨d viewClassName￨d ,￨d final￨d Method￨d viewMethod￨d )￨d {￨d }￨d @￨f Override￨f public￨f Object￨f processInvocation￨f (￨f InterceptorContext￨f context￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨d Component￨d component￨d =￨d context￨d .￨d getPrivateData￨d (￨d Component￨d .￨d class￨d )￨d ;￨d if￨d (￨d (￨d component￨d instanceof￨d EJBComponent￨d )￨d ==￨d false￨d )￨d {￨d throw￨e new￨e IllegalStateException￨e (￨e (￨e (￨e (￨e "Unexpected<seq2seq4repair_space>component<seq2seq4repair_space>type:<seq2seq4repair_space>"￨e +￨e (￨e component￨e .￨e getClass￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>expected:<seq2seq4repair_space>"￨e )￨e +￨e (￨e EJBComponent￨e .￨e class￨e )￨e )￨e )￨e ;￨e }￨d final￨e Method￨e invokedMethod￨e =￨e context￨e .￨e getMethod￨e (￨e )￨e ;￨e final￨d ComponentView￨d componentView￨d =￨d context￨d .￨d getPrivateData￨d (￨d ComponentView￨d .￨d class￨d )￨d ;￨d final￨d String￨d viewClassOfInvokedMethod￨d =￨d componentView￨d .￨d getViewClass￨d (￨d )￨d .￨d getName￨d (￨d )￨d ;￨d if￨d (￨d (￨d !￨d (￨d this￨d .￨d viewClassName￨d .￨d equals￨d (￨d viewClassOfInvokedMethod￨d )￨d )￨d )￨d ||￨d (￨d !￨d (￨d this￨d .￨d viewMethod￨d .￨d equals￨d (￨d invokedMethod￨d )￨d )￨d )￨d )￨d {￨d throw￨e new￨e IllegalStateException￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e this￨e .￨e getClass￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e +￨e "<seq2seq4repair_space>cannot<seq2seq4repair_space>handle<seq2seq4repair_space>method<seq2seq4repair_space>"￨e )￨e +￨e invokedMethod￨e )￨e +￨e "<seq2seq4repair_space>of<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨e )￨e +￨e viewClassOfInvokedMethod￨e )￨e +￨e ".Expected<seq2seq4repair_space>view<seq2seq4repair_space>"￨e )￨e +￨e "method<seq2seq4repair_space>to<seq2seq4repair_space>be<seq2seq4repair_space>"￨e )￨e +￨e (￨e viewMethod￨e )￨e )￨e +￨e "<seq2seq4repair_space>on<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨e )￨e +￨e (￨e viewClassName￨e )￨e )￨e )￨e ;￨e }￨d final￨e EJBComponent￨e ejbComponent￨e =￨e (￨e (￨e EJBComponent￨e )￨e (￨e component￨e )￨e )￨e ;￨e if￨j (￨j ejbMethodSecurityMetaData￨c .￨c isAccessDenied￨c (￨c )￨c )￨j {￨j throw￨e new￨e javax￨e .￨e ejb￨e .￨e EJBAccessException￨e (￨e (￨e (￨e (￨e (￨e "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨e +￨e invokedMethod￨e )￨e +￨e "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨e )￨e +￨e (￨e ejbComponent￨e .￨e getComponentName￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨e )￨e )￨e ;￨e }￨j if￨j (￨j !￨c (￨c ejbMethodSecurityMetaData￨c .￨c isPermitAll￨c (￨c )￨c )￨c )￨j {￨j final￨e Collection￨e <￨e String￨e >￨e allowedRoles￨e =￨e ejbMethodSecurityMetaData￨e .￨e getRolesAllowed￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c allowedRoles￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j final￨e SimpleSecurityManager￨e securityManager￨e =￨e ejbComponent￨e .￨e getSecurityManager￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b securityManager￨b .￨b isCallerInRole￨b (￨b allowedRoles￨b .￨b toArray￨b (￨b new￨b String￨b [￨b allowedRoles￨b .￨b size￨b (￨b )￨b ]￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b throw￨e new￨e javax￨e .￨e ejb￨e .￨e EJBAccessException￨e (￨e (￨e (￨e (￨e (￨e "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨e +￨e invokedMethod￨e )￨e +￨e "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨e )￨e +￨e (￨e ejbComponent￨e .￨e getComponentName￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨e )￨e )￨e ;￨e }￨j }￨j return￨e context￨e .￨e proceed￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d WebMvcConfigurationSupportTests￨d {￨d @￨f Test￨f public￨f void￨f requestMappingHandlerMapping￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f emptyViewControllerHandlerMapping￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f beanNameHandlerMapping￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f emptyResourceHandlerMapping￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f emptyDefaultServletHandlerMapping￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f requestMappingHandlerAdapter￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f ApplicationContext￨d context￨d =￨d initContext￨d (￨d WebMvcConfigurationSupportTests￨d .￨d WebConfig￨d .￨d class￨d )￨d ;￨d RequestMappingHandlerAdapter￨d adapter￨d =￨d context￨d .￨d getBean￨d (￨d RequestMappingHandlerAdapter￨d .￨d class￨d )￨d ;￨d List￨d <￨d HttpMessageConverter￨d <￨d ?￨d >￨d >￨d converters￨d =￨d adapter￨d .￨d getMessageConverters￨d (￨d )￨d ;￨d assertEquals￨d (￨d 9￨d ,￨d converters￨d .￨d size￨d (￨d )￨d )￨d ;￨d for￨d (￨d HttpMessageConverter￨d <￨d ?￨d >￨d converter￨d :￨d converters￨d )￨d {￨d if￨j (￨j converter￨c instanceof￨c AbstractJackson2HttpMessageConverter￨c )￨j {￨j ObjectMapper￨e objectMapper￨e =￨e (￨e (￨e AbstractJackson2HttpMessageConverter￨e )￨e (￨e converter￨e )￨e )￨e .￨e getObjectMapper￨e (￨e )￨e ;￨e assertTrue￨e (￨e objectMapper￨e .￨e getDeserializationConfig￨e (￨e )￨e .￨e isEnabled￨e (￨e MapperFeature￨e .￨e DEFAULT_VIEW_INCLUSION￨e )￨e )￨e ;￨e assertTrue￨e (￨e objectMapper￨e .￨e getSerializationConfig￨e (￨e )￨e .￨e isEnabled￨e (￨e MapperFeature￨e .￨e DEFAULT_VIEW_INCLUSION￨e )￨e )￨e ;￨e <START_BUG>￨b assertTrue￨b (￨b objectMapper￨b .￨b getDeserializationConfig￨b (￨b )￨b .￨b isEnabled￨b (￨b DeserializationFeature￨b .￨b FAIL_ON_UNKNOWN_PROPERTIES￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j converter￨c instanceof￨c MappingJackson2XmlHttpMessageConverter￨c )￨j {￨j assertEquals￨e (￨e XmlMapper￨e .￨e class￨e ,￨e objectMapper￨e .￨e getClass￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨d ConfigurableWebBindingInitializer￨e initializer￨e =￨e (￨e (￨e ConfigurableWebBindingInitializer￨e )￨e (￨e adapter￨e .￨e getWebBindingInitializer￨e (￨e )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e initializer￨e )￨e ;￨e ConversionService￨e conversionService￨e =￨e initializer￨e .￨e getConversionService￨e (￨e )￨e ;￨e assertNotNull￨e (￨e conversionService￨e )￨e ;￨e assertTrue￨e (￨e (￨e conversionService￨e instanceof￨e FormattingConversionService￨e )￨e )￨e ;￨e Validator￨e validator￨e =￨e initializer￨e .￨e getValidator￨e (￨e )￨e ;￨e assertNotNull￨e (￨e validator￨e )￨e ;￨e assertTrue￨e (￨e (￨e validator￨e instanceof￨e LocalValidatorFactoryBean￨e )￨e )￨e ;￨e DirectFieldAccessor￨e fieldAccessor￨e =￨e new￨e DirectFieldAccessor￨e (￨e adapter￨e )￨e ;￨e List￨e <￨e Object￨e >￨e interceptors￨e =￨e (￨e (￨e List￨e <￨e Object￨e >￨e )￨e (￨e fieldAccessor￨e .￨e getPropertyValue￨e (￨e "responseBodyAdvice"￨e )￨e )￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e interceptors￨e .￨e size￨e (￨e )￨e )￨e ;￨e assertEquals￨e (￨e JsonViewResponseBodyAdvice￨e .￨e class￨e ,￨e interceptors￨e .￨e get￨e (￨e 0￨e )￨e .￨e getClass￨e (￨e )￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f uriComponentsContributor￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f handlerExceptionResolver￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f mvcViewResolver￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f mvcViewResolverWithExistingResolver￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f defaultPathMatchConfiguration￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ApplicationContext￨f initContext￨f (￨f Class￨p ...￨p configClasses￨p )￨f {￨f }￨f @￨d EnableWebMvc￨d @￨d Configuration￨d public￨d static￨d class￨d WebConfig￨d {￨d @￨f Bean￨f (￨f name￨f =￨f "/testController"￨f )￨f public￨f WebMvcConfigurationSupportTests￨f .￨f TestController￨f testController￨f (￨f )￨f {￨f }￨f }￨d @￨d Configuration￨d public￨d static￨d class￨d ViewResolverConfig￨d {￨d @￨f Bean￨f public￨f ViewResolver￨f beanNameViewResolver￨f (￨f )￨f {￨f }￨f }￨d @￨d Controller￨d public￨d static￨d class￨d TestController￨d {￨d @￨f RequestMapping￨f (￨f "/"￨f )￨f public￨f void￨f handle￨f (￨f )￨f {￨f }￨f @￨f RequestMapping￨f (￨f "/foo/{id}/bar/{date}"￨f )￨f public￨f HttpEntity￨f <￨f Void￨f >￨f methodWithTwoPathVariables￨f (￨f @￨p PathVariable￨p Integer￨p id￨p ,￨p @￨p DateTimeFormat￨p (￨p iso￨p =￨p ISO￨p .￨p DATE￨p )￨p @￨p PathVariable￨p DateTime￨p date￨p )￨f {￨f }￨f }￨d @￨d Controller￨d @￨d Scope￨d (￨d "prototype"￨d )￨d public￨d static￨d class￨d ScopedController￨d {￨d @￨f RequestMapping￨f (￨f "/scoped"￨f )￨f public￨f void￨f handle￨f (￨f )￨f {￨f }￨f }￨d @￨d Controller￨d @￨d Scope￨d (￨d value￨d =￨d "prototype"￨d ,￨d proxyMode￨d =￨d ScopedProxyMode￨d .￨d TARGET_CLASS￨d )￨d public￨d static￨d class￨d ScopedProxyController￨d {￨d @￨f RequestMapping￨f (￨f "/scopedProxy"￨f )￨f public￨f void￨f handle￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d BasicModelP￨d extends￨d BasicModel￨d {￨d protected￨e static￨e double￨e LOG2_E￨e =￨e SimilarityBase￨e .￨e log2￨e (￨e Math￨e .￨e E￨e )￨e ;￨e @￨f Override￨f public￨f final￨f float￨f score￨f (￨f BasicStats￨p stats￨p ,￨p float￨p tfn￨p )￨f {￨f <START_BUG>￨b float￨b lambda￨b =￨b (￨b (￨b float￨b )￨b (￨b stats￨b .￨b getTotalTermFreq￨b (￨b )￨b )￨b )￨b /￨b (￨b stats￨b .￨b getNumberOfDocuments￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e (￨e (￨e float￨e )￨e (￨e (￨e (￨e tfn￨e *￨e (￨e SimilarityBase￨e .￨e log2￨e (￨e (￨e tfn￨e /￨e lambda￨e )￨e )￨e )￨e )￨e +￨e (￨e (￨e (￨e lambda￨e +￨e (￨e 1￨e /￨e (￨e 12￨e *￨e tfn￨e )￨e )￨e )￨e -￨e tfn￨e )￨e *￨e (￨e BasicModelP￨e .￨e LOG2_E￨e )￨e )￨e )￨e +￨e (￨e 0.5￨e *￨e (￨e SimilarityBase￨e .￨e log2￨e (￨e (￨e (￨e 2￨e *￨e (￨e Math￨e .￨e PI￨e )￨e )￨e *￨e tfn￨e )￨e )￨e )￨e )￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d final￨d class￨d Main￨d {￨d public￨f static￨f final￨f void￨f main￨f (￨f final￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f final￨e File￨e installDirectory￨e =￨e Main￨e .￨e findInstallDir￨e (￨e )￨e ;￨e System￨e .￨e setProperty￨e (￨e "ant.home"￨e ,￨e installDirectory￨e .￨e toString￨e (￨e )￨e )￨e ;￨e final￨e File￨e libDir￨e =￨e new￨e File￨e (￨e installDirectory￨e ,￨e "lib"￨e )￨e ;￨e final￨e URL￨e [￨e ]￨e urls￨e =￨e Main￨e .￨e buildURLList￨e (￨e libDir￨e )￨e ;￨e final￨e LauncherClassLoader￨e classLoader￨e =￨e new￨e LauncherClassLoader￨e (￨e urls￨e )￨e ;￨e <START_BUG>￨b final￨b Class￨b clazz￨b =￨b classLoader￨b .￨b loadClass￨b (￨b "org.apache.ant.Main"￨b )￨b ;￨b <END_BUG>￨b final￨f Method￨f method￨f =￨f clazz￨f .￨f getMethod￨f (￨f "main"￨f ,￨f new￨f Class￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e method￨f .￨f invoke￨f (￨f null￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨f catch￨f (￨f final￨p InvocationTargetException￨p ite￨p )￨f {￨f System￨e .￨e err￨e .￨e println￨e (￨e (￨e "Error:<seq2seq4repair_space>"￨e +￨e (￨e ite￨e .￨e getTargetException￨e (￨e )￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e ite￨e .￨e getTargetException￨e (￨e )￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f catch￨f (￨f final￨p Throwable￨p throwable￨p )￨f {￨f System￨e .￨e err￨e .￨e println￨e (￨e (￨e "Error:<seq2seq4repair_space>"￨e +￨e (￨e throwable￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e throwable￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f private￨f static￨f final￨f URL￨f [￨f ]￨f buildURLList￨f (￨f final￨f File￨f dir￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f final￨f File￨f findInstallDir￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ClassUtils￨d {￨d public￨e static￨e final￨e char￨e PACKAGE_SEPARATOR_CHAR￨e =￨e '.'￨e ;￨e public￨e static￨e final￨e String￨e PACKAGE_SEPARATOR￨e =￨e String￨e .￨e valueOf￨e (￨e ClassUtils￨e .￨e PACKAGE_SEPARATOR_CHAR￨e )￨e ;￨e public￨e static￨e final￨e char￨e INNER_CLASS_SEPARATOR_CHAR￨e =￨e '$'￨e ;￨e public￨e static￨e final￨e String￨e INNER_CLASS_SEPARATOR￨e =￨e String￨e .￨e valueOf￨e (￨e ClassUtils￨e .￨e INNER_CLASS_SEPARATOR_CHAR￨e )￨e ;￨e private￨e static￨e final￨e Map￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e Class￨e <￨e ?￨e >￨e >￨e primitiveWrapperMap￨e =￨e new￨e HashMap￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e Class￨e <￨e ?￨e >￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e Map￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e Class￨e <￨e ?￨e >￨e >￨e wrapperPrimitiveMap￨e =￨e new￨e HashMap￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e Class￨e <￨e ?￨e >￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e Map￨e <￨e String￨e ,￨e String￨e >￨e abbreviationMap￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e Map￨e <￨e String￨e ,￨e String￨e >￨e reverseAbbreviationMap￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e )￨e ;￨e private￨f static￨f void￨f addAbbreviation￨f (￨f String￨p primitive￨p ,￨p String￨p abbreviation￨p )￨f {￨f }￨f public￨f ClassUtils￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f getShortClassName￨f (￨f Object￨p object￨p ,￨p String￨p valueIfNull￨p )￨f {￨f }￨f public￨f static￨f String￨f getShortClassName￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f String￨f getShortClassName￨f (￨f String￨p className￨p )￨f {￨f }￨f public￨f static￨f String￨f getPackageName￨f (￨f Object￨p object￨p ,￨p String￨p valueIfNull￨p )￨f {￨f }￨f public￨f static￨f String￨f getPackageName￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f if￨j (￨j cls￨c ==￨c null￨c )￨j {￨j return￨e StringUtils￨e .￨e EMPTY￨e ;￨e }￨j <START_BUG>￨b return￨b ClassUtils￨b .￨b getPackageName￨b (￨b cls￨b .￨b getName￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f String￨f getPackageName￨f (￨f String￨p className￨p )￨f {￨f }￨f public￨f static￨f List￨f <￨f Class￨f <￨f ?￨f >￨f >￨f getAllSuperclasses￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f List￨f <￨f Class￨f <￨f ?￨f >￨f >￨f getAllInterfaces￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f List￨f <￨f Class￨f <￨f ?￨f >￨f >￨f convertClassNamesToClasses￨f (￨f List￨p <￨p String￨p >￨p classNames￨p )￨f {￨f }￨f public￨f static￨f List￨f <￨f String￨f >￨f convertClassesToClassNames￨f (￨f List￨p <￨p Class￨p <￨p ?￨p >￨p >￨p classes￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isAssignable￨f (￨f Class￨p <￨p ?￨p >￨p [￨p ]￨p classArray￨p ,￨p Class￨p <￨p ?￨p >￨p [￨p ]￨p toClassArray￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isAssignable￨f (￨f Class￨p <￨p ?￨p >￨p [￨p ]￨p classArray￨p ,￨p Class￨p <￨p ?￨p >￨p [￨p ]￨p toClassArray￨p ,￨p boolean￨p autoboxing￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isAssignable￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p ,￨p Class￨p <￨p ?￨p >￨p toClass￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isAssignable￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p ,￨p Class￨p <￨p ?￨p >￨p toClass￨p ,￨p boolean￨p autoboxing￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f primitiveToWrapper￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f primitivesToWrappers￨f (￨f Class￨p <￨p ?￨p >￨p [￨p ]￨p classes￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f wrapperToPrimitive￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f wrappersToPrimitives￨f (￨f Class￨p <￨p ?￨p >￨p [￨p ]￨p classes￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isInnerClass￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f getClass￨f (￨f ClassLoader￨f classLoader￨f ,￨f String￨f className￨f ,￨f boolean￨f initialize￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f getClass￨f (￨f ClassLoader￨f classLoader￨f ,￨f String￨f className￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f getClass￨f (￨f String￨f className￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f getClass￨f (￨f String￨f className￨f ,￨f boolean￨f initialize￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f public￨f static￨f Method￨f getPublicMethod￨f (￨f Class￨f <￨f ?￨f >￨f cls￨f ,￨f String￨f methodName￨f ,￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f parameterTypes￨f )￨f throws￨f NoSuchMethodException￨f ,￨f SecurityException￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f toCanonicalName￨f (￨f String￨p className￨p )￨f {￨f }￨f public￨f static￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f toClass￨f (￨f Object￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f static￨f String￨f getShortCanonicalName￨f (￨f Object￨p object￨p ,￨p String￨p valueIfNull￨p )￨f {￨f }￨f public￨f static￨f String￨f getShortCanonicalName￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f String￨f getShortCanonicalName￨f (￨f String￨p canonicalName￨p )￨f {￨f }￨f public￨f static￨f String￨f getPackageCanonicalName￨f (￨f Object￨p object￨p ,￨p String￨p valueIfNull￨p )￨f {￨f }￨f public￨f static￨f String￨f getPackageCanonicalName￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f public￨f static￨f String￨f getPackageCanonicalName￨f (￨f String￨p canonicalName￨p )￨f {￨f }￨f private￨f static￨f String￨f getCanonicalName￨f (￨f String￨p className￨p )￨f {￨f }￨f }￨d
public￨d class￨d CompilationUnitDeclaration￨d extends￨d ASTNode￨d implements￨d ReferenceContext￨d ,￨d ProblemSeverities￨d {￨d private￨f static￨f final￨f Comparator￨f STRING_LITERAL_COMPARATOR￨f =￨f new￨f Comparator￨f (￨f )￨f {￨f public￨f int￨f compare￨f (￨f Object￨p o1￨p ,￨p Object￨p o2￨p )￨f {￨f }￨f }￨f ;￨e private￨e static￨e final￨e int￨e STRING_LITERALS_INCREMENT￨e =￨e 10￨e ;￨e public￨e ImportReference￨e currentPackage￨e ;￨e public￨e ImportReference￨e [￨e ]￨e imports￨e ;￨e public￨e TypeDeclaration￨e [￨e ]￨e types￨e ;￨e public￨e int￨e [￨e ]￨e [￨e ]￨e comments￨e ;￨e public￨e boolean￨e ignoreFurtherInvestigation￨e =￨e false￨e ;￨e public￨e boolean￨e ignoreMethodBodies￨e =￨e false￨e ;￨e public￨e CompilationUnitScope￨e scope￨e ;￨e public￨e ProblemReporter￨e problemReporter￨e ;￨e public￨e CompilationResult￨e compilationResult￨e ;￨e public￨e LocalTypeBinding￨e [￨e ]￨e localTypes￨e ;￨e public￨e int￨e localTypeCount￨e =￨e 0￨e ;￨e public￨e boolean￨e isPropagatingInnerClassEmulation￨e ;￨e public￨e Javadoc￨e javadoc￨e ;￨e public￨e NLSTag￨e [￨e ]￨e nlsTags￨e ;￨e private￨e StringLiteral￨e [￨e ]￨e stringLiterals￨e ;￨e private￨e int￨e stringLiteralsPtr￨e ;￨e public￨f CompilationUnitDeclaration￨f (￨f ProblemReporter￨p problemReporter￨p ,￨p CompilationResult￨p compilationResult￨p ,￨p int￨p sourceLength￨p )￨f {￨f }￨f public￨f void￨f abort￨f (￨f int￨p abortLevel￨p ,￨p CategorizedProblem￨p problem￨p )￨f {￨f }￨f public￨f void￨f analyseCode￨f (￨f )￨f {￨f }￨f public￨f void￨f cleanUp￨f (￨f )￨f {￨f }￨f private￨f void￨f cleanUp￨f (￨f TypeDeclaration￨p type￨p )￨f {￨f }￨f public￨f void￨f checkUnusedImports￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c scope￨c .￨c imports￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c this￨c .￨c scope￨c .￨c imports￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l ImportBinding￨e importBinding￨e =￨e this￨e .￨e scope￨e .￨e imports￨e [￨e i￨e ]￨e ;￨e ImportReference￨e importReference￨e =￨e importBinding￨e .￨e reference￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b importReference￨b !=￨b null￨b )￨b &&￨b (￨b !￨b (￨b importReference￨b .￨b used￨b )￨b )￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e unusedImport￨e (￨e importReference￨e )￨e ;￨e }￨l }￨j }￨f public￨f CompilationResult￨f compilationResult￨f (￨f )￨f {￨f }￨f public￨f TypeDeclaration￨f declarationOfType￨f (￨f char￨p [￨p ]￨p [￨p ]￨p typeName￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getFileName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getMainTypeName￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEmpty￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPackageInfo￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasErrors￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f print￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f propagateInnerEmulationForAllLocalTypes￨f (￨f )￨f {￨f }￨f public￨f void￨f recordStringLiteral￨f (￨f StringLiteral￨p literal￨p )￨f {￨f }￨f public￨f void￨f record￨f (￨f LocalTypeBinding￨p localType￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f )￨f {￨f }￨f private￨f void￨f reportNLSProblems￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsHavingErrors￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p CompilationUnitScope￨p unitScope￨p )￨f {￨f }￨f }￨d
public￨d class￨d PageCreateKey￨d extends￨d WizardPage￨d implements￨d Listener￨d {￨d public￨e static￨e final￨e String￨e PAGE_NAME￨e =￨e "SignPageCreateKey"￨e ;￨e private￨e String￨e keystoreName￨e ;￨e private￨e String￨e project￨e ;￨e private￨e boolean￨e generated￨e =￨e false￨e ;￨e private￨e Button￨e bOpen￨e =￨e null￨e ;￨e private￨e Button￨e bGenerate￨e =￨e null￨e ;￨e private￨e Button￨e bEchoKeystorePassword￨e =￨e null￨e ;￨e private￨e Button￨e bEchoKeyPassword￨e =￨e null￨e ;￨e private￨e Combo￨e cAlgorithm￨e =￨e null￨e ;￨e private￨e Label￨e lPreview￨e =￨e null￨e ;￨e private￨e Label￨e lResult￨e =￨e null￨e ;￨e private￨e Text￨e tCommonName￨e =￨e null￨e ;￨e private￨e Text￨e tOrganizationalUnit￨e =￨e null￨e ;￨e private￨e Text￨e tOrganization￨e =￨e null￨e ;￨e private￨e Text￨e tLocation￨e =￨e null￨e ;￨e private￨e Text￨e tState￨e =￨e null￨e ;￨e private￨e Text￨e tCountry￨e =￨e null￨e ;￨e private￨e Text￨e tKeyName￨e =￨e null￨e ;￨e private￨e Text￨e tKeystore￨e =￨e null￨e ;￨e private￨e Text￨e tKeystorePassword￨e =￨e null￨e ;￨e private￨e Text￨e tKeyPassword￨e =￨e null￨e ;￨e private￨e static￨e final￨e int￨e LABELWIDTH￨e =￨e 160￨e ;￨e private￨e static￨e final￨e int￨e TEXTHEIGHT￨e =￨e 40￨e ;￨e private￨e Signature￨e signature￨e =￨e null￨e ;￨e private￨e Keystore￨e keystore￨e =￨e null￨e ;￨e public￨f PageCreateKey￨f (￨f final￨p Signature￨p signature￨p ,￨p final￨p String￨p project￨p )￨f {￨f }￨f public￨f void￨f createControl￨f (￨f final￨p Composite￨p parent￨p )￨f {￨f }￨f private￨f void￨f createPageContent￨f (￨f final￨p Composite￨p parent￨p )￨f {￨f }￨f private￨f void￨f addListeners￨f (￨f )￨f {￨f }￨f private￨f void￨f dialogChanged￨f (￨f )￨f {￨f }￨f private￨f void￨f updateStatus￨f (￨f final￨p String￨p message￨p ,￨p final￨p int￨p status￨p )￨f {￨f }￨f public￨f void￨f handleEvent￨f (￨f final￨p Event￨p e￨p )￨f {￨f }￨f private￨f void￨f echoPassword￨f (￨f final￨p Event￨p e￨p )￨f {￨f }￨f private￨f void￨f openKeystore￨f (￨f )￨f {￨f }￨f private￨f void￨f generateCertificate￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f onEnterPage￨f (￨f )￨f {￨f }￨f public￨f IWizardPage￨f getNextPage￨f (￨f )￨f {￨f }￨f private￨f void￨f saveDataToModel￨f (￨f )￨f {￨f signature￨e .￨e setKeystore￨e (￨e keystore￨e )￨e ;￨e signature￨e .￨e setKeystorePassword￨e (￨e tKeystorePassword￨e .￨e getText￨e (￨e )￨e .￨e toCharArray￨e (￨e )￨e )￨e ;￨e signature￨e .￨e setKeyPassword￨e (￨e tKeyPassword￨e .￨e getText￨e (￨e )￨e .￨e toCharArray￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b signature￨b .￨b setKeyAlias￨b (￨b tKeyName￨b .￨b getText￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j cAlgorithm￨c .￨c getText￨c (￨c )￨c .￨c equals￨c (￨c "DSA"￨c )￨c )￨j {￨j signature￨e .￨e setKeyAlgorithm￨e (￨e "SHA1withDSA"￨e )￨e ;￨e }￨j else￨j if￨j (￨j cAlgorithm￨c .￨c getText￨c (￨c )￨c .￨c equals￨c (￨c "EC"￨c )￨c )￨j {￨j signature￨e .￨e setKeyAlgorithm￨e (￨e "SHA1withECDSA"￨e )￨e ;￨e }￨j else￨j if￨j (￨j cAlgorithm￨c .￨c getText￨c (￨c )￨c .￨c equals￨c (￨c "RSA"￨c )￨c )￨j {￨j signature￨e .￨e setKeyAlgorithm￨e (￨e "SHA1withRSA"￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d ArgsAnnotationPointcut￨d extends￨d NameBindingPointcut￨d {￨d private￨e AnnotationPatternList￨e arguments￨e ;￨e private￨e String￨e declarationText￨e ;￨e public￨f ArgsAnnotationPointcut￨f (￨f AnnotationPatternList￨p arguments￨p )￨f {￨f }￨f public￨f AnnotationPatternList￨f getArguments￨f (￨f )￨f {￨f }￨f public￨f Set￨f couldMatchKinds￨f (￨f )￨f {￨f }￨f public￨f Pointcut￨f parameterizeWith￨f (￨f Map￨p typeVariableMap￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f fastMatch￨f (￨f FastMatchInfo￨p info￨p )￨f {￨f }￨f protected￨f FuzzyBoolean￨f matchInternal￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f protected￨f void￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p )￨f {￨f }￨f protected￨f Pointcut￨f concretize1￨f (￨f ResolvedType￨p inAspect￨p ,￨p ResolvedType￨p declaringType￨p ,￨p IntMap￨p bindings￨p )￨f {￨f }￨f protected￨f Test￨f findResidueInternal￨f (￨f Shadow￨p shadow￨p ,￨p ExposedState￨p state￨p )￨f {￨f int￨e len￨e =￨e shadow￨e .￨e getArgCount￨e (￨e )￨e ;￨e int￨e numArgsMatchedByEllipsis￨e =￨e (￨e len￨e +￨e (￨e arguments￨e .￨e ellipsisCount￨e )￨e )￨e -￨e (￨e arguments￨e .￨e size￨e (￨e )￨e )￨e ;￨e if￨j (￨j numArgsMatchedByEllipsis￨c <￨c 0￨c )￨j {￨j return￨e Literal￨e .￨e FALSE￨e ;￨e }￨j if￨j (￨j (￨c numArgsMatchedByEllipsis￨c >￨c 0￨c )￨c &&￨c (￨c (￨c arguments￨c .￨c ellipsisCount￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e Literal￨e .￨e FALSE￨e ;￨e }￨j Test￨e ret￨e =￨e Literal￨e .￨e TRUE￨e ;￨e int￨e argsIndex￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c arguments￨c .￨c size￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c arguments￨c .￨c get￨c (￨c i￨c )￨c )￨c ==￨c (￨c AnnotationTypePattern￨c .￨c ELLIPSIS￨c )￨c )￨j {￨j argsIndex￨e +=￨e numArgsMatchedByEllipsis￨e ;￨e }￨j else￨j if￨j (￨j (￨c arguments￨c .￨c get￨c (￨c i￨c )￨c )￨c ==￨c (￨c AnnotationTypePattern￨c .￨c ANY￨c )￨c )￨j {￨j argsIndex￨e ++￨e ;￨e }￨j else￨j {￨j ExactAnnotationTypePattern￨e ap￨e =￨e (￨e (￨e ExactAnnotationTypePattern￨e )￨e (￨e arguments￨e .￨e get￨e (￨e i￨e )￨e )￨e )￨e ;￨e UnresolvedType￨e argType￨e =￨e shadow￨e .￨e getArgType￨e (￨e argsIndex￨e )￨e ;￨e ResolvedType￨e rArgType￨e =￨e argType￨e .￨e resolve￨e (￨e shadow￨e .￨e getIWorld￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b rArgType￨b ==￨b (￨b ResolvedType￨b .￨b MISSING￨b )￨b )￨b {￨b <END_BUG>￨b shadow￨f .￨f getIWorld￨f (￨f )￨f .￨f getLint￨f (￨f )￨f .￨f cantFindType￨f .￨f signal￨f (￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f shadow￨f .￨f getSourceLocation￨f (￨f )￨f ,￨f new￨f ISourceLocation￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨e ResolvedType￨e rAnnType￨e =￨e ap￨e .￨e getAnnotationType￨e (￨e )￨e .￨e resolve￨e (￨e shadow￨e .￨e getIWorld￨e (￨e )￨e )￨e ;￨e if￨j (￨j ap￨c instanceof￨c BindingAnnotationTypePattern￨c )￨j {￨j BindingAnnotationTypePattern￨e btp￨e =￨e (￨e (￨e BindingAnnotationTypePattern￨e )￨e (￨e ap￨e )￨e )￨e ;￨e Var￨e annvar￨e =￨e shadow￨e .￨e getArgAnnotationVar￨e (￨e argsIndex￨e ,￨e rAnnType￨e )￨e ;￨e state￨e .￨e set￨e (￨e btp￨e .￨e getFormalIndex￨e (￨e )￨e ,￨e annvar￨e )￨e ;￨e }￨j if￨j (￨j !￨c (￨c ap￨c .￨c matches￨c (￨c rArgType￨c )￨c .￨c alwaysTrue￨c (￨c )￨c )￨c )￨j {￨j ret￨e =￨e Test￨e .￨e makeAnd￨e (￨e ret￨e ,￨e Test￨e .￨e makeHasAnnotation￨e (￨e shadow￨e .￨e getArgVar￨e (￨e argsIndex￨e )￨e ,￨e rAnnType￨e )￨e )￨e ;￨e }￨j argsIndex￨e ++￨e ;￨e }￨j }￨l return￨e ret￨e ;￨e }￨f public￨f List￨f getBindingAnnotationTypePatterns￨f (￨f )￨f {￨f }￨f public￨f List￨f getBindingTypePatterns￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Pointcut￨f read￨f (￨f VersionedDataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p obj￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f private￨f void￨f buildDeclarationText￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f Object￨f accept￨f (￨f PatternNodeVisitor￨p visitor￨p ,￨p Object￨p data￨p )￨f {￨f }￨f }￨d
public￨d class￨d CorrelatedRandomVectorGeneratorTest￨d {￨d private￨e double￨e [￨e ]￨e mean￨e ;￨e private￨e RealMatrix￨e covariance￨e ;￨e private￨e CorrelatedRandomVectorGenerator￨e generator￨e ;￨e public￨f CorrelatedRandomVectorGeneratorTest￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRank￨f (￨f )￨f {￨f <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b 3￨b ,￨b generator￨b .￨b getRank￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Test￨f public￨f void￨f testMath226￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRootMatrix￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testMeanAndCovariance￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSampleWithZeroCovariance￨f (￨f )￨f {￨f }￨f private￨f CorrelatedRandomVectorGenerator￨f createSampler￨f (￨f double￨p [￨p ]￨p [￨p ]￨p cov￨p )￨f {￨f }￨f private￨f void￨f testSampler￨f (￨f final￨p double￨p [￨p ]￨p [￨p ]￨p covMatrix￨p ,￨p int￨p samples￨p ,￨p double￨p epsilon￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractDistributionTest￨d extends￨d ContainerAbstractTestCase￨d implements￨d RemoteServicePublication￨d ,￨d IDistributionConstants￨d {￨d protected￨e IRemoteServiceContainerAdapter￨e [￨e ]￨e adapters￨e =￨e null￨e ;￨e protected￨f abstract￨f String￨f getClientContainerName￨f (￨f )￨f {￨f }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f setClientCount￨f (￨f int￨p count￨p )￨f {￨f }￨f protected￨f void￨f setupRemoteServiceAdapters￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f BundleContext￨f getContext￨f (￨f )￨f {￨f }￨f protected￨f IRemoteServiceContainerAdapter￨f [￨f ]￨f getRemoteServiceAdapters￨f (￨f )￨f {￨f }￨f protected￨f IRemoteServiceListener￨f createRemoteServiceListener￨f (￨f final￨p boolean￨p server￨p )￨f {￨f }￨f protected￨f void￨f addRemoteServiceListeners￨f (￨f )￨f {￨f }￨f protected￨f IRemoteServiceRegistration￨f registerRemoteService￨f (￨f IRemoteServiceContainerAdapter￨p adapter￨p ,￨p String￨p serviceInterface￨p ,￨p Object￨p service￨p ,￨p Dictionary￨p serviceProperties￨p ,￨p int￨p sleepTime￨p )￨f {￨f }￨f protected￨f IRemoteServiceReference￨f [￨f ]￨f getRemoteServiceReferences￨f (￨f IRemoteServiceContainerAdapter￨p adapter￨p ,￨p String￨p clazz￨p ,￨p String￨p filter￨p )￨f {￨f }￨f protected￨f IRemoteService￨f getRemoteService￨f (￨f IRemoteServiceContainerAdapter￨p adapter￨p ,￨p String￨p clazz￨p ,￨p String￨p filter￨p )￨f {￨f }￨f protected￨f String￨f getFilterFromServiceProperties￨f (￨f Dictionary￨p serviceProperties￨p )￨f {￨f }￨f protected￨f String￨f [￨f ]￨f getDefaultServiceClasses￨f (￨f )￨f {￨f }￨f protected￨f Object￨f getDefaultService￨f (￨f )￨f {￨f }￨f protected￨f ServiceRegistration￨f registerService￨f (￨f String￨f [￨f ]￨f clazzes￨f ,￨f Object￨f service￨f ,￨f Properties￨f props￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f ServiceRegistration￨f registerService￨f (￨f String￨f clazz￨f ,￨f Object￨f service￨f ,￨f Properties￨f props￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f ServiceRegistration￨f registerDefaultService￨f (￨f Properties￨f props￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f ServiceReference￨f getReference￨f (￨f )￨f {￨f }￨f protected￨f void￨f assertReferenceHasCorrectType￨f (￨f ServiceReference￨p sr￨p ,￨p String￨p classname￨p )￨f {￨f }￨f protected￨f void￨f assertReferencesValidAndFirstHasCorrectType￨f (￨f ServiceReference￨p [￨p ]￨p references￨p ,￨p String￨p classname￨p )￨f {￨f }￨f protected￨f void￨f assertReferencesValid￨f (￨f ServiceReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f protected￨f void￨f assertStringResultValid￨f (￨f Object￨p result￨p ,￨p String￨p compare￨p )￨f {￨f }￨f protected￨f void￨f assertProxyValid￨f (￨f Object￨p proxy￨p )￨f {￨f }￨f protected￨f ServiceTracker￨f createProxyServiceTracker￨f (￨f String￨f clazz￨f )￨f throws￨f InvalidSyntaxException￨f (￨f )￨f {￨f ServiceTracker￨f st￨f =￨f new￨f ServiceTracker￨f (￨f getContext￨f (￨f )￨f ,￨f getContext￨f (￨f )￨f .￨f createFilter￨f (￨f (￨f (￨f (￨f (￨f (￨f (￨f "(&("￨f +￨f (￨f Constants￨f .￨f OBJECTCLASS￨f )￨f )￨f +￨f "="￨f )￨f +￨f clazz￨f )￨f +￨f ")("￨f )￨f +￨f (￨f SERVICE_IMPORTED￨f )￨f )￨f +￨f "=*))"￨f )￨f )￨f ,￨f new￨f ServiceTrackerCustomizer￨f (￨f )￨f {￨f public￨f Object￨f addingService￨f (￨f ServiceReference￨p reference￨p )￨f {￨f Trace￨e .￨e trace￨e (￨e PLUGIN_ID￨e ,￨e (￨e "addingService="￨e +￨e reference￨e )￨e )￨e ;￨e return￨e getContext￨e (￨e )￨e .￨e getService￨e (￨e reference￨e )￨e ;￨e }￨f public￨f void￨f modifiedService￨f (￨f ServiceReference￨p reference￨p ,￨p Object￨p service￨p )￨f {￨f Trace￨e .￨e trace￨e (￨e PLUGIN_ID￨e ,￨e (￨e "modifiedService="￨e +￨e reference￨e )￨e )￨e ;￨e }￨f public￨f void￨f removedService￨f (￨f ServiceReference￨p reference￨p ,￨p Object￨p service￨p )￨f {￨f Trace￨e .￨e trace￨e (￨e PLUGIN_ID￨e ,￨e (￨e (￨e (￨e "removedService="￨e +￨e reference￨e )￨e +￨e ",svc="￨e )￨e +￨e service￨e )￨e )￨e ;￨e }￨f }￨f )￨e ;￨e <START_BUG>￨b st￨b .￨b open￨b (￨b )￨b ;￨b <END_BUG>￨b return￨e st￨e ;￨e }￨f protected￨f IRemoteService￨f getRemoteServiceFromProxy￨f (￨f Object￨p proxy￨p )￨f {￨f }￨f }￨d
public￨d class￨d MembershipCleanerVerbHandler￨d implements￨d IVerbHandler￨d {￨d private￨d static￨d Logger￨d logger_￨d =￨d Logger￨d .￨d getLogger￨d (￨d MembershipCleanerVerbHandler￨d .￨d class￨d )￨d ;￨d public￨d void￨d doVerb￨d (￨d Message￨d message￨d )￨d {￨d byte￨e [￨e ]￨e body￨e =￨e message￨e .￨e getMessageBody￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f DataInputBuffer￨e bufIn￨e =￨e new￨e DataInputBuffer￨e (￨e )￨e ;￨e bufIn￨e .￨e reset￨e (￨e body￨e ,￨e body￨e .￨e length￨e )￨e ;￨e MembershipCleaner￨e .￨e MembershipCleanerMessage￨e mcMessage￨e =￨e MembershipCleanerMessage￨e .￨e serializer￨e (￨e )￨e .￨e deserialize￨e (￨e bufIn￨e )￨e ;￨e String￨e target￨e =￨e mcMessage￨e .￨e getTarget￨e (￨e )￨e ;￨e MembershipCleanerVerbHandler￨e .￨e logger_￨e .￨e info￨e (￨e (￨e (￨e "Removing<seq2seq4repair_space>the<seq2seq4repair_space>node<seq2seq4repair_space>["￨e +￨e target￨e )￨e +￨e "]<seq2seq4repair_space>from<seq2seq4repair_space>membership"￨e )￨e )￨e ;￨e EndPoint￨e targetEndPoint￨e =￨e new￨e EndPoint￨e (￨e target￨e ,￨e DatabaseDescriptor￨e .￨e getControlPort￨e (￨e )￨e )￨e ;￨e StorageService￨e .￨e instance￨e (￨e )￨e .￨e removeTokenState￨e (￨e targetEndPoint￨e )￨e ;￨e Map￨e <￨e String￨e ,￨e byte￨e [￨e ]￨e >￨e headers￨e =￨e message￨e .￨e getHeaders￨e (￨e )￨e ;￨e headers￨e .￨e remove￨e (￨e StorageService￨e .￨e getLocalStorageEndPoint￨e (￨e )￨e .￨e getHost￨e (￨e )￨e )￨e ;￨e if￨j (￨j MembershipCleanerVerbHandler￨c .￨c logger_￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j MembershipCleanerVerbHandler￨e .￨e logger_￨e .￨e debug￨e (￨e (￨e "Number<seq2seq4repair_space>of<seq2seq4repair_space>nodes<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>header<seq2seq4repair_space>"￨e +￨e (￨e headers￨e .￨e size￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j Set￨e <￨e String￨e >￨e nodes￨e =￨e headers￨e .￨e keySet￨e (￨e )￨e ;￨e for￨l (￨l String￨c node￨c :￨c nodes￨c )￨l {￨l if￨j (￨j MembershipCleanerVerbHandler￨c .￨c logger_￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j MembershipCleanerVerbHandler￨e .￨e logger_￨e .￨e debug￨e (￨e (￨e "Processing<seq2seq4repair_space>node<seq2seq4repair_space>"￨e +￨e node￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b byte￨b [￨b ]￨b bytes￨b =￨b headers￨b .￨b remove￨b (￨b node￨b )￨b ;￨b <END_BUG>￨b EndPoint￨e targetNode￨e =￨e new￨e EndPoint￨e (￨e node￨e ,￨e DatabaseDescriptor￨e .￨e getStoragePort￨e (￨e )￨e )￨e ;￨e if￨j (￨j MembershipCleanerVerbHandler￨c .￨c logger_￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j MembershipCleanerVerbHandler￨e .￨e logger_￨e .￨e debug￨e (￨e (￨e "Sending<seq2seq4repair_space>a<seq2seq4repair_space>membership<seq2seq4repair_space>clean<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>"￨e +￨e targetNode￨e )￨e )￨e ;￨e }￨j MessagingService￨e .￨e getMessagingInstance￨e (￨e )￨e .￨e sendOneWay￨e (￨e message￨e ,￨e targetNode￨e )￨e ;￨e break￨e ;￨e }￨l }￨f catch￨f (￨f IOException￨p ex￨p )￨f {￨f if￨j (￨j MembershipCleanerVerbHandler￨c .￨c logger_￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j MembershipCleanerVerbHandler￨e .￨e logger_￨e .￨e debug￨e (￨e LogUtil￨e .￨e throwableToString￨e (￨e ex￨e )￨e )￨e ;￨e }￨j }￨f }￨d }￨d
public￨d class￨d Inserter￨d extends￨d Operation￨d {￨d public￨f Inserter￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f Cassandra￨f .￨f Client￨f client￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f List￨e <￨e ByteBuffer￨e >￨e values￨e =￨e generateValues￨e (￨e )￨e ;￨e List￨e <￨e Column￨e >￨e columns￨e =￨e new￨e ArrayList￨e <￨e Column￨e >￨e (￨e )￨e ;￨e List￨e <￨e SuperColumn￨e >￨e superColumns￨e =￨e new￨e ArrayList￨e <￨e SuperColumn￨e >￨e (￨e )￨e ;￨e String￨e format￨e =￨e (￨e "%0"￨e +￨e (￨e session￨e .￨e getTotalKeysLength￨e (￨e )￨e )￨e )￨e +￨e "d"￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c session￨c .￨c getColumnsPerKey￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e columnName￨e =￨e "C"￨e +￨e (￨e Integer￨e .￨e toString￨e (￨e i￨e )￨e )￨e ;￨e ByteBuffer￨e columnValue￨e =￨e values￨e .￨e get￨e (￨e (￨e i￨e %￨e (￨e values￨e .￨e size￨e (￨e )￨e )￨e )￨e )￨e ;￨e columns￨e .￨e add￨e (￨e new￨e Column￨e (￨e ByteBufferUtil￨e .￨e bytes￨e (￨e columnName￨e )￨e ,￨e columnValue￨e ,￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e )￨e )￨e ;￨e }￨l if￨j (￨j (￨c session￨c .￨c getColumnFamilyType￨c (￨c )￨c )￨c ==￨c (￨c ColumnFamilyType￨c .￨c Super￨c )￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c session￨c .￨c getSuperColumns￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e superColumnName￨e =￨e "S"￨e +￨e (￨e Integer￨e .￨e toString￨e (￨e i￨e )￨e )￨e ;￨e <START_BUG>￨b superColumns￨b .￨b add￨b (￨b new￨b SuperColumn￨b (￨b ByteBuffer￨b .￨b wrap￨b (￨b superColumnName￨b .￨b getBytes￨b (￨b )￨b )￨b ,￨b columns￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l }￨j String￨e rawKey￨e =￨e String￨e .￨e format￨e (￨e format￨e ,￨e index￨e )￨e ;￨e Map￨e <￨e ByteBuffer￨e ,￨e Map￨e <￨e String￨e ,￨e List￨e <￨e Mutation￨e >￨e >￨e >￨e record￨e =￨e new￨e HashMap￨e <￨e ByteBuffer￨e ,￨e Map￨e <￨e String￨e ,￨e List￨e <￨e Mutation￨e >￨e >￨e >￨e (￨e )￨e ;￨e record￨e .￨e put￨e (￨e ByteBufferUtil￨e .￨e bytes￨e (￨e rawKey￨e )￨e ,￨e (￨e (￨e session￨e .￨e getColumnFamilyType￨e (￨e )￨e )￨e ==￨e (￨e ColumnFamilyType￨e .￨e Super￨e )￨e ?￨e getSuperColumnsMutationMap￨e (￨e superColumns￨e )￨e :￨e getColumnsMutationMap￨e (￨e columns￨e )￨e )￨e )￨e ;￨e long￨e start￨e =￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ;￨e boolean￨e success￨e =￨e false￨e ;￨e String￨e exceptionMessage￨e =￨e null￨e ;￨e for￨l (￨l int￨c t￨c =￨c 0￨c ;￨c t￨c <￨c (￨c session￨c .￨c getRetryTimes￨c (￨c )￨c )￨c ;￨c t￨c ++￨c )￨l {￨l if￨j (￨j success￨c )￨j {￨j break￨e ;￨e }￨j try￨f (￨f )￨f {￨f client￨e .￨e batch_mutate￨e (￨e record￨e ,￨e session￨e .￨e getConsistencyLevel￨e (￨e )￨e )￨e ;￨e success￨e =￨e true￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f exceptionMessage￨e =￨e getExceptionMessage￨e (￨e e￨e )￨e ;￨e success￨e =￨e false￨e ;￨e }￨f }￨l if￨j (￨j !￨c success￨c )￨j {￨j error￨e (￨e String￨e .￨e format￨e (￨e "Operation<seq2seq4repair_space>[%d]<seq2seq4repair_space>retried<seq2seq4repair_space>%d<seq2seq4repair_space>times<seq2seq4repair_space>-<seq2seq4repair_space>error<seq2seq4repair_space>inserting<seq2seq4repair_space>key<seq2seq4repair_space>%s<seq2seq4repair_space>%s%n"￨e ,￨e index￨e ,￨e session￨e .￨e getRetryTimes￨e (￨e )￨e ,￨e rawKey￨e ,￨e (￨e exceptionMessage￨e ==￨e null￨e ?￨e ""￨e :￨e (￨e "("￨e +￨e exceptionMessage￨e )￨e +￨e ")"￨e )￨e )￨e )￨e ;￨e }￨j operations￨e .￨e getAndIncrement￨e (￨e )￨e ;￨e keys￨e .￨e getAndIncrement￨e (￨e )￨e ;￨e latency￨e .￨e getAndAdd￨e (￨e (￨e (￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e )￨e -￨e start￨e )￨e )￨e ;￨e }￨f private￨f Map￨f <￨f String￨f ,￨f List￨f <￨f Mutation￨f >￨f >￨f getSuperColumnsMutationMap￨f (￨f List￨p <￨p SuperColumn￨p >￨p superColumns￨p )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f List￨f <￨f Mutation￨f >￨f >￨f getColumnsMutationMap￨f (￨f List￨p <￨p Column￨p >￨p columns￨p )￨f {￨f }￨f }￨d
public￨d class￨d RequestLogger￨d implements￨d RequestLoggerMBean￨d {￨d private￨e final￨e Application￨e application￨e ;￨e private￨e final￨e WebApplication￨e webApplication￨e ;￨e public￨f RequestLogger￨f (￨f org￨p .￨p apache￨p .￨p wicket￨p .￨p Application￨p application￨p )￨f {￨f }￨f public￨f Integer￨f getNumberOfCreatedSessions￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Integer￨f getNumberOfLiveSessions￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Integer￨f getPeakNumberOfSessions￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f restart￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f stop￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f IRequestLogger￨f getRequestLogger￨f (￨f )￨f {￨f if￨j (￨j (￨c application￨c )￨c instanceof￨c WebApplication￨c )￨j {￨j <START_BUG>￨b return￨b (￨b (￨b WebApplication￨b )￨b (￨b application￨b )￨b )￨b .￨b getRequestLogger￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j return￨e null￨e ;￨e }￨f }￨d
public￨d class￨d MapKey￨d extends￨d AbstractVal￨d {￨d private￨e final￨e Val￨e _key￨e ;￨e private￨e ClassMetaData￨e _meta￨e =￨e null￨e ;￨e private￨e Class￨e _cast￨e =￨e null￨e ;￨e private￨e Class￨e _type￨e =￨e null￨e ;￨e public￨f MapKey￨f (￨f Val￨p key￨p )￨f {￨f }￨f public￨d static￨d class￨d KeyExpState￨d extends￨d ExpState￨d {￨d public￨e ExpState￨e key￨e ;￨e public￨e ExpState￨e val￨e ;￨e KeyExpState￨f (￨f ExpState￨p key￨p )￨f {￨f }￨f }￨d public￨f void￨f appendTo￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p ,￨p SQLBuffer￨p sql￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f void￨f calculateValue￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p ,￨p Val￨p other￨p ,￨p ExpState￨p otherState￨p )￨f {￨f }￨f public￨f void￨f groupBy￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p )￨f {￨f }￨f public￨f void￨f orderBy￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p ,￨p boolean￨p asc￨p )￨f {￨f }￨f public￨f ExpState￨f initialize￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p int￨p flags￨p )￨f {￨f }￨f public￨f int￨f length￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p )￨f {￨f }￨f public￨f Object￨f load￨f (￨f ExpContext￨f ctx￨f ,￨f ExpState￨f state￨f ,￨f Result￨f res￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f select￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p ,￨p boolean￨p pks￨p )￨f {￨f }￨f public￨f void￨f selectColumns￨f (￨f Select￨p sel￨p ,￨p ExpContext￨p ctx￨p ,￨p ExpState￨p state￨p ,￨p boolean￨p pks￨p )￨f {￨f }￨f public￨f ClassMetaData￨f getMetaData￨f (￨f )￨f {￨f }￨f public￨f Class￨f getType￨f (￨f )￨f {￨f <START_BUG>￨b return￨b Object￨b .￨b class￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f setImplicitType￨f (￨f Class￨p type￨p )￨f {￨f }￨f public￨f void￨f setMetaData￨f (￨f ClassMetaData￨p meta￨p )￨f {￨f }￨f }￨d
public￨d class￨d UrlConfigGui￨d extends￨d JPanel￨d implements￨d ChangeListener￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 240L￨e ;￨e private￨e static￨e final￨e int￨e TAB_PARAMETERS￨e =￨e 0￨e ;￨e private￨e static￨e final￨e int￨e TAB_RAW_BODY￨e =￨e 1￨e ;￨e private￨e HTTPArgumentsPanel￨e argsPanel￨e ;￨e private￨e JTextField￨e domain￨e ;￨e private￨e JTextField￨e port￨e ;￨e private￨e JTextField￨e proxyHost￨e ;￨e private￨e JTextField￨e proxyPort￨e ;￨e private￨e JTextField￨e proxyUser￨e ;￨e private￨e JPasswordField￨e proxyPass￨e ;￨e private￨e JTextField￨e connectTimeOut￨e ;￨e private￨e JTextField￨e responseTimeOut￨e ;￨e private￨e JTextField￨e protocol￨e ;￨e private￨e JTextField￨e contentEncoding￨e ;￨e private￨e JTextField￨e path￨e ;￨e private￨e JCheckBox￨e followRedirects￨e ;￨e private￨e JCheckBox￨e autoRedirects￨e ;￨e private￨e JCheckBox￨e useKeepAlive￨e ;￨e private￨e JCheckBox￨e useMultipartForPost￨e ;￨e private￨e JCheckBox￨e useBrowserCompatibleMultipartMode￨e ;￨e private￨e JLabeledChoice￨e method￨e ;￨e private￨e JLabeledChoice￨e httpImplementation￨e ;￨e private￨e final￨e boolean￨e notConfigOnly￨e ;￨e private￨e final￨e boolean￨e showImplementation￨e ;￨e private￨e JLabeledTextArea￨e postBodyContent￨e ;￨e private￨e UrlConfigGui￨e .￨e ValidationTabbedPane￨e postContentTabbedPane￨e ;￨e private￨e boolean￨e showRawBodyPane￨e ;￨e public￨f UrlConfigGui￨f (￨f )￨f {￨f }￨f public￨f UrlConfigGui￨f (￨f boolean￨p showSamplerFields￨p )￨f {￨f }￨f public￨f UrlConfigGui￨f (￨f boolean￨p showSamplerFields￨p ,￨p boolean￨p showImplementation￨p ,￨p boolean￨p showRawBodyPane￨p )￨f {￨f }￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyTestElement￨f (￨f TestElement￨p element￨p )￨f {￨f boolean￨e useRaw￨e =￨e (￨e postContentTabbedPane￨e .￨e getSelectedIndex￨e (￨e )￨e )￨e ==￨e (￨e UrlConfigGui￨e .￨e TAB_RAW_BODY￨e )￨e ;￨e Arguments￨e args￨e ;￨e if￨j (￨j useRaw￨c )￨j {￨j args￨e =￨e new￨e Arguments￨e (￨e )￨e ;￨e String￨e text￨e =￨e postBodyContent￨e .￨e getText￨e (￨e )￨e ;￨e <START_BUG>￨b HTTPArgument￨b arg￨b =￨b new￨b HTTPArgument￨b (￨b ""￨b ,￨b text￨b .￨b replaceAll￨b (￨b "\n"￨b ,￨b "\r\n"￨b )￨b ,￨b true￨b )￨b ;￨b <END_BUG>￨b arg￨e .￨e setAlwaysEncoded￨e (￨e false￨e )￨e ;￨e args￨e .￨e addArgument￨e (￨e arg￨e )￨e ;￨e }￨j else￨j {￨j args￨e =￨e (￨e (￨e Arguments￨e )￨e (￨e argsPanel￨e .￨e createTestElement￨e (￨e )￨e )￨e )￨e ;￨e HTTPArgument￨e .￨e convertArgumentsToHTTP￨e (￨e args￨e )￨e ;￨e }￨j element￨e .￨e setProperty￨e (￨e POST_BODY_RAW￨e ,￨e useRaw￨e ,￨e POST_BODY_RAW_DEFAULT￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e new￨e org￨e .￨e apache￨e .￨e jmeter￨e .￨e testelement￨e .￨e property￨e .￨e TestElementProperty￨e (￨e HTTPSamplerBase￨e .￨e ARGUMENTS￨e ,￨e args￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e DOMAIN￨e ,￨e domain￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PORT￨e ,￨e port￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PROXYHOST￨e ,￨e proxyHost￨e .￨e getText￨e (￨e )￨e ,￨e ""￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PROXYPORT￨e ,￨e proxyPort￨e .￨e getText￨e (￨e )￨e ,￨e ""￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PROXYUSER￨e ,￨e proxyUser￨e .￨e getText￨e (￨e )￨e ,￨e ""￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PROXYPASS￨e ,￨e String￨e .￨e valueOf￨e (￨e proxyPass￨e .￨e getPassword￨e (￨e )￨e )￨e ,￨e ""￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e CONNECT_TIMEOUT￨e ,￨e connectTimeOut￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e RESPONSE_TIMEOUT￨e ,￨e responseTimeOut￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PROTOCOL￨e ,￨e protocol￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e CONTENT_ENCODING￨e ,￨e contentEncoding￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e PATH￨e ,￨e path￨e .￨e getText￨e (￨e )￨e )￨e ;￨e if￨j (￨j notConfigOnly￨c )￨j {￨j element￨e .￨e setProperty￨e (￨e METHOD￨e ,￨e method￨e .￨e getText￨e (￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e new￨e org￨e .￨e apache￨e .￨e jmeter￨e .￨e testelement￨e .￨e property￨e .￨e BooleanProperty￨e (￨e HTTPSamplerBase￨e .￨e FOLLOW_REDIRECTS￨e ,￨e followRedirects￨e .￨e isSelected￨e (￨e )￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e new￨e org￨e .￨e apache￨e .￨e jmeter￨e .￨e testelement￨e .￨e property￨e .￨e BooleanProperty￨e (￨e HTTPSamplerBase￨e .￨e AUTO_REDIRECTS￨e ,￨e autoRedirects￨e .￨e isSelected￨e (￨e )￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e new￨e org￨e .￨e apache￨e .￨e jmeter￨e .￨e testelement￨e .￨e property￨e .￨e BooleanProperty￨e (￨e HTTPSamplerBase￨e .￨e USE_KEEPALIVE￨e ,￨e useKeepAlive￨e .￨e isSelected￨e (￨e )￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e new￨e org￨e .￨e apache￨e .￨e jmeter￨e .￨e testelement￨e .￨e property￨e .￨e BooleanProperty￨e (￨e HTTPSamplerBase￨e .￨e DO_MULTIPART_POST￨e ,￨e useMultipartForPost￨e .￨e isSelected￨e (￨e )￨e )￨e )￨e ;￨e element￨e .￨e setProperty￨e (￨e BROWSER_COMPATIBLE_MULTIPART￨e ,￨e useBrowserCompatibleMultipartMode￨e .￨e isSelected￨e (￨e )￨e ,￨e BROWSER_COMPATIBLE_MULTIPART_MODE_DEFAULT￨e )￨e ;￨e }￨j if￨j (￨j showImplementation￨c )￨j {￨j element￨e .￨e setProperty￨e (￨e IMPLEMENTATION￨e ,￨e httpImplementation￨e .￨e getText￨e (￨e )￨e ,￨e ""￨e )￨e ;￨e }￨j }￨f private￨f static￨f final￨f String￨f computePostBody￨f (￨f Arguments￨p arguments￨p )￨f {￨f }￨f private￨f static￨f final￨f String￨f computePostBody￨f (￨f Arguments￨p arguments￨p ,￨p boolean￨p crlfToLF￨p )￨f {￨f }￨f public￨f void￨f configure￨f (￨f TestElement￨p el￨p )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f protected￨f final￨f JPanel￨f getWebServerTimeoutPanel￨f (￨f )￨f {￨f }￨f protected￨f final￨f JPanel￨f getProxyServerPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getPortPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getProxyPortPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getConnectTimeOutPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getResponseTimeOutPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getDomainPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getProxyHostPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getProxyUserPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f getProxyPassPanel￨f (￨f )￨f {￨f }￨f protected￨f Component￨f getPathPanel￨f (￨f )￨f {￨f }￨f protected￨f JPanel￨f getProtocolAndMethodPanel￨f (￨f )￨f {￨f }￨f protected￨f JTabbedPane￨f getParameterPanel￨f (￨f )￨f {￨f }￨f class￨d ValidationTabbedPane￨d extends￨d JTabbedPane￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 7014311238367882880L￨e ;￨e @￨f Override￨f public￨f void￨f setSelectedIndex￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setSelectedIndex￨f (￨f int￨p index￨p ,￨p boolean￨p check￨p )￨f {￨f }￨f }￨d public￨f void￨f stateChanged￨f (￨f ChangeEvent￨p e￨p )￨f {￨f }￨f void￨f convertParametersToRaw￨f (￨f )￨f {￨f }￨f boolean￨f canConvertParameters￨f (￨f )￨f {￨f }￨f boolean￨f noData￨f (￨f int￨p oldSelectedIndex￨p )￨f {￨f }￨f }￨d
public￨d class￨d AllowedMethodsInformation￨d {￨d public￨e static￨e final￨e AllowedMethodsInformation￨e INSTANCE_BMT￨e =￨e new￨e AllowedMethodsInformation￨e (￨e true￨e )￨e ;￨e public￨e static￨e final￨e AllowedMethodsInformation￨e INSTANCE_CMT￨e =￨e new￨e AllowedMethodsInformation￨e (￨e false￨e )￨e ;￨e private￨e final￨e Set￨e <￨e DeniedMethodKey￨e >￨e denied￨e ;￨e private￨e final￨e Set￨e <￨e AllowedMethodsInformation￨e .￨e DeniedSyncMethodKey￨e >￨e deniedSyncMethods￨e ;￨e private￨e final￨e boolean￨e beanManagedTransaction￨e ;￨e protected￨f AllowedMethodsInformation￨f (￨f boolean￨p beanManagedTransaction￨p )￨f {￨f }￨f protected￨f void￨f setup￨f (￨f Set￨p <￨p DeniedMethodKey￨p >￨p denied￨p )￨f {￨f }￨f protected￨f static￨f void￨f add￨f (￨f Set￨p <￨p DeniedMethodKey￨p >￨p otherDenied￨p ,￨p InvocationType￨p setEntityContext￨p ,￨p MethodType￨p timerServiceMethod￨p )￨f {￨f }￨f protected￨f static￨f void￨f add￨f (￨f Set￨p <￨p AllowedMethodsInformation￨p .￨p DeniedSyncMethodKey￨p >￨p otherDenied￨p ,￨p CurrentSynchronizationCallback￨p .￨p CallbackType￨p callbackType￨p ,￨p MethodType￨p timerServiceMethod￨p )￨f {￨f }￨f public￨f static￨f void￨f checkAllowed￨f (￨f final￨p MethodType￨p methodType￨p )￨f {￨f }￨f private￨f void￨f checkTransactionSync￨f (￨f MethodType￨p methodType￨p )￨f {￨f }￨f protected￨f void￨f realCheckPermission￨f (￨f MethodType￨p methodType￨p ,￨p InvocationType￨p invocationType￨p )￨f {￨f checkTransactionSync￨e (￨e methodType￨e )￨e ;￨e if￨j (￨j invocationType￨c !=￨c null￨c )￨j {￨j if￨j (￨j denied￨c .￨c contains￨c (￨c new￨c DeniedMethodKey￨c (￨c invocationType￨c ,￨c methodType￨c )￨c )￨c )￨j {￨j throwException￨e (￨e methodType￨e ,￨e invocationType￨e )￨e ;￨e }￨j }￨j <START_BUG>￨b if￨b (￨b (￨b !￨b (￨b beanManagedTransaction￨b )￨b )￨b &&￨b (￨b methodType￨b ==￨b (￨b MethodType￨b .￨b GET_USER_TRANSACTION￨b )￨b )￨b )￨b {￨b <END_BUG>￨b throw￨e MESSAGES￨e .￨e unauthorizedAccessToUserTransaction￨e (￨e )￨e ;￨e }￨f protected￨f void￨f throwException￨f (￨f MethodType￨p methodType￨p ,￨p InvocationType￨p invocationType￨p )￨f {￨f }￨f protected￨f void￨f throwException￨f (￨f MethodType￨p methodType￨p ,￨p CurrentSynchronizationCallback￨p .￨p CallbackType￨p callback￨p )￨f {￨f }￨f private￨d static￨d class￨d DeniedSyncMethodKey￨d {￨d private￨e final￨e CallbackType￨e callbackType￨e ;￨e private￨e final￨e MethodType￨e methodType￨e ;￨e public￨f DeniedSyncMethodKey￨f (￨f CurrentSynchronizationCallback￨p .￨p CallbackType￨p callbackType￨p ,￨p MethodType￨p methodType￨p )￨f {￨f }￨f public￨f CallbackType￨f getCallbackType￨f (￨f )￨f {￨f }￨f public￨f MethodType￨f getMethodType￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ChannelMetricsHandler￨d extends￨d AbstractRuntimeOnlyHandler￨d {￨d @￨f Override￨f protected￨f void￨f executeRuntimeStep￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b String￨b channelName￨b =￨b context￨b .￨b getCurrentAddressValue￨b (￨b )￨b ;￨b <END_BUG>￨b String￨e name￨e =￨e Operations￨e .￨e getAttributeName￨e (￨e operation￨e )￨e ;￨e ChannelMetric￨e metric￨e =￨e ChannelMetric￨e .￨e forName￨e (￨e name￨e )￨e ;￨e if￨j (￨j metric￨c ==￨c null￨c )￨j {￨j context￨e .￨e getFailureDescription￨e (￨e )￨e .￨e set￨e (￨e ROOT_LOGGER￨e .￨e unknownMetric￨e (￨e name￨e )￨e )￨e ;￨e }￨j else￨j {￨j JChannel￨e channel￨e =￨e ServiceContainerHelper￨e .￨e findValue￨e (￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e ,￨e CHANNEL￨e .￨e getServiceName￨e (￨e channelName￨e )￨e )￨e ;￨e if￨j (￨j channel￨c !=￨c null￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e metric￨e .￨e getValue￨e (￨e channel￨e )￨e )￨e ;￨e }￨j }￨j context￨e .￨e completeStep￨e (￨e NOOP_RESULT_HANDLER￨e )￨e ;￨e }￨f }￨d
public￨d class￨d JavaScript￨d extends￨d AbstractFunction￨d {￨d private￨e static￨e final￨e List￨e <￨e String￨e >￨e desc￨e =￨e new￨e LinkedList￨e <￨e String￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e KEY￨e =￨e "__javaScript"￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e Object￨e [￨e ]￨e values￨e ;￨e public￨f JavaScript￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f String￨f execute￨f (￨f SampleResult￨f previousResult￨f ,￨f Sampler￨f currentSampler￨f )￨f throws￨f InvalidVariableException￨f (￨f )￨f {￨f JMeterContext￨e jmctx￨e =￨e JMeterContextService￨e .￨e getContext￨e (￨e )￨e ;￨e JMeterVariables￨e vars￨e =￨e jmctx￨e .￨e getVariables￨e (￨e )￨e ;￨e String￨e script￨e =￨e (￨e (￨e CompoundVariable￨e )￨e (￨e values￨e [￨e 0￨e ]￨e )￨e )￨e .￨e execute￨e (￨e )￨e ;￨e String￨e varName￨e =￨e (￨e (￨e values￨e .￨e length￨e )￨e <￨e 2￨e )￨e ?￨e null￨e :￨e (￨e (￨e CompoundVariable￨e )￨e (￨e values￨e [￨e 1￨e ]￨e )￨e )￨e .￨e execute￨e (￨e )￨e .￨e trim￨e (￨e )￨e ;￨e String￨e resultStr￨e =￨e ""￨e ;￨e Context￨e cx￨e =￨e Context￨e .￨e enter￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Scriptable￨e scope￨e =￨e cx￨e .￨e initStandardObjects￨e (￨e null￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "log"￨e ,￨e scope￨e ,￨e JavaScript￨e .￨e log￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "ctx"￨e ,￨e scope￨e ,￨e jmctx￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "vars"￨e ,￨e scope￨e ,￨e vars￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "props"￨e ,￨e scope￨e ,￨e JMeterUtils￨e .￨e getJMeterProperties￨e (￨e )￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "threadName"￨e ,￨e scope￨e ,￨e Thread￨e .￨e currentThread￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "sampler"￨e ,￨e scope￨e ,￨e currentSampler￨e )￨e ;￨e scope￨e .￨e put￨e (￨e "sampleResult"￨e ,￨e scope￨e ,￨e previousResult￨e )￨e ;￨e Object￨e result￨e =￨e cx￨e .￨e evaluateString￨e (￨e scope￨e ,￨e script￨e ,￨e "<cmd>"￨e ,￨e 1￨e ,￨e null￨e )￨e ;￨e resultStr￨e =￨e Context￨e .￨e toString￨e (￨e result￨e )￨e ;￨e if￨j (￨j (￨c varName￨c !=￨c null￨c )￨c &&￨c (￨c vars￨c !=￨c null￨c )￨c )￨j {￨j vars￨e .￨e put￨e (￨e varName￨e ,￨e resultStr￨e )￨e ;￨e }￨j }￨f catch￨f (￨f RhinoException￨p e￨p )￨f {￨f JavaScript￨e .￨e log￨e .￨e error￨e (￨e (￨e (￨e "Error<seq2seq4repair_space>processing<seq2seq4repair_space>Javascript:<seq2seq4repair_space>["￨e +￨e script￨e )￨e +￨e "]\n"￨e )￨e ,￨e e￨e )￨e ;￨e <START_BUG>￨b throw￨b new￨b InvalidVariableException￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f finally￨f (￨f )￨f {￨f Context￨e .￨e exit￨e (￨e )￨e ;￨e }￨f return￨e resultStr￨e ;￨e }￨f @￨f Override￨f public￨f synchronized￨f void￨f setParameters￨f (￨f Collection￨f <￨f CompoundVariable￨f >￨f parameters￨f )￨f throws￨f InvalidVariableException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getReferenceKey￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f String￨f >￨f getArgumentDesc￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ThisJoinPointVisitor￨d extends￨d ASTVisitor￨d {￨d boolean￨e needsDynamic￨e =￨e false￨e ;￨e boolean￨e needsStatic￨e =￨e false￨e ;￨e boolean￨e needsStaticEnclosing￨e =￨e false￨e ;￨e boolean￨e hasEffectivelyStaticRef￨e =￨e false￨e ;￨e LocalVariableBinding￨e thisJoinPointDec￨e ;￨e LocalVariableBinding￨e thisJoinPointStaticPartDec￨e ;￨e LocalVariableBinding￨e thisEnclosingJoinPointStaticPartDec￨e ;￨e LocalVariableBinding￨e thisJoinPointDecLocal￨e ;￨e LocalVariableBinding￨e thisJoinPointStaticPartDecLocal￨e ;￨e LocalVariableBinding￨e thisEnclosingJoinPointStaticPartDecLocal￨e ;￨e boolean￨e replaceEffectivelyStaticRefs￨e =￨e false￨e ;￨e AbstractMethodDeclaration￨e method￨e ;￨e ThisJoinPointVisitor￨f (￨f AbstractMethodDeclaration￨p method￨p )￨f {￨f }￨f public￨f void￨f computeJoinPointParams￨f (￨f )￨f {￨f }￨f boolean￨f isRef￨f (￨f NameReference￨p ref￨p ,￨p Binding￨p binding￨p )￨f {￨f }￨f boolean￨f isRef￨f (￨f Expression￨p expr￨p ,￨p Binding￨p binding￨p )￨f {￨f }￨f public￨f void￨f endVisit￨f (￨f SingleNameReference￨p ref￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f boolean￨f canTreatAsStatic￨f (￨f String￨p id￨p )￨f {￨f }￨f boolean￨e inBlockThatCantRun￨e =￨e false￨e ;￨e public￨f boolean￨f visit￨f (￨f MessageSend￨p call￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f private￨f void￨f replaceEffectivelyStaticRef￨f (￨f MessageSend￨p call￨p )￨f {￨f NameReference￨e receiver￨e =￨e (￨e (￨e NameReference￨e )￨e (￨e call￨e .￨e receiver￨e )￨e )￨e ;￨e if￨j (￨j (￨c call￨c .￨c binding￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j receiver￨e .￨e binding￨e =￨e thisJoinPointStaticPartDecLocal￨e ;￨e receiver￨e .￨e codegenBinding￨e =￨e thisJoinPointStaticPartDecLocal￨e ;￨e ReferenceBinding￨e thisJoinPointStaticPartType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e thisJoinPointStaticPartDec￨e .￨e type￨e )￨e )￨e ;￨e <START_BUG>￨b receiver￨b .￨b receiverType￨b =￨b receiver￨b .￨b actualReceiverType￨b =￨b receiver￨b .￨b resolvedType￨b =￨b thisJoinPointStaticPartType￨b ;￨b <END_BUG>￨b call￨e .￨e setActualReceiverType￨e (￨e thisJoinPointStaticPartType￨e )￨e ;￨e AstUtil￨e .￨e replaceMethodBinding￨e (￨e call￨e ,￨e getEquivalentStaticBinding￨e (￨e call￨e .￨e binding￨e )￨e )￨e ;￨e }￨f private￨f MethodBinding￨f getEquivalentStaticBinding￨f (￨f MethodBinding￨p template￨p )￨f {￨f }￨f public￨f int￨f removeUnusedExtraArguments￨f (￨f )￨f {￨f }￨f private￨f void￨f removeParameter￨f (￨f int￨p indexToRemove￨p )￨f {￨f }￨f private￨f static￨f TypeBinding￨f [￨f ]￨f removeParameter￨f (￨f int￨p index￨p ,￨p TypeBinding￨p [￨p ]￨p bindings￨p )￨f {￨f }￨f private￨f static￨f LocalVariableBinding￨f [￨f ]￨f removeLocalBinding￨f (￨f int￨p index￨p ,￨p LocalVariableBinding￨p [￨p ]￨p bindings￨p )￨f {￨f }￨f }￨d
public￨d class￨d TableController￨d implements￨d TreeSelectionListener￨d ,￨d FolderListener￨d ,￨d FocusOwner￨d {￨d private￨e TableView￨e view￨e ;￨e private￨e AddressbookFrameMediator￨e mediator￨e ;￨e private￨e AddressbookTableModel￨e addressbookModel￨e ;￨e private￨e SortDecorator￨e sortDecorator￨e ;￨e private￨e FilterDecorator￨e filterDecorator￨e ;￨e private￨e AddressbookTreeNode￨e selectedFolder￨e ;￨e public￨f TableController￨f (￨f AddressbookFrameMediator￨p mediator￨p )￨f {￨f }￨f protected￨f void￨f addMouseListenerToHeaderInTable￨f (￨f )￨f {￨f }￨f public￨f AddressbookFrameMediator￨f getMediator￨f (￨f )￨f {￨f }￨f public￨f TableView￨f getView￨f (￨f )￨f {￨f }￨f public￨f void￨f valueChanged￨f (￨f TreeSelectionEvent￨p e￨p )￨f {￨f AddressbookTreeNode￨e node￨e =￨e (￨e (￨e AddressbookTreeNode￨e )￨e (￨e e￨e .￨e getPath￨e (￨e )￨e .￨e getLastPathComponent￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j node￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j node￨c instanceof￨c IContactStorage￨c )￨j {￨j try￨f (￨f )￨f {￨f (￨e (￨e org￨e .￨e columba￨e .￨e addressbook￨e .￨e folder￨e .￨e AbstractFolder￨e )￨e (￨e node￨e )￨e )￨e .￨e removeFolderListener￨e (￨e this￨e )￨e ;￨e selectedFolder￨e =￨e node￨e ;￨e (￨e (￨e org￨e .￨e columba￨e .￨e addressbook￨e .￨e folder￨e .￨e AbstractFolder￨e )￨e (￨e node￨e )￨e )￨e .￨e addFolderListener￨e (￨e this￨e )￨e ;￨e filterDecorator￨e .￨e setContactItemMap￨e (￨e (￨e (￨e org￨e .￨e columba￨e .￨e addressbook￨e .￨e folder￨e .￨e AbstractFolder￨e )￨e (￨e selectedFolder￨e )￨e )￨e .￨e getContactItemMap￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e1￨p )￨f {￨f if￨j (￨j Logging￨c .￨c DEBUG￨c )￨j {￨j e1￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨j <START_BUG>￨b new￨b ErrorDialog￨b (￨b e1￨b .￨b getMessage￨b (￨b )￨b ,￨b e1￨b )￨b ;￨b <END_BUG>￨b }￨f }￨j else￨j {￨j filterDecorator￨e .￨e setContactItemMap￨e (￨e null￨e )￨e ;￨e }￨j }￨f public￨f Object￨f [￨f ]￨f getUids￨f (￨f )￨f {￨f }￨f public￨f AddressbookTableModel￨f getAddressbookModel￨f (￨f )￨f {￨f }￨f public￨f IContactItem￨f getSelectedItem￨f (￨f )￨f {￨f }￨f public￨f void￨f itemAdded￨f (￨f IFolderEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f itemChanged￨f (￨f IFolderEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f itemRemoved￨f (￨f IFolderEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f copy￨f (￨f )￨f {￨f }￨f public￨f void￨f cut￨f (￨f )￨f {￨f }￨f public￨f void￨f delete￨f (￨f )￨f {￨f }￨f public￨f JComponent￨f getComponent￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isCopyActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isCutActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDeleteActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPasteActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRedoActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSelectAllActionEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isUndoActionEnabled￨f (￨f )￨f {￨f }￨f public￨f void￨f paste￨f (￨f )￨f {￨f }￨f public￨f void￨f redo￨f (￨f )￨f {￨f }￨f public￨f void￨f selectAll￨f (￨f )￨f {￨f }￨f public￨f void￨f undo￨f (￨f )￨f {￨f }￨f public￨f SortDecorator￨f getSortDecorator￨f (￨f )￨f {￨f }￨f public￨f FilterDecorator￨f getFilterDecorator￨f (￨f )￨f {￨f }￨f }￨d
class￨d PeriodicRotatingFileHandlerAdd￨d implements￨d ModelAddOperationHandler￨d {￨d static￨e final￨e PeriodicRotatingFileHandlerAdd￨e INSTANCE￨e =￨e new￨e PeriodicRotatingFileHandlerAdd￨e (￨e )￨e ;￨e @￨f Override￨f public￨f OperationResult￨f execute￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f ,￨f final￨f ResultHandler￨f resultHandler￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e String￨e name￨e =￨e address￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e ModelNode￨e compensatingOperation￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e compensatingOperation￨e .￨e get￨e (￨e OP_ADDR￨e )￨e .￨e set￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e compensatingOperation￨e .￨e get￨e (￨e OP￨e )￨e .￨e set￨e (￨e REMOVE￨e )￨e ;￨e final￨e ModelNode￨e subModel￨e =￨e context￨e .￨e getSubModel￨e (￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e AUTOFLUSH￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e AUTOFLUSH￨e )￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e ENCODING￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e ENCODING￨e )￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FORMATTER￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FORMATTER￨e )￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e LEVEL￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e LEVEL￨e )￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FILE￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FILE￨e )￨e )￨e ;￨e subModel￨e .￨e get￨e (￨e CommonAttributes￨e .￨e SUFFIX￨e )￨e .￨e set￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e SUFFIX￨e )￨e )￨e ;￨e if￨j (￨j (￨c context￨c .￨c getRuntimeContext￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j context￨f .￨f getRuntimeContext￨f (￨f )￨f .￨f setRuntimeTask￨f (￨f new￨f RuntimeTask￨f (￨f )￨f {￨f public￨f void￨f execute￨f (￨f RuntimeTaskContext￨f context￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ServiceTarget￨e serviceTarget￨e =￨e context￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e PeriodicRotatingFileHandlerService￨e service￨e =￨e new￨e PeriodicRotatingFileHandlerService￨e (￨e )￨e ;￨e final￨e ServiceBuilder￨e <￨e Handler￨e >￨e serviceBuilder￨e =￨e serviceTarget￨e .￨e addService￨e (￨e LogServices￨e .￨e handlerName￨e (￨e name￨e )￨e ,￨e service￨e )￨e ;￨e if￨j (￨j operation￨c .￨c hasDefined￨c (￨c CommonAttributes￨c .￨c FILE￨c )￨c )￨j {￨j final￨e HandlerFileService￨e fileService￨e =￨e new￨e HandlerFileService￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FILE￨e ,￨e CommonAttributes￨e .￨e PATH￨e )￨e .￨e asString￨e (￨e )￨e )￨e ;￨e final￨e ServiceBuilder￨e <￨e ?￨e >￨e fileBuilder￨e =￨e serviceTarget￨e .￨e addService￨e (￨e LogServices￨e .￨e handlerFileName￨e (￨e name￨e )￨e ,￨e fileService￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b operation￨b .￨b hasDefined￨b (￨b RELATIVE_TO￨b )￨b )￨b {￨b <END_BUG>￨b fileBuilder￨e .￨e addDependency￨e (￨e AbstractPathService￨e .￨e pathNameOf￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e FILE￨e ,￨e CommonAttributes￨e .￨e RELATIVE_TO￨e )￨e .￨e asString￨e (￨e )￨e )￨e ,￨e String￨e .￨e class￨e ,￨e fileService￨e .￨e getRelativeToInjector￨e (￨e )￨e )￨e ;￨e }￨e fileBuilder￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e serviceBuilder￨e .￨e addDependency￨e (￨e LogServices￨e .￨e handlerFileName￨e (￨e name￨e )￨e ,￨e String￨e .￨e class￨e ,￨e service￨e .￨e getFileNameInjector￨e (￨e )￨e )￨e ;￨e }￨j service￨e .￨e setLevel￨e (￨e Level￨e .￨e parse￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e LEVEL￨e )￨e .￨e asString￨e (￨e )￨e )￨e )￨e ;￨e final￨e Boolean￨e autoFlush￨e =￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e AUTOFLUSH￨e )￨e .￨e asBoolean￨e (￨e )￨e ;￨e if￨j (￨j autoFlush￨c !=￨c null￨c )￨j {￨j service￨e .￨e setAutoflush￨e (￨e autoFlush￨e .￨e booleanValue￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j operation￨c .￨c hasDefined￨c (￨c CommonAttributes￨c .￨c SUFFIX￨c )￨c )￨j {￨j service￨e .￨e setSuffix￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e SUFFIX￨e )￨e .￨e asString￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j operation￨c .￨c hasDefined￨c (￨c CommonAttributes￨c .￨c ENCODING￨c )￨c )￨j {￨j service￨e .￨e setEncoding￨e (￨e operation￨e .￨e get￨e (￨e CommonAttributes￨e .￨e ENCODING￨e )￨e .￨e asString￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j operation￨c .￨c hasDefined￨c (￨c CommonAttributes￨c .￨c FORMATTER￨c )￨c )￨j {￨j service￨e .￨e setFormatterSpec￨e (￨e PeriodicRotatingFileHandlerAdd￨e .￨e createFormatterSpec￨e (￨e operation￨e )￨e )￨e ;￨e }￨j serviceBuilder￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e ;￨e serviceBuilder￨e .￨e install￨e (￨e )￨e ;￨e resultHandler￨e .￨e handleResultComplete￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e t￨e .￨e getLocalizedMessage￨e (￨e )￨e )￨e )￨e ;￨e }￨f }￨f }￨f )￨e ;￨e }￨j else￨j {￨j resultHandler￨e .￨e handleResultComplete￨e (￨e )￨e ;￨e }￨j return￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e BasicOperationResult￨e (￨e compensatingOperation￨e )￨e ;￨e }￨f static￨f AbstractFormatterSpec￨f createFormatterSpec￨f (￨f final￨p ModelNode￨p operation￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d PassivationStoreRemove￨d extends￨d AbstractRemoveStepHandler￨d {￨d private￨e final￨e PassivationStoreAdd￨e add￨e ;￨e PassivationStoreRemove￨f (￨f PassivationStoreAdd￨p add￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f recoverServices￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j context￨c .￨c isResourceServiceRestartAllowed￨c (￨c )￨c )￨j {￨j <START_BUG>￨b this￨b .￨b add￨b .￨b installRuntimeService￨b (￨b context￨b ,￨b model￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j context￨e .￨e revertReloadRequired￨e (￨e )￨e ;￨e }￨j }￨f void￨f removeRuntimeService￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p )￨f {￨f }￨f }￨d
class￨d DefaultBindingResolver￨d extends￨d BindingResolver￨d {￨d Map￨e compilerBindingsToASTBindings￨e ;￨e Map￨e newAstToOldAst￨e ;￨e Map￨e bindingsToAstNodes￨e ;￨e Map￨e astNodesToBindings￨e ;￨e DefaultBindingResolver￨f (￨f )￨f {￨f }￨f IBinding￨f resolveName￨f (￨f Name￨p name￨p )￨f {￨f }￨f private￨f IBinding￨f resolveNameForMessageSend￨f (￨f Name￨p name￨p ,￨p AstNode￨p node￨p )￨f {￨f }￨f private￨f IBinding￨f resolveNameForMessageSend￨f (￨f Name￨p name￨p ,￨p AstNode￨p node￨p ,￨p int￨p index￨p )￨f {￨f }￨f private￨f IBinding￨f resolveNameForNameReference￨f (￨f Name￨p name￨p ,￨p AstNode￨p node￨p )￨f {￨f }￨f private￨f IBinding￨f resolveNameForPackageDeclaration￨f (￨f Name￨p name￨p )￨f {￨f }￨f ITypeBinding￨f resolveType￨f (￨f Type￨p type￨p )￨f {￨f }￨f ITypeBinding￨f resolveWellKnownType￨f (￨f String￨p name￨p )￨f {￨f }￨f ITypeBinding￨f resolveType￨f (￨f TypeDeclaration￨p type￨p )￨f {￨f }￨f IMethodBinding￨f resolveMethod￨f (￨f MethodDeclaration￨p method￨p )￨f {￨f }￨f IVariableBinding￨f resolveVariable￨f (￨f VariableDeclaration￨p variable￨p )￨f {￨f AbstractVariableDeclaration￨e abstractVariableDeclaration￨e =￨e (￨e (￨e AbstractVariableDeclaration￨e )￨e (￨e this￨e .￨e newAstToOldAst￨e .￨e get￨e (￨e variable￨e )￨e )￨e )￨e ;￨e if￨j (￨j abstractVariableDeclaration￨c instanceof￨c FieldDeclaration￨c )￨j {￨j <START_BUG>￨b FieldDeclaration￨b fieldDeclaration￨b =￨b (￨b (￨b FieldDeclaration￨b )￨b (￨b this￨b .￨b newAstToOldAst￨b .￨b get￨b (￨b variable￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e this￨e .￨e getVariableBinding￨e (￨e fieldDeclaration￨e .￨e binding￨e )￨e ;￨e }￨j return￨e this￨e .￨e getVariableBinding￨e (￨e (￨e (￨e LocalDeclaration￨e )￨e (￨e abstractVariableDeclaration￨e )￨e )￨e .￨e binding￨e )￨e ;￨e }￨f IVariableBinding￨f resolveVariable￨f (￨f FieldDeclaration￨p variable￨p )￨f {￨f }￨f ITypeBinding￨f resolveExpressionType￨f (￨f Expression￨p expression￨p )￨f {￨f }￨f public￨f ASTNode￨f findDeclaringNode￨f (￨f IBinding￨p binding￨p )￨f {￨f }￨f void￨f store￨f (￨f ASTNode￨p node￨p ,￨p AstNode￨p oldASTNode￨p )￨f {￨f }￨f protected￨f ITypeBinding￨f getTypeBinding￨f (￨f TypeBinding￨p referenceBinding￨p )￨f {￨f }￨f protected￨f IPackageBinding￨f getPackageBinding￨f (￨f PackageBinding￨p packageBinding￨p )￨f {￨f }￨f protected￨f IVariableBinding￨f getVariableBinding￨f (￨f VariableBinding￨p variableBinding￨p )￨f {￨f }￨f protected￨f IMethodBinding￨f getMethodBinding￨f (￨f MethodBinding￨p methodBinding￨p )￨f {￨f }￨f private￨f BlockScope￨f retrieveEnclosingScope￨f (￨f ASTNode￨p node￨p )￨f {￨f }￨f }￨d
public￨d class￨d BlockScope￨d extends￨d Scope￨d {￨d public￨e LocalVariableBinding￨e [￨e ]￨e locals￨e ;￨e public￨e int￨e localIndex￨e ;￨e public￨e int￨e startIndex￨e ;￨e public￨e int￨e offset￨e ;￨e public￨e int￨e maxOffset￨e ;￨e public￨e BlockScope￨e [￨e ]￨e shiftScopes￨e ;￨e public￨f static￨f final￨f VariableBinding￨f [￨f ]￨f EmulationPathToImplicitThis￨f =￨f new￨f VariableBinding￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f static￨f final￨f VariableBinding￨f [￨f ]￨f NoEnclosingInstanceInConstructorCall￨f =￨f new￨f VariableBinding￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f static￨f final￨f VariableBinding￨f [￨f ]￨f NoEnclosingInstanceInStaticContext￨f =￨f new￨f VariableBinding￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨e Scope￨e [￨e ]￨e subscopes￨e =￨e new￨e Scope￨e [￨e 1￨e ]￨e ;￨e public￨e int￨e subscopeCount￨e =￨e 0￨e ;￨e public￨e CaseStatement￨e enclosingCase￨e ;￨e protected￨f BlockScope￨f (￨f int￨p kind￨p ,￨p Scope￨p parent￨p )￨f {￨f }￨f public￨f BlockScope￨f (￨f BlockScope￨p parent￨p )￨f {￨f }￨f public￨f BlockScope￨f (￨f BlockScope￨p parent￨p ,￨p boolean￨p addToParentScope￨p )￨f {￨f }￨f public￨f BlockScope￨f (￨f BlockScope￨p parent￨p ,￨p int￨p variableCount￨p )￨f {￨f }￨f public￨f final￨f void￨f addAnonymousType￨f (￨f TypeDeclaration￨p anonymousType￨p ,￨p ReferenceBinding￨p superBinding￨p )￨f {￨f }￨f public￨f final￨f void￨f addLocalType￨f (￨f TypeDeclaration￨p localType￨p )￨f {￨f }￨f public￨f final￨f void￨f addLocalVariable￨f (￨f LocalVariableBinding￨p binding￨p )￨f {￨f }￨f public￨f void￨f addSubscope￨f (￨f Scope￨p childScope￨p )￨f {￨f }￨f public￨f final￨f boolean￨f allowBlankFinalFieldAssignment￨f (￨f FieldBinding￨p binding￨p )￨f {￨f }￨f String￨f basicToString￨f (￨f int￨p tab￨p )￨f {￨f }￨f private￨f void￨f checkAndSetModifiersForVariable￨f (￨f LocalVariableBinding￨p varBinding￨p )￨f {￨f }￨f void￨f computeLocalVariablePositions￨f (￨f int￨p ilocal￨p ,￨p int￨p initOffset￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f this￨e .￨e offset￨e =￨e initOffset￨e ;￨e this￨e .￨e maxOffset￨e =￨e initOffset￨e ;￨e int￨e maxLocals￨e =￨e this￨e .￨e localIndex￨e ;￨e boolean￨e hasMoreVariables￨e =￨e ilocal￨e <￨e maxLocals￨e ;￨e int￨e iscope￨e =￨e 0￨e ;￨e int￨e maxScopes￨e =￨e this￨e .￨e subscopeCount￨e ;￨e boolean￨e hasMoreScopes￨e =￨e maxScopes￨e >￨e 0￨e ;￨e while￨l (￨l hasMoreVariables￨c ||￨c hasMoreScopes￨c )￨l {￨l if￨j (￨j hasMoreScopes￨c &&￨c (￨c (￨c !￨c hasMoreVariables￨c )￨c ||￨c (￨c (￨c subscopes￨c [￨c iscope￨c ]￨c .￨c startIndex￨c (￨c )￨c )￨c <=￨c ilocal￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c subscopes￨c [￨c iscope￨c ]￨c )￨c instanceof￨c BlockScope￨c )￨j {￨j BlockScope￨e subscope￨e =￨e (￨e (￨e BlockScope￨e )￨e (￨e subscopes￨e [￨e iscope￨e ]￨e )￨e )￨e ;￨e int￨e subOffset￨e =￨e (￨e (￨e subscope￨e .￨e shiftScopes￨e )￨e ==￨e null￨e )￨e ?￨e this￨e .￨e offset￨e :￨e subscope￨e .￨e maxShiftedOffset￨e (￨e )￨e ;￨e subscope￨e .￨e computeLocalVariablePositions￨e (￨e 0￨e ,￨e subOffset￨e ,￨e codeStream￨e )￨e ;￨e if￨j (￨j (￨c subscope￨c .￨c maxOffset￨c )￨c >￨c (￨c this￨c .￨c maxOffset￨c )￨c )￨j {￨j this￨e .￨e maxOffset￨e =￨e subscope￨e .￨e maxOffset￨e ;￨e }￨j }￨j hasMoreScopes￨e =￨e (￨e ++￨e iscope￨e )￨e <￨e maxScopes￨e ;￨e }￨j else￨j {￨j LocalVariableBinding￨e local￨e =￨e locals￨e [￨e ilocal￨e ]￨e ;￨e boolean￨e generateCurrentLocalVar￨e =￨e (￨e (￨e local￨e .￨e useFlag￨e )￨e ==￨e (￨e LocalVariableBinding￨e .￨e USED￨e )￨e )￨e &&￨e (￨e (￨e local￨e .￨e constant￨e (￨e )￨e )￨e ==￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c local￨c .￨c useFlag￨c )￨c ==￨c (￨c LocalVariableBinding￨c .￨c UNUSED￨c )￨c )￨c &&￨c (￨c (￨c local￨c .￨c declaration￨c )￨c !=￨c null￨c )￨c )￨c &&￨c (￨c (￨c (￨c local￨c .￨c declaration￨c .￨c bits￨c )￨c &￨c (￨c ASTNode￨c .￨c IsLocalDeclarationReachable￨c )￨c )￨c !=￨c 0￨c )￨c )￨j {￨j if￨j (￨j !￨c (￨c (￨c local￨c .￨c declaration￨c )￨c instanceof￨c Argument￨c )￨c )￨j {￨j this￨e .￨e problemReporter￨e (￨e )￨e .￨e unusedLocalVariable￨e (￨e local￨e .￨e declaration￨e )￨e ;￨e }￨j }￨j if￨j (￨j !￨c generateCurrentLocalVar￨c )￨j {￨j if￨j (￨j (￨c (￨c local￨c .￨c declaration￨c )￨c !=￨c null￨c )￨c &&￨c (￨c compilerOptions￨c (￨c )￨c .￨c preserveAllLocalVariables￨c )￨c )￨j {￨j generateCurrentLocalVar￨e =￨e true￨e ;￨e local￨e .￨e useFlag￨e =￨e LocalVariableBinding￨e .￨e USED￨e ;￨e }￨j }￨j if￨j (￨j generateCurrentLocalVar￨c )￨j {￨j if￨j (￨j (￨c local￨c .￨c declaration￨c )￨c !=￨c null￨c )￨j {￨j codeStream￨e .￨e record￨e (￨e local￨e )￨e ;￨e }￨j local￨e .￨e resolvedPosition￨e =￨e this￨e .￨e offset￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b local￨b .￨b type￨b )￨b ==￨b (￨b LongBinding￨b )￨b )￨b ||￨b (￨b (￨b local￨b .￨b type￨b )￨b ==￨b (￨b DoubleBinding￨b )￨b )￨b )￨b {￨b <END_BUG>￨b this￨e .￨e offset￨e +=￨e 2￨e ;￨e else￨j {￨j (￨e this￨e .￨e offset￨e )￨e ++￨e ;￨e }￨j if￨j (￨j (￨c this￨c .￨c offset￨c )￨c >￨c 65535￨c )￨j {￨j this￨e .￨e problemReporter￨e (￨e )￨e .￨e noMoreAvailableSpaceForLocal￨e (￨e local￨e ,￨e (￨e (￨e local￨e .￨e declaration￨e )￨e ==￨e null￨e ?￨e (￨e (￨e ASTNode￨e )￨e (￨e this￨e .￨e methodScope￨e (￨e )￨e .￨e referenceContext￨e )￨e )￨e :￨e local￨e .￨e declaration￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j local￨e .￨e resolvedPosition￨e =￨e -￨e 1￨e ;￨e }￨j hasMoreVariables￨e =￨e (￨e ++￨e ilocal￨e )￨e <￨e maxLocals￨e ;￨e }￨j }￨l if￨j (￨j (￨c this￨c .￨c offset￨c )￨c >￨c (￨c this￨c .￨c maxOffset￨c )￨c )￨j {￨j this￨e .￨e maxOffset￨e =￨e this￨e .￨e offset￨e ;￨e }￨j }￨f public￨f void￨f emulateOuterAccess￨f (￨f LocalVariableBinding￨p outerLocalVariable￨p )￨f {￨f }￨f public￨f LocalDeclaration￨f [￨f ]￨f findLocalVariableDeclarations￨f (￨f int￨p position￨p )￨f {￨f }￨f public￨f final￨f ReferenceBinding￨f findLocalType￨f (￨f char￨p [￨p ]￨p name￨p )￨f {￨f }￨f public￨f LocalVariableBinding￨f findVariable￨f (￨f char￨p [￨p ]￨p variable￨p )￨f {￨f }￨f public￨f Binding￨f getBinding￨f (￨f char￨p [￨p ]￨p [￨p ]￨p compoundName￨p ,￨p int￨p mask￨p ,￨p InvocationSite￨p invocationSite￨p ,￨p boolean￨p needResolve￨p )￨f {￨f }￨f public￨f final￨f Binding￨f getBinding￨f (￨f char￨p [￨p ]￨p [￨p ]￨p compoundName￨p ,￨p InvocationSite￨p invocationSite￨p )￨f {￨f }￨f public￨f VariableBinding￨f [￨f ]￨f getEmulationPath￨f (￨f LocalVariableBinding￨p outerLocalVariable￨p )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getEmulationPath￨f (￨f ReferenceBinding￨p targetEnclosingType￨p ,￨p boolean￨p onlyExactMatch￨p ,￨p boolean￨p denyEnclosingArgInConstructorCall￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isDuplicateLocalVariable￨f (￨f char￨p [￨p ]￨p name￨p )￨f {￨f }￨f public￨f int￨f maxShiftedOffset￨f (￨f )￨f {￨f }￨f public￨f ProblemReporter￨f problemReporter￨f (￨f )￨f {￨f }￨f public￨f void￨f propagateInnerEmulation￨f (￨f ReferenceBinding￨p targetType￨p ,￨p boolean￨p isEnclosingInstanceSupplied￨p )￨f {￨f }￨f public￨f TypeDeclaration￨f referenceType￨f (￨f )￨f {￨f }￨f public￨f int￨f scopeIndex￨f (￨f )￨f {￨f }￨f int￨f startIndex￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f }￨d
public￨d class￨d PageInstanceMapper￨d extends￨d AbstractComponentMapper￨d {￨d public￨f PageInstanceMapper￨f (￨f )￨f {￨f }￨f public￨f IRequestHandler￨f mapRequest￨f (￨f Request￨p request￨p )￨f {￨f }￨f public￨f Url￨f mapHandler￨f (￨f IRequestHandler￨p requestHandler￨p )￨f {￨f PageComponentInfo￨e info￨e =￨e null￨e ;￨e if￨j (￨j requestHandler￨c instanceof￨c RenderPageRequestHandler￨c )￨j {￨j IRequestablePage￨e page￨e =￨e (￨e (￨e RenderPageRequestHandler￨e )￨e (￨e requestHandler￨e )￨e )￨e .￨e getPage￨e (￨e )￨e ;￨e PageInfo￨e i￨e =￨e new￨e PageInfo￨e (￨e page￨e .￨e getPageId￨e (￨e )￨e )￨e ;￨e info￨e =￨e new￨e PageComponentInfo￨e (￨e i￨e ,￨e null￨e )￨e ;￨e }￨j else￨j if￨j (￨j requestHandler￨c instanceof￨c ListenerInterfaceRequestHandler￨c )￨j {￨j ListenerInterfaceRequestHandler￨e handler￨e =￨e (￨e (￨e ListenerInterfaceRequestHandler￨e )￨e (￨e requestHandler￨e )￨e )￨e ;￨e IRequestablePage￨e page￨e =￨e handler￨e .￨e getPage￨e (￨e )￨e ;￨e <START_BUG>￨b String￨b componentPath￨b =￨b handler￨b .￨b getComponent￨b (￨b )￨b .￨b getPageRelativePath￨b (￨b )￨b ;￨b <END_BUG>￨b RequestListenerInterface￨e listenerInterface￨e =￨e handler￨e .￨e getListenerInterface￨e (￨e )￨e ;￨e Integer￨e renderCount￨e =￨e null￨e ;￨e if￨j (￨j listenerInterface￨c .￨c isIncludeRenderCount￨c (￨c )￨c )￨j {￨j renderCount￨e =￨e page￨e .￨e getRenderCount￨e (￨e )￨e ;￨e }￨j PageInfo￨e pageInfo￨e =￨e new￨e PageInfo￨e (￨e page￨e .￨e getPageId￨e (￨e )￨e )￨e ;￨e ComponentInfo￨e componentInfo￨e =￨e new￨e ComponentInfo￨e (￨e renderCount￨e ,￨e requestListenerInterfaceToString￨e (￨e listenerInterface￨e )￨e ,￨e componentPath￨e ,￨e handler￨e .￨e getBehaviorIndex￨e (￨e )￨e )￨e ;￨e info￨e =￨e new￨e PageComponentInfo￨e (￨e pageInfo￨e ,￨e componentInfo￨e )￨e ;￨e }￨j if￨j (￨j info￨c !=￨c null￨c )￨j {￨j Url￨e url￨e =￨e new￨e Url￨e (￨e )￨e ;￨e url￨e .￨e getSegments￨e (￨e )￨e .￨e add￨e (￨e getContext￨e (￨e )￨e .￨e getNamespace￨e (￨e )￨e )￨e ;￨e url￨e .￨e getSegments￨e (￨e )￨e .￨e add￨e (￨e getContext￨e (￨e )￨e .￨e getPageIdentifier￨e (￨e )￨e )￨e ;￨e encodePageComponentInfo￨e (￨e url￨e ,￨e info￨e )￨e ;￨e return￨e url￨e ;￨e }￨j else￨j {￨j return￨e null￨e ;￨e }￨j }￨f public￨f int￨f getCompatibilityScore￨f (￨f Request￨p request￨p )￨f {￨f }￨f }￨d
public￨d {￨f }￨f void￨f createWidget￨f (￨f )￨f {￨f }￨f Color￨f defaultBackground￨f (￨f )￨f {￨f }￨f NSFont￨f defaultNSFont￨f (￨f )￨f {￨f }￨f Color￨f defaultForeground￨f (￨f )￨f {￨f }￨f public￨f void￨f deselectAll￨f (￨f )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f public￨f void￨f deselect￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f void￨f destroyItem￨f (￨f TreeColumn￨p column￨p )￨f {￨f }￨f void￨f destroyItem￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f boolean￨f dragDetect￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p boolean￨p filter￨p ,￨p boolean￨p [￨p ]￨p consume￨p )￨f {￨f }￨f void￨f drawInteriorWithFrame_inView￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p cellFrame￨p ,￨p int￨p view￨p )￨f {￨f }￨f int￨f getCheckColumnWidth￨f (￨f )￨f {￨f }￨f TreeColumn￨f getColumn￨f (￨f id￨p id￨p )￨f {￨f }￨f public￨f TreeColumn￨f getColumn￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f getColumnCount￨f (￨f )￨f {￨f }￨f public￨f int￨f [￨f ]￨f getColumnOrder￨f (￨f )￨f {￨f }￨f public￨f TreeColumn￨f [￨f ]￨f getColumns￨f (￨f )￨f {￨f }￨f public￨f int￨f getGridLineWidth￨f (￨f )￨f {￨f }￨f public￨f int￨f getHeaderHeight￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getHeaderVisible￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f getItem￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f TreeItem￨f getItem￨f (￨f Point￨p point￨p )￨f {￨f }￨f public￨f int￨f getItemCount￨f (￨f )￨f {￨f }￨f int￨f getItemCount￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f public￨f int￨f getItemHeight￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f [￨f ]￨f getItems￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getLinesVisible￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f getParentItem￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f [￨f ]￨f getSelection￨f (￨f )￨f {￨f }￨f public￨f int￨f getSelectionCount￨f (￨f )￨f {￨f }￨f public￨f TreeColumn￨f getSortColumn￨f (￨f )￨f {￨f }￨f public￨f int￨f getSortDirection￨f (￨f )￨f {￨f }￨f public￨f TreeItem￨f getTopItem￨f (￨f )￨f {￨f }￨f void￨f highlightSelectionInClipRect￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p rect￨p )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f TreeColumn￨p column￨p )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f boolean￨f isTrim￨f (￨f NSView￨p view￨p )￨f {￨f }￨f int￨f menuForEvent￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f int￨f outlineView_child_ofItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p index￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f void￨f outlineView_didClickTableColumn￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p tableColumn￨p )￨f {￨f }￨f int￨f outlineView_objectValueForTableColumn_byItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p tableColumn￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f boolean￨f outlineView_isItemExpandable￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p item￨p )￨f {￨f }￨f int￨f outlineView_numberOfChildrenOfItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p item￨p )￨f {￨f }￨f void￨f outlineView_willDisplayCell_forTableColumn_item￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p cell￨p ,￨p int￨p tableColumn￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f void￨f outlineViewColumnDidMove￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p aNotification￨p )￨f {￨f }￨f void￨f outlineViewColumnDidResize￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p aNotification￨p )￨f {￨f }￨f void￨f outlineViewItemDidExpand￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f outlineViewSelectionDidChange￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f boolean￨f outlineView_shouldCollapseItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f boolean￨f outlineView_shouldExpandItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f void￨f outlineView_setObjectValue_forTableColumn_byItem￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p outlineView￨p ,￨p int￨p object￨p ,￨p int￨p tableColumn￨p ,￨p int￨p itemID￨p )￨f {￨f }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f void￨f reloadItem￨f (￨f TreeItem￨p item￨p ,￨p boolean￨p recurse￨p )￨f {￨f }￨f public￨f void￨f removeAll￨f (￨f )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeTreeListener￨f (￨f TreeListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setInsertMark￨f (￨f TreeItem￨p item￨p ,￨p boolean￨p before￨p )￨f {￨f }￨f public￨f void￨f selectAll￨f (￨f )￨f {￨f }￨f public￨f void￨f select￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f void￨f sendDoubleSelection￨f (￨f )￨f {￨f }￨f boolean￨f sendKeyEvent￨f (￨f NSEvent￨p nsEvent￨p ,￨p int￨p type￨p )￨f {￨f }￨f void￨f setBackground￨f (￨f float￨p [￨p ]￨p color￨p )￨f {￨f }￨f public￨f void￨f setColumnOrder￨f (￨f int￨p [￨p ]￨p order￨p )￨f {￨f }￨f void￨f setFont￨f (￨f NSFont￨p font￨p )￨f {￨f }￨f public￨f void￨f setHeaderVisible￨f (￨f boolean￨p show￨p )￨f {￨f }￨f public￨f void￨f setItemCount￨f (￨f int￨p count￨p )￨f {￨f }￨f void￨f setItemCount￨f (￨f TreeItem￨p parentItem￨p ,￨p int￨p count￨p )￨f {￨f }￨f void￨f setItemHeight￨f (￨f int￨p itemHeight￨p )￨f {￨f }￨f void￨f setItemHeight￨f (￨f Image￨p image￨p ,￨p NSFont￨p font￨p ,￨p boolean￨p set￨p )￨f {￨f }￨f public￨f void￨f setLinesVisible￨f (￨f boolean￨p show￨p )￨f {￨f }￨f public￨f void￨f setRedraw￨f (￨f boolean￨p redraw￨p )￨f {￨f }￨f boolean￨f setScrollWidth￨f (￨f )￨f {￨f }￨f boolean￨f setScrollWidth￨f (￨f boolean￨p set￨p ,￨p TreeItem￨p [￨p ]￨p items￨p ,￨p boolean￨p recurse￨p )￨f {￨f if￨j (￨j items￨c ==￨c null￨c )￨j {￨j return￨e false￨e ;￨e }￨j if￨j (￨j (￨c ignoreRedraw￨c )￨c ||￨c (￨c (￨c drawCount￨c )￨c !=￨c 0￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b (￨b columnCount￨b )￨b !=￨b 0￨b )￨b ||￨b (￨b items￨b ==￨b null￨b )￨b )￨b <END_BUG>￨b return￨e false￨e ;￨e GC￨e gc￨e =￨e new￨e GC￨e (￨e this￨e )￨e ;￨e int￨e newWidth￨e =￨e calculateWidth￨e (￨e items￨e ,￨e 0￨e ,￨e gc￨e ,￨e recurse￨e )￨e ;￨e gc￨e .￨e dispose￨e (￨e )￨e ;￨e if￨j (￨j !￨c set￨c )￨j {￨j int￨e oldWidth￨e =￨e (￨e (￨e int￨e )￨e (￨e firstColumn￨e .￨e width￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j oldWidth￨c >=￨c newWidth￨c )￨j {￨j return￨e false￨e ;￨e }￨j }￨j firstColumn￨e .￨e setWidth￨e (￨e newWidth￨e )￨e ;￨e return￨e true￨e ;￨e }￨f boolean￨f setScrollWidth￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f TreeItem￨p [￨p ]￨p items￨p )￨f {￨f }￨f void￨f setSmallSize￨f (￨f )￨f {￨f }￨f public￨f void￨f setSortColumn￨f (￨f TreeColumn￨p column￨p )￨f {￨f }￨f public￨f void￨f setSortDirection￨f (￨f int￨p direction￨p )￨f {￨f }￨f public￨f void￨f setTopItem￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f public￨f void￨f showColumn￨f (￨f TreeColumn￨p column￨p )￨f {￨f }￨f public￨f void￨f showItem￨f (￨f TreeItem￨p item￨p )￨f {￨f }￨f void￨f showItem￨f (￨f TreeItem￨p item￨p ,￨p boolean￨p scroll￨p )￨f {￨f }￨f public￨f void￨f showSelection￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d HeaderManager￨d extends￨d ConfigTestElement￨d implements￨d Serializable￨d {￨d public￨e static￨e final￨e String￨e HEADERS￨e =￨e "HeaderManager.headers"￨e ;￨e private￨e static￨e final￨e int￨e columnCount￨e =￨e 2￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f columnNames￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e Object￨e SOAPHeader￨e =￨e null￨e ;￨e public￨f HeaderManager￨f (￨f )￨f {￨f }￨f public￨f CollectionProperty￨f getHeaders￨f (￨f )￨f {￨f }￨f public￨f int￨f getColumnCount￨f (￨f )￨f {￨f }￨f public￨f String￨f getColumnName￨f (￨f int￨p column￨p )￨f {￨f }￨f public￨f Class￨f getColumnClass￨f (￨f int￨p column￨p )￨f {￨f }￨f public￨f Header￨f getHeader￨f (￨f int￨p row￨p )￨f {￨f }￨f public￨f void￨f save￨f (￨f String￨f headFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f addFile￨f (￨f String￨f headerFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f add￨f (￨f Header￨p h￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f Header￨f get￨f (￨f int￨p i￨p )￨f {￨f }￨f public￨f void￨f removeHeaderNamed￨f (￨f String￨p name￨p )￨f {￨f Vector￨e removeIndices￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e <START_BUG>￨b for￨b (￨b int￨b i￨b =￨b (￨b getHeaders￨b (￨b )￨b .￨b size￨b (￨b )￨b )￨b -￨b 1￨b ;￨b i￨b >￨b 0￨b ;￨b i￨b --￨b )￨b {￨b <END_BUG>￨b Header￨e header￨e =￨e (￨e (￨e Header￨e )￨e (￨e getHeaders￨e (￨e )￨e .￨e get￨e (￨e i￨e )￨e .￨e getObjectValue￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j header￨c ==￨c null￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j header￨c .￨c getName￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c name￨c )￨c )￨j {￨j removeIndices￨e .￨e addElement￨e (￨e new￨e Integer￨e (￨e i￨e )￨e )￨e ;￨e }￨j for￨l (￨l Enumeration￨c e￨c =￨c removeIndices￨c .￨c elements￨c (￨c )￨c ;￨c e￨c .￨c hasMoreElements￨c (￨c )￨c ;￨c )￨l {￨l getHeaders￨e (￨e )￨e .￨e remove￨e (￨e (￨e (￨e Integer￨e )￨e (￨e e￨e .￨e nextElement￨e (￨e )￨e )￨e )￨e .￨e intValue￨e (￨e )￨e )￨e ;￨e }￨l }￨f public￨f String￨f [￨f ]￨f split￨f (￨f String￨p splittee￨p ,￨p String￨p splitChar￨p ,￨p String￨p def￨p )￨f {￨f }￨f public￨f String￨f getClassLabel￨f (￨f )￨f {￨f }￨f public￨f Object￨f getSOAPHeader￨f (￨f )￨f {￨f }￨f public￨f void￨f setSOAPHeader￨f (￨f Object￨p header￨p )￨f {￨f }￨f }￨d
public￨d class￨d BuildArgParser￨d extends￨d Main￨d {￨d private￨e static￨e final￨e String￨e BUNDLE_NAME￨e =￨e "org.aspectj.ajdt.ajc.messages"￨e ;￨e private￨e static￨e boolean￨e LOADED_BUNDLE￨e =￨e false￨e ;￨e private￨d static￨d class￨d StringPrintWriter￨d extends￨d PrintWriter￨d {￨d public￨e final￨e StringWriter￨e stringWriter￨e ;￨e StringPrintWriter￨f (￨f StringWriter￨p sw￨p )￨f {￨f }￨f }￨d public￨f static￨f String￨f getUsage￨f (￨f )￨f {￨f }￨f private￨e final￨e StringBuffer￨e errorSink￨e ;￨e public￨f BuildArgParser￨f (￨f PrintWriter￨p writer￨p )￨f {￨f }￨f public￨f BuildArgParser￨f (￨f )￨f {￨f }￨f public￨f AjBuildConfig￨f genBuildConfig￨f (￨f String￨p [￨p ]￨p args￨p ,￨p IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f String￨f getOtherMessages￨f (￨f boolean￨p flush￨p )￨f {￨f }￨f private￨f void￨f setDebugOptions￨f (￨f )￨f {￨f }￨f private￨f Collection￨f collectSourceRootFiles￨f (￨f File￨p dir￨p )￨f {￨f }￨f public￨f List￨f getClasspath￨f (￨f BuildArgParser￨p .￨p AjcConfigParser￨p parser￨p )￨f {￨f }￨f private￨f void￨f addExtDirs￨f (￨f String￨p extdirs￨p ,￨p List￨p classpathCollector￨p )￨f {￨f }￨f private￨f void￨f addClasspath￨f (￨f String￨p classpath￨p ,￨p List￨p classpathCollector￨p )￨f {￨f }￨f private￨d class￨d AjcConfigParser￨d extends￨d ConfigParser￨d {￨d private￨e String￨e bootclasspath￨e =￨e null￨e ;￨e private￨e String￨e classpath￨e =￨e null￨e ;￨e private￨e String￨e extdirs￨e =￨e null￨e ;￨e private￨e List￨e unparsedArgs￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e private￨e AjBuildConfig￨e buildConfig￨e ;￨e private￨e IMessageHandler￨e handler￨e ;￨e public￨f AjcConfigParser￨f (￨f AjBuildConfig￨p buildConfig￨p ,￨p IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f List￨f getUnparsedArgs￨f (￨f )￨f {￨f }￨f public￨f void￨f parseOption￨f (￨f String￨p arg￨p ,￨p LinkedList￨p args￨p )￨f {￨f }￨f protected￨f void￨f dirLookahead￨f (￨f String￨p arg￨p ,￨p LinkedList￨p argList￨p ,￨p int￨p nextArgIndex￨p )￨f {￨f }￨f public￨f void￨f showError￨f (￨f String￨p message￨p )￨f {￨f <START_BUG>￨b MessageUtil￨b .￨b error￨b (￨b handler￨b ,￨b message￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f void￨f showWarning￨f (￨f String￨p message￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d MultiPassIndexSplitter￨d {￨d public￨f void￨f split￨f (￨f Version￨f version￨f ,￨f IndexReader￨f in￨f ,￨f Directory￨f [￨f ]￨f outputs￨f ,￨f boolean￨f seq￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f if￨j (￨j (￨c outputs￨c ==￨c null￨c )￨c ||￨c (￨c (￨c outputs￨c .￨c length￨c )￨c <￨c 2￨c )￨c )￨j {￨j throw￨e new￨e IOException￨e (￨e "Invalid<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>outputs."￨e )￨e ;￨e }￨j if￨j (￨j (￨c in￨c ==￨c null￨c )￨c ||￨c (￨c (￨c in￨c .￨c numDocs￨c (￨c )￨c )￨c <￨c 2￨c )￨c )￨j {￨j throw￨e new￨e IOException￨e (￨e "Not<seq2seq4repair_space>enough<seq2seq4repair_space>documents<seq2seq4repair_space>for<seq2seq4repair_space>splitting"￨e )￨e ;￨e }￨j int￨e numParts￨e =￨e outputs￨e .￨e length￨e ;￨e MultiPassIndexSplitter￨e .￨e FakeDeleteIndexReader￨e input￨e =￨e new￨e MultiPassIndexSplitter￨e .￨e FakeDeleteIndexReader￨e (￨e in￨e )￨e ;￨e int￨e maxDoc￨e =￨e input￨e .￨e maxDoc￨e (￨e )￨e ;￨e int￨e partLen￨e =￨e maxDoc￨e /￨e numParts￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c numParts￨c ;￨c i￨c ++￨c )￨l {￨l input￨e .￨e undeleteAll￨e (￨e )￨e ;￨e if￨j (￨j seq￨c )￨j {￨j int￨e lo￨e =￨e partLen￨e *￨e i￨e ;￨e int￨e hi￨e =￨e lo￨e +￨e partLen￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c lo￨c ;￨c j￨c ++￨c )￨l {￨l input￨e .￨e deleteDocument￨e (￨e j￨e )￨e ;￨e }￨l if￨j (￨j i￨c <￨c (￨c numParts￨c -￨c 1￨c )￨c )￨j {￨j for￨l (￨l int￨c j￨c =￨c hi￨c ;￨c j￨c <￨c maxDoc￨c ;￨c j￨c ++￨c )￨l {￨l input￨e .￨e deleteDocument￨e (￨e j￨e )￨e ;￨e }￨l }￨j }￨j else￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c maxDoc￨c ;￨c j￨c ++￨c )￨l {￨l if￨j (￨j (￨c (￨c (￨c j￨c +￨c numParts￨c )￨c -￨c i￨c )￨c %￨c numParts￨c )￨c !=￨c 0￨c )￨j {￨j input￨e .￨e deleteDocument￨e (￨e j￨e )￨e ;￨e }￨j }￨l }￨j IndexWriter￨e w￨e =￨e new￨e IndexWriter￨e (￨e outputs￨e [￨e i￨e ]￨e ,￨e new￨e IndexWriterConfig￨e (￨e version￨e ,￨e null￨e )￨e .￨e setOpenMode￨e (￨e CREATE￨e )￨e )￨e ;￨e System￨e .￨e err￨e .￨e println￨e (￨e (￨e (￨e "Writing<seq2seq4repair_space>part<seq2seq4repair_space>"￨e +￨e (￨e i￨e +￨e 1￨e )￨e )￨e +￨e "<seq2seq4repair_space>..."￨e )￨e )￨e ;￨e final￨e List￨e <￨e ?￨e extends￨e MultiPassIndexSplitter￨e .￨e FakeDeleteAtomicIndexReader￨e >￨e sr￨e =￨e input￨e .￨e getSequentialSubReaders￨e (￨e )￨e ;￨e w￨e .￨e addIndexes￨e (￨e sr￨e .￨e toArray￨e (￨e new￨e IndexReader￨e [￨e sr￨e .￨e size￨e (￨e )￨e ]￨e )￨e )￨e ;￨e <START_BUG>￨b w￨b .￨b close￨b (￨b )￨b ;￨b <END_BUG>￨b }￨l System￨e .￨e err￨e .￨e println￨e (￨e "Done."￨e )￨e ;￨e }￨f @￨f SuppressWarnings￨f (￨f "deprecation"￨f )￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d static￨d final￨d class￨d FakeDeleteIndexReader￨d extends￨d BaseCompositeReader￨d <￨d MultiPassIndexSplitter￨d .￨d FakeDeleteAtomicIndexReader￨d >￨d {￨d public￨f FakeDeleteIndexReader￨f (￨f IndexReader￨p reader￨p )￨f {￨f }￨f private￨f static￨f MultiPassIndexSplitter￨f .￨f FakeDeleteAtomicIndexReader￨f [￨f ]￨f initSubReaders￨f (￨f IndexReader￨p reader￨p )￨f {￨f }￨f public￨f void￨f deleteDocument￨f (￨f int￨p docID￨p )￨f {￨f }￨f public￨f void￨f undeleteAll￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f doClose￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d final￨d class￨d FakeDeleteAtomicIndexReader￨d extends￨d FilterAtomicReader￨d {￨d FixedBitSet￨e liveDocs￨e ;￨e public￨f FakeDeleteAtomicIndexReader￨f (￨f AtomicReader￨p reader￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f numDocs￨f (￨f )￨f {￨f }￨f public￨f void￨f undeleteAll￨f (￨f )￨f {￨f }￨f public￨f void￨f deleteDocument￨f (￨f int￨p n￨p )￨f {￨f }￨f @￨f Override￨f public￨f Bits￨f getLiveDocs￨f (￨f )￨f {￨f }￨f }￨d }￨d
@￨d Entity￨d @￨d Table￨d (￨d name￨d =￨d "EMP_MBI"￨d )￨d @￨d IdClass￨d (￨d EmpId￨d .￨d class￨d )￨d public￨d class￨d Employee￨d {￨d @￨e Id￨e int￨e empId￨e ;￨e @￨e Id￨e @￨e Enumerated￨e Employee￨e .￨e EmpType￨e empType￨e ;￨e @￨e OneToOne￨e PhoneNumber￨e phoneNumber￨e ;￨e public￨f PhoneNumber￨f getPhoneNumber￨f (￨f )￨f {￨f }￨f public￨f void￨f setPhoneNumber￨f (￨f PhoneNumber￨p phoneNumber￨p )￨f {￨f }￨f public￨f int￨f getEmpId￨f (￨f )￨f {￨f }￨f public￨f void￨f setEmpId￨f (￨f int￨p empId￨p )￨f {￨f }￨f public￨f Employee￨f .￨f EmpType￨f getEmpType￨f (￨f )￨f {￨f }￨f public￨f void￨f setEmpType￨f (￨f Employee￨p .￨p EmpType￨p empType￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f Employee￨e e￨e =￨e (￨e (￨e Employee￨e )￨e (￨e o￨e )￨e )￨e ;￨e PhoneNumber￨e p￨e =￨e e￨e .￨e getPhoneNumber￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b p￨b .￨b getNumber￨b (￨b )￨b )￨b !=￨b (￨b phoneNumber￨b .￨b getNumber￨b (￨b )￨b )￨b )￨b <END_BUG>￨b return￨e false￨e ;￨e return￨e true￨e ;￨e }￨f public￨f enum￨f EmpType￨f (￨f )￨f {￨f A1￨e ,￨e A2￨e ,￨e A3￨e ,￨e A4￨e ;￨e }￨f }￨d
public￨d final￨d class￨d DeferredAttrNSImpl￨d extends￨d AttrNSImpl￨d implements￨d DeferredNode￨d {￨d static￨e final￨e long￨e serialVersionUID￨e =￨e 6074924934945957154L￨e ;￨e protected￨e transient￨e int￨e fNodeIndex￨e ;￨e DeferredAttrNSImpl￨f (￨f DeferredDocumentImpl￨p ownerDocument￨p ,￨p int￨p nodeIndex￨p )￨f {￨f }￨f public￨f int￨f getNodeIndex￨f (￨f )￨f {￨f }￨f protected￨f void￨f synchronizeData￨f (￨f )￨f {￨f needsSyncData￨e (￨e false￨e )￨e ;￨e DeferredDocumentImpl￨e ownerDocument￨e =￨e (￨e (￨e DeferredDocumentImpl￨e )￨e (￨e ownerDocument￨e (￨e )￨e )￨e )￨e ;￨e name￨e =￨e ownerDocument￨e .￨e getNodeName￨e (￨e fNodeIndex￨e )￨e ;￨e int￨e index￨e =￨e name￨e .￨e indexOf￨e (￨e ':'￨e )￨e ;￨e String￨e prefix￨e ;￨e if￨j (￨j index￨c <￨c 0￨c )￨j {￨j prefix￨e =￨e null￨e ;￨e localName￨e =￨e name￨e ;￨e }￨j else￨j {￨j prefix￨e =￨e name￨e .￨e substring￨e (￨e 0￨e ,￨e index￨e )￨e ;￨e localName￨e =￨e name￨e .￨e substring￨e (￨e (￨e index￨e +￨e 1￨e )￨e )￨e ;￨e }￨j isSpecified￨e (￨e (￨e (￨e ownerDocument￨e .￨e getNodeExtra￨e (￨e fNodeIndex￨e )￨e )￨e ==￨e 1￨e )￨e )￨e ;￨e namespaceURI￨e =￨e ownerDocument￨e .￨e getNodeURI￨e (￨e fNodeIndex￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b namespaceURI￨b .￨b length￨b (￨b )￨b )￨b ==￨b 0￨b )￨b {￨b <END_BUG>￨b namespaceURI￨e =￨e null￨e ;￨e if￨j (￨j (￨c namespaceURI￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j prefix￨c !=￨c null￨c )￨j {￨j if￨j (￨j prefix￨c .￨c equals￨c (￨c "xmlns"￨c )￨c )￨j {￨j namespaceURI￨e =￨e "http://www.w3.org/2000/xmlns/"￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equals￨c (￨c "xmlns"￨c )￨c )￨j {￨j namespaceURI￨e =￨e "http://www.w3.org/2000/xmlns/"￨e ;￨e }￨j }￨j }￨f protected￨f void￨f synchronizeChildren￨f (￨f )￨f {￨f }￨f }￨d
@￨d SuppressWarnings￨d (￨d "serial"￨d )￨d public￨d class￨d SessionConnectEvent￨d extends￨d ApplicationEvent￨d {￨d private￨e final￨e Message￨e <￨e byte￨e [￨e ]￨e >￨e message￨e ;￨e public￨f SessionConnectEvent￨f (￨f Object￨p source￨p ,￨p Message￨p <￨p byte￨p [￨p ]￨p >￨p message￨p )￨f {￨f }￨f public￨f Message￨f <￨f byte￨f [￨f ]￨f >￨f getMessage￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "SessionConnectEvent:<seq2seq4repair_space>message="￨b +￨b (￨b message￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d TableMouseListener￨d extends￨d DoubleClickListener￨d {￨d private￨e TableController￨e controller￨e =￨e null￨e ;￨e private￨e AddressbookFrameMediator￨e mediator￨e =￨e null￨e ;￨e public￨f TableMouseListener￨f (￨f TableController￨p tableController￨p )￨f {￨f }￨f public￨f void￨f doubleClick￨f (￨f MouseEvent￨p e￨p )￨f {￨f if￨j (￨j (￨c (￨c e￨c .￨c getButton￨c (￨c )￨c )￨c ==￨c (￨c MouseEvent￨c .￨c BUTTON1￨c )￨c )￨c &&￨c (￨c (￨c e￨c .￨c getClickCount￨c (￨c )￨c )￨c >￨c 1￨c )￨c )￨j {￨j <START_BUG>￨b Object￨b [￨b ]￨b uids￨b =￨b mediator￨b .￨b getTable￨b (￨b )￨b .￨b getUids￨b (￨b )￨b ;￨b <END_BUG>￨b IContactStorage￨e folder￨e =￨e (￨e (￨e IContactStorage￨e )￨e (￨e mediator￨e .￨e getTree￨e (￨e )￨e .￨e getSelectedFolder￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c uids￨c .￨c length￨c )￨c ==￨c 0￨c )￨j {￨j return￨e ;￨e }￨j IContactModel￨e card￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f card￨e =￨e (￨e (￨e IContactModel￨e )￨e (￨e folder￨e .￨e get￨e (￨e uids￨e [￨e 0￨e ]￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f if￨j (￨j Logging￨c .￨c DEBUG￨c )￨j {￨j ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨j ErrorDialog￨e .￨e createDialog￨e (￨e ex￨e .￨e getMessage￨e (￨e )￨e ,￨e ex￨e )￨e ;￨e }￨f ContactEditorDialog￨e dialog￨e =￨e new￨e ContactEditorDialog￨e (￨e mediator￨e .￨e getView￨e (￨e )￨e .￨e getFrame￨e (￨e )￨e ,￨e (￨e (￨e ContactModel￨e )￨e (￨e card￨e )￨e )￨e )￨e ;￨e if￨j (￨j dialog￨c .￨c getResult￨c (￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f folder￨e .￨e modify￨e (￨e uids￨e [￨e 0￨e ]￨e ,￨e card￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e1￨p )￨f {￨f if￨j (￨j Logging￨c .￨c DEBUG￨c )￨j {￨j e1￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨j ErrorDialog￨e .￨e createDialog￨e (￨e e1￨e .￨e getMessage￨e (￨e )￨e ,￨e e1￨e )￨e ;￨e }￨f if￨j (￨j folder￨c instanceof￨c GroupFolder￨c )￨j {￨j mediator￨e .￨e getTree￨e (￨e )￨e .￨e setSelectedFolder￨e (￨e (￨e (￨e AbstractFolder￨e )￨e (￨e folder￨e )￨e )￨e )￨e ;￨e }￨j }￨j }￨j }￨f }￨d
public￨d class￨d DebugComponent￨d extends￨d SearchComponent￨d {￨d public￨e static￨e final￨e String￨e COMPONENT_NAME￨e =￨e "debug"￨e ;￨e @￨f Override￨f public￨f void￨f prepare￨f (￨f ResponseBuilder￨f rb￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f @￨f Override￨f public￨f void￨f process￨f (￨f ResponseBuilder￨f rb￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyRequest￨f (￨f ResponseBuilder￨p rb￨p ,￨p SearchComponent￨p who￨p ,￨p ShardRequest￨p sreq￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f handleResponses￨f (￨f ResponseBuilder￨p rb￨p ,￨p ShardRequest￨p sreq￨p )￨f {￨f }￨f private￨e Set￨e <￨e String￨e >￨e excludeSet￨e =￨e new￨e HashSet￨e <￨e String￨e >￨e (￨e Arrays￨e .￨e asList￨e (￨e "explain"￨e )￨e )￨e ;￨e @￨f Override￨f public￨f void￨f finishStage￨f (￨f ResponseBuilder￨p rb￨p )￨f {￨f if￨j (￨j (￨c rb￨c .￨c isDebug￨c (￨c )￨c )￨c &&￨c (￨c (￨c rb￨c .￨c stage￨c )￨c ==￨c (￨c ResponseBuilder￨c .￨c STAGE_GET_FIELDS￨c )￨c )￨c )￨j {￨j NamedList￨e info￨e =￨e null￨e ;￨e NamedList￨e explain￨e =￨e new￨e SimpleOrderedMap￨e (￨e )￨e ;￨e Object￨e [￨e ]￨e arr￨e =￨e new￨e Object￨e [￨e (￨e rb￨e .￨e resultIds￨e .￨e size￨e (￨e )￨e )￨e *￨e 2￨e ]￨e ;￨e for￨l (￨l ShardRequest￨c sreq￨c :￨c rb￨c .￨c finished￨c )￨l {￨l if￨j (￨j (￨c (￨c sreq￨c .￨c purpose￨c )￨c &￨c (￨c ShardRequest￨c .￨c PURPOSE_GET_DEBUG￨c )￨c )￨c ==￨c 0￨c )￨j {￨j continue￨e ;￨e }￨j for￨l (￨l ShardResponse￨c srsp￨c :￨c sreq￨c .￨c responses￨c )￨l {￨l <START_BUG>￨b NamedList￨b sdebug￨b =￨b (￨b (￨b NamedList￨b )￨b (￨b srsp￨b .￨b rsp￨b .￨b getResponse￨b (￨b )￨b .￨b get￨b (￨b "debug"￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b info￨e =￨e (￨e (￨e NamedList￨e )￨e (￨e merge￨e (￨e sdebug￨e ,￨e info￨e ,￨e excludeSet￨e )￨e )￨e )￨e ;￨e NamedList￨e sexplain￨e =￨e (￨e (￨e NamedList￨e )￨e (￨e sdebug￨e .￨e get￨e (￨e "explain"￨e )￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c sexplain￨c .￨c size￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e id￨e =￨e sexplain￨e .￨e getName￨e (￨e i￨e )￨e ;￨e ShardDoc￨e sdoc￨e =￨e rb￨e .￨e resultIds￨e .￨e get￨e (￨e id￨e )￨e ;￨e int￨e idx￨e =￨e sdoc￨e .￨e positionInResponse￨e ;￨e arr￨e [￨e (￨e idx￨e <<￨e 1￨e )￨e ]￨e =￨e id￨e ;￨e arr￨e [￨e (￨e (￨e idx￨e <<￨e 1￨e )￨e +￨e 1￨e )￨e ]￨e =￨e sexplain￨e .￨e getVal￨e (￨e i￨e )￨e ;￨e }￨l }￨l }￨l explain￨e =￨e HighlightComponent￨e .￨e removeNulls￨e (￨e new￨e SimpleOrderedMap￨e (￨e Arrays￨e .￨e asList￨e (￨e arr￨e )￨e )￨e )￨e ;￨e if￨j (￨j info￨c ==￨c null￨c )￨j {￨j info￨e =￨e new￨e SimpleOrderedMap￨e (￨e )￨e ;￨e }￨j int￨e idx￨e =￨e info￨e .￨e indexOf￨e (￨e "explain"￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j idx￨c >=￨c 0￨c )￨j {￨j info￨e .￨e setVal￨e (￨e idx￨e ,￨e explain￨e )￨e ;￨e }￨j else￨j {￨j info￨e .￨e add￨e (￨e "explain"￨e ,￨e explain￨e )￨e ;￨e }￨j rb￨e .￨e setDebugInfo￨e (￨e info￨e )￨e ;￨e rb￨e .￨e rsp￨e .￨e add￨e (￨e "debug"￨e ,￨e rb￨e .￨e getDebugInfo￨e (￨e )￨e )￨e ;￨e }￨j }￨f Object￨f merge￨f (￨f Object￨p source￨p ,￨p Object￨p dest￨p ,￨p Set￨p <￨p String￨p >￨p exclude￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getDescription￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getVersion￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getSourceId￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getSource￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f URL￨f [￨f ]￨f getDocs￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SingleSignOnEntry￨d extends￨d org￨d .￨d apache￨d .￨d catalina￨d .￨d authenticator￨d .￨d SingleSignOnEntry￨d {￨d public￨f SingleSignOnEntry￨f (￨f Principal￨p principal￨p ,￨p String￨p authType￨p ,￨p String￨p username￨p ,￨p String￨p password￨p )￨f {￨f }￨f synchronized￨f boolean￨f addSession2￨f (￨f SingleSignOn￨p sso￨p ,￨p Session￨p session￨p )￨f {￨f }￨f synchronized￨f boolean￨f removeSession2￨f (￨f Session￨p session￨p )￨f {￨f }￨f void￨f setPrincipal￨f (￨f Principal￨p principal￨p )￨f {￨f }￨f int￨f getSessionCount￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f updateCredentials￨f (￨f Principal￨p principal￨p ,￨p String￨p authType￨p ,￨p String￨p username￨p ,￨p String￨p password￨p )￨f {￨f }￨f public￨f synchronized￨f boolean￨f updateCredentials2￨f (￨f Principal￨p principal￨p ,￨p String￨p authType￨p ,￨p String￨p username￨p ,￨p String￨p password￨p )￨f {￨f boolean￨e changed￨e =￨e (￨e (￨e (￨e safeEquals￨e (￨e this￨e .￨e principal￨e ,￨e principal￨e )￨e )￨e ||￨e (￨e safeEquals￨e (￨e this￨e .￨e authType￨e ,￨e authType￨e )￨e )￨e )￨e ||￨e (￨e safeEquals￨e (￨e this￨e .￨e username￨e ,￨e username￨e )￨e )￨e )￨e ||￨e (￨e safeEquals￨e (￨e this￨e .￨e password￨e ,￨e password￨e )￨e )￨e ;￨e this￨e .￨e principal￨e =￨e principal￨e ;￨e this￨e .￨e authType￨e =￨e authType￨e ;￨e this￨e .￨e username￨e =￨e username￨e ;￨e this￨e .￨e password￨e =￨e password￨e ;￨e <START_BUG>￨b this￨b .￨b canReauthenticate￨b =￨b (￨b BASIC_AUTH￨b .￨b equals￨b (￨b authType￨b )￨b )￨b ||￨b (￨b FORM_AUTH￨b .￨b equals￨b (￨b authType￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e changed￨e ;￨e }￨f private￨f boolean￨f safeEquals￨f (￨f Object￨p a￨p ,￨p Object￨p b￨p )￨f {￨f }￨f }￨d
public￨d class￨d closed￨d implements￨d Runnable￨d {￨d private￨e static￨e boolean￨e jsr169_test￨e =￨e false￨e ;￨e public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f static￨f boolean￨f shutdownTest￨f (￨f String￨f databaseName￨f ,￨f String￨f shutdownString￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨e Connection￨e cc￨e ;￨e private￨e String￨e sql￨e ;￨e String￨e result￨e ;￨e private￨f closed￨f (￨f Connection￨p cc￨p ,￨p String￨p sql￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f cc￨e .￨e createStatement￨e (￨e )￨e .￨e execute￨e (￨e sql￨e )￨e ;￨e result￨e =￨e "Sleep<seq2seq4repair_space>thread<seq2seq4repair_space>completed<seq2seq4repair_space>"￨e +￨e (￨e sql￨e )￨e ;￨e }￨f catch￨f (￨f SQLException￨p sqle￨p )￨f {￨f StringBuffer￨e sb￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e sb￨e .￨e append￨e (￨e sql￨e )￨e ;￨e sb￨e .￨e append￨e (￨e "<seq2seq4repair_space>-<seq2seq4repair_space>"￨e )￨e ;￨e sb￨e .￨e append￨e (￨e sqle￨e .￨e getSQLState￨e (￨e )￨e )￨e ;￨e while￨l (￨l sqle￨c !=￨c null￨c )￨l {￨l if￨j (￨j sqle￨c !=￨c null￨c )￨j {￨j sb￨e .￨e append￨e (￨e ",<seq2seq4repair_space>"￨e )￨e ;￨e sb￨e .￨e append￨e (￨e sqle￨e .￨e getSQLState￨e (￨e )￨e )￨e ;￨e sb￨e .￨e append￨e (￨e "<seq2seq4repair_space>--<seq2seq4repair_space>"￨e )￨e ;￨e if￨j (￨j (￨c sqle￨c .￨c getMessage￨c (￨c )￨c .￨c indexOf￨c (￨c "InterruptedException"￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j sb￨e .￨e append￨e (￨e "InterruptedException"￨e )￨e ;￨e }￨j else￨j {￨j sb￨e .￨e append￨e (￨e sqle￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b sqle￨b .￨b printStackTrace￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j }￨j else￨j {￨j sb￨e .￨e append￨e (￨e sqle￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e }￨j sqle￨e =￨e sqle￨e .￨e getNextException￨e (￨e )￨e ;￨e }￨l result￨e =￨e sb￨e .￨e toString￨e (￨e )￨e ;￨e }￨f }￨f static￨f boolean￨f testStatement￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f static￨f boolean￨f testPreparedStatement￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f static￨f boolean￨f testResultSet￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f static￨f boolean￨f testConnection￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f static￨f boolean￨f testDerby62￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JPADependencyProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨e static￨e ModuleIdentifier￨e JAVAX_PERSISTENCE_API_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "javax.persistence.api"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e JAVAEE_API_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "javaee.api"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e JBOSS_AS_JPA_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.as.jpa"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e JBOSS_HIBERNATE_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.hibernate"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e JAVASSIST_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.javassist"￨e )￨e ;￨e private￨e static￨e ModuleIdentifier￨e NAMING_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e "org.jboss.as.naming"￨e )￨e ;￨e public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f addDependency￨f (￨f ModuleSpecification￨p moduleSpecification￨p ,￨p ModuleLoader￨p moduleLoader￨p ,￨p ModuleIdentifier￨p moduleIdentifier￨p )￨f {￨f <START_BUG>￨b moduleSpecification￨b .￨b addDependency￨b (￨b new￨b org￨b .￨b jboss￨b .￨b as￨b .￨b server￨b .￨b deployment￨b .￨b module￨b .￨b ModuleDependency￨b (￨b moduleLoader￨b ,￨b moduleIdentifier￨b ,￨b false￨b ,￨b false￨b ,￨b false￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d ClusterCompiler￨d {￨d private￨e int￨e nbClassArgs￨e ;￨e private￨e Vector￨e classes￨e ;￨e public￨f ClusterCompiler￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f public￨f void￨f generate￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f ClusterConf￨e cconf￨e =￨e new￨e ClusterConf￨e (￨e )￨e ;￨e CompilerContext￨e cmpCtx￨e =￨e new￨e CompilerContext￨e (￨e )￨e ;￨e prepare￨e (￨e args￨e ,￨e cmpCtx￨e ,￨e cconf￨e )￨e ;￨e if￨j (￨j (￨c cmpCtx￨c .￨c clusterCfgGen￨c )￨c !=￨c null￨c )￨j {￨j FileWriter￨e f￨e =￨e new￨e FileWriter￨e (￨e cmpCtx￨e .￨e clusterCfgGen￨e )￨e ;￨e f￨e .￨e write￨e (￨e "<!DOCTYPE<seq2seq4repair_space>cluster-config<seq2seq4repair_space>PUBLIC\n"￨e )￨e ;￨e f￨e .￨e write￨e (￨e "\t\"\"\n"￨e )￨e ;￨e <START_BUG>￨b f￨b .￨b write￨b (￨b "\t\"cluster-config.dtd\">\n\n"￨b )￨b ;￨b <END_BUG>￨b f￨e .￨e write￨e (￨e "<cluster-config>\n\n"￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c nbClassArgs￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e className￨e =￨e (￨e (￨e String￨e )￨e (￨e classes￨e .￨e elementAt￨e (￨e i￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c className￨c ==￨c null￨c )￨c ||￨c (￨c className￨c ==￨c ""￨c )￨c )￨j {￨j throw￨e new￨e Exception￨e (￨e "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨e )￨e ;￨e }￨j f￨e .￨e write￨e (￨e (￨e (￨e "<class>\n\t<name>"￨e +￨e className￨e )￨e +￨e "</name>\n\n"￨e )￨e )￨e ;￨e ClassContext￨e clCtx￨e =￨e new￨e ClassContext￨e (￨e cmpCtx￨e ,￨e className￨e )￨e ;￨e MethodContext￨e [￨e ]￨e remMths￨e =￨e clCtx￨e .￨e getRemoteMethodContexts￨e (￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c remMths￨c .￨c length￨c )￨c ;￨c j￨c ++￨c )￨l {￨l f￨e .￨e write￨e (￨e "\t<method>\n\t\t<signature>"￨e )￨e ;￨e f￨e .￨e write￨e (￨e remMths￨e [￨e j￨e ]￨e .￨e mth￨e .￨e toString￨e (￨e )￨e )￨e ;￨e f￨e .￨e write￨e (￨e "</signature>\n\t\t<one-choice/>\n\t</method>\n\n"￨e )￨e ;￨e }￨l f￨e .￨e write￨e (￨e "</class>\n\n"￨e )￨e ;￨e }￨l f￨e .￨e write￨e (￨e "</cluster-config>\n"￨e )￨e ;￨e f￨e .￨e close￨e (￨e )￨e ;￨e }￨j else￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c nbClassArgs￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e className￨e =￨e (￨e (￨e String￨e )￨e (￨e classes￨e .￨e elementAt￨e (￨e i￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c className￨c ==￨c null￨c )￨c ||￨c (￨c className￨c ==￨c ""￨c )￨c )￨j {￨j throw￨e new￨e Exception￨e (￨e "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨e )￨e ;￨e }￨j ClusterConfigCompiler￨e ccc￨e =￨e new￨e ClusterConfigCompiler￨e (￨e cmpCtx￨e )￨e ;￨e ccc￨e .￨e run￨e (￨e className￨e ,￨e cconf￨e )￨e ;￨e ClusterStubCompiler￨e csc￨e =￨e new￨e ClusterStubCompiler￨e (￨e cmpCtx￨e )￨e ;￨e csc￨e .￨e run￨e (￨e className￨e ,￨e cconf￨e )￨e ;￨e }￨l }￨j }￨f private￨f void￨f prepare￨f (￨f String￨f [￨f ]￨f args￨f ,￨f CompilerContext￨f ctxt￨f ,￨f ClusterConf￨f cconf￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f usage￨f (￨f CompilerContext￨p ctxt￨p )￨f {￨f }￨f private￨f static￨f void￨f warning￨f (￨f String￨p str￨p )￨f {￨f }￨f }￨d
class￨d ClasspathDirectory￨d extends￨d ClasspathLocation￨d {￨d String￨e binaryPath￨e ;￨e LookupTable￨e missingPackages￨e ;￨e LookupTable￨e directoryCache￨e ;￨e ClasspathDirectory￨f (￨f String￨p binaryPath￨p )￨f {￨f }￨f void￨f clear￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f directoryList￨f (￨f String￨p pathPrefix￨p ,￨p char￨p [￨p ]￨p [￨p ]￨p compoundName￨p ,￨p char￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f boolean￨f exists￨f (￨f String￨p pathPrefix￨p ,￨p String￨p filename￨p ,￨p char￨p [￨p ]￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f NameEnvironmentAnswer￨f findClass￨f (￨f char￨p [￨p ]￨p className￨p ,￨p char￨p [￨p ]￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f boolean￨f isPackage￨f (￨f char￨p [￨p ]￨p [￨p ]￨p compoundName￨p ,￨p char￨p [￨p ]￨p packageName￨p )￨f {￨f }￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "ClasspathDirectory<seq2seq4repair_space>"￨b +￨b (￨b binaryPath￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d JcaExtension￨d implements￨d Extension￨d {￨d public￨e static￨e String￨e SUBSYSTEM_NAME￨e =￨e "jca"￨e ;￨e @￨f Override￨f public￨f void￨f initialize￨f (￨f final￨p ExtensionContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f initializeParsers￨f (￨f final￨p ExtensionParsingContext￨p context￨p )￨f {￨f }￨f private￨f static￨f ModelNode￨f createEmptyAddOperation￨f (￨f )￨f {￨f }￨f static￨d final￨d class￨d ConnectorSubsystemParser￨d implements￨d XMLStreamConstants￨d ,￨d XMLElementReader￨d <￨d List￨d <￨d ModelNode￨d >￨d >￨d ,￨d XMLElementWriter￨d <￨d SubsystemMarshallingContext￨d >￨d {￨d static￨e final￨e JcaExtension￨e .￨e ConnectorSubsystemParser￨e INSTANCE￨e =￨e new￨e JcaExtension￨e .￨e ConnectorSubsystemParser￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f writeContent￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f SubsystemMarshallingContext￨f context￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeArchiveValidation￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeBeanValidation￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeCachedConnectionManager￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeWorkManagers￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f if￨j (￨j (￨c parentNode￨c .￨c hasDefined￨c (￨c Constants￨c .￨c WORKMANAGER￨c )￨c )￨c &&￨c (￨c (￨c parentNode￨c .￨c get￨c (￨c Constants￨c .￨c WORKMANAGER￨c )￨c .￨c asList￨c (￨c )￨c .￨c size￨c (￨c )￨c )￨c !=￨c 0￨c )￨c )￨j {￨j for￨l (￨l Property￨c property￨c :￨c parentNode￨c .￨c get￨c (￨c Constants￨c .￨c WORKMANAGER￨c )￨c .￨c asPropertyList￨c (￨c )￨c )￨l {￨l if￨j (￨j "default"￨c .￨c equals￨c (￨c property￨c .￨c getValue￨c (￨c )￨c .￨c get￨c (￨c NAME￨c )￨c .￨c asString￨c (￨c )￨c )￨c )￨j {￨j writer￨e .￨e writeStartElement￨e (￨e DEFAULT_WORKMANAGER￨e .￨e getLocalName￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j writer￨e .￨e writeStartElement￨e (￨e WORKMANAGER￨e .￨e getLocalName￨e (￨e )￨e )￨e ;￨e WorkManagerAdd￨e .￨e WmParameters￨e .￨e NAME￨e .￨e getAttribute￨e (￨e )￨e .￨e marshallAsAttribute￨e (￨e property￨e .￨e getValue￨e (￨e )￨e ,￨e writer￨e )￨e ;￨e }￨j for￨l (￨l Property￨c prop￨c :￨c property￨c .￨c getValue￨c (￨c )￨c .￨c asPropertyList￨c (￨c )￨c )￨l {￨l <START_BUG>￨b if￨b (￨b Constants￨b .￨b WORKMANAGER_LONG_RUNNING￨b .￨b equals￨b (￨b prop￨b .￨b getName￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b ThreadsParser￨e .￨e getInstance￨e (￨e )￨e .￨e writeBoundedQueueThreadPool￨e (￨e writer￨e ,￨e prop￨e .￨e getValue￨e (￨e )￨e .￨e asProperty￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ,￨e LONG_RUNNING_THREADS￨e .￨e getLocalName￨e (￨e )￨e ,￨e false￨e )￨e ;￨e if￨j (￨j Constants￨c .￨c WORKMANAGER_SHORT_RUNNING￨c .￨c equals￨c (￨c prop￨c .￨c getName￨c (￨c )￨c )￨c )￨j {￨j ThreadsParser￨e .￨e getInstance￨e (￨e )￨e .￨e writeBoundedQueueThreadPool￨e (￨e writer￨e ,￨e prop￨e .￨e getValue￨e (￨e )￨e .￨e asProperty￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ,￨e SHORT_RUNNING_THREADS￨e .￨e getLocalName￨e (￨e )￨e ,￨e false￨e )￨e ;￨e }￨j }￨l writer￨e .￨e writeEndElement￨e (￨e )￨e ;￨e }￨l }￨j }￨f private￨f void￨f writeBootstrapContexts￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasAnyOf￨f (￨f ModelNode￨p node￨p ,￨p String￨p ...￨p names￨p )￨f {￨f }￨f private￨f boolean￨f has￨f (￨f ModelNode￨p node￨p ,￨p String￨p name￨p )￨f {￨f }￨f private￨f void￨f writeAttribute￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f Attribute￨f attr￨f ,￨f final￨f ModelNode￨f value￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f readElement￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseArchiveValidation￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f parseWorkManager￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentAddress￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f ,￨f final￨f ModelNode￨f node￨f ,￨f boolean￨f defaultWm￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseBeanValidation￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseCcm￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseBootstrapContexts￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentAddress￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f public￨f String￨f rawElementText￨f (￨f XMLStreamReader￨f reader￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f public￨f String￨f rawAttributeText￨f (￨f XMLStreamReader￨p reader￨p ,￨p String￨p attributeName￨p )￨f {￨f }￨f }￨d }￨d
public￨d public￨f void￨f registerCustomEditor￨f (￨f Class￨p requiredType￨p ,￨p Class￨p <￨p ?￨p extends￨p PropertyEditor￨p >￨p propertyEditorClass￨p )￨f {￨f }￨f public￨f void￨f copyRegisteredEditorsTo￨f (￨f PropertyEditorRegistry￨p registry￨p )￨f {￨f }￨f public￨f Map￨f <￨f Class￨f ,￨f Class￨f <￨f ?￨f extends￨f PropertyEditor￨f >￨f >￨f getCustomEditors￨f (￨f )￨f {￨f }￨f public￨f void￨f setTypeConverter￨f (￨f TypeConverter￨p typeConverter￨p )￨f {￨f }￨f protected￨f TypeConverter￨f getCustomTypeConverter￨f (￨f )￨f {￨f }￨f public￨f TypeConverter￨f getTypeConverter￨f (￨f )￨f {￨f }￨f public￨f void￨f addEmbeddedValueResolver￨f (￨f StringValueResolver￨p valueResolver￨p )￨f {￨f }￨f public￨f String￨f resolveEmbeddedValue￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f void￨f addBeanPostProcessor￨f (￨f BeanPostProcessor￨p beanPostProcessor￨p )￨f {￨f }￨f public￨f int￨f getBeanPostProcessorCount￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f BeanPostProcessor￨f >￨f getBeanPostProcessors￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f hasInstantiationAwareBeanPostProcessors￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f hasDestructionAwareBeanPostProcessors￨f (￨f )￨f {￨f }￨f public￨f void￨f registerScope￨f (￨f String￨p scopeName￨p ,￨p Scope￨p scope￨p )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getRegisteredScopeNames￨f (￨f )￨f {￨f }￨f public￨f Scope￨f getRegisteredScope￨f (￨f String￨p scopeName￨p )￨f {￨f }￨f public￨f void￨f setSecurityContextProvider￨f (￨f SecurityContextProvider￨p securityProvider￨p )￨f {￨f }￨f @￨f Override￨f public￨f AccessControlContext￨f getAccessControlContext￨f (￨f )￨f {￨f }￨f public￨f void￨f copyConfigurationFrom￨f (￨f ConfigurableBeanFactory￨p otherFactory￨p )￨f {￨f }￨f public￨f BeanDefinition￨f getMergedBeanDefinition￨f (￨f String￨f name￨f )￨f throws￨f BeansException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFactoryBean￨f (￨f String￨f name￨f )￨f throws￨f NoSuchBeanDefinitionException￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f void￨f beforePrototypeCreation￨f (￨f String￨p beanName￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f void￨f afterPrototypeCreation￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f final￨f boolean￨f isPrototypeCurrentlyInCreation￨f (￨f String￨p beanName￨p )￨f {￨f }￨f public￨f boolean￨f isCurrentlyInCreation￨f (￨f String￨p beanName￨p )￨f {￨f }￨f public￨f void￨f destroyBean￨f (￨f String￨p beanName￨p ,￨p Object￨p beanInstance￨p )￨f {￨f }￨f protected￨f void￨f destroyBean￨f (￨f String￨p beanName￨p ,￨p Object￨p beanInstance￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f public￨f void￨f destroyScopedBean￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f String￨f transformedBeanName￨f (￨f String￨p name￨p )￨f {￨f }￨f protected￨f String￨f originalBeanName￨f (￨f String￨p name￨p )￨f {￨f }￨f protected￨f void￨f initBeanWrapper￨f (￨f BeanWrapper￨p bw￨p )￨f {￨f }￨f protected￨f void￨f registerCustomEditors￨f (￨f PropertyEditorRegistry￨p registry￨p )￨f {￨f }￨f protected￨f RootBeanDefinition￨f getMergedLocalBeanDefinition￨f (￨f String￨f beanName￨f )￨f throws￨f BeansException￨f (￨f )￨f {￨f }￨f protected￨f RootBeanDefinition￨f getMergedBeanDefinition￨f (￨f String￨f beanName￨f ,￨f BeanDefinition￨f bd￨f )￨f throws￨f BeanDefinitionStoreException￨f (￨f )￨f {￨f }￨f protected￨f RootBeanDefinition￨f getMergedBeanDefinition￨f (￨f String￨f beanName￨f ,￨f BeanDefinition￨f bd￨f ,￨f BeanDefinition￨f containingBd￨f )￨f throws￨f BeanDefinitionStoreException￨f (￨f )￨f {￨f synchronized￨f (￨f this￨p .￨p mergedBeanDefinitions￨p )￨f {￨f RootBeanDefinition￨e mbd￨e =￨e null￨e ;￨e if￨j (￨j containingBd￨c ==￨c null￨c )￨j {￨j mbd￨e =￨e this￨e .￨e mergedBeanDefinitions￨e .￨e get￨e (￨e beanName￨e )￨e ;￨e }￨j if￨j (￨j mbd￨c ==￨c null￨c )￨j {￨j if￨j (￨j (￨c bd￨c .￨c getParentName￨c (￨c )￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j bd￨c instanceof￨c RootBeanDefinition￨c )￨j {￨j mbd￨e =￨e (￨e (￨e RootBeanDefinition￨e )￨e (￨e bd￨e )￨e )￨e .￨e cloneBeanDefinition￨e (￨e )￨e ;￨e }￨j else￨j {￨j mbd￨e =￨e new￨e RootBeanDefinition￨e (￨e bd￨e )￨e ;￨e }￨j }￨j else￨j {￨j BeanDefinition￨e pbd￨e ;￨e try￨f (￨f )￨f {￨f String￨e parentBeanName￨e =￨e transformedBeanName￨e (￨e bd￨e .￨e getParentName￨e (￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c beanName￨c .￨c equals￨c (￨c parentBeanName￨c )￨c )￨c )￨j {￨j pbd￨e =￨e getMergedBeanDefinition￨e (￨e parentBeanName￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j (￨c getParentBeanFactory￨c (￨c )￨c )￨c instanceof￨c ConfigurableBeanFactory￨c )￨j {￨j pbd￨e =￨e (￨e (￨e ConfigurableBeanFactory￨e )￨e (￨e getParentBeanFactory￨e (￨e )￨e )￨e )￨e .￨e getMergedBeanDefinition￨e (￨e parentBeanName￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e NoSuchBeanDefinitionException￨e (￨e bd￨e .￨e getParentName￨e (￨e )￨e ,￨e (￨e (￨e (￨e (￨e "Parent<seq2seq4repair_space>name<seq2seq4repair_space>'"￨e +￨e (￨e bd￨e .￨e getParentName￨e (￨e )￨e )￨e )￨e +￨e "'<seq2seq4repair_space>is<seq2seq4repair_space>equal<seq2seq4repair_space>to<seq2seq4repair_space>bean<seq2seq4repair_space>name<seq2seq4repair_space>'"￨e )￨e +￨e beanName￨e )￨e +￨e "':<seq2seq4repair_space>cannot<seq2seq4repair_space>be<seq2seq4repair_space>resolved<seq2seq4repair_space>without<seq2seq4repair_space>an<seq2seq4repair_space>AbstractBeanFactory<seq2seq4repair_space>parent"￨e )￨e )￨e ;￨e }￨j }￨j }￨f catch￨f (￨f NoSuchBeanDefinitionException￨p ex￨p )￨f {￨f throw￨e new￨e BeanDefinitionStoreException￨e (￨e bd￨e .￨e getResourceDescription￨e (￨e )￨e ,￨e beanName￨e ,￨e (￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>parent<seq2seq4repair_space>bean<seq2seq4repair_space>definition<seq2seq4repair_space>'"￨e +￨e (￨e bd￨e .￨e getParentName￨e (￨e )￨e )￨e )￨e +￨e "'"￨e )￨e ,￨e ex￨e )￨e ;￨e }￨f mbd￨e =￨e new￨e RootBeanDefinition￨e (￨e pbd￨e )￨e ;￨e mbd￨e .￨e overrideFrom￨e (￨e bd￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b mbd￨b .￨b getScope￨b (￨b )￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b mbd￨e .￨e setScope￨e (￨e SCOPE_SINGLETON￨e )￨e ;￨e if￨j (￨j (￨c (￨c containingBd￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c containingBd￨c .￨c isSingleton￨c (￨c )￨c )￨c )￨c )￨c &&￨c (￨c mbd￨c .￨c isSingleton￨c (￨c )￨c )￨c )￨j {￨j mbd￨e .￨e setScope￨e (￨e containingBd￨e .￨e getScope￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c (￨c containingBd￨c ==￨c null￨c )￨c &&￨c (￨c isCacheBeanMetadata￨c (￨c )￨c )￨c )￨c &&￨c (￨c isBeanEligibleForMetadataCaching￨c (￨c beanName￨c )￨c )￨c )￨j {￨j this￨e .￨e mergedBeanDefinitions￨e .￨e put￨e (￨e beanName￨e ,￨e mbd￨e )￨e ;￨e }￨j }￨j return￨e mbd￨e ;￨e }￨f }￨f protected￨f void￨f checkMergedBeanDefinition￨f (￨f RootBeanDefinition￨f mbd￨f ,￨f String￨f beanName￨f ,￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f BeanDefinitionStoreException￨f (￨f )￨f {￨f }￨f protected￨f void￨f clearMergedBeanDefinition￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f Class￨f resolveBeanClass￨f (￨f RootBeanDefinition￨p mbd￨p ,￨p String￨p beanName￨p )￨f {￨f }￨f protected￨f Class￨f resolveBeanClass￨f (￨f final￨f RootBeanDefinition￨f mbd￨f ,￨f String￨f beanName￨f ,￨f final￨f Class￨f [￨f ]￨f typesToMatch￨f )￨f throws￨f CannotLoadBeanClassException￨f (￨f )￨f {￨f }￨f private￨f Class￨f doResolveBeanClass￨f (￨f final￨f RootBeanDefinition￨f mbd￨f ,￨f final￨f Class￨f [￨f ]￨f typesToMatch￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f protected￨f Object￨f evaluateBeanDefinitionString￨f (￨f String￨p value￨p ,￨p BeanDefinition￨p beanDefinition￨p )￨f {￨f }￨f protected￨f Class￨f predictBeanType￨f (￨f String￨p beanName￨p ,￨p RootBeanDefinition￨p mbd￨p ,￨p Class￨p [￨p ]￨p typesToMatch￨p )￨f {￨f }￨f protected￨f boolean￨f isFactoryBean￨f (￨f String￨p beanName￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f protected￨f Class￨f getTypeForFactoryBean￨f (￨f String￨p beanName￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f protected￨f void￨f markBeanAsCreated￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f boolean￨f isBeanEligibleForMetadataCaching￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f boolean￨f removeSingletonIfCreatedForTypeCheckOnly￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f Object￨f getObjectForBeanInstance￨f (￨f Object￨p beanInstance￨p ,￨p String￨p name￨p ,￨p String￨p beanName￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f public￨f boolean￨f isBeanNameInUse￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f boolean￨f requiresDestruction￨f (￨f Object￨p bean￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f protected￨f void￨f registerDisposableBeanIfNecessary￨f (￨f String￨p beanName￨p ,￨p Object￨p bean￨p ,￨p RootBeanDefinition￨p mbd￨p )￨f {￨f }￨f protected￨f abstract￨f boolean￨f containsBeanDefinition￨f (￨f String￨p beanName￨p )￨f {￨f }￨f protected￨f abstract￨f BeanDefinition￨f getBeanDefinition￨f (￨f String￨f beanName￨f )￨f throws￨f BeansException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f Object￨f createBean￨f (￨f String￨f beanName￨f ,￨f RootBeanDefinition￨f mbd￨f ,￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f BeanCreationException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractType￨d implements￨d Comparator￨d <￨d byte￨d [￨d ]￨d >￨d {￨d public￨f abstract￨f String￨f getString￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f void￨f validate￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f Comparator￨f <￨f byte￨f [￨f ]￨f >￨f getReverseComparator￨f (￨f )￨f {￨f }￨f public￨f String￨f getString￨f (￨f Collection￨p <￨p byte￨p [￨p ]￨p >￨p names￨p )￨f {￨f }￨f public￨f String￨f getColumnsString￨f (￨f Collection￨p <￨p IColumn￨p >￨p columns￨p )￨f {￨f StringBuilder￨e builder￨e =￨e new￨e StringBuilder￨e (￨e )￨e ;￨e for￨l (￨l IColumn￨c column￨c :￨c columns￨c )￨l {￨l <START_BUG>￨b builder￨b .￨b append￨b (￨b getString￨b (￨b column￨b .￨b name￨b (￨b )￨b )￨b )￨b .￨b append￨b (￨b ","￨b )￨b ;￨b <END_BUG>￨b }￨l return￨e builder￨e .￨e toString￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d ActionAddOperation￨d extends￨d UMLChangeAction￨d {￨d public￨e static￨e ActionAddOperation￨e SINGLETON￨e =￨e new￨e ActionAddOperation￨e (￨e )￨e ;￨e public￨f ActionAddOperation￨f (￨f )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p ae￨p )￨f {￨f ProjectBrowser￨e pb￨e =￨e ProjectBrowser￨e .￨e getInstance￨e (￨e )￨e ;￨e Project￨e p￨e =￨e ProjectManager￨e .￨e getManager￨e (￨e )￨e .￨e getCurrentProject￨e (￨e )￨e ;￨e Object￨e target￨e =￨e TargetManager￨e .￨e getInstance￨e (￨e )￨e .￨e getModelTarget￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c target￨c instanceof￨c MClassifier￨c )￨c )￨j {￨j return￨e ;￨e }￨j MClassifier￨e cls￨e =￨e (￨e (￨e MClassifier￨e )￨e (￨e target￨e )￨e )￨e ;￨e MOperation￨e oper￨e =￨e UmlFactory￨e .￨e getFactory￨e (￨e )￨e .￨e getCore￨e (￨e )￨e .￨e buildOperation￨e (￨e cls￨e )￨e ;￨e <START_BUG>￨b pb￨b .￨b setTarget￨b (￨b oper￨b )￨b ;￨b <END_BUG>￨b Iterator￨e it￨e =￨e pb￨e .￨e getEditorPane￨e (￨e )￨e .￨e findPresentationsFor￨e (￨e cls￨e ,￨e p￨e .￨e getDiagrams￨e (￨e )￨e )￨e .￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l it￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l MElementListener￨e listener￨e =￨e (￨e (￨e MElementListener￨e )￨e (￨e it￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e UmlModelEventPump￨e .￨e getPump￨e (￨e )￨e .￨e removeModelEventListener￨e (￨e listener￨e ,￨e oper￨e )￨e ;￨e UmlModelEventPump￨e .￨e getPump￨e (￨e )￨e .￨e addModelEventListener￨e (￨e listener￨e ,￨e oper￨e )￨e ;￨e }￨l super￨e .￨e actionPerformed￨e (￨e ae￨e )￨e ;￨e }￨f public￨f boolean￨f shouldBeEnabled￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractDefinition￨d extends￨d SyntaxElement￨d implements￨d XpandDefinition￨d {￨d private￨e Template￨e owner￨e =￨e null￨e ;￨e private￨e DeclaredParameter￨e [￨e ]￨e params￨e ;￨e private￨e Identifier￨e name￨e ;￨e private￨e Identifier￨e type￨e ;￨e private￨e Statement￨e [￨e ]￨e body￨e ;￨e protected￨e String￨e _stringRepresentation￨e =￨e null￨e ;￨e protected￨e boolean￨e wildParams￨e =￨e false￨e ;￨e public￨f AbstractDefinition￨f (￨f final￨p Identifier￨p name￨p ,￨p final￨p Identifier￨p type￨p ,￨p final￨p DeclaredParameter￨p [￨p ]￨p params￨p ,￨p final￨p Statement￨p [￨p ]￨p body￨p )￨f {￨f }￨f public￨f XpandResource￨f getOwner￨f (￨f )￨f {￨f }￨f public￨f void￨f setOwner￨f (￨f final￨p Template￨p owner￨p )￨f {￨f }￨f public￨f DeclaredParameter￨f [￨f ]￨f getParams￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f DeclaredParameter￨f >￨f getParamsAsList￨f (￨f )￨f {￨f }￨f public￨f Identifier￨f getType￨f (￨f )￨f {￨f }￨f public￨f String￨f getTargetType￨f (￨f )￨f {￨f }￨f public￨f Identifier￨f getDefName￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f String￨f getQualifiedName￨f (￨f )￨f {￨f }￨f public￨f String￨f getParamString￨f (￨f boolean￨p typesOnly￨p )￨f {￨f if￨j (￨j (￨c (￨c params￨c )￨c ==￨c null￨c )￨c ||￨c (￨c (￨c params￨c .￨c length￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e wildParams￨e ?￨e "(*)"￨e :￨e ""￨e ;￨e }￨j <START_BUG>￨b final￨b StringBuffer￨b buff￨b =￨b new￨b StringBuffer￨b (￨b "("￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c params￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l final￨e DeclaredParameter￨e p￨e =￨e params￨e [￨e i￨e ]￨e ;￨e buff￨e .￨e append￨e (￨e p￨e .￨e getType￨e (￨e )￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e if￨j (￨j !￨c typesOnly￨c )￨j {￨j buff￨e .￨e append￨e (￨e "<seq2seq4repair_space>"￨e )￨e .￨e append￨e (￨e p￨e .￨e getName￨e (￨e )￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c i￨c +￨c 1￨c )￨c <￨c (￨c params￨c .￨c length￨c )￨c )￨j {￨j buff￨e .￨e append￨e (￨e ","￨e )￨e ;￨e }￨j }￨l if￨j (￨j wildParams￨c )￨j {￨j buff￨e .￨e append￨e (￨e ",*"￨e )￨e ;￨e }￨j return￨e buff￨e .￨e append￨e (￨e ")"￨e )￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f Statement￨f [￨f ]￨f getBody￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f Statement￨f >￨f getBodyAsList￨f (￨f )￨f {￨f }￨f public￨f void￨f analyze￨f (￨f XpandExecutionContext￨p ctx￨p ,￨p final￨p Set￨p <￨p AnalysationIssue￨p >￨p issues￨p )￨f {￨f }￨f public￨f void￨f evaluate￨f (￨f XpandExecutionContext￨p ctx￨p ,￨p Object￨p _this￨p ,￨p Object￨p ...￨p params￨p )￨f {￨f }￨f protected￨f XpandExecutionContext￨f prepareDeclaredParameters￨f (￨f Object￨p _this￨p ,￨p XpandExecutionContext￨p context￨p ,￨p Object￨p ...￨p params￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p obj￨p )￨f {￨f }￨f }￨d
public￨d class￨d ConfigurationTest￨d extends￨d AbstractTasklet￨d implements￨d Configurable￨d {￨d protected￨e String￨e m_message￨e ;￨e public￨f void￨f configure￨f (￨f final￨f Configuration￨f configuration￨f )￨f throws￨f ConfigurationException￨f (￨f )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f throws￨f AntException￨f (￨f )￨f {￨f <START_BUG>￨b getLogger￨b (￨b )￨b .￨b info￨b (￨b m_message￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d XSElementDecl￨d {￨d public￨e static￨e final￨e short￨e NO_CONSTRAINT￨e =￨e 0￨e ;￨e public￨e static￨e final￨e short￨e DEFAULT_VALUE￨e =￨e 1￨e ;￨e public￨e static￨e final￨e short￨e FIXED_VALUE￨e =￨e 2￨e ;￨e public￨e String￨e fName￨e =￨e null￨e ;￨e public￨e String￨e fTargetNamespace￨e =￨e null￨e ;￨e public￨e XSTypeDecl￨e fType￨e =￨e null￨e ;￨e short￨e fMiscFlags￨e =￨e 0￨e ;￨e public￨e short￨e fBlock￨e =￨e SchemaSymbols￨e .￨e EMPTY_SET￨e ;￨e public￨e short￨e fFinal￨e =￨e SchemaSymbols￨e .￨e EMPTY_SET￨e ;￨e public￨e Object￨e fDefault￨e =￨e null￨e ;￨e public￨e XSElementDecl￨e fSubGroup￨e =￨e null￨e ;￨e static￨e final￨e int￨e INITIAL_SIZE￨e =￨e 2￨e ;￨e int￨e fIDCPos￨e =￨e 0￨e ;￨e IdentityConstraint￨e [￨e ]￨e fIDConstraints￨e =￨e new￨e IdentityConstraint￨e [￨e XSElementDecl￨e .￨e INITIAL_SIZE￨e ]￨e ;￨e private￨e static￨e final￨e short￨e CONSTRAINT_MASK￨e =￨e 3￨e ;￨e private￨e static￨e final￨e short￨e NILLABLE￨e =￨e 4￨e ;￨e private￨e static￨e final￨e short￨e ABSTRACT￨e =￨e 8￨e ;￨e public￨f short￨f getConstraintType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNillable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAbstract￨f (￨f )￨f {￨f }￨f public￨f void￨f setConstraintType￨f (￨f short￨p constraintType￨p )￨f {￨f }￨f public￨f void￨f setIsNillable￨f (￨f )￨f {￨f }￨f public￨f void￨f setIsAbstract￨f (￨f )￨f {￨f }￨f public￨f void￨f addIDConstaint￨f (￨f IdentityConstraint￨p idc￨p )￨f {￨f }￨f public￨f IdentityConstraint￨f [￨f ]￨f getIDConstraints￨f (￨f )￨f {￨f }￨f static￨f final￨f IdentityConstraint￨f [￨f ]￨f resize￨f (￨f IdentityConstraint￨p [￨p ]￨p oldArray￨p ,￨p int￨p newSize￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b (￨b (￨b fTargetNamespace￨b )￨b +￨b ","￨b )￨b +￨b (￨b fName￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d {￨f }￨f public￨f abstract￨f MemberValuePair￨f [￨f ]￨f memberValuePairs￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f this￨e .￨e constant￨e =￨e NotAConstant￨e ;￨e TypeBinding￨e typeBinding￨e =￨e this￨e .￨e type￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e if￨j (￨j typeBinding￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j this￨e .￨e resolvedType￨e =￨e typeBinding￨e ;￨e if￨j (￨j !￨c (￨c typeBinding￨c .￨c isAnnotationType￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e typeMismatchError￨e (￨e typeBinding￨e ,￨e scope￨e .￨e getJavaLangAnnotationAnnotation￨e (￨e )￨e ,￨e this￨e .￨e type￨e )￨e ;￨e return￨e null￨e ;￨e }￨j ReferenceBinding￨e annotationType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e this￨e .￨e resolvedType￨e )￨e )￨e ;￨e MethodBinding￨e [￨e ]￨e methods￨e =￨e annotationType￨e .￨e methods￨e (￨e )￨e ;￨e MemberValuePair￨e [￨e ]￨e valuePairs￨e =￨e memberValuePairs￨e (￨e )￨e ;￨e MemberValuePair￨e valueAttribute￨e =￨e null￨e ;￨e MemberValuePair￨e [￨e ]￨e usedValuePairs￨e ;￨e int￨e pairsLength￨e =￨e valuePairs￨e .￨e length￨e ;￨e System￨e .￨e arraycopy￨e (￨e valuePairs￨e ,￨e 0￨e ,￨e (￨e usedValuePairs￨e =￨e new￨e MemberValuePair￨e [￨e pairsLength￨e ]￨e )￨e ,￨e 0￨e ,￨e pairsLength￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c requiredLength￨c =￨c methods￨c .￨c length￨c ;￨c i￨c <￨c requiredLength￨c ;￨c i￨c ++￨c )￨l {￨l MethodBinding￨e method￨e =￨e methods￨e [￨e i￨e ]￨e ;￨e char￨e [￨e ]￨e selector￨e =￨e method￨e .￨e selector￨e ;￨e boolean￨e foundValue￨e =￨e false￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c pairsLength￨c ;￨c j￨c ++￨c )￨l {￨l MemberValuePair￨e valuePair￨e =￨e usedValuePairs￨e [￨e j￨e ]￨e ;￨e if￨j (￨j valuePair￨c ==￨c null￨c )￨j {￨j continue￨e nextPair￨e ;￨e }￨j char￨e [￨e ]￨e memberName￨e =￨e valuePair￨e .￨e name￨e ;￨e if￨j (￨j CharOperation￨c .￨c equals￨c (￨c memberName￨c ,￨c selector￨c )￨c )￨j {￨j if￨j (￨j (￨c valueAttribute￨c ==￨c null￨c )￨c &&￨c (￨c CharOperation￨c .￨c equals￨c (￨c memberName￨c ,￨c TypeConstants￨c .￨c VALUE￨c )￨c )￨c )￨j {￨j valueAttribute￨e =￨e valuePair￨e ;￨e }￨j valuePair￨e .￨e binding￨e =￨e method￨e ;￨e usedValuePairs￨e [￨e j￨e ]￨e =￨e null￨e ;￨e foundValue￨e =￨e true￨e ;￨e boolean￨e foundDuplicate￨e =￨e false￨e ;￨e for￨l (￨l int￨c k￨c =￨c j￨c +￨c 1￨c ;￨c k￨c <￨c pairsLength￨c ;￨c k￨c ++￨c )￨l {￨l if￨j (￨j CharOperation￨c .￨c equals￨c (￨c usedValuePairs￨c [￨c k￨c ]￨c .￨c name￨c ,￨c selector￨c )￨c )￨j {￨j foundDuplicate￨e =￨e true￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateAnnotationValue￨e (￨e annotationType￨e ,￨e usedValuePairs￨e [￨e k￨e ]￨e )￨e ;￨e usedValuePairs￨e [￨e k￨e ]￨e .￨e binding￨e =￨e method￨e ;￨e usedValuePairs￨e [￨e k￨e ]￨e =￨e null￨e ;￨e }￨j }￨l if￨j (￨j foundDuplicate￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateAnnotationValue￨e (￨e annotationType￨e ,￨e valuePair￨e )￨e ;￨e continue￨e nextMember￨e ;￨e }￨j valuePair￨e .￨e resolveTypeExpecting￨e (￨e scope￨e ,￨e method￨e .￨e returnType￨e )￨e ;￨e }￨j }￨l if￨j (￨j (￨c !￨c foundValue￨c )￨c &&￨c (￨c (￨c (￨c method￨c .￨c modifiers￨c )￨c &￨c (￨c AccAnnotationDefault￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e missingValueForAnnotationMember￨e (￨e this￨e ,￨e method￨e .￨e selector￨e )￨e ;￨e }￨j }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c pairsLength￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c usedValuePairs￨c [￨c i￨c ]￨c )￨c !=￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e undefinedAnnotationValue￨e (￨e annotationType￨e ,￨e usedValuePairs￨e [￨e i￨e ]￨e )￨e ;￨e }￨j }￨l long￨e tagBits￨e =￨e detectStandardAnnotation￨e (￨e scope￨e ,￨e annotationType￨e ,￨e valueAttribute￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c recipient￨c )￨c !=￨c null￨c )￨j {￨j if￨j (￨j tagBits￨c !=￨c 0￨c )￨j {￨j switch￨s (￨s this￨c .￨c recipient￨c .￨c kind￨c (￨c )￨c )￨s {￨s case￨c Binding￨c .￨c PACKAGE￨c :￨c break￨e ;￨e case￨c Binding￨c .￨c TYPE￨c :￨c case￨c Binding￨c .￨c GENERIC_TYPE￨c :￨c case￨c Binding￨c .￨c TYPE_PARAMETER￨c :￨c (￨e (￨e ReferenceBinding￨e )￨e (￨e this￨e .￨e recipient￨e )￨e )￨e .￨e tagBits￨e |=￨e tagBits￨e ;￨e break￨e ;￨e case￨c Binding￨c .￨c METHOD￨c :￨c (￨e (￨e MethodBinding￨e )￨e (￨e this￨e .￨e recipient￨e )￨e )￨e .￨e tagBits￨e |=￨e tagBits￨e ;￨e break￨e ;￨e case￨c Binding￨c .￨c FIELD￨c :￨c (￨e (￨e FieldBinding￨e )￨e (￨e this￨e .￨e recipient￨e )￨e )￨e .￨e tagBits￨e |=￨e tagBits￨e ;￨e break￨e ;￨e case￨c Binding￨c .￨c LOCAL￨c :￨c (￨e (￨e LocalVariableBinding￨e )￨e (￨e this￨e .￨e recipient￨e )￨e )￨e .￨e tagBits￨e |=￨e tagBits￨e ;￨e break￨e ;￨e }￨s }￨j <START_BUG>￨b long￨b metaTagBits￨b =￨b annotationType￨b .￨b tagBits￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationTargetMASK￨c )￨c )￨c ==￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j switch￨s (￨s recipient￨c .￨c kind￨c (￨c )￨c )￨s {￨s case￨c Binding￨c .￨c PACKAGE￨c :￨c if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForPackage￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c TYPE￨c :￨c case￨c Binding￨c .￨c GENERIC_TYPE￨c :￨c if￨j (￨j (￨c (￨c ReferenceBinding￨c )￨c (￨c this￨c .￨c recipient￨c )￨c )￨c .￨c isAnnotationType￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c metaTagBits￨c &￨c (￨c (￨c TagBits￨c .￨c AnnotationForAnnotationType￨c )￨c |￨c (￨c TagBits￨c .￨c AnnotationForType￨c )￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForType￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c METHOD￨c :￨c if￨j (￨j (￨c (￨c MethodBinding￨c )￨c (￨c this￨c .￨c recipient￨c )￨c )￨c .￨c isConstructor￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForConstructor￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForMethod￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c FIELD￨c :￨c if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForField￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c LOCAL￨c :￨c if￨j (￨j (￨c (￨c LocalVariableBinding￨c )￨c (￨c this￨c .￨c recipient￨c )￨c )￨c .￨c isArgument￨c )￨j {￨j if￨j (￨j (￨c metaTagBits￨c &￨c (￨c TagBits￨c .￨c AnnotationForParameter￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c (￨c annotationType￨c .￨c tagBits￨c )￨c &￨c (￨c TagBits￨c .￨c AnnotationForLocalVariable￨c )￨c )￨c !=￨c 0￨c )￨j {￨j break￨e checkTargetCompatibility￨e ;￨e }￨j break￨e ;￨e }￨s scope￨e .￨e problemReporter￨e (￨e )￨e .￨e disallowedTargetForAnnotation￨e (￨e this￨e )￨e ;￨e }￨j return￨e this￨e .￨e resolvedType￨e ;￨e }￨f public￨f abstract￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f abstract￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p CompilationUnitScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d CheckForNewMessagesCommand￨d extends￨d FolderCommand￨d {￨d FolderCommandAdapter￨e adapter￨e ;￨e IMAPFolder￨e inboxFolder￨e ;￨e boolean￨e needGUIUpdate￨e ;￨e public￨f CheckForNewMessagesCommand￨f (￨f DefaultCommandReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f public￨f CheckForNewMessagesCommand￨f (￨f AbstractFrameController￨p frame￨p ,￨p DefaultCommandReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f Worker￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f FolderCommandReference￨e [￨e ]￨e references￨e =￨e (￨e (￨e FolderCommandReference￨e [￨e ]￨e )￨e (￨e getReferences￨e (￨e )￨e )￨e )￨e ;￨e adapter￨e =￨e new￨e FolderCommandAdapter￨e (￨e references￨e )￨e ;￨e FolderCommandReference￨e [￨e ]￨e r￨e =￨e adapter￨e .￨e getSourceFolderReferences￨e (￨e )￨e ;￨e IMAPRootFolder￨e srcFolder￨e =￨e (￨e (￨e IMAPRootFolder￨e )￨e (￨e r￨e [￨e 0￨e ]￨e .￨e getFolder￨e (￨e )￨e )￨e )￨e ;￨e (￨e (￨e StatusObservableImpl￨e )￨e (￨e srcFolder￨e .￨e getObservable￨e (￨e )￨e )￨e )￨e .￨e setWorker￨e (￨e worker￨e )￨e ;￨e <START_BUG>￨b inboxFolder￨b =￨b (￨b (￨b IMAPFolder￨b )￨b (￨b srcFolder￨b .￨b getChild￨b (￨b "Inbox"￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b int￨e total￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getExists￨e (￨e )￨e ;￨e int￨e recent￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getRecent￨e (￨e )￨e ;￨e int￨e unseen￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getUnseen￨e (￨e )￨e ;￨e inboxFolder￨e .￨e getHeaderList￨e (￨e )￨e ;￨e int￨e newTotal￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getExists￨e (￨e )￨e ;￨e int￨e newRecent￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getRecent￨e (￨e )￨e ;￨e int￨e newUnseen￨e =￨e inboxFolder￨e .￨e getMessageFolderInfo￨e (￨e )￨e .￨e getUnseen￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c newRecent￨c !=￨c recent￨c )￨c ||￨c (￨c newTotal￨c !=￨c total￨c )￨c )￨c ||￨c (￨c newUnseen￨c !=￨c unseen￨c )￨c )￨j {￨j needGUIUpdate￨e =￨e true￨e ;￨e ImapItem￨e item￨e =￨e srcFolder￨e .￨e getAccountItem￨e (￨e )￨e .￨e getImapItem￨e (￨e )￨e ;￨e if￨j (￨j (￨c newRecent￨c !=￨c recent￨c )￨c &&￨c (￨c item￨c .￨c getBoolean￨c (￨c "enable_sound"￨c )￨c )￨c )￨j {￨j String￨e file￨e =￨e item￨e .￨e get￨e (￨e "sound_file"￨e )￨e ;￨e log￨e .￨e info￨e (￨e (￨e "playing<seq2seq4repair_space>sound<seq2seq4repair_space>file="￨e +￨e file￨e )￨e )￨e ;￨e if￨j (￨j file￨c .￨c equalsIgnoreCase￨c (￨c "default"￨c )￨c )￨j {￨j PlaySound￨e .￨e play￨e (￨e "newmail.wav"￨e )￨e ;￨e }￨j else￨j {￨j try￨f (￨f )￨f {￨f PlaySound￨e .￨e play￨e (￨e new￨e URL￨e (￨e file￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨j }￨j }￨j }￨f public￨f void￨f updateGUI￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Scrollable￨d extends￨d Control￨d {￨d ScrollBar￨e horizontalBar￨e ;￨e ScrollBar￨e verticalBar￨e ;￨e int￨e scrolledHandle￨e ;￨e Scrollable￨f (￨f )￨f {￨f }￨f public￨f Scrollable￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f int￨f clientHandle￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f ScrollBar￨f createScrollBar￨f (￨f int￨p type￨p )￨f {￨f }￨f void￨f createWidget￨f (￨f )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f int￨f findScrollViewer￨f (￨f int￨p current￨p ,￨p int￨p scrollViewerType￨p )￨f {￨f }￨f public￨f Rectangle￨f getClientArea￨f (￨f )￨f {￨f }￨f public￨f ScrollBar￨f getHorizontalBar￨f (￨f )￨f {￨f }￨f int￨f getScrollBarHandle￨f (￨f int￨p style￨p )￨f {￨f }￨f public￨f ScrollBar￨f getVerticalBar￨f (￨f )￨f {￨f }￨f void￨f HandlePreviewMouseWheel￨f (￨f int￨p sender￨p ,￨p int￨p e￨p )￨f {￨f super￨e .￨e HandlePreviewMouseWheel￨e (￨e sender￨e ,￨e e￨e )￨e ;￨e if￨j (￨j !￨c (￨c checkEvent￨c (￨c e￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c (￨c state￨c )￨c &￨c (￨c CANVAS￨c )￨c )￨c !=￨c 0￨c )￨j {￨j if￨j (￨j (￨c verticalBar￨c )￨c !=￨c null￨c )￨j {￨j int￨e vHandle￨e =￨e verticalBar￨e .￨e handle￨e ;￨e int￨e delta￨e =￨e OS￨e .￨e MouseWheelEventArgs_Delta￨e (￨e e￨e )￨e ;￨e int￨e lines￨e =￨e OS￨e .￨e SystemParameters_WheelScrollLines￨e (￨e )￨e ;￨e double￨e value￨e =￨e OS￨e .￨e RangeBase_Value￨e (￨e vHandle￨e )￨e ;￨e double￨e newValue￨e =￨e value￨e ;￨e Event￨e event￨e =￨e new￨e Event￨e (￨e )￨e ;￨e if￨j (￨j lines￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j double￨e smallIncrement￨e =￨e OS￨e .￨e RangeBase_SmallChange￨e (￨e vHandle￨e )￨e ;￨e newValue￨e +=￨e (￨e smallIncrement￨e *￨e (￨e (￨e -￨e delta￨e )￨e /￨e 120￨e )￨e )￨e *￨e lines￨e ;￨e event￨e .￨e detail￨e =￨e (￨e delta￨e <￨e 0￨e )￨e ?￨e SWT￨e .￨e ARROW_DOWN￨e :￨e SWT￨e .￨e ARROW_UP￨e ;￨e }￨j else￨j {￨j double￨e largeIncrement￨e =￨e OS￨e .￨e RangeBase_LargeChange￨e (￨e vHandle￨e )￨e ;￨e newValue￨e +=￨e largeIncrement￨e *￨e (￨e (￨e -￨e delta￨e )￨e /￨e 120￨e )￨e ;￨e event￨e .￨e detail￨e =￨e (￨e delta￨e <￨e 0￨e )￨e ?￨e SWT￨e .￨e PAGE_DOWN￨e :￨e SWT￨e .￨e PAGE_UP￨e ;￨e }￨j OS￨e .￨e RangeBase_Value￨e (￨e vHandle￨e ,￨e newValue￨e )￨e ;￨e newValue￨e =￨e OS￨e .￨e RangeBase_Value￨e (￨e vHandle￨e )￨e ;￨e if￨j (￨j value￨c !=￨c newValue￨c )￨j {￨j <START_BUG>￨b verticalBar￨b .￨b sendEvent￨b (￨b Selection￨b )￨b ;￨b <END_BUG>￨b }￨j }￨j }￨j }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f int￨f topHandle￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestTimeLimitingCollector￨d extends￨d LuceneTestCase￨d {￨d private￨e static￨e final￨e int￨e SLOW_DOWN￨e =￨e 3￨e ;￨e private￨e static￨e final￨e long￨e TIME_ALLOWED￨e =￨e 17￨e *￨e (￨e TestTimeLimitingCollector￨e .￨e SLOW_DOWN￨e )￨e ;￨e private￨e static￨e final￨e double￨e MULTI_THREAD_SLACK￨e =￨e 7￨e ;￨e private￨e static￨e final￨e int￨e N_DOCS￨e =￨e 3000￨e ;￨e private￨e static￨e final￨e int￨e N_THREADS￨e =￨e 50￨e ;￨e private￨e IndexSearcher￨e searcher￨e ;￨e private￨e Directory￨e directory￨e ;￨e private￨e IndexReader￨e reader￨e ;￨e private￨e final￨e String￨e FIELD_NAME￨e =￨e "body"￨e ;￨e private￨e Query￨e query￨e ;￨e private￨e Counter￨e counter￨e ;￨e private￨e TimerThread￨e counterThread￨e ;￨e @￨f Override￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e counter￨e =￨e Counter￨e .￨e newCounter￨e (￨e true￨e )￨e ;￨e counterThread￨e =￨e new￨e TimerThread￨e (￨e counter￨e )￨e ;￨e counterThread￨e .￨e start￨e (￨e )￨e ;￨e final￨f String￨f [￨f ]￨f docText￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e directory￨e =￨e newDirectory￨e (￨e )￨e ;￨e RandomIndexWriter￨e iw￨e =￨e new￨e RandomIndexWriter￨e (￨e random￨e (￨e )￨e ,￨e directory￨e ,￨e newIndexWriterConfig￨e (￨e TEST_VERSION_CURRENT￨e ,￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e analysis￨e .￨e MockAnalyzer￨e (￨e random￨e (￨e )￨e )￨e )￨e .￨e setMergePolicy￨e (￨e newLogMergePolicy￨e (￨e )￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestTimeLimitingCollector￨c .￨c N_DOCS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l add￨e (￨e docText￨e [￨e (￨e i￨e %￨e (￨e docText￨e .￨e length￨e )￨e )￨e ]￨e ,￨e iw￨e )￨e ;￨e }￨l reader￨e =￨e iw￨e .￨e getReader￨e (￨e )￨e ;￨e <START_BUG>￨b iw￨b .￨b close￨b (￨b )￨b ;￨b <END_BUG>￨b searcher￨e =￨e newSearcher￨e (￨e reader￨e )￨e ;￨e BooleanQuery￨e booleanQuery￨e =￨e new￨e BooleanQuery￨e (￨e )￨e ;￨e booleanQuery￨e .￨e add￨e (￨e new￨e TermQuery￨e (￨e new￨e Term￨e (￨e FIELD_NAME￨e ,￨e "one"￨e )￨e )￨e ,￨e SHOULD￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 1￨c ;￨c i￨c <￨c (￨c docText￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e [￨e ]￨e docTextParts￨e =￨e docText￨e [￨e i￨e ]￨e .￨e split￨e (￨e "\\s+"￨e )￨e ;￨e for￨l (￨l String￨c docTextPart￨c :￨c docTextParts￨c )￨l {￨l booleanQuery￨e .￨e add￨e (￨e new￨e TermQuery￨e (￨e new￨e Term￨e (￨e FIELD_NAME￨e ,￨e docTextPart￨e )￨e )￨e ,￨e SHOULD￨e )￨e ;￨e }￨l }￨l query￨e =￨e booleanQuery￨e ;￨e searcher￨e .￨e search￨e (￨e query￨e ,￨e null￨e ,￨e 1000￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f add￨f (￨f String￨f value￨f ,￨f RandomIndexWriter￨f iw￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f search￨f (￨f Collector￨f collector￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearch￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestSearch￨f (￨f )￨f {￨f }￨f private￨f Collector￨f createTimedCollector￨f (￨f TestTimeLimitingCollector￨p .￨p MyHitCollector￨p hc￨p ,￨p long￨p timeAllowed￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f public￨f void￨f testTimeoutGreedy￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutNotGreedy￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestTimeout￨f (￨f boolean￨p multiThreaded￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f private￨f long￨f maxTime￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f private￨f String￨f maxTimeStr￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f public￨f void￨f testModifyResolution￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearchMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestMultiThreads￨f (￨f final￨f boolean￨f withTimeout￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d class￨d MyHitCollector￨d extends￨d SimpleCollector￨d {￨d private￨e final￨e BitSet￨e bits￨e =￨e new￨e BitSet￨e (￨e )￨e ;￨e private￨e int￨e slowdown￨e =￨e 0￨e ;￨e private￨e int￨e lastDocCollected￨e =￨e -￨e 1￨e ;￨e private￨e int￨e docBase￨e =￨e 0￨e ;￨e public￨f void￨f setSlowDown￨f (￨f int￨p milliseconds￨p )￨f {￨f }￨f public￨f int￨f hitCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getLastDocCollected￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setScorer￨f (￨f Scorer￨f scorer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f collect￨f (￨f final￨f int￨f doc￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f doSetNextReader￨f (￨f AtomicReaderContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f acceptsDocsOutOfOrder￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TypeDeclaration￨d extends￨d BodyDeclaration￨d {￨d private￨e static￨e final￨e int￨e LEGAL_MODIFIERS￨e =￨e (￨e (￨e (￨e (￨e (￨e (￨e Modifier￨e .￨e PUBLIC￨e )￨e |￨e (￨e Modifier￨e .￨e PRIVATE￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e PROTECTED￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STATIC￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e FINAL￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e ABSTRACT￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STRICTFP￨e )￨e ;￨e private￨e boolean￨e isInterface￨e =￨e false￨e ;￨e private￨e int￨e modifiers￨e =￨e Modifier￨e .￨e NONE￨e ;￨e private￨e SimpleName￨e typeName￨e =￨e null￨e ;￨e private￨e Name￨e optionalSuperclassName￨e =￨e null￨e ;￨e private￨d ASTNode￨d .￨d NodeList￨d superInterfaceNames￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d false￨d ,￨d Name￨d .￨d class￨d )￨d ;￨d private￨d ASTNode￨d .￨d NodeList￨d bodyDeclarations￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d true￨d ,￨d BodyDeclaration￨d .￨d class￨d )￨d ;￨d TypeDeclaration￨d (￨d AST￨d ast￨d )￨d {￨d }￨d ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f }￨f boolean￨f equalSubtrees￨f (￨f Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f boolean￨f isInterface￨f (￨f )￨f {￨f }￨f public￨f void￨f setInterface￨f (￨f boolean￨p isInterface￨p )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f )￨f {￨f }￨f public￨f void￨f setModifiers￨f (￨f int￨p modifiers￨p )￨f {￨f <START_BUG>￨b modifiers￨b &=￨b ~￨b (￨b IConstants￨b .￨b AccDeprecated￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c modifiers￨c &￨c (￨c ~￨c (￨c TypeDeclaration￨c .￨c LEGAL_MODIFIERS￨c )￨c )￨c )￨c !=￨c 0￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e )￨e ;￨e }￨j modifying￨e (￨e )￨e ;￨e this￨e .￨e modifiers￨e =￨e modifiers￨e ;￨e }￨f public￨f SimpleName￨f getName￨f (￨f )￨f {￨f }￨f public￨f void￨f setName￨f (￨f SimpleName￨p typeName￨p )￨f {￨f }￨f public￨f Name￨f getSuperclass￨f (￨f )￨f {￨f }￨f public￨f void￨f setSuperclass￨f (￨f Name￨p superclassName￨p )￨f {￨f }￨f public￨f List￨f superInterfaces￨f (￨f )￨f {￨f }￨f public￨f List￨f bodyDeclarations￨f (￨f )￨f {￨f }￨f public￨f SingleVariableDeclaration￨f [￨f ]￨f getFields￨f (￨f )￨f {￨f }￨f public￨f MethodDeclaration￨f [￨f ]￨f getMethods￨f (￨f )￨f {￨f }￨f public￨f TypeDeclaration￨f [￨f ]￨f getTypes￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPackageMemberTypeDeclaration￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMemberTypeDeclaration￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isLocalTypeDeclaration￨f (￨f )￨f {￨f }￨f public￨f ITypeBinding￨f resolveBinding￨f (￨f )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d LogFactoryImpl￨d implements￨d Configurable￨d ,￨d GenericConfigurable￨d ,￨d LogFactory￨d {￨d private￨d static￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d LogFactoryImpl￨d .￨d class￨d )￨d ;￨d public￨d static￨d final￨d String￨d TRACE_STR￨d =￨d LogFactoryImpl￨d .￨d _loc￨d .￨d get￨d (￨d "log-trace"￨d )￨d .￨d getMessage￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d INFO_STR￨d =￨d LogFactoryImpl￨d .￨d _loc￨d .￨d get￨d (￨d "log-info"￨d )￨d .￨d getMessage￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d WARN_STR￨d =￨d LogFactoryImpl￨d .￨d _loc￨d .￨d get￨d (￨d "log-warn"￨d )￨d .￨d getMessage￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d ERROR_STR￨d =￨d LogFactoryImpl￨d .￨d _loc￨d .￨d get￨d (￨d "log-error"￨d )￨d .￨d getMessage￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d FATAL_STR￨d =￨d LogFactoryImpl￨d .￨d _loc￨d .￨d get￨d (￨d "log-fatal"￨d )￨d .￨d getMessage￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d STDOUT￨d =￨d "stdout"￨d ;￨d public￨d static￨d final￨d String￨d STDERR￨d =￨d "stderr"￨d ;￨d private￨d static￨d final￨d String￨d NEWLINE￨d =￨d System￨d .￨d getProperty￨d (￨d "line.separator"￨d )￨d ;￨d protected￨d final￨d long￨d initializationMillis￨d ;￨d private￨d Map￨d _logs￨d =￨d new￨d ConcurrentHashMap￨d (￨d )￨d ;￨d private￨d short￨d _defaultLogLevel￨d =￨d Log￨d .￨d INFO￨d ;￨d private￨d Map￨d _configuredLevels￨d =￨d new￨d HashMap￨d (￨d )￨d ;￨d private￨d PrintStream￨d _out￨d =￨d System￨d .￨d err￨d ;￨d private￨d String￨d _diagContext￨d =￨d null￨d ;￨d private￨d boolean￨d _diagContextComputed￨d =￨d false￨d ;￨d private￨d Configuration￨d _conf￨d ;￨d public￨d LogFactoryImpl￨d (￨d )￨d {￨d }￨d public￨f Log￨f getLog￨f (￨f String￨p channel￨p )￨f {￨f }￨f protected￨f LogFactoryImpl￨f .￨f LogImpl￨f newLogImpl￨f (￨f )￨f {￨f }￨f public￨f void￨f setDefaultLevel￨f (￨f String￨p level￨p )￨f {￨f }￨f public￨f short￨f getDefaultLevel￨f (￨f )￨f {￨f }￨f public￨f void￨f setDefaultLevel￨f (￨f short￨p level￨p )￨f {￨f }￨f public￨f void￨f setDiagnosticContext￨f (￨f String￨p val￨p )￨f {￨f }￨f public￨f String￨f getDiagnosticContext￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c _diagContextComputed￨c )￨c )￨j {￨j <START_BUG>￨b if￨b (￨b (￨b _diagContext￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b _diagContext￨e =￨e _conf￨e .￨e getId￨e (￨e )￨e ;￨e if￨j (￨j ""￨c .￨c equals￨c (￨c _diagContext￨c )￨c )￨j {￨j _diagContext￨e =￨e null￨e ;￨e }￨j _diagContextComputed￨e =￨e true￨e ;￨e }￨j return￨e _diagContext￨e ;￨e }￨f public￨f void￨f setFile￨f (￨f String￨p file￨p )￨f {￨f }￨f public￨f PrintStream￨f getStream￨f (￨f )￨f {￨f }￨f public￨f void￨f setStream￨f (￨f PrintStream￨p stream￨p )￨f {￨f }￨f public￨f static￨f String￨f getLevelName￨f (￨f short￨p level￨p )￨f {￨f }￨f public￨f static￨f short￨f getLevel￨f (￨f String￨p str￨p )￨f {￨f }￨f public￨f void￨f setConfiguration￨f (￨f Configuration￨p conf￨p )￨f {￨f }￨f public￨f void￨f startConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f endConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f setInto￨f (￨f Options￨p opts￨p )￨f {￨f }￨f private￨f static￨f String￨f shorten￨f (￨f String￨p channel￨p )￨f {￨f }￨f public￨d class￨d LogImpl￨d extends￨d AbstractLog￨d {￨d private￨e short￨e _level￨e =￨e INFO￨e ;￨e private￨e String￨e _channel￨e ;￨e protected￨f boolean￨f isEnabled￨f (￨f short￨p level￨p )￨f {￨f }￨f protected￨f void￨f log￨f (￨f short￨p level￨p ,￨p String￨p message￨p ,￨p Throwable￨p t￨p )￨f {￨f }￨f protected￨f String￨f formatMessage￨f (￨f short￨p level￨p ,￨p String￨p message￨p ,￨p Throwable￨p t￨p )￨f {￨f }￨f private￨f long￨f getOffset￨f (￨f )￨f {￨f }￨f public￨f void￨f setChannel￨f (￨f String￨p val￨p )￨f {￨f }￨f public￨f String￨f getChannel￨f (￨f )￨f {￨f }￨f public￨f void￨f setLevel￨f (￨f short￨p val￨p )￨f {￨f }￨f public￨f short￨f getLevel￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d PoolOperations￨d implements￨d OperationStepHandler￨d {￨d private￨e final￨e PoolOperations￨e .￨e PoolMatcher￨e matcher￨e ;￨e protected￨f PoolOperations￨f (￨f PoolOperations￨p .￨p PoolMatcher￨p matcher￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e String￨e jndiName￨e ;￨e if￨j (￨j address￨c .￨c getElement￨c (￨c 0￨c )￨c .￨c getKey￨c (￨c )￨c .￨c equals￨c (￨c DEPLOYMENT￨c )￨c )￨j {￨j jndiName￨e =￨e address￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e }￨j else￨j {￨j jndiName￨e =￨e Util￨e .￨e getJndiName￨e (￨e context￨e .￨e readModel￨e (￨e EMPTY_ADDRESS￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b context￨b .￨b getType￨b (￨b )￨b )￨b ==￨b (￨b Type￨b .￨b SERVER￨b )￨b )￨b {￨b <END_BUG>￨b context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ServiceController￨e <￨e ?￨e >￨e managementRepoService￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e MANAGEMENT_REPOSITORY_SERVICE￨e )￨e ;￨e if￨j (￨j managementRepoService￨c !=￨c null￨c )￨j {￨j ModelNode￨e operationResult￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f final￨e ManagementRepository￨e repository￨e =￨e (￨e (￨e ManagementRepository￨e )￨e (￨e managementRepoService￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e final￨e List￨e <￨e Pool￨e >￨e pools￨e =￨e matcher￨e .￨e match￨e (￨e jndiName￨e ,￨e repository￨e )￨e ;￨e if￨j (￨j pools￨c .￨c isEmpty￨c (￨c )￨c )￨j {￨j throw￨e ConnectorMessages￨e .￨e MESSAGES￨e .￨e failedToMatchPool￨e (￨e jndiName￨e )￨e ;￨e }￨j for￨l (￨l Pool￨c pool￨c :￨c pools￨c )￨l {￨l operationResult￨e =￨e invokeCommandOn￨e (￨e pool￨e )￨e ;￨e }￨l }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e ConnectorMessages￨e .￨e MESSAGES￨e .￨e failedToInvokeOperation￨e (￨e e￨e .￨e getLocalizedMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f if￨j (￨j operationResult￨c !=￨c null￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e operationResult￨e )￨e ;￨e }￨j }￨j context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f protected￨f abstract￨f ModelNode￨f invokeCommandOn￨f (￨f Pool￨f pool￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d FlushIdleConnectionInPool￨d extends￨d PoolOperations￨d {￨d public￨e static￨e PoolOperations￨e .￨e FlushIdleConnectionInPool￨e DS_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e FlushIdleConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e DsPoolMatcher￨e (￨e )￨e )￨e ;￨e public￨e static￨e PoolOperations￨e .￨e FlushIdleConnectionInPool￨e RA_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e FlushIdleConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e RaPoolMatcher￨e (￨e )￨e )￨e ;￨e protected￨f FlushIdleConnectionInPool￨f (￨f PoolOperations￨p .￨p PoolMatcher￨p matcher￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelNode￨f invokeCommandOn￨f (￨f Pool￨p pool￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d FlushAllConnectionInPool￨d extends￨d PoolOperations￨d {￨d public￨e static￨e PoolOperations￨e .￨e FlushAllConnectionInPool￨e DS_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e FlushAllConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e DsPoolMatcher￨e (￨e )￨e )￨e ;￨e public￨e static￨e PoolOperations￨e .￨e FlushAllConnectionInPool￨e RA_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e FlushAllConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e RaPoolMatcher￨e (￨e )￨e )￨e ;￨e protected￨f FlushAllConnectionInPool￨f (￨f PoolOperations￨p .￨p PoolMatcher￨p matcher￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelNode￨f invokeCommandOn￨f (￨f Pool￨p pool￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d TestConnectionInPool￨d extends￨d PoolOperations￨d {￨d public￨e static￨e PoolOperations￨e .￨e TestConnectionInPool￨e DS_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e TestConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e DsPoolMatcher￨e (￨e )￨e )￨e ;￨e public￨e static￨e PoolOperations￨e .￨e TestConnectionInPool￨e RA_INSTANCE￨e =￨e new￨e PoolOperations￨e .￨e TestConnectionInPool￨e (￨e new￨e PoolOperations￨e .￨e RaPoolMatcher￨e (￨e )￨e )￨e ;￨e protected￨f TestConnectionInPool￨f (￨f PoolOperations￨p .￨p PoolMatcher￨p matcher￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelNode￨f invokeCommandOn￨f (￨f Pool￨f pool￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d private￨f static￨f interface￨f PoolMatcher￨f (￨f )￨f {￨f List￨f <￨f Pool￨f >￨f match￨f (￨f String￨p jndiName￨p ,￨p ManagementRepository￨p repository￨p )￨f {￨f }￨f }￨f private￨d static￨d class￨d DsPoolMatcher￨d implements￨d PoolOperations￨d .￨d PoolMatcher￨d {￨d public￨f List￨f <￨f Pool￨f >￨f match￨f (￨f String￨p jndiName￨p ,￨p ManagementRepository￨p repository￨p )￨f {￨f }￨f }￨d private￨d static￨d class￨d RaPoolMatcher￨d implements￨d PoolOperations￨d .￨d PoolMatcher￨d {￨d public￨f List￨f <￨f Pool￨f >￨f match￨f (￨f String￨p jndiName￨p ,￨p ManagementRepository￨p repository￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TransactionalTopologyBuilder￨d {￨d String￨e _id￨e ;￨e String￨e _spoutId￨e ;￨e ITransactionalSpout￨e _spout￨e ;￨e Map￨e <￨e String￨e ,￨e TransactionalTopologyBuilder￨e .￨e Component￨e >￨e _bolts￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e TransactionalTopologyBuilder￨e .￨e Component￨e >￨e (￨e )￨e ;￨e Integer￨e _spoutParallelism￨e ;￨e List￨e <￨e Map￨e >￨e _spoutConfs￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e public￨f TransactionalTopologyBuilder￨f (￨f String￨p id￨p ,￨p String￨p spoutId￨p ,￨p ITransactionalSpout￨p spout￨p ,￨p Integer￨p spoutParallelism￨p )￨f {￨f }￨f public￨f TransactionalTopologyBuilder￨f (￨f String￨p id￨p ,￨p String￨p spoutId￨p ,￨p IPartitionedTransactionalSpout￨p spout￨p ,￨p Integer￨p spoutParallelism￨p )￨f {￨f }￨f public￨f SpoutDeclarer￨f getSpoutDeclarer￨f (￨f )￨f {￨f }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p IBatchBolt￨p bolt￨p )￨f {￨f }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p IBatchBolt￨p bolt￨p ,￨p Integer￨p parallelism￨p )￨f {￨f }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p ICommitterBolt￨p bolt￨p )￨f {￨f }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p ICommitterBolt￨p bolt￨p ,￨p Integer￨p parallelism￨p )￨f {￨f <START_BUG>￨b return￨b setBolt￨b (￨b id￨b ,￨b new￨b CommitterBoltExecutor￨b (￨b bolt￨b )￨b ,￨b parallelism￨b ,￨b true￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p IBasicBolt￨p bolt￨p )￨f {￨f }￨f public￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p IBasicBolt￨p bolt￨p ,￨p Integer￨p parallelism￨p )￨f {￨f }￨f private￨f BoltDeclarer￨f setBolt￨f (￨f String￨p id￨p ,￨p IRichBolt￨p bolt￨p ,￨p Integer￨p parallelism￨p ,￨p boolean￨p committer￨p )￨f {￨f }￨f public￨f StormTopology￨f buildTopology￨f (￨f )￨f {￨f }￨f private￨f Set￨f <￨f String￨f >￨f componentBoltSubscriptions￨f (￨f TransactionalTopologyBuilder￨p .￨p Component￨p component￨p )￨f {￨f }￨f private￨d static￨d class￨d Component￨d {￨d public￨e IRichBolt￨e bolt￨e ;￨e public￨e int￨e parallelism￨e ;￨e public￨e List￨e <￨e TransactionalTopologyBuilder￨e .￨e InputDeclaration￨e >￨e declarations￨e =￨e new￨e ArrayList￨e <￨e TransactionalTopologyBuilder￨e .￨e InputDeclaration￨e >￨e (￨e )￨e ;￨e public￨e List￨e <￨e Map￨e >￨e componentConfs￨e =￨e new￨e ArrayList￨e <￨e Map￨e >￨e (￨e )￨e ;￨e public￨e boolean￨e committer￨e ;￨e public￨f Component￨f (￨f IRichBolt￨p bolt￨p ,￨p int￨p parallelism￨p ,￨p boolean￨p committer￨p )￨f {￨f }￨f }￨d private￨f static￨f interface￨f InputDeclaration￨f (￨f )￨f {￨f void￨f declare￨f (￨f InputDeclarer￨p declarer￨p )￨f {￨f }￨f String￨f getComponent￨f (￨f )￨f {￨f }￨f }￨f private￨d class￨d SpoutDeclarerImpl￨d extends￨d BaseConfigurationDeclarer￨d <￨d SpoutDeclarer￨d >￨d implements￨d SpoutDeclarer￨d {￨d @￨f Override￨f public￨f SpoutDeclarer￨f addConfigurations￨f (￨f Map￨p conf￨p )￨f {￨f }￨f }￨d private￨d class￨d BoltDeclarerImpl￨d extends￨d BaseConfigurationDeclarer￨d <￨d BoltDeclarer￨d >￨d implements￨d BoltDeclarer￨d {￨d TransactionalTopologyBuilder￨e .￨e Component￨e _component￨e ;￨e public￨f BoltDeclarerImpl￨f (￨f TransactionalTopologyBuilder￨p .￨p Component￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f fieldsGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p Fields￨p fields￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f fieldsGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p ,￨p final￨p Fields￨p fields￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f globalGrouping￨f (￨f final￨p String￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f globalGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f shuffleGrouping￨f (￨f final￨p String￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f shuffleGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f noneGrouping￨f (￨f final￨p String￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f noneGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f allGrouping￨f (￨f final￨p String￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f allGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f directGrouping￨f (￨f final￨p String￨p component￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f directGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f customGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p CustomStreamGrouping￨p grouping￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f customGrouping￨f (￨f final￨p String￨p component￨p ,￨p final￨p String￨p streamId￨p ,￨p final￨p CustomStreamGrouping￨p grouping￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f grouping￨f (￨f final￨p GlobalStreamId￨p stream￨p ,￨p final￨p Grouping￨p grouping￨p )￨f {￨f }￨f private￨f void￨f addDeclaration￨f (￨f TransactionalTopologyBuilder￨p .￨p InputDeclaration￨p declaration￨p )￨f {￨f }￨f @￨f Override￨f public￨f BoltDeclarer￨f addConfigurations￨f (￨f Map￨p conf￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d CloseAllPerspectivesAction￨d extends￨d Action￨d implements￨d ActionFactory￨d .￨d IWorkbenchAction￨d {￨d private￨e IWorkbenchWindow￨e workbenchWindow￨e ;￨e public￨f CloseAllPerspectivesAction￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f if￨j (￨j (￨c workbenchWindow￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j IWorkbenchPage￨e page￨e =￨e workbenchWindow￨e .￨e getActivePage￨e (￨e )￨e ;￨e if￨j (￨j page￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b (￨b (￨b WorkbenchPage￨b )￨b (￨b page￨b )￨b )￨b .￨b closeAllPerspectives￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SignaturePatternTestCase￨d extends￨d TestCase￨d {￨d public￨f SignaturePatternTestCase￨f (￨f String￨p name￨p )￨f {￨f }￨f BcelWorld￨e world￨e =￨e new￨e BcelWorld￨e (￨e )￨e ;￨e public￨f void￨f testThrowsMatch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testInstanceMethodMatch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testStaticMethodMatch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldMatch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testConstructorMatch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f checkMatch￨f (￨f SignaturePattern￨f p￨f ,￨f Member￨f [￨f ]￨f yes￨f ,￨f Member￨f [￨f ]￨f no￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkMatch￨f (￨f SignaturePattern￨p p￨p ,￨p Member￨p member￨p ,￨p boolean￨p b￨p )￨f {￨f <START_BUG>￨b boolean￨b matches￨b =￨b p￨b .￨b matches￨b (￨b member￨b ,￨b world￨b )￨b ;￨b <END_BUG>￨b assertEquals￨e (￨e (￨e (￨e (￨e p￨e .￨e toString￨e (￨e )￨e )￨e +￨e "<seq2seq4repair_space>matches<seq2seq4repair_space>"￨e )￨e +￨e (￨e member￨e .￨e toString￨e (￨e )￨e )￨e )￨e ,￨e b￨e ,￨e matches￨e )￨e ;￨e }￨f private￨f SignaturePattern￨f makeMethodPat￨f (￨f String￨p pattern￨p )￨f {￨f }￨f private￨f SignaturePattern￨f makeFieldPat￨f (￨f String￨p pattern￨p )￨f {￨f }￨f private￨f void￨f checkSerialization￨f (￨f SignaturePattern￨f p￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
class￨d StubFileGenerator￨d {￨d static￨e Hashtable￨e declIDTable￨e =￨e null￨e ;￨e static￨f void￨f doFiles￨f (￨f Hashtable￨f table￨f ,￨f SymbolManager￨f symbolManager￨f ,￨f File￨f [￨f ]￨f inputFiles￨f ,￨f File￨f [￨f ]￨f signatureFiles￨f )￨f throws￨f DocException￨f (￨f )￨f {￨f }￨f static￨f void￨f processFile￨f (￨f SymbolManager￨f symbolManager￨f ,￨f File￨f inputFile￨f ,￨f File￨f signatureFile￨f )￨f throws￨f DocException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f processImportDeclaration￨f (￨f IProgramElement￨f node￨f ,￨f PrintWriter￨f writer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f processTypeDeclaration￨f (￨f IProgramElement￨f classNode￨f ,￨f PrintWriter￨f writer￨f )￨f throws￨f DocException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f processMembers￨f (￨f List￨f members￨f ,￨f PrintWriter￨f writer￨f ,￨f boolean￨f declaringTypeIsInterface￨f )￨f throws￨f DocException￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f genSourceSignature￨f (￨f IProgramElement￨p classNode￨p )￨f {￨f String￨e signature￨e =￨e classNode￨e .￨e getSourceSignature￨e (￨e )￨e ;￨e if￨j (￨j signature￨c !=￨c null￨c )￨j {￨j int￨e index￨e =￨e signature￨e .￨e indexOf￨e (￨e "aspect"￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b index￨b !=￨b (￨b -￨b 1￨b )￨b )￨b &&￨b (￨b (￨b signature￨b .￨b charAt￨b (￨b (￨b index￨b -￨b 1￨b )￨b )￨b )￨b !=￨b '.'￨b )￨b )￨b {￨b <END_BUG>￨b signature￨e =￨e (￨e (￨e signature￨e .￨e substring￨e (￨e 0￨e ,￨e index￨e )￨e )￨e +￨e "class<seq2seq4repair_space>"￨e )￨e +￨e (￨e signature￨e .￨e substring￨e (￨e (￨e index￨e +￨e 6￨e )￨e ,￨e signature￨e .￨e length￨e (￨e )￨e )￨e )￨e ;￨e }￨j return￨e signature￨e ;￨e }￨f static￨e int￨e nextDeclID￨e =￨e 0￨e ;￨e static￨f String￨f addDeclID￨f (￨f IProgramElement￨p decl￨p ,￨p String￨p formalComment￨p )￨f {￨f }￨f static￨f String￨f addToFormal￨f (￨f String￨p formalComment￨p ,￨p String￨p string￨p )￨f {￨f }￨f }￨d
public￨d class￨d WeldBootstrapService￨d implements￨d Service￨d <￨d WeldBootstrapService￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e ServiceName￨e .￨e of￨e (￨e "WeldBootstrapService"￨e )￨e ;￨e private￨e final￨e WeldBootstrap￨e bootstrap￨e ;￨e private￨e final￨e WeldDeployment￨e deployment￨e ;￨e private￨e final￨e Environment￨e environment￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e BeanDeploymentArchive￨e >￨e beanDeploymentArchives￨e ;￨e private￨e final￨e BeanDeploymentArchiveImpl￨e rootBeanDeploymentArchive￨e ;￨e private￨e final￨e String￨e deploymentName￨e ;￨e private￨e final￨e InjectedValue￨e <￨e WeldSecurityServices￨e >￨e securityServices￨e =￨e new￨e InjectedValue￨e <￨e WeldSecurityServices￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e WeldTransactionServices￨e >￨e weldTransactionServices￨e =￨e new￨e InjectedValue￨e <￨e WeldTransactionServices￨e >￨e (￨e )￨e ;￨e private￨e volatile￨e boolean￨e started￨e ;￨e public￨f WeldBootstrapService￨f (￨f WeldDeployment￨p deployment￨p ,￨p Environment￨p environment￨p ,￨p final￨p String￨p deploymentName￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f final￨p StartContext￨p context￨p )￨f {￨f if￨j (￨j started￨c )￨j {￨j throw￨e MESSAGES￨e .￨e alreadyRunning￨e (￨e "WeldContainer"￨e )￨e ;￨e }￨j started￨e =￨e true￨e ;￨e DEPLOYMENT_LOGGER￨e .￨e startingWeldService￨e (￨e deploymentName￨e )￨e ;￨e addWeldService￨d (￨d SecurityServices￨d .￨d class￨d ,￨d securityServices￨d .￨d getValue￨d (￨d )￨d )￨d ;￨d addWeldService￨d (￨d TransactionServices￨d .￨d class￨d ,￨d weldTransactionServices￨d .￨d getValue￨d (￨d )￨d )￨d ;￨d ModuleGroupSingletonProvider￨d .￨d addClassLoaders￨d (￨d deployment￨d .￨d getModule￨d (￨d )￨d .￨d getClassLoader￨d (￨d )￨d ,￨d deployment￨d .￨d getSubDeploymentClassLoaders￨d (￨d )￨d )￨d ;￨d ClassLoader￨d oldTccl￨d =￨d WildFlySecurityManager￨d .￨d getCurrentContextClassLoaderPrivileged￨d (￨d )￨d ;￨d try￨d {￨d WildFlySecurityManager￨e .￨e setCurrentContextClassLoaderPrivileged￨e (￨e deployment￨e .￨e getModule￨e (￨e )￨e .￨e getClassLoader￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b bootstrap￨b .￨b startContainer￨b (￨b environment￨b ,￨b deployment￨b )￨b ;￨b <END_BUG>￨b }￨d finally￨f (￨f )￨f {￨f WildFlySecurityManager￨e .￨e setCurrentContextClassLoaderPrivileged￨e (￨e oldTccl￨e )￨e ;￨e }￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f public￨f BeanManagerImpl￨f getBeanManager￨f (￨f String￨p beanArchiveId￨p )￨f {￨f }￨f public￨f <￨f T￨f extends￨f Service￨f >￨f void￨f addWeldService￨f (￨f Class￨p <￨p T￨p >￨p type￨p ,￨p T￨p service￨p )￨f {￨f }￨f public￨f BeanManager￨f getBeanManager￨f (￨f )￨f {￨f }￨f public￨f Set￨f <￨f BeanDeploymentArchive￨f >￨f getBeanDeploymentArchives￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isStarted￨f (￨f )￨f {￨f }￨f WeldBootstrap￨f getBootstrap￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f WeldBootstrapService￨f getValue￨f (￨f )￨f throws￨f IllegalArgumentException￨f ,￨f IllegalStateException￨f (￨f )￨f {￨f }￨f public￨f InjectedValue￨f <￨f WeldSecurityServices￨f >￨f getSecurityServices￨f (￨f )￨f {￨f }￨f public￨f InjectedValue￨f <￨f WeldTransactionServices￨f >￨f getWeldTransactionServices￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ConfigFrame￨d implements￨d ActionListener￨d ,￨d ListSelectionListener￨d {￨d private￨e JDialog￨e dialog￨e ;￨e private￨e AccountListTable￨e listView￨e ;￨e private￨e AccountList￨e accountList￨e ;￨e private￨e AccountItem￨e accountItem￨e ;￨e JTextField￨e nameTextField￨e =￨e new￨e JTextField￨e (￨e )￨e ;￨e JButton￨e addButton￨e ;￨e JButton￨e removeButton￨e ;￨e JButton￨e editButton￨e ;￨e private￨e int￨e index￨e ;￨e public￨f ConfigFrame￨f (￨f )￨f {￨f }￨f public￨f AccountItem￨f getSelected￨f (￨f )￨f {￨f }￨f public￨f void￨f setSelected￨f (￨f AccountItem￨p item￨p )￨f {￨f }￨f public￨f void￨f initComponents￨f (￨f )￨f {￨f }￨f public￨f void￨f valueChanged￨f (￨f ListSelectionEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f showAccountDialog￨f (￨f )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p e￨p )￨f {￨f String￨e action￨e =￨e e￨e .￨e getActionCommand￨e (￨e )￨e ;￨e if￨j (￨j action￨c .￨c equals￨c (￨c "CLOSE"￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f config￨e .￨e save￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f dialog￨e .￨e setVisible￨e (￨e false￨e )￨e ;￨e }￨j else￨j if￨j (￨j action￨c .￨c equals￨c (￨c "ADD"￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f <START_BUG>￨b new￨b AccountWizardLauncher￨b (￨b )￨b .￨b launchWizard￨b (￨b )￨b ;￨b <END_BUG>￨b listView￨e .￨e update￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨j else￨j if￨j (￨j action￨c .￨c equals￨c (￨c "REMOVE"￨c )￨c )￨j {￨j Object￨f [￨f ]￨f options￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e int￨e n￨e =￨e JOptionPane￨e .￨e showOptionDialog￨e (￨e null￨e ,￨e "Would<seq2seq4repair_space>you<seq2seq4repair_space>really<seq2seq4repair_space>like<seq2seq4repair_space>to<seq2seq4repair_space>delete<seq2seq4repair_space>this<seq2seq4repair_space>account?"￨e ,￨e "Question"￨e ,￨e JOptionPane￨e .￨e YES_NO_OPTION￨e ,￨e JOptionPane￨e .￨e QUESTION_MESSAGE￨e ,￨e null￨e ,￨e options￨e ,￨e options￨e [￨e 1￨e ]￨e )￨e ;￨e if￨j (￨j n￨c ==￨c (￨c JOptionPane￨c .￨c NO_OPTION￨c )￨c )￨j {￨j return￨e ;￨e }￨j AccountItem￨e item￨e =￨e accountList￨e .￨e remove￨e (￨e index￨e )￨e ;￨e if￨j (￨j item￨c .￨c isPopAccount￨c (￨c )￨c )￨j {￨j popServerCollection￨e .￨e removePopServer￨e (￨e item￨e .￨e getUid￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j FolderTreeNode￨e folder￨e =￨e (￨e (￨e FolderTreeNode￨e )￨e (￨e treeModel￨e .￨e getImapFolder￨e (￨e item￨e .￨e getUid￨e (￨e )￨e )￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f FolderTreeNode￨e parentFolder￨e =￨e (￨e (￨e FolderTreeNode￨e )￨e (￨e folder￨e .￨e getParent￨e (￨e )￨e )￨e )￨e ;￨e folder￨e .￨e removeFolder￨e (￨e )￨e ;￨e treeModel￨e .￨e nodeStructureChanged￨e (￨e parentFolder￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨j mailCheckingManager￨e .￨e remove￨e (￨e item￨e .￨e getUid￨e (￨e )￨e )￨e ;￨e removeButton￨e .￨e setEnabled￨e (￨e false￨e )￨e ;￨e editButton￨e .￨e setEnabled￨e (￨e false￨e )￨e ;￨e listView￨e .￨e update￨e (￨e )￨e ;￨e }￨j else￨j if￨j (￨j action￨c .￨c equals￨c (￨c "EDIT"￨c )￨c )￨j {￨j showAccountDialog￨e (￨e )￨e ;￨e listView￨e .￨e update￨e (￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d MappingJackson2MessageConverter￨d implements￨d MessageConverter￨d <￨d Object￨d >￨d {￨d private￨e ObjectMapper￨e objectMapper￨e =￨e new￨e ObjectMapper￨e (￨e )￨e ;￨e private￨d Type￨d defaultObjectType￨d =￨d Map￨d .￨d class￨d ;￨d private￨d Class￨d <￨d ?￨d >￨d defaultMessagePayloadClass￨d =￨d byte￨d [￨d ]￨d .￨d class￨d ;￨d public￨d void￨d setDefaultObjectClass￨d (￨d Type￨d defaultObjectType￨d )￨d {￨d }￨d public￨f void￨f setDefaultTargetPayloadClass￨f (￨f Class￨p <￨p ?￨p >￨p payloadClass￨p )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f fromMessage￨f (￨f Message￨p <￨p ?￨p >￨p message￨p ,￨p Type￨p objectType￨p )￨f {￨f JavaType￨e javaType￨e =￨e (￨e objectType￨e !=￨e null￨e )￨e ?￨e this￨e .￨e objectMapper￨e .￨e constructType￨e (￨e objectType￨e )￨e :￨e this￨e .￨e objectMapper￨e .￨e constructType￨e (￨e this￨e .￨e defaultObjectType￨e )￨e ;￨e Object￨e payload￨e =￨e message￨e .￨e getPayload￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j payload￨c instanceof￨c byte￨c [￨c ]￨c )￨j {￨j return￨e this￨e .￨e objectMapper￨e .￨e readValue￨e (￨e (￨e (￨e byte￨e [￨e ]￨e )￨e (￨e payload￨e )￨e )￨e ,￨e javaType￨e )￨e ;￨e }￨j else￨j if￨j (￨j payload￨c instanceof￨c String￨c )￨j {￨j return￨e this￨e .￨e objectMapper￨e .￨e readValue￨e (￨e (￨e (￨e String￨e )￨e (￨e payload￨e )￨e )￨e ,￨e javaType￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e (￨e "Unexpected<seq2seq4repair_space>message<seq2seq4repair_space>payload<seq2seq4repair_space>type:<seq2seq4repair_space>"￨e +￨e payload￨e )￨e )￨e ;￨e }￨j }￨f catch￨f (￨f IOException￨p ex￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b MessageConversionException￨b (￨b (￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>JSON:<seq2seq4repair_space>"￨b +￨b (￨b ex￨b .￨b getMessage￨b (￨b )￨b )￨b )￨b ,￨b ex￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f @￨f Override￨f public￨f <￨f P￨f >￨f Message￨f <￨f P￨f >￨f toMessage￨f (￨f Object￨p object￨p )￨f {￨f }￨f }￨d
public￨d class￨d SubqueryImpl￨d <￨d T￨d >￨d extends￨d ExpressionImpl￨d <￨d T￨d >￨d implements￨d Subquery￨d <￨d T￨d >￨d {￨d private￨e final￨e AbstractQuery￨e <￨e ?￨e >￨e _parent￨e ;￨e private￨e final￨e CriteriaQueryImpl￨e <￨e T￨e >￨e _delegate￨e ;￨e private￨e final￨e MetamodelImpl￨e _model￨e ;￨e private￨e Set￨e <￨e Join￨e <￨e ?￨e ,￨e ?￨e >￨e >￨e _joins￨e ;￨e private￨e Expression￨e <￨e T￨e >￨e _select￨e ;￨e private￨e Subquery￨e _subq￨e ;￨e public￨f SubqueryImpl￨f (￨f Class￨p <￨p T￨p >￨p cls￨p ,￨p AbstractQuery￨p <￨p ?￨p >￨p parent￨p )￨f {￨f }￨f public￨f AbstractQuery￨f <￨f ?￨f >￨f getParent￨f (￨f )￨f {￨f }￨f public￨f CriteriaQueryImpl￨f <￨f T￨f >￨f getDelegate￨f (￨f )￨f {￨f }￨f public￨f MetamodelImpl￨f getMetamodel￨f (￨f )￨f {￨f }￨f public￨f CriteriaQueryImpl￨f <￨f ?￨f >￨f getInnermostParent￨f (￨f )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f select￨f (￨f Expression￨p <￨p T￨p >￨p expression￨p )￨f {￨f }￨f public￨f Expression￨f <￨f T￨f >￨f getSelection￨f (￨f )￨f {￨f }￨f public￨f <￨f X￨f >￨f Root￨f <￨f X￨f >￨f from￨f (￨f EntityType￨p <￨p X￨p >￨p entity￨p )￨f {￨f }￨f public￨f <￨f X￨f >￨f Root￨f <￨f X￨f >￨f from￨f (￨f Class￨p <￨p X￨p >￨p entityClass￨p )￨f {￨f }￨f public￨f Set￨f <￨f Root￨f <￨f ?￨f >￨f >￨f getRoots￨f (￨f )￨f {￨f }￨f public￨f Root￨f <￨f ?￨f >￨f getRoot￨f (￨f )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f where￨f (￨f Expression￨p <￨p Boolean￨p >￨p restriction￨p )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f where￨f (￨f Predicate￨p ...￨p restrictions￨p )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f groupBy￨f (￨f Expression￨p <￨p ?￨p >￨p ...￨p grouping￨p )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f having￨f (￨f Expression￨p <￨p Boolean￨p >￨p restriction￨p )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f having￨f (￨f Predicate￨p ...￨p restrictions￨p )￨f {￨f }￨f public￨f Subquery￨f <￨f T￨f >￨f distinct￨f (￨f boolean￨p distinct￨p )￨f {￨f }￨f public￨f List￨f <￨f Expression￨f <￨f ?￨f >￨f >￨f getGroupList￨f (￨f )￨f {￨f }￨f public￨f Predicate￨f getRestriction￨f (￨f )￨f {￨f }￨f public￨f Predicate￨f getGroupRestriction￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDistinct￨f (￨f )￨f {￨f }￨f public￨f <￨f U￨f >￨f Subquery￨f <￨f U￨f >￨f subquery￨f (￨f Class￨p <￨p U￨p >￨p type￨p )￨f {￨f }￨f public￨f <￨f Y￨f >￨f Root￨f <￨f Y￨f >￨f correlate￨f (￨f Root￨p <￨p Y￨p >￨p root￨p )￨f {￨f }￨f public￨f <￨f X￨f ,￨f Y￨f >￨f Join￨f <￨f X￨f ,￨f Y￨f >￨f correlate￨f (￨f Join￨p <￨p X￨p ,￨p Y￨p >￨p join￨p )￨f {￨f }￨f public￨f <￨f X￨f ,￨f Y￨f >￨f CollectionJoin￨f <￨f X￨f ,￨f Y￨f >￨f correlate￨f (￨f CollectionJoin￨p <￨p X￨p ,￨p Y￨p >￨p join￨p )￨f {￨f }￨f public￨f <￨f X￨f ,￨f Y￨f >￨f SetJoin￨f <￨f X￨f ,￨f Y￨f >￨f correlate￨f (￨f SetJoin￨p <￨p X￨p ,￨p Y￨p >￨p join￨p )￨f {￨f }￨f public￨f <￨f X￨f ,￨f Y￨f >￨f ListJoin￨f <￨f X￨f ,￨f Y￨f >￨f correlate￨f (￨f ListJoin￨p <￨p X￨p ,￨p Y￨p >￨p join￨p )￨f {￨f }￨f public￨f <￨f X￨f ,￨f K￨f ,￨f V￨f >￨f MapJoin￨f <￨f X￨f ,￨f K￨f ,￨f V￨f >￨f correlate￨f (￨f MapJoin￨p <￨p X￨p ,￨p K￨p ,￨p V￨p >￨p join￨p )￨f {￨f }￨f public￨f Set￨f <￨f Join￨f <￨f ?￨f ,￨f ?￨f >￨f >￨f getJoins￨f (￨f )￨f {￨f }￨f public￨f Subquery￨f getSubQ￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Value￨f toValue￨f (￨f ExpressionFactory￨p factory￨p ,￨p MetamodelImpl￨p model￨p ,￨p CriteriaQueryImpl￨p <￨p ?￨p >￨p q￨p )￨f {￨f }￨f private￨f ClassMetaData￨f getCandidate￨f (￨f )￨f {￨f RootImpl￨e <￨e ?￨e >￨e root￨e =￨e (￨e (￨e RootImpl￨e <￨e ?￨e >￨e )￨e (￨e getRoot￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b RootImpl￨b <￨b ?￨b >￨b correlatedRoot￨b =￨b (￨b (￨b RootImpl￨b <￨b ?￨b >￨b )￨b (￨b root￨b .￨b getCorrelatedParent￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c correlatedRoot￨c !=￨c null￨c )￨c &&￨c (￨c (￨c root￨c .￨c getJoins￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j Join￨e <￨e ?￨e ,￨e ?￨e >￨e join￨e =￨e root￨e .￨e getJoins￨e (￨e )￨e .￨e iterator￨e (￨e )￨e .￨e next￨e (￨e )￨e ;￨e FieldMetaData￨e fmd￨e =￨e (￨e (￨e Members￨e .￨e Member￨e <￨e ?￨e ,￨e ?￨e >￨e )￨e (￨e join￨e .￨e getAttribute￨e (￨e )￨e )￨e )￨e .￨e fmd￨e ;￨e if￨j (￨j join￨c .￨c getAttribute￨c (￨c )￨c .￨c isCollection￨c (￨c )￨c )￨j {￨j return￨e fmd￨e .￨e isElementCollection￨e (￨e )￨e ?￨e fmd￨e .￨e getEmbeddedMetaData￨e (￨e )￨e :￨e fmd￨e .￨e getElement￨e (￨e )￨e .￨e getDeclaredTypeMetaData￨e (￨e )￨e ;￨e }￨j else￨j {￨j return￨e fmd￨e .￨e getDeclaredTypeMetaData￨e (￨e )￨e ;￨e }￨j }￨j return￨e (￨e (￨e AbstractManagedType￨e <￨e ?￨e >￨e )￨e (￨e root￨e .￨e getModel￨e (￨e )￨e )￨e )￨e .￨e meta￨e ;￨e }￨f }￨d
public￨d abstract￨d class￨d Border￨d <￨d T￨d >￨d extends￨d WebMarkupContainerWithAssociatedMarkup￨d <￨d T￨d >￨d implements￨d IComponentResolver￨d {￨d private￨e static￨e final￨e String￨e BODY￨e =￨e "body"￨e ;￨e private￨e static￨e final￨e String￨e BORDER￨e =￨e "border"￨e ;￨e private￨e boolean￨e bodyVisible￨e =￨e true￨e ;￨e private￨e MarkupContainer￨e body￨e ;￨e public￨f Border￨f (￨f MarkupContainer￨p parent￨p ,￨p final￨p String￨p id￨p )￨f {￨f }￨f public￨f Border￨f (￨f MarkupContainer￨p parent￨p ,￨p final￨p String￨p id￨p ,￨p final￨p IModel￨p <￨p T￨p >￨p model￨p )￨f {￨f }￨f protected￨f MarkupContainer￨f getBodyContainer￨f (￨f )￨f {￨f }￨f protected￨f MarkupContainer￨f newBorderBodyContainer￨f (￨f final￨p MarkupContainer￨p parent￨p )￨f {￨f }￨f public￨f Border￨f setBorderBodyVisible￨f (￨f boolean￨p bodyVisible￨p )￨f {￨f }￨f @￨f Override￨f public￨f MarkupFragment￨f getMarkupFragment￨f (￨f String￨p path￨p )￨f {￨f <START_BUG>￨b MarkupFragment￨b fragment￨b =￨b Border￨b .￨b getAssociatedMarkupFragment￨b (￨b false￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j fragment￨c !=￨c null￨c )￨j {￨j fragment￨e =￨e fragment￨e .￨e getChildFragment￨e (￨e path￨e ,￨e false￨e )￨e ;￨e }￨j if￨j (￨j fragment￨c ==￨c null￨c )￨j {￨j fragment￨e =￨e super￨e .￨e getMarkupFragment￨e (￨e path￨e )￨e ;￨e }￨j return￨e fragment￨e ;￨e }￨f @￨f Override￨f protected￨f final￨f void￨f onComponentTagBody￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f public￨f boolean￨f resolve￨f (￨f final￨p MarkupContainer￨p container￨p ,￨p final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f renderHead￨f (￨f HeaderContainer￨p container￨p )￨f {￨f }￨f private￨d class￨d BorderBody￨d extends￨d WebMarkupContainer￨d implements￨d IComponentResolver￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e transient￨e boolean￨e wasOpenClose￨e =￨e false￨e ;￨e public￨f BorderBody￨f (￨f final￨p MarkupContainer￨p parent￨p )￨f {￨f }￨f @￨f Override￨f public￨f MarkupFragment￨f getMarkupFragment￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTagBody￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f public￨f boolean￨f resolve￨f (￨f final￨p MarkupContainer￨p container￨p ,￨p final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f }￨d }￨d
class￨d StressCategory￨d {￨d static￨f Priority￨f [￨f ]￨f priority￨f =￨f new￨f Priority￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e static￨e Priority￨e defaultPriority￨e =￨e Category￨e .￨e getRoot￨e (￨e )￨e .￨e getPriority￨e (￨e )￨e ;￨e static￨e int￨e LENGTH￨e ;￨e static￨e String￨e [￨e ]￨e names￨e ;￨e static￨e Category￨e [￨e ]￨e cat￨e ;￨e static￨e StressCategory￨e .￨e CT￨e [￨e ]￨e ct￨e ;￨e static￨e Random￨e random￨e =￨e new￨e Random￨e (￨e 10￨e )￨e ;￨e public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f static￨f void￨f permute￨f (￨f int￨p n￨p )￨f {￨f }￨f static￨f void￨f swap￨f (￨f String￨p [￨p ]￨p names￨p ,￨p int￨p i￨p ,￨p int￨p j￨p )￨f {￨f }￨f public￨f static￨f void￨f permutationDump￨f (￨f )￨f {￨f }￨f static￨f void￨f createLoop￨f (￨f int￨p n￨p )￨f {￨f if￨j (￨j n￨c ==￨c (￨c StressCategory￨c .￨c LENGTH￨c )￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c StressCategory￨c .￨c LENGTH￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c StressCategory￨c .￨c ct￨c [￨c i￨c ]￨c )￨c ==￨c null￨c )￨j {￨j StressCategory￨e .￨e cat￨e [￨e i￨e ]￨e =￨e null￨e ;￨e }￨j else￨j {￨j StressCategory￨e .￨e cat￨e [￨e i￨e ]￨e =￨e Category￨e .￨e getInstance￨e (￨e StressCategory￨e .￨e ct￨e [￨e i￨e ]￨e .￨e catstr￨e )￨e ;￨e StressCategory￨e .￨e cat￨e [￨e i￨e ]￨e .￨e setPriority￨e (￨e StressCategory￨e .￨e ct￨e [￨e i￨e ]￨e .￨e priority￨e )￨e ;￨e }￨j }￨l StressCategory￨e .￨e test￨e (￨e )￨e ;￨e <START_BUG>￨b _default￨b .￨b clear￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j StressCategory￨e .￨e ct￨e [￨e n￨e ]￨e =￨e null￨e ;￨e StressCategory￨e .￨e createLoop￨e (￨e (￨e n￨e +￨e 1￨e )￨e )￨e ;￨e StressCategory￨e .￨e ct￨e [￨e n￨e ]￨e =￨e new￨e StressCategory￨e .￨e CT￨e (￨e StressCategory￨e .￨e names￨e [￨e n￨e ]￨e ,￨e null￨e )￨e ;￨e StressCategory￨e .￨e createLoop￨e (￨e (￨e n￨e +￨e 1￨e )￨e )￨e ;￨e int￨e r￨e =￨e StressCategory￨e .￨e random￨e .￨e nextInt￨e (￨e )￨e ;￨e if￨j (￨j r￨c <￨c 0￨c )￨j {￨j r￨e =￨e -￨e r￨e ;￨e }￨j StressCategory￨e .￨e ct￨e [￨e n￨e ]￨e =￨e new￨e StressCategory￨e .￨e CT￨e (￨e StressCategory￨e .￨e names￨e [￨e n￨e ]￨e ,￨e StressCategory￨e .￨e priority￨e [￨e (￨e r￨e %￨e 5￨e )￨e ]￨e )￨e ;￨e StressCategory￨e .￨e createLoop￨e (￨e (￨e n￨e +￨e 1￨e )￨e )￨e ;￨e }￨j }￨f static￨f void￨f test￨f (￨f )￨f {￨f }￨f static￨f void￨f ctDump￨f (￨f )￨f {￨f }￨f static￨f void￨f catDump￨f (￨f )￨f {￨f }￨f static￨f boolean￨f checkCorrectness￨f (￨f int￨p i￨p )￨f {￨f }￨f static￨f Priority￨f getExpectedPrioriy￨f (￨f StressCategory￨p .￨p CT￨p ctParam￨p )￨f {￨f }￨f static￨d class￨d CT￨d {￨d public￨e String￨e catstr￨e ;￨e public￨e Priority￨e priority￨e ;￨e CT￨f (￨f String￨p catstr￨p ,￨p Priority￨p priority￨p )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d AbstractRemoteService￨d implements￨d InvocationHandler￨d ,￨d IRemoteService￨d {￨d protected￨e static￨e final￨e Object￨e [￨e ]￨e EMPTY_ARGS￨e =￨e new￨e Object￨e [￨e 0￨e ]￨e ;￨e protected￨f abstract￨f String￨f [￨f ]￨f getInterfaceClassNames￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f IRemoteServiceID￨f getRemoteServiceID￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f IRemoteServiceReference￨f getRemoteServiceReference￨f (￨f )￨f {￨f }￨f protected￨f Class￨f loadInterfaceClass￨f (￨f String￨f className￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f protected￨f IRemoteService￨f getRemoteService￨f (￨f )￨f {￨f }￨f protected￨f long￨f getDefaultTimeout￨f (￨f )￨f {￨f }￨f public￨f IFuture￨f callAsync￨f (￨f final￨p IRemoteCall￨p call￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f Object￨f getProxy￨f (￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f final￨e String￨e [￨e ]￨e clazzes￨e =￨e getInterfaceClassNames￨e (￨e )￨e ;￨e List￨e classes￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c clazzes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l Class￨e c￨e =￨e loadInterfaceClass￨e (￨e clazzes￨e [￨e i￨e ]￨e )￨e ;￨e classes￨e .￨e add￨e (￨e c￨e )￨e ;￨e Class￨e asyncRemoteServiceProxyClass￨e =￨e findAsyncRemoteServiceProxyClass￨e (￨e c￨e )￨e ;￨e if￨j (￨j (￨c asyncRemoteServiceProxyClass￨c !=￨c null￨c )￨c &&￨c (￨c asyncRemoteServiceProxyClass￨c .￨c isInterface￨c (￨c )￨c )￨c )￨j {￨j classes￨e .￨e add￨e (￨e asyncRemoteServiceProxyClass￨e )￨e ;￨e }￨j }￨l classes￨d .￨d add￨d (￨d IRemoteServiceProxy￨d .￨d class￨d )￨d ;￨d return￨d createProxy￨d (￨d (￨d (￨d Class￨d [￨d ]￨d )￨d (￨d classes￨d .￨d toArray￨d (￨d new￨d Class￨d [￨d ]￨d {￨d }￨d )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f final￨p Exception￨p e￨p )￨f {￨f throw￨e new￨e ECFException￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>proxy"￨e ,￨e e￨e )￨e ;￨e }￨f catch￨f (￨f final￨p NoClassDefFoundError￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b ECFException￨b (￨b "Failed<seq2seq4repair_space>to<seq2seq4repair_space>load<seq2seq4repair_space>proxy<seq2seq4repair_space>interface"￨b ,￨b e￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f protected￨f Object￨f createProxy￨f (￨f Class￨p [￨p ]￨p classes￨p )￨f {￨f }￨f protected￨f Class￨f findAsyncRemoteServiceProxyClass￨f (￨f Class￨p c￨p )￨f {￨f }￨f protected￨f String￨f convertInterfaceNameToAsyncInterfaceName￨f (￨f String￨p interfaceName￨p )￨f {￨f }￨f protected￨f Object￨f [￨f ]￨f getCallParametersForProxyInvoke￨f (￨f String￨p callMethod￨p ,￨p Method￨p proxyMethod￨p ,￨p Object￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f long￨f getCallTimeoutForProxyInvoke￨f (￨f String￨p callMethod￨p ,￨p Method￨p proxyMethod￨p ,￨p Object￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f String￨f getCallMethodNameForProxyInvoke￨f (￨f Method￨p method￨p ,￨p Object￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f Object￨f invokeObject￨f (￨f Object￨f proxy￨f ,￨f final￨f Method￨f method￨f ,￨f final￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f protected￨f Object￨f invokeSync￨f (￨f IRemoteCall￨f call￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f }￨f public￨f Object￨f invoke￨f (￨f Object￨f proxy￨f ,￨f final￨f Method￨f method￨f ,￨f final￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f protected￨d class￨d AsyncArgs￨d {￨d private￨e IRemoteCallListener￨e listener￨e ;￨e private￨e Object￨e [￨e ]￨e args￨e ;￨e public￨f AsyncArgs￨f (￨f IRemoteCallListener￨p listener￨p ,￨p Object￨p [￨p ]￨p originalArgs￨p )￨f {￨f }￨f public￨f IRemoteCallListener￨f getListener￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getArgs￨f (￨f )￨f {￨f }￨f }￨d protected￨f Object￨f invokeAsync￨f (￨f final￨f Method￨f method￨f ,￨f final￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f protected￨f AbstractRemoteService￨f .￨f AsyncArgs￨f getAsyncArgs￨f (￨f Method￨p method￨p ,￨p Object￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f String￨f getAsyncInvokeMethodName￨f (￨f Method￨p method￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d Java2WSWidgetFactory￨d {￨d private￨f Java2WSWidgetFactory￨f (￨f )￨f {￨f }￨f public￨f static￨f Label￨f createSOAPBindingLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Combo￨f createSOAPBingCombo￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Button￨f createXSDImportsButton￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Label￨f createFrontendLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Combo￨f createFrontendCombo￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Label￨f createDatabindingLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Combo￨f createDatabindingCombo￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Button￨f createGenerateClientButton￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Button￨f createGenerateServerButton￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Button￨f createGenerateWrapperFaultBeanButton￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Button￨f createGenerateWSDLButton￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSContext￨p context￨p )￨f {￨f }￨f public￨f static￨f Label￨f createWSDLFileNameLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Text￨f createWSDLFileNameText￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSDataModel￨p model￨p )￨f {￨f }￨f public￨f static￨f Button￨f createUseSEIButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Label￨f createInformationLabel￨f (￨f Composite￨p parent￨p ,￨p IType￨p startingPointType￨p )￨f {￨f }￨f public￨f static￨f Label￨f createPaddingLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Button￨f createSelectSEIButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Label￨f createSelectSEILabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Combo￨f createSelectSEICombo￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSDataModel￨p model￨p ,￨p IType￨p javaStartingPointType￨p )￨f {￨f <START_BUG>￨b final￨b Combo￨b seiCombo￨b =￨b new￨b Combo￨b (￨b parent￨b ,￨b SWT￨b .￨b READ_ONLY￨b )￨b ;￨b <END_BUG>￨b seiCombo￨e .￨e setToolTipText￨e (￨e JAVA2WS_SELECT_SEI_TOOLTIP￨e )￨e ;￨e IJavaProject￨e javaProject￨e =￨e JDTUtils￨e .￨e getJavaProject￨e (￨e model￨e .￨e getProjectName￨e (￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f ITypeHierarchy￨e typeHierarchy￨e =￨e javaStartingPointType￨e .￨e newTypeHierarchy￨e (￨e javaProject￨e ,￨e null￨e )￨e ;￨e IType￨e [￨e ]￨e allInterfaces￨e =￨e typeHierarchy￨e .￨e getAllInterfaces￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c allInterfaces￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l IType￨e itype￨e =￨e allInterfaces￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c !￨c (￨c itype￨c .￨c isBinary￨c (￨c )￨c )￨c )￨c &&￨c (￨c itype￨c .￨c getResource￨c (￨c )￨c .￨c getProject￨c (￨c )￨c .￨c equals￨c (￨c javaProject￨c .￨c getProject￨c (￨c )￨c )￨c )￨c )￨j {￨j seiCombo￨e .￨e add￨e (￨e itype￨e .￨e getFullyQualifiedName￨e (￨e )￨e )￨e ;￨e }￨j }￨l }￨f catch￨f (￨f JavaModelException￨p jme￨p )￨f {￨f CXFUIPlugin￨e .￨e log￨e (￨e jme￨e .￨e getStatus￨e (￨e )￨e )￨e ;￨e }￨f seiCombo￨f .￨f addSelectionListener￨f (￨f new￨f SelectionAdapter￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f widgetSelected￨f (￨f SelectionEvent￨p event￨p )￨f {￨f String￨e seiInterfaceName￨e =￨e seiCombo￨e .￨e getText￨e (￨e )￨e ;￨e model￨e .￨e setFullyQualifiedJavaInterfaceName￨e (￨e seiInterfaceName￨e )￨e ;￨e }￨f }￨f )￨e ;￨e seiCombo￨e .￨e select￨e (￨e (￨e -￨e 1￨e )￨e )￨e ;￨e return￨e seiCombo￨e ;￨e }￨f public￨f static￨f Button￨f createExtractSEIButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Label￨f createExtractSEILabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Text￨f createSEIInterfaceNameText￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Label￨f createMemebersToExtractLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f CheckboxTableViewer￨f createSEIMembersToExtractTableViewer￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Button￨f createSelectAllButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Button￨f createDeselectAllButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Label￨f createSelectImplementationLabel￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f static￨f Combo￨f createSelectImplementationCombo￨f (￨f Composite￨p parent￨p ,￨p final￨p Java2WSDataModel￨p model￨p ,￨p IType￨p javaStartingPointType￨p )￨f {￨f }￨f }￨d
public￨d class￨d BindingKeyResolver￨d extends￨d BindingKeyParser￨d {￨d Compiler￨e compiler￨e ;￨e Binding￨e compilerBinding￨e ;￨e char￨e [￨e ]￨e [￨e ]￨e compoundName￨e ;￨e int￨e dimension￨e ;￨e LookupEnvironment￨e environment￨e ;￨e ReferenceBinding￨e genericType￨e ;￨e MethodBinding￨e methodBinding￨e ;￨e CompilationUnitDeclaration￨e parsedUnit￨e ;￨e BlockScope￨e scope￨e ;￨e TypeBinding￨e typeBinding￨e ;￨e TypeDeclaration￨e typeDeclaration￨e ;￨e ArrayList￨e types￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e private￨f BindingKeyResolver￨f (￨f BindingKeyParser￨p parser￨p ,￨p Compiler￨p compiler￨p ,￨p LookupEnvironment￨p environment￨p )￨f {￨f }￨f public￨f BindingKeyResolver￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f BindingKeyResolver￨f (￨f String￨p key￨p ,￨p Compiler￨p compiler￨p ,￨p LookupEnvironment￨p environment￨p )￨f {￨f }￨f public￨f char￨f [￨f ]￨f [￨f ]￨f compoundName￨f (￨f )￨f {￨f }￨f public￨f void￨f consumeArrayDimension￨f (￨f char￨p [￨p ]￨p brakets￨p )￨f {￨f }￨f public￨f void￨f consumeField￨f (￨f char￨p [￨p ]￨p fieldName￨p )￨f {￨f }￨f public￨f void￨f consumeParameterizedMethod￨f (￨f )￨f {￨f }￨f public￨f void￨f consumeLocalType￨f (￨f char￨p [￨p ]￨p uniqueKey￨p )￨f {￨f }￨f public￨f void￨f consumeLocalVar￨f (￨f char￨p [￨p ]￨p varName￨p )￨f {￨f }￨f public￨f void￨f consumeMethod￨f (￨f char￨p [￨p ]￨p selector￨p ,￨p char￨p [￨p ]￨p signature￨p )￨f {￨f }￨f public￨f void￨f consumeMemberType￨f (￨f char￨p [￨p ]￨p simpleTypeName￨p )￨f {￨f }￨f public￨f void￨f consumePackage￨f (￨f char￨p [￨p ]￨p pkgName￨p )￨f {￨f }￨f public￨f void￨f consumeParameterizedType￨f (￨f char￨p [￨p ]￨p simpleTypeName￨p ,￨p boolean￨p isRaw￨p )￨f {￨f }￨f public￨f void￨f consumeParser￨f (￨f BindingKeyParser￨p parser￨p )￨f {￨f }￨f public￨f void￨f consumeScope￨f (￨f int￨p scopeNumber￨p )￨f {￨f }￨f public￨f void￨f consumeRawType￨f (￨f )￨f {￨f }￨f public￨f void￨f consumeSecondaryType￨f (￨f char￨p [￨p ]￨p simpleTypeName￨p )￨f {￨f }￨f public￨f void￨f consumeFullyQualifiedName￨f (￨f char￨p [￨p ]￨p fullyQualifiedName￨p )￨f {￨f }￨f public￨f void￨f consumeTopLevelType￨f (￨f )￨f {￨f }￨f public￨f void￨f consumeType￨f (￨f )￨f {￨f }￨f public￨f void￨f consumeTypeVariable￨f (￨f char￨p [￨p ]￨p typeVariableName￨p )￨f {￨f <START_BUG>￨b TypeVariableBinding￨b [￨b ]￨b typeVariableBindings￨b =￨b this￨b .￨b typeBinding￨b .￨b typeVariables￨b (￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c length￨c =￨c typeVariableBindings￨c .￨c length￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l TypeVariableBinding￨e typeVariableBinding￨e =￨e typeVariableBindings￨e [￨e i￨e ]￨e ;￨e if￨j (￨j CharOperation￨c .￨c equals￨c (￨c typeVariableName￨c ,￨c typeVariableBinding￨c .￨c sourceName￨c (￨c )￨c )￨c )￨j {￨j this￨e .￨e compilerBinding￨e =￨e typeVariableBinding￨e ;￨e return￨e ;￨e }￨j }￨l }￨f public￨f void￨f consumeWildCard￨f (￨f int￨p kind￨p ,￨p int￨p rank￨p )￨f {￨f }￨f private￨f TypeBinding￨f getArrayBinding￨f (￨f int￨p dim￨p ,￨p TypeBinding￨p binding￨p )￨f {￨f }￨f private￨f TypeBinding￨f getBaseTypeBinding￨f (￨f char￨p [￨p ]￨p signature￨p )￨f {￨f }￨f private￨f TypeBinding￨f getBinaryBinding￨f (￨f )￨f {￨f }￨f public￨f CompilationUnitDeclaration￨f getCompilationUnitDeclaration￨f (￨f )￨f {￨f }￨f public￨f Binding￨f getCompilerBinding￨f (￨f )￨f {￨f }￨f private￨f TypeBinding￨f getTypeBinding￨f (￨f char￨p [￨p ]￨p simpleTypeName￨p )￨f {￨f }￨f private￨f TypeBinding￨f [￨f ]￨f getTypeBindingArguments￨f (￨f )￨f {￨f }￨f public￨f void￨f malformedKey￨f (￨f )￨f {￨f }￨f public￨f BindingKeyParser￨f newParser￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d UpToDate￨d extends￨d MatchingTask￨d implements￨d Condition￨d {￨d private￨e ArrayList￨e sourceFileSets￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e protected￨e Mapper￨e mapperElement￨e =￨e null￨e ;￨e private￨e String￨e _property￨e ;￨e private￨e File￨e _targetFile￨e ;￨e private￨e String￨e _value￨e ;￨e public￨f void￨f setProperty￨f (￨f String￨p property￨p )￨f {￨f }￨f public￨f void￨f setTargetFile￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f void￨f setValue￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f void￨f addSrcfiles￨f (￨f FileSet￨p fs￨p )￨f {￨f }￨f public￨f Mapper￨f createMapper￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f if￨j (￨j (￨c mapperElement￨c )￨c !=￨c null￨c )￨j {￨j throw￨e new￨e TaskException￨e (￨e "Cannot<seq2seq4repair_space>define<seq2seq4repair_space>more<seq2seq4repair_space>than<seq2seq4repair_space>one<seq2seq4repair_space>mapper"￨e )￨e ;￨e }￨j <START_BUG>￨b mapperElement￨b =￨b new￨b Mapper￨b (￨b getProject￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e mapperElement￨e ;￨e }￨f public￨f boolean￨f eval￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f scanDir￨f (￨f File￨f srcDir￨f ,￨f String￨f [￨f ]￨f files￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f private￨f String￨f getValue￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TwoPhaseCommitEventProcessor￨d implements￨d IEventProcessor￨d ,￨d ISharedObjectContainerTransaction￨d {￨d BaseSharedObject￨e sharedObject￨e =￨e null￨e ;￨e byte￨e transactionState￨e =￨e ISharedObjectContainerTransaction￨e .￨e ACTIVE￨e ;￨e Object￨e lock￨e =￨e new￨e Object￨e (￨e )￨e ;￨e List￨e participants￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e Map￨e failed￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e int￨e timeout￨e =￨e ISharedObjectTransactionConfig￨e .￨e DEFAULT_TIMEOUT￨e ;￨e int￨e minFailedToAbort￨e =￨e 0￨e ;￨e long￨e identifier￨e =￨e 0￨e ;￨e ISharedObjectTransactionParticipantsFilter￨e participantsFilter￨e =￨e null￨e ;￨e public￨f TwoPhaseCommitEventProcessor￨f (￨f BaseSharedObject￨p bse￨p ,￨p ISharedObjectTransactionConfig￨p config￨p )￨f {￨f }￨f protected￨f void￨f trace￨f (￨f String￨p msg￨p )￨f {￨f }￨f protected￨f void￨f traceStack￨f (￨f String￨p msg￨p ,￨p Throwable￨p t￨p )￨f {￨f }￨f protected￨f int￨f getTimeout￨f (￨f )￨f {￨f }￨f protected￨f int￨f getMinFailedToAbort￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isPrimary￨f (￨f )￨f {￨f }￨f protected￨f BaseSharedObject￨f getSharedObject￨f (￨f )￨f {￨f }￨f protected￨f ID￨f getHomeID￨f (￨f )￨f {￨f }￨f protected￨f void￨f addParticipants￨f (￨f ID￨p [￨p ]￨p ids￨p )￨f {￨f }￨f protected￨f void￨f removeParticipant￨f (￨f ID￨p id￨p )￨f {￨f }￨f protected￨f void￨f addFailed￨f (￨f ID￨p remote￨p ,￨p Throwable￨p failure￨p )￨f {￨f }￨f protected￨f ISharedObjectContext￨f getContext￨f (￨f )￨f {￨f }￨f public￨f boolean￨f processEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f protected￨f void￨f handleActivated￨f (￨f ISharedObjectActivatedEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f replicateTo￨f (￨f ID￨p [￨p ]￨p remotes￨p )￨f {￨f }￨f protected￨f void￨f handlePrimaryActivated￨f (￨f ISharedObjectActivatedEvent￨p event￨p )￨f {￨f }￨f private￨f long￨f getNextIdentifier￨f (￨f )￨f {￨f }￨f protected￨f void￨f handleReplicaActivated￨f (￨f ISharedObjectActivatedEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f handleJoined￨f (￨f IContainerConnectedEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f handleCreateResponse￨f (￨f ISharedObjectCreateResponseEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f handleDeparted￨f (￨f IContainerDisconnectedEvent￨p event￨p )￨f {￨f }￨f protected￨f void￨f handleVotingCompletedCreateResponse￨f (￨f ID￨p fromID￨p ,￨p Throwable￨p e￨p ,￨p long￨p identifier1￨p )￨f {￨f }￨f protected￨f void￨f handlePostCommitFailure￨f (￨f ID￨p fromID￨p ,￨p Throwable￨p e￨p ,￨p long￨p identifier1￨p )￨f {￨f }￨f protected￨f void￨f sendCommit￨f (￨f )￨f throws￨f SharedObjectAddAbortException￨f (￨f )￨f {￨f }￨f public￨f byte￨f getTransactionState￨f (￨f )￨f {￨f }￨f protected￨f void￨f setTransactionState￨f (￨f byte￨p state￨p )￨f {￨f }￨f public￨f void￨f waitToCommit￨f (￨f )￨f throws￨f SharedObjectAddAbortException￨f (￨f )￨f {￨f }￨f protected￨f void￨f doTMAbort￨f (￨f Throwable￨f except￨f )￨f throws￨f SharedObjectAddAbortException￨f (￨f )￨f {￨f }￨f protected￨f void￨f doTMCommit￨f (￨f )￨f throws￨f SharedObjectAddAbortException￨f (￨f )￨f {￨f trace￨e (￨e "doTMCommit"￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b getSharedObject￨b (￨b )￨b .￨b getGroupID￨b (￨b )￨b )￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b sendCommit￨e (￨e )￨e ;￨e }￨e localCommitted￨e (￨e )￨e ;￨e }￨f protected￨f void￨f localCommitted￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isVotingCompleted￨f (￨f )￨f throws￨f SharedObjectAddAbortException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CustomLoadMetricDefinition￨d extends￨d SimpleResourceDefinition￨d {￨d static￨e final￨e PathElement￨e PATH￨e =￨e PathElement￨e .￨e pathElement￨e (￨e CUSTOM_LOAD_METRIC￨e )￨e ;￨e protected￨e static￨e final￨e CustomLoadMetricDefinition￨e INSTANCE￨e =￨e new￨e CustomLoadMetricDefinition￨e (￨e )￨e ;￨e static￨e final￨e SimpleAttributeDefinition￨e CLASS￨e =￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e CommonAttributes￨e .￨e CLASS￨e ,￨e STRING￨e ,￨e false￨e )￨e .￨e setAllowExpression￨e (￨e false￨e )￨e .￨e setRestartAllServices￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e static￨f final￨f AttributeDefinition￨f [￨f ]￨f ATTRIBUTES￨f =￨f new￨f AttributeDefinition￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e static￨f void￨f buildTransformation￨f (￨f ModelVersion￨p version￨p ,￨p ResourceTransformationDescriptionBuilder￨p builder￨p )￨f {￨f <START_BUG>￨b if￨b (￨b VERSION_1_2_0￨b .￨b requiresTransformation￨b (￨b version￨b )￨b )￨b {￨b <END_BUG>￨b builder￨e .￨e addChildResource￨e (￨e CustomLoadMetricDefinition￨e .￨e PATH￨e )￨e .￨e getAttributeBuilder￨e (￨e )￨e .￨e addRejectCheck￨e (￨e SIMPLE_EXPRESSIONS￨e ,￨e CustomLoadMetricDefinition￨e .￨e CLASS￨e ,￨e LoadMetricDefinition￨e .￨e WEIGHT￨e )￨e .￨e addRejectCheck￨e (￨e CapacityCheckerAndConverter￨e .￨e INSTANCE￨e ,￨e LoadMetricDefinition￨e .￨e CAPACITY￨e )￨e .￨e setValueConverter￨e (￨e CapacityCheckerAndConverter￨e .￨e INSTANCE￨e ,￨e LoadMetricDefinition￨e .￨e CAPACITY￨e )￨e .￨e end￨e (￨e )￨e ;￨e }￨f private￨f CustomLoadMetricDefinition￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registerAttributes￨f (￨f ManagementResourceRegistration￨p resourceRegistration￨p )￨f {￨f }￨f }￨d
public￨d class￨d LineBreakHandler￨d implements￨d CharacterHandler￨d {￨d private￨e final￨e boolean￨e fallbackToEscape￨e ;￨e private￨e final￨e boolean￨e leaveOnLnBreak￨e ;￨e public￨f LineBreakHandler￨f (￨f boolean￨p leaveOnLnBreak￨p ,￨p boolean￨p fallbackToEscape￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f handle￨f (￨f ParsingContext￨f ctx￨f )￨f throws￨f CommandFormatException￨f (￨f )￨f {￨f if￨j (￨j (￨c ctx￨c .￨c getCharacter￨c (￨c )￨c )￨c ==￨c '\\'￨c )￨j {￨j if￨j (￨j (￨c (￨c ctx￨c .￨c getInput￨c (￨c )￨c .￨c length￨c (￨c )￨c )￨c >￨c (￨c (￨c ctx￨c .￨c getLocation￨c (￨c )￨c )￨c +￨c (￨c LINE_SEPARATOR￨c .￨c length￨c (￨c )￨c )￨c )￨c )￨c &&￨c (￨c ctx￨c .￨c getInput￨c (￨c )￨c .￨c startsWith￨c (￨c LINE_SEPARATOR￨c ,￨c (￨c (￨c ctx￨c .￨c getLocation￨c (￨c )￨c )￨c +￨c 1￨c )￨c )￨c )￨c )￨j {￨j if￨j (￨j leaveOnLnBreak￨c )￨j {￨j ctx￨e .￨e leaveState￨e (￨e )￨e ;￨e ctx￨e .￨e advanceLocation￨e (￨e LINE_SEPARATOR￨e .￨e length￨e (￨e )￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j fallbackToEscape￨c )￨j {￨j ctx￨e .￨e enterState￨e (￨e INSTANCE￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b doHandle￨b (￨b ctx￨b )￨b ;￨b <END_BUG>￨b }￨j }￨j else￨j {￨j doHandle￨e (￨e ctx￨e )￨e ;￨e }￨j }￨f protected￨f void￨f doHandle￨f (￨f ParsingContext￨f ctx￨f )￨f throws￨f CommandFormatException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestElementSaver￨d implements￨d TestElementTraverser￨d {￨d private￨e String￨e name￨e ;￨e private￨e LinkedList￨e stack￨e =￨e new￨e LinkedList￨e (￨e )￨e ;￨e private￨e DefaultConfiguration￨e rootConfig￨e =￨e null￨e ;￨e public￨f TestElementSaver￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f Configuration￨f getConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f startTestElement￨f (￨f TestElement￨p el￨p )￨f {￨f }￨f public￨f void￨f setConfigName￨f (￨f DefaultConfiguration￨p config￨p )￨f {￨f }￨f public￨f void￨f endTestElement￨f (￨f TestElement￨p el￨p )￨f {￨f }￨f public￨f void￨f simplePropertyValue￨f (￨f JMeterProperty￨p value￨p )￨f {￨f try￨f (￨f )￨f {￨f Object￨e parent￨e =￨e stack￨e .￨e getLast￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c parent￨c instanceof￨c Configuration￨c )￨c )￨j {￨j DefaultConfiguration￨e config￨e =￨e new￨e DefaultConfiguration￨e (￨e "property"￨e ,￨e "property"￨e )￨e ;￨e config￨e .￨e setValue￨e (￨e (￨e value￨e !=￨e null￨e ?￨e value￨e .￨e toString￨e (￨e )￨e :￨e ""￨e )￨e )￨e ;￨e config￨e .￨e setAttribute￨e (￨e "name"￨e ,￨e parent￨e .￨e toString￨e (￨e )￨e )￨e ;￨e config￨e .￨e setAttribute￨e (￨e XML_SPACE￨e ,￨e PRESERVE￨e )￨e ;￨e stack￨e .￨e removeLast￨e (￨e )￨e ;￨e stack￨e .￨e add￨e (￨e config￨e )￨e ;￨e }￨j if￨j (￨j (￨c parent￨c instanceof￨c DefaultConfiguration￨c )￨c &&￨c (￨c value￨c instanceof￨c Configuration￨c )￨c )￨j {￨j (￨e (￨e DefaultConfiguration￨e )￨e (￨e parent￨e )￨e )￨e .￨e addChild￨e (￨e (￨e (￨e Configuration￨e )￨e (￨e value￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c parent￨c instanceof￨c DefaultConfiguration￨c )￨c &&￨c (￨c !￨c (￨c value￨c instanceof￨c Configuration￨c )￨c )￨c )￨j {￨j DefaultConfiguration￨e config￨e =￨e new￨e DefaultConfiguration￨e (￨e "string"￨e ,￨e "string"￨e )￨e ;￨e <START_BUG>￨b config￨b .￨b setValue￨b (￨b value￨b .￨b toString￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b config￨e .￨e setAttribute￨e (￨e XML_SPACE￨e ,￨e PRESERVE￨e )￨e ;￨e (￨e (￨e DefaultConfiguration￨e )￨e (￨e parent￨e )￨e )￨e .￨e addChild￨e (￨e config￨e )￨e ;￨e }￨j }￨f catch￨f (￨f NoSuchElementException￨p e￨p )￨f {￨f }￨f }￨f public￨f void￨f startMap￨f (￨f MapProperty￨p map￨p )￨f {￨f }￨f public￨f void￨f startCollection￨f (￨f CollectionProperty￨p col￨p )￨f {￨f }￨f public￨f void￨f endProperty￨f (￨f JMeterProperty￨p key￨p )￨f {￨f }￨f private￨f void￨f finishConfig￨f (￨f )￨f {￨f }￨f public￨f void￨f startProperty￨f (￨f JMeterProperty￨p key￨p )￨f {￨f }￨f }￨d
public￨d class￨d CrosscuttingMembers￨d {￨d private￨e ResolvedTypeX￨e inAspect￨e ;￨e private￨e World￨e world￨e ;￨e private￨e PerClause￨e perClause￨e ;￨e private￨e List￨e shadowMungers￨e =￨e new￨e ArrayList￨e (￨e 4￨e )￨e ;￨e private￨e List￨e typeMungers￨e =￨e new￨e ArrayList￨e (￨e 4￨e )￨e ;￨e private￨e List￨e declareParents￨e =￨e new￨e ArrayList￨e (￨e 4￨e )￨e ;￨e private￨e List￨e declareSofts￨e =￨e new￨e ArrayList￨e (￨e 0￨e )￨e ;￨e private￨e List￨e declareDominates￨e =￨e new￨e ArrayList￨e (￨e 4￨e )￨e ;￨e public￨f CrosscuttingMembers￨f (￨f ResolvedTypeX￨p inAspect￨p )￨f {￨f }￨f public￨f void￨f addConcreteShadowMunger￨f (￨f ShadowMunger￨p m￨p )￨f {￨f }￨f public￨f void￨f addShadowMungers￨f (￨f Collection￨p c￨p )￨f {￨f }￨f private￨f void￨f addShadowMunger￨f (￨f ShadowMunger￨p m￨p )￨f {￨f }￨f public￨f void￨f addTypeMungers￨f (￨f Collection￨p c￨p )￨f {￨f }￨f public￨f void￨f addTypeMunger￨f (￨f ConcreteTypeMunger￨p m￨p )￨f {￨f }￨f public￨f void￨f addDeclares￨f (￨f Collection￨p c￨p )￨f {￨f }￨f public￨f void￨f addDeclare￨f (￨f Declare￨p declare￨p )￨f {￨f if￨j (￨j declare￨c instanceof￨c DeclareErrorOrWarning￨c )￨j {￨j ShadowMunger￨e m￨e =￨e new￨e Checker￨e (￨e (￨e (￨e DeclareErrorOrWarning￨e )￨e (￨e declare￨e )￨e )￨e )￨e ;￨e addShadowMunger￨e (￨e m￨e )￨e ;￨e }￨j else￨j if￨j (￨j declare￨c instanceof￨c DeclarePrecedence￨c )￨j {￨j declareDominates￨e .￨e add￨e (￨e declare￨e )￨e ;￨e }￨j else￨j if￨j (￨j declare￨c instanceof￨c DeclareParents￨c )￨j {￨j DeclareParents￨e dp￨e =￨e (￨e (￨e DeclareParents￨e )￨e (￨e declare￨e )￨e )￨e ;￨e exposeTypes￨e (￨e dp￨e .￨e getParents￨e (￨e )￨e .￨e getExactTypes￨e (￨e )￨e )￨e ;￨e declareParents￨e .￨e add￨e (￨e dp￨e )￨e ;￨e }￨j else￨j if￨j (￨j declare￨c instanceof￨c DeclareSoft￨c )￨j {￨j DeclareSoft￨e d￨e =￨e (￨e (￨e DeclareSoft￨e )￨e (￨e declare￨e )￨e )￨e ;￨e <START_BUG>￨b ShadowMunger￨b m￨b =￨b Advice￨b .￨b makeSoftener￨b (￨b world￨b ,￨b d￨b .￨b getPointcut￨b (￨b )￨b ,￨b d￨b .￨b getException￨b (￨b )￨b ,￨b inAspect￨b )￨b ;￨b <END_BUG>￨b Pointcut￨e concretePointcut￨e =￨e d￨e .￨e getPointcut￨e (￨e )￨e .￨e concretize￨e (￨e inAspect￨e ,￨e 0￨e ,￨e m￨e )￨e ;￨e m￨e .￨e pointcut￨e =￨e concretePointcut￨e ;￨e declareSofts￨e .￨e add￨e (￨e new￨e DeclareSoft￨e (￨e d￨e .￨e getException￨e (￨e )￨e ,￨e concretePointcut￨e )￨e )￨e ;￨e addConcreteShadowMunger￨e (￨e m￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e RuntimeException￨e (￨e "unimplemented"￨e )￨e ;￨e }￨j }￨f public￨f void￨f exposeTypes￨f (￨f Collection￨p typesToExpose￨p )￨f {￨f }￨f public￨f void￨f exposeType￨f (￨f TypeX￨p typeToExpose￨p )￨f {￨f }￨f public￨f void￨f addPrivilegedAccesses￨f (￨f Collection￨p accessedMembers￨p )￨f {￨f }￨f private￨f void￨f addPrivilegedAccess￨f (￨f ResolvedMember￨p member￨p )￨f {￨f }￨f public￨f Collection￨f getCflowEntries￨f (￨f )￨f {￨f }￨f public￨f boolean￨f replaceWith￨f (￨f CrosscuttingMembers￨p other￨p )￨f {￨f }￨f public￨f PerClause￨f getPerClause￨f (￨f )￨f {￨f }￨f public￨f void￨f setPerClause￨f (￨f PerClause￨p perClause￨p )￨f {￨f }￨f public￨f List￨f getDeclareDominates￨f (￨f )￨f {￨f }￨f public￨f List￨f getDeclareParents￨f (￨f )￨f {￨f }￨f public￨f List￨f getDeclareSofts￨f (￨f )￨f {￨f }￨f public￨f List￨f getShadowMungers￨f (￨f )￨f {￨f }￨f public￨f List￨f getTypeMungers￨f (￨f )￨f {￨f }￨f }￨d
class￨d RunUpdateProcessor￨d extends￨d UpdateRequestProcessor￨d {￨d private￨e final￨e SolrQueryRequest￨e req￨e ;￨e private￨e final￨e UpdateHandler￨e updateHandler￨e ;￨e private￨e boolean￨e changesSinceCommit￨e =￨e false￨e ;￨e public￨f RunUpdateProcessor￨f (￨f SolrQueryRequest￨p req￨p ,￨p UpdateRequestProcessor￨p next￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f processAdd￨f (￨f AddUpdateCommand￨f cmd￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f processDelete￨f (￨f DeleteUpdateCommand￨f cmd￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b cmd￨b .￨b id￨b )￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b updateHandler￨e .￨e delete￨e (￨e cmd￨e )￨e ;￨e else￨j {￨j updateHandler￨e .￨e deleteByQuery￨e (￨e cmd￨e )￨e ;￨e }￨j super￨e .￨e processDelete￨e (￨e cmd￨e )￨e ;￨e changesSinceCommit￨e =￨e true￨e ;￨e }￨f @￨f Override￨f public￨f void￨f processMergeIndexes￨f (￨f MergeIndexesCommand￨f cmd￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f processCommit￨f (￨f CommitUpdateCommand￨f cmd￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f processRollback￨f (￨f RollbackUpdateCommand￨f cmd￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f finish￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d MemberImpl￨d implements￨d Comparable￨d ,￨d AnnotatedElement￨d ,￨d Member￨d {￨d protected￨e Kind￨e kind￨e ;￨e protected￨e UnresolvedType￨e declaringType￨e ;￨e protected￨e int￨e modifiers￨e ;￨e protected￨e UnresolvedType￨e returnType￨e ;￨e protected￨e String￨e name￨e ;￨e protected￨e UnresolvedType￨e [￨e ]￨e parameterTypes￨e ;￨e private￨e final￨e String￨e signature￨e ;￨e private￨e String￨e paramSignature￨e ;￨e private￨e JoinPointSignatureIterator￨e joinPointSignatures￨e =￨e null￨e ;￨e public￨f MemberImpl￨f (￨f Kind￨p kind￨p ,￨p UnresolvedType￨p declaringType￨p ,￨p int￨p modifiers￨p ,￨p String￨p name￨p ,￨p String￨p signature￨p )￨f {￨f }￨f public￨f MemberImpl￨f (￨f Kind￨p kind￨p ,￨p UnresolvedType￨p declaringType￨p ,￨p int￨p modifiers￨p ,￨p UnresolvedType￨p returnType￨p ,￨p String￨p name￨p ,￨p UnresolvedType￨p [￨p ]￨p parameterTypes￨p )￨f {￨f }￨f public￨f ResolvedMember￨f resolve￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f static￨f String￨f typesToSignature￨f (￨f UnresolvedType￨p returnType￨p ,￨p UnresolvedType￨p [￨p ]￨p paramTypes￨p ,￨p boolean￨p useRawTypes￨p )￨f {￨f }￨f public￨f static￨f String￨f typesToSignature￨f (￨f UnresolvedType￨p [￨p ]￨p paramTypes￨p )￨f {￨f }￨f private￨f static￨f Object￨f [￨f ]￨f signatureToTypes￨f (￨f String￨p sig￨p ,￨p boolean￨p keepParameterizationInfo￨p )￨f {￨f }￨f public￨f static￨f MemberImpl￨f field￨f (￨f String￨p declaring￨p ,￨p int￨p mods￨p ,￨p String￨p name￨p ,￨p String￨p signature￨p )￨f {￨f }￨f public￨f static￨f Member￨f field￨f (￨f UnresolvedType￨p declaring￨p ,￨p int￨p mods￨p ,￨p String￨p name￨p ,￨p UnresolvedType￨p type￨p )￨f {￨f }￨f public￨f static￨f MemberImpl￨f method￨f (￨f UnresolvedType￨p declaring￨p ,￨p int￨p mods￨p ,￨p String￨p name￨p ,￨p String￨p signature￨p )￨f {￨f }￨f public￨f static￨f MemberImpl￨f monitorEnter￨f (￨f )￨f {￨f }￨f public￨f static￨f MemberImpl￨f monitorExit￨f (￨f )￨f {￨f }￨f public￨f static￨f Member￨f pointcut￨f (￨f UnresolvedType￨p declaring￨p ,￨p String￨p name￨p ,￨p String￨p signature￨p )￨f {￨f }￨f private￨f static￨f MemberImpl￨f field￨f (￨f String￨p declaring￨p ,￨p int￨p mods￨p ,￨p UnresolvedType￨p ty￨p ,￨p String￨p name￨p )￨f {￨f }￨f public￨f static￨f MemberImpl￨f method￨f (￨f UnresolvedType￨p declTy￨p ,￨p int￨p mods￨p ,￨p UnresolvedType￨p rTy￨p ,￨p String￨p name￨p ,￨p UnresolvedType￨p [￨p ]￨p paramTys￨p )￨f {￨f }￨f private￨f static￨f Member￨f pointcut￨f (￨f UnresolvedType￨p declTy￨p ,￨p int￨p mods￨p ,￨p UnresolvedType￨p rTy￨p ,￨p String￨p name￨p ,￨p UnresolvedType￨p [￨p ]￨p paramTys￨p )￨f {￨f }￨f public￨f static￨f ResolvedMemberImpl￨f makeExceptionHandlerSignature￨f (￨f UnresolvedType￨p inType￨p ,￨p UnresolvedType￨p catchType￨p )￨f {￨f }￨f public￨f static￨f MemberImpl￨f fieldFromString￨f (￨f String￨p str￨p )￨f {￨f }￨f public￨f static￨f Member￨f methodFromString￨f (￨f String￨p str￨p )￨f {￨f }￨f private￨f static￨f String￨f [￨f ]￨f parseIds￨f (￨f String￨p str￨p )￨f {￨f }￨f private￨e static￨e final￨e String￨e [￨e ]￨e ZERO_STRINGS￨e =￨e new￨e String￨e [￨e 0￨e ]￨e ;￨e public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f private￨e volatile￨e int￨e hashCode￨e =￨e 0￨e ;￨e public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f int￨f compareTo￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f String￨f toLongString￨f (￨f )￨f {￨f }￨f public￨f Kind￨f getKind￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f getDeclaringType￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f getReturnType￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f getGenericReturnType￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f getType￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f [￨f ]￨f getParameterTypes￨f (￨f )￨f {￨f }￨f public￨f String￨f getSignature￨f (￨f )￨f {￨f }￨f public￨f int￨f getArity￨f (￨f )￨f {￨f }￨f public￨f String￨f getParameterSignature￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isCompatibleWith￨f (￨f Member￨p am￨p )￨f {￨f }￨f private￨f static￨f boolean￨f equalTypes￨f (￨f UnresolvedType￨p [￨p ]￨p a￨p ,￨p UnresolvedType￨p [￨p ]￨p b￨p )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f UnresolvedType￨f [￨f ]￨f getExceptions￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isProtected￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isStatic￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isStrict￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isStatic￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isInterface￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isPrivate￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canBeParameterized￨f (￨f )￨f {￨f }￨f public￨f final￨f int￨f getCallsiteModifiers￨f (￨f )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getExtractableName￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasAnnotation￨f (￨f UnresolvedType￨p ofType￨p )￨f {￨f }￨f public￨f ResolvedType￨f [￨f ]￨f getAnnotationTypes￨f (￨f )￨f {￨f }￨f public￨f AnnotationX￨f [￨f ]￨f getAnnotations￨f (￨f )￨f {￨f <START_BUG>￨b throw￨b new￨b UnsupportedOperationException￨b (￨b "You<seq2seq4repair_space>should<seq2seq4repair_space>resolve<seq2seq4repair_space>this<seq2seq4repair_space>member<seq2seq4repair_space>and<seq2seq4repair_space>call<seq2seq4repair_space>getAnnotations()<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>result..."￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Collection￨f getDeclaringTypes￨f (￨f World￨p world￨p )￨f {￨f }￨f private￨f boolean￨f walkUp￨f (￨f Collection￨p acc￨p ,￨p ResolvedType￨p curr￨p )￨f {￨f }￨f private￨f boolean￨f walkUpStatic￨f (￨f Collection￨p acc￨p ,￨p ResolvedType￨p curr￨p )￨f {￨f }￨f public￨f String￨f getSignatureMakerName￨f (￨f )￨f {￨f }￨f public￨f String￨f getSignatureType￨f (￨f )￨f {￨f }￨f public￨f String￨f getSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f private￨f String￨f getHandlerSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f private￨f String￨f getStaticInitializationSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f getAdviceSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f getMethodSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f getMonitorSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f getConstructorSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f getFieldSignatureString￨f (￨f World￨p world￨p )￨f {￨f }￨f protected￨f String￨f makeString￨f (￨f int￨p i￨p )￨f {￨f }￨f protected￨f String￨f makeString￨f (￨f UnresolvedType￨p t￨p )￨f {￨f }￨f protected￨f String￨f makeString￨f (￨f UnresolvedType￨p [￨p ]￨p types￨p )￨f {￨f }￨f protected￨f String￨f makeString￨f (￨f String￨p [￨p ]￨p names￨p )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getParameterNames￨f (￨f World￨p world￨p )￨f {￨f }￨f public￨f Iterator￨f getJoinPointSignatures￨f (￨f World￨p inAWorld￨p )￨f {￨f }￨f }￨d
public￨d class￨d SourceTypeBinding￨d extends￨d ReferenceBinding￨d {￨d public￨e ReferenceBinding￨e superclass￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e superInterfaces￨e ;￨e private￨e FieldBinding￨e [￨e ]￨e fields￨e ;￨e private￨e MethodBinding￨e [￨e ]￨e methods￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e memberTypes￨e ;￨e public￨e TypeVariableBinding￨e [￨e ]￨e typeVariables￨e ;￨e public￨e ClassScope￨e scope￨e ;￨e public￨e static￨e final￨e int￨e METHOD_EMUL￨e =￨e 0￨e ;￨e public￨e static￨e final￨e int￨e FIELD_EMUL￨e =￨e 1￨e ;￨e public￨e static￨e final￨e int￨e CLASS_LITERAL_EMUL￨e =￨e 2￨e ;￨e public￨e static￨e final￨e int￨e RECEIVER_TYPE_EMUL￨e =￨e 3￨e ;￨e HashMap￨e [￨e ]￨e synthetics￨e ;￨e char￨e [￨e ]￨e genericReferenceTypeSignature￨e ;￨e private￨e SimpleLookupTable￨e storedAnnotations￨e =￨e null￨e ;￨e public￨f SourceTypeBinding￨f (￨f char￨p [￨p ]￨p [￨p ]￨p compoundName￨p ,￨p PackageBinding￨p fPackage￨p ,￨p ClassScope￨p scope￨p )￨f {￨f }￨f private￨f void￨f addDefaultAbstractMethods￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f addSyntheticFieldForInnerclass￨f (￨f LocalVariableBinding￨p actualOuterLocalVariable￨p )￨f {￨f }￨f public￨f FieldBinding￨f addSyntheticFieldForInnerclass￨f (￨f ReferenceBinding￨p enclosingType￨p )￨f {￨f }￨f public￨f FieldBinding￨f addSyntheticFieldForClassLiteral￨f (￨f TypeBinding￨p targetType￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f public￨f FieldBinding￨f addSyntheticFieldForAssert￨f (￨f BlockScope￨p blockScope￨p )￨f {￨f }￨f public￨f FieldBinding￨f addSyntheticFieldForEnumValues￨f (￨f )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f addSyntheticMethod￨f (￨f FieldBinding￨p targetField￨p ,￨p boolean￨p isReadAccess￨p )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f addSyntheticEnumMethod￨f (￨f char￨p [￨p ]￨p selector￨p )￨f {￨f }￨f public￨f SyntheticFieldBinding￨f addSyntheticFieldForSwitchEnum￨f (￨f char￨p [￨p ]￨p fieldName￨p ,￨p String￨p key￨p )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f addSyntheticMethodForSwitchEnum￨f (￨f TypeBinding￨p enumBinding￨p )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f addSyntheticMethod￨f (￨f MethodBinding￨p targetMethod￨p ,￨p boolean￨p isSuperAccess￨p )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f addSyntheticBridgeMethod￨f (￨f MethodBinding￨p inheritedMethodToBridge￨p ,￨p MethodBinding￨p targetMethod￨p )￨f {￨f }￨f public￨f int￨f kind￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f computeUniqueKey￨f (￨f boolean￨p isLeaf￨p )￨f {￨f }￨f void￨f faultInTypesForFieldsAndMethods￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f [￨f ]￨f fields￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f genericTypeSignature￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f genericSignature￨f (￨f )￨f {￨f }￨f public￨f long￨f getAnnotationTagBits￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f getDefaultAbstractMethods￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f getExactConstructor￨f (￨f TypeBinding￨p [￨p ]￨p argumentTypes￨p )￨f {￨f }￨f public￨f MethodBinding￨f getExactMethod￨f (￨f char￨p [￨p ]￨p selector￨p ,￨p TypeBinding￨p [￨p ]￨p argumentTypes￨p ,￨p CompilationUnitScope￨p refScope￨p )￨f {￨f }￨f public￨f FieldBinding￨f getField￨f (￨f char￨p [￨p ]￨p fieldName￨p ,￨p boolean￨p needResolve￨p )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f getMethods￨f (￨f char￨p [￨p ]￨p selector￨p )￨f {￨f }￨f public￨f FieldBinding￨f getSyntheticField￨f (￨f LocalVariableBinding￨p actualOuterLocalVariable￨p )￨f {￨f }￨f public￨f FieldBinding￨f getSyntheticField￨f (￨f ReferenceBinding￨p targetEnclosingType￨p ,￨p boolean￨p onlyExactMatch￨p )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f getSyntheticBridgeMethod￨f (￨f MethodBinding￨p inheritedMethodToBridge￨p )￨f {￨f }￨f public￨f void￨f initializeDeprecatedAnnotationTagBits￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEquivalentTo￨f (￨f TypeBinding￨p otherType￨p )￨f {￨f }￨f public￨f boolean￨f isGenericType￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f memberTypes￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f getUpdatedFieldBinding￨f (￨f FieldBinding￨p targetField￨p ,￨p ReferenceBinding￨p newDeclaringClass￨p )￨f {￨f }￨f public￨f MethodBinding￨f getUpdatedMethodBinding￨f (￨f MethodBinding￨p targetMethod￨p ,￨p ReferenceBinding￨p newDeclaringClass￨p )￨f {￨f }￨f public￨f boolean￨f hasMemberTypes￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f methods￨f (￨f )￨f {￨f }￨f private￨f FieldBinding￨f resolveTypeFor￨f (￨f FieldBinding￨p field￨p )￨f {￨f }￨f private￨f MethodBinding￨f resolveTypesFor￨f (￨f MethodBinding￨p method￨p )￨f {￨f }￨f AnnotationHolder￨f retrieveAnnotationHolder￨f (￨f Binding￨p binding￨p ,￨p boolean￨p forceInitialization￨p )￨f {￨f }￨f public￨f void￨f setFields￨f (￨f FieldBinding￨p [￨p ]￨p fields￨p )￨f {￨f }￨f public￨f void￨f setMethods￨f (￨f MethodBinding￨p [￨p ]￨p methods￨p )￨f {￨f }￨f public￨f final￨f int￨f sourceEnd￨f (￨f )￨f {￨f }￨f public￨f final￨f int￨f sourceStart￨f (￨f )￨f {￨f }￨f SimpleLookupTable￨f storedAnnotations￨f (￨f boolean￨p forceInitialize￨p )￨f {￨f <START_BUG>￨b if￨b (￨b forceInitialize￨b &&￨b (￨b (￨b this￨b .￨b storedAnnotations￨b )￨b ==￨b null￨b )￨b )￨b {￨b <END_BUG>￨b this￨e .￨e scope￨e .￨e referenceCompilationUnit￨e (￨e )￨e .￨e compilationResult￨e .￨e hasAnnotations￨e =￨e true￨e ;￨e if￨j (￨j !￨c (￨c this￨c .￨c scope￨c .￨c environment￨c (￨c )￨c .￨c globalOptions￨c .￨c storeAnnotations￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j this￨e .￨e storedAnnotations￨e =￨e new￨e SimpleLookupTable￨e (￨e 3￨e )￨e ;￨e }￨e return￨e this￨e .￨e storedAnnotations￨e ;￨e }￨f public￨f ReferenceBinding￨f superclass￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f superInterfaces￨f (￨f )￨f {￨f }￨f public￨f SyntheticMethodBinding￨f [￨f ]￨f syntheticMethods￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f [￨f ]￨f syntheticFields￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f TypeVariableBinding￨f [￨f ]￨f typeVariables￨f (￨f )￨f {￨f }￨f void￨f verifyMethods￨f (￨f MethodVerifier￨p verifier￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestUtils￨d {￨d private￨f TestUtils￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p msg￨p ,￨p double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertSame￨f (￨f double￨p expected￨p ,￨p double￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertSame￨f (￨f Complex￨p expected￨p ,￨p Complex￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f Complex￨p expected￨p ,￨p Complex￨p actual￨p ,￨p double￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f double￨p [￨p ]￨p expected￨p ,￨p double￨p [￨p ]￨p observed￨p ,￨p double￨p tolerance￨p )￨f {￨f }￨f public￨f static￨f Object￨f serializeAndRecover￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f static￨f void￨f checkSerializedEquality￨f (￨f Object￨p object￨p )￨f {￨f }￨f public￨f static￨f void￨f assertRelativelyEquals￨f (￨f double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p relativeError￨p )￨f {￨f }￨f public￨f static￨f void￨f assertRelativelyEquals￨f (￨f String￨p msg￨p ,￨p double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p relativeError￨p )￨f {￨f }￨f public￨f static￨f void￨f assertContains￨f (￨f String￨p msg￨p ,￨p Complex￨p [￨p ]￨p values￨p ,￨p Complex￨p z￨p ,￨p double￨p epsilon￨p )￨f {￨f }￨f public￨f static￨f void￨f assertContains￨f (￨f Complex￨p [￨p ]￨p values￨p ,￨p Complex￨p z￨p ,￨p double￨p epsilon￨p )￨f {￨f }￨f public￨f static￨f void￨f assertContains￨f (￨f String￨p msg￨p ,￨p double￨p [￨p ]￨p values￨p ,￨p double￨p x￨p ,￨p double￨p epsilon￨p )￨f {￨f }￨f public￨f static￨f void￨f assertContains￨f (￨f double￨p [￨p ]￨p values￨p ,￨p double￨p x￨p ,￨p double￨p epsilon￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p msg￨p ,￨p RealMatrix￨p expected￨p ,￨p RealMatrix￨p observed￨p ,￨p double￨p tolerance￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f FieldMatrix￨p <￨p ?￨p extends￨p FieldElement￨p <￨p ?￨p >￨p >￨p expected￨p ,￨p FieldMatrix￨p <￨p ?￨p extends￨p FieldElement￨p <￨p ?￨p >￨p >￨p observed￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p msg￨p ,￨p double￨p [￨p ]￨p expected￨p ,￨p double￨p [￨p ]￨p observed￨p ,￨p double￨p tolerance￨p )￨f {￨f StringBuffer￨e out￨e =￨e new￨e StringBuffer￨e (￨e msg￨e )￨e ;￨e if￨j (￨j (￨c expected￨c .￨c length￨c )￨c !=￨c (￨c observed￨c .￨c length￨c )￨c )￨j {￨j out￨e .￨e append￨e (￨e "\n<seq2seq4repair_space>Arrays<seq2seq4repair_space>not<seq2seq4repair_space>same<seq2seq4repair_space>length.<seq2seq4repair_space>\n"￨e )￨e ;￨e out￨e .￨e append￨e (￨e "expected<seq2seq4repair_space>has<seq2seq4repair_space>length<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e expected￨e .￨e length￨e )￨e ;￨e out￨e .￨e append￨e (￨e "<seq2seq4repair_space>observed<seq2seq4repair_space>length<seq2seq4repair_space>=<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e observed￨e .￨e length￨e )￨e ;￨e Assert￨e .￨e fail￨e (￨e out￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j boolean￨e failure￨e =￨e false￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c expected￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l try￨f (￨f )￨f {￨f <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b expected￨b [￨b i￨b ]￨b ,￨b observed￨b [￨b i￨b ]￨b ,￨b tolerance￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f AssertionFailedError￨p ex￨p )￨f {￨f failure￨e =￨e true￨e ;￨e out￨e .￨e append￨e (￨e "\n<seq2seq4repair_space>Elements<seq2seq4repair_space>at<seq2seq4repair_space>index<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e i￨e )￨e ;￨e out￨e .￨e append￨e (￨e "<seq2seq4repair_space>differ.<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e "<seq2seq4repair_space>expected<seq2seq4repair_space>=<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e expected￨e [￨e i￨e ]￨e )￨e ;￨e out￨e .￨e append￨e (￨e "<seq2seq4repair_space>observed<seq2seq4repair_space>=<seq2seq4repair_space>"￨e )￨e ;￨e out￨e .￨e append￨e (￨e observed￨e [￨e i￨e ]￨e )￨e ;￨e }￨f }￨l if￨j (￨j failure￨c )￨j {￨j Assert￨e .￨e fail￨e (￨e out￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j }￨f public￨f static￨f <￨f T￨f extends￨f FieldElement￨f <￨f T￨f >￨f >￨f void￨f assertEquals￨f (￨f T￨p [￨p ]￨p m￨p ,￨p T￨p [￨p ]￨p n￨p )￨f {￨f }￨f }￨d
class￨d SearchableEnvironmentRequestor￨d extends￨d JavaElementRequestor￨d {￨d protected￨e ISearchRequestor￨e requestor￨e ;￨e protected￨e ICompilationUnit￨e unitToSkip￨e ;￨e protected￨e IJavaProject￨e project￨e ;￨e protected￨e NameLookup￨e nameLookup￨e ;￨e protected￨e boolean￨e checkAccessRestrictions￨e ;￨e public￨f SearchableEnvironmentRequestor￨f (￨f ISearchRequestor￨p requestor￨p )￨f {￨f }￨f public￨f SearchableEnvironmentRequestor￨f (￨f ISearchRequestor￨p requestor￨p ,￨p ICompilationUnit￨p unitToSkip￨p ,￨p IJavaProject￨p project￨p ,￨p NameLookup￨p nameLookup￨p )￨f {￨f }￨f public￨f void￨f acceptInitializer￨f (￨f IInitializer￨p initializer￨p )￨f {￨f }￨f public￨f void￨f acceptPackageFragment￨f (￨f IPackageFragment￨p packageFragment￨p )￨f {￨f }￨f public￨f void￨f acceptType￨f (￨f IType￨p type￨p )￨f {￨f try￨f (￨f )￨f {￨f if￨j (￨j (￨c (￨c this￨c .￨c unitToSkip￨c )￨c !=￨c null￨c )￨c &&￨c (￨c this￨c .￨c unitToSkip￨c .￨c equals￨c (￨c type￨c .￨c getCompilationUnit￨c (￨c )￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j char￨e [￨e ]￨e packageName￨e =￨e type￨e .￨e getPackageFragment￨e (￨e )￨e .￨e getElementName￨e (￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e boolean￨e isBinary￨e =￨e type￨e instanceof￨e BinaryType￨e ;￨e AccessRestriction￨e accessRestriction￨e =￨e null￨e ;￨e if￨j (￨j (￨c this￨c .￨c checkAccessRestrictions￨c )￨c &&￨c (￨c isBinary￨c ||￨c (￨c !￨c (￨c type￨c .￨c getJavaProject￨c (￨c )￨c .￨c equals￨c (￨c this￨c .￨c project￨c )￨c )￨c )￨c )￨c )￨j {￨j PackageFragmentRoot￨e root￨e =￨e (￨e (￨e PackageFragmentRoot￨e )￨e (￨e type￨e .￨e getAncestor￨e (￨e IJavaElement￨e .￨e PACKAGE_FRAGMENT_ROOT￨e )￨e )￨e )￨e ;￨e ClasspathEntry￨e entry￨e =￨e (￨e (￨e ClasspathEntry￨e )￨e (￨e this￨e .￨e nameLookup￨e .￨e rootToResolvedEntries￨e .￨e get￨e (￨e root￨e )￨e )￨e )￨e ;￨e if￨j (￨j entry￨c !=￨c null￨c )￨j {￨j AccessRuleSet￨e accessRuleSet￨e =￨e entry￨e .￨e getAccessRuleSet￨e (￨e )￨e ;￨e if￨j (￨j accessRuleSet￨c !=￨c null￨c )￨j {￨j char￨e [￨e ]￨e [￨e ]￨e packageChars￨e =￨e CharOperation￨e .￨e splitOn￨e (￨e '.'￨e ,￨e packageName￨e )￨e ;￨e char￨e [￨e ]￨e fileChars￨e =￨e type￨e .￨e getParent￨e (￨e )￨e .￨e getElementName￨e (￨e )￨e .￨e toCharArray￨e (￨e )￨e ;￨e accessRestriction￨e =￨e accessRuleSet￨e .￨e getViolatedRestriction￨e (￨e CharOperation￨e .￨e concatWith￨e (￨e packageChars￨e ,￨e fileChars￨e ,￨e '/'￨e )￨e )￨e ;￨e }￨j }￨j }￨j <START_BUG>￨b this￨b .￨b requestor￨b .￨b acceptType￨b (￨b packageName￨b ,￨b type￨b .￨b getElementName￨b (￨b )￨b .￨b toCharArray￨b (￨b )￨b ,￨b type￨b .￨b getFlags￨b (￨b )￨b ,￨b accessRestriction￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f JavaModelException￨p jme￨p )￨f {￨f }￨f }￨f }￨d
public￨d class￨d ParenthesizedExpression￨d extends￨d Expression￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d EXPRESSION_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d ParenthesizedExpression￨d .￨d class￨d ,￨d "expression"￨d ,￨d Expression￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d private￨e Expression￨e expression￨e =￨e null￨e ;￨e ParenthesizedExpression￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f ParenthesizedExpression￨e result￨e =￨e new￨e ParenthesizedExpression￨e (￨e target￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setSourceRange￨b (￨b this￨b .￨b getStartPosition￨b (￨b )￨b ,￨b this￨b .￨b getLength￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e setExpression￨e (￨e (￨e (￨e Expression￨e )￨e (￨e getExpression￨e (￨e )￨e .￨e clone￨e (￨e target￨e )￨e )￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f Expression￨f getExpression￨f (￨f )￨f {￨f }￨f public￨f void￨f setExpression￨f (￨f Expression￨p expression￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TrecContentSourceTest￨d extends￨d LuceneTestCase￨d {￨d private￨d static￨d class￨d StringableTrecSource￨d extends￨d TrecContentSource￨d {￨d private￨e String￨e docs￨e =￨e null￨e ;￨e public￨f StringableTrecSource￨f (￨f String￨p docs￨p ,￨p boolean￨p forever￨p )￨f {￨f }￨f @￨f Override￨f void￨f openNextFile￨f (￨f )￨f throws￨f IOException￨f ,￨f NoMoreDataException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setConfig￨f (￨f Config￨p config￨p )￨f {￨f }￨f }￨d private￨f void￨f assertDocData￨f (￨f DocData￨f dd￨f ,￨f String￨f expName￨f ,￨f String￨f expTitle￨f ,￨f String￨f expBody￨f ,￨f Date￨f expDate￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f private￨f void￨f assertNoMoreDataException￨f (￨f TrecContentSourceTest￨f .￨f StringableTrecSource￨f stdm￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testOneDocument￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testTwoDocuments￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testMissingDate￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testBadDate￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testForever￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testTrecFeedDirAllTypes￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f File￨e dataDir￨e =￨e _TestUtil￨e .￨e getTempDir￨e (￨e "trecFeedAllTypes"￨e )￨e ;￨e _TestUtil￨e .￨e unzip￨e (￨e getDataFile￨e (￨e "trecdocs.zip"￨e )￨e ,￨e dataDir￨e )￨e ;￨e TrecContentSource￨e tcs￨e =￨e new￨e TrecContentSource￨e (￨e )￨e ;￨e Properties￨e props￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e "print.props"￨e ,￨e "false"￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e "content.source.verbose"￨e ,￨e "false"￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e "content.source.excludeIteration"￨e ,￨e "true"￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e "doc.maker.forever"￨e ,￨e "false"￨e )￨e ;￨e props￨e .￨e setProperty￨e (￨e "docs.dir"￨e ,￨e dataDir￨e .￨e getCanonicalPath￨e (￨e )￨e .￨e replace￨e (￨e '\\'￨e ,￨e '/'￨e )￨e )￨e ;￨e props￨d .￨d setProperty￨d (￨d "trec.doc.parser"￨d ,￨d TrecParserByPath￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d props￨d .￨d setProperty￨d (￨d "content.source.forever"￨d ,￨d "false"￨d )￨d ;￨d tcs￨d .￨d setConfig￨d (￨d new￨d Config￨d (￨d props￨d )￨d )￨d ;￨d tcs￨d .￨d resetInputs￨d (￨d )￨d ;￨d DocData￨d dd￨d =￨d new￨d DocData￨d (￨d )￨d ;￨d int￨d n￨d =￨d 0￨d ;￨d boolean￨d gotExpectedException￨d =￨d false￨d ;￨d HashSet￨d <￨d ParsePathType￨d >￨d unseenTypes￨d =￨d new￨d HashSet￨d <￨d ParsePathType￨d >￨d (￨d Arrays￨d .￨d asList￨d (￨d ParsePathType￨d .￨d values￨d (￨d )￨d )￨d )￨d ;￨d try￨d {￨d while￨l (￨l n￨c <￨c 100￨c )￨l {￨l dd￨e =￨e tcs￨e .￨e getNextDocData￨e (￨e dd￨e )￨e ;￨e ++￨e n￨e ;￨e assertNotNull￨e (￨e (￨e (￨e "doc<seq2seq4repair_space>data<seq2seq4repair_space>"￨e +￨e n￨e )￨e +￨e "<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null!"￨e )￨e ,￨e dd￨e )￨e ;￨e unseenTypes￨e .￨e remove￨e (￨e tcs￨e .￨e currPathType￨e )￨e ;￨e switch￨s (￨s tcs￨c .￨c currPathType￨c )￨s {￨s case￨c GOV2￨c :￨c assertDocData￨e (￨e dd￨e ,￨e "TEST-000"￨e ,￨e "TEST-000<seq2seq4repair_space>title"￨e ,￨e "TEST-000<seq2seq4repair_space>text"￨e ,￨e tcs￨e .￨e parseDate￨e (￨e "Sun,<seq2seq4repair_space>11<seq2seq4repair_space>Jan<seq2seq4repair_space>2009<seq2seq4repair_space>08:00:00<seq2seq4repair_space>GMT"￨e )￨e )￨e ;￨e break￨e ;￨e case￨c FBIS￨c :￨c assertDocData￨e (￨e dd￨e ,￨e "TEST-001"￨e ,￨e "TEST-001<seq2seq4repair_space>Title"￨e ,￨e "TEST-001<seq2seq4repair_space>text"￨e ,￨e tcs￨e .￨e parseDate￨e (￨e "1<seq2seq4repair_space>January<seq2seq4repair_space>1991"￨e )￨e )￨e ;￨e break￨e ;￨e case￨c FR94￨c :￨c assertDocData￨e (￨e dd￨e ,￨e "TEST-002"￨e ,￨e null￨e ,￨e "DEPARTMENT<seq2seq4repair_space>OF<seq2seq4repair_space>SOMETHING"￨e ,￨e tcs￨e .￨e parseDate￨e (￨e "February<seq2seq4repair_space>3,<seq2seq4repair_space>1994"￨e )￨e )￨e ;￨e break￨e ;￨e case￨c FT￨c :￨c assertDocData￨e (￨e dd￨e ,￨e "TEST-003"￨e ,￨e "Test-003<seq2seq4repair_space>title"￨e ,￨e "Some<seq2seq4repair_space>pub<seq2seq4repair_space>text"￨e ,￨e tcs￨e .￨e parseDate￨e (￨e "980424"￨e )￨e )￨e ;￨e break￨e ;￨e case￨c LATIMES￨c :￨c assertDocData￨e (￨e dd￨e ,￨e "TEST-004"￨e ,￨e "Test-004<seq2seq4repair_space>Title"￨e ,￨e "Some<seq2seq4repair_space>paragraph"￨e ,￨e tcs￨e .￨e parseDate￨e (￨e "January<seq2seq4repair_space>17,<seq2seq4repair_space>1997,<seq2seq4repair_space>Sunday"￨e )￨e )￨e ;￨e break￨e ;￨e default￨c :￨c assertTrue￨e (￨e "Should<seq2seq4repair_space>never<seq2seq4repair_space>get<seq2seq4repair_space>here!"￨e ,￨e false￨e )￨e ;￨e }￨s }￨l }￨d catch￨f (￨f NoMoreDataException￨p e￨p )￨f {￨f gotExpectedException￨e =￨e true￨e ;￨e }￨f assertTrue￨e (￨e "Should<seq2seq4repair_space>have<seq2seq4repair_space>gotten<seq2seq4repair_space>NoMoreDataException!"￨e ,￨e gotExpectedException￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b "Wrong<seq2seq4repair_space>numbre<seq2seq4repair_space>of<seq2seq4repair_space>documents<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>osurce!"￨b ,￨b 5￨b ,￨b n￨b )￨b ;￨b <END_BUG>￨b assertTrue￨e (￨e "Did<seq2seq4repair_space>not<seq2seq4repair_space>see<seq2seq4repair_space>all<seq2seq4repair_space>types!"￨e ,￨e unseenTypes￨e .￨e isEmpty￨e (￨e )￨e )￨e ;￨e }￨f }￨d
public￨d class￨d TreeSelectionManager￨d extends￨d SelectionManager￨d {￨d protected￨e FolderTreeNode￨e folder￨e ;￨e protected￨e Vector￨e treeListenerList￨e ;￨e public￨f TreeSelectionManager￨f (￨f )￨f {￨f }￨f public￨f FolderTreeNode￨f getFolder￨f (￨f )￨f {￨f }￨f public￨f void￨f addFolderSelectionListener￨f (￨f FolderSelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f fireFolderSelectionEvent￨f (￨f FolderTreeNode￨p oldFolder￨p ,￨p FolderTreeNode￨p newFolder￨p )￨f {￨f }￨f public￨f DefaultCommandReference￨f [￨f ]￨f getSelection￨f (￨f )￨f {￨f log￨e .￨e info￨e (￨e (￨e "folder="￨e +￨e (￨e folder￨e )￨e )￨e )￨e ;￨e FolderCommandReference￨e [￨e ]￨e references￨e =￨e new￨e FolderCommandReference￨e [￨e 1￨e ]￨e ;￨e <START_BUG>￨b references￨b [￨b 0￨b ]￨b =￨b new￨b FolderCommandReference￨b (￨b (￨b (￨b Folder￨b )￨b (￨b folder￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e references￨e ;￨e }￨f }￨d
public￨d class￨d Snippet83￨d extends￨d ByteArrayTransfer￨d {￨d private￨e static￨e Snippet83￨e _instance￨e =￨e new￨e Snippet83￨e (￨e )￨e ;￨e private￨e int￨e [￨e ]￨e ids￨e ;￨e private￨e String￨e [￨e ]￨e names￨e ;￨e public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f Display￨e display￨e =￨e new￨e Display￨e (￨e )￨e ;￨e Shell￨e shell￨e =￨e new￨e Shell￨e (￨e display￨e )￨e ;￨e shell￨e .￨e setLayout￨e (￨e new￨e FillLayout￨e (￨e )￨e )￨e ;￨e Canvas￨e canvas￨e =￨e new￨e Canvas￨e (￨e shell￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e DropTarget￨e target￨e =￨e new￨e DropTarget￨e (￨e canvas￨e ,￨e (￨e (￨e DND￨e .￨e DROP_DEFAULT￨e )￨e |￨e (￨e DND￨e .￨e DROP_LINK￨e )￨e )￨e )￨e ;￨e target￨f .￨f setTransfer￨f (￨f new￨f Transfer￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e target￨f .￨f addDropListener￨f (￨f new￨f DropTargetAdapter￨f (￨f )￨f {￨f public￨f void￨f dragEnter￨f (￨f DropTargetEvent￨p event￨p )￨f {￨f <START_BUG>￨b String￨b ops￨b =￨b null￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c (￨c event￨c .￨c operations￨c )￨c &￨c (￨c DND￨c .￨c DROP_COPY￨c )￨c )￨c !=￨c 0￨c )￨j {￨j ops￨e +=￨e "Copy;"￨e ;￨e }￨j if￨j (￨j (￨c (￨c event￨c .￨c operations￨c )￨c &￨c (￨c DND￨c .￨c DROP_MOVE￨c )￨c )￨c !=￨c 0￨c )￨j {￨j ops￨e +=￨e "Move;"￨e ;￨e }￨j if￨j (￨j (￨c (￨c event￨c .￨c operations￨c )￨c &￨c (￨c DND￨c .￨c DROP_LINK￨c )￨c )￨c !=￨c 0￨c )￨j {￨j ops￨e +=￨e "Link;"￨e ;￨e }￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e "Allowed<seq2seq4repair_space>Operations<seq2seq4repair_space>are<seq2seq4repair_space>"￨e +￨e ops￨e )￨e )￨e ;￨e TransferData￨e [￨e ]￨e data￨e =￨e event￨e .￨e dataTypes￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c data￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l int￨e id￨e =￨e data￨e [￨e i￨e ]￨e .￨e type￨e ;￨e String￨e name￨e =￨e Snippet83￨e .￨e getNameFromId￨e (￨e id￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e (￨e "Data<seq2seq4repair_space>type<seq2seq4repair_space>is<seq2seq4repair_space>"￨e +￨e id￨e )￨e +￨e "<seq2seq4repair_space>"￨e )￨e +￨e name￨e )￨e )￨e ;￨e }￨l }￨f }￨f )￨e ;￨e shell￨e .￨e setSize￨e (￨e 400￨e ,￨e 400￨e )￨e ;￨e shell￨e .￨e open￨e (￨e )￨e ;￨e while￨l (￨l !￨c (￨c shell￨c .￨c isDisposed￨c (￨c )￨c )￨c )￨l {￨l if￨j (￨j !￨c (￨c display￨c .￨c readAndDispatch￨c (￨c )￨c )￨c )￨j {￨j display￨e .￨e sleep￨e (￨e )￨e ;￨e }￨j }￨l display￨e .￨e dispose￨e (￨e )￨e ;￨e }￨f public￨f static￨f Snippet83￨f getInstance￨f (￨f )￨f {￨f }￨f Snippet83￨f (￨f )￨f {￨f }￨f public￨f void￨f javaToNative￨f (￨f Object￨p object￨p ,￨p TransferData￨p transferData￨p )￨f {￨f }￨f public￨f Object￨f nativeToJava￨f (￨f TransferData￨p transferData￨p )￨f {￨f }￨f protected￨f String￨f [￨f ]￨f getTypeNames￨f (￨f )￨f {￨f }￨f protected￨f int￨f [￨f ]￨f getTypeIds￨f (￨f )￨f {￨f }￨f static￨f String￨f getNameFromId￨f (￨f int￨p id￨p )￨f {￨f }￨f }￨d
class￨d CTabFolderTab￨d extends￨d Tab￨d {￨d int￨e lastSelectedTab￨e =￨e 0￨e ;￨e CTabFolder￨e tabFolder1￨e ;￨e Group￨e tabFolderGroup￨e ;￨e Group￨e itemGroup￨e ;￨e Button￨e topButton￨e ;￨e Button￨e bottomButton￨e ;￨e Button￨e flatButton￨e ;￨e Button￨e closeButton￨e ;￨e static￨f String￨f [￨f ]￨f CTabItems1￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e Button￨e foregroundSelectionButton￨e ;￨e Button￨e backgroundSelectionButton￨e ;￨e Button￨e itemFontButton￨e ;￨e Image￨e foregroundSelectionImage￨e ;￨e Image￨e backgroundSelectionImage￨e ;￨e Color￨e foregroundSelectionColor￨e ;￨e Color￨e backgroundSelectionColor￨e ;￨e Font￨e itemFont￨e ;￨e Button￨e simpleTabButton￨e ;￨e Button￨e singleTabButton￨e ;￨e Button￨e imageButton￨e ;￨e Button￨e showMinButton￨e ;￨e Button￨e showMaxButton￨e ;￨e Button￨e unselectedCloseButton￨e ;￨e Button￨e unselectedImageButton￨e ;￨e CTabFolderTab￨f (￨f ControlExample￨p instance￨p )￨f {￨f }￨f void￨f createColorGroup￨f (￨f )￨f {￨f }￨f void￨f createOtherGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleWidgets￨f (￨f )￨f {￨f }￨f void￨f createStyleGroup￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f getCustomEventNames￨f (￨f )￨f {￨f }￨f Item￨f [￨f ]￨f getExampleWidgetItems￨f (￨f )￨f {￨f }￨f Control￨f [￨f ]￨f getExampleWidgets￨f (￨f )￨f {￨f }￨f String￨f getTabText￨f (￨f )￨f {￨f }￨f void￨f hookCustomListener￨f (￨f final￨p String￨p eventName￨p )￨f {￨f if￨j (￨j eventName￨c ==￨c "CTabFolderEvent"￨c )￨j {￨j tabFolder1￨f .￨f addCTabFolder2Listener￨f (￨f new￨f CTabFolder2Adapter￨f (￨f )￨f {￨f <START_BUG>￨b public￨b void￨b itemClosed￨b (￨b CTabFolderEvent￨b event￨b )￨b {￨b <END_BUG>￨b log￨e (￨e eventName￨e ,￨e event￨e )￨e ;￨e }￨f )￨e ;￨e }￨j }￨f void￨f resetColorsAndFonts￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetForeground￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetBackground￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetFont￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetState￨f (￨f )￨f {￨f }￨f void￨f setSimpleTabs￨f (￨f )￨f {￨f }￨f void￨f setSingleTabs￨f (￨f )￨f {￨f }￨f void￨f setImages￨f (￨f )￨f {￨f }￨f void￨f setMinimizeVisible￨f (￨f )￨f {￨f }￨f void￨f setMaximizeVisible￨f (￨f )￨f {￨f }￨f void￨f setUnselectedCloseVisible￨f (￨f )￨f {￨f }￨f void￨f setUnselectedImageVisible￨f (￨f )￨f {￨f }￨f void￨f setItemFont￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ContextAdmin￨d {￨d private￨e ContextManager￨e cm￨e ;￨e private￨e Request￨e realRequest￨e ;￨e private￨e String￨e submit￨e =￨e null￨e ;￨e private￨e String￨e addContextPath￨e =￨e null￨e ;￨e private￨e String￨e addContextDocBase￨e =￨e null￨e ;￨e private￨e String￨e removeContextName￨e =￨e null￨e ;￨e public￨f void￨f setSubmit￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f void￨f setAddContextPath￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f void￨f setAddContextDocBase￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f void￨f setRemoveContextName￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f void￨f init￨f (￨f HttpServletRequest￨p request￨p )￨f {￨f }￨f public￨f Enumeration￨f getContextNames￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getContextInfo￨f (￨f String￨p contextName￨p )￨f {￨f (￨e Enumeration￨e )￨e ++￨e ;￨e String￨e key￨e ;￨e Context￨e context￨e ;￨e Vector￨e v￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e context￨e =￨e cm￨e .￨e getContext￨e (￨e contextName￨e )￨e ;￨e v￨e .￨e addElement￨e (￨e (￨e "DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨e +￨e (￨e context￨e .￨e getDocBase￨e (￨e )￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b v￨b .￨b addElement￨b (￨b (￨b "FULL<seq2seq4repair_space>DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨b +￨b (￨b context￨b .￨b getDocumentBase￨b (￨b )￨b .￨b toString￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b v￨e .￨e addElement￨e (￨e (￨e "PATH:<seq2seq4repair_space>"￨e +￨e (￨e context￨e .￨e getPath￨e (￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c context￨c .￨c getWorkDir￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j v￨e .￨e addElement￨e (￨e (￨e "WORK<seq2seq4repair_space>DIR:<seq2seq4repair_space>"￨e +￨e (￨e RequestUtil￨e .￨e URLDecode￨e (￨e context￨e .￨e getWorkDir￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e }￨j v￨e .￨e addElement￨e (￨e (￨e "DESCRIPTION:<seq2seq4repair_space>"￨e +￨e (￨e context￨e .￨e getDescription￨e (￨e )￨e )￨e )￨e )￨e ;￨e v￨e .￨e addElement￨e (￨e (￨e "SESSION<seq2seq4repair_space>TIMEOUT:<seq2seq4repair_space>"￨e +￨e (￨e new￨e Integer￨e (￨e context￨e .￨e getSessionTimeOut￨e (￨e )￨e )￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f public￨f String￨f addContext￨f (￨f )￨f {￨f }￨f public￨f String￨f removeContext￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FileUtils￨d {￨d private￨e static￨e Random￨e rand￨e =￨e new￨e Random￨e (￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e )￨e ;￨e private￨e static￨e Object￨e lockReflection￨e =￨e new￨e Object￨e (￨e )￨e ;￨e private￨e static￨e Method￨e setLastModified￨e =￨e null￨e ;￨e private￨e boolean￨e onNetWare￨e =￨e Os￨e .￨e isFamily￨e (￨e "netware"￨e )￨e ;￨e private￨e static￨e boolean￨e [￨e ]￨e isSpecial￨e =￨e new￨e boolean￨e [￨e 256￨e ]￨e ;￨e private￨e static￨e char￨e [￨e ]￨e escapedChar1￨e =￨e new￨e char￨e [￨e 256￨e ]￨e ;￨e private￨e static￨e char￨e [￨e ]￨e escapedChar2￨e =￨e new￨e char￨e [￨e 256￨e ]￨e ;￨e public￨f static￨f FileUtils￨f newFileUtils￨f (￨f )￨f {￨f }￨f protected￨f FileUtils￨f (￨f )￨f {￨f }￨f public￨f URL￨f getFileURL￨f (￨f File￨f file￨f )￨f throws￨f MalformedURLException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f Vector￨f filterChains￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f encoding￨f ,￨f Project￨f project￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f String￨f sourceFile￨f ,￨f String￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f Vector￨f filterChains￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f inputEncoding￨f ,￨f String￨f outputEncoding￨f ,￨f Project￨f project￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f Vector￨f filterChains￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f encoding￨f ,￨f Project￨f project￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f copyFile￨f (￨f File￨f sourceFile￨f ,￨f File￨f destFile￨f ,￨f FilterSetCollection￨f filters￨f ,￨f Vector￨f filterChains￨f ,￨f boolean￨f overwrite￨f ,￨f boolean￨f preserveLastModified￨f ,￨f String￨f inputEncoding￨f ,￨f String￨f outputEncoding￨f ,￨f Project￨f project￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f final￨f Method￨f getSetLastModified￨f (￨f )￨f {￨f }￨f public￨f void￨f setFileLastModified￨f (￨f File￨f file￨f ,￨f long￨f time￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f File￨f resolveFile￨f (￨f File￨p file￨p ,￨p String￨p filename￨p )￨f {￨f }￨f public￨f File￨f normalize￨f (￨f String￨p path￨p )￨f {￨f }￨f public￨f File￨f createTempFile￨f (￨f String￨p prefix￨p ,￨p String￨p suffix￨p ,￨p File￨p parentDir￨p )￨f {￨f }￨f public￨f boolean￨f contentEquals￨f (￨f File￨f f1￨f ,￨f File￨f f2￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f File￨f getParentFile￨f (￨f File￨p f￨p )￨f {￨f }￨f public￨f static￨f final￨f String￨f readFully￨f (￨f Reader￨f rdr￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f final￨f String￨f readFully￨f (￨f Reader￨f rdr￨f ,￨f int￨f bufferSize￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f createNewFile￨f (￨f File￨f f￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSymbolicLink￨f (￨f File￨f parent￨f ,￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f String￨f removeLeadingPath￨f (￨f File￨p leading￨p ,￨p File￨p path￨p )￨f {￨f }￨f public￨f String￨f toURI￨f (￨f String￨p path￨p )￨f {￨f boolean￨e isDir￨e =￨e new￨e File￨e (￨e path￨e )￨e .￨e isDirectory￨e (￨e )￨e ;￨e StringBuffer￨e sb￨e =￨e new￨e StringBuffer￨e (￨e "file:"￨e )￨e ;￨e try￨f (￨f )￨f {￨f path￨e =￨e normalize￨e (￨e path￨e )￨e .￨e getAbsolutePath￨e (￨e )￨e ;￨e sb￨e .￨e append￨e (￨e "//"￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b path￨b .￨b startsWith￨b (￨b "/"￨b )￨b )￨b )￨b {￨b <END_BUG>￨b sb￨e .￨e append￨e (￨e "/"￨e )￨e ;￨e }￨f catch￨f (￨f BuildException￨p e￨p )￨f {￨f }￨f path￨e =￨e path￨e .￨e replace￨e (￨e '\\'￨e ,￨e '/'￨e )￨e ;￨e CharacterIterator￨e iter￨e =￨e new￨e StringCharacterIterator￨e (￨e path￨e )￨e ;￨e for￨l (￨l char￨c c￨c =￨c iter￨c .￨c first￨c (￨c )￨c ;￨c c￨c !=￨c (￨c CharacterIterator￨c .￨c DONE￨c )￨c ;￨c c￨c =￨c iter￨c .￨c next￨c (￨c )￨c )￨l {￨l if￨j (￨j FileUtils￨c .￨c isSpecial￨c [￨c c￨c ]￨c )￨j {￨j sb￨e .￨e append￨e (￨e '%'￨e )￨e ;￨e sb￨e .￨e append￨e (￨e FileUtils￨e .￨e escapedChar1￨e [￨e c￨e ]￨e )￨e ;￨e sb￨e .￨e append￨e (￨e FileUtils￨e .￨e escapedChar2￨e [￨e c￨e ]￨e )￨e ;￨e }￨j else￨j {￨j sb￨e .￨e append￨e (￨e c￨e )￨e ;￨e }￨j }￨l if￨j (￨j isDir￨c &&￨c (￨c !￨c (￨c path￨c .￨c endsWith￨c (￨c "/"￨c )￨c )￨c )￨c )￨j {￨j sb￨e .￨e append￨e (￨e '/'￨e )￨e ;￨e }￨j return￨e sb￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f String￨f fromURI￨f (￨f String￨p uri￨p )￨f {￨f }￨f public￨f boolean￨f fileNameEquals￨f (￨f File￨p f1￨p ,￨p File￨p f2￨p )￨f {￨f }￨f public￨f void￨f rename￨f (￨f File￨f from￨f ,￨f File￨f to￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestThreadedForceMerge￨d extends￨d LuceneTestCase￨d {￨d private￨e static￨e Analyzer￨e ANALYZER￨e ;￨e private￨e static￨e final￨e int￨e NUM_THREADS￨e =￨e 3￨e ;￨e private￨e static￨e final￨e int￨e NUM_ITER￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e NUM_ITER2￨e =￨e 1￨e ;￨e private￨e volatile￨e boolean￨e failed￨e ;￨e @￨f BeforeClass￨f public￨f static￨f void￨f setup￨f (￨f )￨f {￨f }￨f private￨f void￨f setFailed￨f (￨f )￨f {￨f }￨f public￨f void￨f runTest￨f (￨f Random￨f random￨f ,￨f Directory￨f directory￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f IndexWriter￨e writer￨e =￨e new￨e IndexWriter￨e (￨e directory￨e ,￨e newIndexWriterConfig￨e (￨e TEST_VERSION_CURRENT￨e ,￨e TestThreadedForceMerge￨e .￨e ANALYZER￨e )￨e .￨e setOpenMode￨e (￨e CREATE￨e )￨e .￨e setMaxBufferedDocs￨e (￨e 2￨e )￨e .￨e setMergePolicy￨e (￨e newLogMergePolicy￨e (￨e )￨e )￨e )￨e ;￨e for￨l (￨l int￨c iter￨c =￨c 0￨c ;￨c iter￨c <￨c (￨c TestThreadedForceMerge￨c .￨c NUM_ITER￨c )￨c ;￨c iter￨c ++￨c )￨l {￨l final￨e int￨e iterFinal￨e =￨e iter￨e ;￨e (￨e (￨e LogMergePolicy￨e )￨e (￨e writer￨e .￨e getConfig￨e (￨e )￨e .￨e getMergePolicy￨e (￨e )￨e )￨e )￨e .￨e setMergeFactor￨e (￨e 1000￨e )￨e ;￨e final￨e FieldType￨e customType￨e =￨e new￨e FieldType￨e (￨e StringField￨e .￨e TYPE_STORED￨e )￨e ;￨e customType￨e .￨e setOmitNorms￨e (￨e true￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 200￨c ;￨c i￨c ++￨c )￨l {￨l Document￨e d￨e =￨e new￨e Document￨e (￨e )￨e ;￨e d￨e .￨e add￨e (￨e newField￨e (￨e "id"￨e ,￨e Integer￨e .￨e toString￨e (￨e i￨e )￨e ,￨e customType￨e )￨e )￨e ;￨e d￨e .￨e add￨e (￨e newField￨e (￨e "contents"￨e ,￨e English￨e .￨e intToEnglish￨e (￨e i￨e )￨e ,￨e customType￨e )￨e )￨e ;￨e writer￨e .￨e addDocument￨e (￨e d￨e )￨e ;￨e }￨l (￨e (￨e LogMergePolicy￨e )￨e (￨e writer￨e .￨e getConfig￨e (￨e )￨e .￨e getMergePolicy￨e (￨e )￨e )￨e )￨e .￨e setMergeFactor￨e (￨e 4￨e )￨e ;￨e Thread￨e [￨e ]￨e threads￨e =￨e new￨e Thread￨e [￨e TestThreadedForceMerge￨e .￨e NUM_THREADS￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestThreadedForceMerge￨c .￨c NUM_THREADS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l final￨e int￨e iFinal￨e =￨e i￨e ;￨e final￨e IndexWriter￨e writerFinal￨e =￨e writer￨e ;￨e threads￨f [￨f i￨f ]￨f =￨f new￨f Thread￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c TestThreadedForceMerge￨c .￨c NUM_ITER2￨c )￨c ;￨c j￨c ++￨c )￨l {￨l writerFinal￨e .￨e forceMerge￨e (￨e 1￨e ,￨e false￨e )￨e ;￨e for￨l (￨l int￨c k￨c =￨c 0￨c ;￨c k￨c <￨c (￨c 17￨c *￨c (￨c 1￨c +￨c iFinal￨c )￨c )￨c ;￨c k￨c ++￨c )￨l {￨l Document￨e d￨e =￨e new￨e Document￨e (￨e )￨e ;￨e d￨e .￨e add￨e (￨e newField￨e (￨e "id"￨e ,￨e (￨e (￨e (￨e (￨e (￨e (￨e iterFinal￨e +￨e "_"￨e )￨e +￨e iFinal￨e )￨e +￨e "_"￨e )￨e +￨e j￨e )￨e +￨e "_"￨e )￨e +￨e k￨e )￨e ,￨e customType￨e )￨e )￨e ;￨e d￨e .￨e add￨e (￨e newField￨e (￨e "contents"￨e ,￨e English￨e .￨e intToEnglish￨e (￨e (￨e iFinal￨e +￨e k￨e )￨e )￨e ,￨e customType￨e )￨e )￨e ;￨e writerFinal￨e .￨e addDocument￨e (￨e d￨e )￨e ;￨e }￨l for￨l (￨l int￨c k￨c =￨c 0￨c ;￨c k￨c <￨c (￨c 9￨c *￨c (￨c 1￨c +￨c iFinal￨c )￨c )￨c ;￨c k￨c ++￨c )￨l {￨l writerFinal￨e .￨e deleteDocuments￨e (￨e new￨e Term￨e (￨e "id"￨e ,￨e (￨e (￨e (￨e (￨e (￨e (￨e iterFinal￨e +￨e "_"￨e )￨e +￨e iFinal￨e )￨e +￨e "_"￨e )￨e +￨e j￨e )￨e +￨e "_"￨e )￨e +￨e k￨e )￨e )￨e )￨e ;￨e }￨l writerFinal￨e .￨e forceMerge￨e (￨e 1￨e )￨e ;￨e }￨l }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f setFailed￨e (￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e Thread￨e .￨e currentThread￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e +￨e ":<seq2seq4repair_space>hit<seq2seq4repair_space>exception"￨e )￨e )￨e ;￨e t￨e .￨e printStackTrace￨e (￨e System￨e .￨e out￨e )￨e ;￨e }￨f }￨f }￨f ;￨e }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestThreadedForceMerge￨c .￨c NUM_THREADS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l threads￨e [￨e i￨e ]￨e .￨e start￨e (￨e )￨e ;￨e }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestThreadedForceMerge￨c .￨c NUM_THREADS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l threads￨e [￨e i￨e ]￨e .￨e join￨e (￨e )￨e ;￨e }￨l assertTrue￨e (￨e (￨e !￨e (￨e failed￨e )￨e )￨e )￨e ;￨e final￨e int￨e expectedDocCount￨e =￨e (￨e (￨e int￨e )￨e (￨e (￨e 1￨e +￨e iter￨e )￨e *￨e (￨e 200￨e +￨e (￨e (￨e (￨e 8￨e *￨e (￨e TestThreadedForceMerge￨e .￨e NUM_ITER2￨e )￨e )￨e *￨e (￨e (￨e TestThreadedForceMerge￨e .￨e NUM_THREADS￨e )￨e /￨e 2.0￨e )￨e )￨e *￨e (￨e 1￨e +￨e (￨e TestThreadedForceMerge￨e .￨e NUM_THREADS￨e )￨e )￨e )￨e )￨e )￨e )￨e ;￨e assertEquals￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e "index="￨e +￨e (￨e writer￨e .￨e segString￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>numDocs="￨e )￨e +￨e (￨e writer￨e .￨e numDocs￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>maxDoc="￨e )￨e +￨e (￨e writer￨e .￨e maxDoc￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>config="￨e )￨e +￨e (￨e writer￨e .￨e getConfig￨e (￨e )￨e )￨e )￨e ,￨e expectedDocCount￨e ,￨e writer￨e .￨e numDocs￨e (￨e )￨e )￨e ;￨e assertEquals￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e "index="￨e +￨e (￨e writer￨e .￨e segString￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>numDocs="￨e )￨e +￨e (￨e writer￨e .￨e numDocs￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>maxDoc="￨e )￨e +￨e (￨e writer￨e .￨e maxDoc￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>config="￨e )￨e +￨e (￨e writer￨e .￨e getConfig￨e (￨e )￨e )￨e )￨e ,￨e expectedDocCount￨e ,￨e writer￨e .￨e maxDoc￨e (￨e )￨e )￨e ;￨e writer￨e .￨e close￨e (￨e )￨e ;￨e writer￨e =￨e new￨e IndexWriter￨e (￨e directory￨e ,￨e newIndexWriterConfig￨e (￨e TEST_VERSION_CURRENT￨e ,￨e TestThreadedForceMerge￨e .￨e ANALYZER￨e )￨e .￨e setOpenMode￨e (￨e APPEND￨e )￨e .￨e setMaxBufferedDocs￨e (￨e 2￨e )￨e )￨e ;￨e DirectoryReader￨e reader￨e =￨e DirectoryReader￨e .￨e open￨e (￨e directory￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b (￨b "reader="￨b +￨b reader￨b )￨b ,￨b 1￨b ,￨b reader￨b .￨b getSequentialSubReaders￨b (￨b )￨b .￨b size￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b assertEquals￨e (￨e expectedDocCount￨e ,￨e reader￨e .￨e numDocs￨e (￨e )￨e )￨e ;￨e reader￨e .￨e close￨e (￨e )￨e ;￨e }￨l writer￨e .￨e close￨e (￨e )￨e ;￨e }￨f public￨f void￨f testThreadedForceMerge￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d KohonenUpdateActionTest￨d {￨d @￨f Test￨f public￨f void￨f testUpdate￨f (￨f )￨f {￨f final￨e FeatureInitializer￨e init￨e =￨e new￨e org￨e .￨e apache￨e .￨e commons￨e .￨e math3￨e .￨e ml￨e .￨e neuralnet￨e .￨e OffsetFeatureInitializer￨e (￨e FeatureInitializerFactory￨e .￨e uniform￨e (￨e 0￨e ,￨e 0.1￨e )￨e )￨e ;￨e final￨f FeatureInitializer￨f [￨f ]￨f initArray￨f =￨f new￨f FeatureInitializer￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e final￨e int￨e netSize￨e =￨e 3￨e ;￨e final￨e Network￨e net￨e =￨e new￨e org￨e .￨e apache￨e .￨e commons￨e .￨e math3￨e .￨e ml￨e .￨e neuralnet￨e .￨e oned￨e .￨e NeuronString￨e (￨e netSize￨e ,￨e false￨e ,￨e initArray￨e )￨e .￨e getNetwork￨e (￨e )￨e ;￨e final￨e DistanceMeasure￨e dist￨e =￨e new￨e EuclideanDistance￨e (￨e )￨e ;￨e final￨e LearningFactorFunction￨e learning￨e =￨e LearningFactorFunctionFactory￨e .￨e exponentialDecay￨e (￨e 1￨e ,￨e 0.1￨e ,￨e 100￨e )￨e ;￨e final￨e NeighbourhoodSizeFunction￨e neighbourhood￨e =￨e NeighbourhoodSizeFunctionFactory￨e .￨e exponentialDecay￨e (￨e 3￨e ,￨e 1￨e ,￨e 100￨e )￨e ;￨e final￨e UpdateAction￨e update￨e =￨e new￨e KohonenUpdateAction￨e (￨e dist￨e ,￨e learning￨e ,￨e neighbourhood￨e )￨e ;￨e final￨f double￨f [￨f ]￨f features￨f =￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e final￨e double￨e [￨e ]￨e distancesBefore￨e =￨e new￨e double￨e [￨e netSize￨e ]￨e ;￨e int￨e count￨e =￨e 0￨e ;￨e for￨l (￨l Neuron￨c n￨c :￨c net￨c )￨l {￨l distancesBefore￨e [￨e (￨e count￨e ++￨e )￨e ]￨e =￨e dist￨e .￨e compute￨e (￨e n￨e .￨e getFeatures￨e (￨e )￨e ,￨e features￨e )￨e ;￨e }￨l final￨e Neuron￨e bestBefore￨e =￨e MapUtils￨e .￨e findBest￨e (￨e features￨e ,￨e net￨e ,￨e dist￨e )￨e ;￨e <START_BUG>￨b Assert￨b .￨b assertTrue￨b (￨b (￨b (￨b dist￨b .￨b compute￨b (￨b bestBefore￨b .￨b getFeatures￨b (￨b )￨b ,￨b features￨b )￨b )￨b >=￨b (￨b 0.2￨b *￨b 0.2￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b update￨e .￨e update￨e (￨e net￨e ,￨e features￨e )￨e ;￨e final￨e double￨e [￨e ]￨e distancesAfter￨e =￨e new￨e double￨e [￨e netSize￨e ]￨e ;￨e count￨e =￨e 0￨e ;￨e for￨l (￨l Neuron￨c n￨c :￨c net￨c )￨l {￨l distancesAfter￨e [￨e (￨e count￨e ++￨e )￨e ]￨e =￨e dist￨e .￨e compute￨e (￨e n￨e .￨e getFeatures￨e (￨e )￨e ,￨e features￨e )￨e ;￨e }￨l final￨e Neuron￨e bestAfter￨e =￨e MapUtils￨e .￨e findBest￨e (￨e features￨e ,￨e net￨e ,￨e dist￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e bestBefore￨e ,￨e bestAfter￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e 0￨e ,￨e dist￨e .￨e compute￨e (￨e bestAfter￨e .￨e getFeatures￨e (￨e )￨e ,￨e features￨e )￨e ,￨e 0.0￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c netSize￨c ;￨c i￨c ++￨c )￨l {￨l Assert￨e .￨e assertTrue￨e (￨e (￨e (￨e distancesAfter￨e [￨e i￨e ]￨e )￨e <￨e (￨e distancesBefore￨e [￨e i￨e ]￨e )￨e )￨e )￨e ;￨e }￨l }￨f }￨d
public￨d class￨d BooleanLiteral￨d extends￨d Expression￨d {￨d private￨e boolean￨e value￨e =￨e false￨e ;￨e BooleanLiteral￨f (￨f AST￨p ast￨p )￨f {￨f }￨f public￨f int￨f getNodeType￨f (￨f )￨f {￨f }￨f ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f }￨f public￨f boolean￨f subtreeMatch￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f <START_BUG>￨b boolean￨b visitChildren￨b =￨b visitor￨b .￨b visit￨b (￨b this￨b )￨b ;￨b <END_BUG>￨b visitor￨e .￨e endVisit￨e (￨e this￨e )￨e ;￨e }￨f public￨f boolean￨f booleanValue￨f (￨f )￨f {￨f }￨f public￨f void￨f setBooleanValue￨f (￨f boolean￨p value￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TryStatement￨d extends￨d Statement￨d {￨d public￨e Block￨e tryBlock￨e ;￨e public￨e Block￨e [￨e ]￨e catchBlocks￨e ;￨e public￨e Argument￨e [￨e ]￨e catchArguments￨e ;￨e public￨e Block￨e finallyBlock￨e ;￨e BlockScope￨e scope￨e ;￨e public￨e boolean￨e subRoutineCannotReturn￨e =￨e true￨e ;￨e ReferenceBinding￨e [￨e ]￨e caughtExceptionTypes￨e ;￨e boolean￨e tryBlockExit￨e ;￨e boolean￨e [￨e ]￨e catchExits￨e ;￨e public￨e int￨e [￨e ]￨e preserveExceptionHandler￨e ;￨e Label￨e subRoutineStartLabel￨e ;￨e public￨e LocalVariableBinding￨e anyExceptionVariable￨e ;￨e public￨e LocalVariableBinding￨e returnAddressVariable￨e ;￨e public￨e LocalVariableBinding￨e secretReturnValue￨e ;￨e public￨e static￨e final￨e char￨e [￨e ]￨e SecretReturnName￨e =￨e "<seq2seq4repair_space>returnAddress"￨e .￨e toCharArray￨e (￨e )￨e ;￨e public￨e static￨e final￨e char￨e [￨e ]￨e SecretAnyHandlerName￨e =￨e "<seq2seq4repair_space>anyExceptionHandler"￨e .￨e toCharArray￨e (￨e )￨e ;￨e public￨e static￨e final￨e char￨e [￨e ]￨e SecretLocalDeclarationName￨e =￨e "<seq2seq4repair_space>returnValue"￨e .￨e toCharArray￨e (￨e )￨e ;￨e int￨e preTryInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e mergedInitStateIndex￨e =￨e -￨e 1￨e ;￨e public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f boolean￨f cannotReturn￨f (￨f )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p upperScope￨p )￨f {￨f this￨e .￨e scope￨e =￨e new￨e BlockScope￨e (￨e upperScope￨e )￨e ;￨e BlockScope￨e tryScope￨e =￨e new￨e BlockScope￨e (￨e scope￨e )￨e ;￨e BlockScope￨e finallyScope￨e =￨e null￨e ;￨e if￨j (￨j (￨c (￨c finallyBlock￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c finallyBlock￨c .￨c statements￨c )￨c !=￨c null￨c )￨c )￨j {￨j finallyScope￨e =￨e new￨e BlockScope￨e (￨e scope￨e ,￨e false￨e )￨e ;￨e MethodScope￨e methodScope￨e =￨e scope￨e .￨e methodScope￨e (￨e )￨e ;￨e this￨e .￨e returnAddressVariable￨e =￨e new￨e LocalVariableBinding￨e (￨e TryStatement￨e .￨e SecretReturnName￨e ,￨e upperScope￨e .￨e getJavaLangObject￨e (￨e )￨e ,￨e AccDefault￨e ,￨e false￨e )￨e ;￨e finallyScope￨e .￨e addLocalVariable￨e (￨e returnAddressVariable￨e )￨e ;￨e this￨e .￨e returnAddressVariable￨e .￨e constant￨e =￨e NotAConstant￨e ;￨e this￨e .￨e subRoutineStartLabel￨e =￨e new￨e Label￨e (￨e )￨e ;￨e this￨e .￨e anyExceptionVariable￨e =￨e new￨e LocalVariableBinding￨e (￨e TryStatement￨e .￨e SecretAnyHandlerName￨e ,￨e scope￨e .￨e getJavaLangThrowable￨e (￨e )￨e ,￨e AccDefault￨e ,￨e false￨e )￨e ;￨e finallyScope￨e .￨e addLocalVariable￨e (￨e this￨e .￨e anyExceptionVariable￨e )￨e ;￨e this￨e .￨e anyExceptionVariable￨e .￨e constant￨e =￨e NotAConstant￨e ;￨e if￨j (￨j !￨c (￨c methodScope￨c .￨c isInsideInitializer￨c (￨c )￨c )￨c )￨j {￨j MethodBinding￨e methodBinding￨e =￨e (￨e (￨e AbstractMethodDeclaration￨e )￨e (￨e methodScope￨e .￨e referenceContext￨e )￨e )￨e .￨e binding￨e ;￨e if￨j (￨j methodBinding￨c !=￨c null￨c )￨j {￨j TypeBinding￨e methodReturnType￨e =￨e methodBinding￨e .￨e returnType￨e ;￨e if￨j (￨j (￨c methodReturnType￨c .￨c id￨c )￨c !=￨c (￨c TypeIds￨c .￨c T_void￨c )￨c )￨j {￨j this￨e .￨e secretReturnValue￨e =￨e new￨e LocalVariableBinding￨e (￨e TryStatement￨e .￨e SecretLocalDeclarationName￨e ,￨e methodReturnType￨e ,￨e AccDefault￨e ,￨e false￨e )￨e ;￨e finallyScope￨e .￨e addLocalVariable￨e (￨e this￨e .￨e secretReturnValue￨e )￨e ;￨e this￨e .￨e secretReturnValue￨e .￨e constant￨e =￨e NotAConstant￨e ;￨e }￨j }￨j }￨j finallyBlock￨e .￨e resolveUsing￨e (￨e finallyScope￨e )￨e ;￨e finallyScope￨e .￨e shiftScopes￨e =￨e new￨e BlockScope￨e [￨e (￨e catchArguments￨e )￨e ==￨e null￨e ?￨e 1￨e :￨e (￨e catchArguments￨e .￨e length￨e )￨e +￨e 1￨e ]￨e ;￨e finallyScope￨e .￨e shiftScopes￨e [￨e 0￨e ]￨e =￨e tryScope￨e ;￨e }￨j this￨e .￨e tryBlock￨e .￨e resolveUsing￨e (￨e tryScope￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c catchBlocks￨c )￨c !=￨c null￨c )￨j {￨j int￨e length￨e =￨e this￨e .￨e catchArguments￨e .￨e length￨e ;￨e TypeBinding￨e [￨e ]￨e argumentTypes￨e =￨e new￨e TypeBinding￨e [￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l BlockScope￨e catchScope￨e =￨e new￨e BlockScope￨e (￨e scope￨e )￨e ;￨e if￨j (￨j finallyScope￨c !=￨c null￨c )￨j {￨j finallyScope￨e .￨e shiftScopes￨e [￨e (￨e i￨e +￨e 1￨e )￨e ]￨e =￨e catchScope￨e ;￨e }￨j if￨j (￨j (￨c argumentTypes￨c [￨c i￨c ]￨c =￨c catchArguments￨c [￨c i￨c ]￨c .￨c resolveForCatch￨c (￨c catchScope￨c )￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j catchBlocks￨e [￨e i￨e ]￨e .￨e resolveUsing￨e (￨e catchScope￨e )￨e ;￨e }￨l this￨e .￨e caughtExceptionTypes￨e =￨e new￨e ReferenceBinding￨e [￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l caughtExceptionTypes￨e [￨e i￨e ]￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e argumentTypes￨e [￨e i￨e ]￨e )￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c i￨c ;￨c j￨c ++￨c )￨l {￨l <START_BUG>￨b if￨b (￨b scope￨b .￨b areTypesCompatible￨b (￨b caughtExceptionTypes￨b [￨b i￨b ]￨b ,￨b argumentTypes￨b [￨b j￨b ]￨b )￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e wrongSequenceOfExceptionTypesError￨e (￨e this￨e ,￨e i￨e ,￨e j￨e )￨e ;￨e }￨l }￨l }￨j else￨j {￨j caughtExceptionTypes￨e =￨e new￨e ReferenceBinding￨e [￨e 0￨e ]￨e ;￨e }￨j if￨j (￨j finallyScope￨c !=￨c null￨c )￨j {￨j this￨e .￨e scope￨e .￨e addSubscope￨e (￨e finallyScope￨e )￨e ;￨e }￨j }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d SimilarityQueries￨d {￨d private￨f SimilarityQueries￨f (￨f )￨f {￨f }￨f public￨f static￨f Query￨f formSimilarQuery￨f (￨f String￨f body￨f ,￨f Analyzer￨f a￨f ,￨f String￨f field￨f ,￨f Set￨f stop￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f TokenStream￨e ts￨e =￨e a￨e .￨e tokenStream￨e (￨e field￨e ,￨e new￨e StringReader￨e (￨e body￨e )￨e )￨e ;￨e Token￨e t￨e ;￨e BooleanQuery￨e tmp￨e =￨e new￨e BooleanQuery￨e (￨e )￨e ;￨e Set￨e already￨e =￨e new￨e HashSet￨e (￨e )￨e ;￨e while￨l (￨l (￨c t￨c =￨c ts￨c .￨c next￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l String￨e word￨e =￨e t￨e .￨e termText￨e (￨e )￨e ;￨e if￨j (￨j (￨c stop￨c !=￨c null￨c )￨c &&￨c (￨c stop￨c .￨c contains￨c (￨c word￨c )￨c )￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j !￨c (￨c already￨c .￨c add￨c (￨c word￨c )￨c )￨c )￨j {￨j continue￨e ;￨e }￨j TermQuery￨e tq￨e =￨e new￨e TermQuery￨e (￨e new￨e Term￨e (￨e field￨e ,￨e word￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b tmp￨b .￨b add￨b (￨b tq￨b ,￨b false￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f BooleanQuery￨p too￨p )￨f {￨f break￨e ;￨e }￨f }￨l return￨e tmp￨e ;￨e }￨f }￨d
public￨d class￨d CompletionJavadoc￨d extends￨d Javadoc￨d {￨d Expression￨e completionNode￨e ;￨e public￨f CompletionJavadoc￨f (￨f int￨p sourceStart￨p ,￨p int￨p sourceEnd￨p )￨f {￨f }￨f public￨f Expression￨f getCompletionNode￨f (￨f )￨f {￨f }￨f private￨f void￨f internalResolve￨f (￨f Scope￨p scope￨p )￨f {￨f if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c !=￨c null￨c )￨j {￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocTag￨c )￨j {￨j (￨e (￨e CompletionOnJavadocTag￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e .￨e filterPossibleTags￨e (￨e scope￨e )￨e ;￨e }￨j else￨j {￨j boolean￨e resolve￨e =￨e true￨e ;￨e if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocParamNameReference￨c )￨j {￨j resolve￨e =￨e (￨e (￨e (￨e CompletionOnJavadocParamNameReference￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e .￨e token￨e )￨e !=￨e null￨e ;￨e }￨j else￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocTypeParamReference￨c )￨j {￨j resolve￨e =￨e (￨e (￨e (￨e CompletionOnJavadocTypeParamReference￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e .￨e token￨e )￨e !=￨e null￨e ;￨e }￨j if￨j (￨j resolve￨c )￨j {￨j switch￨s (￨s scope￨c .￨c kind￨c )￨s {￨s case￨c Scope￨c .￨c CLASS_SCOPE￨c :￨c this￨e .￨e completionNode￨e .￨e resolveType￨e (￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e break￨e ;￨e case￨c Scope￨c .￨c METHOD_SCOPE￨c :￨c this￨e .￨e completionNode￨e .￨e resolveType￨e (￨e (￨e (￨e MethodScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e break￨e ;￨e }￨s }￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocParamNameReference￨c )￨j {￨j CompletionOnJavadocParamNameReference￨e paramNameReference￨e =￨e (￨e (￨e CompletionOnJavadocParamNameReference￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e ;￨e if￨j (￨j (￨c scope￨c .￨c kind￨c )￨c ==￨c (￨c Scope￨c .￨c METHOD_SCOPE￨c )￨c )￨j {￨j paramNameReference￨e .￨e missingParams￨e =￨e missingParamTags￨e (￨e paramNameReference￨e .￨e binding￨e ,￨e (￨e (￨e MethodScope￨e )￨e (￨e scope￨e )￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b paramNameReference￨b .￨b token￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b paramNameReference￨e .￨e missingTypeParams￨e =￨e missingTypeParameterTags￨e (￨e paramNameReference￨e .￨e binding￨e ,￨e scope￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocTypeParamReference￨c )￨j {￨j CompletionOnJavadocTypeParamReference￨e typeParamReference￨e =￨e (￨e (￨e CompletionOnJavadocTypeParamReference￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e ;￨e typeParamReference￨e .￨e missingParams￨e =￨e missingTypeParameterTags￨e (￨e typeParamReference￨e .￨e resolvedType￨e ,￨e scope￨e )￨e ;￨e }￨j }￨j Binding￨e qualifiedBinding￨e =￨e null￨e ;￨e if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocQualifiedTypeReference￨c )￨j {￨j CompletionOnJavadocQualifiedTypeReference￨e typeRef￨e =￨e (￨e (￨e CompletionOnJavadocQualifiedTypeReference￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e ;￨e if￨j (￨j (￨c typeRef￨c .￨c packageBinding￨c )￨c ==￨c null￨c )￨j {￨j qualifiedBinding￨e =￨e typeRef￨e .￨e resolvedType￨e ;￨e }￨j else￨j {￨j qualifiedBinding￨e =￨e typeRef￨e .￨e packageBinding￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocMessageSend￨c )￨j {￨j CompletionOnJavadocMessageSend￨e msg￨e =￨e (￨e (￨e CompletionOnJavadocMessageSend￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c msg￨c .￨c receiver￨c .￨c isThis￨c (￨c )￨c )￨c )￨j {￨j qualifiedBinding￨e =￨e msg￨e .￨e receiver￨e .￨e resolvedType￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c this￨c .￨c completionNode￨c )￨c instanceof￨c CompletionOnJavadocAllocationExpression￨c )￨j {￨j CompletionOnJavadocAllocationExpression￨e alloc￨e =￨e (￨e (￨e CompletionOnJavadocAllocationExpression￨e )￨e (￨e this￨e .￨e completionNode￨e )￨e )￨e ;￨e qualifiedBinding￨e =￨e alloc￨e .￨e type￨e .￨e resolvedType￨e ;￨e }￨j throw￨e new￨e CompletionNodeFound￨e (￨e this￨e .￨e completionNode￨e ,￨e qualifiedBinding￨e ,￨e scope￨e )￨e ;￨e }￨j }￨f public￨f StringBuffer￨f print￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f CompilationUnitScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f MethodScope￨p scope￨p )￨f {￨f }￨f private￨f char￨f [￨f ]￨f [￨f ]￨f missingParamTags￨f (￨f Binding￨p paramNameRefBinding￨p ,￨p MethodScope￨p methScope￨p )￨f {￨f }￨f private￨f char￨f [￨f ]￨f [￨f ]￨f missingTypeParameterTags￨f (￨f Binding￨p paramNameRefBinding￨p ,￨p Scope￨p scope￨p )￨f {￨f }￨f }￨d
final￨d class￨d EmbedBlob￨d extends￨d ConnectionChild￨d implements￨d Blob￨d ,￨d EngineLOB￨d {￨d private￨e boolean￨e materialized￨e ;￨e private￨e PositionedStoreStream￨e myStream￨e ;￨e private￨e int￨e locator￨e =￨e 0￨e ;￨e private￨e long￨e streamLength￨e =￨e -￨e 1￨e ;￨e private￨e final￨e int￨e streamPositionOffset￨e ;￨e private￨e boolean￨e isValid￨e =￨e true￨e ;￨e private￨e LOBStreamControl￨e control￨e ;￨e EmbedBlob￨f (￨f byte￨f [￨f ]￨f blobBytes￨f ,￨f EmbedConnection￨f con￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f EmbedBlob￨f (￨f DataValueDescriptor￨f dvd￨f ,￨f EmbedConnection￨f con￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f long￨f setBlobPosition￨f (￨f long￨f logicalPos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f int￨f read￨f (￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f long￨f length￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f getBytes￨f (￨f long￨f startPos￨f ,￨f int￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getBinaryStream￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f byte￨f [￨f ]￨f pattern￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkMatch￨f (￨f byte￨f [￨f ]￨f pattern￨f ,￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f Blob￨f pattern￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkMatch￨f (￨f Blob￨f pattern￨f ,￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f SQLException￨f handleMyExceptions￨f (￨f Throwable￨f t￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f void￨f finalize￨f (￨f )￨f {￨f }￨f public￨f int￨f setBytes￨f (￨f long￨f pos￨f ,￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f int￨f setBytes￨f (￨f long￨f pos￨f ,￨f byte￨f [￨f ]￨f bytes￨f ,￨f int￨f offset￨f ,￨f int￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f OutputStream￨f setBinaryStream￨f (￨f long￨f pos￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f truncate￨f (￨f long￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f free￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getBinaryStream￨f (￨f long￨f pos￨f ,￨f long￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f checkValidity￨e (￨e )￨e ;￨e if￨j (￨j pos￨c <=￨c 0￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_BAD_POSITION￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e )￨e ;￨e }￨j if￨j (￨j length￨c <￨c 0￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_NONPOSITIVE_LENGTH￨e ,￨e new￨e Long￨e (￨e length￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b length￨b >￨b (￨b (￨b this￨b .￨b length￨b (￨b )￨b )￨b -￨b pos￨b )￨b )￨b {￨b <END_BUG>￨b throw￨e Util￨e .￨e generateCsSQLException￨e (￨e POS_AND_LENGTH_GREATER_THAN_LOB￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e ,￨e new￨e Long￨e (￨e length￨e )￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f return￨e new￨e UpdatableBlobStream￨e (￨e this￨e ,￨e getBinaryStream￨e (￨e )￨e ,￨e (￨e pos￨e -￨e 1￨e )￨e ,￨e length￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f throw￨e Util￨e .￨e setStreamFailure￨e (￨e ioe￨e )￨e ;￨e }￨f }￨f private￨f void￨f checkValidity￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f boolean￨f isMaterialized￨f (￨f )￨f {￨f }￨f public￨f int￨f getLocator￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d RelationToManyTableFieldStrategy￨d extends￨d StoreCollectionFieldStrategy￨d {￨d private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d RelationToManyTableFieldStrategy￨d .￨d class￨d )￨d ;￨d protected￨d ClassMapping￨d [￨d ]￨d getIndependentElementMappings￨d (￨d boolean￨d traverse￨d )￨d {￨d }￨d protected￨f ForeignKey￨f getJoinForeignKey￨f (￨f ClassMapping￨p elem￨p )￨f {￨f }￨f protected￨f void￨f selectElement￨f (￨f Select￨p sel￨p ,￨p ClassMapping￨p elem￨p ,￨p JDBCStore￨p store￨p ,￨p JDBCFetchConfiguration￨p fetch￨p ,￨p int￨p eagerMode￨p ,￨p Joins￨p joins￨p )￨f {￨f }￨f protected￨f Object￨f loadElement￨f (￨f OpenJPAStateManager￨f sm￨f ,￨f JDBCStore￨f store￨f ,￨f JDBCFetchConfiguration￨f fetch￨f ,￨f Result￨f res￨f ,￨f Joins￨f joins￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f Joins￨f join￨f (￨f Joins￨p joins￨p ,￨p ClassMapping￨p elem￨p )￨f {￨f }￨f protected￨f Joins￨f joinElementRelation￨f (￨f Joins￨p joins￨p ,￨p ClassMapping￨p elem￨p )￨f {￨f }￨f public￨f void￨f map￨f (￨f boolean￨p adapt￨p )￨f {￨f }￨f public￨f void￨f insert￨f (￨f OpenJPAStateManager￨f sm￨f ,￨f JDBCStore￨f store￨f ,￨f RowManager￨f rm￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f insert￨f (￨f OpenJPAStateManager￨f sm￨f ,￨f RowManager￨f rm￨f ,￨f Object￨f vals￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f Collection￨e coll￨e =￨e toCollection￨e (￨e vals￨e )￨e ;￨e if￨j (￨j (￨c coll￨c ==￨c null￨c )￨c ||￨c (￨c coll￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j Row￨e row￨e =￨e rm￨e .￨e getSecondaryRow￨e (￨e field￨e .￨e getTable￨e (￨e )￨e ,￨e ACTION_INSERT￨e )￨e ;￨e row￨e .￨e setForeignKey￨e (￨e field￨e .￨e getJoinForeignKey￨e (￨e )￨e ,￨e field￨e .￨e getJoinColumnIO￨e (￨e )￨e ,￨e sm￨e )￨e ;￨e ValueMapping￨e elem￨e =￨e field￨e .￨e getElementMapping￨e (￨e )￨e ;￨e StoreContext￨e ctx￨e =￨e sm￨e .￨e getContext￨e (￨e )￨e ;￨e Column￨e order￨e =￨e field￨e .￨e getOrderColumn￨e (￨e )￨e ;￨e boolean￨e setOrder￨e =￨e field￨e .￨e getOrderColumnIO￨e (￨e )￨e .￨e isInsertable￨e (￨e order￨e ,￨e false￨e )￨e ;￨e <START_BUG>￨b int￨b idx￨b =￨b (￨b setOrder￨b &&￨b (￨b order￨b !=￨b null￨b )￨b )￨b ?￨b order￨b .￨b getBase￨b (￨b )￨b :￨b 0￨b ;￨b <END_BUG>￨b OpenJPAStateManager￨e esm￨e ;￨e for￨l (￨l Iterator￨c itr￨c =￨c coll￨c .￨c iterator￨c (￨c )￨c ;￨c itr￨c .￨c hasNext￨c (￨c )￨c ;￨c idx￨c ++￨c )￨l {￨l esm￨e =￨e RelationStrategies￨e .￨e getStateManager￨e (￨e itr￨e .￨e next￨e (￨e )￨e ,￨e ctx￨e )￨e ;￨e elem￨e .￨e setForeignKey￨e (￨e row￨e ,￨e esm￨e )￨e ;￨e if￨j (￨j setOrder￨c )￨j {￨j row￨e .￨e setInt￨e (￨e order￨e ,￨e idx￨e )￨e ;￨e }￨j rm￨e .￨e flushSecondaryRow￨e (￨e row￨e )￨e ;￨e }￨l }￨f public￨f void￨f update￨f (￨f OpenJPAStateManager￨f sm￨f ,￨f JDBCStore￨f store￨f ,￨f RowManager￨f rm￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f delete￨f (￨f OpenJPAStateManager￨f sm￨f ,￨f JDBCStore￨f store￨f ,￨f RowManager￨f rm￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Object￨f toDataStoreValue￨f (￨f Object￨p val￨p ,￨p JDBCStore￨p store￨p )￨f {￨f }￨f public￨f Joins￨f join￨f (￨f Joins￨p joins￨p ,￨p boolean￨p forceOuter￨p )￨f {￨f }￨f public￨f Joins￨f joinRelation￨f (￨f Joins￨p joins￨p ,￨p boolean￨p forceOuter￨p ,￨p boolean￨p traverse￨p )￨f {￨f }￨f }￨d
public￨d }￨f public￨f void￨f update￨f (￨f )￨f {￨f }￨f void￨f update￨f (￨f boolean￨p all￨p )￨f {￨f }￨f void￨f updateFont￨f (￨f Font￨p oldFont￨p ,￨p Font￨p newFont￨p )￨f {￨f }￨f CREATESTRUCT￨f widgetCreateStruct￨f (￨f )￨f {￨f }￨f int￨f widgetExtStyle￨f (￨f )￨f {￨f }￨f int￨f widgetParent￨f (￨f )￨f {￨f }￨f int￨f widgetStyle￨f (￨f )￨f {￨f }￨f public￨f boolean￨f setParent￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f abstract￨f TCHAR￨f windowClass￨f (￨f )￨f {￨f }￨f abstract￨f int￨f windowProc￨f (￨f )￨f {￨f }￨f int￨f windowProc￨f (￨f int￨p hwnd￨p ,￨p int￨p msg￨p ,￨p int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_ACTIVATE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CHAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CLEAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CLOSE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_COMMAND￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CONTEXTMENU￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CTLCOLOR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_CUT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_DESTROY￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_DRAWITEM￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_ENDSESSION￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_ENTERIDLE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_ERASEBKGND￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_GETDLGCODE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_GETFONT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_GETOBJECT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_GETMINMAXINFO￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_HOTKEY￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_HELP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_HSCROLL￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_IME_CHAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_IME_COMPOSITION￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_INITMENUPOPUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_INPUTLANGCHANGE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_KEYDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_KEYUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_KILLFOCUS￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONDBLCLK￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_LBUTTONUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MBUTTONDBLCLK￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MBUTTONUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MEASUREITEM￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MENUCHAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MENUSELECT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSEACTIVATE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSEHOVER￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSELEAVE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSEMOVE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOUSEWHEEL￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_MOVE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NCACTIVATE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NCCALCSIZE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NCHITTEST￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NCLBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_NOTIFY￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PAINT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PALETTECHANGED￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PARENTNOTIFY￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PASTE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_PRINTCLIENT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_QUERYENDSESSION￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_QUERYNEWPALETTE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_QUERYOPEN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_RBUTTONDBLCLK￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_RBUTTONDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_RBUTTONUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETCURSOR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETFOCUS￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETTINGCHANGE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETFONT￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SETREDRAW￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SHOWWINDOW￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SIZE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SYSCHAR￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f <START_BUG>￨b return￨b wmSysChar￨b (￨b windowProc￨b (￨b )￨b ,￨b handle￨b ,￨b wParam￨b ,￨b lParam￨b )￨b ;￨b <END_BUG>￨b }￨f LRESULT￨f WM_SYSCOLORCHANGE￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SYSCOMMAND￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SYSKEYDOWN￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_SYSKEYUP￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_TIMER￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_UNDO￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_VSCROLL￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_WINDOWPOSCHANGED￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f WM_WINDOWPOSCHANGING￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmColorChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmCommandChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmDrawChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmMeasureChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmNotifyChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f LRESULT￨f wmScrollChild￨f (￨f int￨p wParam￨p ,￨p int￨p lParam￨p )￨f {￨f }￨f }￨d
public￨d class￨d RowTest￨d {￨d @￨f Test￨f public￨f void￨f testDiffColumnFamily￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDiffSuperColumn￨f (￨f )￨f {￨f SuperColumn￨e sc1￨e =￨e new￨e SuperColumn￨e (￨e "one"￨e )￨e ;￨e <START_BUG>￨b sc1￨b .￨b addColumn￨b (￨b "subcolumn"￨b ,￨b new￨b Column￨b (￨b "subcolumn"￨b ,￨b "A"￨b .￨b getBytes￨b (￨b )￨b ,￨b 0￨b )￨b )￨b ;￨b <END_BUG>￨b SuperColumn￨e sc2￨e =￨e new￨e SuperColumn￨e (￨e "one"￨e )￨e ;￨e sc2￨e .￨e markForDeleteAt￨e (￨e 0￨e ,￨e 0￨e )￨e ;￨e SuperColumn￨e scDiff￨e =￨e (￨e (￨e SuperColumn￨e )￨e (￨e sc1￨e .￨e diff￨e (￨e sc2￨e )￨e )￨e )￨e ;￨e assertEquals￨e (￨e scDiff￨e .￨e getSubColumns￨e (￨e )￨e .￨e size￨e (￨e )￨e ,￨e 0￨e )￨e ;￨e assertEquals￨e (￨e scDiff￨e .￨e getMarkedForDeleteAt￨e (￨e )￨e ,￨e 0￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testRepair￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestBlockJoinSorter￨d extends￨d LuceneTestCase￨d {￨d private￨d static￨d class￨d FixedBitSetCachingWrapperFilter￨d extends￨d CachingWrapperFilter￨d {￨d public￨f FixedBitSetCachingWrapperFilter￨f (￨f Filter￨p filter￨p )￨f {￨f }￨f @￨f Override￨f protected￨f DocIdSet￨f cacheImpl￨f (￨f DocIdSetIterator￨f iterator￨f ,￨f AtomicReader￨f reader￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨f void￨f test￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f final￨e int￨e numParents￨e =￨e atLeast￨e (￨e 200￨e )￨e ;￨e IndexWriterConfig￨e cfg￨e =￨e newIndexWriterConfig￨e (￨e TEST_VERSION_CURRENT￨e ,￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e analysis￨e .￨e MockAnalyzer￨e (￨e random￨e (￨e )￨e )￨e )￨e ;￨e cfg￨e .￨e setMergePolicy￨e (￨e newLogMergePolicy￨e (￨e )￨e )￨e ;￨e final￨e RandomIndexWriter￨e writer￨e =￨e new￨e RandomIndexWriter￨e (￨e random￨e (￨e )￨e ,￨e newDirectory￨e (￨e )￨e ,￨e cfg￨e )￨e ;￨e final￨e Document￨e parentDoc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e final￨e NumericDocValuesField￨e parentVal￨e =￨e new￨e NumericDocValuesField￨e (￨e "parent_val"￨e ,￨e 0L￨e )￨e ;￨e parentDoc￨e .￨e add￨e (￨e parentVal￨e )￨e ;￨e final￨e StringField￨e parent￨e =￨e new￨e StringField￨e (￨e "parent"￨e ,￨e "true"￨e ,￨e Store￨e .￨e YES￨e )￨e ;￨e parentDoc￨e .￨e add￨e (￨e parent￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c numParents￨c ;￨c ++￨c i￨c )￨l {￨l List￨e <￨e Document￨e >￨e documents￨e =￨e new￨e ArrayList￨e <￨e >￨e (￨e )￨e ;￨e final￨e int￨e numChildren￨e =￨e random￨e (￨e )￨e .￨e nextInt￨e (￨e 10￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c numChildren￨c ;￨c ++￨c j￨c )￨l {￨l final￨e Document￨e childDoc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e childDoc￨e .￨e add￨e (￨e new￨e NumericDocValuesField￨e (￨e "child_val"￨e ,￨e random￨e (￨e )￨e .￨e nextInt￨e (￨e 5￨e )￨e )￨e )￨e ;￨e documents￨e .￨e add￨e (￨e childDoc￨e )￨e ;￨e }￨l parentVal￨e .￨e setLongValue￨e (￨e random￨e (￨e )￨e .￨e nextInt￨e (￨e 50￨e )￨e )￨e ;￨e documents￨e .￨e add￨e (￨e parentDoc￨e )￨e ;￨e writer￨e .￨e addDocuments￨e (￨e documents￨e )￨e ;￨e }￨l writer￨e .￨e forceMerge￨e (￨e 1￨e )￨e ;￨e final￨e DirectoryReader￨e indexReader￨e =￨e writer￨e .￨e getReader￨e (￨e )￨e ;￨e <START_BUG>￨b writer￨b .￨b close￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e AtomicReader￨e reader￨e =￨e getOnlySegmentReader￨e (￨e indexReader￨e )￨e ;￨e final￨e Filter￨e parentsFilter￨e =￨e new￨e TestBlockJoinSorter￨e .￨e FixedBitSetCachingWrapperFilter￨e (￨e new￨e QueryWrapperFilter￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e search￨e .￨e TermQuery￨e (￨e new￨e Term￨e (￨e "parent"￨e ,￨e "true"￨e )￨e )￨e )￨e )￨e ;￨e final￨e FixedBitSet￨e parentBits￨e =￨e (￨e (￨e FixedBitSet￨e )￨e (￨e parentsFilter￨e .￨e getDocIdSet￨e (￨e reader￨e .￨e getContext￨e (￨e )￨e ,￨e null￨e )￨e )￨e )￨e ;￨e final￨e NumericDocValues￨e parentValues￨e =￨e reader￨e .￨e getNumericDocValues￨e (￨e "parent_val"￨e )￨e ;￨e final￨e NumericDocValues￨e childValues￨e =￨e reader￨e .￨e getNumericDocValues￨e (￨e "child_val"￨e )￨e ;￨e final￨e Sort￨e parentSort￨e =￨e new￨e Sort￨e (￨e new￨e SortField￨e (￨e "parent_val"￨e ,￨e Type￨e .￨e LONG￨e )￨e )￨e ;￨e final￨e Sort￨e childSort￨e =￨e new￨e Sort￨e (￨e new￨e SortField￨e (￨e "child_val"￨e ,￨e Type￨e .￨e LONG￨e )￨e )￨e ;￨e final￨e Sort￨e sort￨e =￨e new￨e Sort￨e (￨e new￨e SortField￨e (￨e "custom"￨e ,￨e new￨e BlockJoinComparatorSource￨e (￨e parentsFilter￨e ,￨e parentSort￨e ,￨e childSort￨e )￨e )￨e )￨e ;￨e final￨e Sorter￨e sorter￨e =￨e new￨e Sorter￨e (￨e sort￨e )￨e ;￨e final￨e Sorter￨e .￨e DocMap￨e docMap￨e =￨e sorter￨e .￨e sort￨e (￨e reader￨e )￨e ;￨e assertEquals￨e (￨e reader￨e .￨e maxDoc￨e (￨e )￨e ,￨e docMap￨e .￨e size￨e (￨e )￨e )￨e ;￨e int￨e [￨e ]￨e children￨e =￨e new￨e int￨e [￨e 1￨e ]￨e ;￨e int￨e numChildren￨e =￨e 0￨e ;￨e int￨e previousParent￨e =￨e -￨e 1￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c docMap￨c .￨c size￨c (￨c )￨c )￨c ;￨c ++￨c i￨c )￨l {￨l final￨e int￨e oldID￨e =￨e docMap￨e .￨e newToOld￨e (￨e i￨e )￨e ;￨e if￨j (￨j parentBits￨c .￨c get￨c (￨c oldID￨c )￨c )￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c numChildren￨c ;￨c ++￨c j￨c )￨l {￨l assertEquals￨e (￨e oldID￨e ,￨e parentBits￨e .￨e nextSetBit￨e (￨e children￨e [￨e j￨e ]￨e )￨e )￨e ;￨e }￨l for￨l (￨l int￨c j￨c =￨c 1￨c ;￨c j￨c <￨c numChildren￨c ;￨c ++￨c j￨c )￨l {￨l final￨e int￨e doc1￨e =￨e children￨e [￨e (￨e j￨e -￨e 1￨e )￨e ]￨e ;￨e final￨e int￨e doc2￨e =￨e children￨e [￨e j￨e ]￨e ;￨e if￨j (￨j (￨c childValues￨c .￨c get￨c (￨c doc1￨c )￨c )￨c ==￨c (￨c childValues￨c .￨c get￨c (￨c doc2￨c )￨c )￨c )￨j {￨j assertTrue￨e (￨e (￨e doc1￨e <￨e doc2￨e )￨e )￨e ;￨e }￨j else￨j {￨j assertTrue￨e (￨e (￨e (￨e childValues￨e .￨e get￨e (￨e doc1￨e )￨e )￨e <￨e (￨e childValues￨e .￨e get￨e (￨e doc2￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨l if￨j (￨j previousParent￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j if￨j (￨j (￨c parentValues￨c .￨c get￨c (￨c previousParent￨c )￨c )￨c ==￨c (￨c parentValues￨c .￨c get￨c (￨c oldID￨c )￨c )￨c )￨j {￨j assertTrue￨e (￨e (￨e previousParent￨e <￨e oldID￨e )￨e )￨e ;￨e }￨j else￨j {￨j assertTrue￨e (￨e (￨e (￨e parentValues￨e .￨e get￨e (￨e previousParent￨e )￨e )￨e <￨e (￨e parentValues￨e .￨e get￨e (￨e oldID￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨j previousParent￨e =￨e oldID￨e ;￨e numChildren￨e =￨e 0￨e ;￨e }￨j else￨j {￨j children￨e =￨e ArrayUtil￨e .￨e grow￨e (￨e children￨e ,￨e (￨e numChildren￨e +￨e 1￨e )￨e )￨e ;￨e children￨e [￨e (￨e numChildren￨e ++￨e )￨e ]￨e =￨e oldID￨e ;￨e }￨j }￨l indexReader￨e .￨e close￨e (￨e )￨e ;￨e writer￨e .￨e w￨e .￨e getDirectory￨e (￨e )￨e .￨e close￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d TestSameScoresWithThreads￨d extends￨d LuceneTestCase￨d {￨d public￨f void￨f test￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e Directory￨e dir￨e =￨e newDirectory￨e (￨e )￨e ;￨e MockAnalyzer￨e analyzer￨e =￨e new￨e MockAnalyzer￨e (￨e random￨e (￨e )￨e )￨e ;￨e analyzer￨e .￨e setMaxTokenLength￨e (￨e TestUtil￨e .￨e nextInt￨e (￨e random￨e (￨e )￨e ,￨e 1￨e ,￨e MAX_TERM_LENGTH￨e )￨e )￨e ;￨e final￨e RandomIndexWriter￨e w￨e =￨e new￨e RandomIndexWriter￨e (￨e random￨e (￨e )￨e ,￨e dir￨e ,￨e analyzer￨e )￨e ;￨e LineFileDocs￨e docs￨e =￨e new￨e LineFileDocs￨e (￨e random￨e (￨e )￨e )￨e ;￨e int￨e charsToIndex￨e =￨e atLeast￨e (￨e 100000￨e )￨e ;￨e int￨e charsIndexed￨e =￨e 0￨e ;￨e while￨l (￨l charsIndexed￨c <￨c charsToIndex￨c )￨l {￨l Document￨e doc￨e =￨e docs￨e .￨e nextDoc￨e (￨e )￨e ;￨e charsIndexed￨e +=￨e doc￨e .￨e get￨e (￨e "body"￨e )￨e .￨e length￨e (￨e )￨e ;￨e w￨e .￨e addDocument￨e (￨e doc￨e )￨e ;￨e }￨l IndexReader￨e r￨e =￨e w￨e .￨e getReader￨e (￨e )￨e ;￨e <START_BUG>￨b w￨b .￨b close￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e IndexSearcher￨e s￨e =￨e newSearcher￨e (￨e r￨e )￨e ;￨e Terms￨e terms￨e =￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e index￨e .￨e MultiFields￨e .￨e getFields￨e (￨e r￨e )￨e .￨e terms￨e (￨e "body"￨e )￨e ;￨e int￨e termCount￨e =￨e 0￨e ;￨e TermsEnum￨e termsEnum￨e =￨e terms￨e .￨e iterator￨e (￨e null￨e )￨e ;￨e while￨l (￨l (￨c termsEnum￨c .￨c next￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l termCount￨e ++￨e ;￨e }￨l assertTrue￨e (￨e (￨e termCount￨e >￨e 0￨e )￨e )￨e ;￨e double￨e chance￨e =￨e 10.0￨e /￨e termCount￨e ;￨e termsEnum￨e =￨e terms￨e .￨e iterator￨e (￨e termsEnum￨e )￨e ;￨e final￨e Map￨e <￨e BytesRef￨e ,￨e TopDocs￨e >￨e answers￨e =￨e new￨e HashMap￨e <￨e >￨e (￨e )￨e ;￨e while￨l (￨l (￨c termsEnum￨c .￨c next￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l if￨j (￨j (￨c random￨c (￨c )￨c .￨c nextDouble￨c (￨c )￨c )￨c <=￨c chance￨c )￨j {￨j BytesRef￨e term￨e =￨e BytesRef￨e .￨e deepCopyOf￨e (￨e termsEnum￨e .￨e term￨e (￨e )￨e )￨e ;￨e answers￨e .￨e put￨e (￨e term￨e ,￨e s￨e .￨e search￨e (￨e new￨e TermQuery￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e index￨e .￨e Term￨e (￨e "body"￨e ,￨e term￨e )￨e )￨e ,￨e 100￨e )￨e )￨e ;￨e }￨j }￨l if￨j (￨j !￨c (￨c answers￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j final￨e CountDownLatch￨e startingGun￨e =￨e new￨e CountDownLatch￨e (￨e 1￨e )￨e ;￨e int￨e numThreads￨e =￨e TestUtil￨e .￨e nextInt￨e (￨e random￨e (￨e )￨e ,￨e 2￨e ,￨e 5￨e )￨e ;￨e Thread￨e [￨e ]￨e threads￨e =￨e new￨e Thread￨e [￨e numThreads￨e ]￨e ;￨e for￨l (￨l int￨c threadID￨c =￨c 0￨c ;￨c threadID￨c <￨c numThreads￨c ;￨c threadID￨c ++￨c )￨l {￨l Thread￨f thread￨f =￨f new￨f Thread￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f startingGun￨e .￨e await￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 20￨c ;￨c i￨c ++￨c )￨l {￨l List￨e <￨e Map￨e .￨e Entry￨e <￨e BytesRef￨e ,￨e TopDocs￨e >￨e >￨e shuffled￨e =￨e new￨e java￨e .￨e util￨e .￨e ArrayList￨e (￨e answers￨e .￨e entrySet￨e (￨e )￨e )￨e ;￨e Collections￨e .￨e shuffle￨e (￨e shuffled￨e )￨e ;￨e for￨l (￨l Map￨c .￨c Entry￨c <￨c BytesRef￨c ,￨c TopDocs￨c >￨c ent￨c :￨c shuffled￨c )￨l {￨l TopDocs￨e actual￨e =￨e s￨e .￨e search￨e (￨e new￨e TermQuery￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e index￨e .￨e Term￨e (￨e "body"￨e ,￨e ent￨e .￨e getKey￨e (￨e )￨e )￨e )￨e ,￨e 100￨e )￨e ;￨e TopDocs￨e expected￨e =￨e ent￨e .￨e getValue￨e (￨e )￨e ;￨e assertEquals￨e (￨e expected￨e .￨e totalHits￨e ,￨e actual￨e .￨e totalHits￨e )￨e ;￨e assertEquals￨e (￨e (￨e "query="￨e +￨e (￨e ent￨e .￨e getKey￨e (￨e )￨e .￨e utf8ToString￨e (￨e )￨e )￨e )￨e ,￨e expected￨e .￨e scoreDocs￨e .￨e length￨e ,￨e actual￨e .￨e scoreDocs￨e .￨e length￨e )￨e ;￨e for￨l (￨l int￨c hit￨c =￨c 0￨c ;￨c hit￨c <￨c (￨c expected￨c .￨c scoreDocs￨c .￨c length￨c )￨c ;￨c hit￨c ++￨c )￨l {￨l assertEquals￨e (￨e expected￨e .￨e scoreDocs￨e [￨e hit￨e ]￨e .￨e doc￨e ,￨e actual￨e .￨e scoreDocs￨e [￨e hit￨e ]￨e .￨e doc￨e )￨e ;￨e assertTrue￨e (￨e (￨e (￨e expected￨e .￨e scoreDocs￨e [￨e hit￨e ]￨e .￨e score￨e )￨e ==￨e (￨e actual￨e .￨e scoreDocs￨e [￨e hit￨e ]￨e .￨e score￨e )￨e )￨e )￨e ;￨e }￨l }￨l }￨l }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨f }￨f ;￨e threads￨e [￨e threadID￨e ]￨e =￨e thread￨e ;￨e thread￨e .￨e start￨e (￨e )￨e ;￨e }￨l startingGun￨e .￨e countDown￨e (￨e )￨e ;￨e for￨l (￨l Thread￨c thread￨c :￨c threads￨c )￨l {￨l thread￨e .￨e join￨e (￨e )￨e ;￨e }￨l }￨j r￨e .￨e close￨e (￨e )￨e ;￨e dir￨e .￨e close￨e (￨e )￨e ;￨e }￨f }￨d
class￨d ClipboardProxy￨d {￨d Display￨e display￨e ;￨e int￨e shellHandle￨e ;￨e int￨e atomAtom￨e ;￨e int￨e clipboardAtom￨e ;￨e int￨e motifClipboardAtom￨e ;￨e int￨e primaryAtom￨e ;￨e int￨e targetsAtom￨e ;￨e int￨e [￨e ]￨e [￨e ]￨e convertData￨e =￨e new￨e int￨e [￨e 10￨e ]￨e [￨e 3￨e ]￨e ;￨e Clipboard￨e activeClipboard￨e =￨e null￨e ;￨e Clipboard￨e activePrimaryClipboard￨e =￨e null￨e ;￨e Object￨e [￨e ]￨e clipboardData￨e ;￨e Transfer￨e [￨e ]￨e clipboardDataTypes￨e ;￨e Object￨e [￨e ]￨e primaryClipboardData￨e ;￨e Transfer￨e [￨e ]￨e primaryClipboardDataTypes￨e ;￨e boolean￨e done￨e =￨e false￨e ;￨e Object￨e selectionValue￨e ;￨e Transfer￨e selectionTransfer￨e ;￨e Callback￨e XtConvertSelectionCallback￨e ;￨e Callback￨e XtLoseSelectionCallback￨e ;￨e Callback￨e XtSelectionDoneCallback￨e ;￨e Callback￨e XtSelectionCallbackCallback￨e ;￨e static￨e byte￨e [￨e ]￨e ATOM￨e =￨e Converter￨e .￨e wcsToMbcs￨e (￨e null￨e ,￨e "ATOM"￨e ,￨e true￨e )￨e ;￨e static￨e byte￨e [￨e ]￨e CLIPBOARD￨e =￨e Converter￨e .￨e wcsToMbcs￨e (￨e null￨e ,￨e "CLIPBOARD"￨e ,￨e true￨e )￨e ;￨e static￨e byte￨e [￨e ]￨e PRIMARY￨e =￨e Converter￨e .￨e wcsToMbcs￨e (￨e null￨e ,￨e "PRIMARY"￨e ,￨e true￨e )￨e ;￨e static￨e byte￨e [￨e ]￨e TARGETS￨e =￨e Converter￨e .￨e wcsToMbcs￨e (￨e null￨e ,￨e "TARGETS"￨e ,￨e true￨e )￨e ;￨e static￨e byte￨e [￨e ]￨e _MOTIF_CLIPBOARD_TARGETS￨e =￨e Converter￨e .￨e wcsToMbcs￨e (￨e null￨e ,￨e "_MOTIF_CLIPBOARD_TARGETS"￨e ,￨e true￨e )￨e ;￨e static￨e String￨e ID￨e =￨e "CLIPBOARD<seq2seq4repair_space>PROXY<seq2seq4repair_space>OBJECT"￨e ;￨e static￨f ClipboardProxy￨f _getInstance￨f (￨f final￨p Display￨p display￨p )￨f {￨f }￨f ClipboardProxy￨f (￨f Display￨p display￨p )￨f {￨f }￨f void￨f clear￨f (￨f Clipboard￨p owner￨p ,￨p int￨p clipboards￨p )￨f {￨f }￨f void￨f dispose￨f (￨f )￨f {￨f }￨f Object￨f getContents￨f (￨f Transfer￨p transfer￨p ,￨p int￨p clipboardType￨p )￨f {￨f }￨f int￨f [￨f ]￨f getAvailableTypes￨f (￨f int￨p clipboardType￨p )￨f {￨f }￨f void￨f setContents￨f (￨f Clipboard￨p owner￨p ,￨p Object￨p [￨p ]￨p data￨p ,￨p Transfer￨p [￨p ]￨p dataTypes￨p ,￨p int￨p clipboards￨p )￨f {￨f }￨f void￨f storePtr￨f (￨f int￨p ptr￨p ,￨p int￨p selection￨p ,￨p int￨p target￨p )￨f {￨f int￨e index￨e =￨e -￨e 1￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c convertData￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c convertData￨c [￨c i￨c ]￨c [￨c 0￨c ]￨c )￨c ==￨c 0￨c )￨j {￨j index￨e =￨e i￨e ;￨e break￨e ;￨e }￨j }￨l if￨j (￨j index￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j <START_BUG>￨b int￨b [￨b ]￨b [￨b ]￨b newConvertData￨b =￨b new￨b int￨b [￨b convertData￨b .￨b length￨b ]￨b [￨b 3￨b ]￨b ;￨b <END_BUG>￨b System￨e .￨e arraycopy￨e (￨e convertData￨e ,￨e 0￨e ,￨e newConvertData￨e ,￨e 0￨e ,￨e convertData￨e .￨e length￨e )￨e ;￨e index￨e =￨e convertData￨e .￨e length￨e ;￨e convertData￨e =￨e newConvertData￨e ;￨e }￨j convertData￨e [￨e index￨e ]￨e [￨e 0￨e ]￨e =￨e selection￨e ;￨e convertData￨e [￨e index￨e ]￨e [￨e 1￨e ]￨e =￨e target￨e ;￨e convertData￨e [￨e index￨e ]￨e [￨e 2￨e ]￨e =￨e ptr￨e ;￨e }￨f void￨f wait￨f (￨f int￨p timeout￨p )￨f {￨f }￨f int￨f checkEvent￨f (￨f int￨p display￨p ,￨p int￨p event￨p ,￨p int￨p arg￨p )￨f {￨f }￨f int￨f XtConvertSelection￨f (￨f int￨p widget￨p ,￨p int￨p selection￨p ,￨p int￨p target￨p ,￨p int￨p type￨p ,￨p int￨p value￨p ,￨p int￨p length￨p ,￨p int￨p format￨p )￨f {￨f }￨f int￨f XtLoseSelection￨f (￨f int￨p widget￨p ,￨p int￨p selection￨p )￨f {￨f }￨f int￨f XtSelectionCallback￨f (￨f int￨p widget￨p ,￨p int￨p client_data￨p ,￨p int￨p selection￨p ,￨p int￨p type￨p ,￨p int￨p value￨p ,￨p int￨p length￨p ,￨p int￨p format￨p )￨f {￨f }￨f int￨f XtSelectionDone￨f (￨f int￨p widget￨p ,￨p int￨p selection￨p ,￨p int￨p target￨p )￨f {￨f }￨f }￨d
public￨d class￨d AjaxTimerBehaviorTest￨d extends￨d WicketTestCase￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d AjaxTimerBehaviorTest￨d .￨d class￨d )￨d ;￨d public￨d void￨d testAddToAjaxUpdate￨d (￨d )￨d {￨d }￨d public￨f void￨f testAddToWebPage￨f (￨f )￨f {￨f Duration￨e dur￨e =￨e Duration￨e .￨e seconds￨e (￨e 20￨e )￨e ;￨e final￨e AjaxTimerBehaviorTest￨e .￨e MyAjaxSelfUpdatingTimerBehavior￨e timer￨e =￨e new￨e AjaxTimerBehaviorTest￨e .￨e MyAjaxSelfUpdatingTimerBehavior￨e (￨e dur￨e )￨e ;￨e final￨e MockPageWithLinkAndComponent￨e page￨e =￨e new￨e MockPageWithLinkAndComponent￨e (￨e )￨e ;￨e Label￨e label￨e =￨e new￨e Label￨e (￨e MockPageWithLinkAndComponent￨e .￨e COMPONENT_ID￨e ,￨e "Hello"￨e )￨e ;￨e page￨e .￨e add￨e (￨e label￨e )￨e ;￨e <START_BUG>￨b page￨b .￨b add￨b (￨b new￨b Link￨b (￨b MockPageWithLinkAndComponent￨b .￨b LINK_ID￨b )￨b {￨b <END_BUG>￨b private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e @￨f Override￨f public￨f void￨f onClick￨f (￨f )￨f {￨f }￨f }￨e )￨e ;￨e label￨e .￨e setOutputMarkupId￨e (￨e true￨e )￨e ;￨e label￨e .￨e add￨e (￨e timer￨e )￨e ;￨e tester￨e .￨e startPage￨e (￨e page￨e )￨e ;￨e validate￨e (￨e timer￨e ,￨e true￨e )￨e ;￨e tester￨e .￨e clickLink￨e (￨e LINK_ID￨e )￨e ;￨e validate￨e (￨e timer￨e ,￨e true￨e )￨e ;￨e }￨f private￨f void￨f validate￨f (￨f AjaxTimerBehaviorTest￨p .￨p MyAjaxSelfUpdatingTimerBehavior￨p timer￨p ,￨p boolean￨p inBodyOnLoad￨p )￨f {￨f }￨f private￨f void￨f validateTimerScript￨f (￨f String￨p document￨p ,￨p String￨p updateScript￨p )￨f {￨f }￨f private￨f static￨f final￨f String￨f quote￨f (￨f String￨p s￨p )￨f {￨f }￨f static￨d class￨d MyAjaxSelfUpdatingTimerBehavior￨d extends￨d AjaxSelfUpdatingTimerBehavior￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e Duration￨e duration￨e ;￨e String￨e updateScript￨e ;￨e public￨f MyAjaxSelfUpdatingTimerBehavior￨f (￨f Duration￨p updateInterval￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentRendered￨f (￨f )￨f {￨f }￨f public￨f String￨f getUpdateScript￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d final￨d class￨d ScheduledThreadPoolAdd￨d extends￨d AbstractExecutorAdd￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 5597662601486525937L￨e ;￨e public￨f ScheduledThreadPoolAdd￨f (￨f final￨p String￨p name￨p ,￨p final￨p ScaledCount￨p maxThreads￨p )￨f {￨f }￨f @￨f Override￨f protected￨f <￨f P￨f >￨f void￨f applyUpdate￨f (￨f final￨p UpdateContext￨p updateContext￨p ,￨p final￨p UpdateResultHandler￨p <￨p ?￨p super￨p Void￨p ,￨p P￨p >￨p handler￨p ,￨p final￨p P￨p param￨p )￨f {￨f <START_BUG>￨b final￨b BatchBuilder￨b builder￨b =￨b updateContext￨b .￨b getBatchBuilder￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e ScaledCount￨e maxThreadsCount￨e =￨e getMaxThreads￨e (￨e )￨e ;￨e final￨e int￨e maxThreads￨e =￨e maxThreadsCount￨e .￨e getScaledCount￨e (￨e )￨e ;￨e final￨e String￨e name￨e =￨e getName￨e (￨e )￨e ;￨e final￨e ServiceName￨e serviceName￨e =￨e ThreadsServices￨e .￨e executorName￨e (￨e name￨e )￨e ;￨e final￨e UnboundedQueueThreadPoolService￨e service￨e =￨e new￨e UnboundedQueueThreadPoolService￨e (￨e maxThreads￨e ,￨e getKeepaliveTime￨e (￨e )￨e )￨e ;￨e final￨e ServiceBuilder￨e <￨e ExecutorService￨e >￨e serviceBuilder￨e =￨e builder￨e .￨e addService￨e (￨e serviceName￨e ,￨e service￨e )￨e ;￨e addThreadFactoryDependency￨e (￨e serviceName￨e ,￨e serviceBuilder￨e ,￨e service￨e .￨e getThreadFactoryInjector￨e (￨e )￨e ,￨e builder￨e )￨e ;￨e serviceBuilder￨e .￨e install￨e (￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f void￨f applyUpdate￨f (￨f final￨f ThreadsSubsystemElement￨f element￨f )￨f throws￨f UpdateFailedException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d GeneralTopologyContext￨d implements￨d JSONAware￨d {￨d private￨e StormTopology￨e _topology￨e ;￨e private￨e Map￨e <￨e Integer￨e ,￨e String￨e >￨e _taskToComponent￨e ;￨e private￨e Map￨e <￨e String￨e ,￨e List￨e <￨e Integer￨e >￨e >￨e _componentToTasks￨e ;￨e private￨e Map￨e <￨e String￨e ,￨e Map￨e <￨e String￨e ,￨e Fields￨e >￨e >￨e _componentToStreamToFields￨e ;￨e private￨e String￨e _stormId￨e ;￨e protected￨e Map￨e _stormConf￨e ;￨e public￨f GeneralTopologyContext￨f (￨f StormTopology￨p topology￨p ,￨p Map￨p stormConf￨p ,￨p Map￨p <￨p Integer￨p ,￨p String￨p >￨p taskToComponent￨p ,￨p Map￨p <￨p String￨p ,￨p List￨p <￨p Integer￨p >￨p >￨p componentToSortedTasks￨p ,￨p Map￨p <￨p String￨p ,￨p Map￨p <￨p String￨p ,￨p Fields￨p >￨p >￨p componentToStreamToFields￨p ,￨p String￨p stormId￨p )￨f {￨f }￨f public￨f String￨f getStormId￨f (￨f )￨f {￨f }￨f public￨f StormTopology￨f getRawTopology￨f (￨f )￨f {￨f }￨f public￨f String￨f getComponentId￨f (￨f int￨p taskId￨p )￨f {￨f <START_BUG>￨b if￨b (￨b taskId￨b ==￨b (￨b Constants￨b .￨b SYSTEM_TASK_ID￨b )￨b )￨b {￨b <END_BUG>￨b return￨e Constants￨e .￨e SYSTEM_COMPONENT_ID￨e ;￨e else￨j {￨j return￨e _taskToComponent￨e .￨e get￨e (￨e taskId￨e )￨e ;￨e }￨j }￨f public￨f Set￨f <￨f String￨f >￨f getComponentStreams￨f (￨f String￨p componentId￨p )￨f {￨f }￨f public￨f List￨f <￨f Integer￨f >￨f getComponentTasks￨f (￨f String￨p componentId￨p )￨f {￨f }￨f public￨f Fields￨f getComponentOutputFields￨f (￨f String￨p componentId￨p ,￨p String￨p streamId￨p )￨f {￨f }￨f public￨f Fields￨f getComponentOutputFields￨f (￨f GlobalStreamId￨p id￨p )￨f {￨f }￨f public￨f Map￨f <￨f GlobalStreamId￨f ,￨f Grouping￨f >￨f getSources￨f (￨f String￨p componentId￨p )￨f {￨f }￨f public￨f Map￨f <￨f String￨f ,￨f Map￨f <￨f String￨f ,￨f Grouping￨f >￨f >￨f getTargets￨f (￨f String￨p componentId￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toJSONString￨f (￨f )￨f {￨f }￨f public￨f Map￨f <￨f Integer￨f ,￨f String￨f >￨f getTaskToComponent￨f (￨f )￨f {￨f }￨f public￨f Set￨f <￨f String￨f >￨f getComponentIds￨f (￨f )￨f {￨f }￨f public￨f ComponentCommon￨f getComponentCommon￨f (￨f String￨p componentId￨p )￨f {￨f }￨f public￨f int￨f maxTopologyMessageTimeout￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ResourceLink￨d extends￨d Link￨d implements￨d IResourceListener￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e ResourceReference￨e resourceReference￨e ;￨e private￨e final￨e Resource￨e resource￨e ;￨e public￨f ResourceLink￨f (￨f final￨p String￨p id￨p ,￨p final￨p ResourceReference￨p resourceReference￨p )￨f {￨f }￨f public￨f ResourceLink￨f (￨f final￨p String￨p id￨p ,￨p final￨p Resource￨p resource￨p )￨f {￨f }￨f public￨f void￨f onClick￨f (￨f )￨f {￨f }￨f protected￨f final￨f String￨f getURL￨f (￨f )￨f {￨f if￨j (￨j (￨c resourceReference￨c )￨c !=￨c null￨c )￨j {￨j resourceReference￨e .￨e setLocale￨e (￨e getLocale￨e (￨e )￨e )￨e ;￨e resourceReference￨e .￨e setStyle￨e (￨e getStyle￨e (￨e )￨e )￨e ;￨e resourceReference￨e .￨e bind￨e (￨e getApplication￨e (￨e )￨e )￨e ;￨e return￨e getRequestCycle￨e (￨e )￨e .￨e urlFor￨e (￨e resourceReference￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b urlFor￨b (￨b IResourceListener￨b .￨b class￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f final￨f void￨f onResourceRequested￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PersistenceProviderImpl￨d implements￨d PersistenceProvider￨d ,￨d ProviderUtil￨d {￨d static￨e final￨e String￨e CLASS_TRANSFORMER_OPTIONS￨e =￨e "ClassTransformerOptions"￨e ;￨e private￨e static￨e final￨e String￨e EMF_POOL￨e =￨e "EntityManagerFactoryPool"￨e ;￨e private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d PersistenceProviderImpl￨d .￨d class￨d )￨d ;￨d private￨d Log￨d _log￨d ;￨d public￨d OpenJPAEntityManagerFactory￨d createEntityManagerFactory￨d (￨d String￨d name￨d ,￨d String￨d resource￨d ,￨d Map￨d m￨d )￨d {￨d }￨d private￨f BrokerFactory￨f getBrokerFactory￨f (￨f ConfigurationProvider￨p cp￨p ,￨p Object￨p poolValue￨p ,￨p ClassLoader￨p loader￨p )￨f {￨f }￨f public￨f OpenJPAEntityManagerFactory￨f createEntityManagerFactory￨f (￨f String￨p name￨p ,￨p Map￨p m￨p )￨f {￨f }￨f public￨f OpenJPAEntityManagerFactory￨f createContainerEntityManagerFactory￨f (￨f PersistenceUnitInfo￨p pui￨p ,￨p Map￨p m￨p )￨f {￨f PersistenceProductDerivation￨e pd￨e =￨e new￨e PersistenceProductDerivation￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Object￨e poolValue￨e =￨e Configurations￨e .￨e removeProperty￨e (￨e PersistenceProviderImpl￨e .￨e EMF_POOL￨e ,￨e m￨e )￨e ;￨e ConfigurationProvider￨e cp￨e =￨e pd￨e .￨e load￨e (￨e pui￨e ,￨e m￨e )￨e ;￨e if￨j (￨j cp￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j Exception￨e transformerException￨e =￨e null￨e ;￨e String￨e ctOpts￨e =￨e (￨e (￨e String￨e )￨e (￨e Configurations￨e .￨e getProperty￨e (￨e PersistenceProviderImpl￨e .￨e CLASS_TRANSFORMER_OPTIONS￨e ,￨e pui￨e .￨e getProperties￨e (￨e )￨e )￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f pui￨e .￨e addTransformer￨e (￨e new￨e PersistenceProviderImpl￨e .￨e ClassTransformerImpl￨e (￨e cp￨e ,￨e ctOpts￨e ,￨e pui￨e .￨e getNewTempClassLoader￨e (￨e )￨e ,￨e newConfigurationImpl￨e (￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f transformerException￨e =￨e e￨e ;￨e }￨f if￨j (￨j !￨c (￨c Configurations￨c .￨c containsProperty￨c (￨c KEY￨c ,￨c cp￨c .￨c getProperties￨c (￨c )￨c )￨c )￨c )￨j {￨j cp￨e .￨e addProperty￨e (￨e (￨e "openjpa."￨e +￨e (￨e BrokerValue￨e .￨e KEY￨e )￨e )￨e ,￨e getDefaultBrokerAlias￨e (￨e )￨e )￨e ;￨e }￨j BrokerFactory￨e factory￨e =￨e getBrokerFactory￨e (￨e cp￨e ,￨e poolValue￨e ,￨e pui￨e .￨e getClassLoader￨e (￨e )￨e )￨e ;￨e if￨j (￨j transformerException￨c !=￨c null￨c )￨j {￨j Log￨e log￨e =￨e factory￨e .￨e getConfiguration￨e (￨e )￨e .￨e getLog￨e (￨e LOG_RUNTIME￨e )￨e ;￨e if￨j (￨j log￨c .￨c isTraceEnabled￨c (￨c )￨c )￨j {￨j log￨e .￨e warn￨e (￨e PersistenceProviderImpl￨e .￨e _loc￨e .￨e get￨e (￨e "transformer-registration-error-ex"￨e ,￨e pui￨e )￨e ,￨e transformerException￨e )￨e ;￨e }￨j else￨j {￨j log￨e .￨e warn￨e (￨e PersistenceProviderImpl￨e .￨e _loc￨e .￨e get￨e (￨e "transformer-registration-error"￨e ,￨e pui￨e )￨e )￨e ;￨e }￨j }￨j OpenJPAConfiguration￨e conf￨e =￨e factory￨e .￨e getConfiguration￨e (￨e )￨e ;￨e _log￨e =￨e conf￨e .￨e getLog￨e (￨e LOG_RUNTIME￨e )￨e ;￨e loadValidator￨e (￨e _log￨e ,￨e conf￨e )￨e ;￨e Options￨e o￨e =￨e Configurations￨e .￨e parseProperties￨e (￨e Configurations￨e .￨e getProperties￨e (￨e "openjpa.MetaDataRepository"￨e )￨e )￨e ;￨e if￨j (￨j o￨c .￨c getBooleanProperty￨c (￨c "Preload"￨c )￨c )￨j {￨j <START_BUG>￨b conf￨b .￨b getAbstractBrokerFactoryInstance￨b (￨b )￨b .￨b preload￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j return￨e JPAFacadeHelper￨e .￨e toEntityManagerFactory￨e (￨e factory￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e PersistenceExceptions￨e .￨e toPersistenceException￨e (￨e e￨e )￨e ;￨e }￨f }￨f public￨f ProviderUtil￨f getProviderUtil￨f (￨f )￨f {￨f }￨f protected￨f String￨f getDefaultBrokerAlias￨f (￨f )￨f {￨f }￨f protected￨f OpenJPAConfiguration￨f newConfigurationImpl￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d ClassTransformerImpl￨d implements￨d ClassTransformer￨d {￨d private￨e final￨e ClassFileTransformer￨e _trans￨e ;￨e private￨f ClassTransformerImpl￨f (￨f ConfigurationProvider￨p cp￨p ,￨p String￨p props￨p ,￨p final￨p ClassLoader￨p tmpLoader￨p ,￨p OpenJPAConfiguration￨p conf￨p )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f transform￨f (￨f ClassLoader￨f cl￨f ,￨f String￨f name￨f ,￨f Class￨f <￨f ?￨f >￨f previousVersion￨f ,￨f ProtectionDomain￨f pd￨f ,￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f IllegalClassFormatException￨f (￨f )￨f {￨f }￨f }￨d private￨f void￨f loadAgent￨f (￨f Log￨p log￨p ,￨p OpenJPAConfiguration￨p conf￨p )￨f {￨f }￨f private￨f void￨f loadValidator￨f (￨f Log￨p log￨p ,￨p OpenJPAConfiguration￨p conf￨p )￨f {￨f }￨f public￨f LoadState￨f isLoaded￨f (￨f Object￨p obj￨p )￨f {￨f }￨f public￨f LoadState￨f isLoadedWithReference￨f (￨f Object￨p obj￨p ,￨p String￨p attr￨p )￨f {￨f }￨f public￨f LoadState￨f isLoadedWithoutReference￨f (￨f Object￨p obj￨p ,￨p String￨p attr￨p )￨f {￨f }￨f }￨d
public￨d class￨d EudoraMailImportFilter￨d extends￨d AbstractMailboxImporter￨d {￨d private￨e static￨e final￨e Logger￨e LOG￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.columba.mail"￨e )￨e ;￨e private￨e static￨e final￨e String￨e TIME_ZONE￨e =￨e new￨e SimpleDateFormat￨e (￨e "Z"￨e )￨e .￨e format￨e (￨e new￨e Date￨e (￨e )￨e )￨e ;￨e private￨e static￨e final￨e String￨e DEFAULT_CHARSET￨e =￨e System￨e .￨e getProperty￨e (￨e "file.encoding"￨e )￨e ;￨e public￨f EudoraMailImportFilter￨f (￨f )￨f {￨f }￨f public￨f EudoraMailImportFilter￨f (￨f IMailbox￨p destinationFolder￨p ,￨p File￨p [￨p ]￨p sourceFiles￨p )￨f {￨f }￨f public￨f int￨f getType￨f (￨f )￨f {￨f }￨f public￨f String￨f getDescription￨f (￨f )￨f {￨f }￨f public￨f void￨f importMailboxFile￨f (￨f File￨f file￨f ,￨f IWorkerStatusController￨f worker￨f ,￨f IMailbox￨f destFolder￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f String￨f getNewDateHeader￨f (￨f String￨p dateStr￨p ,￨p String￨p timeZone￨p )￨f {￨f }￨f private￨f boolean￨f convertAndSaveMessage￨f (￨f String￨p msg￨p ,￨p String￨p replacementDate￨p ,￨p IWorkerStatusController￨p worker￨p ,￨p IMailbox￨p destFolder￨p )￨f {￨f String￨e [￨e ]￨e divided￨e =￨e divideMessage￨e (￨e msg￨e )￨e ;￨e if￨j (￨j divided￨c ==￨c null￨c )￨j {￨j EudoraMailImportFilter￨e .￨e LOG￨e .￨e severe￨e (￨e "Error<seq2seq4repair_space>splitting<seq2seq4repair_space>message<seq2seq4repair_space>into<seq2seq4repair_space>headers<seq2seq4repair_space>and<seq2seq4repair_space>body"￨e )￨e ;￨e return￨e false￨e ;￨e }￨j String￨e headers￨e =￨e divided￨e [￨e 0￨e ]￨e ;￨e String￨e body￨e =￨e divided￨e [￨e 1￨e ]￨e ;￨e HeaderTokenizer￨e tokenizer￨e =￨e new￨e HeaderTokenizer￨e (￨e headers￨e )￨e ;￨e EncodedWord￨e decoder￨e =￨e new￨e EncodedWord￨e (￨e )￨e ;￨e StringBuffer￨e headerBuf￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e boolean￨e dateFound￨e =￨e false￨e ;￨e boolean￨e contentTypeFound￨e =￨e false￨e ;￨e String￨e line￨e =￨e tokenizer￨e .￨e nextLine￨e (￨e )￨e ;￨e while￨l (￨l line￨c !=￨c null￨c )￨l {￨l if￨j (￨j (￨c line￨c .￨c indexOf￨c (￨c ':'￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j String￨e key￨e =￨e line￨e .￨e substring￨e (￨e 0￨e ,￨e line￨e .￨e indexOf￨e (￨e ':'￨e )￨e )￨e ;￨e <START_BUG>￨b String￨b header￨b =￨b decoder￨b .￨b decode￨b (￨b (￨b (￨b CharSequence￨b )￨b (￨b line￨b .￨b substring￨b (￨b (￨b (￨b line￨b .￨b indexOf￨b (￨b ':'￨b )￨b )￨b +￨b 1￨b )￨b )￨b .￨b trim￨b (￨b )￨b )￨b )￨b )￨b .￨b toString￨b (￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j key￨c .￨c equalsIgnoreCase￨c (￨c "Date"￨c )￨c )￨j {￨j dateFound￨e =￨e true￨e ;￨e }￨j else￨j if￨j (￨j key￨c .￨c equalsIgnoreCase￨c (￨c "Content-Type"￨c )￨c )￨j {￨j contentTypeFound￨e =￨e true￨e ;￨e ContentType￨e conType￨e =￨e new￨e ContentType￨e (￨e header￨e )￨e ;￨e if￨j (￨j (￨c conType￨c .￨c getType￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c "multipart"￨c )￨c )￨c &&￨c (￨c (￨c body￨c .￨c indexOf￨c (￨c (￨c "--"￨c +￨c (￨c conType￨c .￨c getBoundary￨c (￨c )￨c )￨c )￨c )￨c )￨c ==￨c (￨c -￨c 1￨c )￨c )￨c )￨j {￨j if￨j (￨j conType￨c .￨c getSubType￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c "alternative"￨c )￨c )￨j {￨j header￨e =￨e guessBodyContentType￨e (￨e body￨e )￨e ;￨e EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e (￨e "Content-Type:<seq2seq4repair_space>multipart/alternative<seq2seq4repair_space>replaced<seq2seq4repair_space>with<seq2seq4repair_space>"￨e +￨e header￨e )￨e )￨e ;￨e }￨j else￨j {￨j String￨e [￨e ]￨e split￨e =￨e createAttachmentListFromAttachmentConverted￨e (￨e body￨e )￨e ;￨e if￨j (￨j (￨c split￨c ==￨c null￨c )￨c ||￨c (￨c (￨c split￨c .￨c length￨c )￨c ==￨c 1￨c )￨c )￨j {￨j header￨e =￨e guessBodyContentType￨e (￨e body￨e )￨e ;￨e EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e (￨e (￨e (￨e "Content-Type:<seq2seq4repair_space>multipart/"￨e +￨e (￨e conType￨e .￨e getSubType￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>"￨e )￨e +￨e header￨e )￨e )￨e ;￨e }￨j else￨j {￨j header￨e =￨e "multipart/mixed;\n\tboundary="￨e +￨e (￨e conType￨e .￨e getBoundary￨e (￨e )￨e )￨e ;￨e body￨e =￨e createBodyFromParts￨e (￨e split￨e ,￨e conType￨e .￨e getBoundary￨e (￨e )￨e )￨e ;￨e EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e "Content-Type:<seq2seq4repair_space>multipart/mixed.<seq2seq4repair_space>Boundaries<seq2seq4repair_space>added<seq2seq4repair_space>to<seq2seq4repair_space>msg<seq2seq4repair_space>body"￨e )￨e ;￨e }￨j }￨j }￨j }￨j else￨j if￨j (￨j key￨c .￨c equalsIgnoreCase￨c (￨c "X-Attachments"￨c )￨c )￨j {￨j if￨j (￨j (￨c header￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j String￨e [￨e ]￨e split￨e =￨e createAttachmentListFromHeader￨e (￨e body￨e ,￨e header￨e )￨e ;￨e if￨j (￨j (￨c split￨c ==￨c null￨c )￨c ||￨c (￨c (￨c split￨c .￨c length￨c )￨c ==￨c 1￨c )￨c )￨j {￨j headerBuf￨e .￨e append￨e (￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨e )￨e ;￨e key￨e =￨e "Content-Type"￨e ;￨e header￨e =￨e guessBodyContentType￨e (￨e body￨e )￨e ;￨e contentTypeFound￨e =￨e true￨e ;￨e EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e (￨e "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>"￨e +￨e header￨e )￨e )￨e ;￨e }￨j else￨j {￨j String￨e unique￨e =￨e getUniqueBoundary￨e (￨e body￨e )￨e ;￨e headerBuf￨e .￨e append￨e (￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨e )￨e ;￨e key￨e =￨e "Content-Type"￨e ;￨e header￨e =￨e "multipart/mixed;\n\tboundary="￨e +￨e unique￨e ;￨e contentTypeFound￨e =￨e true￨e ;￨e body￨e =￨e createBodyFromParts￨e (￨e split￨e ,￨e unique￨e )￨e ;￨e EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>multipart/mixed"￨e )￨e ;￨e }￨j }￨j }￨j headerBuf￨e .￨e append￨e (￨e (￨e (￨e (￨e key￨e +￨e ":<seq2seq4repair_space>"￨e )￨e +￨e header￨e )￨e +￨e "\n"￨e )￨e )￨e ;￨e }￨j line￨e =￨e tokenizer￨e .￨e nextLine￨e (￨e )￨e ;￨e }￨l if￨j (￨j !￨c dateFound￨c )￨j {￨j EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e "Date<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨e )￨e ;￨e String￨e dateHeader￨e =￨e getNewDateHeader￨e (￨e replacementDate￨e ,￨e EudoraMailImportFilter￨e .￨e TIME_ZONE￨e )￨e ;￨e if￨j (￨j dateHeader￨c !=￨c null￨c )￨j {￨j headerBuf￨e .￨e append￨e (￨e (￨e dateHeader￨e +￨e "\n"￨e )￨e )￨e ;￨e }￨j }￨j if￨j (￨j !￨c contentTypeFound￨c )￨j {￨j EudoraMailImportFilter￨e .￨e LOG￨e .￨e fine￨e (￨e "Content-Type<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨e )￨e ;￨e String￨e contHeader￨e =￨e "Content-Type:<seq2seq4repair_space>"￨e +￨e (￨e guessBodyContentType￨e (￨e body￨e )￨e )￨e ;￨e headerBuf￨e .￨e append￨e (￨e "MIME-Version:<seq2seq4repair_space>1.0\n"￨e )￨e ;￨e headerBuf￨e .￨e append￨e (￨e (￨e contHeader￨e +￨e "\n"￨e )￨e )￨e ;￨e }￨j return￨e saveMessage￨e (￨e headerBuf￨e .￨e toString￨e (￨e )￨e ,￨e body￨e ,￨e worker￨e ,￨e destFolder￨e )￨e ;￨e }￨f private￨f boolean￨f saveMessage￨f (￨f String￨p headers￨p ,￨p String￨p body￨p ,￨p IWorkerStatusController￨p worker￨p ,￨p IMailbox￨p destFolder￨p )￨f {￨f }￨f private￨f String￨f createBodyFromParts￨f (￨f String￨p [￨p ]￨p parts￨p ,￨p String￨p boundary￨p )￨f {￨f }￨f private￨f String￨f getUniqueBoundary￨f (￨f String￨p body￨p )￨f {￨f }￨f private￨f String￨f [￨f ]￨f divideMessage￨f (￨f String￨p input￨p )￨f {￨f }￨f private￨f String￨f guessBodyContentType￨f (￨f String￨p body￨p )￨f {￨f }￨f private￨f String￨f [￨f ]￨f createAttachmentListFromHeader￨f (￨f String￨p body￨p ,￨p String￨p xAttachments￨p )￨f {￨f }￨f private￨f String￨f [￨f ]￨f createAttachmentListFromAttachmentConverted￨f (￨f String￨p body￨p )￨f {￨f }￨f }￨d
public￨d class￨d NSText￨d extends￨d NSView￨d {￨d public￨f NSText￨f (￨f )￨f {￨f }￨f public￨f NSText￨f (￨f int￨p id￨p )￨f {￨f }￨f public￨f static￨f int￨f static_class￨f (￨f )￨f {￨f }￨f public￨f NSData￨f RTFDFromRange￨f (￨f NSRange￨p range￨p )￨f {￨f }￨f public￨f NSData￨f RTFFromRange￨f (￨f NSRange￨p range￨p )￨f {￨f }￨f public￨f void￨f alignCenter￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f alignLeft￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f alignRight￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f int￨f alignment￨f (￨f )￨f {￨f }￨f public￨f NSColor￨f backgroundColor￨f (￨f )￨f {￨f }￨f public￨f int￨f baseWritingDirection￨f (￨f )￨f {￨f }￨f public￨f void￨f changeFont￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f checkSpelling￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f copy￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f copyFont￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f copyRuler￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f cut￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f id￨f delegate￨f (￨f )￨f {￨f }￨f public￨f void￨f delete￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f boolean￨f drawsBackground￨f (￨f )￨f {￨f }￨f public￨f NSFont￨f font￨f (￨f )￨f {￨f }￨f public￨f boolean￨f importsGraphics￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEditable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFieldEditor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isHorizontallyResizable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRichText￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRulerVisible￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSelectable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVerticallyResizable￨f (￨f )￨f {￨f }￨f public￨f NSSize￨f maxSize￨f (￨f )￨f {￨f }￨f public￨f NSSize￨f minSize￨f (￨f )￨f {￨f }￨f public￨f void￨f paste￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f pasteFont￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f pasteRuler￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f boolean￨f readRTFDFromFile￨f (￨f NSString￨p path￨p )￨f {￨f }￨f public￨f void￨f replaceCharactersInRange_withRTF_￨f (￨f NSRange￨p range￨p ,￨p NSData￨p rtfData￨p )￨f {￨f }￨f public￨f void￨f replaceCharactersInRange_withRTFD_￨f (￨f NSRange￨p range￨p ,￨p NSData￨p rtfdData￨p )￨f {￨f }￨f public￨f void￨f replaceCharactersInRange_withString_￨f (￨f NSRange￨p range￨p ,￨p NSString￨p aString￨p )￨f {￨f }￨f public￨f void￨f scrollRangeToVisible￨f (￨f NSRange￨p range￨p )￨f {￨f }￨f public￨f void￨f selectAll￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f NSRange￨f selectedRange￨f (￨f )￨f {￨f NSRange￨e result￨e =￨e new￨e NSRange￨e (￨e )￨e ;￨e <START_BUG>￨b OS￨b .￨b objc_msgSend_struct￨b (￨b result￨b ,￨b this￨b .￨b id￨b ,￨b sel_selectedRange￨b )￨b ;￨b <END_BUG>￨b return￨e result￨e ;￨e }￨f public￨f void￨f setAlignment￨f (￨f int￨p mode￨p )￨f {￨f }￨f public￨f void￨f setBackgroundColor￨f (￨f NSColor￨p color￨p )￨f {￨f }￨f public￨f void￨f setBaseWritingDirection￨f (￨f int￨p writingDirection￨p )￨f {￨f }￨f public￨f void￨f setDelegate￨f (￨f id￨p anObject￨p )￨f {￨f }￨f public￨f void￨f setDrawsBackground￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setEditable￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setFieldEditor￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setFont_￨f (￨f NSFont￨p obj￨p )￨f {￨f }￨f public￨f void￨f setFont_range_￨f (￨f NSFont￨p font￨p ,￨p NSRange￨p range￨p )￨f {￨f }￨f public￨f void￨f setHorizontallyResizable￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setImportsGraphics￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setMaxSize￨f (￨f NSSize￨p newMaxSize￨p )￨f {￨f }￨f public￨f void￨f setMinSize￨f (￨f NSSize￨p newMinSize￨p )￨f {￨f }￨f public￨f void￨f setRichText￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setSelectable￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setSelectedRange￨f (￨f NSRange￨p range￨p )￨f {￨f }￨f public￨f void￨f setString￨f (￨f NSString￨p string￨p )￨f {￨f }￨f public￨f void￨f setTextColor_￨f (￨f NSColor￨p color￨p )￨f {￨f }￨f public￨f void￨f setTextColor_range_￨f (￨f NSColor￨p color￨p ,￨p NSRange￨p range￨p )￨f {￨f }￨f public￨f void￨f setUsesFontPanel￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setVerticallyResizable￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f showGuessPanel￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f sizeToFit￨f (￨f )￨f {￨f }￨f public￨f NSString￨f string￨f (￨f )￨f {￨f }￨f public￨f void￨f subscript￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f superscript￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f NSColor￨f textColor￨f (￨f )￨f {￨f }￨f public￨f void￨f toggleRuler￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f underline￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f void￨f unscript￨f (￨f id￨p sender￨p )￨f {￨f }￨f public￨f boolean￨f usesFontPanel￨f (￨f )￨f {￨f }￨f public￨f boolean￨f writeRTFDToFile￨f (￨f NSString￨p path￨p ,￨p boolean￨p flag￨p )￨f {￨f }￨f }￨d
public￨d class￨d JoinDocFreqValueSource￨d extends￨d FieldCacheSource￨d {￨d public￨e static￨e final￨e String￨e NAME￨e =￨e "joindf"￨e ;￨e protected￨e final￨e String￨e qfield￨e ;￨e public￨f JoinDocFreqValueSource￨f (￨f String￨p field￨p ,￨p String￨p qfield￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f description￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f FunctionValues￨f getValues￨f (￨f Map￨f context￨f ,￨f AtomicReaderContext￨f readerContext￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b final￨b BinaryDocValues￨b terms￨b =￨b cache￨b .￨b getTerms￨b (￨b readerContext￨b .￨b reader￨b (￨b )￨b ,￨b field￨b ,￨b FAST￨b )￨b ;￨b <END_BUG>￨b final￨e IndexReader￨e top￨e =￨e ReaderUtil￨e .￨e getTopLevelContext￨e (￨e readerContext￨e )￨e .￨e reader￨e (￨e )￨e ;￨e Terms￨e t￨e =￨e MultiFields￨e .￨e getTerms￨e (￨e top￨e ,￨e qfield￨e )￨e ;￨e final￨e TermsEnum￨e termsEnum￨e =￨e (￨e t￨e ==￨e null￨e )￨e ?￨e TermsEnum￨e .￨e EMPTY￨e :￨e t￨e .￨e iterator￨e (￨e null￨e )￨e ;￨e return￨f new￨f IntDocValues￨f (￨f this￨p )￨f {￨f final￨e BytesRef￨e ref￨e =￨e new￨e BytesRef￨e (￨e )￨e ;￨e @￨f Override￨f public￨f int￨f intVal￨f (￨f int￨p doc￨p )￨f {￨f try￨f (￨f )￨f {￨f terms￨e .￨e get￨e (￨e doc￨e ,￨e ref￨e )￨e ;￨e if￨j (￨j termsEnum￨c .￨c seekExact￨c (￨c ref￨c )￨c )￨j {￨j return￨e termsEnum￨e .￨e docFreq￨e (￨e )￨e ;￨e }￨j else￨j {￨j return￨e 0￨e ;￨e }￨j }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e (￨e (￨e (￨e "caught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>function<seq2seq4repair_space>"￨e +￨e (￨e description￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>:<seq2seq4repair_space>doc="￨e )￨e +￨e doc￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f }￨f ;￨e }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ExceptionHandlerExceptionResolver￨d extends￨d AbstractHandlerMethodExceptionResolver￨d implements￨d InitializingBean￨d {￨d private￨e List￨e <￨e HandlerMethodArgumentResolver￨e >￨e customArgumentResolvers￨e ;￨e private￨e List￨e <￨e HandlerMethodReturnValueHandler￨e >￨e customReturnValueHandlers￨e ;￨e private￨e List￨e <￨e HttpMessageConverter￨e <￨e ?￨e >￨e >￨e messageConverters￨e ;￨e private￨e final￨e Map￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e ExceptionHandlerMethodResolver￨e >￨e exceptionHandlerMethodResolvers￨e =￨e new￨e ConcurrentHashMap￨e <￨e Class￨e <￨e ?￨e >￨e ,￨e ExceptionHandlerMethodResolver￨e >￨e (￨e )￨e ;￨e private￨e HandlerMethodArgumentResolverComposite￨e argumentResolvers￨e ;￨e private￨e HandlerMethodReturnValueHandlerComposite￨e returnValueHandlers￨e ;￨e public￨f ExceptionHandlerExceptionResolver￨f (￨f )￨f {￨f }￨f public￨f void￨f setCustomArgumentResolvers￨f (￨f List￨p <￨p HandlerMethodArgumentResolver￨p >￨p argumentResolvers￨p )￨f {￨f }￨f public￨f void￨f setArgumentResolvers￨f (￨f List￨p <￨p HandlerMethodArgumentResolver￨p >￨p argumentResolvers￨p )￨f {￨f }￨f public￨f void￨f setCustomReturnValueHandlers￨f (￨f List￨p <￨p HandlerMethodReturnValueHandler￨p >￨p returnValueHandlers￨p )￨f {￨f }￨f public￨f void￨f setReturnValueHandlers￨f (￨f List￨p <￨p HandlerMethodReturnValueHandler￨p >￨p returnValueHandlers￨p )￨f {￨f }￨f public￨f void￨f setMessageConverters￨f (￨f List￨p <￨p HttpMessageConverter￨p <￨p ?￨p >￨p >￨p messageConverters￨p )￨f {￨f }￨f public￨f void￨f afterPropertiesSet￨f (￨f )￨f {￨f }￨f public￨f static￨f List￨f <￨f HandlerMethodArgumentResolver￨f >￨f getDefaultArgumentResolvers￨f (￨f )￨f {￨f }￨f public￨f static￨f List￨f <￨f HandlerMethodReturnValueHandler￨f >￨f getDefaultReturnValueHandlers￨f (￨f List￨p <￨p HttpMessageConverter￨p <￨p ?￨p >￨p >￨p messageConverters￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModelAndView￨f doResolveHandlerMethodException￨f (￨f HttpServletRequest￨p request￨p ,￨p HttpServletResponse￨p response￨p ,￨p HandlerMethod￨p handlerMethod￨p ,￨p Exception￨p exception￨p )￨f {￨f if￨j (￨j handlerMethod￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j ServletInvocableHandlerMethod￨e exceptionHandlerMethod￨e =￨e getExceptionHandlerMethod￨e (￨e handlerMethod￨e ,￨e exception￨e )￨e ;￨e if￨j (￨j exceptionHandlerMethod￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j exceptionHandlerMethod￨e .￨e setHandlerMethodArgumentResolvers￨e (￨e this￨e .￨e argumentResolvers￨e )￨e ;￨e exceptionHandlerMethod￨e .￨e setHandlerMethodReturnValueHandlers￨e (￨e this￨e .￨e returnValueHandlers￨e )￨e ;￨e ServletWebRequest￨e webRequest￨e =￨e new￨e ServletWebRequest￨e (￨e request￨e ,￨e response￨e )￨e ;￨e ModelAndViewContainer￨e mavContainer￨e =￨e new￨e ModelAndViewContainer￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j logger￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j logger￨e .￨e debug￨e (￨e (￨e "Invoking<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨e +￨e exceptionHandlerMethod￨e )￨e )￨e ;￨e }￨j exceptionHandlerMethod￨e .￨e invokeAndHandle￨e (￨e webRequest￨e ,￨e mavContainer￨e ,￨e exception￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p invocationEx￨p )￨f {￨f logger￨e .￨e error￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>invoke<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨e +￨e exceptionHandlerMethod￨e )￨e ,￨e invocationEx￨e )￨e ;￨e return￨e null￨e ;￨e }￨f <START_BUG>￨b if￨b (￨b !￨b (￨b mavContainer￨b .￨b isResolveView￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b return￨e new￨e ModelAndView￨e (￨e )￨e ;￨e else￨j {￨j ModelAndView￨e mav￨e =￨e new￨e ModelAndView￨e (￨e )￨e .￨e addAllObjects￨e (￨e mavContainer￨e .￨e getModel￨e (￨e )￨e )￨e ;￨e mav￨e .￨e setViewName￨e (￨e mavContainer￨e .￨e getViewName￨e (￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c mavContainer￨c .￨c isViewReference￨c (￨c )￨c )￨c )￨j {￨j mav￨e .￨e setView￨e (￨e (￨e (￨e View￨e )￨e (￨e mavContainer￨e .￨e getView￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j return￨e mav￨e ;￨e }￨j }￨f protected￨f ServletInvocableHandlerMethod￨f getExceptionHandlerMethod￨f (￨f HandlerMethod￨p handlerMethod￨p ,￨p Exception￨p exception￨p )￨f {￨f }￨f private￨f ExceptionHandlerMethodResolver￨f getExceptionHandlerMethodResolver￨f (￨f Class￨p <￨p ?￨p >￨p handlerType￨p )￨f {￨f }￨f }￨d
public￨d class￨d ProjectBrowser￨d extends￨d JFrame￨d implements￨d IStatusBar￨d {￨d public￨e static￨e ProjectBrowser￨e TheInstance￨e ;￨e protected￨e static￨e Action￨e _actionNew￨e =￨e Actions￨e .￨e New￨e ;￨e protected￨e static￨e Action￨e _actionOpen￨e =￨e Actions￨e .￨e Open￨e ;￨e protected￨e static￨e Action￨e _actionSave￨e =￨e Actions￨e .￨e Save￨e ;￨e protected￨e static￨e Action￨e _actionSaveAs￨e =￨e Actions￨e .￨e SaveAs￨e ;￨e protected￨e static￨e Action￨e _actionAddToProj￨e =￨e Actions￨e .￨e AddToProj￨e ;￨e protected￨e static￨e Action￨e _actionPrint￨e =￨e Actions￨e .￨e Print￨e ;￨e protected￨e static￨e Action￨e _actionExit￨e =￨e Actions￨e .￨e Exit￨e ;￨e protected￨e static￨e Action￨e _actionUndo￨e =￨e Actions￨e .￨e Undo￨e ;￨e protected￨e static￨e Action￨e _actionRedo￨e =￨e Actions￨e .￨e Redo￨e ;￨e protected￨e static￨e Action￨e _actionCut￨e =￨e Actions￨e .￨e Cut￨e ;￨e protected￨e static￨e Action￨e _actionCopy￨e =￨e Actions￨e .￨e Copy￨e ;￨e protected￨e static￨e Action￨e _actionPaste￨e =￨e Actions￨e .￨e Paste￨e ;￨e protected￨e static￨e Action￨e _actionDelete￨e =￨e new￨e CmdDelete￨e (￨e )￨e ;￨e protected￨e static￨e Action￨e _actionDispose￨e =￨e new￨e CmdDispose￨e (￨e )￨e ;￨e protected￨e static￨e Action￨e _actionNavUp￨e =￨e Actions￨e .￨e NavUp￨e ;￨e protected￨e static￨e Action￨e _actionNavDown￨e =￨e Actions￨e .￨e NavDown￨e ;￨e protected￨e static￨e Action￨e _actionNextTab￨e =￨e Actions￨e .￨e NextTab￨e ;￨e protected￨e static￨e Action￨e _actionPrevTab￨e =￨e Actions￨e .￨e PrevTab￨e ;￨e protected￨e static￨e Action￨e _actionShowDiagramTab￨e =￨e Actions￨e .￨e ShowDiagramTab￨e ;￨e protected￨e static￨e Action￨e _actionShowTableTab￨e =￨e Actions￨e .￨e ShowTableTab￨e ;￨e protected￨e static￨e Action￨e _actionShowTextTab￨e =￨e Actions￨e .￨e ShowTextTab￨e ;￨e protected￨e static￨e Action￨e _actionAddToFavs￨e =￨e Actions￨e .￨e AddToFavs￨e ;￨e protected￨e static￨e Action￨e _actionCreateMultiple￨e =￨e Actions￨e .￨e CreateMultiple￨e ;￨e protected￨e static￨e Action￨e _actionClassDiagram￨e =￨e Actions￨e .￨e ClassDiagram￨e ;￨e protected￨e static￨e Action￨e _actionUseCaseDiagram￨e =￨e Actions￨e .￨e UseCaseDiagram￨e ;￨e protected￨e static￨e Action￨e _actionStateDiagram￨e =￨e Actions￨e .￨e StateDiagram￨e ;￨e protected￨e static￨e Action￨e _actionModel￨e =￨e Actions￨e .￨e Model￨e ;￨e protected￨e static￨e Action￨e _actionClass￨e =￨e Actions￨e .￨e Class￨e ;￨e protected￨e static￨e Action￨e _actionInterface￨e =￨e Actions￨e .￨e Interface￨e ;￨e protected￨e static￨e Action￨e _actionActor￨e =￨e Actions￨e .￨e Actor￨e ;￨e protected￨e static￨e Action￨e _actionUseCase￨e =￨e Actions￨e .￨e UseCase￨e ;￨e protected￨e static￨e Action￨e _actionState￨e =￨e Actions￨e .￨e State￨e ;￨e protected￨e static￨e Action￨e _actionPseudostate￨e =￨e Actions￨e .￨e Pseudostate￨e ;￨e protected￨e static￨e Action￨e _actionAttr￨e =￨e Actions￨e .￨e Attr￨e ;￨e protected￨e static￨e Action￨e _actionOper￨e =￨e Actions￨e .￨e Oper￨e ;￨e protected￨d static￨d Action￨d _actionRectangle￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigRect￨d .￨d class￨d ,￨d "Rectangle"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionRRectangle￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigRRect￨d .￨d class￨d ,￨d "RRect"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionCircle￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigCircle￨d .￨d class￨d ,￨d "Circle"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionLine￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigLine￨d .￨d class￨d ,￨d "Line"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionText￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigText￨d .￨d class￨d ,￨d "Text"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionPoly￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigPoly￨d .￨d class￨d ,￨d "Polygon"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionInk￨d =￨d new￨d CmdSetMode￨d (￨d ModeCreateFigInk￨d .￨d class￨d ,￨d "Ink"￨d )￨d ;￨d protected￨d static￨d Action￨d _actionAutoCritique￨d =￨d Actions￨d .￨d AutoCritique￨d ;￨d protected￨d static￨d Action￨d _actionOpenDecisions￨d =￨d Actions￨d .￨d OpenDecisions￨d ;￨d protected￨d static￨d Action￨d _actionOpenGoals￨d =￨d Actions￨d .￨d OpenGoals￨d ;￨d protected￨d static￨d Action￨d _actionOpenCritics￨d =￨d Actions￨d .￨d OpenCritics￨d ;￨d protected￨d static￨d Action￨d _actionAboutArgoUML￨d =￨d Actions￨d .￨d AboutArgoUML￨d ;￨d protected￨d String￨d _appName￨d =￨d "ProjectBrowser"￨d ;￨d protected￨d Project￨d _project￨d =￨d null￨d ;￨d protected￨d NavigatorPane￨d _navPane￨d =￨d new￨d NavigatorPane￨d (￨d )￨d ;￨d public￨d ToDoPane￨d _toDoPane￨d =￨d new￨d ToDoPane￨d (￨d )￨d ;￨d protected￨d MultiEditorPane￨d _multiPane￨d =￨d new￨d MultiEditorPane￨d (￨d )￨d ;￨d protected￨d DetailsPane￨d _detailsPane￨d =￨d new￨d DetailsPane￨d (￨d )￨d ;￨d protected￨d JMenuBar￨d _menuBar￨d =￨d new￨d JMenuBar￨d (￨d )￨d ;￨d protected￨d StatusBar￨d _statusBar￨d =￨d new￨d StatusBar￨d (￨d )￨d ;￨d public￨d Font￨d defaultFont￨d =￨d new￨d Font￨d (￨d "Dialog"￨d ,￨d Font￨d .￨d PLAIN￨d ,￨d 10￨d )￨d ;￨d protected￨d JSplitPane￨d _mainSplit￨d ;￨d protected￨d JSplitPane￨d _topSplit￨d ;￨d protected￨d JSplitPane￨d _botSplit￨d ;￨d public￨d ProjectBrowser￨d (￨d String￨d appName￨d )￨d {￨d }￨d protected￨f void￨f initMenus￨f (￨f )￨f {￨f }￨f protected￨f Component￨f createPanels￨f (￨f )￨f {￨f _topSplit￨e =￨e new￨e JSplitPane￨e (￨e JSplitPane￨e .￨e HORIZONTAL_SPLIT￨e ,￨e _navPane￨e ,￨e _multiPane￨e )￨e ;￨e _botSplit￨e =￨e new￨e JSplitPane￨e (￨e JSplitPane￨e .￨e HORIZONTAL_SPLIT￨e ,￨e _toDoPane￨e ,￨e _detailsPane￨e )￨e ;￨e _mainSplit￨e =￨e new￨e JSplitPane￨e (￨e JSplitPane￨e .￨e VERTICAL_SPLIT￨e ,￨e _topSplit￨e ,￨e _botSplit￨e )￨e ;￨e _topSplit￨e .￨e setDividerSize￨e (￨e 2￨e )￨e ;￨e <START_BUG>￨b _topSplit￨b .￨b setDividerLocation￨b (￨b 250￨b )￨b ;￨b <END_BUG>￨b _botSplit￨e .￨e setDividerSize￨e (￨e 2￨e )￨e ;￨e _mainSplit￨e .￨e setDividerSize￨e (￨e 2￨e )￨e ;￨e return￨e _mainSplit￨e ;￨e }￨f public￨f void￨f setProject￨f (￨f Project￨p p￨p )￨f {￨f }￨f public￨f Project￨f getProject￨f (￨f )￨f {￨f }￨f public￨f String￨f getAppName￨f (￨f )￨f {￨f }￨f public￨f void￨f setAppName￨f (￨f String￨p n￨p )￨f {￨f }￨f public￨f void￨f setPerspectives￨f (￨f Vector￨p v￨p )￨f {￨f }￨f public￨f Vector￨f getPerspectives￨f (￨f )￨f {￨f }￨f public￨f void￨f setCurPerspective￨f (￨f NavPerspective￨p tm￨p )￨f {￨f }￨f public￨f NavPerspective￨f getCurPerspective￨f (￨f )￨f {￨f }￨f public￨f void￨f setToDoPerspectives￨f (￨f Vector￨p v￨p )￨f {￨f }￨f public￨f Vector￨f getToDoPerspectives￨f (￨f )￨f {￨f }￨f public￨f void￨f setToDoCurPerspective￨f (￨f TreeModel￨p tm￨p )￨f {￨f }￨f public￨f void￨f select￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f void￨f setTarget￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f Object￨f getTarget￨f (￨f )￨f {￨f }￨f public￨f void￨f setToDoItem￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f void￨f setDetalsTarget￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f StatusBar￨f getStatusBar￨f (￨f )￨f {￨f }￨f public￨f ToDoPane￨f getToDoPane￨f (￨f )￨f {￨f }￨f public￨f NavigatorPane￨f getNavPane￨f (￨f )￨f {￨f }￨f public￨f void￨f setVisible￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f void￨f showStatus￨f (￨f String￨p s￨p )￨f {￨f }￨f }￨d
public￨d class￨d SingularValueDecompositionImpl￨d implements￨d SingularValueDecomposition￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 3532767302235568872L￨e ;￨e private￨e int￨e m￨e ;￨e private￨e int￨e n￨e ;￨e private￨e BiDiagonalTransformer￨e transformer￨e ;￨e private￨e double￨e [￨e ]￨e mainBidiagonal￨e ;￨e private￨e double￨e [￨e ]￨e secondaryBidiagonal￨e ;￨e private￨e double￨e [￨e ]￨e mainTridiagonal￨e ;￨e private￨e double￨e [￨e ]￨e secondaryTridiagonal￨e ;￨e private￨e EigenDecomposition￨e eigenDecomposition￨e ;￨e private￨e double￨e [￨e ]￨e singularValues￨e ;￨e private￨e RealMatrix￨e cachedU￨e ;￨e private￨e RealMatrix￨e cachedUt￨e ;￨e private￨e RealMatrix￨e cachedS￨e ;￨e private￨e RealMatrix￨e cachedV￨e ;￨e private￨e RealMatrix￨e cachedVt￨e ;￨e public￨f SingularValueDecompositionImpl￨f (￨f RealMatrix￨f matrix￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getU￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getUT￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getS￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f double￨f [￨f ]￨f getSingularValues￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getV￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getVT￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f double￨f getNorm￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f double￨f getConditionNumber￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f int￨f getRank￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f public￨f DecompositionSolver￨f getSolver￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d Solver￨d implements￨d DecompositionSolver￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 1959408026708904378L￨e ;￨e private￨e final￨e double￨e [￨e ]￨e singularValues￨e ;￨e private￨e final￨e RealMatrix￨e uT￨e ;￨e private￨e final￨e RealMatrix￨e v￨e ;￨e private￨e boolean￨e nonSingular￨e ;￨e private￨f Solver￨f (￨f final￨p double￨p [￨p ]￨p singularValues￨p ,￨p final￨p RealMatrix￨p uT￨p ,￨p final￨p RealMatrix￨p v￨p ,￨p final￨p boolean￨p nonSingular￨p )￨f {￨f }￨f public￨f double￨f [￨f ]￨f solve￨f (￨f final￨f double￨f [￨f ]￨f b￨f )￨f throws￨f IllegalArgumentException￨f ,￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f RealVector￨f solve￨f (￨f final￨f RealVector￨f b￨f )￨f throws￨f IllegalArgumentException￨f ,￨f InvalidMatrixException￨f (￨f )￨f {￨f if￨j (￨j (￨c b￨c .￨c getDimension￨c (￨c )￨c )￨c !=￨c (￨c singularValues￨c .￨c length￨c )￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "constant<seq2seq4repair_space>vector<seq2seq4repair_space>has<seq2seq4repair_space>wrong<seq2seq4repair_space>length"￨e )￨e ;￨e }￨j final￨e RealVector￨e w￨e =￨e uT￨e .￨e operate￨e (￨e b￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c singularValues￨c .￨c length￨c )￨c ;￨c ++￨c i￨c )￨l {￨l final￨e double￨e si￨e =￨e singularValues￨e [￨e i￨e ]￨e ;￨e if￨j (￨j si￨c ==￨c 0￨c )￨j {￨j throw￨e new￨e SingularMatrixException￨e (￨e )￨e ;￨e }￨j <START_BUG>￨b w￨b .￨b set￨b (￨b i￨b ,￨b (￨b (￨b w￨b .￨b getEntry￨b (￨b i￨b )￨b )￨b /￨b si￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l return￨e v￨e .￨e operate￨e (￨e w￨e )￨e ;￨e }￨f public￨f RealMatrix￨f solve￨f (￨f final￨f RealMatrix￨f b￨f )￨f throws￨f IllegalArgumentException￨f ,￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNonSingular￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getInverse￨f (￨f )￨f throws￨f InvalidMatrixException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d DefinitionMetadataEqualsHashCodeTests￨d extends￨d TestCase￨d {￨d public￨f void￨f testRootBeanDefinitionEqualsAndHashCode￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testChildBeanDefinitionEqualsAndHashCode￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRuntimeBeanReference￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f setBaseProperties￨f (￨f AbstractBeanDefinition￨p definition￨p )￨f {￨f definition￨e .￨e setAbstract￨e (￨e true￨e )￨e ;￨e definition￨e .￨e setAttribute￨e (￨e "foo"￨e ,￨e "bar"￨e )￨e ;￨e definition￨e .￨e setAutowireCandidate￨e (￨e false￨e )￨e ;￨e definition￨e .￨e setAutowireMode￨e (￨e AUTOWIRE_BY_TYPE￨e )￨e ;￨e definition￨e .￨e setDependencyCheck￨e (￨e DEPENDENCY_CHECK_OBJECTS￨e )￨e ;￨e definition￨f .￨f setDependsOn￨f (￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e definition￨e .￨e setDestroyMethodName￨e (￨e "destroy"￨e )￨e ;￨e definition￨e .￨e setEnforceDestroyMethod￨e (￨e false￨e )￨e ;￨e definition￨e .￨e setEnforceInitMethod￨e (￨e true￨e )￨e ;￨e definition￨e .￨e setFactoryBeanName￨e (￨e "factoryBean"￨e )￨e ;￨e definition￨e .￨e setFactoryMethodName￨e (￨e "factoryMethod"￨e )￨e ;￨e definition￨e .￨e setInitMethodName￨e (￨e "init"￨e )￨e ;￨e definition￨e .￨e setLazyInit￨e (￨e true￨e )￨e ;￨e definition￨e .￨e getMethodOverrides￨e (￨e )￨e .￨e addOverride￨e (￨e new￨e LookupOverride￨e (￨e "foo"￨e ,￨e "bar"￨e )￨e )￨e ;￨e definition￨e .￨e getMethodOverrides￨e (￨e )￨e .￨e addOverride￨e (￨e new￨e ReplaceOverride￨e (￨e "foo"￨e ,￨e "bar"￨e )￨e )￨e ;￨e <START_BUG>￨b definition￨b .￨b getPropertyValues￨b (￨b )￨b .￨b addPropertyValue￨b (￨b "foo"￨b ,￨b "bar"￨b )￨b ;￨b <END_BUG>￨b definition￨e .￨e setResourceDescription￨e (￨e "desc"￨e )￨e ;￨e definition￨e .￨e setRole￨e (￨e ROLE_APPLICATION￨e )￨e ;￨e definition￨e .￨e setScope￨e (￨e SCOPE_PROTOTYPE￨e )￨e ;￨e definition￨e .￨e setSource￨e (￨e "foo"￨e )￨e ;￨e }￨f private￨f void￨f assertEqualsContract￨f (￨f Object￨p master￨p ,￨p Object￨p equal￨p ,￨p Object￨p notEqual￨p ,￨p Object￨p subclass￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestJapaneseKatakanaStemFilter￨d extends￨d BaseTokenStreamTestCase￨d {￨d private￨f Analyzer￨f analyzer￨f =￨f new￨f Analyzer￨f (￨f )￨f {￨f @￨f Override￨f protected￨f TokenStreamComponents￨f createComponents￨f (￨f String￨p fieldName￨p ,￨p Reader￨p reader￨p )￨f {￨f }￨f }￨f ;￨e public￨f void￨f testStemVariants￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnsupportedHalfWidthVariants￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomData￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b analyzer￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testEmptyTerm￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DomainModelUtil￨d {￨d public￨f static￨f void￨f updateCoreModel￨f (￨f final￨p Resource￨p rootResource￨p )￨f {￨f }￨f public￨f static￨f ExtensionContext￨f initializeMasterDomainRegistry￨f (￨f final￨p ManagementResourceRegistration￨p root￨p ,￨p final￨p ExtensibleConfigurationPersister￨p configurationPersister￨p ,￨p final￨p ContentRepository￨p contentRepository￨p ,￨p final￨p FileRepository￨p fileRepository￨p ,￨p final￨p DomainController￨p domainController￨p ,￨p final￨p UnregisteredHostChannelRegistry￨p registry￨p )￨f {￨f }￨f public￨f static￨f ExtensionContext￨f initializeSlaveDomainRegistry￨f (￨f final￨p ManagementResourceRegistration￨p root￨p ,￨p final￨p ExtensibleConfigurationPersister￨p configurationPersister￨p ,￨p final￨p ContentRepository￨p contentRepository￨p ,￨p final￨p FileRepository￨p fileRepository￨p ,￨p final￨p LocalHostControllerInfo￨p hostControllerInfo￨p )￨f {￨f }￨f private￨f static￨f ExtensionContext￨f initializeDomainRegistry￨f (￨f final￨p ManagementResourceRegistration￨p root￨p ,￨p final￨p ExtensibleConfigurationPersister￨p configurationPersister￨p ,￨p final￨p ContentRepository￨p contentRepo￨p ,￨p final￨p FileRepository￨p fileRepository￨p ,￨p final￨p boolean￨p isMaster￨p ,￨p final￨p DomainController￨p domainController￨p ,￨p final￨p UnregisteredHostChannelRegistry￨p registry￨p ,￨p final￨p LocalHostControllerInfo￨p hostControllerInfo￨p )￨f {￨f }￨f public￨f static￨f void￨f validateRolloutPlanStructure￨f (￨f ModelNode￨f plan￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j plan￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b OperationFailedException￨b (￨b "rolloutPlan<seq2seq4repair_space>argument<seq2seq4repair_space>is<seq2seq4repair_space>null."￨b )￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j !￨c (￨c plan￨c .￨c hasDefined￨c (￨c ROLLOUT_PLAN￨c )￨c )￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e requiredChildIsMissing￨e (￨e ROLLOUT_PLAN￨e ,￨e ROLLOUT_PLAN￨e ,￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j ModelNode￨e rolloutPlan1￨e =￨e plan￨e .￨e get￨e (￨e ROLLOUT_PLAN￨e )￨e ;￨e final￨e Set￨e <￨e String￨e >￨e keys￨e ;￨e try￨f (￨f )￨f {￨f keys￨e =￨e rolloutPlan1￨e .￨e keys￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IllegalArgumentException￨p e￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e requiredChildIsMissing￨e (￨e ROLLOUT_PLAN￨e ,￨e IN_SERIES￨e ,￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨f if￨j (￨j !￨c (￨c keys￨c .￨c contains￨c (￨c IN_SERIES￨c )￨c )￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e requiredChildIsMissing￨e (￨e ROLLOUT_PLAN￨e ,￨e IN_SERIES￨e ,￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c (￨c keys￨c .￨c size￨c (￨c )￨c )￨c >￨c 2￨c )￨c ||￨c (￨c (￨c (￨c keys￨c .￨c size￨c (￨c )￨c )￨c ==￨c 2￨c )￨c &&￨c (￨c !￨c (￨c keys￨c .￨c contains￨c (￨c ROLLBACK_ACROSS_GROUPS￨c )￨c )￨c )￨c )￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e unrecognizedChildren￨e (￨e ROLLOUT_PLAN￨e ,￨e (￨e (￨e (￨e IN_SERIES￨e )￨e +￨e ",<seq2seq4repair_space>"￨e )￨e +￨e (￨e ROLLBACK_ACROSS_GROUPS￨e )￨e )￨e ,￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j final￨e ModelNode￨e inSeries￨e =￨e rolloutPlan1￨e .￨e get￨e (￨e IN_SERIES￨e )￨e ;￨e if￨j (￨j !￨c (￨c inSeries￨c .￨c isDefined￨c (￨c )￨c )￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e requiredChildIsMissing￨e (￨e ROLLOUT_PLAN￨e ,￨e IN_SERIES￨e ,￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j final￨e List￨e <￨e ModelNode￨e >￨e groups￨e =￨e inSeries￨e .￨e asList￨e (￨e )￨e ;￨e if￨j (￨j groups￨c .￨c isEmpty￨c (￨c )￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e inSeriesIsMissingGroups￨e (￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j for￨l (￨l ModelNode￨c group￨c :￨c groups￨c )￨l {￨l if￨j (￨j group￨c .￨c hasDefined￨c (￨c SERVER_GROUP￨c )￨c )￨j {￨j final￨e ModelNode￨e serverGroup￨e =￨e group￨e .￨e get￨e (￨e SERVER_GROUP￨e )￨e ;￨e final￨e Set￨e <￨e String￨e >￨e groupKeys￨e ;￨e try￨f (￨f )￨f {￨f groupKeys￨e =￨e serverGroup￨e .￨e keys￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IllegalArgumentException￨p e￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e serverGroupExpectsSingleChild￨e (￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨f if￨j (￨j (￨c groupKeys￨c .￨c size￨c (￨c )￨c )￨c !=￨c 1￨c )￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e serverGroupExpectsSingleChild￨e (￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j DomainModelUtil￨e .￨e validateInSeriesServerGroup￨e (￨e serverGroup￨e .￨e asProperty￨e (￨e )￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j group￨c .￨c hasDefined￨c (￨c CONCURRENT_GROUPS￨c )￨c )￨j {￨j final￨e ModelNode￨e concurrent￨e =￨e group￨e .￨e get￨e (￨e CONCURRENT_GROUPS￨e )￨e ;￨e for￨l (￨l ModelNode￨c child￨c :￨c concurrent￨c .￨c asList￨c (￨c )￨c )￨l {￨l DomainModelUtil￨e .￨e validateInSeriesServerGroup￨e (￨e child￨e .￨e asProperty￨e (￨e )￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨l }￨j else￨j {￨j throw￨e new￨e OperationFailedException￨e (￨e DomainControllerMessages￨e .￨e MESSAGES￨e .￨e unexpectedInSeriesGroup￨e (￨e plan￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨l }￨f private￨f static￨f final￨f List￨f <￨f String￨f >￨f ALLOWED_SERVER_GROUP_CHILDREN￨f =￨f Arrays￨f .￨f asList￨f (￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e private￨f static￨f void￨f validateInSeriesServerGroup￨f (￨f ModelNode￨f serverGroup￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f }￨d
public￨d [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e =￨e new￨e VerificationTypeInfo￨e (￨e TypeIds￨e .￨e T_JavaLangObject￨e ,￨e constantPoolName￨e )￨e ;￨e pc￨e +=￨e 2￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_anewarray￨c :￨c index￨e =￨e u2At￨e (￨e bytecodes￨e ,￨e 1￨e ,￨e pc￨e )￨e ;￨e utf8index￨e =￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e index￨e ]￨e )￨e ;￨e className￨e =￨e utf8At￨e (￨e poolContents￨e ,￨e (￨e (￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e +￨e 3￨e )￨e ,￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e )￨e ;￨e int￨e classNameLength￨e =￨e className￨e .￨e length￨e ;￨e if￨j (￨j (￨c className￨c [￨c 0￨c ]￨c )￨c !=￨c '['￨c )￨j {￨j System￨e .￨e arraycopy￨e (￨e className￨e ,￨e 0￨e ,￨e (￨e constantPoolName￨e =￨e new￨e char￨e [￨e classNameLength￨e +￨e 3￨e ]￨e )￨e ,￨e 2￨e ,￨e classNameLength￨e )￨e ;￨e constantPoolName￨e [￨e 0￨e ]￨e =￨e '['￨e ;￨e constantPoolName￨e [￨e 1￨e ]￨e =￨e 'L'￨e ;￨e constantPoolName￨e [￨e (￨e classNameLength￨e +￨e 2￨e )￨e ]￨e =￨e ';'￨e ;￨e }￨j else￨j {￨j System￨e .￨e arraycopy￨e (￨e className￨e ,￨e 0￨e ,￨e (￨e constantPoolName￨e =￨e new￨e char￨e [￨e classNameLength￨e +￨e 1￨e ]￨e )￨e ,￨e 1￨e ,￨e classNameLength￨e )￨e ;￨e constantPoolName￨e [￨e 0￨e ]￨e =￨e '['￨e ;￨e }￨j frame￨e .￨e stackItems￨e [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e =￨e new￨e VerificationTypeInfo￨e (￨e 0￨e ,￨e constantPoolName￨e )￨e ;￨e pc￨e +=￨e 3￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_arraylength￨c :￨c frame￨e .￨e stackItems￨e [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e =￨e new￨e VerificationTypeInfo￨e (￨e TypeBinding￨e .￨e INT￨e )￨e ;￨e pc￨e ++￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_athrow￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e pc￨e ++￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_checkcast￨c :￨c index￨e =￨e u2At￨e (￨e bytecodes￨e ,￨e 1￨e ,￨e pc￨e )￨e ;￨e utf8index￨e =￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e index￨e ]￨e )￨e ;￨e className￨e =￨e utf8At￨e (￨e poolContents￨e ,￨e (￨e (￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e +￨e 3￨e )￨e ,￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e )￨e ;￨e frame￨e .￨e stackItems￨e [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e =￨e new￨e VerificationTypeInfo￨e (￨e 0￨e ,￨e className￨e )￨e ;￨e pc￨e +=￨e 3￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_instanceof￨c :￨c frame￨e .￨e stackItems￨e [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e =￨e new￨e VerificationTypeInfo￨e (￨e TypeBinding￨e .￨e INT￨e )￨e ;￨e pc￨e +=￨e 3￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_monitorenter￨c :￨c case￨c Opcodes￨c .￨c OPC_monitorexit￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e pc￨e ++￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_wide￨c :￨c opcode￨e =￨e (￨e (￨e byte￨e )￨e (￨e u1At￨e (￨e bytecodes￨e ,￨e 1￨e ,￨e pc￨e )￨e )￨e )￨e ;￨e if￨j (￨j opcode￨c ==￨c (￨c Opcodes￨c .￨c OPC_iinc￨c )￨c )￨j {￨j pc￨e +=￨e 6￨e ;￨e }￨j else￨j {￨j index￨e =￨e u2At￨e (￨e bytecodes￨e ,￨e 2￨e ,￨e pc￨e )￨e ;￨e switch￨s (￨s opcode￨c )￨s {￨s }￨s }￨j case￨c Opcodes￨c .￨c OPC_iload￨c :￨c frame￨e .￨e addStackItem￨e (￨e TypeBinding￨e .￨e INT￨e )￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_fload￨c :￨c frame￨e .￨e addStackItem￨e (￨e TypeBinding￨e .￨e FLOAT￨e )￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_aload￨c :￨c localsN￨e =￨e frame￨e .￨e locals￨e [￨e index￨e ]￨e ;￨e if￨j (￨j localsN￨c ==￨c null￨c )￨j {￨j localsN￨e =￨e retrieveLocal￨e (￨e currentPC￨e ,￨e index￨e )￨e ;￨e }￨j frame￨e .￨e addStackItem￨e (￨e localsN￨e )￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_lload￨c :￨c frame￨e .￨e addStackItem￨e (￨e TypeBinding￨e .￨e LONG￨e )￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_dload￨c :￨c frame￨e .￨e addStackItem￨e (￨e TypeBinding￨e .￨e DOUBLE￨e )￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_istore￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_fstore￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_astore￨c :￨c frame￨e .￨e locals￨e [￨e index￨e ]￨e =￨e frame￨e .￨e stackItems￨e [￨e (￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e -￨e 1￨e )￨e ]￨e ;￨e (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_lstore￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_dstore￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e break￨e ;￨e }￨e pc￨e +=￨e 4￨e ;￨e }￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_multianewarray￨c :￨c index￨e =￨e u2At￨e (￨e bytecodes￨e ,￨e 1￨e ,￨e pc￨e )￨e ;￨e utf8index￨e =￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e index￨e ]￨e )￨e ;￨e className￨e =￨e utf8At￨e (￨e poolContents￨e ,￨e (￨e (￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e +￨e 3￨e )￨e ,￨e u2At￨e (￨e poolContents￨e ,￨e 1￨e ,￨e constantPoolOffsets￨e [￨e utf8index￨e ]￨e )￨e )￨e ;￨e int￨e dimensions￨e =￨e u1At￨e (￨e bytecodes￨e ,￨e 3￨e ,￨e pc￨e )￨e ;￨e frame￨e .￨e numberOfStackItems￨e -=￨e dimensions￨e ;￨e classNameLength￨e =￨e className￨e .￨e length￨e ;￨e constantPoolName￨e =￨e new￨e char￨e [￨e classNameLength￨e +￨e dimensions￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c dimensions￨c ;￨c i￨c ++￨c )￨l {￨l constantPoolName￨e [￨e i￨e ]￨e =￨e '['￨e ;￨e }￨l System￨e .￨e arraycopy￨e (￨e className￨e ,￨e 0￨e ,￨e constantPoolName￨e ,￨e dimensions￨e ,￨e classNameLength￨e )￨e ;￨e frame￨e .￨e addStackItem￨e (￨e new￨e VerificationTypeInfo￨e (￨e 0￨e ,￨e constantPoolName￨e )￨e )￨e ;￨e pc￨e +=￨e 4￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_ifnull￨c :￨c case￨c Opcodes￨c .￨c OPC_ifnonnull￨c :￨c (￨e frame￨e .￨e numberOfStackItems￨e )￨e --￨e ;￨e pc￨e +=￨e 3￨e ;￨e break￨e ;￨e case￨c Opcodes￨c .￨c OPC_goto_w￨c :￨c pc￨e +=￨e 5￨e ;￨e break￨e ;￨e default￨c :￨c this￨f .￨f codeStream￨f .￨f methodDeclaration￨f .￨f scope￨f .￨f problemReporter￨f (￨f )￨f .￨f abortDueToInternalError￨f (￨f Messages￨f .￨f bind￨f (￨f Messages￨f .￨f abort_invalidOpcode￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ,￨e this￨e .￨e codeStream￨e .￨e methodDeclaration￨e )￨e ;￨e break￨e ;￨e }￨s if￨j (￨j pc￨c >=￨c (￨c codeLength￨c +￨c codeOffset￨c )￨c )￨j {￨j break￨e ;￨e }￨j }￨l }￨f private￨f final￨f int￨f u1At￨f (￨f byte￨p [￨p ]￨p reference￨p ,￨p int￨p relativeOffset￨p ,￨p int￨p structOffset￨p )￨f {￨f }￨f private￨f final￨f int￨f u2At￨f (￨f byte￨p [￨p ]￨p reference￨p ,￨p int￨p relativeOffset￨p ,￨p int￨p structOffset￨p )￨f {￨f }￨f private￨f final￨f long￨f u4At￨f (￨f byte￨p [￨p ]￨p reference￨p ,￨p int￨p relativeOffset￨p ,￨p int￨p structOffset￨p )￨f {￨f }￨f public￨f char￨f [￨f ]￨f utf8At￨f (￨f byte￨p [￨p ]￨p reference￨p ,￨p int￨p absoluteOffset￨p ,￨p int￨p bytesAvailable￨p )￨f {￨f }￨f }￨d
public￨d class￨d Validator￨d {￨d private￨e final￨e Stack￨e handlers￨e ;￨e private￨e final￨e ArrayList￨e tempFiles￨e ;￨e private￨e final￨e ArrayList￨e sandboxes￨e ;￨e boolean￨e abortOnFailure￨e ;￨e private￨e Object￨e locker￨e ;￨e public￨f Validator￨f (￨f IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f void￨f pushHandler￨f (￨f IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f void￨f popHandler￨f (￨f IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f boolean￨f lock￨f (￨f Object￨p requestor￨p )￨f {￨f }￨f public￨f boolean￨f unlock￨f (￨f Object￨p requestor￨p )￨f {￨f }￨f public￨f void￨f setAbortOnFailure￨f (￨f boolean￨p abortOnFailure￨p )￨f {￨f }￨f public￨f boolean￨f nullcheck￨f (￨f Object￨p [￨p ]￨p ra￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f nullcheck￨f (￨f Collection￨p list￨p ,￨p int￨p atLeast￨p ,￨p int￨p atMost￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f nullcheck￨f (￨f Collection￨p list￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f Object￨f nulldefault￨f (￨f Object￨p o￨p ,￨p String￨p message￨p ,￨p Object￨p def￨p )￨f {￨f }￨f public￨f boolean￨f nullcheck￨f (￨f Object￨p o￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canRead￨f (￨f File￨p baseDir￨p ,￨p String￨p [￨p ]￨p paths￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canRead￨f (￨f File￨p [￨p ]￨p files￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canRead￨f (￨f File￨p file￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWrite￨f (￨f File￨p file￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canReadDir￨f (￨f File￨p file￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWriteDir￨f (￨f File￨p file￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canReadFiles￨f (￨f Object￨p [￨p ]￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canReadFiles￨f (￨f Collection￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canReadDirs￨f (￨f Object￨p [￨p ]￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canReadDirs￨f (￨f Collection￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWriteFiles￨f (￨f Object￨p [￨p ]￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWriteFiles￨f (￨f Collection￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWriteDirs￨f (￨f Object￨p [￨p ]￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f boolean￨f canWriteDirs￨f (￨f Collection￨p dirs￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f void￨f info￨f (￨f String￨p message￨p )￨f {￨f }￨f public￨f void￨f fail￨f (￨f String￨p message￨p )￨f {￨f }￨f public￨f void￨f fail￨f (￨f String￨p message￨p ,￨p Throwable￨p thrown￨p )￨f {￨f }￨f public￨f void￨f registerTempFile￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f File￨f getWritableDir￨f (￨f File￨p dir￨p ,￨p String￨p name￨p ,￨p boolean￨p deleteContents￨p ,￨p boolean￨p register￨p ,￨p String￨p failMessage￨p )￨f {￨f if￨j (￨j null￨c ==￨c dir￨c )￨j {￨j if￨j (￨j null￨c ==￨c name￨c )￨j {￨j name￨e =￨e "Validator"￨e ;￨e }￨j dir￨e =￨e FileUtil￨e .￨e getTempDir￨e (￨e name￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j !￨c (￨c dir￨c .￨c exists￨c (￨c )￨c )￨c )￨j {￨j dir￨e .￨e mkdirs￨e (￨e )￨e ;￨e }￨j }￨j if￨j (￨j (￨c null￨c ==￨c dir￨c )￨c ||￨c (￨c !￨c (￨c dir￨c .￨c exists￨c (￨c )￨c )￨c )￨c )￨j {￨j if￨j (￨j null￨c !=￨c failMessage￨c )￨j {￨j fail￨e (￨e (￨e (￨e failMessage￨e +￨e ":<seq2seq4repair_space>unable<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>parent<seq2seq4repair_space>"￨e )￨e +￨e dir￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j <START_BUG>￨b File￨b result￨b =￨b FileUtil￨b .￨b makeNewChildDir￨b (￨b dir￨b ,￨b name￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j deleteContents￨c )￨j {￨j FileUtil￨e .￨e deleteContents￨e (￨e dir￨e )￨e ;￨e }￨j if￨j (￨j register￨c )￨j {￨j tempFiles￨e .￨e add￨e (￨e dir￨e )￨e ;￨e }￨j }￨j return￨e dir￨e ;￨e }￨f public￨f void￨f deleteTempFiles￨f (￨f boolean￨p reportFailures￨p )￨f {￨f }￨f public￨f void￨f registerSandbox￨f (￨f Sandbox￨p sandbox￨p )￨f {￨f }￨f private￨f boolean￨f deleteFile￨f (￨f File￨p file￨p ,￨p boolean￨p reportFailures￨p )￨f {￨f }￨f private￨f IMessageHandler￨f getHandler￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d MSVSS￨d extends￨d Task￨d {￨d private￨e static￨e final￨e String￨e SS_EXE￨e =￨e "ss"￨e ;￨e public￨e static￨e final￨e String￨e PROJECT_PREFIX￨e =￨e "$"￨e ;￨e public￨e static￨e final￨e String￨e COMMAND_GET￨e =￨e "Get"￨e ;￨e public￨e static￨e final￨e String￨e COMMAND_CHECKOUT￨e =￨e "Checkout"￨e ;￨e public￨e static￨e final￨e String￨e COMMAND_CHECKIN￨e =￨e "Checkin"￨e ;￨e public￨e static￨e final￨e String￨e COMMAND_LABEL￨e =￨e "Label"￨e ;￨e public￨e static￨e final￨e String￨e COMMAND_HISTORY￨e =￨e "History"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_LOGIN￨e =￨e "-Y"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_OVERRIDE_WORKING_DIR￨e =￨e "-GL"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_AUTORESPONSE_DEF￨e =￨e "-I-"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_AUTORESPONSE_YES￨e =￨e "-I-Y"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_AUTORESPONSE_NO￨e =￨e "-I-N"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_RECURSION￨e =￨e "-R"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_VERSION￨e =￨e "-V"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_VERSION_DATE￨e =￨e "-Vd"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_VERSION_LABEL￨e =￨e "-VL"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_WRITABLE￨e =￨e "-W"￨e ;￨e public￨e static￨e final￨e String￨e VALUE_NO￨e =￨e "-N"￨e ;￨e public￨e static￨e final￨e String￨e VALUE_YES￨e =￨e "-Y"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_QUIET￨e =￨e "-O-"￨e ;￨e private￨e String￨e m_SSDir￨e =￨e ""￨e ;￨e private￨e String￨e m_vssLogin￨e =￨e null￨e ;￨e private￨e String￨e m_vssPath￨e =￨e null￨e ;￨e private￨e String￨e m_serverPath￨e =￨e null￨e ;￨e public￨f final￨f void￨f setLogin￨f (￨f String￨p login￨p )￨f {￨f }￨f public￨f final￨f void￨f setServerpath￨f (￨f String￨p serverPath￨p )￨f {￨f }￨f public￨f final￨f void￨f setSsdir￨f (￨f final￨p File￨p dir￨p )￨f {￨f }￨f public￨f final￨f void￨f setVsspath￨f (￨f String￨p vssPath￨p )￨f {￨f }￨f public￨f final￨f String￨f getSSCommand￨f (￨f )￨f {￨f }￨f public￨f void￨f getLoginCommand￨f (￨f Commandline￨p cmd￨p )￨f {￨f }￨f public￨f String￨f getVsspath￨f (￨f )￨f {￨f }￨f protected￨f int￨f run￨f (￨f Commandline￨f cmd￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f final￨e Execute2￨e exe￨e =￨e new￨e Execute2￨e (￨e )￨e ;￨e setupLogger￨e (￨e exe￨e )￨e ;￨e if￨j (￨j (￨c m_serverPath￨c )￨c !=￨c null￨c )￨j {￨j final￨e Properties￨e env￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e env￨e .￨e setProperty￨e (￨e "SSDIR"￨e ,￨e m_serverPath￨e )￨e ;￨e exe￨e .￨e setEnvironment￨e (￨e env￨e )￨e ;￨e }￨j exe￨e .￨e setWorkingDirectory￨e (￨e getBaseDirectory￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b exe￨b .￨b setCommandline￨b (￨b cmd￨b .￨b getCommandline￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e exe￨e .￨e execute￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e TaskException￨e (￨e "Error"￨e ,￨e e￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d LuceneSegmentInputFormatTest￨d extends￨d AbstractLuceneStorageTest￨d {￨d private￨e LuceneSegmentInputFormat￨e inputFormat￨e ;￨e private￨e JobContext￨e jobContext￨e ;￨e private￨e Configuration￨e conf￨e ;￨e @￨f Before￨f public￨f void￨f before￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f After￨f public￨f void￨f after￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testGetSplits￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f (￨f )￨f {￨f }￨f private￨f JobContext￨f getJobContext￨f (￨f Configuration￨f conf￨f ,￨f JobID￨f jobID￨f )￨f throws￨f ClassNotFoundException￨f ,￨f IllegalAccessException￨f ,￨f InstantiationException￨f ,￨f NoSuchMethodException￨f ,￨f InvocationTargetException￨f (￨f )￨f {￨f <START_BUG>￨b Class￨b <￨b ?￨b extends￨b JobContext￨b >￨b clazz￨b =￨b null￨b ;￨b <END_BUG>￨b if￨j (￨j !￨c (￨c JobContext￨c .￨c class￨c .￨c isInterface￨c (￨c )￨c )￨c )￨j {￨j clazz￨e =￨e JobContext￨e .￨e class￨e ;￨e }￨j else￨j {￨j clazz￨e =￨e (￨e (￨e Class￨e <￨e ?￨e extends￨e JobContext￨e >￨e )￨e (￨e Class￨e .￨e forName￨e (￨e "org.apache.hadoop.mapreduce.task.JobContextImpl"￨e )￨e )￨e )￨e ;￨e }￨j return￨e clazz￨e .￨e getConstructor￨e (￨e Configuration￨e .￨e class￨e ,￨e JobID￨e .￨e class￨e )￨e .￨e newInstance￨e (￨e conf￨e ,￨e jobID￨e )￨e ;￨e }￨f }￨d
public￨d class￨d RackAwareStrategy￨d extends￨d AbstractReplicationStrategy￨d {￨d public￨f RackAwareStrategy￨f (￨f TokenMetadata￨p tokenMetadata￨p ,￨p int￨p replicas￨p )￨f {￨f }￨f public￨f ArrayList￨f <￨f InetAddress￨f >￨f getNaturalEndpoints￨f (￨f Token￨p token￨p ,￨p TokenMetadata￨p metadata￨p )￨f {￨f int￨e startIndex￨e ;￨e ArrayList￨e <￨e InetAddress￨e >￨e endpoints￨e =￨e new￨e ArrayList￨e <￨e InetAddress￨e >￨e (￨e )￨e ;￨e boolean￨e bDataCenter￨e =￨e false￨e ;￨e boolean￨e bOtherRack￨e =￨e false￨e ;￨e int￨e foundCount￨e =￨e 0￨e ;￨e List￨e tokens￨e =￨e metadata￨e .￨e sortedTokens￨e (￨e )￨e ;￨e if￨j (￨j tokens￨c .￨c isEmpty￨c (￨c )￨c )￨j {￨j return￨e endpoints￨e ;￨e }￨j int￨e index￨e =￨e Collections￨e .￨e binarySearch￨e (￨e tokens￨e ,￨e token￨e )￨e ;￨e if￨j (￨j index￨c <￨c 0￨c )￨j {￨j index￨e =￨e (￨e index￨e +￨e 1￨e )￨e *￨e (￨e -￨e 1￨e )￨e ;￨e if￨j (￨j index￨c >=￨c (￨c tokens￨c .￨c size￨c (￨c )￨c )￨c )￨j {￨j index￨e =￨e 0￨e ;￨e }￨j }￨j int￨e totalNodes￨e =￨e tokens￨e .￨e size￨e (￨e )￨e ;￨e Token￨e primaryToken￨e =￨e (￨e (￨e Token￨e )￨e (￨e tokens￨e .￨e get￨e (￨e index￨e )￨e )￨e )￨e ;￨e endpoints￨e .￨e add￨e (￨e metadata￨e .￨e getEndPoint￨e (￨e primaryToken￨e )￨e )￨e ;￨e foundCount￨e ++￨e ;￨e if￨j (￨j (￨c replicas_￨c )￨c ==￨c 1￨c )￨j {￨j return￨e endpoints￨e ;￨e }￨j startIndex￨e =￨e (￨e index￨e +￨e 1￨e )￨e %￨e totalNodes￨e ;￨e <START_BUG>￨b EndPointSnitch￨b endPointSnitch￨b =￨b (￨b (￨b EndPointSnitch￨b )￨b (￨b StorageService￨b .￨b instance￨b (￨b )￨b .￨b getEndPointSnitch￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c startIndex￨c ,￨c count￨c =￨c 1￨c ;￨c (￨c count￨c <￨c totalNodes￨c )￨c &&￨c (￨c foundCount￨c <￨c (￨c replicas_￨c )￨c )￨c ;￨c ++￨c count￨c ,￨c i￨c =￨c (￨c i￨c +￨c 1￨c )￨c %￨c totalNodes￨c )￨l {￨l try￨f (￨f )￨f {￨f Token￨e t￨e =￨e (￨e (￨e Token￨e )￨e (￨e tokens￨e .￨e get￨e (￨e i￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c endPointSnitch￨c .￨c isInSameDataCenter￨c (￨c metadata￨c .￨c getEndPoint￨c (￨c primaryToken￨c )￨c ,￨c metadata￨c .￨c getEndPoint￨c (￨c t￨c )￨c )￨c )￨c )￨j {￨j if￨j (￨j !￨c bDataCenter￨c )￨j {￨j endpoints￨e .￨e add￨e (￨e metadata￨e .￨e getEndPoint￨e (￨e t￨e )￨e )￨e ;￨e bDataCenter￨e =￨e true￨e ;￨e foundCount￨e ++￨e ;￨e }￨j continue￨e ;￨e }￨j if￨j (￨j (￨c !￨c (￨c endPointSnitch￨c .￨c isOnSameRack￨c (￨c metadata￨c .￨c getEndPoint￨c (￨c primaryToken￨c )￨c ,￨c metadata￨c .￨c getEndPoint￨c (￨c t￨c )￨c )￨c )￨c )￨c &&￨c (￨c endPointSnitch￨c .￨c isInSameDataCenter￨c (￨c metadata￨c .￨c getEndPoint￨c (￨c primaryToken￨c )￨c ,￨c metadata￨c .￨c getEndPoint￨c (￨c t￨c )￨c )￨c )￨c )￨j {￨j if￨j (￨j !￨c bOtherRack￨c )￨j {￨j endpoints￨e .￨e add￨e (￨e metadata￨e .￨e getEndPoint￨e (￨e t￨e )￨e )￨e ;￨e bOtherRack￨e =￨e true￨e ;￨e foundCount￨e ++￨e ;￨e }￨j }￨j }￨f catch￨f (￨f UnknownHostException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨l for￨l (￨l int￨c i￨c =￨c startIndex￨c ,￨c count￨c =￨c 1￨c ;￨c (￨c count￨c <￨c totalNodes￨c )￨c &&￨c (￨c foundCount￨c <￨c (￨c replicas_￨c )￨c )￨c ;￨c ++￨c count￨c ,￨c i￨c =￨c (￨c i￨c +￨c 1￨c )￨c %￨c totalNodes￨c )￨l {￨l Token￨e t￨e =￨e (￨e (￨e Token￨e )￨e (￨e tokens￨e .￨e get￨e (￨e i￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c endpoints￨c .￨c contains￨c (￨c metadata￨c .￨c getEndPoint￨c (￨c t￨c )￨c )￨c )￨c )￨j {￨j endpoints￨e .￨e add￨e (￨e metadata￨e .￨e getEndPoint￨e (￨e t￨e )￨e )￨e ;￨e foundCount￨e ++￨e ;￨e }￨j }￨l return￨e endpoints￨e ;￨e }￨f }￨d
public￨d class￨d RecoveredStatement￨d extends￨d RecoveredElement￨d {￨d public￨e Statement￨e statement￨e ;￨e public￨f RecoveredStatement￨f (￨f Statement￨p statement￨p ,￨p RecoveredElement￨p parent￨p ,￨p int￨p bracketBalance￨p )￨f {￨f }￨f public￨f AstNode￨f parseTree￨f (￨f )￨f {￨f }￨f public￨f int￨f sourceEnd￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f <START_BUG>￨b return￨b (￨b (￨b tabString￨b (￨b tab￨b )￨b )￨b +￨b "Recovered<seq2seq4repair_space>statement:\n"￨b )￨b +￨b (￨b statement￨b .￨b toString￨b (￨b (￨b tab￨b +￨b 1￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Statement￨f updatedStatement￨f (￨f )￨f {￨f }￨f public￨f void￨f updateParseTree￨f (￨f )￨f {￨f }￨f public￨f void￨f updateSourceEndIfNecessary￨f (￨f int￨p sourceEnd￨p )￨f {￨f }￨f }￨d
public￨d class￨d MockWebRequest￨d extends￨d WebRequest￨d {￨d private￨e Url￨e url￨e ;￨e private￨e List￨e <￨e Cookie￨e >￨e cookies￨e =￨e new￨e ArrayList￨e <￨e Cookie￨e >￨e (￨e )￨e ;￨e private￨e Map￨e <￨e String￨e ,￨e List￨e <￨e Object￨e >￨e >￨e headers￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e List￨e <￨e Object￨e >￨e >￨e (￨e )￨e ;￨e private￨e MockRequestParameters￨e postRequestParameters￨e =￨e new￨e MockRequestParameters￨e (￨e )￨e ;￨e private￨e Locale￨e locale￨e =￨e Locale￨e .￨e getDefault￨e (￨e )￨e ;￨e public￨f MockWebRequest￨f (￨f Url￨p url￨p )￨f {￨f }￨f MockWebRequest￨f (￨f Url￨p url￨p ,￨p List￨p <￨p Cookie￨p >￨p cookies￨p ,￨p Map￨p <￨p String￨p ,￨p List￨p <￨p Object￨p >￨p >￨p headers￨p ,￨p MockRequestParameters￨p postRequestParameters￨p ,￨p Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f public￨f MockWebRequest￨f requestWithUrl￨f (￨f Url￨p url￨p )￨f {￨f }￨f public￨f void￨f setUrl￨f (￨f Url￨p url￨p )￨f {￨f }￨f @￨f Override￨f public￨f Url￨f getUrl￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f setCookies￨f (￨f List￨p <￨p Cookie￨p >￨p cookies￨p )￨f {￨f }￨f public￨f void￨f addCookie￨f (￨f Cookie￨p cookie￨p )￨f {￨f }￨f @￨f Override￨f public￨f List￨f <￨f Cookie￨f >￨f getCookies￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f long￨f getDateHeader￨f (￨f String￨p name￨p )￨f {￨f List￨e <￨e Object￨e >￨e dates￨e =￨e headers￨e .￨e get￨e (￨e name￨e )￨e ;￨e if￨j (￨j (￨c dates￨c ==￨c null￨c )￨c ||￨c (￨c dates￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b WicketRuntimeException￨b (￨b (￨b (￨b "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨b +￨b name￨b )￨b +￨b "'<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist."￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j Object￨e date￨e =￨e dates￨e .￨e get￨e (￨e 0￨e )￨e ;￨e if￨j (￨j (￨c date￨c instanceof￨c Long￨c )￨c ==￨c false￨c )￨j {￨j throw￨e new￨e WicketRuntimeException￨e (￨e (￨e (￨e "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨e +￨e name￨e )￨e +￨e "'<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>long."￨e )￨e )￨e ;￨e }￨j return￨e (￨e (￨e Long￨e )￨e (￨e date￨e )￨e )￨e ;￨e }￨f private￨f void￨f addHeaderObject￨f (￨f String￨p name￨p ,￨p Object￨p value￨p )￨f {￨f }￨f public￨f void￨f setDateHeader￨f (￨f String￨p name￨p ,￨p long￨p value￨p )￨f {￨f }￨f public￨f void￨f addDateHeader￨f (￨f String￨p name￨p ,￨p long￨p value￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getHeader￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setHeader￨f (￨f String￨p name￨p ,￨p String￨p value￨p )￨f {￨f }￨f public￨f void￨f addHeader￨f (￨f String￨p name￨p ,￨p String￨p value￨p )￨f {￨f }￨f public￨f void￨f setLocale￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f public￨f Locale￨f getLocale￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f List￨f <￨f String￨f >￨f getHeaders￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f removeHeader￨f (￨f String￨p header￨p )￨f {￨f }￨f @￨f Override￨f public￨f MockRequestParameters￨f getPostParameters￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CompoundPropertyModel￨d extends￨d AbstractPropertyModel￨d implements￨d ICompoundModel￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f CompoundPropertyModel￨f (￨f final￨p Object￨p model￨p )￨f {￨f }￨f protected￨f String￨f propertyExpression￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f protected￨f Class￨f propertyType￨f (￨f final￨p Component￨p component￨p )￨f {￨f if￨j (￨j component￨c instanceof￨c FormComponent￨c )￨j {￨j <START_BUG>￨b return￨b (￨b (￨b FormComponent￨b )￨b (￨b component￨b )￨b )￨b .￨b getValidationType￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j return￨e null￨e ;￨e }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d VelocityContributor￨d extends￨d AbstractBehavior￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e String￨e encoding￨e =￨e "ISO-8859-1"￨e ;￨e private￨e final￨e IModel￨e <￨e ?￨e extends￨e Map￨e <￨e ?￨e ,￨e ?￨e >￨e >￨e model￨e ;￨e private￨e final￨e String￨e templateName￨e ;￨e public￨f VelocityContributor￨f (￨f String￨p templateName￨p ,￨p final￨p IModel￨p <￨p ?￨p extends￨p Map￨p <￨p ?￨p ,￨p ?￨p >￨p >￨p model￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f detach￨f (￨f Component￨p c￨p )￨f {￨f if￨j (￨j (￨c model￨c )￨c instanceof￨c IDetachable￨c )￨j {￨j <START_BUG>￨b (￨b (￨b IDetachable￨b )￨b (￨b model￨b )￨b )￨b .￨b detach￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f public￨f String￨f getEncoding￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f renderHead￨f (￨f Component￨p component￨p ,￨p final￨p IHeaderResponse￨p response￨p )￨f {￨f }￨f public￨f void￨f setEncoding￨f (￨f String￨p encoding￨p )￨f {￨f }￨f protected￨f boolean￨f escapeHtml￨f (￨f )￨f {￨f }￨f protected￨f final￨f CharSequence￨f evaluate￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Assignment￨d extends￨d Expression￨d {￨d public￨e Reference￨e lhs￨e ;￨e public￨e Expression￨e expression￨e ;￨e public￨f Assignment￨f (￨f Expression￨p lhs￨p ,￨p Expression￨p expression￨p ,￨p int￨p sourceEnd￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f void￨f checkAssignmentEffect￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f Binding￨f getDirectBinding￨f (￨f Expression￨p someExpression￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f constant￨e =￨e NotAConstant￨e ;￨e this￨e .￨e resolvedType￨e =￨e lhs￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e TypeBinding￨e rhsType￨e =￨e expression￨e .￨e resolveType￨e (￨e scope￨e )￨e ;￨e if￨j (￨j (￨c (￨c this￨c .￨c resolvedType￨c )￨c ==￨c null￨c )￨c ||￨c (￨c rhsType￨c ==￨c null￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j checkAssignmentEffect￨e (￨e scope￨e )￨e ;￨e if￨j (￨j (￨c (￨c expression￨c .￨c isConstantValueOfTypeAssignableToType￨c (￨c rhsType￨c ,￨c this￨c .￨c resolvedType￨c )￨c )￨c ||￨c (￨c (￨c this￨c .￨c resolvedType￨c .￨c isBaseType￨c (￨c )￨c )￨c &&￨c (￨c BaseTypeBinding￨c .￨c isWidening￨c (￨c this￨c .￨c resolvedType￨c .￨c id￨c ,￨c rhsType￨c .￨c id￨c )￨c )￨c )￨c )￨c ||￨c (￨c rhsType￨c .￨c isCompatibleWith￨c (￨c this￨c .￨c resolvedType￨c )￨c )￨c )￨j {￨j expression￨e .￨e implicitWidening￨e (￨e this￨e .￨e resolvedType￨e ,￨e rhsType￨e )￨e ;￨e return￨e this￨e .￨e resolvedType￨e ;￨e }￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e typeMismatchErrorActualTypeExpectedType￨e (￨e expression￨e ,￨e rhsType￨e ,￨e this￨e .￨e resolvedType￨e )￨e ;￨e <START_BUG>￨b return￨b null￨b ;￨b <END_BUG>￨b }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f String￨f toStringExpression￨f (￨f )￨f {￨f }￨f public￨f String￨f toStringExpressionNoParenthesis￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestActionGui￨d extends￨d AbstractSamplerGui￨d {￨d private￨e JComboBox￨e targetBox￨e ;￨e private￨e JRadioButton￨e pauseButton￨e ;￨e private￨e JRadioButton￨e stopButton￨e ;￨e private￨e JTextField￨e durationField￨e ;￨e private￨e int￨e target￨e ;￨e private￨e int￨e action￨e ;￨e private￨e int￨e duration￨e ;￨e private￨e static￨e final￨e String￨e targetLabel￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_target"￨e )￨e ;￨e private￨e static￨e final￨e String￨e threadTarget￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_target_thread"￨e )￨e ;￨e private￨e static￨e final￨e String￨e testTarget￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_target_test"￨e )￨e ;￨e private￨e static￨e final￨e String￨e actionLabel￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_action"￨e )￨e ;￨e private￨e static￨e final￨e String￨e pauseAction￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_pause"￨e )￨e ;￨e private￨e static￨e final￨e String￨e stopAction￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_stop"￨e )￨e ;￨e private￨e static￨e final￨e String￨e durationLabel￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "test_action_duration"￨e )￨e ;￨e public￨f TestActionGui￨f (￨f )￨f {￨f }￨f public￨f String￨f getLabelResource￨f (￨f )￨f {￨f }￨f public￨f void￨f configure￨f (￨f TestElement￨p element￨p )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyTestElement￨f (￨f TestElement￨p element￨p )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f setLayout￨e (￨e new￨e VerticalLayout￨e (￨e 5￨e ,￨e VerticalLayout￨e .￨e LEFT￨e ,￨e VerticalLayout￨e .￨e TOP￨e )￨e )￨e ;￨e setBorder￨e (￨e makeBorder￨e (￨e )￨e )￨e ;￨e add￨e (￨e makeTitlePanel￨e (￨e )￨e )￨e ;￨e HorizontalPanel￨e targetPanel￨e =￨e new￨e HorizontalPanel￨e (￨e )￨e ;￨e targetPanel￨e .￨e add￨e (￨e new￨e JLabel￨e (￨e TestActionGui￨e .￨e targetLabel￨e )￨e )￨e ;￨e DefaultComboBoxModel￨e targetModel￨e =￨e new￨e DefaultComboBoxModel￨e (￨e )￨e ;￨e targetModel￨e .￨e addElement￨e (￨e TestActionGui￨e .￨e threadTarget￨e )￨e ;￨e targetModel￨e .￨e addElement￨e (￨e TestActionGui￨e .￨e testTarget￨e )￨e ;￨e targetBox￨e =￨e new￨e JComboBox￨e (￨e targetModel￨e )￨e ;￨e targetBox￨f .￨f addActionListener￨f (￨f new￨f ActionListener￨f (￨f )￨f {￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p e￨p )￨f {￨f if￨j (￨j (￨c (￨c String￨c )￨c (￨c targetBox￨c .￨c getSelectedItem￨c (￨c )￨c )￨c )￨c .￨c equals￨c (￨c TestActionGui￨c .￨c threadTarget￨c )￨c )￨j {￨j target￨e =￨e TestAction￨e .￨e THREAD￨e ;￨e }￨j else￨j {￨j target￨e =￨e TestAction￨e .￨e TEST￨e ;￨e }￨j }￨f }￨f )￨e ;￨e targetPanel￨e .￨e add￨e (￨e targetBox￨e )￨e ;￨e add￨e (￨e targetPanel￨e )￨e ;￨e HorizontalPanel￨e actionPanel￨e =￨e new￨e HorizontalPanel￨e (￨e )￨e ;￨e ButtonGroup￨e actionButtons￨e =￨e new￨e ButtonGroup￨e (￨e )￨e ;￨e pauseButton￨e =￨e new￨e JRadioButton￨e (￨e TestActionGui￨e .￨e pauseAction￨e ,￨e true￨e )￨e ;￨e pauseButton￨f .￨f addChangeListener￨f (￨f new￨f ChangeListener￨f (￨f )￨f {￨f public￨f void￨f stateChanged￨f (￨f ChangeEvent￨p e￨p )￨f {￨f if￨j (￨j pauseButton￨c .￨c isSelected￨c (￨c )￨c )￨j {￨j action￨e =￨e TestAction￨e .￨e PAUSE￨e ;￨e durationField￨e .￨e setEnabled￨e (￨e true￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e stopButton￨e =￨e new￨e JRadioButton￨e (￨e TestActionGui￨e .￨e stopAction￨e ,￨e false￨e )￨e ;￨e stopButton￨f .￨f addChangeListener￨f (￨f new￨f ChangeListener￨f (￨f )￨f {￨f public￨f void￨f stateChanged￨f (￨f ChangeEvent￨p e￨p )￨f {￨f if￨j (￨j stopButton￨c .￨c isSelected￨c (￨c )￨c )￨j {￨j action￨e =￨e TestAction￨e .￨e STOP￨e ;￨e durationField￨e .￨e setEnabled￨e (￨e false￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e actionButtons￨e .￨e add￨e (￨e pauseButton￨e )￨e ;￨e actionButtons￨e .￨e add￨e (￨e stopButton￨e )￨e ;￨e actionPanel￨e .￨e add￨e (￨e new￨e JLabel￨e (￨e TestActionGui￨e .￨e actionLabel￨e )￨e )￨e ;￨e actionPanel￨e .￨e add￨e (￨e pauseButton￨e )￨e ;￨e actionPanel￨e .￨e add￨e (￨e stopButton￨e )￨e ;￨e add￨e (￨e actionPanel￨e )￨e ;￨e HorizontalPanel￨e durationPanel￨e =￨e new￨e HorizontalPanel￨e (￨e )￨e ;￨e durationField￨e =￨e new￨e JTextField￨e (￨e 5￨e )￨e ;￨e durationField￨e .￨e setText￨e (￨e Integer￨e .￨e toString￨e (￨e duration￨e )￨e )￨e ;￨e durationField￨f .￨f addFocusListener￨f (￨f new￨f FocusListener￨f (￨f )￨f {￨f public￨f void￨f focusLost￨f (￨f FocusEvent￨p e￨p )￨f {￨f try￨f (￨f )￨f {￨f duration￨e =￨e Integer￨e .￨e parseInt￨e (￨e durationField￨e .￨e getText￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f NumberFormatException￨p nfe￨p )￨f {￨f duration￨e =￨e 0￨e ;￨e }￨f }￨f public￨f void￨f focusGained￨f (￨f FocusEvent￨p e￨p )￨f {￨f }￨f }￨f )￨e ;￨e <START_BUG>￨b durationPanel￨b .￨b add￨b (￨b new￨b JLabel￨b (￨b "Duration"￨b )￨b )￨b ;￨b <END_BUG>￨b durationPanel￨e .￨e add￨e (￨e durationField￨e )￨e ;￨e add￨e (￨e durationPanel￨e )￨e ;￨e }￨f }￨d
public￨d abstract￨d class￨d Border￨d extends￨d WebMarkupContainerWithAssociatedMarkup￨d implements￨d IComponentResolver￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e static￨e final￨e String￨e BODY￨e =￨e "body"￨e ;￨e static￨e final￨e String￨e BORDER￨e =￨e "border"￨e ;￨e static￨e final￨e String￨e BODY_ID￨e =￨e "_body"￨e ;￨e private￨e final￨e Border￨e .￨e BorderBodyContainer￨e body￨e ;￨e private￨e transient￨e MarkupStream￨e originalMarkupStream￨e ;￨e private￨e transient￨e ComponentTag￨e openTag￨e ;￨e private￨e int￨e beginOfBodyIndex￨e ;￨e private￨e transient￨e boolean￨e rendering￨e ;￨e public￨f Border￨f (￨f final￨p String￨p id￨p )￨f {￨f }￨f public￨f Border￨f (￨f final￨p String￨p id￨p ,￨p final￨p IModel￨p <￨p ?￨p >￨p model￨p )￨f {￨f }￨f public￨f final￨f Border￨f .￨f BorderBodyContainer￨f getBodyContainer￨f (￨f )￨f {￨f }￨f Border￨f .￨f BorderBodyContainer￨f newBorderBodyContainer￨f (￨f final￨p String￨p id￨p )￨f {￨f }￨f @￨f Override￨f public￨f MarkupContainer￨f add￨f (￨f final￨p Component￨p ...￨p children￨p )￨f {￨f }￨f @￨f Override￨f public￨f Component￨f add￨f (￨f final￨p IBehavior￨p ...￨p behaviors￨p )￨f {￨f }￨f public￨f MarkupContainer￨f addToBorder￨f (￨f final￨p Component￨p ...￨p children￨p )￨f {￨f }￨f public￨f Component￨f addToBorder￨f (￨f final￨p IBehavior￨p ...￨p behaviors￨p )￨f {￨f }￨f public￨f Border￨f addToBorderBody￨f (￨f final￨p Component￨p ...￨p child￨p )￨f {￨f }￨f public￨f Component￨f addToBorderBody￨f (￨f final￨p IBehavior￨p ...￨p behaviors￨p )￨f {￨f }￨f public￨f final￨f Component￨f getFromBorderBody￨f (￨f final￨p String￨p path￨p )￨f {￨f }￨f public￨f boolean￨f resolve￨f (￨f final￨p MarkupContainer￨p container￨p ,￨p final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p tag￨p )￨f {￨f if￨j (￨j (￨c rendering￨c )￨c ==￨c false￨c )￨j {￨j if￨j (￨j tag￨c instanceof￨c WicketTag￨c )￨j {￨j WicketTag￨e wtag￨e =￨e (￨e (￨e WicketTag￨e )￨e (￨e tag￨e )￨e )￨e ;￨e if￨j (￨j wtag￨c .￨c isBodyTag￨c (￨c )￨c )￨j {￨j rendering￨e =￨e true￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b body￨b .￨b render￨b (￨b markupStream￨b )￨b ;￨b <END_BUG>￨b }￨f finally￨f (￨f )￨f {￨f rendering￨e =￨e false￨e ;￨e }￨f return￨e true￨e ;￨e }￨j }￨j }￨j return￨e false￨e ;￨e }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f @￨f Override￨f protected￨f final￨f void￨f onComponentTagBody￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f renderHead￨f (￨f HtmlHeaderContainer￨p container￨p )￨f {￨f }￨f @￨f Override￨f public￨f IMarkupFragment￨f getMarkup￨f (￨f final￨p Component￨p child￨p )￨f {￨f }￨f public￨d class￨d BorderBodyContainer￨d extends￨d WebMarkupContainer￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e transient￨e boolean￨e wasOpenCloseTag￨e =￨e false￨e ;￨e private￨e boolean￨e transparentResolver￨e ;￨e public￨f BorderBodyContainer￨f (￨f final￨p String￨p id￨p )￨f {￨f }￨f @￨f Override￨f public￨f final￨f boolean￨f isTransparentResolver￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setTransparentResolver￨f (￨f final￨p boolean￨p value￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTagBody￨f (￨f final￨p MarkupStream￨p markupStream￨p ,￨p final￨p ComponentTag￨p openTag￨p )￨f {￨f }￨f @￨f Override￨f public￨f IMarkupFragment￨f getMarkup￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f IMarkupFragment￨f getMarkup￨f (￨f final￨p Component￨p child￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d BlogAuthorManagerImpl￨d implements￨d BlogAuthorManager￨d {￨d private￨e BlogPersistenceService￨e persistenceService￨e ;￨e public￨f void￨f setPersistenceService￨f (￨f BlogPersistenceService￨p persistenceService￨p )￨f {￨f }￨f public￨f void￨f createAuthor￨f (￨f String￨f email￨f ,￨f String￨f dob￨f ,￨f String￨f name￨f ,￨f String￨f displayName￨f ,￨f String￨f bio￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f if￨j (￨j email￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "Email<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e )￨e ;￨e }￨j Date￨e dateOfBirth￨e ;￨e <START_BUG>￨b dateOfBirth￨b =￨b (￨b (￨b dob￨b ==￨b null￨b )￨b ||￨b (￨b ""￨b .￨b equals￨b (￨b dob￨b )￨b )￨b )￨b ?￨b null￨b :￨b new￨b SimpleDateFormat￨b (￨b "dd-mm-yyyy"￨b )￨b .￨b parse￨b (￨b dob￨b )￨b ;￨b <END_BUG>￨b persistenceService￨e .￨e createAuthor￨e (￨e email￨e ,￨e dateOfBirth￨e ,￨e name￨e ,￨e displayName￨e ,￨e bio￨e )￨e ;￨e }￨f public￨f List￨f <￨f ?￨f extends￨f BlogAuthor￨f >￨f getAllAuthors￨f (￨f )￨f {￨f }￨f public￨f BlogAuthor￨f getAuthor￨f (￨f String￨p emailAddress￨p )￨f {￨f }￨f public￨f void￨f removeAuthor￨f (￨f String￨p emailAddress￨p )￨f {￨f }￨f public￨f void￨f updateAuthor￨f (￨f String￨f email￨f ,￨f String￨f dob￨f ,￨f String￨f name￨f ,￨f String￨f displayName￨f ,￨f String￨f bio￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f private￨f List￨f <￨f ?￨f extends￨f BlogAuthor￨f >￨f adaptAuthor￨f (￨f List￨p <￨p ?￨p extends￨p Author￨p >￨p authors￨p )￨f {￨f }￨f }￨d
public￨d class￨d PresentSelectorTest￨d extends￨d BaseSelectorTest￨d {￨d private￨e Project￨e project￨e ;￨e public￨f PresentSelectorTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f BaseSelector￨f getInstance￨f (￨f )￨f {￨f }￨f public￨f void￨f testValidate￨f (￨f )￨f {￨f }￨f public￨f void￨f testSelectionBehaviour￨f (￨f )￨f {￨f PresentSelector￨e s￨e ;￨e String￨e results￨e ;￨e Mapper￨e m￨e ;￨e Mapper￨e .￨e MapperType￨e identity￨e =￨e new￨e Mapper￨e .￨e MapperType￨e (￨e )￨e ;￨e identity￨e .￨e setValue￨e (￨e "identity"￨e )￨e ;￨e Mapper￨e .￨e MapperType￨e glob￨e =￨e new￨e Mapper￨e .￨e MapperType￨e (￨e )￨e ;￨e glob￨e .￨e setValue￨e (￨e "glob"￨e )￨e ;￨e Mapper￨e .￨e MapperType￨e merge￨e =￨e new￨e Mapper￨e .￨e MapperType￨e (￨e )￨e ;￨e merge￨e .￨e setValue￨e (￨e "merge"￨e )￨e ;￨e Mapper￨e .￨e MapperType￨e flatten￨e =￨e new￨e Mapper￨e .￨e MapperType￨e (￨e )￨e ;￨e flatten￨e .￨e setValue￨e (￨e "flatten"￨e )￨e ;￨e try￨f (￨f )￨f {￨f makeBed￨e (￨e )￨e ;￨e s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setTargetdir￨e (￨e beddir￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTTTTTTTTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setTargetdir￨e (￨e beddir￨e )￨e ;￨e m￨e =￨e s￨e .￨e createMapper￨e (￨e )￨e ;￨e m￨e .￨e setType￨e (￨e identity￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTTTTTTTTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b File￨b subdir￨b =￨b new￨b File￨b (￨b "src/etc/testcases/taskdefs/expected"￨b )￨b ;￨b <END_BUG>￨b s￨e .￨e setTargetdir￨e (￨e subdir￨e )￨e ;￨e m￨e =￨e s￨e .￨e createMapper￨e (￨e )￨e ;￨e m￨e .￨e setType￨e (￨e flatten￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e if￨j (￨j JavaEnvUtils￨c .￨c isJavaVersion￨c (￨c JAVA_1_1￨c )￨c )￨j {￨j assertEquals￨e (￨e "TTTTTFFFFFFF"￨e ,￨e results￨e )￨e ;￨e }￨j else￨j {￨j assertEquals￨e (￨e "TTTTTTTTTTTF"￨e ,￨e results￨e )￨e ;￨e }￨j s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setTargetdir￨e (￨e beddir￨e )￨e ;￨e m￨e =￨e s￨e .￨e createMapper￨e (￨e )￨e ;￨e m￨e .￨e setType￨e (￨e merge￨e )￨e ;￨e m￨e .￨e setTo￨e (￨e "asf-logo.gif.gz"￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTTTTTTTTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e subdir￨e =￨e new￨e File￨e (￨e beddir￨e ,￨e "tar/bz2"￨e )￨e ;￨e s￨e .￨e setTargetdir￨e (￨e subdir￨e )￨e ;￨e m￨e =￨e s￨e .￨e createMapper￨e (￨e )￨e ;￨e m￨e .￨e setType￨e (￨e glob￨e )￨e ;￨e m￨e .￨e setFrom￨e (￨e "*.bz2"￨e )￨e ;￨e m￨e .￨e setTo￨e (￨e "*.tar.bz2"￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "FFTFFFFFFFFF"￨e ,￨e results￨e )￨e ;￨e try￨f (￨f )￨f {￨f makeMirror￨e (￨e )￨e ;￨e s￨e =￨e (￨e (￨e PresentSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e subdir￨e =￨e getProject￨e (￨e )￨e .￨e resolveFile￨e (￨e "selectortest2"￨e )￨e ;￨e s￨e .￨e setTargetdir￨e (￨e subdir￨e )￨e ;￨e results￨e =￨e mirrorSelectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTFFTTTTTTT"￨e ,￨e results￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTFFTTTTTTT"￨e ,￨e results￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f cleanupMirror￨e (￨e )￨e ;￨e }￨f }￨f finally￨f (￨f )￨f {￨f cleanupBed￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d Table￨d {￨d public￨e static￨e final￨e String￨e SYSTEM_TABLE￨e =￨e "system"￨e ;￨e private￨d static￨d final￨d Logger￨d logger￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d Table￨d .￨d class￨d )￨d ;￨d private￨d static￨d final￨d String￨d SNAPSHOT_SUBDIR_NAME￨d =￨d "snapshots"￨d ;￨d static￨d final￨d ReentrantReadWriteLock￨d flusherLock￨d =￨d new￨d ReentrantReadWriteLock￨d (￨d true￨d )￨d ;￨d private￨d static￨d Timer￨d flushTimer￨d =￨d new￨d Timer￨d (￨d "FLUSH-TIMER"￨d )￨d ;￨d private￨d final￨d boolean￨d waitForCommitLog￨d ;￨d private￨d static￨d final￨d Map￨d <￨d String￨d ,￨d Table￨d >￨d instances￨d =￨d new￨d org￨d .￨d cliffc￨d .￨d high_scale_lib￨d .￨d NonBlockingHashMap￨d <￨d String￨d ,￨d Table￨d >￨d (￨d )￨d ;￨d public￨d final￨d String￨d name￨d ;￨d private￨d final￨d Map￨d <￨d Integer￨d ,￨d ColumnFamilyStore￨d >￨d columnFamilyStores￨d =￨d new￨d HashMap￨d <￨d Integer￨d ,￨d ColumnFamilyStore￨d >￨d (￨d )￨d ;￨d private￨d SortedSet￨d <￨d String￨d >￨d applicationColumnFamilies￨d ;￨d private￨d final￨d TimerTask￨d flushTask￨d ;￨d public￨d static￨d Table￨d open￨d (￨d String￨d table￨d )￨d {￨d }￨d public￨f static￨f Table￨f clear￨f (￨f String￨f table￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f ColumnFamilyStore￨f >￨f getColumnFamilyStores￨f (￨f )￨f {￨f }￨f public￨f ColumnFamilyStore￨f getColumnFamilyStore￨f (￨f int￨p cfId￨p )￨f {￨f }￨f @￨f Deprecated￨f public￨f ColumnFamilyStore￨f getColumnFamilyStore￨f (￨f String￨p cfName￨p )￨f {￨f }￨f public￨f void￨f forceCleanup￨f (￨f )￨f {￨f }￨f public￨f void￨f snapshot￨f (￨f String￨p clientSuppliedName￨p )￨f {￨f }￨f public￨f static￨f String￨f getTimestampedSnapshotName￨f (￨f String￨p clientSuppliedName￨p )￨f {￨f }￨f public￨f void￨f clearSnapshot￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f SSTableReader￨f >￨f forceAntiCompaction￨f (￨f Collection￨p <￨p Range￨p >￨p ranges￨p ,￨p InetAddress￨p target￨p )￨f {￨f }￨f public￨f void￨f forceCompaction￨f (￨f )￨f {￨f }￨f List￨f <￨f SSTableReader￨f >￨f getAllSSTablesOnDisk￨f (￨f )￨f {￨f }￨f private￨f Table￨f (￨f String￨p table￨p )￨f {￨f }￨f public￨f void￨f dropCf￨f (￨f int￨f cfId￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f initCf￨f (￨f int￨p cfId￨p ,￨p String￨p cfName￨p )￨f {￨f }￨f public￨f void￨f renameCf￨f (￨f int￨f cfId￨f ,￨f String￨f newName￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Row￨f getRow￨f (￨f QueryFilter￨f filter￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f apply￨f (￨f RowMutation￨f mutation￨f ,￨f Object￨f serializedMutation￨f ,￨f boolean￨f writeCommitLog￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f HashMap￨e <￨e ColumnFamilyStore￨e ,￨e Memtable￨e >￨e memtablesToFlush￨e =￨e new￨e HashMap￨e <￨e ColumnFamilyStore￨e ,￨e Memtable￨e >￨e (￨e 2￨e )￨e ;￨e Table￨e .￨e flusherLock￨e .￨e readLock￨e (￨e )￨e .￨e lock￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j writeCommitLog￨c )￨j {￨j CommitLog￨e .￨e instance￨e (￨e )￨e .￨e add￨e (￨e mutation￨e ,￨e serializedMutation￨e )￨e ;￨e }￨j DecoratedKey￨e key￨e =￨e StorageService￨e .￨e getPartitioner￨e (￨e )￨e .￨e decorateKey￨e (￨e mutation￨e .￨e key￨e (￨e )￨e )￨e ;￨e for￨l (￨l ColumnFamily￨c columnFamily￨c :￨c mutation￨c .￨c getColumnFamilies￨c (￨c )￨c )￨l {￨l Memtable￨e memtableToFlush￨e ;￨e ColumnFamilyStore￨e cfs￨e =￨e columnFamilyStores￨e .￨e get￨e (￨e columnFamily￨e .￨e id￨e (￨e )￨e )￨e ;￨e if￨j (￨j cfs￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b Table￨b .￨b logger￨b .￨b error￨b (￨b (￨b "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>mutate<seq2seq4repair_space>non-existant<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>"￨b +￨b (￨b columnFamily￨b .￨b name￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j if￨j (￨j (￨c memtableToFlush￨c =￨c cfs￨c .￨c apply￨c (￨c key￨c ,￨c columnFamily￨c )￨c )￨c !=￨c null￨c )￨j {￨j memtablesToFlush￨e .￨e put￨e (￨e cfs￨e ,￨e memtableToFlush￨e )￨e ;￨e }￨j ColumnFamily￨e cachedRow￨e =￨e cfs￨e .￨e getRawCachedRow￨e (￨e key￨e )￨e ;￨e if￨j (￨j cachedRow￨c !=￨c null￨c )￨j {￨j cachedRow￨e .￨e addAll￨e (￨e columnFamily￨e )￨e ;￨e }￨j }￨j }￨l }￨f finally￨f (￨f )￨f {￨f Table￨e .￨e flusherLock￨e .￨e readLock￨e (￨e )￨e .￨e unlock￨e (￨e )￨e ;￨e }￨f for￨l (￨l Map￨c .￨c Entry￨c <￨c ColumnFamilyStore￨c ,￨c Memtable￨c >￨c entry￨c :￨c memtablesToFlush￨c .￨c entrySet￨c (￨c )￨c )￨l {￨l entry￨e .￨e getKey￨e (￨e )￨e .￨e maybeSwitchMemtable￨e (￨e entry￨e .￨e getValue￨e (￨e )￨e ,￨e writeCommitLog￨e )￨e ;￨e }￨l }￨f public￨f List￨f <￨f Future￨f <￨f ?￨f >￨f >￨f flush￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f load￨f (￨f RowMutation￨f rowMutation￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f String￨f getDataFileLocation￨f (￨f long￨p expectedCompactedFileSize￨p )￨f {￨f }￨f public￨f static￨f String￨f getSnapshotPath￨f (￨f String￨p dataDirPath￨p ,￨p String￨p tableName￨p ,￨p String￨p snapshotName￨p )￨f {￨f }￨f public￨f static￨f Iterable￨f <￨f Table￨f >￨f all￨f (￨f )￨f {￨f }￨f public￨f void￨f truncate￨f (￨f String￨f cfname￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SizeAssertion￨d extends￨d AbstractScopedAssertion￨d implements￨d Serializable￨d ,￨d Assertion￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 233L￨e ;￨e public￨e static￨e final￨e int￨e EQUAL￨e =￨e 1￨e ;￨e public￨e static￨e final￨e int￨e NOTEQUAL￨e =￨e 2￨e ;￨e public￨e static￨e final￨e int￨e GREATERTHAN￨e =￨e 3￨e ;￨e public￨e static￨e final￨e int￨e LESSTHAN￨e =￨e 4￨e ;￨e public￨e static￨e final￨e int￨e GREATERTHANEQUAL￨e =￨e 5￨e ;￨e public￨e static￨e final￨e int￨e LESSTHANEQUAL￨e =￨e 6￨e ;￨e private￨e static￨e final￨e String￨e SIZE_KEY￨e =￨e "SizeAssertion.size"￨e ;￨e private￨e static￨e final￨e String￨e OPERATOR_KEY￨e =￨e "SizeAssertion.operator"￨e ;￨e public￨f AssertionResult￨f getResult￨f (￨f SampleResult￨p response￨p )￨f {￨f AssertionResult￨e result￨e =￨e new￨e AssertionResult￨e (￨e getName￨e (￨e )￨e )￨e ;￨e result￨e .￨e setFailure￨e (￨e false￨e )￨e ;￨e long￨e resultSize￨e =￨e 0￨e ;￨e if￨j (￨j isScopeVariable￨c (￨c )￨c )￨j {￨j String￨e variableName￨e =￨e getVariableName￨e (￨e )￨e ;￨e String￨e value￨e =￨e getThreadContext￨e (￨e )￨e .￨e getVariables￨e (￨e )￨e .￨e get￨e (￨e variableName￨e )￨e ;￨e try￨f (￨f )￨f {￨f resultSize￨e =￨e Integer￨e .￨e parseInt￨e (￨e value￨e )￨e ;￨e }￨f catch￨f (￨f NumberFormatException￨p e￨p )￨f {￨f result￨e .￨e setFailure￨e (￨e true￨e )￨e ;￨e result￨e .￨e setFailureMessage￨e (￨e (￨e (￨e (￨e "Error<seq2seq4repair_space>parsing<seq2seq4repair_space>variable<seq2seq4repair_space>name:<seq2seq4repair_space>"￨e +￨e variableName￨e )￨e +￨e "<seq2seq4repair_space>value:<seq2seq4repair_space>"￨e )￨e +￨e value￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f }￨j else￨j {￨j resultSize￨e =￨e response￨e .￨e getBytes￨e (￨e )￨e ;￨e }￨j final￨e String￨e msg￨e =￨e compareSize￨e (￨e resultSize￨e )￨e ;￨e if￨j (￨j (￨c msg￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j result￨e .￨e setFailure￨e (￨e true￨e )￨e ;￨e <START_BUG>￨b Object￨b [￨b ]￨b arguments￨b =￨b new￨b Object￨b [￨b ]￨b {￨b new￨b Long￨b (￨b resultSize￨b )￨b ,￨b msg￨b ,￨b new￨b Long￨b (￨b getAllowedSize￨b (￨b )￨b )￨b }￨b ;￨b <END_BUG>￨b String￨e message￨e =￨e MessageFormat￨e .￨e format￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "size_assertion_failure"￨e )￨e ,￨e arguments￨e )￨e ;￨e result￨e .￨e setFailureMessage￨e (￨e message￨e )￨e ;￨e }￨j return￨e result￨e ;￨e }￨f public￨f long￨f getAllowedSize￨f (￨f )￨f {￨f }￨f public￨f void￨f setCompOper￨f (￨f int￨p operator￨p )￨f {￨f }￨f public￨f int￨f getCompOper￨f (￨f )￨f {￨f }￨f public￨f void￨f setAllowedSize￨f (￨f long￨f size￨f )￨f throws￨f IllegalArgumentException￨f (￨f )￨f {￨f }￨f private￨f String￨f compareSize￨f (￨f long￨p resultSize￨p )￨f {￨f }￨f }￨d
public￨d class￨d BecomeWorkingCopyOperation￨d extends￨d JavaModelOperation￨d {￨d IPath￨e path￨e ;￨e IProblemRequestor￨e problemRequestor￨e ;￨e public￨f BecomeWorkingCopyOperation￨f (￨f CompilationUnit￨p workingCopy￨p ,￨p IPath￨p path￨p ,￨p IProblemRequestor￨p problemRequestor￨p )￨f {￨f }￨f protected￨f void￨f executeOperation￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f CompilationUnit￨e workingCopy￨e =￨e getWorkingCopy￨e (￨e )￨e ;￨e JavaModelManager￨e .￨e getJavaModelManager￨e (￨e )￨e .￨e getPerWorkingCopyInfo￨e (￨e workingCopy￨e ,￨e this￨e .￨e path￨e ,￨e true￨e ,￨e true￨e ,￨e this￨e .￨e problemRequestor￨e )￨e ;￨e workingCopy￨e .￨e openWhenClosed￨e (￨e workingCopy￨e .￨e createElementInfo￨e (￨e )￨e ,￨e fMonitor￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b workingCopy￨b .￨b owner￨b )￨b !=￨b (￨b DefaultWorkingCopyOwner￨b .￨b PRIMARY￨b )￨b )￨b {￨b <END_BUG>￨b JavaElementDelta￨e delta￨e =￨e new￨e JavaElementDelta￨e (￨e this￨e .￨e getJavaModel￨e (￨e )￨e )￨e ;￨e delta￨e .￨e added￨e (￨e workingCopy￨e )￨e ;￨e addDelta￨e (￨e delta￨e )￨e ;￨e else￨j {￨j JavaElementDelta￨e delta￨e =￨e new￨e JavaElementDelta￨e (￨e this￨e .￨e getJavaModel￨e (￨e )￨e )￨e ;￨e delta￨e .￨e changed￨e (￨e workingCopy￨e ,￨e IJavaElementDelta￨e .￨e F_PRIMARY_WORKING_COPY￨e )￨e ;￨e addDelta￨e (￨e delta￨e )￨e ;￨e }￨j fResultElements￨f =￨f new￨f IJavaElement￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e }￨f protected￨f CompilationUnit￨f getWorkingCopy￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isReadOnly￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Receiver￨d implements￨d Runnable￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e volatile￨e boolean￨e active￨e ;￨e private￨e final￨e Session￨e session￨e ;￨e private￨e final￨e MessageConsumer￨e consumer￨e ;￨e private￨e final￨e Connection￨e conn￨e ;￨e private￨e final￨e boolean￨e useResMsgIdAsCorrelId￨e ;￨e private￨f Receiver￨f (￨f ConnectionFactory￨f factory￨f ,￨f Destination￨f receiveQueue￨f ,￨f String￨f principal￨f ,￨f String￨f credentials￨f ,￨f boolean￨f useResMsgIdAsCorrelId￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f public￨f static￨f Receiver￨f createReceiver￨f (￨f ConnectionFactory￨f factory￨f ,￨f Destination￨f receiveQueue￨f ,￨f String￨f principal￨f ,￨f String￨f credentials￨f ,￨f boolean￨f useResMsgIdAsCorrelId￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f Receiver￨e receiver￨e =￨e new￨e Receiver￨e (￨e factory￨e ,￨e receiveQueue￨e ,￨e principal￨e ,￨e credentials￨e ,￨e useResMsgIdAsCorrelId￨e )￨e ;￨e <START_BUG>￨b Thread￨b thread￨b =￨b new￨b Thread￨b (￨b receiver￨b ,￨b "JMS<seq2seq4repair_space>Receiever"￨b )￨b ;￨b <END_BUG>￨b thread￨e .￨e start￨e (￨e )￨e ;￨e return￨e receiver￨e ;￨e }￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f public￨f void￨f deactivate￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TypePatternList￨d extends￨d PatternNode￨d {￨d private￨e TypePattern￨e [￨e ]￨e typePatterns￨e ;￨e int￨e ellipsisCount￨e =￨e 0￨e ;￨e public￨f static￨f final￨f TypePatternList￨f EMPTY￨f =￨f new￨f TypePatternList￨f (￨f new￨f TypePattern￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e public￨f static￨f final￨f TypePatternList￨f ANY￨f =￨f new￨f TypePatternList￨f (￨f new￨f TypePattern￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e public￨f TypePatternList￨f (￨f )￨f {￨f }￨f public￨f TypePatternList￨f (￨f TypePattern￨p [￨p ]￨p arguments￨p )￨f {￨f }￨f public￨f TypePatternList￨f (￨f List￨p l￨p )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f TypePattern￨f get￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canMatchSignatureWithNParameters￨f (￨f int￨p numParams￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f matches￨f (￨f ResolvedType￨p [￨p ]￨p types￨p ,￨p TypePattern￨p .￨p MatchKind￨p kind￨p )￨f {￨f }￨f private￨f static￨f FuzzyBoolean￨f outOfStar￨f (￨f final￨p TypePattern￨p [￨p ]￨p pattern￨p ,￨p final￨p ResolvedType￨p [￨p ]￨p target￨p ,￨p int￨p pi￨p ,￨p int￨p ti￨p ,￨p int￨p pLeft￨p ,￨p int￨p tLeft￨p ,￨p final￨p int￨p starsLeft￨p ,￨p TypePattern￨p .￨p MatchKind￨p kind￨p )￨f {￨f }￨f private￨f static￨f FuzzyBoolean￨f inStar￨f (￨f final￨p TypePattern￨p [￨p ]￨p pattern￨p ,￨p final￨p ResolvedType￨p [￨p ]￨p target￨p ,￨p int￨p pi￨p ,￨p int￨p ti￨p ,￨p final￨p int￨p pLeft￨p ,￨p int￨p tLeft￨p ,￨p int￨p starsLeft￨p ,￨p TypePattern￨p .￨p MatchKind￨p kind￨p )￨f {￨f }￨f public￨f TypePatternList￨f parameterizeWith￨f (￨f Map￨p typeVariableMap￨p )￨f {￨f }￨f public￨f TypePatternList￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p ,￨p boolean￨p allowBinding￨p ,￨p boolean￨p requireExactType￨p )￨f {￨f }￨f public￨f TypePatternList￨f resolveReferences￨f (￨f IntMap￨p bindings￨p )￨f {￨f }￨f public￨f void￨f postRead￨f (￨f ResolvedType￨p enclosingType￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f static￨f TypePatternList￨f read￨f (￨f VersionedDataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f TypePattern￨f [￨f ]￨f getTypePatterns￨f (￨f )￨f {￨f }￨f public￨f Collection￨f getExactTypes￨f (￨f )￨f {￨f ArrayList￨e ret￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c typePatterns￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l UnresolvedType￨e t￨e =￨e typePatterns￨e [￨e i￨e ]￨e .￨e getExactType￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b t￨b !=￨b (￨b ResolvedType￨b .￨b MISSING￨b )￨b )￨b <END_BUG>￨b ret￨e .￨e add￨e (￨e t￨e )￨e ;￨e }￨l return￨e ret￨e ;￨e }￨f public￨f Object￨f accept￨f (￨f PatternNodeVisitor￨p visitor￨p ,￨p Object￨p data￨p )￨f {￨f }￨f public￨f Object￨f traverse￨f (￨f PatternNodeVisitor￨p visitor￨p ,￨p Object￨p data￨p )￨f {￨f }￨f public￨f boolean￨f areAllExactWithNoSubtypesAllowed￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f maybeGetCleanNames￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CacheFactoryAdd￨d extends￨d AbstractAddStepHandler￨d {￨d private￨e final￨e AttributeDefinition￨e [￨e ]￨e attributes￨e ;￨e CacheFactoryAdd￨f (￨f AttributeDefinition￨p ...￨p attributes￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f populateModel￨f (￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f ,￨f ServiceVerificationHandler￨f verificationHandler￨f ,￨f List￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f serviceControllers￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f Collection￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f installRuntimeServices￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f ,￨f ServiceVerificationHandler￨f verificationHandler￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e String￨e name￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e get￨e (￨e ADDRESS￨e )￨e )￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e ModelNode￨e passivationStoreModel￨e =￨e PASSIVATION_STORE￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e ;￨e String￨e passivationStore￨e =￨e (￨e passivationStoreModel￨e .￨e isDefined￨e (￨e )￨e )￨e ?￨e passivationStoreModel￨e .￨e asString￨e (￨e )￨e :￨e null￨e ;￨e final￨e Collection￨e <￨e String￨e >￨e unwrappedAliasValues￨e =￨e ALIASES￨e .￨e unwrap￨e (￨e context￨e ,￨e model￨e )￨e ;￨e <START_BUG>￨b final￨b Set￨b <￨b String￨b >￨b aliases￨b =￨b (￨b unwrappedAliasValues￨b !=￨b null￨b )￨b ?￨b new￨b HashSet￨b <￨b >￨b (￨b unwrappedAliasValues￨b )￨b :￨b Collections￨b .￨b <￨b String￨b >￨b emptySet￨b (￨b )￨b ;￨b <END_BUG>￨b ServiceTarget￨e target￨e =￨e context￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e ServiceBuilder￨e <￨e ?￨e >￨e builder￨e =￨e CacheFactoryAdd￨e .￨e buildCacheFactoryBuilder￨e (￨e target￨e ,￨e name￨e ,￨e passivationStore￨e )￨e ;￨e for￨l (￨l String￨c alias￨c :￨c aliases￨c )￨l {￨l builder￨e .￨e addAliases￨e (￨e CacheFactoryBuilderService￨e .￨e getServiceName￨e (￨e alias￨e )￨e )￨e ;￨e }￨l if￨j (￨j verificationHandler￨c !=￨c null￨c )￨j {￨j builder￨e .￨e addListener￨e (￨e verificationHandler￨e )￨e ;￨e }￨j return￨e Collections￨e .￨e <￨e ServiceController￨e <￨e ?￨e >￨e >￨e singleton￨e (￨e builder￨e .￨e install￨e (￨e )￨e )￨e ;￨e }￨f private￨f static￨f ServiceBuilder￨f <￨f ?￨f >￨f buildCacheFactoryBuilder￨f (￨f ServiceTarget￨p target￨p ,￨p String￨p name￨p ,￨p String￨p passivationStore￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d QueuelessThreadPoolAdd￨d extends￨d AbstractExecutorAdd￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 5597662601486525937L￨e ;￨e private￨e String￨e handoffExecutor￨e ;￨e private￨e boolean￨e blocking￨e ;￨e public￨f QueuelessThreadPoolAdd￨f (￨f final￨p String￨p name￨p ,￨p final￨p ScaledCount￨p maxThreads￨p )￨f {￨f }￨f protected￨f <￨f P￨f >￨f void￨f applyUpdate￨f (￨f final￨p UpdateContext￨p updateContext￨p ,￨p final￨p UpdateResultHandler￨p <￨p ?￨p super￨p Void￨p ,￨p P￨p >￨p handler￨p ,￨p final￨p P￨p param￨p )￨f {￨f <START_BUG>￨b final￨b BatchBuilder￨b builder￨b =￨b updateContext￨b .￨b getBatchBuilder￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e ScaledCount￨e maxThreadsCount￨e =￨e getMaxThreads￨e (￨e )￨e ;￨e final￨e int￨e maxThreads￨e =￨e maxThreadsCount￨e .￨e getScaledCount￨e (￨e )￨e ;￨e final￨e String￨e name￨e =￨e getName￨e (￨e )￨e ;￨e final￨e ServiceName￨e serviceName￨e =￨e ThreadsServices￨e .￨e executorName￨e (￨e name￨e )￨e ;￨e final￨e QueuelessThreadPoolService￨e service￨e =￨e new￨e QueuelessThreadPoolService￨e (￨e maxThreads￨e ,￨e blocking￨e ,￨e getKeepaliveTime￨e (￨e )￨e )￨e ;￨e final￨e ServiceBuilder￨e <￨e ExecutorService￨e >￨e serviceBuilder￨e =￨e builder￨e .￨e addService￨e (￨e serviceName￨e ,￨e service￨e )￨e ;￨e addThreadFactoryDependency￨e (￨e serviceName￨e ,￨e serviceBuilder￨e ,￨e service￨e .￨e getThreadFactoryInjector￨e (￨e )￨e ,￨e builder￨e )￨e ;￨e serviceBuilder￨e .￨e install￨e (￨e )￨e ;￨e }￨f protected￨f void￨f applyUpdate￨f (￨f final￨f ThreadsSubsystemElement￨f element￨f )￨f throws￨f UpdateFailedException￨f (￨f )￨f {￨f }￨f public￨f String￨f getHandoffExecutor￨f (￨f )￨f {￨f }￨f public￨f void￨f setHandoffExecutor￨f (￨f final￨p String￨p handoffExecutor￨p )￨f {￨f }￨f public￨f boolean￨f isBlocking￨f (￨f )￨f {￨f }￨f public￨f void￨f setBlocking￨f (￨f final￨p boolean￨p blocking￨p )￨f {￨f }￨f }￨d
public￨d class￨d Snippet77￨d {￨d public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f Display￨e display￨e =￨e new￨e Display￨e (￨e )￨e ;￨e Shell￨e shell￨e =￨e new￨e Shell￨e (￨e display￨e )￨e ;￨e shell￨e .￨e setLayout￨e (￨e new￨e FillLayout￨e (￨e )￨e )￨e ;￨e final￨e Composite￨e comp￨e =￨e new￨e Composite￨e (￨e shell￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e final￨e Table￨e table￨e =￨e new￨e Table￨e (￨e comp￨e ,￨e (￨e (￨e SWT￨e .￨e BORDER￨e )￨e |￨e (￨e SWT￨e .￨e V_SCROLL￨e )￨e )￨e )￨e ;￨e table￨e .￨e setHeaderVisible￨e (￨e true￨e )￨e ;￨e table￨e .￨e setLinesVisible￨e (￨e true￨e )￨e ;￨e final￨e TableColumn￨e column1￨e =￨e new￨e TableColumn￨e (￨e table￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e column1￨e .￨e setText￨e (￨e "Column<seq2seq4repair_space>1"￨e )￨e ;￨e final￨e TableColumn￨e column2￨e =￨e new￨e TableColumn￨e (￨e table￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e column2￨e .￨e setText￨e (￨e "Column<seq2seq4repair_space>2"￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 10￨c ;￨c i￨c ++￨c )￨l {￨l TableItem￨e item￨e =￨e new￨e TableItem￨e (￨e table￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e item￨f .￨f setText￨f (￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨l comp￨f .￨f addControlListener￨f (￨f new￨f ControlAdapter￨f (￨f )￨f {￨f public￨f void￨f controlResized￨f (￨f ControlEvent￨p e￨p )￨f {￨f Rectangle￨e area￨e =￨e comp￨e .￨e getClientArea￨e (￨e )￨e ;￨e Point￨e preferredSize￨e =￨e table￨e .￨e computeSize￨e (￨e DEFAULT￨e ,￨e DEFAULT￨e )￨e ;￨e int￨e width￨e =￨e (￨e area￨e .￨e width￨e )￨e -￨e (￨e 2￨e *￨e (￨e table￨e .￨e getBorderWidth￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b preferredSize￨b .￨b y￨b )￨b >￨b (￨b area￨b .￨b height￨b )￨b )￨b {￨b <END_BUG>￨b Point￨e vBarSize￨e =￨e table￨e .￨e getVerticalBar￨e (￨e )￨e .￨e getSize￨e (￨e )￨e ;￨e width￨e -=￨e vBarSize￨e .￨e x￨e ;￨e }￨e Point￨e oldSize￨e =￨e table￨e .￨e getSize￨e (￨e )￨e ;￨e if￨j (￨j (￨c oldSize￨c .￨c x￨c )￨c >￨c (￨c area￨c .￨c width￨c )￨c )￨j {￨j column1￨e .￨e setWidth￨e (￨e (￨e width￨e /￨e 3￨e )￨e )￨e ;￨e column2￨e .￨e setWidth￨e (￨e (￨e width￨e -￨e (￨e column1￨e .￨e getWidth￨e (￨e )￨e )￨e )￨e )￨e ;￨e table￨e .￨e setSize￨e (￨e area￨e .￨e width￨e ,￨e area￨e .￨e height￨e )￨e ;￨e }￨j else￨j {￨j table￨e .￨e setSize￨e (￨e area￨e .￨e width￨e ,￨e area￨e .￨e height￨e )￨e ;￨e column1￨e .￨e setWidth￨e (￨e (￨e width￨e /￨e 3￨e )￨e )￨e ;￨e column2￨e .￨e setWidth￨e (￨e (￨e width￨e -￨e (￨e column1￨e .￨e getWidth￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e shell￨e .￨e open￨e (￨e )￨e ;￨e while￨l (￨l !￨c (￨c shell￨c .￨c isDisposed￨c (￨c )￨c )￨c )￨l {￨l if￨j (￨j !￨c (￨c display￨c .￨c readAndDispatch￨c (￨c )￨c )￨c )￨j {￨j display￨e .￨e sleep￨e (￨e )￨e ;￨e }￨j }￨l display￨e .￨e dispose￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d TypeSystemImpl￨d extends￨d AbstractTypeSystemImpl￨d implements￨d TypeSystem￨d {￨d private￨e DeclarationsContributor￨e contr￨e =￨e null￨e ;￨e public￨f TypeSystemImpl￨f (￨f DeclarationsContributor￨p contributor￨p )￨f {￨f }￨f public￨f Type￨f typeForName￨f (￨f String￨p name￨p ,￨p AbstractTypeReference￨p ...￨p typeArguments￨p )￨f {￨f DeclaredType￨e dt￨e =￨e contr￨e .￨e typeForName￨e (￨e name￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b dt￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b Type￨e t￨e =￨e FACTORY￨e .￨e createType￨e (￨e )￨e ;￨e t￨e .￨e setDeclaredType￨e (￨e dt￨e )￨e ;￨e t￨e .￨e getActualTypeArguments￨e (￨e )￨e .￨e addAll￨e (￨e Arrays￨e .￨e asList￨e (￨e typeArguments￨e )￨e )￨e ;￨e return￨e t￨e ;￨e }￨e return￨e null￨e ;￨e }￨f public￨f FunctionType￨f functionForName￨f (￨f String￨p name￨p ,￨p List￨p <￨p AbstractTypeReference￨p >￨p parameterTypes￨p ,￨p AbstractTypeReference￨p ...￨p typeArguments￨p )￨f {￨f }￨f public￨f FunctionType￨f functionForNameAndParameterTypes￨f (￨f String￨p name￨p ,￨p AbstractTypeReference￨p ...￨p parameterTypes￨p )￨f {￨f }￨f }￨d
public￨f interface￨f Console￨f (￨f )￨f {￨f void￨f addCompleter￨f (￨f CommandLineCompleter￨p completer￨p )￨f {￨f }￨f boolean￨f isUseHistory￨f (￨f )￨f {￨f }￨f void￨f setUseHistory￨f (￨f boolean￨p useHistory￨p )￨f {￨f }￨f CommandHistory￨f getHistory￨f (￨f )￨f {￨f }￨f void￨f setHistoryFile￨f (￨f File￨p f￨p )￨f {￨f }￨f void￨f clearScreen￨f (￨f )￨f {￨f }￨f void￨f printColumns￨f (￨f Collection￨p <￨p String￨p >￨p list￨p )￨f {￨f }￨f void￨f print￨f (￨f String￨p line￨p )￨f {￨f }￨f void￨f printNewLine￨f (￨f )￨f {￨f }￨f String￨f readLine￨f (￨f String￨p prompt￨p )￨f {￨f }￨f String￨f readLine￨f (￨f String￨p prompt￨p ,￨p Character￨p mask￨p )￨f {￨f }￨f int￨f getTerminalWidth￨f (￨f )￨f {￨f }￨f int￨f getTerminalHeight￨f (￨f )￨f {￨f }￨f static￨d final￨d class￨d Factory￨d {￨d public￨f static￨f Console￨f getConsole￨f (￨f CommandContext￨f ctx￨f )￨f throws￨f CliInitializationException￨f (￨f )￨f {￨f }￨f public￨f static￨f Console￨f getConsole￨f (￨f final￨f CommandContext￨f ctx￨f ,￨f InputStream￨f is￨f ,￨f OutputStream￨f os￨f )￨f throws￨f CliInitializationException￨f (￨f )￨f {￨f org￨e .￨e jboss￨e .￨e aesh￨e .￨e console￨e .￨e Console￨e aeshConsole￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f aeshConsole￨e =￨e new￨e org￨e .￨e jboss￨e .￨e aesh￨e .￨e console￨e .￨e Console￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f <START_BUG>￨b e￨b .￨b printStackTrace￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f final￨e org￨e .￨e jboss￨e .￨e aesh￨e .￨e console￨e .￨e Console￨e finalAeshConsole￨e =￨e aeshConsole￨e ;￨e return￨f new￨f Console￨f (￨f )￨f {￨f private￨e CommandContext￨e cmdCtx￨e =￨e ctx￨e ;￨e private￨e org￨e .￨e jboss￨e .￨e aesh￨e .￨e console￨e .￨e Console￨e console￨e =￨e finalAeshConsole￨e ;￨e private￨e CommandHistory￨e history￨e =￨e new￨e HistoryImpl￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f addCompleter￨f (￨f final￨p CommandLineCompleter￨p completer￨p )￨f {￨f console￨f .￨f addCompletion￨f (￨f new￨f Completion￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f complete￨f (￨f CompleteOperation￨p co￨p )￨f {￨f int￨e offset￨e =￨e completer￨e .￨e complete￨e (￨e cmdCtx￨e ,￨e co￨e .￨e getBuffer￨e (￨e )￨e ,￨e co￨e .￨e getCursor￨e (￨e )￨e ,￨e co￨e .￨e getCompletionCandidates￨e (￨e )￨e )￨e ;￨e co￨e .￨e setOffset￨e (￨e offset￨e )￨e ;￨e if￨j (￨j (￨c (￨c co￨c .￨c getCompletionCandidates￨c (￨c )￨c .￨c size￨c (￨c )￨c )￨c ==￨c 1￨c )￨c &&￨c (￨c co￨c .￨c getCompletionCandidates￨c (￨c )￨c .￨c get￨c (￨c 0￨c )￨c .￨c startsWith￨c (￨c co￨c .￨c getBuffer￨c (￨c )￨c )￨c )￨c )￨j {￨j co￨e .￨e doAppendSeparator￨e (￨e true￨e )￨e ;￨e }￨j else￨j {￨j co￨e .￨e doAppendSeparator￨e (￨e false￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e }￨f @￨f Override￨f public￨f boolean￨f isUseHistory￨f (￨f )￨f {￨f return￨e !￨e (￨e Settings￨e .￨e getInstance￨e (￨e )￨e .￨e isHistoryDisabled￨e (￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setUseHistory￨f (￨f boolean￨p useHistory￨p )￨f {￨f Settings￨e .￨e getInstance￨e (￨e )￨e .￨e setHistoryDisabled￨e (￨e (￨e !￨e useHistory￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f CommandHistory￨f getHistory￨f (￨f )￨f {￨f return￨e history￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setHistoryFile￨f (￨f File￨p f￨p )￨f {￨f Settings￨e .￨e getInstance￨e (￨e )￨e .￨e setHistoryFile￨e (￨e f￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f clearScreen￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f console￨e .￨e clear￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f void￨f printColumns￨f (￨f Collection￨p <￨p String￨p >￨p list￨p )￨f {￨f String￨e [￨e ]￨e newList￨e =￨e new￨e String￨e [￨e list￨e .￨e size￨e (￨e )￨e ]￨e ;￨e list￨e .￨e toArray￨e (￨e newList￨e )￨e ;￨e try￨f (￨f )￨f {￨f console￨e .￨e pushToStdOut￨e (￨e Parser￨e .￨e formatDisplayList￨e (￨e newList￨e ,￨e console￨e .￨e getTerminalSize￨e (￨e )￨e .￨e getHeight￨e (￨e )￨e ,￨e console￨e .￨e getTerminalSize￨e (￨e )￨e .￨e getWidth￨e (￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f void￨f print￨f (￨f String￨p line￨p )￨f {￨f try￨f (￨f )￨f {￨f console￨e .￨e pushToStdOut￨e (￨e line￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f void￨f printNewLine￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f console￨e .￨e pushToStdOut￨e (￨e Config￨e .￨e getLineSeparator￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f String￨f readLine￨f (￨f String￨p prompt￨p )￨f {￨f try￨f (￨f )￨f {￨f ConsoleOutput￨e output￨e =￨e console￨e .￨e read￨e (￨e prompt￨e )￨e ;￨e return￨e output￨e !=￨e null￨e ?￨e output￨e .￨e getBuffer￨e (￨e )￨e :￨e null￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e return￨e null￨e ;￨e }￨f }￨f @￨f Override￨f public￨f String￨f readLine￨f (￨f String￨p prompt￨p ,￨p Character￨p mask￨p )￨f {￨f try￨f (￨f )￨f {￨f return￨e console￨e .￨e read￨e (￨e new￨e Prompt￨e (￨e prompt￨e )￨e ,￨e mask￨e )￨e .￨e getBuffer￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e return￨e null￨e ;￨e }￨f }￨f @￨f Override￨f public￨f int￨f getTerminalWidth￨f (￨f )￨f {￨f return￨e console￨e .￨e getTerminalSize￨e (￨e )￨e .￨e getWidth￨e (￨e )￨e ;￨e }￨f @￨f Override￨f public￨f int￨f getTerminalHeight￨f (￨f )￨f {￨f return￨e console￨e .￨e getTerminalSize￨e (￨e )￨e .￨e getHeight￨e (￨e )￨e ;￨e }￨f class￨d HistoryImpl￨d implements￨d CommandHistory￨d {￨d @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f @￨f Override￨f public￨f List￨f <￨f String￨f >￨f asList￨f (￨f )￨f {￨f return￨e console￨e .￨e getHistory￨e (￨e )￨e .￨e getAll￨e (￨e )￨e ;￨e }￨f @￨f Override￨f public￨f boolean￨f isUseHistory￨f (￨f )￨f {￨f return￨e !￨e (￨e Settings￨e .￨e getInstance￨e (￨e )￨e .￨e isHistoryDisabled￨e (￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setUseHistory￨f (￨f boolean￨p useHistory￨p )￨f {￨f Settings￨e .￨e getInstance￨e (￨e )￨e .￨e setHistoryDisabled￨e (￨e (￨e !￨e useHistory￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f clear￨f (￨f )￨f {￨f console￨e .￨e getHistory￨e (￨e )￨e .￨e clear￨e (￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setMaxSize￨f (￨f int￨p maxSize￨p )￨f {￨f Settings￨e .￨e getInstance￨e (￨e )￨e .￨e setHistorySize￨e (￨e maxSize￨e )￨e ;￨e }￨f @￨f Override￨f public￨f int￨f getMaxSize￨f (￨f )￨f {￨f return￨e Settings￨e .￨e getInstance￨e (￨e )￨e .￨e getHistorySize￨e (￨e )￨e ;￨e }￨f }￨d }￨f ;￨e }￨f }￨d }￨f
public￨d class￨d Translate￨d extends￨d MatchingTask￨d {￨d private￨e String￨e bundle￨e ;￨e private￨e String￨e bundleLanguage￨e ;￨e private￨e String￨e bundleCountry￨e ;￨e private￨e String￨e bundleVariant￨e ;￨e private￨e File￨e toDir￨e ;￨e private￨e String￨e srcEncoding￨e ;￨e private￨e String￨e destEncoding￨e ;￨e private￨e String￨e bundleEncoding￨e ;￨e private￨e String￨e startToken￨e ;￨e private￨e String￨e endToken￨e ;￨e private￨e boolean￨e forceOverwrite￨e ;￨e private￨e Vector￨e filesets￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e Hashtable￨e resourceMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e FileUtils￨e fileUtils￨e =￨e FileUtils￨e .￨e newFileUtils￨e (￨e )￨e ;￨e private￨e long￨e [￨e ]￨e bundleLastModified￨e =￨e new￨e long￨e [￨e 7￨e ]￨e ;￨e private￨e long￨e srcLastModified￨e ;￨e private￨e long￨e destLastModified￨e ;￨e private￨e boolean￨e loaded￨e =￨e false￨e ;￨e public￨f void￨f setBundle￨f (￨f String￨p bundle￨p )￨f {￨f }￨f public￨f void￨f setBundleLanguage￨f (￨f String￨p bundleLanguage￨p )￨f {￨f }￨f public￨f void￨f setBundleCountry￨f (￨f String￨p bundleCountry￨p )￨f {￨f }￨f public￨f void￨f setBundleVariant￨f (￨f String￨p bundleVariant￨p )￨f {￨f }￨f public￨f void￨f setToDir￨f (￨f File￨p toDir￨p )￨f {￨f }￨f public￨f void￨f setStartToken￨f (￨f String￨p startToken￨p )￨f {￨f }￨f public￨f void￨f setEndToken￨f (￨f String￨p endToken￨p )￨f {￨f }￨f public￨f void￨f setSrcEncoding￨f (￨f String￨p srcEncoding￨p )￨f {￨f }￨f public￨f void￨f setDestEncoding￨f (￨f String￨p destEncoding￨p )￨f {￨f }￨f public￨f void￨f setBundleEncoding￨f (￨f String￨p bundleEncoding￨p )￨f {￨f }￨f public￨f void￨f setForceOverwrite￨f (￨f boolean￨p forceOverwrite￨p )￨f {￨f }￨f public￨f void￨f addFileset￨f (￨f FileSet￨p set￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f loadResourceMaps￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f Locale￨e locale￨e =￨e new￨e Locale￨e (￨e bundleLanguage￨e ,￨e bundleCountry￨e ,￨e bundleVariant￨e )￨e ;￨e String￨e language￨e =￨e (￨e (￨e locale￨e .￨e getLanguage￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getLanguage￨e (￨e )￨e )￨e :￨e ""￨e ;￨e String￨e country￨e =￨e (￨e (￨e locale￨e .￨e getCountry￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getCountry￨e (￨e )￨e )￨e :￨e ""￨e ;￨e String￨e variant￨e =￨e (￨e (￨e locale￨e .￨e getVariant￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getVariant￨e (￨e )￨e )￨e :￨e ""￨e ;￨e String￨e bundleFile￨e =￨e (￨e (￨e (￨e bundle￨e )￨e +￨e language￨e )￨e +￨e country￨e )￨e +￨e variant￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 0￨e ,￨e false￨e )￨e ;￨e bundleFile￨e =￨e (￨e (￨e bundle￨e )￨e +￨e language￨e )￨e +￨e country￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 1￨e ,￨e false￨e )￨e ;￨e bundleFile￨e =￨e (￨e bundle￨e )￨e +￨e language￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 2￨e ,￨e false￨e )￨e ;￨e bundleFile￨e =￨e bundle￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 3￨e ,￨e false￨e )￨e ;￨e locale￨e =￨e Locale￨e .￨e getDefault￨e (￨e )￨e ;￨e language￨e =￨e (￨e (￨e locale￨e .￨e getLanguage￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getLanguage￨e (￨e )￨e )￨e :￨e ""￨e ;￨e country￨e =￨e (￨e (￨e locale￨e .￨e getCountry￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getCountry￨e (￨e )￨e )￨e :￨e ""￨e ;￨e variant￨e =￨e (￨e (￨e locale￨e .￨e getVariant￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e ?￨e "_"￨e +￨e (￨e locale￨e .￨e getVariant￨e (￨e )￨e )￨e :￨e ""￨e ;￨e bundleEncoding￨e =￨e System￨e .￨e getProperty￨e (￨e "file.encoding"￨e )￨e ;￨e bundleFile￨e =￨e (￨e (￨e (￨e bundle￨e )￨e +￨e language￨e )￨e +￨e country￨e )￨e +￨e variant￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 4￨e ,￨e false￨e )￨e ;￨e bundleFile￨e =￨e (￨e (￨e bundle￨e )￨e +￨e language￨e )￨e +￨e country￨e ;￨e processBundle￨e (￨e bundleFile￨e ,￨e 5￨e ,￨e false￨e )￨e ;￨e bundleFile￨e =￨e (￨e bundle￨e )￨e +￨e language￨e ;￨e <START_BUG>￨b processBundle￨b (￨b bundleFile￨b ,￨b 6￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f void￨f processBundle￨f (￨f final￨f String￨f bundleFile￨f ,￨f final￨f int￨f i￨f ,￨f final￨f boolean￨f checkLoaded￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f loadResourceMap￨f (￨f FileInputStream￨f ins￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f translate￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Rmic￨d extends￨d MatchingTask￨d {￨d private￨e static￨e final￨e String￨e FAIL_MSG￨e =￨e "Rmic<seq2seq4repair_space>failed,<seq2seq4repair_space>messages<seq2seq4repair_space>should<seq2seq4repair_space>have<seq2seq4repair_space>been<seq2seq4repair_space>provided."￨e ;￨e private￨e boolean￨e verify￨e =￨e false￨e ;￨e private￨e boolean￨e filtering￨e =￨e false￨e ;￨e private￨e boolean￨e iiop￨e =￨e false￨e ;￨e private￨e boolean￨e idl￨e =￨e false￨e ;￨e private￨e boolean￨e debug￨e =￨e false￨e ;￨e private￨e boolean￨e includeAntRuntime￨e =￨e true￨e ;￨e private￨e boolean￨e includeJavaRuntime￨e =￨e false￨e ;￨e private￨e Vector￨e compileList￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e ClassLoader￨e loader￨e =￨e null￨e ;￨e private￨e File￨e baseDir￨e ;￨e private￨e String￨e classname￨e ;￨e private￨e Path￨e compileClasspath￨e ;￨e private￨e Path￨e extdirs￨e ;￨e private￨e String￨e idlopts￨e ;￨e private￨e String￨e iiopopts￨e ;￨e private￨e File￨e sourceBase￨e ;￨e private￨e String￨e stubVersion￨e ;￨e public￨f void￨f setBase￨f (￨f File￨p base￨p )￨f {￨f }￨f public￨f void￨f setClassname￨f (￨f String￨p classname￨p )￨f {￨f }￨f public￨f void￨f setClasspath￨f (￨f Path￨f classpath￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f setClasspathRef￨f (￨f Reference￨f r￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f setDebug￨f (￨f boolean￨p debug￨p )￨f {￨f }￨f public￨f void￨f setExtdirs￨f (￨f Path￨f extdirs￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f setFiltering￨f (￨f boolean￨p filter￨p )￨f {￨f }￨f public￨f void￨f setIdl￨f (￨f boolean￨p idl￨p )￨f {￨f }￨f public￨f void￨f setIdlopts￨f (￨f String￨p idlopts￨p )￨f {￨f }￨f public￨f void￨f setIiop￨f (￨f boolean￨p iiop￨p )￨f {￨f }￨f public￨f void￨f setIiopopts￨f (￨f String￨p iiopopts￨p )￨f {￨f }￨f public￨f void￨f setIncludeantruntime￨f (￨f boolean￨p include￨p )￨f {￨f }￨f public￨f void￨f setIncludejavaruntime￨f (￨f boolean￨p include￨p )￨f {￨f }￨f public￨f void￨f setSourceBase￨f (￨f File￨p sourceBase￨p )￨f {￨f }￨f public￨f void￨f setStubVersion￨f (￨f String￨p stubVersion￨p )￨f {￨f }￨f public￨f void￨f setVerify￨f (￨f boolean￨p verify￨p )￨f {￨f }￨f public￨f File￨f getBase￨f (￨f )￨f {￨f }￨f public￨f String￨f getClassname￨f (￨f )￨f {￨f }￨f public￨f Path￨f getClasspath￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getCompileList￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getDebug￨f (￨f )￨f {￨f }￨f public￨f Path￨f getExtdirs￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getFileList￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getFiltering￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getIdl￨f (￨f )￨f {￨f }￨f public￨f String￨f getIdlopts￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getIiop￨f (￨f )￨f {￨f }￨f public￨f String￨f getIiopopts￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getIncludeantruntime￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getIncludejavaruntime￨f (￨f )￨f {￨f }￨f public￨f ClassLoader￨f getLoader￨f (￨f )￨f {￨f }￨f public￨f Class￨f getRemoteInterface￨f (￨f Class￨p testClass￨p )￨f {￨f }￨f public￨f File￨f getSourceBase￨f (￨f )￨f {￨f }￨f public￨f String￨f getStubVersion￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getVerify￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isValidRmiRemote￨f (￨f String￨p classname￨p )￨f {￨f }￨f public￨f Path￨f createClasspath￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f Path￨f createExtdirs￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f void￨f scanDir￨f (￨f File￨f baseDir￨f ,￨f String￨f [￨f ]￨f files￨f ,￨f FileNameMapper￨f mapper￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f isValidRmiRemote￨f (￨f Class￨p testClass￨p )￨f {￨f }￨f private￨f void￨f moveGeneratedFile￨f (￨f File￨f baseDir￨f ,￨f File￨f sourceBaseFile￨f ,￨f String￨f classname￨f ,￨f RmicAdapter￨f adapter￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f String￨e classFileName￨e =￨e (￨e classname￨e .￨e replace￨e (￨e '.'￨e ,￨e File￨e .￨e separatorChar￨e )￨e )￨e +￨e ".class"￨e ;￨e String￨e [￨e ]￨e generatedFiles￨e =￨e adapter￨e .￨e getMapper￨e (￨e )￨e .￨e mapFileName￨e (￨e classFileName￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c generatedFiles￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e sourceFileName￨e =￨e (￨e classFileName￨e .￨e substring￨e (￨e 0￨e ,￨e (￨e (￨e classFileName￨e .￨e length￨e (￨e )￨e )￨e -￨e 6￨e )￨e )￨e )￨e +￨e ".java"￨e ;￨e File￨e oldFile￨e =￨e new￨e File￨e (￨e baseDir￨e ,￨e sourceFileName￨e )￨e ;￨e File￨e newFile￨e =￨e new￨e File￨e (￨e sourceBaseFile￨e ,￨e sourceFileName￨e )￨e ;￨e try￨f (￨f )￨f {￨f if￨j (￨j filtering￨c )￨j {￨j final￨e FilterSetCollection￨e filters￨e =￨e new￨e FilterSetCollection￨e (￨e project￨e .￨e getGlobalFilterSet￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b FileUtils￨b .￨b newFileUtils￨b (￨b )￨b .￨b copyFile￨b (￨b oldFile￨b ,￨b newFile￨b ,￨b filters￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j FileUtil￨e .￨e copyFile￨e (￨e oldFile￨e ,￨e newFile￨e )￨e ;￨e }￨j oldFile￨e .￨e delete￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f String￨e msg￨e =￨e (￨e (￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>copy<seq2seq4repair_space>"￨e +￨e oldFile￨e )￨e +￨e "<seq2seq4repair_space>to<seq2seq4repair_space>"￨e )￨e +￨e newFile￨e )￨e +￨e "<seq2seq4repair_space>due<seq2seq4repair_space>to<seq2seq4repair_space>"￨e )￨e +￨e (￨e ioe￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e throw￨e new￨e TaskException￨e (￨e msg￨e ,￨e ioe￨e )￨e ;￨e }￨f }￨l }￨f }￨d
public￨d (￨d CacheAdd￨d .￨d class￨d .￨d getPackage￨d (￨d )￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d String￨d DEFAULTS￨d =￨d "infinispan-defaults.xml"￨d ;￨d private￨d static￨d volatile￨d Map￨d <￨d CacheMode￨d ,￨d Configuration￨d >￨d defaults￨d =￨d null￨d ;￨d public￨d static￨d synchronized￨d Configuration￨d getDefaultConfiguration￨d (￨d CacheMode￨d cacheMode￨d )￨d {￨d }￨d private￨f static￨f ConfigurationBuilderHolder￨f load￨f (￨f String￨p resource￨p )￨f {￨f URL￨d url￨d =￨d CacheAdd￨d .￨d find￨d (￨d resource￨d ,￨d CacheAdd￨d .￨d class￨d .￨d getClassLoader￨d (￨d )￨d )￨d ;￨d CacheAdd￨d .￨d log￨d .￨d debugf￨d (￨d "Loading<seq2seq4repair_space>Infinispan<seq2seq4repair_space>defaults<seq2seq4repair_space>from<seq2seq4repair_space>%s"￨d ,￨d url￨d .￨d toString￨d (￨d )￨d )￨d ;￨d ParserRegistry￨d parser￨d =￨d new￨d ParserRegistry￨d (￨d ParserRegistry￨d .￨d class￨d .￨d getClassLoader￨d (￨d )￨d )￨d ;￨d try￨d (￨d InputStream￨d input￨d =￨d url￨d .￨d openStream￨d (￨d )￨d )￨d {￨d return￨e parser￨e .￨e parse￨e (￨e input￨e )￨e ;￨e }￨d catch￨f (￨f IOException￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b IllegalStateException￨b (￨b String￨b .￨b format￨b (￨b "Failed<seq2seq4repair_space>to<seq2seq4repair_space>parse<seq2seq4repair_space>%s"￨b ,￨b url￨b )￨b ,￨b e￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f private￨f static￨f URL￨f find￨f (￨f String￨p resource￨p ,￨p ClassLoader￨p ...￨p loaders￨p )￨f {￨f }￨f final￨e CacheMode￨e mode￨e ;￨e CacheAdd￨f (￨f CacheMode￨p mode￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f populateModel￨f (￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f ,￨f ServiceVerificationHandler￨f verificationHandler￨f ,￨f List￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f newControllers￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f Collection￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f installRuntimeServices￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f containerModel￨f ,￨f ModelNode￨f cacheModel￨f ,￨f ServiceVerificationHandler￨f verificationHandler￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f void￨f removeRuntimeServices￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f containerModel￨f ,￨f ModelNode￨f cacheModel￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨f PathAddress￨f getCacheAddressFromOperation￨f (￨f ModelNode￨p operation￨p )￨f {￨f }￨f protected￨f PathAddress￨f getCacheContainerAddressFromOperation￨f (￨f ModelNode￨p operation￨p )￨f {￨f }￨f ServiceController￨f <￨f ?￨f >￨f installCacheConfigurationService￨f (￨f ServiceTarget￨p target￨p ,￨p String￨p containerName￨p ,￨p String￨p cacheName￨p ,￨p boolean￨p defaultCache￨p ,￨p ModuleIdentifier￨p moduleId￨p ,￨p ConfigurationBuilder￨p builder￨p ,￨p Configuration￨p config￨p ,￨p List￨p <￨p CacheAdd￨p .￨p Dependency￨p <￨p ?￨p >￨p >￨p dependencies￨p ,￨p ServiceVerificationHandler￨p verificationHandler￨p )￨f {￨f }￨f ServiceController￨f <￨f ?￨f >￨f installCacheService￨f (￨f ServiceTarget￨p target￨p ,￨p String￨p containerName￨p ,￨p String￨p cacheName￨p ,￨p boolean￨p defaultCache￨p ,￨p ServiceController￨p .￨p Mode￨p initialMode￨p ,￨p Configuration￨p config￨p ,￨p ServiceVerificationHandler￨p verificationHandler￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "rawtypes"￨f )￨f ServiceController￨f <￨f ?￨f >￨f installJndiService￨f (￨f ServiceTarget￨p target￨p ,￨p String￨p containerName￨p ,￨p String￨p cacheName￨p ,￨p boolean￨p defaultCache￨p ,￨p String￨p jndiName￨p ,￨p ServiceVerificationHandler￨p verificationHandler￨p )￨f {￨f }￨f private￨f static￨f JndiName￨f createJndiName￨f (￨f String￨p container￨p ,￨p String￨p cache￨p )￨f {￨f }￨f private￨f static￨f BindInfo￨f createCacheBinding￨f (￨f JndiName￨p name￨p )￨f {￨f }￨f private￨f static￨f <￨f T￨f >￨f void￨f addDependency￨f (￨f ServiceBuilder￨p <￨p ?￨p >￨p builder￨p ,￨p CacheAdd￨p .￨p Dependency￨p <￨p T￨p >￨p dependency￨p )￨f {￨f }￨f void￨f populate￨f (￨f ModelNode￨f fromModel￨f ,￨f ModelNode￨f toModel￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f void￨f processModelNode￨f (￨f OperationContext￨f context￨f ,￨f String￨f containerName￨f ,￨f ModelNode￨f cache￨f ,￨f ConfigurationBuilder￨f builder￨f ,￨f List￨f <￨f CacheAdd￨f .￨f Dependency￨f <￨f ?￨f >￨f >￨f dependencies￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f findStoreKey￨f (￨f ModelNode￨p cache￨p )￨f {￨f }￨f private￨f static￨f ModelNode￨f getStoreModelNode￨f (￨f ModelNode￨p cache￨p )￨f {￨f }￨f private￨f StoreConfigurationBuilder￨f <￨f ?￨f ,￨f ?￨f >￨f buildCacheStore￨f (￨f OperationContext￨f context￨f ,￨f PersistenceConfigurationBuilder￨f persistenceBuilder￨f ,￨f String￨f containerName￨f ,￨f ModelNode￨f store￨f ,￨f String￨f storeKey￨f ,￨f List￨f <￨f CacheAdd￨f .￨f Dependency￨f <￨f ?￨f >￨f >￨f dependencies￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f AbstractJdbcStoreConfigurationBuilder￨f <￨f ?￨f ,￨f ?￨f >￨f buildJdbcStore￨f (￨f PersistenceConfigurationBuilder￨f persistenceBuilder￨f ,￨f OperationContext￨f context￨f ,￨f ModelNode￨f store￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f buildBinaryKeyedTable￨f (￨f TableManipulationConfigurationBuilder￨f <￨f ?￨f ,￨f ?￨f >￨f builder￨f ,￨f OperationContext￨f context￨f ,￨f ModelNode￨f table￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f buildStringKeyedTable￨f (￨f TableManipulationConfigurationBuilder￨f <￨f ?￨f ,￨f ?￨f >￨f builder￨f ,￨f OperationContext￨f context￨f ,￨f ModelNode￨f table￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f buildTable￨f (￨f TableManipulationConfigurationBuilder￨f <￨f ?￨f ,￨f ?￨f >￨f builder￨f ,￨f OperationContext￨f context￨f ,￨f ModelNode￨f table￨f ,￨f String￨f defaultTableNamePrefix￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f getColumnProperty￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f table￨f ,￨f String￨f columnKey￨f ,￨f AttributeDefinition￨f columnAttribute￨f ,￨f String￨f defaultValue￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨d class￨d Dependency￨d <￨d I￨d >￨d {￨d private￨e final￨e ServiceName￨e name￨e ;￨e private￨e final￨e Class￨e <￨e I￨e >￨e type￨e ;￨e private￨e final￨e Injector￨e <￨e I￨e >￨e target￨e ;￨e Dependency￨f (￨f ServiceName￨p name￨p )￨f {￨f }￨f Dependency￨f (￨f ServiceName￨p name￨p ,￨p Class￨p <￨p I￨p >￨p type￨p ,￨p Injector￨p <￨p I￨p >￨p target￨p )￨f {￨f }￨f ServiceName￨f getName￨f (￨f )￨f {￨f }￨f public￨f Class￨f <￨f I￨f >￨f getType￨f (￨f )￨f {￨f }￨f public￨f Injector￨f <￨f I￨f >￨f getInjector￨f (￨f )￨f {￨f }￨f }￨d private￨d abstract￨d class￨d SimpleInjector￨d <￨d I￨d >￨d implements￨d Injector￨d <￨d I￨d >￨d {￨d @￨f Override￨f public￨f void￨f uninject￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d CacheDependencies￨d implements￨d CacheService￨d .￨d Dependencies￨d {￨d private￨e final￨e Value￨e <￨e EmbeddedCacheManager￨e >￨e container￨e ;￨e private￨e final￨e InjectedValue￨e <￨e XAResourceRecoveryRegistry￨e >￨e recoveryRegistry￨e =￨e new￨e InjectedValue￨e <￨e XAResourceRecoveryRegistry￨e >￨e (￨e )￨e ;￨e CacheDependencies￨f (￨f Value￨p <￨p EmbeddedCacheManager￨p >￨p container￨p )￨f {￨f }￨f Injector￨f <￨f XAResourceRecoveryRegistry￨f >￨f getRecoveryRegistryInjector￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f EmbeddedCacheManager￨f getCacheContainer￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f XAResourceRecoveryRegistry￨f getRecoveryRegistry￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d CacheConfigurationDependencies￨d implements￨d CacheConfigurationService￨d .￨d Dependencies￨d {￨d private￨e final￨e Value￨e <￨e EmbeddedCacheManager￨e >￨e container￨e ;￨e private￨e final￨e InjectedValue￨e <￨e TransactionManager￨e >￨e tm￨e =￨e new￨e InjectedValue￨e <￨e TransactionManager￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e TransactionSynchronizationRegistry￨e >￨e tsr￨e =￨e new￨e InjectedValue￨e <￨e TransactionSynchronizationRegistry￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e ModuleLoader￨e >￨e moduleLoader￨e =￨e new￨e InjectedValue￨e <￨e ModuleLoader￨e >￨e (￨e )￨e ;￨e CacheConfigurationDependencies￨f (￨f Value￨p <￨p EmbeddedCacheManager￨p >￨p container￨p )￨f {￨f }￨f Injector￨f <￨f TransactionManager￨f >￨f getTransactionManagerInjector￨f (￨f )￨f {￨f }￨f Injector￨f <￨f TransactionSynchronizationRegistry￨f >￨f getTransactionSynchronizationRegistryInjector￨f (￨f )￨f {￨f }￨f Injector￨f <￨f ModuleLoader￨f >￨f getModuleLoaderInjector￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f EmbeddedCacheManager￨f getCacheContainer￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f TransactionManager￨f getTransactionManager￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f TransactionSynchronizationRegistry￨f getTransactionSynchronizationRegistry￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f ModuleLoader￨f getModuleLoader￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ReloadableResourceBundleMessageSource￨d extends￨d AbstractMessageSource￨d implements￨d ResourceLoaderAware￨d {￨d private￨e static￨e final￨e String￨e PROPERTIES_SUFFIX￨e =￨e ".properties"￨e ;￨e private￨e static￨e final￨e String￨e XML_SUFFIX￨e =￨e ".xml"￨e ;￨e private￨e String￨e [￨e ]￨e basenames￨e =￨e new￨e String￨e [￨e 0￨e ]￨e ;￨e private￨e String￨e defaultEncoding￨e ;￨e private￨e Properties￨e fileEncodings￨e ;￨e private￨e boolean￨e fallbackToSystemLocale￨e =￨e true￨e ;￨e private￨e long￨e cacheMillis￨e =￨e -￨e 1￨e ;￨e private￨e PropertiesPersister￨e propertiesPersister￨e =￨e new￨e DefaultPropertiesPersister￨e (￨e )￨e ;￨e private￨e ResourceLoader￨e resourceLoader￨e =￨e new￨e DefaultResourceLoader￨e (￨e )￨e ;￨e private￨e final￨e Map￨e cachedFilenames￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e final￨e Map￨e cachedProperties￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e final￨e Map￨e cachedMergedProperties￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e public￨f void￨f setBasename￨f (￨f String￨p basename￨p )￨f {￨f }￨f public￨f void￨f setBasenames￨f (￨f String￨p [￨p ]￨p basenames￨p )￨f {￨f }￨f public￨f void￨f setDefaultEncoding￨f (￨f String￨p defaultEncoding￨p )￨f {￨f }￨f public￨f void￨f setFileEncodings￨f (￨f Properties￨p fileEncodings￨p )￨f {￨f }￨f public￨f void￨f setFallbackToSystemLocale￨f (￨f boolean￨p fallbackToSystemLocale￨p )￨f {￨f }￨f public￨f void￨f setCacheSeconds￨f (￨f int￨p cacheSeconds￨p )￨f {￨f }￨f public￨f void￨f setPropertiesPersister￨f (￨f PropertiesPersister￨p propertiesPersister￨p )￨f {￨f }￨f public￨f void￨f setResourceLoader￨f (￨f ResourceLoader￨p resourceLoader￨p )￨f {￨f }￨f @￨f Override￨f protected￨f String￨f resolveCodeWithoutArguments￨f (￨f String￨p code￨p ,￨p Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f protected￨f MessageFormat￨f resolveCode￨f (￨f String￨p code￨p ,￨p Locale￨p locale￨p )￨f {￨f }￨f protected￨f ReloadableResourceBundleMessageSource￨f .￨f PropertiesHolder￨f getMergedProperties￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f protected￨f List￨f calculateAllFilenames￨f (￨f String￨p basename￨p ,￨p Locale￨p locale￨p )￨f {￨f }￨f protected￨f List￨f calculateFilenamesForLocale￨f (￨f String￨p basename￨p ,￨p Locale￨p locale￨p )￨f {￨f List￨e result￨e =￨e new￨e ArrayList￨e (￨e 3￨e )￨e ;￨e String￨e language￨e =￨e locale￨e .￨e getLanguage￨e (￨e )￨e ;￨e String￨e country￨e =￨e locale￨e .￨e getCountry￨e (￨e )￨e ;￨e String￨e variant￨e =￨e locale￨e .￨e getVariant￨e (￨e )￨e ;￨e <START_BUG>￨b StringBuffer￨b temp￨b =￨b new￨b StringBuffer￨b (￨b basename￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c language￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j temp￨e .￨e append￨e (￨e '_'￨e )￨e .￨e append￨e (￨e language￨e )￨e ;￨e result￨e .￨e add￨e (￨e 0￨e ,￨e temp￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c country￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j temp￨e .￨e append￨e (￨e '_'￨e )￨e .￨e append￨e (￨e country￨e )￨e ;￨e result￨e .￨e add￨e (￨e 0￨e ,￨e temp￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c variant￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j temp￨e .￨e append￨e (￨e '_'￨e )￨e .￨e append￨e (￨e variant￨e )￨e ;￨e result￨e .￨e add￨e (￨e 0￨e ,￨e temp￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j return￨e result￨e ;￨e }￨f protected￨f ReloadableResourceBundleMessageSource￨f .￨f PropertiesHolder￨f getProperties￨f (￨f String￨p filename￨p )￨f {￨f }￨f protected￨f ReloadableResourceBundleMessageSource￨f .￨f PropertiesHolder￨f refreshProperties￨f (￨f String￨p filename￨p ,￨p ReloadableResourceBundleMessageSource￨p .￨p PropertiesHolder￨p propHolder￨p )￨f {￨f }￨f protected￨f Properties￨f loadProperties￨f (￨f Resource￨f resource￨f ,￨f String￨f filename￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f clearCache￨f (￨f )￨f {￨f }￨f public￨f void￨f clearCacheIncludingAncestors￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f protected￨d class￨d PropertiesHolder￨d {￨d private￨e Properties￨e properties￨e ;￨e private￨e long￨e fileTimestamp￨e =￨e -￨e 1￨e ;￨e private￨e long￨e refreshTimestamp￨e =￨e -￨e 1￨e ;￨e private￨e final￨e Map￨e cachedMessageFormats￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e public￨f PropertiesHolder￨f (￨f Properties￨p properties￨p ,￨p long￨p fileTimestamp￨p )￨f {￨f }￨f public￨f PropertiesHolder￨f (￨f )￨f {￨f }￨f public￨f Properties￨f getProperties￨f (￨f )￨f {￨f }￨f public￨f long￨f getFileTimestamp￨f (￨f )￨f {￨f }￨f public￨f void￨f setRefreshTimestamp￨f (￨f long￨p refreshTimestamp￨p )￨f {￨f }￨f public￨f long￨f getRefreshTimestamp￨f (￨f )￨f {￨f }￨f public￨f String￨f getProperty￨f (￨f String￨p code￨p )￨f {￨f }￨f public￨f MessageFormat￨f getMessageFormat￨f (￨f String￨p code￨p ,￨p Locale￨p locale￨p )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d QueryMetricsHandler￨d extends￨d AbstractRuntimeOnlyHandler￨d {￨d private￨e final￨e PersistenceUnitServiceRegistry￨e persistenceUnitRegistry￨e ;￨e private￨f QueryMetricsHandler￨f (￨f PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f executeRuntimeStep￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f handleQueryStatistics￨e (￨e context￨e ,￨e operation￨e )￨e ;￨e <START_BUG>￨b context￨b .￨b completeStep￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f abstract￨f void￨f handle￨f (￨f QueryStatistics￨p statistics￨p ,￨p OperationContext￨p context￨p ,￨p String￨p attributeName￨p ,￨p String￨p originalQueryName￨p )￨f {￨f }￨f private￨f void￨f handleQueryStatistics￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getExecutionCount￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getCacheHitCount￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getCachePutCount￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getCacheMissCount￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getExecutionRowCount￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getExecutionAvgTime￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getExecutionMaxTime￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f static￨f final￨f QueryMetricsHandler￨f getExecutionMinTime￨f (￨f final￨p PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f public￨f static￨f OperationStepHandler￨f getOriginalName￨f (￨f PersistenceUnitServiceRegistry￨p persistenceUnitRegistry￨p )￨f {￨f }￨f }￨d
public￨d class￨d WeibullDistribution￨d extends￨d AbstractRealDistribution￨d {￨d public￨e static￨e final￨e double￨e DEFAULT_INVERSE_ABSOLUTE_ACCURACY￨e =￨e 1.0E-9￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 8589540077390120676L￨e ;￨e private￨e final￨e double￨e shape￨e ;￨e private￨e final￨e double￨e scale￨e ;￨e private￨e final￨e double￨e solverAbsoluteAccuracy￨e ;￨e private￨e double￨e numericalMean￨e =￨e Double￨e .￨e NaN￨e ;￨e private￨e boolean￨e numericalMeanIsCalculated￨e =￨e false￨e ;￨e private￨e double￨e numericalVariance￨e =￨e Double￨e .￨e NaN￨e ;￨e private￨e boolean￨e numericalVarianceIsCalculated￨e =￨e false￨e ;￨e public￨f WeibullDistribution￨f (￨f double￨f alpha￨f ,￨f double￨f beta￨f )￨f throws￨f NotStrictlyPositiveException￨f (￨f )￨f {￨f }￨f public￨f WeibullDistribution￨f (￨f double￨p alpha￨p ,￨p double￨p beta￨p ,￨p double￨p inverseCumAccuracy￨p )￨f {￨f }￨f public￨f WeibullDistribution￨f (￨f RandomGenerator￨f rng￨f ,￨f double￨f alpha￨f ,￨f double￨f beta￨f )￨f throws￨f NotStrictlyPositiveException￨f (￨f )￨f {￨f }￨f public￨f WeibullDistribution￨f (￨f RandomGenerator￨f rng￨f ,￨f double￨f alpha￨f ,￨f double￨f beta￨f ,￨f double￨f inverseCumAccuracy￨f )￨f throws￨f NotStrictlyPositiveException￨f (￨f )￨f {￨f }￨f public￨f double￨f getShape￨f (￨f )￨f {￨f }￨f public￨f double￨f getScale￨f (￨f )￨f {￨f }￨f public￨f double￨f density￨f (￨f double￨p x￨p )￨f {￨f }￨f @￨f Override￨f public￨f double￨f logDensity￨f (￨f double￨p x￨p )￨f {￨f }￨f public￨f double￨f cumulativeProbability￨f (￨f double￨p x￨p )￨f {￨f }￨f @￨f Override￨f public￨f double￨f inverseCumulativeProbability￨f (￨f double￨p p￨p )￨f {￨f double￨e ret￨e ;￨e if￨j (￨j (￨c p￨c <￨c 0.0￨c )￨c ||￨c (￨c p￨c >￨c 1.0￨c )￨c )￨j {￨j throw￨e new￨e OutOfRangeException￨e (￨e p￨e ,￨e 0.0￨e ,￨e 1.0￨e )￨e ;￨e }￨j else￨j if￨j (￨j p￨c ==￨c 0￨c )￨j {￨j ret￨e =￨e 0.0￨e ;￨e }￨j else￨j if￨j (￨j p￨c ==￨c 1￨c )￨j {￨j ret￨e =￨e Double￨e .￨e POSITIVE_INFINITY￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b ret￨b =￨b (￨b scale￨b )￨b *￨b (￨b FastMath￨b .￨b pow￨b (￨b (￨b -￨b (￨b FastMath￨b .￨b log￨b (￨b (￨b 1.0￨b -￨b p￨b )￨b )￨b )￨b )￨b ,￨b (￨b 1.0￨b /￨b (￨b shape￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j return￨e ret￨e ;￨e }￨f @￨f Override￨f protected￨f double￨f getSolverAbsoluteAccuracy￨f (￨f )￨f {￨f }￨f public￨f double￨f getNumericalMean￨f (￨f )￨f {￨f }￨f protected￨f double￨f calculateNumericalMean￨f (￨f )￨f {￨f }￨f public￨f double￨f getNumericalVariance￨f (￨f )￨f {￨f }￨f protected￨f double￨f calculateNumericalVariance￨f (￨f )￨f {￨f }￨f public￨f double￨f getSupportLowerBound￨f (￨f )￨f {￨f }￨f public￨f double￨f getSupportUpperBound￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSupportLowerBoundInclusive￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSupportUpperBoundInclusive￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSupportConnected￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TermsFilterTest￨d extends￨d LuceneTestCase￨d {￨d public￨f void￨f testCachability￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testMissingTerms￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testMissingField￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldNotPresent￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testSkipField￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandom￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f TermsFilter￨f termsFilter￨f (￨f boolean￨p singleField￨p ,￨p Term￨p ...￨p terms￨p )￨f {￨f }￨f private￨f TermsFilter￨f termsFilter￨f (￨f boolean￨p singleField￨p ,￨p Collection￨p <￨p Term￨p >￨p termList￨p )￨f {￨f }￨f public￨f void￨f testHashCodeAndEquals￨f (￨f )￨f {￨f int￨e num￨e =￨e atLeast￨e (￨e 100￨e )￨e ;￨e final￨e boolean￨e singleField￨e =￨e random￨e (￨e )￨e .￨e nextBoolean￨e (￨e )￨e ;￨e List￨e <￨e Term￨e >￨e terms￨e =￨e new￨e ArrayList￨e <￨e Term￨e >￨e (￨e )￨e ;￨e Set￨e <￨e Term￨e >￨e uniqueTerms￨e =￨e new￨e HashSet￨e <￨e Term￨e >￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c num￨c ;￨c i￨c ++￨c )￨l {￨l String￨e field￨e =￨e "field"￨e +￨e (￨e singleField￨e ?￨e "1"￨e :￨e random￨e (￨e )￨e .￨e nextInt￨e (￨e 100￨e )￨e )￨e ;￨e String￨e string￨e =￨e _TestUtil￨e .￨e randomRealisticUnicodeString￨e (￨e random￨e (￨e )￨e )￨e ;￨e terms￨e .￨e add￨e (￨e new￨e Term￨e (￨e field￨e ,￨e string￨e )￨e )￨e ;￨e uniqueTerms￨e .￨e add￨e (￨e new￨e Term￨e (￨e field￨e ,￨e string￨e )￨e )￨e ;￨e TermsFilter￨e left￨e =￨e termsFilter￨e (￨e (￨e singleField￨e ?￨e random￨e (￨e )￨e .￨e nextBoolean￨e (￨e )￨e :￨e false￨e )￨e ,￨e uniqueTerms￨e )￨e ;￨e Collections￨e .￨e shuffle￨e (￨e terms￨e ,￨e random￨e (￨e )￨e )￨e ;￨e TermsFilter￨e right￨e =￨e termsFilter￨e (￨e (￨e singleField￨e ?￨e random￨e (￨e )￨e .￨e nextBoolean￨e (￨e )￨e :￨e false￨e )￨e ,￨e terms￨e )￨e ;￨e assertEquals￨e (￨e right￨e ,￨e left￨e )￨e ;￨e assertEquals￨e (￨e right￨e .￨e hashCode￨e (￨e )￨e ,￨e left￨e .￨e hashCode￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b i￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b List￨e <￨e Term￨e >￨e asList￨e =￨e new￨e ArrayList￨e <￨e Term￨e >￨e (￨e uniqueTerms￨e )￨e ;￨e asList￨e .￨e remove￨e (￨e 0￨e )￨e ;￨e TermsFilter￨e notEqual￨e =￨e termsFilter￨e (￨e (￨e singleField￨e ?￨e random￨e (￨e )￨e .￨e nextBoolean￨e (￨e )￨e :￨e false￨e )￨e ,￨e asList￨e )￨e ;￨e assertFalse￨e (￨e left￨e .￨e equals￨e (￨e notEqual￨e )￨e )￨e ;￨e assertFalse￨e (￨e right￨e .￨e equals￨e (￨e notEqual￨e )￨e )￨e ;￨e }￨l }￨f public￨f void￨f testNoTerms￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestDeletionPolicy￨d extends￨d LuceneTestCase￨d {￨d private￨f void￨f verifyCommitOrder￨f (￨f List￨p commits￨p )￨f {￨f }￨f class￨d KeepAllDeletionPolicy￨d implements￨d IndexDeletionPolicy￨d {￨d int￨e numOnInit￨e ;￨e int￨e numOnCommit￨e ;￨e public￨f void￨f onInit￨f (￨f List￨p commits￨p )￨f {￨f }￨f public￨f void￨f onCommit￨f (￨f List￨p commits￨p )￨f {￨f }￨f }￨d class￨d KeepNoneOnInitDeletionPolicy￨d implements￨d IndexDeletionPolicy￨d {￨d int￨e numOnInit￨e ;￨e int￨e numOnCommit￨e ;￨e public￨f void￨f onInit￨f (￨f List￨p commits￨p )￨f {￨f }￨f public￨f void￨f onCommit￨f (￨f List￨p commits￨p )￨f {￨f }￨f }￨d class￨d KeepLastNDeletionPolicy￨d implements￨d IndexDeletionPolicy￨d {￨d int￨e numOnInit￨e ;￨e int￨e numOnCommit￨e ;￨e int￨e numToKeep￨e ;￨e int￨e numDelete￨e ;￨e Set￨e seen￨e =￨e new￨e HashSet￨e (￨e )￨e ;￨e public￨f KeepLastNDeletionPolicy￨f (￨f int￨p numToKeep￨p )￨f {￨f }￨f public￨f void￨f onInit￨f (￨f List￨p commits￨p )￨f {￨f }￨f public￨f void￨f onCommit￨f (￨f List￨p commits￨p )￨f {￨f }￨f private￨f void￨f doDeletes￨f (￨f List￨p commits￨p ,￨p boolean￨p isCommit￨p )￨f {￨f }￨f }￨d class￨d ExpirationTimeDeletionPolicy￨d implements￨d IndexDeletionPolicy￨d {￨d Directory￨e dir￨e ;￨e double￨e expirationTimeSeconds￨e ;￨e int￨e numDelete￨e ;￨e public￨f ExpirationTimeDeletionPolicy￨f (￨f Directory￨p dir￨p ,￨p double￨p seconds￨p )￨f {￨f }￨f public￨f void￨f onInit￨f (￨f List￨f commits￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f onCommit￨f (￨f List￨f commits￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨f void￨f testExpirationTimeDeletionPolicy￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f (￨f )￨f {￨f final￨e double￨e SECONDS￨e =￨e 2.0￨e ;￨e boolean￨e autoCommit￨e =￨e false￨e ;￨e boolean￨e useCompoundFile￨e =￨e true￨e ;￨e Directory￨e dir￨e =￨e new￨e RAMDirectory￨e (￨e )￨e ;￨e TestDeletionPolicy￨e .￨e ExpirationTimeDeletionPolicy￨e policy￨e =￨e new￨e TestDeletionPolicy￨e .￨e ExpirationTimeDeletionPolicy￨e (￨e dir￨e ,￨e SECONDS￨e )￨e ;￨e IndexWriter￨e writer￨e =￨e new￨e IndexWriter￨e (￨e dir￨e ,￨e autoCommit￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e ,￨e true￨e ,￨e policy￨e )￨e ;￨e writer￨e .￨e setUseCompoundFile￨e (￨e useCompoundFile￨e )￨e ;￨e writer￨e .￨e close￨e (￨e )￨e ;￨e long￨e lastDeleteTime￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 7￨c ;￨c i￨c ++￨c )￨l {￨l lastDeleteTime￨e =￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ;￨e writer￨e =￨e new￨e IndexWriter￨e (￨e dir￨e ,￨e autoCommit￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e ,￨e false￨e ,￨e policy￨e )￨e ;￨e writer￨e .￨e setUseCompoundFile￨e (￨e useCompoundFile￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c 17￨c ;￨c j￨c ++￨c )￨l {￨l addDoc￨e (￨e writer￨e )￨e ;￨e }￨l writer￨e .￨e close￨e (￨e )￨e ;￨e Thread￨e .￨e sleep￨e (￨e (￨e (￨e int￨e )￨e (￨e 1000.0￨e *￨e (￨e SECONDS￨e /￨e 5.0￨e )￨e )￨e )￨e )￨e ;￨e }￨l assertTrue￨e (￨e "no<seq2seq4repair_space>commits<seq2seq4repair_space>were<seq2seq4repair_space>deleted"￨e ,￨e (￨e (￨e policy￨e .￨e numDelete￨e )￨e >￨e 0￨e )￨e )￨e ;￨e long￨e gen￨e =￨e SegmentInfos￨e .￨e getCurrentSegmentGeneration￨e (￨e dir￨e )￨e ;￨e String￨e fileName￨e =￨e IndexFileNames￨e .￨e fileNameFromGeneration￨e (￨e SEGMENTS￨e ,￨e ""￨e ,￨e gen￨e )￨e ;￨e dir￨e .￨e deleteFile￨e (￨e SEGMENTS_GEN￨e )￨e ;￨e while￨l (￨l gen￨c >￨c 0￨c )￨l {￨l try￨f (￨f )￨f {￨f IndexReader￨e reader￨e =￨e IndexReader￨e .￨e open￨e (￨e dir￨e )￨e ;￨e reader￨e .￨e close￨e (￨e )￨e ;￨e fileName￨e =￨e IndexFileNames￨e .￨e fileNameFromGeneration￨e (￨e SEGMENTS￨e ,￨e ""￨e ,￨e gen￨e )￨e ;￨e long￨e modTime￨e =￨e dir￨e .￨e fileModified￨e (￨e fileName￨e )￨e ;￨e <START_BUG>￨b assertTrue￨b (￨b (￨b (￨b "commit<seq2seq4repair_space>point<seq2seq4repair_space>was<seq2seq4repair_space>older<seq2seq4repair_space>than<seq2seq4repair_space>"￨b +￨b SECONDS￨b )￨b +￨b "<seq2seq4repair_space>seconds<seq2seq4repair_space>but<seq2seq4repair_space>did<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>deleted"￨b )￨b ,￨b (￨b (￨b lastDeleteTime￨b -￨b modTime￨b )￨b <￨b (￨b SECONDS￨b *￨b 1000￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f break￨e ;￨e }￨f dir￨e .￨e deleteFile￨e (￨e IndexFileNames￨e .￨e fileNameFromGeneration￨e (￨e SEGMENTS￨e ,￨e ""￨e ,￨e gen￨e )￨e )￨e ;￨e gen￨e --￨e ;￨e }￨l dir￨e .￨e close￨e (￨e )￨e ;￨e }￨f public￨f void￨f testKeepAllDeletionPolicy￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testKeepNoneOnInitDeletionPolicy￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testKeepLastNDeletionPolicy￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testKeepLastNDeletionPolicyWithReader￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testKeepLastNDeletionPolicyWithCreates￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f addDoc￨f (￨f IndexWriter￨f writer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SolrWriter￨d extends￨d DIHWriterBase￨d implements￨d DIHWriter￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d SolrWriter￨d .￨d class￨d )￨d ;￨d static￨d final￨d String￨d LAST_INDEX_KEY￨d =￨d "last_index_time"￨d ;￨d private￨d final￨d UpdateRequestProcessor￨d processor￨d ;￨d SolrQueryRequest￨d req￨d ;￨d public￨d SolrWriter￨d (￨d UpdateRequestProcessor￨d processor￨d ,￨d SolrQueryRequest￨d req￨d )￨d {￨d }￨d @￨f Override￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f upload￨f (￨f SolrInputDocument￨p d￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f deleteDoc￨f (￨f Object￨p id￨p )￨f {￨f try￨f (￨f )￨f {￨f SolrWriter￨e .￨e log￨e .￨e info￨e (￨e (￨e "Deleting<seq2seq4repair_space>document:<seq2seq4repair_space>"￨e +￨e id￨e )￨e )￨e ;￨e DeleteUpdateCommand￨e delCmd￨e =￨e new￨e DeleteUpdateCommand￨e (￨e req￨e )￨e ;￨e <START_BUG>￨b delCmd￨b .￨b id￨b =￨b id￨b .￨b toString￨b (￨b )￨b ;￨b <END_BUG>￨b processor￨e .￨e processDelete￨e (￨e delCmd￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f SolrWriter￨e .￨e log￨e .￨e error￨e (￨e (￨e "Exception<seq2seq4repair_space>while<seq2seq4repair_space>deleteing:<seq2seq4repair_space>"￨e +￨e id￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f void￨f deleteByQuery￨f (￨f String￨p query￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f commit￨f (￨f boolean￨p optimize￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f rollback￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f doDeleteAll￨f (￨f )￨f {￨f }￨f static￨f String￨f getResourceAsString￨f (￨f InputStream￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f static￨f String￨f getDocCount￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f init￨f (￨f Context￨p context￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d WebApplication￨d extends￨d Application￨d {￨d private￨e Map￨e bufferedResponses￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e IRequestCycleProcessor￨e requestCycleProcessor￨e ;￨e private￨e String￨e sessionAttributePrefix￨e ;￨e private￨f ISessionFactory￨f sessionFactory￨f =￨f new￨f ISessionFactory￨f (￨f )￨f {￨f private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f Session￨f newSession￨f (￨f )￨f {￨f }￨f }￨f ;￨e private￨e WicketServlet￨e wicketServlet￨e ;￨e public￨f WebApplication￨f (￨f )￨f {￨f }￨f public￨f ApplicationSettings￨f createApplicationSettings￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getSessionAttributePrefix￨f (￨f final￨p WebRequest￨p request￨p )￨f {￨f if￨j (￨j (￨c sessionAttributePrefix￨c )￨c ==￨c null￨c )￨j {￨j String￨e servletPath￨e =￨e request￨e .￨e getServletPath￨e (￨e )￨e ;￨e if￨j (￨j servletPath￨c ==￨c null￨c )￨j {￨j throw￨e new￨e WicketRuntimeException￨e (￨e "unable<seq2seq4repair_space>to<seq2seq4repair_space>retrieve<seq2seq4repair_space>servlet<seq2seq4repair_space>path"￨e )￨e ;￨e }￨j <START_BUG>￨b sessionAttributePrefix￨b =￨b (￨b "wicket-"￨b +￨b servletPath￨b )￨b +￨b "-"￨b ;￨b <END_BUG>￨b }￨j return￨e sessionAttributePrefix￨e ;￨e }￨f public￨f final￨f WicketServlet￨f getWicketServlet￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f mount￨f (￨f String￨p path￨p ,￨p IRequestTargetEncoderDecoder￨p encoder￨p )￨f {￨f }￨f public￨f final￨f void￨f mountBookmarkablePage￨f (￨f String￨p path￨p ,￨p Class￨p bookmarkablePageClass￨p )￨f {￨f }￨f public￨f final￨f void￨f mountBookmarkablePage￨f (￨f String￨p path￨p ,￨p Class￨p bookmarkablePageClass￨p ,￨p String￨p pageMapName￨p )￨f {￨f }￨f public￨f final￨f void￨f mountPackage￨f (￨f String￨p path￨p ,￨p Class￨p classOfPackageToMount￨p )￨f {￨f }￨f public￨f final￨f void￨f setSessionFactory￨f (￨f final￨p ISessionFactory￨p sessionFactory￨p )￨f {￨f }￨f public￨f final￨f void￨f setWicketServlet￨f (￨f final￨p WicketServlet￨p wicketServlet￨p )￨f {￨f }￨f public￨f final￨f void￨f unmount￨f (￨f String￨p path￨p )￨f {￨f }￨f protected￨f IRequestCycleFactory￨f getDefaultRequestCycleFactory￨f (￨f )￨f {￨f }￨f protected￨f IRequestCycleProcessor￨f getDefaultRequestCycleProcessor￨f (￨f )￨f {￨f }￨f protected￨f ISessionFactory￨f getSessionFactory￨f (￨f )￨f {￨f }￨f protected￨f void￨f init￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalDestroy￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalInit￨f (￨f )￨f {￨f }￨f protected￨f WebRequest￨f newWebRequest￨f (￨f final￨p HttpServletRequest￨p servletRequest￨p )￨f {￨f }￨f protected￨f WebResponse￨f newWebResponse￨f (￨f final￨p HttpServletResponse￨p servletResponse￨p )￨f {￨f }￨f final￨f void￨f addBufferedResponse￨f (￨f String￨p sessionId￨p ,￨p String￨p bufferId￨p ,￨p BufferedResponse￨p renderedResponse￨p )￨f {￨f }￨f final￨f void￨f clearBufferedResponses￨f (￨f String￨p sessionId￨p )￨f {￨f }￨f final￨f WebSession￨f getSession￨f (￨f final￨p WebRequest￨p request￨p )￨f {￨f }￨f final￨f BufferedResponse￨f popBufferedResponse￨f (￨f String￨p sessionId￨p ,￨p String￨p bufferId￨p )￨f {￨f }￨f private￨f void￨f checkMountPath￨f (￨f String￨p path￨p )￨f {￨f }￨f }￨d
public￨d class￨d CCMCheck￨d extends￨d Continuus￨d {￨d private￨e File￨e file￨e =￨e null￨e ;￨e private￨e String￨e comment￨e =￨e null￨e ;￨e private￨e String￨e task￨e =￨e null￨e ;￨e protected￨e Vector￨e filesets￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e public￨f CCMCheck￨f (￨f )￨f {￨f }￨f public￨f File￨f getFile￨f (￨f )￨f {￨f }￨f public￨f void￨f setFile￨f (￨f File￨p v￨p )￨f {￨f }￨f public￨f String￨f getComment￨f (￨f )￨f {￨f }￨f public￨f void￨f setComment￨f (￨f String￨p v￨p )￨f {￨f }￨f public￨f String￨f getTask￨f (￨f )￨f {￨f }￨f public￨f void￨f setTask￨f (￨f String￨p v￨p )￨f {￨f }￨f public￨f void￨f addFileset￨f (￨f FileSet￨p set￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f doit￨f (￨f )￨f {￨f Commandline￨e commandLine￨e =￨e new￨e Commandline￨e (￨e )￨e ;￨e commandLine￨e .￨e setExecutable￨e (￨e getCcmCommand￨e (￨e )￨e )￨e ;￨e commandLine￨e .￨e createArgument￨e (￨e )￨e .￨e setValue￨e (￨e getCcmAction￨e (￨e )￨e )￨e ;￨e checkOptions￨e (￨e commandLine￨e )￨e ;￨e int￨e result￨e =￨e run￨e (￨e commandLine￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b Execute￨b .￨b isFailure￨b (￨b 0￨b )￨b )￨b {￨b <END_BUG>￨b String￨e msg￨e =￨e "Failed<seq2seq4repair_space>executing:<seq2seq4repair_space>"￨e +￨e (￨e commandLine￨e .￨e toString￨e (￨e )￨e )￨e ;￨e throw￨e new￨e BuildException￨e (￨e msg￨e ,￨e getLocation￨e (￨e )￨e )￨e ;￨e }￨f private￨f void￨f checkOptions￨f (￨f Commandline￨p cmd￨p )￨f {￨f }￨f public￨e static￨e final￨e String￨e FLAG_COMMENT￨e =￨e "/comment"￨e ;￨e public￨e static￨e final￨e String￨e FLAG_TASK￨e =￨e "/task"￨e ;￨e }￨d
public￨d class￨d GoModelToElements￨d implements￨d TreeModelPrereqs￨d {￨d public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b Localizer￨b .￨b localize￨b (￨b "Tree"￨b ,￨b "Namespace->Owned<seq2seq4repair_space>Element"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Object￨f getRoot￨f (￨f )￨f {￨f }￨f public￨f void￨f setRoot￨f (￨f Object￨p r￨p )￨f {￨f }￨f public￨f Object￨f getChild￨f (￨f Object￨p parent￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f int￨f getChildCount￨f (￨f Object￨p parent￨p )￨f {￨f }￨f public￨f int￨f getIndexOfChild￨f (￨f Object￨p parent￨p ,￨p Object￨p child￨p )￨f {￨f }￨f public￨f boolean￨f isLeaf￨f (￨f Object￨p node￨p )￨f {￨f }￨f public￨f void￨f valueForPathChanged￨f (￨f TreePath￨p path￨p ,￨p Object￨p newValue￨p )￨f {￨f }￨f public￨f void￨f addTreeModelListener￨f (￨f TreeModelListener￨p l￨p )￨f {￨f }￨f public￨f void￨f removeTreeModelListener￨f (￨f TreeModelListener￨p l￨p )￨f {￨f }￨f public￨f Vector￨f getPrereqs￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getProvidedTypes￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JoranConfigurator￨d extends￨d ConfiguratorBase￨d {￨d Interpreter￨e joranInterpreter￨e ;￨e LoggerRepository￨e repository￨e ;￨e boolean￨e listAppnderAttached￨e =￨e false￨e ;￨e public￨f JoranConfigurator￨f (￨f )￨f {￨f }￨f protected￨f interface￨f ParseAction￨f (￨f )￨f {￨f void￨f parse￨f (￨f final￨f SAXParser￨f parser￨f ,￨f final￨f DefaultHandler￨f handler￨f )￨f throws￨f IOException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f }￨f public￨f final￨f void￨f doConfigure￨f (￨f final￨p URL￨p url￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f }￨f public￨f final￨f void￨f doConfigure￨f (￨f final￨p String￨p filename￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f }￨f public￨f final￨f void￨f doConfigure￨f (￨f final￨p File￨p file￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f }￨f public￨f final￨f void￨f doConfigure￨f (￨f final￨p InputSource￨p source￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f }￨f public￨f final￨f void￨f doConfigure￨f (￨f final￨p InputStream￨p stream￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f }￨f protected￨f void￨f doConfigure￨f (￨f final￨p JoranConfigurator￨p .￨p ParseAction￨p action￨p ,￨p final￨p LoggerRepository￨p repository￨p )￨f {￨f this￨e .￨e repository￨e =￨e repository￨e ;￨e selfInitialize￨e (￨e this￨e .￨e repository￨e )￨e ;￨e ExecutionContext￨e ec￨e =￨e joranInterpreter￨e .￨e getExecutionContext￨e (￨e )￨e ;￨e List￨e errorList￨e =￨e ec￨e .￨e getErrorList￨e (￨e )￨e ;￨e SAXParser￨e saxParser￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f SAXParserFactory￨e spf￨e =￨e SAXParserFactory￨e .￨e newInstance￨e (￨e )￨e ;￨e spf￨e .￨e setValidating￨e (￨e false￨e )￨e ;￨e spf￨e .￨e setNamespaceAware￨e (￨e true￨e )￨e ;￨e saxParser￨e =￨e spf￨e .￨e newSAXParser￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p pce￨p )￨f {￨f final￨e String￨e errMsg￨e =￨e "Parser<seq2seq4repair_space>configuration<seq2seq4repair_space>error<seq2seq4repair_space>occured"￨e ;￨e getLogger￨e (￨e repository￨e )￨e .￨e error￨e (￨e errMsg￨e ,￨e pce￨e )￨e ;￨e ec￨e .￨e addError￨e (￨e new￨e ErrorItem￨e (￨e errMsg￨e ,￨e pce￨e )￨e )￨e ;￨e return￨e ;￨e }￨f <START_BUG>￨b JoranDocument￨b document￨b =￨b new￨b JoranDocument￨b (￨b errorList￨b )￨b ;￨b <END_BUG>￨b try￨f (￨f )￨f {￨f action￨e .￨e parse￨e (￨e saxParser￨e ,￨e document￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ie￨p )￨f {￨f final￨e String￨e errMsg￨e =￨e "I/O<seq2seq4repair_space>error<seq2seq4repair_space>occured<seq2seq4repair_space>while<seq2seq4repair_space>parsing<seq2seq4repair_space>xml<seq2seq4repair_space>file"￨e ;￨e getLogger￨e (￨e repository￨e )￨e .￨e error￨e (￨e errMsg￨e ,￨e ie￨e )￨e ;￨e ec￨e .￨e addError￨e (￨e new￨e ErrorItem￨e (￨e errMsg￨e ,￨e ie￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f final￨e String￨e errMsg￨e =￨e "Problem<seq2seq4repair_space>parsing<seq2seq4repair_space>XML<seq2seq4repair_space>document.<seq2seq4repair_space>See<seq2seq4repair_space>previously<seq2seq4repair_space>reported<seq2seq4repair_space>errors.<seq2seq4repair_space>Abandoning<seq2seq4repair_space>all<seq2seq4repair_space>further<seq2seq4repair_space>processing."￨e ;￨e getLogger￨e (￨e repository￨e )￨e .￨e error￨e (￨e errMsg￨e ,￨e ex￨e )￨e ;￨e errorList￨e .￨e add￨e (￨e new￨e ErrorItem￨e (￨e errMsg￨e )￨e )￨e ;￨e return￨e ;￨e }￨f ec￨e .￨e pushObject￨e (￨e repository￨e )￨e ;￨e String￨e errMsg￨e ;￨e try￨f (￨f )￨f {￨f attachListAppender￨e (￨e repository￨e )￨e ;￨e document￨e .￨e replay￨e (￨e joranInterpreter￨e )￨e ;￨e getLogger￨e (￨e repository￨e )￨e .￨e debug￨e (￨e "Finished<seq2seq4repair_space>parsing."￨e )￨e ;￨e }￨f catch￨f (￨f SAXException￨p e￨p )￨f {￨f }￨f finally￨f (￨f )￨f {￨f detachListAppender￨e (￨e repository￨e )￨e ;￨e }￨f }￨f public￨f List￨f getErrorList￨f (￨f )￨f {￨f }￨f protected￨f void￨f selfInitialize￨f (￨f LoggerRepository￨p repository￨p )￨f {￨f }￨f public￨f ExecutionContext￨f getExecutionContext￨f (￨f )￨f {￨f }￨f }￨d
class￨d OSGiSubsystemAdd￨d extends￨d AbstractBoottimeAddStepHandler￨d {￨d static￨e final￨e OSGiSubsystemAdd￨e INSTANCE￨e =￨e new￨e OSGiSubsystemAdd￨e (￨e )￨e ;￨e private￨e OSGiRuntimeResource￨e resource￨e ;￨e private￨f OSGiSubsystemAdd￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f Resource￨f createResource￨f (￨f OperationContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f populateModel￨f (￨f final￨f ModelNode￨f operation￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performBoottime￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f ,￨f final￨f ModelNode￨f model￨f ,￨f final￨f ServiceVerificationHandler￨f verificationHandler￨f ,￨f final￨f List￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f newControllers￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f OSGiLogger￨e .￨e LOGGER￨e .￨e infoActivatingSubsystem￨e (￨e )￨e ;￨e final￨e Activation￨e activation￨e =￨e Activation￨e .￨e valueOf￨e (￨e ACTIVATION￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e .￨e asString￨e (￨e )￨e .￨e toUpperCase￨e (￨e Locale￨e .￨e ENGLISH￨e )￨e )￨e ;￨e final￨e ServiceTarget￨e serviceTarget￨e =￨e context￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e final￨e InitialDeploymentTracker￨e deploymentTracker￨e =￨e new￨e InitialDeploymentTracker￨e (￨e context￨e ,￨e verificationHandler￨e )￨e ;￨e final￨e ModuleRegistrationTracker￨e registrationTracker￨e =￨e new￨e ModuleRegistrationTracker￨e (￨e )￨e ;￨e final￨e List￨e <￨e SubsystemExtension￨e >￨e extensions￨e =￨e new￨e ArrayList￨e <￨e SubsystemExtension￨e >￨e (￨e )￨e ;￨e final￨d Iterator￨d <￨d SubsystemExtension￨d >￨d services￨d =￨d ServiceLoader￨d .￨d load￨d (￨d SubsystemExtension￨d .￨d class￨d ,￨d getClass￨d (￨d )￨d .￨d getClassLoader￨d (￨d )￨d )￨d .￨d iterator￨d (￨d )￨d ;￨d while￨d (￨d services￨d .￨d hasNext￨d (￨d )￨d )￨d {￨d extensions￨e .￨e add￨e (￨e services￨e .￨e next￨e (￨e )￨e )￨e ;￨e }￨d context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b newControllers￨b .￨b add￨b (￨b FrameworkBootstrapService￨b .￨b addService￨b (￨b serviceTarget￨b ,￨b resource￨b ,￨b extensions￨b ,￨b verificationHandler￨b )￨b )￨b ;￨b <END_BUG>￨b newControllers￨e .￨e add￨e (￨e registrationTracker￨e .￨e install￨e (￨e serviceTarget￨e ,￨e verificationHandler￨e )￨e )￨e ;￨e context￨e .￨e completeStep￨e (￨e NOOP_ROLLBACK_HANDLER￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e context￨f .￨f addStep￨f (￨f new￨f AbstractDeploymentChainStep￨f (￨f )￨f {￨f @￨f Override￨f protected￨f void￨f execute￨f (￨f DeploymentProcessorTarget￨p processorTarget￨p )￨f {￨f processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e STRUCTURE￨e ,￨e STRUCTURE_OSGI_MANIFEST￨e ,￨e new￨e OSGiManifestStructureProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e STRUCTURE￨e ,￨e STRUCTURE_BUNDLE_SUB_DEPLOYMENT￨e ,￨e new￨e BundleSubDeploymentMarkingProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e PARSE￨e ,￨e PARSE_OSGI_BUNDLE_INFO￨e ,￨e new￨e OSGiBundleInfoParseProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e PARSE￨e ,￨e PARSE_OSGI_PROPERTIES￨e ,￨e new￨e OSGiXServiceParseProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e PARSE￨e ,￨e PARSE_OSGI_DEPLOYMENT￨e ,￨e new￨e BundleDeploymentProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e PARSE￨e ,￨e PARSE_OSGI_COMPONENTS￨e ,￨e new￨e OSGiComponentParseProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e PARSE￨e ,￨e PARSE_OSGI_SUBSYSTEM_ACTIVATOR￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e osgi￨e .￨e deployment￨e .￨e FrameworkActivateProcessor￨e (￨e deploymentTracker￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e REGISTER￨e ,￨e REGISTER_BUNDLE_INSTALL￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e osgi￨e .￨e deployment￨e .￨e BundleInstallProcessor￨e (￨e deploymentTracker￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e DEPENDENCIES￨e ,￨e DEPENDENCIES_BUNDLE￨e ,￨e new￨e BundleDependenciesProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e CONFIGURE_MODULE￨e ,￨e CONFIGURE_RESOLVE_BUNDLE￨e ,￨e new￨e BundleResolveProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e CONFIGURE_MODULE￨e ,￨e CONFIGURE_DEFERRED_PHASE￨e ,￨e new￨e DeferredPhaseProcessor￨e (￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e INSTALL￨e ,￨e INSTALL_RESOLVER_MODULE￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e osgi￨e .￨e deployment￨e .￨e ModuleRegisterProcessor￨e (￨e registrationTracker￨e )￨e )￨e ;￨e processorTarget￨e .￨e addDeploymentProcessor￨e (￨e SUBSYSTEM_NAME￨e ,￨e INSTALL￨e ,￨e INSTALL_BUNDLE_ACTIVATE￨e ,￨e new￨e BundleActivateProcessor￨e (￨e )￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e for￨l (￨l SubsystemExtension￨c extension￨c :￨c extensions￨c )￨l {￨l extension￨e .￨e performBoottime￨e (￨e context￨e ,￨e operation￨e ,￨e model￨e ,￨e verificationHandler￨e ,￨e newControllers￨e )￨e ;￨e }￨l newControllers￨e .￨e add￨e (￨e SubsystemState￨e .￨e addService￨e (￨e serviceTarget￨e ,￨e activation￨e )￨e )￨e ;￨e }￨f }￨d
public￨d class￨d ErfTest￨d {￨d @￨f Test￨f public￨f void￨f testErf0￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErf1960￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErf2576￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErf2807￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErf3291￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testLargeValues￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfGnu￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfcGnu￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfcMaple￨f (￨f )￨f {￨f double￨f [￨f ]￨f [￨f ]￨f ref￨f =￨f new￨f double￨f [￨f ]￨f [￨f ]￨f (￨f )￨f {￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f double￨f [￨f ]￨f (￨f )￨f {￨f }￨f }￨f ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 15￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b final￨b double￨b result￨b =￨b 0.5￨b *￨b (￨b Erf￨b .￨b erfc￨b (￨b (￨b (￨b ref￨b [￨b i￨b ]￨b [￨b 0￨b ]￨b )￨b /￨b (￨b Math￨b .￨b sqrt￨b (￨b 2￨b )￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b Assert￨e .￨e assertEquals￨e (￨e ref￨e [￨e i￨e ]￨e [￨e 1￨e ]￨e ,￨e result￨e ,￨e 1.0E-15￨e )￨e ;￨e TestUtils￨e .￨e assertRelativelyEquals￨e (￨e ref￨e [￨e i￨e ]￨e [￨e 1￨e ]￨e ,￨e result￨e ,￨e 1.0E-13￨e )￨e ;￨e }￨l }￨f @￨f Test￨f public￨f void￨f testTwoArgumentErf￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfInvNaN￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfInvInfinite￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfInv￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfcInvNaN￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfcInvInfinite￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testErfcInv￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Rpm￨d extends￨d AbstractTask￨d {￨d private￨e String￨e m_command￨e =￨e "-bb"￨e ;￨e private￨e boolean￨e m_cleanBuildDir￨e ;￨e private￨e boolean￨e m_removeSpec￨e ;￨e private￨e boolean￨e m_removeSource￨e ;￨e private￨e String￨e m_specFile￨e ;￨e private￨e File￨e m_topDir￨e ;￨e public￨f void￨f setCleanBuildDir￨f (￨f boolean￨p cleanBuildDir￨p )￨f {￨f }￨f public￨f void￨f setCommand￨f (￨f final￨p String￨p command￨p )￨f {￨f }￨f public￨f void￨f setRemoveSource￨f (￨f final￨p boolean￨p removeSource￨p )￨f {￨f }￨f public￨f void￨f setRemoveSpec￨f (￨f final￨p boolean￨p removeSpec￨p )￨f {￨f }￨f public￨f void￨f setSpecFile￨f (￨f final￨f String￨f specFile￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f public￨f void￨f setTopDir￨f (￨f final￨p File￨p topDir￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f final￨e Commandline￨e cmd￨e =￨e createCommand￨e (￨e )￨e ;￨e final￨e Execute2￨e exe￨e =￨e new￨e Execute2￨e (￨e )￨e ;￨e setupLogger￨e (￨e exe￨e )￨e ;￨e if￨j (￨j (￨c m_topDir￨c )￨c ==￨c null￨c )￨j {￨j m_topDir￨e =￨e getBaseDirectory￨e (￨e )￨e ;￨e }￨j exe￨e .￨e setWorkingDirectory￨e (￨e m_topDir￨e )￨e ;￨e <START_BUG>￨b exe￨b .￨b setCommandline￨b (￨b cmd￨b .￨b getCommandline￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b try￨f (￨f )￨f {￨f final￨e String￨e message￨e =￨e (￨e "Building<seq2seq4repair_space>the<seq2seq4repair_space>RPM<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>"￨e +￨e (￨e m_specFile￨e )￨e )￨e +￨e "<seq2seq4repair_space>file"￨e ;￨e getLogger￨e (￨e )￨e .￨e info￨e (￨e message￨e )￨e ;￨e if￨j (￨j 0￨c !=￨c (￨c exe￨c .￨c execute￨c (￨c )￨c )￨c )￨j {￨j throw￨e new￨e TaskException￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>execute<seq2seq4repair_space>rpm"￨e )￨e ;￨e }￨j }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e TaskException￨e (￨e "Error"￨e ,￨e e￨e )￨e ;￨e }￨f }￨f private￨f Commandline￨f createCommand￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DistributableSessionManagerFactoryBuilder￨d implements￨d org￨d .￨d wildfly￨d .￨d extension￨d .￨d undertow￨d .￨d session￨d .￨d DistributableSessionManagerFactoryBuilder￨d {￨d private￨e final￨e SessionManagerFactoryBuilder￨e builder￨e ;￨e public￨f DistributableSessionManagerFactoryBuilder￨f (￨f )￨f {￨f }￨f public￨f DistributableSessionManagerFactoryBuilder￨f (￨f SessionManagerFactoryBuilder￨p builder￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServiceBuilder￨f <￨f SessionManagerFactory￨f >￨f build￨f (￨f ServiceTarget￨p target￨p ,￨p ServiceName￨p name￨p ,￨p ServiceName￨p deploymentServiceName￨p ,￨p Module￨p module￨p ,￨p JBossWebMetaData￨p metaData￨p )￨f {￨f <START_BUG>￨b ServiceName￨b clusteringServiceName￨b =￨b name￨b .￨b append￨b (￨b "distributable"￨b )￨b ;￨b <END_BUG>￨b this￨e .￨e builder￨e .￨e buildDeploymentDependency￨e (￨e target￨e ,￨e clusteringServiceName￨e ,￨e deploymentServiceName￨e ,￨e module￨e ,￨e metaData￨e )￨e .￨e setInitialMode￨e (￨e ON_DEMAND￨e )￨e .￨e install￨e (￨e )￨e ;￨e return￨e DistributableSessionManagerFactoryService￨e .￨e build￨e (￨e target￨e ,￨e name￨e ,￨e clusteringServiceName￨e )￨e ;￨e }￨f }￨d
public￨d class￨d ProgressMonitorJobsDialog￨d extends￨d ProgressMonitorDialog￨d {￨d private￨e NewProgressViewer￨e viewer￨e ;￨e private￨e int￨e viewerHeight￨e =￨e -￨e 1￨e ;￨e Composite￨e viewerComposite￨e ;￨e private￨e Button￨e detailsButton￨e ;￨e private￨e long￨e watchTime￨e =￨e -￨e 1￨e ;￨e protected￨e boolean￨e alreadyClosed￨e =￨e false￨e ;￨e private￨e IProgressMonitor￨e wrapperedMonitor￨e ;￨e protected￨e boolean￨e enableDetailsButton￨e =￨e false￨e ;￨e public￨f ProgressMonitorJobsDialog￨f (￨f Shell￨p parent￨p )￨f {￨f }￨f protected￨f Control￨f createDialogArea￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f void￨f handleDetailsButtonSelect￨f (￨f )￨f {￨f }￨f protected￨f void￨f createButtonsForButtonBar￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createSpacer￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createDetailsButton￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f Control￨f createButtonBar￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f clearCursors￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateForSetBlocked￨f (￨f IStatus￨p reason￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f boolean￨f fork￨f ,￨f boolean￨f cancelable￨f ,￨f IRunnableWithProgress￨f runnable￨f )￨f throws￨f InterruptedException￨f ,￨f InvocationTargetException￨f (￨f )￨f {￨f }￨f protected￨f void￨f enableDetails￨f (￨f boolean￨p enableState￨p )￨f {￨f }￨f public￨f void￨f watchTicks￨f (￨f )￨f {￨f }￨f public￨f void￨f createWrapperedMonitor￨f (￨f )￨f {￨f wrapperedMonitor￨f =￨f new￨f IProgressMonitorWithBlocking￨f (￨f )￨f {￨f IProgressMonitor￨e superMonitor￨e =￨e ProgressMonitorJobsDialog￨e .￨e super￨e .￨e getProgressMonitor￨e (￨e )￨e ;￨e public￨f void￨f beginTask￨f (￨f String￨p name￨p ,￨p int￨p totalWork￨p )￨f {￨f superMonitor￨e .￨e beginTask￨e (￨e name￨e ,￨e totalWork￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f private￨f void￨f checkTicking￨f (￨f )￨f {￨f if￨j (￨j (￨c watchTime￨c )￨c <￨c 0￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c (￨c System￨c .￨c currentTimeMillis￨c (￨c )￨c )￨c -￨c (￨c watchTime￨c )￨c )￨c >￨c (￨c ProgressManager￨c .￨c getInstance￨c (￨c )￨c .￨c getLongOperationTime￨c (￨c )￨c )￨c )￨j {￨j watchTime￨e =￨e -￨e 1￨e ;￨e openDialog￨e (￨e )￨e ;￨e }￨j }￨f private￨f void￨f openDialog￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c PlatformUI￨c .￨c isWorkbenchRunning￨c (￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j PlatformUI￨f .￨f getWorkbench￨f (￨f )￨f .￨f getDisplay￨f (￨f )￨f .￨f syncExec￨f (￨f new￨f Runnable￨f (￨f )￨f {￨f public￨f void￨f run￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b !￨b (￨b ProgressManagerUtil￨b .￨b safeToOpen￨b (￨b ProgressMonitorJobsDialog￨b .￨b this￨b )￨b )￨b )￨b {￨b <END_BUG>￨b watchTicks￨e (￨e )￨e ;￨e return￨e ;￨e if￨j (￨j !￨c (￨c alreadyClosed￨c )￨c )￨j {￨j open￨e (￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e }￨f public￨f void￨f done￨f (￨f )￨f {￨f superMonitor￨e .￨e done￨e (￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f public￨f void￨f internalWorked￨f (￨f double￨p work￨p )￨f {￨f superMonitor￨e .￨e internalWorked￨e (￨e work￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f public￨f boolean￨f isCanceled￨f (￨f )￨f {￨f return￨e superMonitor￨e .￨e isCanceled￨e (￨e )￨e ;￨e }￨f public￨f void￨f setCanceled￨f (￨f boolean￨p value￨p )￨f {￨f superMonitor￨e .￨e setCanceled￨e (￨e value￨e )￨e ;￨e }￨f public￨f void￨f setTaskName￨f (￨f String￨p name￨p )￨f {￨f superMonitor￨e .￨e setTaskName￨e (￨e name￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f public￨f void￨f subTask￨f (￨f String￨p name￨p )￨f {￨f superMonitor￨e .￨e subTask￨e (￨e name￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f public￨f void￨f worked￨f (￨f int￨p work￨p )￨f {￨f superMonitor￨e .￨e worked￨e (￨e work￨e )￨e ;￨e checkTicking￨e (￨e )￨e ;￨e }￨f public￨f void￨f clearBlocked￨f (￨f )￨f {￨f if￨j (￨j (￨c superMonitor￨c )￨c instanceof￨c IProgressMonitorWithBlocking￨c )￨j {￨j (￨e (￨e IProgressMonitorWithBlocking￨e )￨e (￨e superMonitor￨e )￨e )￨e .￨e clearBlocked￨e (￨e )￨e ;￨e }￨j }￨f public￨f void￨f setBlocked￨f (￨f IStatus￨p reason￨p )￨f {￨f openDialog￨e (￨e )￨e ;￨e if￨j (￨j (￨c superMonitor￨c )￨c instanceof￨c IProgressMonitorWithBlocking￨c )￨j {￨j (￨e (￨e IProgressMonitorWithBlocking￨e )￨e (￨e superMonitor￨e )￨e )￨e .￨e setBlocked￨e (￨e reason￨e )￨e ;￨e }￨j }￨f }￨f ;￨e }￨f public￨f IProgressMonitor￨f getProgressMonitor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Tstamp￨d extends￨d Task￨d {￨d private￨e Vector￨e customFormats￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e String￨e prefix￨e =￨e ""￨e ;￨e public￨f void￨f setPrefix￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f Date￨e d￨e =￨e new￨e Date￨e (￨e )￨e ;￨e Enumeration￨e i￨e =￨e customFormats￨e .￨e elements￨e (￨e )￨e ;￨e while￨l (￨l i￨c .￨c hasMoreElements￨c (￨c )￨c )￨l {￨l Tstamp￨e .￨e CustomFormat￨e cts￨e =￨e (￨e (￨e Tstamp￨e .￨e CustomFormat￨e )￨e (￨e i￨e .￨e nextElement￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b cts￨b .￨b execute￨b (￨b getProject￨b (￨b )￨b ,￨b d￨b ,￨b location￨b )￨b ;￨b <END_BUG>￨b }￨l SimpleDateFormat￨e dstamp￨e =￨e new￨e SimpleDateFormat￨e (￨e "yyyyMMdd"￨e )￨e ;￨e getProject￨e (￨e )￨e .￨e setNewProperty￨e (￨e (￨e (￨e prefix￨e )￨e +￨e "DSTAMP"￨e )￨e ,￨e dstamp￨e .￨e format￨e (￨e d￨e )￨e )￨e ;￨e SimpleDateFormat￨e tstamp￨e =￨e new￨e SimpleDateFormat￨e (￨e "HHmm"￨e )￨e ;￨e getProject￨e (￨e )￨e .￨e setNewProperty￨e (￨e (￨e (￨e prefix￨e )￨e +￨e "TSTAMP"￨e )￨e ,￨e tstamp￨e .￨e format￨e (￨e d￨e )￨e )￨e ;￨e SimpleDateFormat￨e today￨e =￨e new￨e SimpleDateFormat￨e (￨e "MMMM<seq2seq4repair_space>d<seq2seq4repair_space>yyyy"￨e ,￨e Locale￨e .￨e US￨e )￨e ;￨e getProject￨e (￨e )￨e .￨e setNewProperty￨e (￨e (￨e (￨e prefix￨e )￨e +￨e "TODAY"￨e )￨e ,￨e today￨e .￨e format￨e (￨e d￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e BuildException￨e (￨e e￨e )￨e ;￨e }￨f }￨f public￨f Tstamp￨f .￨f CustomFormat￨f createFormat￨f (￨f )￨f {￨f }￨f public￨d class￨d CustomFormat￨d {￨d private￨e TimeZone￨e timeZone￨e ;￨e private￨e String￨e propertyName￨e ;￨e private￨e String￨e pattern￨e ;￨e private￨e String￨e language￨e ;￨e private￨e String￨e country￨e ;￨e private￨e String￨e variant￨e ;￨e private￨e int￨e offset￨e =￨e 0￨e ;￨e private￨e int￨e field￨e =￨e Calendar￨e .￨e DATE￨e ;￨e private￨e String￨e prefix￨e =￨e ""￨e ;￨e public￨f CustomFormat￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f setProperty￨f (￨f String￨p propertyName￨p )￨f {￨f }￨f public￨f void￨f setPattern￨f (￨f String￨p pattern￨p )￨f {￨f }￨f public￨f void￨f setLocale￨f (￨f String￨p locale￨p )￨f {￨f }￨f public￨f void￨f setTimezone￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f void￨f setOffset￨f (￨f int￨p offset￨p )￨f {￨f }￨f public￨f void￨f setUnit￨f (￨f String￨p unit￨p )￨f {￨f }￨f public￨f void￨f setUnit￨f (￨f Tstamp￨p .￨p Unit￨p unit￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f Project￨p project￨p ,￨p Date￨p date￨p ,￨p Location￨p location￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d Unit￨d extends￨d EnumeratedAttribute￨d {￨d private￨e static￨e final￨e String￨e MILLISECOND￨e =￨e "millisecond"￨e ;￨e private￨e static￨e final￨e String￨e SECOND￨e =￨e "second"￨e ;￨e private￨e static￨e final￨e String￨e MINUTE￨e =￨e "minute"￨e ;￨e private￨e static￨e final￨e String￨e HOUR￨e =￨e "hour"￨e ;￨e private￨e static￨e final￨e String￨e DAY￨e =￨e "day"￨e ;￨e private￨e static￨e final￨e String￨e WEEK￨e =￨e "week"￨e ;￨e private￨e static￨e final￨e String￨e MONTH￨e =￨e "month"￨e ;￨e private￨e static￨e final￨e String￨e YEAR￨e =￨e "year"￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f units￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e Hashtable￨e calendarFields￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e public￨f Unit￨f (￨f )￨f {￨f }￨f public￨f int￨f getCalendarField￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d AttachmentModel￨d {￨d private￨e Folder￨e folder￨e ;￨e private￨e Object￨e uid￨e ;￨e private￨e List￨e displayedMimeParts￨e ;￨e private￨e MimePartTree￨e collection￨e ;￨e public￨f AttachmentModel￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f setFolder￨f (￨f Folder￨p folder￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f setUid￨f (￨f Object￨p uid￨p )￨f {￨f }￨f public￨f Folder￨f getFolder￨f (￨f )￨f {￨f }￨f public￨f Object￨f getUid￨f (￨f )￨f {￨f }￨f public￨f MimePartTree￨f getCollection￨f (￨f )￨f {￨f }￨f public￨f void￨f setCollection￨f (￨f MimePartTree￨p collection￨p )￨f {￨f this￨e .￨e collection￨e =￨e collection￨e ;￨e displayedMimeParts￨e =￨e collection￨e .￨e getAllLeafs￨e (￨e )￨e ;￨e MimePart￨e bodyPart￨e =￨e collection￨e .￨e getFirstTextPart￨e (￨e "plain"￨e )￨e ;￨e if￨j (￨j bodyPart￨c !=￨c null￨c )￨j {￨j MimePart￨e bodyParent￨e =￨e (￨e (￨e MimePart￨e )￨e (￨e bodyPart￨e .￨e getParent￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j bodyParent￨c !=￨c null￨c )￨j {￨j if￨j (￨j bodyParent￨c .￨c getHeader￨c (￨c )￨c .￨c contentSubtype￨c .￨c equals￨c (￨c "alternative"￨c )￨c )￨j {￨j <START_BUG>￨b Vector￨b bodyParts￨b =￨b bodyParent￨b .￨b getChilds￨b (￨b )￨b ;￨b <END_BUG>￨b displayedMimeParts￨e .￨e removeAll￨e (￨e bodyParts￨e )￨e ;￨e }￨j else￨j {￨j displayedMimeParts￨e .￨e remove￨e (￨e bodyPart￨e )￨e ;￨e }￨j }￨j }￨j }￨f public￨f List￨f getDisplayedMimeParts￨f (￨f )￨f {￨f }￨f public￨f void￨f setDisplayedMimeParts￨f (￨f List￨p displayedMimeParts￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d PagedTableWithAlternatingRowStyle￨d extends￨d Table￨d {￨d public￨f PagedTableWithAlternatingRowStyle￨f (￨f final￨p String￨p componentName￨p ,￨p final￨p List￨p data￨p ,￨p int￨p pageSize￨p )￨f {￨f }￨f protected￨f void￨f populateItem￨f (￨f final￨p ListItem￨p listItem￨p )￨f {￨f <START_BUG>￨b listItem￨b .￨b addAttributeModifier￨b (￨b new￨b ComponentTagAttributeModifier￨b (￨b "class"￨b ,￨b new￨b wicket￨b .￨b Model￨b (￨b (￨b listItem￨b .￨b isEvenIndex￨b (￨b )￨b ?￨b "even"￨b :￨b "odd"￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d FormatterElement￨d {￨d private￨e OutputStream￨e out￨e =￨e new￨e KeepAliveOutputStream￨e (￨e System￨e .￨e out￨e )￨e ;￨e private￨e String￨e classname￨e ;￨e private￨e Vector￨e filters￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e public￨f void￨f setType￨f (￨f FormatterElement￨p .￨p TypeAttribute￨p type￨p )￨f {￨f }￨f public￨f void￨f setClassname￨f (￨f String￨p classname￨p )￨f {￨f }￨f public￨f void￨f setFilters￨f (￨f String￨p filters￨p )￨f {￨f }￨f public￨f void￨f addFilter￨f (￨f FilterElement￨p fe￨p )￨f {￨f }￨f public￨f void￨f setOutput￨f (￨f OutputAttribute￨p output￨p )￨f {￨f }￨f protected￨f Formatter￨f createFormatter￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d TypeAttribute￨d extends￨d EnumeratedAttribute￨d {￨d private￨f static￨f final￨f String￨f [￨f ]￨f VALUES￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f CLASSNAMES￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f String￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f public￨f String￨f getClassName￨f (￨f )￨f {￨f <START_BUG>￨b return￨b FormatterElement￨b .￨b TypeAttribute￨b .￨b CLASSNAMES￨b [￨b index￨b ]￨b ;￨b <END_BUG>￨b }￨f }￨d }￨d
public￨d class￨d Decorations￨d extends￨d Canvas￨d {￨d Image￨e image￨e ;￨e Image￨e [￨e ]￨e images￨e =￨e new￨e Image￨e [￨e 0￨e ]￨e ;￨e Menu￨e menuBar￨e ;￨e String￨e text￨e =￨e ""￨e ;￨e boolean￨e minimized￨e ;￨e boolean￨e maximized￨e ;￨e Control￨e savedFocus￨e ;￨e Button￨e defaultButton￨e ;￨e Decorations￨f (￨f )￨f {￨f }￨f public￨f Decorations￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f void￨f bringToTop￨f (￨f boolean￨p force￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f int￨f compare￨f (￨f ImageData￨p data1￨p ,￨p ImageData￨p data2￨p )￨f {￨f }￨f Control￨f computeTabGroup￨f (￨f )￨f {￨f }￨f Control￨f computeTabRoot￨f (￨f )￨f {￨f }￨f public￨f Button￨f getDefaultButton￨f (￨f )￨f {￨f }￨f public￨f Image￨f getImage￨f (￨f )￨f {￨f }￨f public￨f Image￨f [￨f ]￨f getImages￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMaximized￨f (￨f )￨f {￨f }￨f public￨f Menu￨f getMenuBar￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMinimized￨f (￨f )￨f {￨f }￨f String￨f getNameText￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f boolean￨f isTabGroup￨f (￨f )￨f {￨f }￨f boolean￨f isTabItem￨f (￨f )￨f {￨f }￨f Decorations￨f menuShell￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f boolean￨f restoreFocus￨f (￨f )￨f {￨f }￨f void￨f saveFocus￨f (￨f )￨f {￨f int￨e window￨e =￨e OS￨e .￨e GetControlOwner￨e (￨e handle￨e )￨e ;￨e <START_BUG>￨b Control￨b control￨b =￨b display￨b .￨b getFocusControl￨b (￨b window￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c (￨c control￨c !=￨c null￨c )￨c &&￨c (￨c control￨c !=￨c (￨c this￨c )￨c )￨c )￨c &&￨c (￨c (￨c this￨c )￨c ==￨c (￨c control￨c .￨c menuShell￨c (￨c )￨c )￨c )￨c )￨j {￨j setSavedFocus￨e (￨e control￨e )￨e ;￨e }￨j }￨f public￨f void￨f setDefaultButton￨f (￨f Button￨p button￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setImages￨f (￨f Image￨p [￨p ]￨p images￨p )￨f {￨f }￨f public￨f void￨f setMaximized￨f (￨f boolean￨p maximized￨p )￨f {￨f }￨f public￨f void￨f setMenuBar￨f (￨f Menu￨p menu￨p )￨f {￨f }￨f public￨f void￨f setMinimized￨f (￨f boolean￨p minimized￨p )￨f {￨f }￨f void￨f setSavedFocus￨f (￨f Control￨p control￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f sort￨f (￨f Image￨p [￨p ]￨p images￨p )￨f {￨f }￨f boolean￨f traverseItem￨f (￨f boolean￨p next￨p )￨f {￨f }￨f boolean￨f traverseReturn￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d ConfigurationHandler￨d {￨d private￨e File￨e _loadedFromFile￨e =￨e null￨e ;￨e private￨e URL￨e _loadedFromURL￨e =￨e null￨e ;￨e private￨e boolean￨e _changeable￨e =￨e false￨e ;￨e private￨e boolean￨e _loaded￨e =￨e false￨e ;￨e private￨e boolean￨e _changed￨e =￨e false￨e ;￨e private￨e static￨e PropertyChangeSupport￨e _pcl￨e =￨e null￨e ;￨e public￨f ConfigurationHandler￨f (￨f )￨f {￨f }￨f public￨f ConfigurationHandler￨f (￨f boolean￨p changeable￨p )￨f {￨f }￨f public￨f abstract￨f String￨f getDefaultPath￨f (￨f )￨f {￨f }￨f private￨f void￨f loadIfNecessary￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f loadDefault￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f saveDefault￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f saveDefault￨f (￨f boolean￨p force￨p )￨f {￨f }￨f public￨f final￨f boolean￨f isChangeable￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isChanged￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isLoaded￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f load￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f final￨f boolean￨f load￨f (￨f URL￨p url￨p )￨f {￨f }￨f public￨f final￨f boolean￨f save￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f final￨f boolean￨f save￨f (￨f URL￨p url￨p )￨f {￨f }￨f public￨f final￨f String￨f getString￨f (￨f ConfigurationKey￨p key￨p ,￨p String￨p defaultValue￨p )￨f {￨f }￨f public￨f final￨f int￨f getInteger￨f (￨f ConfigurationKey￨p key￨p ,￨p int￨p defaultValue￨p )￨f {￨f }￨f public￨f final￨f double￨f getDouble￨f (￨f ConfigurationKey￨p key￨p ,￨p double￨p defaultValue￨p )￨f {￨f }￨f public￨f final￨f boolean￨f getBoolean￨f (￨f ConfigurationKey￨p key￨p ,￨p boolean￨p defaultValue￨p )￨f {￨f loadIfNecessary￨e (￨e )￨e ;￨e Boolean￨e dflt￨e =￨e new￨e Boolean￨e (￨e defaultValue￨e )￨e ;￨e <START_BUG>￨b Boolean￨b b￨b =￨b new￨b Boolean￨b (￨b getValue￨b (￨b key￨b .￨b getKey￨b (￨b )￨b ,￨b dflt￨b .￨b toString￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e b￨e .￨e booleanValue￨e (￨e )￨e ;￨e }￨f private￨f final￨f synchronized￨f void￨f workerSetValue￨f (￨f ConfigurationKey￨p key￨p ,￨p String￨p newValue￨p )￨f {￨f }￨f public￨f final￨f void￨f setString￨f (￨f ConfigurationKey￨p key￨p ,￨p String￨p newValue￨p )￨f {￨f }￨f public￨f final￨f void￨f setInteger￨f (￨f ConfigurationKey￨p key￨p ,￨p int￨p value￨p )￨f {￨f }￨f public￨f final￨f void￨f setDouble￨f (￨f ConfigurationKey￨p key￨p ,￨p double￨p value￨p )￨f {￨f }￨f public￨f final￨f void￨f setBoolean￨f (￨f ConfigurationKey￨p key￨p ,￨p boolean￨p value￨p )￨f {￨f }￨f public￨f final￨f void￨f addListener￨f (￨f PropertyChangeListener￨p pcl￨p )￨f {￨f }￨f public￨f final￨f void￨f removeListener￨f (￨f PropertyChangeListener￨p pcl￨p )￨f {￨f }￨f public￨f final￨f void￨f addListener￨f (￨f ConfigurationKey￨p key￨p ,￨p PropertyChangeListener￨p pcl￨p )￨f {￨f }￨f public￨f final￨f void￨f removeListener￨f (￨f ConfigurationKey￨p key￨p ,￨p PropertyChangeListener￨p pcl￨p )￨f {￨f }￨f boolean￨f loadUnspecified￨f (￨f )￨f {￨f }￨f boolean￨f saveUnspecified￨f (￨f )￨f {￨f }￨f abstract￨f boolean￨f loadFile￨f (￨f File￨p file￨p )￨f {￨f }￨f abstract￨f boolean￨f loadURL￨f (￨f URL￨p url￨p )￨f {￨f }￨f abstract￨f boolean￨f saveFile￨f (￨f File￨p file￨p )￨f {￨f }￨f abstract￨f boolean￨f saveURL￨f (￨f URL￨p url￨p )￨f {￨f }￨f public￨f boolean￨f hasKey￨f (￨f ConfigurationKey￨p key￨p )￨f {￨f }￨f public￨f abstract￨f String￨f getValue￨f (￨f String￨p key￨p ,￨p String￨p defaultValue￨p )￨f {￨f }￨f abstract￨f void￨f setValue￨f (￨f String￨p key￨p ,￨p String￨p value￨p )￨f {￨f }￨f }￨d
public￨d class￨d TransactionalSpoutCoordinator￨d extends￨d BaseRichSpout￨d {￨d public￨d static￨d final￨d Logger￨d LOG￨d =￨d Logger￨d .￨d getLogger￨d (￨d TransactionalSpoutCoordinator￨d .￨d class￨d )￨d ;￨d public￨d static￨d final￨d BigInteger￨d INIT_TXID￨d =￨d BigInteger￨d .￨d ONE￨d ;￨d public￨d static￨d final￨d String￨d TRANSACTION_BATCH_STREAM_ID￨d =￨d (￨d TransactionalSpoutCoordinator￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "/batch"￨d ;￨d public￨d static￨d final￨d String￨d TRANSACTION_COMMIT_STREAM_ID￨d =￨d (￨d TransactionalSpoutCoordinator￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "/commit"￨d ;￨d private￨d static￨d final￨d String￨d CURRENT_TX￨d =￨d "currtx"￨d ;￨d private￨d static￨d final￨d String￨d META_DIR￨d =￨d "meta"￨d ;￨d private￨d ITransactionalSpout￨d _spout￨d ;￨d private￨d Coordinator￨d _coordinator￨d ;￨d private￨d TransactionalState￨d _state￨d ;￨d private￨d RotatingTransactionalState￨d _coordinatorState￨d ;￨d TreeMap￨d <￨d BigInteger￨d ,￨d TransactionalSpoutCoordinator￨d .￨d TransactionStatus￨d >￨d _activeTx￨d =￨d new￨d TreeMap￨d <￨d BigInteger￨d ,￨d TransactionalSpoutCoordinator￨d .￨d TransactionStatus￨d >￨d (￨d )￨d ;￨d private￨d SpoutOutputCollector￨d _collector￨d ;￨d BigInteger￨d _currTransaction￨d ;￨d int￨d _maxTransactionActive￨d ;￨d TransactionalSpoutCoordinator￨d .￨d StateInitializer￨d _initializer￨d ;￨d public￨d TransactionalSpoutCoordinator￨d (￨d ITransactionalSpout￨d spout￨d )￨d {￨d }￨d public￨f ITransactionalSpout￨f getSpout￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f open￨f (￨f Map￨p conf￨p ,￨p TopologyContext￨p context￨p ,￨p SpoutOutputCollector￨p collector￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f nextTuple￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f ack￨f (￨f Object￨p msgId￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f fail￨f (￨f Object￨p msgId￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f declareOutputFields￨f (￨f OutputFieldsDeclarer￨p declarer￨p )￨f {￨f }￨f private￨f void￨f sync￨f (￨f )￨f {￨f TransactionalSpoutCoordinator￨e .￨e TransactionStatus￨e maybeCommit￨e =￨e _activeTx￨e .￨e get￨e (￨e _currTransaction￨e )￨e ;￨e if￨j (￨j (￨c maybeCommit￨c !=￨c null￨c )￨c &&￨c (￨c (￨c maybeCommit￨c .￨c status￨c )￨c ==￨c (￨c TransactionalSpoutCoordinator￨c .￨c AttemptStatus￨c .￨c PROCESSED￨c )￨c )￨c )￨j {￨j maybeCommit￨e .￨e status￨e =￨e TransactionalSpoutCoordinator￨e .￨e AttemptStatus￨e .￨e COMMITTING￨e ;￨e _collector￨e .￨e emit￨e (￨e TransactionalSpoutCoordinator￨e .￨e TRANSACTION_COMMIT_STREAM_ID￨e ,￨e new￨e backtype￨e .￨e storm￨e .￨e tuple￨e .￨e Values￨e (￨e maybeCommit￨e .￨e attempt￨e )￨e ,￨e maybeCommit￨e .￨e attempt￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b _activeTx￨b .￨b size￨b (￨b )￨b )￨b <￨b (￨b _maxTransactionActive￨b )￨b )￨b {￨b <END_BUG>￨b BigInteger￨e curr￨e =￨e _currTransaction￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c _maxTransactionActive￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j !￨c (￨c _activeTx￨c .￨c containsKey￨c (￨c curr￨c )￨c )￨c )￨j {￨j TransactionAttempt￨e attempt￨e =￨e new￨e TransactionAttempt￨e (￨e curr￨e ,￨e Utils￨e .￨e randomLong￨e (￨e )￨e )￨e ;￨e Object￨e state￨e =￨e _coordinatorState￨e .￨e getState￨e (￨e curr￨e ,￨e _initializer￨e )￨e ;￨e _activeTx￨e .￨e put￨e (￨e curr￨e ,￨e new￨e TransactionalSpoutCoordinator￨e .￨e TransactionStatus￨e (￨e attempt￨e )￨e )￨e ;￨e _collector￨e .￨e emit￨e (￨e TransactionalSpoutCoordinator￨e .￨e TRANSACTION_BATCH_STREAM_ID￨e ,￨e new￨e backtype￨e .￨e storm￨e .￨e tuple￨e .￨e Values￨e (￨e attempt￨e ,￨e state￨e ,￨e previousTransactionId￨e (￨e _currTransaction￨e )￨e )￨e ,￨e attempt￨e )￨e ;￨e }￨j curr￨e =￨e nextTransactionId￨e (￨e curr￨e )￨e ;￨e }￨l }￨f catch￨f (￨f FailedException￨p e￨p )￨f {￨f TransactionalSpoutCoordinator￨e .￨e LOG￨e .￨e warn￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>metadata<seq2seq4repair_space>for<seq2seq4repair_space>a<seq2seq4repair_space>transaction"￨e ,￨e e￨e )￨e ;￨e }￨f }￨f @￨f Override￨f public￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f getComponentConfiguration￨f (￨f )￨f {￨f }￨f private￨f static￨f enum￨f AttemptStatus￨f (￨f )￨f {￨f PROCESSING￨e ,￨e PROCESSED￨e ,￨e COMMITTING￨e ;￨e }￨f private￨d static￨d class￨d TransactionStatus￨d {￨d TransactionAttempt￨e attempt￨e ;￨e TransactionalSpoutCoordinator￨e .￨e AttemptStatus￨e status￨e ;￨e public￨f TransactionStatus￨f (￨f TransactionAttempt￨p attempt￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d private￨f BigInteger￨f nextTransactionId￨f (￨f BigInteger￨p id￨p )￨f {￨f }￨f private￨f BigInteger￨f previousTransactionId￨f (￨f BigInteger￨p id￨p )￨f {￨f }￨f private￨f BigInteger￨f getStoredCurrTransaction￨f (￨f TransactionalState￨p state￨p )￨f {￨f }￨f private￨d class￨d StateInitializer￨d implements￨d RotatingTransactionalState￨d .￨d StateInitializer￨d {￨d @￨f Override￨f public￨f Object￨f init￨f (￨f BigInteger￨p txid￨p ,￨p Object￨p lastState￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ZipEntry￨d extends￨d java￨d .￨d util￨d .￨d zip￨d .￨d ZipEntry￨d implements￨d Cloneable￨d {￨d public￨e static￨e final￨e int￨e PLATFORM_UNIX￨e =￨e 3￨e ;￨e public￨e static￨e final￨e int￨e PLATFORM_FAT￨e =￨e 0￨e ;￨e private￨e static￨e final￨e int￨e SHORT_MASK￨e =￨e 65535￨e ;￨e private￨e static￨e final￨e int￨e SHORT_SHIFT￨e =￨e 16￨e ;￨e private￨e int￨e internalAttributes￨e =￨e 0￨e ;￨e private￨e int￨e platform￨e =￨e ZipEntry￨e .￨e PLATFORM_FAT￨e ;￨e private￨e long￨e externalAttributes￨e =￨e 0￨e ;￨e private￨e Vector￨e extraFields￨e =￨e null￨e ;￨e private￨e String￨e name￨e =￨e null￨e ;￨e public￨f ZipEntry￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f ZipEntry￨f (￨f java￨f .￨f util￨f .￨f zip￨f .￨f ZipEntry￨f entry￨f )￨f throws￨f ZipException￨f (￨f )￨f {￨f }￨f public￨f ZipEntry￨f (￨f ZipEntry￨f entry￨f )￨f throws￨f ZipException￨f (￨f )￨f {￨f }￨f protected￨f ZipEntry￨f (￨f )￨f {￨f }￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f public￨f int￨f getInternalAttributes￨f (￨f )￨f {￨f }￨f public￨f void￨f setInternalAttributes￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f long￨f getExternalAttributes￨f (￨f )￨f {￨f }￨f public￨f void￨f setExternalAttributes￨f (￨f long￨p value￨p )￨f {￨f }￨f public￨f void￨f setUnixMode￨f (￨f int￨p mode￨p )￨f {￨f }￨f public￨f int￨f getUnixMode￨f (￨f )￨f {￨f }￨f public￨f int￨f getPlatform￨f (￨f )￨f {￨f }￨f protected￨f void￨f setPlatform￨f (￨f int￨p platform￨p )￨f {￨f }￨f public￨f void￨f setExtraFields￨f (￨f ZipExtraField￨p [￨p ]￨p fields￨p )￨f {￨f }￨f public￨f ZipExtraField￨f [￨f ]￨f getExtraFields￨f (￨f )￨f {￨f }￨f public￨f void￨f addExtraField￨f (￨f ZipExtraField￨p ze￨p )￨f {￨f }￨f public￨f void￨f removeExtraField￨f (￨f ZipShort￨p type￨p )￨f {￨f }￨f public￨f void￨f setExtra￨f (￨f byte￨f [￨f ]￨f extra￨f )￨f throws￨f RuntimeException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f setExtraFields￨e (￨e ExtraFieldUtils￨e .￨e parse￨e (￨e extra￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b RuntimeException￨b (￨b e￨b .￨b getMessage￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f protected￨f void￨f setExtra￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f getLocalFileDataExtra￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f getCentralDirectoryExtra￨f (￨f )￨f {￨f }￨f public￨f void￨f setComprSize￨f (￨f long￨p size￨p )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDirectory￨f (￨f )￨f {￨f }￨f protected￨f void￨f setName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractLoggingSubsystemTest￨d extends￨d AbstractSubsystemBaseTest￨d {￨d static￨f final￨f String￨f [￨f ]￨f HANDLER_RESOURCE_KEYS￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨e static￨e final￨e PathElement￨e SUBSYSTEM_PATH￨e =￨e PathElement￨e .￨e pathElement￨e (￨e SUBSYSTEM￨e ,￨e SUBSYSTEM_NAME￨e )￨e ;￨e static￨e PathAddress￨e SUBSYSTEM_ADDRESS￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e AbstractLoggingSubsystemTest￨e .￨e SUBSYSTEM_PATH￨e )￨e ;￨e public￨f AbstractLoggingSubsystemTest￨f (￨f )￨f {￨f }￨f @￨f BeforeClass￨f public￨f static￨f void￨f setUp￨f (￨f )￨f {￨f }￨f @￨f After￨f public￨f void￨f clearLogContext￨f (￨f )￨f {￨f }￨f protected￨f void￨f clearLogContext￨f (￨f final￨p LogContext￨p logContext￨p )￨f {￨f }￨f @￨f Override￨f protected￨f AdditionalInitialization￨f createAdditionalInitialization￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f compareXml￨f (￨f String￨f configId￨f ,￨f String￨f original￨f ,￨f String￨f marshalled￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f static￨f PathAddress￨f createAddress￨f (￨f final￨p String￨p resourceKey￨p ,￨p final￨p String￨p resourceName￨p )￨f {￨f }￨f static￨f PathAddress￨f createAddress￨f (￨f final￨p String￨p profileName￨p ,￨p final￨p String￨p resourceKey￨p ,￨p final￨p String￨p resourceName￨p )￨f {￨f }￨f static￨f PathAddress￨f createRootLoggerAddress￨f (￨f )￨f {￨f }￨f static￨f PathAddress￨f createRootLoggerAddress￨f (￨f final￨p String￨p profileName￨p )￨f {￨f }￨f static￨f PathAddress￨f createLoggerAddress￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f static￨f PathAddress￨f createLoggerAddress￨f (￨f final￨p String￨p profileName￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f static￨f PathAddress￨f createConsoleHandlerAddress￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f static￨f PathAddress￨f createConsoleHandlerAddress￨f (￨f final￨p String￨p profileName￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f static￨f PathAddress￨f createFileHandlerAddress￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f static￨f PathAddress￨f createFileHandlerAddress￨f (￨f final￨p String￨p profileName￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f protected￨f KernelServices￨f boot￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b final￨b KernelServices￨b kernelServices￨b =￨b createKernelServicesBuilder￨b (￨b LoggingTestEnvironment￨b .￨b get￨b (￨b )￨b )￨b .￨b setSubsystemXml￨b (￨b getSubsystemXml￨b (￨b )￨b )￨b .￨b build￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e Throwable￨e bootError￨e =￨e kernelServices￨e .￨e getBootError￨e (￨e )￨e ;￨e Assert￨e .￨e assertTrue￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>boot:<seq2seq4repair_space>"￨e +￨e (￨e String￨e .￨e valueOf￨e (￨e bootError￨e )￨e )￨e )￨e ,￨e kernelServices￨e .￨e isSuccessfulBoot￨e (￨e )￨e )￨e ;￨e return￨e kernelServices￨e ;￨e }￨f protected￨f void￨f compare￨f (￨f final￨p String￨p profileName￨p ,￨p final￨p ModelNode￨p node1￨p ,￨p final￨p ModelNode￨p node2￨p )￨f {￨f }￨f protected￨f void￨f compare￨f (￨f final￨f ModelNode￨f currentModel￨f ,￨f final￨f ConfigurationPersistence￨f config￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨f void￨f compare￨f (￨f final￨f String￨f profileName￨f ,￨f final￨f ModelNode￨f currentModel￨f ,￨f final￨f ConfigurationPersistence￨f config￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨f void￨f compareLoggers￨f (￨f final￨p LogContextConfiguration￨p logContextConfiguration￨p ,￨p final￨p ModelNode￨p model￨p )￨f {￨f }￨f protected￨f void￨f compareHandlers￨f (￨f final￨f LogContextConfiguration￨f logContextConfig￨f ,￨f final￨f Collection￨f <￨f String￨f >￨f handlerNames￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨f ModelNode￨f findHandlerModel￨f (￨f final￨p ModelNode￨p model￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f protected￨f List￨f <￨f String￨f >￨f getHandlerNames￨f (￨f final￨p ModelNode￨p currentModel￨p )￨f {￨f }￨f static￨f List￨f <￨f String￨f >￨f modelNodeAsStringList￨f (￨f final￨p ModelNode￨p node￨p )￨f {￨f }￨f static￨f ModelNode￨f getSubsystemModel￨f (￨f final￨f KernelServices￨f kernelServices￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f static￨f String￨f resolveRelativePath￨f (￨f final￨f KernelServices￨f kernelServices￨f ,￨f final￨f String￨f relativeTo￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f static￨d class￨d RemoveOperationComparator￨d implements￨d Comparator￨d <￨d PathAddress￨d >￨d {￨d static￨e final￨e AbstractLoggingSubsystemTest￨e .￨e RemoveOperationComparator￨e INSTANCE￨e =￨e new￨e AbstractLoggingSubsystemTest￨e .￨e RemoveOperationComparator￨e (￨e )￨e ;￨e static￨e final￨e int￨e GREATER￨e =￨e 1￨e ;￨e static￨e final￨e int￨e EQUAL￨e =￨e 0￨e ;￨e static￨e final￨e int￨e LESS￨e =￨e -￨e 1￨e ;￨e @￨f Override￨f public￨f int￨f compare￨f (￨f final￨p PathAddress￨p o1￨p ,￨p final￨p PathAddress￨p o2￨p )￨f {￨f }￨f private￨f int￨f compare￨f (￨f final￨p String￨p key1￨p ,￨p final￨p String￨p key2￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d JavaBuilder￨d extends￨d IncrementalProjectBuilder￨d {￨d IProject￨e currentProject￨e ;￨e JavaProject￨e javaProject￨e ;￨e IWorkspaceRoot￨e workspaceRoot￨e ;￨e CompilationParticipant￨e [￨e ]￨e participants￨e ;￨e NameEnvironment￨e nameEnvironment￨e ;￨e SimpleLookupTable￨e binaryLocationsPerProject￨e ;￨e public￨e State￨e lastState￨e ;￨e BuildNotifier￨e notifier￨e ;￨e char￨e [￨e ]￨e [￨e ]￨e extraResourceFileFilters￨e ;￨e String￨e [￨e ]￨e extraResourceFolderFilters￨e ;￨e public￨e static￨e final￨e String￨e SOURCE_ID￨e =￨e "JDT"￨e ;￨e public￨e static￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e static￨e ArrayList￨e builtProjects￨e =￨e null￨e ;￨e public￨f static￨f IMarker￨f [￨f ]￨f getProblemsFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f IMarker￨f [￨f ]￨f getTasksFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f void￨f buildStarting￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f buildFinished￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f removeProblemsFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f void￨f removeTasksFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f void￨f removeProblemsAndTasksFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f State￨f readState￨f (￨f IProject￨f project￨f ,￨f DataInputStream￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f writeState￨f (￨f Object￨f state￨f ,￨f DataOutputStream￨f out￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f IProject￨f [￨f ]￨f build￨f (￨f int￨f kind￨f ,￨f Map￨f ignored￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f void￨f buildAll￨f (￨f )￨f {￨f }￨f private￨f void￨f buildDeltas￨f (￨f SimpleLookupTable￨p deltas￨p )￨f {￨f }￨f protected￨f void￨f clean￨f (￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f void￨f cleanup￨f (￨f )￨f {￨f }￨f private￨f void￨f clearLastState￨f (￨f )￨f {￨f }￨f boolean￨f filterExtraResource￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f private￨f SimpleLookupTable￨f findDeltas￨f (￨f )￨f {￨f }￨f public￨f State￨f getLastState￨f (￨f IProject￨p project￨p )￨f {￨f }￨f private￨f IProject￨f [￨f ]￨f getRequiredProjects￨f (￨f boolean￨p includeBinaryPrerequisites￨p )￨f {￨f }￨f boolean￨f hasBuildpathErrors￨f (￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasClasspathChanged￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasJavaBuilder￨f (￨f IProject￨f project￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasStructuralDelta￨f (￨f )￨f {￨f }￨f private￨f int￨f initializeBuilder￨f (￨f int￨f kind￨f ,￨f boolean￨f forBuild￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f this￨e .￨e javaProject￨e =￨e (￨e (￨e JavaProject￨e )￨e (￨e JavaCore￨e .￨e create￨e (￨e currentProject￨e )￨e )￨e )￨e ;￨e this￨e .￨e workspaceRoot￨e =￨e currentProject￨e .￨e getWorkspace￨e (￨e )￨e .￨e getRoot￨e (￨e )￨e ;￨e if￨j (￨j forBuild￨c )￨j {￨j this￨e .￨e participants￨e =￨e JavaModelManager￨e .￨e getJavaModelManager￨e (￨e )￨e .￨e compilationParticipants￨e .￨e getCompilationParticipants￨e (￨e this￨e .￨e javaProject￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c participants￨c )￨c !=￨c null￨c )￨j {￨j for￨e (￨e int￨e i￨e =￨e 0￨e ,￨e l￨e =￨e this￨e .￨e participants￨e .￨e length￨e ;￨e }￨j i￨e <￨e l￨e ;￨e if￨j (￨j (￨c this￨c .￨c participants￨c [￨c i￨c ]￨c .￨c aboutToBuild￨c (￨c this￨c .￨c javaProject￨c )￨c )￨c ==￨c (￨c CompilationParticipant￨c .￨c NEEDS_FULL_BUILD￨c )￨c )￨j {￨j kind￨e =￨e IncrementalProjectBuilder￨e .￨e FULL_BUILD￨e ;￨e }￨j String￨e projectName￨e =￨e currentProject￨e .￨e getName￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c JavaBuilder￨c .￨c builtProjects￨c )￨c ==￨c null￨c )￨c ||￨c (￨c JavaBuilder￨c .￨c builtProjects￨c .￨c contains￨c (￨c projectName￨c )￨c )￨c )￨j {￨j org￨e .￨e eclipse￨e .￨e jdt￨e .￨e internal￨e .￨e core￨e .￨e JavaModel￨e .￨e flushExternalFileCache￨e (￨e )￨e ;￨e JavaBuilder￨e .￨e builtProjects￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e }￨j JavaBuilder￨e .￨e builtProjects￨e .￨e add￨e (￨e projectName￨e )￨e ;￨e }￨j this￨e .￨e binaryLocationsPerProject￨e =￨e new￨e SimpleLookupTable￨e (￨e 3￨e )￨e ;￨e <START_BUG>￨b this￨b .￨b nameEnvironment￨b =￨b new￨b NameEnvironment￨b (￨b workspaceRoot￨b ,￨b javaProject￨b ,￨b binaryLocationsPerProject￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j forBuild￨c )￨j {￨j String￨e filterSequence￨e =￨e javaProject￨e .￨e getOption￨e (￨e JavaCore￨e .￨e CORE_JAVA_BUILD_RESOURCE_COPY_FILTER￨e ,￨e true￨e )￨e ;￨e char￨e [￨e ]￨e [￨e ]￨e filters￨e =￨e (￨e (￨e filterSequence￨e !=￨e null￨e )￨e &&￨e (￨e (￨e filterSequence￨e .￨e length￨e (￨e )￨e )￨e >￨e 0￨e )￨e )￨e ?￨e CharOperation￨e .￨e splitAndTrimOn￨e (￨e ','￨e ,￨e filterSequence￨e .￨e toCharArray￨e (￨e )￨e )￨e :￨e null￨e ;￨e if￨j (￨j filters￨c ==￨c null￨c )￨j {￨j this￨e .￨e extraResourceFileFilters￨e =￨e null￨e ;￨e this￨e .￨e extraResourceFolderFilters￨e =￨e null￨e ;￨e }￨j else￨j {￨j int￨e fileCount￨e =￨e 0￨e ;￨e int￨e folderCount￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c l￨c =￨c filters￨c .￨c length￨c ;￨c i￨c <￨c l￨c ;￨c i￨c ++￨c )￨l {￨l char￨e [￨e ]￨e f￨e =￨e filters￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c f￨c .￨c length￨c )￨c ==￨c 0￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j (￨c f￨c [￨c (￨c (￨c f￨c .￨c length￨c )￨c -￨c 1￨c )￨c ]￨c )￨c ==￨c '/'￨c )￨j {￨j folderCount￨e ++￨e ;￨e }￨j else￨j {￨j fileCount￨e ++￨e ;￨e }￨j }￨l this￨e .￨e extraResourceFileFilters￨e =￨e new￨e char￨e [￨e fileCount￨e ]￨e [￨e ]￨e ;￨e this￨e .￨e extraResourceFolderFilters￨e =￨e new￨e String￨e [￨e folderCount￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c l￨c =￨c filters￨c .￨c length￨c ;￨c i￨c <￨c l￨c ;￨c i￨c ++￨c )￨l {￨l char￨e [￨e ]￨e f￨e =￨e filters￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c f￨c .￨c length￨c )￨c ==￨c 0￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j (￨c f￨c [￨c (￨c (￨c f￨c .￨c length￨c )￨c -￨c 1￨c )￨c ]￨c )￨c ==￨c '/'￨c )￨j {￨j extraResourceFolderFilters￨e [￨e (￨e --￨e folderCount￨e )￨e ]￨e =￨e new￨e String￨e (￨e f￨e ,￨e 0￨e ,￨e (￨e (￨e f￨e .￨e length￨e )￨e -￨e 1￨e )￨e )￨e ;￨e }￨j else￨j {￨j extraResourceFileFilters￨e [￨e (￨e --￨e fileCount￨e )￨e ]￨e =￨e f￨e ;￨e }￨j }￨l }￨j }￨j return￨e kind￨e ;￨e }￨f private￨f boolean￨f isClasspathBroken￨f (￨f IClasspathEntry￨f [￨f ]￨f classpath￨f ,￨f IProject￨f p￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f isWorthBuilding￨f (￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f void￨f mustPropagateStructuralChanges￨f (￨f )￨f {￨f }￨f private￨f void￨f printLocations￨f (￨f ClasspathLocation￨p [￨p ]￨p newLocations￨p ,￨p ClasspathLocation￨p [￨p ]￨p oldLocations￨p )￨f {￨f }￨f private￨f void￨f recordNewState￨f (￨f State￨p state￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d MemoryLeakFixesTest￨d extends￨d BaseJDBCTestCase￨d {￨d public￨f MemoryLeakFixesTest￨f (￨f String￨p name￨p )￨f {￨f }￨f private￨e static￨e long￨e HALFMB￨e =￨e 500￨e *￨e 1024￨e ;￨e private￨e static￨e int￨e numRows￨e =￨e 100￨e ;￨e private￨e static￨e int￨e numPreparedStmts￨e =￨e 2000￨e ;￨e public￨f void￨f testPrepStmtD210￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReExecuteD557￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testResultSetgcD3316￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRepeatedDatabaseCreationWithAutoStats￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f final￨e String￨e DB_NAME￨e =￨e "derby-memory-test"￨e ;￨e final￨e File￨e DB_DIR￨e =￨e new￨e File￨e (￨e "system"￨e ,￨e DB_NAME￨e )￨e ;￨e DataSource￨e ds￨e =￨e JDBCDataSource￨e .￨e getDataSource￨e (￨e DB_NAME￨e )￨e ;￨e int￨e iter￨e =￨e 0￨e ;￨e while￨l (￨l iter￨c <￨c 50￨c )￨l {￨l <START_BUG>￨b traceit￨b (￨b (￨b "--<seq2seq4repair_space>"￨b +￨b (￨b iter￨b ++￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j PrivilegedFileOpsForTests￨c .￨c exists￨c (￨c DB_DIR￨c )￨c )￨j {￨j assertDirectoryDeleted￨e (￨e DB_DIR￨e )￨e ;￨e }￨j JDBCDataSource￨e .￨e setBeanProperty￨e (￨e ds￨e ,￨e "createDatabase"￨e ,￨e "create"￨e )￨e ;￨e Connection￨e conn￨e =￨e ds￨e .￨e getConnection￨e (￨e )￨e ;￨e JDBCDataSource￨e .￨e clearStringBeanProperty￨e (￨e ds￨e ,￨e "createDatabase"￨e )￨e ;￨e Statement￨e s￨e =￨e conn￨e .￨e createStatement￨e (￨e )￨e ;￨e s￨e .￨e executeUpdate￨e (￨e "CREATE<seq2seq4repair_space>TABLE<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT<seq2seq4repair_space>INT)"￨e )￨e ;￨e s￨e .￨e executeUpdate￨e (￨e "CREATE<seq2seq4repair_space>INDEX<seq2seq4repair_space>NDX<seq2seq4repair_space>ON<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT)"￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 500￨c ;￨c i￨c ++￨c )￨l {￨l s￨e .￨e executeUpdate￨e (￨e (￨e (￨e "INSERT<seq2seq4repair_space>INTO<seq2seq4repair_space>TEST<seq2seq4repair_space>VALUES("￨e +￨e i￨e )￨e +￨e ")"￨e )￨e )￨e ;￨e s￨e .￨e executeQuery￨e (￨e (￨e "SELECT<seq2seq4repair_space>*<seq2seq4repair_space>FROM<seq2seq4repair_space>TEST<seq2seq4repair_space>WHERE<seq2seq4repair_space>CINT="￨e +￨e i￨e )￨e )￨e .￨e close￨e (￨e )￨e ;￨e }￨l s￨e .￨e close￨e (￨e )￨e ;￨e conn￨e .￨e close￨e (￨e )￨e ;￨e JDBCDataSource￨e .￨e setBeanProperty￨e (￨e ds￨e ,￨e "shutdownDatabase"￨e ,￨e "shutdown"￨e )￨e ;￨e try￨f (￨f )￨f {￨f ds￨e .￨e getConnection￨e (￨e )￨e ;￨e fail￨e (￨e "Expected<seq2seq4repair_space>shutdown<seq2seq4repair_space>exception"￨e )￨e ;￨e }￨f catch￨f (￨f SQLException￨p e￨p )￨f {￨f assertSQLState￨e (￨e "08006"￨e ,￨e e￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f JDBCDataSource￨e .￨e clearStringBeanProperty￨e (￨e ds￨e ,￨e "shutdownDatabase"￨e )￨e ;￨e }￨f if￨j (￨j isPhoneME￨c (￨c )￨c )￨j {￨j Runtime￨e .￨e getRuntime￨e (￨e )￨e .￨e gc￨e (￨e )￨e ;￨e }￨j }￨l assertTrue￨e (￨e PrivilegedFileOpsForTests￨e .￨e exists￨e (￨e DB_DIR￨e )￨e )￨e ;￨e }￨f private￨f static￨f void￨f runFinalizerIfNeeded￨f (￨f )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f }￨d
class￨d Client￨d implements￨d IConnection￨d {￨d private￨d static￨d final￨d Logger￨d LOG￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d Client￨d .￨d class￨d )￨d ;￨d private￨d final￨d int￨d max_retries￨d ;￨d private￨d final￨d int￨d base_sleep_ms￨d ;￨d private￨d final￨d int￨d max_sleep_ms￨d ;￨d private￨d LinkedBlockingQueue￨d <￨d Object￨d >￨d message_queue￨d ;￨d private￨d AtomicReference￨d <￨d Channel￨d >￨d channelRef￨d ;￨d private￨d final￨d ClientBootstrap￨d bootstrap￨d ;￨d private￨d InetSocketAddress￨d remote_addr￨d ;￨d private￨d AtomicInteger￨d retries￨d ;￨d private￨d final￨d Random￨d random￨d =￨d new￨d Random￨d (￨d )￨d ;￨d private￨d final￨d ChannelFactory￨d factory￨d ;￨d private￨d AtomicBoolean￨d ready_to_release_resource￨d ;￨d private￨d final￨d int￨d buffer_size￨d ;￨d private￨d final￨d AtomicBoolean￨d being_closed￨d ;￨d @￨d SuppressWarnings￨d (￨d "rawtypes"￨d )￨d Client￨d (￨d Map￨d storm_conf￨d ,￨d String￨d host￨d ,￨d int￨d port￨d )￨d {￨d }￨d void￨f reconnect￨f (￨f )￨f {￨f }￨f private￨f int￨f getSleepTimeMs￨f (￨f )￨f {￨f }￨f public￨f void￨f send￨f (￨f int￨p task￨p ,￨p byte￨p [￨p ]￨p message￨p )￨f {￨f }￨f ArrayList￨f <￨f Object￨f >￨f takeMessages￨f (￨f )￨f throws￨f InterruptedException￨f (￨f )￨f {￨f int￨e size￨e =￨e 0￨e ;￨e ArrayList￨e <￨e Object￨e >￨e requests￨e =￨e new￨e ArrayList￨e <￨e Object￨e >￨e (￨e )￨e ;￨e requests￨e .￨e add￨e (￨e message_queue￨e .￨e take￨e (￨e )￨e )￨e ;￨e for￨l (￨l Object￨c msg￨c =￨c message_queue￨c .￨c poll￨c (￨c )￨c ;￨c msg￨c !=￨c null￨c ;￨c msg￨c =￨c message_queue￨c .￨c poll￨c (￨c )￨c )￨l {￨l requests￨e .￨e add￨e (￨e msg￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b msg￨b .￨b equals￨b (￨b ControlMessage￨b .￨b closeMessage￨b (￨b )￨b )￨b )￨b <END_BUG>￨b break￨e ;￨e TaskMessage￨e taskMsg￨e =￨e (￨e (￨e TaskMessage￨e )￨e (￨e msg￨e )￨e )￨e ;￨e size￨e +=￨e (￨e (￨e taskMsg￨e .￨e message￨e (￨e )￨e )￨e !=￨e null￨e ?￨e taskMsg￨e .￨e message￨e (￨e )￨e .￨e length￨e :￨e 0￨e )￨e +￨e 6￨e ;￨e if￨j (￨j size￨c >￨c (￨c buffer_size￨c )￨c )￨j {￨j break￨e ;￨e }￨j }￨l return￨e requests￨e ;￨e }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f void￨f close_n_release￨f (￨f )￨f {￨f }￨f public￨f TaskMessage￨f recv￨f (￨f int￨p flags￨p )￨f {￨f }￨f void￨f setChannel￨f (￨f Channel￨p channel￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestFrenchAnalyzer￨d extends￨d BaseTokenStreamTestCase￨d {￨d public￨f void￨f testAnalyzer￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReusableTokenStream￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testExclusionTableViaCtor￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testElision￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testStopwordsCasing￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomStrings￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b new￨b FrenchAnalyzer￨b (￨b TEST_VERSION_CURRENT￨b )￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testAccentInsensitive￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ToolBar￨d extends￨d Composite￨d {￨d ToolItem￨e lastFocus￨e ;￨e ImageList￨e imageList￨e ;￨e public￨f ToolBar￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f createHandle￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Point￨f computeSize￨f (￨f int￨p wHint￨p ,￨p int￨p hHint￨p ,￨p boolean￨p changed￨p )￨f {￨f }￨f int￨f eventHandle￨f (￨f )￨f {￨f }￨f void￨f fixChildren￨f (￨f Shell￨p newShell￨p ,￨p Shell￨p oldShell￨p ,￨p Decorations￨p newDecorations￨p ,￨p Decorations￨p oldDecorations￨p ,￨p Menu￨p [￨p ]￨p menus￨p )￨f {￨f }￨f boolean￨f forceFocus￨f (￨f int￨p focusHandle￨p )￨f {￨f }￨f public￨f ToolItem￨f getItem￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f ToolItem￨f getItem￨f (￨f Point￨p point￨p )￨f {￨f }￨f public￨f int￨f getItemCount￨f (￨f )￨f {￨f }￨f public￨f ToolItem￨f [￨f ]￨f getItems￨f (￨f )￨f {￨f }￨f public￨f int￨f getRowCount￨f (￨f )￨f {￨f }￨f int￨f gtk_key_press_event￨f (￨f int￨p widget￨p ,￨p int￨p eventPtr￨p )￨f {￨f }￨f boolean￨f hasFocus￨f (￨f )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f ToolItem￨p item￨p )￨f {￨f }￨f boolean￨f mnemonicHit￨f (￨f char￨p key￨p )￨f {￨f }￨f boolean￨f mnemonicMatch￨f (￨f char￨p key￨p )￨f {￨f }￨f void￨f relayout￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f ToolItem￨e [￨e ]￨e items￨e =￨e getItems￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c items￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l ToolItem￨e item￨e =￨e items￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c item￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c item￨c .￨c isDisposed￨c (￨c )￨c )￨c )￨c )￨j {￨j <START_BUG>￨b item￨b .￨b releaseChildren￨b (￨b false￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l super￨e .￨e releaseChildren￨e (￨e destroy￨e )￨e ;￨e }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f void￨f removeControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f int￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p resize￨p )￨f {￨f }￨f void￨f setFontDescription￨f (￨f int￨p font￨p )￨f {￨f }￨f void￨f setForegroundColor￨f (￨f GdkColor￨p color￨p )￨f {￨f }￨f public￨f void￨f setToolTipText￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d class￨d Snippet6￨d {￨d public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f Display￨e display￨e =￨e new￨e Display￨e (￨e )￨e ;￨e final￨e Shell￨e shell￨e =￨e new￨e Shell￨e (￨e display￨e )￨e ;￨e shell￨e .￨e setLayout￨e (￨e new￨e GridLayout￨e (￨e )￨e )￨e ;￨e final￨e Composite￨e c￨e =￨e new￨e Composite￨e (￨e shell￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e GridLayout￨e layout￨e =￨e new￨e GridLayout￨e (￨e )￨e ;￨e layout￨e .￨e numColumns￨e =￨e 3￨e ;￨e c￨e .￨e setLayout￨e (￨e layout￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 10￨c ;￨c i￨c ++￨c )￨l {￨l Button￨e b￨e =￨e new￨e Button￨e (￨e c￨e ,￨e SWT￨e .￨e PUSH￨e )￨e ;￨e b￨e .￨e setText￨e (￨e (￨e "Button<seq2seq4repair_space>"￨e +￨e i￨e )￨e )￨e ;￨e }￨l Button￨e b￨e =￨e new￨e Button￨e (￨e shell￨e ,￨e SWT￨e .￨e PUSH￨e )￨e ;￨e b￨e .￨e setText￨e (￨e "add<seq2seq4repair_space>a<seq2seq4repair_space>new<seq2seq4repair_space>button<seq2seq4repair_space>at<seq2seq4repair_space>row<seq2seq4repair_space>2<seq2seq4repair_space>column<seq2seq4repair_space>1"￨e )￨e ;￨e final￨e int￨e [￨e ]￨e index￨e =￨e new￨e int￨e [￨e 1￨e ]￨e ;￨e b￨f .￨f addListener￨f (￨f Selection￨f ,￨f new￨f Listener￨f (￨f )￨f {￨f public￨f void￨f handleEvent￨f (￨f Event￨p e￨p )￨f {￨f Button￨e b￨e =￨e new￨e Button￨e (￨e c￨e ,￨e SWT￨e .￨e PUSH￨e )￨e ;￨e b￨e .￨e setText￨e (￨e (￨e "Special<seq2seq4repair_space>"￨e +￨e (￨e index￨e [￨e 0￨e ]￨e )￨e )￨e )￨e ;￨e (￨e index￨e [￨e 0￨e ]￨e )￨e ++￨e ;￨e Control￨e [￨e ]￨e children￨e =￨e c￨e .￨e getChildren￨e (￨e )￨e ;￨e b￨e .￨e moveAbove￨e (￨e children￨e [￨e 3￨e ]￨e )￨e ;￨e <START_BUG>￨b shell￨b .￨b layout￨b (￨b true￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f )￨e ;￨e shell￨e .￨e open￨e (￨e )￨e ;￨e while￨l (￨l !￨c (￨c shell￨c .￨c isDisposed￨c (￨c )￨c )￨c )￨l {￨l if￨j (￨j !￨c (￨c display￨c .￨c readAndDispatch￨c (￨c )￨c )￨c )￨j {￨j display￨e .￨e sleep￨e (￨e )￨e ;￨e }￨j }￨l display￨e .￨e dispose￨e (￨e )￨e ;￨e }￨f }￨d
class￨d CoolBarTab￨d extends￨d Tab￨d {￨d CoolBar￨e coolBar￨e ;￨e CoolItem￨e pushItem￨e ;￨e CoolItem￨e dropDownItem￨e ;￨e CoolItem￨e radioItem￨e ;￨e CoolItem￨e checkItem￨e ;￨e CoolItem￨e textItem￨e ;￨e Group￨e coolBarGroup￨e ;￨e Button￨e horizontalButton￨e ;￨e Button￨e verticalButton￨e ;￨e Button￨e dropDownButton￨e ;￨e Button￨e flatButton￨e ;￨e Button￨e lockedButton￨e ;￨e Point￨e [￨e ]￨e sizes￨e ;￨e int￨e [￨e ]￨e wrapIndices￨e ;￨e int￨e [￨e ]￨e order￨e ;￨e CoolBarTab￨f (￨f ControlExample￨p instance￨p )￨f {￨f }￨f void￨f createOtherGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleGroup￨f (￨f )￨f {￨f super￨e .￨e createExampleGroup￨e (￨e )￨e ;￨e coolBarGroup￨e =￨e new￨e Group￨e (￨e exampleGroup￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e coolBarGroup￨e .￨e setLayout￨e (￨e new￨e GridLayout￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b coolBarGroup￨b .￨b setLayoutData￨b (￨b new￨b GridData￨b (￨b (￨b (￨b (￨b GridData￨b .￨b GRAB_HORIZONTAL￨b )￨b |￨b (￨b GridData￨b .￨b HORIZONTAL_ALIGN_FILL￨b )￨b )￨b |￨b (￨b GridData￨b .￨b VERTICAL_ALIGN_FILL￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b coolBarGroup￨e .￨e setText￨e (￨e "CoolBar"￨e )￨e ;￨e }￨f void￨f createExampleWidgets￨f (￨f )￨f {￨f }￨f void￨f createStyleGroup￨f (￨f )￨f {￨f }￨f void￨f disposeExampleWidgets￨f (￨f )￨f {￨f }￨f Item￨f [￨f ]￨f getExampleWidgetItems￨f (￨f )￨f {￨f }￨f Control￨f [￨f ]￨f getExampleWidgets￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f getMethodNames￨f (￨f )￨f {￨f }￨f String￨f getTabText￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetState￨f (￨f )￨f {￨f }￨f void￨f setWidgetLocked￨f (￨f )￨f {￨f }￨f class￨d DropDownSelectionListener￨d extends￨d SelectionAdapter￨d {￨d private￨e Menu￨e menu￨e =￨e null￨e ;￨e private￨e boolean￨e visible￨e =￨e false￨e ;￨e public￨f void￨f widgetSelected￨f (￨f SelectionEvent￨p event￨p )￨f {￨f }￨f private￨f void￨f setMenuVisible￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f }￨d class￨d CoolItemSelectionListener￨d extends￨d SelectionAdapter￨d {￨d private￨e Menu￨e menu￨e =￨e null￨e ;￨e public￨f void￨f widgetSelected￨f (￨f SelectionEvent￨p event￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d NewEditorAction￨d extends￨d ActiveEditorAction￨d {￨d public￨f NewEditorAction￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f WorkbenchPage￨e page￨e =￨e (￨e (￨e WorkbenchPage￨e )￨e (￨e getActivePage￨e (￨e )￨e )￨e )￨e ;￨e IEditorPart￨e editor￨e =￨e getActiveEditor￨e (￨e )￨e ;￨e if￨j (￨j (￨c page￨c ==￨c null￨c )￨c ||￨c (￨c editor￨c ==￨c null￨c )￨c )￨j {￨j return￨e ;￨e }￨j String￨e editorId￨e =￨e editor￨e .￨e getSite￨e (￨e )￨e .￨e getId￨e (￨e )￨e ;￨e if￨j (￨j editorId￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b page￨b .￨b openEditor￨b (￨b editor￨b .￨b getEditorInput￨b (￨b )￨b ,￨b editorId￨b ,￨b true￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f PartInitException￨p e￨p )￨f {￨f DialogUtil￨e .￨e openError￨e (￨e page￨e .￨e getWorkbenchWindow￨e (￨e )￨e .￨e getShell￨e (￨e )￨e ,￨e Error￨e ,￨e e￨e .￨e getMessage￨e (￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d ChatRoomBot￨d implements￨d IIMMessageListener￨d {￨d protected￨e IChatRoomBotEntry￨e bot￨e ;￨e protected￨e IContainer￨e container￨e ;￨e protected￨e ID￨e targetID￨e ;￨e protected￨e IChatRoomContainer￨e roomContainer￨e ;￨e protected￨e ID￨e roomID￨e ;￨e public￨f ChatRoomBot￨f (￨f IChatRoomBotEntry￨p bot￨p )￨f {￨f }￨f protected￨f void￨f fireInitBot￨f (￨f )￨f {￨f }￨f protected￨f void￨f firePreConnect￨f (￨f )￨f {￨f }￨f protected￨f void￨f firePreRoomConnect￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f connect￨f (￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f fireInitBot￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f Namespace￨e namespace￨e =￨e null￨e ;￨e if￨j (￨j (￨c container￨c )￨c ==￨c null￨c )￨j {￨j container￨e =￨e ContainerFactory￨e .￨e getDefault￨e (￨e )￨e .￨e createContainer￨e (￨e bot￨e .￨e getContainerFactoryName￨e (￨e )￨e )￨e ;￨e namespace￨e =￨e container￨e .￨e getConnectNamespace￨e (￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e org￨e .￨e eclipse￨e .￨e ecf￨e .￨e core￨e .￨e ContainerConnectException￨e (￨e Messages￨e .￨e DefaultChatRoomBot_EXCEPTION_ALREADY_CONNECTED￨e )￨e ;￨e }￨j targetID￨e =￨e IDFactory￨e .￨e getDefault￨e (￨e )￨e .￨e createID￨e (￨e namespace￨e ,￨e bot￨e .￨e getConnectID￨e (￨e )￨e )￨e ;￨e IChatRoomManager￨e manager￨e =￨e (￨e (￨e IChatRoomManager￨e )￨e (￨e container￨e .￨e getAdapter￨e (￨e IChatRoomManager￨e .￨e class￨e )￨e )￨e )￨e ;￨e if￨j (￨j manager￨c ==￨c null￨c )￨j {￨j throw￨e new￨e ECFException￨e (￨e Messages￨e .￨e DefaultChatRoomBot_EXCEPTION_NO_CHAT_ROOM￨e )￨e ;￨e }￨j firePreConnect￨e (￨e )￨e ;￨e String￨e password￨e =￨e bot￨e .￨e getPassword￨e (￨e )￨e ;￨e IConnectContext￨e context￨e =￨e (￨e password￨e ==￨e null￨e )￨e ?￨e null￨e :￨e ConnectContextFactory￨e .￨e createPasswordConnectContext￨e (￨e password￨e )￨e ;￨e container￨e .￨e connect￨e (￨e targetID￨e ,￨e context￨e )￨e ;￨e IChatRoomInfo￨e room￨e =￨e manager￨e .￨e getChatRoomInfo￨e (￨e bot￨e .￨e getChatRoom￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b IChatRoomContainer￨b roomContainer￨b =￨b room￨b .￨b createChatRoomContainer￨b (￨b )￨b ;￨b <END_BUG>￨b roomID￨e =￨e room￨e .￨e getRoomID￨e (￨e )￨e ;￨e firePreRoomConnect￨e (￨e )￨e ;￨e roomContainer￨e .￨e addMessageListener￨e (￨e this￨e )￨e ;￨e String￨e roomPassword￨e =￨e bot￨e .￨e getChatRoomPassword￨e (￨e )￨e ;￨e IConnectContext￨e roomContext￨e =￨e (￨e roomPassword￨e ==￨e null￨e )￨e ?￨e null￨e :￨e ConnectContextFactory￨e .￨e createPasswordConnectContext￨e (￨e roomPassword￨e )￨e ;￨e roomContainer￨e .￨e connect￨e (￨e roomID￨e ,￨e roomContext￨e )￨e ;￨e }￨f catch￨f (￨f ECFException￨p e￨p )￨f {￨f if￨j (￨j (￨c container￨c )￨c !=￨c null￨c )￨j {￨j if￨j (￨j (￨c container￨c .￨c getConnectedID￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j container￨e .￨e disconnect￨e (￨e )￨e ;￨e }￨j container￨e .￨e dispose￨e (￨e )￨e ;￨e }￨j container￨e =￨e null￨e ;￨e throw￨e e￨e ;￨e }￨f }￨f public￨f void￨f handleMessageEvent￨f (￨f IIMMessageEvent￨p event￨p )￨f {￨f }￨f }￨d
final￨d class￨d JVMOptionAddHandler￨d implements￨d OperationStepHandler￨d ,￨d DescriptionProvider￨d {￨d static￨e final￨e String￨e OPERATION_NAME￨e =￨e "add-jvm-option"￨e ;￨e static￨e final￨e JVMOptionAddHandler￨e INSTANCE￨e =￨e new￨e JVMOptionAddHandler￨e (￨e )￨e ;￨e private￨e final￨e ParameterValidator￨e validator￨e =￨e new￨e StringLengthValidator￨e (￨e 1￨e )￨e ;￨e @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f validator￨e .￨e validateParameter￨e (￨e JVM_OPTION￨e ,￨e operation￨e .￨e get￨e (￨e JVM_OPTION￨e )￨e )￨e ;￨e final￨e Resource￨e resource￨e =￨e context￨e .￨e readResourceForUpdate￨e (￨e EMPTY_ADDRESS￨e )￨e ;￨e final￨e ModelNode￨e model￨e =￨e resource￨e .￨e getModel￨e (￨e )￨e ;￨e final￨e ModelNode￨e option￨e =￨e operation￨e .￨e require￨e (￨e JVM_OPTION￨e )￨e ;￨e ModelNode￨e jvmOptions￨e =￨e model￨e .￨e get￨e (￨e JVM_OPTIONS￨e )￨e ;￨e if￨j (￨j jvmOptions￨c .￨c isDefined￨c (￨c )￨c )￨j {￨j for￨l (￨l ModelNode￨c optionNode￨c :￨c jvmOptions￨c .￨c asList￨c (￨c )￨c )￨l {￨l if￨j (￨j optionNode￨c .￨c equals￨c (￨c option￨c )￨c )￨j {￨j throw￨e HostControllerMessages￨e .￨e MESSAGES￨e .￨e jvmOptionAlreadyExists￨e (￨e option￨e .￨e asString￨e (￨e )￨e )￨e ;￨e }￨j }￨l }￨j model￨e .￨e get￨e (￨e JVM_OPTIONS￨e )￨e .￨e add￨e (￨e option￨e )￨e ;￨e <START_BUG>￨b context￨b .￨b completeStep￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f }￨d
public￨d class￨d TreeColumn￨d extends￨d Item￨d {￨d Tree￨e parent￨e ;￨e boolean￨e resizable￨e ;￨e boolean￨e moveable￨e ;￨e public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f void￨f addControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f public￨f int￨f getAlignment￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMoveable￨f (￨f )￨f {￨f }￨f String￨f getNameText￨f (￨f )￨f {￨f }￨f public￨f Tree￨f getParent￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getResizable￨f (￨f )￨f {￨f }￨f public￨f int￨f getWidth￨f (￨f )￨f {￨f }￨f public￨f void￨f pack￨f (￨f )￨f {￨f }￨f void￨f releaseChild￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f super￨e .￨e releaseWidget￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b parent￨b )￨b !=￨b null￨b )￨b &&￨b (￨b (￨b parent￨b .￨b sortColumn￨b )￨b ==￨b (￨b this￨b )￨b )￨b )￨b {￨b <END_BUG>￨b parent￨e .￨e sortColumn￨e =￨e null￨e ;￨e }￨e parent￨e =￨e null￨e ;￨e }￨f public￨f void￨f removeControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setAlignment￨f (￨f int￨p alignment￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f void￨f setImage￨f (￨f Image￨p image￨p ,￨p boolean￨p sort￨p ,￨p boolean￨p right￨p )￨f {￨f }￨f public￨f void￨f setMoveable￨f (￨f boolean￨p moveable￨p )￨f {￨f }￨f public￨f void￨f setResizable￨f (￨f boolean￨p resizable￨p )￨f {￨f }￨f void￨f setSortDirection￨f (￨f int￨p direction￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setWidth￨f (￨f int￨p width￨p )￨f {￨f }￨f }￨d
public￨d {￨d @￨f Override￨f protected￨f AccessLevel￨f initialValue￨f (￨f )￨f {￨f }￨f }￨d ;￨e private￨e final￨e StorageService￨e storageService￨e ;￨e public￨f CassandraServer￨f (￨f )￨f {￨f }￨f protected￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f ColumnFamily￨f >￨f readColumnFamily￨f (￨f List￨f <￨f ReadCommand￨f >￨f commands￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f Column￨f >￨f thriftifySubColumns￨f (￨f Collection￨p <￨p IColumn￨p >￨p columns￨p )￨f {￨f }￨f public￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f thriftifyColumns￨f (￨f Collection￨p <￨p IColumn￨p >￨p columns￨p ,￨p boolean￨p reverseOrder￨p )￨f {￨f }￨f private￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f thriftifySuperColumns￨f (￨f Collection￨p <￨p IColumn￨p >￨p columns￨p ,￨p boolean￨p reverseOrder￨p )￨f {￨f }￨f private￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f >￨f getSlice￨f (￨f List￨f <￨f ReadCommand￨f >￨f commands￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f private￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f thriftifyColumnFamily￨f (￨f ColumnFamily￨p cf￨p ,￨p boolean￨p subcolumnsOnly￨p ,￨p boolean￨p reverseOrder￨p )￨f {￨f }￨f public￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f get_slice￨f (￨f String￨f keyspace￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f >￨f multiget_slice￨f (￨f String￨f keyspace￨f ,￨f List￨f <￨f byte￨f [￨f ]￨f >￨f keys￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f >￨f multigetSliceInternal￨f (￨f String￨f keyspace￨f ,￨f List￨f <￨f byte￨f [￨f ]￨f >￨f keys￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f ColumnOrSuperColumn￨f get￨f (￨f String￨f table￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f ColumnPath￨f column_path￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f NotFoundException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f ColumnOrSuperColumn￨f >￨f multiget￨f (￨f String￨f table￨f ,￨f List￨f <￨f byte￨f [￨f ]￨f >￨f keys￨f ,￨f ColumnPath￨f column_path￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f ColumnOrSuperColumn￨f >￨f multigetInternal￨f (￨f String￨f table￨f ,￨f List￨f <￨f byte￨f [￨f ]￨f >￨f keys￨f ,￨f ColumnPath￨f column_path￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f int￨f get_count￨f (￨f String￨f table￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f ColumnParent￨f column_parent￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f void￨f insert￨f (￨f String￨f table￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f ColumnParent￨f column_parent￨f ,￨f Column￨f column￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f void￨f batch_insert￨f (￨f String￨f keyspace￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f Map￨f <￨f String￨f ,￨f List￨f <￨f ColumnOrSuperColumn￨f >￨f >￨f cfmap￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f void￨f batch_mutate￨f (￨f String￨f keyspace￨f ,￨f Map￨f <￨f byte￨f [￨f ]￨f ,￨f Map￨f <￨f String￨f ,￨f List￨f <￨f Mutation￨f >￨f >￨f >￨f mutation_map￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f String￨f table￨f ,￨f byte￨f [￨f ]￨f key￨f ,￨f ColumnPath￨f column_path￨f ,￨f long￨f timestamp￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f private￨f void￨f doInsert￨f (￨f ConsistencyLevel￨f consistency_level￨f ,￨f RowMutation￨f rm￨f )￨f throws￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f Map￨f <￨f String￨f ,￨f Map￨f <￨f String￨f ,￨f String￨f >￨f >￨f describe_keyspace￨f (￨f String￨f table￨f )￨f throws￨f NotFoundException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f KeySlice￨f >￨f get_range_slice￨f (￨f String￨f keyspace￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f byte￨f [￨f ]￨f start_key￨f ,￨f byte￨f [￨f ]￨f finish_key￨f ,￨f int￨f maxRows￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f KeySlice￨f >￨f get_range_slices￨f (￨f String￨f keyspace￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f KeyRange￨f range￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f private￨f List￨f <￨f KeySlice￨f >￨f getRangeSlicesInternal￨f (￨f String￨f keyspace￨f ,￨f ColumnParent￨f column_parent￨f ,￨f SlicePredicate￨f predicate￨f ,￨f KeyRange￨f range￨f ,￨f ConsistencyLevel￨f consistency_level￨f )￨f throws￨f InvalidRequestException￨f ,￨f TimedOutException￨f ,￨f UnavailableException￨f (￨f )￨f {￨f }￨f public￨f Set￨f <￨f String￨f >￨f describe_keyspaces￨f (￨f )￨f throws￨f TException￨f (￨f )￨f {￨f }￨f public￨f String￨f describe_cluster_name￨f (￨f )￨f throws￨f TException￨f (￨f )￨f {￨f }￨f public￨f String￨f describe_version￨f (￨f )￨f throws￨f TException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f TokenRange￨f >￨f describe_ring￨f (￨f String￨p keyspace￨p )￨f {￨f List￨e <￨e TokenRange￨e >￨e ranges￨e =￨e new￨e ArrayList￨e <￨e TokenRange￨e >￨e (￨e )￨e ;￨e <START_BUG>￨b for￨b (￨b Map￨b .￨b Entry￨b <￨b Range￨b ,￨b List￨b <￨b String￨b >￨b >￨b entry￨b :￨b instance￨b .￨b getRangeToEndPointMap￨b (￨b keyspace￨b )￨b .￨b entrySet￨b (￨b )￨b )￨b {￨b <END_BUG>￨b Range￨e range￨e =￨e entry￨e .￨e getKey￨e (￨e )￨e ;￨e List￨e <￨e String￨e >￨e endpoints￨e =￨e entry￨e .￨e getValue￨e (￨e )￨e ;￨e ranges￨e .￨e add￨e (￨e new￨e TokenRange￨e (￨e range￨e .￨e left￨e .￨e toString￨e (￨e )￨e ,￨e range￨e .￨e right￨e .￨e toString￨e (￨e )￨e ,￨e endpoints￨e )￨e )￨e ;￨e }￨e return￨e ranges￨e ;￨e }￨f public￨f List￨f <￨f String￨f >￨f describe_splits￨f (￨f String￨f start_token￨f ,￨f String￨f end_token￨f ,￨f int￨f keys_per_split￨f )￨f throws￨f TException￨f (￨f )￨f {￨f }￨f public￨f AccessLevel￨f login￨f (￨f String￨f keyspace￨f ,￨f AuthenticationRequest￨f auth_request￨f )￨f throws￨f AuthenticationException￨f ,￨f AuthorizationException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f protected￨f void￨f checkLoginAuthorized￨f (￨f AccessLevel￨f level￨f )￨f throws￨f InvalidRequestException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_add_column_family￨f (￨f CfDef￨f cf_def￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_drop_column_family￨f (￨f String￨f keyspace￨f ,￨f String￨f column_family￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_rename_column_family￨f (￨f String￨f keyspace￨f ,￨f String￨f old_name￨f ,￨f String￨f new_name￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_add_keyspace￨f (￨f KsDef￨f ks_def￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_drop_keyspace￨f (￨f String￨f keyspace￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f public￨f void￨f system_rename_keyspace￨f (￨f String￨f old_name￨f ,￨f String￨f new_name￨f )￨f throws￨f InvalidRequestException￨f ,￨f TException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SaveService￨d {￨d private￨e static￨e XStream￨e saver￨e =￨e new￨e XStream￨e (￨e )￨e ;￨e private￨e static￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e static￨e String￨e version￨e =￨e "1.0"￨e ;￨e static￨e String￨e propertiesVersion￨e =￨e ""￨e ;￨e private￨e static￨e final￨e String￨e PROPVERSION￨e =￨e "1.3"￨e ;￨e private￨f static￨f void￨f makeAlias￨f (￨f String￨p alias￨p ,￨p String￨p clazz￨p )￨f {￨f }￨f private￨f static￨f void￨f initProps￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f saveTree￨f (￨f HashTree￨f tree￨f ,￨f Writer￨f writer￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f static￨e boolean￨e versionsOK￨e =￨e true￨e ;￨e private￨e static￨e final￨e String￨e REVPFX￨e =￨e "$Revision:<seq2seq4repair_space>"￨e ;￨e private￨e static￨e final￨e String￨e REVSFX￨e =￨e "<seq2seq4repair_space>$"￨e ;￨e private￨f static￨f String￨f extractVersion￨f (￨f String￨p rev￨p )￨f {￨f }￨f private￨f static￨f void￨f checkVersion￨f (￨f Class￨p clazz￨p ,￨p String￨p expected￨p )￨f {￨f }￨f private￨f static￨f void￨f checkVersions￨f (￨f )￨f {￨f SaveService￨e .￨e versionsOK￨e =￨e true￨e ;￨e SaveService￨d .￨d checkVersion￨d (￨d BooleanPropertyConverter￨d .￨d class￨d ,￨d "1.4"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d HashTreeConverter￨d .￨d class￨d ,￨d "1.2"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d IntegerPropertyConverter￨d .￨d class￨d ,￨d "1.3"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d LongPropertyConverter￨d .￨d class￨d ,￨d "1.3"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d MultiPropertyConverter￨d .￨d class￨d ,￨d "1.3"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d SampleResultConverter￨d .￨d class￨d ,￨d "1.2"￨d )￨d ;￨d <START_BUG>￨d SaveService￨d .￨d checkVersion￨d (￨d StringPropertyConverter￨d .￨d class￨d ,￨d "1.5"￨d )￨d ;￨d <END_BUG>￨d SaveService￨d .￨d checkVersion￨d (￨d TestElementConverter￨d .￨d class￨d ,￨d "1.2"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d TestElementPropertyConverter￨d .￨d class￨d ,￨d "1.3"￨d )￨d ;￨d SaveService￨d .￨d checkVersion￨d (￨d ScriptWrapperConverter￨d .￨d class￨d ,￨d "1.2"￨d )￨d ;￨d if￨d (￨d !￨d (￨d SaveService￨d .￨d PROPVERSION￨d .￨d equalsIgnoreCase￨d (￨d SaveService￨d .￨d propertiesVersion￨d )￨d )￨d )￨d {￨d SaveService￨e .￨e log￨e .￨e warn￨e (￨e (￨e (￨e (￨e "Property<seq2seq4repair_space>file<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>"￨e +￨e (￨e SaveService￨e .￨e PROPVERSION￨e )￨e )￨e +￨e ",<seq2seq4repair_space>found<seq2seq4repair_space>"￨e )￨e +￨e (￨e SaveService￨e .￨e propertiesVersion￨e )￨e )￨e )￨e ;￨e }￨d if￨j (￨j SaveService￨c .￨c versionsOK￨c )￨j {￨j SaveService￨e .￨e log￨e .￨e info￨e (￨e "All<seq2seq4repair_space>converter<seq2seq4repair_space>versions<seq2seq4repair_space>present<seq2seq4repair_space>and<seq2seq4repair_space>correct"￨e )￨e ;￨e }￨j }￨f public￨f static￨f HashTree￨f loadTree￨f (￨f InputStream￨f reader￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d Test￨d extends￨d JMeterTestCase￨d {￨d public￨f Test￨f (￨f )￨f {￨f }￨f public￨f Test￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f testVersions￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d final￨d class￨d Logging￨d {￨d private￨e static￨e final￨e Logger￨e LOG￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.columba"￨e )￨e ;￨e private￨e static￨e ConsoleHandler￨e consoleHandler￨e ;￨e public￨e static￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e private￨f Logging￨f (￨f )￨f {￨f }￨f private￨f static￨f boolean￨f userHasDefinedLogging￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f createDefaultHandler￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c Logging￨c .￨c userHasDefinedLogging￨c (￨c )￨c )￨c )￨j {￨j Logging￨e .￨e LOG￨e .￨e setUseParentHandlers￨e (￨e false￨e )￨e ;￨e Logging￨e .￨e consoleHandler￨e =￨e new￨e ConsoleHandler￨e (￨e )￨e ;￨e Logging￨e .￨e consoleHandler￨e .￨e setFormatter￨e (￨e new￨e OneLineFormatter￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b Logging￨b .￨b consoleHandler￨b .￨b setLevel￨b (￨b Level￨b .￨b ALL￨b )￨b ;￨b <END_BUG>￨b Logging￨e .￨e LOG￨e .￨e addHandler￨e (￨e Logging￨e .￨e consoleHandler￨e )￨e ;￨e }￨j }￨f public￨f static￨f void￨f setDebugging￨f (￨f boolean￨p debug￨p )￨f {￨f }￨f public￨f static￨f void￨f createDefaultFileHandler￨f (￨f File￨p configDirectory￨p )￨f {￨f }￨f }￨d
public￨d class￨d PersistenceExceptions￨d extends￨d Exceptions￨d {￨d public￨f static￨f final￨f RuntimeExceptionTranslator￨f TRANSLATOR￨f =￨f new￨f RuntimeExceptionTranslator￨f (￨f )￨f {￨f public￨f RuntimeException￨f translate￨f (￨f RuntimeException￨p re￨p )￨f {￨f }￨f }￨f ;￨e public￨f static￨f RuntimeExceptionTranslator￨f getRollbackTranslator￨f (￨f final￨p OpenJPAEntityManager￨p em￨p )￨f {￨f }￨f public￨f static￨f RuntimeException￨f toPersistenceException￨f (￨f Throwable￨p t￨p )￨f {￨f }￨f private￨f static￨f Throwable￨f translateException￨f (￨f Throwable￨p t￨p ,￨p boolean￨p checked￨p )￨f {￨f }￨f private￨f static￨f Throwable￨f translateStoreException￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f Exception￨e e￨e ;￨e Throwable￨e cause￨e =￨e (￨e (￨e (￨e ke￨e .￨e getNestedThrowables￨e (￨e )￨e )￨e !=￨e null￨e )￨e &&￨e (￨e (￨e ke￨e .￨e getNestedThrowables￨e (￨e )￨e .￨e length￨e )￨e ==￨e 1￨e )￨e )￨e ?￨e ke￨e .￨e getNestedThrowables￨e (￨e )￨e [￨e 0￨e ]￨e :￨e null￨e ;￨e if￨j (￨j (￨c (￨c ke￨c .￨c getSubtype￨c (￨c )￨c )￨c ==￨c (￨c StoreException￨c .￨c OBJECT_NOT_FOUND￨c )￨c )￨c ||￨c (￨c cause￨c instanceof￨c ObjectNotFoundException￨c )￨c )￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e EntityNotFoundException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c (￨c ke￨c .￨c getSubtype￨c (￨c )￨c )￨c ==￨c (￨c StoreException￨c .￨c OPTIMISTIC￨c )￨c )￨c ||￨c (￨c cause￨c instanceof￨c OptimisticException￨c )￨c )￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e OptimisticLockException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c (￨c ke￨c .￨c getSubtype￨c (￨c )￨c )￨c ==￨c (￨c StoreException￨c .￨c LOCK￨c )￨c )￨c ||￨c (￨c cause￨c instanceof￨c LockException￨c )￨c )￨j {￨j LockException￨e lockEx￨e =￨e (￨e (￨e LockException￨e )￨e (￨e (￨e ke￨e instanceof￨e LockException￨e )￨e ?￨e ke￨e :￨e cause￨e )￨e )￨e ;￨e if￨j (￨j (￨c lockEx￨c !=￨c null￨c )￨c &&￨c (￨c (￨c lockEx￨c .￨c getLockLevel￨c (￨c )￨c )￨c >=￨c (￨c JPA2LockLevels￨c .￨c LOCK_PESSIMISTIC_READ￨c )￨c )￨c )￨j {￨j <START_BUG>￨b if￨b (￨b lockEx￨b .￨b isRecoverable￨b (￨b )￨b )￨b {￨b <END_BUG>￨b e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e LockTimeoutException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e else￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e PessimisticLockException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e OptimisticLockException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j (￨c (￨c ke￨c .￨c getSubtype￨c (￨c )￨c )￨c ==￨c (￨c StoreException￨c .￨c OBJECT_EXISTS￨c )￨c )￨c ||￨c (￨c cause￨c instanceof￨c ObjectExistsException￨c )￨c )￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e EntityExistsException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j e￨e =￨e new￨e org￨e .￨e apache￨e .￨e openjpa￨e .￨e persistence￨e .￨e PersistenceException￨e (￨e ke￨e .￨e getMessage￨e (￨e )￨e ,￨e PersistenceExceptions￨e .￨e getNestedThrowables￨e (￨e ke￨e )￨e ,￨e PersistenceExceptions￨e .￨e getFailedObject￨e (￨e ke￨e )￨e ,￨e ke￨e .￨e isFatal￨e (￨e )￨e )￨e ;￨e }￨j e￨e .￨e setStackTrace￨e (￨e ke￨e .￨e getStackTrace￨e (￨e )￨e )￨e ;￨e return￨e e￨e ;￨e }￨f private￨f static￨f Exception￨f translateUserException￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f }￨f private￨f static￨f Exception￨f translateCause￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f }￨f private￨f static￨f Throwable￨f translateGeneralException￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f }￨f private￨f static￨f boolean￨f isPersistenceException￨f (￨f Throwable￨p t￨p )￨f {￨f }￨f private￨f static￨f Throwable￨f [￨f ]￨f getNestedThrowables￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f }￨f private￨f static￨f Object￨f getFailedObject￨f (￨f OpenJPAException￨p ke￨p )￨f {￨f }￨f static￨f Throwable￨f getCause￨f (￨f Throwable￨p [￨p ]￨p nested￨p )￨f {￨f }￨f }￨d
abstract￨d class￨d RFC1522Codec￨d {￨d protected￨e static￨e final￨e char￨e SEP￨e =￨e '?'￨e ;￨e protected￨e static￨e final￨e String￨e POSTFIX￨e =￨e "?="￨e ;￨e protected￨e static￨e final￨e String￨e PREFIX￨e =￨e "=?"￨e ;￨e protected￨f String￨f encodeText￨f (￨f final￨f String￨f text￨f ,￨f final￨f Charset￨f charset￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f if￨j (￨j text￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j <START_BUG>￨b StringBuffer￨b buffer￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b buffer￨e .￨e append￨e (￨e RFC1522Codec￨e .￨e PREFIX￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e charset￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e RFC1522Codec￨e .￨e SEP￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e this￨e .￨e getEncoding￨e (￨e )￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e RFC1522Codec￨e .￨e SEP￨e )￨e ;￨e byte￨e [￨e ]￨e rawData￨e =￨e this￨e .￨e doEncoding￨e (￨e text￨e .￨e getBytes￨e (￨e charset￨e )￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e StringUtils￨e .￨e newStringUsAscii￨e (￨e rawData￨e )￨e )￨e ;￨e buffer￨e .￨e append￨e (￨e RFC1522Codec￨e .￨e POSTFIX￨e )￨e ;￨e return￨e buffer￨e .￨e toString￨e (￨e )￨e ;￨e }￨f protected￨f String￨f encodeText￨f (￨f final￨f String￨f text￨f ,￨f final￨f String￨f charsetName￨f )￨f throws￨f UnsupportedEncodingException￨f ,￨f EncoderException￨f (￨f )￨f {￨f }￨f protected￨f String￨f decodeText￨f (￨f final￨f String￨f text￨f )￨f throws￨f UnsupportedEncodingException￨f ,￨f DecoderException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f String￨f getEncoding￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f byte￨f [￨f ]￨f doEncoding￨f (￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f byte￨f [￨f ]￨f doDecoding￨f (￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Expression￨d extends￨d Statement￨d {￨d public￨f static￨f final￨f boolean￨f isConstantValueRepresentable￨f (￨f Constant￨p constant￨p ,￨p int￨p constantTypeID￨p ,￨p int￨p targetTypeID￨p )￨f {￨f }￨f public￨e Constant￨e constant￨e ;￨e public￨e int￨e implicitConversion￨e ;￨e public￨e TypeBinding￨e resolvedType￨e ;￨e public￨f Expression￨f (￨f )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f final￨f boolean￨f checkCastTypesCompatibility￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p Expression￨p expression￨p )￨f {￨f }￨f public￨f FlowInfo￨f checkNullStatus￨f (￨f BlockScope￨p scope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p int￨p nullStatus￨p )￨f {￨f }￨f private￨f MethodBinding￨f [￨f ]￨f getAllInheritedMethods￨f (￨f ReferenceBinding￨p binding￨p )￨f {￨f }￨f private￨f void￨f getAllInheritedMethods0￨f (￨f ReferenceBinding￨p binding￨p ,￨p ArrayList￨p collector￨p )￨f {￨f }￨f public￨f void￨f checkNullComparison￨f (￨f BlockScope￨p scope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p FlowInfo￨p initsWhenTrue￨p ,￨p FlowInfo￨p initsWhenFalse￨p )￨f {￨f }￨f public￨f boolean￨f checkUnsafeCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p TypeBinding￨p match￨p ,￨p boolean￨p isNarrowing￨p )￨f {￨f }￨f public￨f void￨f computeConversion￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p runtimeType￨p ,￨p TypeBinding￨p compileTimeType￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b (￨b bits￨b )￨b &￨b (￨b IsReachableMASK￨b )￨b )￨b ==￨b 0￨b )￨b {￨b <END_BUG>￨b return￨e ;￨e }￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e false￨e )￨e ;￨e }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedBoolean￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Label￨p trueLabel￨p ,￨p Label￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedStringConcatenation￨f (￨f BlockScope￨p blockScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p int￨p typeID￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedStringConcatenationCreation￨f (￨f BlockScope￨p blockScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p int￨p typeID￨p )￨f {￨f }￨f public￨f boolean￨f isCompactableOperation￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isConstantValueOfTypeAssignableToType￨f (￨f TypeBinding￨p constantType￨p ,￨p TypeBinding￨p targetType￨p )￨f {￨f }￨f public￨f boolean￨f isTypeReference￨f (￨f )￨f {￨f }￨f public￨f int￨f nullStatus￨f (￨f FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f Constant￨f optimizedBooleanConstant￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f print￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f abstract￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveTypeExpecting￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p expectedType￨p )￨f {￨f }￨f public￨f void￨f setExpectedType￨f (￨f TypeBinding￨p expectedType￨p )￨f {￨f }￨f public￨f void￨f tagAsUnnecessaryCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p )￨f {￨f }￨f public￨f void￨f tagAsNeedCheckCast￨f (￨f )￨f {￨f }￨f public￨f Expression￨f toTypeReference￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p CompilationUnitScope￨p scope￨p )￨f {￨f }￨f public￨f LocalVariableBinding￨f localVariableBinding￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JobsExecutor￨d extends￨d AbstractExecutor￨d {￨d protected￨e int￨e fJobCounter￨e =￨e 1￨e ;￨e protected￨e String￨e fExecutorName￨e ;￨e protected￨e boolean￨e fSystem￨e ;￨e protected￨e ISchedulingRule￨e fSchedulingRule￨e ;￨e protected￨e long￨e delay￨e ;￨e public￨f JobsExecutor￨f (￨f String￨p executorName￨p )￨f {￨f }￨f public￨f JobsExecutor￨f (￨f String￨p executorName￨p ,￨p boolean￨p system￨p )￨f {￨f }￨f public￨f JobsExecutor￨f (￨f String￨p executorName￨p ,￨p boolean￨p system￨p ,￨p ISchedulingRule￨p schedulingRule￨p )￨f {￨f }￨f public￨f JobsExecutor￨f (￨f String￨p executorName￨p ,￨p boolean￨p system￨p ,￨p ISchedulingRule￨p schedulingRule￨p ,￨p long￨p delay￨p )￨f {￨f }￨f protected￨f void￨f setChildProgressMonitor￨f (￨f IProgressMonitor￨p parent￨p ,￨p IProgressMonitor￨p child￨p )￨f {￨f }￨f protected￨f void￨f safeRun￨f (￨f ISafeProgressRunner￨p runner￨p ,￨p IProgressRunnable￨p progressRunnable￨p )￨f {￨f <START_BUG>￨b runner￨b .￨b safeRun￨b (￨b progressRunnable￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f String￨f createJobName￨f (￨f String￨p executorName￨p ,￨p int￨p jobCounter￨p ,￨p IProgressRunnable￨p runnable￨p )￨f {￨f }￨f protected￨f AbstractFuture￨f createFuture￨f (￨f IProgressMonitor￨p progressMonitor￨p )￨f {￨f }￨f public￨f IFuture￨f execute￨f (￨f final￨p IProgressRunnable￨p runnable￨p ,￨p final￨p IProgressMonitor￨p clientProgressMonitor￨p )￨f {￨f }￨f protected￨f void￨f configureJobForExecution￨f (￨f Job￨p job￨p )￨f {￨f }￨f }￨d
public￨d class￨d InspectorDebugPanel￨d extends￨d StandardDebugPanel￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f static￨f final￨f IDebugBarContributor￨f DEBUG_BAR_CONTRIB￨f =￨f new￨f IDebugBarContributor￨f (￨f )￨f {￨f private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f Component￨f createComponent￨f (￨f String￨p id￨p ,￨p DebugBar￨p debugBar￨p )￨f {￨f }￨f }￨f ;￨e public￨f InspectorDebugPanel￨f (￨f String￨p id￨p )￨f {￨f }￨f @￨f Override￨f protected￨f Class￨f <￨f ?￨f extends￨f Page￨f >￨f getLinkPageClass￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f ResourceReference￨f getImageResourceReference￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f IModel￨f <￨f String￨f >￨f getDataModel￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f PageParameters￨f getLinkPageParameters￨f (￨f )￨f {￨f PageParameters￨e params￨e =￨e new￨e PageParameters￨e (￨e )￨e ;￨e <START_BUG>￨b params￨b .￨b addNamedParameter￨b (￨b "pageId"￨b ,￨b getPage￨b (￨b )￨b .￨b getId￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e params￨e ;￨e }￨f }￨d
public￨d final￨d class￨d ISAACTest￨d extends￨d RandomGeneratorAbstractTest￨d {￨d @￨f Override￨f protected￨f RandomGenerator￨f makeGenerator￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b ISAACRandom￨b (￨b 1000￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f static￨f final￨f int￨f [￨f ]￨f SEED_1￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f final￨f int￨f [￨f ]￨f SEED_2￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f final￨f int￨f [￨f ]￨f EXPECTED_SEQUENCE_1￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f final￨f int￨f [￨f ]￨f EXPECTED_SEQUENCE_2￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e @￨f Test￨f public￨f void￨f testReference￨f (￨f )￨f {￨f }￨f private￨f int￨f [￨f ]￨f getActualSequence￨f (￨f ISAACRandom￨p isaacRandom￨p )￨f {￨f }￨f }￨d
public￨d class￨d XmlTag￨d extends￨d MarkupElement￨d {￨d public￨e static￨e final￨e XmlTag￨e .￨e Type￨e CLOSE￨e =￨e new￨e XmlTag￨e .￨e Type￨e (￨e "CLOSE"￨e )￨e ;￨e public￨e static￨e final￨e XmlTag￨e .￨e Type￨e OPEN￨e =￨e new￨e XmlTag￨e .￨e Type￨e (￨e "OPEN"￨e )￨e ;￨e public￨e static￨e final￨e XmlTag￨e .￨e Type￨e OPEN_CLOSE￨e =￨e new￨e XmlTag￨e .￨e Type￨e (￨e "OPEN_CLOSE"￨e )￨e ;￨e private￨e LowerCaseKeyValueMap￨e attributes￨e =￨e new￨e LowerCaseKeyValueMap￨e (￨e )￨e ;￨e int￨e columnNumber￨e ;￨e int￨e length￨e ;￨e int￨e lineNumber￨e ;￨e String￨e name￨e ;￨e String￨e namespace￨e ;￨e int￨e pos￨e ;￨e String￨e text￨e ;￨e XmlTag￨e .￨e Type￨e type￨e ;￨e private￨e XmlTag￨e closes￨e ;￨e private￨e XmlTag￨e copyOf￨e =￨e this￨e ;￨e private￨e boolean￨e isMutable￨e =￨e true￨e ;￨e private￨e boolean￨e nameChanged￨e =￨e false￨e ;￨e public￨d static￨d final￨d class￨d Type￨d extends￨d EnumeratedType￨d {￨d Type￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f }￨d public￨f XmlTag￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f closes￨f (￨f final￨p XmlTag￨p open￨p )￨f {￨f }￨f public￨f LowerCaseKeyValueMap￨f getAttributes￨f (￨f )￨f {￨f }￨f public￨f int￨f getColumnNumber￨f (￨f )￨f {￨f }￨f public￨f int￨f getLength￨f (￨f )￨f {￨f }￨f public￨f int￨f getLineNumber￨f (￨f )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getNameChanged￨f (￨f )￨f {￨f }￨f public￨f String￨f getNamespace￨f (￨f )￨f {￨f }￨f public￨f final￨f XmlTag￨f getOpenTag￨f (￨f )￨f {￨f }￨f public￨f int￨f getPos￨f (￨f )￨f {￨f }￨f public￨f String￨f getString￨f (￨f final￨p String￨p key￨p )￨f {￨f }￨f public￨f XmlTag￨f .￨f Type￨f getType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isClose￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isMutable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isOpen￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isOpenClose￨f (￨f )￨f {￨f }￨f public￨f void￨f makeImmutable￨f (￨f )￨f {￨f }￨f public￨f XmlTag￨f mutable￨f (￨f )￨f {￨f }￨f public￨f Object￨f put￨f (￨f final￨p String￨p key￨p ,￨p final￨p boolean￨p value￨p )￨f {￨f }￨f public￨f Object￨f put￨f (￨f final￨p String￨p key￨p ,￨p final￨p int￨p value￨p )￨f {￨f }￨f public￨f Object￨f put￨f (￨f final￨p String￨p key￨p ,￨p final￨p String￨p value￨p )￨f {￨f }￨f public￨f Object￨f put￨f (￨f final￨p String￨p key￨p ,￨p final￨p StringValue￨p value￨p )￨f {￨f }￨f public￨f void￨f putAll￨f (￨f final￨p Map￨p map￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f final￨p String￨p key￨p )￨f {￨f }￨f public￨f void￨f setName￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f public￨f void￨f setOpenTag￨f (￨f final￨p XmlTag￨p tag￨p )￨f {￨f }￨f public￨f void￨f setType￨f (￨f final￨p XmlTag￨p .￨p Type￨p type￨p )￨f {￨f }￨f public￨f String￨f toDebugString￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b !￨b (￨b isMutable￨b )￨b )￨b {￨b <END_BUG>￨b return￨e text￨e ;￨e }￨e return￨e toXmlString￨e (￨e null￨e )￨e ;￨e }￨f public￨f String￨f toUserDebugString￨f (￨f )￨f {￨f }￨f public￨f String￨f toXmlString￨f (￨f final￨p String￨p attributeToBeIgnored￨p )￨f {￨f }￨f }￨d
public￨d class￨d CollatingIterator￨d <￨d E￨d >￨d implements￨d Iterator￨d <￨d E￨d >￨d {￨d private￨e Comparator￨e <￨e ?￨e super￨e E￨e >￨e comparator￨e =￨e null￨e ;￨e private￨e ArrayList￨e <￨e Iterator￨e <￨e ?￨e extends￨e E￨e >￨e >￨e iterators￨e =￨e null￨e ;￨e private￨e ArrayList￨e <￨e E￨e >￨e values￨e =￨e null￨e ;￨e private￨e BitSet￨e valueSet￨e =￨e null￨e ;￨e private￨e int￨e lastReturned￨e =￨e -￨e 1￨e ;￨e public￨f CollatingIterator￨f (￨f )￨f {￨f }￨f public￨f CollatingIterator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p )￨f {￨f }￨f public￨f CollatingIterator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p ,￨p final￨p int￨p initIterCapacity￨p )￨f {￨f }￨f public￨f CollatingIterator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p ,￨p final￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p a￨p ,￨p final￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p b￨p )￨f {￨f }￨f public￨f CollatingIterator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p ,￨p final￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p [￨p ]￨p iterators￨p )￨f {￨f }￨f public￨f CollatingIterator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p ,￨p final￨p Collection￨p <￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p >￨p iterators￨p )￨f {￨f }￨f public￨f void￨f addIterator￨f (￨f final￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p iterator￨p )￨f {￨f }￨f public￨f void￨f setIterator￨f (￨f final￨p int￨p index￨p ,￨p final￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p iterator￨p )￨f {￨f }￨f public￨f List￨f <￨f Iterator￨f <￨f ?￨f extends￨f E￨f >￨f >￨f getIterators￨f (￨f )￨f {￨f <START_BUG>￨b return￨b UnmodifiableList￨b .￨b decorate￨b (￨b iterators￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Comparator￨f <￨f ?￨f super￨f E￨f >￨f getComparator￨f (￨f )￨f {￨f }￨f public￨f void￨f setComparator￨f (￨f final￨p Comparator￨p <￨p ?￨p super￨p E￨p >￨p comp￨p )￨f {￨f }￨f public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f public￨f E￨f next￨f (￨f )￨f throws￨f NoSuchElementException￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f )￨f {￨f }￨f public￨f int￨f getIteratorIndex￨f (￨f )￨f {￨f }￨f private￨f void￨f start￨f (￨f )￨f {￨f }￨f private￨f boolean￨f set￨f (￨f int￨p i￨p )￨f {￨f }￨f private￨f void￨f clear￨f (￨f int￨p i￨p )￨f {￨f }￨f private￨f void￨f checkNotStarted￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f private￨f int￨f least￨f (￨f )￨f {￨f }￨f private￨f boolean￨f anyValueSet￨f (￨f BitSet￨p set￨p )￨f {￨f }￨f private￨f boolean￨f anyHasNext￨f (￨f ArrayList￨p <￨p Iterator￨p <￨p ?￨p extends￨p E￨p >￨p >￨p iters￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d AS1601TestCase￨d {￨d @￨e Inject￨e public￨e BundleContext￨e context￨e ;￨e @￨e Inject￨e public￨e Bundle￨e bundle￨e ;￨e @￨f Deployment￨f @￨f StartLevelAware￨f (￨f startLevel￨f =￨f 4￨f )￨f public￨f static￨f WebArchive￨f createdeployment￨f (￨f )￨f {￨f final￨d WebArchive￨d archive￨d =￨d ShrinkWrap￨d .￨d create￨d (￨d WebArchive￨d .￨d class￨d ,￨d "as1601.war"￨d )￨d ;￨d <START_BUG>￨d archive￨d .￨d addClasses￨d (￨d OSGiTestSupport￨d .￨d class￨d ,￨d EndpointServlet￨d .￨d class￨d )￨d ;￨d <END_BUG>￨d archive￨d .￨d addAsWebInfResource￨d (￨d "osgi/webapp/webA.xml"￨d ,￨d "web.xml"￨d )￨d ;￨d archive￨d .￨d add￨d (￨d new￨d Asset￨d (￨d )￨d {￨d public￨f InputStream￨f openStream￨f (￨f )￨f {￨f OSGiManifestBuilder￨e builder￨e =￨e OSGiManifestBuilder￨e .￨e newInstance￨e (￨e )￨e ;￨e builder￨e .￨e addBundleSymbolicName￨e (￨e archive￨e .￨e getName￨e (￨e )￨e )￨e ;￨e builder￨e .￨e addBundleManifestVersion￨e (￨e 2￨e )￨e ;￨e builder￨e .￨e addManifestHeader￨e (￨e Constants￨e .￨e BUNDLE_CLASSPATH￨e ,￨e ".,WEB-INF/classes"￨e )￨e ;￨e builder￨e .￨e addManifestHeader￨e (￨e "Web-ContextPath"￨e ,￨e "as1601"￨e )￨e ;￨e builder￨e .￨e addImportPackages￨e (￨e StartLevel￨e .￨e class￨e ,￨e HttpServlet￨e .￨e class￨e ,￨e Servlet￨e .￨e class￨e )￨e ;￨e return￨e builder￨e .￨e openStream￨e (￨e )￨e ;￨e }￨f }￨d ,￨e JarFile￨e .￨e MANIFEST_NAME￨e )￨e ;￨e return￨e archive￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testServletAccess￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f String￨f getHttpResponse￨f (￨f String￨f reqPath￨f ,￨f int￨f timeout￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Jar￨d extends￨d Zip￨d {￨d private￨e static￨e final￨e String￨e INDEX_NAME￨e =￨e "META-INF/INDEX.LIST"￨e ;￨e private￨e static￨e final￨e String￨e MANIFEST_NAME￨e =￨e "META-INF/MANIFEST.MF"￨e ;￨e private￨e List￨e serviceList￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e private￨e Manifest￨e configuredManifest￨e ;￨e private￨e Manifest￨e savedConfiguredManifest￨e ;￨e private￨e Manifest￨e filesetManifest￨e ;￨e private￨e Manifest￨e originalManifest￨e ;￨e private￨e Jar￨e .￨e FilesetManifestConfig￨e filesetManifestConfig￨e ;￨e private￨e boolean￨e mergeManifestsMain￨e =￨e true￨e ;￨e private￨e Manifest￨e manifest￨e ;￨e private￨e String￨e manifestEncoding￨e ;￨e private￨e File￨e manifestFile￨e ;￨e private￨e boolean￨e index￨e =￨e false￨e ;￨e private￨e boolean￨e createEmpty￨e =￨e false￨e ;￨e private￨e Vector￨e rootEntries￨e ;￨e private￨e Path￨e indexJars￨e ;￨e private￨f ZipExtraField￨f [￨f ]￨f JAR_MARKER￨f =￨f new￨f ZipExtraField￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e protected￨e String￨e emptyBehavior￨e =￨e "create"￨e ;￨e public￨f Jar￨f (￨f )￨f {￨f }￨f public￨f void￨f setWhenempty￨f (￨f WhenEmpty￨p we￨p )￨f {￨f }￨f public￨f void￨f setWhenmanifestonly￨f (￨f WhenEmpty￨p we￨p )￨f {￨f }￨f public￨f void￨f setJarfile￨f (￨f File￨p jarFile￨p )￨f {￨f }￨f public￨f void￨f setIndex￨f (￨f boolean￨p flag￨p )￨f {￨f }￨f public￨f void￨f setManifestEncoding￨f (￨f String￨p manifestEncoding￨p )￨f {￨f }￨f public￨f void￨f addConfiguredManifest￨f (￨f Manifest￨f newManifest￨f )￨f throws￨f ManifestException￨f (￨f )￨f {￨f }￨f public￨f void￨f setManifest￨f (￨f File￨p manifestFile￨p )￨f {￨f }￨f private￨f Manifest￨f getManifest￨f (￨f File￨p manifestFile￨p )￨f {￨f }￨f private￨f Manifest￨f getManifestFromJar￨f (￨f File￨f jarFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f Manifest￨f getManifest￨f (￨f Reader￨p r￨p )￨f {￨f }￨f public￨f void￨f setFilesetmanifest￨f (￨f Jar￨p .￨p FilesetManifestConfig￨p config￨p )￨f {￨f }￨f public￨f void￨f addMetainf￨f (￨f ZipFileSet￨p fs￨p )￨f {￨f }￨f public￨f void￨f addConfiguredIndexJars￨f (￨f Path￨p p￨p )￨f {￨f }￨f public￨f void￨f addConfiguredService￨f (￨f Service￨p service￨p )￨f {￨f }￨f private￨f void￨f writeServices￨f (￨f ZipOutputStream￨f zOut￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f initZipOutputStream￨f (￨f ZipOutputStream￨f zOut￨f )￨f throws￨f IOException￨f ,￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f Manifest￨f createManifest￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeManifest￨f (￨f ZipOutputStream￨f zOut￨f ,￨f Manifest￨f manifest￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f finalizeZipOutputStream￨f (￨f ZipOutputStream￨f zOut￨f )￨f throws￨f IOException￨f ,￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f createIndexList￨f (￨f ZipOutputStream￨f zOut￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f ByteArrayOutputStream￨e baos￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e PrintWriter￨e writer￨e =￨e new￨e PrintWriter￨e (￨e new￨e OutputStreamWriter￨e (￨e baos￨e ,￨e "UTF8"￨e )￨e )￨e ;￨e writer￨e .￨e println￨e (￨e "JarIndex-Version:<seq2seq4repair_space>1.0"￨e )￨e ;￨e writer￨e .￨e println￨e (￨e )￨e ;￨e writer￨e .￨e println￨e (￨e zipFile￨e .￨e getName￨e (￨e )￨e )￨e ;￨e writeIndexLikeList￨e (￨e new￨e ArrayList￨e (￨e addedDirs￨e .￨e keySet￨e (￨e )￨e )￨e ,￨e rootEntries￨e ,￨e writer￨e )￨e ;￨e writer￨e .￨e println￨e (￨e )￨e ;￨e if￨j (￨j (￨c indexJars￨c )￨c !=￨c null￨c )￨j {￨j Manifest￨e mf￨e =￨e createManifest￨e (￨e )￨e ;￨e Manifest￨e .￨e Attribute￨e classpath￨e =￨e mf￨e .￨e getMainSection￨e (￨e )￨e .￨e getAttribute￨e (￨e ATTRIBUTE_CLASSPATH￨e )￨e ;￨e String￨e [￨e ]￨e cpEntries￨e =￨e null￨e ;￨e <START_BUG>￨b if￨b (￨b classpath￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b StringTokenizer￨e tok￨e =￨e new￨e StringTokenizer￨e (￨e classpath￨e .￨e getValue￨e (￨e )￨e ,￨e "<seq2seq4repair_space>"￨e )￨e ;￨e cpEntries￨e =￨e new￨e String￨e [￨e tok￨e .￨e countTokens￨e (￨e )￨e ]￨e ;￨e int￨e c￨e =￨e 0￨e ;￨e while￨l (￨l tok￨c .￨c hasMoreTokens￨c (￨c )￨c )￨l {￨l cpEntries￨e [￨e (￨e c￨e ++￨e )￨e ]￨e =￨e tok￨e .￨e nextToken￨e (￨e )￨e ;￨e }￨l }￨e String￨e [￨e ]￨e indexJarEntries￨e =￨e indexJars￨e .￨e list￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c indexJarEntries￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e name￨e =￨e Jar￨e .￨e findJarName￨e (￨e indexJarEntries￨e [￨e i￨e ]￨e ,￨e cpEntries￨e )￨e ;￨e if￨j (￨j name￨c !=￨c null￨c )￨j {￨j ArrayList￨e dirs￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e ArrayList￨e files￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e Jar￨e .￨e grabFilesAndDirs￨e (￨e indexJarEntries￨e [￨e i￨e ]￨e ,￨e dirs￨e ,￨e files￨e )￨e ;￨e if￨j (￨j (￨c (￨c dirs￨c .￨c size￨c (￨c )￨c )￨c +￨c (￨c files￨c .￨c size￨c (￨c )￨c )￨c )￨c >￨c 0￨c )￨j {￨j writer￨e .￨e println￨e (￨e name￨e )￨e ;￨e writeIndexLikeList￨e (￨e dirs￨e ,￨e files￨e ,￨e writer￨e )￨e ;￨e writer￨e .￨e println￨e (￨e )￨e ;￨e }￨j }￨j }￨l }￨j writer￨e .￨e flush￨e (￨e )￨e ;￨e ByteArrayInputStream￨e bais￨e =￨e new￨e ByteArrayInputStream￨e (￨e baos￨e .￨e toByteArray￨e (￨e )￨e )￨e ;￨e super￨e .￨e zipFile￨e (￨e bais￨e ,￨e zOut￨e ,￨e Jar￨e .￨e INDEX_NAME￨e ,￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ,￨e null￨e ,￨e DEFAULT_FILE_MODE￨e )￨e ;￨e }￨f protected￨f void￨f zipFile￨f (￨f InputStream￨f is￨f ,￨f ZipOutputStream￨f zOut￨f ,￨f String￨f vPath￨f ,￨f long￨f lastModified￨f ,￨f File￨f fromArchive￨f ,￨f int￨f mode￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f filesetManifest￨f (￨f File￨f file￨f ,￨f InputStream￨f is￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f ArchiveState￨f getResourcesToAdd￨f (￨f ResourceCollection￨f [￨f ]￨f rcs￨f ,￨f File￨f zipFile￨f ,￨f boolean￨f needsUpdate￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f createEmptyZip￨f (￨f File￨f zipFile￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f cleanUp￨f (￨f )￨f {￨f }￨f public￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d FilesetManifestConfig￨d extends￨d EnumeratedAttribute￨d {￨d public￨f String￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f }￨d protected￨f final￨f void￨f writeIndexLikeList￨f (￨f List￨f dirs￨f ,￨f List￨f files￨f ,￨f PrintWriter￨f writer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f static￨f final￨f String￨f findJarName￨f (￨f String￨p fileName￨p ,￨p String￨p [￨p ]￨p classpath￨p )￨f {￨f }￨f protected￨f static￨f final￨f void￨f grabFilesAndDirs￨f (￨f String￨f file￨f ,￨f List￨f dirs￨f ,￨f List￨f files￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestCzechAnalyzer￨d extends￨d BaseTokenStreamTestCase￨d {￨d @￨f Deprecated￨f public￨f void￨f testStopWordLegacy￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testStopWord￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Deprecated￨f public￨f void￨f testReusableTokenStreamLegacy￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReusableTokenStream￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testWithStemExclusionSet￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomStrings￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b new￨b CzechAnalyzer￨b (￨b TEST_VERSION_CURRENT￨b )￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
final￨d class￨d CollectionToStringConverter￨d implements￨d GenericConverter￨d {￨d private￨e static￨e final￨e String￨e DELIMITER￨e =￨e ","￨e ;￨e private￨e final￨e ConversionService￨e conversionService￨e ;￨e public￨f CollectionToStringConverter￨f (￨f ConversionService￨p conversionService￨p )￨f {￨f }￨f public￨f Set￨f <￨f ConvertiblePair￨f >￨f getConvertibleTypes￨f (￨f )￨f {￨f }￨f public￨f Object￨f convert￨f (￨f Object￨p source￨p ,￨p TypeDescriptor￨p sourceType￨p ,￨p TypeDescriptor￨p targetType￨p )￨f {￨f if￨j (￨j source￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j Collection￨e <￨e ?￨e >￨e sourceCollection￨e =￨e (￨e (￨e Collection￨e <￨e ?￨e >￨e )￨e (￨e source￨e )￨e )￨e ;￨e if￨j (￨j (￨c sourceCollection￨c .￨c size￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j return￨e ""￨e ;￨e }￨j StringBuilder￨e sb￨e =￨e new￨e StringBuilder￨e (￨e )￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e for￨l (￨l Object￨c sourceElement￨c :￨c sourceCollection￨c )￨l {￨l if￨j (￨j i￨c >￨c 0￨c )￨j {￨j sb￨e .￨e append￨e (￨e CollectionToStringConverter￨e .￨e DELIMITER￨e )￨e ;￨e }￨j <START_BUG>￨b Object￨b targetElement￨b =￨b this￨b .￨b conversionService￨b .￨b convert￨b (￨b sourceElement￨b ,￨b sourceType￨b .￨b elementType￨b (￨b sourceElement￨b )￨b ,￨b targetType￨b )￨b ;￨b <END_BUG>￨b sb￨e .￨e append￨e (￨e targetElement￨e )￨e ;￨e i￨e ++￨e ;￨e }￨l return￨e sb￨e .￨e toString￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d WeldExtension￨d implements￨d Extension￨d {￨d public￨e static￨e final￨e String￨e SUBSYSTEM_NAME￨e =￨e "weld"￨e ;￨e public￨e static￨e final￨e String￨e NAMESPACE￨e =￨e "urn:jboss:domain:weld:1.0"￨e ;￨e private￨e static￨e final￨e WeldExtension￨e .￨e WeldSubsystemParser￨e parser￨e =￨e new￨e WeldExtension￨e .￨e WeldSubsystemParser￨e (￨e )￨e ;￨e private￨e static￨e final￨e PathElement￨e PATH_SUBSYSTEM￨e =￨e PathElement￨e .￨e pathElement￨e (￨e SUBSYSTEM￨e ,￨e WeldExtension￨e .￨e SUBSYSTEM_NAME￨e )￨e ;￨e private￨d static￨d final￨d String￨d RESOURCE_NAME￨d =￨d (￨d WeldExtension￨d .￨d class￨d .￨d getPackage￨d (￨d )￨d .￨d getName￨d (￨d )￨d )￨d +￨d ".LocalDescriptions"￨d ;￨d private￨d static￨d final￨d int￨d MANAGEMENT_API_MAJOR_VERSION￨d =￨d 1￨d ;￨d private￨d static￨d final￨d int￨d MANAGEMENT_API_MINOR_VERSION￨d =￨d 0￨d ;￨d private￨d static￨d final￨d int￨d MANAGEMENT_API_MICRO_VERSION￨d =￨d 0￨d ;￨d static￨d StandardResourceDescriptionResolver￨d getResourceDescriptionResolver￨d (￨d final￨d String￨d ...￨d keyPrefix￨d )￨d {￨d }￨d private￨e static￨e final￨e ResourceDefinition￨e WELD_SUBSYSTEM_RESOURCE￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleResourceDefinition￨e (￨e WeldExtension￨e .￨e PATH_SUBSYSTEM￨e ,￨e WeldExtension￨e .￨e getResourceDescriptionResolver￨e (￨e )￨e ,￨e WeldSubsystemAdd￨e .￨e INSTANCE￨e ,￨e ReloadRequiredRemoveStepHandler￨e .￨e INSTANCE￨e )￨e ;￨e @￨f Override￨f public￨f void￨f initialize￨f (￨f final￨p ExtensionContext￨p context￨p )￨f {￨f ROOT_LOGGER￨e .￨e debug￨e (￨e "Activating<seq2seq4repair_space>Weld<seq2seq4repair_space>Extension"￨e )￨e ;￨e final￨e SubsystemRegistration￨e subsystem￨e =￨e context￨e .￨e registerSubsystem￨e (￨e WeldExtension￨e .￨e SUBSYSTEM_NAME￨e ,￨e WeldExtension￨e .￨e MANAGEMENT_API_MAJOR_VERSION￨e ,￨e WeldExtension￨e .￨e MANAGEMENT_API_MINOR_VERSION￨e ,￨e WeldExtension￨e .￨e MANAGEMENT_API_MICRO_VERSION￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e registration￨e =￨e subsystem￨e .￨e registerSubsystemModel￨e (￨e WeldExtension￨e .￨e WELD_SUBSYSTEM_RESOURCE￨e )￨e ;￨e <START_BUG>￨b registration￨b .￨b registerOperationHandler￨b (￨b DESCRIBE￨b ,￨b INSTANCE￨b ,￨b INSTANCE￨b ,￨b false￨b ,￨b PRIVATE￨b )￨b ;￨b <END_BUG>￨b subsystem￨e .￨e registerXMLElementWriter￨e (￨e WeldExtension￨e .￨e parser￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f initializeParsers￨f (￨f final￨p ExtensionParsingContext￨p context￨p )￨f {￨f }￨f static￨d class￨d WeldSubsystemParser￨d implements￨d XMLStreamConstants￨d ,￨d XMLElementReader￨d <￨d List￨d <￨d ModelNode￨d >￨d >￨d ,￨d XMLElementWriter￨d <￨d SubsystemMarshallingContext￨d >￨d {￨d @￨f Override￨f public￨f void￨f readElement￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f writeContent￨f (￨f final￨f XMLExtendedStreamWriter￨f streamWriter￨f ,￨f final￨f SubsystemMarshallingContext￨f context￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d Expression￨d extends￨d Statement￨d {￨d public￨f static￨f final￨f boolean￨f isConstantValueRepresentable￨f (￨f Constant￨p constant￨p ,￨p int￨p constantTypeID￨p ,￨p int￨p targetTypeID￨p )￨f {￨f }￨f public￨e Constant￨e constant￨e ;￨e public￨e int￨e implicitConversion￨e ;￨e public￨e TypeBinding￨e resolvedType￨e ;￨e public￨f Expression￨f (￨f )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f final￨f boolean￨f checkCastTypesCompatibility￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p Expression￨p expression￨p )￨f {￨f }￨f public￨f FlowInfo￨f checkNullStatus￨f (￨f BlockScope￨p scope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p int￨p nullStatus￨p )￨f {￨f }￨f private￨f MethodBinding￨f [￨f ]￨f getAllInheritedMethods￨f (￨f ReferenceBinding￨p binding￨p )￨f {￨f }￨f private￨f void￨f getAllInheritedMethods0￨f (￨f ReferenceBinding￨p binding￨p ,￨p ArrayList￨p collector￨p )￨f {￨f }￨f public￨f void￨f checkNullComparison￨f (￨f BlockScope￨p scope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p FlowInfo￨p initsWhenTrue￨p ,￨p FlowInfo￨p initsWhenFalse￨p )￨f {￨f }￨f public￨f boolean￨f checkUnsafeCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p TypeBinding￨p match￨p ,￨p boolean￨p isNarrowing￨p )￨f {￨f }￨f public￨f void￨f computeConversion￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p runtimeTimeType￨p ,￨p TypeBinding￨p compileTimeType￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedBoolean￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Label￨p trueLabel￨p ,￨p Label￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f if￨j (￨j (￨c (￨c constant￨c )￨c !=￨c (￨c Constant￨c .￨c NotAConstant￨c )￨c )￨c &&￨c (￨c (￨c constant￨c .￨c typeID￨c (￨c )￨c )￨c ==￨c (￨c TypeIds￨c .￨c T_boolean￨c )￨c )￨c )￨j {￨j int￨e pc￨e =￨e codeStream￨e .￨e position￨e ;￨e if￨j (￨j (￨c constant￨c .￨c booleanValue￨c (￨c )￨c )￨c ==￨c true￨c )￨j {￨j if￨j (￨j valueRequired￨c )￨j {￨j if￨j (￨j falseLabel￨c ==￨c null￨c )￨j {￨j if￨j (￨j trueLabel￨c !=￨c null￨c )￨j {￨j codeStream￨e .￨e goto_￨e (￨e trueLabel￨e )￨e ;￨e }￨j }￨j }￨j }￨j else￨j {￨j if￨j (￨j valueRequired￨c )￨j {￨j if￨j (￨j falseLabel￨c !=￨c null￨c )￨j {￨j if￨j (￨j trueLabel￨c ==￨c null￨c )￨j {￨j codeStream￨e .￨e goto_￨e (￨e falseLabel￨e )￨e ;￨e }￨j }￨j }￨j }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e return￨e ;￨e }￨j generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e valueRequired￨e )￨e ;￨e int￨e position￨e =￨e codeStream￨e .￨e position￨e ;￨e if￨j (￨j valueRequired￨c )￨j {￨j if￨j (￨j falseLabel￨c ==￨c null￨c )￨j {￨j if￨j (￨j trueLabel￨c !=￨c null￨c )￨j {￨j codeStream￨e .￨e ifne￨e (￨e trueLabel￨e )￨e ;￨e }￨j }￨j else￨j {￨j if￨j (￨j trueLabel￨c ==￨c null￨c )￨j {￨j codeStream￨e .￨e ifeq￨e (￨e falseLabel￨e )￨e ;￨e }￨j else￨j {￨j }￨j }￨j }￨j <START_BUG>￨b codeStream￨b .￨b updateLastRecordedEndPC￨b (￨b position￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f generateOptimizedStringConcatenation￨f (￨f BlockScope￨p blockScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p int￨p typeID￨p )￨f {￨f }￨f public￨f void￨f generateOptimizedStringConcatenationCreation￨f (￨f BlockScope￨p blockScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p int￨p typeID￨p )￨f {￨f }￨f public￨f boolean￨f isCompactableOperation￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isConstantValueOfTypeAssignableToType￨f (￨f TypeBinding￨p constantType￨p ,￨p TypeBinding￨p targetType￨p )￨f {￨f }￨f public￨f boolean￨f isTypeReference￨f (￨f )￨f {￨f }￨f public￨f int￨f nullStatus￨f (￨f FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f Constant￨f optimizedBooleanConstant￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f print￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f abstract￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f ClassScope￨p classScope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveTypeExpecting￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p expectedType￨p )￨f {￨f }￨f public￨f void￨f setExpectedType￨f (￨f TypeBinding￨p expectedType￨p )￨f {￨f }￨f public￨f void￨f tagAsUnnecessaryCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p )￨f {￨f }￨f public￨f void￨f tagAsNeedCheckCast￨f (￨f )￨f {￨f }￨f public￨f Expression￨f toTypeReference￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p CompilationUnitScope￨p scope￨p )￨f {￨f }￨f public￨f LocalVariableBinding￨f localVariableBinding￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d LongLiteral￨d extends￨d NumberLiteral￨d {￨d long￨e value￨e ;￨e static￨e final￨e Constant￨e FORMAT_ERROR￨e =￨e new￨e DoubleConstant￨e (￨e (￨e 1.0￨e /￨e 0.0￨e )￨e )￨e ;￨e public￨f LongLiteral￨f (￨f char￨p [￨p ]￨p token￨p ,￨p int￨p s￨p ,￨p int￨p e￨p )￨f {￨f }￨f public￨f LongLiteral￨f (￨f char￨p [￨p ]￨p token￨p ,￨p int￨p s￨p ,￨p int￨p e￨p ,￨p long￨p value￨p )￨f {￨f }￨f public￨f void￨f computeConstant￨f (￨f )￨f {￨f int￨e length￨e =￨e (￨e source￨e .￨e length￨e )￨e -￨e 1￨e ;￨e long￨e computedValue￨e ;￨e if￨j (￨j (￨c source￨c [￨c 0￨c ]￨c )￨c ==￨c '0'￨c )￨j {￨j if￨j (￨j length￨c ==￨c 1￨c )￨j {￨j constant￨e =￨e Constant￨e .￨e fromValue￨e (￨e 0L￨e )￨e ;￨e return￨e ;￨e }￨j final￨e int￨e shift￨e ;￨e final￨e int￨e radix￨e ;￨e int￨e j￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b source￨b [￨b 1￨b ]￨b )￨b ==￨b 'x'￨b )￨b |￨b (￨b (￨b source￨b [￨b 1￨b ]￨b )￨b ==￨b 'X'￨b )￨b )￨b {￨b <END_BUG>￨b shift￨e =￨e 4￨e ;￨e j￨e =￨e 2￨e ;￨e radix￨e =￨e 16￨e ;￨e else￨j {￨j shift￨e =￨e 3￨e ;￨e j￨e =￨e 1￨e ;￨e radix￨e =￨e 8￨e ;￨e }￨j int￨e nbDigit￨e =￨e 0￨e ;￨e while￨l (￨l (￨c source￨c [￨c j￨c ]￨c )￨c ==￨c '0'￨c )￨l {￨l j￨e ++￨e ;￨e if￨j (￨j j￨c ==￨c length￨c )￨j {￨j constant￨e =￨e Constant￨e .￨e fromValue￨e (￨e (￨e value￨e =￨e 0L￨e )￨e )￨e ;￨e return￨e ;￨e }￨j }￨l int￨e digitValue￨e ;￨e if￨j (￨j (￨c digitValue￨c =￨c Character￨c .￨c digit￨c (￨c source￨c [￨c (￨c j￨c ++￨c )￨c ]￨c ,￨c radix￨c )￨c )￨c <￨c 0￨c )￨j {￨j constant￨e =￨e LongLiteral￨e .￨e FORMAT_ERROR￨e ;￨e return￨e ;￨e }￨j if￨j (￨j digitValue￨c >=￨c 8￨c )￨j {￨j nbDigit￨e =￨e 4￨e ;￨e }￨j else￨j if￨j (￨j digitValue￨c >=￨c 4￨c )￨j {￨j nbDigit￨e =￨e 3￨e ;￨e }￨j else￨j if￨j (￨j digitValue￨c >=￨c 2￨c )￨j {￨j nbDigit￨e =￨e 2￨e ;￨e }￨j else￨j {￨j nbDigit￨e =￨e 1￨e ;￨e }￨j computedValue￨e =￨e digitValue￨e ;￨e while￨l (￨l j￨c <￨c length￨c )￨l {￨l if￨j (￨j (￨c digitValue￨c =￨c Character￨c .￨c digit￨c (￨c source￨c [￨c (￨c j￨c ++￨c )￨c ]￨c ,￨c radix￨c )￨c )￨c <￨c 0￨c )￨j {￨j constant￨e =￨e LongLiteral￨e .￨e FORMAT_ERROR￨e ;￨e return￨e ;￨e }￨j if￨j (￨j (￨c nbDigit￨c +=￨c shift￨c )￨c >￨c 64￨c )￨j {￨j return￨e ;￨e }￨j computedValue￨e =￨e (￨e computedValue￨e <<￨e shift￨e )￨e |￨e digitValue￨e ;￨e }￨l }￨j else￨j {￨j long￨e previous￨e =￨e computedValue￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l int￨e digitValue￨e ;￨e if￨j (￨j (￨c digitValue￨c =￨c Character￨c .￨c digit￨c (￨c source￨c [￨c i￨c ]￨c ,￨c 10￨c )￨c )￨c <￨c 0￨c )￨j {￨j return￨e ;￨e }￨j previous￨e =￨e computedValue￨e ;￨e computedValue￨e =￨e (￨e 10￨e *￨e computedValue￨e )￨e +￨e digitValue￨e ;￨e if￨j (￨j previous￨c >￨c computedValue￨c )￨j {￨j return￨e ;￨e }￨j }￨l }￨j constant￨e =￨e Constant￨e .￨e fromValue￨e (￨e (￨e value￨e =￨e computedValue￨e )￨e )￨e ;￨e }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f TypeBinding￨f literalType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f final￨f boolean￨f mayRepresentMIN_VALUE￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d CSVPrinterTest￨d extends￨d TestCase￨d {￨d String￨e lineSeparator￨e =￨e "\n"￨e ;￨e public￨f void￨f testPrinter1￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter2￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter3￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter4￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter5￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter6￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testPrinter7￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testExcelPrinter1￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testExcelPrinter2￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandom￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f int￨e iter￨e =￨e 10000￨e ;￨e format￨e =￨e CSVFormat￨e .￨e DEFAULT￨e ;￨e doRandom￨e (￨e iter￨e )￨e ;￨e format￨e =￨e CSVFormat￨e .￨e EXCEL￨e ;￨e doRandom￨e (￨e iter￨e )￨e ;￨e <START_BUG>￨b format￨b =￨b new￨b CSVFormat￨b (￨b '\t'￨b ,￨b CSVFormat￨b .￨b ENCAPSULATOR_DISABLED￨b ,￨b CSVFormat￨b .￨b COMMENTS_DISABLED￨b ,￨b '\\'￨b ,￨b false￨b ,￨b false￨b ,￨b false￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b doRandom￨e (￨e iter￨e )￨e ;￨e }￨f Random￨e r￨e =￨e new￨e Random￨e (￨e )￨e ;￨e CSVFormat￨e format￨e ;￨e public￨f void￨f doRandom￨f (￨f int￨f iter￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f doOneRandom￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f equals￨f (￨f String￨p [￨p ]￨p [￨p ]￨p a￨p ,￨p String￨p [￨p ]￨p [￨p ]￨p b￨p )￨f {￨f }￨f public￨f static￨f String￨f printable￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f String￨f randStr￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d XmlLogger￨d implements￨d BuildListener￨d {￨d private￨e static￨e final￨e DocumentBuilder￨e builder￨e =￨e XmlLogger￨e .￨e getDocumentBuilder￨e (￨e )￨e ;￨e private￨f static￨f DocumentBuilder￨f getDocumentBuilder￨f (￨f )￨f {￨f }￨f private￨e static￨e final￨e String￨e BUILD_TAG￨e =￨e "build"￨e ;￨e private￨e static￨e final￨e String￨e TARGET_TAG￨e =￨e "target"￨e ;￨e private￨e static￨e final￨e String￨e TASK_TAG￨e =￨e "task"￨e ;￨e private￨e static￨e final￨e String￨e MESSAGE_TAG￨e =￨e "message"￨e ;￨e private￨e static￨e final￨e String￨e NAME_ATTR￨e =￨e "name"￨e ;￨e private￨e static￨e final￨e String￨e TIME_ATTR￨e =￨e "time"￨e ;￨e private￨e static￨e final￨e String￨e PRIORITY_ATTR￨e =￨e "priority"￨e ;￨e private￨e static￨e final￨e String￨e LOCATION_ATTR￨e =￨e "location"￨e ;￨e private￨e static￨e final￨e String￨e ERROR_ATTR￨e =￨e "error"￨e ;￨e private￨e Document￨e doc￨e ;￨e private￨e Hashtable￨e tasks￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e targets￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e threadStacks￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e XmlLogger￨e .￨e TimedElement￨e buildElement￨e =￨e null￨e ;￨e private￨d static￨d class￨d TimedElement￨d {￨d long￨e startTime￨e ;￨e Element￨e element￨e ;￨e }￨d public￨f XmlLogger￨f (￨f )￨f {￨f }￨f public￨f void￨f buildStarted￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f buildFinished￨f (￨f BuildEvent￨p event￨p )￨f {￨f long￨e totalTime￨e =￨e (￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e )￨e -￨e (￨e buildElement￨e .￨e startTime￨e )￨e ;￨e buildElement￨e .￨e element￨e .￨e setAttribute￨e (￨e XmlLogger￨e .￨e TIME_ATTR￨e ,￨e DefaultLogger￨e .￨e formatTime￨e (￨e totalTime￨e )￨e )￨e ;￨e if￨j (￨j (￨c event￨c .￨c getException￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j buildElement￨e .￨e element￨e .￨e setAttribute￨e (￨e XmlLogger￨e .￨e ERROR_ATTR￨e ,￨e event￨e .￨e getException￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f String￨e outFilename￨e =￨e event￨e .￨e getProject￨e (￨e )￨e .￨e getProperty￨e (￨e "XmlLogger.file"￨e )￨e ;￨e if￨j (￨j outFilename￨c ==￨c null￨c )￨j {￨j outFilename￨e =￨e "log.xml"￨e ;￨e }￨j Writer￨e out￨e =￨e new￨e OutputStreamWriter￨e (￨e new￨e FileOutputStream￨e (￨e outFilename￨e )￨e ,￨e "UTF8"￨e )￨e ;￨e <START_BUG>￨b out￨b .￨b write￨b (￨b "<?xml<seq2seq4repair_space>version=\"1.0\"?>\n"￨b )￨b ;￨b <END_BUG>￨b out￨e .￨e write￨e (￨e "<?xml:stylesheet<seq2seq4repair_space>type=\"text/xsl\"<seq2seq4repair_space>href=\"log.xsl\"?>\n\n"￨e )￨e ;￨e new￨e DOMElementWriter￨e (￨e )￨e .￨e write￨e (￨e buildElement￨e .￨e element￨e ,￨e out￨e ,￨e 0￨e ,￨e "\t"￨e )￨e ;￨e out￨e .￨e flush￨e (￨e )￨e ;￨e out￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p exc￨p )￨f {￨f throw￨e new￨e BuildException￨e (￨e "Unable<seq2seq4repair_space>to<seq2seq4repair_space>close<seq2seq4repair_space>log<seq2seq4repair_space>file"￨e ,￨e exc￨e )￨e ;￨e }￨f buildElement￨e =￨e null￨e ;￨e }￨f private￨f Stack￨f getStack￨f (￨f )￨f {￨f }￨f public￨f void￨f targetStarted￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f targetFinished￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f taskStarted￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f taskFinished￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f messageLogged￨f (￨f BuildEvent￨p event￨p )￨f {￨f }￨f }￨d
public￨d class￨d LabeledStatement￨d extends￨d Statement￨d {￨d public￨e Statement￨e statement￨e ;￨e public￨e char￨e [￨e ]￨e label￨e ;￨e public￨e Label￨e targetLabel￨e ;￨e int￨e mergedInitStateIndex￨e =￨e -￨e 1￨e ;￨e public￨f LabeledStatement￨f (￨f char￨p [￨p ]￨p label￨p ,￨p Statement￨p statement￨p ,￨p int￨p sourceStart￨p ,￨p int￨p sourceEnd￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f ASTNode￨f concreteStatement￨f (￨f )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f int￨e pc￨e =￨e codeStream￨e .￨e position￨e ;￨e if￨j (￨j (￨c targetLabel￨c )￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b targetLabel￨b .￨b codeStream￨b =￨b codeStream￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c statement￨c )￨c !=￨c null￨c )￨j {￨j statement￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e )￨e ;￨e }￨j targetLabel￨e .￨e place￨e (￨e )￨e ;￨e }￨j if￨j (￨j (￨c mergedInitStateIndex￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j codeStream￨e .￨e removeNotDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e mergedInitStateIndex￨e )￨e ;￨e }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f public￨f void￨f resetStateForCodeGeneration￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d StatefulComponentDescription￨d extends￨d SessionBeanComponentDescription￨d {￨d private￨e Method￨e afterBegin￨e ;￨e private￨e Method￨e afterCompletion￨e ;￨e private￨e Method￨e beforeCompletion￨e ;￨e private￨e final￨e Map￨e <￨e MethodIdentifier￨e ,￨e StatefulComponentDescription￨e .￨e StatefulRemoveMethod￨e >￨e removeMethods￨e =￨e new￨e HashMap￨e <￨e MethodIdentifier￨e ,￨e StatefulComponentDescription￨e .￨e StatefulRemoveMethod￨e >￨e (￨e )￨e ;￨e private￨e StatefulTimeoutInfo￨e statefulTimeout￨e ;￨e private￨e CacheInfo￨e cache￨e ;￨e private￨e Map￨e <￨e Method￨e ,￨e String￨e >￨e initMethods￨e =￨e new￨e HashMap￨e <￨e Method￨e ,￨e String￨e >￨e (￨e 0￨e )￨e ;￨e public￨d class￨d StatefulRemoveMethod￨d {￨d private￨e final￨e MethodIdentifier￨e methodIdentifier￨e ;￨e private￨e final￨e boolean￨e retainIfException￨e ;￨e StatefulRemoveMethod￨f (￨f final￨p MethodIdentifier￨p method￨p ,￨p final￨p boolean￨p retainIfException￨p )￨f {￨f }￨f public￨f MethodIdentifier￨f getMethodIdentifier￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRetainIfException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d public￨f StatefulComponentDescription￨f (￨f final￨p String￨p componentName￨p ,￨p final￨p String￨p componentClassName￨p ,￨p final￨p EjbJarDescription￨p ejbJarDescription￨p ,￨p final￨p ServiceName￨p deploymentUnitServiceName￨p ,￨p final￨p SessionBeanMetaData￨p descriptorData￨p )￨f {￨f }￨f private￨f void￨f addInitMethodInvokingInterceptor￨f (￨f )￨f {￨f }￨f private￨f void￨f addStatefulSessionSynchronizationInterceptor￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f ComponentConfiguration￨f createConfiguration￨f (￨f final￨p ClassIndex￨p classIndex￨p ,￨p final￨p ClassLoader￨p moduleClassLoder￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f allowsConcurrentAccess￨f (￨f )￨f {￨f }￨f public￨f Method￨f getAfterBegin￨f (￨f )￨f {￨f }￨f public￨f Method￨f getAfterCompletion￨f (￨f )￨f {￨f }￨f public￨f Method￨f getBeforeCompletion￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f SessionBeanType￨f getSessionBeanType￨f (￨f )￨f {￨f }￨f public￨f void￨f setAfterBegin￨f (￨f final￨p Method￨p afterBegin￨p )￨f {￨f }￨f public￨f void￨f setAfterCompletion￨f (￨f final￨p Method￨p afterCompletion￨p )￨f {￨f }￨f public￨f void￨f setBeforeCompletion￨f (￨f final￨p Method￨p afterCompletion￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f setupViewInterceptors￨f (￨f EJBViewDescription￨p view￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ViewConfigurator￨f getSessionBeanObjectViewConfigurator￨f (￨f )￨f {￨f }￨f private￨f void￨f addViewSerializationInterceptor￨f (￨f final￨p ViewDescription￨p view￨p )￨f {￨f view￨e .￨e setSerializable￨e (￨e true￨e )￨e ;￨e view￨e .￨e setUseWriteReplace￨e (￨e true￨e )￨e ;￨e view￨f .￨f getConfigurators￨f (￨f )￨f .￨f add￨f (￨f new￨f ViewConfigurator￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f configure￨f (￨f final￨f DeploymentPhaseContext￨f context￨f ,￨f final￨f ComponentConfiguration￨f componentConfiguration￨f ,￨f final￨f ViewDescription￨f description￨f ,￨f final￨f ViewConfiguration￨f configuration￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentReflectionIndex￨e index￨e =￨e context￨e .￨e getDeploymentUnit￨e (￨e )￨e .￨e getAttachment￨e (￨e REFLECTION_INDEX￨e )￨e ;￨e ClassReflectionIndex￨d <￨d WriteReplaceInterface￨d >￨d classIndex￨d =￨d index￨d .￨d getClassIndex￨d (￨d WriteReplaceInterface￨d .￨d class￨d )￨d ;￨d for￨d (￨d Method￨d method￨d :￨d classIndex￨d .￨d getMethods￨d (￨d )￨d )￨d {￨d <START_BUG>￨b configuration￨b .￨b addClientInterceptor￨b (￨b method￨b ,￨b new￨b WriteReplaceInterceptor￨b .￨b Factory￨b (￨b configuration￨b .￨b getViewServiceName￨b (￨b )￨b .￨b getCanonicalName￨b (￨b )￨b )￨b ,￨b WRITE_REPLACE￨b )￨b ;￨b <END_BUG>￨b }￨d }￨f }￨f )￨e ;￨e }￨f public￨f void￨f addRemoveMethod￨f (￨f final￨p MethodIdentifier￨p removeMethod￨p ,￨p final￨p boolean￨p retainIfException￨p )￨f {￨f }￨f public￨f Collection￨f <￨f StatefulComponentDescription￨f .￨f StatefulRemoveMethod￨f >￨f getRemoveMethods￨f (￨f )￨f {￨f }￨f public￨f StatefulTimeoutInfo￨f getStatefulTimeout￨f (￨f )￨f {￨f }￨f public￨f void￨f setStatefulTimeout￨f (￨f final￨p StatefulTimeoutInfo￨p statefulTimeout￨p )￨f {￨f }￨f private￨f void￨f addStatefulInstanceAssociatingInterceptor￨f (￨f final￨p EJBViewDescription￨p view￨p )￨f {￨f }￨f private￨f void￨f addRemoveMethodInterceptor￨f (￨f final￨p ViewDescription￨p view￨p )￨f {￨f }￨f public￨f void￨f addInitMethod￨f (￨f final￨p Method￨p method￨p ,￨p final￨p String￨p createMethod￨p )￨f {￨f }￨f public￨f Map￨f <￨f Method￨f ,￨f String￨f >￨f getInitMethods￨f (￨f )￨f {￨f }￨f public￨f CacheInfo￨f getCache￨f (￨f )￨f {￨f }￨f public￨f void￨f setCache￨f (￨f CacheInfo￨p cache￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f isPassivationApplicable￨f (￨f )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d StatefulBeanTestCase￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d StatefulBeanTestCase￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d @￨d Deployment￨d public￨d static￨d JavaArchive￨d createDeployment￨d (￨d )￨d {￨d }￨d @￨e EJB￨e (￨e mappedName￨e =￨e "java:global/ejb3-sfsb-example/SimpleStatefulSessionBean!org.jboss.as.demos.ejb3.archive.SimpleStatefulSessionLocal"￨e )￨e private￨e SimpleStatefulSessionLocal￨e localSfsb￨e ;￨e @￨f Test￨f public￨f void￨f testSFSB￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f String￨e state￨e =￨e "not<seq2seq4repair_space>in<seq2seq4repair_space>a<seq2seq4repair_space>good<seq2seq4repair_space>mood!"￨e ;￨e localSfsb￨e .￨e setState￨e (￨e state￨e )￨e ;￨e String￨e storedState￨e =￨e localSfsb￨e .￨e getState￨e (￨e )￨e ;￨e <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b "Unexpected<seq2seq4repair_space>state<seq2seq4repair_space>returned<seq2seq4repair_space>from<seq2seq4repair_space>stateful<seq2seq4repair_space>session<seq2seq4repair_space>bean"￨b ,￨b (￨b (￨b (￨b SimpleInterceptor￨b .￨b class￨b .￨b getSimpleName￨b (￨b )￨b )￨b +￨b "#"￨b )￨b +￨b state￨b )￨b ,￨b storedState￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
final￨d class￨d EmbedClob￨d extends￨d ConnectionChild￨d implements￨d Clob￨d ,￨d EngineLOB￨d {￨d private￨e InternalClob￨e clob￨e ;￨e private￨e boolean￨e isValid￨e =￨e true￨e ;￨e private￨e int￨e locator￨e ;￨e EmbedClob￨f (￨f EmbedConnection￨f con￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f EmbedClob￨f (￨f EmbedConnection￨f con￨f ,￨f DataValueDescriptor￨f dvd￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f long￨f length￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f getSubString￨f (￨f long￨f pos￨f ,￨f int￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Reader￨f getCharacterStream￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getAsciiStream￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f String￨f searchStr￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f Clob￨f searchClob￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f int￨f setString￨f (￨f long￨f pos￨f ,￨f String￨f str￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f int￨f setString￨f (￨f long￨f pos￨f ,￨f String￨f str￨f ,￨f int￨f offset￨f ,￨f int￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f OutputStream￨f setAsciiStream￨f (￨f long￨f pos￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Writer￨f setCharacterStream￨f (￨f long￨f pos￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f truncate￨f (￨f long￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f free￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f Reader￨f getCharacterStream￨f (￨f long￨f pos￨f ,￨f long￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f checkValidity￨e (￨e )￨e ;￨e if￨j (￨j pos￨c <=￨c 0￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_BAD_POSITION￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e )￨e ;￨e }￨j if￨j (￨j length￨c <￨c 0￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_NONPOSITIVE_LENGTH￨e ,￨e new￨e Long￨e (￨e length￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b length￨b >￨b (￨b (￨b this￨b .￨b length￨b (￨b )￨b )￨b -￨b pos￨b )￨b )￨b {￨b <END_BUG>￨b throw￨e Util￨e .￨e generateCsSQLException￨e (￨e POS_AND_LENGTH_GREATER_THAN_LOB￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e ,￨e new￨e Long￨e (￨e length￨e )￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f return￨e new￨e ClobUpdatableReader￨e (￨e this￨e ,￨e (￨e pos￨e -￨e 1￨e )￨e ,￨e length￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f throw￨e Util￨e .￨e setStreamFailure￨e (￨e ioe￨e )￨e ;￨e }￨f }￨f private￨f void￨f checkValidity￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f makeWritableClobClone￨f (￨f )￨f throws￨f IOException￨f ,￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f makeWritableClobClone￨f (￨f long￨f len￨f )￨f throws￨f IOException￨f ,￨f SQLException￨f (￨f )￨f {￨f }￨f InternalClob￨f getInternalClob￨f (￨f )￨f {￨f }￨f public￨f int￨f getLocator￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d KindedPointcut￨d extends￨d Pointcut￨d {￨d Kind￨e kind￨e ;￨e private￨e SignaturePattern￨e signature￨e ;￨e private￨e Set￨e matchKinds￨e ;￨e private￨e ShadowMunger￨e munger￨e =￨e null￨e ;￨e public￨f KindedPointcut￨f (￨f Shadow￨p .￨p Kind￨p kind￨p ,￨p SignaturePattern￨p signature￨p )￨f {￨f }￨f public￨f KindedPointcut￨f (￨f Shadow￨p .￨p Kind￨p kind￨p ,￨p SignaturePattern￨p signature￨p ,￨p ShadowMunger￨p munger￨p )￨f {￨f }￨f public￨f SignaturePattern￨f getSignature￨f (￨f )￨f {￨f }￨f public￨f Set￨f couldMatchKinds￨f (￨f )￨f {￨f }￨f public￨f boolean￨f couldEverMatchSameJoinPointsAs￨f (￨f KindedPointcut￨p other￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f fastMatch￨f (￨f FastMatchInfo￨p info￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f fastMatch￨f (￨f Class￨p targetType￨p )￨f {￨f }￨f protected￨f FuzzyBoolean￨f matchInternal￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f private￨f void￨f warnOnBridgeMethod￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f match￨f (￨f JoinPoint￨p .￨p StaticPart￨p jpsp￨p )￨f {￨f }￨f public￨f boolean￨f matchesDynamically￨f (￨f Object￨p thisObject￨p ,￨p Object￨p targetObject￨p ,￨p Object￨p [￨p ]￨p args￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f matchesStatically￨f (￨f String￨p joinpointKind￨p ,￨p Member￨p member￨p ,￨p Class￨p thisClass￨p ,￨p Class￨p targetClass￨p ,￨p Member￨p withinCode￨p )￨f {￨f }￨f private￨f void￨f warnOnConfusingSig￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f postRead￨f (￨f ResolvedType￨p enclosingType￨p )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Pointcut￨f read￨f (￨f VersionedDataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p )￨f {￨f if￨j (￨j (￨c kind￨c )￨c ==￨c (￨c Shadow￨c .￨c Initialization￨c )￨c )￨j {￨j }￨j signature￨e =￨e signature￨e .￨e resolveBindings￨e (￨e scope￨e ,￨e bindings￨e )￨e ;￨e if￨j (￨j (￨c kind￨c )￨c ==￨c (￨c Shadow￨c .￨c ConstructorExecution￨c )￨c )￨j {￨j if￨j (￨j (￨c signature￨c .￨c getDeclaringType￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j World￨e world￨e =￨e scope￨e .￨e getWorld￨e (￨e )￨e ;￨e UnresolvedType￨e exactType￨e =￨e signature￨e .￨e getDeclaringType￨e (￨e )￨e .￨e getExactType￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c (￨c signature￨c .￨c getKind￨c (￨c )￨c )￨c ==￨c (￨c org￨c .￨c aspectj￨c .￨c weaver￨c .￨c Member￨c .￨c CONSTRUCTOR￨c )￨c )￨c &&￨c (￨c !￨c (￨c exactType￨c .￨c equals￨c (￨c MISSING￨c )￨c )￨c )￨c )￨c &&￨c (￨c exactType￨c .￨c resolve￨c (￨c world￨c )￨c .￨c isInterface￨c (￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c signature￨c .￨c getDeclaringType￨c (￨c )￨c .￨c isIncludeSubtypes￨c (￨c )￨c )￨c )￨c )￨j {￨j world￨e .￨e getLint￨e (￨e )￨e .￨e noInterfaceCtorJoinpoint￨e .￨e signal￨e (￨e exactType￨e .￨e toString￨e (￨e )￨e ,￨e getSourceLocation￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨j if￨j (￨j (￨c kind￨c )￨c ==￨c (￨c Shadow￨c .￨c StaticInitialization￨c )￨c )￨j {￨j UnresolvedType￨e exactType￨e =￨e signature￨e .￨e getDeclaringType￨e (￨e )￨e .￨e getExactType￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b exactType￨b .￨b isParameterizedType￨b (￨b )￨b )￨b &&￨b (￨b !￨b (￨b signature￨b .￨b getDeclaringType￨b (￨b )￨b .￨b isIncludeSubtypes￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e message￨e (￨e MessageUtil￨e .￨e error￨e (￨e WeaverMessages￨e .￨e format￨e (￨e NO_STATIC_INIT_JPS_FOR_PARAMETERIZED_TYPES￨e )￨e ,￨e getSourceLocation￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨f public￨f void￨f resolveBindingsFromRTTI￨f (￨f )￨f {￨f }￨f protected￨f Test￨f findResidueInternal￨f (￨f Shadow￨p shadow￨p ,￨p ExposedState￨p state￨p )￨f {￨f }￨f public￨f Pointcut￨f concretize1￨f (￨f ResolvedType￨p inAspect￨p ,￨p IntMap￨p bindings￨p )￨f {￨f }￨f public￨f Kind￨f getKind￨f (￨f )￨f {￨f }￨f public￨f Object￨f accept￨f (￨f PatternNodeVisitor￨p visitor￨p ,￨p Object￨p data￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d @￨d Category￨d (￨d CommonCriteria￨d .￨d class￨d )￨d public￨d class￨d EJBSecurityTestCase￨d {￨d private￨e static￨e Context￨e ctx￨e ;￨e @￨f AfterClass￨f public￨f static￨f void￨f afterClass￨f (￨f )￨f throws￨f NamingException￨f (￨f )￨f {￨f }￨f @￨f BeforeClass￨f public￨f static￨f void￨f beforeClass￨f (￨f )￨f throws￨f NamingException￨f (￨f )￨f {￨f }￨f @￨f Deployment￨f public￨f static￨f JavaArchive￨f createDeployment￨f (￨f )￨f {￨f final￨e JavaArchive￨e jar￨e =￨e ShrinkWrap￨e .￨e create￨e (￨e JavaArchive￨e .￨e class￨e ,￨e "ejb-security-test.jar"￨e )￨e ;￨e jar￨e .￨e addPackage￨e (￨e AnnotatedSLSB￨e .￨e class￨e .￨e getPackage￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b jar￨b .￨b addAsManifestResource￨b (￨b "ejb/security/ejb-jar.xml"￨b ,￨b "ejb-jar.xml"￨b )￨b ;￨b <END_BUG>￨b jar￨e .￨e addAsManifestResource￨e (￨e EJBSecurityTestCase￨e .￨e class￨e .￨e getPackage￨e (￨e )￨e ,￨e "jboss-ejb3.xml"￨e ,￨e "jboss-ejb3.xml"￨e )￨e ;￨e jar￨e .￨e addPackage￨e (￨e CommonCriteria￨e .￨e class￨e .￨e getPackage￨e (￨e )￨e )￨e ;￨e return￨e jar￨e ;￨e }￨f private￨f static￨f <￨f T￨f >￨f T￨f lookup￨f (￨f final￨f Class￨f <￨f ?￨f >￨f beanClass￨f ,￨f final￨f Class￨f <￨f T￨f >￨f viewClass￨f )￨f throws￨f NamingException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDenyAllAnnotation￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testEJB2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testExcludeList￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSecurityOnBeanInAbsenceOfExplicitSecurityDomain￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testEmptyRolesAllowedAnnotationValue￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d HttpMirrorServer￨d extends￨d Thread￨d implements￨d Stoppable￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e int￨e ACCEPT_TIMEOUT￨e =￨e 1000￨e ;￨e private￨e final￨e int￨e daemonPort￨e ;￨e private￨e volatile￨e boolean￨e running￨e ;￨e private￨e volatile￨e Exception￨e except￨e ;￨e public￨f HttpMirrorServer￨f (￨f int￨p port￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f public￨f void￨f stopServer￨f (￨f )￨f {￨f }￨f public￨f Exception￨f getException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f <START_BUG>￨b int￨b port￨b =￨b 8081￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c args￨c .￨c length￨c )￨c >￨c 0￨c )￨j {￨j port￨e =￨e Integer￨e .￨e parseInt￨e (￨e args￨e [￨e 0￨e ]￨e )￨e ;￨e }￨j LoggingManager￨e .￨e setPriority￨e (￨e "INFO"￨e )￨e ;￨e LoggingManager￨e .￨e setLoggingLevels￨e (￨e System￨e .￨e getProperties￨e (￨e )￨e )￨e ;￨e HttpMirrorServer￨e serv￨e =￨e new￨e HttpMirrorServer￨e (￨e port￨e )￨e ;￨e serv￨e .￨e start￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d TreeColumn￨d extends￨d Item￨d {￨d Tree￨e parent￨e ;￨e boolean￨e resizable￨e ;￨e boolean￨e moveable￨e ;￨e public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f void￨f addControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f int￨f getAlignment￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMoveable￨f (￨f )￨f {￨f }￨f String￨f getNameText￨f (￨f )￨f {￨f }￨f public￨f Tree￨f getParent￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getResizable￨f (￨f )￨f {￨f }￨f public￨f int￨f getWidth￨f (￨f )￨f {￨f }￨f public￨f void￨f pack￨f (￨f )￨f {￨f checkWidget￨e (￨e )￨e ;￨e int￨e index￨e =￨e parent￨e .￨e indexOf￨e (￨e this￨e )￨e ;￨e if￨j (￨j index￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j return￨e ;￨e }￨j int￨e columnWidth￨e =￨e 0￨e ;￨e int￨e hwnd￨e =￨e parent￨e .￨e handle￨e ;￨e int￨e hDC￨e =￨e OS￨e .￨e GetDC￨e (￨e hwnd￨e )￨e ;￨e int￨e oldFont￨e =￨e 0￨e ;￨e int￨e newFont￨e =￨e OS￨e .￨e SendMessage￨e (￨e hwnd￨e ,￨e WM_GETFONT￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e if￨j (￨j newFont￨c !=￨c 0￨c )￨j {￨j oldFont￨e =￨e OS￨e .￨e SelectObject￨e (￨e hDC￨e ,￨e newFont￨e )￨e ;￨e }￨j int￨e cp￨e =￨e parent￨e .￨e getCodePage￨e (￨e )￨e ;￨e RECT￨e rect￨e =￨e new￨e RECT￨e (￨e )￨e ;￨e int￨e flags￨e =￨e (￨e OS￨e .￨e DT_CALCRECT￨e )￨e |￨e (￨e OS￨e .￨e DT_NOPREFIX￨e )￨e ;￨e TVITEM￨e tvItem￨e =￨e new￨e TVITEM￨e (￨e )￨e ;￨e tvItem￨e .￨e mask￨e =￨e OS￨e .￨e TVIF_PARAM￨e ;￨e int￨e hItem￨e =￨e OS￨e .￨e SendMessage￨e (￨e hwnd￨e ,￨e TVM_GETNEXTITEM￨e ,￨e TVGN_ROOT￨e ,￨e 0￨e )￨e ;￨e while￨l (￨l hItem￨c !=￨c 0￨c )￨l {￨l hItem￨e =￨e OS￨e .￨e SendMessage￨e (￨e hwnd￨e ,￨e TVM_GETNEXTITEM￨e ,￨e TVGN_NEXTVISIBLE￨e ,￨e hItem￨e )￨e ;￨e tvItem￨e .￨e hItem￨e =￨e hItem￨e ;￨e OS￨e .￨e SendMessage￨e (￨e hwnd￨e ,￨e TVM_GETITEM￨e ,￨e 0￨e ,￨e tvItem￨e )￨e ;￨e TreeItem￨e item￨e =￨e parent￨e .￨e items￨e [￨e tvItem￨e .￨e lParam￨e ]￨e ;￨e if￨j (￨j index￨c ==￨c 0￨c )￨j {￨j rect￨e .￨e left￨e =￨e item￨e .￨e handle￨e ;￨e if￨j (￨j (￨c OS￨c .￨c SendMessage￨c (￨c hwnd￨c ,￨c TVM_GETITEMRECT￨c ,￨c 1￨c ,￨c rect￨c )￨c )￨c !=￨c 0￨c )￨j {￨j columnWidth￨e =￨e Math￨e .￨e max￨e (￨e columnWidth￨e ,￨e rect￨e .￨e right￨e )￨e ;￨e }￨j }￨j else￨j {￨j int￨e imageWidth￨e =￨e 0￨e ;￨e int￨e textWidth￨e =￨e 0￨e ;￨e Image￨e image￨e =￨e (￨e (￨e item￨e .￨e images￨e )￨e !=￨e null￨e )￨e ?￨e item￨e .￨e images￨e [￨e index￨e ]￨e :￨e null￨e ;￨e if￨j (￨j image￨c !=￨c null￨c )￨j {￨j Rectangle￨e bounds￨e =￨e image￨e .￨e getBounds￨e (￨e )￨e ;￨e imageWidth￨e =￨e bounds￨e .￨e width￨e ;￨e }￨j String￨e string￨e =￨e (￨e (￨e item￨e .￨e strings￨e )￨e !=￨e null￨e )￨e ?￨e item￨e .￨e strings￨e [￨e index￨e ]￨e :￨e null￨e ;￨e if￨j (￨j string￨c !=￨c null￨c )￨j {￨j TCHAR￨e buffer￨e =￨e new￨e TCHAR￨e (￨e cp￨e ,￨e string￨e ,￨e false￨e )￨e ;￨e OS￨e .￨e DrawText￨e (￨e hDC￨e ,￨e buffer￨e ,￨e buffer￨e .￨e length￨e (￨e )￨e ,￨e rect￨e ,￨e flags￨e )￨e ;￨e textWidth￨e =￨e (￨e rect￨e .￨e right￨e )￨e -￨e (￨e rect￨e .￨e left￨e )￨e ;￨e }￨j columnWidth￨e =￨e Math￨e .￨e max￨e (￨e columnWidth￨e ,￨e (￨e (￨e imageWidth￨e +￨e textWidth￨e )￨e +￨e (￨e (￨e Tree￨e .￨e INSET￨e )￨e *￨e 3￨e )￨e )￨e )￨e ;￨e }￨j }￨l <START_BUG>￨b TCHAR￨b buffer￨b =￨b new￨b TCHAR￨b (￨b cp￨b ,￨b text￨b ,￨b true￨b )￨b ;￨b <END_BUG>￨b OS￨e .￨e DrawText￨e (￨e hDC￨e ,￨e buffer￨e ,￨e buffer￨e .￨e length￨e (￨e )￨e ,￨e rect￨e ,￨e flags￨e )￨e ;￨e int￨e headerWidth￨e =￨e (￨e (￨e rect￨e .￨e right￨e )￨e -￨e (￨e rect￨e .￨e left￨e )￨e )￨e +￨e (￨e Tree￨e .￨e HEADER_MARGIN￨e )￨e ;￨e if￨j (￨j (￨c (￨c image￨c )￨c !=￨c null￨c )￨c ||￨c (￨c (￨c parent￨c .￨c sortColumn￨c )￨c ==￨c (￨c this￨c )￨c )￨c )￨j {￨j Image￨e headerImage￨e =￨e null￨e ;￨e if￨j (￨j (￨c (￨c parent￨c .￨c sortColumn￨c )￨c ==￨c (￨c this￨c )￨c )￨c &&￨c (￨c (￨c parent￨c .￨c sortDirection￨c )￨c !=￨c (￨c SWT￨c .￨c NULL￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c OS￨c .￨c COMCTL32_MAJOR￨c )￨c <￨c 6￨c )￨j {￨j headerImage￨e =￨e display￨e .￨e getSortImage￨e (￨e parent￨e .￨e sortDirection￨e )￨e ;￨e }￨j else￨j {￨j headerWidth￨e +=￨e Tree￨e .￨e SORT_WIDTH￨e ;￨e }￨j }￨j else￨j {￨j headerImage￨e =￨e image￨e ;￨e }￨j if￨j (￨j headerImage￨c !=￨c null￨c )￨j {￨j Rectangle￨e bounds￨e =￨e headerImage￨e .￨e getBounds￨e (￨e )￨e ;￨e headerWidth￨e +=￨e bounds￨e .￨e width￨e ;￨e }￨j int￨e margin￨e =￨e 0￨e ;￨e int￨e hwndHeader￨e =￨e parent￨e .￨e hwndHeader￨e ;￨e if￨j (￨j (￨c hwndHeader￨c !=￨c 0￨c )￨c &&￨c (￨c (￨c OS￨c .￨c COMCTL32_VERSION￨c )￨c >=￨c (￨c OS￨c .￨c VERSION￨c (￨c 5￨c ,￨c 80￨c )￨c )￨c )￨c )￨j {￨j margin￨e =￨e OS￨e .￨e SendMessage￨e (￨e hwndHeader￨e ,￨e HDM_GETBITMAPMARGIN￨e ,￨e 0￨e ,￨e 0￨e )￨e ;￨e }￨j else￨j {￨j margin￨e =￨e (￨e OS￨e .￨e GetSystemMetrics￨e (￨e SM_CXEDGE￨e )￨e )￨e *￨e 3￨e ;￨e }￨j headerWidth￨e +=￨e margin￨e *￨e 2￨e ;￨e }￨j if￨j (￨j newFont￨c !=￨c 0￨c )￨j {￨j OS￨e .￨e SelectObject￨e (￨e hDC￨e ,￨e oldFont￨e )￨e ;￨e }￨j OS￨e .￨e ReleaseDC￨e (￨e hwnd￨e ,￨e hDC￨e )￨e ;￨e setWidth￨e (￨e Math￨e .￨e max￨e (￨e headerWidth￨e ,￨e columnWidth￨e )￨e )￨e ;￨e }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseParent￨f (￨f )￨f {￨f }￨f public￨f void￨f removeControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setAlignment￨f (￨f int￨p alignment￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f void￨f setImage￨f (￨f Image￨p image￨p ,￨p boolean￨p sort￨p ,￨p boolean￨p right￨p )￨f {￨f }￨f public￨f void￨f setMoveable￨f (￨f boolean￨p moveable￨p )￨f {￨f }￨f public￨f void￨f setResizable￨f (￨f boolean￨p resizable￨p )￨f {￨f }￨f void￨f setSortDirection￨f (￨f int￨p direction￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setWidth￨f (￨f int￨p width￨p )￨f {￨f }￨f }￨d
public￨d class￨d DrawApplication￨d extends￨d JFrame￨d implements￨d DrawingEditor￨d ,￨d PaletteListener￨d ,￨d VersionRequester￨d {￨d private￨e Tool￨e fTool￨e ;￨e private￨e Iconkit￨e fIconkit￨e ;￨e private￨e JTextField￨e fStatusLine￨e ;￨e private￨e DrawingView￨e fView￨e ;￨e private￨e ToolButton￨e fDefaultToolButton￨e ;￨e private￨e ToolButton￨e fSelectedToolButton￨e ;￨e private￨e String￨e fApplicationName￨e ;￨e private￨e StorageFormatManager￨e fStorageFormatManager￨e ;￨e private￨e UndoManager￨e myUndoManager￨e ;￨e protected￨e static￨e String￨e fgUntitled￨e =￨e "untitled"￨e ;￨e private￨e final￨e EventListenerList￨e listenerList￨e =￨e new￨e EventListenerList￨e (￨e )￨e ;￨e private￨e DesktopListener￨e fDesktopListener￨e ;￨e private￨e Desktop￨e fDesktop￨e ;￨e private￨e static￨e final￨e String￨e fgDrawPath￨e =￨e "/CH/ifa/draw/"￨e ;￨e public￨e static￨e final￨e String￨e IMAGES￨e =￨e (￨e DrawApplication￨e .￨e fgDrawPath￨e )￨e +￨e "images/"￨e ;￨e protected￨e static￨e int￨e winCount￨e =￨e 0￨e ;￨e public￨e static￨e final￨e int￨e FILE_MENU￨e =￨e 0￨e ;￨e public￨e static￨e final￨e int￨e EDIT_MENU￨e =￨e 1￨e ;￨e public￨e static￨e final￨e int￨e ALIGNMENT_MENU￨e =￨e 2￨e ;￨e public￨e static￨e final￨e int￨e ATTRIBUTES_MENU￨e =￨e 3￨e ;￨e public￨f DrawApplication￨f (￨f )￨f {￨f }￨f public￨f DrawApplication￨f (￨f String￨p title￨p )￨f {￨f }￨f protected￨f DrawApplication￨f createApplication￨f (￨f )￨f {￨f }￨f public￨f void￨f newView￨f (￨f )￨f {￨f }￨f public￨f void￨f newWindow￨f (￨f Drawing￨p initialDrawing￨p )￨f {￨f }￨f public￨f void￨f open￨f (￨f )￨f {￨f }￨f protected￨f synchronized￨f void￨f open￨f (￨f DrawingView￨p newDrawingView￨p )￨f {￨f }￨f protected￨f void￨f addListeners￨f (￨f )￨f {￨f }￨f protected￨f void￨f createMenus￨f (￨f JMenuBar￨p mb￨p )￨f {￨f }￨f protected￨f void￨f addMenuIfPossible￨f (￨f JMenuBar￨p mb￨p ,￨p JMenu￨p newMenu￨p )￨f {￨f }￨f protected￨f JMenu￨f createFileMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createEditMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createAlignmentMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createDebugMenu￨f (￨f )￨f {￨f CommandMenu￨e menu￨e =￨e new￨e CommandMenu￨e (￨e "Debug"￨e )￨e ;￨e Command￨f cmd￨f =￨f new￨f AbstractCommand￨f (￨f "Simple<seq2seq4repair_space>Update"￨p ,￨p this￨p )￨f {￨f <START_BUG>￨b public￨b void￨b executable￨b (￨b )￨b {￨b <END_BUG>￨b this￨e .￨e view￨e (￨e )￨e .￨e setDisplayUpdate￨e (￨e new￨e SimpleUpdateStrategy￨e (￨e )￨e )￨e ;￨e }￨f ;￨e menu￨e .￨e add￨e (￨e cmd￨e )￨e ;￨e cmd￨f =￨f new￨f AbstractCommand￨f (￨f "Buffered<seq2seq4repair_space>Update"￨p ,￨p this￨p )￨f {￨f public￨f void￨f executable￨f (￨f )￨f {￨f this￨e .￨e view￨e (￨e )￨e .￨e setDisplayUpdate￨e (￨e new￨e BufferedUpdateStrategy￨e (￨e )￨e )￨e ;￨e }￨f }￨f ;￨e menu￨e .￨e add￨e (￨e cmd￨e )￨e ;￨e return￨e menu￨e ;￨e }￨f protected￨f JMenu￨f createAttributesMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createColorMenu￨f (￨f String￨p title￨p ,￨p FigureAttributeConstant￨p attribute￨p )￨f {￨f }￨f protected￨f JMenu￨f createArrowMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createFontMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createFontStyleMenu￨f (￨f )￨f {￨f }￨f protected￨f JMenu￨f createFontSizeMenu￨f (￨f )￨f {￨f }￨f public￨f JMenu￨f createLookAndFeelMenu￨f (￨f )￨f {￨f }￨f protected￨f JToolBar￨f createToolPalette￨f (￨f )￨f {￨f }￨f protected￨f void￨f createTools￨f (￨f JToolBar￨p palette￨p )￨f {￨f }￨f protected￨f Tool￨f createSelectionTool￨f (￨f )￨f {￨f }￨f protected￨f Tool￨f createDefaultTool￨f (￨f )￨f {￨f }￨f protected￨f void￨f setDefaultTool￨f (￨f Tool￨p newDefaultTool￨p )￨f {￨f }￨f public￨f Tool￨f getDefaultTool￨f (￨f )￨f {￨f }￨f protected￨f ToolButton￨f createToolButton￨f (￨f String￨p iconName￨p ,￨p String￨p toolName￨p ,￨p Tool￨p tool￨p )￨f {￨f }￨f protected￨f DrawingView￨f createDrawingView￨f (￨f )￨f {￨f }￨f protected￨f DrawingView￨f createDrawingView￨f (￨f Drawing￨p newDrawing￨p )￨f {￨f }￨f protected￨f DrawingView￨f createInitialDrawingView￨f (￨f )￨f {￨f }￨f protected￨f Dimension￨f getDrawingViewSize￨f (￨f )￨f {￨f }￨f protected￨f Drawing￨f createDrawing￨f (￨f )￨f {￨f }￨f protected￨f Desktop￨f createDesktop￨f (￨f )￨f {￨f }￨f protected￨f void￨f setDesktop￨f (￨f Desktop￨p newDesktop￨p )￨f {￨f }￨f public￨f Desktop￨f getDesktop￨f (￨f )￨f {￨f }￨f public￨f StorageFormatManager￨f createStorageFormatManager￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f setStorageFormatManager￨f (￨f StorageFormatManager￨p newStorageFormatManager￨p )￨f {￨f }￨f public￨f StorageFormatManager￨f getStorageFormatManager￨f (￨f )￨f {￨f }￨f protected￨f Dimension￨f defaultSize￨f (￨f )￨f {￨f }￨f protected￨f JTextField￨f createStatusLine￨f (￨f )￨f {￨f }￨f private￨f void￨f setStatusLine￨f (￨f JTextField￨p newStatusLine￨p )￨f {￨f }￨f protected￨f JTextField￨f getStatusLine￨f (￨f )￨f {￨f }￨f public￨f void￨f paletteUserSelected￨f (￨f PaletteButton￨p paletteButton￨p )￨f {￨f }￨f public￨f void￨f paletteUserOver￨f (￨f PaletteButton￨p paletteButton￨p ,￨p boolean￨p inside￨p )￨f {￨f }￨f public￨f Tool￨f tool￨f (￨f )￨f {￨f }￨f public￨f DrawingView￨f view￨f (￨f )￨f {￨f }￨f protected￨f void￨f setView￨f (￨f DrawingView￨p newView￨p )￨f {￨f }￨f public￨f DrawingView￨f [￨f ]￨f views￨f (￨f )￨f {￨f }￨f public￨f void￨f toolDone￨f (￨f )￨f {￨f }￨f public￨f void￨f figureSelectionChanged￨f (￨f DrawingView￨p view￨p )￨f {￨f }￨f protected￨f void￨f checkCommandMenu￨f (￨f CommandMenu￨p cm￨p )￨f {￨f }￨f public￨f void￨f addViewChangeListener￨f (￨f ViewChangeListener￨p vsl￨p )￨f {￨f }￨f public￨f void￨f removeViewChangeListener￨f (￨f ViewChangeListener￨p vsl￨p )￨f {￨f }￨f protected￨f void￨f fireViewSelectionChangedEvent￨f (￨f DrawingView￨p oldView￨p ,￨p DrawingView￨p newView￨p )￨f {￨f }￨f protected￨f void￨f fireViewCreatedEvent￨f (￨f DrawingView￨p view￨p )￨f {￨f }￨f protected￨f void￨f fireViewDestroyingEvent￨f (￨f DrawingView￨p view￨p )￨f {￨f }￨f public￨f void￨f showStatus￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setTool￨f (￨f Tool￨p t￨p ,￨p String￨p name￨p )￨f {￨f }￨f private￨f void￨f setSelected￨f (￨f ToolButton￨p button￨p )￨f {￨f }￨f public￨f void￨f exit￨f (￨f )￨f {￨f }￨f protected￨f void￨f destroy￨f (￨f )￨f {￨f }￨f public￨f void￨f promptNew￨f (￨f )￨f {￨f }￨f public￨f void￨f promptOpen￨f (￨f )￨f {￨f }￨f public￨f void￨f promptSaveAs￨f (￨f )￨f {￨f }￨f protected￨f JFileChooser￨f createOpenFileChooser￨f (￨f )￨f {￨f }￨f protected￨f JFileChooser￨f createSaveFileChooser￨f (￨f )￨f {￨f }￨f public￨f void￨f print￨f (￨f )￨f {￨f }￨f protected￨f void￨f saveDrawing￨f (￨f StorageFormat￨p storeFormat￨p ,￨p String￨p file￨p )￨f {￨f }￨f protected￨f void￨f loadDrawing￨f (￨f StorageFormat￨p restoreFormat￨p ,￨p String￨p file￨p )￨f {￨f }￨f private￨f void￨f newLookAndFeel￨f (￨f String￨p landf￨p )￨f {￨f }￨f protected￨f void￨f setDrawingTitle￨f (￨f String￨p drawingTitle￨p )￨f {￨f }￨f protected￨f String￨f getDrawingTitle￨f (￨f )￨f {￨f }￨f public￨f void￨f setApplicationName￨f (￨f String￨p applicationName￨p )￨f {￨f }￨f public￨f String￨f getApplicationName￨f (￨f )￨f {￨f }￨f protected￨f void￨f setUndoManager￨f (￨f UndoManager￨p newUndoManager￨p )￨f {￨f }￨f public￨f UndoManager￨f getUndoManager￨f (￨f )￨f {￨f }￨f protected￨f VersionControlStrategy￨f getVersionControlStrategy￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getRequiredVersions￨f (￨f )￨f {￨f }￨f public￨f String￨f getDefaultDrawingTitle￨f (￨f )￨f {￨f }￨f protected￨f DesktopListener￨f getDesktopListener￨f (￨f )￨f {￨f }￨f protected￨f void￨f setDesktopListener￨f (￨f DesktopListener￨p desktopPaneListener￨p )￨f {￨f }￨f protected￨f DesktopListener￨f createDesktopListener￨f (￨f )￨f {￨f }￨f protected￨f Iconkit￨f createIconkit￨f (￨f )￨f {￨f }￨f protected￨f void￨f setIconkit￨f (￨f Iconkit￨p newIconkit￨p )￨f {￨f }￨f protected￨f Iconkit￨f getIconkit￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d MethodVerifier￨d implements￨d TagBits￨d ,￨d TypeConstants￨d {￨d SourceTypeBinding￨e type￨e ;￨e HashtableOfObject￨e inheritedMethods￨e ;￨e HashtableOfObject￨e currentMethods￨e ;￨e ReferenceBinding￨e runtimeException￨e ;￨e ReferenceBinding￨e errorException￨e ;￨e LookupEnvironment￨e environment￨e ;￨e MethodVerifier￨f (￨f LookupEnvironment￨p environment￨p )￨f {￨f }￨f boolean￨f areMethodsEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f areParametersEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f areReturnTypesEqual￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f boolean￨f areTypesEqual￨f (￨f TypeBinding￨p one￨p ,￨p TypeBinding￨p two￨p )￨f {￨f }￨f boolean￨f canSkipInheritedMethods￨f (￨f )￨f {￨f }￨f boolean￨f canSkipInheritedMethods￨f (￨f MethodBinding￨p one￨p ,￨p MethodBinding￨p two￨p )￨f {￨f }￨f void￨f checkAbstractMethod￨f (￨f MethodBinding￨p abstractMethod￨p )￨f {￨f }￨f void￨f checkAgainstInheritedMethods￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p [￨p ]￨p methods￨p ,￨p int￨p length￨p ,￨p MethodBinding￨p [￨p ]￨p otherInheritedMethods￨p )￨f {￨f }￨f void￨f checkConcreteInheritedMethod￨f (￨f MethodBinding￨p concreteMethod￨p ,￨p MethodBinding￨p [￨p ]￨p abstractMethods￨p )￨f {￨f }￨f void￨f checkExceptions￨f (￨f MethodBinding￨p newMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f void￨f checkForBridgeMethod￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p [￨p ]￨p otherInheritedMethods￨p )￨f {￨f }￨f void￨f checkForInheritedNameClash￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p otherInheritedMethod￨p )￨f {￨f }￨f void￨f checkForNameClash￨f (￨f MethodBinding￨p currentMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f void￨f checkInheritedMethods￨f (￨f MethodBinding￨p [￨p ]￨p methods￨p ,￨p int￨p length￨p )￨f {￨f MethodBinding￨e first￨e =￨e methods￨e [￨e 0￨e ]￨e ;￨e int￨e index￨e =￨e length￨e ;￨e while￨l (￨l (￨c (￨c --￨c index￨c )￨c >￨c 0￨c )￨c &&￨c (￨c areReturnTypesEqual￨c (￨c first￨c ,￨c methods￨c [￨c index￨c ]￨c )￨c )￨c )￨l {￨l }￨l if￨j (￨j index￨c >￨c 0￨c )￨j {￨j problemReporter￨e (￨e )￨e .￨e inheritedMethodsHaveIncompatibleReturnTypes￨e (￨e this￨e .￨e type￨e ,￨e methods￨e ,￨e length￨e )￨e ;￨e return￨e ;￨e }￨j MethodBinding￨e concreteMethod￨e =￨e null￨e ;￨e if￨j (￨j !￨c (￨c type￨c .￨c isInterface￨c (￨c )￨c )￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c length￨c ;￨c (￨c --￨c i￨c )￨c >=￨c 0￨c ;￨c )￨l {￨l if￨j (￨j !￨c (￨c methods￨c [￨c i￨c ]￨c .￨c isAbstract￨c (￨c )￨c )￨c )￨j {￨j concreteMethod￨e =￨e methods￨e [￨e i￨e ]￨e ;￨e break￨e ;￨e }￨j }￨l }￨j if￨j (￨j concreteMethod￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b if￨b (￨b (￨b this￨b .￨b type￨b .￨b isClass￨b (￨b )￨b )￨b &&￨b (￨b !￨b (￨b this￨b .￨b type￨b .￨b isAbstract￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c length￨c ;￨c (￨c --￨c i￨c )￨c >=￨c 0￨c ;￨c )￨l {￨l if￨j (￨j mustImplementAbstractMethod￨c (￨c methods￨c [￨c i￨c ]￨c .￨c declaringClass￨c )￨c )￨j {￨j TypeDeclaration￨e typeDeclaration￨e =￨e this￨e .￨e type￨e .￨e scope￨e .￨e referenceContext￨e ;￨e if￨j (￨j typeDeclaration￨c !=￨c null￨c )￨j {￨j MethodDeclaration￨e missingAbstractMethod￨e =￨e typeDeclaration￨e .￨e addMissingAbstractMethodFor￨e (￨e methods￨e [￨e 0￨e ]￨e )￨e ;￨e missingAbstractMethod￨e .￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e abstractMethodMustBeImplemented￨e (￨e this￨e .￨e type￨e ,￨e methods￨e [￨e 0￨e ]￨e )￨e ;￨e }￨j else￨j {￨j problemReporter￨e (￨e )￨e .￨e abstractMethodMustBeImplemented￨e (￨e this￨e .￨e type￨e ,￨e methods￨e [￨e 0￨e ]￨e )￨e ;￨e }￨j return￨e ;￨e }￨j }￨l }￨e return￨e ;￨e }￨j MethodBinding￨e [￨e ]￨e abstractMethods￨e =￨e new￨e MethodBinding￨e [￨e length￨e -￨e 1￨e ]￨e ;￨e index￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c length￨c ;￨c (￨c --￨c i￨c )￨c >=￨c 0￨c ;￨c )￨l {￨l if￨j (￨j (￨c methods￨c [￨c i￨c ]￨c )￨c !=￨c concreteMethod￨c )￨j {￨j abstractMethods￨e [￨e (￨e index￨e ++￨e )￨e ]￨e =￨e methods￨e [￨e i￨e ]￨e ;￨e }￨j }￨l checkConcreteInheritedMethod￨e (￨e concreteMethod￨e ,￨e abstractMethods￨e )￨e ;￨e }￨f void￨f checkMethods￨f (￨f )￨f {￨f }￨f void￨f checkPackagePrivateAbstractMethod￨f (￨f MethodBinding￨p abstractMethod￨p )￨f {￨f }￨f void￨f computeInheritedMethods￨f (￨f )￨f {￨f }￨f void￨f computeInheritedMethods￨f (￨f ReferenceBinding￨p superclass￨p ,￨p ReferenceBinding￨p [￨p ]￨p superInterfaces￨p )￨f {￨f }￨f void￨f computeMethods￨f (￨f )￨f {￨f }￨f MethodBinding￨f computeSubstituteMethod￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p currentMethod￨p )￨f {￨f }￨f public￨f boolean￨f doesMethodOverride￨f (￨f MethodBinding￨p method￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f public￨f boolean￨f doReturnTypesCollide￨f (￨f MethodBinding￨p method￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f ReferenceBinding￨f errorException￨f (￨f )￨f {￨f }￨f boolean￨f isAsVisible￨f (￨f MethodBinding￨p newMethod￨p ,￨p MethodBinding￨p inheritedMethod￨p )￨f {￨f }￨f boolean￨f isInterfaceMethodImplemented￨f (￨f MethodBinding￨p inheritedMethod￨p ,￨p MethodBinding￨p existingMethod￨p ,￨p ReferenceBinding￨p superType￨p )￨f {￨f }￨f boolean￨f isSameClassOrSubclassOf￨f (￨f ReferenceBinding￨p testClass￨p ,￨p ReferenceBinding￨p superclass￨p )￨f {￨f }￨f boolean￨f mustImplementAbstractMethod￨f (￨f ReferenceBinding￨p declaringClass￨p )￨f {￨f }￨f boolean￨f mustImplementAbstractMethods￨f (￨f )￨f {￨f }￨f ProblemReporter￨f problemReporter￨f (￨f )￨f {￨f }￨f ProblemReporter￨f problemReporter￨f (￨f MethodBinding￨p currentMethod￨p )￨f {￨f }￨f ReferenceBinding￨f [￨f ]￨f resolvedExceptionTypesFor￨f (￨f MethodBinding￨p method￨p )￨f {￨f }￨f ReferenceBinding￨f runtimeException￨f (￨f )￨f {￨f }￨f void￨f verify￨f (￨f SourceTypeBinding￨p someType￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ExpressionLanguageScenarioTests￨d extends￨d ExpressionTestCase￨d {￨d public￨f void￨f testScenario_UsingStandardInfrastructure￨f (￨f )￨f {￨f }￨f public￨f void￨f testScenario_DefiningVariablesThatWillBeAccessibleInExpressions￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f SpelAntlrExpressionParser￨e parser￨e =￨e new￨e SpelAntlrExpressionParser￨e (￨e )￨e ;￨e StandardEvaluationContext￨e ctx￨e =￨e new￨e StandardEvaluationContext￨e (￨e )￨e ;￨e ctx￨e .￨e setVariable￨e (￨e "favouriteColour"￨e ,￨e "blue"￨e )￨e ;￨e List￨e <￨e Integer￨e >￨e primes￨e =￨e new￨e ArrayList￨e <￨e Integer￨e >￨e (￨e )￨e ;￨e primes￨e .￨e addAll￨e (￨e Arrays￨e .￨e asList￨e (￨e 2￨e ,￨e 3￨e ,￨e 5￨e ,￨e 7￨e ,￨e 11￨e ,￨e 13￨e ,￨e 17￨e )￨e )￨e ;￨e ctx￨e .￨e setVariable￨e (￨e "primes"￨e ,￨e primes￨e )￨e ;￨e Expression￨e expr￨e =￨e parser￨e .￨e parseExpression￨e (￨e "#favouriteColour"￨e )￨e ;￨e Object￨e value￨e =￨e expr￨e .￨e getValue￨e (￨e ctx￨e )￨e ;￨e assertEquals￨e (￨e "blue"￨e ,￨e value￨e )￨e ;￨e expr￨e =￨e parser￨e .￨e parseExpression￨e (￨e "#primes.get(1)"￨e )￨e ;￨e value￨e =￨e expr￨e .￨e getValue￨e (￨e ctx￨e )￨e ;￨e assertEquals￨e (￨e 3￨e ,￨e value￨e )￨e ;￨e <START_BUG>￨b expr￨b =￨b parser￨b .￨b parseExpression￨b (￨b "#primes.?{#this>10}"￨b )￨b ;￨b <END_BUG>￨b value￨e =￨e expr￨e .￨e getValue￨e (￨e ctx￨e )￨e ;￨e assertEquals￨e (￨e "[11,<seq2seq4repair_space>13,<seq2seq4repair_space>17]"￨e ,￨e value￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨f static￨d class￨d TestClass￨d {￨d public￨e String￨e str￨e ;￨e private￨e int￨e property￨e ;￨e public￨f int￨f getProperty￨f (￨f )￨f {￨f }￨f public￨f void￨f setProperty￨f (￨f int￨p i￨p )￨f {￨f }￨f }￨d public￨f void￨f testScenario_UsingADifferentRootContextObject￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f repeat￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f void￨f testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem￨f (￨f )￨f throws￨f NoSuchMethodException￨f ,￨f SecurityException￨f (￨f )￨f {￨f }￨f public￨f void￨f testScenario_AddingYourOwnPropertyResolvers_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testScenario_AddingYourOwnPropertyResolvers_2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d FruitColourAccessor￨d implements￨d PropertyAccessor￨d {￨d private￨e static￨e Map￨e <￨e String￨e ,￨e Color￨e >￨e propertyMap￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e Color￨e >￨e (￨e )￨e ;￨e private￨d static￨d TypeDescriptor￨d mapElementTypeDescriptor￨d =￨d TypeDescriptor￨d .￨d valueOf￨d (￨d Color￨d .￨d class￨d )￨d ;￨d public￨d Class￨d <￨d ?￨d >￨d [￨d ]￨d getSpecificTargetClasses￨d (￨d )￨d {￨d }￨d public￨f boolean￨f canRead￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f TypedValue￨f read￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canWrite￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f ,￨f Object￨f newValue￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d VegetableColourAccessor￨d implements￨d PropertyAccessor￨d {￨d private￨e static￨e Map￨e <￨e String￨e ,￨e Color￨e >￨e propertyMap￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e Color￨e >￨e (￨e )￨e ;￨e public￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f getSpecificTargetClasses￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canRead￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f TypedValue￨f read￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canWrite￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f EvaluationContext￨f context￨f ,￨f Object￨f target￨f ,￨f String￨f name￨f ,￨f Object￨f newValue￨f )￨f throws￨f AccessException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d LayoutAction￨d extends￨d Action￨d {￨d static￨d final￨d Logger￨d logger￨d =￨d Logger￨d .￨d getLogger￨d (￨d LayoutAction￨d .￨d class￨d )￨d ;￨d Layout￨d layout￨d ;￨d public￨d void￨d begin￨d (￨d ExecutionContext￨d ec￨d ,￨d String￨d name￨d ,￨d Attributes￨d attributes￨d )￨d {￨d inError￨e =￨e false￨e ;￨e String￨e className￨e =￨e attributes￨e .￨e getValue￨e (￨e CLASS_ATTRIBUTE￨e )￨e ;￨e try￨f (￨f )￨f {￨f LayoutAction￨e .￨e logger￨e .￨e debug￨e (￨e (￨e (￨e "About<seq2seq4repair_space>to<seq2seq4repair_space>instantiate<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>["￨e +￨e className￨e )￨e +￨e "]"￨e )￨e )￨e ;￨e Object￨e instance￨e =￨e OptionConverter￨e .￨e instantiateByClassName￨e (￨e className￨e ,￨e Layout￨e .￨e class￨e ,￨e null￨e )￨e ;￨e layout￨e =￨e (￨e (￨e Layout￨e )￨e (￨e instance￨e )￨e )￨e ;￨e LayoutAction￨e .￨e logger￨e .￨e debug￨e (￨e "Pushing<seq2seq4repair_space>layout<seq2seq4repair_space>on<seq2seq4repair_space>top<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>object<seq2seq4repair_space>stack."￨e )￨e ;￨e ec￨e .￨e pushObject￨e (￨e layout￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p oops￨p )￨f {￨f inError￨e =￨e true￨e ;￨e LayoutAction￨e .￨e logger￨e .￨e error￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>an<seq2seq4repair_space>Layout.<seq2seq4repair_space>Reported<seq2seq4repair_space>error<seq2seq4repair_space>follows."￨e ,￨e oops￨e )￨e ;￨e <START_BUG>￨b ec￨b .￨b addError￨b (￨b new￨b org￨b .￨b apache￨b .￨b joran￨b .￨b ErrorItem￨b (￨b (￨b (￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>"￨b +￨b className￨b )￨b +￨b "]."￨b )￨b ,￨b ec￨b .￨b getLocator￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d public￨f void￨f end￨f (￨f ExecutionContext￨p ec￨p ,￨p String￨p e￨p )￨f {￨f }￨f public￨f void￨f finish￨f (￨f ExecutionContext￨p ec￨p )￨f {￨f }￨f }￨d
public￨d class￨d ConversionHelp￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e CHAR_SET￨e =￨e "UTF-8"￨e ;￨e public￨e static￨e final￨e String￨e ATT_CLASS￨e =￨e "class"￨e ;￨e public￨e static￨e final￨e String￨e ATT_NAME￨e =￨e "name"￨e ;￨e public￨e static￨e final￨e String￨e ATT_ELEMENT_TYPE￨e =￨e "elementType"￨e ;￨e private￨e static￨e final￨e String￨e ATT_TE_ENABLED￨e =￨e "enabled"￨e ;￨e private￨e static￨e final￨e String￨e ATT_TE_TESTCLASS￨e =￨e "testclass"￨e ;￨e private￨e static￨e final￨e String￨e ATT_TE_GUICLASS￨e =￨e "guiclass"￨e ;￨e private￨e static￨e final￨e String￨e ATT_TE_NAME￨e =￨e "testname"￨e ;￨e private￨e static￨e String￨e inVersion￨e ;￨e private￨e static￨e String￨e outVersion￨e =￨e "1.1"￨e ;￨e public￨f static￨f void￨f setInVersion￨f (￨f String￨p v￨p )￨f {￨f }￨f public￨f static￨f void￨f setOutVersion￨f (￨f String￨p v￨p )￨f {￨f }￨f public￨f static￨f String￨f encode￨f (￨f String￨p p￨p )￨f {￨f }￨f public￨f static￨f String￨f decode￨f (￨f String￨p p￨p )￨f {￨f }￨f public￨f static￨f String￨f cdata￨f (￨f byte￨f [￨f ]￨f chars￨f ,￨f String￨f encoding￨f )￨f throws￨f UnsupportedEncodingException￨f (￨f )￨f {￨f <START_BUG>￨b StringBuffer￨b buf￨b =￨b new￨b StringBuffer￨b (￨b "<![CDATA["￨b )￨b ;￨b <END_BUG>￨b buf￨e .￨e append￨e (￨e new￨e String￨e (￨e chars￨e ,￨e encoding￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "]]>"￨e )￨e ;￨e return￨e buf￨e .￨e toString￨e (￨e )￨e ;￨e }￨f private￨e static￨e final￨e Map￨e <￨e String￨e ,￨e String￨e >￨e propertyToAttribute￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e )￨e ;￨e private￨f static￨f void￨f mapentry￨f (￨f String￨p prop￨p ,￨p String￨p att￨p )￨f {￨f }￨f private￨f static￨f void￨f saveClass￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamWriter￨p writer￨p ,￨p String￨p prop￨p )￨f {￨f }￨f private￨f static￨f void￨f restoreClass￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamReader￨p reader￨p ,￨p String￨p prop￨p )￨f {￨f }￨f private￨f static￨f void￨f saveItem￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamWriter￨p writer￨p ,￨p String￨p prop￨p ,￨p boolean￨p encode￨p )￨f {￨f }￨f private￨f static￨f void￨f restoreItem￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamReader￨p reader￨p ,￨p String￨p prop￨p ,￨p boolean￨p decode￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isSpecialProperty￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f static￨f void￨f saveSpecialProperties￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamWriter￨p writer￨p )￨f {￨f }￨f public￨f static￨f void￨f restoreSpecialProperties￨f (￨f TestElement￨p el￨p ,￨p HierarchicalStreamReader￨p reader￨p )￨f {￨f }￨f }￨d
public￨d class￨d CounterConfig￨d extends￨d AbstractTestElement￨d implements￨d Serializable￨d ,￨d LoopIterationListener￨d ,￨d NoThreadClone￨d {￨d private￨e static￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerFor￨e (￨e ELEMENTS￨e )￨e ;￨e private￨e static￨e final￨e String￨e START￨e =￨e "CounterConfig.start"￨e ;￨e private￨e static￨e final￨e String￨e END￨e =￨e "CounterConfig.end"￨e ;￨e private￨e static￨e final￨e String￨e INCREMENT￨e =￨e "CounterConfig.incr"￨e ;￨e private￨e static￨e final￨e String￨e PER_USER￨e =￨e "CounterConfig.per_user"￨e ;￨e private￨e static￨e final￨e String￨e VAR_NAME￨e =￨e "CounterConfig.name"￨e ;￨e private￨e boolean￨e perUser￨e =￨e false￨e ;￨e private￨e int￨e globalCounter￨e =￨e -￨e 1￨e ;￨e private￨e int￨e currentIterationCount￨e =￨e -￨e 1￨e ;￨e public￨f synchronized￨f void￨f iterationStart￨f (￨f LoopIterationEvent￨p event￨p )￨f {￨f JMeterVariables￨e variables￨e =￨e JMeterContextService￨e .￨e getContext￨e (￨e )￨e .￨e getVariables￨e (￨e )￨e ;￨e int￨e start￨e =￨e getStart￨e (￨e )￨e ;￨e int￨e end￨e =￨e getEnd￨e (￨e )￨e ;￨e int￨e increment￨e =￨e getIncrement￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c isPerUser￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c globalCounter￨c )￨c ==￨c (￨c -￨c 1￨c )￨c )￨c ||￨c (￨c (￨c globalCounter￨c )￨c >￨c end￨c )￨c )￨j {￨j globalCounter￨e =￨e start￨e ;￨e }￨j variables￨e .￨e put￨e (￨e getVarName￨e (￨e )￨e ,￨e Integer￨e .￨e toString￨e (￨e globalCounter￨e )￨e )￨e ;￨e globalCounter￨e +=￨e increment￨e ;￨e }￨j else￨j {￨j String￨e value￨e =￨e variables￨e .￨e get￨e (￨e getVarName￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b value￨b ==￨b null￨b )￨b ||￨b (￨b value￨b .￨b equals￨b (￨b ""￨b )￨b )￨b )￨b {￨b <END_BUG>￨b variables￨e .￨e put￨e (￨e getVarName￨e (￨e )￨e ,￨e Integer￨e .￨e toString￨e (￨e start￨e )￨e )￨e ;￨e value￨e =￨e variables￨e .￨e get￨e (￨e getVarName￨e (￨e )￨e )￨e ;￨e else￨j {￨j try￨f (￨f )￨f {￨f int￨e current￨e =￨e Integer￨e .￨e parseInt￨e (￨e value￨e )￨e ;￨e current￨e +=￨e increment￨e ;￨e if￨j (￨j current￨c >￨c end￨c )￨j {￨j current￨e =￨e start￨e ;￨e }￨j variables￨e .￨e put￨e (￨e getVarName￨e (￨e )￨e ,￨e Integer￨e .￨e toString￨e (￨e current￨e )￨e )￨e ;￨e }￨f catch￨f (￨f NumberFormatException￨p e￨p )￨f {￨f CounterConfig￨e .￨e log￨e .￨e info￨e (￨e "Bad<seq2seq4repair_space>number<seq2seq4repair_space>in<seq2seq4repair_space>Counter<seq2seq4repair_space>config"￨e ,￨e e￨e )￨e ;￨e }￨f }￨j }￨j }￨f public￨f void￨f setStart￨f (￨f int￨p start￨p )￨f {￨f }￨f public￨f void￨f setStart￨f (￨f String￨p start￨p )￨f {￨f }￨f public￨f int￨f getStart￨f (￨f )￨f {￨f }￨f public￨f void￨f setEnd￨f (￨f int￨p end￨p )￨f {￨f }￨f public￨f void￨f setEnd￨f (￨f String￨p end￨p )￨f {￨f }￨f public￨f int￨f getEnd￨f (￨f )￨f {￨f }￨f public￨f void￨f setIncrement￨f (￨f int￨p inc￨p )￨f {￨f }￨f public￨f void￨f setIncrement￨f (￨f String￨p incr￨p )￨f {￨f }￨f public￨f int￨f getIncrement￨f (￨f )￨f {￨f }￨f public￨f void￨f setIsPerUser￨f (￨f boolean￨p isPer￨p )￨f {￨f }￨f public￨f boolean￨f isPerUser￨f (￨f )￨f {￨f }￨f public￨f void￨f setVarName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f String￨f getVarName￨f (￨f )￨f {￨f }￨f }￨d
class￨d DefaultCategoryFactory￨d implements￨d LoggerFactory￨d {￨d DefaultCategoryFactory￨f (￨f )￨f {￨f }￨f public￨f Logger￨f makeNewLoggerInstance￨f (￨f String￨p name￨p )￨f {￨f <START_BUG>￨b return￨b new￨b Category￨b (￨b name￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d BaseHrefScanner￨d extends￨d TagScanner￨d {￨d private￨e LinkProcessor￨e processor￨e ;￨e public￨f BaseHrefScanner￨f (￨f )￨f {￨f }￨f public￨f BaseHrefScanner￨f (￨f String￨p filter￨p ,￨p LinkProcessor￨p processor￨p )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getID￨f (￨f )￨f {￨f }￨f protected￨f Tag￨f createTag￨f (￨f TagData￨f tagData￨f ,￨f Tag￨f tag￨f ,￨f String￨f url￨f )￨f throws￨f ParserException￨f (￨f )￨f {￨f String￨e baseUrl￨e =￨e (￨e (￨e String￨e )￨e (￨e tag￨e .￨e getAttribute￨e (￨e "HREF"￨e )￨e )￨e )￨e ;￨e String￨e absoluteBaseUrl￨e =￨e ""￨e ;￨e if￨j (￨j (￨c baseUrl￨c !=￨c null￨c )￨c &&￨c (￨c (￨c baseUrl￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨c )￨j {￨j <START_BUG>￨b absoluteBaseUrl￨b =￨b baseUrl￨b .￨b trim￨b (￨b )￨b ;￨b <END_BUG>￨b processor￨e .￨e setBaseUrl￨e (￨e absoluteBaseUrl￨e )￨e ;￨e }￨j return￨e new￨e org￨e .￨e htmlparser￨e .￨e tags￨e .￨e BaseHrefTag￨e (￨e tagData￨e ,￨e absoluteBaseUrl￨e )￨e ;￨e }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d InflowTestCase￨d extends￨d ContainerResourceMgmtTestBase￨d {￨d @￨f Deployment￨f public￨f static￨f ResourceAdapterArchive￨f createDeployment￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨e ArquillianResource￨e ServiceContainer￨e serviceContainer￨e ;￨e @￨f Test￨f public￨f void￨f testRegistryConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e serviceContainer￨e .￨e getService￨e (￨e RA_REPOSITORY_SERVICE￨e )￨e ;￨e assertNotNull￨e (￨e controller￨e )￨e ;￨e ResourceAdapterRepository￨e repository￨e =￨e (￨e (￨e ResourceAdapterRepository￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e repository￨e )￨e ;￨e Set￨e <￨e String￨e >￨e ids￨e =￨e repository￨e .￨e getResourceAdapters￨e (￨e MessageListener￨e .￨e class￨e )￨e ;￨e assertNotNull￨e (￨e ids￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b 2￨b ,￨b ids￨b .￨b size￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b String￨e piId￨e =￨e ids￨e .￨e iterator￨e (￨e )￨e .￨e next￨e (￨e )￨e ;￨e assertNotNull￨e (￨e piId￨e )￨e ;￨e Endpoint￨e endpoint￨e =￨e repository￨e .￨e getEndpoint￨e (￨e piId￨e )￨e ;￨e assertNotNull￨e (￨e endpoint￨e )￨e ;￨e List￨e <￨e MessageListener￨e >￨e listeners￨e =￨e repository￨e .￨e getMessageListeners￨e (￨e piId￨e )￨e ;￨e assertNotNull￨e (￨e listeners￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e listeners￨e .￨e size￨e (￨e )￨e )￨e ;￨e MessageListener￨e listener￨e =￨e listeners￨e .￨e get￨e (￨e 0￨e )￨e ;￨e ActivationSpec￨e as￨e =￨e listener￨e .￨e getActivation￨e (￨e )￨e .￨e createInstance￨e (￨e )￨e ;￨e assertNotNull￨e (￨e as￨e )￨e ;￨e assertNotNull￨e (￨e as￨e .￨e getResourceAdapter￨e (￨e )￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testMetadataConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ServletResourceManager￨d implements￨d ResourceManager￨d {￨d private￨e final￨e FileResourceManager￨e deploymentResourceManager￨e ;￨e private￨e final￨e Collection￨e <￨e VirtualFile￨e >￨e overlays￨e ;￨e public￨f ServletResourceManager￨f (￨f final￨f VirtualFile￨f resourcesRoot￨f ,￨f final￨f Collection￨f <￨f VirtualFile￨f >￨f overlays￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Resource￨f getResource￨f (￨f final￨f String￨f path￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f Resource￨e res￨e =￨e deploymentResourceManager￨e .￨e getResource￨e (￨e path￨e )￨e ;￨e if￨j (￨j res￨c !=￨c null￨c )￨j {￨j return￨e res￨e ;￨e }￨j String￨e p￨e =￨e path￨e ;￨e if￨j (￨j p￨c .￨c startsWith￨c (￨c "/"￨c )￨c )￨j {￨j p￨e =￨e p￨e .￨e substring￨e (￨e 1￨e )￨e ;￨e }￨j if￨j (￨j (￨c overlays￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l VirtualFile￨c overlay￨c :￨c overlays￨c )￨l {￨l VirtualFile￨e child￨e =￨e overlay￨e .￨e getChild￨e (￨e p￨e )￨e ;￨e if￨j (￨j child￨c .￨c exists￨c (￨c )￨c )￨j {￨j URL￨e url￨e =￨e child￨e .￨e toURL￨e (￨e )￨e ;￨e <START_BUG>￨b return￨b new￨b URLResource￨b (￨b url￨b ,￨b url￨b .￨b openConnection￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l }￨j return￨e null￨e ;￨e }￨f }￨d
final￨d class￨d RemoteServiceImpl￨d implements￨d InvocationHandler￨d ,￨d IRemoteService￨d {￨d static￨e final￨e Object￨e [￨e ]￨e EMPTY_PARAMETERS￨e =￨e new￨e Object￨e [￨e 0￨e ]￨e ;￨e RemoteServiceReferenceImpl￨e refImpl￨e ;￨e Object￨e service￨e ;￨e private￨e long￨e nextID￨e ;￨e public￨f RemoteServiceImpl￨f (￨f final￨p RemoteServiceReferenceImpl￨p refImpl￨p ,￨p final￨p Object￨p service￨p )￨f {￨f }￨f public￨f void￨f callAsync￨f (￨f final￨p IRemoteCall￨p call￨p ,￨p final￨p IRemoteCallListener￨p listener￨p )￨f {￨f }￨f public￨f IFuture￨f callAsync￨f (￨f final￨p IRemoteCall￨p call￨p )￨f {￨f }￨f public￨f Object￨f callSync￨f (￨f final￨f IRemoteCall￨f call￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f }￨f public￨f void￨f fireAsync￨f (￨f final￨f IRemoteCall￨f call￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f }￨f public￨f Object￨f getProxy￨f (￨f )￨f throws￨f ECFException￨f (￨f )￨f {￨f }￨f synchronized￨f long￨f getNextID￨f (￨f )￨f {￨f }￨f public￨f Object￨f invoke￨f (￨f Object￨f proxy￨f ,￨f final￨f Method￨f method￨f ,￨f final￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f Method￨f getMethod￨f (￨f final￨f Class￨f aClass￨f ,￨f String￨f aMethodName￨f ,￨f final￨f Class￨f [￨f ]￨f someParameterTypes￨f )￨f throws￨f NoSuchMethodException￨f (￨f )￨f {￨f if￨j (￨j (￨c someParameterTypes￨c ==￨c null￨c )￨c ||￨c (￨c (￨c someParameterTypes￨c .￨c length￨c )￨c ==￨c 0￨c )￨c )￨j {￨j return￨e aClass￨e .￨e getMethod￨e (￨e aMethodName￨e ,￨e null￨e )￨e ;￨e }￨j final￨e Method￨e [￨e ]￨e methods￨e =￨e aClass￨e .￨e getMethods￨e (￨e )￨e ;￨e final￨e int￨e parameterCount￨e =￨e someParameterTypes￨e .￨e length￨e ;￨e aMethodName￨e =￨e aMethodName￨e .￨e intern￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c methods￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l Method￨e candidate￨e =￨e methods￨e [￨e i￨e ]￨e ;￨e String￨e candidateMethodName￨e =￨e candidate￨e .￨e getName￨e (￨e )￨e .￨e intern￨e (￨e )￨e ;￨e Class￨e [￨e ]￨e candidateParameterTypes￨e =￨e candidate￨e .￨e getParameterTypes￨e (￨e )￨e ;￨e int￨e candidateParameterCount￨e =￨e candidateParameterTypes￨e .￨e length￨e ;￨e if￨j (￨j (￨c candidateParameterCount￨c ==￨c parameterCount￨c )￨c &&￨c (￨c aMethodName￨c ==￨c candidateMethodName￨c )￨c )￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c candidateParameterCount￨c ;￨c j￨c ++￨c )￨l {￨l Class￨e clazzA￨e =￨e candidateParameterTypes￨e [￨e j￨e ]￨e ;￨e Class￨e clazzB￨e =￨e someParameterTypes￨e [￨e j￨e ]￨e ;￨e if￨j (￨j !￨c (￨c clazzA￨c .￨c isAssignableFrom￨c (￨c clazzB￨c )￨c )￨c )￨j {￨j continue￨e OUTER￨e ;￨e }￨j }￨l return￨e candidate￨e ;￨e }￨j }￨l <START_BUG>￨b throw￨b new￨b NoSuchMethodException￨b (￨b (￨b (￨b (￨b (￨b "No<seq2seq4repair_space>such<seq2seq4repair_space>method:<seq2seq4repair_space>"￨b +￨b aMethodName￨b )￨b +￨b "("￨b )￨b +￨b (￨b Arrays￨b .￨b toString￨b (￨b someParameterTypes￨b )￨b )￨b )￨b +￨b ")"￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f private￨d class￨d AsyncResult￨d extends￨d Thread￨d {￨d Object￨e result￨e ;￨e Throwable￨e exception￨e ;￨e IRemoteCall￨e call￨e ;￨e private￨e IRemoteCallListener￨e listener￨e ;￨e AsyncResult￨f (￨f final￨p IRemoteCall￨p call￨p ,￨p final￨p IRemoteCallListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d DeclareSoft￨d extends￨d Declare￨d {￨d private￨e TypePattern￨e exception￨e ;￨e private￨e Pointcut￨e pointcut￨e ;￨e public￨f DeclareSoft￨f (￨f TypePattern￨p exception￨p ,￨p Pointcut￨p pointcut￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Declare￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Pointcut￨f getPointcut￨f (￨f )￨f {￨f }￨f public￨f TypePattern￨f getException￨f (￨f )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f IScope￨p scope￨p )￨f {￨f <START_BUG>￨b exception￨b =￨b exception￨b .￨b resolveBindings￨b (￨b scope￨b ,￨b null￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b pointcut￨e =￨e pointcut￨e .￨e resolve￨e (￨e scope￨e )￨e ;￨e }￨f public￨f boolean￨f isAdviceLike￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FilterModel￨d {￨d private￨e EventTypeEntryContainer￨e eventContainer￨e =￨e new￨e EventTypeEntryContainer￨e (￨e )￨e ;￨e private￨e EventListenerList￨e eventListenerList￨e =￨e new￨e EventListenerList￨e (￨e )￨e ;￨e public￨f void￨f processNewLoggingEvent￨f (￨f String￨p eventType￨p ,￨p LoggingEvent￨p event￨p )￨f {￨f EventTypeEntryContainer￨e container￨e =￨e getContainer￨e (￨e eventType￨e )￨e ;￨e container￨e .￨e addLevel￨e (￨e event￨e .￨e getLevel￨e (￨e )￨e )￨e ;￨e container￨e .￨e addLogger￨e (￨e event￨e .￨e getLoggerName￨e (￨e )￨e )￨e ;￨e container￨e .￨e addThread￨e (￨e event￨e .￨e getThreadName￨e (￨e )￨e )￨e ;￨e container￨e .￨e addNDC￨e (￨e event￨e .￨e getNDC￨e (￨e )￨e )￨e ;￨e container￨e .￨e addMDCKeys￨e (￨e event￨e .￨e getMDCKeySet￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b event￨b .￨b getLocationInformation￨b (￨b )￨b )￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b LocationInfo￨e info￨e =￨e event￨e .￨e getLocationInformation￨e (￨e )￨e ;￨e container￨e .￨e addClass￨e (￨e info￨e .￨e getClassName￨e (￨e )￨e )￨e ;￨e container￨e .￨e addMethod￨e (￨e info￨e .￨e getMethodName￨e (￨e )￨e )￨e ;￨e container￨e .￨e addFileName￨e (￨e info￨e .￨e getFileName￨e (￨e )￨e )￨e ;￨e }￨f public￨f EventTypeEntryContainer￨f getContainer￨f (￨f )￨f {￨f }￨f EventTypeEntryContainer￨f getContainer￨f (￨f String￨p eventType￨p )￨f {￨f }￨f }￨d
public￨d class￨d TaskItem￨d extends￨d Item￨d {￨d TaskBar￨e parent￨e ;￨e Shell￨e shell￨e ;￨e NSImage￨e defaultImage￨e ;￨e int￨e progress￨e ;￨e int￨e iProgress￨e ;￨e int￨e progressState￨e =￨e SWT￨e .￨e DEFAULT￨e ;￨e Image￨e overlayImage￨e ;￨e String￨e overlayText￨e =￨e ""￨e ;￨e Menu￨e menu￨e ;￨e static￨e final￨e int￨e PROGRESS_MAX￨e =￨e 100￨e ;￨e static￨e final￨e int￨e PROGRESS_TIMER￨e =￨e 350￨e ;￨e static￨e final￨e int￨e PROGRESS_BARS￨e =￨e 7￨e ;￨e TaskItem￨f (￨f TaskBar￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f createWidget￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f Menu￨f getMenu￨f (￨f )￨f {￨f }￨f public￨f Image￨f getOverlayImage￨f (￨f )￨f {￨f }￨f public￨f String￨f getOverlayText￨f (￨f )￨f {￨f }￨f public￨f TaskBar￨f getParent￨f (￨f )￨f {￨f }￨f public￨f int￨f getProgress￨f (￨f )￨f {￨f }￨f public￨f int￨f getProgressState￨f (￨f )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f setMenu￨f (￨f Menu￨p menu￨p )￨f {￨f }￨f public￨f void￨f setOverlayImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setOverlayText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setProgress￨f (￨f int￨p progress￨p )￨f {￨f }￨f public￨f void￨f setProgressState￨f (￨f int￨p progressState￨p )￨f {￨f }￨f void￨f setShell￨f (￨f Shell￨p shell￨p )￨f {￨f }￨f void￨f updateImage￨f (￨f )￨f {￨f boolean￨e drawProgress￨e =￨e (￨e (￨e progress￨e )￨e !=￨e 0￨e )￨e &&￨e (￨e (￨e progressState￨e )￨e !=￨e (￨e SWT￨e .￨e DEFAULT￨e )￨e )￨e ;￨e boolean￨e drawIntermidiate￨e =￨e (￨e progressState￨e )￨e ==￨e (￨e SWT￨e .￨e INDETERMINATE￨e )￨e ;￨e NSApplication￨e app￨e =￨e NSApplication￨e .￨e sharedApplication￨e (￨e )￨e ;￨e NSDockTile￨e dock￨e =￨e app￨e .￨e dockTile￨e (￨e )￨e ;￨e boolean￨e drawImage￨e =￨e (￨e (￨e overlayImage￨e )￨e !=￨e null￨e )￨e &&￨e (￨e (￨e dock￨e .￨e badgeLabel￨e (￨e )￨e )￨e ==￨e null￨e )￨e ;￨e if￨j (￨j (￨c (￨c !￨c drawImage￨c )￨c &&￨c (￨c !￨c drawProgress￨c )￨c )￨c &&￨c (￨c !￨c drawIntermidiate￨c )￨c )￨j {￨j <START_BUG>￨b app￨b .￨b setApplicationIconImage￨b (￨b null￨b )￨b ;￨b <END_BUG>￨b return￨e ;￨e }￨j NSSize￨e size￨e =￨e defaultImage￨e .￨e size￨e (￨e )￨e ;￨e NSImage￨e newImage￨e =￨e (￨e (￨e NSImage￨e )￨e (￨e new￨e NSImage￨e (￨e )￨e .￨e alloc￨e (￨e )￨e )￨e )￨e ;￨e newImage￨e =￨e newImage￨e .￨e initWithSize￨e (￨e size￨e )￨e ;￨e NSBitmapImageRep￨e rep￨e =￨e (￨e (￨e NSBitmapImageRep￨e )￨e (￨e new￨e NSBitmapImageRep￨e (￨e )￨e .￨e alloc￨e (￨e )￨e )￨e )￨e ;￨e rep￨e =￨e rep￨e .￨e initWithBitmapDataPlanes￨e (￨e 0￨e ,￨e (￨e (￨e int￨e )￨e (￨e size￨e .￨e width￨e )￨e )￨e ,￨e (￨e (￨e int￨e )￨e (￨e size￨e .￨e height￨e )￨e )￨e ,￨e 8￨e ,￨e 4￨e ,￨e true￨e ,￨e false￨e ,￨e NSDeviceRGBColorSpace￨e ,￨e (￨e (￨e OS￨e .￨e NSAlphaFirstBitmapFormat￨e )￨e |￨e (￨e OS￨e .￨e NSAlphaNonpremultipliedBitmapFormat￨e )￨e )￨e ,￨e (￨e (￨e (￨e int￨e )￨e (￨e size￨e .￨e width￨e )￨e )￨e *￨e 4￨e )￨e ,￨e 32￨e )￨e ;￨e newImage￨e .￨e addRepresentation￨e (￨e rep￨e )￨e ;￨e rep￨e .￨e release￨e (￨e )￨e ;￨e NSRect￨e rect￨e =￨e new￨e NSRect￨e (￨e )￨e ;￨e rect￨e .￨e height￨e =￨e size￨e .￨e height￨e ;￨e rect￨e .￨e width￨e =￨e size￨e .￨e width￨e ;￨e newImage￨e .￨e lockFocus￨e (￨e )￨e ;￨e defaultImage￨e .￨e drawInRect￨e (￨e rect￨e ,￨e rect￨e ,￨e NSCompositeSourceOver￨e ,￨e 1￨e )￨e ;￨e if￨j (￨j drawImage￨c )￨j {￨j NSImage￨e badgetImage￨e =￨e overlayImage￨e .￨e handle￨e ;￨e NSSize￨e badgeSize￨e =￨e badgetImage￨e .￨e size￨e (￨e )￨e ;￨e NSRect￨e srcRect￨e =￨e new￨e NSRect￨e (￨e )￨e ;￨e srcRect￨e .￨e height￨e =￨e badgeSize￨e .￨e height￨e ;￨e srcRect￨e .￨e width￨e =￨e badgeSize￨e .￨e width￨e ;￨e NSRect￨e dstRect￨e =￨e new￨e NSRect￨e (￨e )￨e ;￨e dstRect￨e .￨e x￨e =￨e (￨e size￨e .￨e width￨e )￨e /￨e 2￨e ;￨e dstRect￨e .￨e height￨e =￨e (￨e size￨e .￨e height￨e )￨e /￨e 2￨e ;￨e dstRect￨e .￨e width￨e =￨e (￨e size￨e .￨e width￨e )￨e /￨e 2￨e ;￨e badgetImage￨e .￨e drawInRect￨e (￨e dstRect￨e ,￨e srcRect￨e ,￨e NSCompositeSourceOver￨e ,￨e 1￨e )￨e ;￨e }￨j if￨j (￨j drawIntermidiate￨c ||￨c drawProgress￨c )￨j {￨j switch￨s (￨s progressState￨c )￨s {￨s case￨c SWT￨c .￨c ERROR￨c :￨c NSColor￨e .￨e colorWithDeviceRed￨e (￨e 1￨e ,￨e 0￨e ,￨e 0￨e ,￨e 0.6F￨e )￨e .￨e setFill￨e (￨e )￨e ;￨e break￨e ;￨e case￨c SWT￨c .￨c PAUSED￨c :￨c NSColor￨e .￨e colorWithDeviceRed￨e (￨e 1￨e ,￨e 1￨e ,￨e 0￨e ,￨e 0.6F￨e )￨e .￨e setFill￨e (￨e )￨e ;￨e break￨e ;￨e default￨c :￨c NSColor￨e .￨e colorWithDeviceRed￨e (￨e 1￨e ,￨e 1￨e ,￨e 1￨e ,￨e 0.6F￨e )￨e .￨e setFill￨e (￨e )￨e ;￨e }￨s rect￨e .￨e width￨e =￨e (￨e size￨e .￨e width￨e )￨e /￨e (￨e (￨e (￨e TaskItem￨e .￨e PROGRESS_BARS￨e )￨e *￨e 2￨e )￨e -￨e 1￨e )￨e ;￨e rect￨e .￨e height￨e =￨e (￨e size￨e .￨e height￨e )￨e /￨e 3￨e ;￨e int￨e count￨e ;￨e if￨j (￨j drawIntermidiate￨c )￨j {￨j count￨e =￨e iProgress￨e ;￨e iProgress￨e =￨e (￨e (￨e iProgress￨e )￨e +￨e 1￨e )￨e %￨e (￨e (￨e TaskItem￨e .￨e PROGRESS_BARS￨e )￨e +￨e 1￨e )￨e ;￨e getDisplay￨f (￨f )￨f .￨f timerExec￨f (￨f TaskItem￨f .￨f PROGRESS_TIMER￨f ,￨f new￨f Runnable￨f (￨f )￨f {￨f public￨f void￨f run￨f (￨f )￨f {￨f updateImage￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e }￨j else￨j {￨j count￨e =￨e (￨e (￨e progress￨e )￨e *￨e (￨e TaskItem￨e .￨e PROGRESS_BARS￨e )￨e )￨e /￨e (￨e TaskItem￨e .￨e PROGRESS_MAX￨e )￨e ;￨e }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <=￨c count￨c ;￨c i￨c ++￨c )￨l {￨l rect￨e .￨e x￨e =￨e (￨e i￨e *￨e 2￨e )￨e *￨e (￨e rect￨e .￨e width￨e )￨e ;￨e NSBezierPath￨e .￨e fillRect￨e (￨e rect￨e )￨e ;￨e }￨l }￨j newImage￨e .￨e unlockFocus￨e (￨e )￨e ;￨e app￨e .￨e setApplicationIconImage￨e (￨e newImage￨e )￨e ;￨e newImage￨e .￨e release￨e (￨e )￨e ;￨e }￨f void￨f updateOverlayText￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d false￨e ;￨e private￨e Object￨e returnCode￨e ;￨e private￨e WorkbenchConfigurationInfo￨e configurationInfo￨e ;￨e private￨e ListenerList￨e windowListeners￨e =￨e new￨e ListenerList￨e (￨e )￨e ;￨e private￨e String￨e [￨e ]￨e commandLineArgs￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f VERSION_STRING￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e static￨e final￨e String￨e DEFAULT_WORKBENCH_STATE_FILENAME￨e =￨e "workbench.xml"￨e ;￨e private￨e static￨e final￨e int￨e RESTORE_CODE_OK￨e =￨e 0￨e ;￨e private￨e static￨e final￨e int￨e RESTORE_CODE_RESET￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e RESTORE_CODE_EXIT￨e =￨e 2￨e ;￨e protected￨e static￨e final￨e String￨e WELCOME_EDITOR_ID￨e =￨e "org.eclipse.ui.internal.dialogs.WelcomeEditor"￨e ;￨e public￨f Workbench￨f (￨f )￨f {￨f }￨f private￨e static￨e final￨e String￨e TASK_LIST_ID￨e =￨e (￨e WorkbenchPlugin￨e .￨e PI_WORKBENCH￨e )￨e +￨e ".views.TaskList"￨e ;￨e private￨f IResourceChangeListener￨f getShowTasksChangeListener￨f (￨f )￨f {￨f }￨f private￨f IMarker￨f findProblemToShow￨f (￨f IResourceChangeEvent￨p event￨p )￨f {￨f }￨f public￨f void￨f addWindowListener￨f (￨f IWindowListener￨p l￨p )￨f {￨f }￨f public￨f void￨f removeWindowListener￨f (￨f IWindowListener￨p l￨p )￨f {￨f }￨f protected￨f void￨f fireWindowOpened￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f protected￨f void￨f fireWindowClosed￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f protected￨f void￨f fireWindowActivated￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f protected￨f void￨f fireWindowDeactivated￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f private￨f void￨f addAdapters￨f (￨f )￨f {￨f }￨f private￨f boolean￨f busyClose￨f (￨f final￨p boolean￨p force￨p )￨f {￨f }￨f public￨f boolean￨f saveAllEditors￨f (￨f boolean￨p confirm￨p )￨f {￨f }￨f private￨f IWorkbenchWindow￨f busyOpenWorkbenchWindow￨f (￨f String￨f perspID￨f ,￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkUpdates￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f Object￨p returnCode￨p )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f Object￨p returnCode￨p ,￨p final￨p boolean￨p force￨p )￨f {￨f }￨f protected￨f WorkbenchActionBuilder￨f createActionBuilder￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f private￨f void￨f connectToWorkspace￨f (￨f )￨f {￨f }￨f private￨f void￨f disconnectFromWorkspace￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f getActiveWorkbenchWindow￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getCommandLineArgs￨f (￨f )￨f {￨f }￨f public￨f EditorHistory￨f getEditorHistory￨f (￨f )￨f {￨f }￨f public￨f PerspectiveHistory￨f getPerspectiveHistory￨f (￨f )￨f {￨f }￨f public￨f IEditorRegistry￨f getEditorRegistry￨f (￨f )￨f {￨f }￨f protected￨f int￨f getNewWindowNumber￨f (￨f )￨f {￨f }￨f public￨f IPerspectiveRegistry￨f getPerspectiveRegistry￨f (￨f )￨f {￨f }￨f public￨f PreferenceManager￨f getPreferenceManager￨f (￨f )￨f {￨f }￨f public￨f IPreferenceStore￨f getPreferenceStore￨f (￨f )￨f {￨f }￨f public￨f ISharedImages￨f getSharedImages￨f (￨f )￨f {￨f }￨f public￨f IMarkerHelpRegistry￨f getMarkerHelpRegistry￨f (￨f )￨f {￨f }￨f protected￨f WindowManager￨f getWindowManager￨f (￨f )￨f {￨f }￨f public￨f WorkbenchConfigurationInfo￨f getConfigurationInfo￨f (￨f )￨f {￨f }￨f private￨f File￨f getWorkbenchStateFile￨f (￨f )￨f {￨f }￨f public￨f int￨f getWorkbenchWindowCount￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f [￨f ]￨f getWorkbenchWindows￨f (￨f )￨f {￨f }￨f public￨f IWorkingSetManager￨f getWorkingSetManager￨f (￨f )￨f {￨f }￨f public￨f void￨f updateKeys￨f (￨f )￨f {￨f }￨f private￨f boolean￨f init￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f Manager￨e .￨e getInstance￨e (￨e )￨e ;￨e this￨e .￨e commandLineArgs￨e =￨e commandLineArgs￨e ;￨e if￨j (￨j WorkbenchPlugin￨c .￨c getDefault￨c (￨c )￨c .￨c isDebugging￨c (￨c )￨c )￨j {￨j WorkbenchPlugin￨e .￨e DEBUG￨e =￨e true￨e ;￨e ModalContext￨e .￨e setDebugMode￨e (￨e true￨e )￨e ;￨e }￨j initializeProductImage￨e (￨e )￨e ;￨e connectToWorkspace￨e (￨e )￨e ;￨e addAdapters￨e (￨e )￨e ;￨e windowManager￨e =￨e new￨e WindowManager￨e (￨e )￨e ;￨e WorkbenchColors￨e .￨e startup￨e (￨e )￨e ;￨e boolean￨e useColorIcons￨e =￨e getPreferenceStore￨e (￨e )￨e .￨e getBoolean￨e (￨e COLOR_ICONS￨e )￨e ;￨e ActionContributionItem￨e .￨e setUseColorIconsInToolbars￨e (￨e useColorIcons￨e )￨e ;￨e initializeFonts￨e (￨e )￨e ;￨e updateKeys￨e (￨e )￨e ;￨e initializeSingleClickOption￨e (￨e )￨e ;￨e boolean￨e avoidDeadlock￨e =￨e true￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c commandLineArgs￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j commandLineArgs￨c [￨c i￨c ]￨c .￨c equalsIgnoreCase￨c (￨c "-allowDeadlock"￨c )￨c )￨j {￨j avoidDeadlock￨e =￨e false￨e ;￨e }￨j }￨l if￨j (￨j avoidDeadlock￨c )￨j {￨j try￨f (￨f )￨f {￨f Display￨e display￨e =￨e Display￨e .￨e getCurrent￨e (￨e )￨e ;￨e UIWorkspaceLock￨e uiLock￨e =￨e new￨e UIWorkspaceLock￨e (￨e WorkbenchPlugin￨e .￨e getPluginWorkspace￨e (￨e )￨e ,￨e display￨e )￨e ;￨e WorkbenchPlugin￨e .￨e getPluginWorkspace￨e (￨e )￨e .￨e setWorkspaceLock￨e (￨e uiLock￨e )￨e ;￨e display￨e .￨e setSynchronizer￨e (￨e new￨e UISynchronizer￨e (￨e display￨e ,￨e uiLock￨e )￨e )￨e ;￨e }￨f catch￨f (￨f CoreException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e System￨e .￨e out￨e )￨e ;￨e }￨f }￨j try￨f (￨f )￨f {￨f UIStats￨e .￨e start￨e (￨e RESTORE_WORKBENCH￨e ,￨e "Workbench"￨e )￨e ;￨e int￨e restoreCode￨e =￨e openPreviousWorkbenchState￨e (￨e )￨e ;￨e if￨j (￨j restoreCode￨c ==￨c (￨c Workbench￨c .￨c RESTORE_CODE_EXIT￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j if￨j (￨j restoreCode￨c ==￨c (￨c Workbench￨c .￨c RESTORE_CODE_RESET￨c )￨c )￨j {￨j openFirstTimeWindow￨e (￨e )￨e ;￨e }￨j }￨f finally￨f (￨f )￨f {￨f UIStats￨e .￨e end￨e (￨e RESTORE_WORKBENCH￨e ,￨e "Workbench"￨e )￨e ;￨e }￨f forceOpenPerspective￨e (￨e commandLineArgs￨e )￨e ;￨e <START_BUG>￨b getConfigurationInfo￨b (￨b )￨b .￨b openWelcomeEditors￨b (￨b )￨b ;￨b <END_BUG>￨b refreshFromLocal￨e (￨e commandLineArgs￨e )￨e ;￨e isStarting￨e =￨e false￨e ;￨e return￨e true￨e ;￨e }￨f private￨f void￨f refreshFromLocal￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f private￨f void￨f forceOpenPerspective￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f private￨f void￨f initializeSingleClickOption￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeFonts￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeFont￨f (￨f String￨p fontKey￨p ,￨p FontRegistry￨p registry￨p ,￨p IPreferenceStore￨p store￨p )￨f {￨f }￨f private￨f void￨f initializeProductImage￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isClosing￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isStarting￨f (￨f )￨f {￨f }￨f protected￨f WorkbenchWindow￨f newWorkbenchWindow￨f (￨f )￨f {￨f }￨f private￨f void￨f openFirstTimeWindow￨f (￨f )￨f {￨f }￨f private￨f int￨f openPreviousWorkbenchState￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f openWorkbenchWindow￨f (￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f openWorkbenchWindow￨f (￨f final￨f String￨f perspID￨f ,￨f final￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f XMLMemento￨f recordWorkbenchState￨f (￨f )￨f {￨f }￨f public￨f boolean￨f restart￨f (￨f )￨f {￨f }￨f private￨f IStatus￨f restoreState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f public￨f IPluginDescriptor￨f [￨f ]￨f getEarlyActivatedPlugins￨f (￨f )￨f {￨f }￨f protected￨f void￨f startPlugins￨f (￨f )￨f {￨f }￨f public￨f Object￨f run￨f (￨f Object￨p arg￨p )￨f {￨f }￨f protected￨f void￨f runEventLoop￨f (￨f Window￨p .￨p IExceptionHandler￨p handler￨p )￨f {￨f }￨f private￨f IStatus￨f saveState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f private￨f boolean￨f saveWorkbenchState￨f (￨f XMLMemento￨p memento￨p )￨f {￨f }￨f public￨f void￨f setInitializationData￨f (￨f IConfigurationElement￨p configElement￨p ,￨p String￨p propertyName￨p ,￨p Object￨p data￨p )￨f {￨f }￨f public￨f IWorkbenchPage￨f showPerspective￨f (￨f String￨f perspectiveId￨f ,￨f IWorkbenchWindow￨f window￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchPage￨f showPerspective￨f (￨f String￨f perspectiveId￨f ,￨f IWorkbenchWindow￨f window￨f ,￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f public￨f void￨f refreshPluginActions￨f (￨f String￨p pluginId￨p )￨f {￨f }￨f public￨f IDecoratorManager￨f getDecoratorManager￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d WeaveMessage￨d extends￨d Message￨d {￨d public￨e static￨e WeaveMessage￨e .￨e WeaveMessageKind￨e WEAVEMESSAGE_DECLAREPARENTSIMPLEMENTS￨e =￨e new￨e WeaveMessage￨e .￨e WeaveMessageKind￨e (￨e 1￨e ,￨e "Extending<seq2seq4repair_space>interface<seq2seq4repair_space>set<seq2seq4repair_space>for<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>include<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨e )￨e ;￨e public￨e static￨e WeaveMessage￨e .￨e WeaveMessageKind￨e WEAVEMESSAGE_ITD￨e =￨e new￨e WeaveMessage￨e .￨e WeaveMessageKind￨e (￨e 2￨e ,￨e "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>has<seq2seq4repair_space>intertyped<seq2seq4repair_space>%3<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)"￨e )￨e ;￨e public￨e static￨e WeaveMessage￨e .￨e WeaveMessageKind￨e WEAVEMESSAGE_ADVISES￨e =￨e new￨e WeaveMessage￨e .￨e WeaveMessageKind￨e (￨e 3￨e ,￨e "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>advised<seq2seq4repair_space>by<seq2seq4repair_space>%3<seq2seq4repair_space>advice<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)%6"￨e )￨e ;￨e public￨e static￨e WeaveMessage￨e .￨e WeaveMessageKind￨e WEAVEMESSAGE_DECLAREPARENTSEXTENDS￨e =￨e new￨e WeaveMessage￨e .￨e WeaveMessageKind￨e (￨e 4￨e ,￨e "Setting<seq2seq4repair_space>superclass<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨e )￨e ;￨e public￨e static￨e WeaveMessage￨e .￨e WeaveMessageKind￨e WEAVEMESSAGE_SOFTENS￨e =￨e new￨e WeaveMessage￨e .￨e WeaveMessageKind￨e (￨e 5￨e ,￨e "Softening<seq2seq4repair_space>exceptions<seq2seq4repair_space>in<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>as<seq2seq4repair_space>defined<seq2seq4repair_space>by<seq2seq4repair_space>aspect<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨e )￨e ;￨e private￨f WeaveMessage￨f (￨f String￨p message￨p )￨f {￨f }￨f public￨f static￨f WeaveMessage￨f constructWeavingMessage￨f (￨f WeaveMessage￨p .￨p WeaveMessageKind￨p kind￨p ,￨p String￨p [￨p ]￨p inserts￨p )￨f {￨f StringBuffer￨e str￨e =￨e new￨e StringBuffer￨e (￨e kind￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e int￨e pos￨e =￨e -￨e 1￨e ;￨e <START_BUG>￨b while￨b (￨b (￨b pos￨b =￨b str￨b .￨b indexOf￨b (￨b "%"￨b )￨b )￨b !=￨b (￨b -￨b 1￨b )￨b )￨b {￨b <END_BUG>￨b int￨e n￨e =￨e Character￨e .￨e getNumericValue￨e (￨e str￨e .￨e charAt￨e (￨e (￨e pos￨e +￨e 1￨e )￨e )￨e )￨e ;￨e str￨e .￨e replace￨e (￨e pos￨e ,￨e (￨e pos￨e +￨e 2￨e )￨e ,￨e inserts￨e [￨e (￨e n￨e -￨e 1￨e )￨e ]￨e )￨e ;￨e }￨e return￨e new￨e WeaveMessage￨e (￨e str￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨f public￨d static￨d class￨d WeaveMessageKind￨d {￨d private￨e int￨e id￨e ;￨e private￨e String￨e message￨e ;￨e public￨f WeaveMessageKind￨f (￨f int￨p id￨p ,￨p String￨p message￨p )￨f {￨f }￨f public￨f String￨f getMessage￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d SequenceFilesFromLuceneStorageMRJobTest￨d extends￨d AbstractLuceneStorageTest￨d {￨d private￨e SequenceFilesFromLuceneStorageMRJob￨e lucene2seq￨e ;￨e private￨e LuceneStorageConfiguration￨e lucene2SeqConf￨e ;￨e @￨f Before￨f public￨f void￨f before￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f lucene2seq￨e =￨e new￨e SequenceFilesFromLuceneStorageMRJob￨e (￨e )￨e ;￨e <START_BUG>￨b Configuration￨b configuration￨b =￨b new￨b Configuration￨b (￨b )￨b ;￨b <END_BUG>￨b Path￨e seqOutputPath￨e =￨e new￨e Path￨e (￨e getTestTempDirPath￨e (￨e )￨e ,￨e "seqOutputPath"￨e )￨e ;￨e lucene2SeqConf￨e =￨e new￨e LuceneStorageConfiguration￨e (￨e configuration￨e ,￨e Arrays￨e .￨e asList￨e (￨e getIndexPath1￨e (￨e )￨e ,￨e getIndexPath2￨e (￨e )￨e )￨e ,￨e seqOutputPath￨e ,￨e SingleFieldDocument￨e .￨e ID_FIELD￨e ,￨e Arrays￨e .￨e asList￨e (￨e FIELD￨e )￨e )￨e ;￨e }￨f @￨f After￨f public￨f void￨f after￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRun￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d MultiplexAppenderTest￨d extends￨d TestCase￨d {￨d private￨e Logger￨e root￨e ;￨e private￨d Logger￨d logger￨d =￨d Logger￨d .￨d getLogger￨d (￨d MultiplexAppenderTest￨d .￨d class￨d )￨d ;￨d public￨d void￨d setUp￨d (￨d )￨d {￨d }￨d public￨f void￨f testIllegalStates￨f (￨f )￨f {￨f MultiplexAppender￨e appender￨e =￨e null￨e ;￨e appender￨e =￨e new￨e MultiplexAppender￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b appender￨b .￨b activate￨b (￨b )￨b ;￨b <END_BUG>￨b fail￨e (￨e "Should<seq2seq4repair_space>have<seq2seq4repair_space>thrown<seq2seq4repair_space>an<seq2seq4repair_space>IllegalStateException<seq2seq4repair_space>because<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>configured<seq2seq4repair_space>correctly"￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f }￨f appender￨e =￨e null￨e ;￨e }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testMDCSelector￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testcreateMDCAndDailyRollingAppenderFactory￨f (￨f )￨f {￨f }￨f }￨d
public￨d =￨e JBOSS￨e .￨e append￨e (￨e "ejb3"￨e ,￨e "timer"￨e )￨e ;￨e private￨e final￨e ServiceName￨e timerServiceThreadPool￨e ;￨e private￨e final￨e String￨e defaultTimerDataStore￨e ;￨e public￨f TimerServiceDeploymentProcessor￨f (￨f final￨p ServiceName￨p timerServiceThreadPool￨p ,￨p final￨p String￨p defaultTimerDataStore￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f deploy￨f (￨f final￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e final￨e EEModuleDescription￨e moduleDescription￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e EE_MODULE_DESCRIPTION￨e )￨e ;￨e final￨e Module￨e module￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e MODULE￨e )￨e ;￨e final￨e EjbJarMetaData￨e ejbJarMetaData￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e EJB_JAR_METADATA￨e )￨e ;￨e ServiceName￨e defaultTimerPersistenceService￨e =￨e SERVICE_NAME￨e .￨e append￨e (￨e defaultTimerDataStore￨e )￨e ;￨e final￨e Map￨e <￨e String￨e ,￨e ServiceName￨e >￨e timerPersistenceServices￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e TimerServiceRegistry￨e timerServiceRegistry￨e =￨e (￨e EjbDeploymentMarker￨e .￨e isEjbDeployment￨e (￨e deploymentUnit￨e )￨e )￨e ?￨e new￨e TimerServiceRegistry￨e (￨e )￨e :￨e null￨e ;￨e if￨j (￨j (￨c ejbJarMetaData￨c !=￨c null￨c )￨c &&￨c (￨c (￨c ejbJarMetaData￨c .￨c getAssemblyDescriptor￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j List￨d <￨d TimerServiceMetaData￨d >￨d timerService￨d =￨d ejbJarMetaData￨d .￨d getAssemblyDescriptor￨d (￨d )￨d .￨d getAny￨d (￨d TimerServiceMetaData￨d .￨d class￨d )￨d ;￨d if￨d (￨d timerService￨d !=￨d null￨d )￨d {￨d for￨l (￨l TimerServiceMetaData￨c data￨c :￨c timerService￨c )￨l {￨l if￨j (￨j data￨c .￨c getEjbName￨c (￨c )￨c .￨c equals￨c (￨c "*"￨c )￨c )￨j {￨j defaultTimerPersistenceService￨e =￨e SERVICE_NAME￨e .￨e append￨e (￨e data￨e .￨e getDataStoreName￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j timerPersistenceServices￨e .￨e put￨e (￨e data￨e .￨e getEjbName￨e (￨e )￨e ,￨e SERVICE_NAME￨e .￨e append￨e (￨e data￨e .￨e getDataStoreName￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨l }￨d }￨j final￨e ServiceName￨e finalDefaultTimerPersistenceService￨e =￨e defaultTimerPersistenceService￨e ;￨e for￨l (￨l final￨c ComponentDescription￨c componentDescription￨c :￨c moduleDescription￨c .￨c getComponentDescriptions￨c (￨c )￨c )￨l {￨l if￨j (￨j componentDescription￨c .￨c isTimerServiceApplicable￨c (￨c )￨c )￨j {￨j if￨j (￨j componentDescription￨c .￨c isTimerServiceRequired￨c (￨c )￨c )￨j {￨j final￨e String￨e deploymentName￨e ;￨e if￨j (￨j (￨c (￨c moduleDescription￨c .￨c getDistinctName￨c (￨c )￨c )￨c ==￨c null￨c )￨c ||￨c (￨c (￨c moduleDescription￨c .￨c getDistinctName￨c (￨c )￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨c )￨j {￨j deploymentName￨e =￨e (￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j deploymentName￨e =￨e (￨e (￨e (￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e moduleDescription￨e .￨e getDistinctName￨e (￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b ROOT_LOGGER￨b .￨b debugf￨b (￨b "Installing<seq2seq4repair_space>timer<seq2seq4repair_space>service<seq2seq4repair_space>for<seq2seq4repair_space>component<seq2seq4repair_space>%s"￨b ,￨b componentDescription￨b .￨b getComponentName￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b componentDescription￨f .￨f getConfigurators￨f (￨f )￨f .￨f add￨f (￨f new￨f ComponentConfigurator￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f configure￨f (￨f final￨f DeploymentPhaseContext￨f context￨f ,￨f final￨f ComponentDescription￨f description￨f ,￨f final￨f ComponentConfiguration￨f configuration￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e EJBComponentDescription￨e ejbComponentDescription￨e =￨e (￨e (￨e EJBComponentDescription￨e )￨e (￨e description￨e )￨e )￨e ;￨e final￨e ServiceName￨e invokerServiceName￨e =￨e ejbComponentDescription￨e .￨e getServiceName￨e (￨e )￨e .￨e append￨e (￨e TimedObjectInvokerImpl￨e .￨e SERVICE_NAME￨e )￨e ;￨e final￨e TimedObjectInvokerImpl￨e invoker￨e =￨e new￨e TimedObjectInvokerImpl￨e (￨e deploymentName￨e ,￨e module￨e )￨e ;￨e context￨d .￨d getServiceTarget￨d (￨d )￨d .￨d addService￨d (￨d invokerServiceName￨d ,￨d invoker￨d )￨d .￨d addDependency￨d (￨d componentDescription￨d .￨d getCreateServiceName￨d (￨d )￨d ,￨d EJBComponent￨d .￨d class￨d ,￨d invoker￨d .￨d getEjbComponent￨d (￨d )￨d )￨d .￨d install￨d (￨d )￨d ;￨d final￨d ServiceName￨d serviceName￨d =￨d componentDescription￨d .￨d getServiceName￨d (￨d )￨d .￨d append￨d (￨d TimerServiceImpl￨d .￨d SERVICE_NAME￨d )￨d ;￨d final￨d TimerServiceImpl￨d service￨d =￨d new￨d TimerServiceImpl￨d (￨d ejbComponentDescription￨d .￨d getScheduleMethods￨d (￨d )￨d ,￨d serviceName￨d ,￨d timerServiceRegistry￨d )￨d ;￨d final￨d ServiceBuilder￨d <￨d TimerService￨d >￨d createBuilder￨d =￨d context￨d .￨d getServiceTarget￨d (￨d )￨d .￨d addService￨d (￨d serviceName￨d ,￨d service￨d )￨d ;￨d createBuilder￨d .￨d addDependency￨d (￨d TimerServiceDeploymentProcessor￨d .￨d TIMER_SERVICE_NAME￨d ,￨d Timer￨d .￨d class￨d ,￨d service￨d .￨d getTimerInjectedValue￨d (￨d )￨d )￨d ;￨d createBuilder￨d .￨d addDependency￨d (￨d componentDescription￨d .￨d getCreateServiceName￨d (￨d )￨d ,￨d EJBComponent￨d .￨d class￨d ,￨d service￨d .￨d getEjbComponentInjectedValue￨d (￨d )￨d )￨d ;￨d createBuilder￨d .￨d addDependency￨d (￨d timerServiceThreadPool￨d ,￨d ExecutorService￨d .￨d class￨d ,￨d service￨d .￨d getExecutorServiceInjectedValue￨d (￨d )￨d )￨d ;￨d if￨d (￨d timerPersistenceServices￨d .￨d containsKey￨d (￨d ejbComponentDescription￨d .￨d getEJBName￨d (￨d )￨d )￨d )￨d {￨d createBuilder￨e .￨e addDependency￨e (￨e timerPersistenceServices￨e .￨e get￨e (￨e ejbComponentDescription￨e .￨e getEJBName￨e (￨e )￨e )￨e ,￨e TimerPersistence￨e .￨e class￨e ,￨e service￨e .￨e getTimerPersistence￨e (￨e )￨e )￨e ;￨e }￨d else￨j {￨j createBuilder￨e .￨e addDependency￨e (￨e finalDefaultTimerPersistenceService￨e ,￨e TimerPersistence￨e .￨e class￨e ,￨e service￨e .￨e getTimerPersistence￨e (￨e )￨e )￨e ;￨e }￨j createBuilder￨d .￨d addDependency￨d (￨d invokerServiceName￨d ,￨d TimedObjectInvoker￨d .￨d class￨d ,￨d service￨d .￨d getTimedObjectInvoker￨d (￨d )￨d )￨d ;￨d createBuilder￨d .￨d install￨d (￨d )￨d ;￨d ejbComponentDescription￨d .￨d setTimerService￨d (￨d service￨d )￨d ;￨d configuration￨d .￨d getStartDependencies￨d (￨d )￨d .￨d add￨d (￨d new￨d org￨d .￨d jboss￨d .￨d as￨d .￨d ee￨d .￨d component￨d .￨d DependencyConfigurator￨d <￨d ComponentStartService￨d >￨d (￨d )￨d {￨d @￨f Override￨f public￨f void￨f configureDependency￨f (￨f final￨f ServiceBuilder￨f <￨f ?￨f >￨f serviceBuilder￨f ,￨f final￨f ComponentStartService￨f service￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f serviceBuilder￨e .￨e addDependency￨e (￨e serviceName￨e )￨e ;￨e }￨f }￨d )￨e ;￨e }￨f }￨f )￨e ;￨e }￨j else￨j {￨j componentDescription￨f .￨f getConfigurators￨f (￨f )￨f .￨f add￨f (￨f new￨f ComponentConfigurator￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f configure￨f (￨f final￨f DeploymentPhaseContext￨f context￨f ,￨f final￨f ComponentDescription￨f description￨f ,￨f final￨f ComponentConfiguration￨f configuration￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e EJBComponentDescription￨e ejbComponentDescription￨e =￨e (￨e (￨e EJBComponentDescription￨e )￨e (￨e description￨e )￨e )￨e ;￨e final￨e ServiceName￨e nonFunctionalTimerServiceName￨e =￨e NonFunctionalTimerService￨e .￨e serviceNameFor￨e (￨e ejbComponentDescription￨e )￨e ;￨e final￨e NonFunctionalTimerService￨e nonFunctionalTimerService￨e ;￨e if￨j (￨j ejbComponentDescription￨c instanceof￨c StatefulComponentDescription￨c )￨j {￨j nonFunctionalTimerService￨e =￨e new￨e NonFunctionalTimerService￨e (￨e EjbLogger￨e .￨e ROOT_LOGGER￨e .￨e timerServiceMethodNotAllowedForSFSB￨e (￨e ejbComponentDescription￨e .￨e getComponentName￨e (￨e )￨e )￨e ,￨e timerServiceRegistry￨e )￨e ;￨e }￨j else￨j {￨j nonFunctionalTimerService￨e =￨e new￨e NonFunctionalTimerService￨e (￨e EjbLogger￨e .￨e ROOT_LOGGER￨e .￨e ejbHasNoTimerMethods￨e (￨e )￨e ,￨e timerServiceRegistry￨e )￨e ;￨e }￨j context￨e .￨e getServiceTarget￨e (￨e )￨e .￨e addService￨e (￨e nonFunctionalTimerServiceName￨e ,￨e nonFunctionalTimerService￨e )￨e .￨e install￨e (￨e )￨e ;￨e ejbComponentDescription￨e .￨e setTimerService￨e (￨e nonFunctionalTimerService￨e )￨e ;￨e configuration￨f .￨f getStartDependencies￨f (￨f )￨f .￨f add￨f (￨f new￨f org￨f .￨f jboss￨f .￨f as￨f .￨f ee￨f .￨f component￨f .￨f DependencyConfigurator￨f <￨f ComponentStartService￨f >￨f (￨f )￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f configureDependency￨f (￨f ServiceBuilder￨f <￨f ?￨f >￨f serviceBuilder￨f ,￨f ComponentStartService￨f service￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f serviceBuilder￨e .￨e addDependency￨e (￨e nonFunctionalTimerServiceName￨e )￨e ;￨e }￨f }￨f )￨e ;￨e }￨f }￨f )￨e ;￨e }￨j }￨j }￨l }￨f @￨f Override￨f public￨f void￨f undeploy￨f (￨f final￨p DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d PopupMenuExtender￨d implements￨d IRegistryChangeListener￨d ,￨d IMenuListener2￨d {￨d private￨e static￨e final￨e int￨e STATIC_ACTION_READ￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e INCLUDE_EDITOR_INPUT￨e =￨e 1￨e <<￨e 1￨e ;￨e private￨e final￨e MenuManager￨e menu￨e ;￨e private￨e SubMenuManager￨e menuWrapper￨e ;￨e private￨e final￨e ISelectionProvider￨e selProvider￨e ;￨e private￨e final￨e IWorkbenchPart￨e part￨e ;￨e private￨e Map￨e staticActionBuilders￨e =￨e null￨e ;￨e private￨e int￨e bitSet￨e =￨e 0￨e ;￨e private￨e ArrayList￨e contributionCache￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e public￨f PopupMenuExtender￨f (￨f String￨p id￨p ,￨p MenuManager￨p menu￨p ,￨p ISelectionProvider￨p prov￨p ,￨p IWorkbenchPart￨p part￨p )￨f {￨f }￨f public￨f PopupMenuExtender￨f (￨f final￨p String￨p id￨p ,￨p final￨p MenuManager￨p menu￨p ,￨p final￨p ISelectionProvider￨p prov￨p ,￨p final￨p IWorkbenchPart￨p part￨p ,￨p final￨p boolean￨p includeEditorInput￨p )￨f {￨f }￨f public￨f Set￨f getMenuIds￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f addMenuId￨f (￨f final￨p String￨p menuId￨p )￨f {￨f }￨f public￨f final￨f boolean￨f matches￨f (￨f final￨p MenuManager￨p menuManager￨p ,￨p final￨p ISelectionProvider￨p selectionProvider￨p ,￨p final￨p IWorkbenchPart￨p part￨p )￨f {￨f }￨f private￨f void￨f addEditorActions￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f }￨f private￨f void￨f addObjectActions￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f }￨f private￨f final￨f void￨f clearStaticActions￨f (￨f )￨f {￨f }￨f private￨f void￨f addStaticActions￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f }￨f public￨f void￨f menuAboutToShow￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f }￨f private￨e boolean￨e contributionsPopulated￨e =￨e false￨e ;￨e private￨f void￨f addMenuContributions￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f }￨f public￨f final￨f void￨f menuAboutToHide￨f (￨f final￨p IMenuManager￨p mgr￨p )￨f {￨f }￨f private￨f void￨f sweepContributions￨f (￨f IMenuManager￨p mgr￨p )￨f {￨f if￨j (￨j mgr￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j final￨d IMenuService￨d menuService￨d =￨d (￨d (￨d IMenuService￨d )￨d (￨d part￨d .￨d getSite￨d (￨d )￨d .￨d getService￨d (￨d IMenuService￨d .￨d class￨d )￨d )￨d )￨d ;￨d InternalMenuService￨d realService￨d =￨d (￨d (￨d InternalMenuService￨d )￨d (￨d menuService￨d )￨d )￨d ;￨d IContributionItem￨d [￨d ]￨d items￨d =￨d mgr￨d .￨d getItems￨d (￨d )￨d ;￨d for￨d (￨d int￨d i￨d =￨d 0￨d ;￨d i￨d <￨d (￨d items￨d .￨d length￨d )￨d ;￨d i￨d ++￨d )￨d {￨d <START_BUG>￨b if￨b (￨b (￨b items￨b [￨b i￨b ]￨b )￨b instanceof￨b IMenuManager￨b )￨b {￨b <END_BUG>￨b sweepContributions￨e (￨e (￨e (￨e IMenuManager￨e )￨e (￨e items￨e [￨e i￨e ]￨e )￨e )￨e )￨e ;￨e realService￨e .￨e releaseContributions￨e (￨e (￨e (￨e ContributionManager￨e )￨e (￨e items￨e [￨e i￨e ]￨e )￨e )￨e )￨e ;￨e (￨e (￨e ContributionManager￨e )￨e (￨e items￨e [￨e i￨e ]￨e )￨e )￨e .￨e removeAll￨e (￨e )￨e ;￨e }￨d }￨f private￨f void￨f gatherContributions￨f (￨f final￨p IMenuManager￨p mgr￨p )￨f {￨f }￨f private￨f void￨f cleanUpContributionCache￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f readStaticActions￨f (￨f )￨f {￨f }￨f private￨f void￨f readStaticActionsFor￨f (￨f final￨p String￨p menuId￨p )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f public￨f void￨f registryChanged￨f (￨f final￨p IRegistryChangeEvent￨p event￨p )￨f {￨f }￨f public￨f MenuManager￨f getManager￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d KittenCaptchaPanel￨d extends￨d Panel￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 2711167040323855070L￨e ;￨e private￨e static￨e BufferedImage￨e grass￨e =￨e KittenCaptchaPanel￨e .￨e load￨e (￨e "images/grass.png"￨e )￨e ;￨e private￨e static￨e final￨e List￨e <￨e KittenCaptchaPanel￨e .￨e Animal￨e >￨e kittens￨e =￨e new￨e ArrayList￨e <￨e KittenCaptchaPanel￨e .￨e Animal￨e >￨e (￨e )￨e ;￨e private￨e static￨e final￨e List￨e <￨e KittenCaptchaPanel￨e .￨e Animal￨e >￨e nonKittens￨e =￨e new￨e ArrayList￨e <￨e KittenCaptchaPanel￨e .￨e Animal￨e >￨e (￨e )￨e ;￨e private￨e static￨e Random￨e random￨e =￨e new￨e Random￨e (￨e (￨e -￨e 1￨e )￨e )￨e ;￨e private￨f static￨f BufferedImage￨f load￨f (￨f final￨p String￨p filename￨p )￨f {￨f }￨f private￨e final￨e KittenCaptchaPanel￨e .￨e PlacedAnimalList￨e animals￨e ;￨e private￨e final￨e Label￨e animalSelectionLabel￨e ;￨e private￨e final￨e Image￨e image￨e ;￨e private￨e final￨e KittenCaptchaPanel￨e .￨e CaptchaImageResource￨e imageResource￨e ;￨e private￨e final￨e Dimension￨e imageSize￨e ;￨e public￨f KittenCaptchaPanel￨f (￨f final￨p String￨p id￨p ,￨p final￨p Dimension￨p imageSize￨p )￨f {￨f }￨f public￨f boolean￨f allKittensSelected￨f (￨f )￨f {￨f }￨f public￨f void￨f reset￨f (￨f )￨f {￨f }￨f private￨f KittenCaptchaPanel￨f .￨f PlacedAnimal￨f placeAnimal￨f (￨f final￨p List￨p <￨p KittenCaptchaPanel￨p .￨p PlacedAnimal￨p >￨p animals￨p ,￨p final￨p KittenCaptchaPanel￨p .￨p Animal￨p newAnimal￨p )￨f {￨f }￨f private￨f int￨f random￨f (￨f final￨p int￨p max￨p )￨f {￨f }￨f private￨f KittenCaptchaPanel￨f .￨f Animal￨f randomKitten￨f (￨f )￨f {￨f }￨f private￨f KittenCaptchaPanel￨f .￨f Animal￨f randomNonKitten￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d Animal￨d {￨d private￨e final￨e BufferedImage￨e highlightedImage￨e ;￨e private￨e final￨e BufferedImage￨e image￨e ;￨e private￨e final￨e boolean￨e isKitten￨e ;￨e private￨e final￨e OpaqueRegion￨e visibleRegion￨e ;￨e private￨f Animal￨f (￨f final￨p String￨p filename￨p ,￨p final￨p boolean￨p isKitten￨p )￨f {￨f }￨f private￨f BufferedImage￨f load￨f (￨f final￨p String￨p filename￨p )￨f {￨f }￨f }￨d private￨d class￨d CaptchaImageResource￨d extends￨d DynamicImageResource￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 1560784998742404278L￨e ;￨e private￨e final￨e KittenCaptchaPanel￨e .￨e PlacedAnimalList￨e animals￨e ;￨e private￨e transient￨e SoftReference￨e <￨e byte￨e [￨e ]￨e >￨e data￨e =￨e null￨e ;￨e @￨f Override￨f protected￨f void￨f configureResponse￨f (￨f ResourceResponse￨p response￨p ,￨p Attributes￨p attributes￨p )￨f {￨f super￨e .￨e configureResponse￨e (￨e response￨e ,￨e attributes￨e )￨e ;￨e <START_BUG>￨b response￨b .￨b setCacheDuration￨b (￨b 0￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f CaptchaImageResource￨f (￨f final￨p KittenCaptchaPanel￨p .￨p PlacedAnimalList￨p animals￨p )￨f {￨f }￨f @￨f Override￨f protected￨f byte￨f [￨f ]￨f getImageData￨f (￨f Attributes￨p attributes￨p )￨f {￨f }￨f protected￨f void￨f invalidate￨f (￨f )￨f {￨f }￨f private￨f boolean￨f allKittensSelected￨f (￨f )￨f {￨f }￨f private￨f void￨f clearData￨f (￨f )￨f {￨f }￨f private￨f void￨f reset￨f (￨f )￨f {￨f }￨f private￨f String￨f selectString￨f (￨f )￨f {￨f }￨f }￨d private￨d class￨d PlacedAnimal￨d implements￨d Serializable￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 6703909440564862486L￨e ;￨e private￨e transient￨e KittenCaptchaPanel￨e .￨e Animal￨e animal￨e ;￨e private￨e final￨e int￨e index￨e ;￨e private￨e boolean￨e isHighlighted￨e ;￨e private￨e final￨e boolean￨e isKitten￨e ;￨e private￨e final￨e Point￨e location￨e ;￨e private￨f final￨f float￨f [￨f ]￨f scales￨f =￨f new￨f float￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f PlacedAnimal￨f (￨f final￨p KittenCaptchaPanel￨p .￨p Animal￨p animal￨p ,￨p final￨p Point￨p location￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f private￨f boolean￨f contains￨f (￨f final￨p Point￨p point￨p )￨f {￨f }￨f private￨f void￨f draw￨f (￨f final￨p Graphics2D￨p graphics￨p )￨f {￨f }￨f private￨f KittenCaptchaPanel￨f .￨f Animal￨f getAnimal￨f (￨f )￨f {￨f }￨f private￨f float￨f random￨f (￨f float￨p min￨p ,￨p float￨p max￨p )￨f {￨f }￨f }￨d private￨d class￨d PlacedAnimalList￨d implements￨d Serializable￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 6335852594326213439L￨e ;￨e private￨e final￨e List￨e <￨e KittenCaptchaPanel￨e .￨e PlacedAnimal￨e >￨e animals￨e =￨e new￨e ArrayList￨e <￨e KittenCaptchaPanel￨e .￨e PlacedAnimal￨e >￨e (￨e )￨e ;￨e private￨f PlacedAnimalList￨f (￨f )￨f {￨f }￨f private￨f boolean￨f allKittensSelected￨f (￨f )￨f {￨f }￨f private￨f KittenCaptchaPanel￨f .￨f PlacedAnimal￨f atLocation￨f (￨f final￨p Point￨p location￨p )￨f {￨f }￨f private￨f BufferedImage￨f createImage￨f (￨f )￨f {￨f }￨f private￨f void￨f reset￨f (￨f )￨f {￨f }￨f private￨f String￨f selectString￨f (￨f )￨f {￨f }￨f private￨f OpaqueRegion￨f visibleRegion￨f (￨f final￨p KittenCaptchaPanel￨p .￨p PlacedAnimal￨p animal￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d UMLLinkedList￨d extends￨d UMLList2￨d implements￨d MouseListener￨d {￨d public￨f UMLLinkedList￨f (￨f UMLModelElementListModel2￨p dataModel￨p ,￨p boolean￨p showIcon￨p )￨f {￨f }￨f public￨f UMLLinkedList￨f (￨f UMLModelElementListModel2￨p dataModel￨p )￨f {￨f }￨f protected￨f void￨f doIt￨f (￨f ListSelectionEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f mouseClicked￨f (￨f MouseEvent￨p e￨p )￨f {￨f if￨j (￨j (￨c e￨c .￨c getSource￨c (￨c )￨c )￨c ==￨c (￨c this￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c e￨c .￨c getClickCount￨c (￨c )￨c )￨c >=￨c 2￨c )￨c &&￨c (￨c SwingUtilities￨c .￨c isLeftMouseButton￨c (￨c e￨c )￨c )￨c )￨j {￨j Object￨e o￨e =￨e getSelectedValue￨e (￨e )￨e ;￨e if￨j (￨j o￨c instanceof￨c MModelElement￨c )￨j {￨j <START_BUG>￨b TheInstance￨b .￨b setTarget￨b (￨b o￨b )￨b ;￨b <END_BUG>￨b }￨j }￨j e￨e .￨e consume￨e (￨e )￨e ;￨e }￨j }￨f public￨f void￨f mouseEntered￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f mouseExited￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f mousePressed￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f mouseReleased￨f (￨f MouseEvent￨p e￨p )￨f {￨f }￨f }￨d
public￨d class￨d NewLoggingExtension￨d implements￨d NewExtension￨d {￨d public￨e static￨e final￨e String￨e SUBSYSTEM_NAME￨e =￨e "logging"￨e ;￨e private￨e static￨e final￨e PathElement￨e loggersPath￨e =￨e PathElement￨e .￨e pathElement￨e (￨e LOGGER￨e )￨e ;￨e private￨e static￨e final￨e PathElement￨e handlersPath￨e =￨e PathElement￨e .￨e pathElement￨e (￨e HANDLER￨e )￨e ;￨e public￨f void￨f initialize￨f (￨f NewExtensionContext￨p context￨p )￨f {￨f final￨e SubsystemRegistration￨e subsystem￨e =￨e context￨e .￨e registerSubsystem￨e (￨e NewLoggingExtension￨e .￨e SUBSYSTEM_NAME￨e )￨e ;￨e final￨e ModelNodeRegistration￨e registration￨e =￨e subsystem￨e .￨e registerSubsystemModel￨e (￨e SUBSYSTEM￨e )￨e ;￨e registration￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e NewLoggingExtension￨e .￨e ADD_INSTANCE￨e ,￨e SUBSYSTEM_ADD￨e ,￨e false￨e )￨e ;￨e registration￨e .￨e registerOperationHandler￨e (￨e "set-root-logger"￨e ,￨e INSTANCE￨e ,￨e SET_ROOT_LOGGER￨e ,￨e false￨e )￨e ;￨e registration￨e .￨e registerOperationHandler￨e (￨e "remove-root-logger"￨e ,￨e NewRootLoggerRemove￨e .￨e INSTANCE￨e ,￨e SET_ROOT_LOGGER￨e ,￨e false￨e )￨e ;￨e final￨e ModelNodeRegistration￨e loggers￨e =￨e registration￨e .￨e registerSubModel￨e (￨e NewLoggingExtension￨e .￨e loggersPath￨e ,￨e NewLoggingSubsystemProviders￨e .￨e LOGGER￨e )￨e ;￨e loggers￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e NewLoggerAdd￨e .￨e INSTANCE￨e ,￨e LOGGER_ADD￨e ,￨e false￨e )￨e ;￨e loggers￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e NewLoggerRemove￨e .￨e INSTANCE￨e ,￨e LOGGER_REMOVE￨e ,￨e false￨e )￨e ;￨e final￨e ModelNodeRegistration￨e handlers￨e =￨e registration￨e .￨e registerSubModel￨e (￨e NewLoggingExtension￨e .￨e handlersPath￨e ,￨e HANDLERS￨e )￨e ;￨e handlers￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e NewLoggerHandlerAdd￨e .￨e INSTANCE￨e ,￨e HANDLER_ADD￨e ,￨e false￨e )￨e ;￨e handlers￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e NewLoggerHandlerRemove￨e .￨e INSTANCE￨e ,￨e HANDLER_REMOVE￨e ,￨e false￨e )￨e ;￨e <START_BUG>￨b handlers￨b .￨b registerOperationHandler￨b (￨b "add-async-handler"￨b ,￨b NewAsyncHandlerAdd￨b .￨b INSTANCE￨b ,￨b ASYNC_HANDLER_ADD￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b handlers￨e .￨e registerOperationHandler￨e (￨e "add-console-handler"￨e ,￨e NewConsoleHandlerAdd￨e .￨e INSTANCE￨e ,￨e CONSOLE_HANDLER_ADD￨e ,￨e false￨e )￨e ;￨e handlers￨e .￨e registerOperationHandler￨e (￨e "add-file-handler"￨e ,￨e NewFileHandlerAdd￨e .￨e INSTANCE￨e ,￨e FILE_HANDLER_ADD￨e ,￨e false￨e )￨e ;￨e handlers￨e .￨e registerOperationHandler￨e (￨e "add-periodic-handler"￨e ,￨e NewPeriodicFileHandlerAdd￨e .￨e INSTANCE￨e ,￨e PERIODIC_HANDLER_ADD￨e ,￨e false￨e )￨e ;￨e handlers￨e .￨e registerOperationHandler￨e (￨e "add-size-periodic-handler"￨e ,￨e NewSizePeriodicFileHandlerAdd￨e .￨e INSTANCE￨e ,￨e SIZE_PERIODIC_HANDLER_ADD￨e ,￨e false￨e )￨e ;￨e }￨f public￨f void￨f initializeParsers￨f (￨f ExtensionParsingContext￨p context￨p )￨f {￨f }￨f private￨e static￨e final￨e NewLoggingExtension￨e .￨e NewLoggingSubsystemAdd￨e ADD_INSTANCE￨e =￨e new￨e NewLoggingExtension￨e .￨e NewLoggingSubsystemAdd￨e (￨e )￨e ;￨e static￨d class￨d NewLoggingSubsystemAdd￨d implements￨d ModelAddOperationHandler￨d {￨d public￨f Cancellable￨f execute￨f (￨f final￨p NewOperationContext￨p context￨p ,￨p final￨p ModelNode￨p operation￨p ,￨p final￨p ResultHandler￨p resultHandler￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TestTimeLimitingCollector￨d extends￨d LuceneTestCase￨d {￨d private￨e static￨e final￨e int￨e SLOW_DOWN￨e =￨e 3￨e ;￨e private￨e static￨e final￨e long￨e TIME_ALLOWED￨e =￨e 17￨e *￨e (￨e TestTimeLimitingCollector￨e .￨e SLOW_DOWN￨e )￨e ;￨e private￨e static￨e final￨e double￨e MULTI_THREAD_SLACK￨e =￨e 7￨e ;￨e private￨e static￨e final￨e int￨e N_DOCS￨e =￨e 3000￨e ;￨e private￨e static￨e final￨e int￨e N_THREADS￨e =￨e 50￨e ;￨e private￨e Searcher￨e searcher￨e ;￨e private￨e final￨e String￨e FIELD_NAME￨e =￨e "body"￨e ;￨e private￨e Query￨e query￨e ;￨e public￨f TestTimeLimitingCollector￨f (￨f String￨p name￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e final￨f String￨f [￨f ]￨f docText￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e Directory￨e directory￨e =￨e new￨e RAMDirectory￨e (￨e )￨e ;￨e IndexWriter￨e iw￨e =￨e new￨e IndexWriter￨e (￨e directory￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e ,￨e true￨e ,￨e MaxFieldLength￨e .￨e UNLIMITED￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestTimeLimitingCollector￨c .￨c N_DOCS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l add￨e (￨e docText￨e [￨e (￨e i￨e %￨e (￨e docText￨e .￨e length￨e )￨e )￨e ]￨e ,￨e iw￨e )￨e ;￨e }￨l iw￨e .￨e close￨e (￨e )￨e ;￨e searcher￨e =￨e new￨e IndexSearcher￨e (￨e directory￨e ,￨e true￨e )￨e ;￨e String￨e qtxt￨e =￨e "one"￨e ;￨e for￨l (￨l int￨c i￨c =￨c 1￨c ;￨c i￨c <￨c (￨c docText￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l qtxt￨e +=￨e '<seq2seq4repair_space>'￨e +￨e (￨e docText￨e [￨e i￨e ]￨e )￨e ;￨e }￨l <START_BUG>￨b QueryParser￨b queryParser￨b =￨b new￨b QueryParser￨b (￨b Version￨b .￨b LUCENE_CURRENT￨b ,￨b FIELD_NAME￨b ,￨b new￨b WhitespaceAnalyzer￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b query￨e =￨e queryParser￨e .￨e parse￨e (￨e qtxt￨e )￨e ;￨e searcher￨e .￨e search￨e (￨e query￨e ,￨e null￨e ,￨e 1000￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f add￨f (￨f String￨f value￨f ,￨f IndexWriter￨f iw￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f search￨f (￨f Collector￨f collector￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearch￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestSearch￨f (￨f )￨f {￨f }￨f private￨f Collector￨f createTimedCollector￨f (￨f TestTimeLimitingCollector￨p .￨p MyHitCollector￨p hc￨p ,￨p long￨p timeAllowed￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f public￨f void￨f testTimeoutGreedy￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutNotGreedy￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestTimeout￨f (￨f boolean￨p multiThreaded￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f private￨f long￨f maxTime￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f private￨f String￨f maxTimeStr￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f public￨f void￨f testModifyResolution￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearchMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestMultiThreads￨f (￨f final￨f boolean￨f withTimeout￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d class￨d MyHitCollector￨d extends￨d Collector￨d {￨d private￨e final￨e BitSet￨e bits￨e =￨e new￨e BitSet￨e (￨e )￨e ;￨e private￨e int￨e slowdown￨e =￨e 0￨e ;￨e private￨e int￨e lastDocCollected￨e =￨e -￨e 1￨e ;￨e private￨e int￨e docBase￨e =￨e 0￨e ;￨e public￨f void￨f setSlowDown￨f (￨f int￨p milliseconds￨p )￨f {￨f }￨f public￨f int￨f hitCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getLastDocCollected￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setScorer￨f (￨f Scorer￨f scorer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f collect￨f (￨f final￨f int￨f doc￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setNextReader￨f (￨f IndexReader￨p reader￨p ,￨p int￨p base￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f acceptsDocsOutOfOrder￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TCPConfigGui￨d extends￨d AbstractConfigGui￨d {￨d private￨e static￨e final￨e String￨e SERVER￨e =￨e "server"￨e ;￨e private￨e static￨e final￨e String￨e PORT￨e =￨e "port"￨e ;￨e private￨e static￨e final￨e String￨e FILENAME￨e =￨e "filename"￨e ;￨e private￨e static￨e final￨e String￨e TIMEOUT￨e =￨e "timeout"￨e ;￨e private￨e static￨e final￨e String￨e NODELAY￨e =￨e "nodelay"￨e ;￨e private￨e JTextField￨e server￨e ;￨e private￨e JTextField￨e port￨e ;￨e private￨e JTextField￨e filename￨e ;￨e private￨e JTextField￨e timeout￨e ;￨e private￨e JTextField￨e nodelay￨e ;￨e private￨e boolean￨e displayName￨e =￨e true￨e ;￨e public￨f TCPConfigGui￨f (￨f )￨f {￨f }￨f public￨f TCPConfigGui￨f (￨f boolean￨p displayName￨p )￨f {￨f }￨f public￨f String￨f getStaticLabel￨f (￨f )￨f {￨f <START_BUG>￨b return￨b JMeterUtils￨b .￨b getResString￨b (￨b "tcp_sample_title"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f configure￨f (￨f TestElement￨p element￨p )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyTestElement￨f (￨f TestElement￨p element￨p )￨f {￨f }￨f private￨f JPanel￨f createTimeoutPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f createNoDelayPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f createServerPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f createPortPanel￨f (￨f )￨f {￨f }￨f private￨f JPanel￨f createFilenamePanel￨f (￨f )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d GoLinkStimuli￨d implements￨d TreeModelPrereqs￨d {￨d public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b Localizer￨b .￨b localize￨b (￨b "Tree"￨b ,￨b "Link->Stimuli"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Object￨f getRoot￨f (￨f )￨f {￨f }￨f public￨f void￨f setRoot￨f (￨f Object￨p r￨p )￨f {￨f }￨f public￨f Object￨f getChild￨f (￨f Object￨p parent￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f int￨f getChildCount￨f (￨f Object￨p parent￨p )￨f {￨f }￨f public￨f int￨f getIndexOfChild￨f (￨f Object￨p parent￨p ,￨p Object￨p child￨p )￨f {￨f }￨f public￨f Vector￨f getChildren￨f (￨f Object￨p parent￨p )￨f {￨f }￨f public￨f boolean￨f isLeaf￨f (￨f Object￨p node￨p )￨f {￨f }￨f public￨f void￨f valueForPathChanged￨f (￨f TreePath￨p path￨p ,￨p Object￨p newValue￨p )￨f {￨f }￨f public￨f void￨f addTreeModelListener￨f (￨f TreeModelListener￨p l￨p )￨f {￨f }￨f public￨f void￨f removeTreeModelListener￨f (￨f TreeModelListener￨p l￨p )￨f {￨f }￨f public￨f Vector￨f getPrereqs￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getProvidedTypes￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ConditionalExpression￨d extends￨d OperatorExpression￨d {￨d public￨e Expression￨e condition￨e ;￨e public￨e Expression￨e valueIfTrue￨e ;￨e public￨e Expression￨e valueIfFalse￨e ;￨e public￨e Constant￨e optimizedBooleanConstant￨e ;￨e public￨e Constant￨e optimizedIfTrueConstant￨e ;￨e public￨e Constant￨e optimizedIfFalseConstant￨e ;￨e int￨e trueInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e falseInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e mergedInitStateIndex￨e =￨e -￨e 1￨e ;￨e public￨f ConditionalExpression￨f (￨f Expression￨p condition￨p ,￨p Expression￨p valueIfTrue￨p ,￨p Expression￨p valueIfFalse￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f int￨e pc￨e =￨e codeStream￨e .￨e position￨e ;￨e BranchLabel￨e endifLabel￨e ;￨e BranchLabel￨e falseLabel￨e ;￨e if￨j (￨j (￨c constant￨c )￨c !=￨c (￨c Constant￨c .￨c NotAConstant￨c )￨c )￨j {￨j if￨j (￨j valueRequired￨c )￨j {￨j codeStream￨e .￨e generateConstant￨e (￨e constant￨e ,￨e implicitConversion￨e )￨e ;￨e }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e return￨e ;￨e }￨j Constant￨e cst￨e =￨e condition￨e .￨e constant￨e ;￨e Constant￨e condCst￨e =￨e condition￨e .￨e optimizedBooleanConstant￨e (￨e )￨e ;￨e boolean￨e needTruePart￨e =￨e !￨e (￨e (￨e (￨e cst￨e !=￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e cst￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e false￨e )￨e )￨e ||￨e (￨e (￨e condCst￨e !=￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e condCst￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e false￨e )￨e )￨e )￨e ;￨e boolean￨e needFalsePart￨e =￨e !￨e (￨e (￨e (￨e cst￨e !=￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e cst￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e true￨e )￨e )￨e ||￨e (￨e (￨e condCst￨e !=￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e condCst￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e true￨e )￨e )￨e )￨e ;￨e endifLabel￨e =￨e new￨e BranchLabel￨e (￨e codeStream￨e )￨e ;￨e boolean￨e needConditionValue￨e =￨e (￨e cst￨e ==￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e &&￨e (￨e condCst￨e ==￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e )￨e ;￨e falseLabel￨e =￨e new￨e BranchLabel￨e (￨e codeStream￨e )￨e ;￨e falseLabel￨e .￨e tagBits￨e |=￨e BranchLabel￨e .￨e USED￨e ;￨e condition￨e .￨e generateOptimizedBoolean￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e null￨e ,￨e falseLabel￨e ,￨e needConditionValue￨e )￨e ;￨e if￨j (￨j (￨c trueInitStateIndex￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j codeStream￨e .￨e removeNotDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e trueInitStateIndex￨e )￨e ;￨e codeStream￨e .￨e addDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e trueInitStateIndex￨e )￨e ;￨e }￨j if￨j (￨j needTruePart￨c )￨j {￨j valueIfTrue￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e valueRequired￨e )￨e ;￨e if￨j (￨j needFalsePart￨c )￨j {￨j int￨e position￨e =￨e codeStream￨e .￨e position￨e ;￨e codeStream￨e .￨e goto_￨e (￨e endifLabel￨e )￨e ;￨e codeStream￨e .￨e updateLastRecordedEndPC￨e (￨e currentScope￨e ,￨e position￨e )￨e ;￨e if￨j (￨j valueRequired￨c )￨j {￨j codeStream￨e .￨e decrStackSize￨e (￨e (￨e (￨e (￨e this￨e .￨e resolvedType￨e )￨e ==￨e (￨e TypeBinding￨e .￨e LONG￨e )￨e )￨e ||￨e (￨e (￨e this￨e .￨e resolvedType￨e )￨e ==￨e (￨e TypeBinding￨e .￨e DOUBLE￨e )￨e )￨e ?￨e 2￨e :￨e 1￨e )￨e )￨e ;￨e }￨j }￨j }￨j if￨j (￨j needFalsePart￨c )￨j {￨j if￨j (￨j (￨c falseInitStateIndex￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j codeStream￨e .￨e removeNotDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e falseInitStateIndex￨e )￨e ;￨e codeStream￨e .￨e addDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e falseInitStateIndex￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b falseLabel￨b .￨b hasForwardReferences￨b (￨b )￨b )￨b {￨b <END_BUG>￨b falseLabel￨e .￨e place￨e (￨e )￨e ;￨e }￨e valueIfFalse￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e valueRequired￨e )￨e ;￨e if￨j (￨j valueRequired￨c )￨j {￨j codeStream￨e .￨e recordExpressionType￨e (￨e this￨e .￨e resolvedType￨e )￨e ;￨e }￨j if￨j (￨j needTruePart￨c )￨j {￨j endifLabel￨e .￨e place￨e (￨e )￨e ;￨e }￨j }￨j if￨j (￨j (￨c mergedInitStateIndex￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j codeStream￨e .￨e removeNotDefinitelyAssignedVariables￨e (￨e currentScope￨e ,￨e mergedInitStateIndex￨e )￨e ;￨e }￨j if￨j (￨j valueRequired￨c )￨j {￨j codeStream￨e .￨e generateImplicitConversion￨e (￨e implicitConversion￨e )￨e ;￨e }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e }￨f public￨f void￨f generateOptimizedBoolean￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p BranchLabel￨p trueLabel￨p ,￨p BranchLabel￨p falseLabel￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f int￨f nullStatus￨f (￨f FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f Constant￨f optimizedBooleanConstant￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f printExpressionNoParenthesis￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d ResourceStreamResource￨d extends￨d AbstractResource￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨d static￨d final￨d Logger￨d logger￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d ResourceStreamResource￨d .￨d class￨d )￨d ;￨d private￨d final￨d IResourceStream￨d stream￨d ;￨d private￨d String￨d fileName￨d ;￨d private￨d ContentDisposition￨d contentDisposition￨d =￨d ContentDisposition￨d .￨d INLINE￨d ;￨d private￨d String￨d textEncoding￨d ;￨d private￨d String￨d mimeType￨d ;￨d public￨d ResourceStreamResource￨d (￨d IResourceStream￨d stream￨d )￨d {￨d }￨d public￨f ResourceStreamResource￨f setFileName￨f (￨f String￨p fileName￨p )￨f {￨f }￨f public￨f ResourceStreamResource￨f setContentDisposition￨f (￨f ContentDisposition￨p contentDisposition￨p )￨f {￨f }￨f public￨f ResourceStreamResource￨f setTextEncoding￨f (￨f String￨p textEncoding￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ResourceResponse￨f newResourceResponse￨f (￨f Attributes￨p attributes￨p )￨f {￨f ResourceResponse￨e data￨e =￨e new￨e ResourceResponse￨e (￨e )￨e ;￨e Time￨e lastModifiedTime￨e =￨e stream￨e .￨e lastModifiedTime￨e (￨e )￨e ;￨e if￨j (￨j lastModifiedTime￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b data￨b .￨b setLastModified￨b (￨b lastModifiedTime￨b .￨b toDate￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j data￨c .￨c dataNeedsToBeWritten￨c (￨c attributes￨c )￨c )￨j {￨j InputStream￨e inputStream￨e =￨e null￨e ;￨e if￨j (￨j (￨c (￨c stream￨c )￨c instanceof￨c IResourceStreamWriter￨c )￨c ==￨c false￨c )￨j {￨j try￨f (￨f )￨f {￨f inputStream￨e =￨e stream￨e .￨e getInputStream￨e (￨e )￨e ;￨e }￨f catch￨f (￨f ResourceStreamNotFoundException￨p e￨p )￨f {￨f data￨e .￨e setError￨e (￨e SC_NOT_FOUND￨e )￨e ;￨e close￨e (￨e )￨e ;￨e }￨f }￨j data￨e .￨e setContentDisposition￨e (￨e contentDisposition￨e )￨e ;￨e Bytes￨e length￨e =￨e stream￨e .￨e length￨e (￨e )￨e ;￨e if￨j (￨j length￨c !=￨c null￨c )￨j {￨j data￨e .￨e setContentLength￨e (￨e length￨e .￨e bytes￨e (￨e )￨e )￨e ;￨e }￨j data￨e .￨e setFileName￨e (￨e fileName￨e )￨e ;￨e data￨e .￨e setContentType￨e (￨e stream￨e .￨e getContentType￨e (￨e )￨e )￨e ;￨e data￨e .￨e setTextEncoding￨e (￨e textEncoding￨e )￨e ;￨e if￨j (￨j (￨c stream￨c )￨c instanceof￨c IResourceStreamWriter￨c )￨j {￨j data￨f .￨f setWriteCallback￨f (￨f new￨f WriteCallback￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f writeData￨f (￨f Attributes￨p attributes￨p )￨f {￨f (￨e (￨e IResourceStreamWriter￨e )￨e (￨e stream￨e )￨e )￨e .￨e write￨e (￨e attributes￨e .￨e getResponse￨e (￨e )￨e )￨e ;￨e close￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e }￨j else￨j {￨j final￨e InputStream￨e s￨e =￨e inputStream￨e ;￨e data￨f .￨f setWriteCallback￨f (￨f new￨f WriteCallback￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f writeData￨f (￨f Attributes￨p attributes￨p )￨f {￨f try￨f (￨f )￨f {￨f writeStream￨e (￨e attributes￨e ,￨e s￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f close￨e (￨e )￨e ;￨e }￨f }￨f }￨f )￨e ;￨e }￨j }￨j return￨e data￨e ;￨e }￨f private￨f void￨f close￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d BeansXmlProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨e static￨e final￨e String￨e WEB_INF_BEANS_XML￨e =￨e "WEB-INF/beans.xml"￨e ;￨e private￨e static￨e final￨e String￨e META_INF_BEANS_XML￨e =￨e "META-INF/beans.xml"￨e ;￨e @￨f Override￨f public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e BeansXmlParser￨e parser￨e =￨e new￨e BeansXmlParser￨e (￨e )￨e ;￨e Set￨e <￨e BeanArchiveMetadata￨e >￨e beanArchiveMetadata￨e =￨e new￨e HashSet￨e <￨e BeanArchiveMetadata￨e >￨e (￨e )￨e ;￨e ResourceRoot￨e deploymentRoot￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e DEPLOYMENT_ROOT￨e )￨e ;￨e if￨j (￨j deploymentRoot￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j ResourceRoot￨e classesRoot￨e =￨e null￨e ;￨e List￨e <￨e ResourceRoot￨e >￨e structure￨e =￨e deploymentUnit￨e .￨e getAttachmentList￨e (￨e RESOURCE_ROOTS￨e )￨e ;￨e for￨l (￨l ResourceRoot￨c resourceRoot￨c :￨c structure￨c )￨l {￨l if￨j (￨j (￨c ModuleRootMarker￨c .￨c isModuleRoot￨c (￨c resourceRoot￨c )￨c )￨c &&￨c (￨c !￨c (￨c SubDeploymentMarker￨c .￨c isSubDeployment￨c (￨c resourceRoot￨c )￨c )￨c )￨c )￨j {￨j if￨j (￨j resourceRoot￨c .￨c getRootName￨c (￨c )￨c .￨c equals￨c (￨c "classes"￨c )￨c )￨j {￨j classesRoot￨e =￨e resourceRoot￨e ;￨e }￨j else￨j {￨j VirtualFile￨e beansXml￨e =￨e resourceRoot￨e .￨e getRoot￨e (￨e )￨e .￨e getChild￨e (￨e BeansXmlProcessor￨e .￨e META_INF_BEANS_XML￨e )￨e ;￨e if￨j (￨j (￨c beansXml￨c .￨c exists￨c (￨c )￨c )￨c &&￨c (￨c beansXml￨c .￨c isFile￨c (￨c )￨c )￨c )￨j {￨j DEPLOYMENT_LOGGER￨e .￨e debugf￨e (￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨e ,￨e beansXml￨e .￨e toString￨e (￨e )￨e )￨e ;￨e beanArchiveMetadata￨e .￨e add￨e (￨e new￨e BeanArchiveMetadata￨e (￨e beansXml￨e ,￨e resourceRoot￨e ,￨e parseBeansXml￨e (￨e beansXml￨e ,￨e parser￨e ,￨e deploymentUnit￨e )￨e ,￨e false￨e )￨e )￨e ;￨e }￨j }￨j }￨j }￨l if￨j (￨j DeploymentTypeMarker￨c .￨c isType￨c (￨c WAR￨c ,￨c deploymentUnit￨c )￨c )￨j {￨j final￨e VirtualFile￨e rootBeansXml￨e =￨e deploymentRoot￨e .￨e getRoot￨e (￨e )￨e .￨e getChild￨e (￨e BeansXmlProcessor￨e .￨e WEB_INF_BEANS_XML￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b rootBeansXml￨b .￨b exists￨b (￨b )￨b )￨b &&￨b (￨b rootBeansXml￨b .￨b isFile￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b DEPLOYMENT_LOGGER￨e .￨e debugf￨e (￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨e ,￨e rootBeansXml￨e )￨e ;￨e beanArchiveMetadata￨e .￨e add￨e (￨e new￨e BeanArchiveMetadata￨e (￨e rootBeansXml￨e ,￨e classesRoot￨e ,￨e parseBeansXml￨e (￨e rootBeansXml￨e ,￨e parser￨e ,￨e deploymentUnit￨e )￨e ,￨e true￨e )￨e )￨e ;￨e else￨j if￨j (￨j classesRoot￨c !=￨c null￨c )￨j {￨j VirtualFile￨e beansXml￨e =￨e classesRoot￨e .￨e getRoot￨e (￨e )￨e .￨e getChild￨e (￨e BeansXmlProcessor￨e .￨e META_INF_BEANS_XML￨e )￨e ;￨e if￨j (￨j (￨c beansXml￨c .￨c exists￨c (￨c )￨c )￨c &&￨c (￨c beansXml￨c .￨c isFile￨c (￨c )￨c )￨c )￨j {￨j DEPLOYMENT_LOGGER￨e .￨e beansXmlInNonStandardLocation￨e (￨e beansXml￨e .￨e toString￨e (￨e )￨e )￨e ;￨e beanArchiveMetadata￨e .￨e add￨e (￨e new￨e BeanArchiveMetadata￨e (￨e beansXml￨e ,￨e classesRoot￨e ,￨e parseBeansXml￨e (￨e beansXml￨e ,￨e parser￨e ,￨e deploymentUnit￨e )￨e ,￨e true￨e )￨e )￨e ;￨e }￨j }￨j }￨j else￨j if￨j (￨j !￨c (￨c DeploymentTypeMarker￨c .￨c isType￨c (￨c EAR￨c ,￨c deploymentUnit￨c )￨c )￨c )￨j {￨j final￨e VirtualFile￨e rootBeansXml￨e =￨e deploymentRoot￨e .￨e getRoot￨e (￨e )￨e .￨e getChild￨e (￨e BeansXmlProcessor￨e .￨e META_INF_BEANS_XML￨e )￨e ;￨e if￨j (￨j (￨c rootBeansXml￨c .￨c exists￨c (￨c )￨c )￨c &&￨c (￨c rootBeansXml￨c .￨c isFile￨c (￨c )￨c )￨c )￨j {￨j DEPLOYMENT_LOGGER￨e .￨e debugf￨e (￨e "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨e ,￨e rootBeansXml￨e .￨e toString￨e (￨e )￨e )￨e ;￨e beanArchiveMetadata￨e .￨e add￨e (￨e new￨e BeanArchiveMetadata￨e (￨e rootBeansXml￨e ,￨e deploymentRoot￨e ,￨e parseBeansXml￨e (￨e rootBeansXml￨e ,￨e parser￨e ,￨e deploymentUnit￨e )￨e ,￨e true￨e )￨e )￨e ;￨e }￨j }￨j if￨j (￨j !￨c (￨c beanArchiveMetadata￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j WeldDeploymentMetadata￨e deploymentMetadata￨e =￨e new￨e WeldDeploymentMetadata￨e (￨e beanArchiveMetadata￨e )￨e ;￨e deploymentUnit￨e .￨e putAttachment￨e (￨e ATTACHMENT_KEY￨e ,￨e deploymentMetadata￨e )￨e ;￨e WeldDeploymentMarker￨e .￨e mark￨e (￨e deploymentUnit￨e )￨e ;￨e if￨j (￨j (￨c deploymentUnit￨c .￨c getParent￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j WeldDeploymentMarker￨e .￨e mark￨e (￨e deploymentUnit￨e .￨e getParent￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨f @￨f Override￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f private￨f BeansXml￨f parseBeansXml￨f (￨f VirtualFile￨f beansXmlFile￨f ,￨f BeansXmlParser￨f parser￨f ,￨f final￨f DeploymentUnit￨f deploymentUnit￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d GrantNode￨d extends￨d MiscellaneousStatementNode￨d {￨d private￨e PrivilegeNode￨e privileges￨e ;￨e private￨e List￨e grantees￨e ;￨e public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f String￨f statementToString￨f (￨f )￨f {￨f }￨f public￨f void￨f init￨f (￨f Object￨p privileges￨p ,￨p Object￨p grantees￨p )￨f {￨f }￨f public￨f QueryTreeNode￨f bind￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f <START_BUG>￨b privileges￨b =￨b (￨b (￨b PrivilegeNode￨b )￨b (￨b privileges￨b .￨b bind￨b (￨b new￨b HashMap￨b (￨b )￨b ,￨b grantees￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e this￨e ;￨e }￨f public￨f ConstantAction￨f makeConstantAction￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d WorkingCopyOwner￨d {￨d public￨f static￨f void￨f setPrimaryBufferProvider￨f (￨f WorkingCopyOwner￨p primaryBufferProvider￨p )￨f {￨f }￨f public￨f IBuffer￨f createBuffer￨f (￨f ICompilationUnit￨p workingCopy￨p )￨f {￨f <START_BUG>￨b return￨b BufferManager￨b .￨b getDefaultBufferManager￨b (￨b )￨b .￨b createBuffer￨b (￨b workingCopy￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f final￨f ICompilationUnit￨f newWorkingCopy￨f (￨f String￨f name￨f ,￨f IClasspathEntry￨f [￨f ]￨f classpath￨f ,￨f IProblemRequestor￨f problemRequestor￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ConcreteAspectCodeGen￨d {￨d private￨e static￨e final￨e String￨e [￨e ]￨e EMPTY_STRINGS￨e =￨e new￨e String￨e [￨e 0￨e ]￨e ;￨e private￨e static￨e final￨e Type￨e [￨e ]￨e EMPTY_TYPES￨e =￨e new￨e Type￨e [￨e 0￨e ]￨e ;￨e private￨e final￨e ConcreteAspect￨e m_concreteAspect￨e ;￨e private￨e final￨e World￨e m_world￨e ;￨e private￨e boolean￨e m_isValid￨e =￨e false￨e ;￨e private￨e ResolvedType￨e m_parent￨e ;￨e private￨e PerClause￨e m_perClause￨e ;￨e ConcreteAspectCodeGen￨f (￨f Definition￨p .￨p ConcreteAspect￨p concreteAspect￨p ,￨p World￨p world￨p )￨f {￨f }￨f public￨f boolean￨f validate￨f (￨f )￨f {￨f }￨f private￨f String￨f stringify￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f getBytes￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c m_isValid￨c )￨c )￨j {￨j throw￨e new￨e RuntimeException￨e (￨e "Must<seq2seq4repair_space>validate<seq2seq4repair_space>first"￨e )￨e ;￨e }￨j LazyClassGen￨e cg￨e =￨e new￨e LazyClassGen￨e (￨e m_concreteAspect￨e .￨e name￨e .￨e replace￨e (￨e '.'￨e ,￨e '/'￨e )￨e ,￨e m_parent￨e .￨e getName￨e (￨e )￨e ,￨e null￨e ,￨e (￨e (￨e Modifier￨e .￨e PUBLIC￨e )￨e +￨e (￨e Constants￨e .￨e ACC_SUPER￨e )￨e )￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_STRINGS￨e ,￨e m_world￨e )￨e ;￨e AnnotationGen￨e ag￨e =￨e new￨e AnnotationGen￨e (￨e new￨e ObjectType￨e (￨e "org/aspectj/lang/annotation/Aspect"￨e )￨e ,￨e Collections￨e .￨e EMPTY_LIST￨e ,￨e true￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e )￨e ;￨e cg￨e .￨e addAnnotation￨e (￨e ag￨e .￨e getAnnotation￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c m_concreteAspect￨c .￨c precedence￨c )￨c !=￨c null￨c )￨j {￨j SimpleElementValueGen￨e svg￨e =￨e new￨e SimpleElementValueGen￨e (￨e ElementValueGen￨e .￨e STRING￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e ,￨e m_concreteAspect￨e .￨e precedence￨e )￨e ;￨e List￨e elems￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e elems￨e .￨e add￨e (￨e new￨e org￨e .￨e aspectj￨e .￨e apache￨e .￨e bcel￨e .￨e generic￨e .￨e annotation￨e .￨e ElementNameValuePairGen￨e (￨e "value"￨e ,￨e svg￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e )￨e )￨e ;￨e AnnotationGen￨e agprec￨e =￨e new￨e AnnotationGen￨e (￨e new￨e ObjectType￨e (￨e "org/aspectj/lang/annotation/DeclarePrecedence"￨e )￨e ,￨e elems￨e ,￨e true￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e )￨e ;￨e cg￨e .￨e addAnnotation￨e (￨e agprec￨e .￨e getAnnotation￨e (￨e )￨e )￨e ;￨e }￨j LazyMethodGen￨e init￨e =￨e new￨e LazyMethodGen￨e (￨e Modifier￨e .￨e PUBLIC￨e ,￨e Type￨e .￨e VOID￨e ,￨e "<init>"￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_TYPES￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_STRINGS￨e ,￨e cg￨e )￨e ;￨e InstructionList￨e cbody￨e =￨e init￨e .￨e getBody￨e (￨e )￨e ;￨e cbody￨e .￨e append￨e (￨e ALOAD_0￨e )￨e ;￨e cbody￨e .￨e append￨e (￨e cg￨e .￨e getFactory￨e (￨e )￨e .￨e createInvoke￨e (￨e m_parent￨e .￨e getName￨e (￨e )￨e .￨e replace￨e (￨e '.'￨e ,￨e '/'￨e )￨e ,￨e "<init>"￨e ,￨e VOID￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_TYPES￨e ,￨e INVOKESPECIAL￨e )￨e )￨e ;￨e cbody￨e .￨e append￨e (￨e RETURN￨e )￨e ;￨e cg￨e .￨e addMethodGen￨e (￨e init￨e )￨e ;￨e for￨l (￨l Iterator￨c it￨c =￨c m_concreteAspect￨c .￨c pointcuts￨c .￨c iterator￨c (￨c )￨c ;￨c it￨c .￨c hasNext￨c (￨c )￨c ;￨c )￨l {￨l Definition￨e .￨e Pointcut￨e abstractPc￨e =￨e (￨e (￨e Definition￨e .￨e Pointcut￨e )￨e (￨e it￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e LazyMethodGen￨e mg￨e =￨e new￨e LazyMethodGen￨e (￨e Modifier￨e .￨e PUBLIC￨e ,￨e Type￨e .￨e VOID￨e ,￨e abstractPc￨e .￨e name￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_TYPES￨e ,￨e ConcreteAspectCodeGen￨e .￨e EMPTY_STRINGS￨e ,￨e cg￨e )￨e ;￨e SimpleElementValueGen￨e svg￨e =￨e new￨e SimpleElementValueGen￨e (￨e ElementValueGen￨e .￨e STRING￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e ,￨e abstractPc￨e .￨e expression￨e )￨e ;￨e List￨e elems￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e elems￨e .￨e add￨e (￨e new￨e org￨e .￨e aspectj￨e .￨e apache￨e .￨e bcel￨e .￨e generic￨e .￨e annotation￨e .￨e ElementNameValuePairGen￨e (￨e "value"￨e ,￨e svg￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e )￨e )￨e ;￨e AnnotationGen￨e mag￨e =￨e new￨e AnnotationGen￨e (￨e new￨e ObjectType￨e (￨e "org/aspectj/lang/annotation/Pointcut"￨e )￨e ,￨e elems￨e ,￨e true￨e ,￨e cg￨e .￨e getConstantPoolGen￨e (￨e )￨e )￨e ;￨e AnnotationX￨e max￨e =￨e new￨e AnnotationX￨e (￨e mag￨e .￨e getAnnotation￨e (￨e )￨e ,￨e m_world￨e )￨e ;￨e mg￨e .￨e addAnnotation￨e (￨e max￨e )￨e ;￨e InstructionList￨e body￨e =￨e mg￨e .￨e getBody￨e (￨e )￨e ;￨e body￨e .￨e append￨e (￨e RETURN￨e )￨e ;￨e cg￨e .￨e addMethodGen￨e (￨e mg￨e )￨e ;￨e }￨l BcelPerClauseAspectAdder￨e perClauseMunger￨e =￨e new￨e BcelPerClauseAspectAdder￨e (￨e ResolvedType￨e .￨e forName￨e (￨e m_concreteAspect￨e .￨e name￨e )￨e .￨e resolve￨e (￨e m_world￨e )￨e ,￨e m_perClause￨e .￨e getKind￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b perClauseMunger￨b .￨b forceMunge￨b (￨b cg￨b )￨b ;￨b <END_BUG>￨b JavaClass￨e jc￨e =￨e cg￨e .￨e getJavaClass￨e (￨e (￨e (￨e BcelWorld￨e )￨e (￨e m_world￨e )￨e )￨e )￨e ;￨e (￨e (￨e BcelWorld￨e )￨e (￨e m_world￨e )￨e )￨e .￨e addSourceObjectType￨e (￨e jc￨e )￨e ;￨e return￨e jc￨e .￨e getBytes￨e (￨e )￨e ;￨e }￨f private￨f void￨f reportError￨f (￨f String￨p message￨p )￨f {￨f }￨f }￨d
public￨d class￨d UnionNode￨d extends￨d SetOperatorNode￨d {￨d private￨e boolean￨e addNewNodesCalled￨e ;￨e boolean￨e tableConstructor￨e ;￨e boolean￨e topTableConstructor￨e ;￨e public￨f void￨f init￨f (￨f Object￨f leftResult￨f ,￨f Object￨f rightResult￨f ,￨f Object￨f all￨f ,￨f Object￨f tableConstructor￨f ,￨f Object￨f tableProperties￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f void￨f markTopTableConstructor￨f (￨f )￨f {￨f }￨f boolean￨f tableConstructor￨f (￨f )￨f {￨f }￨f public￨f void￨f rejectParameters￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f void￨f setTableConstructorTypes￨f (￨f ResultColumnList￨f typeColumns￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f CostEstimate￨f optimizeIt￨f (￨f Optimizer￨f optimizer￨f ,￨f OptimizablePredicateList￨f predList￨f ,￨f CostEstimate￨f outerCost￨f ,￨f RowOrdering￨f rowOrdering￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f if￨j (￨j (￨c predList￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c getCurrentAccessPath￨c (￨c )￨c .￨c getJoinStrategy￨c (￨c )￨c .￨c isHashJoin￨c (￨c )￨c )￨c )￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c (￨c predList￨c .￨c size￨c (￨c )￨c )￨c -￨c 1￨c ;￨c i￨c >=￨c 0￨c ;￨c i￨c --￨c )￨l {￨l if￨j (￨j pushOptPredicate￨c (￨c predList￨c .￨c getOptPredicate￨c (￨c i￨c )￨c )￨c )￨j {￨j predList￨e .￨e removeOptPredicate￨e (￨e i￨e )￨e ;￨e }￨j }￨l }￨j <START_BUG>￨b addOrLoadBestPlanMapping￨b (￨b true￨b ,￨b this￨b )￨b ;￨b <END_BUG>￨b leftResultSet￨e =￨e optimizeSource￨e (￨e optimizer￨e ,￨e leftResultSet￨e ,￨e getLeftOptPredicateList￨e (￨e )￨e ,￨e outerCost￨e )￨e ;￨e rightResultSet￨e =￨e optimizeSource￨e (￨e optimizer￨e ,￨e rightResultSet￨e ,￨e getRightOptPredicateList￨e (￨e )￨e ,￨e outerCost￨e )￨e ;￨e CostEstimate￨e costEstimate￨e =￨e getCostEstimate￨e (￨e optimizer￨e )￨e ;￨e costEstimate￨e .￨e setCost￨e (￨e leftResultSet￨e .￨e getCostEstimate￨e (￨e )￨e .￨e getEstimatedCost￨e (￨e )￨e ,￨e leftResultSet￨e .￨e getCostEstimate￨e (￨e )￨e .￨e rowCount￨e (￨e )￨e ,￨e (￨e (￨e leftResultSet￨e .￨e getCostEstimate￨e (￨e )￨e .￨e singleScanRowCount￨e (￨e )￨e )￨e +￨e (￨e rightResultSet￨e .￨e getCostEstimate￨e (￨e )￨e .￨e singleScanRowCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e costEstimate￨e .￨e add￨e (￨e costEstimate￨e ,￨e costEstimate￨e )￨e ;￨e getCurrentAccessPath￨e (￨e )￨e .￨e getJoinStrategy￨e (￨e )￨e .￨e estimateCost￨e (￨e this￨e ,￨e predList￨e ,￨e (￨e (￨e ConglomerateDescriptor￨e )￨e (￨e null￨e )￨e )￨e ,￨e outerCost￨e ,￨e optimizer￨e ,￨e costEstimate￨e )￨e ;￨e optimizer￨e .￨e considerCost￨e (￨e this￨e ,￨e predList￨e ,￨e costEstimate￨e ,￨e outerCost￨e )￨e ;￨e return￨e costEstimate￨e ;￨e }￨f public￨f void￨f pushExpressions￨f (￨f PredicateList￨f predicateList￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f Optimizable￨f modifyAccessPath￨f (￨f JBitSet￨f outerTables￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f ResultSetNode￨f modifyAccessPaths￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f ResultSetNode￨f addNewNodes￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f bindExpressions￨f (￨f FromList￨f fromListParam￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f void￨f generate￨f (￨f ActivationClassBuilder￨f acb￨f ,￨f MethodBuilder￨f mb￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f CostEstimate￨f getFinalCostEstimate￨f (￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f String￨f getOperatorName￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CassandraBulkLoader￨d {￨d public￨d static￨d class￨d Map￨d extends￨d MapReduceBase￨d implements￨d Mapper￨d <￨d Text￨d ,￨d Text￨d ,￨d Text￨d ,￨d Text￨d >￨d {￨d public￨f void￨f map￨f (￨f Text￨f key￨f ,￨f Text￨f value￨f ,￨f OutputCollector￨f <￨f Text￨f ,￨f Text￨f >￨f output￨f ,￨f Reporter￨f reporter￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d Reduce￨d extends￨d MapReduceBase￨d implements￨d Reducer￨d <￨d Text￨d ,￨d Text￨d ,￨d Text￨d ,￨d Text￨d >￨d {￨d private￨e Path￨e [￨e ]￨e localFiles￨e ;￨e private￨e JobConf￨e jobconf￨e ;￨e public￨f void￨f configure￨f (￨f JobConf￨p job￨p )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f public￨f void￨f reduce￨f (￨f Text￨f key￨f ,￨f Iterator￨f <￨f Text￨f >￨f values￨f ,￨f OutputCollector￨f <￨f Text￨f ,￨f Text￨f >￨f output￨f ,￨f Reporter￨f reporter￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨f static￨f void￨f runJob￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f public￨f static￨f Message￨f createMessage￨f (￨f String￨p keyspace￨p ,￨p byte￨p [￨p ]￨p key￨p ,￨p String￨p columnFamily￨p ,￨p List￨p <￨p ColumnFamily￨p >￨p columnFamilies￨p )￨f {￨f ColumnFamily￨e baseColumnFamily￨e ;￨e DataOutputBuffer￨e bufOut￨e =￨e new￨e DataOutputBuffer￨e (￨e )￨e ;￨e RowMutation￨e rm￨e ;￨e Message￨e message￨e ;￨e Column￨e column￨e ;￨e baseColumnFamily￨e =￨e new￨e ColumnFamily￨e (￨e ColumnFamilyType￨e .￨e Standard￨e ,￨e DatabaseDescriptor￨e .￨e getComparator￨e (￨e keyspace￨e ,￨e columnFamily￨e )￨e ,￨e DatabaseDescriptor￨e .￨e getSubComparator￨e (￨e keyspace￨e ,￨e columnFamily￨e )￨e ,￨e CFMetaData￨e .￨e getId￨e (￨e keyspace￨e ,￨e columnFamily￨e )￨e )￨e ;￨e for￨l (￨l ColumnFamily￨c cf￨c :￨c columnFamilies￨c )￨l {￨l bufOut￨e .￨e reset￨e (￨e )￨e ;￨e ColumnFamily￨e .￨e serializer￨e (￨e )￨e .￨e serializeWithIndexes￨e (￨e cf￨e ,￨e bufOut￨e )￨e ;￨e byte￨e [￨e ]￨e data￨e =￨e new￨e byte￨e [￨e bufOut￨e .￨e getLength￨e (￨e )￨e ]￨e ;￨e System￨e .￨e arraycopy￨e (￨e bufOut￨e .￨e getData￨e (￨e )￨e ,￨e 0￨e ,￨e data￨e ,￨e 0￨e ,￨e bufOut￨e .￨e getLength￨e (￨e )￨e )￨e ;￨e column￨e =￨e new￨e Column￨e (￨e FBUtilities￨e .￨e toByteBuffer￨e (￨e cf￨e .￨e id￨e (￨e )￨e )￨e ,￨e ByteBuffer￨e .￨e wrap￨e (￨e data￨e )￨e ,￨e 0￨e )￨e ;￨e baseColumnFamily￨e .￨e addColumn￨e (￨e column￨e )￨e ;￨e }￨l rm￨e =￨e new￨e RowMutation￨e (￨e keyspace￨e ,￨e ByteBuffer￨e .￨e wrap￨e (￨e key￨e )￨e )￨e ;￨e rm￨e .￨e add￨e (￨e baseColumnFamily￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b message￨b =￨b rm￨b .￨b makeRowMutationMessage￨b (￨b BINARY￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f return￨e message￨e ;￨e }￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d War￨d extends￨d Jar￨d {￨d private￨e File￨e deploymentDescriptor￨e ;￨e private￨e boolean￨e descriptorAdded￨e ;￨e public￨f War￨f (￨f )￨f {￨f }￨f public￨f void￨f setWarfile￨f (￨f File￨p warFile￨p )￨f {￨f }￨f public￨f void￨f setWebxml￨f (￨f File￨p descr￨p )￨f {￨f }￨f public￨f void￨f addLib￨f (￨f ZipFileSet￨p fs￨p )￨f {￨f }￨f public￨f void￨f addClasses￨f (￨f ZipFileSet￨p fs￨p )￨f {￨f }￨f public￨f void￨f addWebinf￨f (￨f ZipFileSet￨p fs￨p )￨f {￨f }￨f protected￨f void￨f initZipOutputStream￨f (￨f ZipOutputStream￨f zOut￨f )￨f throws￨f IOException￨f ,￨f BuildException￨f (￨f )￨f {￨f if￨j (￨j (￨c (￨c deploymentDescriptor￨c )￨c ==￨c null￨c )￨c &&￨c (￨c !￨c (￨c isInUpdateMode￨c (￨c )￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b BuildException￨b (￨b "webxml<seq2seq4repair_space>attribute<seq2seq4repair_space>is<seq2seq4repair_space>required"￨b ,￨b location￨b )￨b ;￨b <END_BUG>￨b }￨j super￨e .￨e initZipOutputStream￨e (￨e zOut￨e )￨e ;￨e }￨f protected￨f void￨f zipFile￨f (￨f File￨f file￨f ,￨f ZipOutputStream￨f zOut￨f ,￨f String￨f vPath￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f cleanUp￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d MethodRef￨d extends￨d ASTNode￨d implements￨d IDocElement￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d QUALIFIER_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d MethodRef￨d .￨d class￨d ,￨d "qualifier"￨d ,￨d Name￨d .￨d class￨d ,￨d ASTNode￨d .￨d OPTIONAL￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d NAME_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d MethodRef￨d .￨d class￨d ,￨d "name"￨d ,￨d SimpleName￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildListPropertyDescriptor￨d PARAMETERS_PROPERTY￨d =￨d new￨d ChildListPropertyDescriptor￨d (￨d MethodRef￨d .￨d class￨d ,￨d "parameters"￨d ,￨d MethodRefParameter￨d .￨d class￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d private￨e Name￨e optionalQualifier￨e =￨e null￨e ;￨e private￨e SimpleName￨e methodName￨e =￨e null￨e ;￨e private￨e ASTNode￨e .￨e NodeList￨e parameters￨e =￨e new￨e ASTNode￨e .￨e NodeList￨e (￨e MethodRef￨e .￨e PARAMETERS_PROPERTY￨e )￨e ;￨e MethodRef￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f List￨f internalGetChildListProperty￨f (￨f ChildListPropertyDescriptor￨p property￨p )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f MethodRef￨e result￨e =￨e new￨e MethodRef￨e (￨e target￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setSourceRange￨b (￨b this￨b .￨b getStartPosition￨b (￨b )￨b ,￨b this￨b .￨b getLength￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e setQualifier￨e (￨e (￨e (￨e Name￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getQualifier￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e result￨e .￨e setName￨e (￨e (￨e (￨e SimpleName￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getName￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e result￨e .￨e parameters￨e (￨e )￨e .￨e addAll￨e (￨e ASTNode￨e .￨e copySubtrees￨e (￨e target￨e ,￨e parameters￨e (￨e )￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f Name￨f getQualifier￨f (￨f )￨f {￨f }￨f public￨f void￨f setQualifier￨f (￨f Name￨p name￨p )￨f {￨f }￨f public￨f SimpleName￨f getName￨f (￨f )￨f {￨f }￨f public￨f void￨f setName￨f (￨f SimpleName￨p name￨p )￨f {￨f }￨f public￨f List￨f parameters￨f (￨f )￨f {￨f }￨f public￨f final￨f IBinding￨f resolveBinding￨f (￨f )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PluginLoader￨d {￨d public￨f PluginLoader￨f (￨f )￨f {￨f }￨f public￨f static￨f Object￨f loadExternalPlugin￨f (￨f String￨f className￨f ,￨f String￨f type￨f ,￨f File￨f file￨f ,￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f log￨e .￨e debug￨e (￨e "loading.."￨e )￨e ;￨e if￨j (￨j (￨c type￨c .￨c equals￨c (￨c "java"￨c )￨c )￨c ||￨c (￨c type￨c .￨c equals￨c (￨c "jar"￨c )￨c )￨c )￨j {￨j String￨e path￨e =￨e file￨e .￨e getPath￨e (￨e )￨e ;￨e URL￨e [￨e ]￨e url￨e =￨e new￨e URL￨e [￨e 1￨e ]￨e ;￨e URL￨e newURL￨e =￨e new￨e File￨e (￨e path￨e )￨e .￨e toURL￨e (￨e )￨e ;￨e url￨e [￨e 0￨e ]￨e =￨e newURL￨e ;￨e log￨e .￨e debug￨e (￨e (￨e "url="￨e +￨e newURL￨e )￨e )￨e ;￨e return￨e new￨e ExternalClassLoader￨e (￨e url￨e )￨e .￨e instanciate￨e (￨e className￨e ,￨e args￨e )￨e ;￨e }￨j InterpreterHandler￨e handler￨e =￨e (￨e (￨e InterpreterHandler￨e )￨e (￨e pluginManager￨e .￨e getHandler￨e (￨e "interpreter"￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b Object￨b instance￨b =￨b handler￨b .￨b getPlugin￨b (￨b type￨b ,￨b "org.columba.core.scripting.PythonInterpreterPlugin"￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j instance￨c !=￨c null￨c )￨j {￨j AbstractInterpreter￨e ip￨e =￨e (￨e (￨e AbstractInterpreter￨e )￨e (￨e instance￨e )￨e )￨e ;￨e String￨e pythonFile￨e =￨e (￨e (￨e file￨e .￨e toString￨e (￨e )￨e )￨e +￨e "/"￨e )￨e +￨e (￨e className￨e .￨e toString￨e (￨e )￨e )￨e ;￨e String￨e pythonClass￨e =￨e className￨e .￨e toString￨e (￨e )￨e .￨e substring￨e (￨e 0￨e ,￨e (￨e (￨e className￨e .￨e toString￨e (￨e )￨e .￨e length￨e (￨e )￨e )￨e -￨e 3￨e )￨e )￨e ;￨e Object￨e i￨e =￨e ip￨e .￨e instanciate￨e (￨e pythonFile￨e ,￨e pythonClass￨e ,￨e args￨e ,￨e "test"￨e )￨e ;￨e return￨e i￨e ;￨e }￨j return￨e null￨e ;￨e }￨f }￨d
public￨d class￨d PromptPasswordState￨d implements￨d State￨d {￨d private￨e final￨e ConsoleWrapper￨e theConsole￨e ;￨e private￨e final￨e StateValues￨e stateValues￨e ;￨e private￨e final￨e boolean￨e rePrompt￨e ;￨e public￨f PromptPasswordState￨f (￨f ConsoleWrapper￨p theConsole￨p ,￨p StateValues￨p stateValues￨p ,￨p boolean￨p rePrompt￨p )￨f {￨f }￨f @￨f Override￨f public￨f State￨f execute￨f (￨f )￨f {￨f if￨j (￨j (￨c stateValues￨c .￨c isSilentOrNonInteractive￨c (￨c )￨c )￨c ==￨c false￨c )￨j {￨j if￨j (￨j (￨c rePrompt￨c )￨c ==￨c false￨c )￨j {￨j RestrictionLevel￨e level￨e =￨e stateValues￨e .￨e getOptions￨e (￨e )￨e .￨e getCheckUtil￨e (￨e )￨e .￨e getRestrictionLevel￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c RELAX￨c .￨c equals￨c (￨c level￨c )￨c )￨c )￨j {￨j final￨e List￨e <￨e PasswordRestriction￨e >￨e passwordRestrictions￨e =￨e stateValues￨e .￨e getOptions￨e (￨e )￨e .￨e getCheckUtil￨e (￨e )￨e .￨e getPasswordRestrictions￨e (￨e )￨e ;￨e if￨j (￨j (￨c passwordRestrictions￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j if￨j (￨j level￨c ==￨c (￨c RestrictionLevel￨c .￨c REJECT￨c )￨c )￨j {￨j theConsole￨e .￨e printf￨e (￨e ROOT_LOGGER￨e .￨e passwordRequirements￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j theConsole￨e .￨e printf￨e (￨e ROOT_LOGGER￨e .￨e passwordRecommendations￨e (￨e )￨e )￨e ;￨e }￨j theConsole￨e .￨e printf￨e (￨e AddUser￨e .￨e NEW_LINE￨e )￨e ;￨e for￨l (￨l PasswordRestriction￨c passwordRestriction￨c :￨c passwordRestrictions￨c )￨l {￨l final￨e String￨e message￨e =￨e passwordRestriction￨e .￨e getRequirementMessage￨e (￨e )￨e ;￨e if￨j (￨j (￨c message￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c message￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨c )￨j {￨j theConsole￨e .￨e printf￨e (￨e "<seq2seq4repair_space>-<seq2seq4repair_space>"￨e )￨e ;￨e theConsole￨e .￨e printf￨e (￨e message￨e )￨e ;￨e theConsole￨e .￨e printf￨e (￨e AddUser￨e .￨e NEW_LINE￨e )￨e ;￨e }￨j }￨l }￨j }￨j theConsole￨e .￨e printf￨e (￨e ROOT_LOGGER￨e .￨e passwordPrompt￨e (￨e )￨e )￨e ;￨e char￨e [￨e ]￨e tempChar￨e =￨e theConsole￨e .￨e readPassword￨e (￨e "<seq2seq4repair_space>:<seq2seq4repair_space>"￨e )￨e ;￨e if￨j (￨j (￨c tempChar￨c ==￨c null￨c )￨c ||￨c (￨c (￨c tempChar￨c .￨c length￨c )￨c ==￨c 0￨c )￨c )￨j {￨j <START_BUG>￨b return￨b new￨b ErrorState￨b (￨b theConsole￨b ,￨b ROOT_LOGGER￨b .￨b noPasswordExiting￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j stateValues￨e .￨e setPassword￨e (￨e new￨e String￨e (￨e tempChar￨e )￨e )￨e ;￨e return￨e new￨e ValidatePasswordState￨e (￨e theConsole￨e ,￨e stateValues￨e )￨e ;￨e }￨j else￨j {￨j theConsole￨e .￨e printf￨e (￨e ROOT_LOGGER￨e .￨e passwordConfirmationPrompt￨e (￨e )￨e )￨e ;￨e char￨e [￨e ]￨e secondTempChar￨e =￨e theConsole￨e .￨e readPassword￨e (￨e "<seq2seq4repair_space>:<seq2seq4repair_space>"￨e )￨e ;￨e if￨j (￨j secondTempChar￨c ==￨c null￨c )￨j {￨j secondTempChar￨e =￨e new￨e char￨e [￨e 0￨e ]￨e ;￨e }￨j if￨j (￨j (￨c Arrays￨c .￨c equals￨c (￨c stateValues￨c .￨c getPassword￨c (￨c )￨c .￨c toCharArray￨c (￨c )￨c ,￨c secondTempChar￨c )￨c )￨c ==￨c false￨c )￨j {￨j return￨e new￨e ErrorState￨e (￨e theConsole￨e ,￨e ROOT_LOGGER￨e .￨e passwordMisMatch￨e (￨e )￨e ,￨e new￨e PromptPasswordState￨e (￨e theConsole￨e ,￨e stateValues￨e ,￨e false￨e )￨e )￨e ;￨e }￨j return￨e stateValues￨e .￨e groupPropertiesFound￨e (￨e )￨e ?￨e new￨e PromptGroupsState￨e (￨e theConsole￨e ,￨e stateValues￨e )￨e :￨e new￨e PreModificationState￨e (￨e theConsole￨e ,￨e stateValues￨e )￨e ;￨e }￨j }￨j return￨e new￨e ValidatePasswordState￨e (￨e theConsole￨e ,￨e stateValues￨e )￨e ;￨e }￨f }￨d
public￨d class￨d Touch￨d extends￨d Task￨d {￨d private￨f interface￨f DateFormatFactory￨f (￨f )￨f {￨f DateFormat￨f getPrimaryFormat￨f (￨f )￨f {￨f }￨f DateFormat￨f getFallbackFormat￨f (￨f )￨f {￨f }￨f }￨f private￨f static￨f final￨f Touch￨f .￨f DateFormatFactory￨f DEFAULT_DF_FACTORY￨f =￨f new￨f Touch￨f .￨f DateFormatFactory￨f (￨f )￨f {￨f public￨f DateFormat￨f getPrimaryFormat￨f (￨f )￨f {￨f }￨f public￨f DateFormat￨f getFallbackFormat￨f (￨f )￨f {￨f }￨f }￨f ;￨e private￨e static￨e final￨e FileUtils￨e FILE_UTILS￨e =￨e FileUtils￨e .￨e getFileUtils￨e (￨e )￨e ;￨e private￨e File￨e file￨e ;￨e private￨e long￨e millis￨e =￨e -￨e 1￨e ;￨e private￨e String￨e dateTime￨e ;￨e private￨e Vector￨e filesets￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e Union￨e resources￨e =￨e new￨e Union￨e (￨e )￨e ;￨e private￨e boolean￨e dateTimeConfigured￨e ;￨e private￨e boolean￨e mkdirs￨e ;￨e private￨e boolean￨e verbose￨e =￨e true￨e ;￨e private￨e FileNameMapper￨e fileNameMapper￨e =￨e null￨e ;￨e private￨e Touch￨e .￨e DateFormatFactory￨e dfFactory￨e =￨e Touch￨e .￨e DEFAULT_DF_FACTORY￨e ;￨e public￨f Touch￨f (￨f )￨f {￨f }￨f public￨f void￨f setFile￨f (￨f File￨p file￨p )￨f {￨f }￨f public￨f void￨f setMillis￨f (￨f long￨p millis￨p )￨f {￨f }￨f public￨f void￨f setDatetime￨f (￨f String￨p dateTime￨p )￨f {￨f }￨f public￨f void￨f setMkdirs￨f (￨f boolean￨p mkdirs￨p )￨f {￨f }￨f public￨f void￨f setVerbose￨f (￨f boolean￨p verbose￨p )￨f {￨f }￨f public￨f void￨f setPattern￨f (￨f final￨p String￨p pattern￨p )￨f {￨f }￨f public￨f void￨f addConfiguredMapper￨f (￨f Mapper￨p mapper￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f FileNameMapper￨f fileNameMapper￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f addFileset￨f (￨f FileSet￨p set￨p )￨f {￨f }￨f public￨f void￨f addFilelist￨f (￨f FileList￨p list￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f ResourceCollection￨p rc￨p )￨f {￨f }￨f protected￨f synchronized￨f void￨f checkConfiguration￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f touch￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f touch￨f (￨f File￨p file￨p )￨f {￨f }￨f private￨f long￨f getTimestamp￨f (￨f )￨f {￨f }￨f private￨f void￨f touch￨f (￨f Resource￨p r￨p ,￨p long￨p defaultTimestamp￨p )￨f {￨f if￨j (￨j (￨c fileNameMapper￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j r￨c instanceof￨c FileResource￨c )￨j {￨j touch￨e (￨e (￨e (￨e FileResource￨e )￨e (￨e r￨e )￨e )￨e .￨e getFile￨e (￨e )￨e ,￨e defaultTimestamp￨e )￨e ;￨e }￨j else￨j {￨j (￨e (￨e org￨e .￨e apache￨e .￨e tools￨e .￨e ant￨e .￨e types￨e .￨e resources￨e .￨e Touchable￨e )￨e (￨e r￨e )￨e )￨e .￨e touch￨e (￨e defaultTimestamp￨e )￨e ;￨e }￨j }￨j else￨j {￨j String￨e [￨e ]￨e mapped￨e =￨e fileNameMapper￨e .￨e mapFileName￨e (￨e r￨e .￨e getName￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c mapped￨c !=￨c null￨c )￨c &&￨c (￨c (￨c mapped￨c .￨c length￨c )￨c >￨c 0￨c )￨c )￨j {￨j long￨e modTime￨e =￨e (￨e r￨e .￨e isExists￨e (￨e )￨e )￨e ?￨e r￨e .￨e getLastModified￨e (￨e )￨e :￨e defaultTimestamp￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c mapped￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b touch￨b (￨b getProject￨b (￨b )￨b .￨b resolveFile￨b (￨b mapped￨b [￨b i￨b ]￨b )￨b ,￨b modTime￨b )￨b ;￨b <END_BUG>￨b }￨l }￨j }￨j }￨f private￨f void￨f touch￨f (￨f File￨p file￨p ,￨p long￨p modTime￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d Server￨d {￨d private￨e final￨e ServerCommunicationHandler￨e communicationHandler￨e ;￨e public￨f Server￨f (￨f ServerCommunicationHandler￨p communicationHandler￨p )￨f {￨f }￨f public￨f void￨f start￨f (￨f Standalone￨f serverConf￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f stop￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f sendCommand￨f (￨f ServerManagerProtocolCommand￨f command￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f sendCommand￨f (￨f ServerManagerProtocolCommand￨f command￨f ,￨f Object￨f o￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f byte￨e [￨e ]￨e cmd￨e =￨e ServerManagerProtocolUtils￨e .￨e createCommandBytes￨e (￨e command￨e ,￨e o￨e )￨e ;￨e <START_BUG>￨b communicationHandler￨b .￨b sendMessage￨b (￨b cmd￨b ,￨b StreamUtils￨b .￨b calculateChecksum￨b (￨b cmd￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d BeanShell￨d extends￨d AbstractFunction￨d implements￨d Serializable￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e static￨e final￨e List￨e desc￨e =￨e new￨e LinkedList￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e KEY￨e =￨e "__BeanShell"￨e ;￨e public￨e static￨e final￨e String￨e INIT_FILE￨e =￨e "beanshell.function.init"￨e ;￨e private￨e transient￨e Object￨e [￨e ]￨e values￨e ;￨e private￨e transient￨e BeanShellInterpreter￨e bshInterpreter￨e =￨e null￨e ;￨e public￨f BeanShell￨f (￨f )￨f {￨f }￨f public￨f Object￨f clone￨f (￨f )￨f throws￨f CloneNotSupportedException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f String￨f execute￨f (￨f SampleResult￨f previousResult￨f ,￨f Sampler￨f currentSampler￨f )￨f throws￨f InvalidVariableException￨f (￨f )￨f {￨f }￨f public￨f void￨f log_info￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f setParameters￨f (￨f Collection￨f parameters￨f )￨f throws￨f InvalidVariableException￨f (￨f )￨f {￨f values￨e =￨e parameters￨e .￨e toArray￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c values￨c .￨c length￨c )￨c <￨c 1￨c )￨c ||￨c (￨c (￨c values￨c .￨c length￨c )￨c >￨c 2￨c )￨c )￨j {￨j throw￨e new￨e InvalidVariableException￨e (￨e (￨e "Expecting<seq2seq4repair_space>1<seq2seq4repair_space>or<seq2seq4repair_space>2<seq2seq4repair_space>parameters,<seq2seq4repair_space>but<seq2seq4repair_space>found<seq2seq4repair_space>"￨e +￨e (￨e values￨e .￨e length￨e )￨e )￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b bshInterpreter￨b =￨b new￨b BeanShellInterpreter￨b (￨b BeanShell￨b .￨b INIT_FILE￨b ,￨b BeanShell￨b .￨b log￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f ClassNotFoundException￨p e￨p )￨f {￨f throw￨e new￨e InvalidVariableException￨e (￨e "BeanShell<seq2seq4repair_space>not<seq2seq4repair_space>found"￨e )￨e ;￨e }￨f }￨f public￨f String￨f getReferenceKey￨f (￨f )￨f {￨f }￨f public￨f List￨f getArgumentDesc￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestPolishAnalyzer￨d extends￨d BaseTokenStreamTestCase￨d {￨d public￨f void￨f testResourcesAvailable￨f (￨f )￨f {￨f }￨f public￨f void￨f testBasics￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testExclude￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomStrings￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b new￨b PolishAnalyzer￨b (￨b TEST_VERSION_CURRENT￨b )￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d SimpleName￨d extends￨d Name￨d {￨d private￨e static￨e final￨e String￨e MISSING_IDENTIFIER￨e =￨e "MISSING"￨e ;￨e private￨e String￨e identifier￨e =￨e SimpleName￨e .￨e MISSING_IDENTIFIER￨e ;￨e SimpleName￨f (￨f AST￨p ast￨p )￨f {￨f }￨f ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f }￨f boolean￨f equalSubtrees￨f (￨f Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f String￨f getIdentifier￨f (￨f )￨f {￨f }￨f public￨f void￨f setIdentifier￨f (￨f String￨p identifier￨p )￨f {￨f if￨j (￨j identifier￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e )￨e ;￨e }￨j <START_BUG>￨b Scanner￨b scanner￨b =￨b this￨b .￨b getAST￨b (￨b )￨b .￨b scanner￨b ;￨b <END_BUG>￨b char￨e [￨e ]￨e source￨e =￨e identifier￨e .￨e toCharArray￨e (￨e )￨e ;￨e scanner￨e .￨e setSourceBuffer￨e (￨e source￨e )￨e ;￨e scanner￨e .￨e resetTo￨e (￨e 0￨e ,￨e source￨e .￨e length￨e )￨e ;￨e try￨f (￨f )￨f {￨f int￨e tokenType￨e =￨e scanner￨e .￨e getNextToken￨e (￨e )￨e ;￨e switch￨s (￨s tokenType￨c )￨s {￨s case￨c Scanner￨c .￨c TokenNameIdentifier￨c :￨c break￨e ;￨e default￨c :￨c throw￨e new￨e IllegalArgumentException￨e (￨e )￨e ;￨e }￨s }￨f catch￨f (￨f InvalidInputException￨p e￨p )￨f {￨f throw￨e new￨e IllegalArgumentException￨e (￨e )￨e ;￨e }￨f modifying￨e (￨e )￨e ;￨e this￨e .￨e identifier￨e =￨e identifier￨e ;￨e }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TableItem￨d extends￨d Item￨d {￨d Table￨e parent￨e ;￨e String￨e [￨e ]￨e strings￨e ;￨e Image￨e [￨e ]￨e images￨e ;￨e boolean￨e checked￨e ;￨e boolean￨e grayed￨e ;￨e boolean￨e cached￨e ;￨e Color￨e foreground￨e ;￨e Color￨e background￨e ;￨e Color￨e [￨e ]￨e cellForeground￨e ;￨e Color￨e [￨e ]￨e cellBackground￨e ;￨e Font￨e font￨e ;￨e Font￨e [￨e ]￨e cellFont￨e ;￨e int￨e width￨e =￨e -￨e 1￨e ;￨e public￨f TableItem￨f (￨f Table￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TableItem￨f (￨f Table￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f TableItem￨f (￨f Table￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p ,￨p boolean￨p create￨p )￨f {￨f }￨f static￨f Table￨f checkNull￨f (￨f Table￨p control￨p )￨f {￨f }￨f int￨f calculateWidth￨f (￨f int￨p index￨p ,￨p GC￨p gc￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f clear￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f Color￨f getBackground￨f (￨f )￨f {￨f }￨f public￨f Color￨f getBackground￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f boolean￨f getChecked￨f (￨f )￨f {￨f }￨f public￨f Font￨f getFont￨f (￨f )￨f {￨f }￨f public￨f Font￨f getFont￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Color￨f getForeground￨f (￨f )￨f {￨f }￨f public￨f Color￨f getForeground￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f boolean￨f getGrayed￨f (￨f )￨f {￨f }￨f public￨f Image￨f getImage￨f (￨f )￨f {￨f }￨f public￨f Image￨f getImage￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getImageBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f getImageIndent￨f (￨f )￨f {￨f }￨f String￨f getNameText￨f (￨f )￨f {￨f }￨f public￨f Table￨f getParent￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f Rectangle￨f getTextBounds￨f (￨f int￨p index￨p )￨f {￨f }￨f void￨f redraw￨f (￨f int￨p propertyID￨p )￨f {￨f if￨j (￨j (￨c parent￨c .￨c currentItem￨c )￨c ==￨c (￨c this￨c )￨c )￨j {￨j return￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b (￨b parent￨b .￨b drawCount￨b )￨b !=￨b 0￨b )￨b &&￨b (￨b propertyID￨b !=￨b (￨b Table￨b .￨b CHECK_COLUMN_ID￨b )￨b )￨b )￨b <END_BUG>￨b return￨e ;￨e int￨e itemIndex￨e =￨e parent￨e .￨e indexOf￨e (￨e this￨e )￨e ;￨e if￨j (￨j itemIndex￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j return￨e ;￨e }￨j int￨f [￨f ]￨f id￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e OS￨e .￨e UpdateDataBrowserItems￨e (￨e parent￨e .￨e handle￨e ,￨e kDataBrowserNoItem￨e ,￨e id￨e .￨e length￨e ,￨e id￨e ,￨e kDataBrowserItemNoProperty￨e ,￨e propertyID￨e )￨e ;￨e if￨j (￨j propertyID￨c ==￨c (￨c Table￨c .￨c CHECK_COLUMN_ID￨c )￨c )￨j {￨j Rect￨e rect￨e =￨e new￨e Rect￨e (￨e )￨e ;￨e if￨j (￨j (￨c OS￨c .￨c GetDataBrowserItemPartBounds￨c (￨c parent￨c .￨c handle￨c ,￨c parent￨c .￨c getId￨c (￨c itemIndex￨c )￨c ,￨c propertyID￨c ,￨c kDataBrowserPropertyEnclosingPart￨c ,￨c rect￨c )￨c )￨c ==￨c (￨c OS￨c .￨c noErr￨c )￨c )￨j {￨j int￨e x￨e =￨e rect￨e .￨e left￨e ;￨e int￨e y￨e =￨e (￨e rect￨e .￨e top￨e )￨e -￨e 1￨e ;￨e int￨e width￨e =￨e (￨e rect￨e .￨e right￨e )￨e -￨e (￨e rect￨e .￨e left￨e )￨e ;￨e int￨e height￨e =￨e 1￨e ;￨e redrawWidget￨e (￨e parent￨e .￨e handle￨e ,￨e x￨e ,￨e y￨e ,￨e width￨e ,￨e height￨e ,￨e false￨e )￨e ;￨e }￨j }￨j }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseParent￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f setBackground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setBackground￨f (￨f int￨p index￨p ,￨p Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setChecked￨f (￨f boolean￨p checked￨p )￨f {￨f }￨f void￨f setChecked￨f (￨f boolean￨p checked￨p ,￨p boolean￨p notify￨p )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f int￨p index￨p ,￨p Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setForeground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setForeground￨f (￨f int￨p index￨p ,￨p Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setGrayed￨f (￨f boolean￨p grayed￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p [￨p ]￨p images￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f int￨p index￨p ,￨p Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setImageIndent￨f (￨f int￨p indent￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p [￨p ]￨p strings￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f int￨p index￨p ,￨p String￨p string￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d class￨d DomainRolloutStepHandler￨d implements￨d OperationStepHandler￨d {￨d private￨e final￨e DomainOperationContext￨e domainOperationContext￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e ProxyController￨e >￨e hostProxies￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e ProxyController￨e >￨e serverProxies￨e ;￨e private￨e final￨e ExecutorService￨e executorService￨e ;￨e private￨e final￨e ModelNode￨e providedRolloutPlan￨e ;￨e private￨e final￨e boolean￨e trace￨e =￨e DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e isTraceEnabled￨e (￨e )￨e ;￨e public￨f DomainRolloutStepHandler￨f (￨f final￨p Map￨p <￨p String￨p ,￨p ProxyController￨p >￨p hostProxies￨p ,￨p final￨p Map￨p <￨p String￨p ,￨p ProxyController￨p >￨p serverProxies￨p ,￨p final￨p DomainOperationContext￨p domainOperationContext￨p ,￨p final￨p ModelNode￨p rolloutPlan￨p ,￨p final￨p ExecutorService￨p executorService￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j context￨c .￨c hasFailureDescription￨c (￨c )￨c )￨j {￨j context￨e .￨e setRollbackOnly￨e (￨e )￨e ;￨e <START_BUG>￨b context￨b .￨b completeStep￨b (￨b )￨b ;￨b <END_BUG>￨b return￨e ;￨e }￨j boolean￨e pushToServers￨e =￨e !￨e (￨e domainOperationContext￨e .￨e hasHostLevelFailures￨e (￨e )￨e )￨e ;￨e if￨j (￨j pushToServers￨c )￨j {￨j ModelNode￨e ourResult￨e =￨e domainOperationContext￨e .￨e getCoordinatorResult￨e (￨e )￨e ;￨e if￨j (￨j ourResult￨c .￨c has￨c (￨c FAILURE_DESCRIPTION￨c )￨c )￨j {￨j if￨j (￨j trace￨c )￨j {￨j DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e tracef￨e (￨e "coordinator<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨e ,￨e ourResult￨e )￨e ;￨e }￨j pushToServers￨e =￨e false￨e ;￨e domainOperationContext￨e .￨e setCompleteRollback￨e (￨e true￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j trace￨c )￨j {￨j DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e tracef￨e (￨e "coordinator<seq2seq4repair_space>succeeded:<seq2seq4repair_space>%s"￨e ,￨e ourResult￨e )￨e ;￨e }￨j for￨l (￨l ModelNode￨c hostResult￨c :￨c domainOperationContext￨c .￨c getHostControllerResults￨c (￨c )￨c .￨c values￨c (￨c )￨c )￨l {￨l if￨j (￨j hostResult￨c .￨c has￨c (￨c FAILURE_DESCRIPTION￨c )￨c )￨j {￨j if￨j (￨j trace￨c )￨j {￨j DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e tracef￨e (￨e "host<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨e ,￨e hostResult￨e )￨e ;￨e }￨j pushToServers￨e =￨e false￨e ;￨e domainOperationContext￨e .￨e setCompleteRollback￨e (￨e true￨e )￨e ;￨e break￨e ;￨e }￨j }￨l }￨j }￨j if￨j (￨j pushToServers￨c )￨j {￨j domainOperationContext￨e .￨e setCompleteRollback￨e (￨e false￨e )￨e ;￨e final￨e Map￨e <￨e ServerIdentity￨e ,￨e ServerTaskExecutor￨e .￨e ExecutedServerRequest￨e >￨e submittedTasks￨e =￨e new￨e HashMap￨e <￨e ServerIdentity￨e ,￨e ServerTaskExecutor￨e .￨e ExecutedServerRequest￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ServerTaskExecutor￨e .￨e ServerPreparedResponse￨e >￨e preparedResults￨e =￨e new￨e ArrayList￨e <￨e ServerTaskExecutor￨e .￨e ServerPreparedResponse￨e >￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f pushToServers￨e (￨e context￨e ,￨e submittedTasks￨e ,￨e preparedResults￨e )￨e ;￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f boolean￨e completeRollback￨e =￨e domainOperationContext￨e .￨e isCompleteRollback￨e (￨e )￨e ;￨e final￨e String￨e localHostName￨e =￨e domainOperationContext￨e .￨e getLocalHostInfo￨e (￨e )￨e .￨e getLocalHostName￨e (￨e )￨e ;￨e for￨l (￨l final￨c ServerTaskExecutor￨c .￨c ServerPreparedResponse￨c preparedResult￨c :￨c preparedResults￨c )￨l {￨l boolean￨e rollback￨e =￨e completeRollback￨e ||￨e (￨e domainOperationContext￨e .￨e isServerGroupRollback￨e (￨e preparedResult￨e .￨e getServerGroupName￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c preparedResult￨c .￨c finalizeTransaction￨c (￨c (￨c !￨c rollback￨c )￨c )￨c )￨c )￨j {￨j final￨e ServerIdentity￨e identity￨e =￨e preparedResult￨e .￨e getServerIdentity￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e ModelNode￨e result￨e =￨e preparedResult￨e .￨e getPreparedOperation￨e (￨e )￨e .￨e getPreparedResult￨e (￨e )￨e ;￨e ProxyController￨e proxy￨e =￨e hostProxies￨e .￨e get￨e (￨e identity￨e .￨e getHostName￨e (￨e )￨e )￨e ;￨e if￨j (￨j proxy￨c ==￨c null￨c )￨j {￨j if￨j (￨j localHostName￨c .￨c equals￨c (￨c identity￨c .￨c getHostName￨c (￨c )￨c )￨c )￨j {￨j proxy￨e =￨e serverProxies￨e .￨e get￨e (￨e identity￨e .￨e getServerName￨e (￨e )￨e )￨e ;￨e if￨j (￨j proxy￨c ==￨c null￨c )￨j {￨j if￨j (￨j trace￨c )￨j {￨j DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e tracef￨e (￨e "No<seq2seq4repair_space>proxy<seq2seq4repair_space>for<seq2seq4repair_space>%s"￨e ,￨e identity￨e )￨e ;￨e }￨j continue￨e ;￨e }￨j }￨j }￨j final￨e Future￨e <￨e ModelNode￨e >￨e future￨e =￨e executorService￨e .￨e submit￨e (￨e new￨e ServerRequireRestartTask￨e (￨e identity￨e ,￨e proxy￨e ,￨e result￨e )￨e )￨e ;￨e submittedTasks￨e .￨e put￨e (￨e identity￨e ,￨e new￨e ServerTaskExecutor￨e .￨e ExecutedServerRequest￨e (￨e identity￨e ,￨e future￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ignore￨p )￨f {￨f }￨f }￨j }￨l boolean￨e interrupted￨e =￨e false￨e ;￨e try￨f (￨f )￨f {￨f for￨l (￨l Map￨c .￨c Entry￨c <￨c ServerIdentity￨c ,￨c ServerTaskExecutor￨c .￨c ExecutedServerRequest￨c >￨c entry￨c :￨c submittedTasks￨c .￨c entrySet￨c (￨c )￨c )￨l {￨l final￨e ServerTaskExecutor￨e .￨e ExecutedServerRequest￨e request￨e =￨e entry￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e Future￨e <￨e ModelNode￨e >￨e future￨e =￨e request￨e .￨e getFinalResult￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e ModelNode￨e finalResult￨e =￨e (￨e future￨e .￨e isCancelled￨e (￨e )￨e )￨e ?￨e getCancelledResult￨e (￨e )￨e :￨e future￨e .￨e get￨e (￨e )￨e ;￨e final￨e ModelNode￨e transformedResult￨e =￨e request￨e .￨e transformResult￨e (￨e finalResult￨e )￨e ;￨e domainOperationContext￨e .￨e addServerResult￨e (￨e entry￨e .￨e getKey￨e (￨e )￨e ,￨e transformedResult￨e )￨e ;￨e }￨f catch￨f (￨f InterruptedException￨p e￨p )￨f {￨f interrupted￨e =￨e true￨e ;￨e DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e interruptedAwaitingFinalResponse￨e (￨e entry￨e .￨e getKey￨e (￨e )￨e .￨e getServerName￨e (￨e )￨e ,￨e entry￨e .￨e getKey￨e (￨e )￨e .￨e getHostName￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f ExecutionException￨p e￨p )￨f {￨f DomainControllerLogger￨e .￨e HOST_CONTROLLER_LOGGER￨e .￨e caughtExceptionAwaitingFinalResponse￨e (￨e e￨e .￨e getCause￨e (￨e )￨e ,￨e entry￨e .￨e getKey￨e (￨e )￨e .￨e getServerName￨e (￨e )￨e ,￨e entry￨e .￨e getKey￨e (￨e )￨e .￨e getHostName￨e (￨e )￨e )￨e ;￨e }￨f }￨l }￨f finally￨f (￨f )￨f {￨f if￨j (￨j interrupted￨c )￨j {￨j Thread￨e .￨e currentThread￨e (￨e )￨e .￨e interrupt￨e (￨e )￨e ;￨e }￨j }￨f }￨f }￨j else￨j {￨j reportHostFailures￨e (￨e context￨e ,￨e operation￨e )￨e ;￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨j }￨f private￨f ModelNode￨f getCancelledResult￨f (￨f )￨f {￨f }￨f private￨f void￨f pushToServers￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f Map￨f <￨f ServerIdentity￨f ,￨f ServerTaskExecutor￨f .￨f ExecutedServerRequest￨f >￨f submittedTasks￨f ,￨f final￨f List￨f <￨f ServerTaskExecutor￨f .￨f ServerPreparedResponse￨f >￨f preparedResults￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f Map￨f <￨f ServerIdentity￨f ,￨f ModelNode￨f >￨f >￨f getOpsByGroup￨f (￨f Map￨p <￨p String￨p ,￨p ModelNode￨p >￨p hostResults￨p )￨f {￨f }￨f private￨f ModelNode￨f translateDomainMappedOperation￨f (￨f final￨p ModelNode￨p domainMappedOperation￨p )￨f {￨f }￨f private￨f ModelNode￨f getRolloutPlan￨f (￨f ModelNode￨f rolloutPlan￨f ,￨f Map￨f <￨f String￨f ,￨f Map￨f <￨f ServerIdentity￨f ,￨f ModelNode￨f >￨f >￨f opsByGroup￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f void￨f validateServerGroupPlan￨f (￨f Set￨f <￨f String￨f >￨f found￨f ,￨f Property￨f prop￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f getDefaultRolloutPlan￨f (￨f Map￨p <￨p String￨p ,￨p Map￨p <￨p ServerIdentity￨p ,￨p ModelNode￨p >￨p >￨p opsByGroup￨p )￨f {￨f }￨f private￨f void￨f reportHostFailures￨f (￨f final￨p OperationContext￨p context￨p ,￨p final￨p ModelNode￨p operation￨p )￨f {￨f }￨f private￨f boolean￨f collectDomainFailure￨f (￨f OperationContext￨p context￨p ,￨p final￨p boolean￨p isDomain￨p )￨f {￨f }￨f private￨f boolean￨f collectHostFailures￨f (￨f final￨p OperationContext￨p context￨p ,￨p final￨p boolean￨p isDomain￨p )￨f {￨f }￨f private￨f boolean￨f isDomainOperation￨f (￨f final￨p ModelNode￨p operation￨p )￨f {￨f }￨f }￨d
public￨d class￨d EditorStack￨d extends￨d PartStack￨d {￨d private￨e EditorSashContainer￨e editorArea￨e ;￨e private￨e WorkbenchPage￨e page￨e ;￨e private￨e SystemMenuSize￨e sizeItem￨e =￨e new￨e SystemMenuSize￨e (￨e null￨e )￨e ;￨e private￨e SystemMenuPinEditor￨e pinEditorItem￨e =￨e new￨e SystemMenuPinEditor￨e (￨e null￨e )￨e ;￨e public￨f EditorStack￨f (￨f EditorSashContainer￨p editorArea￨p ,￨p WorkbenchPage￨p page￨p )￨f {￨f }￨f public￨f void￨f addSystemActions￨f (￨f IMenuManager￨p menuManager￨p )￨f {￨f }￨f public￨f boolean￨f isMoveable￨f (￨f IPresentablePart￨p part￨p )￨f {￨f }￨f public￨f boolean￨f isCloseable￨f (￨f IPresentablePart￨p part￨p )￨f {￨f }￨f public￨f boolean￨f supportsState￨f (￨f int￨p state￨p )￨f {￨f }￨f public￨f static￨f EditorStack￨f newEditorWorkbook￨f (￨f EditorSashContainer￨p editorArea￨p ,￨p WorkbenchPage￨p page￨p )￨f {￨f }￨f protected￨f void￨f add￨f (￨f LayoutPart￨p newChild￨p ,￨p IPresentablePart￨p position￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f LayoutPart￨p child￨p )￨f {￨f }￨f public￨f void￨f createControl￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f updateActions￨f (￨f )￨f {￨f }￨f private￨f void￨f updateContainerVisibleTab￨f (￨f )￨f {￨f }￨f public￨f Control￨f [￨f ]￨f getTabList￨f (￨f )￨f {￨f }￨f public￨f void￨f removeAll￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isActiveWorkbook￨f (￨f )￨f {￨f }￨f public￨f void￨f becomeActiveWorkbook￨f (￨f boolean￨p hasFocus￨p )￨f {￨f }￨f public￨f void￨f tabFocusHide￨f (￨f )￨f {￨f }￨f public￨f void￨f tabFocusShow￨f (￨f boolean￨p hasFocus￨p )￨f {￨f }￨f public￨f EditorPane￨f [￨f ]￨f getEditors￨f (￨f )￨f {￨f }￨f public￨f EditorSashContainer￨f getEditorArea￨f (￨f )￨f {￨f }￨f public￨f EditorPane￨f getVisibleEditor￨f (￨f )￨f {￨f }￨f public￨f void￨f setVisibleEditor￨f (￨f EditorPane￨p editorPane￨p )￨f {￨f }￨f public￨f void￨f showVisibleEditor￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f canMoveFolder￨f (￨f )￨f {￨f }￨f protected￨f void￨f derefPart￨f (￨f LayoutPart￨p toDeref￨p )￨f {￨f <START_BUG>￨b EditorPresentation￨b .￨b derefPart￨b (￨b toDeref￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f boolean￨f allowsDrop￨f (￨f PartPane￨p part￨p )￨f {￨f }￨f public￨f void￨f setActive￨f (￨f boolean￨p activeState￨p )￨f {￨f }￨f public￨f void￨f setFocus￨f (￨f )￨f {￨f }￨f protected￨f void￨f close￨f (￨f IPresentablePart￨p [￨p ]￨p parts￨p )￨f {￨f }￨f }￨d
public￨d class￨d LZMACompressorInputStream￨d extends￨d CompressorInputStream￨d {￨d private￨e final￨e InputStream￨e in￨e ;￨e public￨f LZMACompressorInputStream￨f (￨f InputStream￨f inputStream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f read￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f int￨e ret￨e =￨e in￨e .￨e read￨e (￨e )￨e ;￨e <START_BUG>￨b count￨b (￨b (￨b ret￨b ==￨b (￨b -￨b 1￨b )￨b ?￨b -￨b 1￨b :￨b 1￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e ret￨e ;￨e }￨f @￨f Override￨f public￨f int￨f read￨f (￨f byte￨f [￨f ]￨f buf￨f ,￨f int￨f off￨f ,￨f int￨f len￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f long￨f skip￨f (￨f long￨f n￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f available￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
class￨d ButtonTab￨d extends￨d AlignableTab￨d {￨d Button￨e button1￨e ;￨e Button￨e button2￨e ;￨e Button￨e button3￨e ;￨e Button￨e button4￨e ;￨e Button￨e button5￨e ;￨e Button￨e button6￨e ;￨e Group￨e textButtonGroup￨e ;￨e Group￨e imageButtonGroup￨e ;￨e Button￨e upButton￨e ;￨e Button￨e downButton￨e ;￨e Button￨e pushButton￨e ;￨e Button￨e checkButton￨e ;￨e Button￨e radioButton￨e ;￨e Button￨e toggleButton￨e ;￨e Button￨e arrowButton￨e ;￨e Button￨e flatButton￨e ;￨e ButtonTab￨f (￨f ControlExample￨p instance￨p )￨f {￨f }￨f void￨f createControlGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleWidgets￨f (￨f )￨f {￨f }￨f void￨f createStyleGroup￨f (￨f )￨f {￨f }￨f Control￨f [￨f ]￨f getExampleWidgets￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f getMethodNames￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b String￨b [￨b ]￨b {￨b "Selection"￨b ,￨b "Text"￨b }￨b ;￨b <END_BUG>￨b }￨f String￨f getTabText￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetAlignment￨f (￨f )￨f {￨f }￨f void￨f setExampleWidgetState￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CommandLineTest￨d {￨d private￨e ByteArrayOutputStream￨e results￨e ;￨e private￨e PrintStream￨e oldOut￨e ;￨e private￨e static￨e boolean￨e testWasRun￨e ;￨e @￨f Before￨f public￨f void￨f before￨f (￨f )￨f {￨f }￨f @￨f After￨f public￨f void￨f after￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d Example￨d {￨d @￨f Test￨f public￨f void￨f test￨f (￨f )￨f {￨f }￨f }￨d @￨f Test￨f public￨f void￨f runATest￨f (￨f )￨f {￨f CommandLineTest￨e .￨e testWasRun￨e =￨e false￨e ;￨e <START_BUG>￨b new￨b JUnitCore￨b (￨b )￨b .￨b runMain￨b (￨b new￨b String￨b [￨b ]￨b {￨b "org.junit.tests.CommandLineTest$Example"￨b }￨b )￨b ;￨b <END_BUG>￨b Assert￨e .￨e assertTrue￨e (￨e CommandLineTest￨e .￨e testWasRun￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f runAClass￨f (￨f )￨f {￨f }￨f private￨e static￨e int￨e fCount￨e ;￨e public￨d static￨d class￨d Count￨d {￨d @￨f Test￨f public￨f void￨f increment￨f (￨f )￨f {￨f }￨f }￨d @￨f Test￨f public￨f void￨f runTwoClassesAsArray￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f runTwoClasses￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JPAAnnotationParseProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨d static￨d final￨d DotName￨d PERSISTENCE_CONTEXT_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d PersistenceContext￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d DotName￨d PERSISTENCE_UNIT_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d PersistenceUnit￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d String￨d ENTITY_MANAGER_CLASS￨d =￨d "javax.persistence.EntityManager"￨d ;￨d private￨d static￨d final￨d String￨d ENTITY_MANAGERFACTORY_CLASS￨d =￨d "javax.persistence.EntityManagerFactory"￨d ;￨d @￨d Override￨d public￨d void￨d deploy￨d (￨d DeploymentPhaseContext￨d phaseContext￨d )￨d throws￨d DeploymentUnitProcessingException￨d {￨d }￨d @￨f Override￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f private￨f void￨f processPersistenceAnnotations￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f EEModuleDescription￨f eeModuleDescription￨f ,￨f List￨f <￨f AnnotationInstance￨f >￨f persistenceContexts￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f processField￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f FieldInfo￨f fieldInfo￨f ,￨f final￨f EEModuleClassDescription￨f eeModuleClassDescription￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f processMethod￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f MethodInfo￨f methodInfo￨f ,￨f final￨f EEModuleClassDescription￨f eeModuleClassDescription￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f processClass￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f ClassInfo￨f classInfo￨f ,￨f final￨f EEModuleClassDescription￨f eeModuleClassDescription￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f InjectionSource￨f getBindingSource￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f String￨f injectionTypeName￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f String￨e scopedPuName￨e =￨e getScopedPuName￨e (￨e deploymentUnit￨e ,￨e annotation￨e )￨e ;￨e ServiceName￨e puServiceName￨e =￨e getPuServiceName￨e (￨e scopedPuName￨e )￨e ;￨e if￨j (￨j isPersistenceContext￨c (￨c annotation￨c )￨c )￨j {￨j AnnotationValue￨e pcType￨e =￨e annotation￨e .￨e value￨e (￨e "type"￨e )￨e ;￨e PersistenceContextType￨e type￨e =￨e (￨e (￨e pcType￨e ==￨e null￨e )￨e ||￨e (￨e TRANSACTION￨e .￨e name￨e (￨e )￨e .￨e equals￨e (￨e pcType￨e .￨e asString￨e (￨e )￨e )￨e )￨e )￨e ?￨e PersistenceContextType￨e .￨e TRANSACTION￨e :￨e PersistenceContextType￨e .￨e EXTENDED￨e ;￨e Map￨e properties￨e ;￨e AnnotationValue￨e value￨e =￨e annotation￨e .￨e value￨e (￨e "properties"￨e )￨e ;￨e AnnotationInstance￨e [￨e ]￨e props￨e =￨e (￨e value￨e !=￨e null￨e )￨e ?￨e value￨e .￨e asNestedArray￨e (￨e )￨e :￨e null￨e ;￨e if￨j (￨j props￨c !=￨c null￨c )￨j {￨j properties￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e for￨l (￨l int￨c source￨c =￨c 0￨c ;￨c source￨c <￨c (￨c props￨c .￨c length￨c )￨c ;￨c source￨c ++￨c )￨l {￨l properties￨e .￨e put￨e (￨e props￨e [￨e source￨e ]￨e .￨e value￨e (￨e "name"￨e )￨e ,￨e props￨e [￨e source￨e ]￨e .￨e value￨e (￨e "value"￨e )￨e )￨e ;￨e }￨l }￨j else￨j {￨j properties￨e =￨e null￨e ;￨e }￨j return￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e jpa￨e .￨e injectors￨e .￨e PersistenceContextInjectionSource￨e (￨e type￨e ,￨e properties￨e ,￨e puServiceName￨e ,￨e deploymentUnit￨e ,￨e scopedPuName￨e ,￨e injectionTypeName￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b return￨b new￨b org￨b .￨b jboss￨b .￨b as￨b .￨b jpa￨b .￨b injectors￨b .￨b PersistenceUnitInjectionSource￨b (￨b puServiceName￨b ,￨b deploymentUnit￨b ,￨b scopedPuName￨b ,￨b injectionTypeName￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f private￨f boolean￨f isExtendedPersistenceContext￨f (￨f final￨p AnnotationInstance￨p annotation￨p )￨f {￨f }￨f private￨f boolean￨f isPersistenceContext￨f (￨f final￨p AnnotationInstance￨p annotation￨p )￨f {￨f }￨f private￨f String￨f getClassLevelInjectionType￨f (￨f final￨p AnnotationInstance￨p annotation￨p )￨f {￨f }￨f private￨f String￨f getScopedPuName￨f (￨f final￨f DeploymentUnit￨f deploymentUnit￨f ,￨f final￨f AnnotationInstance￨f annotation￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f ServiceName￨f getPuServiceName￨f (￨f String￨f scopedPuName￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f registerInterceptorsForExtendedPersistenceContext￨f (￨f SessionBeanComponentDescription￨p componentDescription￨p ,￨p AnnotationInstance￨p annotation￨p )￨f {￨f }￨f }￨d
public￨d class￨d ArrayCreation￨d extends￨d Expression￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d TYPE_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d ArrayCreation￨d .￨d class￨d ,￨d "type"￨d ,￨d ArrayType￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildListPropertyDescriptor￨d DIMENSIONS_PROPERTY￨d =￨d new￨d ChildListPropertyDescriptor￨d (￨d ArrayCreation￨d .￨d class￨d ,￨d "dimensions"￨d ,￨d Expression￨d .￨d class￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d INITIALIZER_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d ArrayCreation￨d .￨d class￨d ,￨d "initializer"￨d ,￨d ArrayInitializer￨d .￨d class￨d ,￨d ASTNode￨d .￨d OPTIONAL￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d private￨e ArrayType￨e arrayType￨e =￨e null￨e ;￨e private￨e ASTNode￨e .￨e NodeList￨e dimensions￨e =￨e new￨e ASTNode￨e .￨e NodeList￨e (￨e ArrayCreation￨e .￨e DIMENSIONS_PROPERTY￨e )￨e ;￨e private￨e ArrayInitializer￨e optionalInitializer￨e =￨e null￨e ;￨e ArrayCreation￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f List￨f internalGetChildListProperty￨f (￨f ChildListPropertyDescriptor￨p property￨p )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f ArrayType￨f getType￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c arrayType￨c )￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b synchronized￨b (￨b this￨b .￨b ast￨b )￨b {￨b <END_BUG>￨b if￨j (￨j (￨c this￨c .￨c arrayType￨c )￨c ==￨c null￨c )￨j {￨j preLazyInit￨e (￨e )￨e ;￨e this￨e .￨e arrayType￨e =￨e this￨e .￨e ast￨e .￨e newArrayType￨e (￨e this￨e .￨e ast￨e .￨e newPrimitiveType￨e (￨e PrimitiveType￨e .￨e INT￨e )￨e )￨e ;￨e postLazyInit￨e (￨e this￨e .￨e arrayType￨e ,￨e ArrayCreation￨e .￨e TYPE_PROPERTY￨e )￨e ;￨e }￨j }￨j return￨e this￨e .￨e arrayType￨e ;￨e }￨f public￨f void￨f setType￨f (￨f ArrayType￨p type￨p )￨f {￨f }￨f public￨f List￨f dimensions￨f (￨f )￨f {￨f }￨f public￨f ArrayInitializer￨f getInitializer￨f (￨f )￨f {￨f }￨f public￨f void￨f setInitializer￨f (￨f ArrayInitializer￨p initializer￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractMethodDeclaration￨d extends￨d ASTNode￨d implements￨d ReferenceContext￨d ,￨d ProblemSeverities￨d {￨d public￨e MethodScope￨e scope￨e ;￨e public￨e char￨e [￨e ]￨e selector￨e ;￨e public￨e int￨e declarationSourceStart￨e ;￨e public￨e int￨e declarationSourceEnd￨e ;￨e public￨e int￨e modifiers￨e ;￨e public￨e int￨e modifiersSourceStart￨e ;￨e public￨e Annotation￨e [￨e ]￨e annotations￨e ;￨e public￨e Argument￨e [￨e ]￨e arguments￨e ;￨e public￨e TypeReference￨e [￨e ]￨e thrownExceptions￨e ;￨e public￨e Statement￨e [￨e ]￨e statements￨e ;￨e public￨e int￨e explicitDeclarations￨e ;￨e public￨e MethodBinding￨e binding￨e ;￨e public￨e boolean￨e ignoreFurtherInvestigation￨e =￨e false￨e ;￨e public￨e boolean￨e needFreeReturn￨e =￨e false￨e ;￨e public￨e Javadoc￨e javadoc￨e ;￨e public￨e int￨e bodyStart￨e ;￨e public￨e int￨e bodyEnd￨e =￨e -￨e 1￨e ;￨e public￨e CompilationResult￨e compilationResult￨e ;￨e public￨e boolean￨e errorInSignature￨e =￨e false￨e ;￨e AbstractMethodDeclaration￨f (￨f CompilationResult￨p compilationResult￨p )￨f {￨f }￨f public￨f void￨f abort￨f (￨f int￨p abortLevel￨p ,￨p IProblem￨p problem￨p )￨f {￨f }￨f public￨f abstract￨f void￨f analyseCode￨f (￨f ClassScope￨p classScope￨p ,￨p InitializationFlowContext￨p initializationContext￨p ,￨p FlowInfo￨p info￨p )￨f {￨f }￨f public￨f void￨f bindArguments￨f (￨f )￨f {￨f }￨f public￨f void￨f bindThrownExceptions￨f (￨f )￨f {￨f }￨f public￨f CompilationResult￨f compilationResult￨f (￨f )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f ClassScope￨p classScope￨p ,￨p ClassFile￨p classFile￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f checkArgumentsSize￨f (￨f )￨f {￨f TypeBinding￨e [￨e ]￨e parameters￨e =￨e this￨e .￨e binding￨e .￨e parameters￨e ;￨e int￨e size￨e =￨e 1￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c parameters￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l TypeBinding￨e parameter￨e =￨e parameters￨e [￨e i￨e ]￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b parameter￨b ==￨b (￨b LongBinding￨b )￨b )￨b ||￨b (￨b parameter￨b ==￨b (￨b DoubleBinding￨b )￨b )￨b )￨b {￨b <END_BUG>￨b size￨e +=￨e 2￨e ;￨e else￨j {￨j size￨e ++￨e ;￨e }￨j if￨j (￨j size￨c >￨c 255￨c )￨j {￨j this￨e .￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e noMoreAvailableSpaceForArgument￨e (￨e this￨e .￨e scope￨e .￨e locals￨e [￨e i￨e ]￨e ,￨e this￨e .￨e scope￨e .￨e locals￨e [￨e i￨e ]￨e .￨e declaration￨e )￨e ;￨e }￨j }￨l }￨f public￨f boolean￨f hasErrors￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAbstract￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAnnotationMethod￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isClinit￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isConstructor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDefaultConstructor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInitializationMethod￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMethod￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isNative￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isStatic￨f (￨f )￨f {￨f }￨f public￨f abstract￨f void￨f parseStatements￨f (￨f Parser￨p parser￨p ,￨p CompilationUnitDeclaration￨p unit￨p )￨f {￨f }￨f public￨f StringBuffer￨f print￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f StringBuffer￨f printBody￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f StringBuffer￨f printReturnType￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f ClassScope￨p upperScope￨p )￨f {￨f }￨f public￨f void￨f resolveJavadoc￨f (￨f )￨f {￨f }￨f public￨f void￨f resolveStatements￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsHavingErrors￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p classScope￨p )￨f {￨f }￨f public￨f TypeParameter￨f [￨f ]￨f typeParameters￨f (￨f )￨f {￨f }￨f }￨d
abstract￨d class￨d Const￨d implements￨d Val￨d ,￨d Constant￨d {￨d private￨e ClassMetaData￨e _meta￨e =￨e null￨e ;￨e private￨e Column￨e [￨e ]￨e _cols￨e =￨e null￨e ;￨e public￨f ClassMetaData￨f getMetaData￨f (￨f )￨f {￨f }￨f public￨f void￨f setMetaData￨f (￨f ClassMetaData￨p meta￨p )￨f {￨f }￨f public￨f boolean￨f isVariable￨f (￨f )￨f {￨f }￨f public￨f Column￨f getColumn￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f abstract￨f Object￨f getValue￨f (￨f )￨f {￨f }￨f public￨f Object￨f getValue￨f (￨f Object￨p [￨p ]￨p parameters￨p )￨f {￨f }￨f public￨f Object￨f getSQLValue￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSQLValueNull￨f (￨f )￨f {￨f }￨f public￨f void￨f initialize￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p boolean￨p nullTest￨p )￨f {￨f }￨f public￨f Joins￨f getJoins￨f (￨f )￨f {￨f }￨f public￨f void￨f calculateValue￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p Val￨p other￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f Object￨f toDataStoreValue￨f (￨f Object￨p val￨p ,￨p JDBCStore￨p store￨p )￨f {￨f }￨f public￨f void￨f select￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p pks￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f private￨f SQLBuffer￨f newSQLBuffer￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f selectColumns￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p pks￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f groupBy￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f <START_BUG>￨b sel￨b .￨b groupBy￨b (￨b newSQLBuffer￨b (￨b sel￨b ,￨b store￨b ,￨b params￨b ,￨b fetch￨b )￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f orderBy￨f (￨f Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p boolean￨p asc￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f Object￨f load￨f (￨f Result￨f res￨f ,￨f JDBCStore￨f store￨f ,￨f JDBCFetchConfiguration￨f fetch￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasVariable￨f (￨f Variable￨p var￨p )￨f {￨f }￨f public￨f int￨f length￨f (￨f )￨f {￨f }￨f public￨f void￨f appendIsEmpty￨f (￨f SQLBuffer￨p sql￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f appendIsNotEmpty￨f (￨f SQLBuffer￨p sql￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f appendSize￨f (￨f SQLBuffer￨p sql￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f appendIsNull￨f (￨f SQLBuffer￨p sql￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f public￨f void￨f appendIsNotNull￨f (￨f SQLBuffer￨p sql￨p ,￨p Select￨p sel￨p ,￨p JDBCStore￨p store￨p ,￨p Object￨p [￨p ]￨p params￨p ,￨p JDBCFetchConfiguration￨p fetch￨p )￨f {￨f }￨f }￨d
public￨d class￨d SendAllMessagesCommand￨d extends￨d FolderCommand￨d {￨d protected￨e SendListManager￨e sendListManager￨e =￨e new￨e SendListManager￨e (￨e )￨e ;￨e protected￨e OutboxFolder￨e outboxFolder￨e ;￨e public￨f SendAllMessagesCommand￨f (￨f AbstractFrameController￨p frameController￨p ,￨p DefaultCommandReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f Worker￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f FolderCommandReference￨e [￨e ]￨e r￨e =￨e (￨e (￨e FolderCommandReference￨e [￨e ]￨e )￨e (￨e getReferences￨e (￨e )￨e )￨e )￨e ;￨e worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message"￨e )￨e )￨e ;￨e outboxFolder￨e =￨e (￨e (￨e OutboxFolder￨e )￨e (￨e r￨e [￨e 0￨e ]￨e .￨e getFolder￨e (￨e )￨e )￨e )￨e ;￨e Object￨e [￨e ]￨e uids￨e =￨e outboxFolder￨e .￨e getUids￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c uids￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c outboxFolder￨c .￨c exists￨c (￨c uids￨c [￨c i￨c ]￨c )￨c )￨c ==￨c true￨c )￨j {￨j SendableMessage￨e message￨e =￨e (￨e (￨e SendableMessage￨e )￨e (￨e outboxFolder￨e .￨e getMessage￨e (￨e uids￨e [￨e i￨e ]￨e )￨e )￨e )￨e ;￨e sendListManager￨e .￨e add￨e (￨e message￨e )￨e ;￨e }￨j }￨l int￨e actAccountUid￨e =￨e -￨e 1￨e ;￨e List￨e sentList￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e boolean￨e open￨e =￨e false￨e ;￨e SMTPServer￨e smtpServer￨e =￨e null￨e ;￨e Folder￨e sentFolder￨e =￨e null￨e ;￨e while￨l (￨l sendListManager￨c .￨c hasMoreMessages￨c (￨c )￨c )￨l {￨l SendableMessage￨e message￨e =￨e sendListManager￨e .￨e getNextMessage￨e (￨e )￨e ;￨e if￨j (￨j (￨c message￨c .￨c getAccountUid￨c (￨c )￨c )￨c !=￨c actAccountUid￨c )￨j {￨j actAccountUid￨e =￨e message￨e .￨e getAccountUid￨e (￨e )￨e ;￨e AccountItem￨e accountItem￨e =￨e MailConfig￨e .￨e getAccountList￨e (￨e )￨e .￨e uidGet￨e (￨e actAccountUid￨e )￨e ;￨e sentFolder￨e =￨e (￨e (￨e Folder￨e )￨e (￨e treeModel￨e .￨e getFolder￨e (￨e Integer￨e .￨e parseInt￨e (￨e accountItem￨e .￨e getSpecialFoldersItem￨e (￨e )￨e .￨e get￨e (￨e "sent"￨e )￨e )￨e )￨e )￨e )￨e ;￨e smtpServer￨e =￨e new￨e SMTPServer￨e (￨e accountItem￨e )￨e ;￨e open￨e =￨e smtpServer￨e .￨e openConnection￨e (￨e )￨e ;￨e (￨e (￨e StatusObservableImpl￨e )￨e (￨e smtpServer￨e .￨e getObservable￨e (￨e )￨e )￨e )￨e .￨e setWorker￨e (￨e worker￨e )￨e ;￨e }￨j if￨j (￨j open￨c )￨j {￨j try￨f (￨f )￨f {￨f smtpServer￨e .￨e sendMessage￨e (￨e message￨e ,￨e worker￨e )￨e ;￨e <START_BUG>￨b sentList￨b .￨b add￨b (￨b message￨b .￨b getHeaderInterface￨b (￨b )￨b .￨b get￨b (￨b "columba.uid"￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f SMTPException￨p e￨p )￨f {￨f JOptionPane￨e .￨e showMessageDialog￨e (￨e null￨e ,￨e e￨e .￨e getMessage￨e (￨e )￨e ,￨e "Error<seq2seq4repair_space>while<seq2seq4repair_space>sending"￨e ,￨e JOptionPane￨e .￨e ERROR_MESSAGE￨e )￨e ;￨e }￨f }￨j }￨l worker￨e .￨e clearDisplayTextWithDelay￨e (￨e )￨e ;￨e if￨j (￨j (￨c sentList￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j moveToSentFolder￨e (￨e sentList￨e ,￨e sentFolder￨e )￨e ;￨e sentList￨e .￨e clear￨e (￨e )￨e ;￨e }￨j }￨f protected￨f void￨f moveToSentFolder￨f (￨f List￨p v￨p ,￨p Folder￨p sentFolder￨p )￨f {￨f }￨f }￨d
@￨d SuppressWarnings￨d (￨d "deprecation"￨d )￨d public￨d class￨d LegacyGlobalConfigurationAdapter￨d {￨d public￨f static￨f GlobalConfiguration￨f adapt￨f (￨f GlobalConfiguration￨p config￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f static￨f GlobalConfiguration￨f adapt￨f (￨f org￨p .￨p infinispan￨p .￨p config￨p .￨p GlobalConfiguration￨p legacy￨p )￨f {￨f if￨j (￨j legacy￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j GlobalConfigurationBuilder￨e builder￨e =￨e new￨e GlobalConfigurationBuilder￨e (￨e )￨e ;￨e if￨j (￨j (￨c legacy￨c .￨c getTransportClass￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j builder￨e .￨e transport￨e (￨e )￨e .￨e clusterName￨e (￨e legacy￨e .￨e getClusterName￨e (￨e )￨e )￨e .￨e machineId￨e (￨e legacy￨e .￨e getMachineId￨e (￨e )￨e )￨e .￨e rackId￨e (￨e legacy￨e .￨e getRackId￨e (￨e )￨e )￨e .￨e siteId￨e (￨e legacy￨e .￨e getSiteId￨e (￨e )￨e )￨e .￨e strictPeerToPeer￨e (￨e legacy￨e .￨e isStrictPeerToPeer￨e (￨e )￨e )￨e .￨e distributedSyncTimeout￨e (￨e legacy￨e .￨e getDistributedSyncTimeout￨e (￨e )￨e )￨e .￨e transport￨e (￨e Util￨e .￨e <￨e Transport￨e >￨e getInstance￨e (￨e legacy￨e .￨e getTransportClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e nodeName￨e (￨e legacy￨e .￨e getTransportNodeName￨e (￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getTransportProperties￨e (￨e )￨e )￨e ;￨e }￨j builder￨e .￨e globalJmxStatistics￨e (￨e )￨e .￨e enabled￨e (￨e legacy￨e .￨e isExposeGlobalJmxStatistics￨e (￨e )￨e )￨e .￨e jmxDomain￨e (￨e legacy￨e .￨e getJmxDomain￨e (￨e )￨e )￨e .￨e mBeanServerLookup￨e (￨e legacy￨e .￨e getMBeanServerLookupInstance￨e (￨e )￨e )￨e .￨e allowDuplicateDomains￨e (￨e legacy￨e .￨e isAllowDuplicateDomains￨e (￨e )￨e )￨e .￨e cacheManagerName￨e (￨e legacy￨e .￨e getCacheManagerName￨e (￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getMBeanServerProperties￨e (￨e )￨e )￨e ;￨e builder￨e .￨e serialization￨e (￨e )￨e .￨e marshallerClass￨e (￨e Util￨e .￨e <￨e Marshaller￨e >￨e loadClass￨e (￨e legacy￨e .￨e getMarshallerClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e version￨e (￨e legacy￨e .￨e getMarshallVersion￨e (￨e )￨e )￨e ;￨e for￨l (￨l AdvancedExternalizerConfig￨c externalizerConfig￨c :￨c legacy￨c .￨c getExternalizers￨c (￨c )￨c )￨l {￨l <START_BUG>￨b builder￨b .￨b serialization￨b (￨b )￨b .￨b addAdvancedExternalizer￨b (￨b externalizerConfig￨b .￨b getAdvancedExternalizer￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l builder￨e .￨e asyncTransportExecutor￨e (￨e )￨e .￨e factory￨e (￨e Util￨e .￨e <￨e ExecutorFactory￨e >￨e getInstance￨e (￨e legacy￨e .￨e getAsyncTransportExecutorFactoryClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getAsyncTransportExecutorProperties￨e (￨e )￨e )￨e ;￨e builder￨e .￨e asyncListenerExecutor￨e (￨e )￨e .￨e factory￨e (￨e Util￨e .￨e <￨e ExecutorFactory￨e >￨e getInstance￨e (￨e legacy￨e .￨e getAsyncListenerExecutorFactoryClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getAsyncListenerExecutorProperties￨e (￨e )￨e )￨e ;￨e builder￨e .￨e evictionScheduledExecutor￨e (￨e )￨e .￨e factory￨e (￨e Util￨e .￨e <￨e ScheduledExecutorFactory￨e >￨e getInstance￨e (￨e legacy￨e .￨e getEvictionScheduledExecutorFactoryClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getAsyncListenerExecutorProperties￨e (￨e )￨e )￨e ;￨e builder￨e .￨e replicationQueueScheduledExecutor￨e (￨e )￨e .￨e factory￨e (￨e Util￨e .￨e <￨e ScheduledExecutorFactory￨e >￨e getInstance￨e (￨e legacy￨e .￨e getReplicationQueueScheduledExecutorFactoryClass￨e (￨e )￨e ,￨e legacy￨e .￨e getClassLoader￨e (￨e )￨e )￨e )￨e .￨e withProperties￨e (￨e legacy￨e .￨e getReplicationQueueScheduledExecutorProperties￨e (￨e )￨e )￨e ;￨e builder￨e .￨e shutdown￨e (￨e )￨e .￨e hookBehavior￨e (￨e ShutdownHookBehavior￨e .￨e valueOf￨e (￨e legacy￨e .￨e getShutdownHookBehavior￨e (￨e )￨e .￨e name￨e (￨e )￨e )￨e )￨e ;￨e return￨e builder￨e .￨e build￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d CachingConnectionFactory￨d extends￨d SingleConnectionFactory￨d {￨d private￨e int￨e sessionCacheSize￨e =￨e 1￨e ;￨e private￨e boolean￨e cacheProducers￨e =￨e true￨e ;￨e private￨e boolean￨e cacheConsumers￨e =￨e true￨e ;￨e private￨e volatile￨e boolean￨e active￨e =￨e true￨e ;￨e private￨e final￨e Map￨e <￨e Integer￨e ,￨e LinkedList￨e <￨e Session￨e >￨e >￨e cachedSessions￨e =￨e new￨e HashMap￨e <￨e Integer￨e ,￨e LinkedList￨e <￨e Session￨e >￨e >￨e (￨e )￨e ;￨e public￨f CachingConnectionFactory￨f (￨f )￨f {￨f }￨f public￨f CachingConnectionFactory￨f (￨f ConnectionFactory￨p targetConnectionFactory￨p )￨f {￨f }￨f public￨f void￨f setSessionCacheSize￨f (￨f int￨p sessionCacheSize￨p )￨f {￨f }￨f public￨f int￨f getSessionCacheSize￨f (￨f )￨f {￨f }￨f public￨f void￨f setCacheProducers￨f (￨f boolean￨p cacheProducers￨p )￨f {￨f }￨f public￨f boolean￨f isCacheProducers￨f (￨f )￨f {￨f }￨f public￨f void￨f setCacheConsumers￨f (￨f boolean￨p cacheConsumers￨p )￨f {￨f }￨f public￨f boolean￨f isCacheConsumers￨f (￨f )￨f {￨f }￨f public￨f void￨f resetConnection￨f (￨f )￨f {￨f }￨f protected￨f Session￨f getSession￨f (￨f Connection￨f con￨f ,￨f Integer￨f mode￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f protected￨f Session￨f getCachedSessionProxy￨f (￨f Session￨p target￨p ,￨p LinkedList￨p <￨p Session￨p >￨p sessionList￨p )￨f {￨f }￨f private￨d class￨d CachedSessionInvocationHandler￨d implements￨d InvocationHandler￨d {￨d private￨e final￨e Session￨e target￨e ;￨e private￨e final￨e LinkedList￨e <￨e Session￨e >￨e sessionList￨e ;￨e private￨e final￨e Map￨e <￨e Destination￨e ,￨e MessageProducer￨e >￨e cachedProducers￨e =￨e new￨e HashMap￨e <￨e Destination￨e ,￨e MessageProducer￨e >￨e (￨e )￨e ;￨e private￨e final￨e Map￨e <￨e CachingConnectionFactory￨e .￨e ConsumerCacheKey￨e ,￨e MessageConsumer￨e >￨e cachedConsumers￨e =￨e new￨e HashMap￨e <￨e CachingConnectionFactory￨e .￨e ConsumerCacheKey￨e ,￨e MessageConsumer￨e >￨e (￨e )￨e ;￨e private￨e boolean￨e transactionOpen￨e =￨e false￨e ;￨e public￨f CachedSessionInvocationHandler￨f (￨f Session￨p target￨p ,￨p LinkedList￨p <￨p Session￨p >￨p sessionList￨p )￨f {￨f }￨f public￨f Object￨f invoke￨f (￨f Object￨f proxy￨f ,￨f Method￨f method￨f ,￨f Object￨f [￨f ]￨f args￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f String￨e methodName￨e =￨e method￨e .￨e getName￨e (￨e )￨e ;￨e if￨j (￨j methodName￨c .￨c equals￨c (￨c "equals"￨c )￨c )￨j {￨j <START_BUG>￨b return￨b proxy￨b ==￨b (￨b args￨b [￨b 0￨b ]￨b )￨b ?￨b Boolean￨b .￨b TRUE￨b :￨b Boolean￨b .￨b FALSE￨b ;￨b <END_BUG>￨b }￨j else￨j if￨j (￨j methodName￨c .￨c equals￨c (￨c "hashCode"￨c )￨c )￨j {￨j return￨e System￨e .￨e identityHashCode￨e (￨e proxy￨e )￨e ;￨e }￨j else￨j if￨j (￨j methodName￨c .￨c equals￨c (￨c "toString"￨c )￨c )￨j {￨j return￨e "Cached<seq2seq4repair_space>JMS<seq2seq4repair_space>Session:<seq2seq4repair_space>"￨e +￨e (￨e this￨e .￨e target￨e )￨e ;￨e }￨j else￨j if￨j (￨j methodName￨c .￨c equals￨c (￨c "close"￨c )￨c )￨j {￨j if￨j (￨j active￨c )￨j {￨j synchronized￨f (￨f this￨p .￨p sessionList￨p )￨f {￨f if￨j (￨j (￨c this￨c .￨c sessionList￨c .￨c size￨c (￨c )￨c )￨c <￨c (￨c getSessionCacheSize￨c (￨c )￨c )￨c )￨j {￨j logicalClose￨e (￨e (￨e (￨e Session￨e )￨e (￨e proxy￨e )￨e )￨e )￨e ;￨e return￨e null￨e ;￨e }￨j }￨f }￨j physicalClose￨e (￨e )￨e ;￨e return￨e null￨e ;￨e }￨j else￨j if￨j (￨j methodName￨c .￨c equals￨c (￨c "getTargetSession"￨c )￨c )￨j {￨j return￨e this￨e .￨e target￨e ;￨e }￨j else￨j if￨j (￨j (￨c methodName￨c .￨c equals￨c (￨c "commit"￨c )￨c )￨c ||￨c (￨c methodName￨c .￨c equals￨c (￨c "rollback"￨c )￨c )￨c )￨j {￨j this￨e .￨e transactionOpen￨e =￨e false￨e ;￨e }￨j else￨j {￨j this￨e .￨e transactionOpen￨e =￨e true￨e ;￨e if￨j (￨j (￨c (￨c (￨c methodName￨c .￨c equals￨c (￨c "createProducer"￨c )￨c )￨c ||￨c (￨c methodName￨c .￨c equals￨c (￨c "createSender"￨c )￨c )￨c )￨c ||￨c (￨c methodName￨c .￨c equals￨c (￨c "createPublisher"￨c )￨c )￨c )￨c &&￨c (￨c isCacheProducers￨c (￨c )￨c )￨c )￨j {￨j return￨e getCachedProducer￨e (￨e (￨e (￨e Destination￨e )￨e (￨e args￨e [￨e 0￨e ]￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c (￨c (￨c methodName￨c .￨c equals￨c (￨c "createConsumer"￨c )￨c )￨c ||￨c (￨c methodName￨c .￨c equals￨c (￨c "createReceiver"￨c )￨c )￨c )￨c ||￨c (￨c methodName￨c .￨c equals￨c (￨c "createSubscriber"￨c )￨c )￨c )￨c &&￨c (￨c isCacheConsumers￨c (￨c )￨c )￨c )￨j {￨j return￨e getCachedConsumer￨e (￨e (￨e (￨e Destination￨e )￨e (￨e args￨e [￨e 0￨e ]￨e )￨e )￨e ,￨e (￨e (￨e args￨e .￨e length￨e )￨e >￨e 1￨e ?￨e (￨e (￨e String￨e )￨e (￨e args￨e [￨e 1￨e ]￨e )￨e )￨e :￨e null￨e )￨e ,￨e (￨e (￨e (￨e args￨e .￨e length￨e )￨e >￨e 2￨e )￨e &&￨e (￨e (￨e Boolean￨e )￨e (￨e args￨e [￨e 2￨e ]￨e )￨e )￨e )￨e ,￨e null￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c methodName￨c .￨c equals￨c (￨c "createDurableSubscriber"￨c )￨c )￨c &&￨c (￨c isCacheConsumers￨c (￨c )￨c )￨c )￨j {￨j return￨e getCachedConsumer￨e (￨e (￨e (￨e Destination￨e )￨e (￨e args￨e [￨e 0￨e ]￨e )￨e )￨e ,￨e (￨e (￨e args￨e .￨e length￨e )￨e >￨e 2￨e ?￨e (￨e (￨e String￨e )￨e (￨e args￨e [￨e 2￨e ]￨e )￨e )￨e :￨e null￨e )￨e ,￨e (￨e (￨e (￨e args￨e .￨e length￨e )￨e >￨e 3￨e )￨e &&￨e (￨e (￨e Boolean￨e )￨e (￨e args￨e [￨e 3￨e ]￨e )￨e )￨e )￨e ,￨e (￨e (￨e String￨e )￨e (￨e args￨e [￨e 1￨e ]￨e )￨e )￨e )￨e ;￨e }￨j }￨j try￨f (￨f )￨f {￨f return￨e method￨e .￨e invoke￨e (￨e this￨e .￨e target￨e ,￨e args￨e )￨e ;￨e }￨f catch￨f (￨f InvocationTargetException￨p ex￨p )￨f {￨f throw￨e ex￨e .￨e getTargetException￨e (￨e )￨e ;￨e }￨f }￨f private￨f MessageProducer￨f getCachedProducer￨f (￨f Destination￨f dest￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f private￨f MessageConsumer￨f getCachedConsumer￨f (￨f Destination￨f dest￨f ,￨f String￨f selector￨f ,￨f boolean￨f noLocal￨f ,￨f String￨f subscription￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f private￨f void￨f logicalClose￨f (￨f Session￨f proxy￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f private￨f void￨f physicalClose￨f (￨f )￨f throws￨f JMSException￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d ConsumerCacheKey￨d {￨d private￨e final￨e Destination￨e destination￨e ;￨e private￨e final￨e String￨e selector￨e ;￨e private￨e final￨e boolean￨e noLocal￨e ;￨e private￨e final￨e String￨e subscription￨e ;￨e private￨f ConsumerCacheKey￨f (￨f Destination￨p destination￨p ,￨p String￨p selector￨p ,￨p boolean￨p noLocal￨p ,￨p String￨p subscription￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d EditorManager￨d implements￨d IExtensionChangeHandler￨d {￨d EditorAreaHelper￨e editorPresentation￨e ;￨e WorkbenchWindow￨e window￨e ;￨e WorkbenchPage￨e page￨e ;￨e private￨e Map￨e actionCache￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e static￨e final￨e String￨e PIN_EDITOR_KEY￨e =￨e "PIN_EDITOR"￨e ;￨e private￨e static￨e final￨e String￨e PIN_EDITOR￨e =￨e "ovr16/pinned_ovr.gif"￨e ;￨e private￨e IPropertyChangeListener￨e editorPropChangeListnener￨e =￨e null￨e ;￨e private￨e IHandlerActivation￨e pinEditorHandlerActivation￨e =￨e null￨e ;￨e static￨e final￨e String￨e RESOURCES_TO_SAVE_MESSAGE￨e =￨e WorkbenchMessages￨e .￨e EditorManager_saveResourcesMessage￨e ;￨e static￨e final￨e String￨e SAVE_RESOURCES_TITLE￨e =￨e WorkbenchMessages￨e .￨e EditorManager_saveResourcesTitle￨e ;￨e public￨f EditorManager￨f (￨f WorkbenchWindow￨p window￨p ,￨p WorkbenchPage￨p workbenchPage￨p ,￨p EditorAreaHelper￨p pres￨p )￨f {￨f }￨f void￨f checkDeleteEditorResources￨f (￨f )￨f {￨f }￨f void￨f checkCreateEditorPropListener￨f (￨f )￨f {￨f }￨f void￨f checkCreatePinEditorShortcutKeyHandler￨f (￨f )￨f {￨f }￨f ImageDescriptor￨f getEditorPinImageDesc￨f (￨f )￨f {￨f }￨f private￨f List￨f collectDirtyEditors￨f (￨f )￨f {￨f }￨f public￨f boolean￨f containsEditor￨f (￨f IEditorReference￨p ref￨p )￨f {￨f }￨f private￨f EditorActionBars￨f createEditorActionBars￨f (￨f EditorDescriptor￨p desc￨p ,￨p final￨p IEditorSite￨p site￨p )￨f {￨f }￨f private￨f EditorActionBars￨f createEmptyEditorActionBars￨f (￨f final￨p IEditorSite￨p site￨p )￨f {￨f }￨f void￨f disposeEditorActionBars￨f (￨f EditorActionBars￨p actionBars￨p )￨f {￨f }￨f public￨f IEditorPart￨f findEditor￨f (￨f IEditorInput￨p input￨p )￨f {￨f }￨f public￨f IEditorPart￨f findEditor￨f (￨f String￨p editorId￨p ,￨p IEditorInput￨p input￨p ,￨p int￨p matchFlags￨p )￨f {￨f }￨f public￨f IEditorReference￨f [￨f ]￨f findEditors￨f (￨f IEditorInput￨p input￨p ,￨p String￨p editorId￨p ,￨p int￨p matchFlags￨p )￨f {￨f }￨f private￨f void￨f findEditors￨f (￨f List￨p editorList￨p ,￨p IEditorInput￨p input￨p ,￨p String￨p editorId￨p ,￨p int￨p matchFlags￨p ,￨p List￨p result￨p )￨f {￨f }￨f private￨f Display￨f getDisplay￨f (￨f )￨f {￨f }￨f public￨f int￨f getEditorCount￨f (￨f )￨f {￨f }￨f private￨f IEditorRegistry￨f getEditorRegistry￨f (￨f )￨f {￨f }￨f public￨f IEditorPart￨f [￨f ]￨f getDirtyEditors￨f (￨f )￨f {￨f }￨f public￨f IEditorReference￨f [￨f ]￨f getEditors￨f (￨f )￨f {￨f }￨f public￨f IEditorPart￨f getVisibleEditor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSaveAllNeeded￨f (￨f )￨f {￨f }￨f private￨f IEditorReference￨f findReusableEditor￨f (￨f EditorDescriptor￨p desc￨p )￨f {￨f }￨f public￨f IEditorReference￨f openEditor￨f (￨f String￨f editorId￨f ,￨f IEditorInput￨f input￨f ,￨f boolean￨f setVisible￨f ,￨f IMemento￨f editorState￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f public￨f IEditorReference￨f openEditorFromDescriptor￨f (￨f EditorDescriptor￨f desc￨f ,￨f IEditorInput￨f input￨f ,￨f IMemento￨f editorState￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f private￨f IEditorReference￨f openExternalEditor￨f (￨f final￨f EditorDescriptor￨f desc￨f ,￨f IEditorInput￨f input￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f IEditorReference￨f [￨f ]￨f openMultiEditor￨f (￨f final￨f IEditorReference￨f ref￨f ,￨f final￨f AbstractMultiEditor￨f part￨f ,￨f final￨f MultiEditorInput￨f input￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f private￨f void￨f createEditorTab￨f (￨f final￨f EditorReference￨f ref￨f ,￨f final￨f String￨f workbookId￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f <START_BUG>￨b editorPresentation￨b .￨b addEditor￨b (￨b ref￨b ,￨b workbookId￨b )￨b ;￨b <END_BUG>￨b }￨f EditorSite￨f createSite￨f (￨f final￨f IEditorReference￨f ref￨f ,￨f final￨f IEditorPart￨f part￨f ,￨f final￨f EditorDescriptor￨f desc￨f ,￨f final￨f IEditorInput￨f input￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f private￨f IEditorReference￨f reuseInternalEditor￨f (￨f EditorDescriptor￨f desc￨f ,￨f IEditorInput￨f input￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f IEditorPart￨f createPart￨f (￨f final￨f EditorDescriptor￨f desc￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f private￨f IEditorReference￨f openSystemExternalEditor￨f (￨f final￨f IPath￨f location￨f )￨f throws￨f PartInitException￨f (￨f )￨f {￨f }￨f ImageDescriptor￨f findImage￨f (￨f EditorDescriptor￨p desc￨p ,￨p IPath￨p path￨p )￨f {￨f }￨f public￨f IStatus￨f restoreState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f public￨f boolean￨f saveAll￨f (￨f boolean￨p confirm￨p ,￨p boolean￨p closing￨p ,￨p boolean￨p addNonPartSources￨p )￨f {￨f }￨f public￨f static￨f boolean￨f saveAll￨f (￨f List￨p dirtyParts￨p ,￨p boolean￨p confirm￨p ,￨p boolean￨p closing￨p ,￨p boolean￨p addNonPartSources￨p ,￨p final￨p IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f static￨f boolean￨f saveAll￨f (￨f List￨p dirtyParts￨p ,￨p final￨p boolean￨p confirm￨p ,￨p final￨p boolean￨p closing￨p ,￨p boolean￨p addNonPartSources￨p ,￨p final￨p IRunnableContext￨p runnableContext￨p ,￨p final￨p IShellProvider￨p shellProvider￨p )￨f {￨f }￨f private￨f static￨f List￨f convertToSaveables￨f (￨f List￨p parts￨p ,￨p boolean￨p closing￨p ,￨p boolean￨p addNonPartSources￨p )￨f {￨f }￨f private￨f static￨f Saveable￨f [￨f ]￨f getSaveables￨f (￨f IWorkbenchPart￨p part￨p )￨f {￨f }￨f private￨f static￨f boolean￨f closingLastPartShowingModel￨f (￨f Saveable￨p model￨p ,￨p List￨p closingParts￨p ,￨p IWorkbenchPage￨p page￨p )￨f {￨f }￨f public￨f boolean￨f savePart￨f (￨f final￨p ISaveablePart￨p saveable￨p ,￨p IWorkbenchPart￨p part￨p ,￨p boolean￨p confirm￨p )￨f {￨f }￨f public￨f IStatus￨f saveState￨f (￨f final￨p IMemento￨p memento￨p )￨f {￨f }￨f public￨f boolean￨f setVisibleEditor￨f (￨f IEditorReference￨p newEd￨p ,￨p boolean￨p setFocus￨p )￨f {￨f }￨f private￨f IPathEditorInput￨f getPathEditorInput￨f (￨f IEditorInput￨p input￨p )￨f {￨f }￨f private￨d class￨d InnerEditor￨d extends￨d EditorReference￨d {￨d private￨e IEditorReference￨e outerEditor￨e ;￨e private￨e AbstractMultiEditor￨e outerEditorPart￨e ;￨e public￨f InnerEditor￨f (￨f IEditorReference￨p outerEditor￨p ,￨p AbstractMultiEditor￨p outerEditorPart￨p ,￨p IEditorInput￨p input￨p ,￨p EditorDescriptor￨p desc￨p )￨f {￨f }￨f protected￨f void￨f doDisposePart￨f (￨f )￨f {￨f }￨f protected￨f PartPane￨f createPane￨f (￨f )￨f {￨f }￨f protected￨f Composite￨f getPaneControlContainer￨f (￨f )￨f {￨f }￨f }￨d public￨f void￨f restoreEditorState￨f (￨f IMemento￨p editorMem￨p ,￨p ArrayList￨p visibleEditors￨p ,￨p IEditorReference￨p [￨p ]￨p activeEditor￨p ,￨p MultiStatus￨p result￨p )￨f {￨f }￨f protected￨f void￨f saveEditorState￨f (￨f IMemento￨p mem￨p ,￨p IEditorReference￨p ed￨p ,￨p MultiStatus￨p res￨p )￨f {￨f }￨f public￨f IMemento￨f getMemento￨f (￨f IEditorReference￨p e￨p )￨f {￨f }￨f public￨f void￨f removeExtension￨f (￨f IExtension￨p source￨p ,￨p Object￨p [￨p ]￨p objects￨p )￨f {￨f }￨f public￨f void￨f addExtension￨f (￨f IExtensionTracker￨p tracker￨p ,￨p IExtension￨p extension￨p )￨f {￨f }￨f IEditorReference￨f openEmptyTab￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f useIPersistableEditor￨f (￨f )￨f {￨f }￨f }￨d
public￨d ;￨d private￨d static￨d final￨d AtomicInteger￨d archiveCount￨d =￨d new￨d AtomicInteger￨d (￨d )￨d ;￨d private￨d final￨d ServiceContainer￨d serviceContainer￨d ;￨d private￨d OSGiSubsystemState￨d subsystemState￨d ;￨d private￨d DeploymentChain￨d deploymentChain￨d ;￨d private￨d Selector￨d selector￨d ;￨d public￨d OSGiSubsystemSupport￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d public￨f OSGiSubsystemSupport￨f (￨f final￨f OSGiSubsystemState￨f subsystemState￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f ServiceContainer￨f getServiceContainer￨f (￨f )￨f {￨f }￨f public￨f ModuleLoader￨f getClassifyingModuleLoader￨f (￨f )￨f {￨f }￨f public￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getTestModuleLoader￨f (￨f )￨f {￨f }￨f public￨f DeploymentChain￨f getDeploymentChain￨f (￨f )￨f {￨f }￨f public￨f String￨f getUniqueName￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f assertServiceUp￨f (￨f ServiceName￨p serviceName￨p )￨f {￨f }￨f public￨f void￨f assertServiceDown￨f (￨f ServiceName￨p serviceName￨p )￨f {￨f }￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f public￨f void￨f removeDeploymentChain￨f (￨f )￨f {￨f }￨f public￨f void￨f setupServices￨f (￨f final￨f BatchBuilder￨f batchBuilder￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f setupEnvironmentServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupModuleLoaderServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupDeploymentServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f void￨f setupFrameworkServices￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f batchBuilder￨e .￨e addService￨e (￨e SERVICE_NAME￨e ,￨e new￨e MBeanServerService￨e (￨e )￨e )￨e ;￨e OSGiSubsystemSupport￨e .￨e TestBundleManagerService￨e .￨e addService￨e (￨e batchBuilder￨e )￨e ;￨e <START_BUG>￨b FrameworkService￨b .￨b addService￨b (￨b batchBuilder￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b PackageAdminService￨e .￨e addService￨e (￨e batchBuilder￨e )￨e ;￨e }￨f private￨f Selector￨f getDeploymentChainSelector￨f (￨f )￨f {￨f }￨f public￨f BundleManager￨f getBundleManager￨f (￨f )￨f {￨f }￨f public￨f BundleContext￨f getSystemContext￨f (￨f )￨f {￨f }￨f public￨f Configuration￨f getSubsystemConfig￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f ,￨f ModuleIdentifier￨f exporterId￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f assertLoadClassFails￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Class￨f <￨f ?￨f >￨f loadClass￨f (￨f ModuleIdentifier￨f identifier￨f ,￨f String￨f className￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Module￨f loadModule￨f (￨f ModuleIdentifier￨f identifier￨f )￨f throws￨f ModuleLoadException￨f (￨f )￨f {￨f }￨f public￨f Bundle￨f executeDeploy￨f (￨f final￨f JavaArchive￨f archive￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f executeUndeploy￨f (￨f final￨f JavaArchive￨f archive￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f List￨f <￨f ServiceName￨f >￨f runWithLatchedBatch￨f (￨f final￨f OSGiSubsystemSupport￨f .￨f BatchedWork￨f work￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f interface￨f BatchedWork￨f (￨f )￨f {￨f void￨f execute￨f (￨f final￨f BatchBuilder￨f batchBuilder￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨f private￨d static￨d class￨d TestServiceListener￨d extends￨d AbstractServiceListener￨d <￨d Object￨d >￨d {￨d final￨e List￨e <￨e ServiceName￨e >￨e registeredServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ServiceName￨e >￨e startedServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ServiceName￨e >￨e failedServices￨e =￨e new￨e ArrayList￨e <￨e ServiceName￨e >￨e (￨e )￨e ;￨e final￨e Map￨e <￨e Mode￨e ,￨e List￨e <￨e ServiceName￨e >￨e >￨e initialModes￨e ;￨e private￨e final￨e AtomicInteger￨e count￨e =￨e new￨e AtomicInteger￨e (￨e 1￨e )￨e ;￨e private￨e final￨e Runnable￨e finishTask￨e ;￨e public￨f TestServiceListener￨f (￨f Runnable￨p finishTask￨p ,￨p Map￨p <￨p Mode￨p ,￨p List￨p <￨p ServiceName￨p >￨p >￨p initialModes￨p )￨f {￨f }￨f public￨f void￨f listenerAdded￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f serviceStarted￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f serviceFailed￨f (￨f ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p ,￨p StartException￨p reason￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f serviceRemoved￨f (￨f ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f }￨f public￨f void￨f finishBatch￨f (￨f )￨f {￨f }￨f private￨f void￨f batchComplete￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d TestModuleLoader￨d extends￨d ModuleLoader￨d implements￨d Service￨d <￨d OSGiSubsystemSupport￨d .￨d TestModuleLoader￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "module"￨e ,￨e "loader"￨e ,￨e "support"￨e )￨e ;￨e private￨e String￨e prefix￨e ;￨e private￨e Map￨e <￨e ModuleIdentifier￨e ,￨e ModuleSpec￨e >￨e modules￨e =￨e new￨e HashMap￨e <￨e ModuleIdentifier￨e ,￨e ModuleSpec￨e >￨e (￨e )￨e ;￨e private￨e Injector￨e <￨e ClassifyingModuleLoaderService￨e >￨e injector￨e ;￨e TestModuleLoader￨f (￨f String￨p prefix￨p )￨f {￨f }￨f public￨f void￨f addModuleSpec￨f (￨f ModuleSpec￨p moduleSpec￨p )￨f {￨f }￨f @￨f Override￨f protected￨f ModuleSpec￨f findModule￨f (￨f ModuleIdentifier￨f identifier￨f )￨f throws￨f ModuleLoadException￨f (￨f )￨f {￨f }￨f public￨f static￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f public￨f synchronized￨f OSGiSubsystemSupport￨f .￨f TestModuleLoader￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d TestBundleManagerService￨d implements￨d Service￨d <￨d BundleManager￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e SERVICE_NAME￨e =￨e BundleManagerService￨e .￨e SERVICE_NAME￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.osgi"￨e )￨e ;￨e private￨e InjectedValue￨e <￨e Configuration￨e >￨e injectedConfig￨e =￨e new￨e InjectedValue￨e <￨e Configuration￨e >￨e (￨e )￨e ;￨e private￨e InjectedValue￨e <￨e ClassifyingModuleLoaderService￨e >￨e injectedModuleLoader￨e =￨e new￨e InjectedValue￨e <￨e ClassifyingModuleLoaderService￨e >￨e (￨e )￨e ;￨e private￨e Injector￨e <￨e ClassifyingModuleLoaderService￨e >￨e moduleLoaderInjector￨e ;￨e private￨e BundleManager￨e bundleManager￨e ;￨e public￨f static￨f void￨f addService￨f (￨f final￨p BatchBuilder￨p batchBuilder￨p )￨f {￨f }￨f public￨f static￨f BundleManager￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f BundleManager￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d TestServerDeploymentRepository￨d implements￨d ServerDeploymentRepository￨d ,￨d Service￨d <￨d ServerDeploymentRepository￨d >￨d {￨d private￨e Map￨e <￨e String￨e ,￨e JavaArchive￨e >￨e repository￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e JavaArchive￨e >￨e (￨e )￨e ;￨e public￨f static￨f OSGiSubsystemSupport￨f .￨f TestServerDeploymentRepository￨f getServiceValue￨f (￨f ServiceContainer￨p container￨p )￨f {￨f }￨f public￨f void￨f registerDeploymentArchive￨f (￨f String￨p name￨p ,￨p JavaArchive￨p archive￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f start￨f (￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f stop￨f (￨f StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServerDeploymentRepository￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f byte￨f [￨f ]￨f addDeploymentContent￨f (￨f String￨f name￨f ,￨f String￨f runtimeName￨f ,￨f InputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Closeable￨f mountDeploymentContent￨f (￨f String￨f name￨f ,￨f String￨f runtimeName￨f ,￨f byte￨f [￨f ]￨f deploymentHash￨f ,￨f VirtualFile￨f mountPoint￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d Version￨d {￨d private￨f Version￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f id￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "4.5"￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f }￨d
public￨d class￨d ClassicalRungeKuttaIntegratorTest￨d {￨d @￨f Test￨f public￨f void￨f testMissedEndEvent￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSanityChecks￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDecreasingSteps￨f (￨f )￨f {￨f TestProblemAbstract￨e [￨e ]￨e problems￨e =￨e TestProblemFactory￨e .￨e getProblems￨e (￨e )￨e ;￨e for￨l (￨l int￨c k￨c =￨c 0￨c ;￨c k￨c <￨c (￨c problems￨c .￨c length￨c )￨c ;￨c ++￨c k￨c )￨l {￨l double￨e previousValueError￨e =￨e Double￨e .￨e NaN￨e ;￨e double￨e previousTimeError￨e =￨e Double￨e .￨e NaN￨e ;￨e for￨l (￨l int￨c i￨c =￨c 4￨c ;￨c i￨c <￨c 10￨c ;￨c ++￨c i￨c )￨l {￨l TestProblemAbstract￨e pb￨e =￨e problems￨e [￨e k￨e ]￨e .￨e copy￨e (￨e )￨e ;￨e double￨e step￨e =￨e (￨e (￨e pb￨e .￨e getFinalTime￨e (￨e )￨e )￨e -￨e (￨e pb￨e .￨e getInitialTime￨e (￨e )￨e )￨e )￨e *￨e (￨e FastMath￨e .￨e pow￨e (￨e 2.0￨e ,￨e (￨e -￨e i￨e )￨e )￨e )￨e ;￨e FirstOrderIntegrator￨e integ￨e =￨e new￨e ClassicalRungeKuttaIntegrator￨e (￨e step￨e )￨e ;￨e TestProblemHandler￨e handler￨e =￨e new￨e TestProblemHandler￨e (￨e pb￨e ,￨e integ￨e )￨e ;￨e integ￨e .￨e addStepHandler￨e (￨e handler￨e )￨e ;￨e EventHandler￨e [￨e ]￨e functions￨e =￨e pb￨e .￨e getEventsHandlers￨e (￨e )￨e ;￨e for￨l (￨l int￨c l￨c =￨c 0￨c ;￨c l￨c <￨c (￨c functions￨c .￨c length￨c )￨c ;￨c ++￨c l￨c )￨l {￨l integ￨e .￨e addEventHandler￨e (￨e functions￨e [￨e l￨e ]￨e ,￨e Double￨e .￨e POSITIVE_INFINITY￨e ,￨e (￨e 1.0E-6￨e *￨e step￨e )￨e ,￨e 1000￨e )￨e ;￨e }￨l Assert￨e .￨e assertEquals￨e (￨e functions￨e .￨e length￨e ,￨e integ￨e .￨e getEventHandlers￨e (￨e )￨e .￨e size￨e (￨e )￨e )￨e ;￨e double￨e stopTime￨e =￨e integ￨e .￨e integrate￨e (￨e pb￨e ,￨e pb￨e .￨e getInitialTime￨e (￨e )￨e ,￨e pb￨e .￨e getInitialState￨e (￨e )￨e ,￨e pb￨e .￨e getFinalTime￨e (￨e )￨e ,￨e new￨e double￨e [￨e pb￨e .￨e getDimension￨e (￨e )￨e ]￨e )￨e ;￨e if￨j (￨j (￨c functions￨c .￨c length￨c )￨c ==￨c 0￨c )￨j {￨j Assert￨e .￨e assertEquals￨e (￨e pb￨e .￨e getFinalTime￨e (￨e )￨e ,￨e stopTime￨e ,￨e 1.0E-10￨e )￨e ;￨e }￨j double￨e error￨e =￨e handler￨e .￨e getMaximalValueError￨e (￨e )￨e ;￨e if￨j (￨j i￨c >￨c 4￨c )￨j {￨j <START_BUG>￨b Assert￨b .￨b assertTrue￨b (￨b (￨b error￨b <￨b (￨b FastMath￨b .￨b abs￨b (￨b previousValueError￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j previousValueError￨e =￨e error￨e ;￨e double￨e timeError￨e =￨e handler￨e .￨e getMaximalTimeError￨e (￨e )￨e ;￨e if￨j (￨j i￨c >￨c 4￨c )￨j {￨j Assert￨e .￨e assertTrue￨e (￨e (￨e timeError￨e <=￨e (￨e FastMath￨e .￨e abs￨e (￨e previousTimeError￨e )￨e )￨e )￨e )￨e ;￨e }￨j previousTimeError￨e =￨e timeError￨e ;￨e integ￨e .￨e clearEventHandlers￨e (￨e )￨e ;￨e Assert￨e .￨e assertEquals￨e (￨e 0￨e ,￨e integ￨e .￨e getEventHandlers￨e (￨e )￨e .￨e size￨e (￨e )￨e )￨e ;￨e }￨l }￨l }￨f @￨f Test￨f public￨f void￨f testSmallStep￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testBigStep￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testBackward￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testKepler￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d KeplerHandler￨d implements￨d StepHandler￨d {￨d public￨f KeplerHandler￨f (￨f TestProblem3￨p pb￨p )￨f {￨f }￨f public￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f void￨f handleStep￨f (￨f StepInterpolator￨p interpolator￨p ,￨p boolean￨p isLast￨p )￨f {￨f }￨f private￨e double￨e maxError￨e =￨e 0￨e ;￨e private￨e TestProblem3￨e pb￨e ;￨e }￨d @￨f Test￨f public￨f void￨f testStepSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ReferencesSearchGroup￨d extends￨d ActionGroup￨d {￨d private￨e final￨e IWorkbenchSite￨e site￨e ;￨e private￨e IActionBars￨e actionBars￨e ;￨e private￨e final￨e String￨e groupId￨e ;￨e private￨e SelectionDispatchAction￨e findReferencesAction￨e ;￨e public￨f ReferencesSearchGroup￨f (￨f final￨p IWorkbenchSite￨p site￨p )￨f {￨f }￨f protected￨f ReferencesSearchGroup￨f (￨f final￨p AbstractXtendXpandEditor￨p editor￨p )￨f {￨f }￨f private￨f void￨f registerAction￨f (￨f final￨p SelectionDispatchAction￨p action￨p ,￨p final￨p ISelectionProvider￨p provider￨p ,￨p final￨p ISelection￨p selection￨p )￨f {￨f }￨f private￨f void￨f addAction￨f (￨f final￨p IAction￨p action￨p ,￨p final￨p IMenuManager￨p manager￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f fillActionBars￨f (￨f final￨p IActionBars￨p actionBars￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f fillContextMenu￨f (￨f final￨p IMenuManager￨p manager￨p )￨f {￨f <START_BUG>￨b final￨b IMenuManager￨b menuManager￨b =￨b new￨b org￨b .￨b eclipse￨b .￨b jface￨b .￨b action￨b .￨b MenuManager￨b (￨b "Re&ferences"￨b ,￨b IContextMenuConstants￨b .￨b GROUP_SEARCH￨b )￨b ;￨b <END_BUG>￨b addAction￨e (￨e findReferencesAction￨e ,￨e menuManager￨e )￨e ;￨e menuManager￨e .￨e add￨e (￨e new￨e Separator￨e (￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c menuManager￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j manager￨e .￨e appendToGroup￨e (￨e groupId￨e ,￨e menuManager￨e )￨e ;￨e }￨j }￨f @￨f Override￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f private￨f void￨f updateGlobalActionHandlers￨f (￨f )￨f {￨f }￨f private￨f void￨f disposeAction￨f (￨f final￨p ISelectionChangedListener￨p action￨p ,￨p final￨p ISelectionProvider￨p provider￨p )￨f {￨f }￨f }￨d
class￨d StyledTextTab￨d extends￨d ScrollableTab￨d {￨d StyledText￨e styledText￨e ;￨e Group￨e styledTextGroup￨e ;￨e Group￨e styledTextStyleGroup￨e ;￨e Button￨e wrapButton￨e ;￨e Button￨e readOnlyButton￨e ;￨e Button￨e fullSelectionButton￨e ;￨e Button￨e boldButton￨e ;￨e Button￨e italicButton￨e ;￨e Button￨e redButton￨e ;￨e Button￨e yellowButton￨e ;￨e Button￨e underlineButton￨e ;￨e Button￨e strikeoutButton￨e ;￨e Image￨e boldImage￨e ;￨e Image￨e italicImage￨e ;￨e Image￨e redImage￨e ;￨e Image￨e yellowImage￨e ;￨e Image￨e underlineImage￨e ;￨e Image￨e strikeoutImage￨e ;￨e String￨e text￨e ;￨e StyleRange￨e [￨e ]￨e styleRanges￨e ;￨e StyledTextTab￨f (￨f ControlExample￨p instance￨p )￨f {￨f }￨f Image￨f createBitmapImage￨f (￨f Display￨p display￨p ,￨p String￨p name￨p )￨f {￨f }￨f void￨f createControlWidgets￨f (￨f )￨f {￨f }￨f void￨f createExampleGroup￨f (￨f )￨f {￨f }￨f void￨f createExampleWidgets￨f (￨f )￨f {￨f }￨f void￨f createStyleGroup￨f (￨f )￨f {￨f }￨f void￨f createStyledTextStyleGroup￨f (￨f )￨f {￨f }￨f Composite￨f createTabFolderPage￨f (￨f TabFolder￨p tabFolder￨p )￨f {￨f }￨f void￨f disposeExampleWidgets￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f getCustomEventNames￨f (￨f )￨f {￨f }￨f Widget￨f [￨f ]￨f getExampleWidgets￨f (￨f )￨f {￨f }￨f String￨f [￨f ]￨f getMethodNames￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b String￨b [￨b ]￨b {￨b "CaretOffset"￨b ,￨b "DoubleClickEnabled"￨b ,￨b "Editable"￨b ,￨b "HorizontalIndex"￨b ,￨b "HorizontalPixel"￨b ,￨b "Orientation"￨b ,￨b "Selection"￨b ,￨b "Tabs"￨b ,￨b "Text"￨b ,￨b "TextLimit"￨b ,￨b "ToolTipText"￨b ,￨b "TopIndex"￨b ,￨b "TopPixel"￨b ,￨b "WordWrap"￨b }￨b ;￨b <END_BUG>￨b }￨f String￨f getTabText￨f (￨f )￨f {￨f }￨f void￨f hookCustomListener￨f (￨f final￨p String￨p eventName￨p )￨f {￨f }￨f void￨f setExampleWidgetState￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d CreateTypeMemberOperation￨d extends￨d CreateElementInCUOperation￨d {￨d protected￨e String￨e source￨e =￨e null￨e ;￨e protected￨e String￨e alteredName￨e ;￨e protected￨e ASTNode￨e createdNode￨e ;￨e public￨f CreateTypeMemberOperation￨f (￨f IJavaElement￨p parentElement￨p ,￨p String￨p source￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f protected￨f StructuralPropertyDescriptor￨f getChildPropertyDescriptor￨f (￨f ASTNode￨p parent￨p )￨f {￨f }￨f protected￨f ASTNode￨f generateElementAST￨f (￨f ASTRewrite￨f rewriter￨f ,￨f ICompilationUnit￨f cu￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f private￨f String￨f removeIndentAndNewLines￨f (￨f String￨f code￨f ,￨f ICompilationUnit￨f cu￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f SimpleName￨f rename￨f (￨f ASTNode￨p node￨p ,￨p SimpleName￨p newName￨p )￨f {￨f }￨f protected￨f String￨f generateSyntaxIncorrectAST￨f (￨f )￨f {￨f }￨f protected￨f IType￨f getType￨f (￨f )￨f {￨f }￨f protected￨f void￨f setAlteredName￨f (￨f String￨p newName￨p )￨f {￨f }￨f public￨f IJavaModelStatus￨f verify￨f (￨f )￨f {￨f IJavaModelStatus￨e status￨e =￨e super￨e .￨e verify￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c status￨c .￨c isOK￨c (￨c )￨c )￨c )￨j {￨j return￨e status￨e ;￨e }￨j if￨j (￨j (￨c this￨c .￨c source￨c )￨c ==￨c null￨c )￨j {￨j return￨e new￨e JavaModelStatus￨e (￨e IJavaModelStatusConstants￨e .￨e INVALID_CONTENTS￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b !￨b (￨b force￨b )￨b )￨b {￨b <END_BUG>￨b try￨f (￨f )￨f {￨f ICompilationUnit￨e cu￨e =￨e getCompilationUnit￨e (￨e )￨e ;￨e generateElementAST￨e (￨e null￨e ,￨e cu￨e )￨e ;￨e }￨f catch￨f (￨f JavaModelException￨p jme￨p )￨f {￨f return￨e jme￨e .￨e getJavaModelStatus￨e (￨e )￨e ;￨e }￨f return￨e verifyNameCollision￨e (￨e )￨e ;￨e }￨e return￨e JavaModelStatus￨e .￨e VERIFIED_OK￨e ;￨e }￨f protected￨f IJavaModelStatus￨f verifyNameCollision￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d AndAnnotationTypePattern￨d extends￨d AnnotationTypePattern￨d {￨d private￨e AnnotationTypePattern￨e left￨e ;￨e private￨e AnnotationTypePattern￨e right￨e ;￨e public￨f AndAnnotationTypePattern￨f (￨f AnnotationTypePattern￨p left￨p ,￨p AnnotationTypePattern￨p right￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f matches￨f (￨f AnnotatedElement￨p annotated￨p )￨f {￨f }￨f public￨f AnnotationTypePattern￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p ,￨p boolean￨p allowBinding￨p )￨f {￨f }￨f public￨f static￨f AnnotationTypePattern￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p obj￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b (￨b (￨b (￨b "("￨b +￨b (￨b left￨b .￨b toString￨b (￨b )￨b )￨b )￨b +￨b "<seq2seq4repair_space>&&<seq2seq4repair_space>"￨b )￨b +￨b (￨b right￨b .￨b toString￨b (￨b )￨b )￨b )￨b +￨b ")"￨b ;￨b <END_BUG>￨b }￨f public￨f AnnotationTypePattern￨f getLeft￨f (￨f )￨f {￨f }￨f public￨f AnnotationTypePattern￨f getRight￨f (￨f )￨f {￨f }￨f }￨d
final￨d class￨d EmbedBlob￨d extends￨d ConnectionChild￨d implements￨d Blob￨d ,￨d EngineLOB￨d {￨d private￨e boolean￨e materialized￨e ;￨e private￨e PositionedStoreStream￨e myStream￨e ;￨e private￨e int￨e locator￨e =￨e 0￨e ;￨e private￨e long￨e streamLength￨e =￨e -￨e 1￨e ;￨e private￨e final￨e int￨e streamPositionOffset￨e ;￨e private￨e boolean￨e isValid￨e =￨e true￨e ;￨e private￨e LOBStreamControl￨e control￨e ;￨e EmbedBlob￨f (￨f byte￨f [￨f ]￨f blobBytes￨f ,￨f EmbedConnection￨f con￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f EmbedBlob￨f (￨f DataValueDescriptor￨f dvd￨f ,￨f EmbedConnection￨f con￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f int￨f handleStreamValue￨f (￨f InputStream￨f dvdStream￨f ,￨f EmbedConnection￨f con￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f long￨f setBlobPosition￨f (￨f long￨f logicalPos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f int￨f read￨f (￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f long￨f length￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f getBytes￨f (￨f long￨f startPos￨f ,￨f int￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getBinaryStream￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f byte￨f [￨f ]￨f pattern￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkMatch￨f (￨f byte￨f [￨f ]￨f pattern￨f ,￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f long￨f position￨f (￨f Blob￨f pattern￨f ,￨f long￨f start￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f checkMatch￨f (￨f Blob￨f pattern￨f ,￨f long￨f pos￨f )￨f throws￨f IOException￨f ,￨f StandardException￨f (￨f )￨f {￨f }￨f private￨f SQLException￨f handleMyExceptions￨f (￨f Throwable￨f t￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f void￨f finalize￨f (￨f )￨f {￨f }￨f public￨f int￨f setBytes￨f (￨f long￨f pos￨f ,￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f int￨f setBytes￨f (￨f long￨f pos￨f ,￨f byte￨f [￨f ]￨f bytes￨f ,￨f int￨f offset￨f ,￨f int￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f checkValidity￨e (￨e )￨e ;￨e if￨j (￨j (￨c pos￨c -￨c 1￨c )￨c >￨c (￨c length￨c (￨c )￨c )￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_POSITION_TOO_LARGE￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e )￨e ;￨e }￨j if￨j (￨j pos￨c <￨c 1￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_BAD_POSITION￨e ,￨e new￨e Long￨e (￨e pos￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c offset￨c <￨c 0￨c )￨c ||￨c (￨c offset￨c >￨c (￨c bytes￨c .￨c length￨c )￨c )￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_INVALID_OFFSET￨e ,￨e new￨e Long￨e (￨e offset￨e )￨e )￨e ;￨e }￨j if￨j (￨j len￨c <￨c 0￨c )￨j {￨j throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_NONPOSITIVE_LENGTH￨e ,￨e new￨e Long￨e (￨e len￨e )￨e )￨e ;￨e }￨j if￨j (￨j len￨c ==￨c 0￨c )￨j {￨j return￨e 0￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b len￨b +￨b offset￨b )￨b >￨b (￨b bytes￨b .￨b length￨b )￨b )￨b {￨b <END_BUG>￨b throw￨e Util￨e .￨e generateCsSQLException￨e (￨e BLOB_LENGTH_TOO_LONG￨e ,￨e new￨e Long￨e (￨e len￨e )￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f if￨j (￨j materialized￨c )￨j {￨j control￨e .￨e write￨e (￨e bytes￨e ,￨e offset￨e ,￨e len￨e ,￨e (￨e pos￨e -￨e 1￨e )￨e )￨e ;￨e }￨j else￨j {￨j control￨e =￨e new￨e LOBStreamControl￨e (￨e getEmbedConnection￨e (￨e )￨e )￨e ;￨e control￨e .￨e copyData￨e (￨e myStream￨e ,￨e length￨e (￨e )￨e )￨e ;￨e control￨e .￨e write￨e (￨e bytes￨e ,￨e offset￨e ,￨e len￨e ,￨e (￨e pos￨e -￨e 1￨e )￨e )￨e ;￨e myStream￨e .￨e close￨e (￨e )￨e ;￨e streamLength￨e =￨e -￨e 1￨e ;￨e materialized￨e =￨e true￨e ;￨e }￨j return￨e len￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e Util￨e .￨e setStreamFailure￨e (￨e e￨e )￨e ;￨e }￨f catch￨f (￨f StandardException￨p se￨p )￨f {￨f throw￨e Util￨e .￨e generateCsSQLException￨e (￨e se￨e )￨e ;￨e }￨f }￨f public￨f OutputStream￨f setBinaryStream￨f (￨f long￨f pos￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f truncate￨f (￨f long￨f len￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f free￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getBinaryStream￨f (￨f long￨f pos￨f ,￨f long￨f length￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkValidity￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f boolean￨f isMaterialized￨f (￨f )￨f {￨f }￨f public￨f int￨f getLocator￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DistributableSingleSignOnManagerFactoryBuilder￨d implements￨d org￨d .￨d wildfly￨d .￨d extension￨d .￨d undertow￨d .￨d security￨d .￨d sso￨d .￨d DistributableSingleSignOnManagerFactoryBuilder￨d {￨d private￨f static￨f SSOManagerFactoryBuilder￨f load￨f (￨f )￨f {￨f }￨f private￨e final￨e SSOManagerFactoryBuilder￨e builder￨e ;￨e public￨f DistributableSingleSignOnManagerFactoryBuilder￨f (￨f )￨f {￨f }￨f private￨f DistributableSingleSignOnManagerFactoryBuilder￨f (￨f SSOManagerFactoryBuilder￨p builder￨p )￨f {￨f }￨f @￨f Override￨f public￨f ServiceBuilder￨f <￨f SingleSignOnManagerFactory￨f >￨f build￨f (￨f ServiceTarget￨p target￨p ,￨p ServiceName￨p name￨p ,￨p final￨p ServiceName￨p hostServiceName￨p )￨f {￨f <START_BUG>￨b ServiceName￨b managerServiceName￨b =￨b name￨b .￨b append￨b (￨b "clustering"￨b )￨b ;￨b <END_BUG>￨b this￨e .￨e builder￨e .￨e build￨e (￨e target￨e ,￨e managerServiceName￨e ,￨e hostServiceName￨e .￨e getSimpleName￨e (￨e )￨e )￨e .￨e setInitialMode￨e (￨e ON_DEMAND￨e )￨e .￨e install￨e (￨e )￨e ;￨e SessionManagerRegistryService￨e .￨e build￨e (￨e target￨e ,￨e hostServiceName￨e )￨e .￨e setInitialMode￨e (￨e ON_DEMAND￨e )￨e .￨e install￨e (￨e )￨e ;￨e return￨e DistributableSingleSignOnManagerFactoryService￨e .￨e build￨e (￨e target￨e ,￨e name￨e ,￨e hostServiceName￨e ,￨e managerServiceName￨e )￨e ;￨e }￨f }￨d
public￨d class￨d SimpleSortedSetFacetsExample￨d {￨d private￨e final￨e Directory￨e indexDir￨e =￨e new￨e RAMDirectory￨e (￨e )￨e ;￨e private￨e final￨e FacetsConfig￨e config￨e =￨e new￨e FacetsConfig￨e (￨e )￨e ;￨e public￨f SimpleSortedSetFacetsExample￨f (￨f )￨f {￨f }￨f private￨f void￨f index￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f IndexWriter￨e indexWriter￨e =￨e new￨e IndexWriter￨e (￨e indexDir￨e ,￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e index￨e .￨e IndexWriterConfig￨e (￨e FacetExamples￨e .￨e EXAMPLES_VER￨e ,￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e analysis￨e .￨e core￨e .￨e WhitespaceAnalyzer￨e (￨e FacetExamples￨e .￨e EXAMPLES_VER￨e )￨e )￨e )￨e ;￨e Document￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Author"￨e ,￨e "Bob"￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Publish<seq2seq4repair_space>Year"￨e ,￨e "2010"￨e )￨e )￨e ;￨e indexWriter￨e .￨e addDocument￨e (￨e config￨e .￨e build￨e (￨e doc￨e )￨e )￨e ;￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Author"￨e ,￨e "Lisa"￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Publish<seq2seq4repair_space>Year"￨e ,￨e "2010"￨e )￨e )￨e ;￨e indexWriter￨e .￨e addDocument￨e (￨e config￨e .￨e build￨e (￨e doc￨e )￨e )￨e ;￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Author"￨e ,￨e "Lisa"￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Publish<seq2seq4repair_space>Year"￨e ,￨e "2012"￨e )￨e )￨e ;￨e indexWriter￨e .￨e addDocument￨e (￨e config￨e .￨e build￨e (￨e doc￨e )￨e )￨e ;￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Author"￨e ,￨e "Susan"￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Publish<seq2seq4repair_space>Year"￨e ,￨e "2012"￨e )￨e )￨e ;￨e indexWriter￨e .￨e addDocument￨e (￨e config￨e .￨e build￨e (￨e doc￨e )￨e )￨e ;￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Author"￨e ,￨e "Frank"￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e SortedSetDocValuesFacetField￨e (￨e "Publish<seq2seq4repair_space>Year"￨e ,￨e "1999"￨e )￨e )￨e ;￨e indexWriter￨e .￨e addDocument￨e (￨e config￨e .￨e build￨e (￨e doc￨e )￨e )￨e ;￨e <START_BUG>￨b indexWriter￨b .￨b close￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f List￨f <￨f FacetResult￨f >￨f search￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f FacetResult￨f drillDown￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f List￨f <￨f FacetResult￨f >￨f runSearch￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f FacetResult￨f runDrillDown￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ResolvedPointcutDefinition￨d extends￨d ResolvedMember￨d {￨d private￨e Pointcut￨e pointcut￨e ;￨e public￨f ResolvedPointcutDefinition￨f (￨f TypeX￨p declaringType￨p ,￨p int￨p modifiers￨p ,￨p String￨p name￨p ,￨p TypeX￨p [￨p ]￨p parameterTypes￨p ,￨p Pointcut￨p pointcut￨p )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f ResolvedPointcutDefinition￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f StringBuffer￨e buf￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e <START_BUG>￨b buf￨b .￨b append￨b (￨b "poincut<seq2seq4repair_space>"￨b )￨b ;￨b <END_BUG>￨b buf￨e .￨e append￨e (￨e getDeclaringType￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "."￨e )￨e ;￨e buf￨e .￨e append￨e (￨e getName￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "("￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c getParameterTypes￨c (￨c )￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j i￨c >￨c 0￨c )￨j {￨j buf￨e .￨e append￨e (￨e ",<seq2seq4repair_space>"￨e )￨e ;￨e }￨j buf￨e .￨e append￨e (￨e getParameterTypes￨e (￨e )￨e [￨e i￨e ]￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨l buf￨e .￨e append￨e (￨e ")"￨e )￨e ;￨e return￨e buf￨e .￨e toString￨e (￨e )￨e ;￨e }￨f public￨f Pointcut￨f getPointcut￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAjSynthetic￨f (￨f )￨f {￨f }￨f public￨e static￨e final￨e ResolvedPointcutDefinition￨e DUMMY￨e =￨e new￨e ResolvedPointcutDefinition￨e (￨e TypeX￨e .￨e OBJECT￨e ,￨e 0￨e ,￨e "missing"￨e ,￨e TypeX￨e .￨e NONE￨e ,￨e Pointcut￨e .￨e makeMatchesNothing￨e (￨e RESOLVED￨e )￨e )￨e ;￨e }￨d
public￨d class￨d PackageFragment￨d extends￨d Openable￨d implements￨d IPackageFragment￨d ,￨d SuffixConstants￨d {￨d protected￨f static￨f final￨f IClassFile￨f [￨f ]￨f NO_CLASSFILES￨f =￨f new￨f IClassFile￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e protected￨f static￨f final￨f ICompilationUnit￨f [￨f ]￨f NO_COMPILATION_UNITS￨f =￨f new￨f ICompilationUnit￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e protected￨f PackageFragment￨f (￨f PackageFragmentRoot￨p root￨p ,￨p String￨p name￨p )￨f {￨f }￨f protected￨f boolean￨f buildStructure￨f (￨f OpenableElementInfo￨f info￨f ,￨f IProgressMonitor￨f pm￨f ,￨f Map￨f newElements￨f ,￨f IResource￨f underlyingResource￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f containsJavaResources￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f copy￨f (￨f IJavaElement￨f container￨f ,￨f IJavaElement￨f sibling￨f ,￨f String￨f rename￨f ,￨f boolean￨f force￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f ICompilationUnit￨f createCompilationUnit￨f (￨f String￨f cuName￨f ,￨f String￨f contents￨f ,￨f boolean￨f force￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f CreateCompilationUnitOperation￨e op￨e =￨e new￨e CreateCompilationUnitOperation￨e (￨e this￨e ,￨e cuName￨e ,￨e contents￨e ,￨e force￨e )￨e ;￨e <START_BUG>￨b runOperation￨b (￨b op￨b ,￨b monitor￨b )￨b ;￨b <END_BUG>￨b return￨e new￨e CompilationUnit￨e (￨e this￨e ,￨e cuName￨e ,￨e DefaultWorkingCopyOwner￨e .￨e PRIMARY￨e )￨e ;￨e }￨f protected￨f Object￨f createElementInfo￨f (￨f )￨f {￨f }￨f public￨f void￨f delete￨f (￨f boolean￨f force￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f IClassFile￨f getClassFile￨f (￨f String￨p classFileName￨p )￨f {￨f }￨f public￨f IClassFile￨f [￨f ]￨f getClassFiles￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f ICompilationUnit￨f getCompilationUnit￨f (￨f String￨p cuName￨p )￨f {￨f }￨f public￨f ICompilationUnit￨f [￨f ]￨f getCompilationUnits￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f ICompilationUnit￨f [￨f ]￨f getCompilationUnits￨f (￨f WorkingCopyOwner￨p owner￨p )￨f {￨f }￨f public￨f int￨f getElementType￨f (￨f )￨f {￨f }￨f public￨f IJavaElement￨f getHandleFromMemento￨f (￨f String￨p token￨p ,￨p StringTokenizer￨p memento￨p ,￨p WorkingCopyOwner￨p owner￨p )￨f {￨f }￨f protected￨f char￨f getHandleMementoDelimiter￨f (￨f )￨f {￨f }￨f public￨f int￨f getKind￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getNonJavaResources￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IPath￨f getPath￨f (￨f )￨f {￨f }￨f public￨f IResource￨f getResource￨f (￨f )￨f {￨f }￨f public￨f IResource￨f getUnderlyingResource￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasSubpackages￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDefaultPackage￨f (￨f )￨f {￨f }￨f public￨f void￨f move￨f (￨f IJavaElement￨f container￨f ,￨f IJavaElement￨f sibling￨f ,￨f String￨f rename￨f ,￨f boolean￨f force￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f void￨f rename￨f (￨f String￨f newName￨f ,￨f boolean￨f force￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f toStringChildren￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p ,￨p Object￨p info￨p )￨f {￨f }￨f protected￨f void￨f toStringInfo￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p ,￨p Object￨p info￨p )￨f {￨f }￨f }￨d
class￨d XSDHandler￨d {￨d static￨e final￨e int￨e ATTRIBUTE_TYPE￨e =￨e 1￨e ;￨e static￨e final￨e int￨e ATTRIBUTEGROUP_TYPE￨e =￨e 2￨e ;￨e static￨e final￨e int￨e ELEMENT_TYPE￨e =￨e 3￨e ;￨e static￨e final￨e int￨e GROUP_TYPE￨e =￨e 4￨e ;￨e static￨e final￨e int￨e IDENTITYCONSTRAINT_TYPE￨e =￨e 5￨e ;￨e static￨e final￨e int￨e NOTATION_TYPE￨e =￨e 6￨e ;￨e static￨e final￨e int￨e TYPEDECL_TYPE￨e =￨e 7￨e ;￨e public￨e static￨e final￨e String￨e REDEF_IDENTIFIER￨e =￨e "_fn3dktizrknc9pi"￨e ;￨e public￨e String￨e EMPTY_STRING￨e ;￨e protected￨e Hashtable￨e fNotationRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedAttributeRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedAttributeGroupRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedElementRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedGroupRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedIdentityConstraintRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedNotationRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fUnparsedTypeRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fXSDocumentInfoRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fDependencyMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Vector￨e fTraversed￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e XSDocumentInfo￨e fRoot￨e =￨e null￨e ;￨e private￨e Hashtable￨e fDoc2XSDocumentMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fRedefine2XSDMap￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fRedefinedRestrictedAttributeGroupRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e fRedefinedRestrictedGroupRegistry￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e XMLErrorReporter￨e fErrorReporter￨e ;￨e private￨e XSAttributeChecker￨e fAttributeChecker￨e ;￨e private￨e SubstitutionGroupHandler￨e fSubGroupHandler￨e ;￨e private￨e XMLEntityResolver￨e fEntityResolver￨e ;￨e private￨e SymbolTable￨e fSymbolTable￨e ;￨e private￨e XSGrammarResolver￨e fGrammarResolver￨e ;￨e XSDAttributeGroupTraverser￨e fAttributeGroupTraverser￨e ;￨e XSDAttributeTraverser￨e fAttributeTraverser￨e ;￨e XSDComplexTypeTraverser￨e fComplexTypeTraverser￨e ;￨e XSDElementTraverser￨e fElementTraverser￨e ;￨e XSDGroupTraverser￨e fGroupTraverser￨e ;￨e XSDKeyrefTraverser￨e fKeyrefTraverser￨e ;￨e XSDNotationTraverser￨e fNotationTraverser￨e ;￨e XSDSimpleTypeTraverser￨e fSimpleTypeTraverser￨e ;￨e XSDUniqueOrKeyTraverser￨e fUniqueOrKeyTraverser￨e ;￨e XSDWildcardTraverser￨e fWildCardTraverser￨e ;￨e DOMParser￨e fSchemaParser￨e ;￨e private￨e static￨e final￨e int￨e INIT_STACK_SIZE￨e =￨e 30￨e ;￨e private￨e static￨e final￨e int￨e INC_STACK_SIZE￨e =￨e 10￨e ;￨e private￨e int￨e fLocalElemStackPos￨e ;￨e private￨e XSParticleDecl￨e [￨e ]￨e fParticle￨e ;￨e private￨e Element￨e [￨e ]￨e fLocalElementDecl￨e ;￨e private￨e int￨e [￨e ]￨e fAllContext￨e ;￨e private￨e String￨e [￨e ]￨e [￨e ]￨e fLocalElemNamespaceContext￨e ;￨e XSDHandler￨f (￨f XSGrammarResolver￨p gResolver￨p )￨f {￨f }￨f SchemaGrammar￨f parseSchema￨f (￨f String￨p schemaNamespace￨p ,￨p String￨p schemaHint￨p )￨f {￨f }￨f protected￨f XSDocumentInfo￨f constructTrees￨f (￨f Document￨p schemaRoot￨p )￨f {￨f if￨j (￨j schemaRoot￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j XSDocumentInfo￨e currSchemaInfo￨e =￨e new￨e XSDocumentInfo￨e (￨e schemaRoot￨e ,￨e fAttributeChecker￨e ,￨e fSymbolTable￨e )￨e ;￨e SchemaGrammar￨e sg￨e =￨e null￨e ;￨e if￨j (￨j (￨c sg￨c =￨c fGrammarResolver￨c .￨c getGrammar￨c (￨c currSchemaInfo￨c .￨c fTargetNamespace￨c )￨c )￨c ==￨c null￨c )￨j {￨j sg￨e =￨e new￨e SchemaGrammar￨e (￨e fSymbolTable￨e ,￨e currSchemaInfo￨e .￨e fTargetNamespace￨e )￨e ;￨e fGrammarResolver￨e .￨e putGrammar￨e (￨e sg￨e )￨e ;￨e }￨j Vector￨e dependencies￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e <START_BUG>￨b dependencies￨b .￨b add￨b (￨b currSchemaInfo￨b )￨b ;￨b <END_BUG>￨b Element￨e rootNode￨e =￨e DOMUtil￨e .￨e getRoot￨e (￨e schemaRoot￨e )￨e ;￨e String￨e schemaNamespace￨e =￨e EMPTY_STRING￨e ;￨e String￨e schemaHint￨e =￨e EMPTY_STRING￨e ;￨e Document￨e newSchemaRoot￨e =￨e null￨e ;￨e for￨l (￨l Element￨c child￨c =￨c DOMUtil￨c .￨c getFirstChildElement￨c (￨c rootNode￨c )￨c ;￨c child￨c !=￨c null￨c ;￨c child￨c =￨c DOMUtil￨c .￨c getNextSiblingElement￨c (￨c child￨c )￨c )￨l {￨l String￨e localName￨e =￨e DOMUtil￨e .￨e getLocalName￨e (￨e child￨e )￨e ;￨e if￨j (￨j localName￨c .￨c equals￨c (￨c ELT_ANNOTATION￨c )￨c )￨j {￨j continue￨e ;￨e }￨j else￨j if￨j (￨j localName￨c .￨c equals￨c (￨c ELT_IMPORT￨c )￨c )￨j {￨j Object￨e [￨e ]￨e includeAttrs￨e =￨e fAttributeChecker￨e .￨e checkAttributes￨e (￨e child￨e ,￨e true￨e ,￨e currSchemaInfo￨e )￨e ;￨e schemaHint￨e =￨e (￨e (￨e String￨e )￨e (￨e includeAttrs￨e [￨e XSAttributeChecker￨e .￨e ATTIDX_SCHEMALOCATION￨e ]￨e )￨e )￨e ;￨e schemaNamespace￨e =￨e (￨e (￨e String￨e )￨e (￨e includeAttrs￨e [￨e XSAttributeChecker￨e .￨e ATTIDX_NAMESPACE￨e ]￨e )￨e )￨e ;￨e fAttributeChecker￨e .￨e returnAttrArray￨e (￨e includeAttrs￨e ,￨e currSchemaInfo￨e )￨e ;￨e newSchemaRoot￨e =￨e getSchema￨e (￨e schemaNamespace￨e ,￨e schemaHint￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c localName￨c .￨c equals￨c (￨c ELT_INCLUDE￨c )￨c )￨c ||￨c (￨c localName￨c .￨c equals￨c (￨c ELT_REDEFINE￨c )￨c )￨c )￨j {￨j Object￨e [￨e ]￨e includeAttrs￨e =￨e fAttributeChecker￨e .￨e checkAttributes￨e (￨e child￨e ,￨e true￨e ,￨e currSchemaInfo￨e )￨e ;￨e schemaHint￨e =￨e (￨e (￨e String￨e )￨e (￨e includeAttrs￨e [￨e XSAttributeChecker￨e .￨e ATTIDX_SCHEMALOCATION￨e ]￨e )￨e )￨e ;￨e fAttributeChecker￨e .￨e returnAttrArray￨e (￨e includeAttrs￨e ,￨e currSchemaInfo￨e )￨e ;￨e newSchemaRoot￨e =￨e getSchema￨e (￨e EMPTY_STRING￨e ,￨e schemaHint￨e )￨e ;￨e }￨j else￨j {￨j break￨e ;￨e }￨j XSDocumentInfo￨e newSchemaInfo￨e =￨e constructTrees￨e (￨e newSchemaRoot￨e )￨e ;￨e if￨j (￨j localName￨c .￨c equals￨c (￨c ELT_REDEFINE￨c )￨c )￨j {￨j fRedefine2XSDMap￨e .￨e put￨e (￨e child￨e ,￨e newSchemaInfo￨e )￨e ;￨e }￨j dependencies￨e .￨e addElement￨e (￨e newSchemaInfo￨e )￨e ;￨e fDoc2XSDocumentMap￨e .￨e put￨e (￨e newSchemaRoot￨e ,￨e newSchemaInfo￨e )￨e ;￨e newSchemaRoot￨e =￨e null￨e ;￨e }￨l fDependencyMap￨e .￨e put￨e (￨e currSchemaInfo￨e ,￨e dependencies￨e )￨e ;￨e return￨e currSchemaInfo￨e ;￨e }￨f protected￨f void￨f buildGlobalNameRegistries￨f (￨f )￨f {￨f }￨f protected￨f void￨f traverseSchemas￨f (￨f )￨f {￨f }￨f protected￨f Object￨f getGlobalDecl￨f (￨f XSDocumentInfo￨p currSchema￨p ,￨p int￨p declType￨p ,￨p QName￨p declToTraverse￨p )￨f {￨f }￨f protected￨f void￨f resolveKeyRefs￨f (￨f )￨f {￨f }￨f private￨f Document￨f getSchema￨f (￨f String￨p schemaNamespace￨p ,￨p String￨p schemaHint￨p )￨f {￨f }￨f private￨f void￨f createTraversers￨f (￨f )￨f {￨f }￨f protected￨f void￨f reset￨f (￨f XMLErrorReporter￨p errorReporter￨p ,￨p XMLEntityResolver￨p entityResolver￨p ,￨p SymbolTable￨p symbolTable￨p )￨f {￨f }￨f void￨f traverseLocalElements￨f (￨f )￨f {￨f }￨f void￨f fillInLocalElemInfo￨f (￨f Element￨p elmDecl￨p ,￨p XSDocumentInfo￨p schemaDoc￨p ,￨p int￨p allContextFlags￨p ,￨p XSParticleDecl￨p particle￨p )￨f {￨f }￨f private￨f void￨f checkForDuplicateNames￨f (￨f String￨p qName￨p ,￨p Hashtable￨p registry￨p ,￨p Element￨p currComp￨p ,￨p XSDocumentInfo￨p currSchema￨p )￨f {￨f }￨f protected￨f String￨f resolvePrefixToURI￨f (￨f String￨p prefix￨p )￨f {￨f }￨f private￨f void￨f renameRedefiningComponents￨f (￨f XSDocumentInfo￨p currSchema￨p ,￨p Element￨p child￨p ,￨p String￨p componentType￨p ,￨p String￨p oldName￨p ,￨p String￨p newName￨p )￨f {￨f }￨f private￨f String￨f findQName￨f (￨f String￨p name￨p ,￨p SchemaNamespaceSupport￨p currNSMap￨p )￨f {￨f }￨f private￨f int￨f changeRedefineGroup￨f (￨f String￨p originalQName￨p ,￨p String￨p elementSought￨p ,￨p String￨p newName￨p ,￨p Element￨p curr￨p ,￨p SchemaNamespaceSupport￨p currNSMap￨p )￨f {￨f }￨f private￨f XSDocumentInfo￨f findXSDocumentForDecl￨f (￨f XSDocumentInfo￨p currSchema￨p ,￨p Element￨p decl￨p )￨f {￨f }￨f private￨f void￨f setSchemasVisible￨f (￨f XSDocumentInfo￨p startSchema￨p )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d DummyResolver￨d implements￨d EntityResolver￨d {￨d public￨f InputSource￨f resolveEntity￨f (￨f String￨f pubId￨f ,￨f String￨f sysId￨f )￨f throws￨f IOException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d Util￨d {￨d static￨e ThreadLocal￨e <￨e ClassLoader￨e >￨e storedClassLoaders￨e =￨e new￨e ThreadLocal￨e <￨e ClassLoader￨e >￨e (￨e )￨e ;￨e public￨f static￨f void￨f storeContextClassloader￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f restoreContextClassloader￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f fixContextClassloader￨f (￨f String￨p cls￨p ,￨p String￨p method￨p ,￨p Class￨p <￨p ?￨p >￨p clsArg￨p ,￨p ClassLoader￨p bundleLoader￨p )￨f {￨f }￨f private￨f static￨f ClassLoader￨f findContextClassloader￨f (￨f Bundle￨p consumerBundle￨p ,￨p String￨p className￨p ,￨p String￨p methodName￨p ,￨p Class￨p <￨p ?￨p >￨p clsArg￨p )￨f {￨f Activator￨e activator￨e =￨e Activator￨e .￨e activator￨e ;￨e String￨e requestedClass￨e ;￨e if￨j (￨j (￨c ServiceLoader￨c .￨c class￨c .￨c getName￨c (￨c )￨c .￨c equals￨c (￨c className￨c )￨c )￨c &&￨c (￨c "load"￨c .￨c equals￨c (￨c methodName￨c )￨c )￨c )￨j {￨j requestedClass￨e =￨e clsArg￨e .￨e getName￨e (￨e )￨e ;￨e }￨j else￨j {￨j requestedClass￨e =￨e className￨e ;￨e }￨j Collection￨e <￨e Bundle￨e >￨e bundles￨e =￨e new￨e ArrayList￨e <￨e Bundle￨e >￨e (￨e activator￨e .￨e findProviderBundles￨e (￨e requestedClass￨e )￨e )￨e ;￨e activator￨e .￨e log￨e (￨e LogService￨e .￨e LOG_DEBUG￨e ,￨e (￨e (￨e (￨e "Found<seq2seq4repair_space>bundles<seq2seq4repair_space>providing<seq2seq4repair_space>"￨e +￨e requestedClass￨e )￨e +￨e ":<seq2seq4repair_space>"￨e )￨e +￨e bundles￨e )￨e )￨e ;￨e Map￨e <￨e Pair￨e <￨e Integer￨e ,￨e String￨e >￨e ,￨e String￨e >￨e args￨e =￨e new￨e HashMap￨e <￨e Pair￨e <￨e Integer￨e ,￨e String￨e >￨e ,￨e String￨e >￨e (￨e )￨e ;￨e <START_BUG>￨b args￨b .￨b put￨b (￨b new￨b Pair￨b <￨b Integer￨b ,￨b String￨b >￨b (￨b 1￨b ,￨b Class￨b .￨b class￨b .￨b getName￨b (￨b )￨b )￨b ,￨b clsArg￨b .￨b getName￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b Collection￨e <￨e Bundle￨e >￨e allowedBundles￨e =￨e activator￨e .￨e findConsumerRestrictions￨e (￨e consumerBundle￨e ,￨e className￨e ,￨e methodName￨e ,￨e args￨e )￨e ;￨e if￨j (￨j allowedBundles￨c !=￨c null￨c )￨j {￨j for￨l (￨l Iterator￨c <￨c Bundle￨c >￨c it￨c =￨c bundles￨c .￨c iterator￨c (￨c )￨c ;￨c it￨c .￨c hasNext￨c (￨c )￨c ;￨c )￨l {￨l if￨j (￨j !￨c (￨c allowedBundles￨c .￨c contains￨c (￨c it￨c .￨c next￨c (￨c )￨c )￨c )￨c )￨j {￨j it￨e .￨e remove￨e (￨e )￨e ;￨e }￨j }￨l }￨j switch￨s (￨s bundles￨c .￨c size￨c (￨c )￨c )￨s {￨s case￨c 0￨c :￨c return￨e null￨e ;￨e case￨c 1￨c :￨c Bundle￨e bundle￨e =￨e bundles￨e .￨e iterator￨e (￨e )￨e .￨e next￨e (￨e )￨e ;￨e BundleWiring￨e wiring￨e =￨e bundle￨e .￨e adapt￨e (￨e BundleWiring￨e .￨e class￨e )￨e ;￨e return￨e wiring￨e .￨e getClassLoader￨e (￨e )￨e ;￨e default￨c :￨c List￨e <￨e ClassLoader￨e >￨e loaders￨e =￨e new￨e ArrayList￨e <￨e ClassLoader￨e >￨e (￨e )￨e ;￨e for￨l (￨l Bundle￨c b￨c :￨c bundles￨c )￨l {￨l BundleWiring￨e bw￨e =￨e b￨e .￨e adapt￨e (￨e BundleWiring￨e .￨e class￨e )￨e ;￨e loaders￨e .￨e add￨e (￨e bw￨e .￨e getClassLoader￨e (￨e )￨e )￨e ;￨e }￨l return￨e new￨e MultiDelegationClassloader￨e (￨e loaders￨e .￨e toArray￨e (￨e new￨e ClassLoader￨e [￨e loaders￨e .￨e size￨e (￨e )￨e ]￨e )￨e )￨e ;￨e }￨s }￨f }￨d
public￨d class￨d CopyCommand￨d extends￨d FigureTransferCommand￨d {￨d public￨f CopyCommand￨f (￨f String￨p name￨p ,￨p DrawingView￨p view￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isExecutable￨f (￨f )￨f {￨f <START_BUG>￨b return￨b (￨b fView￨b .￨b selectionCount￨b (￨b )￨b )￨b >￨b 0￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d FastViewManager￨d {￨d private￨e Perspective￨e perspective￨e ;￨e private￨e WorkbenchPage￨e page￨e ;￨e private￨e WorkbenchWindow￨e wbw￨e ;￨e private￨e TrimLayout￨e tbm￨e ;￨e private￨e Map￨e idToFastViewsMap￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e boolean￨e deferringUpdates￨e =￨e false￨e ;￨e private￨e AnimationEngine￨e batchAnimation￨e =￨e null￨e ;￨e private￨e AnimationEngine￨e oneShotAnimation￨e =￨e null￨e ;￨e private￨f IPerspectiveListener2￨f perspListener￨f =￨f new￨f IPerspectiveListener2￨f (￨f )￨f {￨f public￨f void￨f perspectiveActivated￨f (￨f IWorkbenchPage￨p page￨p ,￨p IPerspectiveDescriptor￨p perspective￨p )￨f {￨f }￨f public￨f void￨f perspectiveChanged￨f (￨f IWorkbenchPage￨p changedPage￨p ,￨p IPerspectiveDescriptor￨p perspective￨p ,￨p IWorkbenchPartReference￨p partRef￨p ,￨p String￨p changeId￨p )￨f {￨f }￨f public￨f void￨f perspectiveChanged￨f (￨f IWorkbenchPage￨p changedPage￨p ,￨p IPerspectiveDescriptor￨p perspective￨p ,￨p String￨p changeId￨p )￨f {￨f }￨f }￨f ;￨e public￨f FastViewManager￨f (￨f Perspective￨p perspective￨p ,￨p WorkbenchPage￨p page￨p )￨f {￨f }￨f protected￨f void￨f handlePerspectiveActivation￨f (￨f IWorkbenchPage￨p activatingPage￨p ,￨p IPerspectiveDescriptor￨p activatingPerspective￨p )￨f {￨f }￨f protected￨f void￨f handlePerspectiveChange￨f (￨f IWorkbenchPage￨p changedPage￨p ,￨p IPerspectiveDescriptor￨p changedPerspective￨p ,￨p IWorkbenchPartReference￨p partRef￨p ,￨p String￨p changeId￨p )￨f {￨f if￨j (￨j (￨c changedPage￨c !=￨c (￨c page￨c )￨c )￨c &&￨c (￨c (￨c perspective￨c .￨c getDesc￨c (￨c )￨c )￨c !=￨c changedPerspective￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j changeId￨c .￨c equals￨c (￨c CHANGE_VIEW_HIDE￨c )￨c )￨j {￨j <START_BUG>￨b if￨b (￨b partRef￨b instanceof￨b IViewReference￨b )￨b {￨b <END_BUG>￨b ViewReference￨e ref￨e =￨e (￨e (￨e ViewReference￨e )￨e (￨e partRef￨e )￨e )￨e ;￨e if￨j (￨j (￨c ref￨c .￨c getPane￨c (￨c )￨c .￨c getContainer￨c (￨c )￨c )￨c instanceof￨c ViewStack￨c )￨j {￨j int￨e viewCount￨e =￨e 0￨e ;￨e LayoutPart￨e [￨e ]￨e children￨e =￨e ref￨e .￨e getPane￨e (￨e )￨e .￨e getContainer￨e (￨e )￨e .￨e getChildren￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c children￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c (￨c children￨c [￨c i￨c ]￨c )￨c instanceof￨c ViewPane￨c )￨c &&￨c (￨c (￨c children￨c [￨c i￨c ]￨c )￨c !=￨c (￨c ref￨c .￨c getPane￨c (￨c )￨c )￨c )￨c )￨j {￨j viewCount￨e ++￨e ;￨e }￨j }￨l if￨j (￨j viewCount￨c ==￨c 0￨c )￨j {￨j ref￨e .￨e getPane￨e (￨e )￨e .￨e getStack￨e (￨e )￨e .￨e setState￨e (￨e STATE_RESTORED￨e )￨e ;￨e }￨j }￨j }￨j if￨j (￨j changeId￨c .￨c equals￨c (￨c CHANGE_FAST_VIEW_REMOVE￨c )￨c )￨j {￨j removeViewReference￨e (￨e (￨e (￨e IViewReference￨e )￨e (￨e partRef￨e )￨e )￨e ,￨e false￨e ,￨e true￨e )￨e ;￨e }￨j }￨f protected￨f void￨f handlePerspectiveChange￨f (￨f IWorkbenchPage￨p changedPage￨p ,￨p IPerspectiveDescriptor￨p changedPerspective￨p ,￨p String￨p changeId￨p )￨f {￨f }￨f public￨f List￨f getFastViews￨f (￨f String￨p forId￨p )￨f {￨f }￨f public￨f void￨f addViewReference￨f (￨f String￨p id￨p ,￨p int￨p index￨p ,￨p IViewReference￨p ref￨p ,￨p boolean￨p update￨p )￨f {￨f }￨f private￨f ViewStackTrimToolBar￨f getTrimForViewStack￨f (￨f String￨p id￨p ,￨p int￨p suggestedSide￨p ,￨p int￨p paneOrientation￨p )￨f {￨f }￨f public￨f void￨f updateTrim￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f void￨f removeViewReference￨f (￨f IViewReference￨p ref￨p ,￨p boolean￨p makeUnfast￨p ,￨p boolean￨p update￨p )￨f {￨f }￨f private￨f void￨f makeFast￨f (￨f IViewReference￨p ref￨p ,￨p boolean￨p makeFast￨p ,￨p boolean￨p activate￨p )￨f {￨f }￨f boolean￨f isFastView￨f (￨f IViewReference￨p ref￨p )￨f {￨f }￨f public￨f String￨f getIdForRef￨f (￨f IViewReference￨p ref￨p )￨f {￨f }￨f public￨f int￨f getViewSide￨f (￨f IViewReference￨p ref￨p )￨f {￨f }￨f private￨f IWindowTrim￨f getTrimForRef￨f (￨f IViewReference￨p ref￨p )￨f {￨f }￨f private￨f List￨f getTrueViewOrder￨f (￨f ViewStack￨p stack￨p )￨f {￨f }￨f public￨f void￨f moveToTrim￨f (￨f ViewStack￨p vs￨p ,￨p boolean￨p restoreOnUnzoom￨p )￨f {￨f }￨f public￨f void￨f restoreToPresentation￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f void￨f restoreZoomedViewStacks￨f (￨f )￨f {￨f }￨f public￨f void￨f setFastViewIconSelection￨f (￨f IViewReference￨p ref￨p ,￨p boolean￨p selected￨p )￨f {￨f }￨f public￨f void￨f activate￨f (￨f )￨f {￨f }￨f public￨f void￨f deActivate￨f (￨f )￨f {￨f }￨f public￨f boolean￨f restoreAllTrimStacks￨f (￨f )￨f {￨f }￨f private￨f void￨f setTrimStackVisibility￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f public￨f void￨f saveState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f public￨f void￨f restoreState￨f (￨f IMemento￨p memento￨p ,￨p MultiStatus￨p result￨p )￨f {￨f }￨f public￨f ViewStackTrimToolBar￨f getViewStackTrimToolbar￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f void￨f printFVModel￨f (￨f )￨f {￨f }￨f public￨f void￨f deferUpdates￨f (￨f boolean￨p defer￨p )￨f {￨f }￨f private￨f void￨f deferAnimations￨f (￨f boolean￨p defer￨p )￨f {￨f }￨f private￨f AnimationEngine￨f getDeferrableAnimation￨f (￨f )￨f {￨f }￨f private￨f void￨f scheduleDeferrableAnimation￨f (￨f )￨f {￨f }￨f public￨f ViewStackTrimToolBar￨f getBottomRightTrimStack￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AttributeDefinition￨d {￨d private￨e final￨e String￨e name￨e ;￨e private￨e final￨e String￨e xmlName￨e ;￨e private￨e final￨e ModelType￨e type￨e ;￨e private￨e final￨e boolean￨e allowNull￨e ;￨e private￨e final￨e boolean￨e allowExpression￨e ;￨e private￨e final￨e ModelNode￨e defaultValue￨e ;￨e private￨e final￨e MeasurementUnit￨e measurementUnit￨e ;￨e private￨e final￨e String￨e [￨e ]￨e alternatives￨e ;￨e private￨e final￨e String￨e [￨e ]￨e requires￨e ;￨e private￨e final￨e ParameterCorrector￨e valueCorrector￨e ;￨e private￨e final￨e ParameterValidator￨e validator￨e ;￨e private￨e final￨e EnumSet￨e <￨e AttributeAccess￨e .￨e Flag￨e >￨e flags￨e ;￨e protected￨e final￨e AttributeMarshaller￨e attributeMarshaller￨e ;￨e private￨e final￨e boolean￨e resourceOnly￨e ;￨e private￨e final￨e DeprecationData￨e deprecationData￨e ;￨e protected￨f AttributeDefinition￨f (￨f String￨p name￨p ,￨p String￨p xmlName￨p ,￨p final￨p ModelNode￨p defaultValue￨p ,￨p final￨p ModelType￨p type￨p ,￨p final￨p boolean￨p allowNull￨p ,￨p final￨p boolean￨p allowExpression￨p ,￨p final￨p MeasurementUnit￨p measurementUnit￨p ,￨p final￨p ParameterValidator￨p validator￨p ,￨p final￨p String￨p [￨p ]￨p alternatives￨p ,￨p final￨p String￨p [￨p ]￨p requires￨p ,￨p final￨p AttributeAccess￨p ...￨p flags￨p )￨f {￨f }￨f protected￨f AttributeDefinition￨f (￨f String￨p name￨p ,￨p String￨p xmlName￨p ,￨p final￨p ModelNode￨p defaultValue￨p ,￨p final￨p ModelType￨p type￨p ,￨p final￨p boolean￨p allowNull￨p ,￨p final￨p boolean￨p allowExpression￨p ,￨p final￨p MeasurementUnit￨p measurementUnit￨p ,￨p final￨p ParameterCorrector￨p valueCorrector￨p ,￨p final￨p ParameterValidator￨p validator￨p ,￨p boolean￨p validateNull￨p ,￨p final￨p String￨p [￨p ]￨p alternatives￨p ,￨p final￨p String￨p [￨p ]￨p requires￨p ,￨p AttributeMarshaller￨p attributeMarshaller￨p ,￨p boolean￨p resourceOnly￨p ,￨p DeprecationData￨p deprecationData￨p ,￨p final￨p AttributeAccess￨p ...￨p flags￨p )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f String￨f getXmlName￨f (￨f )￨f {￨f }￨f public￨f ModelType￨f getType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAllowNull￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAllowExpression￨f (￨f )￨f {￨f }￨f public￨f ModelNode￨f getDefaultValue￨f (￨f )￨f {￨f }￨f public￨f MeasurementUnit￨f getMeasurementUnit￨f (￨f )￨f {￨f }￨f public￨f ParameterValidator￨f getValidator￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getAlternatives￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getRequires￨f (￨f )￨f {￨f }￨f public￨f EnumSet￨f <￨f AttributeAccess￨f .￨f Flag￨f >￨f getFlags￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMarshallable￨f (￨f final￨p ModelNode￨p resourceModel￨p )￨f {￨f }￨f public￨f boolean￨f isMarshallable￨f (￨f final￨p ModelNode￨p resourceModel￨p ,￨p final￨p boolean￨p marshallDefault￨p )￨f {￨f }￨f public￨f ModelNode￨f validateOperation￨f (￨f final￨f ModelNode￨f operationObject￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f validateAndSet￨f (￨f ModelNode￨f operationObject￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b isDeprecated￨b (￨b )￨b )￨b {￨b <END_BUG>￨b DEPRECATED_LOGGER￨e .￨e attributeDeprecated￨e (￨e getName￨e (￨e )￨e )￨e ;￨e }￨e final￨e ModelNode￨e newValue￨e =￨e correctValue￨e (￨e operationObject￨e .￨e get￨e (￨e name￨e )￨e ,￨e model￨e .￨e get￨e (￨e name￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c newValue￨c .￨c equals￨c (￨c operationObject￨c .￨c get￨c (￨c name￨c )￨c )￨c )￨c )￨j {￨j operationObject￨e .￨e get￨e (￨e name￨e )￨e .￨e set￨e (￨e newValue￨e )￨e ;￨e }￨j ModelNode￨e node￨e =￨e validateOperation￨e (￨e operationObject￨e ,￨e false￨e )￨e ;￨e model￨e .￨e get￨e (￨e name￨e )￨e .￨e set￨e (￨e node￨e )￨e ;￨e }￨f @￨f Deprecated￨f public￨f ModelNode￨f validateResolvedOperation￨f (￨f final￨f ModelNode￨f operationObject￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f ModelNode￨f resolveModelAttribute￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f ModelNode￨f resolveModelAttribute￨f (￨f final￨f ExpressionResolver￨f resolver￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAllowed￨f (￨f final￨p ModelNode￨p operationObject￨p )￨f {￨f }￨f public￨f boolean￨f isRequired￨f (￨f final￨p ModelNode￨p operationObject￨p )￨f {￨f }￨f public￨f boolean￨f hasAlternative￨f (￨f final￨p ModelNode￨p operationObject￨p )￨f {￨f }￨f public￨f void￨f marshallAsElement￨f (￨f final￨f ModelNode￨f resourceModel￨f ,￨f final￨f XMLStreamWriter￨f writer￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f public￨f void￨f marshallAsElement￨f (￨f final￨f ModelNode￨f resourceModel￨f ,￨f final￨f boolean￨f marshallDefault￨f ,￨f final￨f XMLStreamWriter￨f writer￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f public￨f ModelNode￨f addResourceAttributeDescription￨f (￨f final￨p ResourceBundle￨p bundle￨p ,￨p final￨p String￨p prefix￨p ,￨p final￨p ModelNode￨p resourceDescription￨p )￨f {￨f }￨f public￨f ModelNode￨f addResourceAttributeDescription￨f (￨f final￨p ModelNode￨p resourceDescription￨p ,￨p final￨p ResourceDescriptionResolver￨p resolver￨p ,￨p final￨p Locale￨p locale￨p ,￨p final￨p ResourceBundle￨p bundle￨p )￨f {￨f }￨f public￨f ModelNode￨f addOperationParameterDescription￨f (￨f final￨p ResourceBundle￨p bundle￨p ,￨p final￨p String￨p prefix￨p ,￨p final￨p ModelNode￨p operationDescription￨p )￨f {￨f }￨f public￨f ModelNode￨f addOperationParameterDescription￨f (￨f final￨p ModelNode￨p resourceDescription￨p ,￨p final￨p String￨p operationName￨p ,￨p final￨p ResourceDescriptionResolver￨p resolver￨p ,￨p final￨p Locale￨p locale￨p ,￨p final￨p ResourceBundle￨p bundle￨p )￨f {￨f }￨f public￨f String￨f getAttributeTextDescription￨f (￨f final￨p ResourceBundle￨p bundle￨p ,￨p final￨p String￨p prefix￨p )￨f {￨f }￨f public￨f String￨f getAttributeDeprecatedDescription￨f (￨f final￨p ResourceBundle￨p bundle￨p ,￨p final￨p String￨p prefix￨p )￨f {￨f }￨f public￨f ModelNode￨f addDeprecatedInfo￨f (￨f final￨p ModelNode￨p model￨p )￨f {￨f }￨f public￨f ModelNode￨f getNoTextDescription￨f (￨f boolean￨p forOperation￨p )￨f {￨f }￨f protected￨f final￨f ModelNode￨f correctValue￨f (￨f final￨p ModelNode￨p newValue￨p ,￨p final￨p ModelNode￨p oldValue￨p )￨f {￨f }￨f private￨f ModelNode￨f validateOperation￨f (￨f final￨f ModelNode￨f operationObject￨f ,￨f final￨f boolean￨f correctValue￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f AttributeMarshaller￨f getAttributeMarshaller￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isResourceOnly￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDeprecated￨f (￨f )￨f {￨f }￨f public￨f DeprecationData￨f getDeprecationData￨f (￨f )￨f {￨f }￨f private￨f static￨f final￨f ExpressionResolver￨f NO_OPERATION_CONTEXT_FOR_RESOLVING_MODEL_PARAMETERS￨f =￨f new￨f ExpressionResolver￨f (￨f )￨f {￨f @￨f Override￨f public￨f ModelNode￨f resolveExpressions￨f (￨f ModelNode￨f node￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f }￨f ;￨e }￨d
public￨d class￨d TestCJKWidthFilter￨d extends￨d BaseTokenStreamTestCase￨d {￨d private￨f Analyzer￨f analyzer￨f =￨f new￨f Analyzer￨f (￨f )￨f {￨f @￨f Override￨f protected￨f TokenStreamComponents￨f createComponents￨f (￨f String￨p fieldName￨p ,￨p Reader￨p reader￨p )￨f {￨f }￨f }￨f ;￨e public￨f void￨f testFullWidthASCII￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testHalfWidthKana￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomData￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b analyzer￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testEmptyTerm￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PageAndComponentProvider￨d extends￨d DefaultPageProvider￨d {￨d private￨e IRequestableComponent￨e component￨e ;￨e private￨e String￨e componentPath￨e ;￨e public￨f PageAndComponentProvider￨f (￨f IRequestablePage￨p page￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f IRequestablePage￨p page￨p ,￨p IRequestableComponent￨p component￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f Class￨p <￨p ?￨p extends￨p IRequestablePage￨p >￨p pageClass￨p ,￨p PageParameters￨p pageParameters￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f Class￨p <￨p ?￨p extends￨p IRequestablePage￨p >￨p pageClass￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f int￨p pageId￨p ,￨p Class￨p <￨p ?￨p extends￨p IRequestablePage￨p >￨p pageClass￨p ,￨p Integer￨p renderCount￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f int￨p pageId￨p ,￨p Class￨p <￨p ?￨p extends￨p IRequestablePage￨p >￨p pageClass￨p ,￨p PageParameters￨p pageParameters￨p ,￨p Integer￨p renderCount￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f public￨f PageAndComponentProvider￨f (￨f int￨p pageId￨p ,￨p Integer￨p renderCount￨p ,￨p String￨p componentPath￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f prepareForRenderNewPage￨f (￨f )￨f {￨f }￨f public￨f IRequestableComponent￨f getComponent￨f (￨f )￨f {￨f }￨f public￨f String￨f getComponentPath￨f (￨f )￨f {￨f if￨j (￨j (￨c componentPath￨c )￨c !=￨c null￨c )￨j {￨j return￨e componentPath￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b return￨b component￨b .￨b getPath￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f private￨f void￨f setComponentPath￨f (￨f String￨p componentPath￨p )￨f {￨f }￨f }￨d
public￨d class￨d DateTimeDV￨d extends￨d AbstractDateTimeDV￨d {￨d public￨f Object￨f getActualValue￨f (￨f String￨f content￨f ,￨f ValidationContext￨f context￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f return￨e parse￨e (￨e content￨e ,￨e null￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b InvalidDatatypeValueException￨b (￨b "not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>dataTime"￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f protected￨f int￨f [￨f ]￨f parse￨f (￨f String￨f str￨f ,￨f int￨f [￨f ]￨f date￨f )￨f throws￨f SchemaDateTimeException￨f (￨f )￨f {￨f }￨f }￨d
class￨d ConsoleHandlerAdd￨d extends￨d FlushingHandlerAddProperties￨d <￨d ConsoleHandlerService￨d >￨d {￨d static￨e final￨e ConsoleHandlerAdd￨e INSTANCE￨e =￨e new￨e ConsoleHandlerAdd￨e (￨e )￨e ;￨e private￨f ConsoleHandlerAdd￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f ConsoleHandlerService￨f createHandlerService￨f (￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f updateRuntime￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ServiceBuilder￨f <￨f Handler￨f >￨f serviceBuilder￨f ,￨f final￨f String￨f name￨f ,￨f final￨f ConsoleHandlerService￨f service￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f super￨e .￨e updateRuntime￨e (￨e context￨e ,￨e serviceBuilder￨e ,￨e name￨e ,￨e service￨e ,￨e model￨e )￨e ;￨e final￨e ModelNode￨e target￨e =￨e CommonAttributes￨e .￨e TARGET￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e ;￨e if￨j (￨j target￨c .￨c isDefined￨c (￨c )￨c )￨j {￨j <START_BUG>￨b service￨b .￨b setTarget￨b (￨b Target￨b .￨b fromString￨b (￨b target￨b .￨b asString￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f }￨d
public￨d class￨d CharSetUtilsTest￨d {￨d @￨f Test￨f public￨f void￨f testConstructor￨f (￨f )￨f {￨f assertNotNull￨e (￨e new￨e CharSetUtils￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b Constructor￨b <￨b ?￨b >￨b [￨b ]￨b cons￨b =￨b CharSetUtils￨b .￨b class￨b .￨b getDeclaredConstructors￨b (￨b )￨b ;￨b <END_BUG>￨b assertEquals￨e (￨e 1￨e ,￨e cons￨e .￨e length￨e )￨e ;￨e assertTrue￨e (￨e Modifier￨e .￨e isPublic￨e (￨e cons￨e [￨e 0￨e ]￨e .￨e getModifiers￨e (￨e )￨e )￨e )￨e ;￨e assertTrue￨e (￨e Modifier￨e .￨e isPublic￨e (￨e CharSetUtils￨e .￨e class￨e .￨e getModifiers￨e (￨e )￨e )￨e )￨e ;￨e assertFalse￨e (￨e Modifier￨e .￨e isFinal￨e (￨e CharSetUtils￨e .￨e class￨e .￨e getModifiers￨e (￨e )￨e )￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testSqueeze_StringString￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSqueeze_StringStringarray￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testCount_StringString￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testCount_StringStringarray￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testKeep_StringString￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testKeep_StringStringarray￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDelete_StringString￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDelete_StringStringarray￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ContainsSelector￨d extends￨d BaseExtendSelector￨d implements￨d ResourceSelector￨d {￨d private￨e String￨e contains￨e =￨e null￨e ;￨e private￨e boolean￨e casesensitive￨e =￨e true￨e ;￨e private￨e boolean￨e ignorewhitespace￨e =￨e false￨e ;￨e public￨e static￨e final￨e String￨e EXPRESSION_KEY￨e =￨e "expression"￨e ;￨e public￨e static￨e final￨e String￨e CONTAINS_KEY￨e =￨e "text"￨e ;￨e public￨e static￨e final￨e String￨e CASE_KEY￨e =￨e "casesensitive"￨e ;￨e public￨e static￨e final￨e String￨e WHITESPACE_KEY￨e =￨e "ignorewhitespace"￨e ;￨e public￨f ContainsSelector￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p contains￨p )￨f {￨f }￨f public￨f void￨f setCasesensitive￨f (￨f boolean￨p casesensitive￨p )￨f {￨f }￨f public￨f void￨f setIgnorewhitespace￨f (￨f boolean￨p ignorewhitespace￨p )￨f {￨f }￨f public￨f void￨f setParameters￨f (￨f Parameter￨p [￨p ]￨p parameters￨p )￨f {￨f }￨f public￨f void￨f verifySettings￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSelected￨f (￨f File￨p basedir￨p ,￨p String￨p filename￨p ,￨p File￨p file￨p )￨f {￨f }￨f public￨f boolean￨f isSelected￨f (￨f Resource￨p r￨p )￨f {￨f validate￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b r￨b .￨b isDirectory￨b (￨b )￨b )￨b {￨b <END_BUG>￨b return￨e true￨e ;￨e }￨e String￨e userstr￨e =￨e contains￨e ;￨e if￨j (￨j !￨c (￨c casesensitive￨c )￨c )￨j {￨j userstr￨e =￨e contains￨e .￨e toLowerCase￨e (￨e )￨e ;￨e }￨j if￨j (￨j ignorewhitespace￨c )￨j {￨j userstr￨e =￨e SelectorUtils￨e .￨e removeWhitespace￨e (￨e userstr￨e )￨e ;￨e }￨j BufferedReader￨e in￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f in￨e =￨e new￨e BufferedReader￨e (￨e new￨e InputStreamReader￨e (￨e r￨e .￨e getInputStream￨e (￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e org￨e .￨e apache￨e .￨e tools￨e .￨e ant￨e .￨e BuildException￨e (￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>InputStream<seq2seq4repair_space>from<seq2seq4repair_space>"￨e +￨e (￨e r￨e .￨e toLongString￨e (￨e )￨e )￨e )￨e ,￨e e￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f String￨e teststr￨e =￨e in￨e .￨e readLine￨e (￨e )￨e ;￨e while￨l (￨l teststr￨c !=￨c null￨c )￨l {￨l if￨j (￨j !￨c (￨c casesensitive￨c )￨c )￨j {￨j teststr￨e =￨e teststr￨e .￨e toLowerCase￨e (￨e )￨e ;￨e }￨j if￨j (￨j ignorewhitespace￨c )￨j {￨j teststr￨e =￨e SelectorUtils￨e .￨e removeWhitespace￨e (￨e teststr￨e )￨e ;￨e }￨j if￨j (￨j (￨c teststr￨c .￨c indexOf￨c (￨c userstr￨c )￨c )￨c >￨c (￨c -￨c 1￨c )￨c )￨j {￨j return￨e true￨e ;￨e }￨j teststr￨e =￨e in￨e .￨e readLine￨e (￨e )￨e ;￨e }￨l return￨e false￨e ;￨e }￨f catch￨f (￨f IOException￨p ioe￨p )￨f {￨f throw￨e new￨e org￨e .￨e apache￨e .￨e tools￨e .￨e ant￨e .￨e BuildException￨e (￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>"￨e +￨e (￨e r￨e .￨e toLongString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f FileUtils￨e .￨e close￨e (￨e in￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d ParameterizedTypeBinding￨d extends￨d ReferenceBinding￨d implements￨d Substitution￨d {￨d public￨e ReferenceBinding￨e type￨e ;￨e public￨e TypeBinding￨e [￨e ]￨e arguments￨e ;￨e public￨e LookupEnvironment￨e environment￨e ;￨e public￨e char￨e [￨e ]￨e genericTypeSignature￨e ;￨e public￨e ReferenceBinding￨e superclass￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e superInterfaces￨e ;￨e public￨e FieldBinding￨e [￨e ]￨e fields￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e memberTypes￨e ;￨e public￨e MethodBinding￨e [￨e ]￨e methods￨e ;￨e public￨e ReferenceBinding￨e enclosingType￨e ;￨e public￨f ParameterizedTypeBinding￨f (￨f ReferenceBinding￨p type￨p ,￨p TypeBinding￨p [￨p ]￨p arguments￨p ,￨p ReferenceBinding￨p enclosingType￨p ,￨p LookupEnvironment￨p environment￨p )￨f {￨f }￨f public￨f void￨f collectSubstitutes￨f (￨f TypeBinding￨p otherType￨p ,￨p Map￨p substitutes￨p )￨f {￨f }￨f public￨f void￨f computeId￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f constantPoolName￨f (￨f )￨f {￨f }￨f public￨f String￨f debugName￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f enclosingType￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f erasure￨f (￨f )￨f {￨f }￨f public￨f int￨f fieldCount￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f [￨f ]￨f fields￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f genericTypeSignature￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f getExactConstructor￨f (￨f TypeBinding￨p [￨p ]￨p argumentTypes￨p )￨f {￨f }￨f public￨f MethodBinding￨f getExactMethod￨f (￨f char￨p [￨p ]￨p selector￨p ,￨p TypeBinding￨p [￨p ]￨p argumentTypes￨p )￨f {￨f }￨f public￨f FieldBinding￨f getField￨f (￨f char￨p [￨p ]￨p fieldName￨p ,￨p boolean￨p needResolve￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f getMemberType￨f (￨f char￨p [￨p ]￨p typeName￨p )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f getMethods￨f (￨f char￨p [￨p ]￨p selector￨p )￨f {￨f }￨f public￨f boolean￨f implementsMethod￨f (￨f MethodBinding￨p method￨p )￨f {￨f }￨f void￨f initialize￨f (￨f ReferenceBinding￨p someType￨p ,￨p TypeBinding￨p [￨p ]￨p someArguments￨p )￨f {￨f this￨e .￨e type￨e =￨e someType￨e ;￨e this￨e .￨e sourceName￨e =￨e someType￨e .￨e sourceName￨e ;￨e this￨e .￨e compoundName￨e =￨e someType￨e .￨e compoundName￨e ;￨e this￨e .￨e fPackage￨e =￨e someType￨e .￨e fPackage￨e ;￨e this￨e .￨e fileName￨e =￨e someType￨e .￨e fileName￨e ;￨e this￨e .￨e modifiers￨e =￨e (￨e (￨e someType￨e .￨e modifiers￨e )￨e |￨e (￨e AccGenericSignature￨e )￨e )￨e |￨e (￨e AccUnresolved￨e )￨e ;￨e if￨j (￨j someArguments￨c !=￨c null￨c )￨j {￨j this￨e .￨e arguments￨e =￨e someArguments￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c length￨c =￨c someArguments￨c .￨c length￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l TypeBinding￨e someArgument￨e =￨e someArguments￨e [￨e i￨e ]￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b !￨b (￨b someArgument￨b .￨b isWildcard￨b (￨b )￨b )￨b )￨b ||￨b (￨b !￨b (￨b (￨b (￨b WildcardBinding￨b )￨b (￨b someArgument￨b )￨b )￨b .￨b isEquivalentToUnboundWildcard￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b this￨e .￨e tagBits￨e |=￨e IsBoundParameterizedType￨e ;￨e }￨e this￨e .￨e tagBits￨e |=￨e (￨e someArgument￨e .￨e tagBits￨e )￨e &￨e (￨e (￨e HasTypeVariable￨e )￨e |￨e (￨e HasWildcard￨e )￨e )￨e ;￨e }￨l }￨j this￨e .￨e tagBits￨e |=￨e (￨e someType￨e .￨e tagBits￨e )￨e &￨e (￨e (￨e (￨e IsLocalType￨e )￨e |￨e (￨e IsMemberType￨e )￨e )￨e |￨e (￨e IsNestedType￨e )￨e )￨e ;￨e }￨f protected￨f void￨f initializeArguments￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEquivalentTo￨f (￨f TypeBinding￨p otherType￨p )￨f {￨f }￨f public￨f boolean￨f isParameterizedType￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f memberTypes￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f methods￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f qualifiedSourceName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f readableName￨f (￨f )￨f {￨f }￨f ReferenceBinding￨f resolve￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f shortReadableName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f signature￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f sourceName￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f substitute￨f (￨f TypeBinding￨p originalType￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f superclass￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f superInterfaces￨f (￨f )￨f {￨f }￨f public￨f void￨f swapUnresolved￨f (￨f UnresolvedReferenceBinding￨p unresolvedType￨p ,￨p ReferenceBinding￨p resolvedType￨p ,￨p LookupEnvironment￨p env￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f syntheticEnclosingInstanceTypes￨f (￨f )￨f {￨f }￨f public￨f SyntheticArgumentBinding￨f [￨f ]￨f syntheticOuterLocalVariables￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f leafComponentType￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f qualifiedPackageName￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d XMLFormatter￨d extends￨d BaseStreamFormatter￨d {￨d public￨e static￨e final￨e String￨e TESTSUITES￨e =￨e "testsuites"￨e ;￨e public￨e static￨e final￨e String￨e TESTSUITE￨e =￨e "testsuite"￨e ;￨e public￨e static￨e final￨e String￨e TESTCASE￨e =￨e "testcase"￨e ;￨e public￨e static￨e final￨e String￨e ERROR￨e =￨e "error"￨e ;￨e public￨e static￨e final￨e String￨e FAILURE￨e =￨e "failure"￨e ;￨e public￨e static￨e final￨e String￨e SYSTEM_ERR￨e =￨e "system-err"￨e ;￨e public￨e static￨e final￨e String￨e SYSTEM_OUT￨e =￨e "system-out"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_PACKAGE￨e =￨e "package"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_NAME￨e =￨e "name"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_TIME￨e =￨e "time"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_ERRORS￨e =￨e "errors"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_FAILURES￨e =￨e "failures"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_TESTS￨e =￨e "tests"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_TYPE￨e =￨e "type"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_MESSAGE￨e =￨e "message"￨e ;￨e public￨e static￨e final￨e String￨e PROPERTIES￨e =￨e "properties"￨e ;￨e public￨e static￨e final￨e String￨e PROPERTY￨e =￨e "property"￨e ;￨e public￨e static￨e final￨e String￨e ATTR_VALUE￨e =￨e "value"￨e ;￨e private￨e Document￨e doc￨e =￨e XMLFormatter￨e .￨e getDocumentBuilder￨e (￨e )￨e .￨e newDocument￨e (￨e )￨e ;￨e private￨e Element￨e rootElement￨e =￨e doc￨e .￨e createElement￨e (￨e XMLFormatter￨e .￨e TESTSUITE￨e )￨e ;￨e private￨e Hashtable￨e testElements￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e private￨e Hashtable￨e testStarts￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e public￨f void￨f onTestStarted￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f onTestEnded￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f onTestFailure￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f <START_BUG>￨b String￨b type￨b =￨b (￨b (￨b evt￨b ==￨b (￨b evt￨b .￨b getType￨b (￨b )￨b )￨b )￨b ==￨b (￨b TestRunEvent￨b .￨b TEST_FAILURE￨b )￨b )￨b ?￨b XMLFormatter￨b .￨b FAILURE￨b :￨b XMLFormatter￨b .￨b ERROR￨b ;￨b <END_BUG>￨b Element￨e nested￨e =￨e doc￨e .￨e createElement￨e (￨e type￨e )￨e ;￨e Element￨e currentTest￨e =￨e (￨e (￨e Element￨e )￨e (￨e testElements￨e .￨e get￨e (￨e evt￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e ;￨e currentTest￨e .￨e appendChild￨e (￨e nested￨e )￨e ;￨e String￨e [￨e ]￨e args￨e =￨e XMLFormatter￨e .￨e parseFirstLine￨e (￨e evt￨e .￨e getStackTrace￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c (￨c args￨c [￨c 1￨c ]￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c args￨c [￨c 1￨c ]￨c .￨c length￨c (￨c )￨c )￨c >￨c 0￨c )￨c )￨j {￨j nested￨e .￨e setAttribute￨e (￨e XMLFormatter￨e .￨e ATTR_MESSAGE￨e ,￨e args￨e [￨e 1￨e ]￨e )￨e ;￨e }￨j nested￨e .￨e setAttribute￨e (￨e XMLFormatter￨e .￨e ATTR_TYPE￨e ,￨e args￨e [￨e 0￨e ]￨e )￨e ;￨e Text￨e text￨e =￨e doc￨e .￨e createTextNode￨e (￨e evt￨e .￨e getStackTrace￨e (￨e )￨e )￨e ;￨e nested￨e .￨e appendChild￨e (￨e text￨e )￨e ;￨e super￨e .￨e onTestFailure￨e (￨e evt￨e )￨e ;￨e removeEvent￨e (￨e evt￨e )￨e ;￨e }￨f protected￨f void￨f removeEvent￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f onRunStarted￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f onRunEnded￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f public￨f void￨f onRunStopped￨f (￨f TestRunEvent￨p evt￨p )￨f {￨f }￨f protected￨f void￨f close￨f (￨f )￨f {￨f }￨f private￨f static￨f DocumentBuilder￨f getDocumentBuilder￨f (￨f )￨f {￨f }￨f protected￨f static￨f String￨f [￨f ]￨f parseFirstLine￨f (￨f String￨p trace￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d PortletApplication￨d extends￨d Application￨d implements￨d ISessionFactory￨d {￨d private￨e String￨e applicationKey￨e ;￨e private￨e IRequestCycleProcessor￨e requestCycleProcessor￨e ;￨e private￨e IRequestCycleProcessor￨e actionRequestCycleProcessor￨e ;￨e private￨e String￨e sessionAttributePrefix￨e ;￨e private￨e ISessionFactory￨e sessionFactory￨e =￨e this￨e ;￨e private￨e RequestLogger￨e requestLogger￨e ;￨e WicketPortlet￨e portlet￨e ;￨e public￨f void￨f setWicketPortlet￨f (￨f WicketPortlet￨p portlet￨p )￨f {￨f }￨f public￨f WicketPortletSession￨f getSession￨f (￨f final￨p WicketPortletRequest￨p request￨p )￨f {￨f ISessionStore￨e sessionStore￨e =￨e getSessionStore￨e (￨e )￨e ;￨e Session￨e session￨e =￨e sessionStore￨e .￨e lookup￨e (￨e request￨e )￨e ;￨e if￨j (￨j session￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b session￨b =￨b getSessionFactory￨b (￨b )￨b .￨b newSession￨b (￨b request￨b )￨b ;￨b <END_BUG>￨b session￨e .￨e setLocale￨e (￨e request￨e .￨e getLocale￨e (￨e )￨e )￨e ;￨e sessionStore￨e .￨e bind￨e (￨e request￨e ,￨e session￨e )￨e ;￨e }￨j WicketPortletSession￨e webSession￨e ;￨e if￨j (￨j session￨c instanceof￨c WicketPortletSession￨c )￨j {￨j webSession￨e =￨e (￨e (￨e WicketPortletSession￨e )￨e (￨e session￨e )￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e WicketRuntimeException￨e (￨e (￨e "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>PortletApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>"￨e +￨e "must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>PortletSession"￨e )￨e )￨e ;￨e }￨j session￨e .￨e setApplication￨e (￨e this￨e )￨e ;￨e webSession￨e .￨e initForRequest￨e (￨e )￨e ;￨e return￨e webSession￨e ;￨e }￨f public￨f WicketPortletResponse￨f newPortletResponse￨f (￨f final￨p PortletResponse￨p res￨p )￨f {￨f }￨f public￨f WicketPortletRequest￨f newPortletRequest￨f (￨f PortletRequest￨p req￨p )￨f {￨f }￨f public￨f String￨f getApplicationKey￨f (￨f )￨f {￨f }￨f protected￨f ISessionFactory￨f getSessionFactory￨f (￨f )￨f {￨f }￨f protected￨f ISessionStore￨f newSessionStore￨f (￨f )￨f {￨f }￨f public￨f Session￨f newSession￨f (￨f )￨f {￨f }￨f public￨f void￨f initPortlet￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalInit￨f (￨f )￨f {￨f }￨f public￨f void￨f destroyPortlet￨f (￨f )￨f {￨f }￨f protected￨f IRequestCycleFactory￨f getDefaultRequestCycleFactory￨f (￨f )￨f {￨f }￨f protected￨f IRequestCycleProcessor￨f newRenderRequestCycleProcessor￨f (￨f )￨f {￨f }￨f protected￨f IRequestCycleProcessor￨f newActionRequestCycleProcessor￨f (￨f )￨f {￨f }￨f public￨f IRequestCycleProcessor￨f getActionRequestCycleProcessor￨f (￨f )￨f {￨f }￨f protected￨f final￨f IRequestCycleProcessor￨f getRenderRequestCycleProcessor￨f (￨f )￨f {￨f }￨f public￨f final￨f RequestLogger￨f getRequestLogger￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setRequestLogger￨f (￨f RequestLogger￨p logger￨p )￨f {￨f }￨f void￨f sessionDestroyed￨f (￨f String￨p sessionId￨p )￨f {￨f }￨f public￨f final￨f String￨f getSessionAttributePrefix￨f (￨f final￨p WicketPortletRequest￨p request￨p )￨f {￨f }￨f }￨d
public￨d class￨d ModeOptionPane￨d extends￨d AbstractOptionPane￨d {￨d public￨f ModeOptionPane￨f (￨f )￨f {￨f }￨f protected￨f void￨f _init￨f (￨f )￨f {￨f Mode￨e [￨e ]￨e modes￨e =￨e jEdit￨e .￨e getModes￨e (￨e )￨e ;￨e String￨e [￨e ]￨e modeNames￨e =￨e new￨e String￨e [￨e modes￨e .￨e length￨e ]￨e ;￨e modeProps￨e =￨e new￨e ModeOptionPane￨e .￨e ModeProperties￨e [￨e modes￨e .￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c modes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l modeProps￨e [￨e i￨e ]￨e =￨e new￨e ModeOptionPane￨e .￨e ModeProperties￨e (￨e modes￨e [￨e i￨e ]￨e )￨e ;￨e modeNames￨e [￨e i￨e ]￨e =￨e modes￨e [￨e i￨e ]￨e .￨e getName￨e (￨e )￨e ;￨e }￨l mode￨e =￨e new￨e JComboBox￨e (￨e modeNames￨e )￨e ;￨e mode￨e .￨e addActionListener￨e (￨e new￨e ModeOptionPane￨e .￨e ActionHandler￨e (￨e )￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.mode.mode"￨e )￨e ,￨e mode￨e )￨e ;￨e useDefaults￨e =￨e new￨e JCheckBox￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.mode.useDefaults"￨e )￨e )￨e ;￨e useDefaults￨e .￨e addActionListener￨e (￨e new￨e ModeOptionPane￨e .￨e ActionHandler￨e (￨e )￨e )￨e ;￨e addComponent￨e (￨e useDefaults￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.mode.filenameGlob"￨e )￨e ,￨e (￨e filenameGlob￨e =￨e new￨e JTextField￨e (￨e )￨e )￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.mode.firstlineGlob"￨e )￨e ,￨e (￨e firstlineGlob￨e =￨e new￨e JTextField￨e (￨e )￨e )￨e )￨e ;￨e String￨f [￨f ]￨f tabSizes￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.tabSize"￨e )￨e ,￨e (￨e tabSize￨e =￨e new￨e JComboBox￨e (￨e tabSizes￨e )￨e )￨e )￨e ;￨e tabSize￨e .￨e setEditable￨e (￨e true￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.indentSize"￨e )￨e ,￨e (￨e indentSize￨e =￨e new￨e JComboBox￨e (￨e tabSizes￨e )￨e )￨e )￨e ;￨e indentSize￨e .￨e setEditable￨e (￨e true￨e )￨e ;￨e String￨f [￨f ]￨f lineLens￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.maxLineLen"￨e )￨e ,￨e (￨e maxLineLen￨e =￨e new￨e JComboBox￨e (￨e lineLens￨e )￨e )￨e )￨e ;￨e maxLineLen￨e .￨e setEditable￨e (￨e true￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.wordBreakChars"￨e )￨e ,￨e (￨e wordBreakChars￨e =￨e new￨e JTextField￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b addComponent￨b (￨b jEdit￨b .￨b getProperty￨b (￨b "options.mode.noWordSep"￨b )￨b ,￨b (￨b noWordSep￨b =￨b new￨b JTextField￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b String￨f [￨f ]￨f foldModes￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.folding"￨e )￨e ,￨e (￨e folding￨e =￨e new￨e JComboBox￨e (￨e foldModes￨e )￨e )￨e )￨e ;￨e addComponent￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.collapseFolds"￨e )￨e ,￨e (￨e collapseFolds￨e =￨e new￨e JTextField￨e (￨e )￨e )￨e )￨e ;￨e addComponent￨e (￨e (￨e indentOnTab￨e =￨e new￨e JCheckBox￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.indentOnTab"￨e )￨e )￨e )￨e )￨e ;￨e addComponent￨e (￨e (￨e indentOnEnter￨e =￨e new￨e JCheckBox￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.indentOnEnter"￨e )￨e )￨e )￨e )￨e ;￨e addComponent￨e (￨e (￨e noTabs￨e =￨e new￨e JCheckBox￨e (￨e jEdit￨e .￨e getProperty￨e (￨e "options.editing.noTabs"￨e )￨e )￨e )￨e )￨e ;￨e selectMode￨e (￨e )￨e ;￨e }￨f protected￨f void￨f _save￨f (￨f )￨f {￨f }￨f private￨e ModeOptionPane￨e .￨e ModeProperties￨e [￨e ]￨e modeProps￨e ;￨e private￨e ModeOptionPane￨e .￨e ModeProperties￨e current￨e ;￨e private￨e JComboBox￨e mode￨e ;￨e private￨e JCheckBox￨e useDefaults￨e ;￨e private￨e JTextField￨e filenameGlob￨e ;￨e private￨e JTextField￨e firstlineGlob￨e ;￨e private￨e JComboBox￨e tabSize￨e ;￨e private￨e JComboBox￨e indentSize￨e ;￨e private￨e JComboBox￨e maxLineLen￨e ;￨e private￨e JTextField￨e wordBreakChars￨e ;￨e private￨e JTextField￨e noWordSep￨e ;￨e private￨e JComboBox￨e folding￨e ;￨e private￨e JTextField￨e collapseFolds￨e ;￨e private￨e JCheckBox￨e noTabs￨e ;￨e private￨e JCheckBox￨e indentOnTab￨e ;￨e private￨e JCheckBox￨e indentOnEnter￨e ;￨e private￨f void￨f saveMode￨f (￨f )￨f {￨f }￨f private￨f void￨f selectMode￨f (￨f )￨f {￨f }￨f private￨f void￨f updateEnabled￨f (￨f )￨f {￨f }￨f class￨d ActionHandler￨d implements￨d ActionListener￨d {￨d public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p evt￨p )￨f {￨f }￨f }￨d class￨d ModeProperties￨d {￨d Mode￨e mode￨e ;￨e boolean￨e edited￨e ;￨e boolean￨e loaded￨e ;￨e boolean￨e useDefaults￨e ;￨e String￨e filenameGlob￨e ;￨e String￨e firstlineGlob￨e ;￨e String￨e tabSize￨e ;￨e String￨e indentSize￨e ;￨e String￨e maxLineLen￨e ;￨e String￨e wordBreakChars￨e ;￨e String￨e noWordSep￨e ;￨e String￨e folding￨e ;￨e String￨e collapseFolds￨e ;￨e boolean￨e noTabs￨e ;￨e boolean￨e indentOnTab￨e ;￨e boolean￨e indentOnEnter￨e ;￨e ModeProperties￨f (￨f Mode￨p mode￨p )￨f {￨f }￨f void￨f load￨f (￨f )￨f {￨f }￨f void￨f save￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d MethodAnnotationAggregator￨d {￨d private￨d static￨d final￨d Logger￨d logger￨d =￨d Logger￨d .￨d getLogger￨d (￨d MethodAnnotationAggregator￨d .￨d class￨d )￨d ;￨d public￨d static￨d <￨d A￨d extends￨d Annotation￨d ,￨d T￨d >￨d RuntimeAnnotationInformation￨d <￨d T￨d >￨d runtimeAnnotationInformation￨d (￨d final￨d Class￨d <￨d ?￨d >￨d componentClass￨d ,￨d final￨d EEApplicationClasses￨d applicationClasses￨d ,￨d final￨d DeploymentReflectionIndex￨d index￨d ,￨d final￨d Class￨d <￨d A￨d >￨d annotationType￨d )￨d {￨d final￨e HashSet￨e <￨e MethodIdentifier￨e >￨e methodIdentifiers￨e =￨e new￨e HashSet￨e <￨e MethodIdentifier￨e >￨e (￨e )￨e ;￨e final￨e Map￨e <￨e Method￨e ,￨e List￨e <￨e T￨e >￨e >￨e methods￨e =￨e new￨e HashMap￨e <￨e Method￨e ,￨e List￨e <￨e T￨e >￨e >￨e (￨e )￨e ;￨e final￨e Map￨e <￨e String￨e ,￨e List￨e <￨e T￨e >￨e >￨e classAnnotations￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e List￨e <￨e T￨e >￨e >￨e (￨e )￨e ;￨e Class￨e <￨e ?￨e >￨e c￨e =￨e componentClass￨e ;￨e while￨l (￨l (￨c c￨c !=￨c null￨c )￨c &&￨c (￨c c￨c !=￨c (￨c Object￨c .￨c class￨c )￨c )￨c )￨l {￨l final￨e ClassReflectionIndex￨e <￨e ?￨e >￨e classIndex￨e =￨e index￨e .￨e getClassIndex￨e (￨e c￨e )￨e ;￨e final￨e EEModuleClassDescription￨e description￨e =￨e applicationClasses￨e .￨e getClassByName￨e (￨e c￨e .￨e getName￨e (￨e )￨e )￨e ;￨e if￨j (￨j description￨c !=￨c null￨c )￨j {￨j ClassAnnotationInformation￨e <￨e A￨e ,￨e T￨e >￨e annotationData￨e =￨e description￨e .￨e getAnnotationInformation￨e (￨e annotationType￨e )￨e ;￨e if￨j (￨j annotationData￨c !=￨c null￨c )￨j {￨j if￨j (￨j !￨c (￨c annotationData￨c .￨c getClassLevelAnnotations￨c (￨c )￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j classAnnotations￨e .￨e put￨e (￨e c￨e .￨e getName￨e (￨e )￨e ,￨e annotationData￨e .￨e getClassLevelAnnotations￨e (￨e )￨e )￨e ;￨e }￨j for￨l (￨l Map￨c .￨c Entry￨c <￨c MethodIdentifier￨c ,￨c List￨c <￨c T￨c >￨c >￨c entry￨c :￨c annotationData￨c .￨c getMethodLevelAnnotations￨c (￨c )￨c .￨c entrySet￨c (￨c )￨c )￨l {￨l final￨e Method￨e method￨e =￨e classIndex￨e .￨e getMethod￨e (￨e entry￨e .￨e getKey￨e (￨e )￨e )￨e ;￨e if￨j (￨j method￨c !=￨c null￨c )￨j {￨j if￨j (￨j (￨c Modifier￨c .￨c isPrivate￨c (￨c method￨c .￨c getModifiers￨c (￨c )￨c )￨c )￨c ||￨c (￨c !￨c (￨c methodIdentifiers￨c .￨c contains￨c (￨c entry￨c .￨c getKey￨c (￨c )￨c )￨c )￨c )￨c )￨j {￨j methods￨e .￨e put￨e (￨e method￨e ,￨e entry￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j <START_BUG>￨b MethodAnnotationAggregator￨b .￨b logger￨b .￨b error￨b (￨b (￨b (￨b (￨b (￨b (￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>method<seq2seq4repair_space>"￨b +￨b (￨b entry￨b .￨b getKey￨b (￨b )￨b )￨b )￨b +￨b "<seq2seq4repair_space>on<seq2seq4repair_space>class<seq2seq4repair_space>"￨b )￨b +￨b c￨b )￨b +￨b "<seq2seq4repair_space>with<seq2seq4repair_space>annotations<seq2seq4repair_space>"￨b )￨b +￨b (￨b entry￨b .￨b getValue￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l }￨j }￨j for￨l (￨l Method￨c method￨c :￨c classIndex￨c .￨c getMethods￨c (￨c )￨c )￨l {￨l if￨j (￨j !￨c (￨c Modifier￨c .￨c isPrivate￨c (￨c method￨c .￨c getModifiers￨c (￨c )￨c )￨c )￨c )￨j {￨j methodIdentifiers￨e .￨e add￨e (￨e MethodIdentifier￨e .￨e getIdentifierForMethod￨e (￨e method￨e )￨e )￨e ;￨e }￨j }￨l c￨e =￨e c￨e .￨e getSuperclass￨e (￨e )￨e ;￨e }￨l return￨e new￨e RuntimeAnnotationInformation￨e <￨e T￨e >￨e (￨e classAnnotations￨e ,￨e methods￨e )￨e ;￨e }￨d public￨f static￨f <￨f A￨f extends￨f Annotation￨f ,￨f T￨f >￨f Set￨f <￨f Method￨f >￨f runtimeAnnotationPresent￨f (￨f final￨p Class￨p <￨p ?￨p >￨p componentClass￨p ,￨p final￨p EEApplicationClasses￨p applicationClasses￨p ,￨p final￨p DeploymentReflectionIndex￨p index￨p ,￨p final￨p Class￨p <￨p A￨p >￨p annotationType￨p )￨f {￨f }￨f }￨d
public￨d class￨d StormSubmitter￨d {￨d public￨d static￨d Logger￨d LOG￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d StormSubmitter￨d .￨d class￨d )￨d ;￨d private￨d static￨d Iface￨d localNimbus￨d =￨d null￨d ;￨d public￨d static￨d void￨d setLocalNimbus￨d (￨d Nimbus￨d .￨d Iface￨d localNimbusHandler￨d )￨d {￨d }￨d public￨f static￨f void￨f submitTopology￨f (￨f String￨f name￨f ,￨f Map￨f stormConf￨f ,￨f StormTopology￨f topology￨f )￨f throws￨f AlreadyAliveException￨f ,￨f InvalidTopologyException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f submitTopology￨f (￨f String￨f name￨f ,￨f Map￨f stormConf￨f ,￨f StormTopology￨f topology￨f ,￨f SubmitOptions￨f opts￨f )￨f throws￨f AlreadyAliveException￨f ,￨f InvalidTopologyException￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c Utils￨c .￨c isValidConf￨c (￨c stormConf￨c )￨c )￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "Storm<seq2seq4repair_space>conf<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>valid.<seq2seq4repair_space>Must<seq2seq4repair_space>be<seq2seq4repair_space>json-serializable"￨e )￨e ;￨e }￨j stormConf￨e =￨e new￨e HashMap￨e (￨e stormConf￨e )￨e ;￨e stormConf￨e .￨e putAll￨e (￨e Utils￨e .￨e readCommandLineOpts￨e (￨e )￨e )￨e ;￨e Map￨e conf￨e =￨e Utils￨e .￨e readStormConfig￨e (￨e )￨e ;￨e conf￨e .￨e putAll￨e (￨e stormConf￨e )￨e ;￨e try￨f (￨f )￨f {￨f String￨e serConf￨e =￨e JSONValue￨e .￨e toJSONString￨e (￨e stormConf￨e )￨e ;￨e if￨j (￨j (￨c StormSubmitter￨c .￨c localNimbus￨c )￨c !=￨c null￨c )￨j {￨j StormSubmitter￨e .￨e LOG￨e .￨e info￨e (￨e (￨e (￨e "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨e +￨e name￨e )￨e +￨e "<seq2seq4repair_space>in<seq2seq4repair_space>local<seq2seq4repair_space>mode"￨e )￨e )￨e ;￨e StormSubmitter￨e .￨e localNimbus￨e .￨e submitTopology￨e (￨e name￨e ,￨e null￨e ,￨e serConf￨e ,￨e topology￨e )￨e ;￨e }￨j else￨j {￨j NimbusClient￨e client￨e =￨e NimbusClient￨e .￨e getConfiguredClient￨e (￨e conf￨e )￨e ;￨e if￨j (￨j StormSubmitter￨c .￨c topologyNameExists￨c (￨c conf￨c ,￨c name￨c )￨c )￨j {￨j throw￨e new￨e RuntimeException￨e (￨e (￨e (￨e "Topology<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>`"￨e +￨e name￨e )￨e +￨e "`<seq2seq4repair_space>already<seq2seq4repair_space>exists<seq2seq4repair_space>on<seq2seq4repair_space>cluster"￨e )￨e )￨e ;￨e }￨j StormSubmitter￨e .￨e submitJar￨e (￨e conf￨e )￨e ;￨e try￨f (￨f )￨f {￨f StormSubmitter￨e .￨e LOG￨e .￨e info￨e (￨e (￨e (￨e (￨e "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨e +￨e name￨e )￨e +￨e "<seq2seq4repair_space>in<seq2seq4repair_space>distributed<seq2seq4repair_space>mode<seq2seq4repair_space>with<seq2seq4repair_space>conf<seq2seq4repair_space>"￨e )￨e +￨e serConf￨e )￨e )￨e ;￨e if￨j (￨j opts￨c !=￨c null￨c )￨j {￨j client￨e .￨e getClient￨e (￨e )￨e .￨e submitTopologyWithOpts￨e (￨e name￨e ,￨e StormSubmitter￨e .￨e submittedJar￨e ,￨e serConf￨e ,￨e topology￨e ,￨e opts￨e )￨e ;￨e }￨j else￨j {￨j client￨e .￨e getClient￨e (￨e )￨e .￨e submitTopology￨e (￨e name￨e ,￨e StormSubmitter￨e .￨e submittedJar￨e ,￨e serConf￨e ,￨e topology￨e )￨e ;￨e }￨j }￨f catch￨f (￨f InvalidTopologyException￨p e￨p )￨f {￨f <START_BUG>￨b StormSubmitter￨b .￨b LOG￨b .￨b warn￨b (￨b "Topology<seq2seq4repair_space>submission<seq2seq4repair_space>exception"￨b ,￨b e￨b )￨b ;￨b <END_BUG>￨b throw￨e e￨e ;￨e }￨f catch￨f (￨f AlreadyAliveException￨p e￨p )￨f {￨f StormSubmitter￨e .￨e LOG￨e .￨e warn￨e (￨e "Topology<seq2seq4repair_space>already<seq2seq4repair_space>alive<seq2seq4repair_space>exception"￨e ,￨e e￨e )￨e ;￨e throw￨e e￨e ;￨e }￨f finally￨f (￨f )￨f {￨f client￨e .￨e close￨e (￨e )￨e ;￨e }￨f }￨j StormSubmitter￨e .￨e LOG￨e .￨e info￨e (￨e (￨e "Finished<seq2seq4repair_space>submitting<seq2seq4repair_space>topology:<seq2seq4repair_space>"￨e +￨e name￨e )￨e )￨e ;￨e }￨f catch￨f (￨f TException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨f private￨f static￨f boolean￨f topologyNameExists￨f (￨f Map￨p conf￨p ,￨p String￨p name￨p )￨f {￨f }￨f private￨e static￨e String￨e submittedJar￨e =￨e null￨e ;￨e private￨f static￨f void￨f submitJar￨f (￨f Map￨p conf￨p )￨f {￨f }￨f public￨f static￨f String￨f submitJar￨f (￨f Map￨p conf￨p ,￨p String￨p localJar￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d IOUtils￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d IOUtils￨d .￨d class￨d )￨d ;￨d private￨d static￨d final￨d int￨d DEFAULT_BUFFER_SIZE￨d =￨d 1024￨d *￨d 4￨d ;￨d public￨d IOUtils￨d (￨d )￨d {￨d }￨d public￨f static￨f void￨f close￨f (￨f final￨f Closeable￨f closeable￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f closeQuietly￨f (￨f final￨p Closeable￨p closeable￨p )￨f {￨f }￨f public￨f static￨f byte￨f [￨f ]￨f toByteArray￨f (￨f final￨f InputStream￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f byte￨f [￨f ]￨f toByteArray￨f (￨f final￨f Reader￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f byte￨f [￨f ]￨f toByteArray￨f (￨f final￨f Reader￨f input￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f char￨f [￨f ]￨f toCharArray￨f (￨f final￨f InputStream￨f is￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f char￨f [￨f ]￨f toCharArray￨f (￨f final￨f InputStream￨f is￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f char￨f [￨f ]￨f toCharArray￨f (￨f final￨f Reader￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f toString￨f (￨f final￨f InputStream￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f toString￨f (￨f final￨f InputStream￨f input￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f toString￨f (￨f final￨f Reader￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f byte￨f [￨f ]￨f data￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f byte￨f [￨f ]￨f data￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f byte￨f [￨f ]￨f data￨f ,￨f final￨f Writer￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f char￨f [￨f ]￨f data￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f char￨f [￨f ]￨f data￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f char￨f [￨f ]￨f data￨f ,￨f final￨f OutputStream￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f String￨f data￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f String￨f data￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f String￨f data￨f ,￨f final￨f OutputStream￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f StringBuilder￨f data￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f StringBuilder￨f data￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f write￨f (￨f final￨f StringBuilder￨f data￨f ,￨f final￨f OutputStream￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f int￨f copy￨f (￨f final￨f InputStream￨f input￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f copy￨f (￨f final￨f InputStream￨f input￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f copy￨f (￨f final￨f InputStream￨f input￨f ,￨f final￨f Writer￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f int￨f copy￨f (￨f final￨f Reader￨f input￨f ,￨f final￨f Writer￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f copy￨f (￨f final￨f Reader￨f input￨f ,￨f final￨f OutputStream￨f output￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f copy￨f (￨f final￨f Reader￨f input￨f ,￨f final￨f OutputStream￨f output￨f ,￨f final￨f String￨f encoding￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f contentEquals￨f (￨f InputStream￨f input1￨f ,￨f InputStream￨f input2￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f contentEquals￨f (￨f Reader￨f input1￨f ,￨f Reader￨f input2￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Time￨f getLastModified￨f (￨f File￨p file￨p )￨f {￨f if￨j (￨j (￨c file￨c .￨c exists￨c (￨c )￨c )￨c ==￨c false￨c )￨j {￨j return￨e null￨e ;￨e }￨j long￨e millis￨e =￨e file￨e .￨e lastModified￨e (￨e )￨e ;￨e if￨j (￨j millis￨c ==￨c 0￨c )￨j {￨j return￨e null￨e ;￨e }￨j <START_BUG>￨b return￨b Time￨b .￨b valueOf￨b (￨b millis￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d ParameterizedSingleTypeReference￨d extends￨d ArrayTypeReference￨d {￨d public￨e TypeReference￨e [￨e ]￨e typeArguments￨e ;￨e private￨e boolean￨e didResolve￨e =￨e false￨e ;￨e public￨f ParameterizedSingleTypeReference￨f (￨f char￨p [￨p ]￨p name￨p ,￨p TypeReference￨p [￨p ]￨p typeArguments￨p ,￨p int￨p dim￨p ,￨p long￨p pos￨p )￨f {￨f }￨f public￨f void￨f checkBounds￨f (￨f Scope￨p scope￨p )￨f {￨f }￨f public￨f TypeReference￨f copyDims￨f (￨f int￨p dim￨p )￨f {￨f }￨f public￨f char￨f [￨f ]￨f [￨f ]￨f getParameterizedTypeName￨f (￨f )￨f {￨f }￨f protected￨f TypeBinding￨f getTypeBinding￨f (￨f Scope￨p scope￨p )￨f {￨f }￨f private￨f TypeBinding￨f internalResolveType￨f (￨f Scope￨p scope￨p ,￨p ReferenceBinding￨p enclosingType￨p ,￨p boolean￨p checkBounds￨p )￨f {￨f this￨e .￨e constant￨e =￨e Constant￨e .￨e NotAConstant￨e ;￨e if￨j (￨j this￨c .￨c didResolve￨c )￨j {￨j if￨j (￨j (￨c (￨c this￨c .￨c resolvedType￨c )￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c this￨c .￨c resolvedType￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j return￨e this￨e .￨e resolvedType￨e ;￨e }￨j this￨e .￨e didResolve￨e =￨e true￨e ;￨e if￨j (￨j enclosingType￨c ==￨c null￨c )￨j {￨j this￨e .￨e resolvedType￨e =￨e scope￨e .￨e getType￨e (￨e token￨e )￨e ;￨e if￨j (￨j !￨c (￨c this￨c .￨c resolvedType￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j reportInvalidType￨e (￨e scope￨e )￨e ;￨e return￨e null￨e ;￨e }￨j enclosingType￨e =￨e this￨e .￨e resolvedType￨e .￨e enclosingType￨e (￨e )￨e ;￨e if￨j (￨j (￨c enclosingType￨c !=￨c null￨c )￨c &&￨c (￨c enclosingType￨c .￨c isGenericType￨c (￨c )￨c )￨c )￨j {￨j ReferenceBinding￨e currentType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e this￨e .￨e resolvedType￨e )￨e )￨e ;￨e enclosingType￨e =￨e (￨e currentType￨e .￨e isStatic￨e (￨e )￨e )￨e ?￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e scope￨e .￨e environment￨e (￨e )￨e .￨e convertToRawType￨e (￨e enclosingType￨e )￨e )￨e )￨e :￨e scope￨e .￨e environment￨e (￨e )￨e .￨e convertToParameterizedType￨e (￨e enclosingType￨e )￨e ;￨e }￨j }￨j else￨j {￨j this￨e .￨e resolvedType￨e =￨e scope￨e .￨e getMemberType￨e (￨e token￨e ,￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e enclosingType￨e .￨e erasure￨e (￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c this￨c .￨c resolvedType￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e invalidEnclosingType￨e (￨e this￨e ,￨e this￨e .￨e resolvedType￨e ,￨e enclosingType￨e )￨e ;￨e return￨e null￨e ;￨e }￨j if￨j (￨j isTypeUseDeprecated￨c (￨c this￨c .￨c resolvedType￨c ,￨c scope￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e deprecatedType￨e (￨e this￨e .￨e resolvedType￨e ,￨e this￨e )￨e ;￨e }￨j }￨j boolean￨e isClassScope￨e =￨e (￨e scope￨e .￨e kind￨e )￨e ==￨e (￨e Scope￨e .￨e CLASS_SCOPE￨e )￨e ;￨e TypeReference￨e keep￨e =￨e null￨e ;￨e if￨j (￨j isClassScope￨c )￨j {￨j keep￨e =￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e .￨e superTypeReference￨e ;￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e .￨e superTypeReference￨e =￨e null￨e ;￨e }￨j ReferenceBinding￨e currentType￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e this￨e .￨e resolvedType￨e )￨e )￨e ;￨e int￨e argLength￨e =￨e this￨e .￨e typeArguments￨e .￨e length￨e ;￨e TypeBinding￨e [￨e ]￨e argTypes￨e =￨e new￨e TypeBinding￨e [￨e argLength￨e ]￨e ;￨e boolean￨e argHasError￨e =￨e false￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c argLength￨c ;￨c i￨c ++￨c )￨l {￨l TypeReference￨e typeArgument￨e =￨e this￨e .￨e typeArguments￨e [￨e i￨e ]￨e ;￨e TypeBinding￨e argType￨e =￨e (￨e isClassScope￨e )￨e ?￨e typeArgument￨e .￨e resolveTypeArgument￨e (￨e (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e ,￨e currentType￨e ,￨e i￨e )￨e :￨e typeArgument￨e .￨e resolveTypeArgument￨e (￨e (￨e (￨e BlockScope￨e )￨e (￨e scope￨e )￨e )￨e ,￨e currentType￨e ,￨e i￨e )￨e ;￨e if￨j (￨j argType￨c ==￨c null￨c )￨j {￨j argHasError￨e =￨e true￨e ;￨e }￨j else￨j {￨j argTypes￨e [￨e i￨e ]￨e =￨e argType￨e ;￨e }￨j }￨l if￨j (￨j argHasError￨c )￨j {￨j return￨e null￨e ;￨e }￨j if￨j (￨j isClassScope￨c )￨j {￨j (￨e (￨e ClassScope￨e )￨e (￨e scope￨e )￨e )￨e .￨e superTypeReference￨e =￨e keep￨e ;￨e if￨j (￨j (￨c (￨c ClassScope￨c )￨c (￨c scope￨c )￨c )￨c .￨c detectHierarchyCycle￨c (￨c currentType￨c ,￨c this￨c ,￨c argTypes￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j }￨j TypeVariableBinding￨e [￨e ]￨e typeVariables￨e =￨e currentType￨e .￨e typeVariables￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b typeVariables￨b ==￨b (￨b NoTypeVariables￨b )￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e nonGenericTypeCannotBeParameterized￨e (￨e this￨e ,￨e currentType￨e ,￨e argTypes￨e )￨e ;￨e return￨e null￨e ;￨e else￨j if￨j (￨j argLength￨c !=￨c (￨c typeVariables￨c .￨c length￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e incorrectArityForParameterizedType￨e (￨e this￨e ,￨e currentType￨e ,￨e argTypes￨e )￨e ;￨e return￨e null￨e ;￨e }￨j else￨j if￨j (￨j (￨c (￨c !￨c (￨c currentType￨c .￨c isStatic￨c (￨c )￨c )￨c )￨c &&￨c (￨c enclosingType￨c !=￨c null￨c )￨c )￨c &&￨c (￨c enclosingType￨c .￨c isRawType￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e rawMemberTypeCannotBeParameterized￨e (￨e this￨e ,￨e scope￨e .￨e environment￨e (￨e )￨e .￨e createRawType￨e (￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e currentType￨e .￨e erasure￨e (￨e )￨e )￨e )￨e ,￨e enclosingType￨e )￨e ,￨e argTypes￨e )￨e ;￨e return￨e null￨e ;￨e }￨j ParameterizedTypeBinding￨e parameterizedType￨e =￨e scope￨e .￨e environment￨e (￨e )￨e .￨e createParameterizedType￨e (￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e currentType￨e .￨e erasure￨e (￨e )￨e )￨e )￨e ,￨e argTypes￨e ,￨e enclosingType￨e )￨e ;￨e if￨j (￨j checkBounds￨c )￨j {￨j parameterizedType￨e .￨e boundCheck￨e (￨e scope￨e ,￨e this￨e .￨e typeArguments￨e )￨e ;￨e }￨j this￨e .￨e resolvedType￨e =￨e parameterizedType￨e ;￨e if￨j (￨j isTypeUseDeprecated￨c (￨c this￨c .￨c resolvedType￨c ,￨c scope￨c )￨c )￨j {￨j reportDeprecatedType￨e (￨e scope￨e )￨e ;￨e }￨j if￨j (￨j (￨c this￨c .￨c dimensions￨c )￨c >￨c 0￨c )￨j {￨j if￨j (￨j (￨c dimensions￨c )￨c >￨c 255￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e tooManyDimensions￨e (￨e this￨e )￨e ;￨e }￨j this￨e .￨e resolvedType￨e =￨e scope￨e .￨e createArrayType￨e (￨e this￨e .￨e resolvedType￨e ,￨e dimensions￨e )￨e ;￨e }￨j return￨e this￨e .￨e resolvedType￨e ;￨e }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p ,￨p boolean￨p checkBounds￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveTypeEnclosing￨f (￨f BlockScope￨p scope￨p ,￨p ReferenceBinding￨p enclosingType￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d SetClasspathOperation￨d extends￨d JavaModelOperation￨d {￨d IClasspathEntry￨e [￨e ]￨e oldResolvedPath￨e ;￨e IClasspathEntry￨e [￨e ]￨e newResolvedPath￨e ;￨e IClasspathEntry￨e [￨e ]￨e newRawPath￨e ;￨e boolean￨e canChangeResource￨e ;￨e boolean￨e needCycleCheck￨e ;￨e boolean￨e needValidation￨e ;￨e boolean￨e needSave￨e ;￨e IPath￨e newOutputLocation￨e ;￨e public￨e static￨e final￨e IClasspathEntry￨e [￨e ]￨e ReuseClasspath￨e =￨e new￨e IClasspathEntry￨e [￨e 0￨e ]￨e ;￨e public￨e static￨e final￨e IClasspathEntry￨e [￨e ]￨e UpdateClasspath￨e =￨e new￨e IClasspathEntry￨e [￨e 0￨e ]￨e ;￨e public￨e static￨e final￨e IPath￨e ReuseOutputLocation￨e =￨e new￨e Path￨e (￨e "Reuse<seq2seq4repair_space>Existing<seq2seq4repair_space>Output<seq2seq4repair_space>Location"￨e )￨e ;￨e public￨f SetClasspathOperation￨f (￨f IJavaProject￨p project￨p ,￨p IClasspathEntry￨p [￨p ]￨p oldResolvedPath￨p ,￨p IClasspathEntry￨p [￨p ]￨p newRawPath￨p ,￨p IPath￨p newOutputLocation￨p ,￨p boolean￨p canChangeResource￨p ,￨p boolean￨p needValidation￨p ,￨p boolean￨p needSave￨p )￨f {￨f }￨f protected￨f void￨f addClasspathDeltas￨f (￨f IPackageFragmentRoot￨p [￨p ]￨p roots￨p ,￨p int￨p flag￨p ,￨p JavaElementDelta￨p delta￨p )￨f {￨f }￨f protected￨f int￨f classpathContains￨f (￨f IClasspathEntry￨p [￨p ]￨p list￨p ,￨p IClasspathEntry￨p entry￨p )￨f {￨f }￨f protected￨f void￨f collectAllSubfolders￨f (￨f IFolder￨f folder￨f ,￨f ArrayList￨f collection￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f ArrayList￨f determineAffectedPackageFragments￨f (￨f IPath￨f location￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f executeOperation￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f generateClasspathChangeDeltas￨f (￨f IClasspathEntry￨p [￨p ]￨p oldResolvedPath￨p ,￨p IClasspathEntry￨p [￨p ]￨p newResolvedPath￨p ,￨p JavaModelManager￨p manager￨p ,￨p final￨p JavaProject￨p project￨p )￨f {￨f }￨f protected￨f JavaProject￨f getProject￨f (￨f )￨f {￨f }￨f private￨f int￨f getSourceAttachmentDeltaFlag￨f (￨f IPath￨p oldPath￨p ,￨p IPath￨p newPath￨p ,￨p IPath￨p sourcePath￨p )￨f {￨f }￨f public￨f boolean￨f isReadOnly￨f (￨f )￨f {￨f }￨f protected￨f void￨f saveClasspathIfNecessary￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f private￨f void￨f updateClasspath￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateAffectedProjects￨f (￨f IPath￨p prerequisiteProjectPath￨p )￨f {￨f }￨f protected￨f void￨f updateCycleMarkersIfNecessary￨f (￨f IClasspathEntry￨p [￨p ]￨p newResolvedPath￨p )￨f {￨f }￨f protected￨f void￨f updateOutputLocation￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateProjectReferencesIfNecessary￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f if￨j (￨j !￨c (￨c this￨c .￨c canChangeResource￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c (￨c this￨c .￨c newRawPath￨c )￨c ==￨c (￨c SetClasspathOperation￨c .￨c ReuseClasspath￨c )￨c )￨c ||￨c (￨c (￨c this￨c .￨c newRawPath￨c )￨c ==￨c (￨c SetClasspathOperation￨c .￨c UpdateClasspath￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j JavaProject￨e jproject￨e =￨e getProject￨e (￨e )￨e ;￨e String￨e [￨e ]￨e oldRequired￨e =￨e jproject￨e .￨e projectPrerequisites￨e (￨e this￨e .￨e oldResolvedPath￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c newResolvedPath￨c )￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b this￨b .￨b newResolvedPath￨b =￨b jproject￨b .￨b getResolvedClasspath￨b (￨b this￨b .￨b newRawPath￨b ,￨b true￨b ,￨b this￨b .￨b needValidation￨b )￨b ;￨b <END_BUG>￨b }￨j String￨e [￨e ]￨e newRequired￨e =￨e jproject￨e .￨e projectPrerequisites￨e (￨e this￨e .￨e newResolvedPath￨e )￨e ;￨e try￨f (￨f )￨f {￨f IProject￨e project￨e =￨e jproject￨e .￨e getProject￨e (￨e )￨e ;￨e IProjectDescription￨e description￨e =￨e project￨e .￨e getDescription￨e (￨e )￨e ;￨e IProject￨e [￨e ]￨e projectReferences￨e =￨e description￨e .￨e getReferencedProjects￨e (￨e )￨e ;￨e HashSet￨e oldReferences￨e =￨e new￨e HashSet￨e (￨e projectReferences￨e .￨e length￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c projectReferences￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e projectName￨e =￨e projectReferences￨e [￨e i￨e ]￨e .￨e getName￨e (￨e )￨e ;￨e oldReferences￨e .￨e add￨e (￨e projectName￨e )￨e ;￨e }￨l HashSet￨e newReferences￨e =￨e (￨e (￨e HashSet￨e )￨e (￨e oldReferences￨e .￨e clone￨e (￨e )￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c oldRequired￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e projectName￨e =￨e oldRequired￨e [￨e i￨e ]￨e ;￨e newReferences￨e .￨e remove￨e (￨e projectName￨e )￨e ;￨e }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c newRequired￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e projectName￨e =￨e newRequired￨e [￨e i￨e ]￨e ;￨e newReferences￨e .￨e add￨e (￨e projectName￨e )￨e ;￨e }￨l Iterator￨e iter￨e ;￨e int￨e newSize￨e =￨e newReferences￨e .￨e size￨e (￨e )￨e ;￨e if￨j (￨j (￨c oldReferences￨c .￨c size￨c (￨c )￨c )￨c ==￨c newSize￨c )￨j {￨j iter￨e =￨e newReferences￨e .￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l iter￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l if￨j (￨j !￨c (￨c oldReferences￨c .￨c contains￨c (￨c iter￨c .￨c next￨c (￨c )￨c )￨c )￨c )￨j {￨j break￨e checkIdentity￨e ;￨e }￨j }￨l return￨e ;￨e }￨j }￨e String￨e [￨e ]￨e requiredProjectNames￨e =￨e new￨e String￨e [￨e newSize￨e ]￨e ;￨e int￨e index￨e =￨e 0￨e ;￨e iter￨e =￨e newReferences￨e .￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l iter￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l requiredProjectNames￨e [￨e (￨e index￨e ++￨e )￨e ]￨e =￨e (￨e (￨e String￨e )￨e (￨e iter￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e }￨l Util￨e .￨e sort￨e (￨e requiredProjectNames￨e )￨e ;￨e IProject￨e [￨e ]￨e requiredProjectArray￨e =￨e new￨e IProject￨e [￨e newSize￨e ]￨e ;￨e IWorkspaceRoot￨e wksRoot￨e =￨e project￨e .￨e getWorkspace￨e (￨e )￨e .￨e getRoot￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c newSize￨c ;￨c i￨c ++￨c )￨l {￨l requiredProjectArray￨e [￨e i￨e ]￨e =￨e wksRoot￨e .￨e getProject￨e (￨e requiredProjectNames￨e [￨e i￨e ]￨e )￨e ;￨e }￨l description￨e .￨e setReferencedProjects￨e (￨e requiredProjectArray￨e )￨e ;￨e project￨e .￨e setDescription￨e (￨e description￨e ,￨e this￨e .￨e fMonitor￨e )￨e ;￨e }￨f catch￨f (￨f CoreException￨p e￨p )￨f {￨f throw￨e new￨e JavaModelException￨e (￨e e￨e )￨e ;￨e }￨f }￨f public￨f IJavaModelStatus￨f verify￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DoubleDatatypeValidator￨d extends￨d AbstractNumericFacetValidator￨d {￨d public￨f DoubleDatatypeValidator￨f (￨f )￨f throws￨f InvalidDatatypeFacetException￨f (￨f )￨f {￨f }￨f public￨f DoubleDatatypeValidator￨f (￨f DatatypeValidator￨f base￨f ,￨f Hashtable￨f facets￨f ,￨f boolean￨f derivedByList￨f )￨f throws￨f InvalidDatatypeFacetException￨f (￨f )￨f {￨f }￨f public￨f int￨f compare￨f (￨f String￨p value1￨p ,￨p String￨p value2￨p )￨f {￨f }￨f protected￨f int￨f compareValues￨f (￨f Object￨p value1￨p ,￨p Object￨p value2￨p )￨f {￨f }￨f protected￨f void￨f setMaxInclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMinInclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMaxExclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setMinExclusive￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f void￨f setEnumeration￨f (￨f Vector￨f enumeration￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f if￨j (￨j enumeration￨c !=￨c null￨c )￨j {￨j fEnumeration￨e =￨e new￨e Double￨e [￨e enumeration￨e .￨e size￨e (￨e )￨e ]￨e ;￨e Object￨e baseEnum￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c enumeration￨c .￨c size￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b fEnumeration￨b [￨b i￨b ]￨b =￨b new￨b Double￨b (￨b (￨b (￨b String￨b )￨b (￨b enumeration￨b .￨b elementAt￨b (￨b i￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b (￨e (￨e DoubleDatatypeValidator￨e )￨e (￨e fBaseValidator￨e )￨e )￨e .￨e validate￨e (￨e (￨e (￨e String￨e )￨e (￨e enumeration￨e .￨e elementAt￨e (￨e i￨e )￨e )￨e )￨e ,￨e null￨e )￨e ;￨e }￨l }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e InvalidDatatypeValueException￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e }￨f }￨j }￨f protected￨f String￨f getMaxInclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMinInclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMaxExclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f String￨f getMinExclusive￨f (￨f boolean￨p isBase￨p )￨f {￨f }￨f protected￨f void￨f checkContentEnum￨f (￨f String￨f content￨f ,￨f Object￨f state￨f ,￨f Vector￨f enumeration￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f }￨f protected￨f void￨f checkContent￨f (￨f String￨f content￨f ,￨f Object￨f state￨f ,￨f Vector￨f enumeration￨f ,￨f boolean￨f asBase￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f }￨f private￨f static￨f Double￨f dValueOf￨f (￨f String￨f s￨f )￨f throws￨f NumberFormatException￨f (￨f )￨f {￨f }￨f private￨f void￨f enumCheck￨f (￨f double￨f v￨f ,￨f Double￨f [￨f ]￨f enumDoubles￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f }￨f private￨f int￨f compareDoubles￨f (￨f double￨p d1￨p ,￨p double￨p d2￨p )￨f {￨f }￨f }￨d
public￨d class￨d LocalizedFormatsTest￨d {￨d @￨f Test￨f public￨f void￨f testMessageNumber￨f (￨f )￨f {￨f <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b 309￨b ,￨b LocalizedFormats￨b .￨b values￨b (￨b )￨b .￨b length￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Test￨f public￨f void￨f testAllKeysPresentInPropertiesFiles￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testAllPropertiesCorrespondToKeys￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testNoMissingFrenchTranslation￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testNoOpEnglishTranslation￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testVariablePartsConsistency￨f (￨f )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d @￨d RunAsClient￨d public￨d class￨d SimpleStatelessWebserviceEndpointTestCase￨d {￨d @￨e ArquillianResource￨e URL￨e baseUrl￨e ;￨e private￨d static￨d final￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d SimpleStatelessWebserviceEndpointTestCase￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d @￨d Deployment￨d (￨d testable￨d =￨d false￨d )￨d public￨d static￨d JavaArchive￨d createDeployment￨d (￨d )￨d {￨d final￨e JavaArchive￨e jar￨e =￨e ShrinkWrap￨e .￨e create￨e (￨e JavaArchive￨e .￨e class￨e ,￨e "stateless-ws-endpoint-example.jar"￨e )￨e ;￨e <START_BUG>￨b jar￨b .￨b addPackage￨b (￨b SimpleStatelessWebserviceEndpointImpl￨b .￨b class￨b .￨b getPackage￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b SimpleStatelessWebserviceEndpointTestCase￨e .￨e log￨e .￨e info￨e (￨e jar￨e .￨e toString￨e (￨e true￨e )￨e )￨e ;￨e return￨e jar￨e ;￨e }￨d @￨f Test￨f public￨f void￨f testSimpleStatelessWebserviceEndpoint￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRemoteAccess￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d StreamContextManager￨d {￨d private￨d static￨d Logger￨d logger_￨d =￨d Logger￨d .￨d getLogger￨d (￨d StreamContextManager￨d .￨d class￨d )￨d ;￨d public￨d static￨d enum￨d StreamCompletionAction￨d {￨d DELETE￨e ,￨e STREAM￨e ;￨e }￨d public￨d static￨d class￨d StreamContext￨d implements￨d Serializable￨d {￨d private￨d static￨d Logger￨d logger_￨d =￨d Logger￨d .￨d getLogger￨d (￨d StreamContextManager￨d .￨d StreamContext￨d .￨d class￨d )￨d ;￨d private￨d static￨d ICompactSerializer￨d <￨d StreamContextManager￨d .￨d StreamContext￨d >￨d serializer_￨d ;￨d public￨d static￨d ICompactSerializer￨d <￨d StreamContextManager￨d .￨d StreamContext￨d >￨d serializer￨d (￨d )￨d {￨d }￨d private￨e String￨e targetFile_￨e ;￨e private￨e long￨e expectedBytes_￨e ;￨e public￨f StreamContext￨f (￨f String￨p targetFile￨p ,￨p long￨p expectedBytes￨p )￨f {￨f }￨f public￨f String￨f getTargetFile￨f (￨f )￨f {￨f }￨f public￨f void￨f setTargetFile￨f (￨f String￨p file￨p )￨f {￨f }￨f public￨f long￨f getExpectedBytes￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d StreamContextSerializer￨d implements￨d ICompactSerializer￨d <￨d StreamContextManager￨d .￨d StreamContext￨d >￨d {￨d public￨f void￨f serialize￨f (￨f StreamContextManager￨f .￨f StreamContext￨f sc￨f ,￨f DataOutputStream￨f dos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f StreamContextManager￨f .￨f StreamContext￨f deserialize￨f (￨f DataInputStream￨f dis￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d StreamStatus￨d {￨d private￨e static￨e ICompactSerializer￨e <￨e StreamContextManager￨e .￨e StreamStatus￨e >￨e serializer_￨e ;￨e public￨f static￨f ICompactSerializer￨f <￨f StreamContextManager￨f .￨f StreamStatus￨f >￨f serializer￨f (￨f )￨f {￨f }￨f private￨e String￨e file_￨e ;￨e private￨e long￨e expectedBytes_￨e ;￨e private￨e StreamContextManager￨e .￨e StreamCompletionAction￨e action_￨e ;￨e public￨f StreamStatus￨f (￨f String￨p file￨p ,￨p long￨p expectedBytes￨p )￨f {￨f }￨f public￨f String￨f getFile￨f (￨f )￨f {￨f }￨f public￨f long￨f getExpectedBytes￨f (￨f )￨f {￨f }￨f void￨f setAction￨f (￨f StreamContextManager￨p .￨p StreamCompletionAction￨p action￨p )￨f {￨f }￨f public￨f StreamContextManager￨f .￨f StreamCompletionAction￨f getAction￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d StreamStatusSerializer￨d implements￨d ICompactSerializer￨d <￨d StreamContextManager￨d .￨d StreamStatus￨d >￨d {￨d public￨f void￨f serialize￨f (￨f StreamContextManager￨f .￨f StreamStatus￨f streamStatus￨f ,￨f DataOutputStream￨f dos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f StreamContextManager￨f .￨f StreamStatus￨f deserialize￨f (￨f DataInputStream￨f dis￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d StreamStatusMessage￨d implements￨d Serializable￨d {￨d private￨e static￨e ICompactSerializer￨e <￨e StreamContextManager￨e .￨e StreamStatusMessage￨e >￨e serializer_￨e ;￨e public￨f static￨f ICompactSerializer￨f <￨f StreamContextManager￨f .￨f StreamStatusMessage￨f >￨f serializer￨f (￨f )￨f {￨f }￨f public￨f static￨f Message￨f makeStreamStatusMessage￨f (￨f StreamContextManager￨f .￨f StreamStatusMessage￨f streamStatusMessage￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f ByteArrayOutputStream￨e bos￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e DataOutputStream￨e dos￨e =￨e new￨e DataOutputStream￨e (￨e bos￨e )￨e ;￨e StreamContextManager￨e .￨e StreamStatusMessage￨e .￨e serializer￨e (￨e )￨e .￨e serialize￨e (￨e streamStatusMessage￨e ,￨e dos￨e )￨e ;￨e <START_BUG>￨b return￨b new￨b Message￨b (￨b StorageService￨b .￨b getLocalStorageEndPoint￨b (￨b )￨b ,￨b ""￨b ,￨b StorageService￨b .￨b bootStrapTerminateVerbHandler_￨b ,￨b new￨b Object￨b [￨b ]￨b {￨b bos￨b .￨b toByteArray￨b (￨b )￨b }￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨e StreamContextManager￨e .￨e StreamStatus￨e streamStatus_￨e ;￨e public￨f StreamStatusMessage￨f (￨f StreamContextManager￨p .￨p StreamStatus￨p streamStatus￨p )￨f {￨f }￨f public￨f StreamContextManager￨f .￨f StreamStatus￨f getStreamStatus￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d class￨d StreamStatusMessageSerializer￨d implements￨d ICompactSerializer￨d <￨d StreamContextManager￨d .￨d StreamStatusMessage￨d >￨d {￨d public￨f void￨f serialize￨f (￨f StreamContextManager￨f .￨f StreamStatusMessage￨f streamStatusMessage￨f ,￨f DataOutputStream￨f dos￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f StreamContextManager￨f .￨f StreamStatusMessage￨f deserialize￨f (￨f DataInputStream￨f dis￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d public￨e static￨e Map￨e <￨e String￨e ,￨e List￨e <￨e StreamContextManager￨e .￨e StreamContext￨e >￨e >￨e ctxBag_￨e =￨e new￨e Hashtable￨e <￨e String￨e ,￨e List￨e <￨e StreamContextManager￨e .￨e StreamContext￨e >￨e >￨e (￨e )￨e ;￨e public￨e static￨e Map￨e <￨e String￨e ,￨e List￨e <￨e StreamContextManager￨e .￨e StreamStatus￨e >￨e >￨e streamStatusBag_￨e =￨e new￨e Hashtable￨e <￨e String￨e ,￨e List￨e <￨e StreamContextManager￨e .￨e StreamStatus￨e >￨e >￨e (￨e )￨e ;￨e public￨e static￨e Map￨e <￨e String￨e ,￨e IStreamComplete￨e >￨e streamNotificationHandlers_￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e IStreamComplete￨e >￨e (￨e )￨e ;￨e public￨f static￨f synchronized￨f StreamContextManager￨f .￨f StreamContext￨f getStreamContext￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f StreamContextManager￨f .￨f StreamStatus￨f getStreamStatus￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f boolean￨f isDone￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f IStreamComplete￨f getStreamCompletionHandler￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f void￨f removeStreamCompletionHandler￨f (￨f String￨p key￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f void￨f registerStreamCompletionHandler￨f (￨f String￨p key￨p ,￨p IStreamComplete￨p streamComplete￨p )￨f {￨f }￨f public￨f static￨f synchronized￨f void￨f addStreamContext￨f (￨f String￨p key￨p ,￨p StreamContextManager￨p .￨p StreamContext￨p streamContext￨p ,￨p StreamContextManager￨p .￨p StreamStatus￨p streamStatus￨p )￨f {￨f }￨f }￨d
public￨d class￨d CassandraDaemon￨d extends￨d AbstractCassandraDaemon￨d {￨d private￨d static￨d Logger￨d logger￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d CassandraDaemon￨d .￨d class￨d )￨d ;￨d private￨d TServer￨d serverEngine￨d ;￨d protected￨d void￨d setup￨d (￨d )￨d throws￨d IOException￨d {￨d int￨e listenPort￨e =￨e DatabaseDescriptor￨e .￨e getRpcPort￨e (￨e )￨e ;￨e InetAddress￨e listenAddr￨e =￨e DatabaseDescriptor￨e .￨e getRpcAddress￨e (￨e )￨e ;￨e if￨j (￨j listenAddr￨c ==￨c null￨c )￨j {￨j listenAddr￨e =￨e FBUtilities￨e .￨e getLocalAddress￨e (￨e )￨e ;￨e }￨j Thread￨f .￨f setDefaultUncaughtExceptionHandler￨f (￨f new￨f Thread￨f .￨f UncaughtExceptionHandler￨f (￨f )￨f {￨f public￨f void￨f uncaughtException￨f (￨f Thread￨p t￨p ,￨p Throwable￨p e￨p )￨f {￨f CassandraDaemon￨e .￨e logger￨e .￨e error￨e (￨e (￨e "Uncaught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>thread<seq2seq4repair_space>"￨e +￨e t￨e )￨e ,￨e e￨e )￨e ;￨e if￨j (￨j e￨c instanceof￨c OutOfMemoryError￨c )￨j {￨j System￨e .￨e exit￨e (￨e 100￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e try￨f (￨f )￨f {￨f SystemTable￨e .￨e checkHealth￨e (￨e )￨e ;￨e }￨f catch￨f (￨f ConfigurationException￨p e￨p )￨f {￨f CassandraDaemon￨e .￨e logger￨e .￨e error￨e (￨e "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨e ,￨e e￨e )￨e ;￨e System￨e .￨e exit￨e (￨e 100￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f DatabaseDescriptor￨e .￨e loadSchemas￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f CassandraDaemon￨e .￨e logger￨e .￨e error￨e (￨e "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨e ,￨e e￨e )￨e ;￨e System￨e .￨e exit￨e (￨e 100￨e )￨e ;￨e }￨f for￨l (￨l String￨c table￨c :￨c DatabaseDescriptor￨c .￨c getTables￨c (￨c )￨c )￨l {￨l if￨j (￨j CassandraDaemon￨c .￨c logger￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j CassandraDaemon￨e .￨e logger￨e .￨e debug￨e (￨e (￨e "opening<seq2seq4repair_space>keyspace<seq2seq4repair_space>"￨e +￨e table￨e )￨e )￨e ;￨e }￨j Table￨e .￨e open￨e (￨e table￨e )￨e ;￨e }￨l CommitLog￨e .￨e recover￨e (￨e )￨e ;￨e instance￨e .￨e checkAllColumnFamilies￨e (￨e )￨e ;￨e UUID￨e currentMigration￨e =￨e DatabaseDescriptor￨e .￨e getDefsVersion￨e (￨e )￨e ;￨e UUID￨e lastMigration￨e =￨e Migration￨e .￨e getLastMigrationId￨e (￨e )￨e ;￨e if￨j (￨j (￨c lastMigration￨c !=￨c null￨c )￨c &&￨c (￨c (￨c lastMigration￨c .￨c timestamp￨c (￨c )￨c )￨c >￨c (￨c currentMigration￨c .￨c timestamp￨c (￨c )￨c )￨c )￨c )￨j {￨j MigrationManager￨e .￨e applyMigrations￨e (￨e currentMigration￨e ,￨e lastMigration￨e )￨e ;￨e }￨j StorageService￨e .￨e instance￨e .￨e initServer￨e (￨e )￨e ;￨e final￨e CassandraServer￨e cassandraServer￨e =￨e new￨e CassandraServer￨e (￨e )￨e ;￨e Cassandra￨e .￨e Processor￨e processor￨e =￨e new￨e Cassandra￨e .￨e Processor￨e (￨e cassandraServer￨e )￨e ;￨e TServerSocket￨e tServerSocket￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f tServerSocket￨e =￨e new￨e TServerSocket￨e (￨e new￨e InetSocketAddress￨e (￨e listenAddr￨e ,￨e listenPort￨e )￨e )￨e ;￨e }￨f catch￨f (￨f TTransportException￨p e￨p )￨f {￨f throw￨e new￨e IOException￨e (￨e String￨e .￨e format￨e (￨e "Unable<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>thrift<seq2seq4repair_space>socket<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨e ,￨e listenAddr￨e ,￨e listenPort￨e )￨e ,￨e e￨e )￨e ;￨e }￨f CassandraDaemon￨e .￨e logger￨e .￨e info￨e (￨e String￨e .￨e format￨e (￨e "Binding<seq2seq4repair_space>thrift<seq2seq4repair_space>service<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨e ,￨e listenAddr￨e ,￨e listenPort￨e )￨e )￨e ;￨e <START_BUG>￨b TProtocolFactory￨b tProtocolFactory￨b =￨b new￨b org￨b .￨b apache￨b .￨b thrift￨b .￨b protocol￨b .￨b TBinaryProtocol￨b .￨b Factory￨b (￨b false￨b ,￨b true￨b ,￨b DatabaseDescriptor￨b .￨b getThriftMaxMessageLength￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b TTransportFactory￨e inTransportFactory￨e ;￨e TTransportFactory￨e outTransportFactory￨e ;￨e if￨j (￨j DatabaseDescriptor￨c .￨c isThriftFramed￨c (￨c )￨c )￨j {￨j int￨e tFramedTransportSize￨e =￨e DatabaseDescriptor￨e .￨e getThriftFramedTransportSize￨e (￨e )￨e ;￨e inTransportFactory￨e =￨e new￨e TFramedTransport￨e .￨e Factory￨e (￨e tFramedTransportSize￨e )￨e ;￨e outTransportFactory￨e =￨e new￨e TFramedTransport￨e .￨e Factory￨e (￨e tFramedTransportSize￨e )￨e ;￨e CassandraDaemon￨e .￨e logger￨e .￨e info￨e (￨e "Using<seq2seq4repair_space>TFramedTransport<seq2seq4repair_space>with<seq2seq4repair_space>a<seq2seq4repair_space>max<seq2seq4repair_space>frame<seq2seq4repair_space>size<seq2seq4repair_space>of<seq2seq4repair_space>{}<seq2seq4repair_space>bytes."￨e ,￨e tFramedTransportSize￨e )￨e ;￨e }￨j else￨j {￨j inTransportFactory￨e =￨e new￨e TTransportFactory￨e (￨e )￨e ;￨e outTransportFactory￨e =￨e new￨e TTransportFactory￨e (￨e )￨e ;￨e }￨j CustomTThreadPoolServer￨e .￨e Options￨e options￨e =￨e new￨e CustomTThreadPoolServer￨e .￨e Options￨e (￨e )￨e ;￨e options￨e .￨e minWorkerThreads￨e =￨e 64￨e ;￨e SynchronousQueue￨e <￨e Runnable￨e >￨e executorQueue￨e =￨e new￨e SynchronousQueue￨e <￨e Runnable￨e >￨e (￨e )￨e ;￨e ExecutorService￨f executorService￨f =￨f new￨f ThreadPoolExecutor￨f (￨f options￨p .￨p minWorkerThreads￨p ,￨p options￨p .￨p maxWorkerThreads￨p ,￨p 60￨p ,￨p TimeUnit￨p .￨p SECONDS￨p ,￨p executorQueue￨p )￨f {￨f @￨f Override￨f protected￨f void￨f afterExecute￨f (￨f Runnable￨p r￨p ,￨p Throwable￨p t￨p )￨f {￨f super￨e .￨e afterExecute￨e (￨e r￨e ,￨e t￨e )￨e ;￨e cassandraServer￨e .￨e logout￨e (￨e )￨e ;￨e }￨f }￨f ;￨e serverEngine￨e =￨e new￨e CustomTThreadPoolServer￨e (￨e new￨e org￨e .￨e apache￨e .￨e thrift￨e .￨e TProcessorFactory￨e (￨e processor￨e )￨e ,￨e tServerSocket￨e ,￨e inTransportFactory￨e ,￨e outTransportFactory￨e ,￨e tProtocolFactory￨e ,￨e tProtocolFactory￨e ,￨e options￨e ,￨e executorService￨e )￨e ;￨e }￨d public￨f void￨f start￨f (￨f )￨f {￨f }￨f public￨f void￨f stop￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f }￨d
public￨d class￨d RootLoggerRemove￨d extends￨d AbstractLoggingSubsystemUpdate￨d <￨d Void￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 9178350859833986971L￨e ;￨e public￨f RootLoggerRemove￨f (￨f )￨f {￨f }￨f protected￨f <￨f P￨f >￨f void￨f applyUpdate￨f (￨f UpdateContext￨p updateContext￨p ,￨p UpdateResultHandler￨p <￨p ?￨p super￨p Void￨p ,￨p P￨p >￨p resultHandler￨p ,￨p P￨p param￨p )￨f {￨f final￨e ServiceController￨e <￨e ?￨e >￨e service￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b service￨b =￨b updateContext￨b .￨b getServiceContainer￨b (￨b )￨b .￨b getRequiredService￨b (￨b ROOT_LOGGER￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f ServiceNotFoundException￨p e￨p )￨f {￨f resultHandler￨e .￨e handleFailure￨e (￨e e￨e ,￨e param￨e )￨e ;￨e return￨e ;￨e }￨f service￨e .￨e setMode￨e (￨e REMOVE￨e )￨e ;￨e service￨e .￨e addListener￨e (￨e new￨e UpdateResultHandler￨e .￨e ServiceRemoveListener￨e <￨e P￨e >￨e (￨e resultHandler￨e ,￨e param￨e )￨e )￨e ;￨e }￨f public￨f RootLoggerAdd￨f getCompensatingUpdate￨f (￨f LoggingSubsystemElement￨p original￨p )￨f {￨f }￨f protected￨f void￨f applyUpdate￨f (￨f LoggingSubsystemElement￨f element￨f )￨f throws￨f UpdateFailedException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d AttrImpl￨d extends￨d NodeContainer￨d implements￨d Attr￨d {￨d static￨e final￨e long￨e serialVersionUID￨e =￨e 7277707688218972102L￨e ;￨e protected￨e boolean￨e owned￨e ;￨e protected￨e boolean￨e specified￨e =￨e true￨e ;￨e protected￨f AttrImpl￨f (￨f DocumentImpl￨p ownerDocument￨p ,￨p String￨p name￨p )￨f {￨f }￨f protected￨f AttrImpl￨f (￨f )￨f {￨f }￨f public￨f short￨f getNodeType￨f (￨f )￨f {￨f }￨f public￨f void￨f setNodeValue￨f (￨f String￨f value￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f public￨f String￨f getNodeValue￨f (￨f )￨f {￨f }￨f public￨f Node￨f getParentNode￨f (￨f )￨f {￨f }￨f public￨f Node￨f cloneNode￨f (￨f boolean￨p deep￨p )￨f {￨f AttrImpl￨e newattr￨e =￨e (￨e (￨e AttrImpl￨e )￨e (￨e super￨e .￨e cloneNode￨e (￨e deep￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b newattr￨b .￨b owned￨b =￨b owned￨b ;￨b <END_BUG>￨b newattr￨e .￨e specified￨e =￨e specified￨e ;￨e return￨e newattr￨e ;￨e }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f void￨f setValue￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f String￨f getValue￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getSpecified￨f (￨f )￨f {￨f }￨f public￨f Element￨f getElement￨f (￨f )￨f {￨f }￨f public￨f Element￨f getOwnerElement￨f (￨f )￨f {￨f }￨f public￨f void￨f normalize￨f (￨f )￨f {￨f }￨f public￨f void￨f setSpecified￨f (￨f boolean￨p arg￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestRecursiveRelationships￨d extends￨d SingleEMFTestCase￨d {￨d private￨e int￨e _l1Nodes￨e =￨e 3￨e ;￨e private￨e int￨e _l2Nodes￨e =￨e 3￨e ;￨e public￨f void￨f setUp￨f (￨f )￨f {￨f <START_BUG>￨b setUp￨b (￨b Node￨b .￨b class￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testRecursiveNodes￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Version￨d {￨d private￨f Version￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f id￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "4.5-SNAPSHOT-20080722-1051"￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f }￨d
public￨d class￨d SizeSelectorTest￨d extends￨d BaseSelectorTest￨d {￨d private￨e Project￨e project￨e ;￨e public￨f SizeSelectorTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f BaseSelector￨f getInstance￨f (￨f )￨f {￨f }￨f public￨f void￨f testValidate￨f (￨f )￨f {￨f }￨f public￨f void￨f testSelectionBehaviour￨f (￨f )￨f {￨f SizeSelector￨e s￨e ;￨e String￨e results￨e ;￨e SizeSelector￨e .￨e ByteUnits￨e kilo￨e =￨e new￨e SizeSelector￨e .￨e ByteUnits￨e (￨e )￨e ;￨e kilo￨e .￨e setValue￨e (￨e "K"￨e )￨e ;￨e SizeSelector￨e .￨e ByteUnits￨e kibi￨e =￨e new￨e SizeSelector￨e .￨e ByteUnits￨e (￨e )￨e ;￨e kibi￨e .￨e setValue￨e (￨e "Ki"￨e )￨e ;￨e SizeSelector￨e .￨e ByteUnits￨e tibi￨e =￨e new￨e SizeSelector￨e .￨e ByteUnits￨e (￨e )￨e ;￨e tibi￨e .￨e setValue￨e (￨e "Ti"￨e )￨e ;￨e SizeSelector￨e .￨e SizeComparisons￨e less￨e =￨e new￨e SizeSelector￨e .￨e SizeComparisons￨e (￨e )￨e ;￨e less￨e .￨e setValue￨e (￨e "less"￨e )￨e ;￨e SizeSelector￨e .￨e SizeComparisons￨e equal￨e =￨e new￨e SizeSelector￨e .￨e SizeComparisons￨e (￨e )￨e ;￨e equal￨e .￨e setValue￨e (￨e "equal"￨e )￨e ;￨e SizeSelector￨e .￨e SizeComparisons￨e more￨e =￨e new￨e SizeSelector￨e .￨e SizeComparisons￨e (￨e )￨e ;￨e more￨e .￨e setValue￨e (￨e "more"￨e )￨e ;￨e try￨f (￨f )￨f {￨f makeBed￨e (￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 10￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e less￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TFFFFFFFFFFT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 10￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e more￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TTTTTTTTTTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 32￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e equal￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b "TTFFTFFFFFFT"￨b ,￨b results￨b )￨b ;￨b <END_BUG>￨b s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 7￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e more￨e )￨e ;￨e s￨e .￨e setUnits￨e (￨e kilo￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TFTFFTTTTTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 7￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e more￨e )￨e ;￨e s￨e .￨e setUnits￨e (￨e kibi￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TFTFFFTTFTTT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e s￨e .￨e setValue￨e (￨e 99999￨e )￨e ;￨e s￨e .￨e setWhen￨e (￨e more￨e )￨e ;￨e s￨e .￨e setUnits￨e (￨e tibi￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TFFFFFFFFFFT"￨e ,￨e results￨e )￨e ;￨e s￨e =￨e (￨e (￨e SizeSelector￨e )￨e (￨e getInstance￨e (￨e )￨e )￨e )￨e ;￨e Parameter￨e param1￨e =￨e new￨e Parameter￨e (￨e )￨e ;￨e Parameter￨e param2￨e =￨e new￨e Parameter￨e (￨e )￨e ;￨e Parameter￨e param3￨e =￨e new￨e Parameter￨e (￨e )￨e ;￨e param1￨e .￨e setName￨e (￨e "value"￨e )￨e ;￨e param1￨e .￨e setValue￨e (￨e "20"￨e )￨e ;￨e param2￨e .￨e setName￨e (￨e "units"￨e )￨e ;￨e param2￨e .￨e setValue￨e (￨e "Ki"￨e )￨e ;￨e param3￨e .￨e setName￨e (￨e "when"￨e )￨e ;￨e param3￨e .￨e setValue￨e (￨e "more"￨e )￨e ;￨e Parameter￨f [￨f ]￨f params￨f =￨f new￨f Parameter￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e s￨e .￨e setParameters￨e (￨e params￨e )￨e ;￨e results￨e =￨e selectionString￨e (￨e s￨e )￨e ;￨e assertEquals￨e (￨e "TFFFFFFTFFTT"￨e ,￨e results￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f cleanupBed￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d JasperReportsUtilsTests￨d extends￨d TestCase￨d {￨d public￨f void￨f testRenderAsCsvWithDataSource￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsCsvWithCollection￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsCsvWithExporterParameters￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsHtmlWithDataSource￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsHtmlWithCollection￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsHtmlWithExporterParameters￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsPdfWithDataSource￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsPdfWithCollection￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsPdfWithExporterParameters￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsXlsWithDataSource￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsXlsWithCollection￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderAsXlsWithExporterParameters￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderWithWriter￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRenderWithOutputStream￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f assertCsvOutputCorrect￨f (￨f String￨p output￨p )￨f {￨f }￨f private￨f void￨f assertHtmlOutputCorrect￨f (￨f String￨p output￨p )￨f {￨f }￨f private￨f void￨f assertPdfOutputCorrect￨f (￨f byte￨f [￨f ]￨f output￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f assertXlsOutputCorrect￨f (￨f byte￨f [￨f ]￨f output￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f HSSFWorkbook￨e workbook￨e =￨e new￨e HSSFWorkbook￨e (￨e new￨e ByteArrayInputStream￨e (￨e output￨e )￨e )￨e ;￨e HSSFSheet￨e sheet￨e =￨e workbook￨e .￨e getSheetAt￨e (￨e 0￨e )￨e ;￨e assertNotNull￨e (￨e "Sheet<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e ,￨e sheet￨e )￨e ;￨e HSSFRow￨e row￨e =￨e sheet￨e .￨e getRow￨e (￨e 3￨e )￨e ;￨e HSSFCell￨e cell￨e =￨e row￨e .￨e getCell￨e (￨e (￨e (￨e short￨e )￨e (￨e 1￨e )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e "Cell<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e ,￨e cell￨e )￨e ;￨e <START_BUG>￨b assertEquals￨b (￨b "Cell<seq2seq4repair_space>content<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>Dear<seq2seq4repair_space>Lord!"￨b ,￨b "Dear<seq2seq4repair_space>Lord!"￨b ,￨b cell￨b .￨b getRichStringCellValue￨b (￨b )￨b .￨b getString￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f JasperReport￨f getReport￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f getParameters￨f (￨f )￨f {￨f }￨f private￨f JRDataSource￨f getDataSource￨f (￨f )￨f {￨f }￨f private￨f List￨f <￨f PersonBean￨f >￨f getData￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d SimpleProgressMonitor￨d implements￨d JRExportProgressMonitor￨d {￨d private￨e boolean￨e invoked￨e =￨e false￨e ;￨e @￨f Override￨f public￨f void￨f afterPageExport￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInvoked￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d IIOPJndiBindingProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d @￨f Override￨f public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e final￨e EEModuleDescription￨e moduleDescription￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e EE_MODULE_DESCRIPTION￨e )￨e ;￨e final￨e Module￨e module￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e MODULE￨e )￨e ;￨e if￨j (￨j moduleDescription￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b !￨b (￨b JdkORBDeploymentMarker￨b .￨b isJacORBDeployment￨b (￨b deploymentUnit￨b )￨b )￨b )￨b {￨b <END_BUG>￨b return￨e ;￨e }￨e final￨e ServiceTarget￨e serviceTarget￨e =￨e phaseContext￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e if￨j (￨j (￨c DeploymentTypeMarker￨c .￨c isType￨c (￨c WAR￨c ,￨c deploymentUnit￨c )￨c )￨c ||￨c (￨c DeploymentTypeMarker￨c .￨c isType￨c (￨c APPLICATION_CLIENT￨c ,￨c deploymentUnit￨c )￨c )￨c )￨j {￨j final￨e ServiceName￨e moduleContextServiceName￨e =￨e ContextNames￨e .￨e contextServiceNameOfModule￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e ,￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e )￨e ;￨e bindService￨e (￨e serviceTarget￨e ,￨e moduleContextServiceName￨e ,￨e module￨e )￨e ;￨e }￨j for￨l (￨l ComponentDescription￨c component￨c :￨c moduleDescription￨c .￨c getComponentDescriptions￨c (￨c )￨c )￨l {￨l if￨j (￨j (￨c component￨c .￨c getNamingMode￨c (￨c )￨c )￨c ==￨c (￨c ComponentNamingMode￨c .￨c CREATE￨c )￨c )￨j {￨j final￨e ServiceName￨e compContextServiceName￨e =￨e ContextNames￨e .￨e contextServiceNameOfComponent￨e (￨e moduleDescription￨e .￨e getApplicationName￨e (￨e )￨e ,￨e moduleDescription￨e .￨e getModuleName￨e (￨e )￨e ,￨e component￨e .￨e getComponentName￨e (￨e )￨e )￨e ;￨e bindService￨e (￨e serviceTarget￨e ,￨e compContextServiceName￨e ,￨e module￨e )￨e ;￨e }￨j }￨l }￨f private￨f void￨f bindService￨f (￨f final￨p ServiceTarget￨p serviceTarget￨p ,￨p final￨p ServiceName￨p contextServiceName￨p ,￨p final￨p Module￨p module￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d AspectDeclaration￨d extends￨d MemberTypeDeclaration￨d {￨d private￨e Aspect￨e aspectAttribute￨e ;￨e public￨e PerClause￨e perClause￨e ;￨e public￨e ResolvedMember￨e aspectOfMethod￨e ;￨e public￨e ResolvedMember￨e hasAspectMethod￨e ;￨e public￨e boolean￨e isPrivileged￨e ;￨e public￨e EclipseObjectType￨e typeX￨e ;￨e public￨e EclipseWorld￨e world￨e ;￨e public￨e TypePattern￨e dominatesPattern￨e ;￨e public￨f AspectDeclaration￨f (￨f CompilationResult￨p compilationResult￨p )￨f {￨f }￨f public￨f boolean￨f isAbstract￨f (￨f )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f )￨f {￨f }￨f public￨f void￨f checkSpec￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f ClassFile￨p enclosingClassFile￨p )￨f {￨f }￨f public￨f boolean￨f needClassInitMethod￨f (￨f )￨f {￨f }￨f protected￨f void￨f generateAttributes￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerSupportMembers￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f static￨f interface￨f BodyGenerator￨f (￨f )￨f {￨f public￨f void￨f generate￨f (￨f CodeStream￨p codeStream￨p )￨f {￨f }￨f }￨f private￨f void￨f generateMethod￨f (￨f ClassFile￨p classFile￨p ,￨p ResolvedMember￨p member￨p ,￨p AspectDeclaration￨p .￨p BodyGenerator￨p gen￨p )￨f {￨f }￨f private￨f void￨f generateMethod￨f (￨f ClassFile￨p classFile￨p ,￨p MethodBinding￨p methodBinding￨p ,￨p AspectDeclaration￨p .￨p BodyGenerator￨p gen￨p )￨f {￨f }￨f private￨f void￨f generatePerCflowAspectOfMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerCflowHasAspectMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerCflowPushMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerCflowAjcClinitMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f TypeBinding￨f generatePerObjectInterface￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerObjectAspectOfMethod￨f (￨f ClassFile￨p classFile￨p ,￨p final￨p TypeBinding￨p interfaceType￨p )￨f {￨f }￨f private￨f void￨f generatePerObjectHasAspectMethod￨f (￨f ClassFile￨p classFile￨p ,￨p final￨p TypeBinding￨p interfaceType￨p )￨f {￨f }￨f private￨f void￨f generatePerObjectBindMethod￨f (￨f ClassFile￨p classFile￨p ,￨p final￨p TypeBinding￨p interfaceType￨p )￨f {￨f }￨f private￨f void￨f generatePerSingletonAspectOfMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerSingletonHasAspectMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f void￨f generatePerSingletonAjcClinitMethod￨f (￨f ClassFile￨p classFile￨p )￨f {￨f }￨f private￨f Kind￨f lookupPerClauseKind￨f (￨f ReferenceBinding￨p binding￨p )￨f {￨f <START_BUG>￨b if￨b (￨b binding￨b instanceof￨b SourceTypeBinding￨b )￨b {￨b <END_BUG>￨b SourceTypeBinding￨e sourceSc￨e =￨e (￨e (￨e SourceTypeBinding￨e )￨e (￨e binding￨e )￨e )￨e ;￨e if￨j (￨j (￨c sourceSc￨c .￨c scope￨c .￨c referenceContext￨c )￨c instanceof￨c AspectDeclaration￨c )￨j {￨j PerClause￨e perClause￨e =￨e (￨e (￨e AspectDeclaration￨e )￨e (￨e sourceSc￨e .￨e scope￨e .￨e referenceContext￨e )￨e )￨e .￨e perClause￨e ;￨e if￨j (￨j perClause￨c ==￨c null￨c )￨j {￨j return￨e lookupPerClauseKind￨e (￨e binding￨e .￨e superclass￨e (￨e )￨e )￨e ;￨e }￨j else￨j {￨j return￨e perClause￨e .￨e getKind￨e (￨e )￨e ;￨e }￨j }￨j else￨j {￨j return￨e null￨e ;￨e }￨j else￨j {￨j return￨e null￨e ;￨e }￨j }￨f private￨f void￨f buildPerClause￨f (￨f ClassScope￨p scope￨p )￨f {￨f }￨f private￨f PerClause￨f resolvePerClause￨f (￨f )￨f {￨f }￨f public￨f void￨f buildInterTypeAndPerClause￨f (￨f ClassScope￨p classScope￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f String￨f toStringBody￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f String￨f toStringHeader￨f (￨f )￨f {￨f }￨f }￨d
@￨d WebServlet￨d (￨d name￨d =￨d "CallEjbServlet"￨d ,￨d urlPatterns￨d =￨d {￨d "/CallEjbServlet"￨d }￨d )￨d public￨d class￨d CallEjbServlet￨d extends￨d HttpServlet￨d {￨d @￨e EJB￨e MyEjb￨e ejb￨e ;￨e protected￨f void￨f doGet￨f (￨f HttpServletRequest￨f req￨f ,￨f HttpServletResponse￨f resp￨f )￨f throws￨f IOException￨f ,￨f ServletException￨f (￨f )￨f {￨f Context￨e ctx￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f Properties￨e env￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e String￨e address￨e =￨e System￨e .￨e getProperty￨e (￨e "node0"￨e ,￨e "localhost"￨e )￨e ;￨e address￨e =￨e NetworkUtils￨e .￨e formatPossibleIpv6Address￨e (￨e address￨e )￨e ;￨e <START_BUG>￨b env￨b .￨b put￨b (￨b Context￨b .￨b PROVIDER_URL￨b ,￨b (￨b (￨b "http-remoting://"￨b +￨b address￨b )￨b +￨b ":8080"￨b )￨b )￨b ;￨b <END_BUG>￨b env￨e .￨e put￨e (￨e Context￨e .￨e INITIAL_CONTEXT_FACTORY￨e ,￨e "org.jboss.naming.remote.client.InitialContextFactory"￨e )￨e ;￨e ctx￨e =￨e new￨e InitialContext￨e (￨e env￨e )￨e ;￨e MyObject￨e obj￨e =￨e (￨e (￨e MyObject￨e )￨e (￨e ctx￨e .￨e lookup￨e (￨e "loc/stub"￨e )￨e )￨e )￨e ;￨e Writer￨e writer￨e =￨e resp￨e .￨e getWriter￨e (￨e )￨e ;￨e writer￨e .￨e write￨e (￨e ejb￨e .￨e doIt￨e (￨e )￨e )￨e ;￨e writer￨e .￨e write￨e (￨e obj￨e .￨e doIt￨e (￨e "Hello"￨e )￨e )￨e ;￨e writer￨e .￨e flush￨e (￨e )￨e ;￨e }￨f catch￨f (￨f NamingException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f if￨j (￨j ctx￨c !=￨c null￨c )￨j {￨j try￨f (￨f )￨f {￨f ctx￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f NamingException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨j }￨f }￨f }￨d
public￨d class￨d EjbLookupInjectionSource￨d extends￨d InjectionSource￨d {￨d private￨e final￨e String￨e lookup￨e ;￨e private￨e final￨e String￨e targetTypeName￨e ;￨e private￨e final￨e Class￨e <￨e ?￨e >￨e targetType￨e ;￨e public￨f EjbLookupInjectionSource￨f (￨f final￨p String￨p lookup￨p ,￨p final￨p String￨p targetType￨p )￨f {￨f }￨f public￨f EjbLookupInjectionSource￨f (￨f final￨p String￨p lookup￨p ,￨p final￨p Class￨p <￨p ?￨p >￨p targetType￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f getResourceValue￨f (￨f final￨f ResolutionContext￨f resolutionContext￨f ,￨f final￨f ServiceBuilder￨f <￨f ?￨f >￨f serviceBuilder￨f ,￨f final￨f DeploymentPhaseContext￨f phaseContext￨f ,￨f final￨f Injector￨f <￨f ManagedReferenceFactory￨f >￨f injector￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e Class￨e <￨e ?￨e >￨e type￨e ;￨e if￨j (￨j (￨c targetType￨c )￨c !=￨c null￨c )￨j {￨j type￨e =￨e targetType￨e ;￨e }￨j else￨j if￨j (￨j (￨c targetTypeName￨c )￨c !=￨c null￨c )￨j {￨j final￨e DeploymentClassIndex￨e index￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e .￨e getAttachment￨e (￨e CLASS_INDEX￨e )￨e ;￨e try￨f (￨f )￨f {￨f type￨e =￨e index￨e .￨e classIndex￨e (￨e targetTypeName￨e )￨e .￨e getModuleClass￨e (￨e )￨e ;￨e }￨f catch￨f (￨f ClassNotFoundException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>EJB<seq2seq4repair_space>type<seq2seq4repair_space>"￨e +￨e (￨e targetTypeName￨e )￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨j else￨j {￨j type￨e =￨e null￨e ;￨e }￨j injector￨f .￨f inject￨f (￨f new￨f ManagedReferenceFactory￨f (￨f )￨f {￨f @￨f Override￨f public￨f ManagedReference￨f getReference￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f final￨e Object￨e value￨e =￨e new￨e InitialContext￨e (￨e )￨e .￨e lookup￨e (￨e lookup￨e )￨e ;￨e return￨f new￨f ManagedReference￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f release￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f getInstance￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b type￨b !=￨b null￨b )￨b {￨b <END_BUG>￨b return￨e PortableRemoteObject￨e .￨e narrow￨e (￨e value￨e ,￨e type￨e )￨e ;￨e else￨j {￨j return￨e value￨e ;￨e }￨j }￨f }￨f ;￨e }￨f catch￨f (￨f NamingException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨f }￨f )￨e ;￨e }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f final￨p Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CopyfileTest￨d extends￨d TaskdefsTest￨d {￨d public￨f CopyfileTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f test1￨f (￨f )￨f {￨f }￨f public￨f void￨f test2￨f (￨f )￨f {￨f }￨f public￨f void￨f test3￨f (￨f )￨f {￨f }￨f public￨f void￨f test4￨f (￨f )￨f {￨f <START_BUG>￨b expectLog￨b (￨b "test4"￨b ,￨b "Warning:<seq2seq4repair_space>src<seq2seq4repair_space>==<seq2seq4repair_space>dest"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f test5￨f (￨f )￨f {￨f }￨f }￨d
class￨d DocCommentParser￨d extends￨d AbstractCommentParser￨d {￨d private￨e Javadoc￨e docComment￨e ;￨e private￨e AST￨e ast￨e ;￨e DocCommentParser￨f (￨f AST￨p ast￨p ,￨p Scanner￨p scanner￨p ,￨p boolean￨p check￨p )￨f {￨f }￨f public￨f Javadoc￨f parse￨f (￨f int￨p [￨p ]￨p positions￨p )￨f {￨f }￨f public￨f Javadoc￨f parse￨f (￨f int￨p start￨p ,￨p int￨p length￨p )￨f {￨f }￨f private￨f void￨f setComment￨f (￨f int￨p start￨p ,￨p int￨p length￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f protected￨f Object￨f createArgumentReference￨f (￨f char￨f [￨f ]￨f name￨f ,￨f int￨f dim￨f ,￨f boolean￨f isVarargs￨f ,￨f Object￨f typeRef￨f ,￨f long￨f [￨f ]￨f dimPositions￨f ,￨f long￨f argNamePos￨f )￨f throws￨f InvalidInputException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f MethodRefParameter￨e argument￨e =￨e this￨e .￨e ast￨e .￨e newMethodRefParameter￨e (￨e )￨e ;￨e ASTNode￨e node￨e =￨e (￨e (￨e ASTNode￨e )￨e (￨e typeRef￨e )￨e )￨e ;￨e int￨e argStart￨e =￨e node￨e .￨e getStartPosition￨e (￨e )￨e ;￨e int￨e argEnd￨e =￨e (￨e (￨e node￨e .￨e getStartPosition￨e (￨e )￨e )￨e +￨e (￨e node￨e .￨e getLength￨e (￨e )￨e )￨e )￨e -￨e 1￨e ;￨e if￨j (￨j dim￨c >￨c 0￨c )￨j {￨j argEnd￨e =￨e (￨e (￨e int￨e )￨e (￨e dimPositions￨e [￨e (￨e dim￨e -￨e 1￨e )￨e ]￨e )￨e )￨e ;￨e }￨j if￨j (￨j argNamePos￨c >=￨c 0￨c )￨j {￨j argEnd￨e =￨e (￨e (￨e int￨e )￨e (￨e argNamePos￨e )￨e )￨e ;￨e }￨j if￨j (￨j (￨c name￨c .￨c length￨c )￨c !=￨c 0￨c )￨j {￨j SimpleName￨e argName￨e =￨e this￨e .￨e ast￨e .￨e newSimpleName￨e (￨e new￨e String￨e (￨e name￨e )￨e )￨e ;￨e argument￨e .￨e setName￨e (￨e argName￨e )￨e ;￨e int￨e argNameStart￨e =￨e (￨e (￨e int￨e )￨e (￨e argNamePos￨e >￨e >￨e >￨e 32￨e )￨e )￨e ;￨e argName￨e .￨e setSourceRange￨e (￨e argNameStart￨e ,￨e (￨e (￨e argEnd￨e -￨e argNameStart￨e )￨e +￨e 1￨e )￨e )￨e ;￨e }￨j Type￨e argType￨e =￨e null￨e ;￨e if￨j (￨j (￨c node￨c .￨c getNodeType￨c (￨c )￨c )￨c ==￨c (￨c ASTNode￨c .￨c PRIMITIVE_TYPE￨c )￨c )￨j {￨j argType￨e =￨e (￨e (￨e PrimitiveType￨e )￨e (￨e node￨e )￨e )￨e ;￨e }￨j else￨j {￨j Name￨e argTypeName￨e =￨e (￨e (￨e Name￨e )￨e (￨e node￨e )￨e )￨e ;￨e argType￨e =￨e this￨e .￨e ast￨e .￨e newSimpleType￨e (￨e argTypeName￨e )￨e ;￨e argType￨e .￨e setSourceRange￨e (￨e argStart￨e ,￨e node￨e .￨e getLength￨e (￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b dim￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c dim￨c ;￨c i￨c ++￨c )￨l {￨l argType￨e =￨e this￨e .￨e ast￨e .￨e newArrayType￨e (￨e argType￨e )￨e ;￨e argType￨e .￨e setSourceRange￨e (￨e argStart￨e ,￨e (￨e (￨e (￨e (￨e int￨e )￨e (￨e dimPositions￨e [￨e i￨e ]￨e )￨e )￨e -￨e argStart￨e )￨e +￨e 1￨e )￨e )￨e ;￨e }￨l }￨e argument￨e .￨e setType￨e (￨e argType￨e )￨e ;￨e argument￨e .￨e setSourceRange￨e (￨e argStart￨e ,￨e (￨e (￨e argEnd￨e -￨e argStart￨e )￨e +￨e 1￨e )￨e )￨e ;￨e return￨e argument￨e ;￨e }￨f catch￨f (￨f ClassCastException￨p ex￨p )￨f {￨f throw￨e new￨e InvalidInputException￨e (￨e )￨e ;￨e }￨f }￨f protected￨f Object￨f createFieldReference￨f (￨f Object￨f receiver￨f )￨f throws￨f InvalidInputException￨f (￨f )￨f {￨f }￨f protected￨f Object￨f createMethodReference￨f (￨f Object￨f receiver￨f ,￨f List￨f arguments￨f )￨f throws￨f InvalidInputException￨f (￨f )￨f {￨f }￨f protected￨f void￨f createTag￨f (￨f )￨f {￨f }￨f protected￨f Object￨f createTypeReference￨f (￨f int￨p primitiveToken￨p )￨f {￨f }￨f protected￨f boolean￨f parseReturn￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f parseTag￨f (￨f int￨f previousPosition￨f )￨f throws￨f InvalidInputException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f pushParamName￨f (￨f boolean￨p isTypeParam￨p )￨f {￨f }￨f protected￨f boolean￨f pushSeeRef￨f (￨f Object￨p statement￨p )￨f {￨f }￨f protected￨f void￨f pushText￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f protected￨f void￨f refreshInlineTagPosition￨f (￨f int￨p previousPosition￨p )￨f {￨f }￨f protected￨f boolean￨f pushThrowName￨f (￨f Object￨p typeRef￨p )￨f {￨f }￨f protected￨f void￨f updateDocComment￨f (￨f )￨f {￨f }￨f }￨d
public￨d final￨d class￨d EditBook￨d extends￨d AuthenticatedHtmlPage￨d {￨d static￨e final￨e Book￨e otherBook￨e =￨e new￨e Book￨e (￨e "Frisbee<seq2seq4repair_space>Techniques"￨e ,￨e "Marty<seq2seq4repair_space>van<seq2seq4repair_space>Hoff"￨e ,￨e Book￨e .￨e FICTION￨e )￨e ;￨e public￨f EditBook￨f (￨f final￨p Book￨p book￨p )￨f {￨f }￨f public￨f static￨f PageLink￨f link￨f (￨f final￨p String￨p name￨p ,￨p final￨p long￨p id￨p )￨f {￨f return￨f new￨f PageLink￨f (￨f name￨f ,￨f new￨f IPageLink￨f (￨f )￨f {￨f public￨f Page￨f getPage￨f (￨f )￨f {￨f return￨e new￨e EditBook￨e (￨e Book￨e .￨e get￨e (￨e id￨e )￨e )￨e ;￨e }￨f <START_BUG>￨b public￨b Class￨b getIdentity￨b (￨b )￨b {￨b <END_BUG>￨b return￨e EditBook￨e .￨e class￨e ;￨e }￨f )￨e ;￨e }￨f public￨d static￨d final￨d class￨d EditBookForm￨d extends￨d Form￨d {￨d private￨e Book￨e book￨e ;￨e public￨f EditBookForm￨f (￨f final￨p String￨p componentName￨p ,￨p final￨p Book￨p book￨p ,￨p final￨p FeedbackPanel￨p feedback￨p )￨f {￨f }￨f public￨f final￨f void￨f handleSubmit￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d MarshallingHttpMessageConverterTests￨d {￨d private￨e MarshallingHttpMessageConverter￨e converter￨e ;￨e private￨e Marshaller￨e marshaller￨e ;￨e private￨e Unmarshaller￨e unmarshaller￨e ;￨e @￨f Before￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f read￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f write￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f String￨e body￨e =￨e "<root>Hello<seq2seq4repair_space>World</root>"￨e ;￨e MockHttpOutputMessage￨e outputMessage￨e =￨e new￨e MockHttpOutputMessage￨e (￨e )￨e ;￨e marshaller￨e .￨e marshal￨e (￨e eq￨e (￨e body￨e )￨e ,￨e isA￨e (￨e StreamResult￨e .￨e class￨e )￨e )￨e ;￨e replay￨e (￨e marshaller￨e ,￨e unmarshaller￨e )￨e ;￨e <START_BUG>￨b converter￨b .￨b write￨b (￨b body￨b ,￨b outputMessage￨b )￨b ;￨b <END_BUG>￨b assertEquals￨e (￨e "Invalid<seq2seq4repair_space>content-type"￨e ,￨e new￨e MediaType￨e (￨e "application"￨e ,￨e "xml"￨e )￨e ,￨e outputMessage￨e .￨e getHeaders￨e (￨e )￨e .￨e getContentType￨e (￨e )￨e )￨e ;￨e verify￨e (￨e marshaller￨e ,￨e unmarshaller￨e )￨e ;￨e }￨f }￨d
public￨d class￨d RemoteDomainControllerTestCase￨d {￨d private￨e ManagementCommunicationService￨e communicationService￨e ;￨e private￨e DomainControllerOperationHandler￨e operationHandler￨e ;￨e private￨e RemoteDomainControllerConnection￨e domainControllerConnection￨e ;￨e @￨f Before￨f public￨f void￨f setup￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e ScheduledExecutorService￨e executorService￨e =￨e Executors￨e .￨e newScheduledThreadPool￨e (￨e 10￨e )￨e ;￨e communicationService￨e =￨e new￨e ManagementCommunicationService￨e (￨e )￨e ;￨e communicationService￨e .￨e getThreadFactoryInjector￨e (￨e )￨e .￨e inject￨e (￨e Executors￨e .￨e defaultThreadFactory￨e (￨e )￨e )￨e ;￨e communicationService￨e .￨e getExecutorServiceInjector￨e (￨e )￨e .￨e inject￨e (￨e executorService￨e )￨e ;￨e <START_BUG>￨b final￨b NetworkInterfaceService￨b networkInterfaceService￨b =￨b new￨b NetworkInterfaceService￨b (￨b "test"￨b ,￨b false￨b ,￨b false￨b ,￨b true￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b networkInterfaceService￨e .￨e start￨e (￨e null￨e )￨e ;￨e communicationService￨e .￨e getInterfaceInjector￨e (￨e )￨e .￨e inject￨e (￨e networkInterfaceService￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e communicationService￨e .￨e getPortInjector￨e (￨e )￨e .￨e inject￨e (￨e 12345￨e )￨e ;￨e operationHandler￨e =￨e new￨e DomainControllerOperationHandler￨e (￨e )￨e ;￨e operationHandler￨e .￨e getThreadFactoryInjector￨e (￨e )￨e .￨e inject￨e (￨e Executors￨e .￨e defaultThreadFactory￨e (￨e )￨e )￨e ;￨e operationHandler￨e .￨e getExecutorServiceInjector￨e (￨e )￨e .￨e inject￨e (￨e executorService￨e )￨e ;￨e operationHandler￨e .￨e getLocalFileRepositoryInjector￨e (￨e )￨e .￨e inject￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e manager￨e .￨e LocalFileRepository￨e (￨e new￨e ServerManagerEnvironment￨e (￨e System￨e .￨e getProperties￨e (￨e )￨e ,￨e false￨e ,￨e System￨e .￨e in￨e ,￨e System￨e .￨e out￨e ,￨e System￨e .￨e err￨e ,￨e "test"￨e ,￨e InetAddress￨e .￨e getLocalHost￨e (￨e )￨e ,￨e 3223￨e ,￨e InetAddress￨e .￨e getLocalHost￨e (￨e )￨e ,￨e 3223￨e ,￨e "java"￨e )￨e )￨e )￨e ;￨e final￨e DomainController￨e domainController￨e =￨e new￨e DomainController￨e (￨e )￨e ;￨e domainController￨e .￨e getDomainConfigDirInjector￨e (￨e )￨e .￨e inject￨e (￨e new￨e File￨e (￨e getClass￨e (￨e )￨e .￨e getResource￨e (￨e "/test/configuration"￨e )￨e .￨e toURI￨e (￨e )￨e )￨e )￨e ;￨e File￨e tmpDir￨e =￨e new￨e File￨e (￨e System￨e .￨e getProperty￨e (￨e "java.io.tmpdir"￨e )￨e )￨e ;￨e File￨e deploymentDir￨e =￨e new￨e File￨e (￨e tmpDir￨e ,￨e (￨e "domain-deployments-"￨e +￨e (￨e (￨e int￨e )￨e (￨e Math￨e .￨e random￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e deploymentDir￨e .￨e deleteOnExit￨e (￨e )￨e ;￨e deploymentDir￨e .￨e mkdirs￨e (￨e )￨e ;￨e domainController￨e .￨e getDomainDeploymentsDirInjector￨e (￨e )￨e .￨e inject￨e (￨e deploymentDir￨e )￨e ;￨e final￨e XMLMapper￨e mapper￨e =￨e Factory￨e .￨e create￨e (￨e )￨e ;￨e StandardElementReaderRegistrar￨e .￨e Factory￨e .￨e getRegistrar￨e (￨e )￨e .￨e registerStandardDomainReaders￨e (￨e mapper￨e )￨e ;￨e domainController￨e .￨e getXmlMapperInjector￨e (￨e )￨e .￨e inject￨e (￨e mapper￨e )￨e ;￨e domainController￨e .￨e getScheduledExecutorServiceInjector￨e (￨e )￨e .￨e inject￨e (￨e executorService￨e )￨e ;￨e domainController￨e .￨e start￨e (￨e null￨e )￨e ;￨e operationHandler￨e .￨e getDomainControllerInjector￨e (￨e )￨e .￨e inject￨e (￨e domainController￨e )￨e ;￨e operationHandler￨e .￨e start￨e (￨e null￨e )￨e ;￨e communicationService￨e .￨e addHandler￨e (￨e operationHandler￨e )￨e ;￨e communicationService￨e .￨e start￨e (￨e null￨e )￨e ;￨e domainControllerConnection￨e =￨e new￨e RemoteDomainControllerConnection￨e (￨e "sm"￨e ,￨e InetAddress￨e .￨e getLocalHost￨e (￨e )￨e ,￨e 12345￨e ,￨e InetAddress￨e .￨e getLocalHost￨e (￨e )￨e ,￨e 11223￨e ,￨e null￨e ,￨e 1000￨e ,￨e Executors￨e .￨e newScheduledThreadPool￨e (￨e 2￨e )￨e ,￨e Executors￨e .￨e defaultThreadFactory￨e (￨e )￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testRegister￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ValidatorImpl￨d extends￨d AbstractValidator￨d {￨d private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d ValidatorImpl￨d .￨d class￨d )￨d ;￨d private￨d ValidatorFactory￨d _validatorFactory￨d =￨d null￨d ;￨d private￨d Validator￨d _validator￨d =￨d null￨d ;￨d private￨d ValidationMode￨d _mode￨d =￨d ValidationMode￨d .￨d AUTO￨d ;￨d private￨d OpenJPAConfiguration￨d _conf￨d =￨d null￨d ;￨d private￨d Map￨d <￨d Integer￨d ,￨d Class￨d <￨d ?￨d >￨d [￨d ]￨d >￨d _validationGroups￨d =￨d new￨d HashMap￨d <￨d Integer￨d ,￨d Class￨d <￨d ?￨d >￨d [￨d ]￨d >￨d (￨d )￨d ;￨d private￨d static￨d HashMap￨d <￨d String￨d ,￨d Integer￨d >￨d _vgMapping￨d =￨d new￨d HashMap￨d <￨d String￨d ,￨d Integer￨d >￨d (￨d )￨d ;￨d public￨d static￨d final￨d String￨d VG_PRE_PERSIST￨d =￨d "javax.persistence.validation.group.pre-persist"￨d ;￨d public￨d static￨d final￨d String￨d VG_PRE_REMOVE￨d =￨d "javax.persistence.validation.group.pre-remove"￨d ;￨d public￨d static￨d final￨d String￨d VG_PRE_UPDATE￨d =￨d "javax.persistence.validation.group.pre-update"￨d ;￨d public￨d ValidatorImpl￨d (￨d )￨d {￨d }￨d public￨f ValidatorImpl￨f (￨f Configuration￨p conf￨p )￨f {￨f }￨f public￨f ValidatorImpl￨f (￨f ValidatorFactory￨p validatorFactory￨p ,￨p ValidationMode￨p mode￨p )￨f {￨f }￨f private￨f void￨f initialize￨f (￨f )￨f {￨f }￨f public￨f void￨f addValidationGroup￨f (￨f String￨p validationGroupName￨p ,￨p Class￨p <￨p ?￨p >￨p ...￨p vgs￨p )￨f {￨f }￨f public￨f void￨f addValidationGroup￨f (￨f Integer￨p event￨p ,￨p Class￨p <￨p ?￨p >￨p ...￨p validationGroup￨p )￨f {￨f }￨f public￨f void￨f addValidationGroup￨f (￨f String￨p validationGroupName￨p ,￨p String￨p group￨p )￨f {￨f }￨f private￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f getValidationGroup￨f (￨f String￨p vgName￨p ,￨p String￨p group￨p )￨f {￨f }￨f public￨f Class￨f <￨f ?￨f >￨f [￨f ]￨f getValidationGroup￨f (￨f Integer￨p event￨p )￨f {￨f }￨f public￨f boolean￨f isValidating￨f (￨f Integer￨p event￨p )￨f {￨f }￨f public￨f BeanDescriptor￨f getConstraintsForClass￨f (￨f Class￨p <￨p ?￨p >￨p cls￨p )￨f {￨f }￨f @￨f Override￨f public￨f <￨f T￨f >￨f ValidationException￨f validate￨f (￨f T￨p arg0￨p ,￨p int￨p event￨p )￨f {￨f }￨f @￨f Override￨f public￨f <￨f T￨f >￨f ValidationException￨f validateProperty￨f (￨f T￨p arg0￨p ,￨p String￨p property￨p ,￨p int￨p event￨p )￨f {￨f }￨f @￨f Override￨f public￨f <￨f T￨f >￨f ValidationException￨f validateValue￨f (￨f Class￨p <￨p T￨p >￨p arg0￨p ,￨p String￨p arg1￨p ,￨p Object￨p arg2￨p ,￨p int￨p event￨p )￨f {￨f }￨f @￨f Override￨f public￨f <￨f T￨f >￨f boolean￨f validating￨f (￨f T￨p arg0￨p ,￨p int￨p event￨p )￨f {￨f }￨f private￨f Integer￨f findEvent￨f (￨f String￨p validationProperty￨p )￨f {￨f }￨f private￨f ValidatorFactory￨f getDefaultValidatorFactory￨f (￨f )￨f {￨f ValidatorFactory￨e factory￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b factory￨b =￨b Validation￨b .￨b buildDefaultValidatorFactory￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f javax￨p .￨p validation￨p e￨p )￨f {￨f }￨f return￨e factory￨e ;￨e }￨f private￨f void￨f addDefaultValidationGroups￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TreeColumn￨d extends￨d Item￨d {￨d int￨e labelHandle￨e ;￨e int￨e imageHandle￨e ;￨e int￨e buttonHandle￨e ;￨e Tree￨e parent￨e ;￨e int￨e modelIndex￨e ;￨e int￨e lastButton￨e ;￨e int￨e lastTime￨e ;￨e int￨e lastX￨e ;￨e int￨e lastWidth￨e ;￨e boolean￨e customDraw￨e ;￨e boolean￨e useFixedWidth￨e ;￨e String￨e toolTipText￨e ;￨e public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f TreeColumn￨f (￨f Tree￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f public￨f void￨f addControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f createWidget￨f (￨f int￨p index￨p )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f int￨f getAlignment￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMoveable￨f (￨f )￨f {￨f }￨f public￨f Tree￨f getParent￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getResizable￨f (￨f )￨f {￨f }￨f public￨f String￨f getToolTipText￨f (￨f )￨f {￨f }￨f public￨f int￨f getWidth￨f (￨f )￨f {￨f }￨f int￨f gtk_clicked￨f (￨f int￨p widget￨p )￨f {￨f }￨f int￨f gtk_mnemonic_activate￨f (￨f int￨p widget￨p ,￨p int￨p arg1￨p )￨f {￨f }￨f int￨f gtk_size_allocate￨f (￨f int￨p widget￨p ,￨p int￨p allocation￨p )￨f {￨f }￨f void￨f hookEvents￨f (￨f )￨f {￨f }￨f public￨f void￨f pack￨f (￨f )￨f {￨f checkWidget￨e (￨e )￨e ;￨e int￨e width￨e =￨e 0￨e ;￨e if￨j (￨j (￨c buttonHandle￨c )￨c !=￨c 0￨c )￨j {￨j GtkRequisition￨e requisition￨e =￨e new￨e GtkRequisition￨e (￨e )￨e ;￨e OS￨e .￨e gtk_widget_size_request￨e (￨e buttonHandle￨e ,￨e requisition￨e )￨e ;￨e width￨e =￨e requisition￨e .￨e width￨e ;￨e }￨j if￨j (￨j (￨c (￨c parent￨c .￨c style￨c )￨c &￨c (￨c SWT￨c .￨c VIRTUAL￨c )￨c )￨c !=￨c 0￨c )￨j {￨j }￨j else￨j {￨j int￨e iter￨e =￨e OS￨e .￨e g_malloc￨e (￨e OS￨e .￨e GtkTreeIter_sizeof￨e (￨e )￨e )￨e ;￨e if￨j (￨j OS￨c .￨c gtk_tree_model_get_iter_first￨c (￨c parent￨c .￨c modelHandle￨c ,￨c iter￨c )￨c )￨j {￨j do￨l {￨l <START_BUG>￨b width￨b =￨b Math￨b .￨b max￨b (￨b width￨b ,￨b parent￨b .￨b calculateWidth￨b (￨b handle￨b ,￨b iter￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l while￨l (￨l OS￨c .￨c gtk_tree_model_iter_next￨c (￨c parent￨c .￨c modelHandle￨c ,￨c iter￨c )￨c )￨l ;￨l }￨j OS￨e .￨e g_free￨e (￨e iter￨e )￨e ;￨e }￨j setWidth￨e (￨e width￨e )￨e ;￨e }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseParent￨f (￨f )￨f {￨f }￨f public￨f void￨f removeControlListener￨f (￨f ControlListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setAlignment￨f (￨f int￨p alignment￨p )￨f {￨f }￨f void￨f setFontDescription￨f (￨f int￨p font￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setMoveable￨f (￨f boolean￨p moveable￨p )￨f {￨f }￨f public￨f void￨f setResizable￨f (￨f boolean￨p resizable￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setToolTipText￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f setToolTipText￨f (￨f Shell￨p shell￨p ,￨p String￨p newString￨p )￨f {￨f }￨f public￨f void￨f setWidth￨f (￨f int￨p width￨p )￨f {￨f }￨f }￨d
public￨d class￨d StatGraphVisualizer￨d extends￨d AbstractVisualizer￨d implements￨d ActionListener￨d ,￨d Clearable￨d {￨d private￨e static￨e transient￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨f final￨f String￨f [￨f ]￨f COLUMNS￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f final￨f String￨f [￨f ]￨f GRAPH_COLUMNS￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e final￨e String￨e TOTAL_ROW_LABEL￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_report_total_label"￨e )￨e ;￨e protected￨e JTable￨e myJTable￨e ;￨e protected￨e JScrollPane￨e myScrollPane￨e ;￨e private￨e transient￨e ObjectTableModel￨e model￨e ;￨e Map￨e tableRows￨e =￨e Collections￨e .￨e synchronizedMap￨e (￨e new￨e HashMap￨e (￨e )￨e )￨e ;￨e protected￨e AxisGraph￨e graphPanel￨e =￨e null￨e ;￨e protected￨e VerticalPanel￨e graph￨e =￨e null￨e ;￨e protected￨e JScrollPane￨e graphScroll￨e =￨e null￨e ;￨e protected￨e JSplitPane￨e spane￨e =￨e null￨e ;￨e protected￨e JLabeledChoice￨e columns￨e =￨e new￨e JLabeledChoice￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_column"￨e )￨e ,￨e GRAPH_COLUMNS￨e )￨e ;￨e protected￨e double￨e [￨e ]￨e [￨e ]￨e data￨e =￨e null￨e ;￨e protected￨e JButton￨e displayButton￨e =￨e new￨e JButton￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_display"￨e )￨e )￨e ;￨e protected￨e JButton￨e saveGraph￨e =￨e new￨e JButton￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_save"￨e )￨e )￨e ;￨e protected￨e JButton￨e saveTable￨e =￨e new￨e JButton￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_save_table"￨e )￨e )￨e ;￨e JLabeledTextField￨e graphTitle￨e =￨e new￨e JLabeledTextField￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_user_title"￨e )￨e )￨e ;￨e JLabeledTextField￨e graphWidth￨e =￨e new￨e JLabeledTextField￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_width"￨e )￨e )￨e ;￨e JLabeledTextField￨e graphHeight￨e =￨e new￨e JLabeledTextField￨e (￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_height"￨e )￨e )￨e ;￨e protected￨e String￨e yAxisLabel￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_response_time"￨e )￨e ;￨e protected￨e String￨e yAxisTitle￨e =￨e JMeterUtils￨e .￨e getResString￨e (￨e "aggregate_graph_ms"￨e )￨e ;￨e protected￨e boolean￨e saveGraphToFile￨e =￨e false￨e ;￨e protected￨e int￨e defaultWidth￨e =￨e 400￨e ;￨e protected￨e int￨e defaultHeight￨e =￨e 300￨e ;￨e public￨f StatGraphVisualizer￨f (￨f )￨f {￨f }￨f public￨f String￨f getLabelResource￨f (￨f )￨f {￨f }￨f public￨f void￨f add￨f (￨f SampleResult￨p res￨p )￨f {￨f }￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f public￨f void￨f makeGraph￨f (￨f )￨f {￨f String￨e wstr￨e =￨e graphWidth￨e .￨e getText￨e (￨e )￨e ;￨e String￨e hstr￨e =￨e graphHeight￨e .￨e getText￨e (￨e )￨e ;￨e if￨j (￨j (￨c wstr￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j wstr￨e =￨e "450"￨e ;￨e }￨j if￨j (￨j (￨c hstr￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j hstr￨e =￨e "250"￨e ;￨e }￨j int￨e width￨e =￨e Integer￨e .￨e parseInt￨e (￨e wstr￨e )￨e ;￨e int￨e height￨e =￨e Integer￨e .￨e parseInt￨e (￨e hstr￨e )￨e ;￨e graphPanel￨e .￨e setData￨e (￨e this￨e .￨e getData￨e (￨e )￨e )￨e ;￨e graphPanel￨e .￨e setHeight￨e (￨e height￨e )￨e ;￨e graphPanel￨e .￨e setWidth￨e (￨e width￨e )￨e ;￨e graphPanel￨e .￨e setTitle￨e (￨e graphTitle￨e .￨e getText￨e (￨e )￨e )￨e ;￨e graphPanel￨e .￨e setXAxisLabels￨e (￨e getAxisLabels￨e (￨e )￨e )￨e ;￨e graphPanel￨e .￨e setXAxisTitle￨e (￨e columns￨e .￨e getText￨e (￨e )￨e )￨e ;￨e graphPanel￨e .￨e setYAxisLabels￨e (￨e this￨e .￨e yAxisLabel￨e )￨e ;￨e graphPanel￨e .￨e setYAxisTitle￨e (￨e this￨e .￨e yAxisTitle￨e )￨e ;￨e graphPanel￨e .￨e setPreferredSize￨e (￨e new￨e Dimension￨e (￨e width￨e ,￨e height￨e )￨e )￨e ;￨e <START_BUG>￨b graph￨b .￨b resize￨b (￨b new￨b Dimension￨b (￨b graph￨b .￨b getWidth￨b (￨b )￨b ,￨b (￨b height￨b +￨b 120￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b spane￨e .￨e repaint￨e (￨e )￨e ;￨e }￨f public￨f double￨f [￨f ]￨f [￨f ]￨f getData￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getAxisLabels￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getAllTableData￨f (￨f )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p event￨p )￨f {￨f }￨f public￨f JComponent￨f getPrintableComponent￨f (￨f )￨f {￨f }￨f }￨d
@￨d Listener￨d public￨d class￨d CacheRegistry￨d <￨d K￨d ,￨d V￨d >￨d implements￨d Registry￨d <￨d K￨d ,￨d V￨d >￨d {￨d private￨e final￨e List￨e <￨e Registry￨e .￨e Listener￨e <￨e K￨e ,￨e V￨e >￨e >￨e listeners￨e =￨e new￨e CopyOnWriteArrayList￨e <￨e >￨e (￨e )￨e ;￨e private￨e final￨e RegistryEntryProvider￨e <￨e K￨e ,￨e V￨e >￨e provider￨e ;￨e private￨e final￨e Cache￨e <￨e Node￨e ,￨e Map￨e .￨e Entry￨e <￨e K￨e ,￨e V￨e >￨e >￨e cache￨e ;￨e private￨e final￨e CacheInvoker￨e invoker￨e ;￨e private￨e final￨e Group￨e group￨e ;￨e private￨e final￨e NodeFactory￨e <￨e Address￨e >￨e factory￨e ;￨e public￨f CacheRegistry￨f (￨f CacheRegistryFactoryConfiguration￨p <￨p K￨p ,￨p V￨p >￨p config￨p ,￨p RegistryEntryProvider￨p <￨p K￨p ,￨p V￨p >￨p provider￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f addListener￨f (￨f Registry￨p .￨p Listener￨p <￨p K￨p ,￨p V￨p >￨p listener￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f removeListener￨f (￨f Registry￨p .￨p Listener￨p <￨p K￨p ,￨p V￨p >￨p listener￨p )￨f {￨f }￨f @￨f Override￨f public￨f Group￨f getGroup￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Map￨f <￨f K￨f ,￨f V￨f >￨f getEntries￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Map￨f .￨f Entry￨f <￨f K￨f ,￨f V￨f >￨f getEntry￨f (￨f Node￨p node￨p )￨f {￨f }￨f @￨f Override￨f public￨f Map￨f .￨f Entry￨f <￨f K￨f ,￨f V￨f >￨f getLocalEntry￨f (￨f )￨f {￨f }￨f @￨f TopologyChanged￨f public￨f void￨f topologyChanged￨f (￨f TopologyChangedEvent￨p <￨p Address￨p ,￨p Node￨p >￨p event￨p )￨f {￨f if￨j (￨j event￨c .￨c isPre￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j List￨e <￨e Address￨e >￨e newAddresses￨e =￨e event￨e .￨e getConsistentHashAtEnd￨e (￨e )￨e .￨e getMembers￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c newAddresses￨c .￨c get￨c (￨c 0￨c )￨c .￨c equals￨c (￨c event￨c .￨c getCache￨c (￨c )￨c .￨c getCacheManager￨c (￨c )￨c .￨c getAddress￨c (￨c )￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j Set￨e <￨e Address￨e >￨e addresses￨e =￨e new￨e java￨e .￨e util￨e .￨e HashSet￨e (￨e event￨e .￨e getConsistentHashAtStart￨e (￨e )￨e .￨e getMembers￨e (￨e )￨e )￨e ;￨e addresses￨e .￨e removeAll￨e (￨e newAddresses￨e )￨e ;￨e final￨e List￨e <￨e Node￨e >￨e nodes￨e =￨e new￨e java￨e .￨e util￨e .￨e ArrayList￨e (￨e addresses￨e .￨e size￨e (￨e )￨e )￨e ;￨e for￨l (￨l Address￨c address￨c :￨c addresses￨c )￨l {￨l nodes￨e .￨e add￨e (￨e this￨e .￨e factory￨e .￨e createNode￨e (￨e address￨e )￨e )￨e ;￨e }￨l CacheRegistry￨f <￨f K￨f ,￨f V￨f >￨f .￨f Operation￨f <￨f Map￨f <￨f K￨f ,￨f V￨f >￨f >￨f operation￨f =￨f new￨f Operation￨f <￨f Map￨f <￨f K￨f ,￨f V￨f >￨f >￨f (￨f )￨f (￨f )￨f {￨f @￨f Override￨f public￨f Map￨f <￨f K￨f ,￨f V￨f >￨f invoke￨f (￨f Cache￨p <￨p Node￨p ,￨p Map￨p .￨p Entry￨p <￨p K￨p ,￨p V￨p >￨p >￨p cache￨p )￨f {￨f Map￨e <￨e K￨e ,￨e V￨e >￨e removed￨e =￨e new￨e HashMap￨e <￨e >￨e (￨e )￨e ;￨e for￨l (￨l Node￨c node￨c :￨c nodes￨c )￨l {￨l Map￨e .￨e Entry￨e <￨e K￨e ,￨e V￨e >￨e old￨e =￨e cache￨e .￨e remove￨e (￨e node￨e )￨e ;￨e if￨j (￨j old￨c !=￨c null￨c )￨j {￨j removed￨e .￨e put￨e (￨e old￨e .￨e getKey￨e (￨e )￨e ,￨e old￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨j }￨l return￨e removed￨e ;￨e }￨f }￨f ;￨e <START_BUG>￨b Map￨b <￨b K￨b ,￨b V￨b >￨b removed￨b =￨b this￨b .￨b invoker￨b .￨b invoke￨b (￨b this￨b .￨b cache￨b ,￨b operation￨b ,￨b FORCE_SYNCHRONOUS￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j !￨c (￨c removed￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j for￨l (￨l Listener￨c <￨c K￨c ,￨c V￨c >￨c listener￨c :￨c this￨c .￨c listeners￨c )￨l {￨l listener￨e .￨e removedEntries￨e (￨e removed￨e )￨e ;￨e }￨l }￨j }￨f @￨f CacheEntryModified￨f public￨f void￨f modified￨f (￨f CacheEntryModifiedEvent￨p <￨p Node￨p ,￨p Map￨p .￨p Entry￨p <￨p K￨p ,￨p V￨p >￨p >￨p event￨p )￨f {￨f }￨f @￨f CacheEntryRemoved￨f public￨f void￨f removed￨f (￨f CacheEntryRemovedEvent￨p <￨p Node￨p ,￨p Map￨p .￨p Entry￨p <￨p K￨p ,￨p V￨p >￨p >￨p event￨p )￨f {￨f }￨f abstract￨d class￨d Operation￨d <￨d R￨d >￨d implements￨d CacheInvoker￨d .￨d Operation￨d <￨d Node￨d ,￨d Map￨d .￨d Entry￨d <￨d K￨d ,￨d V￨d >￨d ,￨d R￨d >￨d {￨d }￨d }￨d
public￨d jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e RELEASE_VERSION￨e ,￨e ModelType￨e .￨e STRING￨e ,￨e false￨e )￨e .￨e setValidator￨e (￨e DomainRootDefinition￨e .￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e RELEASE_CODENAME￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e RELEASE_CODENAME￨e ,￨e ModelType￨e .￨e STRING￨e ,￨e false￨e )￨e .￨e setValidator￨e (￨e DomainRootDefinition￨e .￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e PRODUCT_NAME￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e PRODUCT_NAME￨e ,￨e ModelType￨e .￨e STRING￨e ,￨e true￨e )￨e .￨e setValidator￨e (￨e DomainRootDefinition￨e .￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e PRODUCT_VERSION￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e PRODUCT_VERSION￨e ,￨e ModelType￨e .￨e STRING￨e ,￨e true￨e )￨e .￨e setValidator￨e (￨e DomainRootDefinition￨e .￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e MANAGEMENT_MAJOR_VERSION￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e MANAGEMENT_MAJOR_VERSION￨e ,￨e ModelType￨e .￨e INT￨e ,￨e false￨e )￨e .￨e setValidator￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e operations￨e .￨e validation￨e .￨e IntRangeValidator￨e (￨e 1￨e )￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e MANAGEMENT_MINOR_VERSION￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e MANAGEMENT_MINOR_VERSION￨e ,￨e ModelType￨e .￨e INT￨e ,￨e false￨e )￨e .￨e setValidator￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e operations￨e .￨e validation￨e .￨e IntRangeValidator￨e (￨e 0￨e )￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e MANAGEMENT_MICRO_VERSION￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ModelDescriptionConstants￨e .￨e MANAGEMENT_MICRO_VERSION￨e ,￨e ModelType￨e .￨e INT￨e ,￨e false￨e )￨e .￨e setValidator￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e operations￨e .￨e validation￨e .￨e IntRangeValidator￨e (￨e 0￨e )￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨e static￨e final￨e SimpleAttributeDefinition￨e PROCESS_TYPE￨e =￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e .￨e create￨e (￨e ServerDescriptionConstants￨e .￨e PROCESS_TYPE￨e ,￨e ModelType￨e .￨e STRING￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e setValidator￨e (￨e DomainRootDefinition￨e .￨e NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨e )￨e .￨e build￨e (￨e )￨e ;￨e public￨d static￨d final￨d SimpleAttributeDefinition￨d LAUNCH_TYPE￨d =￨d org￨d .￨d jboss￨d .￨d as￨d .￨d controller￨d .￨d SimpleAttributeDefinitionBuilder￨d .￨d create￨d (￨d ServerDescriptionConstants￨d .￨d LAUNCH_TYPE￨d ,￨d ModelType￨d .￨d STRING￨d )￨d .￨d setValidator￨d (￨d new￨d org￨d .￨d jboss￨d .￨d as￨d .￨d controller￨d .￨d operations￨d .￨d validation￨d .￨d EnumValidator￨d <￨d org￨d .￨d jboss￨d .￨d as￨d .￨d server￨d .￨d ServerEnvironment￨d .￨d LaunchType￨d >￨d (￨d org￨d .￨d jboss￨d .￨d as￨d .￨d server￨d .￨d ServerEnvironment￨d .￨d LaunchType￨d .￨d class￨d ,￨d false￨d ,￨d false￨d )￨d )￨d .￨d setStorageRuntime￨d (￨d )￨d .￨d build￨d (￨d )￨d ;￨d public￨d static￨d final￨d SimpleAttributeDefinition￨d LOCAL_HOST_NAME￨d =￨d org￨d .￨d jboss￨d .￨d as￨d .￨d controller￨d .￨d SimpleAttributeDefinitionBuilder￨d .￨d create￨d (￨d ModelDescriptionConstants￨d .￨d LOCAL_HOST_NAME￨d ,￨d ModelType￨d .￨d STRING￨d ,￨d true￨d )￨d .￨d setValidator￨d (￨d DomainRootDefinition￨d .￨d NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨d )￨d .￨d setStorageRuntime￨d (￨d )￨d .￨d build￨d (￨d )￨d ;￨d private￨d final￨d DomainController￨d domainController￨d ;￨d private￨d final￨d LocalHostControllerInfo￨d hostControllerInfo￨d ;￨d private￨d final￨d HostControllerEnvironment￨d environment￨d ;￨d private￨d final￨d ExtensibleConfigurationPersister￨d configurationPersister￨d ;￨d private￨d final￨d ContentRepository￨d contentRepo￨d ;￨d private￨d final￨d HostFileRepository￨d fileRepository￨d ;￨d private￨d final￨d boolean￨d isMaster￨d ;￨d private￨d final￨d ExtensionRegistry￨d extensionRegistry￨d ;￨d private￨d final￨d IgnoredDomainResourceRegistry￨d ignoredDomainResourceRegistry￨d ;￨d private￨d final￨d PathManagerService￨d pathManager￨d ;￨d private￨d final￨d DomainControllerRuntimeIgnoreTransformationRegistry￨d runtimeIgnoreTransformationRegistry￨d ;￨d private￨d final￨d DelegatingConfigurableAuthorizer￨d authorizer￨d ;￨d public￨d DomainRootDefinition￨d (￨d final￨d DomainController￨d domainController￨d ,￨d final￨d HostControllerEnvironment￨d environment￨d ,￨d final￨d ExtensibleConfigurationPersister￨d configurationPersister￨d ,￨d final￨d ContentRepository￨d contentRepo￨d ,￨d final￨d HostFileRepository￨d fileRepository￨d ,￨d final￨d boolean￨d isMaster￨d ,￨d final￨d LocalHostControllerInfo￨d hostControllerInfo￨d ,￨d final￨d ExtensionRegistry￨d extensionRegistry￨d ,￨d final￨d IgnoredDomainResourceRegistry￨d ignoredDomainResourceRegistry￨d ,￨d final￨d PathManagerService￨d pathManager￨d ,￨d final￨d DomainControllerRuntimeIgnoreTransformationRegistry￨d runtimeIgnoreTransformationRegistry￨d ,￨d final￨d DelegatingConfigurableAuthorizer￨d authorizer￨d )￨d {￨d }￨d @￨f Override￨f public￨f void￨f registerAttributes￨f (￨f ManagementResourceRegistration￨p resourceRegistration￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registerOperations￨f (￨f ManagementResourceRegistration￨p resourceRegistration￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registerChildren￨f (￨f ManagementResourceRegistration￨p resourceRegistration￨p )￨f {￨f super￨e .￨e registerChildren￨e (￨e resourceRegistration￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e SystemPropertyResourceDefinition￨e .￨e createForDomainOrHost￨e (￨e DOMAIN￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e resource￨e .￨e InterfaceDefinition￨e (￨e InterfaceAddHandler￨e .￨e NAMED_INSTANCE￨e ,￨e InterfaceRemoveHandler￨e .￨e INSTANCE￨e ,￨e false￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e CoreManagementResourceDefinition￨e .￨e forDomain￨e (￨e authorizer￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e ProfileResourceDefinition￨e (￨e extensionRegistry￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e PathResourceDefinition￨e .￨e createNamed￨e (￨e pathManager￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e DomainDeploymentResourceDefinition￨e .￨e createForDomainRoot￨e (￨e isMaster￨e ,￨e contentRepo￨e ,￨e fileRepository￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e server￨e .￨e deploymentoverlay￨e .￨e DeploymentOverlayDefinition￨e (￨e null￨e ,￨e contentRepo￨e ,￨e fileRepository￨e )￨e )￨e ;￨e <START_BUG>￨b resourceRegistration￨b .￨b registerSubModel￨b (￨b new￨b ServerGroupResourceDefinition￨b (￨b isMaster￨b ,￨b contentRepo￨b ,￨b fileRepository￨b ,￨b runtimeIgnoreTransformationRegistry￨b )￨b )￨b ;￨b <END_BUG>￨b resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e resource￨e .￨e SocketBindingGroupResourceDefinition￨e (￨e SocketBindingGroupAddHandler￨e .￨e INSTANCE￨e ,￨e DomainSocketBindingGroupRemoveHandler￨e .￨e INSTANCE￨e ,￨e true￨e ,￨e SocketBindingResourceDefinition￨e .￨e INSTANCE￨e ,￨e RemoteDestinationOutboundSocketBindingResourceDefinition￨e .￨e INSTANCE￨e ,￨e LocalDestinationOutboundSocketBindingResourceDefinition￨e .￨e INSTANCE￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e management￨e .￨e client￨e .￨e content￨e .￨e ManagedDMRContentTypeResourceDefinition￨e (￨e contentRepo￨e ,￨e ModelDescriptionConstants￨e .￨e ROLLOUT_PLAN￨e ,￨e PathElement￨e .￨e pathElement￨e (￨e ModelDescriptionConstants￨e .￨e MANAGEMENT_CLIENT_CONTENT￨e ,￨e ModelDescriptionConstants￨e .￨e ROLLOUT_PLANS￨e )￨e ,￨e new￨e DomainRootDefinition￨e .￨e RolloutPlanValidator￨e (￨e )￨e ,￨e DomainResolver￨e .￨e getResolver￨e (￨e ModelDescriptionConstants￨e .￨e ROLLOUT_PLANS￨e )￨e ,￨e DomainResolver￨e .￨e getResolver￨e (￨e ModelDescriptionConstants￨e .￨e ROLLOUT_PLAN￨e )￨e )￨e )￨e ;￨e resourceRegistration￨e .￨e registerSubModel￨e (￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e extension￨e .￨e ExtensionResourceDefinition￨e (￨e extensionRegistry￨e ,￨e true￨e ,￨e false￨e ,￨e (￨e !￨e (￨e isMaster￨e )￨e )￨e )￨e )￨e ;￨e DomainTransformers￨e .￨e initializeDomainRegistry￨e (￨e extensionRegistry￨e .￨e getTransformerRegistry￨e (￨e )￨e )￨e ;￨e }￨f public￨f void￨f initialize￨f (￨f ManagementResourceRegistration￨p resourceRegistration￨p )￨f {￨f }￨f public￨d static￨d class￨d RolloutPlanValidator￨d extends￨d AbstractParameterValidator￨d {￨d private￨e static￨e final￨e List￨e <￨e String￨e >￨e ALLOWED_SERVER_GROUP_CHILDREN￨e =￨e Arrays￨e .￨e asList￨e (￨e ModelDescriptionConstants￨e .￨e ROLLING_TO_SERVERS￨e ,￨e ModelDescriptionConstants￨e .￨e MAX_FAILURE_PERCENTAGE￨e ,￨e ModelDescriptionConstants￨e .￨e MAX_FAILED_SERVERS￨e )￨e ;￨e @￨f Override￨f public￨f void￨f validateParameter￨f (￨f String￨f parameterName￨f ,￨f ModelNode￨f plan￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f validateInSeriesServerGroup￨f (￨f ModelNode￨f serverGroup￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d AbstractServer￨d {￨d static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.server"￨e )￨e ;￨e private￨e ServerModel￨e config￨e ;￨e private￨e ServiceContainer￨e serviceContainer￨e ;￨e private￨e final￨e ServerEnvironment￨e environment￨e ;￨e protected￨f AbstractServer￨f (￨f final￨p ServerEnvironment￨p environment￨p )￨f {￨f }￨f public￨f ServerEnvironment￨f getEnvironment￨f (￨f )￨f {￨f }￨f public￨f ServerModel￨f getConfig￨f (￨f )￨f {￨f }￨f public￨f abstract￨f void￨f start￨f (￨f )￨f throws￨f ServerStartException￨f (￨f )￨f {￨f }￨f void￨f start￨f (￨f final￨f ServerModel￨f config￨f )￨f throws￨f ServerStartException￨f (￨f )￨f {￨f if￨j (￨j config￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e "null<seq2seq4repair_space>standalone<seq2seq4repair_space>config"￨e )￨e ;￨e }￨j this￨e .￨e config￨e =￨e config￨e ;￨e <START_BUG>￨b AbstractServer￨b .￨b log￨b .￨b infof￨b (￨b "Starting<seq2seq4repair_space>server<seq2seq4repair_space>'%s'"￨b ,￨b config￨b .￨b getServerName￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b serviceContainer￨e =￨e Factory￨e .￨e create￨e (￨e )￨e ;￨e final￨e ServerStartupListener￨e listener￨e =￨e new￨e ServerStartupListener￨e (￨e createListenerCallback￨e (￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e ServerStartBatchBuilder￨e subsystemBatchBuilder￨e =￨e new￨e ServerStartBatchBuilder￨e (￨e serviceContainer￨e .￨e batchBuilder￨e (￨e )￨e ,￨e listener￨e )￨e ;￨e subsystemBatchBuilder￨e .￨e addListener￨e (￨e listener￨e )￨e ;￨e final￨e ServiceActivatorContext￨e subsystemActivatorContext￨e =￨e new￨e org￨e .￨e jboss￨e .￨e msc￨e .￨e service￨e .￨e ServiceActivatorContextImpl￨e (￨e subsystemBatchBuilder￨e )￨e ;￨e config￨e .￨e activateSubsystems￨e (￨e subsystemActivatorContext￨e )￨e ;￨e listener￨f .￨f startBatch￨f (￨f new￨f Runnable￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f final￨e ServerStartBatchBuilder￨e deploymentBatchBuilder￨e =￨e new￨e ServerStartBatchBuilder￨e (￨e serviceContainer￨e .￨e batchBuilder￨e (￨e )￨e ,￨e listener￨e )￨e ;￨e deploymentBatchBuilder￨e .￨e addListener￨e (￨e listener￨e )￨e ;￨e final￨e ServiceActivatorContext￨e deploymentActivatorContext￨e =￨e new￨e org￨e .￨e jboss￨e .￨e msc￨e .￨e service￨e .￨e ServiceActivatorContextImpl￨e (￨e deploymentBatchBuilder￨e )￨e ;￨e listener￨e .￨e startBatch￨e (￨e null￨e )￨e ;￨e config￨e .￨e activateDeployments￨e (￨e deploymentActivatorContext￨e )￨e ;￨e listener￨e .￨e finish￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f deploymentBatchBuilder￨e .￨e install￨e (￨e )￨e ;￨e listener￨e .￨e finishBatch￨e (￨e )￨e ;￨e }￨f catch￨f (￨f ServiceRegistryException￨p e￨p )￨f {￨f throw￨e new￨e RuntimeException￨e (￨e e￨e )￨e ;￨e }￨f }￨f }￨f )￨e ;￨e subsystemBatchBuilder￨e .￨e install￨e (￨e )￨e ;￨e listener￨e .￨e finishBatch￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f throw￨e new￨e ServerStartException￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>start<seq2seq4repair_space>server"￨e ,￨e t￨e )￨e ;￨e }￨f }￨f public￨f void￨f stop￨f (￨f )￨f {￨f }￨f abstract￨f Callback￨f createListenerCallback￨f (￨f )￨f {￨f }￨f }￨d
public￨d (￨f String￨p filename￨p )￨f {￨f }￨f synchronized￨f String￨f getTempSSTablePath￨f (￨f )￨f {￨f }￨f public￨f String￨f getTempSSTableFileName￨f (￨f )￨f {￨f }￨f Future￨f <￨f ?￨f >￨f switchMemtable￨f (￨f Memtable￨f oldMemtable￨f ,￨f final￨f boolean￨f writeCommitLog￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f switchBinaryMemtable￨f (￨f String￨f key￨f ,￨f byte￨f [￨f ]￨f buffer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f forceFlushIfExpired￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f Future￨f <￨f ?￨f >￨f forceFlush￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f forceBlockingFlush￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f public￨f void￨f forceFlushBinary￨f (￨f )￨f {￨f }￨f Memtable￨f apply￨f (￨f String￨f key￨f ,￨f ColumnFamily￨f columnFamily￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f applyBinary￨f (￨f String￨f key￨f ,￨f byte￨f [￨f ]￨f buffer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f static￨f ColumnFamily￨f removeDeleted￨f (￨f ColumnFamily￨p cf￨p )￨f {￨f }￨f public￨f static￨f int￨f getDefaultGCBefore￨f (￨f )￨f {￨f }￨f public￨f static￨f ColumnFamily￨f removeDeleted￨f (￨f ColumnFamily￨p cf￨p ,￨p int￨p gcBefore￨p )￨f {￨f }￨f private￨f static￨f void￨f removeDeletedStandard￨f (￨f ColumnFamily￨p cf￨p ,￨p int￨p gcBefore￨p )￨f {￨f }￨f private￨f static￨f void￨f removeDeletedSuper￨f (￨f ColumnFamily￨p cf￨p ,￨p int￨p gcBefore￨p )￨f {￨f }￨f void￨f onMemtableFlush￨f (￨f CommitLog￨f .￨f CommitLogContext￨f cLogCtx￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f addSSTable￨f (￨f SSTableReader￨p sstable￨p )￨f {￨f }￨f static￨f Set￨f <￨f List￨f <￨f SSTableReader￨f >￨f >￨f getCompactionBuckets￨f (￨f Iterable￨p <￨p SSTableReader￨p >￨p files￨p ,￨p long￨p min￨p )￨f {￨f }￨f int￨f doCompaction￨f (￨f int￨f minThreshold￨f ,￨f int￨f maxThreshold￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f doMajorCompaction￨f (￨f long￨f skip￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f doMajorCompactionInternal￨f (￨f long￨f skip￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f long￨f getExpectedCompactedFileSize￨f (￨f Iterable￨p <￨p SSTableReader￨p >￨p sstables￨p )￨f {￨f }￨f SSTableReader￨f getMaxSizeFile￨f (￨f Iterable￨p <￨p SSTableReader￨p >￨p sstables￨p )￨f {￨f }￨f List￨f <￨f SSTableReader￨f >￨f doAntiCompaction￨f (￨f Collection￨f <￨f Range￨f >￨f ranges￨f ,￨f InetAddress￨f target￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f forceCleanup￨f (￨f )￨f {￨f }￨f void￨f doCleanupCompaction￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f doCleanup￨f (￨f SSTableReader￨f sstable￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f List￨f <￨f SSTableReader￨f >￨f doFileAntiCompaction￨f (￨f Collection￨f <￨f SSTableReader￨f >￨f sstables￨f ,￨f final￨f Collection￨f <￨f Range￨f >￨f ranges￨f ,￨f InetAddress￨f target￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f int￨f doFileCompaction￨f (￨f Collection￨f <￨f SSTableReader￨f >￨f sstables￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f int￨f doFileCompaction￨f (￨f Collection￨f <￨f SSTableReader￨f >￨f sstables￨f ,￨f int￨f gcBefore￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f gcAfterRpcTimeout￨f (￨f )￨f {￨f }￨f void￨f doReadonlyCompaction￨f (￨f InetAddress￨f initiator￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f long￨f getTotalBytes￨f (￨f Iterable￨p <￨p SSTableReader￨p >￨p sstables￨p )￨f {￨f }￨f public￨f static￨f List￨f <￨f Memtable￨f >￨f getUnflushedMemtables￨f (￨f String￨p cfName￨p )￨f {￨f }￨f static￨f Set￨f <￨f Memtable￨f >￨f getMemtablesPendingFlushNotNull￨f (￨f String￨p columnFamilyName￨p )￨f {￨f }￨f Condition￨f submitFlush￨f (￨f final￨p IFlushable￨p flushable￨p )￨f {￨f }￨f public￨f boolean￨f isSuper￨f (￨f )￨f {￨f }￨f public￨f int￨f getMemtableColumnsCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getMemtableDataSize￨f (￨f )￨f {￨f }￨f public￨f int￨f getMemtableSwitchCount￨f (￨f )￨f {￨f }￨f private￨f Memtable￨f getMemtableThreadSafe￨f (￨f )￨f {￨f }￨f public￨f Iterator￨f <￨f DecoratedKey￨f >￨f memtableKeyIterator￨f (￨f )￨f throws￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f SSTableReader￨f >￨f getSSTables￨f (￨f )￨f {￨f }￨f public￨f int￨f getReadCount￨f (￨f )￨f {￨f }￨f public￨f double￨f getReadLatency￨f (￨f )￨f {￨f }￨f public￨f int￨f getPendingTasks￨f (￨f )￨f {￨f }￨f public￨f int￨f getWriteCount￨f (￨f )￨f {￨f }￨f public￨f double￨f getWriteLatency￨f (￨f )￨f {￨f }￨f public￨f ColumnFamily￨f getColumnFamily￨f (￨f String￨f key￨f ,￨f QueryPath￨f path￨f ,￨f byte￨f [￨f ]￨f start￨f ,￨f byte￨f [￨f ]￨f finish￨f ,￨f boolean￨f reversed￨f ,￨f int￨f limit￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f ColumnFamily￨f getColumnFamily￨f (￨f QueryFilter￨f filter￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f ColumnFamily￨f getColumnFamily￨f (￨f QueryFilter￨f filter￨f ,￨f int￨f gcBefore￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f ColumnFamily￨f getColumnFamilyInternal￨f (￨f QueryFilter￨f filter￨f ,￨f int￨f gcBefore￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f RangeReply￨f getKeyRange￨f (￨f final￨f String￨f startWith￨f ,￨f final￨f String￨f stopAt￨f ,￨f int￨f maxResults￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f public￨f RangeReply￨f getKeyRangeRaw￨f (￨f final￨f DecoratedKey￨f startWith￨f ,￨f final￨f DecoratedKey￨f stopAt￨f ,￨f int￨f maxResults￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f public￨f RangeSliceReply￨f getRangeSlice￨f (￨f byte￨f [￨f ]￨f super_column￨f ,￨f final￨f DecoratedKey￨f startKey￨f ,￨f final￨f DecoratedKey￨f finishKey￨f ,￨f int￨f keyMax￨f ,￨f SliceRange￨f sliceRange￨f ,￨f List￨f <￨f byte￨f [￨f ]￨f >￨f columnNames￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f RangeReply￨e rr￨e =￨e getKeyRangeRaw￨e (￨e startKey￨e ,￨e finishKey￨e ,￨e keyMax￨e )￨e ;￨e List￨e <￨e Row￨e >￨e rows￨e =￨e new￨e ArrayList￨e <￨e Row￨e >￨e (￨e rr￨e .￨e keys￨e .￨e size￨e (￨e )￨e )￨e ;￨e final￨e QueryPath￨e queryPath￨e =￨e new￨e QueryPath￨e (￨e columnFamily_￨e ,￨e super_column￨e ,￨e null￨e )￨e ;￨e final￨e SortedSet￨e <￨e byte￨e [￨e ]￨e >￨e columnNameSet￨e =￨e new￨e TreeSet￨e <￨e byte￨e [￨e ]￨e >￨e (￨e getComparator￨e (￨e )￨e )￨e ;￨e if￨j (￨j columnNames￨c !=￨c null￨c )￨j {￨j columnNameSet￨e .￨e addAll￨e (￨e columnNames￨e )￨e ;￨e }￨j for￨l (￨l String￨c key￨c :￨c rr￨c .￨c keys￨c )￨l {￨l QueryFilter￨e filter￨e =￨e (￨e sliceRange￨e ==￨e null￨e )￨e ?￨e new￨e NamesQueryFilter￨e (￨e key￨e ,￨e queryPath￨e ,￨e columnNameSet￨e )￨e :￨e new￨e SliceQueryFilter￨e (￨e key￨e ,￨e queryPath￨e ,￨e sliceRange￨e .￨e start￨e ,￨e sliceRange￨e .￨e finish￨e ,￨e sliceRange￨e .￨e reversed￨e ,￨e sliceRange￨e .￨e count￨e )￨e ;￨e rows￨e .￨e add￨e (￨e new￨e Row￨e (￨e key￨e ,￨e getColumnFamily￨e (￨e filter￨e )￨e )￨e )￨e ;￨e }￨l <START_BUG>￨b return￨b new￨b RangeSliceReply￨b (￨b rows￨b ,￨b rr￨b .￨b rangeCompletedLocally￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f AbstractType￨f getComparator￨f (￨f )￨f {￨f }￨f public￨f void￨f snapshot￨f (￨f String￨f snapshotName￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f clearUnsafe￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d AntiCompactionIterator￨d extends￨d CompactionIterator￨d {￨d public￨f AntiCompactionIterator￨f (￨f Collection￨f <￨f SSTableReader￨f >￨f sstables￨f ,￨f Collection￨f <￨f Range￨f >￨f ranges￨f ,￨f int￨f gcBefore￨f ,￨f boolean￨f isMajor￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f Iterator￨f getCollatedRangeIterator￨f (￨f Collection￨f <￨f SSTableReader￨f >￨f sstables￨f ,￨f final￨f Collection￨f <￨f Range￨f >￨f ranges￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ServerManager￨d extends￨d AbstractMgmtTestBase￨d {￨d private￨e int￨e mgmtPort￨e ;￨e private￨e String￨e mgmtHostName￨e ;￨e public￨f ServerManager￨f (￨f )￨f {￨f }￨f public￨f ServerManager￨f (￨f String￨p mgmtHostName￨p ,￨p int￨p mgmtPort￨p )￨f {￨f }￨f public￨f ServerManager￨f (￨f String￨p mgmtHostName￨p )￨f {￨f }￨f public￨f int￨f getMgmtPort￨f (￨f )￨f {￨f }￨f public￨f void￨f addConnector￨f (￨f Connector￨f conn￨f ,￨f int￨f port￨f ,￨f String￨f keyPEMFile￨f ,￨f String￨f certPEMFile￨f ,￨f String￨f keyStoreFile￨f ,￨f String￨f password￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f getAddSocketBindingOp￨f (￨f Connector￨p conn￨p ,￨p int￨p port￨p )￨f {￨f }￨f private￨f ModelNode￨f getAddConnectorOp￨f (￨f Connector￨p conn￨p ,￨p String￨p keyPEMFile￨p ,￨p String￨p certPEMFile￨p ,￨p String￨p keyStoreFile￨p ,￨p String￨p password￨p )￨f {￨f ModelNode￨e op￨e =￨e createOpNode￨e (￨e (￨e (￨e "subsystem=web/connector=test-"￨e +￨e (￨e conn￨e .￨e getName￨e (￨e )￨e )￨e )￨e +￨e "-connector"￨e )￨e ,￨e "add"￨e )￨e ;￨e op￨e .￨e get￨e (￨e "socket-binding"￨e )￨e .￨e set￨e (￨e (￨e "test-"￨e +￨e (￨e conn￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e ;￨e op￨e .￨e get￨e (￨e "scheme"￨e )￨e .￨e set￨e (￨e conn￨e .￨e getScheme￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b op￨b .￨b get￨b (￨b "protocol"￨b )￨b .￨b set￨b (￨b conn￨b .￨b getProtrocol￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b op￨e .￨e get￨e (￨e "secure"￨e )￨e .￨e set￨e (￨e conn￨e .￨e isSecure￨e (￨e )￨e )￨e ;￨e op￨e .￨e get￨e (￨e "enabled"￨e )￨e .￨e set￨e (￨e true￨e )￨e ;￨e if￨j (￨j conn￨c .￨c isSecure￨c (￨c )￨c )￨j {￨j ModelNode￨e ssl￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e if￨j (￨j conn￨c .￨c equals￨c (￨c HTTPSNATIVE￨c )￨c )￨j {￨j ssl￨e .￨e get￨e (￨e "certificate-key-file"￨e )￨e .￨e set￨e (￨e keyPEMFile￨e )￨e ;￨e ssl￨e .￨e get￨e (￨e "certificate-file"￨e )￨e .￨e set￨e (￨e certPEMFile￨e )￨e ;￨e }￨j else￨j {￨j ssl￨e .￨e get￨e (￨e "certificate-key-file"￨e )￨e .￨e set￨e (￨e keyStoreFile￨e )￨e ;￨e }￨j ssl￨e .￨e get￨e (￨e "password"￨e )￨e .￨e set￨e (￨e password￨e )￨e ;￨e op￨e .￨e get￨e (￨e "ssl"￨e )￨e .￨e set￨e (￨e ssl￨e )￨e ;￨e }￨j return￨e op￨e ;￨e }￨f public￨f void￨f removeConnector￨f (￨f Connector￨f conn￨f ,￨f String￨f checkURL￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f getRemoveSocketBindingOp￨f (￨f Connector￨p conn￨p )￨f {￨f }￨f private￨f ModelNode￨f getRemoveConnectorOp￨f (￨f Connector￨p conn￨p )￨f {￨f }￨f public￨f HashSet￨f <￨f String￨f >￨f getConnectorList￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f initModelControllerClient￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SSOMutator￨d <￨d V￨d >￨d implements￨d Mutator￨d {￨d private￨e final￨e Cache￨e <￨e String￨e ,￨e V￨e >￨e cache￨e ;￨e private￨e final￨e CacheInvoker￨e invoker￨e ;￨e private￨e final￨e String￨e id￨e ;￨e final￨e V￨e value￨e ;￨e public￨f SSOMutator￨f (￨f Cache￨p <￨p String￨p ,￨p V￨p >￨p cache￨p ,￨p CacheInvoker￨p invoker￨p ,￨p String￨p id￨p ,￨p V￨p value￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f mutate￨f (￨f )￨f {￨f <START_BUG>￨b this￨b .￨b invoker￨b .￨b invoke￨b (￨b this￨b .￨b cache￨b ,￨b new￨b MutateOperation￨b <￨b String￨b ,￨b V￨b >￨b (￨b this￨b .￨b id￨b ,￨b this￨b .￨b value￨b )￨b ,￨b IGNORE_RETURN_VALUES￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d OrRule￨d extends￨d AbstractRule￨d {￨d private￨e final￨e Rule￨e rule1￨e ;￨e private￨e final￨e Rule￨e rule2￨e ;￨e private￨f OrRule￨f (￨f Rule￨p firstParam￨p ,￨p Rule￨p secondParam￨p )￨f {￨f }￨f public￨f static￨f Rule￨f getRule￨f (￨f Rule￨p firstParam￨p ,￨p Rule￨p secondParam￨p )￨f {￨f }￨f public￨f static￨f Rule￨f getRule￨f (￨f Stack￨p stack￨p )￨f {￨f if￨j (￨j (￨c stack￨c .￨c size￨c (￨c )￨c )￨c <￨c 2￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b IllegalArgumentException￨b (￨b (￨b "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>two<seq2seq4repair_space>rules<seq2seq4repair_space>but<seq2seq4repair_space>provided<seq2seq4repair_space>"￨b +￨b (￨b stack￨b .￨b size￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j Object￨e o2￨e =￨e stack￨e .￨e pop￨e (￨e )￨e ;￨e Object￨e o1￨e =￨e stack￨e .￨e pop￨e (￨e )￨e ;￨e if￨j (￨j (￨c o2￨c instanceof￨c Rule￨c )￨c &&￨c (￨c o1￨c instanceof￨c Rule￨c )￨c )￨j {￨j Rule￨e p2￨e =￨e (￨e (￨e Rule￨e )￨e (￨e o2￨e )￨e )￨e ;￨e Rule￨e p1￨e =￨e (￨e (￨e Rule￨e )￨e (￨e o1￨e )￨e )￨e ;￨e return￨e new￨e OrRule￨e (￨e p1￨e ,￨e p2￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e (￨e (￨e (￨e "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule:<seq2seq4repair_space>"￨e +￨e o2￨e )￨e +￨e "..."￨e )￨e +￨e o1￨e )￨e )￨e ;￨e }￨j }￨f public￨f boolean￨f evaluate￨f (￨f LoggingEvent￨p event￨p )￨f {￨f }￨f }￨d
public￨d class￨d ViewRegistry￨d extends￨d RegistryManager￨d implements￨d IRegistryChangeListener￨d ,￨d IViewRegistry￨d {￨d private￨e List￨e views￨e ;￨e private￨e boolean￨e dirtyViews￨e ;￨e private￨e List￨e categories￨e ;￨e private￨e boolean￨e dirtyCategories￨e ;￨e private￨e Category￨e miscCategory￨e ;￨e protected￨e static￨e final￨e String￨e TAG_DESCRIPTION￨e =￨e "description"￨e ;￨e private￨d class￨d ViewRegistryElement￨d {￨d private￨e List￨e viewDescriptors￨e ;￨e private￨e List￨e categoryDescriptors￨e ;￨e public￨f ViewRegistryElement￨f (￨f )￨f {￨f }￨f public￨f void￨f addCategory￨f (￨f Category￨p element￨p )￨f {￨f }￨f public￨f void￨f addViewDescriptor￨f (￨f IViewDescriptor￨p element￨p )￨f {￨f }￨f public￨f List￨f getCategories￨f (￨f )￨f {￨f }￨f public￨f List￨f getViewDescriptors￨f (￨f )￨f {￨f }￨f }￨d public￨f ViewRegistry￨f (￨f )￨f {￨f }￨f public￨f void￨f add￨f (￨f Category￨p desc￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f IViewDescriptor￨p desc￨p )￨f {￨f dirtyViews￨e =￨e true￨e ;￨e ViewRegistry￨e .￨e ViewRegistryElement￨e element￨e =￨e new￨e ViewRegistry￨e .￨e ViewRegistryElement￨e (￨e )￨e ;￨e element￨e .￨e addViewDescriptor￨e (￨e desc￨e )￨e ;￨e <START_BUG>￨b add￨b (￨b element￨b ,￨b desc￨b .￨b getConfigurationElement￨b (￨b )￨b .￨b getDeclaringExtension￨b (￨b )￨b .￨b getDeclaringPluginDescriptor￨b (￨b )￨b .￨b getUniqueIdentifier￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f Object￨f buildNewCacheObject￨f (￨f IExtensionDelta￨p delta￨p )￨f {￨f }￨f public￨f IViewDescriptor￨f find￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f Category￨f findCategory￨f (￨f String￨p id￨p )￨f {￨f }￨f public￨f Category￨f [￨f ]￨f getCategories￨f (￨f )￨f {￨f }￨f public￨f int￨f getCategoryCount￨f (￨f )￨f {￨f }￨f public￨f Category￨f getMiscCategory￨f (￨f )￨f {￨f }￨f public￨f int￨f getViewCount￨f (￨f )￨f {￨f }￨f public￨f IViewDescriptor￨f [￨f ]￨f getViews￨f (￨f )￨f {￨f }￨f public￨f void￨f mapViewsToCategories￨f (￨f )￨f {￨f }￨f private￨f void￨f buildViews￨f (￨f )￨f {￨f }￨f private￨f void￨f buildCategories￨f (￨f )￨f {￨f }￨f public￨f void￨f postChangeProcessing￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d IndexManager￨d extends￨d JobManager￨d implements￨d IIndexConstants￨d {￨d public￨e IWorkspace￨e workspace￨e ;￨e public￨e SimpleLookupTable￨e indexNames￨e =￨e new￨e SimpleLookupTable￨e (￨e )￨e ;￨e private￨e Map￨e indexes￨e =￨e new￨e HashMap￨e (￨e 5￨e )￨e ;￨e private￨e boolean￨e needToSave￨e =￨e false￨e ;￨e private￨e static￨e final￨e CRC32￨e checksumCalculator￨e =￨e new￨e CRC32￨e (￨e )￨e ;￨e private￨e IPath￨e javaPluginLocation￨e =￨e null￨e ;￨e private￨e SimpleLookupTable￨e indexStates￨e =￨e null￨e ;￨e private￨e File￨e savedIndexNamesFile￨e =￨e new￨e File￨e (￨e getJavaPluginWorkingLocation￨e (￨e )￨e .￨e append￨e (￨e "savedIndexNames.txt"￨e )￨e .￨e toOSString￨e (￨e )￨e )￨e ;￨e public￨e static￨e Integer￨e SAVED_STATE￨e =￨e new￨e Integer￨e (￨e 0￨e )￨e ;￨e public￨e static￨e Integer￨e UPDATING_STATE￨e =￨e new￨e Integer￨e (￨e 1￨e )￨e ;￨e public￨e static￨e Integer￨e UNKNOWN_STATE￨e =￨e new￨e Integer￨e (￨e 2￨e )￨e ;￨e public￨e static￨e Integer￨e REBUILDING_STATE￨e =￨e new￨e Integer￨e (￨e 3￨e )￨e ;￨e public￨f synchronized￨f void￨f aboutToUpdateIndex￨f (￨f IPath￨p path￨p ,￨p Integer￨p newIndexState￨p )￨f {￨f }￨f public￨f void￨f addBinary￨f (￨f IFile￨p resource￨p ,￨p IPath￨p indexPath￨p )￨f {￨f }￨f public￨f void￨f addSource￨f (￨f IFile￨p resource￨p ,￨p IPath￨p indexPath￨p )￨f {￨f }￨f String￨f computeIndexName￨f (￨f IPath￨p path￨p )￨f {￨f }￨f public￨f synchronized￨f Index￨f getIndex￨f (￨f IPath￨p path￨p ,￨p boolean￨p reuseExistingFile￨p ,￨p boolean￨p createIfMissing￨p )￨f {￨f }￨f public￨f synchronized￨f Index￨f getIndexForUpdate￨f (￨f IPath￨p path￨p ,￨p boolean￨p reuseExistingFile￨p ,￨p boolean￨p createIfMissing￨p )￨f {￨f }￨f private￨f SimpleLookupTable￨f getIndexStates￨f (￨f )￨f {￨f }￨f private￨f IPath￨f getJavaPluginWorkingLocation￨f (￨f )￨f {￨f }￨f public￨f void￨f indexDocument￨f (￨f SearchDocument￨f searchDocument￨f ,￨f SearchParticipant￨f searchParticipant￨f ,￨f Index￨f index￨f ,￨f IPath￨f indexPath￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f indexAll￨f (￨f IProject￨p project￨p )￨f {￨f }￨f public￨f void￨f indexLibrary￨f (￨f IPath￨p path￨p ,￨p IProject￨p requestingProject￨p )￨f {￨f }￨f public￨f void￨f indexSourceFolder￨f (￨f JavaProject￨p javaProject￨p ,￨p IPath￨p sourceFolder￨p ,￨p final￨p char￨p [￨p ]￨p [￨p ]￨p exclusionPattern￨p )￨f {￨f }￨f public￨f void￨f jobWasCancelled￨f (￨f IPath￨p path￨p )￨f {￨f }￨f protected￨f synchronized￨f void￨f moveToNextJob￨f (￨f )￨f {￨f }￨f protected￨f void￨f notifyIdle￨f (￨f long￨p idlingTime￨p )￨f {￨f }￨f public￨f Index￨f peekAtIndex￨f (￨f IPath￨p path￨p )￨f {￨f }￨f public￨f String￨f processName￨f (￨f )￨f {￨f }￨f private￨f void￨f rebuildIndex￨f (￨f String￨p indexName￨p ,￨p IPath￨p path￨p )￨f {￨f }￨f public￨f synchronized￨f Index￨f recreateIndex￨f (￨f IPath￨p path￨p )￨f {￨f try￨f (￨f )￨f {￨f Index￨e index￨e =￨e (￨e (￨e Index￨e )￨e (￨e this￨e .￨e indexes￨e .￨e get￨e (￨e path￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b ReadWriteMonitor￨b monitor￨b =￨b index￨b .￨b monitor￨b ;￨b <END_BUG>￨b String￨e indexPath￨e =￨e computeIndexName￨e (￨e path￨e )￨e ;￨e if￨j (￨j JobManager￨c .￨c VERBOSE￨c )￨j {￨j JobManager￨e .￨e verbose￨e (￨e (￨e (￨e (￨e "-><seq2seq4repair_space>recreating<seq2seq4repair_space>index:<seq2seq4repair_space>"￨e +￨e indexPath￨e )￨e +￨e "<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨e )￨e +￨e (￨e path￨e .￨e toOSString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j index￨e =￨e new￨e Index￨e (￨e indexPath￨e ,￨e (￨e "Index<seq2seq4repair_space>for<seq2seq4repair_space>"￨e +￨e (￨e path￨e .￨e toOSString￨e (￨e )￨e )￨e )￨e ,￨e false￨e )￨e ;￨e indexes￨e .￨e put￨e (￨e path￨e ,￨e index￨e )￨e ;￨e index￨e .￨e monitor￨e =￨e monitor￨e ;￨e return￨e index￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f if￨j (￨j JobManager￨c .￨c VERBOSE￨c )￨j {￨j JobManager￨e .￨e verbose￨e (￨e (￨e "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>recreate<seq2seq4repair_space>index<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨e +￨e (￨e path￨e .￨e toOSString￨e (￨e )￨e )￨e )￨e )￨e ;￨e e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨j return￨e null￨e ;￨e }￨f }￨f public￨f void￨f remove￨f (￨f String￨p resourceName￨p ,￨p IPath￨p indexedContainer￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f removeIndex￨f (￨f IPath￨p path￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f removeIndexFamily￨f (￨f IPath￨p path￨p )￨f {￨f }￨f public￨f void￨f removeSourceFolderFromIndex￨f (￨f JavaProject￨p javaProject￨p ,￨p IPath￨p sourceFolder￨p ,￨p char￨p [￨p ]￨p [￨p ]￨p exclusionPatterns￨p )￨f {￨f }￨f public￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f void￨f saveIndex￨f (￨f Index￨f index￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f saveIndexes￨f (￨f )￨f {￨f }￨f public￨f void￨f scheduleDocumentIndexing￨f (￨f final￨p SearchDocument￨p searchDocument￨p ,￨p final￨p IPath￨p indexPath￨p ,￨p final￨p SearchParticipant￨p searchParticipant￨p )￨f {￨f }￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f private￨f char￨f [￨f ]￨f readIndexState￨f (￨f )￨f {￨f }￨f private￨f void￨f updateIndexState￨f (￨f String￨p indexName￨p ,￨p Integer￨p indexState￨p )￨f {￨f }￨f }￨d
public￨d class￨d CounterConfigGui￨d extends￨d AbstractPreProcessorGui￨d {￨d private￨e JLabeledTextField￨e startField￨e ;￨e private￨e JLabeledTextField￨e incrField￨e ;￨e private￨e JLabeledTextField￨e endField￨e ;￨e private￨e JLabeledTextField￨e varNameField￨e ;￨e private￨e JCheckBox￨e perUserField￨e ;￨e public￨f CounterConfigGui￨f (￨f )￨f {￨f }￨f public￨f String￨f getLabelResource￨f (￨f )￨f {￨f }￨f public￨f TestElement￨f createTestElement￨f (￨f )￨f {￨f }￨f public￨f void￨f modifyTestElement￨f (￨f TestElement￨p c￨p )￨f {￨f if￨j (￨j c￨c instanceof￨c CounterConfig￨c )￨j {￨j CounterConfig￨e config￨e =￨e (￨e (￨e CounterConfig￨e )￨e (￨e c￨e )￨e )￨e ;￨e config￨e .￨e setStart￨e (￨e startField￨e .￨e getText￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b endField￨b .￨b getText￨b (￨b )￨b .￨b length￨b (￨b )￨b )￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b config￨e .￨e setEnd￨e (￨e endField￨e .￨e getText￨e (￨e )￨e )￨e ;￨e }￨e config￨e .￨e setIncrement￨e (￨e incrField￨e .￨e getText￨e (￨e )￨e )￨e ;￨e config￨e .￨e setVarName￨e (￨e varNameField￨e .￨e getText￨e (￨e )￨e )￨e ;￨e config￨e .￨e setIsPerUser￨e (￨e perUserField￨e .￨e isSelected￨e (￨e )￨e )￨e ;￨e }￨j super￨e .￨e configureTestElement￨e (￨e c￨e )￨e ;￨e }￨f public￨f void￨f configure￨f (￨f TestElement￨p element￨p )￨f {￨f }￨f private￨f void￨f init￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d RemoteProxyControllerProtocolTestCase￨d {￨d final￨e RemoteProxyControllerProtocolTestCase￨e .￨e DelegatingChannelHandler￨e handler￨e =￨e new￨e RemoteProxyControllerProtocolTestCase￨e .￨e DelegatingChannelHandler￨e (￨e )￨e ;￨e RemoteChannelPairSetup￨e channels￨e ;￨e @￨f Before￨f public￨f void￨f start￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f channels￨e =￨e new￨e RemoteChannelPairSetup￨e (￨e )￨e ;￨e channels￨e .￨e setupRemoting￨e (￨e handler￨e )￨e ;￨e <START_BUG>￨b channels￨b .￨b startChannels￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f After￨f public￨f void￨f stop￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f @￨f Ignore￨f (￨f "OperationMessageHandlerProxy<seq2seq4repair_space>turned<seq2seq4repair_space>off<seq2seq4repair_space>temporarily"￨f )￨f public￨f void￨f testOperationMessageHandler￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testOperationControlFailed￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testOperationControlExceptionInController￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testTransactionCommit￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testTransactionRollback￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testAttachmentInputStreams￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testClosesBeforePrepare￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f assertArrays￨f (￨f byte￨p [￨p ]￨p expected￨p ,￨p byte￨p [￨p ]￨p actual￨p )￨f {￨f }￨f private￨f RemoteProxyController￨f setupProxyHandlers￨f (￨f RemoteProxyControllerProtocolTestCase￨p .￨p MockModelController￨p controller￨p )￨f {￨f }￨f private￨d abstract￨d static￨d class￨d MockModelController￨d implements￨d ModelController￨d {￨d protected￨e volatile￨e ModelNode￨e operation￨e ;￨e ModelNode￨f getOperation￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f ModelControllerClient￨f createClient￨f (￨f Executor￨p executor￨p )￨f {￨f }￨f }￨d private￨d static￨d class￨d CommitProxyOperationControl￨d implements￨d ProxyOperationControl￨d {￨d final￨e AtomicInteger￨e txCompletionStatus￨e =￨e new￨e AtomicInteger￨e (￨e (￨e -￨e 1￨e )￨e )￨e ;￨e OperationTransaction￨e tx￨e ;￨e @￨f Override￨f public￨f void￨f operationPrepared￨f (￨f OperationTransaction￨p transaction￨p ,￨p ModelNode￨p result￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f operationFailed￨f (￨f ModelNode￨p response￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f operationCompleted￨f (￨f ModelNode￨p response￨p )￨f {￨f }￨f }￨d private￨d static￨d class￨d TestFuture￨d <￨d T￨d >￨d extends￨d AsyncFutureTask￨d <￨d T￨d >￨d {￨d protected￨f TestFuture￨f (￨f )￨f {￨f }￨f void￨f done￨f (￨f T￨p result￨p )￨f {￨f }￨f }￨d static￨d class￨d DelegatingChannelHandler￨d implements￨d ManagementMessageHandler￨d {￨d private￨e ManagementMessageHandler￨e delegate￨e ;￨e @￨f Override￨f public￨f synchronized￨f void￨f handleMessage￨f (￨f Channel￨f channel￨f ,￨f DataInput￨f input￨f ,￨f ManagementProtocolHeader￨f header￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f setDelegate￨f (￨f ManagementMessageHandler￨p delegate￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f awaitCompletion￨f (￨f long￨f timeout￨f ,￨f TimeUnit￨f unit￨f )￨f throws￨f InterruptedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f shutdownNow￨f (￨f )￨f {￨f }￨f }￨d }￨d
class￨d InternalSpelExpressionParser￨d extends￨d TemplateAwareExpressionParser￨d {￨d private￨e String￨e expressionString￨e ;￨e private￨e List￨e <￨e Token￨e >￨e tokenStream￨e ;￨e private￨e int￨e tokenStreamLength￨e ;￨e private￨e int￨e tokenStreamPointer￨e ;￨e private￨e Stack￨e <￨e SpelNodeImpl￨e >￨e constructedNodes￨e =￨e new￨e Stack￨e <￨e SpelNodeImpl￨e >￨e (￨e )￨e ;￨e private￨e SpelParserConfiguration￨e configuration￨e ;￨e public￨f InternalSpelExpressionParser￨f (￨f SpelParserConfiguration￨p configuration￨p )￨f {￨f }￨f @￨f Override￨f protected￨f SpelExpression￨f doParseExpression￨f (￨f String￨f expressionString￨f ,￨f ParserContext￨f context￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatLogicalOrExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatLogicalAndExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatRelationalExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatSumExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatProductExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatPowerExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatUnaryExpression￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatPrimaryExpression￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatNode￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f maybeEatNonDottedNode￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatDottedNode￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatFunctionOrVar￨f (￨f )￨f {￨f }￨f private￨f SpelNodeImpl￨f [￨f ]￨f maybeEatMethodArgs￨f (￨f )￨f {￨f }￨f private￨f void￨f eatConstructorArgs￨f (￨f List￨p <￨p SpelNodeImpl￨p >￨p accumulatedArguments￨p )￨f {￨f }￨f private￨f void￨f consumeArguments￨f (￨f List￨p <￨p SpelNodeImpl￨p >￨p accumulatedArguments￨p )￨f {￨f }￨f private￨f int￨f positionOf￨f (￨f Token￨p t￨p )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatStartNode￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatBeanReference￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatTypeReference￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatNullReference￨f (￨f )￨f {￨f if￨j (￨j peekToken￨c (￨c IDENTIFIER￨c )￨c )￨j {￨j Token￨e nullToken￨e =￨e peekToken￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b nullToken￨b .￨b stringValue￨b (￨b )￨b .￨b equals￨b (￨b "null"￨b )￨b )￨b )￨b {￨b <END_BUG>￨b return￨e false￨e ;￨e }￨e nextToken￨e (￨e )￨e ;￨e constructedNodes￨e .￨e push￨e (￨e new￨e org￨e .￨e springframework￨e .￨e expression￨e .￨e spel￨e .￨e ast￨e .￨e NullLiteral￨e (￨e toPos￨e (￨e nullToken￨e )￨e )￨e )￨e ;￨e return￨e true￨e ;￨e }￨j return￨e false￨e ;￨e }￨f private￨f boolean￨f maybeEatProjection￨f (￨f boolean￨p nullSafeNavigation￨p )￨f {￨f }￨f private￨f boolean￨f maybeEatInlineList￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatIndexer￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatSelection￨f (￨f boolean￨p nullSafeNavigation￨p )￨f {￨f }￨f private￨f SpelNodeImpl￨f eatPossiblyQualifiedId￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatMethodOrProperty￨f (￨f boolean￨p nullSafeNavigation￨p )￨f {￨f }￨f private￨f boolean￨f maybeEatConstructorReference￨f (￨f )￨f {￨f }￨f private￨f void￨f push￨f (￨f SpelNodeImpl￨p newNode￨p )￨f {￨f }￨f private￨f SpelNodeImpl￨f pop￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatLiteral￨f (￨f )￨f {￨f }￨f private￨f boolean￨f maybeEatParenExpression￨f (￨f )￨f {￨f }￨f private￨f Token￨f maybeEatRelationalOperator￨f (￨f )￨f {￨f }￨f private￨f Token￨f eatToken￨f (￨f TokenKind￨p expectedKind￨p )￨f {￨f }￨f private￨f boolean￨f peekToken￨f (￨f TokenKind￨p desiredTokenKind￨p )￨f {￨f }￨f private￨f boolean￨f peekToken￨f (￨f TokenKind￨p desiredTokenKind￨p ,￨p boolean￨p consumeIfMatched￨p )￨f {￨f }￨f private￨f boolean￨f peekToken￨f (￨f TokenKind￨p possible1￨p ,￨p TokenKind￨p possible2￨p )￨f {￨f }￨f private￨f boolean￨f peekToken￨f (￨f TokenKind￨p possible1￨p ,￨p TokenKind￨p possible2￨p ,￨p TokenKind￨p possible3￨p )￨f {￨f }￨f private￨f boolean￨f peekIdentifierToken￨f (￨f String￨p identifierString￨p )￨f {￨f }￨f private￨f boolean￨f peekSelectToken￨f (￨f )￨f {￨f }￨f private￨f boolean￨f moreTokens￨f (￨f )￨f {￨f }￨f private￨f Token￨f nextToken￨f (￨f )￨f {￨f }￨f private￨f Token￨f peekToken￨f (￨f )￨f {￨f }￨f private￨f void￨f raiseInternalException￨f (￨f int￨p pos￨p ,￨p SpelMessage￨p message￨p ,￨p Object￨p ...￨p inserts￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f Token￨p t￨p )￨f {￨f }￨f private￨f void￨f checkRightOperand￨f (￨f Token￨p token￨p ,￨p SpelNodeImpl￨p operandExpression￨p )￨f {￨f }￨f private￨f int￨f toPos￨f (￨f Token￨p t￨p )￨f {￨f }￨f private￨f int￨f toPos￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f }￨d
public￨d class￨d RuntimeMXBeanAttributeHandler￨d extends￨d AbstractPlatformMBeanAttributeHandler￨d {￨d public￨e static￨e RuntimeMXBeanAttributeHandler￨e INSTANCE￨e =￨e new￨e RuntimeMXBeanAttributeHandler￨e (￨e )￨e ;￨e private￨f RuntimeMXBeanAttributeHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f executeReadAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f executeWriteAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f register￨f (￨f ManagementResourceRegistration￨p registration￨p )￨f {￨f }￨f static￨f void￨f storeResult￨f (￨f final￨p String￨p name￨p ,￨p final￨p ModelNode￨p store￨p )￨f {￨f if￨j (￨j (￨c (￨c PlatformMBeanUtil￨c .￨c JVM_MAJOR_VERSION￨c )￨c >￨c 6￨c )￨c &&￨c (￨c OBJECT_NAME￨c .￨c equals￨c (￨c name￨c )￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e RUNTIME_MXBEAN_NAME￨e )￨e ;￨e }￨j else￨j if￨j (￨j NAME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getName￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j VM_NAME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getVmName￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j VM_VENDOR￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getVmVendor￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j VM_VERSION￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getVmVersion￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j SPEC_NAME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getSpecName￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j SPEC_VENDOR￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getSpecVendor￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j SPEC_VERSION￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getSpecVersion￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j MANAGEMENT_SPEC_VERSION￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getManagementSpecVersion￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j CLASS_PATH￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getClassPath￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j LIBRARY_PATH￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getLibraryPath￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j BOOT_CLASS_PATH_SUPPORTED￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e isBootClassPathSupported￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j BOOT_CLASS_PATH￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getBootClassPath￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j INPUT_ARGUMENTS￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e setEmptyList￨e (￨e )￨e ;￨e for￨l (￨l String￨c arg￨c :￨c ManagementFactory￨c .￨c getRuntimeMXBean￨c (￨c )￨c .￨c getInputArguments￨c (￨c )￨c )￨l {￨l store￨e .￨e add￨e (￨e arg￨e )￨e ;￨e }￨l }￨j else￨j if￨j (￨j UPTIME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getUptime￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j START_TIME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getStartTime￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j SYSTEM_PROPERTIES￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j store￨e .￨e setEmptyObject￨e (￨e )￨e ;￨e final￨e TreeMap￨e <￨e String￨e ,￨e String￨e >￨e sorted￨e =￨e new￨e TreeMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e ManagementFactory￨e .￨e getRuntimeMXBean￨e (￨e )￨e .￨e getSystemProperties￨e (￨e )￨e )￨e ;￨e for￨l (￨l Map￨c .￨c Entry￨c <￨c String￨c ,￨c String￨c >￨c prop￨c :￨c sorted￨c .￨c entrySet￨c (￨c )￨c )￨l {￨l final￨e ModelNode￨e propNode￨e =￨e store￨e .￨e get￨e (￨e prop￨e .￨e getKey￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c prop￨c .￨c getValue￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j propNode￨e .￨e set￨e (￨e prop￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e }￨j }￨l }￨j else￨j if￨j (￨j (￨c RUNTIME_READ_ATTRIBUTES￨c .￨c contains￨c (￨c name￨c )￨c )￨c ||￨c (￨c RUNTIME_METRICS￨c .￨c contains￨c (￨c name￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b IllegalStateException￨b (￨b String￨b .￨b format￨b (￨b "Read<seq2seq4repair_space>support<seq2seq4repair_space>for<seq2seq4repair_space>attribute<seq2seq4repair_space>%s<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>properly<seq2seq4repair_space>implemented"￨b ,￨b name￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f }￨d
public￨d abstract￨d class￨d AbstractMoveFolderAction￨d extends￨d AbstractColumbaAction￨d implements￨d Observer￨d ,￨d ISelectionListener￨d {￨d private￨e AbstractFolder￨e lastSelectedFolder￨e ;￨e public￨f AbstractMoveFolderAction￨f (￨f FrameMediator￨p frameMediator￨p ,￨p String￨p name￨p )￨f {￨f }￨f protected￨f abstract￨f boolean￨f isActionEnabledByIndex￨f (￨f int￨p folderIndex￨p )￨f {￨f }￨f private￨f void￨f registerSortingObserver￨f (￨f )￨f {￨f }￨f public￨f void￨f update￨f (￨f Observable￨p o￨p ,￨p Object￨p arg￨p )￨f {￨f }￨f private￨f void￨f enableAction￨f (￨f )￨f {￨f }￨f private￨f void￨f reenableActionFromSelectedFolder￨f (￨f )￨f {￨f if￨j (￨j (￨c lastSelectedFolder￨c )￨c ==￨c null￨c )￨j {￨j setEnabled￨e (￨e false￨e )￨e ;￨e }￨j else￨j {￨j IFolderItem￨e item￨e =￨e lastSelectedFolder￨e .￨e getConfiguration￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b item￨b .￨b get￨b (￨b "property"￨b ,￨b "accessrights"￨b )￨b .￨b equals￨b (￨b "user"￨b )￨b )￨b {￨b <END_BUG>￨b int￨e index￨e =￨e lastSelectedFolder￨e .￨e getParent￨e (￨e )￨e .￨e getIndex￨e (￨e lastSelectedFolder￨e )￨e ;￨e setEnabled￨e (￨e isActionEnabledByIndex￨e (￨e index￨e )￨e )￨e ;￨e else￨j {￨j setEnabled￨e (￨e false￨e )￨e ;￨e }￨j }￨j }￨f public￨f void￨f selectionChanged￨f (￨f SelectionChangedEvent￨p e￨p )￨f {￨f }￨f protected￨f AbstractFolder￨f getLastSelectedFolder￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d IMAPMailCheckingAction￨d extends￨d AbstractMailCheckingAction￨d {￨d private￨e int￨e accountUid￨e ;￨e public￨f IMAPMailCheckingAction￨f (￨f AccountItem￨p accountItem￨p )￨f {￨f }￨f public￨f void￨f check￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isCheckAll￨f (￨f )￨f {￨f IMAPRootFolder￨e imapRootFolder￨e =￨e (￨e (￨e IMAPRootFolder￨e )￨e (￨e FolderTreeModel￨e .￨e getInstance￨e (￨e )￨e .￨e getImapFolder￨e (￨e accountUid￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b return￨b !￨b (￨b imapRootFolder￨b .￨b getAccountItem￨b (￨b )￨b .￨b getImapItem￨b (￨b )￨b .￨b getBoolean￨b (￨b "exclude_from_checkall"￨b ,￨b false￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
class￨d BufferedDeletes￨d {￨d static￨e final￨e int￨e BYTES_PER_DEL_TERM￨e =￨e (￨e (￨e 9￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_REF￨e )￨e )￨e +￨e (￨e 7￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_HEADER￨e )￨e )￨e )￨e +￨e (￨e 10￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_INT￨e )￨e )￨e ;￨e static￨e final￨e int￨e BYTES_PER_DEL_DOCID￨e =￨e (￨e (￨e 2￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_REF￨e )￨e )￨e +￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_HEADER￨e )￨e )￨e +￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_INT￨e )￨e ;￨e static￨e final￨e int￨e BYTES_PER_DEL_QUERY￨e =￨e (￨e (￨e (￨e 5￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_REF￨e )￨e )￨e +￨e (￨e 2￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_OBJECT_HEADER￨e )￨e )￨e )￨e +￨e (￨e 2￨e *￨e (￨e RamUsageEstimator￨e .￨e NUM_BYTES_INT￨e )￨e )￨e )￨e +￨e 24￨e ;￨e final￨e AtomicInteger￨e numTermDeletes￨e =￨e new￨e AtomicInteger￨e (￨e )￨e ;￨e final￨e Map￨e <￨e Term￨e ,￨e Integer￨e >￨e terms￨e =￨e new￨e HashMap￨e <￨e Term￨e ,￨e Integer￨e >￨e (￨e )￨e ;￨e final￨e Map￨e <￨e Query￨e ,￨e Integer￨e >￨e queries￨e =￨e new￨e HashMap￨e <￨e Query￨e ,￨e Integer￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e Integer￨e >￨e docIDs￨e =￨e new￨e ArrayList￨e <￨e Integer￨e >￨e (￨e )￨e ;￨e public￨e static￨e final￨e Integer￨e MAX_INT￨e =￨e Integer￨e .￨e valueOf￨e (￨e Integer￨e .￨e MAX_VALUE￨e )￨e ;￨e final￨e AtomicLong￨e bytesUsed￨e ;￨e private￨e static￨e final￨e boolean￨e VERBOSE_DELETES￨e =￨e false￨e ;￨e long￨e gen￨e ;￨e public￨f BufferedDeletes￨f (￨f )￨f {￨f }￨f BufferedDeletes￨f (￨f AtomicLong￨p bytesUsed￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f if￨j (￨j BufferedDeletes￨c .￨c VERBOSE_DELETES￨c )￨j {￨j return￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e "gen="￨e +￨e (￨e gen￨e )￨e )￨e +￨e "<seq2seq4repair_space>numTerms="￨e )￨e +￨e (￨e numTermDeletes￨e )￨e )￨e +￨e ",<seq2seq4repair_space>terms="￨e )￨e +￨e (￨e terms￨e )￨e )￨e +￨e ",<seq2seq4repair_space>queries="￨e )￨e +￨e (￨e queries￨e )￨e )￨e +￨e ",<seq2seq4repair_space>docIDs="￨e )￨e +￨e (￨e docIDs￨e )￨e )￨e +￨e ",<seq2seq4repair_space>bytesUsed="￨e )￨e +￨e (￨e bytesUsed￨e )￨e ;￨e }￨j else￨j {￨j String￨e s￨e =￨e "gen="￨e +￨e (￨e gen￨e )￨e ;￨e if￨j (￨j (￨c numTermDeletes￨c .￨c get￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j <START_BUG>￨b s￨b +=￨b (￨b (￨b (￨b (￨b "<seq2seq4repair_space>"￨b +￨b (￨b numTermDeletes￨b .￨b get￨b (￨b )￨b )￨b )￨b +￨b "<seq2seq4repair_space>deleted<seq2seq4repair_space>terms<seq2seq4repair_space>(unique<seq2seq4repair_space>count="￨b )￨b +￨b (￨b terms￨b .￨b size￨b (￨b )￨b )￨b )￨b +￨b ")<seq2seq4repair_space>terms="￨b )￨b +￨b (￨b terms￨b .￨b keySet￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j (￨c queries￨c .￨c size￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j s￨e +=￨e (￨e "<seq2seq4repair_space>"￨e +￨e (￨e queries￨e .￨e size￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>deleted<seq2seq4repair_space>queries"￨e ;￨e }￨j if￨j (￨j (￨c docIDs￨c .￨c size￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j s￨e +=￨e (￨e "<seq2seq4repair_space>"￨e +￨e (￨e docIDs￨e .￨e size￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>deleted<seq2seq4repair_space>docIDs"￨e ;￨e }￨j if￨j (￨j (￨c bytesUsed￨c .￨c get￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j s￨e +=￨e "<seq2seq4repair_space>bytesUsed="￨e +￨e (￨e bytesUsed￨e .￨e get￨e (￨e )￨e )￨e ;￨e }￨j return￨e s￨e ;￨e }￨j }￨f public￨f void￨f addQuery￨f (￨f Query￨p query￨p ,￨p int￨p docIDUpto￨p )￨f {￨f }￨f public￨f void￨f addDocID￨f (￨f int￨p docID￨p )￨f {￨f }￨f public￨f void￨f addTerm￨f (￨f Term￨p term￨p ,￨p int￨p docIDUpto￨p )￨f {￨f }￨f void￨f clear￨f (￨f )￨f {￨f }￨f void￨f clearDocIDs￨f (￨f )￨f {￨f }￨f boolean￨f any￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d NewHostControllerBootstrap￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.host.controller"￨e )￨e ;￨e static￨e final￨e ServiceName￨e SERVICE_NAME_BASE￨e =￨e JBOSS￨e .￨e append￨e (￨e "host"￨e ,￨e "controller"￨e )￨e ;￨e static￨e final￨e int￨e DEFAULT_POOL_SIZE￨e =￨e 20￨e ;￨e private￨e final￨e ServiceContainer￨e serviceContainer￨e =￨e Factory￨e .￨e create￨e (￨e "host-controller"￨e )￨e ;￨e private￨e final￨e HostControllerEnvironment￨e environment￨e ;￨e private￨e final￨e byte￨e [￨e ]￨e authCode￨e ;￨e public￨f NewHostControllerBootstrap￨f (￨f final￨p HostControllerEnvironment￨p environment￨p ,￨p final￨p byte￨p [￨p ]￨p authCode￨p )￨f {￨f }￨f public￨f void￨f start￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e ServiceTarget￨e serviceTarget￨e =￨e serviceContainer￨e ;￨e <START_BUG>￨b final￨b ProcessControllerConnectionService￨b processControllerClient￨b =￨b new￨b ProcessControllerConnectionService￨b (￨b environment￨b ,￨b authCode￨b )￨b ;￨b <END_BUG>￨b serviceTarget￨e .￨e addService￨e (￨e SERVICE_NAME￨e ,￨e processControllerClient￨e )￨e .￨e install￨e (￨e )￨e ;￨e final￨e ServiceName￨e threadFactoryServiceName￨e =￨e NewHostControllerBootstrap￨e .￨e SERVICE_NAME_BASE￨e .￨e append￨e (￨e "thread-factory"￨e )￨e ;￨e final￨e ServiceName￨e executorServiceName￨e =￨e NewHostControllerBootstrap￨e .￨e SERVICE_NAME_BASE￨e .￨e append￨e (￨e "executor"￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e threadFactoryServiceName￨e ,￨e new￨e ThreadFactoryService￨e (￨e )￨e )￨e .￨e install￨e (￨e )￨e ;￨e final￨e NewHostControllerBootstrap￨e .￨e HostControllerExecutorService￨e executorService￨e =￨e new￨e NewHostControllerBootstrap￨e .￨e HostControllerExecutorService￨e (￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e executorServiceName￨e ,￨e executorService￨e )￨e .￨e addDependency￨e (￨e threadFactoryServiceName￨e ,￨e ThreadFactory￨e .￨e class￨e ,￨e executorService￨e .￨e threadFactoryValue￨e )￨e .￨e install￨e (￨e )￨e ;￨e AbsolutePathService￨e .￨e addService￨e (￨e HOME_DIR￨e ,￨e environment￨e .￨e getHomeDir￨e (￨e )￨e .￨e getAbsolutePath￨e (￨e )￨e ,￨e serviceTarget￨e )￨e ;￨e AbsolutePathService￨e .￨e addService￨e (￨e DOMAIN_CONFIG_DIR￨e ,￨e environment￨e .￨e getDomainConfigurationDir￨e (￨e )￨e .￨e getAbsolutePath￨e (￨e )￨e ,￨e serviceTarget￨e )￨e ;￨e DomainModelControllerService￨e .￨e addService￨e (￨e serviceTarget￨e ,￨e environment￨e ,￨e new￨e ControlledProcessState￨e (￨e false￨e )￨e )￨e ;￨e }￨f static￨d final￨d class￨d HostControllerExecutorService￨d implements￨d Service￨d <￨d Executor￨d >￨d {￨d final￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e threadFactoryValue￨e =￨e new￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e (￨e )￨e ;￨e private￨e ScheduledExecutorService￨e executorService￨e ;￨e @￨f Override￨f public￨f synchronized￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f ScheduledExecutorService￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d }￨d
class￨d AppClientServerConfiguration￨d {￨d private￨f AppClientServerConfiguration￨f (￨f )￨f {￨f }￨f public￨f static￨f List￨f <￨f ModelNode￨f >￨f serverConfiguration￨f (￨f final￨p String￨p filePath￨p ,￨p final￨p String￨p deploymentName￨p ,￨p final￨p String￨p globalModules￨p ,￨p final￨p String￨p hostUrl￨p ,￨p final￨p List￨p <￨p String￨p >￨p parameters￨p )￨f {￨f }￨f private￨f static￨f void￨f webservices￨f (￨f final￨p List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f appclient￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p ,￨p final￨p String￨p filePath￨p ,￨p final￨p String￨p deploymentName￨p ,￨p final￨p String￨p hostUrl￨p ,￨p final￨p List￨p <￨p String￨p >￨p parameters￨p )￨f {￨f }￨f private￨f static￨f void￨f naming￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f ee￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p ,￨p final￨p String￨p globalModules￨p )￨f {￨f }￨f private￨f static￨f void￨f ejb3￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f security￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f jacorb￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f transactions￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f socketBindings￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f }￨f private￨f static￨f void￨f interfaces￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p )￨f {￨f ModelNode￨e add￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e add￨e .￨e get￨e (￨e OP_ADDR￨e )￨e .￨e set￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e setEmptyList￨e (￨e )￨e )￨e .￨e add￨e (￨e INTERFACE￨e ,￨e "public"￨e )￨e ;￨e add￨e .￨e get￨e (￨e OP￨e )￨e .￨e set￨e (￨e ADD￨e )￨e ;￨e <START_BUG>￨b add￨b .￨b get￨b (￨b CRITERIA￨b )￨b .￨b add￨b (￨b )￨b .￨b set￨b (￨b "inet-address"￨b ,￨b "127.0.0.1"￨b )￨b ;￨b <END_BUG>￨b nodes￨e .￨e add￨e (￨e add￨e )￨e ;￨e }￨f private￨f static￨f void￨f loadExtension￨f (￨f List￨p <￨p ModelNode￨p >￨p nodes￨p ,￨p String￨p moduleName￨p )￨f {￨f }￨f }￨d
@￨d Deprecated￨d public￨d class￨d LengthNormModifier￨d {￨d public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨e Directory￨e dir￨e ;￨e private￨e Similarity￨e sim￨e ;￨e public￨f LengthNormModifier￨f (￨f Directory￨p d￨p ,￨p Similarity￨p s￨p )￨f {￨f }￨f public￨f void￨f reSetNorms￨f (￨f String￨f field￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f String￨e fieldName￨e =￨e StringHelper￨e .￨e intern￨e (￨e field￨e )￨e ;￨e int￨e [￨e ]￨e termCounts￨e =￨e new￨e int￨e [￨e 0￨e ]￨e ;￨e IndexReader￨e reader￨e =￨e IndexReader￨e .￨e open￨e (￨e dir￨e ,￨e false￨e )￨e ;￨e try￨f (￨f )￨f {￨f termCounts￨e =￨e new￨e int￨e [￨e reader￨e .￨e maxDoc￨e (￨e )￨e ]￨e ;￨e Bits￨e delDocs￨e =￨e MultiFields￨e .￨e getDeletedDocs￨e (￨e reader￨e )￨e ;￨e DocsEnum￨e docs￨e =￨e null￨e ;￨e Terms￨e terms￨e =￨e MultiFields￨e .￨e getTerms￨e (￨e reader￨e ,￨e field￨e )￨e ;￨e if￨j (￨j terms￨c !=￨c null￨c )￨j {￨j TermsEnum￨e termsEnum￨e =￨e terms￨e .￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l (￨c termsEnum￨c .￨c next￨c (￨c )￨c )￨c !=￨c null￨c )￨l {￨l docs￨e =￨e termsEnum￨e .￨e docs￨e (￨e delDocs￨e ,￨e docs￨e )￨e ;￨e int￨e doc￨e ;￨e while￨l (￨l (￨c doc￨c =￨c docs￨c .￨c nextDoc￨c (￨c )￨c )￨c !=￨c (￨c DocsEnum￨c .￨c NO_MORE_DOCS￨c )￨c )￨l {￨l termCounts￨e [￨e doc￨e ]￨e +=￨e docs￨e .￨e freq￨e (￨e )￨e ;￨e }￨l }￨l }￨j for￨l (￨l int￨c d￨c =￨c 0￨c ;￨c d￨c <￨c (￨c termCounts￨c .￨c length￨c )￨c ;￨c d￨c ++￨c )￨l {￨l <START_BUG>￨b if￨b (￨b !￨b (￨b reader￨b .￨b isDeleted￨b (￨b d￨b )￨b )￨b )￨b {￨b <END_BUG>￨b byte￨e norm￨e =￨e Similarity￨e .￨e encodeNorm￨e (￨e sim￨e .￨e lengthNorm￨e (￨e fieldName￨e ,￨e termCounts￨e [￨e d￨e ]￨e )￨e )￨e ;￨e reader￨e .￨e setNorm￨e (￨e d￨e ,￨e fieldName￨e ,￨e norm￨e )￨e ;￨e }￨l }￨f finally￨f (￨f )￨f {￨f reader￨e .￨e close￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d PageResource￨d extends￨d WizardPage￨d implements￨d Listener￨d {￨d public￨e static￨e final￨e String￨e PAGE_NAME￨e =￨e "DecryptPageResource"￨e ;￨e private￨e Button￨e bOpen￨e =￨e null￨e ;￨e private￨e Button￨e bEchoKeyPassword￨e =￨e null￨e ;￨e private￨e Button￨e bEchoKeystorePassword￨e =￨e null￨e ;￨e private￨e Combo￨e cEncryptionId￨e =￨e null￨e ;￨e private￨e Text￨e tKeystore￨e =￨e null￨e ;￨e private￨e Text￨e tKeystorePassword￨e =￨e null￨e ;￨e private￨e Text￨e tKeyName￨e =￨e null￨e ;￨e private￨e Text￨e tKeyPassword￨e =￨e null￨e ;￨e private￨e IFile￨e file￨e ;￨e private￨e Decryption￨e decryption￨e =￨e null￨e ;￨e private￨e static￨e final￨e int￨e LABELWIDTH￨e =￨e 120￨e ;￨e public￨f PageResource￨f (￨f final￨p Decryption￨p decryption￨p ,￨p final￨p IFile￨p file￨p )￨f {￨f }￨f public￨f void￨f createControl￨f (￨f final￨p Composite￨p parent￨p )￨f {￨f }￨f private￨f void￨f createPageContent￨f (￨f final￨p Composite￨p parent￨p )￨f {￨f }￨f private￨f void￨f determineIds￨f (￨f )￨f {￨f String￨e [￨e ]￨e ids￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b ids￨b =￨b Utils￨b .￨b getIds￨b (￨b file￨b ,￨b "encryption"￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ids￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e }￨f cEncryptionId￨e .￨e setItems￨e (￨e ids￨e )￨e ;￨e cEncryptionId￨e .￨e select￨e (￨e 0￨e )￨e ;￨e }￨f private￨f void￨f addListeners￨f (￨f )￨f {￨f }￨f private￨f void￨f updateStatus￨f (￨f final￨p String￨p message￨p ,￨p final￨p int￨p status￨p )￨f {￨f }￨f private￨f void￨f dialogChanged￨f (￨f )￨f {￨f }￨f public￨f void￨f handleEvent￨f (￨f final￨p Event￨p e￨p )￨f {￨f }￨f private￨f void￨f echoPassword￨f (￨f final￨p Event￨p e￨p )￨f {￨f }￨f private￨f void￨f openKeystore￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPageComplete￨f (￨f )￨f {￨f }￨f private￨f void￨f saveDataToModel￨f (￨f )￨f {￨f }￨f private￨f void￨f loadSettings￨f (￨f )￨f {￨f }￨f private￨f void￨f storeSettings￨f (￨f )￨f {￨f }￨f }￨d
public￨d .￨e indexOf￨e (￨e "="￨e )￨e ;￨e if￨j (￨j posEq￨c >￨c 0￨c )￨j {￨j value￨e =￨e name￨e .￨e substring￨e (￨e (￨e posEq￨e +￨e 1￨e )￨e )￨e ;￨e name￨e =￨e name￨e .￨e substring￨e (￨e 0￨e ,￨e posEq￨e )￨e ;￨e }￨j else￨j if￨j (￨j i￨c <￨c (￨c (￨c args￨c .￨c length￨c )￨c -￨c 1￨c )￨c )￨j {￨j value￨e =￨e args￨e [￨e (￨e ++￨e i￨e )￨e ]￨e ;￨e }￨j else￨j {￨j throw￨e new￨e BuildException￨e (￨e (￨e "Missing<seq2seq4repair_space>value<seq2seq4repair_space>for<seq2seq4repair_space>property<seq2seq4repair_space>"￨e +￨e name￨e )￨e )￨e ;￨e }￨j definedProps￨e .￨e put￨e (￨e name￨e ,￨e value￨e )￨e ;￨e }￨j else￨j if￨j (￨j arg￨c .￨c equals￨c (￨c "-logger"￨c )￨c )￨j {￨j if￨j (￨j (￨c loggerClassname￨c )￨c !=￨c null￨c )￨j {￨j throw￨e new￨e BuildException￨e (￨e (￨e "Only<seq2seq4repair_space>one<seq2seq4repair_space>logger<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨e +￨e "<seq2seq4repair_space>be<seq2seq4repair_space>specified."￨e )￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f loggerClassname￨e =￨e args￨e [￨e (￨e ++￨e i￨e )￨e ]￨e ;￨e }￨f catch￨f (￨f ArrayIndexOutOfBoundsException￨p aioobe￨p )￨f {￨f throw￨e new￨e BuildException￨e (￨e (￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨e +￨e "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-logger<seq2seq4repair_space>argument"￨e )￨e )￨e ;￨e }￨f }￨j else￨j if￨j (￨j arg￨c .￨c equals￨c (￨c "-inputhandler"￨c )￨c )￨j {￨j if￨j (￨j (￨c inputHandlerClassname￨c )￨c !=￨c null￨c )￨j {￨j throw￨e new￨e BuildException￨e (￨e (￨e "Only<seq2seq4repair_space>one<seq2seq4repair_space>input<seq2seq4repair_space>handler<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨e +￨e "be<seq2seq4repair_space>specified."￨e )￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f inputHandlerClassname￨e =￨e args￨e [￨e (￨e ++￨e i￨e )￨e ]￨e ;￨e }￨f catch￨f (￨f ArrayIndexOutOfBoundsException￨p aioobe￨p )￨f {￨f throw￨e new￨e BuildException￨e (￨e (￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨e +￨e (￨e "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-inputhandler"￨e +￨e "<seq2seq4repair_space>argument"￨e )￨e )￨e )￨e ;￨e }￨f }￨j else￨j if￨j (￨j arg￨c .￨c equals￨c (￨c "-emacs"￨c )￨c )￨j {￨j emacsMode￨e =￨e true￨e ;￨e }￨j else￨j if￨j (￨j arg￨c .￨c equals￨c (￨c "-projecthelp"￨c )￨c )￨j {￨j projectHelp￨e =￨e true￨e ;￨e }￨j else￨j if￨j (￨j arg￨c .￨c equals￨c (￨c "-find"￨c )￨c )￨j {￨j if￨j (￨j i￨c <￨c (￨c (￨c args￨c .￨c length￨c )￨c -￨c 1￨c )￨c )￨j {￨j searchForThis￨e =￨e args￨e [￨e (￨e ++￨e i￨e )￨e ]￨e ;￨e }￨j else￨j {￨j searchForThis￨e =￨e Main￨e .￨e DEFAULT_BUILD_FILENAME￨e ;￨e }￨j }￨j else￨j if￨j (￨j arg￨c .￨c startsWith￨c (￨c "-propertyfile"￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f propertyFiles￨e .￨e addElement￨e (￨e args￨e [￨e (￨e i￨e +￨e 1￨e )￨e ]￨e )￨e ;￨e i￨e ++￨e ;￨e }￨f catch￨f (￨f ArrayIndexOutOfBoundsException￨p aioobe￨p )￨f {￨f String￨e msg￨e =￨e "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>property<seq2seq4repair_space>filename<seq2seq4repair_space>when<seq2seq4repair_space>"￨e +￨e "using<seq2seq4repair_space>the<seq2seq4repair_space>-propertyfile<seq2seq4repair_space>argument"￨e ;￨e throw￨e new￨e BuildException￨e (￨e msg￨e )￨e ;￨e }￨f }￨j else￨j if￨j (￨j (￨c arg￨c .￨c equals￨c (￨c "-k"￨c )￨c )￨c ||￨c (￨c arg￨c .￨c equals￨c (￨c "-keep-going"￨c )￨c )￨c )￨j {￨j keepGoingMode￨e =￨e true￨e ;￨e }￨j else￨j if￨j (￨j arg￨c .￨c startsWith￨c (￨c "-"￨c )￨c )￨j {￨j String￨e msg￨e =￨e "Unknown<seq2seq4repair_space>argument:<seq2seq4repair_space>"￨e +￨e arg￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e msg￨e )￨e ;￨e Main￨e .￨e printUsage￨e (￨e )￨e ;￨e throw￨e new￨e BuildException￨e (￨e ""￨e )￨e ;￨e }￨j else￨j {￨j targets￨e .￨e addElement￨e (￨e arg￨e )￨e ;￨e }￨j }￨l if￨j (￨j (￨c buildFile￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j searchForThis￨c !=￨c null￨c )￨j {￨j buildFile￨e =￨e findBuildFile￨e (￨e System￨e .￨e getProperty￨e (￨e "user.dir"￨e )￨e ,￨e searchForThis￨e )￨e ;￨e }￨j else￨j {￨j buildFile￨e =￨e new￨e File￨e (￨e Main￨e .￨e DEFAULT_BUILD_FILENAME￨e )￨e ;￨e }￨j }￨j if￨j (￨j !￨c (￨c buildFile￨c .￨c exists￨c (￨c )￨c )￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e "Buildfile:<seq2seq4repair_space>"￨e +￨e (￨e buildFile￨e )￨e )￨e +￨e "<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist!"￨e )￨e )￨e ;￨e throw￨e new￨e BuildException￨e (￨e "Build<seq2seq4repair_space>failed"￨e )￨e ;￨e }￨j if￨j (￨j buildFile￨c .￨c isDirectory￨c (￨c )￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e "What?<seq2seq4repair_space>Buildfile:<seq2seq4repair_space>"￨e +￨e (￨e buildFile￨e )￨e )￨e +￨e "<seq2seq4repair_space>is<seq2seq4repair_space>a<seq2seq4repair_space>dir!"￨e )￨e )￨e ;￨e throw￨e new￨e BuildException￨e (￨e "Build<seq2seq4repair_space>failed"￨e )￨e ;￨e }￨j for￨l (￨l int￨c propertyFileIndex￨c =￨c 0￨c ;￨c propertyFileIndex￨c <￨c (￨c propertyFiles￨c .￨c size￨c (￨c )￨c )￨c ;￨c propertyFileIndex￨c ++￨c )￨l {￨l String￨e filename￨e =￨e (￨e (￨e String￨e )￨e (￨e propertyFiles￨e .￨e elementAt￨e (￨e propertyFileIndex￨e )￨e )￨e )￨e ;￨e Properties￨e props￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e FileInputStream￨e fis￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f fis￨e =￨e new￨e FileInputStream￨e (￨e filename￨e )￨e ;￨e props￨e .￨e load￨e (￨e fis￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f System￨e .￨e out￨e .￨e println￨e (￨e (￨e (￨e (￨e "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>property<seq2seq4repair_space>file<seq2seq4repair_space>"￨e +￨e filename￨e )￨e +￨e ":<seq2seq4repair_space>"￨e )￨e +￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f if￨j (￨j fis￨c !=￨c null￨c )￨j {￨j try￨f (￨f )￨f {￨f fis￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f }￨f }￨j }￨f Enumeration￨e propertyNames￨e =￨e props￨e .￨e propertyNames￨e (￨e )￨e ;￨e while￨l (￨l propertyNames￨c .￨c hasMoreElements￨c (￨c )￨c )￨l {￨l String￨e name￨e =￨e (￨e (￨e String￨e )￨e (￨e propertyNames￨e .￨e nextElement￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c definedProps￨c .￨c getProperty￨c (￨c name￨c )￨c )￨c ==￨c null￨c )￨j {￨j definedProps￨e .￨e put￨e (￨e name￨e ,￨e props￨e .￨e getProperty￨e (￨e name￨e )￨e )￨e ;￨e }￨j }￨l }￨l if￨j (￨j (￨c msgOutputLevel￨c )￨c >=￨c (￨c Project￨c .￨c MSG_INFO￨c )￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e "Buildfile:<seq2seq4repair_space>"￨e +￨e (￨e buildFile￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j logTo￨c !=￨c null￨c )￨j {￨j Main￨e .￨e out￨e =￨e logTo￨e ;￨e Main￨e .￨e err￨e =￨e logTo￨e ;￨e System￨e .￨e setOut￨e (￨e Main￨e .￨e out￨e )￨e ;￨e <START_BUG>￨b System￨b .￨b setErr￨b (￨b Main￨b .￨b out￨b )￨b ;￨b <END_BUG>￨b }￨j readyToRun￨e =￨e true￨e ;￨e }￨f private￨f File￨f getParentFile￨f (￨f File￨p file￨p )￨f {￨f }￨f private￨f File￨f findBuildFile￨f (￨f String￨f start￨f ,￨f String￨f suffix￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f runBuild￨f (￨f ClassLoader￨f coreLoader￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f addBuildListeners￨f (￨f Project￨p project￨p )￨f {￨f }￨f private￨f void￨f addInputHandler￨f (￨f Project￨f project￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f BuildLogger￨f createLogger￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f printUsage￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f printVersion￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨e static￨e String￨e antVersion￨e =￨e null￨e ;￨e public￨f static￨f synchronized￨f String￨f getAntVersion￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f printDescription￨f (￨f Project￨p project￨p )￨f {￨f }￨f private￨f static￨f void￨f printTargets￨f (￨f Project￨p project￨p ,￨p boolean￨p printSubTargets￨p )￨f {￨f }￨f private￨f static￨f int￨f findTargetPosition￨f (￨f Vector￨p names￨p ,￨p String￨p name￨p )￨f {￨f }￨f private￨f static￨f void￨f printTargets￨f (￨f Project￨p project￨p ,￨p Vector￨p names￨p ,￨p Vector￨p descriptions￨p ,￨p String￨p heading￨p ,￨p int￨p maxlen￨p )￨f {￨f }￨f }￨d
public￨d class￨d PlatformMBeanResourceUnitTestCase￨d {￨d private￨e static￨e ServiceContainer￨e container￨e ;￨e private￨e static￨e ModelController￨e controller￨e ;￨e private￨e static￨e ModelControllerClient￨e client￨e ;￨e @￨f BeforeClass￨f public￨f static￨f void￨f setupController￨f (￨f )￨f throws￨f InterruptedException￨f (￨f )￨f {￨f }￨f @￨f AfterClass￨f public￨f static￨f void￨f shutdownServiceContainer￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRootResource￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testBufferPoolMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testClassLoadingMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testCompilationMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testGarbageCollectorMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testMemoryMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testMemoryManagerMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testMemoryPoolMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testOperatingSystemMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Ignore￨f (￨f "[AS7-2185]"￨f )￨f @￨f Test￨f public￨f void￨f testPlatformLoggingMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRuntimeMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testThreadingMXBean￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f long￨f findMainThread￨f (￨f ModelNode￨p result￨p )￨f {￨f }￨f private￨f List￨f <￨f ModelNode￨f >￨f rootWithNamedChildResourceTest￨f (￨f final￨f String￨f childType￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f PlatformMBeanResourceUnitTestCase￨f .￨f DescribedResource￨f basicResourceTest￨f (￨f final￨f String￨f type￨f ,￨f final￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f validateResource￨f (￨f ModelNode￨p description￨p ,￨p ModelNode￨p resource￨p )￨f {￨f }￨f private￨f ModelNode￨f executeOp￨f (￨f ModelNode￨f op￨f ,￨f boolean￨f expectFailure￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f ModelNode￨e response￨e =￨e PlatformMBeanResourceUnitTestCase￨e .￨e client￨e .￨e execute￨e (￨e op￨e )￨e ;￨e if￨j (￨j expectFailure￨c )￨j {￨j Assert￨e .￨e assertEquals￨e (￨e FAILED￨e ,￨e response￨e .￨e get￨e (￨e OUTCOME￨e )￨e .￨e asString￨e (￨e )￨e )￨e ;￨e return￨e response￨e .￨e get￨e (￨e FAILURE_DESCRIPTION￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b SUCCESS￨b ,￨b response￨b .￨b get￨b (￨b OUTCOME￨b )￨b .￨b asString￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e response￨e .￨e get￨e (￨e RESULT￨e )￨e ;￨e }￨j }￨f private￨f static￨f ModelNode￨f getOperation￨f (￨f final￨p String￨p opName￨p ,￨p final￨p String￨p type￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f private￨f static￨f ModelNode￨f getAddress￨f (￨f final￨p String￨p type￨p ,￨p final￨p String￨p name￨p )￨f {￨f }￨f private￨d static￨d class￨d DescribedResource￨d {￨d final￨e ModelNode￨e description￨e ;￨e final￨e ModelNode￨e resource￨e ;￨e public￨f DescribedResource￨f (￨f ModelNode￨p description￨p ,￨p ModelNode￨p resource￨p )￨f {￨f }￨f }￨d }￨d
public￨d equalsIgnoreCase￨c (￨c DOM_CHECK_CHAR_NORMALIZATION￨c )￨c )￨c )￨j {￨j if￨j (￨j state￨c )￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "FEATURE_NOT_SUPPORTED"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e NOT_SUPPORTED_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_ELEMENT_CONTENT_WHITESPACE￨c )￨c )￨j {￨j if￨j (￨j !￨c state￨c )￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "FEATURE_NOT_SUPPORTED"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e NOT_SUPPORTED_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOMConfigurationImpl￨c .￨c SEND_PSVI￨c )￨c )￨j {￨j if￨j (￨j !￨c state￨c )￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "FEATURE_NOT_SUPPORTED"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e NOT_SUPPORTED_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_PSVI￨c )￨c )￨j {￨j features￨e =￨e (￨e (￨e short￨e )￨e (￨e (￨e state￨e )￨e ?￨e (￨e features￨e )￨e |￨e (￨e DOMConfigurationImpl￨e .￨e PSVI￨e )￨e :￨e (￨e features￨e )￨e &￨e (￨e ~￨e (￨e DOMConfigurationImpl￨e .￨e PSVI￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j found￨e =￨e false￨e ;￨e }￨j }￨j if￨j (￨j (￨c !￨c found￨c )￨c ||￨c (￨c !￨c (￨c value￨c instanceof￨c Boolean￨c )￨c )￨c )￨j {￨j found￨e =￨e true￨e ;￨e if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_ERROR_HANDLER￨c )￨c )￨j {￨j if￨j (￨j (￨c value￨c instanceof￨c DOMErrorHandler￨c )￨c ||￨c (￨c value￨c ==￨c null￨c )￨c )￨j {￨j fErrorHandlerWrapper￨e .￨e setErrorHandler￨e (￨e (￨e (￨e DOMErrorHandler￨e )￨e (￨e value￨e )￨e )￨e )￨e ;￨e setErrorHandler￨e (￨e fErrorHandlerWrapper￨e )￨e ;￨e }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_RESOURCE_RESOLVER￨c )￨c )￨j {￨j if￨j (￨j (￨c value￨c instanceof￨c LSResourceResolver￨c )￨c ||￨c (￨c value￨c ==￨c null￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f setEntityResolver￨e (￨e new￨e DOMEntityResolverWrapper￨e (￨e (￨e (￨e LSResourceResolver￨e )￨e (￨e value￨e )￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f XMLConfigurationException￨p e￨p )￨f {￨f }￨f }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_SCHEMA_LOCATION￨c )￨c )￨j {￨j if￨j (￨j (￨c value￨c instanceof￨c String￨c )￨c ||￨c (￨c value￨c ==￨c null￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f setProperty￨e (￨e (￨e (￨e Constants￨e .￨e JAXP_PROPERTY_PREFIX￨e )￨e +￨e (￨e Constants￨e .￨e SCHEMA_SOURCE￨e )￨e )￨e ,￨e value￨e )￨e ;￨e }￨f catch￨f (￨f XMLConfigurationException￨p e￨p )￨f {￨f }￨f }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOM_SCHEMA_TYPE￨c )￨c )￨j {￨j if￨j (￨j (￨c value￨c instanceof￨c String￨c )￨c ||￨c (￨c value￨c ==￨c null￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f if￨j (￨j value￨c ==￨c null￨c )￨j {￨j setProperty￨e (￨e (￨e (￨e Constants￨e .￨e JAXP_PROPERTY_PREFIX￨e )￨e +￨e (￨e Constants￨e .￨e SCHEMA_LANGUAGE￨e )￨e )￨e ,￨e null￨e )￨e ;￨e }￨j else￨j if￨j (￨j value￨c .￨c equals￨c (￨c NS_XMLSCHEMA￨c )￨c )￨j {￨j setProperty￨e (￨e (￨e (￨e Constants￨e .￨e JAXP_PROPERTY_PREFIX￨e )￨e +￨e (￨e Constants￨e .￨e SCHEMA_LANGUAGE￨e )￨e )￨e ,￨e NS_XMLSCHEMA￨e )￨e ;￨e }￨j else￨j if￨j (￨j value￨c .￨c equals￨c (￨c NS_DTD￨c )￨c )￨j {￨j setProperty￨e (￨e (￨e (￨e Constants￨e .￨e JAXP_PROPERTY_PREFIX￨e )￨e +￨e (￨e Constants￨e .￨e SCHEMA_LANGUAGE￨e )￨e )￨e ,￨e NS_DTD￨e )￨e ;￨e }￨j }￨f catch￨f (￨f XMLConfigurationException￨p e￨p )￨f {￨f }￨f }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOMConfigurationImpl￨c .￨c ENTITY_RESOLVER￨c )￨c )￨j {￨j if￨j (￨j (￨c value￨c instanceof￨c XMLEntityResolver￨c )￨c ||￨c (￨c value￨c ==￨c null￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f setEntityResolver￨e (￨e (￨e (￨e XMLEntityResolver￨e )￨e (￨e value￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f XMLConfigurationException￨p e￨p )￨f {￨f }￨f }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOMConfigurationImpl￨c .￨c SYMBOL_TABLE￨c )￨c )￨j {￨j if￨j (￨j value￨c instanceof￨c SymbolTable￨c )￨j {￨j setProperty￨e (￨e DOMConfigurationImpl￨e .￨e SYMBOL_TABLE￨e ,￨e value￨e )￨e ;￨e }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j name￨c .￨c equalsIgnoreCase￨c (￨c DOMConfigurationImpl￨c .￨c GRAMMAR_POOL￨c )￨c )￨j {￨j <START_BUG>￨b if￨b (￨b value￨b instanceof￨b XMLGrammarPool￨b )￨b {￨b <END_BUG>￨b setProperty￨e (￨e DOMConfigurationImpl￨e .￨e GRAMMAR_POOL￨e ,￨e value￨e )￨e ;￨e else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "TYPE_MISMATCH_ERR"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e TYPE_MISMATCH_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j else￨j {￨j String￨f msg￨f =￨f DOMMessageFormatter￨f .￨f formatMessage￨f (￨f DOM_DOMAIN￨f ,￨f "FEATURE_NOT_FOUND"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e throw￨e new￨e DOMException￨e (￨e DOMException￨e .￨e NOT_FOUND_ERR￨e ,￨e msg￨e )￨e ;￨e }￨j }￨j }￨f public￨f Object￨f getParameter￨f (￨f String￨f name￨f )￨f throws￨f DOMException￨f (￨f )￨f {￨f }￨f public￨f boolean￨f canSetParameter￨f (￨f String￨p name￨p ,￨p Object￨p value￨p )￨f {￨f }￨f public￨f DOMStringList￨f getParameterNames￨f (￨f )￨f {￨f }￨f protected￨f void￨f reset￨f (￨f )￨f throws￨f XNIException￨f (￨f )￨f {￨f }￨f protected￨f void￨f checkProperty￨f (￨f String￨f propertyId￨f )￨f throws￨f XMLConfigurationException￨f (￨f )￨f {￨f }￨f protected￨f void￨f addComponent￨f (￨f XMLComponent￨p component￨p )￨f {￨f }￨f protected￨f ValidationManager￨f createValidationManager￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f setDTDValidatorFactory￨f (￨f String￨p version￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Driver20￨d extends￨d InternalDriver￨d implements￨d Driver￨d {￨d private￨f static￨f final￨f String￨f [￨f ]￨f BOOLEAN_CHOICES￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e Class￨e antiGCDriverManager￨e ;￨e public￨f void￨f boot￨f (￨f boolean￨f create￨f ,￨f Properties￨f properties￨f )￨f throws￨f StandardException￨f (￨f )￨f {￨f }￨f public￨f void￨f stop￨f (￨f )￨f {￨f }￨f public￨f EmbedResultSet￨f newEmbedResultSet￨f (￨f EmbedConnection￨f conn￨f ,￨f ResultSet￨f results￨f ,￨f boolean￨f forMetaData￨f ,￨f EmbedStatement￨f statement￨f ,￨f boolean￨f isAtomic￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f abstract￨f BrokeredConnection￨f newBrokeredConnection￨f (￨f BrokeredConnectionControl￨p control￨p )￨f {￨f }￨f public￨f DriverPropertyInfo￨f [￨f ]￨f getPropertyInfo￨f (￨f String￨f url￨f ,￨f Properties￨f info￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f if￨j (￨j info￨c !=￨c null￨c )￨j {￨j if￨j (￨j Boolean￨c .￨c valueOf￨c (￨c info￨c .￨c getProperty￨c (￨c SHUTDOWN_ATTR￨c )￨c )￨c .￨c booleanValue￨c (￨c )￨c )￨j {￨j return￨e new￨e DriverPropertyInfo￨e [￨e 0￨e ]￨e ;￨e }￨j }￨j String￨e dbname￨e =￨e InternalDriver￨e .￨e getDatabaseName￨e (￨e url￨e ,￨e info￨e )￨e ;￨e FormatableProperties￨e finfo￨e =￨e getAttributes￨e (￨e url￨e ,￨e info￨e )￨e ;￨e info￨e =￨e null￨e ;￨e boolean￨e encryptDB￨e =￨e Boolean￨e .￨e valueOf￨e (￨e finfo￨e .￨e getProperty￨e (￨e DATA_ENCRYPTION￨e )￨e )￨e .￨e booleanValue￨e (￨e )￨e ;￨e String￨e encryptpassword￨e =￨e finfo￨e .￨e getProperty￨e (￨e BOOT_PASSWORD￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b dbname￨b .￨b length￨b (￨b )￨b )￨b ==￨b 0￨b )￨b ||￨b (￨b encryptDB￨b =￨b true￨b &&￨b (￨b encryptpassword￨b ==￨b null￨b )￨b )￨b )￨b {￨b <END_BUG>￨b String￨f [￨f ]￨f [￨f ]￨f connStringAttributes￨f =￨f new￨f String￨f [￨f ]￨f [￨f ]￨f (￨f )￨f {￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f }￨f ;￨e String￨f [￨f ]￨f [￨f ]￨f connBooleanAttributes￨f =￨f new￨f String￨f [￨f ]￨f [￨f ]￨f (￨f )￨f {￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f }￨f ;￨e String￨f [￨f ]￨f [￨f ]￨f connStringSecretAttributes￨f =￨f new￨f String￨f [￨f ]￨f [￨f ]￨f (￨f )￨f {￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f }￨f ;￨e DriverPropertyInfo￨e [￨e ]￨e optionsNoDB￨e =￨e new￨e DriverPropertyInfo￨e [￨e (￨e (￨e connStringAttributes￨e .￨e length￨e )￨e +￨e (￨e connBooleanAttributes￨e .￨e length￨e )￨e )￨e +￨e (￨e connStringSecretAttributes￨e .￨e length￨e )￨e ]￨e ;￨e int￨e attrIndex￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c connStringAttributes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c ,￨c attrIndex￨c ++￨c )￨l {￨l optionsNoDB￨e [￨e attrIndex￨e ]￨e =￨e new￨e DriverPropertyInfo￨e (￨e connStringAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e ,￨e finfo￨e .￨e getProperty￨e (￨e connStringAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e )￨e )￨e ;￨e optionsNoDB￨e [￨e attrIndex￨e ]￨e .￨e description￨e =￨e MessageService￨e .￨e getTextMessage￨e (￨e connStringAttributes￨e [￨e i￨e ]￨e [￨e 1￨e ]￨e )￨e ;￨e }￨l optionsNoDB￨e [￨e 0￨e ]￨e .￨e choices￨e =￨e Monitor￨e .￨e getMonitor￨e (￨e )￨e .￨e getServiceList￨e (￨e DATABASE_MODULE￨e )￨e ;￨e optionsNoDB￨e [￨e 0￨e ]￨e .￨e value￨e =￨e dbname￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c connStringSecretAttributes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c ,￨c attrIndex￨c ++￨c )￨l {￨l optionsNoDB￨e [￨e attrIndex￨e ]￨e =￨e new￨e DriverPropertyInfo￨e (￨e connStringSecretAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e ,￨e (￨e (￨e finfo￨e .￨e getProperty￨e (￨e connStringSecretAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e )￨e )￨e ==￨e null￨e ?￨e ""￨e :￨e "****"￨e )￨e )￨e ;￨e optionsNoDB￨e [￨e attrIndex￨e ]￨e .￨e description￨e =￨e MessageService￨e .￨e getTextMessage￨e (￨e connStringSecretAttributes￨e [￨e i￨e ]￨e [￨e 1￨e ]￨e )￨e ;￨e }￨l for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c connBooleanAttributes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c ,￨c attrIndex￨c ++￨c )￨l {￨l optionsNoDB￨e [￨e attrIndex￨e ]￨e =￨e new￨e DriverPropertyInfo￨e (￨e connBooleanAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e ,￨e Boolean￨e .￨e valueOf￨e (￨e (￨e finfo￨e ==￨e null￨e ?￨e ""￨e :￨e finfo￨e .￨e getProperty￨e (￨e connBooleanAttributes￨e [￨e i￨e ]￨e [￨e 0￨e ]￨e )￨e )￨e )￨e .￨e toString￨e (￨e )￨e )￨e ;￨e optionsNoDB￨e [￨e attrIndex￨e ]￨e .￨e description￨e =￨e MessageService￨e .￨e getTextMessage￨e (￨e connBooleanAttributes￨e [￨e i￨e ]￨e [￨e 1￨e ]￨e )￨e ;￨e optionsNoDB￨e [￨e attrIndex￨e ]￨e .￨e choices￨e =￨e Driver20￨e .￨e BOOLEAN_CHOICES￨e ;￨e }￨l return￨e optionsNoDB￨e ;￨e }￨e return￨e new￨e DriverPropertyInfo￨e [￨e 0￨e ]￨e ;￨e }￨f public￨f void￨f checkSystemPrivileges￨f (￨f String￨f user￨f ,￨f Permission￨f perm￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
@￨d RunAsClient￨d @￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d DeploymentTestCase￨d {￨d private￨e static￨e final￨e long￨e TIMEOUT￨e =￨e 10000￨e ;￨e private￨e static￨e final￨e String￨e WAR_JBOSS_FILE￨e =￨e "jboss-web.xml"￨e ;￨e private￨e static￨e final￨e String￨e JAR_JBOSS_FILE￨e =￨e "jboss.xml"￨e ;￨e private￨e static￨e final￨e String￨e EAR_JBOSS_FILE￨e =￨e "jboss-app.xml"￨e ;￨e @￨e ArquillianResource￨e private￨e ManagementClient￨e managementClient￨e ;￨e @￨f Deployment￨f public￨f static￨f Archive￨f <￨f ?￨f >￨f fakeDeployment￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDeployUndeployEAR￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f DeploymentManager￨f getDeploymentManager￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ProgressObject￨f jsr88Deploy￨f (￨f DeploymentManager￨f manager￨f ,￨f Archive￨f <￨f ?￨f >￨f archive￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ProgressObject￨f jsr88Undeploy￨f (￨f DeploymentManager￨f manager￨f ,￨f TargetModuleID￨f [￨f ]￨f resultTargetModuleIDs￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f StateType￨f awaitCompletion￨f (￨f ProgressObject￨f progress￨f ,￨f long￨f timeout￨f )￨f throws￨f InterruptedException￨f (￨f )￨f {￨f }￨f private￨f void￨f assertServletAccess￨f (￨f String￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b URL￨b servletURL￨b =￨b new￨b URL￨b (￨b (￨b "http://localhost:8080/"￨b +￨b context￨b )￨b )￨b ;￨b <END_BUG>￨b BufferedReader￨e br￨e =￨e new￨e BufferedReader￨e (￨e new￨e InputStreamReader￨e (￨e servletURL￨e .￨e openStream￨e (￨e )￨e )￨e )￨e ;￨e String￨e message￨e =￨e br￨e .￨e readLine￨e (￨e )￨e ;￨e assertEquals￨e (￨e "Hello<seq2seq4repair_space>World!"￨e ,￨e message￨e )￨e ;￨e }￨f private￨f InputStream￨f createDeploymentPlan￨f (￨f String￨f deploymentFile￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f Archive￨f <￨f ?￨f >￨f getWebArchive￨f (￨f )￨f {￨f }￨f private￨f Archive￨f <￨f ?￨f >￨f getEjbArchive￨f (￨f )￨f {￨f }￨f private￨f Archive￨f <￨f ?￨f >￨f getEarArchive￨f (￨f )￨f {￨f }￨f }￨d
abstract￨d class￨d AbstractTrie￨d <￨d K￨d ,￨d V￨d >￨d extends￨d AbstractMap￨d <￨d K￨d ,￨d V￨d >￨d implements￨d Serializable￨d ,￨d Trie￨d <￨d K￨d ,￨d V￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 5826987063535505652L￨e ;￨e protected￨e final￨e KeyAnalyzer￨e <￨e ?￨e super￨e K￨e >￨e keyAnalyzer￨e ;￨e public￨f AbstractTrie￨f (￨f final￨p KeyAnalyzer￨p <￨p ?￨p super￨p K￨p >￨p keyAnalyzer￨p )￨f {￨f }￨f public￨f KeyAnalyzer￨f <￨f ?￨f super￨f K￨f >￨f getKeyAnalyzer￨f (￨f )￨f {￨f }￨f public￨f K￨f selectKey￨f (￨f final￨p K￨p key￨p )￨f {￨f }￨f public￨f V￨f selectValue￨f (￨f final￨p K￨p key￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f final￨f K￨f castKey￨f (￨f final￨p Object￨p key￨p )￨f {￨f }￨f final￨f int￨f lengthInBits￨f (￨f final￨p K￨p key￨p )￨f {￨f }￨f final￨f int￨f bitsPerElement￨f (￨f )￨f {￨f }￨f final￨f boolean￨f isBitSet￨f (￨f final￨p K￨p key￨p ,￨p final￨p int￨p bitIndex￨p ,￨p final￨p int￨p lengthInBits￨p )￨f {￨f }￨f final￨f int￨f bitIndex￨f (￨f final￨p K￨p key￨p ,￨p final￨p K￨p foundKey￨p )￨f {￨f }￨f final￨f boolean￨f compareKeys￨f (￨f final￨p K￨p key￨p ,￨p final￨p K￨p other￨p )￨f {￨f if￨j (￨j key￨c ==￨c null￨c )￨j {￨j return￨e other￨e ==￨e null￨e ;￨e }￨j else￨j if￨j (￨j other￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b return￨b key￨b ==￨b null￨b ;￨b <END_BUG>￨b }￨j return￨e (￨e keyAnalyzer￨e .￨e compare￨e (￨e key￨e ,￨e other￨e )￨e )￨e ==￨e 0￨e ;￨e }￨f static￨f boolean￨f compare￨f (￨f final￨p Object￨p a￨p ,￨p final￨p Object￨p b￨p )￨f {￨f }￨f abstract￨d static￨d class￨d BasicEntry￨d <￨d K￨d ,￨d V￨d >￨d implements￨d Serializable￨d ,￨d Map￨d .￨d Entry￨d <￨d K￨d ,￨d V￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 944364551314110330L￨e ;￨e protected￨e K￨e key￨e ;￨e protected￨e V￨e value￨e ;￨e private￨e final￨e int￨e hashCode￨e ;￨e public￨f BasicEntry￨f (￨f final￨p K￨p key￨p )￨f {￨f }￨f public￨f BasicEntry￨f (￨f final￨p K￨p key￨p ,￨p final￨p V￨p value￨p )￨f {￨f }￨f public￨f V￨f setKeyValue￨f (￨f final￨p K￨p key￨p ,￨p final￨p V￨p value￨p )￨f {￨f }￨f public￨f K￨f getKey￨f (￨f )￨f {￨f }￨f public￨f V￨f getValue￨f (￨f )￨f {￨f }￨f public￨f V￨f setValue￨f (￨f final￨p V￨p value￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f final￨p Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d Submitter￨d {￨d public￨e static￨e final￨e int￨e STOCK_LEVEL￨e =￨e 0￨e ;￨e public￨e static￨e final￨e int￨e ORDER_STATUS_BY_NAME￨e =￨e 1￨e ;￨e public￨e static￨e final￨e int￨e ORDER_STATUS_BY_ID￨e =￨e 2￨e ;￨e public￨e static￨e final￨e int￨e PAYMENT_BY_NAME￨e =￨e 3￨e ;￨e public￨e static￨e final￨e int￨e PAYMENT_BY_ID￨e =￨e 4￨e ;￨e public￨e static￨e final￨e int￨e DELIVERY_SCHEDULE￨e =￨e 5￨e ;￨e public￨e static￨e final￨e int￨e NEW_ORDER￨e =￨e 6￨e ;￨e public￨e static￨e final￨e int￨e NEW_ORDER_ROLLBACK￨e =￨e 7￨e ;￨e private￨e final￨e Display￨e display￨e ;￨e private￨e final￨e Operations￨e ops￨e ;￨e private￨e final￨e OERandom￨e rand￨e ;￨e private￨e final￨e short￨e maxW￨e ;￨e private￨e final￨e int￨e [￨e ]￨e transactionCount￨e ;￨e public￨f static￨f OERandom￨f getRuntimeRandom￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f static￨f Submitter￨f stockLevelOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f static￨f Submitter￨f orderStatusByIdOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f static￨f Submitter￨f orderStatusByNameOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f static￨f Submitter￨f paymentByIdOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f static￨f Submitter￨f paymentByNameOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f static￨f Submitter￨f newOrderOnly￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f Submitter￨f (￨f Display￨p display￨p ,￨p Operations￨p ops￨p ,￨p OERandom￨p rand￨p ,￨p short￨p maxW￨p )￨f {￨f }￨f public￨f void￨f clearTransactionCount￨f (￨f )￨f {￨f }￨f public￨f long￨f runTransactions￨f (￨f final￨f Object￨f displayData￨f ,￨f final￨f int￨f count￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f runTransaction￨f (￨f final￨f Object￨f displayData￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f int￨f mixType￨f (￨f final￨p int￨p chooseType￨p )￨f {￨f }￨f protected￨f void￨f runNewOrder￨f (￨f Object￨f displayData￨f ,￨f boolean￨f forRollback￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f short￨e homeWarehouse￨e =￨e warehouse￨e (￨e )￨e ;￨e final￨e int￨e orderItemCount￨e =￨e rand￨e .￨e randomInt￨e (￨e 5￨e ,￨e 15￨e )￨e ;￨e int￨e [￨e ]￨e items￨e =￨e new￨e int￨e [￨e orderItemCount￨e ]￨e ;￨e short￨e [￨e ]￨e quantities￨e =￨e new￨e short￨e [￨e orderItemCount￨e ]￨e ;￨e short￨e [￨e ]￨e supplyW￨e =￨e new￨e short￨e [￨e orderItemCount￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c orderItemCount￨c ;￨c i￨c ++￨c )￨l {￨l items￨e [￨e i￨e ]￨e =￨e rand￨e .￨e NURand8191￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c maxW￨c )￨c ==￨c 1￨c )￨c ||￨c (￨c (￨c rand￨c .￨c randomInt￨c (￨c 1￨c ,￨c 100￨c )￨c )￨c >￨c 1￨c )￨c )￨j {￨j supplyW￨e [￨e i￨e ]￨e =￨e homeWarehouse￨e ;￨e }￨j else￨j {￨j short￨e sw￨e =￨e warehouse￨e (￨e )￨e ;￨e while￨l (￨l sw￨c ==￨c homeWarehouse￨c )￨l {￨l sw￨e =￨e warehouse￨e (￨e )￨e ;￨e }￨l supplyW￨e [￨e i￨e ]￨e =￨e sw￨e ;￨e }￨j supplyW￨e [￨e i￨e ]￨e =￨e (￨e (￨e rand￨e .￨e randomInt￨e (￨e 1￨e ,￨e 100￨e )￨e )￨e >￨e 1￨e )￨e ?￨e homeWarehouse￨e :￨e warehouse￨e (￨e )￨e ;￨e quantities￨e [￨e i￨e ]￨e =￨e (￨e (￨e short￨e )￨e (￨e rand￨e .￨e randomInt￨e (￨e 1￨e ,￨e 10￨e )￨e )￨e )￨e ;￨e }￨l if￨j (￨j forRollback￨c )￨j {￨j <START_BUG>￨b items￨b [￨b orderItemCount￨b ]￨b =￨b 2334432￨b ;￨b <END_BUG>￨b }￨j ops￨e .￨e newOrder￨e (￨e display￨e ,￨e displayData￨e ,￨e homeWarehouse￨e ,￨e rand￨e .￨e district￨e (￨e )￨e ,￨e rand￨e .￨e NURand1023￨e (￨e )￨e ,￨e items￨e ,￨e quantities￨e ,￨e supplyW￨e )￨e ;￨e }￨f protected￨f void￨f runScheduleDelivery￨f (￨f Object￨p displayData￨p )￨f {￨f }￨f protected￨f void￨f runPayment￨f (￨f Object￨f displayData￨f ,￨f boolean￨f byName￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f final￨f short￨f warehouse￨f (￨f )￨f {￨f }￨f protected￨f void￨f runStockLevel￨f (￨f Object￨f displayData￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f runOrderStatus￨f (￨f Object￨f displayData￨f ,￨f boolean￨f byName￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f printReport￨f (￨f PrintStream￨p out￨p )￨f {￨f }￨f private￨f String￨f transactionCount￨f (￨f String￨p name￨p ,￨p int￨p count￨p ,￨p int￨p total￨p )￨f {￨f }￨f private￨f String￨f percent￨f (￨f int￨p count￨p ,￨p int￨p total￨p )￨f {￨f }￨f public￨f int￨f [￨f ]￨f getTransactionCount￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestCalendarFields￨d extends￨d BaseKernelTest￨d {￨d public￨f TestCalendarFields￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f testFieldDefaultTimeZone￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeZoneEquals￨f (￨f )￨f {￨f CalendarFields￨e c1￨e =￨e new￨e CalendarFields￨e (￨e )￨e ;￨e CalendarFields￨e c2￨e =￨e new￨e CalendarFields￨e (￨e )￨e ;￨e assertTimeZonesEquals￨e (￨e c1￨e ,￨e c2￨e )￨e ;￨e OpenJPAEntityManager￨e pm￨e ;￨e pm￨e =￨e getPM￨e (￨e )￨e ;￨e startTx￨e (￨e pm￨e )￨e ;￨e pm￨e .￨e persist￨e (￨e c2￨e )￨e ;￨e int￨e id2￨e =￨e c2￨e .￨e getId￨e (￨e )￨e ;￨e assertTimeZonesEquals￨e (￨e c1￨e ,￨e c2￨e )￨e ;￨e endTx￨e (￨e pm￨e )￨e ;￨e assertTimeZonesEquals￨e (￨e c1￨e ,￨e c2￨e )￨e ;￨e endEm￨e (￨e pm￨e )￨e ;￨e pm￨e =￨e getPM￨e (￨e )￨e ;￨e c2￨e =￨e (￨e (￨e CalendarFields￨e )￨e (￨e pm￨e .￨e find￨e (￨e CalendarFields￨e .￨e class￨e ,￨e id2￨e )￨e )￨e )￨e ;￨e assertTimeZonesEquals￨e (￨e c1￨e ,￨e c2￨e )￨e ;￨e <START_BUG>￨b assertTimeZonesEquals￨b (￨b c1￨b ,￨b (￨b (￨b CalendarFields￨b )￨b (￨b pm￨b .￨b detach￨b (￨b c2￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b endEm￨e (￨e pm￨e )￨e ;￨e }￨f public￨f void￨f testCalendarQuery￨f (￨f )￨f {￨f }￨f private￨f static￨f Calendar￨f newCalendar￨f (￨f Date￨p date￨p ,￨p String￨p tz￨p )￨f {￨f }￨f public￨f void￨f testMutateCalendarDirties￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f setTimeInMillis￨f (￨f Calendar￨p cal￨p ,￨p long￨p millis￨p )￨f {￨f }￨f private￨f void￨f assertTimeZonesEquals￨f (￨f CalendarFields￨p c1￨p ,￨p CalendarFields￨p c2￨p )￨f {￨f }￨f }￨d
public￨d class￨d Argument￨d extends￨d LocalDeclaration￨d {￨d private￨e static￨e final￨e char￨e [￨e ]￨e SET￨e =￨e "set"￨e .￨e toCharArray￨e (￨e )￨e ;￨e public￨f Argument￨f (￨f char￨p [￨p ]￨p name￨p ,￨p long￨p posNom￨p ,￨p TypeReference￨p tr￨p ,￨p int￨p modifiers￨p )￨f {￨f }￨f public￨f void￨f bind￨f (￨f MethodScope￨p scope￨p ,￨p TypeBinding￨p typeBinding￨p ,￨p boolean￨p used￨p )￨f {￨f }￨f public￨f int￨f getKind￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVarArgs￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f print￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveForCatch￨f (￨f BlockScope￨p scope￨p )￨f {￨f TypeBinding￨e exceptionType￨e =￨e this￨e .￨e type￨e .￨e resolveType￨e (￨e scope￨e ,￨e true￨e )￨e ;￨e boolean￨e hasError￨e ;￨e if￨j (￨j exceptionType￨c ==￨c null￨c )￨j {￨j hasError￨e =￨e true￨e ;￨e }￨j else￨j {￨j hasError￨e =￨e false￨e ;￨e switch￨s (￨s exceptionType￨c .￨c kind￨c (￨c )￨c )￨s {￨s case￨c Binding￨c .￨c PARAMETERIZED_TYPE￨c :￨c if￨j (￨j exceptionType￨c .￨c isBoundParameterizedType￨c (￨c )￨c )￨j {￨j hasError￨e =￨e true￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e invalidParameterizedExceptionType￨e (￨e exceptionType￨e ,￨e this￨e )￨e ;￨e }￨j break￨e ;￨e case￨c Binding￨c .￨c TYPE_PARAMETER￨c :￨c scope￨e .￨e problemReporter￨e (￨e )￨e .￨e invalidTypeVariableAsException￨e (￨e exceptionType￨e ,￨e this￨e )￨e ;￨e hasError￨e =￨e true￨e ;￨e break￨e ;￨e case￨c Binding￨c .￨c ARRAY_TYPE￨c :￨c if￨j (￨j (￨c (￨c (￨c ArrayBinding￨c )￨c (￨c exceptionType￨c )￨c )￨c .￨c leafComponentType￨c )￨c ==￨c (￨c TypeBinding￨c .￨c VOID￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e variableTypeCannotBeVoidArray￨e (￨e this￨e )￨e ;￨e hasError￨e =￨e true￨e ;￨e }￨j break￨e ;￨e }￨s <START_BUG>￨b if￨b (￨b (￨b exceptionType￨b .￨b findSuperTypeOriginatingFrom￨b (￨b TypeIds￨b .￨b T_JavaLangThrowable￨b ,￨b true￨b )￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b scope￨e .￨e problemReporter￨e (￨e )￨e .￨e cannotThrowType￨e (￨e this￨e .￨e type￨e ,￨e exceptionType￨e )￨e ;￨e hasError￨e =￨e true￨e ;￨e }￨j Binding￨e existingVariable￨e =￨e scope￨e .￨e getBinding￨e (￨e name￨e ,￨e Binding￨e .￨e VARIABLE￨e ,￨e this￨e ,￨e false￨e )￨e ;￨e if￨j (￨j (￨c existingVariable￨c !=￨c null￨c )￨c &&￨c (￨c existingVariable￨c .￨c isValidBinding￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c existingVariable￨c instanceof￨c LocalVariableBinding￨c )￨c &&￨c (￨c (￨c this￨c .￨c hiddenVariableDepth￨c )￨c ==￨c 0￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e redefineArgument￨e (￨e this￨e )￨e ;￨e }￨j else￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e localVariableHiding￨e (￨e this￨e ,￨e existingVariable￨e ,￨e false￨e )￨e ;￨e }￨j }￨j this￨e .￨e binding￨e =￨e new￨e LocalVariableBinding￨e (￨e this￨e ,￨e exceptionType￨e ,￨e modifiers￨e ,￨e false￨e )￨e ;￨e ASTNode￨e .￨e resolveAnnotations￨e (￨e scope￨e ,￨e this￨e .￨e annotations￨e ,￨e this￨e .￨e binding￨e )￨e ;￨e scope￨e .￨e addLocalVariable￨e (￨e binding￨e )￨e ;￨e binding￨e .￨e setConstant￨e (￨e Constant￨e .￨e NotAConstant￨e )￨e ;￨e if￨j (￨j hasError￨c )￨j {￨j return￨e null￨e ;￨e }￨j return￨e exceptionType￨e ;￨e }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p scope￨p )￨f {￨f }￨f }￨d
@￨d ThreadLeakScope￨d (￨d Scope￨d .￨d NONE￨d )￨d public￨d class￨d HdfsLockFactoryTest￨d extends￨d SolrTestCaseJ4￨d {￨d private￨e static￨e MiniDFSCluster￨e dfsCluster￨e ;￨e @￨f BeforeClass￨f public￨f static￨f void￨f beforeClass￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f AfterClass￨f public￨f static￨f void￨f afterClass￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Before￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f After￨f public￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testBasic￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f URI￨e uri￨e =￨e HdfsLockFactoryTest￨e .￨e dfsCluster￨e .￨e getURI￨e (￨e )￨e ;￨e Path￨e lockPath￨e =￨e new￨e Path￨e (￨e uri￨e .￨e toString￨e (￨e )￨e ,￨e "/basedir/lock"￨e )￨e ;￨e HdfsLockFactory￨e lockFactory￨e =￨e new￨e HdfsLockFactory￨e (￨e lockPath￨e ,￨e new￨e Configuration￨e (￨e )￨e )￨e ;￨e Lock￨e lock￨e =￨e lockFactory￨e .￨e makeLock￨e (￨e "testlock"￨e )￨e ;￨e boolean￨e success￨e =￨e lock￨e .￨e obtain￨e (￨e )￨e ;￨e assertTrue￨e (￨e "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨e ,￨e success￨e )￨e ;￨e success￨e =￨e lock￨e .￨e obtain￨e (￨e )￨e ;￨e assertFalse￨e (￨e "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨e ,￨e success￨e )￨e ;￨e <START_BUG>￨b lock￨b .￨b release￨b (￨b )￨b ;￨b <END_BUG>￨b success￨e =￨e lock￨e .￨e obtain￨e (￨e )￨e ;￨e assertTrue￨e (￨e "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨e ,￨e success￨e )￨e ;￨e success￨e =￨e lock￨e .￨e obtain￨e (￨e )￨e ;￨e assertFalse￨e (￨e "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨e ,￨e success￨e )￨e ;￨e }￨f }￨d
public￨d final￨d class￨d RemotingExtension￨d implements￨d Extension￨d {￨d private￨f static￨f final￨f SubsystemFactory￨f <￨f RemotingSubsystemElement￨f >￨f FACTORY￨f =￨f new￨f SubsystemFactory￨f <￨f RemotingSubsystemElement￨f >￨f (￨f )￨f (￨f )￨f {￨f public￨f RemotingSubsystemElement￨f createSubsystemElement￨f (￨f )￨f {￨f }￨f }￨f ;￨e public￨f void￨f initialize￨f (￨f ExtensionContext￨p context￨p )￨f {￨f <START_BUG>￨b context￨b .￨b registerSubsystem￨b (￨b REMOTING_1_0￨b .￨b getUriString￨b (￨b )￨b ,￨b RemotingExtension￨b .￨b FACTORY￨b ,￨b RemotingSubsystemParser￨b .￨b getInstance￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f activate￨f (￨f final￨p ServiceActivatorContext￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d URLCodec￨d implements￨d BinaryDecoder￨d ,￨d BinaryEncoder￨d ,￨d StringDecoder￨d ,￨d StringEncoder￨d {￨d private￨e static￨e final￨e int￨e RADIX￨e =￨e 16￨e ;￨e protected￨e String￨e charset￨e ;￨e protected￨e static￨e byte￨e ESCAPE_CHAR￨e =￨e '%'￨e ;￨e protected￨e static￨e final￨e BitSet￨e WWW_FORM_URL￨e =￨e new￨e BitSet￨e (￨e 256￨e )￨e ;￨e public￨f URLCodec￨f (￨f )￨f {￨f }￨f public￨f URLCodec￨f (￨f String￨p charset￨p )￨f {￨f }￨f public￨f static￨f final￨f byte￨f [￨f ]￨f encodeUrl￨f (￨f BitSet￨p urlsafe￨p ,￨p byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f static￨f final￨f byte￨f [￨f ]￨f decodeUrl￨f (￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f if￨j (￨j bytes￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j ByteArrayOutputStream￨e buffer￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c bytes￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l int￨e b￨e =￨e bytes￨e [￨e i￨e ]￨e ;￨e if￨j (￨j b￨c ==￨c '+'￨c )￨j {￨j buffer￨e .￨e write￨e (￨e '<seq2seq4repair_space>'￨e )￨e ;￨e }￨j else￨j if￨j (￨j b￨c ==￨c '%'￨c )￨j {￨j try￨f (￨f )￨f {￨f int￨e u￨e =￨e URLCodec￨e .￨e toCharacterDigit￨e (￨e bytes￨e [￨e (￨e ++￨e i￨e )￨e ]￨e )￨e ;￨e int￨e l￨e =￨e URLCodec￨e .￨e toCharacterDigit￨e (￨e bytes￨e [￨e (￨e ++￨e i￨e )￨e ]￨e )￨e ;￨e buffer￨e .￨e write￨e (￨e (￨e (￨e char￨e )￨e (￨e (￨e u￨e <<￨e 4￨e )￨e +￨e l￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f ArrayIndexOutOfBoundsException￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b DecoderException￨b (￨b "Invalid<seq2seq4repair_space>URL<seq2seq4repair_space>encoding:<seq2seq4repair_space>"￨b )￨b ;￨b <END_BUG>￨b }￨f }￨j else￨j {￨j buffer￨e .￨e write￨e (￨e b￨e )￨e ;￨e }￨j }￨l return￨e buffer￨e .￨e toByteArray￨e (￨e )￨e ;￨e }￨f private￨f static￨f int￨f toCharacterDigit￨f (￨f byte￨f b￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f encode￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f decode￨f (￨f byte￨f [￨f ]￨f bytes￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f encode￨f (￨f String￨f pString￨f ,￨f String￨f charset￨f )￨f throws￨f UnsupportedEncodingException￨f (￨f )￨f {￨f }￨f public￨f String￨f encode￨f (￨f String￨f pString￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f decode￨f (￨f String￨f pString￨f ,￨f String￨f charset￨f )￨f throws￨f UnsupportedEncodingException￨f ,￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f decode￨f (￨f String￨f pString￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f Object￨f encode￨f (￨f Object￨f pObject￨f )￨f throws￨f EncoderException￨f (￨f )￨f {￨f }￨f public￨f Object￨f decode￨f (￨f Object￨f pObject￨f )￨f throws￨f DecoderException￨f (￨f )￨f {￨f }￨f public￨f String￨f getEncoding￨f (￨f )￨f {￨f }￨f public￨f String￨f getDefaultCharset￨f (￨f )￨f {￨f }￨f }￨d
class￨d SingleSignOnAdd￨d extends￨d AbstractAddStepHandler￨d {￨d @￨f Override￨f protected￨f void￨f populateModel￨f (￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e get￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e PathAddress￨e hostAddress￨e =￨e address￨e .￨e subAddress￨e (￨e 0￨e ,￨e (￨e (￨e address￨e .￨e size￨e (￨e )￨e )￨e -￨e 1￨e )￨e )￨e ;￨e final￨e PathAddress￨e serverAddress￨e =￨e hostAddress￨e .￨e subAddress￨e (￨e 0￨e ,￨e (￨e (￨e hostAddress￨e .￨e size￨e (￨e )￨e )￨e -￨e 1￨e )￨e )￨e ;￨e final￨e ModelNode￨e domainModelNode￨e =￨e DOMAIN￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e ;￨e final￨e ModelNode￨e pathNode￨e =￨e PATH￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e ;￨e final￨e String￨e domain￨e =￨e (￨e domainModelNode￨e .￨e isDefined￨e (￨e )￨e )￨e ?￨e domainModelNode￨e .￨e asString￨e (￨e )￨e :￨e null￨e ;￨e final￨e String￨e path￨e =￨e (￨e pathNode￨e .￨e isDefined￨e (￨e )￨e )￨e ?￨e pathNode￨e .￨e asString￨e (￨e )￨e :￨e null￨e ;￨e final￨e boolean￨e secure￨e =￨e SECURE￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e .￨e asBoolean￨e (￨e )￨e ;￨e final￨e boolean￨e httpOnly￨e =￨e HTTP_ONLY￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e .￨e asBoolean￨e (￨e )￨e ;￨e final￨e String￨e cookieName￨e =￨e COOKIE_NAME￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e model￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e String￨e serverName￨e =￨e serverAddress￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e hostName￨e =￨e hostAddress￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e ServiceName￨e serviceName￨e =￨e UndertowService￨e .￨e ssoServiceName￨e (￨e serverName￨e ,￨e hostName￨e )￨e ;￨e final￨e ServiceName￨e virtualHostServiceName￨e =￨e UndertowService￨e .￨e virtualHostName￨e (￨e serverName￨e ,￨e hostName￨e )￨e ;￨e final￨e ServiceTarget￨e target￨e =￨e context￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e ServiceName￨e managerServiceName￨e =￨e serviceName￨e .￨e append￨e (￨e "manager"￨e )￨e ;￨e <START_BUG>￨b SingleSignOnManagerService￨b .￨b build￨b (￨b target￨b ,￨b managerServiceName￨b ,￨b virtualHostServiceName￨b )￨b .￨b setInitialMode￨b (￨b ON_DEMAND￨b )￨b .￨b install￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e SingleSignOnService￨e service￨e =￨e new￨e SingleSignOnService￨e (￨e domain￨e ,￨e path￨e ,￨e httpOnly￨e ,￨e secure￨e ,￨e cookieName￨e )￨e ;￨e target￨e .￨e addService￨e (￨e serviceName￨e ,￨e service￨e )￨e .￨e addDependency￨e (￨e virtualHostServiceName￨e ,￨e Host￨e .￨e class￨e ,￨e service￨e .￨e getHost￨e (￨e )￨e )￨e .￨e addDependency￨e (￨e managerServiceName￨e ,￨e SingleSignOnManager￨e .￨e class￨e ,￨e service￨e .￨e getSingleSignOnSessionManager￨e (￨e )￨e )￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e }￨f }￨d
public￨d final￨d class￨d FeedbackPanel￨d extends￨d Panel￨d implements￨d IValidationFeedback￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e -￨e 3385823935971399988L￨e ;￨e private￨e final￨e FeedbackPanel￨e .￨e MessageListView￨e messageListView￨e ;￨e private￨d static￨d final￨d class￨d MessageListView￨d extends￨d ListView￨d {￨d public￨f MessageListView￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f protected￨f void￨f populateItem￨f (￨f final￨p ListItem￨p listItem￨p )￨f {￨f }￨f }￨d public￨f FeedbackPanel￨f (￨f final￨p String￨p componentName￨p )￨f {￨f }￨f public￨f void￨f setMaxMessages￨f (￨f int￨p maxMessages￨p )￨f {￨f }￨f public￨f void￨f updateValidationFeedback￨f (￨f final￨p Form￨p form￨p )￨f {￨f messageListView￨e .￨e setModel￨e (￨e getPage￨e (￨e )￨e .￨e getFeedbackMessages￨e (￨e )￨e .￨e model￨e (￨e form￨e )￨e )￨e ;￨e <START_BUG>￨b messageListView￨b .￨b invalidateModel￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d DynamicFilterTest￨d extends￨d BuildFileTest￨d {￨d public￨f DynamicFilterTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f tearDown￨f (￨f )￨f {￨f }￨f public￨f void￨f testCustomFilter￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f assertStringContains￨f (￨f String￨p string￨p ,￨p String￨p contains￨p )￨f {￨f }￨f private￨f void￨f assertStringNotContains￨f (￨f String￨p string￨p ,￨p String￨p contains￨p )￨f {￨f }￨f private￨f String￨f getFileString￨f (￨f String￨f filename￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f Reader￨e r￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f r￨e =￨e new￨e FileReader￨e (￨e getProject￨e (￨e )￨e .￨e resolveFile￨e (￨e filename￨e )￨e )￨e ;￨e <START_BUG>￨b return￨b FileUtils￨b .￨b newFileUtils￨b (￨b )￨b .￨b readFully￨b (￨b r￨b )￨b ;￨b <END_BUG>￨b }￨f finally￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f r￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p ignore￨p )￨f {￨f }￨f }￨f }￨f private￨f String￨f getFileString￨f (￨f String￨f target￨f ,￨f String￨f filename￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f expectFileContains￨f (￨f String￨f name￨f ,￨f String￨f contains￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f expectFileContains￨f (￨f String￨f target￨f ,￨f String￨f name￨f ,￨f String￨f contains￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d CustomFilter￨d implements￨d ChainableReader￨d {￨d char￨e replace￨e =￨e 'x'￨e ;￨e char￨e with￨e =￨e 'y'￨e ;￨e public￨f void￨f setReplace￨f (￨f char￨p replace￨p )￨f {￨f }￨f public￨f void￨f setWith￨f (￨f char￨p with￨p )￨f {￨f }￨f public￨f Reader￨f chain￨f (￨f final￨p Reader￨p rdr￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d SecurityDependencyProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d public￨e static￨e final￨e ModuleIdentifier￨e PICKETBOX_ID￨e =￨e ModuleIdentifier￨e .￨e create￨e (￨e PICKETBOX￨e .￨e getName￨e (￨e )￨e ,￨e PICKETBOX￨e .￨e getSlot￨e (￨e )￨e )￨e ;￨e public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e final￨e ModuleLoader￨e moduleLoader￨e =￨e Module￨e .￨e getBootModuleLoader￨e (￨e )￨e ;￨e final￨e ModuleSpecification￨e moduleSpecification￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e MODULE_SPECIFICATION￨e )￨e ;￨e <START_BUG>￨b moduleSpecification￨b .￨b addDependency￨b (￨b new￨b org￨b .￨b jboss￨b .￨b as￨b .￨b server￨b .￨b deployment￨b .￨b module￨b .￨b ModuleDependency￨b (￨b moduleLoader￨b ,￨b SecurityDependencyProcessor￨b .￨b PICKETBOX_ID￨b ,￨b false￨b ,￨b true￨b ,￨b false￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d BoundedQueueThreadPoolService￨d implements￨d Service￨d <￨d ManagedQueueExecutorService￨d >￨d {￨d private￨e final￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e threadFactoryValue￨e =￨e new￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e Executor￨e >￨e handoffExecutorValue￨e =￨e new￨e InjectedValue￨e <￨e Executor￨e >￨e (￨e )￨e ;￨e private￨e ManagedQueueExecutorService￨e executor￨e ;￨e private￨e int￨e coreThreads￨e ;￨e private￨e int￨e maxThreads￨e ;￨e private￨e int￨e queueLength￨e ;￨e private￨e boolean￨e blocking￨e ;￨e private￨e TimeSpec￨e keepAlive￨e ;￨e private￨e boolean￨e allowCoreTimeout￨e ;￨e public￨f BoundedQueueThreadPoolService￨f (￨f int￨p coreThreads￨p ,￨p int￨p maxThreads￨p ,￨p int￨p queueLength￨p ,￨p boolean￨p blocking￨p ,￨p TimeSpec￨p keepAlive￨p ,￨p boolean￨p allowCoreTimeout￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f public￨f synchronized￨f ManagedQueueExecutorService￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f final￨e ManagedQueueExecutorService￨e value￨e =￨e this￨e .￨e executor￨e ;￨e if￨j (￨j value￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b throw￨b ROOT_LOGGER￨b .￨b boundedQueueThreadPoolExecutorUninitialized￨b (￨b )￨b ;￨b <END_BUG>￨b }￨j return￨e value￨e ;￨e }￨f public￨f Injector￨f <￨f ThreadFactory￨f >￨f getThreadFactoryInjector￨f (￨f )￨f {￨f }￨f public￨f Injector￨f <￨f Executor￨f >￨f getHandoffExecutorInjector￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f setCoreThreads￨f (￨f int￨p coreThreads￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f setMaxThreads￨f (￨f int￨p maxThreads￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f setKeepAlive￨f (￨f TimeSpec￨p keepAlive￨p )￨f {￨f }￨f public￨f synchronized￨f void￨f setAllowCoreTimeout￨f (￨f boolean￨p allowCoreTimeout￨p )￨f {￨f }￨f public￨f int￨f getCurrentThreadCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getLargestThreadCount￨f (￨f )￨f {￨f }￨f TimeUnit￨f getKeepAliveUnit￨f (￨f )￨f {￨f }￨f public￨f int￨f getRejectedCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getQueueSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d public￨f void￨f addSysproperty￨f (￨f Environment￨p .￨p Variable￨p sysp￨p )￨f {￨f }￨f public￨f void￨f addConfiguredSysproperty￨f (￨f Environment￨p .￨p Variable￨p sysp￨p )￨f {￨f }￨f public￨f void￨f addSyspropertyset￨f (￨f PropertySet￨p sysp￨p )￨f {￨f }￨f public￨f Path￨f createClasspath￨f (￨f )￨f {￨f }￨f public￨f Path￨f createBootclasspath￨f (￨f )￨f {￨f }￨f public￨f void￨f addEnv￨f (￨f Environment￨p .￨p Variable￨p var￨p )￨f {￨f }￨f public￨f void￨f setNewenvironment￨f (￨f boolean￨p newenv￨p )￨f {￨f }￨f private￨f void￨f preConfigure￨f (￨f BaseTest￨p test￨p )￨f {￨f }￨f public￨f void￨f addTest￨f (￨f JUnitTest￨p test￨p )￨f {￨f }￨f public￨f BatchTest￨f createBatchTest￨f (￨f )￨f {￨f }￨f public￨f void￨f addFormatter￨f (￨f FormatterElement￨p fe￨p )￨f {￨f }￨f public￨f void￨f setIncludeantruntime￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f void￨f setShowOutput￨f (￨f boolean￨p showOutput￨p )￨f {￨f }￨f public￨f void￨f setOutputToFormatters￨f (￨f boolean￨p outputToFormatters￨p )￨f {￨f }￨f public￨f void￨f setLogFailedTests￨f (￨f boolean￨p logFailedTests￨p )￨f {￨f }￨f public￨f void￨f addAssertions￨f (￨f Assertions￨p asserts￨p )￨f {￨f }￨f public￨f Permissions￨f createPermissions￨f (￨f )￨f {￨f }￨f public￨f void￨f setCloneVm￨f (￨f boolean￨p cloneVm￨p )￨f {￨f }￨f public￨f JUnitTask￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f setTempdir￨f (￨f File￨p tmpDir￨p )￨f {￨f }￨f public￨f void￨f setEnableTestListenerEvents￨f (￨f boolean￨p b￨p )￨f {￨f }￨f public￨f boolean￨f getEnableTestListenerEvents￨f (￨f )￨f {￨f }￨f public￨f void￨f init￨f (￨f )￨f {￨f }￨f private￨f static￨f JUnitTaskMirror￨f createMirror￨f (￨f JUnitTask￨p task￨p ,￨p ClassLoader￨p loader￨p )￨f {￨f }￨f protected￨f void￨f setupJUnitDelegate￨f (￨f )￨f {￨f }￨f public￨f void￨f execute￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f execute￨f (￨f JUnitTest￨f arg￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f validateTestName￨f (￨f String￨f testName￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f void￨f execute￨f (￨f List￨f testList￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f JUnitTask￨f .￨f TestResultHolder￨f executeAsForked￨f (￨f JUnitTest￨f test￨f ,￨f ExecuteWatchdog￨f watchdog￨f ,￨f File￨f casesFile￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkIncludeAntRuntime￨f (￨f CommandlineJava￨p cmd￨p )￨f {￨f }￨f private￨f boolean￨f equalsWithOutAndErr￨f (￨f String￨p summaryOption￨p )￨f {￨f }￨f private￨f void￨f checkIncludeSummary￨f (￨f CommandlineJava￨p cmd￨p )￨f {￨f }￨f private￨f void￨f checkForkedPath￨f (￨f CommandlineJava￨p cmd￨p )￨f {￨f }￨f private￨f static￨f boolean￨f urlEquals￨f (￨f URL￨p u1￨p ,￨p URL￨p u2￨p )￨f {￨f }￨f private￨f static￨f String￨f maybeStripJarAndClass￨f (￨f URL￨p u￨p )￨f {￨f }￨f private￨f File￨f createTempPropertiesFile￨f (￨f String￨p prefix￨p )￨f {￨f }￨f protected￨f void￨f handleOutput￨f (￨f String￨p output￨p )￨f {￨f }￨f protected￨f int￨f handleInput￨f (￨f byte￨f [￨f ]￨f buffer￨f ,￨f int￨f offset￨f ,￨f int￨f length￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f void￨f handleFlush￨f (￨f String￨p output￨p )￨f {￨f }￨f public￨f void￨f handleErrorOutput￨f (￨f String￨p output￨p )￨f {￨f }￨f public￨f void￨f handleErrorFlush￨f (￨f String￨p output￨p )￨f {￨f }￨f private￨f JUnitTask￨f .￨f TestResultHolder￨f executeInVM￨f (￨f JUnitTest￨f arg￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f ExecuteWatchdog￨f createWatchdog￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f OutputStream￨f getDefaultOutput￨f (￨f )￨f {￨f }￨f protected￨f Enumeration￨f getIndividualTests￨f (￨f )￨f {￨f }￨f private￨f void￨f checkMethodLists￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f protected￨f Enumeration￨f allTests￨f (￨f )￨f {￨f }￨f private￨f FormatterElement￨f [￨f ]￨f mergeFormatters￨f (￨f JUnitTest￨p test￨p )￨f {￨f }￨f protected￨f File￨f getOutput￨f (￨f FormatterElement￨p fe￨p ,￨p JUnitTest￨p test￨p )￨f {￨f }￨f protected￨f void￨f addClasspathEntry￨f (￨f String￨p resource￨p )￨f {￨f }￨f private￨f boolean￨f addClasspathResource￨f (￨f String￨p resource￨p )￨f {￨f }￨f static￨e final￨e String￨e TIMEOUT_MESSAGE￨e =￨e "Timeout<seq2seq4repair_space>occurred.<seq2seq4repair_space>Please<seq2seq4repair_space>note<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>report<seq2seq4repair_space>does"￨e +￨e "<seq2seq4repair_space>not<seq2seq4repair_space>reflect<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>until<seq2seq4repair_space>the<seq2seq4repair_space>timeout."￨e ;￨e private￨f void￨f logTimeout￨f (￨f FormatterElement￨p [￨p ]￨p feArray￨p ,￨p JUnitTest￨p test￨p ,￨p String￨p testCase￨p )￨f {￨f }￨f private￨f void￨f logVmCrash￨f (￨f FormatterElement￨p [￨p ]￨p feArray￨p ,￨p JUnitTest￨p test￨p ,￨p String￨p testCase￨p )￨f {￨f }￨f private￨f void￨f logVmExit￨f (￨f FormatterElement￨p [￨p ]￨p feArray￨p ,￨p JUnitTest￨p test￨p ,￨p String￨p message￨p ,￨p String￨p testCase￨p )￨f {￨f }￨f private￨f void￨f createClassLoader￨f (￨f )￨f {￨f }￨f protected￨f void￨f cleanup￨f (￨f )￨f {￨f }￨f private￨f void￨f deleteClassLoader￨f (￨f )￨f {￨f }￨f protected￨f CommandlineJava￨f getCommandline￨f (￨f )￨f {￨f }￨f private￨d static￨d final￨d class￨d ForkedTestConfiguration￨d {￨d private￨e boolean￨e filterTrace￨e ;￨e private￨e boolean￨e haltOnError￨e ;￨e private￨e boolean￨e haltOnFailure￨e ;￨e private￨e String￨e errorProperty￨e ;￨e private￨e String￨e failureProperty￨e ;￨e ForkedTestConfiguration￨f (￨f boolean￨p filterTrace￨p ,￨p boolean￨p haltOnError￨p ,￨p boolean￨p haltOnFailure￨p ,￨p String￨p errorProperty￨p ,￨p String￨p failureProperty￨p )￨f {￨f }￨f ForkedTestConfiguration￨f (￨f JUnitTest￨p test￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d public￨d static￨d final￨d class￨d ForkMode￨d extends￨d EnumeratedAttribute￨d {￨d public￨e static￨e final￨e String￨e ONCE￨e =￨e "once"￨e ;￨e public￨e static￨e final￨e String￨e PER_TEST￨e =￨e "perTest"￨e ;￨e public￨e static￨e final￨e String￨e PER_BATCH￨e =￨e "perBatch"￨e ;￨e public￨f ForkMode￨f (￨f )￨f {￨f }￨f public￨f ForkMode￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f }￨d protected￨f Collection￨f executeOrQueue￨f (￨f Enumeration￨p testList￨p ,￨p boolean￨p runIndividual￨p )￨f {￨f }￨f protected￨f void￨f actOnTestResult￨f (￨f int￨p exitValue￨p ,￨p boolean￨p wasKilled￨p ,￨p JUnitTest￨p test￨p ,￨p String￨p name￨p )￨f {￨f }￨f protected￨f void￨f actOnTestResult￨f (￨f JUnitTask￨p .￨p TestResultHolder￨p result￨p ,￨p JUnitTest￨p test￨p ,￨p String￨p name￨p )￨f {￨f }￨f protected￨d static￨d class￨d TestResultHolder￨d {￨d public￨e int￨e exitCode￨e =￨e JUnitTestRunnerMirror￨e .￨e ERRORS￨e ;￨e public￨e boolean￨e timedOut￨e =￨e false￨e ;￨e public￨e boolean￨e crashed￨e =￨e false￨e ;￨e }￨d protected￨d static￨d class￨d JUnitLogOutputStream￨d extends￨d LogOutputStream￨d {￨d private￨e Task￨e task￨e ;￨e public￨f JUnitLogOutputStream￨f (￨f Task￨p task￨p ,￨p int￨p level￨p )￨f {￨f }￨f protected￨f void￨f processLine￨f (￨f String￨p line￨p ,￨p int￨p level￨p )￨f {￨f }￨f }￨d protected￨d static￨d class￨d JUnitLogStreamHandler￨d extends￨d PumpStreamHandler￨d {￨d public￨f JUnitLogStreamHandler￨f (￨f Task￨p task￨p ,￨p int￨p outlevel￨p ,￨p int￨p errlevel￨p )￨f {￨f }￨f }￨d static￨e final￨e String￨e NAME_OF_DUMMY_TEST￨e =￨e "Batch-With-Multiple-Tests"￨e ;￨e private￨f static￨f JUnitTest￨f createDummyTestForBatchTest￨f (￨f JUnitTest￨p test￨p )￨f {￨f JUnitTest￨e t￨e =￨e (￨e (￨e JUnitTest￨e )￨e (￨e test￨e .￨e clone￨e (￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b int￨b index￨b =￨b test￨b .￨b getName￨b (￨b )￨b .￨b indexOf￨b (￨b '.'￨b )￨b ;￨b <END_BUG>￨b String￨e pack￨e =￨e (￨e index￨e >￨e 0￨e )￨e ?￨e test￨e .￨e getName￨e (￨e )￨e .￨e substring￨e (￨e 0￨e ,￨e (￨e index￨e +￨e 1￨e )￨e )￨e :￨e ""￨e ;￨e t￨e .￨e setName￨e (￨e (￨e pack￨e +￨e (￨e JUnitTask￨e .￨e NAME_OF_DUMMY_TEST￨e )￨e )￨e )￨e ;￨e return￨e t￨e ;￨e }￨f private￨f static￨f void￨f printDual￨f (￨f BufferedWriter￨f w￨f ,￨f PrintStream￨f s￨f ,￨f String￨f text￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f printlnDual￨f (￨f BufferedWriter￨f w￨f ,￨f PrintStream￨f s￨f ,￨f String￨f text￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d rtx￨e =￨e tx￨e .￨e resolve￨e (￨e (￨e (￨e AjLookupEnvironment￨e )￨e (￨e declare￨e .￨e scope￨e .￨e environment￨e (￨e )￨e )￨e )￨e .￨e factory￨e .￨e getWorld￨e (￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c rtx￨c .￨c isInterface￨c (￨c )￨c )￨c )￨j {￨j kindOfDP￨e =￨e "extends<seq2seq4repair_space>"￨e ;￨e }￨j }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f }￨f }￨j String￨e typename￨e =￨e tp￨e .￨e toString￨e (￨e )￨e ;￨e if￨j (￨j (￨c typename￨c .￨c lastIndexOf￨c (￨c "."￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j typename￨e =￨e typename￨e .￨e substring￨e (￨e (￨e (￨e typename￨e .￨e lastIndexOf￨e (￨e "."￨e )￨e )￨e +￨e 1￨e )￨e )￨e ;￨e }￨j details￨e .￨e append￨e (￨e typename￨e )￨e ;￨e if￨j (￨j (￨c i￨c +￨c 1￨c )￨c <￨c (￨c newParents￨c .￨c length￨c )￨c )￨j {￨j details￨e .￨e append￨e (￨e ","￨e )￨e ;￨e }￨j }￨l node￨e .￨e setDetails￨e (￨e (￨e kindOfDP￨e +￨e (￨e details￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c declare￨c .￨c declareDecl￨c )￨c instanceof￨c DeclareSoft￨c )￨j {￨j node￨e .￨e setKind￨e (￨e IProgramElement￨e .￨e Kind￨e .￨e DECLARE_SOFT￨e )￨e ;￨e DeclareSoft￨e ds￨e =￨e (￨e (￨e DeclareSoft￨e )￨e (￨e declare￨e .￨e declareDecl￨e )￨e )￨e ;￨e node￨e .￨e setName￨e (￨e (￨e name￨e +￨e (￨e AsmElementFormatter￨e .￨e DECLARE_SOFT￨e )￨e )￨e )￨e ;￨e node￨e .￨e setDetails￨e (￨e genTypePatternLabel￨e (￨e ds￨e .￨e getException￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c declare￨c .￨c declareDecl￨c )￨c instanceof￨c DeclarePrecedence￨c )￨j {￨j node￨e .￨e setKind￨e (￨e IProgramElement￨e .￨e Kind￨e .￨e DECLARE_PRECEDENCE￨e )￨e ;￨e DeclarePrecedence￨e ds￨e =￨e (￨e (￨e DeclarePrecedence￨e )￨e (￨e declare￨e .￨e declareDecl￨e )￨e )￨e ;￨e node￨e .￨e setName￨e (￨e (￨e name￨e +￨e (￨e AsmElementFormatter￨e .￨e DECLARE_PRECEDENCE￨e )￨e )￨e )￨e ;￨e node￨e .￨e setDetails￨e (￨e genPrecedenceListLabel￨e (￨e ds￨e .￨e getPatterns￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c declare￨c .￨c declareDecl￨c )￨c instanceof￨c DeclareAnnotation￨c )￨j {￨j DeclareAnnotation￨e deca￨e =￨e (￨e (￨e DeclareAnnotation￨e )￨e (￨e declare￨e .￨e declareDecl￨e )￨e )￨e ;￨e String￨e thekind￨e =￨e deca￨e .￨e getKind￨e (￨e )￨e .￨e toString￨e (￨e )￨e ;￨e node￨e .￨e setName￨e (￨e (￨e (￨e name￨e +￨e "@"￨e )￨e +￨e (￨e thekind￨e .￨e substring￨e (￨e 3￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j (￨c deca￨c .￨c getKind￨c (￨c )￨c )￨c ==￨c (￨c DeclareAnnotation￨c .￨c AT_CONSTRUCTOR￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e DECLARE_ANNOTATION_AT_CONSTRUCTOR￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c deca￨c .￨c getKind￨c (￨c )￨c )￨c ==￨c (￨c DeclareAnnotation￨c .￨c AT_FIELD￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e DECLARE_ANNOTATION_AT_FIELD￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c deca￨c .￨c getKind￨c (￨c )￨c )￨c ==￨c (￨c DeclareAnnotation￨c .￨c AT_METHOD￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e DECLARE_ANNOTATION_AT_METHOD￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c deca￨c .￨c getKind￨c (￨c )￨c )￨c ==￨c (￨c DeclareAnnotation￨c .￨c AT_TYPE￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e DECLARE_ANNOTATION_AT_TYPE￨e )￨e ;￨e }￨j node￨e .￨e setDetails￨e (￨e genDecaLabel￨e (￨e deca￨e )￨e )￨e ;￨e }￨j else￨j {￨j node￨e .￨e setKind￨e (￨e ERROR￨e )￨e ;￨e node￨e .￨e setName￨e (￨e AsmElementFormatter￨e .￨e DECLARE_UNKNONWN￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j methodDeclaration￨c instanceof￨c InterTypeDeclaration￨c )￨j {￨j InterTypeDeclaration￨e itd￨e =￨e (￨e (￨e InterTypeDeclaration￨e )￨e (￨e methodDeclaration￨e )￨e )￨e ;￨e String￨e name￨e =￨e (￨e (￨e itd￨e .￨e getOnType￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e new￨e String￨e (￨e itd￨e .￨e getDeclaredSelector￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j methodDeclaration￨c instanceof￨c InterTypeFieldDeclaration￨c )￨j {￨j node￨e .￨e setKind￨e (￨e INTER_TYPE_FIELD￨e )￨e ;￨e node￨e .￨e setName￨e (￨e name￨e )￨e ;￨e }￨j else￨j if￨j (￨j methodDeclaration￨c instanceof￨c InterTypeMethodDeclaration￨c )￨j {￨j node￨e .￨e setKind￨e (￨e INTER_TYPE_METHOD￨e )￨e ;￨e node￨e .￨e setName￨e (￨e name￨e )￨e ;￨e }￨j else￨j if￨j (￨j methodDeclaration￨c instanceof￨c InterTypeConstructorDeclaration￨c )￨j {￨j node￨e .￨e setKind￨e (￨e INTER_TYPE_CONSTRUCTOR￨e )￨e ;￨e node￨e .￨e setName￨e (￨e (￨e (￨e (￨e itd￨e .￨e getOnType￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e +￨e "."￨e )￨e +￨e (￨e itd￨e .￨e getOnType￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j node￨e .￨e setKind￨e (￨e ERROR￨e )￨e ;￨e node￨e .￨e setName￨e (￨e name￨e )￨e ;￨e }￨j node￨e .￨e setCorrespondingType￨e (￨e itd￨e .￨e returnType￨e .￨e toString￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c node￨c .￨c getKind￨c (￨c )￨c )￨c !=￨c (￨c Kind￨c .￨c INTER_TYPE_FIELD￨c )￨c )￨j {￨j setParameters￨e (￨e methodDeclaration￨e ,￨e node￨e )￨e ;￨e }￨j }￨j else￨j {￨j if￨j (￨j methodDeclaration￨c .￨c isConstructor￨c (￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e CONSTRUCTOR￨e )￨e ;￨e }￨j else￨j {￨j node￨e .￨e setKind￨e (￨e METHOD￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b true￨b &&￨b (￨b methodDeclaration￨b !=￨b null￨b )￨b )￨b &&￨b (￨b (￨b methodDeclaration￨b .￨b annotations￨b )￨b !=￨b null￨b )￨b )￨b {￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c methodDeclaration￨c .￨c annotations￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l Annotation￨e annotation￨e =￨e methodDeclaration￨e .￨e annotations￨e [￨e i￨e ]￨e ;￨e String￨e annotationSig￨e =￨e new￨e String￨e (￨e annotation￨e .￨e type￨e .￨e getTypeBindingPublic￨e (￨e methodDeclaration￨e .￨e scope￨e )￨e .￨e signature￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c annotationSig￨c !=￨c null￨c )￨c &&￨c (￨c (￨c annotationSig￨c .￨c charAt￨c (￨c 1￨c )￨c )￨c ==￨c 'o'￨c )￨c )￨j {￨j if￨j (￨j "Lorg/aspectj/lang/annotation/Pointcut;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e POINTCUT￨e )￨e ;￨e break￨e ;￨e }￨j else￨j if￨j (￨j (￨c (￨c (￨c (￨c "Lorg/aspectj/lang/annotation/Before;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨c ||￨c (￨c "Lorg/aspectj/lang/annotation/After;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨c )￨c ||￨c (￨c "Lorg/aspectj/lang/annotation/AfterReturning;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨c )￨c ||￨c (￨c "Lorg/aspectj/lang/annotation/AfterThrowing;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨c )￨c ||￨c (￨c "Lorg/aspectj/lang/annotation/Around;"￨c .￨c equals￨c (￨c annotationSig￨c )￨c )￨c )￨j {￨j node￨e .￨e setKind￨e (￨e ADVICE￨e )￨e ;￨e node￨e .￨e setDetails￨e (￨e AsmElementFormatter￨e .￨e POINTCUT_ANONYMOUS￨e )￨e ;￨e break￨e ;￨e }￨j }￨j }￨l }￨j node￨e .￨e setName￨e (￨e new￨e String￨e (￨e methodDeclaration￨e .￨e selector￨e )￨e )￨e ;￨e setParameters￨e (￨e methodDeclaration￨e ,￨e node￨e )￨e ;￨e }￨j }￨f private￨f String￨f genDecaLabel￨f (￨f DeclareAnnotation￨p deca￨p )￨f {￨f }￨f private￨f String￨f genPrecedenceListLabel￨f (￨f TypePatternList￨p list￨p )￨f {￨f }￨f private￨f void￨f setParameters￨f (￨f MethodDeclaration￨p md￨p ,￨p IProgramElement￨p pe￨p )￨f {￨f }￨f private￨f boolean￨f acceptArgument￨f (￨f String￨p name￨p ,￨p String￨p type￨p )￨f {￨f }￨f public￨f String￨f genTypePatternLabel￨f (￨f TypePattern￨p tp￨p )￨f {￨f }￨f public￨f String￨f genDeclareMessage￨f (￨f String￨p message￨p )￨f {￨f }￨f private￨f String￨f translatePointcutName￨f (￨f String￨p name￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d WebApplication￨d extends￨d Application￨d {￨d private￨e final￨e Map￨e bufferedResponses￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e private￨e IRequestCycleProcessor￨e requestCycleProcessor￨e ;￨e private￨e String￨e sessionAttributePrefix￨e ;￨e private￨f ISessionFactory￨f sessionFactory￨f =￨f new￨f ISessionFactory￨f (￨f )￨f {￨f private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f Session￨f newSession￨f (￨f )￨f {￨f }￨f }￨f ;￨e private￨e WicketServlet￨e wicketServlet￨e ;￨e public￨f WebApplication￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getSessionAttributePrefix￨f (￨f final￨p WebRequest￨p request￨p )￨f {￨f }￨f public￨f final￨f WicketServlet￨f getWicketServlet￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f mount￨f (￨f String￨p path￨p ,￨p IRequestTargetUrlCodingStrategy￨p encoder￨p )￨f {￨f }￨f public￨f final￨f void￨f mount￨f (￨f String￨p path￨p ,￨p Package￨p p￨p )￨f {￨f }￨f public￨f final￨f void￨f mount￨f (￨f String￨p path￨p ,￨p PackageName￨p packageName￨p )￨f {￨f }￨f public￨f final￨f void￨f mountBookmarkablePage￨f (￨f String￨p path￨p ,￨p Class￨p bookmarkablePageClass￨p )￨f {￨f }￨f public￨f final￨f void￨f mountBookmarkablePage￨f (￨f String￨p path￨p ,￨p Class￨p bookmarkablePageClass￨p ,￨p String￨p pageMapName￨p )￨f {￨f }￨f public￨f final￨f void￨f setSessionFactory￨f (￨f final￨p ISessionFactory￨p sessionFactory￨p )￨f {￨f }￨f public￨f final￨f void￨f setWicketServlet￨f (￨f final￨p WicketServlet￨p wicketServlet￨p )￨f {￨f }￨f public￨f final￨f void￨f unmount￨f (￨f String￨p path￨p )￨f {￨f }￨f protected￨f IRequestCycleFactory￨f getDefaultRequestCycleFactory￨f (￨f )￨f {￨f }￨f protected￨f IRequestCycleProcessor￨f getDefaultRequestCycleProcessor￨f (￨f )￨f {￨f }￨f protected￨f ISessionFactory￨f getSessionFactory￨f (￨f )￨f {￨f }￨f protected￨f void￨f init￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalDestroy￨f (￨f )￨f {￨f }￨f protected￨f void￨f internalInit￨f (￨f )￨f {￨f }￨f protected￨f WebRequest￨f newWebRequest￨f (￨f final￨p HttpServletRequest￨p servletRequest￨p )￨f {￨f }￨f protected￨f WebResponse￨f newWebResponse￨f (￨f final￨p HttpServletResponse￨p servletResponse￨p )￨f {￨f }￨f final￨f void￨f addBufferedResponse￨f (￨f String￨p sessionId￨p ,￨p String￨p bufferId￨p ,￨p BufferedHttpServletResponse￨p renderedResponse￨p )￨f {￨f }￨f final￨f void￨f clearBufferedResponses￨f (￨f String￨p sessionId￨p )￨f {￨f }￨f final￨f WebSession￨f getSession￨f (￨f final￨p WebRequest￨p request￨p )￨f {￨f final￨e HttpSession￨e httpSession￨e =￨e request￨e .￨e getHttpServletRequest￨e (￨e )￨e .￨e getSession￨e (￨e false￨e )￨e ;￨e final￨e String￨e sessionAttribute￨e =￨e (￨e getSessionAttributePrefix￨e (￨e request￨e )￨e )￨e +￨e (￨e Session￨e .￨e SESSION_ATTRIBUTE_NAME￨e )￨e ;￨e WebSession￨e webSession￨e =￨e null￨e ;￨e if￨j (￨j httpSession￨c !=￨c null￨c )￨j {￨j webSession￨e =￨e (￨e (￨e WebSession￨e )￨e (￨e httpSession￨e .￨e getAttribute￨e (￨e sessionAttribute￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j webSession￨c ==￨c null￨c )￨j {￨j final￨e Session￨e session￨e =￨e getSessionFactory￨e (￨e )￨e .￨e newSession￨e (￨e )￨e ;￨e if￨j (￨j session￨c instanceof￨c WebSession￨c )￨j {￨j webSession￨e =￨e (￨e (￨e WebSession￨e )￨e (￨e session￨e )￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e WicketRuntimeException￨e (￨e "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>WebApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>WebSession"￨e )￨e ;￨e }￨j webSession￨e .￨e setLocale￨e (￨e request￨e .￨e getLocale￨e (￨e )￨e )￨e ;￨e if￨j (￨j httpSession￨c !=￨c null￨c )￨j {￨j httpSession￨e .￨e setAttribute￨e (￨e sessionAttribute￨e ,￨e webSession￨e )￨e ;￨e }￨j }￨j webSession￨e .￨e setApplication￨e (￨e this￨e )￨e ;￨e <START_BUG>￨b webSession￨b .￨b init￨b (￨b getSessionAttributePrefix￨b (￨b request￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e webSession￨e ;￨e }￨f final￨f BufferedHttpServletResponse￨f popBufferedResponse￨f (￨f String￨p sessionId￨p ,￨p String￨p bufferId￨p )￨f {￨f }￨f private￨f void￨f checkMountPath￨f (￨f String￨p path￨p )￨f {￨f }￨f }￨d
final￨d class￨d OrderedIntDoubleMapping￨d implements￨d Serializable￨d ,￨d Cloneable￨d {￨d private￨e static￨e final￨e double￨e DEFAULT_VALUE￨e =￨e 0.0￨e ;￨e private￨e int￨e [￨e ]￨e indices￨e ;￨e private￨e double￨e [￨e ]￨e values￨e ;￨e private￨e int￨e numMappings￨e ;￨e OrderedIntDoubleMapping￨f (￨f )￨f {￨f }￨f OrderedIntDoubleMapping￨f (￨f int￨p capacity￨p )￨f {￨f }￨f private￨f OrderedIntDoubleMapping￨f (￨f int￨p [￨p ]￨p indices￨p ,￨p double￨p [￨p ]￨p values￨p ,￨p int￨p numMappings￨p )￨f {￨f }￨f int￨f [￨f ]￨f getIndices￨f (￨f )￨f {￨f }￨f double￨f [￨f ]￨f getValues￨f (￨f )￨f {￨f }￨f int￨f getNumMappings￨f (￨f )￨f {￨f }￨f private￨f void￨f growTo￨f (￨f int￨p newCapacity￨p )￨f {￨f }￨f private￨f int￨f find￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f double￨f get￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f set￨f (￨f int￨p index￨p ,￨p double￨p value￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f OrderedIntDoubleMapping￨f clone￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b OrderedIntDoubleMapping￨b (￨b indices￨b ,￨b values￨b ,￨b numMappings￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d TestReverseStringFilter￨d extends￨d BaseTokenStreamTestCase￨d {￨d public￨f void￨f testFilter￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testFilterWithMark￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReverseString￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReverseChar￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Deprecated￨f public￨f void￨f testBackCompat￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReverseSupplementary￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReverseSupplementaryChar￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomStrings￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f Analyzer￨f a￨f =￨f new￨f Analyzer￨f (￨f )￨f {￨f @￨f Override￨f protected￨f TokenStreamComponents￨f createComponents￨f (￨f String￨p fieldName￨p ,￨p Reader￨p reader￨p )￨f {￨f Tokenizer￨e tokenizer￨e =￨e new￨e MockTokenizer￨e (￨e reader￨e ,￨e MockTokenizer￨e .￨e WHITESPACE￨e ,￨e false￨e )￨e ;￨e return￨e new￨e TokenStreamComponents￨e (￨e tokenizer￨e ,￨e new￨e ReverseStringFilter￨e (￨e TEST_VERSION_CURRENT￨e ,￨e tokenizer￨e )￨e )￨e ;￨e }￨f }￨f ;￨e <START_BUG>￨b checkRandomData￨b (￨b random￨b (￨b )￨b ,￨b a￨b ,￨b (￨b 10000￨b *￨b (￨b RANDOM_MULTIPLIER￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testEmptyTerm￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TermQueryPrefixTreeStrategy￨d extends￨d PrefixTreeStrategy￨d {￨d public￨f TermQueryPrefixTreeStrategy￨f (￨f SpatialPrefixTree￨p grid￨p ,￨p String￨p fieldName￨p )￨f {￨f }￨f @￨f Override￨f public￨f Filter￨f makeFilter￨f (￨f SpatialArgs￨p args￨p )￨f {￨f final￨e SpatialOperation￨e op￨e =￨e args￨e .￨e getOperation￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b SpatialOperation￨b .￨b is￨b (￨b op￨b ,￨b IsWithin￨b ,￨b Intersects￨b ,￨b BBoxWithin￨b ,￨b BBoxIntersects￨b )￨b )￨b )￨b <END_BUG>￨b throw￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e spatial￨e .￨e query￨e .￨e UnsupportedSpatialOperation￨e (￨e op￨e )￨e ;￨e Shape￨e shape￨e =￨e args￨e .￨e getShape￨e (￨e )￨e ;￨e int￨e detailLevel￨e =￨e grid￨e .￨e getLevelForDistance￨e (￨e args￨e .￨e resolveDistErr￨e (￨e ctx￨e ,￨e distErrPct￨e )￨e )￨e ;￨e List￨e <￨e Node￨e >￨e cells￨e =￨e grid￨e .￨e getNodes￨e (￨e shape￨e ,￨e detailLevel￨e ,￨e false￨e )￨e ;￨e TermsFilter￨e filter￨e =￨e new￨e TermsFilter￨e (￨e )￨e ;￨e for￨l (￨l Node￨c cell￨c :￨c cells￨c )￨l {￨l filter￨e .￨e addTerm￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e index￨e .￨e Term￨e (￨e getFieldName￨e (￨e )￨e ,￨e cell￨e .￨e getTokenString￨e (￨e )￨e )￨e )￨e ;￨e }￨l return￨e filter￨e ;￨e }￨f }￨d
public￨d class￨d CollectionProperty￨d extends￨d MultiProperty￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 221L￨e ;￨e private￨e Collection￨e <￨e JMeterProperty￨e >￨e value￨e ;￨e private￨e transient￨e Collection￨e <￨e JMeterProperty￨e >￨e savedValue￨e ;￨e public￨f CollectionProperty￨f (￨f String￨p name￨p ,￨p Collection￨p value￨p )￨f {￨f }￨f public￨f CollectionProperty￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f String￨p prop￨p )￨f {￨f }￨f public￨f void￨f set￨f (￨f int￨p index￨p ,￨p String￨p prop￨p )￨f {￨f }￨f public￨f void￨f set￨f (￨f int￨p index￨p ,￨p JMeterProperty￨p prop￨p )￨f {￨f }￨f public￨f JMeterProperty￨f get￨f (￨f int￨p row￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setObjectValue￨f (￨f Object￨p v￨p )￨f {￨f }￨f @￨f Override￨f public￨f PropertyIterator￨f iterator￨f (￨f )￨f {￨f }￨f public￨f String￨f getStringValue￨f (￨f )￨f {￨f }￨f public￨f Object￨f getObjectValue￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f private￨f Collection￨f <￨f JMeterProperty￨f >￨f cloneCollection￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f @￨e SuppressWarnings￨e (￨e "unchecked"￨e )￨e Collection￨e <￨e JMeterProperty￨e >￨e newCol￨e =￨e value￨e .￨e getClass￨e (￨e )￨e .￨e newInstance￨e (￨e )￨e ;￨e PropertyIterator￨e iter￨e =￨e iterator￨e (￨e )￨e ;￨e while￨l (￨l iter￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l <START_BUG>￨b newCol￨b .￨b add￨b (￨b iter￨b .￨b next￨b (￨b )￨b .￨b clone￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l return￨e newCol￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f log￨e .￨e error￨e (￨e "Couldn't<seq2seq4repair_space>clone<seq2seq4repair_space>collection"￨e ,￨e e￨e )￨e ;￨e return￨e value￨e ;￨e }￨f }￨f public￨f void￨f setCollection￨f (￨f Collection￨p coll￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f addProperty￨f (￨f JMeterProperty￨p prop￨p )￨f {￨f }￨f public￨f void￨f addItem￨f (￨f Object￨p item￨p )￨f {￨f }￨f @￨f Override￨f protected￨f Class￨f <￨f ?￨f extends￨f JMeterProperty￨f >￨f getPropertyType￨f (￨f )￨f {￨f }￨f public￨f void￨f recoverRunningVersion￨f (￨f TestElement￨p owner￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setRunningVersion￨f (￨f boolean￨p running￨p )￨f {￨f }￨f }￨d
public￨d class￨d StandardToStringStyleTest￨d extends￨d TestCase￨d {￨d private￨e final￨e Integer￨e base￨e =￨e new￨e Integer￨e (￨e 5￨e )￨e ;￨e private￨e final￨e String￨e baseStr￨e =￨e "Integer"￨e ;￨e private￨e static￨e final￨e StandardToStringStyle￨e STYLE￨e =￨e new￨e StandardToStringStyle￨e (￨e )￨e ;￨e public￨f StandardToStringStyleTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e tearDown￨e (￨e )￨e ;￨e <START_BUG>￨b ToStringBuilder￨b .￨b setDefaultStyle￨b (￨b StandardToStringStyleTest￨b .￨b STYLE￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testBlank￨f (￨f )￨f {￨f }￨f public￨f void￨f testAppendSuper￨f (￨f )￨f {￨f }￨f public￨f void￨f testObject￨f (￨f )￨f {￨f }￨f public￨f void￨f testPerson￨f (￨f )￨f {￨f }￨f public￨f void￨f testLong￨f (￨f )￨f {￨f }￨f public￨f void￨f testObjectArray￨f (￨f )￨f {￨f }￨f public￨f void￨f testLongArray￨f (￨f )￨f {￨f }￨f public￨f void￨f testLongArrayArray￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SMTPMin￨d {￨d static￨d Category￨d cat￨d =￨d Category￨d .￨d getInstance￨d (￨d SMTPMin￨d .￨d class￨d )￨d ;￨d public￨d static￨d void￨d main￨d (￨d String￨d [￨d ]￨d argv￨d )￨d {￨d }￨d static￨f void￨f usage￨f (￨f String￨p msg￨p )￨f {￨f }￨f static￨f void￨f init￨f (￨f String￨p configFile￨p )￨f {￨f }￨f static￨f void￨f test￨f (￨f )￨f {￨f int￨e i￨e =￨e 0￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e debug￨e (￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e debug￨e (￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e ,￨e new￨e Exception￨e (￨e "Just<seq2seq4repair_space>testing."￨e )￨e )￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e info￨e (￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e warn￨e (￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e error￨e (￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e SMTPMin￨e .￨e cat￨e .￨e log￨e (￨e Priority￨e .￨e FATAL￨e ,￨e (￨e "Message<seq2seq4repair_space>"￨e +￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b Category￨b .￨b shutdown￨b (￨b )￨b ;￨b <END_BUG>￨b Thread￨e .￨e currentThread￨e (￨e )￨e .￨e getThreadGroup￨e (￨e )￨e .￨e list￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d EclipseWorld￨d extends￨d World￨d {￨d public￨e static￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e public￨e AjBuildManager￨e buildManager￨e ;￨e private￨e LookupEnvironment￨e lookupEnvironment￨e ;￨e private￨e Map￨e addedTypeBindings￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e public￨f static￨f EclipseWorld￨f forLookupEnvironment￨f (￨f LookupEnvironment￨p env￨p )￨f {￨f }￨f public￨f static￨f EclipseWorld￨f fromScopeLookupEnvironment￨f (￨f Scope￨p scope￨p )￨f {￨f }￨f public￨f EclipseWorld￨f (￨f LookupEnvironment￨p lookupEnvironment￨p ,￨p IMessageHandler￨p handler￨p )￨f {￨f }￨f public￨f Advice￨f concreteAdvice￨f (￨f AjAttribute￨p .￨p AdviceAttribute￨p attribute￨p ,￨p Pointcut￨p pointcut￨p ,￨p Member￨p signature￨p )￨f {￨f }￨f public￨f ConcreteTypeMunger￨f concreteTypeMunger￨f (￨f ResolvedTypeMunger￨p munger￨p ,￨p ResolvedTypeX￨p aspectType￨p )￨f {￨f }￨f protected￨f ResolvedTypeX￨f resolveObjectType￨f (￨f TypeX￨p ty￨p )￨f {￨f }￨f public￨f ResolvedTypeX￨f fromEclipse￨f (￨f ReferenceBinding￨p binding￨p )￨f {￨f }￨f public￨f ResolvedTypeX￨f [￨f ]￨f fromEclipse￨f (￨f ReferenceBinding￨p [￨p ]￨p bindings￨p )￨f {￨f }￨f private￨f static￨f String￨f getName￨f (￨f TypeBinding￨p binding￨p )￨f {￨f }￨f public￨f static￨f TypeX￨f fromBinding￨f (￨f TypeBinding￨p binding￨p )￨f {￨f }￨f public￨f static￨f TypeX￨f [￨f ]￨f fromBindings￨f (￨f TypeBinding￨p [￨p ]￨p bindings￨p )￨f {￨f }￨f public￨f static￨f AstNode￨f astForLocation￨f (￨f IHasPosition￨p location￨p )￨f {￨f }￨f public￨f Collection￨f getTypeMungers￨f (￨f )￨f {￨f }￨f public￨f static￨f ResolvedMember￨f makeResolvedMember￨f (￨f MethodBinding￨p binding￨p )￨f {￨f }￨f public￨f static￨f ResolvedMember￨f makeResolvedMember￨f (￨f FieldBinding￨p binding￨p )￨f {￨f }￨f public￨f TypeBinding￨f makeTypeBinding￨f (￨f TypeX￨p typeX￨p )￨f {￨f TypeBinding￨e ret￨e =￨e (￨e (￨e TypeBinding￨e )￨e (￨e addedTypeBindings￨e .￨e get￨e (￨e typeX￨e )￨e )￨e )￨e ;￨e if￨j (￨j ret￨c !=￨c null￨c )￨j {￨j return￨e ret￨e ;￨e }￨j if￨j (￨j typeX￨c .￨c isPrimitive￨c (￨c )￨c )￨j {￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c BOOLEAN￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e BooleanBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c BYTE￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e ByteBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c CHAR￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e CharBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c DOUBLE￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e DoubleBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c FLOAT￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e FloatBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c INT￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e IntBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c LONG￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e LongBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c SHORT￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e ShortBinding￨e ;￨e }￨j if￨j (￨j typeX￨c ==￨c (￨c ResolvedTypeX￨c .￨c VOID￨c )￨c )￨j {￨j return￨e BaseTypes￨e .￨e VoidBinding￨e ;￨e }￨j throw￨e new￨e RuntimeException￨e (￨e (￨e "weird<seq2seq4repair_space>primitive<seq2seq4repair_space>type<seq2seq4repair_space>"￨e +￨e typeX￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j typeX￨c .￨c isArray￨c (￨c )￨c )￨j {￨j int￨e dim￨e =￨e 0￨e ;￨e while￨l (￨l typeX￨c .￨c isArray￨c (￨c )￨c )￨l {￨l dim￨e ++￨e ;￨e typeX￨e =￨e typeX￨e .￨e getComponentType￨e (￨e )￨e ;￨e }￨l <START_BUG>￨b return￨b new￨b ArrayBinding￨b (￨b makeTypeBinding￨b (￨b typeX￨b )￨b ,￨b dim￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j ResolvedTypeX￨e rt￨e =￨e typeX￨e .￨e resolve￨e (￨e this￨e )￨e ;￨e if￨j (￨j rt￨c ==￨c (￨c ResolvedTypeX￨c .￨c MISSING￨c )￨c )￨j {￨j throw￨e new￨e RuntimeException￨e (￨e (￨e "shouldn't<seq2seq4repair_space>be<seq2seq4repair_space>missing:<seq2seq4repair_space>"￨e +￨e typeX￨e )￨e )￨e ;￨e }￨j return￨e (￨e (￨e EclipseObjectType￨e )￨e (￨e rt￨e )￨e )￨e .￨e getBinding￨e (￨e )￨e ;￨e }￨j }￨f public￨f TypeBinding￨f [￨f ]￨f makeTypeBindings￨f (￨f TypeX￨p [￨p ]￨p types￨p )￨f {￨f }￨f private￨f ReferenceBinding￨f [￨f ]￨f makeReferenceBindings￨f (￨f TypeX￨p [￨p ]￨p types￨p )￨f {￨f }￨f public￨f FieldBinding￨f makeFieldBinding￨f (￨f ResolvedMember￨p member￨p )￨f {￨f }￨f public￨f MethodBinding￨f makeMethodBinding￨f (￨f ResolvedMember￨p member￨p )￨f {￨f }￨f public￨f MethodBinding￨f makeMethodBindingForCall￨f (￨f Member￨p member￨p )￨f {￨f }￨f public￨f void￨f finishedCompilationUnit￨f (￨f CompilationUnitDeclaration￨p unit￨p )￨f {￨f }￨f public￨f void￨f addTypeBinding￨f (￨f TypeBinding￨p binding￨p )￨f {￨f }￨f public￨f Shadow￨f makeShadow￨f (￨f AstNode￨p location￨p ,￨p ReferenceContext￨p context￨p )￨f {￨f }￨f public￨f Shadow￨f makeShadow￨f (￨f ReferenceContext￨p context￨p )￨f {￨f }￨f }￨d
class￨d WebConnectorMetrics￨d implements￨d OperationStepHandler￨d {￨d static￨e WebConnectorMetrics￨e INSTANCE￨e =￨e new￨e WebConnectorMetrics￨e (￨e )￨e ;￨e static￨e final￨e String￨e [￨e ]￨e NO_LOCATION￨e =￨e new￨e String￨e [￨e 0￨e ]￨e ;￨e static￨f final￨f String￨f [￨f ]￨f ATTRIBUTES￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b context￨b .￨b getType￨b (￨b )￨b )￨b ==￨b (￨b Type￨b .￨b SERVER￨b )￨b )￨b {￨b <END_BUG>￨b context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e String￨e name￨e =￨e address￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e attributeName￨e =￨e operation￨e .￨e require￨e (￨e NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e JBOSS_WEB_CONNECTOR￨e .￨e append￨e (￨e name￨e )￨e )￨e ;￨e if￨j (￨j controller￨c !=￨c null￨c )￨j {￨j try￨f (￨f )￨f {￨f final￨e Connector￨e connector￨e =￨e (￨e (￨e Connector￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e final￨e ModelNode￨e result￨e =￨e context￨e .￨e getResult￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c connector￨c .￨c getProtocolHandler￨c (￨c )￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c connector￨c .￨c getProtocolHandler￨c (￨c )￨c .￨c getRequestGroupInfo￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j RequestGroupInfo￨e info￨e =￨e connector￨e .￨e getProtocolHandler￨e (￨e )￨e .￨e getRequestGroupInfo￨e (￨e )￨e ;￨e if￨j (￨j BYTES_SENT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getBytesSent￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j BYTES_RECEIVED￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getBytesReceived￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j PROCESSING_TIME￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getProcessingTime￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j ERROR_COUNT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getErrorCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j MAX_TIME￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getMaxTime￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j REQUEST_COUNT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getRequestCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨j }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e failedToGetMetrics￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨j else￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e noMetricsAvailable￨e (￨e )￨e )￨e ;￨e }￨j context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e else￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e noMetricsAvailable￨e (￨e )￨e )￨e ;￨e }￨j context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨d
public￨d abstract￨d class￨d EJBComponent￨d extends￨d AbstractComponent￨d implements￨d org￨d .￨d jboss￨d .￨d ejb3￨d .￨d context￨d .￨d spi￨d .￨d EJBComponent￨d ,￨d TransactionalComponent￨d {￨d private￨d static￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d EJBComponent￨d .￨d class￨d )￨d ;￨d private￨d final￨d ConcurrentMap￨d <￨d MethodIntf￨d ,￨d ConcurrentMap￨d <￨d String￨d ,￨d ConcurrentMap￨d <￨d ArrayKey￨d ,￨d TransactionAttributeType￨d >￨d >￨d >￨d txAttrs￨d ;￨d private￨d final￨d EJBUtilities￨d utilities￨d ;￨d private￨d final￨d boolean￨d isBeanManagedTransaction￨d ;￨d private￨d static￨d volatile￨d boolean￨d youHaveBeenWarnedEJBTHREE2120￨d =￨d false￨d ;￨d protected￨d EJBComponent￨d (￨d final￨d EJBComponentConfiguration￨d configuration￨d )￨d {￨d }￨d @￨f Override￨f public￨f ApplicationException￨f getApplicationException￨f (￨f Class￨p <￨p ?￨p >￨p exceptionClass￨p )￨f {￨f }￨f @￨f Override￨f public￨f EJBHome￨f getEJBHome￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f EJBLocalHome￨f getEJBLocalHome￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f getRollbackOnly￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f TimerService￨f getTimerService￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Deprecated￨f public￨f TransactionAttributeType￨f getTransactionAttributeType￨f (￨f Method￨p method￨p )￨f {￨f }￨f public￨f TransactionAttributeType￨f getTransactionAttributeType￨f (￨f MethodIntf￨p methodIntf￨p ,￨p Method￨p method￨p )￨f {￨f ConcurrentMap￨e <￨e String￨e ,￨e ConcurrentMap￨e <￨e ArrayKey￨e ,￨e TransactionAttributeType￨e >￨e >￨e perMethodIntf￨e =￨e txAttrs￨e .￨e get￨e (￨e methodIntf￨e )￨e ;￨e if￨j (￨j perMethodIntf￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalStateException￨e (￨e (￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>"￨e +￨e methodIntf￨e )￨e )￨e ;￨e }￨j ConcurrentMap￨e <￨e ArrayKey￨e ,￨e TransactionAttributeType￨e >￨e perMethod￨e =￨e perMethodIntf￨e .￨e get￨e (￨e method￨e .￨e getName￨e (￨e )￨e )￨e ;￨e if￨j (￨j perMethod￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalStateException￨e (￨e (￨e (￨e (￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>name<seq2seq4repair_space>"￨e +￨e (￨e method￨e .￨e getName￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>via<seq2seq4repair_space>"￨e )￨e +￨e methodIntf￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b TransactionAttributeType￨b txAttr￨b =￨b perMethod￨b .￨b get￨b (￨b new￨b ArrayKey￨b (￨b method￨b .￨b getParameterTypes￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j txAttr￨c ==￨c null￨c )￨j {￨j throw￨e new￨e IllegalStateException￨e (￨e (￨e (￨e (￨e "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attr<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>"￨e +￨e method￨e )￨e +￨e "<seq2seq4repair_space>via<seq2seq4repair_space>"￨e )￨e +￨e methodIntf￨e )￨e )￨e ;￨e }￨j return￨e txAttr￨e ;￨e }￨f @￨f Override￨f public￨f TransactionManager￨f getTransactionManager￨f (￨f )￨f {￨f }￨f public￨f TransactionSynchronizationRegistry￨f getTransactionSynchronizationRegistry￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f getTransactionTimeout￨f (￨f Method￨p method￨p )￨f {￨f }￨f @￨f Override￨f public￨f UserTransaction￨f getUserTransaction￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f private￨f boolean￨f isBeanManagedTransaction￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f isCallerInRole￨f (￨f Principal￨f callerPrincipal￨f ,￨f String￨f roleName￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f lookup￨f (￨f String￨f name￨f )￨f throws￨f IllegalArgumentException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setRollbackOnly￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Evaluator￨d {￨d EvaluationContext￨e context￨e ;￨e INameEnvironment￨e environment￨e ;￨e Map￨e options￨e ;￨e IRequestor￨e requestor￨e ;￨e IProblemFactory￨e problemFactory￨e ;￨e Evaluator￨f (￨f EvaluationContext￨p context￨p ,￨p INameEnvironment￨p environment￨p ,￨p Map￨p options￨p ,￨p IRequestor￨p requestor￨p ,￨p IProblemFactory￨p problemFactory￨p )￨f {￨f }￨f protected￨f abstract￨f void￨f addEvaluationResultForCompilationProblem￨f (￨f Map￨p resultsByIDs￨p ,￨p IProblem￨p problem￨p ,￨p char￨p [￨p ]￨p cuSource￨p )￨f {￨f }￨f protected￨f EvaluationResult￨f [￨f ]￨f evaluationResultsForCompilationProblems￨f (￨f CompilationResult￨p result￨p ,￨p char￨p [￨p ]￨p cuSource￨p )￨f {￨f }￨f ClassFile￨f [￨f ]￨f getClasses￨f (￨f )￨f {￨f final￨e char￨e [￨e ]￨e source￨e =￨e getSource￨e (￨e )￨e ;￨e final￨e ArrayList￨e classDefinitions￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e class￨d CompilerRequestor￨d implements￨d ICompilerRequestor￨d {￨d boolean￨e hasErrors￨e =￨e false￨e ;￨e public￨f void￨f acceptResult￨f (￨f CompilationResult￨p result￨p )￨f {￨f if￨j (￨j result￨c .￨c hasProblems￨c (￨c )￨c )￨j {￨j EvaluationResult￨e [￨e ]￨e evalResults￨e =￨e evaluationResultsForCompilationProblems￨e (￨e result￨e ,￨e source￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c evalResults￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l EvaluationResult￨e evalResult￨e =￨e evalResults￨e [￨e i￨e ]￨e ;￨e IProblem￨e [￨e ]￨e problems￨e =￨e evalResult￨e .￨e getProblems￨e (￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c problems￨c .￨c length￨c )￨c ;￨c j￨c ++￨c )￨l {￨l Evaluator￨e .￨e this￨e .￨e requestor￨e .￨e acceptProblem￨e (￨e problems￨e [￨e j￨e ]￨e ,￨e evalResult￨e .￨e getEvaluationID￨e (￨e )￨e ,￨e evalResult￨e .￨e getEvaluationType￨e (￨e )￨e )￨e ;￨e }￨l }￨l }￨j if￨j (￨j result￨c .￨c hasErrors￨c (￨c )￨c )￨j {￨j <START_BUG>￨b hasErrors￨b =￨b true￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j ClassFile￨e [￨e ]￨e classFiles￨e =￨e result￨e .￨e getClassFiles￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c classFiles￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l ClassFile￨e classFile￨e =￨e classFiles￨e [￨e i￨e ]￨e ;￨e classDefinitions￨e .￨e add￨e (￨e classFile￨e )￨e ;￨e }￨l }￨j }￨f }￨d CompilerRequestor￨e compilerRequestor￨e =￨e new￨e CompilerRequestor￨e (￨e )￨e ;￨e Compiler￨e compiler￨e =￨e getCompiler￨e (￨e compilerRequestor￨e )￨e ;￨e compiler￨f .￨f compile￨f (￨f new￨f ICompilationUnit￨f [￨f ]￨f (￨f )￨f {￨f new￨f ICompilationUnit￨f (￨f )￨f {￨f public￨f char￨f [￨f ]￨f getFileName￨f (￨f )￨f {￨f return￨e CharOperation￨e .￨e concat￨e (￨e Evaluator￨e .￨e this￨e .￨e getClassName￨e (￨e )￨e ,￨e SuffixConstants￨e .￨e SUFFIX_java￨e )￨e ;￨e }￨f public￨f char￨f [￨f ]￨f getContents￨f (￨f )￨f {￨f return￨e source￨e ;￨e }￨f public￨f char￨f [￨f ]￨f getMainTypeName￨f (￨f )￨f {￨f return￨e Evaluator￨e .￨e this￨e .￨e getClassName￨e (￨e )￨e ;￨e }￨f public￨f char￨f [￨f ]￨f [￨f ]￨f getPackageName￨f (￨f )￨f {￨f return￨e null￨e ;￨e }￨f }￨f }￨f )￨e ;￨e if￨j (￨j compilerRequestor￨c .￨c hasErrors￨c )￨j {￨j return￨e null￨e ;￨e }￨j else￨j {￨j ClassFile￨e [￨e ]￨e result￨e =￨e new￨e ClassFile￨e [￨e classDefinitions￨e .￨e size￨e (￨e )￨e ]￨e ;￨e classDefinitions￨e .￨e toArray￨e (￨e result￨e )￨e ;￨e return￨e result￨e ;￨e }￨j }￨f protected￨f abstract￨f char￨f [￨f ]￨f getClassName￨f (￨f )￨f {￨f }￨f Compiler￨f getCompiler￨f (￨f ICompilerRequestor￨p compilerRequestor￨p )￨f {￨f }￨f protected￨f abstract￨f char￨f [￨f ]￨f getSource￨f (￨f )￨f {￨f }￨f }￨d
public￨d ;￨e inVMConnector￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e TransportConfigOperationHandlers￨e .￨e REMOVE￨e ,￨e CONNECTOR_REMOVE￨e )￨e ;￨e IN_VM_ATTR￨e .￨e registerAttributes￨e (￨e inVMConnector￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e MessagingExtension￨e .￨e createParamRegistration￨e (￨e inVMConnector￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e bridge￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e BRIDGE￨e )￨e ,￨e BRIDGE_RESOURCE￨e )￨e ;￨e bridge￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e BridgeAdd￨e .￨e INSTANCE￨e ,￨e BridgeAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e bridge￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e BridgeRemove￨e .￨e INSTANCE￨e ,￨e BridgeRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e BridgeWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e bridge￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e if￨j (￨j registerRuntimeOnly￨c )￨j {￨j BridgeControlHandler￨e .￨e INSTANCE￨e .￨e register￨e (￨e bridge￨e )￨e ;￨e }￨j final￨e ManagementResourceRegistration￨e cluster￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e CLUSTER_CONNECTION￨e )￨e ,￨e CLUSTER_CONNECTION_RESOURCE￨e )￨e ;￨e cluster￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e ClusterConnectionAdd￨e .￨e INSTANCE￨e ,￨e ClusterConnectionAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e cluster￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ClusterConnectionRemove￨e .￨e INSTANCE￨e ,￨e ClusterConnectionRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e ClusterConnectionWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e cluster￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e if￨j (￨j registerRuntimeOnly￨c )￨j {￨j ClusterConnectionControlHandler￨e .￨e INSTANCE￨e .￨e register￨e (￨e cluster￨e )￨e ;￨e }￨j final￨e ManagementResourceRegistration￨e groupingHandler￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e GROUPING_HANDLER_PATH￨e ,￨e GROUPING_HANDLER_RESOURCE￨e )￨e ;￨e groupingHandler￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e GroupingHandlerAdd￨e .￨e INSTANCE￨e ,￨e GroupingHandlerAdd￨e .￨e INSTANCE￨e )￨e ;￨e groupingHandler￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e GroupingHandlerRemove￨e .￨e INSTANCE￨e ,￨e GroupingHandlerRemove￨e .￨e INSTANCE￨e )￨e ;￨e GroupingHandlerWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e groupingHandler￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e connectorService￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e CONNECTOR_SERVICE￨e )￨e ,￨e CONNECTOR_SERVICE_RESOURCE￨e )￨e ;￨e connectorService￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e ConnectorServiceAdd￨e .￨e INSTANCE￨e ,￨e ConnectorServiceAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e connectorService￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ConnectorServiceRemove￨e .￨e INSTANCE￨e ,￨e ConnectorServiceRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e ConnectorServiceWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e connectorService￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e connectorServiceParam￨e =￨e connectorService￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e CommonAttributes￨e .￨e PARAM￨e )￨e ,￨e CONNECTOR_SERVICE_PARAM_RESOURCE￨e )￨e ;￨e connectorServiceParam￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e ConnectorServiceParamAdd￨e .￨e INSTANCE￨e ,￨e ConnectorServiceParamAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e connectorServiceParam￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ConnectorServiceParamRemove￨e .￨e INSTANCE￨e ,￨e ConnectorServiceParamRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e connectorServiceParam￨e .￨e registerReadWriteAttribute￨e (￨e VALUE￨e .￨e getName￨e (￨e )￨e ,￨e null￨e ,￨e ConnectorServiceParamWriteAttributeHandler￨e .￨e INSTANCE￨e ,￨e CONFIGURATION￨e )￨e ;￨e for￨l (￨l final￨c String￨c path￨c :￨c CommonAttributes￨c .￨c PATHS￨c )￨l {￨l ManagementResourceRegistration￨e bindings￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e PATH￨e ,￨e path￨e )￨e ,￨e new￨e MessagingSubsystemProviders￨e .￨e PathProvider￨e (￨e path￨e )￨e )￨e ;￨e MessagingPathHandlers￨e .￨e register￨e (￨e bindings￨e )￨e ;￨e }￨l final￨e ManagementResourceRegistration￨e cfs￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e CFS_PATH￨e ,￨e CF￨e )￨e ;￨e cfs￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e ConnectionFactoryAdd￨e .￨e INSTANCE￨e ,￨e CF_ADD￨e ,￨e false￨e )￨e ;￨e cfs￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ConnectionFactoryRemove￨e .￨e INSTANCE￨e ,￨e CF_REMOVE￨e ,￨e false￨e )￨e ;￨e ConnectionFactoryWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e cfs￨e )￨e ;￨e if￨j (￨j registerRuntimeOnly￨c )￨j {￨j ConnectionFactoryReadAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e cfs￨e )￨e ;￨e }￨j ConnectionFactoryAddJndiHandler￨e .￨e INSTANCE￨e .￨e registerOperation￨e (￨e cfs￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e resourceAdapters￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e RA_PATH￨e ,￨e RA￨e )￨e ;￨e resourceAdapters￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e PooledConnectionFactoryAdd￨e .￨e INSTANCE￨e ,￨e RA_ADD￨e ,￨e false￨e )￨e ;￨e resourceAdapters￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e PooledConnectionFactoryRemove￨e .￨e INSTANCE￨e ,￨e RA_REMOVE￨e )￨e ;￨e PooledConnectionFactoryWriteAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e resourceAdapters￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e queues￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e JMS_QUEUE_PATH￨e ,￨e JMS_QUEUE_RESOURCE￨e )￨e ;￨e queues￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e JMSQueueAdd￨e .￨e INSTANCE￨e ,￨e JMSQueueAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e queues￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e JMSQueueRemove￨e .￨e INSTANCE￨e ,￨e JMSQueueRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e JmsQueueConfigurationWriteHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e queues￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e JMSQueueAddJndiHandler￨e .￨e INSTANCE￨e .￨e registerOperation￨e (￨e queues￨e )￨e ;￨e if￨j (￨j registerRuntimeOnly￨c )￨j {￨j JmsQueueReadAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e queues￨e )￨e ;￨e JMSQueueControlHandler￨e .￨e INSTANCE￨e .￨e registerOperations￨e (￨e queues￨e )￨e ;￨e }￨j final￨e ManagementResourceRegistration￨e topics￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e TOPIC_PATH￨e ,￨e JMS_TOPIC_RESOURCE￨e )￨e ;￨e topics￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e JMSTopicAdd￨e .￨e INSTANCE￨e ,￨e JMSTopicAdd￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e topics￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e JMSTopicRemove￨e .￨e INSTANCE￨e ,￨e JMSTopicRemove￨e .￨e INSTANCE￨e ,￨e false￨e )￨e ;￨e JMSTopicConfigurationWriteHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e topics￨e )￨e ;￨e JMSTopicAddJndiHandler￨e .￨e INSTANCE￨e .￨e registerOperation￨e (￨e topics￨e )￨e ;￨e if￨j (￨j registerRuntimeOnly￨c )￨j {￨j JMSTopicReadAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e topics￨e )￨e ;￨e JMSTopicControlHandler￨e .￨e INSTANCE￨e .￨e registerOperations￨e (￨e topics￨e )￨e ;￨e }￨j final￨e ManagementResourceRegistration￨e securitySettings￨e =￨e serverRegistration￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e SECURITY_SETTING￨e ,￨e MessagingSubsystemProviders￨e .￨e SECURITY_SETTING￨e )￨e ;￨e securitySettings￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e SecuritySettingAdd￨e .￨e INSTANCE￨e ,￨e SecuritySettingAdd￨e .￨e INSTANCE￨e )￨e ;￨e securitySettings￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e SecuritySettingRemove￨e .￨e INSTANCE￨e ,￨e SecuritySettingRemove￨e .￨e INSTANCE￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e securityRole￨e =￨e securitySettings￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e SECURITY_ROLE￨e ,￨e MessagingSubsystemProviders￨e .￨e SECURITY_ROLE￨e )￨e ;￨e securityRole￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e SecurityRoleAdd￨e .￨e INSTANCE￨e ,￨e SecurityRoleAdd￨e .￨e INSTANCE￨e )￨e ;￨e securityRole￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e SecurityRoleRemove￨e .￨e INSTANCE￨e ,￨e SecurityRoleRemove￨e .￨e INSTANCE￨e )￨e ;￨e SecurityRoleAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e securityRole￨e ,￨e registerRuntimeOnly￨e )￨e ;￨e if￨j (￨j context￨c .￨c isRuntimeOnlyRegistrationValid￨c (￨c )￨c )￨j {￨j ResourceDefinition￨e deploymentsDef￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleResourceDefinition￨e (￨e PathElement￨e .￨e pathElement￨e (￨e SUBSYSTEM￨e ,￨e MessagingExtension￨e .￨e SUBSYSTEM_NAME￨e )￨e ,￨e MessagingExtension￨e .￨e getResourceDescriptionResolver￨e (￨e "deployed"￨e )￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e deploymentsRegistration￨e =￨e subsystem￨e .￨e registerDeploymentModel￨e (￨e deploymentsDef￨e )￨e ;￨e <START_BUG>￨b final￨b ManagementResourceRegistration￨b serverModel￨b =￨b deploymentsRegistration￨b .￨b registerSubModel￨b (￨b DeploymentHornetQServerResourceDefinition￨b .￨b INSTANCE￨b )￨b ;￨b <END_BUG>￨b final￨e ManagementResourceRegistration￨e deploymentQueue￨e =￨e serverModel￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e JMS_QUEUE_PATH￨e ,￨e JMS_QUEUE_RESOURCE￨e )￨e ;￨e JmsQueueReadAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e deploymentQueue￨e )￨e ;￨e JMSQueueControlHandler￨e .￨e INSTANCE￨e .￨e registerOperations￨e (￨e deploymentQueue￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e deploymentTopics￨e =￨e serverModel￨e .￨e registerSubModel￨e (￨e MessagingExtension￨e .￨e TOPIC_PATH￨e ,￨e JMS_TOPIC_RESOURCE￨e )￨e ;￨e JMSTopicReadAttributeHandler￨e .￨e INSTANCE￨e .￨e registerAttributes￨e (￨e deploymentTopics￨e )￨e ;￨e JMSTopicControlHandler￨e .￨e INSTANCE￨e .￨e registerOperations￨e (￨e deploymentTopics￨e )￨e ;￨e }￨j }￨f public￨f void￨f initializeParsers￨f (￨f ExtensionParsingContext￨p context￨p )￨f {￨f }￨f static￨f void￨f createParamRegistration￨f (￨f final￨p ManagementResourceRegistration￨p parent￨p )￨f {￨f }￨f }￨d
public￨d class￨d LocalVariable￨d extends￨d JavaElement￨d implements￨d ILocalVariable￨d ,￨d ISourceReference￨d {￨d public￨e int￨e declarationSourceStart￨e ;￨e public￨e int￨e declarationEnd￨e ;￨e public￨e int￨e nameStart￨e ;￨e public￨e int￨e nameEnd￨e ;￨e public￨f LocalVariable￨f (￨f JavaElement￨p parent￨p ,￨p String￨p name￨p ,￨p int￨p declarationSourceStart￨p ,￨p int￨p declarationEnd￨p ,￨p int￨p nameStart￨p ,￨p int￨p nameEnd￨p )￨f {￨f }￨f protected￨f void￨f closing￨f (￨f Object￨f info￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f Object￨f createElementInfo￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f protected￨f void￨f generateInfos￨f (￨f Object￨f info￨f ,￨f HashMap￨f newElements￨f ,￨f IProgressMonitor￨f pm￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IJavaElement￨f getHandleFromMemento￨f (￨f String￨p token￨p ,￨p StringTokenizer￨p memento￨p ,￨p WorkingCopyOwner￨p owner￨p )￨f {￨f }￨f public￨f String￨f getHandleMemento￨f (￨f )￨f {￨f }￨f protected￨f char￨f getHandleMementoDelimiter￨f (￨f )￨f {￨f }￨f public￨f IResource￨f getCorrespondingResource￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f int￨f getElementType￨f (￨f )￨f {￨f }￨f public￨f ISourceRange￨f getNameRange￨f (￨f )￨f {￨f }￨f public￨f IPath￨f getPath￨f (￨f )￨f {￨f }￨f public￨f IResource￨f getResource￨f (￨f )￨f {￨f }￨f public￨f String￨f getSource￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f <START_BUG>￨b IOpenable￨b openable￨b =￨b getOpenableParent￨b (￨b )￨b ;￨b <END_BUG>￨b IBuffer￨e buffer￨e =￨e openable￨e .￨e getBuffer￨e (￨e )￨e ;￨e if￨j (￨j buffer￨c ==￨c null￨c )￨j {￨j return￨e null￨e ;￨e }￨j ISourceRange￨e range￨e =￨e getSourceRange￨e (￨e )￨e ;￨e int￨e offset￨e =￨e range￨e .￨e getOffset￨e (￨e )￨e ;￨e int￨e length￨e =￨e range￨e .￨e getLength￨e (￨e )￨e ;￨e if￨j (￨j (￨c offset￨c ==￨c (￨c -￨c 1￨c )￨c )￨c ||￨c (￨c length￨c ==￨c 0￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j try￨f (￨f )￨f {￨f return￨e buffer￨e .￨e getText￨e (￨e offset￨e ,￨e length￨e )￨e ;￨e }￨f catch￨f (￨f RuntimeException￨p e￨p )￨f {￨f return￨e null￨e ;￨e }￨f }￨f public￨f ISourceRange￨f getSourceRange￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f IResource￨f getUnderlyingResource￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ExpressionStatement￨d extends￨d Statement￨d {￨d private￨e Expression￨e expression￨e =￨e null￨e ;￨e ExpressionStatement￨f (￨f AST￨p ast￨p )￨f {￨f }￨f public￨f int￨f getNodeType￨f (￨f )￨f {￨f }￨f ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f ExpressionStatement￨e result￨e =￨e new￨e ExpressionStatement￨e (￨e target￨e )￨e ;￨e result￨e .￨e setSourceRange￨e (￨e this￨e .￨e getStartPosition￨e (￨e )￨e ,￨e this￨e .￨e getLength￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setLeadingComment￨b (￨b getLeadingComment￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e setExpression￨e (￨e (￨e (￨e Expression￨e )￨e (￨e getExpression￨e (￨e )￨e .￨e clone￨e (￨e target￨e )￨e )￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f public￨f boolean￨f subtreeMatch￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f Expression￨f getExpression￨f (￨f )￨f {￨f }￨f public￨f void￨f setExpression￨f (￨f Expression￨p expression￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractAvailableCondition￨d implements￨d Condition￨d {￨d private￨e Path￨e m_classpath￨e =￨e new￨e Path￨e (￨e )￨e ;￨e public￨f void￨f addClasspath￨f (￨f final￨f Path￨f classpath￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f <START_BUG>￨b m_classpath￨b .￨b addPath￨b (￨b classpath￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f ClassLoader￨f buildClassLoader￨f (￨f final￨f TaskContext￨f context￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d DropTargetEffect￨d extends￨d DropTargetAdapter￨d {￨d Control￨e control￨e ;￨e public￨f DropTargetEffect￨f (￨f Control￨p control￨p )￨f {￨f }￨f public￨f Control￨f getControl￨f (￨f )￨f {￨f }￨f public￨f Widget￨f getItem￨f (￨f int￨p x￨p ,￨p int￨p y￨p )￨f {￨f }￨f Widget￨f getItem￨f (￨f Table￨p table￨p ,￨p int￨p x￨p ,￨p int￨p y￨p )￨f {￨f }￨f Widget￨f getItem￨f (￨f Tree￨p tree￨p ,￨p int￨p x￨p ,￨p int￨p y￨p )￨f {￨f Point￨e point￨e =￨e new￨e Point￨e (￨e x￨e ,￨e y￨e )￨e ;￨e point￨e =￨e tree￨e .￨e toControl￨e (￨e point￨e )￨e ;￨e TreeItem￨e item￨e =￨e tree￨e .￨e getItem￨e (￨e point￨e )￨e ;￨e if￨j (￨j item￨c ==￨c null￨c )￨j {￨j Rectangle￨e area￨e =￨e tree￨e .￨e getClientArea￨e (￨e )￨e ;￨e if￨j (￨j area￨c .￨c contains￨c (￨c point￨c )￨c )￨j {￨j int￨e treeBottom￨e =￨e (￨e area￨e .￨e y￨e )￨e +￨e (￨e area￨e .￨e height￨e )￨e ;￨e item￨e =￨e tree￨e .￨e getTopItem￨e (￨e )￨e ;￨e while￨l (￨l item￨c !=￨c null￨c )￨l {￨l Rectangle￨e rect￨e =￨e item￨e .￨e getBounds￨e (￨e )￨e ;￨e int￨e itemBottom￨e =￨e (￨e rect￨e .￨e y￨e )￨e +￨e (￨e rect￨e .￨e height￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b rect￨b .￨b y￨b )￨b <=￨b (￨b point￨b .￨b y￨b )￨b )￨b &&￨b (￨b (￨b point￨b .￨b y￨b )￨b <=￨b itemBottom￨b )￨b )￨b <END_BUG>￨b return￨e item￨e ;￨e if￨j (￨j itemBottom￨c >￨c treeBottom￨c )￨j {￨j break￨e ;￨e }￨j item￨e =￨e nextItem￨e (￨e tree￨e ,￨e item￨e )￨e ;￨e }￨l return￨e null￨e ;￨e }￨j }￨j return￨e item￨e ;￨e }￨f TreeItem￨f nextItem￨f (￨f Tree￨p tree￨p ,￨p TreeItem￨p item￨p )￨f {￨f }￨f TreeItem￨f previousItem￨f (￨f Tree￨p tree￨p ,￨p TreeItem￨p item￨p )￨f {￨f }￨f }￨d
public￨d class￨d DivertRemove￨d extends￨d AbstractRemoveStepHandler￨d implements￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e DivertRemove￨e INSTANCE￨e =￨e new￨e DivertRemove￨e (￨e )￨e ;￨e private￨f DivertRemove￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRemove￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f recoverServices￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f model￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ServiceRegistry￨e registry￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e true￨e )￨e ;￨e final￨e ServiceName￨e hqServiceName￨e =￨e MessagingServices￨e .￨e getHornetQServiceName￨e (￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e get￨e (￨e OP_ADDR￨e )￨e )￨e )￨e ;￨e final￨e ServiceController￨e <￨e ?￨e >￨e hqService￨e =￨e registry￨e .￨e getService￨e (￨e hqServiceName￨e )￨e ;￨e if￨j (￨j (￨c hqService￨c !=￨c null￨c )￨c &&￨c (￨c (￨c hqService￨c .￨c getState￨c (￨c )￨c )￨c ==￨c (￨c State￨c .￨c UP￨c )￨c )￨c )￨j {￨j final￨e String￨e name￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e <START_BUG>￨b final￨b DivertConfiguration￨b divertConfiguration￨b =￨b DivertAdd￨b .￨b createDivertConfiguration￨b (￨b name￨b ,￨b model￨b )￨b ;￨b <END_BUG>￨b HornetQServer￨e server￨e =￨e HornetQServer￨e .￨e class￨e .￨e cast￨e (￨e hqService￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e DivertAdd￨e .￨e createDivert￨e (￨e name￨e ,￨e divertConfiguration￨e ,￨e server￨e .￨e getHornetQServerControl￨e (￨e )￨e )￨e ;￨e }￨j }￨f @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f }￨d
public￨d class￨d LazilyCompactedRow￨d extends￨d AbstractCompactedRow￨d implements￨d IIterableColumns￨d {￨d private￨e final￨e List￨e <￨e SSTableIdentityIterator￨e >￨e rows￨e ;￨e private￨e final￨e boolean￨e major￨e ;￨e private￨e final￨e int￨e gcBefore￨e ;￨e private￨e final￨e DataOutputBuffer￨e headerBuffer￨e ;￨e private￨e ColumnFamily￨e emptyColumnFamily￨e ;￨e private￨e LazilyCompactedRow￨e .￨e LazyColumnIterator￨e iter￨e ;￨e private￨e int￨e columnCount￨e ;￨e private￨e long￨e columnSerializedSize￨e ;￨e public￨f LazilyCompactedRow￨f (￨f List￨p <￨p SSTableIdentityIterator￨p >￨p rows￨p ,￨p boolean￨p major￨p ,￨p int￨p gcBefore￨p )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutput￨f out￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f update￨f (￨f MessageDigest￨p digest￨p )￨f {￨f }￨f public￨f boolean￨f isEmpty￨f (￨f )￨f {￨f <START_BUG>￨b boolean￨b cfIrrelevant￨b =￨b (￨b ColumnFamilyStore￨b .￨b removeDeleted￨b (￨b emptyColumnFamily￨b ,￨b gcBefore￨b )￨b )￨b ==￨b null￨b ;￨b <END_BUG>￨b return￨e cfIrrelevant￨e &&￨e (￨e (￨e columnCount￨e )￨e ==￨e 0￨e )￨e ;￨e }￨f public￨f int￨f getEstimatedColumnCount￨f (￨f )￨f {￨f }￨f public￨f AbstractType￨f getComparator￨f (￨f )￨f {￨f }￨f public￨f Iterator￨f <￨f IColumn￨f >￨f iterator￨f (￨f )￨f {￨f }￨f private￨d class￨d LazyColumnIterator￨d extends￨d ReducingIterator￨d <￨d IColumn￨d ,￨d IColumn￨d >￨d {￨d ColumnFamily￨e container￨e =￨e emptyColumnFamily￨e .￨e cloneMeShallow￨e (￨e )￨e ;￨e long￨e serializedSize￨e =￨e 4￨e ;￨e int￨e size￨e =￨e 0￨e ;￨e public￨f LazyColumnIterator￨f (￨f Iterator￨p <￨p IColumn￨p >￨p source￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f isEqual￨f (￨f IColumn￨p o1￨p ,￨p IColumn￨p o2￨p )￨f {￨f }￨f public￨f void￨f reduce￨f (￨f IColumn￨p current￨p )￨f {￨f }￨f protected￨f IColumn￨f getReduced￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TextChatComposite￨d extends￨d Composite￨d {￨d public￨e static￨e final￨e Trace￨e trace￨e =￨e Trace￨e .￨e create￨e (￨e "textchatcomposite"￨e )￨e ;￨e protected￨e static￨e final￨e int￨e DEFAULT_INPUT_HEIGHT￨e =￨e 25￨e ;￨e protected￨e static￨e final￨e int￨e DEFAULT_INPUT_SEPARATOR￨e =￨e 5￨e ;￨e protected￨e String￨e TEXT_INPUT_INIT￨e =￨e MessageLoader￨e .￨e getString￨e (￨e "TextChatComposite.textinputinit"￨e )￨e ;￨e protected￨e Color￨e meColor￨e =￨e null￨e ;￨e protected￨e Color￨e otherColor￨e =￨e null￨e ;￨e protected￨e Color￨e systemColor￨e =￨e null￨e ;￨e protected￨e StyledText￨e styledText￨e ;￨e protected￨e TextViewer￨e textoutput￨e ;￨e protected￨e Text￨e textinput￨e ;￨e protected￨f int￨f [￨f ]￨f sashWeights￨f =￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e protected￨e ChatLayout￨e cl￨e =￨e null￨e ;￨e protected￨e boolean￨e isTyping￨e ;￨e protected￨e String￨e initText￨e ;￨e protected￨e ITextInputHandler￨e inputHandler￨e ;￨e SimpleDateFormat￨e df￨e =￨e new￨e SimpleDateFormat￨e (￨e "hh:mm<seq2seq4repair_space>a"￨e )￨e ;￨e protected￨e IUser￨e localUser￨e ;￨e protected￨e IUser￨e remoteUser￨e ;￨e protected￨e boolean￨e showTimestamp￨e =￨e true￨e ;￨e private￨e Action￨e outputClear￨e =￨e null￨e ;￨e private￨e Action￨e outputCopy￨e =￨e null￨e ;￨e private￨e Action￨e outputPaste￨e =￨e null￨e ;￨e private￨e Action￨e outputSelectAll￨e =￨e null￨e ;￨e public￨f TextChatComposite￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p ,￨p String￨p initText￨p ,￨p ITextInputHandler￨p handler￨p ,￨p IUser￨p localUser￨p ,￨p IUser￨p remoteUser￨p )￨f {￨f }￨f private￨f void￨f makeActions￨f (￨f )￨f {￨f }￨f protected￨f void￨f outputClear￨f (￨f )￨f {￨f }￨f protected￨f void￨f outputCopy￨f (￨f )￨f {￨f }￨f protected￨f void￨f outputPaste￨f (￨f )￨f {￨f }￨f protected￨f void￨f outputSelectAll￨f (￨f )￨f {￨f }￨f private￨f void￨f hookContextMenu￨f (￨f )￨f {￨f }￨f private￨f void￨f fillContextMenu￨f (￨f IMenuManager￨p manager￨p )￨f {￨f }￨f public￨f void￨f setLocalUser￨f (￨f IUser￨p newUser￨p )￨f {￨f }￨f public￨f void￨f setRemoteUser￨f (￨f IUser￨p remoteUser￨p )￨f {￨f }￨f public￨f IUser￨f getRemoteUser￨f (￨f )￨f {￨f }￨f protected￨f String￨f getCurrentDateTime￨f (￨f )￨f {￨f }￨f private￨f String￨f makeLineWithTimestamp￨f (￨f String￨p line￨p )￨f {￨f }￨f public￨f IUser￨f getLocalUser￨f (￨f )￨f {￨f }￨f public￨f void￨f appendText￨f (￨f ChatLine￨p text￨p )￨f {￨f }￨f protected￨f void￨f handleKeyPressed￨f (￨f KeyEvent￨p evt￨p )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b evt￨b .￨b keyCode￨b )￨b ==￨b (￨b SWT￨b .￨b CR￨b )￨b )￨b {￨b <END_BUG>￨b handleEnter￨e (￨e )￨e ;￨e }￨f protected￨f void￨f handleEnter￨f (￨f )￨f {￨f }￨f protected￨f void￨f clearInput￨f (￨f )￨f {￨f }￨f protected￨f void￨f sendTextLineInput￨f (￨f String￨p text￨p )￨f {￨f }￨f protected￨f void￨f sendStartedTyping￨f (￨f )￨f {￨f }￨f protected￨f String￨f getShellName￨f (￨f )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f protected￨f void￨f setDisposed￨f (￨f )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f }￨d
class￨d MemoryMXBeanAttributeHandler￨d extends￨d AbstractPlatformMBeanAttributeHandler￨d {￨d static￨e final￨e MemoryMXBeanAttributeHandler￨e INSTANCE￨e =￨e new￨e MemoryMXBeanAttributeHandler￨e (￨e )￨e ;￨e private￨f MemoryMXBeanAttributeHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f executeReadAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e String￨e name￨e =￨e operation￨e .￨e require￨e (￨e NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b OBJECT_NAME￨b .￨b getName￨b (￨b )￨b .￨b equals￨b (￨b name￨b )￨b )￨b {￨b <END_BUG>￨b context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e ManagementFactory￨e .￨e MEMORY_MXBEAN_NAME￨e )￨e ;￨e else￨j if￨j (￨j OBJECT_PENDING_FINALIZATION_COUNT￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getMemoryMXBean￨e (￨e )￨e .￨e getObjectPendingFinalizationCount￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j HEAP_MEMORY_USAGE￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j final￨e ModelNode￨e mu￨e =￨e PlatformMBeanUtil￨e .￨e getDetypedMemoryUsage￨e (￨e ManagementFactory￨e .￨e getMemoryMXBean￨e (￨e )￨e .￨e getHeapMemoryUsage￨e (￨e )￨e )￨e ;￨e context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e mu￨e )￨e ;￨e }￨j else￨j if￨j (￨j NON_HEAP_MEMORY_USAGE￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j final￨e ModelNode￨e mu￨e =￨e PlatformMBeanUtil￨e .￨e getDetypedMemoryUsage￨e (￨e ManagementFactory￨e .￨e getMemoryMXBean￨e (￨e )￨e .￨e getNonHeapMemoryUsage￨e (￨e )￨e )￨e ;￨e context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e mu￨e )￨e ;￨e }￨j else￨j if￨j (￨j VERBOSE￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e ManagementFactory￨e .￨e getMemoryMXBean￨e (￨e )￨e .￨e isVerbose￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j (￨c MEMORY_METRICS￨c .￨c contains￨c (￨c name￨c )￨c )￨c ||￨c (￨c MEMORY_READ_WRITE_ATTRIBUTES￨c .￨c contains￨c (￨c name￨c )￨c )￨c )￨j {￨j throw￨e ROOT_LOGGER￨e .￨e badReadAttributeImpl￨e (￨e name￨e )￨e ;￨e }￨j else￨j {￨j throw￨e unknownAttribute￨e (￨e operation￨e )￨e ;￨e }￨j }￨f @￨f Override￨f protected￨f void￨f executeWriteAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d RequestHandlerStackTest￨d extends￨d BaseRequestHandlerStackTest￨d {￨d public￨f RequestHandlerStackTest￨f (￨f )￨f {￨f }￨f private￨e boolean￨e testFlag1￨e ;￨e private￨e boolean￨e testFlag2￨e ;￨e private￨e boolean￨e testFlag3￨e ;￨e private￨e boolean￨e testFlag4￨e ;￨e private￨e boolean￨e detachedFlag1￨e ;￨e private￨e boolean￨e detachedFlag2￨e ;￨e private￨e boolean￨e detachedFlag3￨e ;￨e private￨e boolean￨e detachedFlag4￨e ;￨e private￨f void￨f initFlags￨f (￨f )￨f {￨f }￨f public￨f void￨f test1￨f (￨f )￨f {￨f initFlags￨e (￨e )￨e ;￨e final￨e Response￨e originalResponse￨e =￨e newResponse￨e (￨e )￨e ;￨e final￨e RequestHandlerStack￨e stack￨e =￨e newStack￨e (￨e originalResponse￨e )￨e ;￨e final￨f IRequestHandler￨f handler3￨f =￨f new￨f IRequestHandler￨f (￨f )￨f {￨f public￨f void￨f respond￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f testFlag3￨e =￨e false￨e ;￨e }￨f public￨f void￨f detach￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f detachedFlag3￨e =￨e true￨e ;￨e }￨f }￨f ;￨e final￨f IRequestHandler￨f handler2￨f =￨f new￨f IRequestHandler￨f (￨f )￨f {￨f public￨f void￨f respond￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f testFlag2￨e =￨e false￨e ;￨e stack￨e .￨e replaceAllRequestHandlers￨e (￨e handler3￨e )￨e ;￨e testFlag2￨e =￨e true￨e ;￨e }￨f public￨f void￨f detach￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f detachedFlag2￨e =￨e true￨e ;￨e }￨f }￨f ;￨e final￨f IRequestHandler￨f handler1￨f =￨f new￨f IRequestHandler￨f (￨f )￨f {￨f public￨f void￨f respond￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f testFlag1￨e =￨e false￨e ;￨e Response￨e resp￨e =￨e newResponse￨e (￨e )￨e ;￨e stack￨e .￨e setResponse￨e (￨e resp￨e )￨e ;￨e stack￨e .￨e executeRequestHandler￨e (￨e handler2￨e )￨e ;￨e assertEquals￨e (￨e stack￨e .￨e getResponse￨e (￨e )￨e ,￨e resp￨e )￨e ;￨e testFlag1￨e =￨e true￨e ;￨e }￨f public￨f void￨f detach￨f (￨f IRequestCycle￨p requestCycle￨p )￨f {￨f detachedFlag1￨e =￨e true￨e ;￨e }￨f }￨f ;￨e stack￨e .￨e executeRequestHandler￨e (￨e handler1￨e )￨e ;￨e assertEquals￨e (￨e stack￨e .￨e getResponse￨e (￨e )￨e ,￨e originalResponse￨e )￨e ;￨e stack￨e .￨e detach￨e (￨e )￨e ;￨e <START_BUG>￨b assertTrue￨b (￨b testFlag1￨b )￨b ;￨b <END_BUG>￨b assertFalse￨e (￨e testFlag2￨e )￨e ;￨e assertFalse￨e (￨e testFlag3￨e )￨e ;￨e assertTrue￨e (￨e detachedFlag1￨e )￨e ;￨e assertTrue￨e (￨e detachedFlag2￨e )￨e ;￨e assertTrue￨e (￨e detachedFlag3￨e )￨e ;￨e }￨f public￨f void￨f test2￨f (￨f )￨f {￨f }￨f public￨f void￨f test3￨f (￨f )￨f {￨f }￨f }￨d
public￨d }￨f public￨f void￨f setNextUid￨f (￨f int￨p next￨p )￨f {￨f }￨f public￨f JDialog￨f showFilterDialog￨f (￨f AbstractMailFrameController￨p frameController￨p )￨f {￨f }￨f public￨f boolean￨f exists￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f HeaderList￨f getHeaderList￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f addSearchToHistory￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f VirtualFolder￨e searchFolder￨e =￨e (￨e (￨e VirtualFolder￨e )￨e (￨e treeModel￨e .￨e getFolder￨e (￨e 106￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c searchFolder￨c .￨c equals￨c (￨c this￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j (￨c searchFolder￨c .￨c getChildCount￨c (￨c )￨c )￨c >=￨c 10￨c )￨j {￨j MessageFolder￨e child￨e =￨e (￨e (￨e MessageFolder￨e )￨e (￨e searchFolder￨e .￨e getChildAt￨e (￨e 0￨e )￨e )￨e )￨e ;￨e child￨e .￨e removeFromParent￨e (￨e )￨e ;￨e }￨j String￨e name￨e =￨e "search<seq2seq4repair_space>result"￨e ;￨e VirtualFolder￨e newFolder￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f newFolder￨e =￨e (￨e (￨e VirtualFolder￨e )￨e (￨e FolderFactory￨e .￨e getInstance￨e (￨e )￨e .￨e createChild￨e (￨e searchFolder￨e ,￨e name￨e ,￨e "VirtualFolder"￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f ex￨e .￨e printStackTrace￨e (￨e )￨e ;￨e return￨e ;￨e }￨f if￨j (￨j newFolder￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j int￨e uid￨e =￨e getFolderItem￨e (￨e )￨e .￨e getInteger￨e (￨e "property"￨e ,￨e "source_uid"￨e )￨e ;￨e boolean￨e includes￨e =￨e getFolderItem￨e (￨e )￨e .￨e getBoolean￨e (￨e "property"￨e ,￨e "include_subfolders"￨e )￨e ;￨e FolderItem￨e newFolderItem￨e =￨e newFolder￨e .￨e getFolderItem￨e (￨e )￨e ;￨e newFolderItem￨e .￨e set￨e (￨e "property"￨e ,￨e "source_uid"￨e ,￨e uid￨e )￨e ;￨e newFolderItem￨e .￨e set￨e (￨e "property"￨e ,￨e "include_subfolders"￨e ,￨e includes￨e )￨e ;￨e newFolderItem￨e .￨e getElement￨e (￨e "filter"￨e )￨e .￨e removeFromParent￨e (￨e )￨e ;￨e newFolderItem￨e .￨e getRoot￨e (￨e )￨e .￨e addElement￨e (￨e (￨e (￨e XmlElement￨e )￨e (￨e getFolderItem￨e (￨e )￨e .￨e getElement￨e (￨e "filter"￨e )￨e .￨e clone￨e (￨e )￨e )￨e )￨e )￨e ;￨e FilterCriteria￨e newc￨e =￨e new￨e Filter￨e (￨e getFolderItem￨e (￨e )￨e .￨e getElement￨e (￨e "filter"￨e )￨e )￨e .￨e getFilterRule￨e (￨e )￨e .￨e get￨e (￨e 0￨e )￨e ;￨e StringBuffer￨e buf￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e if￨j (￨j newc￨c .￨c getType￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c "flags"￨c )￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e "flags<seq2seq4repair_space>found"￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getType￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>("￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getCriteriaString￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>"￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getPattern￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e ")"￨e )￨e ;￨e }￨j else￨j if￨j (￨j newc￨c .￨c getType￨c (￨c )￨c .￨c equalsIgnoreCase￨c (￨c "custom<seq2seq4repair_space>headerfield"￨c )￨c )￨j {￨j buf￨e .￨e append￨e (￨e newc￨e .￨e getHeaderItemString￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>("￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getCriteriaString￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>"￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getPattern￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e ")"￨e )￨e ;￨e }￨j else￨j {￨j buf￨e .￨e append￨e (￨e newc￨e .￨e getType￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>("￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getCriteriaString￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "<seq2seq4repair_space>"￨e )￨e ;￨e buf￨e .￨e append￨e (￨e newc￨e .￨e getPattern￨e (￨e )￨e )￨e ;￨e buf￨e .￨e append￨e (￨e ")"￨e )￨e ;￨e }￨j <START_BUG>￨b newFolder￨b .￨b renameFolder￨b (￨b buf￨b .￨b toString￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b treeModel￨e .￨e nodeStructureChanged￨e (￨e searchFolder￨e )￨e ;￨e treeModel￨e .￨e nodeChanged￨e (￨e newFolder￨e )￨e ;￨e }￨f protected￨f void￨f applySearch￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f applySearch￨f (￨f MessageFolder￨f parent￨f ,￨f Filter￨f filter￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f DefaultSearchEngine￨f getSearchEngine￨f (￨f )￨f {￨f }￨f public￨f Filter￨f getFilter￨f (￨f )￨f {￨f }￨f public￨f Object￨f getVirtualUid￨f (￨f MessageFolder￨f parent￨f ,￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f add￨f (￨f ColumbaHeader￨f header￨f ,￨f MessageFolder￨f f￨f ,￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f markMessage￨f (￨f Object￨f [￨f ]￨f uids￨f ,￨f int￨f variant￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f removeMessage￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f MimePart￨f getMimePart￨f (￨f Object￨f uid￨f ,￨f Integer￨f [￨f ]￨f address￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f MimeTree￨f getMimePartTree￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f ColumbaHeader￨f getMessageHeader￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f ColumbaMessage￨f getMessage￨f (￨f Object￨f uid￨f ,￨f WorkerStatusController￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f searchMessages￨f (￨f Filter￨f filter￨f ,￨f Object￨f [￨f ]￨f uids￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f searchMessages￨f (￨f Filter￨f filter￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f String￨f getDefaultChild￨f (￨f )￨f {￨f }￨f public￨f static￨f XmlElement￨f getDefaultProperties￨f (￨f )￨f {￨f }￨f public￨f FolderCommandReference￨f [￨f ]￨f getCommandReference￨f (￨f FolderCommandReference￨p [￨p ]￨p r￨p )￨f {￨f }￨f public￨f boolean￨f tryToGetLock￨f (￨f Object￨p locker￨p )￨f {￨f }￨f public￨f Object￨f [￨f ]￨f getUids￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Object￨f addMessage￨f (￨f InputStream￨f in￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Object￨f getAttribute￨f (￨f Object￨f uid￨f ,￨f String￨f key￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Flags￨f getFlags￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Header￨f getHeaderFields￨f (￨f Object￨f uid￨f ,￨f String￨f [￨f ]￨f keys￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getMessageSourceStream￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getMimePartBodyStream￨f (￨f Object￨f uid￨f ,￨f Integer￨f [￨f ]￨f address￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f getMimePartSourceStream￨f (￨f Object￨f uid￨f ,￨f Integer￨f [￨f ]￨f address￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f boolean￨f supportsAddMessage￨f (￨f )￨f {￨f }￨f public￨f boolean￨f supportsAddFolder￨f (￨f AbstractFolder￨p newFolder￨p )￨f {￨f }￨f public￨f void￨f innerCopy￨f (￨f MailboxInterface￨p destFolder￨p ,￨p Object￨p [￨p ]￨p uids￨p )￨f {￨f }￨f public￨f void￨f setAttribute￨f (￨f Object￨f uid￨f ,￨f String￨f key￨f ,￨f Object￨f value￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Attributes￨f getAttributes￨f (￨f Object￨f uid￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Object￨f addMessage￨f (￨f InputStream￨f in￨f ,￨f Attributes￨f attributes￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f HeaderListStorage￨f getHeaderListStorage￨f (￨f )￨f {￨f }￨f }￨d
class￨d WebConnectorMetrics￨d implements￨d OperationStepHandler￨d {￨d static￨e WebConnectorMetrics￨e INSTANCE￨e =￨e new￨e WebConnectorMetrics￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e BYTES_SENT￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e BYTES_SENT￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e BYTES_RECEIVED￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e BYTES_RECEIVED￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e PROCESSING_TIME￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e PROCESSING_TIME￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e ERROR_COUNT￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e ERROR_COUNT￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e MAX_TIME￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e MAX_TIME￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e protected￨e static￨e final￨e SimpleAttributeDefinition￨e REQUEST_COUNT￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e SimpleAttributeDefinitionBuilder￨e (￨e Constants￨e .￨e REQUEST_COUNT￨e ,￨e org￨e .￨e jboss￨e .￨e dmr￨e .￨e ModelType￨e .￨e INT￨e ,￨e true￨e )￨e .￨e setStorageRuntime￨e (￨e )￨e .￨e build￨e (￨e )￨e ;￨e @￨f Deprecated￨f static￨f final￨f String￨f [￨f ]￨f ATTRIBUTES_OLD￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e static￨f final￨f SimpleAttributeDefinition￨f [￨f ]￨f ATTRIBUTES￨f =￨f new￨f SimpleAttributeDefinition￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j context￨c .￨c isNormalServer￨c (￨c )￨c )￨j {￨j context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e ;￨e final￨e String￨e name￨e =￨e address￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e attributeName￨e =￨e operation￨e .￨e require￨e (￨e NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e JBOSS_WEB_CONNECTOR￨e .￨e append￨e (￨e name￨e )￨e )￨e ;￨e if￨j (￨j controller￨c !=￨c null￨c )￨j {￨j try￨f (￨f )￨f {￨f final￨e Connector￨e connector￨e =￨e (￨e (￨e Connector￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e final￨e ModelNode￨e result￨e =￨e context￨e .￨e getResult￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c connector￨c .￨c getProtocolHandler￨c (￨c )￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c connector￨c .￨c getProtocolHandler￨c (￨c )￨c .￨c getRequestGroupInfo￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j RequestGroupInfo￨e info￨e =￨e connector￨e .￨e getProtocolHandler￨e (￨e )￨e .￨e getRequestGroupInfo￨e (￨e )￨e ;￨e if￨j (￨j Constants￨c .￨c BYTES_SENT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getBytesSent￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j Constants￨c .￨c BYTES_RECEIVED￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getBytesReceived￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j Constants￨c .￨c PROCESSING_TIME￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getProcessingTime￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j Constants￨c .￨c ERROR_COUNT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getErrorCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j Constants￨c .￨c MAX_TIME￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getMaxTime￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j Constants￨c .￨c REQUEST_COUNT￨c .￨c equals￨c (￨c attributeName￨c )￨c )￨j {￨j result￨e .￨e set￨e (￨e (￨e ""￨e +￨e (￨e info￨e .￨e getRequestCount￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨j }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f throw￨e new￨e OperationFailedException￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e failedToGetMetrics￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨j else￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e noMetricsAvailable￨e (￨e )￨e )￨e ;￨e }￨j context￨e .￨e completeStep￨e (￨e NOOP_ROLLBACK_HANDLER￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨j else￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e WebMessages￨e .￨e MESSAGES￨e .￨e noMetricsAvailable￨e (￨e )￨e )￨e ;￨e }￨j <START_BUG>￨b context￨b .￨b completeStep￨b (￨b NOOP_ROLLBACK_HANDLER￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d public￨f void￨f deselectAll￨f (￨f )￨f {￨f }￨f void￨f dropDown￨f (￨f boolean￨p drop￨p )￨f {￨f }￨f Label￨f getAssociatedLabel￨f (￨f )￨f {￨f }￨f public￨f Control￨f [￨f ]￨f getChildren￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getEditable￨f (￨f )￨f {￨f }￨f public￨f String￨f getItem￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f int￨f getItemCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getItemHeight￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getItems￨f (￨f )￨f {￨f }￨f char￨f getMnemonic￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f Point￨f getSelection￨f (￨f )￨f {￨f }￨f public￨f int￨f getSelectionIndex￨f (￨f )￨f {￨f }￨f public￨f int￨f getStyle￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f public￨f int￨f getTextHeight￨f (￨f )￨f {￨f }￨f public￨f int￨f getTextLimit￨f (￨f )￨f {￨f }￨f public￨f int￨f getVisibleItemCount￨f (￨f )￨f {￨f }￨f void￨f handleFocus￨f (￨f int￨p type￨p )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f int￨f indexOf￨f (￨f String￨p string￨p ,￨p int￨p start￨p )￨f {￨f }￨f void￨f initAccessible￨f (￨f )￨f {￨f AccessibleAdapter￨f accessibleAdapter￨f =￨f new￨f AccessibleAdapter￨f (￨f )￨f {￨f public￨f void￨f getName￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f String￨e name￨e =￨e null￨e ;￨e Label￨e label￨e =￨e getAssociatedLabel￨e (￨e )￨e ;￨e if￨j (￨j label￨c !=￨c null￨c )￨j {￨j name￨e =￨e stripMnemonic￨e (￨e label￨e .￨e getText￨e (￨e )￨e )￨e ;￨e }￨j e￨e .￨e result￨e =￨e name￨e ;￨e }￨f public￨f void￨f getKeyboardShortcut￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f String￨e shortcut￨e =￨e null￨e ;￨e Label￨e label￨e =￨e getAssociatedLabel￨e (￨e )￨e ;￨e if￨j (￨j label￨c !=￨c null￨c )￨j {￨j String￨e text￨e =￨e label￨e .￨e getText￨e (￨e )￨e ;￨e if￨j (￨j text￨c !=￨c null￨c )￨j {￨j char￨e mnemonic￨e =￨e getMnemonic￨e (￨e text￨e )￨e ;￨e if￨j (￨j mnemonic￨c !=￨c ' '￨c )￨j {￨j shortcut￨e =￨e "Alt+"￨e +￨e mnemonic￨e ;￨e }￨j }￨j }￨j e￨e .￨e result￨e =￨e shortcut￨e ;￨e }￨f public￨f void￨f getHelp￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f e￨e .￨e result￨e =￨e getToolTipText￨e (￨e )￨e ;￨e }￨f }￨f ;￨e getAccessible￨e (￨e )￨e .￨e addAccessibleListener￨e (￨e accessibleAdapter￨e )￨e ;￨e text￨e .￨e getAccessible￨e (￨e )￨e .￨e addAccessibleListener￨e (￨e accessibleAdapter￨e )￨e ;￨e list￨e .￨e getAccessible￨e (￨e )￨e .￨e addAccessibleListener￨e (￨e accessibleAdapter￨e )￨e ;￨e arrow￨f .￨f getAccessible￨f (￨f )￨f .￨f addAccessibleListener￨f (￨f new￨f AccessibleAdapter￨f (￨f )￨f {￨f public￨f void￨f getName￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f e￨e .￨e result￨e =￨e (￨e isDropped￨e (￨e )￨e )￨e ?￨e "Close"￨e :￨e "Open"￨e ;￨e }￨f public￨f void￨f getKeyboardShortcut￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f e￨e .￨e result￨e =￨e "Alt+Down<seq2seq4repair_space>Arrow"￨e ;￨e }￨f public￨f void￨f getHelp￨f (￨f AccessibleEvent￨p e￨p )￨f {￨f e￨e .￨e result￨e =￨e getToolTipText￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e getAccessible￨f (￨f )￨f .￨f addAccessibleTextListener￨f (￨f new￨f AccessibleTextAdapter￨f (￨f )￨f {￨f public￨f void￨f getCaretOffset￨f (￨f AccessibleTextEvent￨p e￨p )￨f {￨f e￨e .￨e offset￨e =￨e text￨e .￨e getCaretPosition￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e getAccessible￨f (￨f )￨f .￨f addAccessibleControlListener￨f (￨f new￨f AccessibleControlAdapter￨f (￨f )￨f {￨f public￨f void￨f getChildAtPoint￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f Point￨e testPoint￨e =￨e toControl￨e (￨e e￨e .￨e x￨e ,￨e e￨e .￨e y￨e )￨e ;￨e if￨j (￨j getBounds￨c (￨c )￨c .￨c contains￨c (￨c testPoint￨c )￨c )￨j {￨j e￨e .￨e childID￨e =￨e ACC￨e .￨e CHILDID_SELF￨e ;￨e }￨j }￨f public￨f void￨f getLocation￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f Rectangle￨e location￨e =￨e getBounds￨e (￨e )￨e ;￨e Point￨e pt￨e =￨e toDisplay￨e (￨e location￨e .￨e x￨e ,￨e location￨e .￨e y￨e )￨e ;￨e e￨e .￨e x￨e =￨e pt￨e .￨e x￨e ;￨e e￨e .￨e y￨e =￨e pt￨e .￨e y￨e ;￨e e￨e .￨e width￨e =￨e location￨e .￨e width￨e ;￨e e￨e .￨e height￨e =￨e location￨e .￨e height￨e ;￨e }￨f public￨f void￨f getChildCount￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f e￨e .￨e detail￨e =￨e 0￨e ;￨e }￨f public￨f void￨f getRole￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f e￨e .￨e detail￨e =￨e ACC￨e .￨e ROLE_COMBOBOX￨e ;￨e }￨f public￨f void￨f getState￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f e￨e .￨e detail￨e =￨e ACC￨e .￨e STATE_NORMAL￨e ;￨e }￨f public￨f void￨f getValue￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f e￨e .￨e result￨e =￨e getText￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e text￨f .￨f getAccessible￨f (￨f )￨f .￨f addAccessibleControlListener￨f (￨f new￨f AccessibleControlAdapter￨f (￨f )￨f {￨f public￨f void￨f getRole￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f e￨e .￨e detail￨e =￨e (￨e text￨e .￨e getEditable￨e (￨e )￨e )￨e ?￨e ACC￨e .￨e ROLE_TEXT￨e :￨e ACC￨e .￨e ROLE_LABEL￨e ;￨e }￨f }￨f )￨e ;￨e arrow￨f .￨f getAccessible￨f (￨f )￨f .￨f addAccessibleControlListener￨f (￨f new￨f AccessibleControlAdapter￨f (￨f )￨f {￨f public￨f void￨f getDefaultAction￨f (￨f AccessibleControlEvent￨p e￨p )￨f {￨f <START_BUG>￨b e￨b .￨b result￨b =￨b (￨b isDropped￨b (￨b )￨b )￨b ?￨b "Close"￨b :￨b "Open"￨b ;￨b <END_BUG>￨b }￨f }￨f )￨e ;￨e }￨f boolean￨f isDropped￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFocusControl￨f (￨f )￨f {￨f }￨f void￨f internalLayout￨f (￨f boolean￨p changed￨p )￨f {￨f }￨f void￨f listEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f void￨f popupEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f public￨f void￨f redraw￨f (￨f )￨f {￨f }￨f public￨f void￨f redraw￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p all￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f int￨p start￨p ,￨p int￨p end￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f removeAll￨f (￨f )￨f {￨f }￨f public￨f void￨f removeModifyListener￨f (￨f ModifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f select￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setBackground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setEditable￨f (￨f boolean￨p editable￨p )￨f {￨f }￨f public￨f void￨f setEnabled￨f (￨f boolean￨p enabled￨p )￨f {￨f }￨f public￨f boolean￨f setFocus￨f (￨f )￨f {￨f }￨f public￨f void￨f setFont￨f (￨f Font￨p font￨p )￨f {￨f }￨f public￨f void￨f setForeground￨f (￨f Color￨p color￨p )￨f {￨f }￨f public￨f void￨f setItem￨f (￨f int￨p index￨p ,￨p String￨p string￨p )￨f {￨f }￨f public￨f void￨f setItems￨f (￨f String￨p [￨p ]￨p items￨p )￨f {￨f }￨f public￨f void￨f setLayout￨f (￨f Layout￨p layout￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f Point￨p selection￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setTextLimit￨f (￨f int￨p limit￨p )￨f {￨f }￨f public￨f void￨f setToolTipText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setVisible￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f public￨f void￨f setVisibleItemCount￨f (￨f int￨p count￨p )￨f {￨f }￨f String￨f stripMnemonic￨f (￨f String￨p string￨p )￨f {￨f }￨f void￨f textEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f }￨d
public￨d class￨d AjaxTimerBehaviorTest￨d extends￨d WicketTestCase￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d AjaxTimerBehaviorTest￨d .￨d class￨d )￨d ;￨d public￨d AjaxTimerBehaviorTest￨d (￨d String￨d name￨d )￨d {￨d }￨d public￨f void￨f testAddToAjaxUpdate￨f (￨f )￨f {￨f }￨f public￨f void￨f testAddToWebPage￨f (￨f )￨f {￨f }￨f private￨f void￨f validate￨f (￨f AjaxTimerBehaviorTest￨p .￨p MyAjaxSelfUpdatingTimerBehavior￨p timer￨p ,￨p boolean￨p inBodyOnLoad￨p )￨f {￨f String￨e document￨e =￨e tester￨e .￨e getServletResponse￨e (￨e )￨e .￨e getDocument￨e (￨e )￨e ;￨e String￨e updateScript￨e =￨e timer￨e .￨e getUpdateScript￨e (￨e )￨e ;￨e if￨j (￨j inBodyOnLoad￨c )￨j {￨j <START_BUG>￨b String￨b bodyOnLoadUpdateScript￨b =￨b (￨b "Wicket.Event.add(window,<seq2seq4repair_space>\"load\",<seq2seq4repair_space>function()<seq2seq4repair_space>{<seq2seq4repair_space>"￨b +￨b updateScript￨b )￨b +￨b ";});"￨b ;￨b <END_BUG>￨b validateTimerScript￨e (￨e document￨e ,￨e bodyOnLoadUpdateScript￨e )￨e ;￨e }￨j else￨j {￨j validateTimerScript￨e (￨e document￨e ,￨e updateScript￨e )￨e ;￨e }￨j tester￨e .￨e executeBehavior￨e (￨e timer￨e )￨e ;￨e if￨j (￨j inBodyOnLoad￨c )￨j {￨j updateScript￨e =￨e timer￨e .￨e getUpdateScript￨e (￨e )￨e ;￨e }￨j document￨e =￨e tester￨e .￨e getServletResponse￨e (￨e )￨e .￨e getDocument￨e (￨e )￨e ;￨e validateTimerScript￨e (￨e document￨e ,￨e updateScript￨e )￨e ;￨e }￨f private￨f void￨f validateTimerScript￨f (￨f String￨p document￨p ,￨p String￨p updateScript￨p )￨f {￨f }￨f private￨f static￨f final￨f String￨f quote￨f (￨f String￨p s￨p )￨f {￨f }￨f static￨d class￨d MyAjaxSelfUpdatingTimerBehavior￨d extends￨d AjaxSelfUpdatingTimerBehavior￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e Duration￨e duration￨e ;￨e String￨e updateScript￨e ;￨e public￨f MyAjaxSelfUpdatingTimerBehavior￨f (￨f Duration￨p updateInterval￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentRendered￨f (￨f )￨f {￨f }￨f public￨f String￨f getUpdateScript￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d GenericSubsystemDescribeHandler￨d implements￨d OperationStepHandler￨d ,￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e GenericSubsystemDescribeHandler￨e INSTANCE￨e =￨e new￨e GenericSubsystemDescribeHandler￨e (￨e )￨e ;￨e protected￨f GenericSubsystemDescribeHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f final￨f OperationContext￨f context￨f ,￨f final￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f protected￨f void￨f describe￨f (￨f final￨p Resource￨p resource￨p ,￨p final￨p ModelNode￨p address￨p ,￨p ModelNode￨p result￨p ,￨p final￨p ImmutableManagementResourceRegistration￨p registration￨p )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b (￨b (￨b registration￨b .￨b isRemote￨b (￨b )￨b )￨b ||￨b (￨b registration￨b .￨b isRuntimeOnly￨b (￨b )￨b )￨b )￨b ||￨b (￨b resource￨b .￨b isProxy￨b (￨b )￨b )￨b )￨b ||￨b (￨b resource￨b .￨b isRuntime￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b return￨e ;￨e }￨e final￨e Set￨e <￨e PathElement￨e >￨e children￨e =￨e registration￨e .￨e getChildAddresses￨e (￨e EMPTY_ADDRESS￨e )￨e ;￨e result￨e .￨e add￨e (￨e createAddOperation￨e (￨e address￨e ,￨e resource￨e .￨e getModel￨e (￨e )￨e ,￨e children￨e )￨e )￨e ;￨e for￨l (￨l final￨c PathElement￨c element￨c :￨c children￨c )￨l {￨l if￨j (￨j element￨c .￨c isMultiTarget￨c (￨c )￨c )￨j {￨j final￨e String￨e childType￨e =￨e element￨e .￨e getKey￨e (￨e )￨e ;￨e for￨l (￨l final￨c Resource￨c .￨c ResourceEntry￨c entry￨c :￨c resource￨c .￨c getChildren￨c (￨c childType￨c )￨c )￨l {￨l final￨e ImmutableManagementResourceRegistration￨e childRegistration￨e =￨e registration￨e .￨e getSubModel￨e (￨e PathAddress￨e .￨e pathAddress￨e (￨e PathElement￨e .￨e pathElement￨e (￨e childType￨e ,￨e entry￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e ;￨e final￨e ModelNode￨e childAddress￨e =￨e address￨e .￨e clone￨e (￨e )￨e ;￨e childAddress￨e .￨e add￨e (￨e childType￨e ,￨e entry￨e .￨e getName￨e (￨e )￨e )￨e ;￨e describe￨e (￨e entry￨e ,￨e childAddress￨e ,￨e result￨e ,￨e childRegistration￨e )￨e ;￨e }￨l }￨j else￨j {￨j final￨e Resource￨e child￨e =￨e resource￨e .￨e getChild￨e (￨e element￨e )￨e ;￨e final￨e ImmutableManagementResourceRegistration￨e childRegistration￨e =￨e registration￨e .￨e getSubModel￨e (￨e PathAddress￨e .￨e pathAddress￨e (￨e element￨e )￨e )￨e ;￨e final￨e ModelNode￨e childAddress￨e =￨e address￨e .￨e clone￨e (￨e )￨e ;￨e childAddress￨e .￨e add￨e (￨e element￨e .￨e getKey￨e (￨e )￨e ,￨e element￨e .￨e getValue￨e (￨e )￨e )￨e ;￨e describe￨e (￨e child￨e ,￨e childAddress￨e ,￨e result￨e ,￨e childRegistration￨e )￨e ;￨e }￨j }￨l }￨f protected￨f ModelNode￨f createAddOperation￨f (￨f final￨p ModelNode￨p address￨p ,￨p final￨p ModelNode￨p subModel￨p ,￨p final￨p Set￨p <￨p PathElement￨p >￨p children￨p )￨f {￨f }￨f @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f }￨d
public￨d class￨d RaActivate￨d implements￨d OperationStepHandler￨d {￨d static￨e final￨e RaActivate￨e INSTANCE￨e =￨e new￨e RaActivate￨e (￨e )￨e ;￨e public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ModelNode￨e address￨e =￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e ;￨e final￨e String￨e idName￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e address￨e )￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e raName￨e =￨e context￨e .￨e readResource￨e (￨e EMPTY_ADDRESS￨e )￨e .￨e getModel￨e (￨e )￨e .￨e get￨e (￨e "archive"￨e )￨e .￨e asString￨e (￨e )￨e ;￨e if￨j (￨j context￨c .￨c isNormalServer￨c (￨c )￨c )￨j {￨j context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f public￨f void￨f execute￨f (￨f final￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ServiceVerificationHandler￨e svh￨e =￨e new￨e ServiceVerificationHandler￨e (￨e )￨e ;￨e ServiceName￨e restartedServiceName￨e =￨e RaOperationUtil￨e .￨e restartIfPresent￨e (￨e context￨e ,￨e raName￨e ,￨e idName￨e ,￨e svh￨e )￨e ;￨e if￨j (￨j restartedServiceName￨c ==￨c null￨c )￨j {￨j RaOperationUtil￨e .￨e activate￨e (￨e context￨e ,￨e idName￨e ,￨e svh￨e )￨e ;￨e }￨j context￨e .￨e addStep￨e (￨e svh￨e ,￨e VERIFY￨e )￨e ;￨e context￨f .￨f completeStep￨f (￨f new￨f OperationContext￨f .￨f RollbackHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f handleRollback￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p )￨f {￨f try￨f (￨f )￨f {￨f <START_BUG>￨b RaOperationUtil￨b .￨b removeIfActive￨b (￨b context￨b ,￨b raName￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f OperationFailedException￨p e￨p )￨f {￨f }￨f }￨f }￨f )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨j context￨e .￨e stepCompleted￨e (￨e )￨e ;￨e }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d ServerInModuleDeploymentTestCase￨d {￨d @￨f Test￨f public￨f void￨f testDeploymentStreamApi￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDeploymentFileApi￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testFilesystemScannerRegistration￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testFilesystemDeployment_Marker￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testFilesystemDeployment_Auto￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testExplodedFilesystemDeployment￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f addDeploymentScanner￨f (￨f final￨f File￨f deployDir￨f ,￨f final￨f ModelControllerClient￨f client￨f ,￨f final￨f String￨f scannerName￨f ,￨f final￨f boolean￨f autoDeployZipped￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f removeDeploymentScanner￨f (￨f final￨f ModelControllerClient￨f client￨f ,￨f final￨f String￨f scannerName￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f File￨f createDeploymentDir￨f (￨f String￨p dir￨p )￨f {￨f }￨f private￨f void￨f testDeployments￨f (￨f ModelControllerClient￨f client￨f ,￨f ServerInModuleDeploymentTestCase￨f .￨f DeploymentExecutor￨f deploymentExecutor￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b final￨b MBeanServerConnection￨b mbeanServer￨b =￨b JMXConnectorFactory￨b .￨b connect￨b (￨b new￨b JMXServiceURL￨b (￨b "service:jmx:remote://127.0.0.1:9999"￨b )￨b )￨b .￨b getMBeanServerConnection￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e ObjectName￨e name￨e =￨e new￨e ObjectName￨e (￨e "jboss.test:service=testdeployments"￨e )￨e ;￨e try￨f (￨f )￨f {￨f deploymentExecutor￨e .￨e initialDeploy￨e (￨e )￨e ;￨e PollingUtils￨e .￨e retryWithTimeout￨e (￨e 10000￨e ,￨e new￨e PollingUtils￨e .￨e WaitForMBeanTask￨e (￨e mbeanServer￨e ,￨e name￨e )￨e )￨e ;￨e Assert￨e .￨e assertNotNull￨e (￨e mbeanServer￨e .￨e getMBeanInfo￨e (￨e name￨e )￨e )￨e ;￨e deploymentExecutor￨e .￨e fullReplace￨e (￨e )￨e ;￨e PollingUtils￨e .￨e retryWithTimeout￨e (￨e 10000￨e ,￨e new￨e PollingUtils￨e .￨e WaitForMBeanTask￨e (￨e mbeanServer￨e ,￨e name￨e )￨e )￨e ;￨e Assert￨e .￨e assertNotNull￨e (￨e mbeanServer￨e .￨e getMBeanInfo￨e (￨e name￨e )￨e )￨e ;￨e deploymentExecutor￨e .￨e undeploy￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f long￨e start￨e =￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ;￨e while￨l (￨l (￨c (￨c System￨c .￨c currentTimeMillis￨c (￨c )￨c )￨c -￨c start￨c )￨c <￨c 10000￨c )￨l {￨l mbeanServer￨e .￨e getMBeanInfo￨e (￨e name￨e )￨e ;￨e Thread￨e .￨e sleep￨e (￨e 100￨e )￨e ;￨e }￨l Assert￨e .￨e fail￨e (￨e "Should<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>found<seq2seq4repair_space>MBean"￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p expected￨p )￨f {￨f }￨f }￨f finally￨f (￨f )￨f {￨f }￨f }￨f private￨f void￨f awaitDeploymentExecution￨f (￨f Future￨p <￨p ?￨p >￨p future￨p )￨f {￨f }￨f private￨f static￨f void￨f cleanFile￨f (￨f File￨p toClean￨p )￨f {￨f }￨f private￨f interface￨f DeploymentExecutor￨f (￨f )￨f {￨f void￨f initialDeploy￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f fullReplace￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f undeploy￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨f private￨d static￨d class￨d TestNotificationListener￨d implements￨d NotificationListener￨d {￨d private￨e final￨e ObjectName￨e name￨e ;￨e private￨e volatile￨e CountDownLatch￨e latch￨e =￨e new￨e CountDownLatch￨e (￨e 1￨e )￨e ;￨e private￨f TestNotificationListener￨f (￨f ObjectName￨p name￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f handleNotification￨f (￨f Notification￨p notification￨p ,￨p Object￨p handback￨p )￨f {￨f }￨f void￨f reset￨f (￨f int￨p i￨p )￨f {￨f }￨f void￨f await￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ImportDeclaration￨d extends￨d SourceRefElement￨d implements￨d IImportDeclaration￨d {￨d protected￨e String￨e name￨e ;￨e protected￨e boolean￨e isOnDemand￨e ;￨e protected￨f ImportDeclaration￨f (￨f ImportContainer￨p parent￨p ,￨p String￨p name￨p ,￨p boolean￨p isOnDemand￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f String￨f getElementName￨f (￨f )￨f {￨f }￨f public￨f String￨f getNameWithoutStar￨f (￨f )￨f {￨f }￨f public￨f int￨f getElementType￨f (￨f )￨f {￨f }￨f public￨f int￨f getFlags￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f getHandleMemento￨f (￨f StringBuffer￨p buff￨p )￨f {￨f }￨f protected￨f char￨f getHandleMementoDelimiter￨f (￨f )￨f {￨f }￨f public￨f IJavaElement￨f getPrimaryElement￨f (￨f boolean￨p checkOwner￨p )￨f {￨f }￨f public￨f boolean￨f isOnDemand￨f (￨f )￨f {￨f }￨f public￨f String￨f readableName￨f (￨f )￨f {￨f }￨f protected￨f void￨f toStringInfo￨f (￨f int￨p tab￨p ,￨p StringBuffer￨p buffer￨p ,￨p Object￨p info￨p ,￨p boolean￨p showResolvedInfo￨p )￨f {￨f <START_BUG>￨b buffer￨b .￨b append￨b (￨b this￨b .￨b tabString￨b (￨b tab￨b )￨b )￨b ;￨b <END_BUG>￨b buffer￨e .￨e append￨e (￨e "import<seq2seq4repair_space>"￨e )￨e ;￨e toStringName￨e (￨e buffer￨e )￨e ;￨e if￨j (￨j info￨c ==￨c null￨c )￨j {￨j buffer￨e .￨e append￨e (￨e "<seq2seq4repair_space>(not<seq2seq4repair_space>open)"￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d MethodInvokingJobDetailFactoryBean￨d extends￨d ArgumentConvertingMethodInvoker￨d implements￨d BeanClassLoaderAware￨d ,￨d BeanFactoryAware￨d ,￨d BeanNameAware￨d ,￨d FactoryBean￨d <￨d Object￨d >￨d ,￨d InitializingBean￨d {￨d private￨e String￨e name￨e ;￨e private￨e String￨e group￨e =￨e Scheduler￨e .￨e DEFAULT_GROUP￨e ;￨e private￨e boolean￨e concurrent￨e =￨e true￨e ;￨e private￨e String￨e targetBeanName￨e ;￨e private￨e String￨e [￨e ]￨e jobListenerNames￨e ;￨e private￨e String￨e beanName￨e ;￨e private￨e ClassLoader￨e beanClassLoader￨e =￨e ClassUtils￨e .￨e getDefaultClassLoader￨e (￨e )￨e ;￨e private￨e BeanFactory￨e beanFactory￨e ;￨e private￨e JobDetail￨e jobDetail￨e ;￨e public￨f void￨f setName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setGroup￨f (￨f String￨p group￨p )￨f {￨f }￨f public￨f void￨f setConcurrent￨f (￨f boolean￨p concurrent￨p )￨f {￨f }￨f public￨f void￨f setTargetBeanName￨f (￨f String￨p targetBeanName￨p )￨f {￨f }￨f public￨f void￨f setJobListenerNames￨f (￨f String￨p [￨p ]￨p names￨p )￨f {￨f }￨f public￨f void￨f setBeanName￨f (￨f String￨p beanName￨p )￨f {￨f }￨f public￨f void￨f setBeanClassLoader￨f (￨f ClassLoader￨p classLoader￨p )￨f {￨f }￨f public￨f void￨f setBeanFactory￨f (￨f BeanFactory￨p beanFactory￨p )￨f {￨f }￨f @￨f Override￨f protected￨f Class￨f resolveClassName￨f (￨f String￨f className￨f )￨f throws￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f public￨f void￨f afterPropertiesSet￨f (￨f )￨f throws￨f ClassNotFoundException￨f ,￨f NoSuchMethodException￨f (￨f )￨f {￨f }￨f protected￨f void￨f postProcessJobDetail￨f (￨f JobDetail￨p jobDetail￨p )￨f {￨f }￨f @￨f Override￨f public￨f Class￨f getTargetClass￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f getTargetObject￨f (￨f )￨f {￨f }￨f public￨f Object￨f getObject￨f (￨f )￨f {￨f }￨f public￨f Class￨f <￨f ?￨f >￨f getObjectType￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSingleton￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d MethodInvokingJob￨d extends￨d QuartzJobBean￨d {￨d protected￨d static￨d final￨d Log￨d logger￨d =￨d LogFactory￨d .￨d getLog￨d (￨d MethodInvokingJobDetailFactoryBean￨d .￨d MethodInvokingJob￨d .￨d class￨d )￨d ;￨d private￨d MethodInvoker￨d methodInvoker￨d ;￨d public￨d void￨d setMethodInvoker￨d (￨d MethodInvoker￨d methodInvoker￨d )￨d {￨d }￨d @￨f Override￨f protected￨f void￨f executeInternal￨f (￨f JobExecutionContext￨f context￨f )￨f throws￨f JobExecutionException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f <START_BUG>￨b this￨b .￨b methodInvoker￨b .￨b invoke￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f InvocationTargetException￨p ex￨p )￨f {￨f if￨j (￨j (￨c ex￨c .￨c getTargetException￨c (￨c )￨c )￨c instanceof￨c JobExecutionException￨c )￨j {￨j throw￨e (￨e (￨e JobExecutionException￨e )￨e (￨e ex￨e .￨e getTargetException￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e JobMethodInvocationFailedException￨e (￨e this￨e .￨e methodInvoker￨e ,￨e ex￨e .￨e getTargetException￨e (￨e )￨e )￨e ;￨e }￨j }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f throw￨e new￨e JobMethodInvocationFailedException￨e (￨e this￨e .￨e methodInvoker￨e ,￨e ex￨e )￨e ;￨e }￨f }￨f }￨d public￨d static￨d class￨d StatefulMethodInvokingJob￨d extends￨d MethodInvokingJobDetailFactoryBean￨d .￨d MethodInvokingJob￨d implements￨d StatefulJob￨d {￨d }￨d }￨d
public￨d class￨d WithinPointcut￨d extends￨d Pointcut￨d {￨d TypePattern￨e type￨e ;￨e public￨f WithinPointcut￨f (￨f TypePattern￨p type￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f match￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Pointcut￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p )￨f {￨f <START_BUG>￨b type￨b =￨b type￨b .￨b resolveBindings￨b (￨b scope￨b ,￨b bindings￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f postRead￨f (￨f ResolvedTypeX￨p enclosingType￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f Test￨f findResidue￨f (￨f Shadow￨p shadow￨p ,￨p ExposedState￨p state￨p )￨f {￨f }￨f public￨f Pointcut￨f concretize1￨f (￨f ResolvedTypeX￨p inAspect￨p ,￨p IntMap￨p bindings￨p )￨f {￨f }￨f }￨d
public￨d class￨d VFSResourceLoader￨d implements￨d ResourceLoader￨d {￨d private￨e final￨e ModuleIdentifier￨e moduleIdentifier￨e ;￨e private￨e final￨e VirtualFile￨e root￨e ;￨e private￨e final￨e String￨e rootName￨e ;￨e private￨e final￨e Manifest￨e manifest￨e ;￨e private￨e final￨e MountHandle￨e mountHandle￨e ;￨e public￨f VFSResourceLoader￨f (￨f final￨f ModuleIdentifier￨f moduleIdentifier￨f ,￨f final￨f String￨f rootName￨f ,￨f final￨f VirtualFile￨f root￨f ,￨f final￨f MountHandle￨f mountHandle￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f ClassSpec￨f getClassSpec￨f (￨f final￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f PackageSpec￨f getPackageSpec￨f (￨f final￨f String￨f name￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f String￨f getDefinedAttribute￨f (￨f Attributes￨p .￨p Name￨p name￨p ,￨p Attributes￨p entryAttribute￨p ,￨p Attributes￨p mainAttribute￨p )￨f {￨f }￨f public￨f String￨f getLibrary￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f public￨f String￨f getRootName￨f (￨f )￨f {￨f }￨f public￨f PathFilter￨f getExportFilter￨f (￨f )￨f {￨f }￨f public￨f Resource￨f getResource￨f (￨f final￨p String￨p name￨p )￨f {￨f try￨f (￨f )￨f {￨f final￨e VirtualFile￨e file￨e =￨e root￨e .￨e getChild￨e (￨e name￨e )￨e ;￨e if￨j (￨j !￨c (￨c file￨c .￨c exists￨c (￨c )￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j <START_BUG>￨b return￨b new￨b VFSResourceLoader￨b .￨b VFSEntryResource￨b (￨b file￨b ,￨b root￨b .￨b toURL￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f MalformedURLException￨p e￨p )￨f {￨f return￨e null￨e ;￨e }￨f }￨f public￨f Collection￨f <￨f String￨f >￨f getPaths￨f (￨f )￨f {￨f }￨f static￨d class￨d VFSEntryResource￨d implements￨d Resource￨d {￨d private￨e final￨e VirtualFile￨e entry￨e ;￨e private￨e final￨e URL￨e resourceURL￨e ;￨e VFSEntryResource￨f (￨f final￨p VirtualFile￨p entry￨p ,￨p final￨p URL￨p resourceURL￨p )￨f {￨f }￨f public￨f String￨f getName￨f (￨f )￨f {￨f }￨f public￨f URL￨f getURL￨f (￨f )￨f {￨f }￨f public￨f InputStream￨f openStream￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f long￨f getSize￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ConnectionPropertyAdd￨d extends￨d AbstractAddStepHandler￨d implements￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e ConnectionPropertyAdd￨e INSTANCE￨e =￨e new￨e ConnectionPropertyAdd￨e (￨e )￨e ;￨e @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f populateModel￨f (￨f ModelNode￨f operation￨f ,￨f ModelNode￨f modelNode￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f performRuntime￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f ,￨f ModelNode￨f recoveryEnvModel￨f ,￨f ServiceVerificationHandler￨f verificationHandler￨f ,￨f List￨f <￨f ServiceController￨f <￨f ?￨f >￨f >￨f serviceControllers￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b final￨b String￨b configPropertyValue￨b =￨b Constants￨b .￨b CONNECTION_PROPERTY_VALUE￨b .￨b validateResolvedOperation￨b (￨b recoveryEnvModel￨b )￨b .￨b asString￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e ModelNode￨e address￨e =￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e ;￨e PathAddress￨e path￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e address￨e )￨e ;￨e final￨e String￨e jndiName￨e =￨e path￨e .￨e getElement￨e (￨e (￨e (￨e path￨e .￨e size￨e (￨e )￨e )￨e -￨e 2￨e )￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e configPropertyName￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e address￨e )￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e ServiceName￨e serviceName￨e =￨e SERVICE_NAME_BASE￨e .￨e append￨e (￨e jndiName￨e )￨e .￨e append￨e (￨e configPropertyName￨e )￨e ;￨e ServiceName￨e dsServiceName￨e =￨e SERVICE_NAME_BASE￨e .￨e append￨e (￨e jndiName￨e )￨e ;￨e final￨e ServiceRegistry￨e registry￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e true￨e )￨e ;￨e final￨e ServiceName￨e dataSourceConfigServiceName￨e =￨e SERVICE_NAME_BASE￨e .￨e append￨e (￨e jndiName￨e )￨e ;￨e final￨e ServiceController￨e <￨e ?￨e >￨e dataSourceConfigController￨e =￨e registry￨e .￨e getService￨e (￨e dataSourceConfigServiceName￨e )￨e ;￨e if￨j (￨j (￨c dataSourceConfigController￨c !=￨c null￨c )￨c &&￨c (￨c !￨c (￨c (￨c (￨c org￨c .￨c jboss￨c .￨c jca￨c .￨c common￨c .￨c api￨c .￨c metadata￨c .￨c ds￨c .￨c DataSource￨c )￨c (￨c dataSourceConfigController￨c .￨c getValue￨c (￨c )￨c )￨c )￨c .￨c isEnabled￨c (￨c )￨c )￨c )￨c )￨j {￨j final￨e ServiceTarget￨e serviceTarget￨e =￨e context￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e final￨e ConnectionPropertiesService￨e service￨e =￨e new￨e ConnectionPropertiesService￨e (￨e configPropertyName￨e ,￨e configPropertyValue￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e serviceName￨e ,￨e service￨e )￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e addDependency￨e (￨e dsServiceName￨e ,￨e ModifiableDataSource￨e .￨e class￨e ,￨e service￨e .￨e getDSInjector￨e (￨e )￨e )￨e .￨e addListener￨e (￨e verificationHandler￨e )￨e .￨e install￨e (￨e )￨e ;￨e context￨e .￨e addStep￨e (￨e verificationHandler￨e ,￨e VERIFY￨e )￨e ;￨e }￨j else￨j {￨j context￨e .￨e reloadRequired￨e (￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d InterceptorsAnnotationParsingProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨d static￨d final￨d DotName￨d INTERCEPTORS_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d Interceptors￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d DotName￨d EXCLUDE_DEFAULT_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d ExcludeDefaultInterceptors￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d DotName￨d EXCLUDE_CLASS_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d ExcludeClassInterceptors￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d public￨d void￨d deploy￨d (￨d DeploymentPhaseContext￨d phaseContext￨d )￨d throws￨d DeploymentUnitProcessingException￨d {￨d }￨d private￨f void￨f processInterceptors￨f (￨f final￨f EEModuleDescription￨f eeModuleDescription￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f CompositeIndex￨f index￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f processMethodInterceptor￨f (￨f final￨p EEModuleDescription￨p eeModuleDescription￨p ,￨p final￨p MethodInfo￨p methodInfo￨p ,￨p final￨p AnnotationInstance￨p annotation￨p ,￨p final￨p CompositeIndex￨p index￨p )￨f {￨f }￨f private￨f void￨f processClassInterceptor￨f (￨f final￨p EEModuleDescription￨p eeModuleDescription￨p ,￨p final￨p ClassInfo￨p classInfo￨p ,￨p final￨p AnnotationInstance￨p annotation￨p ,￨p final￨p CompositeIndex￨p index￨p )￨f {￨f }￨f private￨f void￨f processExcludeDefault￨f (￨f final￨f EEModuleDescription￨f eeModuleDescription￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f CompositeIndex￨f index￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f private￨f void￨f processClassExcludeDefault￨f (￨f EEModuleDescription￨p eeModuleDescription￨p ,￨p final￨p ClassInfo￨p classInfo￨p ,￨p final￨p CompositeIndex￨p index￨p )￨f {￨f }￨f private￨f void￨f processMethodExcludeDefault￨f (￨f EEModuleDescription￨p eeModuleDescription￨p ,￨p MethodInfo￨p methodInfo￨p ,￨p final￨p CompositeIndex￨p index￨p )￨f {￨f }￨f private￨f void￨f processExcludeClass￨f (￨f final￨f EEModuleDescription￨f eeModuleDescription￨f ,￨f final￨f AnnotationInstance￨f annotation￨f ,￨f final￨f CompositeIndex￨f index￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f public￨f void￨f undeploy￨f (￨f DeploymentUnit￨p context￨p )￨f {￨f }￨f private￨f static￨f MethodIdentifier￨f methodIdentifierFromMethodInfo￨f (￨f MethodInfo￨p methodInfo￨p )￨f {￨f }￨f private￨f Collection￨f <￨f ComponentDescription￨f >￨f getApplicableComponents￨f (￨f final￨p CompositeIndex￨p index￨p ,￨p final￨p ClassInfo￨p klass￨p ,￨p final￨p EEModuleDescription￨p eeModuleDescription￨p )￨f {￨f Set￨e <￨e ComponentDescription￨e >￨e componentDescriptions￨e =￨e new￨e HashSet￨e <￨e ComponentDescription￨e >￨e (￨e )￨e ;￨e final￨e List￨e <￨e ComponentDescription￨e >￨e descriptions￨e =￨e eeModuleDescription￨e .￨e getComponentsByClassName￨e (￨e klass￨e .￨e name￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b componentDescriptions￨b .￨b isEmpty￨b (￨b )￨b )￨b {￨b <END_BUG>￨b componentDescriptions￨e .￨e addAll￨e (￨e descriptions￨e )￨e ;￨e else￨j {￨j componentDescriptions￨e .￨e addAll￨e (￨e this￨e .￨e getKnownSubClassComponents￨e (￨e index￨e ,￨e klass￨e ,￨e eeModuleDescription￨e )￨e )￨e ;￨e }￨j return￨e componentDescriptions￨e ;￨e }￨f private￨f Collection￨f <￨f ComponentDescription￨f >￨f getKnownSubClassComponents￨f (￨f final￨p CompositeIndex￨p index￨p ,￨p final￨p ClassInfo￨p superClass￨p ,￨p final￨p EEModuleDescription￨p eeModuleDescription￨p )￨f {￨f }￨f }￨d
public￨d class￨d ProgressView￨d extends￨d ViewPart￨d implements￨d IViewPart￨d {￨d ProgressTreeViewer￨e viewer￨e ;￨e Action￨e cancelAction￨e ;￨e public￨f void￨f createPartControl￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f void￨f setFocus￨f (￨f )￨f {￨f }￨f protected￨f void￨f initContentProvider￨f (￨f )￨f {￨f }￨f private￨f void￨f initContextMenu￨f (￨f )￨f {￨f }￨f private￨f void￨f initPulldownMenu￨f (￨f )￨f {￨f IMenuManager￨e menuMgr￨e =￨e (￨e (￨e org￨e .￨e eclipse￨e .￨e ui￨e .￨e internal￨e .￨e ViewSite￨e )￨e (￨e getSite￨e (￨e )￨e )￨e )￨e .￨e getActionBars￨e (￨e )￨e .￨e getMenuManager￨e (￨e )￨e ;￨e menuMgr￨f .￨f add￨f (￨f new￨f Action￨f (￨f ProgressMessages￨p .￨p getString￨p (￨p "ProgressView.VerboseAction"￨p )￨p ,￨p IAction￨p .￨p AS_CHECK_BOX￨p )￨f {￨f public￨f void￨f run￨f (￨f )￨f {￨f ProgressViewUpdater￨e updater￨e =￨e ProgressViewUpdater￨e .￨e getSingleton￨e (￨e )￨e ;￨e updater￨e .￨e debug￨e =￨e !￨e (￨e updater￨e .￨e debug￨e )￨e ;￨e setChecked￨e (￨e updater￨e .￨e debug￨e )￨e ;￨e updater￨e .￨e refreshAll￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e <START_BUG>￨b menuMgr￨b .￨b add￨b (￨b new￨b Action￨b (￨b "&Toggle<seq2seq4repair_space>Floating<seq2seq4repair_space>Window"￨b )￨b {￨b <END_BUG>￨b public￨f void￨f run￨f (￨f )￨f {￨f AnimationManager￨e .￨e getInstance￨e (￨e )￨e .￨e toggleFloatingWindow￨e (￨e )￨e ;￨e }￨f }￨e )￨e ;￨e }￨f private￨f IStructuredSelection￨f getSelection￨f (￨f )￨f {￨f }￨f JobInfo￨f getSelectedInfo￨f (￨f )￨f {￨f }￨f private￨f void￨f createCancelAction￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SwitchStatement￨d extends￨d Statement￨d {￨d public￨e Expression￨e expression￨e ;￨e public￨e Statement￨e [￨e ]￨e statements￨e ;￨e public￨e BlockScope￨e scope￨e ;￨e public￨e int￨e explicitDeclarations￨e ;￨e public￨e Label￨e breakLabel￨e ;￨e public￨e CaseStatement￨e [￨e ]￨e cases￨e ;￨e public￨e CaseStatement￨e defaultCase￨e ;￨e public￨e int￨e blockStart￨e ;￨e public￨e int￨e caseCount￨e ;￨e int￨e [￨e ]￨e constants￨e ;￨e public￨e SyntheticMethodBinding￨e synthetic￨e ;￨e int￨e preSwitchInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e mergedInitStateIndex￨e =￨e -￨e 1￨e ;￨e public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f StringBuffer￨f printStatement￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p upperScope￨p )￨f {￨f try￨f (￨f )￨f {￨f boolean￨e isEnumSwitch￨e =￨e false￨e ;￨e TypeBinding￨e expressionType￨e =￨e expression￨e .￨e resolveType￨e (￨e upperScope￨e )￨e ;￨e if￨j (￨j expressionType￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j expression￨e .￨e computeConversion￨e (￨e upperScope￨e ,￨e expressionType￨e ,￨e expressionType￨e )￨e ;￨e if￨j (￨j expressionType￨c .￨c isBaseType￨c (￨c )￨c )￨j {￨j if￨j (￨j expression￨c .￨c isConstantValueOfTypeAssignableToType￨c (￨c expressionType￨c ,￨c IntBinding￨c )￨c )￨j {￨j break￨e checkType￨e ;￨e }￨j if￨j (￨j expressionType￨c .￨c isCompatibleWith￨c (￨c IntBinding￨c )￨c )￨j {￨j break￨e checkType￨e ;￨e }￨j }￨j else￨j if￨j (￨j expressionType￨c .￨c isEnum￨c (￨c )￨c )￨j {￨j isEnumSwitch￨e =￨e true￨e ;￨e break￨e checkType￨e ;￨e }￨j else￨j if￨j (￨j upperScope￨c .￨c isBoxingCompatibleWith￨c (￨c expressionType￨c ,￨c IntBinding￨c )￨c )￨j {￨j expression￨e .￨e computeConversion￨e (￨e upperScope￨e ,￨e IntBinding￨e ,￨e expressionType￨e )￨e ;￨e break￨e checkType￨e ;￨e }￨j upperScope￨e .￨e problemReporter￨e (￨e )￨e .￨e incorrectSwitchType￨e (￨e expression￨e ,￨e expressionType￨e )￨e ;￨e return￨e ;￨e if￨j (￨j (￨c statements￨c )￨c !=￨c null￨c )￨j {￨j scope￨e =￨e new￨e BlockScope￨e (￨e upperScope￨e )￨e ;￨e int￨e length￨e ;￨e cases￨e =￨e new￨e CaseStatement￨e [￨e length￨e =￨e statements￨e .￨e length￨e ]￨e ;￨e this￨e .￨e constants￨e =￨e new￨e int￨e [￨e length￨e ]￨e ;￨e CaseStatement￨e [￨e ]￨e duplicateCaseStatements￨e =￨e null￨e ;￨e int￨e duplicateCaseStatementsCounter￨e =￨e 0￨e ;￨e int￨e counter￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l Constant￨e constant￨e ;￨e final￨e Statement￨e statement￨e =￨e statements￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c constant￨c =￨c statement￨c .￨c resolveCase￨c (￨c scope￨c ,￨c expressionType￨c ,￨c this￨c )￨c )￨c !=￨c (￨c Constant￨c .￨c NotAConstant￨c )￨c )￨j {￨j int￨e key￨e =￨e constant￨e .￨e intValue￨e (￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c counter￨c ;￨c j￨c ++￨c )￨l {￨l if￨j (￨j (￨c this￨c .￨c constants￨c [￨c j￨c ]￨c )￨c ==￨c key￨c )￨j {￨j final￨e CaseStatement￨e currentCaseStatement￨e =￨e (￨e (￨e CaseStatement￨e )￨e (￨e statement￨e )￨e )￨e ;￨e if￨j (￨j duplicateCaseStatements￨c ==￨c null￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateCase￨e (￨e cases￨e [￨e j￨e ]￨e )￨e ;￨e scope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateCase￨e (￨e currentCaseStatement￨e )￨e ;￨e duplicateCaseStatements￨e =￨e new￨e CaseStatement￨e [￨e length￨e ]￨e ;￨e duplicateCaseStatements￨e [￨e (￨e duplicateCaseStatementsCounter￨e ++￨e )￨e ]￨e =￨e cases￨e [￨e j￨e ]￨e ;￨e duplicateCaseStatements￨e [￨e (￨e duplicateCaseStatementsCounter￨e ++￨e )￨e ]￨e =￨e currentCaseStatement￨e ;￨e }￨j else￨j {￨j boolean￨e found￨e =￨e false￨e ;￨e for￨l (￨l int￨c k￨c =￨c 2￨c ;￨c k￨c <￨c duplicateCaseStatementsCounter￨c ;￨c k￨c ++￨c )￨l {￨l if￨j (￨j (￨c duplicateCaseStatements￨c [￨c k￨c ]￨c )￨c ==￨c statement￨c )￨j {￨j found￨e =￨e true￨e ;￨e break￨e searchReportedDuplicate￨e ;￨e }￨j }￨l if￨j (￨j !￨c found￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e duplicateCase￨e (￨e currentCaseStatement￨e )￨e ;￨e duplicateCaseStatements￨e [￨e (￨e duplicateCaseStatementsCounter￨e ++￨e )￨e ]￨e =￨e currentCaseStatement￨e ;￨e }￨j }￨j }￨j }￨l this￨e .￨e constants￨e [￨e (￨e counter￨e ++￨e )￨e ]￨e =￨e key￨e ;￨e }￨j }￨l if￨j (￨j length￨c !=￨c counter￨c )￨j {￨j System￨e .￨e arraycopy￨e (￨e this￨e .￨e constants￨e ,￨e 0￨e ,￨e (￨e this￨e .￨e constants￨e =￨e new￨e int￨e [￨e counter￨e ]￨e )￨e ,￨e 0￨e ,￨e counter￨e )￨e ;￨e }￨j }￨j else￨j {￨j if￨j (￨j (￨c (￨c this￨c .￨c bits￨c )￨c &￨c (￨c ASTNode￨c .￨c UndocumentedEmptyBlock￨c )￨c )￨c !=￨c 0￨c )￨j {￨j upperScope￨e .￨e problemReporter￨e (￨e )￨e .￨e undocumentedEmptyBlock￨e (￨e this￨e .￨e blockStart￨e ,￨e this￨e .￨e sourceEnd￨e )￨e ;￨e }￨j }￨j if￨j (￨j (￨c isEnumSwitch￨c &&￨c (￨c (￨c defaultCase￨c )￨c ==￨c null￨c )￨c )￨c &&￨c (￨c (￨c upperScope￨c .￨c compilerOptions￨c (￨c )￨c .￨c getSeverity￨c (￨c IncompleteEnumSwitch￨c )￨c )￨c !=￨c (￨c ProblemSeverities￨c .￨c Ignore￨c )￨c )￨c )￨j {￨j int￨e constantCount￨e =￨e (￨e (￨e this￨e .￨e constants￨e )￨e ==￨e null￨e )￨e ?￨e 0￨e :￨e this￨e .￨e constants￨e .￨e length￨e ;￨e if￨j (￨j (￨c constantCount￨c ==￨c (￨c caseCount￨c )￨c )￨c &&￨c (￨c (￨c caseCount￨c )￨c !=￨c (￨c (￨c (￨c ReferenceBinding￨c )￨c (￨c expressionType￨c )￨c )￨c .￨c enumConstantCount￨c (￨c )￨c )￨c )￨c )￨j {￨j FieldBinding￨e [￨e ]￨e enumFields￨e =￨e (￨e (￨e ReferenceBinding￨e )￨e (￨e expressionType￨e .￨e erasure￨e (￨e )￨e )￨e )￨e .￨e fields￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c enumFields￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l FieldBinding￨e enumConstant￨e =￨e enumFields￨e [￨e i￨e ]￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b (￨b enumConstant￨b .￨b modifiers￨b )￨b &￨b (￨b AccEnum￨b )￨b )￨b ==￨b 0￨b )￨b <END_BUG>￨b continue￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c caseCount￨c )￨c ;￨c j￨c ++￨c )￨l {￨l if￨j (￨j (￨c enumConstant￨c .￨c id￨c )￨c ==￨c (￨c this￨c .￨c constants￨c [￨c j￨c ]￨c )￨c )￨j {￨j break￨e findConstant￨e ;￨e }￨j }￨l upperScope￨e .￨e problemReporter￨e (￨e )￨e .￨e missingEnumConstantCase￨e (￨e this￨e ,￨e enumConstant￨e )￨e ;￨e }￨l }￨j }￨j }￨f finally￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c scope￨c )￨c !=￨c null￨c )￨j {￨j this￨e .￨e scope￨e .￨e enclosingCase￨e =￨e null￨e ;￨e }￨j }￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f public￨f void￨f branchChainTo￨f (￨f Label￨p label￨p )￨f {￨f }￨f }￨d
public￨d class￨d EditorsPreferencePage￨d extends￨d PreferencePage￨d implements￨d IWorkbenchPreferencePage￨d {￨d private￨e static￨e final￨e int￨e REUSE_INDENT￨e =￨e 10￨e ;￨e protected￨e Composite￨e editorReuseGroup￨e ;￨e private￨e Button￨e reuseEditors￨e ;￨e protected￨e Button￨e showMultipleEditorTabs￨e ;￨e protected￨e Button￨e useIPersistableEditor￨e ;￨e private￨e Composite￨e editorReuseIndentGroup￨e ;￨e private￨e Composite￨e editorReuseThresholdGroup￨e ;￨e private￨e IntegerFieldEditor￨e reuseEditorsThreshold￨e ;￨e private￨e Group￨e dirtyEditorReuseGroup￨e ;￨e private￨e Button￨e openNewEditor￨e ;￨e private￨e Button￨e promptToReuseEditor￨e ;￨e private￨e IntegerFieldEditor￨e recentFilesEditor￨e ;￨e private￨f IPropertyChangeListener￨f validityChangeListener￨f =￨f new￨f IPropertyChangeListener￨f (￨f )￨f {￨f public￨f void￨f propertyChange￨f (￨f PropertyChangeEvent￨p event￨p )￨f {￨f }￨f }￨f ;￨e private￨e Button￨e promptWhenStillOpenEditor￨e ;￨e protected￨f Control￨f createContents￨f (￨f Composite￨p parent￨p )￨f {￨f Composite￨e composite￨e =￨e createComposite￨e (￨e parent￨e )￨e ;￨e createEditorHistoryGroup￨e (￨e composite￨e )￨e ;￨e createSpace￨e (￨e composite￨e )￨e ;￨e createShowMultipleEditorTabsPref￨e (￨e composite￨e )￨e ;￨e createUseIPersistablePref￨e (￨e composite￨e )￨e ;￨e createPromptWhenStillOpenPref￨e (￨e composite￨e )￨e ;￨e createEditorReuseGroup￨e (￨e composite￨e )￨e ;￨e <START_BUG>￨b (￨b (￨b TabBehaviour￨b )￨b (￨b Tweaklets￨b .￨b get￨b (￨b TabBehaviour￨b .￨b class￨b )￨b )￨b )￨b .￨b setPreferenceVisibility￨b (￨b editorReuseGroup￨b ,￨b showMultipleEditorTabs￨b )￨b ;￨b <END_BUG>￨b updateValidState￨e (￨e )￨e ;￨e setHelpContext￨e (￨e parent￨e )￨e ;￨e return￨e composite￨e ;￨e }￨f protected￨f void￨f setHelpContext￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createSpace￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createShowMultipleEditorTabsPref￨f (￨f Composite￨p composite￨p )￨f {￨f }￨f protected￨f void￨f createUseIPersistablePref￨f (￨f Composite￨p composite￨p )￨f {￨f }￨f protected￨f void￨f createPromptWhenStillOpenPref￨f (￨f Composite￨p composite￨p )￨f {￨f }￨f protected￨f Composite￨f createComposite￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f void￨f init￨f (￨f IWorkbench￨p workbench￨p )￨f {￨f }￨f protected￨f void￨f performDefaults￨f (￨f )￨f {￨f }￨f public￨f boolean￨f performOk￨f (￨f )￨f {￨f }￨f protected￨f IPreferenceStore￨f doGetPreferenceStore￨f (￨f )￨f {￨f }￨f protected￨f IPreferenceStore￨f getAPIPreferenceStore￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateValidState￨f (￨f )￨f {￨f }￨f protected￨f void￨f createEditorReuseGroup￨f (￨f Composite￨p composite￨p )￨f {￨f }￨f protected￨f void￨f createEditorHistoryGroup￨f (￨f Composite￨p composite￨p )￨f {￨f }￨f }￨d
public￨d class￨d SevenZFile￨d {￨d static￨e final￨e int￨e SIGNATURE_HEADER_SIZE￨e =￨e 32￨e ;￨e private￨e static￨e final￨e int￨e DRAIN_BUF_SIZE￨e =￨e 64￨e *￨e 1024￨e ;￨e private￨e RandomAccessFile￨e file￨e ;￨e private￨e final￨e Archive￨e archive￨e ;￨e private￨e int￨e currentEntryIndex￨e =￨e -￨e 1￨e ;￨e private￨e int￨e currentFolderIndex￨e =￨e -￨e 1￨e ;￨e private￨e InputStream￨e currentFolderInputStream￨e =￨e null￨e ;￨e private￨e InputStream￨e currentEntryInputStream￨e =￨e null￨e ;￨e private￨e byte￨e [￨e ]￨e password￨e ;￨e static￨f final￨f byte￨f [￨f ]￨f sevenZSignature￨f =￨f new￨f byte￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f SevenZFile￨f (￨f final￨f File￨f filename￨f ,￨f final￨f byte￨f [￨f ]￨f password￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f SevenZFile￨f (￨f final￨f File￨f filename￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f SevenZArchiveEntry￨f getNextEntry￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f Archive￨f readHeaders￨f (￨f byte￨f [￨f ]￨f password￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f StartHeader￨f readStartHeader￨f (￨f final￨f int￨f startHeaderCrc￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readHeader￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readArchiveProperties￨f (￨f final￨f DataInput￨f input￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f DataInputStream￨f readEncodedHeader￨f (￨f final￨f DataInputStream￨f header￨f ,￨f final￨f Archive￨f archive￨f ,￨f byte￨f [￨f ]￨f password￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readStreamsInfo￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readPackInfo￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readUnpackInfo￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readSubStreamsInfo￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f Folder￨f readFolder￨f (￨f final￨f DataInput￨f header￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f BitSet￨f readAllOrBits￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f int￨f size￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f BitSet￨f readBits￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f int￨f size￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readFilesInfo￨f (￨f final￨f DataInput￨f header￨f ,￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f calculateStreamMap￨f (￨f final￨f Archive￨f archive￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f buildDecodingStream￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f drainPreviousEntry￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f InputStream￨f buildDecoderStack￨f (￨f final￨f Folder￨f folder￨f ,￨f final￨f long￨f folderOffset￨f ,￨f final￨f int￨f firstPackStreamIndex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f int￨f read￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f int￨f read￨f (￨f byte￨f [￨f ]￨f b￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f int￨f read￨f (￨f byte￨f [￨f ]￨f b￨f ,￨f int￨f off￨f ,￨f int￨f len￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f long￨f readUint64￨f (￨f final￨f DataInput￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f <START_BUG>￨b int￨b firstByte￨b =￨b in￨b .￨b readUnsignedByte￨b (￨b )￨b ;￨b <END_BUG>￨b int￨e mask￨e =￨e 128￨e ;￨e long￨e value￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c 8￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c firstByte￨c &￨c mask￨c )￨c ==￨c 0￨c )￨j {￨j return￨e value￨e |￨e (￨e (￨e firstByte￨e &￨e (￨e mask￨e -￨e 1￨e )￨e )￨e <<￨e (￨e 8￨e *￨e i￨e )￨e )￨e ;￨e }￨j long￨e nextByte￨e =￨e in￨e .￨e readUnsignedByte￨e (￨e )￨e ;￨e value￨e |=￨e nextByte￨e <<￨e (￨e 8￨e *￨e i￨e )￨e ;￨e mask￨e >>>=￨e 1￨e ;￨e }￨l return￨e value￨e ;￨e }￨f }￨d
public￨d class￨d MockRestServiceServer￨d {￨d private￨e final￨e List￨e <￨e RequestMatcherClientHttpRequest￨e >￨e expectedRequests￨e =￨e new￨e LinkedList￨e <￨e RequestMatcherClientHttpRequest￨e >￨e (￨e )￨e ;￨e private￨e final￨e List￨e <￨e RequestMatcherClientHttpRequest￨e >￨e actualRequests￨e =￨e new￨e LinkedList￨e <￨e RequestMatcherClientHttpRequest￨e >￨e (￨e )￨e ;￨e private￨f MockRestServiceServer￨f (￨f )￨f {￨f }￨f public￨f static￨f MockRestServiceServer￨f createServer￨f (￨f RestTemplate￨p restTemplate￨p )￨f {￨f }￨f public￨f static￨f MockRestServiceServer￨f createServer￨f (￨f AsyncRestTemplate￨p asyncRestTemplate￨p )￨f {￨f }￨f public￨f static￨f MockRestServiceServer￨f createServer￨f (￨f RestGatewaySupport￨p restGateway￨p )￨f {￨f }￨f public￨f ResponseActions￨f expect￨f (￨f RequestMatcher￨p requestMatcher￨p )￨f {￨f }￨f public￨f void￨f verify￨f (￨f )￨f {￨f }￨f private￨f String￨f getVerifyMessage￨f (￨f )￨f {￨f }￨f private￨d class￨d RequestMatcherClientHttpRequestFactory￨d implements￨d AsyncClientHttpRequestFactory￨d ,￨d ClientHttpRequestFactory￨d {￨d private￨e Iterator￨e <￨e RequestMatcherClientHttpRequest￨e >￨e requestIterator￨e ;￨e @￨f Override￨f public￨f ClientHttpRequest￨f createRequest￨f (￨f URI￨f uri￨f ,￨f HttpMethod￨f httpMethod￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f AsyncClientHttpRequest￨f createAsyncRequest￨f (￨f URI￨f uri￨f ,￨f HttpMethod￨f httpMethod￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f RequestMatcherClientHttpRequest￨f createRequestInternal￨f (￨f URI￨p uri￨p ,￨p HttpMethod￨p httpMethod￨p )￨f {￨f Assert￨e .￨e notNull￨e (￨e uri￨e ,￨e "'uri'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e )￨e ;￨e Assert￨e .￨e notNull￨e (￨e httpMethod￨e ,￨e "'httpMethod'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨e )￨e ;￨e if￨j (￨j (￨c this￨c .￨c requestIterator￨c )￨c ==￨c null￨c )￨j {￨j this￨e .￨e requestIterator￨e =￨e MockRestServiceServer￨e .￨e this￨e .￨e expectedRequests￨e .￨e iterator￨e (￨e )￨e ;￨e }￨j if￨j (￨j !￨c (￨c this￨c .￨c requestIterator￨c .￨c hasNext￨c (￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b AssertionError￨b (￨b "No<seq2seq4repair_space>further<seq2seq4repair_space>requests<seq2seq4repair_space>expected"￨b )￨b ;￨b <END_BUG>￨b }￨j RequestMatcherClientHttpRequest￨e request￨e =￨e this￨e .￨e requestIterator￨e .￨e next￨e (￨e )￨e ;￨e request￨e .￨e setURI￨e (￨e uri￨e )￨e ;￨e request￨e .￨e setMethod￨e (￨e httpMethod￨e )￨e ;￨e MockRestServiceServer￨e .￨e this￨e .￨e actualRequests￨e .￨e add￨e (￨e request￨e )￨e ;￨e return￨e request￨e ;￨e }￨f }￨d }￨d
public￨d {￨f }￨f private￨f String￨f getString￨f (￨f Localizer￨p localizer￨p ,￨p String￨p key￨p ,￨p Component￨p component￨p )￨f {￨f }￨f public￨f String￨f substitute￨f (￨f String￨f string￨f ,￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f vars￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f Object￨f >￨f addDefaultVars￨f (￨f Map￨p <￨p String￨p ,￨p Object￨p >￨p params￨p )￨f {￨f }￨f private￨f String￨f getLabel￨f (￨f )￨f {￨f }￨f }￨d private￨d final￨d class￨d RequiredStateChange￨d extends￨d Change￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e boolean￨e required￨e =￨e isRequired￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f undo￨f (￨f )￨f {￨f }￨f }￨d private￨d class￨d ValidatableAdapter￨d implements￨d IValidatable￨d <￨d T￨d >￨d {￨d public￨f void￨f error￨f (￨f IValidationError￨p error￨p )￨f {￨f }￨f public￨f T￨f getValue￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isValid￨f (￨f )￨f {￨f }￨f }￨d public￨e static￨e String￨e VALUE_SEPARATOR￨e =￨e ";"￨e ;￨e private￨f static￨f final￨f String￨f [￨f ]￨f EMPTY_STRING_ARRAY￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e static￨e final￨e short￨e FLAG_PERSISTENT￨e =￨e FLAG_RESERVED2￨e ;￨e private￨e static￨e final￨e short￨e FLAG_REQUIRED￨e =￨e FLAG_RESERVED3￨e ;￨e private￨e static￨e final￨e String￨e NO_RAW_INPUT￨e =￨e "[-NO-RAW-INPUT-]"￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e protected￨e static￨e final￨e short￨e FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨e =￨e FLAG_RESERVED1￨e ;￨e public￨f static￨f final￨f void￨f visitFormComponentsPostOrder￨f (￨f Component￨p component￨p ,￨p final￨p FormComponent￨p .￨p IVisitor￨p visitor￨p )￨f {￨f }￨f private￨f static￨f final￨f Object￨f visitFormComponentsPostOrderHelper￨f (￨f Component￨p component￨p ,￨p final￨p FormComponent￨p .￨p IVisitor￨p visitor￨p )￨f {￨f }￨f public￨f static￨f final￨f void￨f visitComponentsPostOrder￨f (￨f Component￨p component￨p ,￨p final￨p Component￨p .￨p IVisitor￨p <￨p Component￨p >￨p visitor￨p )￨f {￨f }￨f private￨f static￨f final￨f Object￨f visitComponentsPostOrderHelper￨f (￨f Component￨p component￨p ,￨p final￨p Component￨p .￨p IVisitor￨p <￨p Component￨p >￨p visitor￨p )￨f {￨f }￨f private￨e transient￨e T￨e convertedInput￨e ;￨e private￨e String￨e rawInput￨e =￨e FormComponent￨e .￨e NO_RAW_INPUT￨e ;￨e private￨e String￨e typeName￨e ;￨e private￨e Object￨e validators￨e =￨e null￨e ;￨e public￨f FormComponent￨f (￨f final￨p String￨p id￨p )￨f {￨f }￨f public￨f FormComponent￨f (￨f final￨p String￨p id￨p ,￨p IModel￨p <￨p T￨p >￨p model￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f <￨f T￨f >￨f add￨f (￨f final￨p IValidator￨p <￨p T￨p >￨p validator￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f <￨f T￨f >￨f add￨f (￨f final￨p IValidator￨p <￨p T￨p >￨p ...￨p validators￨p )￨f {￨f }￨f public￨f boolean￨f checkRequired￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f clearInput￨f (￨f )￨f {￨f }￨f public￨f void￨f error￨f (￨f IValidationError￨p error￨p )￨f {￨f }￨f public￨f final￨f T￨f getConvertedInput￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setConvertedInput￨f (￨f T￨p convertedInput￨p )￨f {￨f }￨f public￨f Form￨f <￨f ?￨f >￨f getForm￨f (￨f )￨f {￨f }￨f public￨f String￨f getInput￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getInputAsArray￨f (￨f )￨f {￨f }￨f public￨f String￨f getInputName￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getRawInput￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f final￨f Class￨f <￨f T￨f >￨f getType￨f (￨f )￨f {￨f }￨f public￨f String￨f getValidatorKeyPrefix￨f (￨f )￨f {￨f }￨f public￨f final￨f List￨f <￨f IValidator￨f <￨f T￨f >￨f >￨f getValidators￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getValue￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f hasRawInput￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f inputChanged￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f invalid￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInputNullable￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isMultiPart￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isPersistent￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRequired￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isValid￨f (￨f )￨f {￨f }￨f public￨f boolean￨f processChildren￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f processInput￨f (￨f )￨f {￨f }￨f public￨f FormComponent￨f <￨f T￨f >￨f setLabel￨f (￨f IModel￨p <￨p String￨p >￨p labelModel￨p )￨f {￨f }￨f @￨f Deprecated￨f public￨f void￨f setModelValue￨f (￨f final￨p String￨p value￨p )￨f {￨f }￨f public￨f void￨f setModelValue￨f (￨f final￨p String￨p [￨p ]￨p value￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f <￨f T￨f >￨f setPersistent￨f (￨f final￨p boolean￨p persistent￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f <￨f T￨f >￨f setRequired￨f (￨f final￨p boolean￨p required￨p )￨f {￨f }￨f public￨f final￨f FormComponent￨f <￨f T￨f >￨f setType￨f (￨f Class￨p <￨p ?￨p >￨p type￨p )￨f {￨f }￨f public￨f void￨f updateModel￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f valid￨f (￨f )￨f {￨f }￨f public￨f void￨f validate￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f private￨f void￨f validators_add￨f (￨f final￨p IValidator￨p <￨p T￨p >￨p validator￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f private￨f IValidator￨f <￨f T￨f >￨f validators_get￨f (￨f int￨p index￨p )￨f {￨f }￨f private￨f int￨f validators_size￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f void￨f convertInput￨f (￨f )￨f {￨f }￨f private￨f void￨f reportValidationError￨f (￨f ConversionException￨p e￨p ,￨p ValidationError￨p error￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f protected￨f T￨f convertValue￨f (￨f String￨f [￨f ]￨f value￨f )￨f throws￨f ConversionException￨f (￨f )￨f {￨f }￨f protected￨f String￨f getModelValue￨f (￨f )￨f {￨f }￨f protected￨f final￨f int￨f inputAsInt￨f (￨f )￨f {￨f }￨f protected￨f final￨f int￨f inputAsInt￨f (￨f final￨p int￨p defaultValue￨p )￨f {￨f }￨f protected￨f final￨f int￨f [￨f ]￨f inputAsIntArray￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f internalOnModelChanged￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f tag￨e .￨e put￨e (￨e "name"￨e ,￨e getInputName￨e (￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b !￨b (￨b FormComponent￨b .￨b isEnabled￨b (￨b )￨b )￨b )￨b ||￨b (￨b !￨b (￨b FormComponent￨b .￨b isEnableAllowed￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b onDisabled￨e (￨e tag￨e )￨e ;￨e }￨e super￨e .￨e onComponentTag￨e (￨e tag￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f void￨f onDetach￨f (￨f )￨f {￨f }￨f protected￨f void￨f onDisabled￨f (￨f final￨p ComponentTag￨p tag￨p )￨f {￨f }￨f protected￨f void￨f onInvalid￨f (￨f )￨f {￨f }￨f protected￨f void￨f onValid￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f shouldTrimInput￨f (￨f )￨f {￨f }￨f protected￨f final￨f String￨f trim￨f (￨f String￨p string￨p )￨f {￨f }￨f protected￨f boolean￨f supportsPersistence￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f validateRequired￨f (￨f )￨f {￨f }￨f private￨f void￨f reportRequiredError￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f validateValidators￨f (￨f )￨f {￨f }￨f public￨f final￨f IValidatable￨f <￨f T￨f >￨f newValidatable￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f final￨f IModel￨f <￨f T￨f >￨f getModel￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setModel￨f (￨f IModel￨p <￨p T￨p >￨p model￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f final￨f T￨f getModelObject￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setModelObject￨f (￨f T￨p object￨p )￨f {￨f }￨f }￨d
public￨d class￨d MultivariateNormalDistribution￨d extends￨d AbstractMultivariateRealDistribution￨d {￨d private￨e final￨e double￨e [￨e ]￨e means￨e ;￨e private￨e final￨e RealMatrix￨e covarianceMatrix￨e ;￨e private￨e final￨e RealMatrix￨e covarianceMatrixInverse￨e ;￨e private￨e final￨e double￨e covarianceMatrixDeterminant￨e ;￨e private￨e final￨e RealMatrix￨e samplingMatrix￨e ;￨e public￨f MultivariateNormalDistribution￨f (￨f final￨f double￨f [￨f ]￨f means￨f ,￨f final￨f double￨f [￨f ]￨f [￨f ]￨f covariances￨f )￨f throws￨f DimensionMismatchException￨f ,￨f NonPositiveDefiniteMatrixException￨f ,￨f SingularMatrixException￨f (￨f )￨f {￨f }￨f public￨f MultivariateNormalDistribution￨f (￨f RandomGenerator￨f rng￨f ,￨f final￨f double￨f [￨f ]￨f means￨f ,￨f final￨f double￨f [￨f ]￨f [￨f ]￨f covariances￨f )￨f throws￨f DimensionMismatchException￨f ,￨f NonPositiveDefiniteMatrixException￨f ,￨f SingularMatrixException￨f (￨f )￨f {￨f }￨f public￨f double￨f [￨f ]￨f getMeans￨f (￨f )￨f {￨f }￨f public￨f RealMatrix￨f getCovariances￨f (￨f )￨f {￨f }￨f public￨f double￨f density￨f (￨f final￨f double￨f [￨f ]￨f vals￨f )￨f throws￨f DimensionMismatchException￨f (￨f )￨f {￨f final￨e int￨e dim￨e =￨e getDimension￨e (￨e )￨e ;￨e if￨j (￨j (￨c vals￨c .￨c length￨c )￨c !=￨c dim￨c )￨j {￨j throw￨e new￨e DimensionMismatchException￨e (￨e vals￨e .￨e length￨e ,￨e dim￨e )￨e ;￨e }￨j <START_BUG>￨b return￨b (￨b (￨b FastMath￨b .￨b pow￨b (￨b (￨b 2￨b *￨b (￨b FastMath￨b .￨b PI￨b )￨b )￨b ,￨b (￨b (￨b -￨b dim￨b )￨b /￨b 2￨b )￨b )￨b )￨b *￨b (￨b FastMath￨b .￨b pow￨b (￨b covarianceMatrixDeterminant￨b ,￨b (￨b -￨b 0.5￨b )￨b )￨b )￨b )￨b *￨b (￨b getExponentTerm￨b (￨b vals￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f double￨f [￨f ]￨f getStandardDeviations￨f (￨f )￨f {￨f }￨f public￨f double￨f [￨f ]￨f sample￨f (￨f )￨f {￨f }￨f private￨f double￨f getExponentTerm￨f (￨f final￨p double￨p [￨p ]￨p values￨p )￨f {￨f }￨f }￨d
public￨d class￨d DateTimeDV￨d extends￨d AbstractDateTimeDV￨d {￨d public￨f Object￨f getActualValue￨f (￨f String￨f content￨f ,￨f ValidationContext￨f context￨f )￨f throws￨f InvalidDatatypeValueException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f <START_BUG>￨b return￨b parse￨b (￨b content￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f Exception￨p ex￨p )￨f {￨f throw￨f new￨f InvalidDatatypeValueException￨f (￨f "cvc-datatype-valid.1.2.1"￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨f }￨f protected￨f int￨f [￨f ]￨f parse￨f (￨f String￨f str￨f )￨f throws￨f SchemaDateTimeException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d EncodingTest￨d extends￨d TestCase￨d {￨d public￨f void￨f test_1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f WicketTester￨e tester￨e =￨e new￨e WicketTester￨e (￨e )￨e ;￨e tester￨e .￨e startPage￨e (￨e Home￨e .￨e class￨e )￨e ;￨e tester￨e .￨e assertContains￨e (￨e "Wicket<seq2seq4repair_space>Examples<seq2seq4repair_space>-<seq2seq4repair_space>encodings"￨e )￨e ;￨e <START_BUG>￨b tester￨b .￨b assertContains￨b (￨b "Hello<seq2seq4repair_space>world!<seq2seq4repair_space>Test:<seq2seq4repair_space>���"￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
class￨d MozillaDelegate￨d {￨d Browser￨e browser￨e ;￨e MozillaDelegate￨f (￨f Browser￨p browser￨p )￨f {￨f }￨f static￨f Browser￨f findBrowser￨f (￨f int￨p handle￨p )￨f {￨f }￨f static￨f char￨f [￨f ]￨f mbcsToWcs￨f (￨f String￨p codePage￨p ,￨p byte￨p [￨p ]￨p buffer￨p )￨f {￨f }￨f static￨f byte￨f [￨f ]￨f wcsToMbcs￨f (￨f String￨p codePage￨p ,￨p String￨p string￨p ,￨p boolean￨p terminate￨p )￨f {￨f }￨f int￨f getHandle￨f (￨f )￨f {￨f }￨f String￨f getLibraryName￨f (￨f )￨f {￨f }￨f String￨f getSWTInitLibraryName￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "swt-xpcominit"￨b ;￨b <END_BUG>￨b }￨f void￨f handleFocus￨f (￨f )￨f {￨f }￨f boolean￨f hookEnterExit￨f (￨f )￨f {￨f }￨f void￨f init￨f (￨f )￨f {￨f }￨f boolean￨f needsSpinup￨f (￨f )￨f {￨f }￨f void￨f onDispose￨f (￨f int￨p embedHandle￨p )￨f {￨f }￨f void￨f setSize￨f (￨f int￨p embedHandle￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f }￨d
public￨d class￨d ModClusterEnableContext￨d implements￨d OperationStepHandler￨d ,￨d DescriptionProvider￨d {￨d static￨e final￨e ModClusterEnableContext￨e INSTANCE￨e =￨e new￨e ModClusterEnableContext￨e (￨e )￨e ;￨e @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b context￨b .￨b getType￨b (￨b )￨b )￨b ==￨b (￨b Type￨b .￨b SERVER￨b )￨b )￨b {￨b <END_BUG>￨b context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e NAME￨e )￨e ;￨e ModCluster￨e modcluster￨e =￨e (￨e (￨e ModCluster￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e ModClusterLogger￨e .￨e ROOT_LOGGER￨e .￨e debugf￨e (￨e "enable-context:<seq2seq4repair_space>%s"￨e ,￨e operation￨e )￨e ;￨e ContextHost￨e contexthost￨e =￨e new￨e ContextHost￨e (￨e operation￨e )￨e ;￨e modcluster￨e .￨e enableContext￨e (￨e contexthost￨e .￨e webhost￨e ,￨e contexthost￨e .￨e webcontext￨e )￨e ;￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨e context￨e .￨e completeStep￨e (￨e )￨e ;￨e }￨f }￨d
final￨d class￨d BcelMethod￨d extends￨d ResolvedMember￨d {￨d private￨e Method￨e method￨e ;￨e private￨e boolean￨e isAjSynthetic￨e ;￨e private￨e ShadowMunger￨e associatedShadowMunger￨e ;￨e private￨e ResolvedPointcutDefinition￨e preResolvedPointcut￨e ;￨e private￨e ResolvedType￨e [￨e ]￨e annotationTypes￨e =￨e null￨e ;￨e private￨e AnnotationX￨e [￨e ]￨e annotations￨e =￨e null￨e ;￨e private￨e EffectiveSignatureAttribute￨e effectiveSignature￨e ;￨e private￨e MethodDeclarationLineNumberAttribute￨e declarationLineNumber￨e ;￨e private￨e ResolvedType￨e [￨e ]￨e resolvedAnnotations￨e ;￨e private￨e World￨e world￨e ;￨e private￨e BcelObjectType￨e bcelObjectType￨e ;￨e BcelMethod￨f (￨f BcelObjectType￨p declaringType￨p ,￨p Method￨p method￨p )￨f {￨f }￨f private￨f void￨f unpackJavaAttributes￨f (￨f )￨f {￨f }￨f private￨f void￨f unpackAjAttributes￨f (￨f World￨p world￨p )￨f {￨f associatedShadowMunger￨e =￨e null￨e ;￨e <START_BUG>￨b List￨b as￨b =￨b BcelAttributes￨b .￨b readAjAttributes￨b (￨b getDeclaringType￨b (￨b )￨b .￨b getClassName￨b (￨b )￨b ,￨b method￨b .￨b getAttributes￨b (￨b )￨b ,￨b getSourceContext￨b (￨b world￨b )￨b ,￨b world￨b .￨b getMessageHandler￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b processAttributes￨e (￨e world￨e ,￨e as￨e )￨e ;￨e as￨e =￨e AtAjAttributes￨e .￨e readAj5MethodAttributes￨e (￨e method￨e ,￨e this￨e ,￨e world￨e .￨e resolve￨e (￨e getDeclaringType￨e (￨e )￨e )￨e ,￨e preResolvedPointcut￨e ,￨e getSourceContext￨e (￨e world￨e )￨e ,￨e world￨e .￨e getMessageHandler￨e (￨e )￨e )￨e ;￨e processAttributes￨e (￨e world￨e ,￨e as￨e )￨e ;￨e }￨f private￨f void￨f processAttributes￨f (￨f World￨p world￨p ,￨p List￨p as￨p )￨f {￨f }￨f public￨f boolean￨f isAjSynthetic￨f (￨f )￨f {￨f }￨f public￨f ShadowMunger￨f getAssociatedShadowMunger￨f (￨f )￨f {￨f }￨f public￨f EffectiveSignatureAttribute￨f getEffectiveSignature￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasDeclarationLineNumberInfo￨f (￨f )￨f {￨f }￨f public￨f int￨f getDeclarationLineNumber￨f (￨f )￨f {￨f }￨f public￨f int￨f getDeclarationOffset￨f (￨f )￨f {￨f }￨f public￨f ISourceLocation￨f getSourceLocation￨f (￨f )￨f {￨f }￨f public￨f Kind￨f getKind￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasAnnotation￨f (￨f UnresolvedType￨p ofType￨p )￨f {￨f }￨f public￨f AnnotationX￨f [￨f ]￨f getAnnotations￨f (￨f )￨f {￨f }￨f public￨f ResolvedType￨f [￨f ]￨f getAnnotationTypes￨f (￨f )￨f {￨f }￨f public￨f void￨f addAnnotation￨f (￨f AnnotationX￨p annotation￨p )￨f {￨f }￨f private￨f void￨f ensureAnnotationTypesRetrieved￨f (￨f )￨f {￨f }￨f private￨e boolean￨e canBeParameterized￨e =￨e false￨e ;￨e public￨f boolean￨f canBeParameterized￨f (￨f )￨f {￨f }￨f private￨e boolean￨e unpackedGenericSignature￨e =￨e false￨e ;￨e private￨e UnresolvedType￨e genericReturnType￨e =￨e null￨e ;￨e private￨e UnresolvedType￨e [￨e ]￨e genericParameterTypes￨e =￨e null￨e ;￨e public￨f UnresolvedType￨f [￨f ]￨f getGenericParameterTypes￨f (￨f )￨f {￨f }￨f public￨f UnresolvedType￨f getGenericReturnType￨f (￨f )￨f {￨f }￨f private￨f void￨f unpackGenericSignature￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FilenameUtils￨d {￨d public￨e static￨e final￨e char￨e EXTENSION_SEPARATOR￨e =￨e '.'￨e ;￨e public￨e static￨e final￨e String￨e EXTENSION_SEPARATOR_STR￨e =￨e Character￨e .￨e toString￨e (￨e FilenameUtils￨e .￨e EXTENSION_SEPARATOR￨e )￨e ;￨e private￨e static￨e final￨e char￨e UNIX_SEPARATOR￨e =￨e '/'￨e ;￨e private￨e static￨e final￨e char￨e WINDOWS_SEPARATOR￨e =￨e '\\'￨e ;￨e private￨e static￨e final￨e char￨e SYSTEM_SEPARATOR￨e =￨e File￨e .￨e separatorChar￨e ;￨e private￨e static￨e final￨e char￨e OTHER_SEPARATOR￨e ;￨e public￨f FilenameUtils￨f (￨f )￨f {￨f }￨f static￨f boolean￨f isSystemWindows￨f (￨f )￨f {￨f }￨f private￨f static￨f boolean￨f isSeparator￨f (￨f char￨p ch￨p )￨f {￨f }￨f public￨f static￨f String￨f normalize￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f normalize￨f (￨f String￨p filename￨p ,￨p boolean￨p unixSeparator￨p )￨f {￨f }￨f public￨f static￨f String￨f normalizeNoEndSeparator￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f normalizeNoEndSeparator￨f (￨f String￨p filename￨p ,￨p boolean￨p unixSeparator￨p )￨f {￨f }￨f private￨f static￨f String￨f doNormalize￨f (￨f String￨p filename￨p ,￨p char￨p separator￨p ,￨p boolean￨p keepSeparator￨p )￨f {￨f }￨f public￨f static￨f String￨f concat￨f (￨f String￨p basePath￨p ,￨p String￨p fullFilenameToAdd￨p )￨f {￨f }￨f public￨f static￨f String￨f separatorsToUnix￨f (￨f String￨p path￨p )￨f {￨f }￨f public￨f static￨f String￨f separatorsToWindows￨f (￨f String￨p path￨p )￨f {￨f }￨f public￨f static￨f String￨f separatorsToSystem￨f (￨f String￨p path￨p )￨f {￨f }￨f public￨f static￨f int￨f getPrefixLength￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f int￨f indexOfLastSeparator￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f int￨f indexOfExtension￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getPrefix￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getPath￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getPathNoEndSeparator￨f (￨f String￨p filename￨p )￨f {￨f }￨f private￨f static￨f String￨f doGetPath￨f (￨f String￨p filename￨p ,￨p int￨p separatorAdd￨p )￨f {￨f }￨f public￨f static￨f String￨f getFullPath￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getFullPathNoEndSeparator￨f (￨f String￨p filename￨p )￨f {￨f }￨f private￨f static￨f String￨f doGetFullPath￨f (￨f String￨p filename￨p ,￨p boolean￨p includeSeparator￨p )￨f {￨f }￨f public￨f static￨f String￨f getName￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getBaseName￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f getExtension￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f String￨f removeExtension￨f (￨f String￨p filename￨p )￨f {￨f }￨f public￨f static￨f boolean￨f equals￨f (￨f String￨p filename1￨p ,￨p String￨p filename2￨p )￨f {￨f }￨f public￨f static￨f boolean￨f equalsOnSystem￨f (￨f String￨p filename1￨p ,￨p String￨p filename2￨p )￨f {￨f }￨f public￨f static￨f boolean￨f equalsNormalized￨f (￨f String￨p filename1￨p ,￨p String￨p filename2￨p )￨f {￨f }￨f public￨f static￨f boolean￨f equalsNormalizedOnSystem￨f (￨f String￨p filename1￨p ,￨p String￨p filename2￨p )￨f {￨f }￨f public￨f static￨f boolean￨f equals￨f (￨f String￨p filename1￨p ,￨p String￨p filename2￨p ,￨p boolean￨p normalized￨p ,￨p IOCase￨p caseSensitivity￨p )￨f {￨f if￨j (￨j (￨c filename1￨c ==￨c null￨c )￨c ||￨c (￨c filename2￨c ==￨c null￨c )￨c )￨j {￨j <START_BUG>￨b return￨b filename1￨b ==￨b filename2￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j normalized￨c )￨j {￨j filename1￨e =￨e FilenameUtils￨e .￨e normalize￨e (￨e filename1￨e )￨e ;￨e filename2￨e =￨e FilenameUtils￨e .￨e normalize￨e (￨e filename2￨e )￨e ;￨e if￨j (￨j (￨c filename1￨c ==￨c null￨c )￨c ||￨c (￨c filename2￨c ==￨c null￨c )￨c )￨j {￨j throw￨e new￨e NullPointerException￨e (￨e "Error<seq2seq4repair_space>normalizing<seq2seq4repair_space>one<seq2seq4repair_space>or<seq2seq4repair_space>both<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>file<seq2seq4repair_space>names"￨e )￨e ;￨e }￨j }￨j if￨j (￨j caseSensitivity￨c ==￨c null￨c )￨j {￨j caseSensitivity￨e =￨e IOCase￨e .￨e SENSITIVE￨e ;￨e }￨j return￨e caseSensitivity￨e .￨e checkEquals￨e (￨e filename1￨e ,￨e filename2￨e )￨e ;￨e }￨f public￨f static￨f boolean￨f isExtension￨f (￨f String￨p filename￨p ,￨p String￨p extension￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isExtension￨f (￨f String￨p filename￨p ,￨p String￨p [￨p ]￨p extensions￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isExtension￨f (￨f String￨p filename￨p ,￨p Collection￨p <￨p String￨p >￨p extensions￨p )￨f {￨f }￨f public￨f static￨f boolean￨f wildcardMatch￨f (￨f String￨p filename￨p ,￨p String￨p wildcardMatcher￨p )￨f {￨f }￨f public￨f static￨f boolean￨f wildcardMatchOnSystem￨f (￨f String￨p filename￨p ,￨p String￨p wildcardMatcher￨p )￨f {￨f }￨f public￨f static￨f boolean￨f wildcardMatch￨f (￨f String￨p filename￨p ,￨p String￨p wildcardMatcher￨p ,￨p IOCase￨p caseSensitivity￨p )￨f {￨f }￨f static￨f String￨f [￨f ]￨f splitOnTokens￨f (￨f String￨p text￨p )￨f {￨f }￨f }￨d
public￨d class￨d JavaBuilder￨d extends￨d IncrementalProjectBuilder￨d {￨d IProject￨e currentProject￨e ;￨e IJavaProject￨e javaProject￨e ;￨e IWorkspaceRoot￨e workspaceRoot￨e ;￨e ClasspathLocation￨e [￨e ]￨e classpath￨e ;￨e IContainer￨e outputFolder￨e ;￨e IContainer￨e [￨e ]￨e sourceFolders￨e ;￨e SimpleLookupTable￨e prereqOutputFolders￨e ;￨e State￨e lastState￨e ;￨e BuildNotifier￨e notifier￨e ;￨e char￨e [￨e ]￨e [￨e ]￨e resourceFilters￨e ;￨e public￨e static￨e final￨e String￨e JAVA_EXTENSION￨e =￨e "java"￨e ;￨e public￨e static￨e final￨e String￨e CLASS_EXTENSION￨e =￨e "class"￨e ;￨e public￨e static￨e final￨e String￨e JAR_EXTENSION￨e =￨e "jar"￨e ;￨e public￨e static￨e final￨e String￨e ZIP_EXTENSION￨e =￨e "zip"￨e ;￨e public￨e static￨e final￨e String￨e OPTION_ResourceCopyFilter￨e =￨e "org.eclipse.jdt.core.builder.resourceCopyExclusionFilters"￨e ;￨e public￨e static￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e static￨e final￨e String￨e ProblemMarkerTag￨e =￨e IJavaModelMarker￨e .￨e JAVA_MODEL_PROBLEM_MARKER￨e ;￨e static￨e ArrayList￨e builtProjects￨e =￨e null￨e ;￨e public￨f static￨f IMarker￨f [￨f ]￨f getProblemsFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f void￨f removeProblemsFor￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f public￨f static￨f State￨f readState￨f (￨f DataInputStream￨f in￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f writeState￨f (￨f Object￨f state￨f ,￨f DataOutputStream￨f out￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f JavaBuilder￨f (￨f )￨f {￨f }￨f protected￨f IProject￨f [￨f ]￨f build￨f (￨f int￨f kind￨f ,￨f Map￨f ignored￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f void￨f buildAll￨f (￨f )￨f {￨f }￨f private￨f void￨f buildDeltas￨f (￨f SimpleLookupTable￨p deltas￨p )￨f {￨f }￨f private￨f void￨f cleanup￨f (￨f )￨f {￨f }￨f private￨f void￨f clearLastState￨f (￨f )￨f {￨f }￨f private￨f void￨f createFolder￨f (￨f IContainer￨f folder￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f boolean￨f filterResource￨f (￨f IResource￨p resource￨p )￨f {￨f }￨f private￨f SimpleLookupTable￨f findDeltas￨f (￨f )￨f {￨f notifier￨e .￨e subTask￨e (￨e Util￨e .￨e bind￨e (￨e "build.readingDelta"￨e ,￨e currentProject￨e .￨e getName￨e (￨e )￨e )￨e )￨e ;￨e IResourceDelta￨e delta￨e =￨e getDelta￨e (￨e currentProject￨e )￨e ;￨e <START_BUG>￨b SimpleLookupTable￨b deltas￨b =￨b new￨b SimpleLookupTable￨b (￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j delta￨c !=￨c null￨c )￨j {￨j deltas￨e .￨e put￨e (￨e currentProject￨e ,￨e delta￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j JavaBuilder￨c .￨c DEBUG￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨e +￨e (￨e currentProject￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j notifier￨e .￨e subTask￨e (￨e ""￨e )￨e ;￨e return￨e null￨e ;￨e }￨j Object￨e [￨e ]￨e keyTable￨e =￨e prereqOutputFolders￨e .￨e keyTable￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c l￨c =￨c keyTable￨c .￨c length￨c ;￨c i￨c <￨c l￨c ;￨c i￨c ++￨c )￨l {￨l IProject￨e prereqProject￨e =￨e (￨e (￨e IProject￨e )￨e (￨e keyTable￨e [￨e i￨e ]￨e )￨e )￨e ;￨e if￨j (￨j (￨c prereqProject￨c !=￨c null￨c )￨c &&￨c (￨c lastState￨c .￨c isStructurallyChanged￨c (￨c prereqProject￨c ,￨c getLastState￨c (￨c prereqProject￨c )￨c )￨c )￨c )￨j {￨j notifier￨e .￨e subTask￨e (￨e Util￨e .￨e bind￨e (￨e "build.readingDelta"￨e ,￨e prereqProject￨e .￨e getName￨e (￨e )￨e )￨e )￨e ;￨e delta￨e =￨e getDelta￨e (￨e prereqProject￨e )￨e ;￨e if￨j (￨j delta￨c !=￨c null￨c )￨j {￨j deltas￨e .￨e put￨e (￨e prereqProject￨e ,￨e delta￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j JavaBuilder￨c .￨c DEBUG￨c )￨j {￨j System￨e .￨e out￨e .￨e println￨e (￨e (￨e "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨e +￨e (￨e prereqProject￨e .￨e getName￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j notifier￨e .￨e subTask￨e (￨e ""￨e )￨e ;￨e return￨e null￨e ;￨e }￨j }￨j }￨l notifier￨e .￨e subTask￨e (￨e ""￨e )￨e ;￨e return￨e deltas￨e ;￨e }￨f private￨f State￨f getLastState￨f (￨f IProject￨p project￨p )￨f {￨f }￨f private￨f IProject￨f [￨f ]￨f getRequiredProjects￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasClasspathChanged￨f (￨f )￨f {￨f }￨f private￨f boolean￨f hasOutputLocationChanged￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeBuilder￨f (￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f private￨f void￨f recordNewState￨f (￨f State￨p state￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SimplePasswordStrengthCheckerTestCase￨d {￨d private￨e Keyboard￨e keyboard￨e =￨e new￨e SimpleKeyboard￨e (￨e )￨e ;￨e private￨e Dictionary￨e dictionary￨e =￨e new￨e SimpleDictionary￨e (￨e )￨e ;￨e public￨e static￨e final￨e PasswordCheckUtil￨e PCU￨e =￨e PasswordCheckUtil￨e .￨e create￨e (￨e null￨e )￨e ;￨e public￨e static￨e final￨e PasswordRestriction￨e ALPHA_RESTRICTION￨e =￨e SimplePasswordStrengthCheckerTestCase￨e .￨e PCU￨e .￨e createAlphaRestriction￨e (￨e 1￨e )￨e ;￨e public￨e static￨e final￨e PasswordRestriction￨e SYMBOL_RESTRICTION￨e =￨e SimplePasswordStrengthCheckerTestCase￨e .￨e PCU￨e .￨e createSymbolRestriction￨e (￨e 1￨e )￨e ;￨e public￨e static￨e final￨e PasswordRestriction￨e DIGIT_RESTRICTION￨e =￨e SimplePasswordStrengthCheckerTestCase￨e .￨e PCU￨e .￨e createDigitRestriction￨e (￨e 1￨e )￨e ;￨e public￨e static￨e final￨e LengthRestriction￨e LENGTH_RESTRICTION￨e =￨e new￨e LengthRestriction￨e (￨e 8￨e )￨e ;￨e @￨f Test￨f public￨f void￨f testLengthRestriction￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDigitsRestriction￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSymbolsRestriction￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testAlphaRestriction￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testAdHocRestriction￨f (￨f )￨f {￨f List￨e <￨e PasswordRestriction￨e >￨e restrictions￨e =￨e new￨e ArrayList￨e <￨e PasswordRestriction￨e >￨e (￨e )￨e ;￨e restrictions￨e .￨e add￨e (￨e SimplePasswordStrengthCheckerTestCase￨e .￨e ALPHA_RESTRICTION￨e )￨e ;￨e restrictions￨e .￨e add￨e (￨e SimplePasswordStrengthCheckerTestCase￨e .￨e SYMBOL_RESTRICTION￨e )￨e ;￨e SimplePasswordStrengthChecker￨e checker￨e =￨e new￨e SimplePasswordStrengthChecker￨e (￨e restrictions￨e ,￨e this￨e .￨e dictionary￨e ,￨e this￨e .￨e keyboard￨e )￨e ;￨e String￨e pwd￨e =￨e "!#*_3x"￨e ;￨e List￨e <￨e PasswordRestriction￨e >￨e adHocRestrictions￨e =￨e new￨e ArrayList￨e <￨e PasswordRestriction￨e >￨e (￨e )￨e ;￨e <START_BUG>￨b ValueRestriction￨b restriction￨b =￨b new￨b ValueRestriction￨b (￨b new￨b String￨b [￨b ]￨b {￨b pwd￨b }￨b ,￨b true￨b )￨b ;￨b <END_BUG>￨b adHocRestrictions￨e .￨e add￨e (￨e restriction￨e )￨e ;￨e PasswordStrengthCheckResult￨e result￨e =￨e checker￨e .￨e check￨e (￨e ""￨e ,￨e pwd￨e ,￨e adHocRestrictions￨e )￨e ;￨e assertNotNull￨e (￨e result￨e )￨e ;￨e assertNotNull￨e (￨e result￨e .￨e getPassedRestrictions￨e (￨e )￨e )￨e ;￨e assertNotNull￨e (￨e result￨e .￨e getRestrictionFailures￨e (￨e )￨e )￨e ;￨e assertEquals￨e (￨e 2￨e ,￨e result￨e .￨e getPassedRestrictions￨e (￨e )￨e .￨e size￨e (￨e )￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e result￨e .￨e getRestrictionFailures￨e (￨e )￨e .￨e size￨e (￨e )￨e )￨e ;￨e assertNotNull￨e (￨e result￨e .￨e getStrength￨e (￨e )￨e )￨e ;￨e assertEquals￨e (￨e SimplePasswordStrengthCheckerTestCase￨e .￨e ALPHA_RESTRICTION￨e ,￨e result￨e .￨e getPassedRestrictions￨e (￨e )￨e .￨e get￨e (￨e 0￨e )￨e )￨e ;￨e assertEquals￨e (￨e SimplePasswordStrengthCheckerTestCase￨e .￨e SYMBOL_RESTRICTION￨e ,￨e result￨e .￨e getPassedRestrictions￨e (￨e )￨e .￨e get￨e (￨e 1￨e )￨e )￨e ;￨e assertEquals￨e (￨e DomainManagementMessages￨e .￨e MESSAGES￨e .￨e passwordMustNotBeEqual￨e (￨e pwd￨e )￨e .￨e getMessage￨e (￨e )￨e ,￨e result￨e .￨e getRestrictionFailures￨e (￨e )￨e .￨e get￨e (￨e 0￨e )￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e }￨f }￨d
public￨d final￨d class￨d Main￨d {￨d public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f private￨f static￨f StandaloneServer￨f create￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f Properties￨e props￨e =￨e new￨e Properties￨e (￨e System￨e .￨e getProperties￨e (￨e )￨e )￨e ;￨e private￨f Main￨f (￨f )￨f {￨f }￨f private￨f StandaloneServer￨f boot￨f (￨f final￨p String￨p [￨p ]￨p args￨p )￨f {￨f StandaloneServer￨e server￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f ServerEnvironment￨e config￨e =￨e Main￨e .￨e determineEnvironment￨e (￨e args￨e ,￨e props￨e )￨e ;￨e if￨j (￨j config￨c ==￨c null￨c )￨j {￨j abort￨e (￨e null￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j config￨c .￨c isStandalone￨c (￨c )￨c )￨j {￨j <START_BUG>￨b server￨b =￨b new￨b StandaloneServer￨b (￨b config￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j throw￨e new￨e IllegalStateException￨e (￨e )￨e ;￨e }￨j server￨e .￨e start￨e (￨e )￨e ;￨e return￨e server￨e ;￨e }￨j }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f abort￨e (￨e t￨e )￨e ;￨e }￨f return￨e null￨e ;￨e }￨f private￨f void￨f abort￨f (￨f Throwable￨p t￨p )￨f {￨f }￨f public￨f static￨f ServerEnvironment￨f determineEnvironment￨f (￨f String￨p [￨p ]￨p args￨p ,￨p Properties￨p systemProperties￨p )￨f {￨f }￨f private￨f static￨f URL￨f makeURL￨f (￨f String￨f urlspec￨f )￨f throws￨f MalformedURLException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d RungeKuttaIntegrator￨d extends￨d AbstractIntegrator￨d {￨d private￨e final￨e double￨e [￨e ]￨e c￨e ;￨e private￨e final￨e double￨e [￨e ]￨e [￨e ]￨e a￨e ;￨e private￨e final￨e double￨e [￨e ]￨e b￨e ;￨e private￨e final￨e RungeKuttaStepInterpolator￨e prototype￨e ;￨e private￨e final￨e double￨e step￨e ;￨e protected￨f RungeKuttaIntegrator￨f (￨f final￨p String￨p name￨p ,￨p final￨p double￨p [￨p ]￨p c￨p ,￨p final￨p double￨p [￨p ]￨p [￨p ]￨p a￨p ,￨p final￨p double￨p [￨p ]￨p b￨p ,￨p final￨p RungeKuttaStepInterpolator￨p prototype￨p ,￨p final￨p double￨p step￨p )￨f {￨f }￨f public￨f double￨f integrate￨f (￨f final￨f FirstOrderDifferentialEquations￨f equations￨f ,￨f final￨f double￨f t0￨f ,￨f final￨f double￨f [￨f ]￨f y0￨f ,￨f final￨f double￨f t￨f ,￨f final￨f double￨f [￨f ]￨f y￨f )￨f throws￨f DerivativeException￨f ,￨f IntegratorException￨f (￨f )￨f {￨f sanityChecks￨e (￨e equations￨e ,￨e t0￨e ,￨e y0￨e ,￨e t￨e ,￨e y￨e )￨e ;￨e setEquations￨e (￨e equations￨e )￨e ;￨e resetEvaluations￨e (￨e )￨e ;￨e final￨e boolean￨e forward￨e =￨e t￨e >￨e t0￨e ;￨e final￨e int￨e stages￨e =￨e (￨e c￨e .￨e length￨e )￨e +￨e 1￨e ;￨e if￨j (￨j y￨c !=￨c y0￨c )￨j {￨j System￨e .￨e arraycopy￨e (￨e y0￨e ,￨e 0￨e ,￨e y￨e ,￨e 0￨e ,￨e y0￨e .￨e length￨e )￨e ;￨e }￨j final￨e double￨e [￨e ]￨e [￨e ]￨e yDotK￨e =￨e new￨e double￨e [￨e stages￨e ]￨e [￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c stages￨c ;￨c ++￨c i￨c )￨l {￨l yDotK￨e [￨e i￨e ]￨e =￨e new￨e double￨e [￨e y0￨e .￨e length￨e ]￨e ;￨e }￨l final￨e double￨e [￨e ]￨e yTmp￨e =￨e new￨e double￨e [￨e y0￨e .￨e length￨e ]￨e ;￨e AbstractStepInterpolator￨e interpolator￨e ;￨e if￨j (￨j (￨c requiresDenseOutput￨c (￨c )￨c )￨c ||￨c (￨c !￨c (￨c eventsHandlersManager￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨c )￨j {￨j final￨e RungeKuttaStepInterpolator￨e rki￨e =￨e (￨e (￨e RungeKuttaStepInterpolator￨e )￨e (￨e prototype￨e .￨e copy￨e (￨e )￨e )￨e )￨e ;￨e rki￨e .￨e reinitialize￨e (￨e this￨e ,￨e yTmp￨e ,￨e yDotK￨e ,￨e forward￨e )￨e ;￨e interpolator￨e =￨e rki￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b interpolator￨b =￨b new￨b DummyStepInterpolator￨b (￨b yTmp￨b ,￨b forward￨b )￨b ;￨b <END_BUG>￨b }￨j interpolator￨e .￨e storeTime￨e (￨e t0￨e )￨e ;￨e stepStart￨e =￨e t0￨e ;￨e stepSize￨e =￨e (￨e forward￨e )￨e ?￨e step￨e :￨e -￨e (￨e step￨e )￨e ;￨e for￨l (￨l StepHandler￨c handler￨c :￨c stepHandlers￨c )￨l {￨l handler￨e .￨e reset￨e (￨e )￨e ;￨e }￨l CombinedEventsManager￨e manager￨e =￨e addEndTimeChecker￨e (￨e t0￨e ,￨e t￨e ,￨e eventsHandlersManager￨e )￨e ;￨e boolean￨e lastStep￨e =￨e false￨e ;￨e while￨l (￨l !￨c lastStep￨c )￨l {￨l interpolator￨e .￨e shift￨e (￨e )￨e ;￨e for￨l (￨l boolean￨c loop￨c =￨c true￨c ;￨c loop￨c ;￨c )￨l {￨l computeDerivatives￨e (￨e stepStart￨e ,￨e y￨e ,￨e yDotK￨e [￨e 0￨e ]￨e )￨e ;￨e for￨l (￨l int￨c k￨c =￨c 1￨c ;￨c k￨c <￨c stages￨c ;￨c ++￨c k￨c )￨l {￨l for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c y0￨c .￨c length￨c )￨c ;￨c ++￨c j￨c )￨l {￨l double￨e sum￨e =￨e (￨e a￨e [￨e (￨e k￨e -￨e 1￨e )￨e ]￨e [￨e 0￨e ]￨e )￨e *￨e (￨e yDotK￨e [￨e 0￨e ]￨e [￨e j￨e ]￨e )￨e ;￨e for￨l (￨l int￨c l￨c =￨c 1￨c ;￨c l￨c <￨c k￨c ;￨c ++￨c l￨c )￨l {￨l sum￨e +=￨e (￨e a￨e [￨e (￨e k￨e -￨e 1￨e )￨e ]￨e [￨e l￨e ]￨e )￨e *￨e (￨e yDotK￨e [￨e l￨e ]￨e [￨e j￨e ]￨e )￨e ;￨e }￨l yTmp￨e [￨e j￨e ]￨e =￨e (￨e y￨e [￨e j￨e ]￨e )￨e +￨e (￨e (￨e stepSize￨e )￨e *￨e sum￨e )￨e ;￨e }￨l computeDerivatives￨e (￨e (￨e (￨e stepStart￨e )￨e +￨e (￨e (￨e c￨e [￨e (￨e k￨e -￨e 1￨e )￨e ]￨e )￨e *￨e (￨e stepSize￨e )￨e )￨e )￨e ,￨e yTmp￨e ,￨e yDotK￨e [￨e k￨e ]￨e )￨e ;￨e }￨l for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c y0￨c .￨c length￨c )￨c ;￨c ++￨c j￨c )￨l {￨l double￨e sum￨e =￨e (￨e b￨e [￨e 0￨e ]￨e )￨e *￨e (￨e yDotK￨e [￨e 0￨e ]￨e [￨e j￨e ]￨e )￨e ;￨e for￨l (￨l int￨c l￨c =￨c 1￨c ;￨c l￨c <￨c stages￨c ;￨c ++￨c l￨c )￨l {￨l sum￨e +=￨e (￨e b￨e [￨e l￨e ]￨e )￨e *￨e (￨e yDotK￨e [￨e l￨e ]￨e [￨e j￨e ]￨e )￨e ;￨e }￨l yTmp￨e [￨e j￨e ]￨e =￨e (￨e y￨e [￨e j￨e ]￨e )￨e +￨e (￨e (￨e stepSize￨e )￨e *￨e sum￨e )￨e ;￨e }￨l interpolator￨e .￨e storeTime￨e (￨e (￨e (￨e stepStart￨e )￨e +￨e (￨e stepSize￨e )￨e )￨e )￨e ;￨e if￨j (￨j manager￨c .￨c evaluateStep￨c (￨c interpolator￨c )￨c )￨j {￨j final￨e double￨e dt￨e =￨e (￨e manager￨e .￨e getEventTime￨e (￨e )￨e )￨e -￨e (￨e stepStart￨e )￨e ;￨e if￨j (￨j (￨c Math￨c .￨c abs￨c (￨c dt￨c )￨c )￨c <=￨c (￨c Math￨c .￨c ulp￨c (￨c stepStart￨c )￨c )￨c )￨j {￨j loop￨e =￨e false￨e ;￨e }￨j else￨j {￨j stepSize￨e =￨e dt￨e ;￨e }￨j }￨j else￨j {￨j loop￨e =￨e false￨e ;￨e }￨j }￨l final￨e double￨e nextStep￨e =￨e (￨e stepStart￨e )￨e +￨e (￨e stepSize￨e )￨e ;￨e System￨e .￨e arraycopy￨e (￨e yTmp￨e ,￨e 0￨e ,￨e y￨e ,￨e 0￨e ,￨e y0￨e .￨e length￨e )￨e ;￨e manager￨e .￨e stepAccepted￨e (￨e nextStep￨e ,￨e y￨e )￨e ;￨e lastStep￨e =￨e manager￨e .￨e stop￨e (￨e )￨e ;￨e interpolator￨e .￨e storeTime￨e (￨e nextStep￨e )￨e ;￨e for￨l (￨l StepHandler￨c handler￨c :￨c stepHandlers￨c )￨l {￨l handler￨e .￨e handleStep￨e (￨e interpolator￨e ,￨e lastStep￨e )￨e ;￨e }￨l stepStart￨e =￨e nextStep￨e ;￨e if￨j (￨j (￨c manager￨c .￨c reset￨c (￨c stepStart￨c ,￨c y￨c )￨c )￨c &&￨c (￨c !￨c lastStep￨c )￨c )￨j {￨j computeDerivatives￨e (￨e stepStart￨e ,￨e y￨e ,￨e yDotK￨e [￨e 0￨e ]￨e )￨e ;￨e }￨j stepSize￨e =￨e (￨e forward￨e )￨e ?￨e step￨e :￨e -￨e (￨e step￨e )￨e ;￨e }￨l final￨e double￨e stopTime￨e =￨e stepStart￨e ;￨e stepStart￨e =￨e Double￨e .￨e NaN￨e ;￨e stepSize￨e =￨e Double￨e .￨e NaN￨e ;￨e return￨e stopTime￨e ;￨e }￨f }￨d
public￨d class￨d CleanDatabaseTestSetup￨d extends￨d BaseJDBCTestSetup￨d {￨d public￨f CleanDatabaseTestSetup￨f (￨f Test￨p test￨p )￨f {￨f }￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f decorateSQL￨f (￨f Statement￨f s￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f cleanDatabase￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f static￨f final￨f String￨f [￨f ]￨f CLEAR_DB_PROPERTIES￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f void￨f clearProperties￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f removeObjects￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f DatabaseMetaData￨e dmd￨e =￨e conn￨e .￨e getMetaData￨e (￨e )￨e ;￨e SQLException￨e sqle￨e =￨e null￨e ;￨e for￨l (￨l int￨c count￨c =￨c 0￨c ;￨c count￨c <￨c 5￨c ;￨c count￨c ++￨c )￨l {￨l List￨e schemas￨e =￨e new￨e ArrayList￨e (￨e )￨e ;￨e ResultSet￨e rs￨e =￨e dmd￨e .￨e getSchemas￨e (￨e )￨e ;￨e while￨l (￨l rs￨c .￨c next￨c (￨c )￨c )￨l {￨l String￨e schema￨e =￨e rs￨e .￨e getString￨e (￨e "TABLE_SCHEM"￨e )￨e ;￨e if￨j (￨j schema￨c .￨c startsWith￨c (￨c "SYS"￨c )￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j schema￨c .￨c equals￨c (￨c "SQLJ"￨c )￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j schema￨c .￨c equals￨c (￨c "NULLID"￨c )￨c )￨j {￨j continue￨e ;￨e }￨j schemas￨e .￨e add￨e (￨e schema￨e )￨e ;￨e }￨l rs￨e .￨e close￨e (￨e )￨e ;￨e sqle￨e =￨e null￨e ;￨e for￨l (￨l Iterator￨c i￨c =￨c schemas￨c .￨c iterator￨c (￨c )￨c ;￨c i￨c .￨c hasNext￨c (￨c )￨c ;￨c )￨l {￨l String￨e schema￨e =￨e (￨e (￨e String￨e )￨e (￨e i￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f JDBC￨e .￨e dropSchema￨e (￨e dmd￨e ,￨e schema￨e )￨e ;￨e }￨f catch￨f (￨f SQLException￨p e￨p )￨f {￨f <START_BUG>￨b sqle￨b =￨b null￨b ;￨b <END_BUG>￨b }￨f }￨l if￨j (￨j sqle￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j }￨l throw￨e sqle￨e ;￨e }￨f private￨f static￨f final￨f String￨f [￨f ]￨f COMPRESS_DB_OBJECTS￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨f static￨f void￨f compressObjects￨f (￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Test_org_eclipse_swt_widgets_TableItem￨d extends￨d Test_org_eclipse_swt_widgets_Item￨d {￨d public￨f Test_org_eclipse_swt_widgets_TableItem￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f protected￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f test_ConstructorLorg_eclipse_swt_widgets_TableI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_ConstructorLorg_eclipse_swt_widgets_TableII￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getBackground￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getBackgroundI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getBoundsI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getChecked￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getFont￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getFontI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getForeground￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getForegroundI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getGrayed￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getImageBoundsI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getImageI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getImageIndent￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getParent￨f (￨f )￨f {￨f }￨f public￨f void￨f test_getTextI￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setBackgroundILorg_eclipse_swt_graphics_Color￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setBackgroundLorg_eclipse_swt_graphics_Color￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setCheckedZ￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setFontLorg_eclipse_swt_graphics_Font￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setFontILorg_eclipse_swt_graphics_Font￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setForegroundILorg_eclipse_swt_graphics_Color￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setForegroundLorg_eclipse_swt_graphics_Color￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setGrayedZ￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setImage$Lorg_eclipse_swt_graphics_Image￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setImageILorg_eclipse_swt_graphics_Image￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setImageIndentI￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b SwtJunit￨b .￨b isCarbon￨b )￨b ||￨b (￨b SwtJunit￨b .￨b isGTK￨b )￨b )￨b {￨b <END_BUG>￨b tableItem￨e .￨e setImageIndent￨e (￨e 1￨e )￨e ;￨e return￨e ;￨e }￨e assertEquals￨e (￨e 0￨e ,￨e tableItem￨e .￨e getImageIndent￨e (￨e )￨e )￨e ;￨e tableItem￨e .￨e setImageIndent￨e (￨e 1￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e tableItem￨e .￨e getImageIndent￨e (￨e )￨e )￨e ;￨e tableItem￨e .￨e setImageIndent￨e (￨e (￨e -￨e 1￨e )￨e )￨e ;￨e assertEquals￨e (￨e 1￨e ,￨e tableItem￨e .￨e getImageIndent￨e (￨e )￨e )￨e ;￨e }￨f public￨f void￨f test_setText$Ljava_lang_String￨f (￨f )￨f {￨f }￨f public￨f void￨f test_setTextILjava_lang_String￨f (￨f )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f public￨f static￨f Vector￨f methodNames￨f (￨f )￨f {￨f }￨f protected￨f void￨f runTest￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f Table￨e table￨e ;￨e TableItem￨e tableItem￨e ;￨e private￨f void￨f makeCleanEnvironment￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d BehavioralFeature￨d extends￨d Feature￨d {￨d public￨e boolean￨e _isQuery￨e ;￨e public￨e Vector￨e _parameter￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e public￨e Vector￨e _raisedException￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e public￨f BehavioralFeature￨f (￨f )￨f {￨f }￨f public￨f BehavioralFeature￨f (￨f Name￨p name￨p )￨f {￨f }￨f public￨f BehavioralFeature￨f (￨f String￨p nameStr￨p )￨f {￨f }￨f public￨f boolean￨f getIsQuery￨f (￨f )￨f {￨f }￨f public￨f void￨f setIsQuery￨f (￨f boolean￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f Classifier￨f getReturnType￨f (￨f )￨f {￨f }￨f public￨f void￨f setReturnType￨f (￨f Classifier￨f rt￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f Parameter￨e p￨e =￨e findParameter￨e (￨e RETURN_NAME￨e )￨e ;￨e if￨j (￨j p￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b p￨b =￨b new￨b Parameter￨b (￨b rt￨b ,￨b Parameter￨b .￨b RETURN_NAME￨b )￨b ;￨b <END_BUG>￨b addParameter￨e (￨e p￨e )￨e ;￨e }￨j else￨j {￨j p￨e .￨e setType￨e (￨e rt￨e )￨e ;￨e }￨j }￨f public￨f Parameter￨f findParameter￨f (￨f Name￨p n￨p )￨f {￨f }￨f public￨f Vector￨f getParameter￨f (￨f )￨f {￨f }￨f public￨f void￨f setParameter￨f (￨f Vector￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f void￨f addParameter￨f (￨f Parameter￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f void￨f removeParameter￨f (￨f Parameter￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f Vector￨f getRaisedException￨f (￨f )￨f {￨f }￨f public￨f void￨f setRaisedException￨f (￨f Vector￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f void￨f addRaisedException￨f (￨f MMException￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f public￨f void￨f removeRaisedException￨f (￨f MMException￨f x￨f )￨f throws￨f PropertyVetoException￨f (￨f )￨f {￨f }￨f static￨e final￨e long￨e serialVersionUID￨e =￨e 7697916359219415113L￨e ;￨e }￨d
public￨d class￨d ArgoFileFilter￨d extends￨d FileFilter￨d {￨d public￨f boolean￨f accept￨f (￨f File￨p f￨p )￨f {￨f }￨f public￨f String￨f getExtension￨f (￨f File￨p f￨p )￨f {￨f }￨f public￨f String￨f getDescription￨f (￨f )￨f {￨f <START_BUG>￨b return￨b "Argo<seq2seq4repair_space>v0.3.1<seq2seq4repair_space>native<seq2seq4repair_space>file<seq2seq4repair_space>type"￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d ExpandItem￨d extends￨d Item￨d {￨d ExpandBar￨e parent￨e ;￨e Control￨e control￨e ;￨e boolean￨e expanded￨e ;￨e boolean￨e hover￨e ;￨e int￨e x￨e ;￨e int￨e y￨e ;￨e int￨e width￨e ;￨e int￨e height￨e ;￨e int￨e imageHeight￨e ;￨e int￨e imageWidth￨e ;￨e static￨e final￨e int￨e TEXT_INSET￨e =￨e 6￨e ;￨e static￨e final￨e int￨e BORDER￨e =￨e 1￨e ;￨e static￨e final￨e int￨e CHEVRON_SIZE￨e =￨e 24￨e ;￨e public￨f ExpandItem￨f (￨f ExpandBar￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f ExpandItem￨f (￨f ExpandBar￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p index￨p )￨f {￨f }￨f static￨f ExpandBar￨f checkNull￨f (￨f ExpandBar￨p control￨p )￨f {￨f }￨f private￨f void￨f drawChevron￨f (￨f int￨p hDC￨p ,￨p RECT￨p rect￨p )￨f {￨f }￨f void￨f drawItem￨f (￨f GC￨p gc￨p ,￨p int￨p hTheme￨p ,￨p RECT￨p clipRect￨p ,￨p boolean￨p drawFocus￨p )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f public￨f Control￨f getControl￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getExpanded￨f (￨f )￨f {￨f }￨f public￨f int￨f getHeaderHeight￨f (￨f )￨f {￨f }￨f public￨f int￨f getHeight￨f (￨f )￨f {￨f }￨f public￨f ExpandBar￨f getParent￨f (￨f )￨f {￨f }￨f int￨f getPreferredWidth￨f (￨f int￨p hTheme￨p ,￨p int￨p hDC￨p )￨f {￨f }￨f void￨f redraw￨f (￨f boolean￨p all￨p )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f void￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p size￨p )￨f {￨f }￨f public￨f void￨f setControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f public￨f void￨f setExpanded￨f (￨f boolean￨p expanded￨p )￨f {￨f checkWidget￨e (￨e )￨e ;￨e this￨e .￨e expanded￨e =￨e expanded￨e ;￨e <START_BUG>￨b parent￨b .￨b showItem￨b (￨b parent￨b .￨b indexOf￨b (￨b this￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f setHeight￨f (￨f int￨p height￨p )￨f {￨f }￨f public￨f void￨f setImage￨f (￨f Image￨p image￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f }￨d
public￨d containsValue￨f (￨f Value￨p map￨p ,￨p Value￨p arg￨p )￨f {￨f }￨f public￨f Expression￨f isInstance￨f (￨f Value￨p val￨p ,￨p Class￨p c￨p )￨f {￨f }￨f public￨f Expression￨f and￨f (￨f Expression￨p exp1￨p ,￨p Expression￨p exp2￨p )￨f {￨f }￨f public￨f Expression￨f or￨f (￨f Expression￨p exp1￨p ,￨p Expression￨p exp2￨p )￨f {￨f }￨f public￨f Expression￨f not￨f (￨f Expression￨p exp￨p )￨f {￨f }￨f public￨f Expression￨f bindVariable￨f (￨f Value￨p var￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Expression￨f bindKeyVariable￨f (￨f Value￨p var￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Expression￨f bindValueVariable￨f (￨f Value￨p var￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Expression￨f startsWith￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Expression￨f endsWith￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Expression￨f notMatches￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p ,￨p String￨p single￨p ,￨p String￨p multi￨p ,￨p String￨p esc￨p )￨f {￨f }￨f public￨f Expression￨f matches￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p ,￨p String￨p single￨p ,￨p String￨p multi￨p ,￨p String￨p esc￨p )￨f {￨f }￨f public￨f Subquery￨f newSubquery￨f (￨f ClassMetaData￨p candidate￨p ,￨p boolean￨p subs￨p ,￨p String￨p alias￨p )￨f {￨f }￨f public￨f Path￨f newPath￨f (￨f )￨f {￨f }￨f public￨f Path￨f newPath￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Literal￨f newLiteral￨f (￨f Object￨p val￨p ,￨p int￨p ptype￨p )￨f {￨f }￨f public￨f Literal￨f newTypeLiteral￨f (￨f Object￨p val￨p ,￨p int￨p ptype￨p )￨f {￨f }￨f public￨f Value￨f getThis￨f (￨f )￨f {￨f }￨f public￨f Value￨f getNull￨f (￨f )￨f {￨f }￨f public￨f <￨f T￨f extends￨f Date￨f >￨f Value￨f getCurrentDate￨f (￨f Class￨p <￨p T￨p >￨p dateType￨p )￨f {￨f }￨f public￨f <￨f T￨f extends￨f Date￨f >￨f Value￨f getCurrentTime￨f (￨f Class￨p <￨p T￨p >￨p dateType￨p )￨f {￨f }￨f public￨f <￨f T￨f extends￨f Date￨f >￨f Value￨f getCurrentTimestamp￨f (￨f Class￨p <￨p T￨p >￨p dateType￨p )￨f {￨f }￨f public￨f Parameter￨f newParameter￨f (￨f Object￨p name￨p ,￨p Class￨p type￨p )￨f {￨f }￨f public￨f Parameter￨f newCollectionValuedParameter￨f (￨f Object￨p key￨p ,￨p Class￨p type￨p )￨f {￨f }￨f public￨f Value￨f newExtension￨f (￨f FilterListener￨p listener￨p ,￨p Value￨p target￨p ,￨p Value￨p arg￨p )￨f {￨f }￨f public￨f Value￨f newAggregate￨f (￨f AggregateListener￨p listener￨p ,￨p Value￨p arg￨p )￨f {￨f }￨f public￨f Arguments￨f newArgumentList￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Arguments￨f newArgumentList￨f (￨f Value￨p ...￨p vs￨p )￨f {￨f }￨f public￨f Value￨f newUnboundVariable￨f (￨f String￨p name￨p ,￨p Class￨p type￨p )￨f {￨f }￨f public￨f Value￨f newBoundVariable￨f (￨f String￨p name￨p ,￨p Class￨p type￨p )￨f {￨f }￨f public￨f Value￨f cast￨f (￨f Value￨p val￨p ,￨p Class￨p cls￨p )￨f {￨f }￨f public￨f Value￨f add￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f subtract￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f multiply￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f divide￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f mod￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f abs￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f indexOf￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f concat￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f stringLength￨f (￨f Value￨p str￨p )￨f {￨f }￨f public￨f Value￨f trim￨f (￨f Value￨p str￨p ,￨p Value￨p trimChar￨p ,￨p Boolean￨p where￨p )￨f {￨f }￨f public￨f Value￨f sqrt￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f substring￨f (￨f Value￨p v1￨p ,￨p Value￨p v2￨p )￨f {￨f }￨f public￨f Value￨f toUpperCase￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f toLowerCase￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f avg￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f count￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f distinct￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f max￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f min￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f sum￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f any￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f all￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f size￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f index￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f type￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f mapEntry￨f (￨f Value￨p key￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f mapKey￨f (￨f Value￨p key￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f getKey￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f getObjectId￨f (￨f Value￨p val￨p )￨f {￨f }￨f public￨f Value￨f getMapValue￨f (￨f Value￨p map￨p ,￨p Value￨p arg￨p )￨f {￨f }￨f private￨f Value￨f getLiteralRawString￨f (￨f Value￨p val￨p )￨f {￨f if￨j (￨j val￨c instanceof￨c Lit￨c )￨j {￨j Lit￨e lit￨e =￨e (￨e (￨e Lit￨e )￨e (￨e val￨e )￨e )￨e ;￨e <START_BUG>￨b StringBuffer￨b value￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b int￨e pType￨e =￨e lit￨e .￨e getParseType￨e (￨e )￨e ;￨e if￨j (￨j (￨c pType￨c ==￨c (￨c Literal￨c .￨c TYPE_SQ_STRING￨c )￨c )￨c ||￨c (￨c pType￨c ==￨c (￨c Literal￨c .￨c TYPE_STRING￨c )￨c )￨c )￨j {￨j value￨e .￨e append￨e (￨e "'"￨e )￨e .￨e append￨e (￨e lit￨e .￨e getValue￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e .￨e append￨e (￨e "'"￨e )￨e ;￨e }￨j else￨j if￨j (￨j pType￨c ==￨c (￨c Literal￨c .￨c TYPE_BOOLEAN￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c Boolean￨c )￨c (￨c lit￨c .￨c getValue￨c (￨c )￨c )￨c )￨c )￨j {￨j value￨e .￨e append￨e (￨e "1"￨e )￨e ;￨e }￨j else￨j {￨j value￨e .￨e append￨e (￨e "0"￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j pType￨c ==￨c (￨c Literal￨c .￨c TYPE_ENUM￨c )￨c )￨j {￨j lit￨e .￨e setRaw￨e (￨e true￨e )￨e ;￨e return￨e val￨e ;￨e }￨j else￨j {￨j value￨e .￨e append￨e (￨e lit￨e .￨e getValue￨e (￨e )￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨j lit￨e .￨e setValue￨e (￨e new￨e Raw￨e (￨e value￨e .￨e toString￨e (￨e )￨e )￨e )￨e ;￨e return￨e lit￨e ;￨e }￨j return￨e val￨e ;￨e }￨f public￨f Value￨f simpleCaseExpression￨f (￨f Value￨p caseOperand￨p ,￨p Expression￨p [￨p ]￨p exp￨p ,￨p Value￨p val1￨p )￨f {￨f }￨f public￨f Value￨f generalCaseExpression￨f (￨f Expression￨p [￨p ]￨p exp￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Expression￨f whenCondition￨f (￨f Expression￨p exp￨p ,￨p Value￨p val￨p )￨f {￨f }￨f public￨f Expression￨f whenScalar￨f (￨f Value￨p val1￨p ,￨p Value￨p val2￨p )￨f {￨f }￨f public￨f Value￨f coalesceExpression￨f (￨f Value￨p [￨p ]￨p vals￨p )￨f {￨f }￨f public￨f Value￨f nullIfExpression￨f (￨f Value￨p val1￨p ,￨p Value￨p val2￨p )￨f {￨f }￨f public￨f Value￨f newFunction￨f (￨f String￨p functionName￨p ,￨p Class￨p <￨p ?￨p >￨p resultType￨p ,￨p Value￨p ...￨p args￨p )￨f {￨f }￨f }￨d
public￨d class￨d IncomingStreamReader￨d {￨d private￨d static￨d final￨d Logger￨d logger￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d IncomingStreamReader￨d .￨d class￨d )￨d ;￨d protected￨d final￨d PendingFile￨d localFile￨d ;￨d protected￨d final￨d PendingFile￨d remoteFile￨d ;￨d protected￨d final￨d StreamInSession￨d session￨d ;￨d private￨d final￨d Socket￨d socket￨d ;￨d public￨d IncomingStreamReader￨d (￨d StreamHeader￨d header￨d ,￨d Socket￨d socket￨d )￨d throws￨d IOException￨d {￨d }￨d public￨f void￨f read￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f SSTableReader￨f streamIn￨f (￨f DataInput￨f input￨f ,￨f PendingFile￨f localFile￨f ,￨f PendingFile￨f remoteFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f ColumnFamilyStore￨e cfs￨e =￨e Table￨e .￨e open￨e (￨e localFile￨e .￨e desc￨e .￨e ksname￨e )￨e .￨e getColumnFamilyStore￨e (￨e localFile￨e .￨e desc￨e .￨e cfname￨e )￨e ;￨e DecoratedKey￨e key￨e ;￨e SSTableWriter￨e writer￨e =￨e new￨e SSTableWriter￨e (￨e localFile￨e .￨e getFilename￨e (￨e )￨e ,￨e remoteFile￨e .￨e estimatedKeys￨e )￨e ;￨e CompactionController￨e controller￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f BytesReadTracker￨e in￨e =￨e new￨e BytesReadTracker￨e (￨e input￨e )￨e ;￨e for￨l (￨l Pair￨c <￨c Long￨c ,￨c Long￨c >￨c section￨c :￨c localFile￨c .￨c sections￨c )￨l {￨l long￨e length￨e =￨e (￨e section￨e .￨e right￨e )￨e -￨e (￨e section￨e .￨e left￨e )￨e ;￨e long￨e bytesRead￨e =￨e 0￨e ;￨e while￨l (￨l bytesRead￨c <￨c length￨c )￨l {￨l <START_BUG>￨b in￨b .￨b reset￨b (￨b )￨b ;￨b <END_BUG>￨b key￨e =￨e SSTableReader￨e .￨e decodeKey￨e (￨e StorageService￨e .￨e getPartitioner￨e (￨e )￨e ,￨e localFile￨e .￨e desc￨e ,￨e ByteBufferUtil￨e .￨e readWithShortLength￨e (￨e in￨e )￨e )￨e ;￨e long￨e dataSize￨e =￨e SSTableReader￨e .￨e readRowSize￨e (￨e in￨e ,￨e localFile￨e .￨e desc￨e )￨e ;￨e ColumnFamily￨e cf￨e =￨e null￨e ;￨e if￨j (￨j cfs￨c .￨c metadata￨c .￨c getDefaultValidator￨c (￨c )￨c .￨c isCommutative￨c (￨c )￨c )￨j {￨j if￨j (￨j controller￨c ==￨c null￨c )￨j {￨j controller￨e =￨e new￨e CompactionController￨e (￨e cfs￨e ,￨e Collections￨e .￨e <￨e SSTableReader￨e >￨e emptyList￨e (￨e )￨e ,￨e Integer￨e .￨e MAX_VALUE￨e ,￨e true￨e )￨e ;￨e }￨j SSTableIdentityIterator￨e iter￨e =￨e new￨e SSTableIdentityIterator￨e (￨e cfs￨e .￨e metadata￨e ,￨e in￨e ,￨e key￨e ,￨e 0￨e ,￨e dataSize￨e ,￨e true￨e )￨e ;￨e AbstractCompactedRow￨e row￨e =￨e controller￨e .￨e getCompactedRow￨e (￨e iter￨e )￨e ;￨e writer￨e .￨e append￨e (￨e row￨e )￨e ;￨e writer￨e .￨e updateMaxTimestamp￨e (￨e row￨e .￨e maxTimestamp￨e (￨e )￨e )￨e ;￨e if￨j (￨j row￨c instanceof￨c PrecompactedRow￨c )￨j {￨j cf￨e =￨e (￨e (￨e PrecompactedRow￨e )￨e (￨e row￨e )￨e )￨e .￨e getFullColumnFamily￨e (￨e )￨e ;￨e }￨j }￨j else￨j {￨j IndexHelper￨e .￨e skipBloomFilter￨e (￨e in￨e )￨e ;￨e IndexHelper￨e .￨e skipIndex￨e (￨e in￨e )￨e ;￨e cf￨e =￨e ColumnFamily￨e .￨e create￨e (￨e cfs￨e .￨e metadata￨e )￨e ;￨e ColumnFamily￨e .￨e serializer￨e (￨e )￨e .￨e deserializeFromSSTableNoColumns￨e (￨e cf￨e ,￨e in￨e )￨e ;￨e ColumnFamily￨e .￨e serializer￨e (￨e )￨e .￨e deserializeColumns￨e (￨e in￨e ,￨e cf￨e ,￨e true￨e ,￨e true￨e )￨e ;￨e writer￨e .￨e append￨e (￨e key￨e ,￨e cf￨e )￨e ;￨e }￨j ColumnFamily￨e cached￨e =￨e cfs￨e .￨e getRawCachedRow￨e (￨e key￨e )￨e ;￨e if￨j (￨j cached￨c !=￨c null￨c )￨j {￨j switch￨s (￨s remoteFile￨c .￨c type￨c )￨s {￨s case￨c AES￨c :￨c if￨j (￨j dataSize￨c >￨c (￨c DatabaseDescriptor￨c .￨c getInMemoryCompactionLimit￨c (￨c )￨c )￨c )￨j {￨j IncomingStreamReader￨e .￨e logger￨e .￨e warn￨e (￨e "Found<seq2seq4repair_space>a<seq2seq4repair_space>cached<seq2seq4repair_space>row<seq2seq4repair_space>over<seq2seq4repair_space>the<seq2seq4repair_space>in<seq2seq4repair_space>memory<seq2seq4repair_space>compaction<seq2seq4repair_space>limit<seq2seq4repair_space>during<seq2seq4repair_space>post-streaming<seq2seq4repair_space>rebuilt;<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>highly<seq2seq4repair_space>recommended<seq2seq4repair_space>to<seq2seq4repair_space>avoid<seq2seq4repair_space>huge<seq2seq4repair_space>row<seq2seq4repair_space>on<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>with<seq2seq4repair_space>row<seq2seq4repair_space>cache<seq2seq4repair_space>enabled."￨e )￨e ;￨e cfs￨e .￨e invalidateCachedRow￨e (￨e key￨e )￨e ;￨e }￨j else￨j {￨j assert￨e cf￨e !=￨e null￨e ;￨e cfs￨e .￨e updateRowCache￨e (￨e key￨e ,￨e cf￨e )￨e ;￨e }￨j break￨e ;￨e default￨c :￨c cfs￨e .￨e invalidateCachedRow￨e (￨e key￨e )￨e ;￨e break￨e ;￨e }￨s }￨j bytesRead￨e +=￨e in￨e .￨e getBytesRead￨e (￨e )￨e ;￨e remoteFile￨e .￨e progress￨e +=￨e in￨e .￨e getBytesRead￨e (￨e )￨e ;￨e }￨l }￨l return￨e writer￨e .￨e closeAndOpenReader￨e (￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f writer￨e .￨e cleanupIfNecessary￨e (￨e )￨e ;￨e }￨f }￨f private￨f void￨f retry￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Label￨d {￨d public￨e CodeStream￨e codeStream￨e ;￨e static￨e final￨e int￨e POS_NOT_SET￨e =￨e -￨e 1￨e ;￨e public￨e int￨e position￨e =￨e Label￨e .￨e POS_NOT_SET￨e ;￨e int￨e [￨e ]￨e forwardReferences￨e =￨e new￨e int￨e [￨e 10￨e ]￨e ;￨e int￨e forwardReferenceCount￨e =￨e 0￨e ;￨e private￨e boolean￨e isWide￨e =￨e false￨e ;￨e public￨f Label￨f (￨f )￨f {￨f }￨f public￨f Label￨f (￨f CodeStream￨p codeStream￨p )￨f {￨f }￨f void￨f addForwardReference￨f (￨f int￨p iPos￨p )￨f {￨f }￨f void￨f appendForwardReferencesFrom￨f (￨f Label￨p otherLabel￨p )￨f {￨f }￨f void￨f branch￨f (￨f )￨f {￨f }￨f void￨f branchWide￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasForwardReferences￨f (￨f )￨f {￨f }￨f public￨f void￨f inlineForwardReferencesFromLabelsTargeting￨f (￨f int￨p gotoLocation￨p )￨f {￨f }￨f public￨f boolean￨f isStandardLabel￨f (￨f )￨f {￨f }￨f public￨f void￨f place￨f (￨f )￨f {￨f if￨j (￨j (￨c position￨c )￨c ==￨c (￨c Label￨c .￨c POS_NOT_SET￨c )￨c )￨j {￨j position￨e =￨e codeStream￨e .￨e position￨e ;￨e codeStream￨e .￨e addLabel￨e (￨e this￨e )￨e ;￨e int￨e oldPosition￨e =￨e position￨e ;￨e boolean￨e optimizedBranch￨e =￨e false￨e ;￨e if￨j (￨j (￨c forwardReferenceCount￨c )￨c !=￨c 0￨c )￨j {￨j if￨j (￨j optimizedBranch￨c =￨c (￨c (￨c (￨c forwardReferences￨c [￨c (￨c (￨c forwardReferenceCount￨c )￨c -￨c 1￨c )￨c ]￨c )￨c +￨c 2￨c )￨c ==￨c (￨c position￨c )￨c )￨c &&￨c (￨c (￨c codeStream￨c .￨c bCodeStream￨c [￨c (￨c (￨c codeStream￨c .￨c classFileOffset￨c )￨c -￨c 3￨c )￨c ]￨c )￨c ==￨c (￨c OPC_goto￨c )￨c )￨c )￨j {￨j codeStream￨e .￨e position￨e =￨e position￨e -=￨e 3￨e ;￨e codeStream￨e .￨e classFileOffset￨e -=￨e 3￨e ;￨e (￨e forwardReferenceCount￨e )￨e --￨e ;￨e int￨e index￨e =￨e (￨e codeStream￨e .￨e pcToSourceMapSize￨e )￨e -￨e 2￨e ;￨e if￨j (￨j (￨c codeStream￨c .￨c lastEntryPC￨c )￨c ==￨c oldPosition￨c )￨j {￨j codeStream￨e .￨e lastEntryPC￨e =￨e position￨e ;￨e }￨j if￨j (￨j (￨c index￨c >=￨c 0￨c )￨c &&￨c (￨c (￨c codeStream￨c .￨c pcToSourceMap￨c [￨c index￨c ]￨c )￨c ==￨c (￨c position￨c )￨c )￨c )￨j {￨j codeStream￨e .￨e pcToSourceMapSize￨e -=￨e 2￨e ;￨e }￨j if￨j (￨j codeStream￨c .￨c generateLocalVariableTableAttributes￨c )￨j {￨j LocalVariableBinding￨e [￨e ]￨e locals￨e =￨e codeStream￨e .￨e locals￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c locals￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l LocalVariableBinding￨e local￨e =￨e locals￨e [￨e i￨e ]￨e ;￨e if￨j (￨j (￨c local￨c !=￨c null￨c )￨c &&￨c (￨c (￨c local￨c .￨c initializationCount￨c )￨c >￨c 0￨c )￨c )￨j {￨j if￨j (￨j (￨c local￨c .￨c initializationPCs￨c [￨c (￨c (￨c (￨c (￨c local￨c .￨c initializationCount￨c )￨c -￨c 1￨c )￨c <<￨c 1￨c )￨c +￨c 1￨c )￨c ]￨c )￨c ==￨c oldPosition￨c )￨j {￨j if￨j (￨j (￨c local￨c .￨c initializationPCs￨c [￨c (￨c (￨c (￨c local￨c .￨c initializationCount￨c )￨c -￨c 1￨c )￨c <<￨c 1￨c )￨c ]￨c )￨c ==￨c oldPosition￨c )￨j {￨j local￨e .￨e initializationPCs￨e [￨e (￨e (￨e (￨e local￨e .￨e initializationCount￨e )￨e -￨e 1￨e )￨e <<￨e 1￨e )￨e ]￨e =￨e position￨e ;￨e }￨j local￨e .￨e initializationPCs￨e [￨e (￨e (￨e (￨e (￨e local￨e .￨e initializationCount￨e )￨e -￨e 1￨e )￨e <<￨e 1￨e )￨e +￨e 1￨e )￨e ]￨e =￨e position￨e ;￨e }￨j }￨j }￨l }￨j }￨j }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c forwardReferenceCount￨c )￨c ;￨c i￨c ++￨c )￨l {￨l int￨e offset￨e =￨e (￨e (￨e position￨e )￨e -￨e (￨e forwardReferences￨e [￨e i￨e ]￨e )￨e )￨e +￨e 1￨e ;￨e if￨j (￨j (￨c offset￨c >￨c 32767￨c )￨c &&￨c (￨c !￨c (￨c this￨c .￨c codeStream￨c .￨c wideMode￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b AbortMethod￨b (￨b null￨b )￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j this￨c .￨c codeStream￨c .￨c wideMode￨c )￨j {￨j if￨j (￨j this￨c .￨c isWide￨c )￨j {￨j codeStream￨e .￨e writeSignedWord￨e (￨e forwardReferences￨e [￨e i￨e ]￨e ,￨e offset￨e )￨e ;￨e }￨j else￨j {￨j codeStream￨e .￨e writeSignedShort￨e (￨e forwardReferences￨e [￨e i￨e ]￨e ,￨e (￨e (￨e short￨e )￨e (￨e offset￨e )￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j codeStream￨e .￨e writeSignedShort￨e (￨e forwardReferences￨e [￨e i￨e ]￨e ,￨e (￨e (￨e short￨e )￨e (￨e offset￨e )￨e )￨e )￨e ;￨e }￨j }￨l if￨j (￨j optimizedBranch￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c codeStream￨c .￨c countLabels￨c )￨c ;￨c i￨c ++￨c )￨l {￨l Label￨e label￨e =￨e codeStream￨e .￨e labels￨e [￨e i￨e ]￨e ;￨e if￨j (￨j oldPosition￨c ==￨c (￨c label￨c .￨c position￨c )￨c )￨j {￨j label￨e .￨e position￨e =￨e position￨e ;￨e if￨j (￨j label￨c instanceof￨c CaseLabel￨c )￨j {￨j int￨e offset￨e =￨e (￨e position￨e )￨e -￨e (￨e (￨e (￨e CaseLabel￨e )￨e (￨e label￨e )￨e )￨e .￨e instructionPosition￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c label￨c .￨c forwardReferenceCount￨c )￨c ;￨c j￨c ++￨c )￨l {￨l int￨e forwardPosition￨e =￨e label￨e .￨e forwardReferences￨e [￨e j￨e ]￨e ;￨e codeStream￨e .￨e writeSignedWord￨e (￨e forwardPosition￨e ,￨e offset￨e )￨e ;￨e }￨l }￨j else￨j {￨j for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c label￨c .￨c forwardReferenceCount￨c )￨c ;￨c j￨c ++￨c )￨l {￨l int￨e forwardPosition￨e =￨e label￨e .￨e forwardReferences￨e [￨e j￨e ]￨e ;￨e int￨e offset￨e =￨e (￨e (￨e position￨e )￨e -￨e forwardPosition￨e )￨e +￨e 1￨e ;￨e if￨j (￨j (￨c offset￨c >￨c 32767￨c )￨c &&￨c (￨c !￨c (￨c this￨c .￨c codeStream￨c .￨c wideMode￨c )￨c )￨c )￨j {￨j throw￨e new￨e AbortMethod￨e (￨e CodeStream￨e .￨e RESTART_IN_WIDE_MODE￨e )￨e ;￨e }￨j if￨j (￨j this￨c .￨c codeStream￨c .￨c wideMode￨c )￨j {￨j if￨j (￨j this￨c .￨c isWide￨c )￨j {￨j codeStream￨e .￨e writeSignedWord￨e (￨e forwardPosition￨e ,￨e offset￨e )￨e ;￨e }￨j else￨j {￨j codeStream￨e .￨e writeSignedShort￨e (￨e forwardPosition￨e ,￨e (￨e (￨e short￨e )￨e (￨e offset￨e )￨e )￨e )￨e ;￨e }￨j }￨j else￨j {￨j codeStream￨e .￨e writeSignedShort￨e (￨e forwardPosition￨e ,￨e (￨e (￨e short￨e )￨e (￨e offset￨e )￨e )￨e )￨e ;￨e }￨j }￨l }￨j }￨j }￨l }￨j }￨j }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f resetStateForCodeGeneration￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Assert￨d {￨d protected￨f Assert￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f assertTrue￨f (￨f String￨p message￨p ,￨p boolean￨p condition￨p )￨f {￨f }￨f public￨f static￨f void￨f assertTrue￨f (￨f boolean￨p condition￨p )￨f {￨f }￨f public￨f static￨f void￨f assertFalse￨f (￨f String￨p message￨p ,￨p boolean￨p condition￨p )￨f {￨f }￨f public￨f static￨f void￨f assertFalse￨f (￨f boolean￨p condition￨p )￨f {￨f }￨f public￨f static￨f void￨f fail￨f (￨f String￨p message￨p )￨f {￨f }￨f public￨f static￨f void￨f fail￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p String￨p expected￨p ,￨p String￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p expected￨p ,￨p String￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f double￨p expected￨p ,￨p double￨p actual￨p ,￨p double￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p float￨p expected￨p ,￨p float￨p actual￨p ,￨p float￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f float￨p expected￨p ,￨p float￨p actual￨p ,￨p float￨p delta￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p long￨p expected￨p ,￨p long￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f long￨p expected￨p ,￨p long￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p boolean￨p expected￨p ,￨p boolean￨p actual￨p )￨f {￨f <START_BUG>￨b Assert￨b .￨b assertEquals￨b (￨b message￨b ,￨b new￨b Boolean￨b (￨b expected￨b )￨b ,￨b new￨b Boolean￨b (￨b actual￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f void￨f assertEquals￨f (￨f boolean￨p expected￨p ,￨p boolean￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p byte￨p expected￨p ,￨p byte￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f byte￨p expected￨p ,￨p byte￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p char￨p expected￨p ,￨p char￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f char￨p expected￨p ,￨p char￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p short￨p expected￨p ,￨p short￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f short￨p expected￨p ,￨p short￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f String￨p message￨p ,￨p int￨p expected￨p ,￨p int￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertEquals￨f (￨f int￨p expected￨p ,￨p int￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNotNull￨f (￨f Object￨p object￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNotNull￨f (￨f String￨p message￨p ,￨p Object￨p object￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNull￨f (￨f Object￨p object￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNull￨f (￨f String￨p message￨p ,￨p Object￨p object￨p )￨f {￨f }￨f public￨f static￨f void￨f assertSame￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertSame￨f (￨f Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNotSame￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f public￨f static￨f void￨f assertNotSame￨f (￨f Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f private￨f static￨f void￨f failSame￨f (￨f String￨p message￨p )￨f {￨f }￨f private￨f static￨f void￨f failNotSame￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f private￨f static￨f void￨f failNotEquals￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f static￨f String￨f format￨f (￨f String￨p message￨p ,￨p Object￨p expected￨p ,￨p Object￨p actual￨p )￨f {￨f }￨f }￨d
public￨d class￨d InitBinderDataBinderFactory￨d extends￨d DefaultDataBinderFactory￨d {￨d private￨e final￨e List￨e <￨e InvocableHandlerMethod￨e >￨e binderMethods￨e ;￨e public￨f InitBinderDataBinderFactory￨f (￨f List￨p <￨p InvocableHandlerMethod￨p >￨p binderMethods￨p ,￨p WebBindingInitializer￨p initializer￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f initBinder￨f (￨f WebDataBinder￨f binder￨f ,￨f NativeWebRequest￨f request￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f for￨l (￨l InvocableHandlerMethod￨c binderMethod￨c :￨c this￨c .￨c binderMethods￨c )￨l {￨l if￨j (￨j !￨c (￨c isBinderMethodApplicable￨c (￨c binderMethod￨c ,￨c binder￨c )￨c )￨c )￨j {￨j continue￨e ;￨e }￨j Object￨e returnValue￨e =￨e binderMethod￨e .￨e invokeForRequest￨e (￨e request￨e ,￨e null￨e ,￨e binder￨e )￨e ;￨e if￨j (￨j returnValue￨c !=￨c null￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b IllegalStateException￨b (￨b (￨b "This<seq2seq4repair_space>@InitBinder<seq2seq4repair_space>method<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>return<seq2seq4repair_space>void:<seq2seq4repair_space>"￨b +￨b binderMethod￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l }￨f protected￨f boolean￨f isBinderMethodApplicable￨f (￨f HandlerMethod￨p binderMethod￨p ,￨p WebDataBinder￨p binder￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestSynchronizedCollection￨d <￨d E￨d >￨d extends￨d AbstractTestCollection￨d <￨d E￨d >￨d {￨d public￨f TestSynchronizedCollection￨f (￨f String￨p testName￨p )￨f {￨f }￨f @￨f Override￨f public￨f Collection￨f <￨f E￨f >￨f makeObject￨f (￨f )￨f {￨f <START_BUG>￨b return￨b SynchronizedCollection￨b .￨b decorate￨b (￨b new￨b ArrayList￨b <￨b E￨b >￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f Collection￨f <￨f E￨f >￨f makeConfirmedCollection￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Collection￨f <￨f E￨f >￨f makeConfirmedFullCollection￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getCompatibilityVersion￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Recorder￨d <￨d T￨d >￨d extends￨d HiddenField￨d <￨d Object￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e static￨e final￨e String￨e [￨e ]￨e EMPTY_IDS￨e =￨e new￨e String￨e [￨e 0￨e ]￨e ;￨e private￨e String￨e [￨e ]￨e ids￨e ;￨e private￨e final￨e Palette￨e <￨e T￨e >￨e palette￨e ;￨e private￨e boolean￨e attached￨e =￨e false￨e ;￨e public￨f Palette￨f <￨f T￨f >￨f getPalette￨f (￨f )￨f {￨f }￨f public￨f Recorder￨f (￨f String￨p id￨p ,￨p Palette￨p <￨p T￨p >￨p palette￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onBeforeRender￨f (￨f )￨f {￨f }￨f private￨f void￨f initIds￨f (￨f )￨f {￨f IChoiceRenderer￨e <￨e T￨e >￨e renderer￨e =￨e getPalette￨e (￨e )￨e .￨e getChoiceRenderer￨e (￨e )￨e ;￨e <START_BUG>￨b StringBuffer￨b modelStringBuffer￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b Collection￨e <￨e T￨e >￨e modelCollection￨e =￨e getPalette￨e (￨e )￨e .￨e getModelCollection￨e (￨e )￨e ;￨e if￨j (￨j modelCollection￨c ==￨c null￨c )￨j {￨j throw￨e new￨e WicketRuntimeException￨e (￨e (￨e "Expected<seq2seq4repair_space>getPalette().getModelCollection()<seq2seq4repair_space>to<seq2seq4repair_space>return<seq2seq4repair_space>a<seq2seq4repair_space>non-null<seq2seq4repair_space>value."￨e +￨e "<seq2seq4repair_space>Please<seq2seq4repair_space>make<seq2seq4repair_space>sure<seq2seq4repair_space>you<seq2seq4repair_space>have<seq2seq4repair_space>model<seq2seq4repair_space>object<seq2seq4repair_space>assigned<seq2seq4repair_space>to<seq2seq4repair_space>the<seq2seq4repair_space>palette"￨e )￨e )￨e ;￨e }￨j Iterator￨e <￨e T￨e >￨e selection￨e =￨e modelCollection￨e .￨e iterator￨e (￨e )￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e while￨l (￨l selection￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l modelStringBuffer￨e .￨e append￨e (￨e renderer￨e .￨e getIdValue￨e (￨e selection￨e .￨e next￨e (￨e )￨e ,￨e (￨e i￨e ++￨e )￨e )￨e )￨e ;￨e if￨j (￨j selection￨c .￨c hasNext￨c (￨c )￨c )￨j {￨j modelStringBuffer￨e .￨e append￨e (￨e ","￨e )￨e ;￨e }￨j }￨l String￨e modelString￨e =￨e modelStringBuffer￨e .￨e toString￨e (￨e )￨e ;￨e setDefaultModel￨e (￨e new￨e org￨e .￨e apache￨e .￨e wicket￨e .￨e model￨e .￨e Model￨e <￨e String￨e >￨e (￨e modelString￨e )￨e )￨e ;￨e updateIds￨e (￨e modelString￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f void￨f onValid￨f (￨f )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f Iterator￨f <￨f T￨f >￨f getSelectedChoices￨f (￨f )￨f {￨f }￨f public￨f Iterator￨f <￨f T￨f >￨f getUnselectedChoices￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onInvalid￨f (￨f )￨f {￨f }￨f private￨f void￨f updateIds￨f (￨f )￨f {￨f }￨f private￨f void￨f updateIds￨f (￨f String￨p value￨p )￨f {￨f }￨f }￨d
public￨d class￨d BinaryMemtable￨d implements￨d IFlushable￨d <￨d DecoratedKey￨d >￨d {￨d private￨d static￨d Logger￨d logger_￨d =￨d Logger￨d .￨d getLogger￨d (￨d BinaryMemtable￨d .￨d class￨d )￨d ;￨d private￨d int￨d threshold_￨d =￨d (￨d (￨d DatabaseDescriptor￨d .￨d getBMTThreshold￨d (￨d )￨d )￨d *￨d 1024￨d )￨d *￨d 1024￨d ;￨d private￨d AtomicInteger￨d currentSize_￨d =￨d new￨d AtomicInteger￨d (￨d 0￨d )￨d ;￨d private￨d String￨d table_￨d ;￨d private￨d String￨d cfName_￨d ;￨d private￨d boolean￨d isFrozen_￨d =￨d false￨d ;￨d private￨d Map￨d <￨d DecoratedKey￨d ,￨d byte￨d [￨d ]￨d >￨d columnFamilies_￨d =￨d new￨d org￨d .￨d cliffc￨d .￨d high_scale_lib￨d .￨d NonBlockingHashMap￨d <￨d DecoratedKey￨d ,￨d byte￨d [￨d ]￨d >￨d (￨d )￨d ;￨d Lock￨d lock_￨d =￨d new￨d ReentrantLock￨d (￨d )￨d ;￨d Condition￨d condition_￨d ;￨d private￨d final￨d IPartitioner￨d partitioner_￨d =￨d StorageService￨d .￨d getPartitioner￨d (￨d )￨d ;￨d BinaryMemtable￨d (￨d String￨d table￨d ,￨d String￨d cfName￨d )￨d throws￨d IOException￨d {￨d }￨d public￨f int￨f getMemtableThreshold￨f (￨f )￨f {￨f }￨f void￨f resolveSize￨f (￨f int￨p oldSize￨p ,￨p int￨p newSize￨p )￨f {￨f }￨f boolean￨f isThresholdViolated￨f (￨f )￨f {￨f }￨f String￨f getColumnFamily￨f (￨f )￨f {￨f }￨f void￨f put￨f (￨f String￨f key￨f ,￨f byte￨f [￨f ]￨f buffer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f resolve￨f (￨f String￨p key￨p ,￨p byte￨p [￨p ]￨p buffer￨p )￨f {￨f }￨f public￨f List￨f <￨f DecoratedKey￨f >￨f getSortedKeys￨f (￨f )￨f {￨f }￨f public￨f SSTableReader￨f writeSortedContents￨f (￨f List￨f <￨f DecoratedKey￨f >￨f sortedKeys￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f BinaryMemtable￨e .￨e logger_￨e .￨e info￨e (￨e (￨e "Writing<seq2seq4repair_space>"￨e +￨e (￨e this￨e )￨e )￨e )￨e ;￨e ColumnFamilyStore￨e cfStore￨e =￨e Table￨e .￨e open￨e (￨e table_￨e )￨e .￨e getColumnFamilyStore￨e (￨e cfName_￨e )￨e ;￨e String￨e path￨e =￨e cfStore￨e .￨e getTempSSTablePath￨e (￨e )￨e ;￨e SSTableWriter￨e writer￨e =￨e new￨e SSTableWriter￨e (￨e path￨e ,￨e sortedKeys￨e .￨e size￨e (￨e )￨e ,￨e StorageService￨e .￨e getPartitioner￨e (￨e )￨e )￨e ;￨e for￨l (￨l DecoratedKey￨c key￨c :￨c sortedKeys￨c )￨l {￨l byte￨e [￨e ]￨e bytes￨e =￨e columnFamilies_￨e .￨e get￨e (￨e key￨e )￨e ;￨e assert￨e (￨e bytes￨e .￨e length￨e )￨e >￨e 0￨e ;￨e writer￨e .￨e append￨e (￨e key￨e ,￨e bytes￨e )￨e ;￨e }￨l <START_BUG>￨b SSTableReader￨b sstable￨b =￨b writer￨b .￨b closeAndOpenReader￨b (￨b )￨b ;￨b <END_BUG>￨b BinaryMemtable￨e .￨e logger_￨e .￨e info￨e (￨e (￨e "Completed<seq2seq4repair_space>flushing<seq2seq4repair_space>"￨e +￨e (￨e writer￨e .￨e getFilename￨e (￨e )￨e )￨e )￨e )￨e ;￨e return￨e sstable￨e ;￨e }￨f }￨d
public￨d final￨d class￨d HtmlHandler￨d extends￨d AbstractMarkupFilter￨d {￨d private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d HtmlHandler￨d .￨d class￨d )￨d ;￨d private￨d final￨d ArrayListStack￨d <￨d ComponentTag￨d >￨d stack￨d =￨d new￨d ArrayListStack￨d <￨d ComponentTag￨d >￨d (￨d )￨d ;￨d private￨d static￨d final￨d Map￨d <￨d String￨d ,￨d Boolean￨d >￨d doesNotRequireCloseTag￨d =￨d new￨d HashMap￨d <￨d String￨d ,￨d Boolean￨d >￨d (￨d )￨d ;￨d public￨d HtmlHandler￨d (￨d )￨d {￨d }￨d public￨f MarkupElement￨f nextTag￨f (￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f <START_BUG>￨b final￨b ComponentTag￨b tag￨b =￨b (￨b (￨b ComponentTag￨b )￨b (￨b getParent￨b (￨b )￨b .￨b nextTag￨b (￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j tag￨c ==￨c null￨c )￨j {￨j while￨l (￨l (￨c stack￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨l {￨l final￨e ComponentTag￨e top￨e =￨e stack￨e .￨e peek￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c HtmlHandler￨c .￨c requiresCloseTag￨c (￨c top￨c .￨c getName￨c (￨c )￨c )￨c )￨c )￨j {￨j stack￨e .￨e pop￨e (￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e org￨e .￨e apache￨e .￨e wicket￨e .￨e markup￨e .￨e WicketParseException￨e (￨e "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag:"￨e ,￨e top￨e )￨e ;￨e }￨j }￨l return￨e tag￨e ;￨e }￨j if￨j (￨j HtmlHandler￨c .￨c log￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j HtmlHandler￨e .￨e log￨e .￨e debug￨e (￨e (￨e (￨e (￨e "tag:<seq2seq4repair_space>"￨e +￨e (￨e tag￨e .￨e toUserDebugString￨e (￨e )￨e )￨e )￨e +￨e ",<seq2seq4repair_space>stack:<seq2seq4repair_space>"￨e )￨e +￨e (￨e stack￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j tag￨c .￨c isOpen￨c (￨c )￨c )￨j {￨j stack￨e .￨e push￨e (￨e tag￨e )￨e ;￨e }￨j else￨j if￨j (￨j tag￨c .￨c isClose￨c (￨c )￨c )￨j {￨j if￨j (￨j (￨c stack￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j ComponentTag￨e top￨e =￨e stack￨e .￨e pop￨e (￨e )￨e ;￨e boolean￨e mismatch￨e =￨e !￨e (￨e top￨e .￨e hasEqualTagName￨e (￨e tag￨e )￨e )￨e ;￨e if￨j (￨j mismatch￨c )￨j {￨j top￨e .￨e setHasNoCloseTag￨e (￨e true￨e )￨e ;￨e while￨l (￨l mismatch￨c &&￨c (￨c !￨c (￨c HtmlHandler￨c .￨c requiresCloseTag￨c (￨c top￨c .￨c getName￨c (￨c )￨c )￨c )￨c )￨c )￨l {￨l top￨e .￨e setHasNoCloseTag￨e (￨e true￨e )￨e ;￨e if￨j (￨j stack￨c .￨c isEmpty￨c (￨c )￨c )￨j {￨j break￨e ;￨e }￨j top￨e =￨e stack￨e .￨e pop￨e (￨e )￨e ;￨e mismatch￨e =￨e !￨e (￨e top￨e .￨e hasEqualTagName￨e (￨e tag￨e )￨e )￨e ;￨e }￨l if￨j (￨j mismatch￨c )￨j {￨j throw￨e new￨e ParseException￨e (￨e (￨e (￨e (￨e "Tag<seq2seq4repair_space>"￨e +￨e (￨e top￨e .￨e toUserDebugString￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>has<seq2seq4repair_space>a<seq2seq4repair_space>mismatched<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>at<seq2seq4repair_space>"￨e )￨e +￨e (￨e tag￨e .￨e toUserDebugString￨e (￨e )￨e )￨e )￨e ,￨e top￨e .￨e getPos￨e (￨e )￨e )￨e ;￨e }￨j }￨j tag￨e .￨e setOpenTag￨e (￨e top￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e org￨e .￨e apache￨e .￨e wicket￨e .￨e markup￨e .￨e WicketParseException￨e (￨e "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>matching<seq2seq4repair_space>open<seq2seq4repair_space>tag:"￨e ,￨e tag￨e )￨e ;￨e }￨j }￨j else￨j if￨j (￨j tag￨c .￨c isOpenClose￨c (￨c )￨c )￨j {￨j tag￨e .￨e setOpenTag￨e (￨e tag￨e )￨e ;￨e }￨j return￨e tag￨e ;￨e }￨f public￨f static￨f boolean￨f requiresCloseTag￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestIndexReaderReopen￨d extends￨d LuceneTestCase￨d {￨d private￨e File￨e indexDir￨e ;￨e public￨f void￨f testReopen￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testParallelReaderReopen￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testCommitReopenFS￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testCommitRecreateFS￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testCommitReopenRAM￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testCommitRecreateRAM￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestReopenWithCommit￨f (￨f Random￨f random￨f ,￨f Directory￨f dir￨f ,￨f boolean￨f withReopen￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testMultiReaderReopen￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testMixedReaders￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f performDefaultTests￨f (￨f TestIndexReaderReopen￨f .￨f TestReopen￨f test￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testReferenceCounting￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testReferenceCountingMultiReader￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testReferenceCountingParallelReader￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f testNormsRefCounting￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f performTestsWithExceptionInReopen￨f (￨f TestIndexReaderReopen￨f .￨f TestReopen￨f test￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testThreadSafety￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d ReaderCouple￨d {￨d ReaderCouple￨f (￨f IndexReader￨p r1￨p ,￨p IndexReader￨p r2￨p )￨f {￨f }￨f IndexReader￨e newReader￨e ;￨e IndexReader￨e refreshedReader￨e ;￨e }￨d private￨d abstract￨d static￨d class￨d ReaderThreadTask￨d {￨d protected￨e volatile￨e boolean￨e stopped￨e ;￨e public￨f void￨f stop￨f (￨f )￨f {￨f }￨f public￨f abstract￨f void￨f run￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d ReaderThread￨d extends￨d Thread￨d {￨d private￨e TestIndexReaderReopen￨e .￨e ReaderThreadTask￨e task￨e ;￨e private￨e Throwable￨e error￨e ;￨e ReaderThread￨f (￨f TestIndexReaderReopen￨p .￨p ReaderThreadTask￨p task￨p )￨f {￨f }￨f public￨f void￨f stopThread￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f run￨f (￨f )￨f {￨f }￨f }￨d private￨e Object￨e createReaderMutex￨e =￨e new￨e Object￨e (￨e )￨e ;￨e private￨f TestIndexReaderReopen￨f .￨f ReaderCouple￨f refreshReader￨f (￨f IndexReader￨f reader￨f ,￨f boolean￨f hasChanges￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f TestIndexReaderReopen￨f .￨f ReaderCouple￨f refreshReader￨f (￨f IndexReader￨f reader￨f ,￨f TestIndexReaderReopen￨f .￨f TestReopen￨f test￨f ,￨f int￨f modify￨f ,￨f boolean￨f hasChanges￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f createIndex￨f (￨f Random￨f random￨f ,￨f Directory￨f dir￨f ,￨f boolean￨f multiSegment￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Document￨f createDocument￨f (￨f int￨p n￨p ,￨p int￨p numFields￨p )￨f {￨f }￨f static￨f void￨f modifyIndex￨f (￨f int￨f i￨f ,￨f Directory￨f dir￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f assertReaderClosed￨f (￨f IndexReader￨p reader￨p ,￨p boolean￨p checkSubReaders￨p ,￨p boolean￨p checkNormsClosed￨p )￨f {￨f }￨f private￨f void￨f assertRefCountEquals￨f (￨f int￨p refCount￨p ,￨p IndexReader￨p reader￨p )￨f {￨f }￨f private￨d abstract￨d static￨d class￨d TestReopen￨d {￨d protected￨f abstract￨f IndexReader￨f openReader￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f void￨f modifyIndex￨f (￨f int￨f i￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d @￨f Override￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e <START_BUG>￨b indexDir￨b =￨b new￨b File￨b (￨b TEMP_DIR￨b ,￨b "IndexReaderReopen"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testCloseOrig￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f public￨f void￨f testDeletes￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f public￨f void￨f testDeletes2￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d KeepAllCommits￨d implements￨d IndexDeletionPolicy￨d {￨d public￨f void￨f onInit￨f (￨f List￨p <￨p ?￨p extends￨p IndexCommit￨p >￨p commits￨p )￨f {￨f }￨f public￨f void￨f onCommit￨f (￨f List￨p <￨p ?￨p extends￨p IndexCommit￨p >￨p commits￨p )￨f {￨f }￨f }￨d public￨f void￨f testReopenOnCommit￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d DiscoveryTest￨d extends￨d AbstractDiscoveryTest￨d {￨d protected￨e IServiceInfo￨e serviceInfo￨e ;￨e protected￨e IServiceInfo￨e serviceInfo2￨e ;￨e protected￨e IServiceInfo￨e serviceInfo3￨e ;￨e protected￨e String￨e containerUnderTest￨e ;￨e protected￨e long￨e waitTimeForProvider￨e =￨e 1000￨e ;￨e protected￨e Comparator￨e comparator￨e =￨e new￨e ServiceInfoComparator￨e (￨e )￨e ;￨e private￨e String￨e protocol￨e =￨e PROTOCOL￨e ;￨e private￨e String￨e scope￨e =￨e SCOPE￨e ;￨e private￨e String￨e namingAuthority￨e =￨e NAMINGAUTHORITY￨e ;￨e protected￨e IContainer￨e container￨e =￨e null￨e ;￨e protected￨e IDiscoveryContainerAdapter￨e discoveryContainer￨e =￨e null￨e ;￨e public￨f DiscoveryTest￨f (￨f String￨p name￨p )￨f {￨f }￨f protected￨f IDiscoveryContainerAdapter￨f getAdapter￨f (￨f Class￨p clazz￨p )￨f {￨f }￨f protected￨f IServiceID￨f createServiceID￨f (￨f String￨f serviceType￨f ,￨f String￨f serviceName￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f registerService￨f (￨f IServiceInfo￨f serviceInfo￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f unregisterService￨f (￨f IServiceInfo￨f serviceInfo￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f setWaitTimeForProvider￨f (￨f long￨p aWaitTimeForProvider￨p )￨f {￨f }￨f protected￨f void￨f setComparator￨f (￨f Comparator￨p comparator￨p )￨f {￨f }￨f protected￨f void￨f setProtocol￨f (￨f String￨p protocol￨p )￨f {￨f }￨f protected￨f void￨f setScope￨f (￨f String￨p scope￨p )￨f {￨f }￨f protected￨f void￨f setNamingAuthority￨f (￨f String￨p namingAuthority￨p )￨f {￨f }￨f protected￨f String￨f getServiceType￨f (￨f )￨f {￨f }￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e assertNotNull￨e (￨e containerUnderTest￨e )￨e ;￨e assertTrue￨e (￨e containerUnderTest￨e .￨e startsWith￨e (￨e "ecf.discovery."￨e )￨e )￨e ;￨e container￨e =￨e ContainerFactory￨e .￨e getDefault￨e (￨e )￨e .￨e createContainer￨e (￨e containerUnderTest￨e )￨e ;￨e discoveryContainer￨d =￨d getAdapter￨d (￨d IDiscoveryContainerAdapter￨d .￨d class￨d )￨d ;￨d assertNotNull￨d (￨d container￨d )￨d ;￨d assertNotNull￨d (￨d discoveryContainer￨d )￨d ;￨d final￨d Properties￨d props￨d =￨d new￨d Properties￨d (￨d )￨d ;￨d final￨d URI￨d uri￨d =￨d createDefaultURI￨d (￨d )￨d ;￨d IServiceID￨d serviceID￨d =￨d (￨d (￨d IServiceID￨d )￨d (￨d IDFactory￨d .￨d getDefault￨d (￨d )￨d .￨d createID￨d (￨d discoveryContainer￨d .￨d getServicesNamespace￨d (￨d )￨d ,￨d new￨d Object￨d [￨d ]￨d {￨d }￨d )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e serviceID￨e )￨e ;￨e final￨e ServiceProperties￨e serviceProperties￨e =￨e new￨e ServiceProperties￨e (￨e props￨e )￨e ;￨e serviceProperties￨d .￨d setPropertyString￨d (￨d (￨d (￨d DiscoveryTest￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "servicePropertiesString"￨d )￨d ,￨d "serviceProperties"￨d )￨d ;￨d serviceProperties￨d .￨d setProperty￨d (￨d (￨d (￨d DiscoveryTest￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "servicePropertiesIntegerMax"￨d )￨d ,￨d new￨d Integer￨d (￨d Integer￨d .￨d MIN_VALUE￨d )￨d )￨d ;￨d serviceProperties￨d .￨d setProperty￨d (￨d (￨d (￨d DiscoveryTest￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "servicePropertiesIntegerMin"￨d )￨d ,￨d new￨d Integer￨d (￨d Integer￨d .￨d MAX_VALUE￨d )￨d )￨d ;￨d serviceProperties￨d .￨d setProperty￨d (￨d (￨d (￨d DiscoveryTest￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "servicePropertiesBoolean"￨d )￨d ,￨d new￨d Boolean￨d (￨d false￨d )￨d )￨d ;￨d <START_BUG>￨d serviceProperties￨d .￨d setPropertyBytes￨d (￨d (￨d (￨d DiscoveryTest￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d +￨d "servicePropertiesByte"￨d )￨d ,￨d new￨d byte￨d [￨d ]￨d {￨d }￨d )￨e ;￨e <END_BUG>￨e serviceInfo￨e =￨e new￨e org￨e .￨e eclipse￨e .￨e ecf￨e .￨e discovery￨e .￨e ServiceInfo￨e (￨e uri￨e ,￨e serviceID￨e ,￨e 1￨e ,￨e 1￨e ,￨e serviceProperties￨e )￨e ;￨e assertNotNull￨e (￨e serviceInfo￨e )￨e ;￨e IServiceID￨f serviceID2￨f =￨f (￨f (￨f IServiceID￨f )￨f (￨f IDFactory￨f .￨f getDefault￨f (￨f )￨f .￨f createID￨f (￨f discoveryContainer￨f .￨f getServicesNamespace￨f (￨f )￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e serviceID￨e )￨e ;￨e final￨e ServiceProperties￨e serviceProperties2￨e =￨e new￨e ServiceProperties￨e (￨e props￨e )￨e ;￨e serviceProperties2￨e .￨e setPropertyString￨e (￨e "serviceProperties2"￨e ,￨e "serviceProperties2"￨e )￨e ;￨e serviceInfo2￨e =￨e new￨e org￨e .￨e eclipse￨e .￨e ecf￨e .￨e discovery￨e .￨e ServiceInfo￨e (￨e uri￨e ,￨e serviceID2￨e ,￨e 2￨e ,￨e 2￨e ,￨e serviceProperties2￨e )￨e ;￨e assertNotNull￨e (￨e serviceInfo2￨e )￨e ;￨e IServiceID￨f serviceID3￨f =￨f (￨f (￨f IServiceID￨f )￨f (￨f IDFactory￨f .￨f getDefault￨f (￨f )￨f .￨f createID￨f (￨f discoveryContainer￨f .￨f getServicesNamespace￨f (￨f )￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e serviceID￨e )￨e ;￨e final￨e ServiceProperties￨e serviceProperties3￨e =￨e new￨e ServiceProperties￨e (￨e props￨e )￨e ;￨e serviceProperties3￨e .￨e setPropertyString￨e (￨e "serviceProperties3"￨e ,￨e "serviceProperties3"￨e )￨e ;￨e serviceInfo3￨e =￨e new￨e org￨e .￨e eclipse￨e .￨e ecf￨e .￨e discovery￨e .￨e ServiceInfo￨e (￨e uri￨e ,￨e serviceID3￨e ,￨e 3￨e ,￨e 3￨e ,￨e serviceProperties3￨e )￨e ;￨e assertNotNull￨e (￨e serviceInfo3￨e )￨e ;￨e }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f registerService￨f (￨f )￨f {￨f }￨f protected￨f void￨f unregisterService￨f (￨f )￨f {￨f }￨f public￨f void￨f testConnect￨f (￨f )￨f {￨f }￨f public￨f void￨f testConnectTwoTimes￨f (￨f )￨f {￨f }￨f public￨f void￨f testDisconnect￨f (￨f )￨f {￨f }￨f public￨f void￨f testReconnect￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServiceInfo￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServiceInfoWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServiceTypes￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServices￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServicesIServiceTypeID￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServicesIServiceTypeIDWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegisterService￨f (￨f )￨f {￨f }￨f public￨f void￨f testRegisterServiceWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnregisterService￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnregisterServiceWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testDispose￨f (￨f )￨f {￨f }￨f protected￨f void￨f addServiceListener￨f (￨f TestListener￨p serviceListener￨p )￨f {￨f }￨f public￨f void￨f testAddServiceListenerIServiceListener￨f (￨f )￨f {￨f }￨f public￨f void￨f testAddServiceListenerIServiceListenerWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testAddServiceListenerIServiceTypeIDIServiceListener￨f (￨f )￨f {￨f }￨f private￨f void￨f addListenerRegisterAndWait￨f (￨f TestListener￨p testServiceListener￨p ,￨p IServiceInfo￨p aServiceInfo￨p )￨f {￨f }￨f public￨f void￨f testAddServiceListenerIServiceTypeIDIServiceListenerWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testAddServiceTypeListener￨f (￨f )￨f {￨f }￨f protected￨f IServiceTypeListener￨f createServiceTypeListener￨f (￨f )￨f {￨f }￨f public￨f void￨f testAddServiceTypeListenerWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetConnectNamespace￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetID￨f (￨f )￨f {￨f }￨f public￨f void￨f testGetServicesNamespace￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceListenerIServiceListener￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceListenerIServiceListenerWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceListenerIServiceTypeIDIServiceListener￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceListenerIServiceTypeIDIServiceListenerWithNull￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceTypeListener￨f (￨f )￨f {￨f }￨f public￨f void￨f testRemoveServiceTypeListenerWithNull￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Resources￨d extends￨d DataType￨d implements￨d ResourceCollection￨d {￨d public￨f static￨f final￨f ResourceCollection￨f NONE￨f =￨f new￨f ResourceCollection￨f (￨f )￨f {￨f public￨f boolean￨f isFilesystemOnly￨f (￨f )￨f {￨f }￨f public￨f Iterator￨f iterator￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f }￨f ;￨e public￨f static￨f final￨f Iterator￨f EMPTY_ITERATOR￨f =￨f new￨f Iterator￨f (￨f )￨f {￨f public￨f Object￨f next￨f (￨f )￨f {￨f }￨f public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f )￨f {￨f }￨f }￨f ;￨e private￨d class￨d MyCollection￨d extends￨d AbstractCollection￨d {￨d private￨e int￨e size￨e ;￨e MyCollection￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f Iterator￨f iterator￨f (￨f )￨f {￨f }￨f private￨d class￨d MyIterator￨d implements￨d Iterator￨d {￨d private￨e Iterator￨e rci￨e =￨e getNested￨e (￨e )￨e .￨e iterator￨e (￨e )￨e ;￨e private￨e Iterator￨e ri￨e =￨e null￨e ;￨e public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f public￨f Object￨f next￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f )￨f {￨f }￨f }￨d }￨d private￨e Vector￨e rc￨e ;￨e private￨e Collection￨e coll￨e ;￨e public￨f synchronized￨f void￨f add￨f (￨f ResourceCollection￨p c￨p )￨f {￨f }￨f public￨f synchronized￨f Iterator￨f iterator￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isFilesystemOnly￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f String￨f toString￨f (￨f )￨f {￨f }￨f protected￨f void￨f dieOnCircularReference￨f (￨f Stack￨f stk￨f ,￨f Project￨f p￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f if￨j (￨j isChecked￨c (￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j isReference￨c (￨c )￨c )￨j {￨j super￨e .￨e dieOnCircularReference￨e (￨e stk￨e ,￨e p￨e )￨e ;￨e }￨j else￨j {￨j for￨l (￨l Iterator￨c i￨c =￨c getNested￨c (￨c )￨c .￨c iterator￨c (￨c )￨c ;￨c i￨c .￨c hasNext￨c (￨c )￨c ;￨c )￨l {￨l Object￨e o￨e =￨e i￨e .￨e next￨e (￨e )￨e ;￨e if￨j (￨j o￨c instanceof￨c DataType￨c )￨j {￨j <START_BUG>￨b invokeCircularReferenceCheck￨b (￨b (￨b (￨b DataType￨b )￨b (￨b o￨b )￨b )￨b ,￨b stk￨b ,￨b p￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l setChecked￨e (￨e true￨e )￨e ;￨e }￨j }￨f protected￨f void￨f invalidateExistingIterators￨f (￨f )￨f {￨f }￨f private￨f ResourceCollection￨f getRef￨f (￨f )￨f {￨f }￨f private￨f synchronized￨f void￨f validate￨f (￨f )￨f {￨f }￨f private￨f synchronized￨f List￨f getNested￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TestTimeLimitingCollector￨d extends￨d LuceneTestCase￨d {￨d private￨e static￨e final￨e int￨e SLOW_DOWN￨e =￨e 3￨e ;￨e private￨e static￨e final￨e long￨e TIME_ALLOWED￨e =￨e 17￨e *￨e (￨e TestTimeLimitingCollector￨e .￨e SLOW_DOWN￨e )￨e ;￨e private￨e static￨e final￨e double￨e MULTI_THREAD_SLACK￨e =￨e 7￨e ;￨e private￨e static￨e final￨e int￨e N_DOCS￨e =￨e 3000￨e ;￨e private￨e static￨e final￨e int￨e N_THREADS￨e =￨e 50￨e ;￨e private￨e Searcher￨e searcher￨e ;￨e private￨e Directory￨e directory￨e ;￨e private￨e IndexReader￨e reader￨e ;￨e private￨e final￨e String￨e FIELD_NAME￨e =￨e "body"￨e ;￨e private￨e Query￨e query￨e ;￨e @￨f Override￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e final￨f String￨f [￨f ]￨f docText￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e directory￨e =￨e newDirectory￨e (￨e )￨e ;￨e <START_BUG>￨b RandomIndexWriter￨b iw￨b =￨b new￨b RandomIndexWriter￨b (￨b random￨b ,￨b directory￨b )￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c TestTimeLimitingCollector￨c .￨c N_DOCS￨c )￨c ;￨c i￨c ++￨c )￨l {￨l add￨e (￨e docText￨e [￨e (￨e i￨e %￨e (￨e docText￨e .￨e length￨e )￨e )￨e ]￨e ,￨e iw￨e )￨e ;￨e }￨l reader￨e =￨e iw￨e .￨e getReader￨e (￨e )￨e ;￨e iw￨e .￨e close￨e (￨e )￨e ;￨e searcher￨e =￨e newSearcher￨e (￨e reader￨e )￨e ;￨e String￨e qtxt￨e =￨e "one"￨e ;￨e for￨l (￨l int￨c i￨c =￨c 1￨c ;￨c i￨c <￨c (￨c docText￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l qtxt￨e +=￨e '<seq2seq4repair_space>'￨e +￨e (￨e docText￨e [￨e i￨e ]￨e )￨e ;￨e }￨l QueryParser￨e queryParser￨e =￨e new￨e QueryParser￨e (￨e TEST_VERSION_CURRENT￨e ,￨e FIELD_NAME￨e ,￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e analysis￨e .￨e MockAnalyzer￨e (￨e random￨e )￨e )￨e ;￨e query￨e =￨e queryParser￨e .￨e parse￨e (￨e qtxt￨e )￨e ;￨e searcher￨e .￨e search￨e (￨e query￨e ,￨e null￨e ,￨e 1000￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f add￨f (￨f String￨f value￨f ,￨f RandomIndexWriter￨f iw￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f search￨f (￨f Collector￨f collector￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearch￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestSearch￨f (￨f )￨f {￨f }￨f private￨f Collector￨f createTimedCollector￨f (￨f TestTimeLimitingCollector￨p .￨p MyHitCollector￨p hc￨p ,￨p long￨p timeAllowed￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f public￨f void￨f testTimeoutGreedy￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutNotGreedy￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestTimeout￨f (￨f boolean￨p multiThreaded￨p ,￨p boolean￨p greedy￨p )￨f {￨f }￨f private￨f long￨f maxTime￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f private￨f String￨f maxTimeStr￨f (￨f boolean￨p multiThreaded￨p )￨f {￨f }￨f public￨f void￨f testModifyResolution￨f (￨f )￨f {￨f }￨f public￨f void￨f testSearchMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testTimeoutMultiThreaded￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f void￨f doTestMultiThreads￨f (￨f final￨f boolean￨f withTimeout￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨d class￨d MyHitCollector￨d extends￨d Collector￨d {￨d private￨e final￨e BitSet￨e bits￨e =￨e new￨e BitSet￨e (￨e )￨e ;￨e private￨e int￨e slowdown￨e =￨e 0￨e ;￨e private￨e int￨e lastDocCollected￨e =￨e -￨e 1￨e ;￨e private￨e int￨e docBase￨e =￨e 0￨e ;￨e public￨f void￨f setSlowDown￨f (￨f int￨p milliseconds￨p )￨f {￨f }￨f public￨f int￨f hitCount￨f (￨f )￨f {￨f }￨f public￨f int￨f getLastDocCollected￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setScorer￨f (￨f Scorer￨f scorer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f collect￨f (￨f final￨f int￨f doc￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f setNextReader￨f (￨f IndexReader￨p reader￨p ,￨p int￨p base￨p )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f acceptsDocsOutOfOrder￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d WizardNewFileCreationPage￨d extends￨d WizardPage￨d implements￨d Listener￨d {￨d private￨e static￨e final￨e int￨e SIZING_CONTAINER_GROUP_HEIGHT￨e =￨e 250￨e ;￨e private￨e IStructuredSelection￨e currentSelection￨e ;￨e private￨e IFile￨e newFile￨e ;￨e private￨e IPath￨e linkTargetPath￨e ;￨e private￨e String￨e initialFileName￨e ;￨e private￨e IPath￨e initialContainerFullPath￨e ;￨e private￨e Composite￨e topLevel￨e ;￨e private￨e ResourceAndContainerGroup￨e resourceGroup￨e ;￨e private￨e Button￨e advancedButton￨e ;￨e private￨e CreateLinkedResourceGroup￨e linkedResourceGroup￨e ;￨e public￨f WizardNewFileCreationPage￨f (￨f String￨p pageName￨p ,￨p IStructuredSelection￨p selection￨p )￨f {￨f }￨f protected￨f void￨f createAdvancedControls￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f public￨f void￨f createControl￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f protected￨f void￨f createFile￨f (￨f IFile￨f fileHandle￨f ,￨f InputStream￨f contents￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f protected￨f IFile￨f createFileHandle￨f (￨f IPath￨p filePath￨p )￨f {￨f }￨f protected￨f void￨f createLinkTarget￨f (￨f )￨f {￨f }￨f public￨f IFile￨f createNewFile￨f (￨f )￨f {￨f }￨f public￨f IPath￨f getContainerFullPath￨f (￨f )￨f {￨f }￨f public￨f String￨f getFileName￨f (￨f )￨f {￨f }￨f protected￨f InputStream￨f getInitialContents￨f (￨f )￨f {￨f }￨f protected￨f String￨f getNewFileLabel￨f (￨f )￨f {￨f }￨f protected￨f void￨f handleAdvancedButtonSelect￨f (￨f )￨f {￨f }￨f public￨f void￨f handleEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f protected￨f void￨f initialPopulateContainerNameField￨f (￨f )￨f {￨f }￨f public￨f void￨f setContainerFullPath￨f (￨f IPath￨p path￨p )￨f {￨f }￨f public￨f void￨f setFileName￨f (￨f String￨p value￨p )￨f {￨f }￨f protected￨f IStatus￨f validateLinkedResource￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f validatePage￨f (￨f )￨f {￨f boolean￨e valid￨e =￨e true￨e ;￨e IWorkspace￨e workspace￨e =￨e WorkbenchPlugin￨e .￨e getPluginWorkspace￨e (￨e )￨e ;￨e String￨e fileName￨e =￨e getFileName￨e (￨e )￨e ;￨e IStatus￨e nameStatus￨e =￨e workspace￨e .￨e validateName￨e (￨e fileName￨e ,￨e IResource￨e .￨e FILE￨e )￨e ;￨e if￨j (￨j !￨c (￨c nameStatus￨c .￨c isOK￨c (￨c )￨c )￨c )￨j {￨j setErrorMessage￨e (￨e nameStatus￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e return￨e false￨e ;￨e }￨j if￨j (￨j !￨c (￨c resourceGroup￨c .￨c areAllValuesValid￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c (￨c resourceGroup￨c .￨c getProblemType￨c (￨c )￨c )￨c ==￨c (￨c ResourceAndContainerGroup￨c .￨c PROBLEM_RESOURCE_EMPTY￨c )￨c )￨c ||￨c (￨c (￨c resourceGroup￨c .￨c getProblemType￨c (￨c )￨c )￨c ==￨c (￨c ResourceAndContainerGroup￨c .￨c PROBLEM_CONTAINER_EMPTY￨c )￨c )￨c )￨j {￨j setMessage￨e (￨e resourceGroup￨e .￨e getProblemMessage￨e (￨e )￨e )￨e ;￨e setErrorMessage￨e (￨e null￨e )￨e ;￨e }￨j else￨j {￨j setErrorMessage￨e (￨e resourceGroup￨e .￨e getProblemMessage￨e (￨e )￨e )￨e ;￨e }￨j valid￨e =￨e false￨e ;￨e }￨j IPath￨e container￨e =￨e workspace￨e .￨e getRoot￨e (￨e )￨e .￨e getLocation￨e (￨e )￨e .￨e append￨e (￨e getContainerFullPath￨e (￨e )￨e )￨e ;￨e File￨e systemFile￨e =￨e new￨e File￨e (￨e container￨e .￨e toOSString￨e (￨e )￨e ,￨e fileName￨e )￨e ;￨e if￨j (￨j systemFile￨c .￨c exists￨c (￨c )￨c )￨j {￨j setErrorMessage￨f (￨f WorkbenchMessages￨f .￨f format￨f (￨f "WizardNewFileCreationPage.fileExistsMessage"￨f ,￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e )￨e ;￨e valid￨e =￨e false￨e ;￨e }￨j IStatus￨e linkedResourceStatus￨e =￨e null￨e ;￨e if￨j (￨j valid￨c &&￨c (￨c (￨c linkedResourceGroup￨c )￨c !=￨c null￨c )￨c )￨j {￨j linkedResourceStatus￨e =￨e validateLinkedResource￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b linkedResourceStatus￨b .￨b getCode￨b (￨b )￨b )￨b ==￨b (￨b IStatus￨b .￨b ERROR￨b )￨b )￨b <END_BUG>￨b valid￨e =￨e false￨e ;￨e }￨j if￨j (￨j valid￨c &&￨c (￨c (￨c linkedResourceStatus￨c ==￨c null￨c )￨c ||￨c (￨c linkedResourceStatus￨c .￨c isOK￨c (￨c )￨c )￨c )￨c )￨j {￨j setMessage￨e (￨e null￨e )￨e ;￨e setErrorMessage￨e (￨e null￨e )￨e ;￨e }￨j return￨e valid￨e ;￨e }￨f public￨f void￨f setVisible￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f }￨d
public￨d class￨d MethodDeclaration￨d extends￨d BodyDeclaration￨d {￨d private￨e static￨e final￨e int￨e LEGAL_MODIFIERS￨e =￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e Modifier￨e .￨e PUBLIC￨e )￨e |￨e (￨e Modifier￨e .￨e PRIVATE￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e PROTECTED￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STATIC￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e FINAL￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e SYNCHRONIZED￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e NATIVE￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e ABSTRACT￨e )￨e )￨e |￨e (￨e Modifier￨e .￨e STRICTFP￨e )￨e ;￨e private￨e boolean￨e isConstructor￨e =￨e false￨e ;￨e private￨e int￨e modifiers￨e =￨e Modifier￨e .￨e NONE￨e ;￨e private￨e SimpleName￨e methodName￨e =￨e null￨e ;￨e private￨d ASTNode￨d .￨d NodeList￨d parameters￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d true￨d ,￨d SingleVariableDeclaration￨d .￨d class￨d )￨d ;￨d private￨d Type￨d returnType￨d =￨d null￨d ;￨d private￨d ASTNode￨d .￨d NodeList￨d thrownExceptions￨d =￨d new￨d ASTNode￨d .￨d NodeList￨d (￨d false￨d ,￨d Name￨d .￨d class￨d )￨d ;￨d private￨d Block￨d optionalBody￨d =￨d null￨d ;￨d MethodDeclaration￨d (￨d AST￨d ast￨d )￨d {￨d }￨d ASTNode￨f clone￨f (￨f AST￨p target￨p )￨f {￨f }￨f boolean￨f equalSubtrees￨f (￨f Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f boolean￨f isConstructor￨f (￨f )￨f {￨f }￨f public￨f void￨f setConstructor￨f (￨f boolean￨p isConstructor￨p )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f )￨f {￨f }￨f public￨f void￨f setModifiers￨f (￨f int￨p modifiers￨p )￨f {￨f <START_BUG>￨b modifiers￨b &=￨b ~￨b (￨b IConstants￨b .￨b AccDeprecated￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c modifiers￨c &￨c (￨c ~￨c (￨c MethodDeclaration￨c .￨c LEGAL_MODIFIERS￨c )￨c )￨c )￨c !=￨c 0￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e )￨e ;￨e }￨j modifying￨e (￨e )￨e ;￨e this￨e .￨e modifiers￨e =￨e modifiers￨e ;￨e }￨f public￨f SimpleName￨f getName￨f (￨f )￨f {￨f }￨f public￨f void￨f setName￨f (￨f SimpleName￨p methodName￨p )￨f {￨f }￨f public￨f List￨f parameters￨f (￨f )￨f {￨f }￨f public￨f List￨f thrownExceptions￨f (￨f )￨f {￨f }￨f public￨f Type￨f getReturnType￨f (￨f )￨f {￨f }￨f public￨f void￨f setReturnType￨f (￨f Type￨p type￨p )￨f {￨f }￨f public￨f Block￨f getBody￨f (￨f )￨f {￨f }￨f public￨f void￨f setBody￨f (￨f Block￨p body￨p )￨f {￨f }￨f public￨f IMethodBinding￨f resolveBinding￨f (￨f )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d Display￨p display￨p ,￨p int￨p style￨p )￨f {￨f }￨f Shell￨f (￨f Display￨p display￨p ,￨p Shell￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p handle￨p ,￨p boolean￨p embedded￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Shell￨p parent￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Shell￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f static￨f Shell￨f internal_new￨f (￨f Display￨p display￨p ,￨p int￨p handle￨p )￨f {￨f }￨f public￨f static￨f Shell￨f cocoa_new￨f (￨f Display￨p display￨p ,￨p int￨p handle￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f boolean￨f accessibilityIsIgnored￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f public￨f void￨f addShellListener￨f (￨f ShellListener￨p listener￨p )￨f {￨f }￨f void￨f bringToTop￨f (￨f boolean￨p force￨p )￨f {￨f }￨f boolean￨f canBecomeKeyWindow￨f (￨f int￨p id￨p ,￨p int￨p sel￨p )￨f {￨f }￨f void￨f checkOpen￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f void￨f closeWidget￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f void￨f createHandle￨f (￨f )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f void￨f destroyWidget￨f (￨f )￨f {￨f }￨f void￨f drawBackground￨f (￨f int￨p id￨p ,￨p NSGraphicsContext￨p context￨p ,￨p NSRect￨p rect￨p )￨f {￨f }￨f Control￨f findBackgroundControl￨f (￨f )￨f {￨f }￨f Composite￨f findDeferredControl￨f (￨f )￨f {￨f }￨f Cursor￨f findCursor￨f (￨f )￨f {￨f }￨f boolean￨f fixResize￨f (￨f )￨f {￨f }￨f void￨f fixShell￨f (￨f Shell￨p newShell￨p ,￨p Control￨p control￨p )￨f {￨f }￨f public￨f void￨f forceActive￨f (￨f )￨f {￨f }￨f public￨f int￨f getAlpha￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getClientArea￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getFullScreen￨f (￨f )￨f {￨f }￨f public￨f int￨f getImeInputMode￨f (￨f )￨f {￨f }￨f public￨f Point￨f getLocation￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMaximized￨f (￨f )￨f {￨f }￨f Shell￨f getModalShell￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getModified￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getMinimized￨f (￨f )￨f {￨f }￨f public￨f Point￨f getMinimumSize￨f (￨f )￨f {￨f }￨f float￨f [￨f ]￨f getParentBackground￨f (￨f )￨f {￨f }￨f public￨f Region￨f getRegion￨f (￨f )￨f {￨f }￨f public￨f Shell￨f getShell￨f (￨f )￨f {￨f }￨f public￨f Shell￨f [￨f ]￨f getShells￨f (￨f )￨f {￨f }￨f public￨f Point￨f getSize￨f (￨f )￨f {￨f }￨f float￨f getThemeAlpha￨f (￨f )￨f {￨f }￨f boolean￨f hasBorder￨f (￨f )￨f {￨f }￨f void￨f helpRequested￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p theEvent￨p )￨f {￨f }￨f void￨f invalidateVisibleRegion￨f (￨f )￨f {￨f }￨f boolean￨f isDrawing￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEnabled￨f (￨f )￨f {￨f }￨f boolean￨f isEnabledCursor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVisible￨f (￨f )￨f {￨f }￨f boolean￨f makeFirstResponder￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f noResponderFor￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p selector￨p )￨f {￨f }￨f public￨f void￨f open￨f (￨f )￨f {￨f }￨f public￨f boolean￨f print￨f (￨f GC￨p gc￨p )￨f {￨f }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseParent￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f public￨f void￨f removeShellListener￨f (￨f ShellListener￨p listener￨p )￨f {￨f }￨f void￨f sendToolTipEvent￨f (￨f boolean￨p enter￨p )￨f {￨f }￨f public￨f void￨f setActive￨f (￨f )￨f {￨f }￨f void￨f setActiveControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f public￨f void￨f setAlpha￨f (￨f int￨p alpha￨p )￨f {￨f }￨f void￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p resize￨p )￨f {￨f if￨j (￨j (￨c window￨c )￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j fullScreen￨c )￨j {￨j setFullScreen￨e (￨e false￨e )￨e ;￨e }￨j int￨e screenHeight￨e =￨e (￨e (￨e int￨e )￨e (￨e display￨e .￨e getPrimaryFrame￨e (￨e )￨e .￨e height￨e )￨e )￨e ;￨e NSRect￨e frame￨e =￨e window￨e .￨e frame￨e (￨e )￨e ;￨e if￨j (￨j !￨c move￨c )￨j {￨j x￨e =￨e (￨e (￨e int￨e )￨e (￨e frame￨e .￨e x￨e )￨e )￨e ;￨e y￨e =￨e screenHeight￨e -￨e (￨e (￨e int￨e )￨e (￨e (￨e frame￨e .￨e y￨e )￨e +￨e (￨e frame￨e .￨e height￨e )￨e )￨e )￨e ;￨e }￨j if￨j (￨j !￨c resize￨c )￨j {￨j width￨e =￨e (￨e (￨e int￨e )￨e (￨e frame￨e .￨e width￨e )￨e )￨e ;￨e height￨e =￨e (￨e (￨e int￨e )￨e (￨e frame￨e .￨e height￨e )￨e )￨e ;￨e }￨j frame￨e .￨e x￨e =￨e x￨e ;￨e frame￨e .￨e y￨e =￨e screenHeight￨e -￨e (￨e (￨e int￨e )￨e (￨e y￨e +￨e height￨e )￨e )￨e ;￨e frame￨e .￨e width￨e =￨e width￨e ;￨e frame￨e .￨e height￨e =￨e height￨e ;￨e <START_BUG>￨b window￨b .￨b setFrame￨b (￨b frame￨b ,￨b true￨b )￨b ;￨b <END_BUG>￨b }￨f void￨f setClipRegion￨f (￨f float￨p x￨p ,￨p float￨p y￨p )￨f {￨f }￨f public￨f void￨f setEnabled￨f (￨f boolean￨p enabled￨p )￨f {￨f }￨f public￨f void￨f setFullScreen￨f (￨f boolean￨p fullScreen￨p )￨f {￨f }￨f public￨f void￨f setMenuBar￨f (￨f Menu￨p menu￨p )￨f {￨f }￨f public￨f void￨f setImeInputMode￨f (￨f int￨p mode￨p )￨f {￨f }￨f public￨f void￨f setMaximized￨f (￨f boolean￨p maximized￨p )￨f {￨f }￨f public￨f void￨f setMinimized￨f (￨f boolean￨p minimized￨p )￨f {￨f }￨f public￨f void￨f setMinimumSize￨f (￨f int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f public￨f void￨f setMinimumSize￨f (￨f Point￨p size￨p )￨f {￨f }￨f public￨f void￨f setModified￨f (￨f boolean￨p modified￨p )￨f {￨f }￨f public￨f void￨f setRegion￨f (￨f Region￨p region￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setVisible￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f void￨f setWindowVisible￨f (￨f boolean￨p visible￨p ,￨p boolean￨p key￨p )￨f {￨f }￨f void￨f setZOrder￨f (￨f )￨f {￨f }￨f void￨f setZOrder￨f (￨f Control￨p control￨p ,￨p boolean￨p above￨p )￨f {￨f }￨f boolean￨f traverseEscape￨f (￨f )￨f {￨f }￨f void￨f updateModal￨f (￨f )￨f {￨f }￨f void￨f updateParent￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f void￨f updateSystemUIMode￨f (￨f )￨f {￨f }￨f int￨f view_stringForToolTip_point_userData￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p view￨p ,￨p int￨p tag￨p ,￨p int￨p point￨p ,￨p int￨p userData￨p )￨f {￨f }￨f void￨f windowDidBecomeKey￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f windowDidMove￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f windowDidResize￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f windowDidResignKey￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p notification￨p )￨f {￨f }￨f void￨f windowSendEvent￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p event￨p )￨f {￨f }￨f boolean￨f windowShouldClose￨f (￨f int￨p id￨p ,￨p int￨p sel￨p ,￨p int￨p window￨p )￨f {￨f }￨f }￨d
public￨d class￨d ColumnFamilyStoreTest￨d extends￨d CleanupHelper￨d {￨d static￨e byte￨e [￨e ]￨e bytes1￨e ;￨e static￨e byte￨e [￨e ]￨e bytes2￨e ;￨e @￨f Test￨f public￨f void￨f testGetColumnWithWrongBF￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testEmptyRow￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testSkipStartKey￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testIndexScan￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testLargeScan￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testIndexDeletions￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testIndexUpdate￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testIndexCreate￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f ,￨f ConfigurationException￨f (￨f )￨f {￨f Table￨e table￨e =￨e Table￨e .￨e open￨e (￨e "Keyspace1"￨e )￨e ;￨e RowMutation￨e rm￨e ;￨e rm￨e =￨e new￨e RowMutation￨e (￨e "Keyspace1"￨e ,￨e ByteBufferUtil￨e .￨e bytes￨e (￨e "k1"￨e )￨e )￨e ;￨e rm￨e .￨e add￨e (￨e new￨e QueryPath￨e (￨e "Indexed2"￨e ,￨e null￨e ,￨e ByteBufferUtil￨e .￨e bytes￨e (￨e "birthdate"￨e )￨e )￨e ,￨e ByteBufferUtil￨e .￨e bytes￨e (￨e 1L￨e )￨e ,￨e 1￨e )￨e ;￨e rm￨e .￨e apply￨e (￨e )￨e ;￨e ColumnFamilyStore￨e cfs￨e =￨e table￨e .￨e getColumnFamilyStore￨e (￨e "Indexed2"￨e )￨e ;￨e ColumnDefinition￨e old￨e =￨e cfs￨e .￨e metadata￨e .￨e getColumn_metadata￨e (￨e )￨e .￨e get￨e (￨e ByteBufferUtil￨e .￨e bytes￨e (￨e "birthdate"￨e )￨e )￨e ;￨e <START_BUG>￨b ColumnDefinition￨b cd￨b =￨b new￨b ColumnDefinition￨b (￨b old￨b .￨b name￨b ,￨b old￨b .￨b validator￨b ,￨b IndexType￨b .￨b KEYS￨b ,￨b "birthdate_index"￨b )￨b ;￨b <END_BUG>￨b Future￨e <￨e ?￨e >￨e future￨e =￨e cfs￨e .￨e addIndex￨e (￨e cd￨e )￨e ;￨e future￨e .￨e get￨e (￨e )￨e ;￨e assert￨e (￨e cfs￨e .￨e getIndexedColumnFamilyStore￨e (￨e cd￨e .￨e name￨e )￨e .￨e getSSTables￨e (￨e )￨e .￨e size￨e (￨e )￨e )￨e >￨e 0￨e ;￨e queryBirthdate￨e (￨e table￨e )￨e ;￨e ColumnFamilyStore￨e indexedCfs￨e =￨e cfs￨e .￨e getIndexedColumnFamilyStore￨e (￨e ByteBufferUtil￨e .￨e bytes￨e (￨e "birthdate"￨e )￨e )￨e ;￨e cfs￨e .￨e removeIndex￨e (￨e ByteBufferUtil￨e .￨e bytes￨e (￨e "birthdate"￨e )￨e )￨e ;￨e assert￨e !￨e (￨e indexedCfs￨e .￨e isIndexBuilt￨e (￨e )￨e )￨e ;￨e future￨e =￨e cfs￨e .￨e addIndex￨e (￨e cd￨e )￨e ;￨e future￨e .￨e get￨e (￨e )￨e ;￨e queryBirthdate￨e (￨e table￨e )￨e ;￨e }￨f private￨f void￨f queryBirthdate￨f (￨f Table￨f table￨f )￨f throws￨f CharacterCodingException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDeleteSuperRowSticksAfterFlush￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f assertRowAndColCount￨f (￨f int￨p rowCount￨p ,￨p int￨p colCount￨p ,￨p ByteBuffer￨p sc￨p ,￨p boolean￨p isDeleted￨p ,￨p Collection￨p <￨p Row￨p >￨p rows￨p )￨f {￨f }￨f private￨f static￨f String￨f str￨f (￨f ColumnFamily￨p cf￨p )￨f {￨f }￨f private￨f static￨f void￨f putColsSuper￨f (￨f ColumnFamilyStore￨f cfs￨f ,￨f DecoratedKey￨f key￨f ,￨f ByteBuffer￨f scfName￨f ,￨f Column￨f ...￨f cols￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f putColsStandard￨f (￨f ColumnFamilyStore￨f cfs￨f ,￨f DecoratedKey￨f key￨f ,￨f Column￨f ...￨f cols￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testDeleteStandardRowSticksAfterFlush￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f private￨f ColumnFamilyStore￨f insertKey1Key2￨f (￨f )￨f throws￨f IOException￨f ,￨f InterruptedException￨f ,￨f ExecutionException￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testBackupAfterFlush￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Stream￨d implements￨d IAggregatableStream￨d {￨d Node￨e _node￨e ;￨e TridentTopology￨e _topology￨e ;￨e String￨e _name￨e ;￨e protected￨f Stream￨f (￨f TridentTopology￨p topology￨p ,￨p String￨p name￨p ,￨p Node￨p node￨p )￨f {￨f }￨f public￨f Stream￨f name￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f Stream￨f parallelismHint￨f (￨f int￨p hint￨p )￨f {￨f }￨f public￨f Stream￨f project￨f (￨f Fields￨p keepFields￨p )￨f {￨f }￨f public￨f GroupedStream￨f groupBy￨f (￨f Fields￨p fields￨p )￨f {￨f }￨f public￨f Stream￨f partitionBy￨f (￨f Fields￨p fields￨p )￨f {￨f }￨f public￨f Stream￨f partition￨f (￨f CustomStreamGrouping￨p partitioner￨p )￨f {￨f }￨f public￨f Stream￨f shuffle￨f (￨f )￨f {￨f }￨f public￨f Stream￨f global￨f (￨f )￨f {￨f }￨f public￨f Stream￨f batchGlobal￨f (￨f )￨f {￨f }￨f public￨f Stream￨f broadcast￨f (￨f )￨f {￨f }￨f public￨f Stream￨f identityPartition￨f (￨f )￨f {￨f }￨f public￨f Stream￨f partition￨f (￨f Grouping￨p grouping￨p )￨f {￨f }￨f public￨f Stream￨f applyAssembly￨f (￨f Assembly￨p assembly￨p )￨f {￨f }￨f @￨f Override￨f public￨f Stream￨f each￨f (￨f Fields￨p inputFields￨p ,￨p Function￨p function￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f @￨f Override￨f public￨f Stream￨f partitionAggregate￨f (￨f Fields￨p inputFields￨p ,￨p Aggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f stateQuery￨f (￨f TridentState￨p state￨p ,￨p Fields￨p inputFields￨p ,￨p QueryFunction￨p function￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateFactory￨p stateFactory￨p ,￨p Fields￨p inputFields￨p ,￨p StateUpdater￨p updater￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateSpec￨p stateSpec￨p ,￨p Fields￨p inputFields￨p ,￨p StateUpdater￨p updater￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateFactory￨p stateFactory￨p ,￨p Fields￨p inputFields￨p ,￨p StateUpdater￨p updater￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateSpec￨p stateSpec￨p ,￨p Fields￨p inputFields￨p ,￨p StateUpdater￨p updater￨p )￨f {￨f }￨f public￨f Stream￨f each￨f (￨f Function￨p function￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f each￨f (￨f Fields￨p inputFields￨p ,￨p Filter￨p filter￨p )￨f {￨f }￨f public￨f ChainedAggregatorDeclarer￨f chainedAgg￨f (￨f )￨f {￨f }￨f public￨f Stream￨f partitionAggregate￨f (￨f Aggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f partitionAggregate￨f (￨f CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f partitionAggregate￨f (￨f Fields￨p inputFields￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f partitionAggregate￨f (￨f ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f partitionAggregate￨f (￨f Fields￨p inputFields￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f Aggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f Fields￨p inputFields￨p ,￨p Aggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f Fields￨p inputFields￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f aggregate￨f (￨f Fields￨p inputFields￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateFactory￨p stateFactory￨p ,￨p StateUpdater￨p updater￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateSpec￨p stateSpec￨p ,￨p StateUpdater￨p updater￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateFactory￨p stateFactory￨p ,￨p StateUpdater￨p updater￨p )￨f {￨f }￨f public￨f TridentState￨f partitionPersist￨f (￨f StateSpec￨p stateSpec￨p ,￨p StateUpdater￨p updater￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateFactory￨p stateFactory￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateSpec￨p spec￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateFactory￨p stateFactory￨p ,￨p Fields￨p inputFields￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateSpec￨p spec￨p ,￨p Fields￨p inputFields￨p ,￨p CombinerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateFactory￨p stateFactory￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateSpec￨p spec￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateFactory￨p stateFactory￨p ,￨p Fields￨p inputFields￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f TridentState￨f persistentAggregate￨f (￨f StateSpec￨p spec￨p ,￨p Fields￨p inputFields￨p ,￨p ReducerAggregator￨p agg￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f public￨f Stream￨f stateQuery￨f (￨f TridentState￨p state￨p ,￨p QueryFunction￨p function￨p ,￨p Fields￨p functionFields￨p )￨f {￨f }￨f @￨f Override￨f public￨f Stream￨f toStream￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Fields￨f getOutputFields￨f (￨f )￨f {￨f }￨f static￨d class￨d BatchGlobalAggScheme￨d implements￨d GlobalAggregationScheme￨d <￨d Stream￨d >￨d {￨d @￨f Override￨f public￨f IAggregatableStream￨f aggPartition￨f (￨f Stream￨p s￨p )￨f {￨f }￨f @￨f Override￨f public￨f BatchToPartition￨f singleEmitPartitioner￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d GlobalAggScheme￨d implements￨d GlobalAggregationScheme￨d <￨d Stream￨d >￨d {￨d @￨f Override￨f public￨f IAggregatableStream￨f aggPartition￨f (￨f Stream￨p s￨p )￨f {￨f }￨f @￨f Override￨f public￨f BatchToPartition￨f singleEmitPartitioner￨f (￨f )￨f {￨f }￨f }￨d private￨f void￨f projectionValidation￨f (￨f Fields￨p projFields￨p )￨f {￨f if￨j (￨j projFields￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j Fields￨e allFields￨e =￨e this￨e .￨e getOutputFields￨e (￨e )￨e ;￨e for￨l (￨l String￨c field￨c :￨c projFields￨c )￨l {￨l if￨j (￨j !￨c (￨c allFields￨c .￨c contains￨c (￨c field￨c )￨c )￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b IllegalArgumentException￨b (￨b (￨b (￨b (￨b (￨b "Trying<seq2seq4repair_space>to<seq2seq4repair_space>select<seq2seq4repair_space>non-existent<seq2seq4repair_space>field:<seq2seq4repair_space>'"￨b +￨b field￨b )￨b +￨b "'<seq2seq4repair_space>from<seq2seq4repair_space>all<seq2seq4repair_space>fields:<seq2seq4repair_space>"￨b )￨b +￨b allFields￨b )￨b +￨b "!"￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j }￨l }￨f }￨d
public￨d class￨d ShowBugDatabaseAction￨d extends￨d FrameAction￨d {￨d public￨f ShowBugDatabaseAction￨f (￨f AbstractFrameController￨p frameController￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p evt￨p )￨f {￨f URLController￨e c￨e =￨e new￨e URLController￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b c￨b .￨b open￨b (￨b new￨b URL￨b (￨b "http://www.sourceforge.net/projects/columba/bugs"￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f MalformedURLException￨p mue￨p )￨f {￨f }￨f }￨f }￨d
public￨d class￨d CheckableListEditor￨d extends￨d DefaultCellEditor￨d implements￨d ActionListener￨d {￨d private￨e JCheckBox￨e checkbox￨e ;￨e private￨e Boolean￨e selected￨e ;￨e public￨f CheckableListEditor￨f (￨f )￨f {￨f }￨f public￨f Component￨f getTableCellEditorComponent￨f (￨f JTable￨p table￨p ,￨p Object￨p value￨p ,￨p boolean￨p isSelected￨p ,￨p int￨p row￨p ,￨p int￨p column￨p )￨f {￨f }￨f public￨f Object￨f getCellEditorValue￨f (￨f )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p e￨p )￨f {￨f <START_BUG>￨b selected￨b =￨b new￨b Boolean￨b (￨b checkbox￨b .￨b isSelected￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b fireEditingStopped￨e (￨e )￨e ;￨e }￨f public￨f Component￨f getComponent￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d NormValueSource￨d extends￨d ValueSource￨d {￨d protected￨e final￨e String￨e field￨e ;￨e public￨f NormValueSource￨f (￨f String￨p field￨p )￨f {￨f }￨f public￨f String￨f name￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f description￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f createWeight￨f (￨f Map￨f context￨f ,￨f IndexSearcher￨f searcher￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f FunctionValues￨f getValues￨f (￨f Map￨f context￨f ,￨f AtomicReaderContext￨f readerContext￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f IndexSearcher￨e searcher￨e =￨e (￨e (￨e IndexSearcher￨e )￨e (￨e context￨e .￨e get￨e (￨e "searcher"￨e )￨e )￨e )￨e ;￨e final￨e TFIDFSimilarity￨e similarity￨e =￨e IDFValueSource￨e .￨e asTFIDF￨e (￨e searcher￨e .￨e getSimilarity￨e (￨e )￨e ,￨e field￨e )￨e ;￨e if￨j (￨j similarity￨c ==￨c null￨c )￨j {￨j throw￨e new￨e UnsupportedOperationException￨e (￨e "requires<seq2seq4repair_space>a<seq2seq4repair_space>TFIDFSimilarity<seq2seq4repair_space>(such<seq2seq4repair_space>as<seq2seq4repair_space>DefaultSimilarity)"￨e )￨e ;￨e }￨j <START_BUG>￨b final￨b NumericDocValues￨b norms￨b =￨b readerContext￨b .￨b reader￨b (￨b )￨b .￨b simpleNormValues￨b (￨b field￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j norms￨c ==￨c null￨c )￨j {￨j return￨e new￨e ConstDoubleDocValues￨e (￨e 0.0￨e ,￨e this￨e )￨e ;￨e }￨j return￨f new￨f FloatDocValues￨f (￨f this￨p )￨f {￨f @￨f Override￨f public￨f float￨f floatVal￨f (￨f int￨p doc￨p )￨f {￨f return￨e similarity￨e .￨e decodeNormValue￨e (￨e (￨e (￨e byte￨e )￨e (￨e norms￨e .￨e get￨e (￨e doc￨e )￨e )￨e )￨e )￨e ;￨e }￨f }￨f ;￨e }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ServletWebRequest￨d extends￨d WebRequest￨d {￨d private￨e final￨e HttpServletRequest￨e httpServletRequest￨e ;￨e private￨e final￨e Url￨e url￨e ;￨e private￨e final￨e String￨e filterPrefix￨e ;￨e private￨e final￨e ErrorAttributes￨e errorAttributes￨e ;￨e public￨f ServletWebRequest￨f (￨f HttpServletRequest￨p httpServletRequest￨p ,￨p String￨p filterPrefix￨p )￨f {￨f }￨f public￨f ServletWebRequest￨f (￨f HttpServletRequest￨p httpServletRequest￨p ,￨p String￨p filterPrefix￨p ,￨p Url￨p url￨p )￨f {￨f }￨f @￨f Override￨f public￨f Url￨f getClientUrl￨f (￨f )￨f {￨f }￨f private￨f Url￨f setParameters￨f (￨f Url￨p url￨p )￨f {￨f }￨f private￨f Url￨f getUrl￨f (￨f HttpServletRequest￨p request￨p ,￨p String￨p filterPrefix￨p )￨f {￨f }￨f public￨f String￨f getFilterPrefix￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f List￨f <￨f Cookie￨f >￨f getCookies￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Locale￨f getLocale￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Time￨f getDateHeader￨f (￨f String￨p name￨p )￨f {￨f long￨e value￨e =￨e httpServletRequest￨e .￨e getDateHeader￨e (￨e name￨e )￨e ;￨e if￨j (￨j value￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j <START_BUG>￨b return￨b Time￨b .￨b valueOf￨b (￨b value￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f String￨f getHeader￨f (￨f String￨p name￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f @￨f Override￨f public￨f List￨f <￨f String￨f >￨f getHeaders￨f (￨f String￨p name￨p )￨f {￨f }￨f private￨e Map￨e <￨e String￨e ,￨e List￨e <￨e StringValue￨e >￨e >￨e postParameters￨e =￨e null￨e ;￨e private￨f static￨f boolean￨f isMultiPart￨f (￨f ServletRequest￨p request￨p )￨f {￨f }￨f protected￨f Map￨f <￨f String￨f ,￨f List￨f <￨f StringValue￨f >￨f >￨f generatePostParameters￨f (￨f )￨f {￨f }￨f private￨f Map￨f <￨f String￨f ,￨f List￨f <￨f StringValue￨f >￨f >￨f getPostRequestParameters￨f (￨f )￨f {￨f }￨f private￨f final￨f IRequestParameters￨f postRequestParameters￨f =￨f new￨f IWritableRequestParameters￨f (￨f )￨f {￨f public￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f void￨f setParameterValues￨f (￨f String￨p key￨p ,￨p List￨p <￨p StringValue￨p >￨p values￨p )￨f {￨f }￨f public￨f Set￨f <￨f String￨f >￨f getParameterNames￨f (￨f )￨f {￨f }￨f public￨f StringValue￨f getParameterValue￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f List￨f <￨f StringValue￨f >￨f getParameterValues￨f (￨f String￨p name￨p )￨f {￨f }￨f }￨f ;￨e @￨f Override￨f public￨f IRequestParameters￨f getPostParameters￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Url￨f getUrl￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f ServletWebRequest￨f cloneWithUrl￨f (￨f Url￨p url￨p )￨f {￨f }￨f public￨f MultipartServletWebRequest￨f newMultipartWebRequest￨f (￨f Bytes￨f maxSize￨f )￨f throws￨f FileUploadException￨f (￨f )￨f {￨f }￨f public￨f MultipartServletWebRequest￨f newMultipartWebRequest￨f (￨f Bytes￨f maxSize￨f ,￨f FileItemFactory￨f factory￨f )￨f throws￨f FileUploadException￨f (￨f )￨f {￨f }￨f private￨d static￨d final￨d Logger￨d logger￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d ServletWebRequest￨d .￨d class￨d )￨d ;￨d @￨d Override￨d public￨d String￨d getPrefixToContextPath￨d (￨d )￨d {￨d }￨d @￨f Override￨f public￨f Charset￨f getCharset￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f HttpServletRequest￨f getContainerRequest￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getContextPath￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f getFilterPath￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f shouldPreserveClientUrl￨f (￨f )￨f {￨f }￨f }￨d
public￨d ,￨p int￨p field￨p ,￨p short￨p curVal￨p )￨f {￨f }￨f public￨f void￨f providedStringField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p ,￨p String￨p curVal￨p )￨f {￨f }￨f public￨f boolean￨f replaceBooleanField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f byte￨f replaceByteField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f char￨f replaceCharField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f double￨f replaceDoubleField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f float￨f replaceFloatField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f int￨f replaceIntField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f long￨f replaceLongField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f Object￨f replaceObjectField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f short￨f replaceShortField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f String￨f replaceStringField￨f (￨f PersistenceCapable￨p pc￨p ,￨p int￨p field￨p )￨f {￨f }￨f public￨f boolean￨f fetchBoolean￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f boolean￨f fetchBooleanField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f byte￨f fetchByte￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f byte￨f fetchByteField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f char￨f fetchChar￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f char￨f fetchCharField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f double￨f fetchDouble￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f double￨f fetchDoubleField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f float￨f fetchFloat￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f float￨f fetchFloatField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f int￨f fetchInt￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f int￨f fetchIntField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f long￨f fetchLong￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f long￨f fetchLongField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f Object￨f fetchObject￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f Object￨f fetchObjectField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f short￨f fetchShort￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f short￨f fetchShortField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f String￨f fetchString￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f String￨f fetchStringField￨f (￨f int￨p field￨p )￨f {￨f }￨f public￨f void￨f storeBoolean￨f (￨f int￨p field￨p ,￨p boolean￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeBooleanField￨f (￨f int￨p field￨p ,￨p boolean￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeByte￨f (￨f int￨p field￨p ,￨p byte￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeByteField￨f (￨f int￨p field￨p ,￨p byte￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeChar￨f (￨f int￨p field￨p ,￨p char￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeCharField￨f (￨f int￨p field￨p ,￨p char￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeDouble￨f (￨f int￨p field￨p ,￨p double￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeDoubleField￨f (￨f int￨p field￨p ,￨p double￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeFloat￨f (￨f int￨p field￨p ,￨p float￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeFloatField￨f (￨f int￨p field￨p ,￨p float￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeInt￨f (￨f int￨p field￨p ,￨p int￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeIntField￨f (￨f int￨p field￨p ,￨p int￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeLong￨f (￨f int￨p field￨p ,￨p long￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeLongField￨f (￨f int￨p field￨p ,￨p long￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeObject￨f (￨f int￨p field￨p ,￨p Object￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeObjectField￨f (￨f int￨p field￨p ,￨p Object￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeShort￨f (￨f int￨p field￨p ,￨p short￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeShortField￨f (￨f int￨p field￨p ,￨p short￨p curVal￨p )￨f {￨f }￨f public￨f void￨f storeString￨f (￨f int￨p field￨p ,￨p String￨p externalVal￨p )￨f {￨f }￨f public￨f void￨f storeStringField￨f (￨f int￨p field￨p ,￨p String￨p curVal￨p )￨f {￨f }￨f private￨f void￨f storeField￨f (￨f int￨p field￨p ,￨p Object￨p val￨p ,￨p FieldManager￨p fm￨p )￨f {￨f }￨f void￨f eraseFlush￨f (￨f )￨f {￨f }￨f void￨f setLoaded￨f (￨f boolean￨p val￨p )￨f {￨f }￨f void￨f setDirty￨f (￨f boolean￨p val￨p )￨f {￨f }￨f void￨f clearFields￨f (￨f )￨f {￨f fireLifecycleEvent￨e (￨e BEFORE_CLEAR￨e )￨e ;￨e unproxyFields￨e (￨e )￨e ;￨e lock￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f FieldMetaData￨e [￨e ]￨e fmds￨e =￨e _meta￨e .￨e getFields￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c fmds￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c !￨c (￨c fmds￨c [￨c i￨c ]￨c .￨c isPrimaryKey￨c (￨c )￨c )￨c )￨c &&￨c (￨c (￨c fmds￨c [￨c i￨c ]￨c .￨c getManagement￨c (￨c )￨c )￨c ==￨c (￨c FieldMetaData￨c .￨c MANAGE_PERSISTENT￨c )￨c )￨c )￨j {￨j replaceField￨e (￨e _pc￨e ,￨e ClearFieldManager￨e .￨e getInstance￨e (￨e )￨e ,￨e i￨e )￨e ;￨e }￨j }￨l setLoaded￨e (￨e false￨e )￨e ;￨e <START_BUG>￨b assignVersionField￨b (￨b null￨b )￨b ;￨b <END_BUG>￨b _loadVersion￨e =￨e null￨e ;￨e if￨j (￨j (￨c _fieldImpl￨c )￨c !=￨c null￨c )￨j {￨j Arrays￨e .￨e fill￨e (￨e _fieldImpl￨e ,￨e null￨e )￨e ;￨e }￨j }￨f finally￨f (￨f )￨f {￨f unlock￨e (￨e )￨e ;￨e }￨f fireLifecycleEvent￨e (￨e AFTER_CLEAR￨e )￨e ;￨e }￨f void￨f saveFields￨f (￨f boolean￨p immediate￨p )￨f {￨f }￨f private￨f void￨f saveField￨f (￨f int￨p field￨p )￨f {￨f }￨f void￨f clearSavedFields￨f (￨f )￨f {￨f }￨f void￨f restoreFields￨f (￨f )￨f {￨f }￨f void￨f proxyFields￨f (￨f boolean￨p reset￨p ,￨p boolean￨p replaceNull￨p )￨f {￨f }￨f void￨f unproxyFields￨f (￨f )￨f {￨f }￨f void￨f preFlush￨f (￨f boolean￨p logical￨p ,￨p OpCallbacks￨p call￨p )￨f {￨f }￨f void￨f preDelete￨f (￨f )￨f {￨f }￨f void￨f cascadeDelete￨f (￨f OpCallbacks￨p call￨p )￨f {￨f }￨f void￨f cascadePersist￨f (￨f OpCallbacks￨p call￨p )￨f {￨f }￨f boolean￨f loadFields￨f (￨f BitSet￨p fields￨p ,￨p FetchConfiguration￨p fetch￨p ,￨p int￨p lockLevel￨p ,￨p Object￨p sdata￨p ,￨p boolean￨p forWrite￨p )￨f {￨f }￨f protected￨f void￨f loadField￨f (￨f int￨p field￨p ,￨p int￨p lockLevel￨p ,￨p boolean￨p forWrite￨p ,￨p boolean￨p fgs￨p )￨f {￨f }￨f void￨f provideField￨f (￨f PersistenceCapable￨p pc￨p ,￨p FieldManager￨p store￨p ,￨p int￨p field￨p )￨f {￨f }￨f void￨f replaceField￨f (￨f PersistenceCapable￨p pc￨p ,￨p FieldManager￨p load￨p ,￨p int￨p field￨p )￨f {￨f }￨f private￨f void￨f setLoaded￨f (￨f int￨p field￨p ,￨p boolean￨p isLoaded￨p )￨f {￨f }￨f private￨f void￨f postLoad￨f (￨f int￨p field￨p ,￨p FetchConfiguration￨p fetch￨p )￨f {￨f }￨f private￨f boolean￨f postLoad￨f (￨f String￨p fgName￨p ,￨p FetchConfiguration￨p fetch￨p )￨f {￨f }￨f private￨f boolean￨f syncVersion￨f (￨f Object￨p sdata￨p )￨f {￨f }￨f public￨f boolean￨f isVersionCheckRequired￨f (￨f )￨f {￨f }￨f void￨f setCheckVersion￨f (￨f boolean￨p versionCheck￨p )￨f {￨f }￨f public￨f boolean￨f isVersionUpdateRequired￨f (￨f )￨f {￨f }￨f void￨f setUpdateVersion￨f (￨f boolean￨p versionUpdate￨p )￨f {￨f }￨f protected￨f RuntimeException￨f translate￨f (￨f RuntimeException￨p re￨p )￨f {￨f }￨f protected￨f void￨f lock￨f (￨f )￨f {￨f }￨f protected￨f void￨f unlock￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractServicePublicationTest￨d extends￨d TestCase￨d implements￨d RemoteServicePublication￨d ,￨d IDistributionConstants￨d {￨d protected￨f static￨f void￨f assertStringsEqual￨f (￨f final￨p String￨p [￨p ]￨p s1￨p ,￨p final￨p String￨p [￨p ]￨p s2￨p )￨f {￨f }￨f protected￨e IContainer￨e container￨e ;￨e protected￨e String￨e [￨e ]￨e ifaces￨e ;￨e protected￨e ServiceRegistration￨e registration￨e ;￨e protected￨f abstract￨f IContainer￨f createContainer￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f abstract￨f String￨f [￨f ]￨f createInterfaces￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨e ServiceReference￨e reference￨e ;￨e public￨f ServiceReference￨f getReference￨f (￨f )￨f {￨f }￨f protected￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f void￨f removeFromContainerManager￨f (￨f IContainer￨p container￨p )￨f {￨f }￨f protected￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f IContainer￨f getContainer￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getInterfaces￨f (￨f )￨f {￨f }￨f public￨f void￨f setContainer￨f (￨f IContainer￨p container￨p )￨f {￨f }￨f public￨f void￨f testServicePublication￨f (￨f )￨f throws￨f InterruptedException￨f (￨f )￨f {￨f final￨e BundleContext￨e context￨e =￨e Activator￨e .￨e getDefault￨e (￨e )￨e .￨e getContext￨e (￨e )￨e ;￨e final￨e Dictionary￨e props￨e =￨e new￨e Hashtable￨e (￨e )￨e ;￨e <START_BUG>￨b props￨b .￨b put￨b (￨b REMOTE_INTERFACES￨b ,￨b getInterfaces￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b final￨d ServiceTracker￨d tracker￨d =￨d new￨d ServiceTracker￨d (￨d context￨d ,￨d TestServiceInterface1￨d .￨d class￨d .￨d getName￨d (￨d )￨d ,￨d null￨d )￨d ;￨d tracker￨d .￨d open￨d (￨d )￨d ;￨d registration￨d =￨d context￨d .￨d registerService￨d (￨d TestServiceInterface1￨d .￨d class￨d .￨d getName￨d (￨d )￨d ,￨d new￨d TestService1￨d (￨d )￨d ,￨d props￨d )￨d ;￨d tracker￨d .￨d waitForService￨d (￨d 10000￨d )￨d ;￨d final￨d ServiceReference￨d ref￨d =￨d context￨d .￨d getServiceReference￨d (￨d ServicePublication￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d assertTrue￨d (￨d (￨d ref￨d !=￨d null￨d )￨d )￨d ;￨d final￨d Object￨d o￨d =￨d ref￨d .￨d getProperty￨d (￨d SERVICE_INTERFACE_NAME￨d )￨d ;￨d assertTrue￨d (￨d (￨d o￨d instanceof￨d Collection￨d )￨d )￨d ;￨d final￨d Collection￨d refIfaces￨d =￨d (￨d (￨d Collection￨d )￨d (￨d o￨d )￨d )￨d ;￨d AbstractServicePublicationTest￨d .￨d assertStringsEqual￨d (￨d getInterfaces￨d (￨d )￨d ,￨d (￨d (￨d String￨d [￨d ]￨d )￨d (￨d refIfaces￨d .￨d toArray￨d (￨d new￨d String￨d [￨d ]￨d {￨d }￨d )￨e )￨e )￨e )￨e ;￨e Thread￨e .￨e sleep￨e (￨e 10000￨e )￨e ;￨e }￨f public￨f void￨f setInterfaces￨f (￨f String￨p [￨p ]￨p interfaces￨p )￨f {￨f }￨f }￨d
public￨d class￨d TestExplanations￨d extends￨d LuceneTestCase￨d {￨d protected￨e IndexSearcher￨e searcher￨e ;￨e public￨e static￨e final￨e String￨e KEY￨e =￨e "KEY"￨e ;￨e public￨e static￨e final￨e String￨e FIELD￨e =￨e "field"￨e ;￨e public￨e static￨e final￨e QueryParser￨e qp￨e =￨e new￨e QueryParser￨e (￨e TestExplanations￨e .￨e FIELD￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e )￨e ;￨e public￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f super￨e .￨e setUp￨e (￨e )￨e ;￨e RAMDirectory￨e directory￨e =￨e new￨e RAMDirectory￨e (￨e )￨e ;￨e IndexWriter￨e writer￨e =￨e new￨e IndexWriter￨e (￨e directory￨e ,￨e new￨e WhitespaceAnalyzer￨e (￨e )￨e ,￨e true￨e ,￨e MaxFieldLength￨e .￨e LIMITED￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c docFields￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l Document￨e doc￨e =￨e new￨e Document￨e (￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e TestExplanations￨e .￨e KEY￨e ,￨e (￨e ""￨e +￨e i￨e )￨e ,￨e Store￨e .￨e NO￨e ,￨e Index￨e .￨e NOT_ANALYZED￨e )￨e )￨e ;￨e doc￨e .￨e add￨e (￨e new￨e org￨e .￨e apache￨e .￨e lucene￨e .￨e document￨e .￨e Field￨e (￨e TestExplanations￨e .￨e FIELD￨e ,￨e docFields￨e [￨e i￨e ]￨e ,￨e Store￨e .￨e NO￨e ,￨e Index￨e .￨e ANALYZED￨e )￨e )￨e ;￨e writer￨e .￨e addDocument￨e (￨e doc￨e )￨e ;￨e }￨l writer￨e .￨e close￨e (￨e )￨e ;￨e <START_BUG>￨b searcher￨b =￨b new￨b IndexSearcher￨b (￨b directory￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f String￨f [￨f ]￨f docFields￨f =￨f new￨f String￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e public￨f Query￨f makeQuery￨f (￨f String￨f queryText￨f )￨f throws￨f ParseException￨f (￨f )￨f {￨f }￨f public￨f void￨f qtest￨f (￨f String￨f queryText￨f ,￨f int￨f [￨f ]￨f expDocNrs￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f qtest￨f (￨f Query￨f q￨f ,￨f int￨f [￨f ]￨f expDocNrs￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f bqtest￨f (￨f Query￨f q￨f ,￨f int￨f [￨f ]￨f expDocNrs￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f bqtest￨f (￨f String￨f queryText￨f ,￨f int￨f [￨f ]￨f expDocNrs￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d ItemizedFilter￨d extends￨d FieldCacheTermsFilter￨d {￨d private￨f static￨f String￨f [￨f ]￨f int2str￨f (￨f int￨p [￨p ]￨p terms￨p )￨f {￨f }￨f public￨f ItemizedFilter￨f (￨f String￨p keyField￨p ,￨p int￨p [￨p ]￨p keys￨p )￨f {￨f }￨f public￨f ItemizedFilter￨f (￨f int￨p [￨p ]￨p keys￨p )￨f {￨f }￨f }￨d public￨f static￨f Term￨f [￨f ]￨f ta￨f (￨f String￨p [￨p ]￨p s￨p )￨f {￨f }￨f public￨f SpanTermQuery￨f st￨f (￨f String￨p s￨p )￨f {￨f }￨f public￨f SpanNotQuery￨f snot￨f (￨f SpanQuery￨p i￨p ,￨p SpanQuery￨p e￨p )￨f {￨f }￨f public￨f SpanOrQuery￨f sor￨f (￨f String￨p s￨p ,￨p String￨p e￨p )￨f {￨f }￨f public￨f SpanOrQuery￨f sor￨f (￨f SpanQuery￨p s￨p ,￨p SpanQuery￨p e￨p )￨f {￨f }￨f public￨f SpanOrQuery￨f sor￨f (￨f String￨p s￨p ,￨p String￨p m￨p ,￨p String￨p e￨p )￨f {￨f }￨f public￨f SpanOrQuery￨f sor￨f (￨f SpanQuery￨p s￨p ,￨p SpanQuery￨p m￨p ,￨p SpanQuery￨p e￨p )￨f {￨f }￨f public￨f SpanNearQuery￨f snear￨f (￨f String￨p s￨p ,￨p String￨p e￨p ,￨p int￨p slop￨p ,￨p boolean￨p inOrder￨p )￨f {￨f }￨f public￨f SpanNearQuery￨f snear￨f (￨f SpanQuery￨p s￨p ,￨p SpanQuery￨p e￨p ,￨p int￨p slop￨p ,￨p boolean￨p inOrder￨p )￨f {￨f }￨f public￨f SpanNearQuery￨f snear￨f (￨f String￨p s￨p ,￨p String￨p m￨p ,￨p String￨p e￨p ,￨p int￨p slop￨p ,￨p boolean￨p inOrder￨p )￨f {￨f }￨f public￨f SpanNearQuery￨f snear￨f (￨f SpanQuery￨p s￨p ,￨p SpanQuery￨p m￨p ,￨p SpanQuery￨p e￨p ,￨p int￨p slop￨p ,￨p boolean￨p inOrder￨p )￨f {￨f }￨f public￨f SpanFirstQuery￨f sf￨f (￨f String￨p s￨p ,￨p int￨p b￨p )￨f {￨f }￨f public￨f Query￨f optB￨f (￨f String￨f q￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Query￨f optB￨f (￨f Query￨f q￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Query￨f reqB￨f (￨f String￨f q￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f Query￨f reqB￨f (￨f Query￨f q￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testNoop￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ExternalFoldersManager￨d {￨d private￨e static￨e final￨e boolean￨e DEBUG￨e =￨e false￨e ;￨e private￨e static￨e final￨e String￨e EXTERNAL_PROJECT_NAME￨e =￨e ".org.eclipse.jdt.core.external.folders"￨e ;￨e private￨e static￨e final￨e String￨e LINKED_FOLDER_NAME￨e =￨e ".link"￨e ;￨e private￨e HashMap￨e folders￨e ;￨e private￨e int￨e counter￨e =￨e 0￨e ;￨e public￨f static￨f HashSet￨f getExternalFolders￨f (￨f IClasspathEntry￨p [￨p ]￨p classpath￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isExternalFolderPath￨f (￨f IPath￨p externalPath￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isInternalPathForExternalFolder￨f (￨f IPath￨p resourcePath￨p )￨f {￨f }￨f public￨f IFolder￨f addFolder￨f (￨f IPath￨p externalFolderPath￨p )￨f {￨f }￨f private￨f synchronized￨f IFolder￨f addFolder￨f (￨f IPath￨p externalFolderPath￨p ,￨p IProject￨p externalFoldersProject￨p )￨f {￨f }￨f public￨f IFolder￨f createLinkFolder￨f (￨f IPath￨f externalFolderPath￨f ,￨f boolean￨f refreshIfExistAlready￨f ,￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f void￨f cleanUp￨f (￨f IProgressMonitor￨f monitor￨f )￨f throws￨f CoreException￨f (￨f )￨f {￨f }￨f public￨f IProject￨f getExternalFoldersProject￨f (￨f )￨f {￨f }￨f private￨f IProject￨f createExternalFoldersProject￨f (￨f IProgressMonitor￨p monitor￨p )￨f {￨f }￨f public￨f synchronized￨f IFolder￨f getFolder￨f (￨f IPath￨p externalFolderPath￨p )￨f {￨f }￨f private￨f HashMap￨f getFolders￨f (￨f )￨f {￨f }￨f public￨f void￨f refreshReferences￨f (￨f IProject￨p source￨p ,￨p IProgressMonitor￨p monitor￨p )￨f {￨f IProject￨e externalProject￨e =￨e getExternalFoldersProject￨e (￨e )￨e ;￨e if￨j (￨j source￨c .￨c equals￨c (￨c externalProject￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j !￨c (￨c JavaProject￨c .￨c hasJavaNature￨c (￨c source￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b HashSet￨b externalFolders￨b =￨b ExternalFoldersManager￨b .￨b getExternalFolders￨b (￨b JavaCore￨b .￨b create￨b (￨b source￨b )￨b .￨b getResolvedClasspath￨b (￨b true￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j externalFolders￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j final￨e Iterator￨e iterator￨e =￨e externalFolders￨e .￨e iterator￨e (￨e )￨e ;￨e Job￨f refreshJob￨f =￨f new￨f Job￨f (￨f Messages￨p .￨p refreshing_external_folders￨p )￨f {￨f public￨f boolean￨f belongsTo￨f (￨f Object￨p family￨p )￨f {￨f return￨e family￨e ==￨e (￨e ResourcesPlugin￨e .￨e FAMILY_MANUAL_REFRESH￨e )￨e ;￨e }￨f protected￨f IStatus￨f run￨f (￨f IProgressMonitor￨p pm￨p )￨f {￨f try￨f (￨f )￨f {￨f while￨l (￨l iterator￨c .￨c hasNext￨c (￨c )￨c )￨l {￨l IPath￨e externalPath￨e =￨e (￨e (￨e IPath￨e )￨e (￨e iterator￨e .￨e next￨e (￨e )￨e )￨e )￨e ;￨e IFolder￨e folder￨e =￨e getFolder￨e (￨e externalPath￨e )￨e ;￨e if￨j (￨j folder￨c !=￨c null￨c )￨j {￨j folder￨e .￨e refreshLocal￨e (￨e IResource￨e .￨e DEPTH_INFINITE￨e ,￨e pm￨e )￨e ;￨e }￨j }￨l }￨f catch￨f (￨f CoreException￨p e￨p )￨f {￨f return￨e e￨e .￨e getStatus￨e (￨e )￨e ;￨e }￨f return￨e Status￨e .￨e OK_STATUS￨e ;￨e }￨f }￨f ;￨e refreshJob￨e .￨e schedule￨e (￨e )￨e ;￨e }￨f catch￨f (￨f CoreException￨p e￨p )￨f {￨f Util￨e .￨e log￨e (￨e e￨e ,￨e "Exception<seq2seq4repair_space>while<seq2seq4repair_space>refreshing<seq2seq4repair_space>external<seq2seq4repair_space>project"￨e )￨e ;￨e }￨f return￨e ;￨e }￨f public￨f synchronized￨f IFolder￨f removeFolder￨f (￨f IPath￨p externalFolderPath￨p )￨f {￨f }￨f }￨d
public￨d class￨d RequestResponseBodyMethodProcessor￨d extends￨d AbstractMessageConverterMethodProcessor￨d {￨d public￨f RequestResponseBodyMethodProcessor￨f (￨f List￨p <￨p HttpMessageConverter￨p <￨p ?￨p >￨p >￨p messageConverters￨p )￨f {￨f }￨f public￨f boolean￨f supportsParameter￨f (￨f MethodParameter￨p parameter￨p )￨f {￨f }￨f public￨f boolean￨f supportsReturnType￨f (￨f MethodParameter￨p returnType￨p )￨f {￨f }￨f public￨f Object￨f resolveArgument￨f (￨f MethodParameter￨f parameter￨f ,￨f ModelAndViewContainer￨f mavContainer￨f ,￨f NativeWebRequest￨f webRequest￨f ,￨f WebDataBinderFactory￨f binderFactory￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f Object￨e arg￨e =￨e readWithMessageConverters￨e (￨e webRequest￨e ,￨e parameter￨e ,￨e parameter￨e .￨e getParameterType￨e (￨e )￨e )￨e ;￨e Annotation￨e [￨e ]￨e annotations￨e =￨e parameter￨e .￨e getParameterAnnotations￨e (￨e )￨e ;￨e for￨l (￨l Annotation￨c annot￨c :￨c annotations￨c )￨l {￨l <START_BUG>￨b if￨b (￨b "Valid"￨b .￨b equals￨b (￨b annot￨b .￨b annotationType￨b (￨b )￨b .￨b getSimpleName￨b (￨b )￨b )￨b )￨b {￨b <END_BUG>￨b String￨e name￨e =￨e Conventions￨e .￨e getVariableNameForParameter￨e (￨e parameter￨e )￨e ;￨e WebDataBinder￨e binder￨e =￨e binderFactory￨e .￨e createBinder￨e (￨e webRequest￨e ,￨e arg￨e ,￨e name￨e )￨e ;￨e Object￨e hints￨e =￨e AnnotationUtils￨e .￨e getValue￨e (￨e annot￨e )￨e ;￨e binder￨f .￨f validate￨f (￨f (￨f hints￨f instanceof￨f Object￨f [￨f ]￨f ?￨f (￨f (￨f Object￨f [￨f ]￨f )￨f (￨f hints￨f )￨f )￨f :￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e )￨e ;￨e BindingResult￨e bindingResult￨e =￨e binder￨e .￨e getBindingResult￨e (￨e )￨e ;￨e if￨j (￨j bindingResult￨c .￨c hasErrors￨c (￨c )￨c )￨j {￨j throw￨e new￨e org￨e .￨e springframework￨e .￨e web￨e .￨e method￨e .￨e annotation￨e .￨e support￨e .￨e MethodArgumentNotValidException￨e (￨e parameter￨e ,￨e bindingResult￨e )￨e ;￨e }￨j }￨l return￨e arg￨e ;￨e }￨f public￨f void￨f handleReturnValue￨f (￨f Object￨f returnValue￨f ,￨f MethodParameter￨f returnType￨f ,￨f ModelAndViewContainer￨f mavContainer￨f ,￨f NativeWebRequest￨f webRequest￨f )￨f throws￨f IOException￨f ,￨f HttpMediaTypeNotAcceptableException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ProgressFeedbackDialog￨d extends￨d Dialog￨d {￨d private￨e IStructuredContentProvider￨e provider￨e ;￨e ListViewer￨e viewer￨e ;￨e public￨f ProgressFeedbackDialog￨f (￨f IStructuredContentProvider￨p contentProvider￨p )￨f {￨f }￨f private￨f ILabelProvider￨f getLabelProvider￨f (￨f )￨f {￨f }￨f public￨f void￨f refreshViewer￨f (￨f )￨f {￨f }￨f protected￨f void￨f configureShell￨f (￨f Shell￨p newShell￨p )￨f {￨f }￨f protected￨f Control￨f createDialogArea￨f (￨f Composite￨p parent￨p )￨f {￨f setBlockOnOpen￨e (￨e false￨e )￨e ;￨e Composite￨e mainArea￨e =￨e (￨e (￨e Composite￨e )￨e (￨e super￨e .￨e createDialogArea￨e (￨e parent￨e )￨e )￨e )￨e ;￨e viewer￨e =￨e new￨e ListViewer￨e (￨e mainArea￨e ,￨e SWT￨e .￨e BORDER￨e )￨e ;￨e GridData￨e data￨e =￨e new￨e GridData￨e (￨e (￨e (￨e (￨e GridData￨e .￨e FILL_BOTH￨e )￨e |￨e (￨e GridData￨e .￨e GRAB_HORIZONTAL￨e )￨e )￨e |￨e (￨e GridData￨e .￨e GRAB_VERTICAL￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b data￨b .￨b widthHint￨b =￨b convertHorizontalDLUsToPixels￨b (￨b 200￨b )￨b ;￨b <END_BUG>￨b data￨e .￨e heightHint￨e =￨e convertVerticalDLUsToPixels￨e (￨e 100￨e )￨e ;￨e viewer￨e .￨e getControl￨e (￨e )￨e .￨e setLayoutData￨e (￨e data￨e )￨e ;￨e viewer￨e .￨e setContentProvider￨e (￨e provider￨e )￨e ;￨e viewer￨e .￨e setLabelProvider￨e (￨e getLabelProvider￨e (￨e )￨e )￨e ;￨e viewer￨e .￨e setInput￨e (￨e ProgressFeedbackManager￨e .￨e getFeedbackManager￨e (￨e )￨e )￨e ;￨e viewer￨f .￨f addDoubleClickListener￨f (￨f new￨f IDoubleClickListener￨f (￨f )￨f {￨f public￨f void￨f doubleClick￨f (￨f DoubleClickEvent￨p event￨p )￨f {￨f ISelection￨e selection￨e =￨e event￨e .￨e getSelection￨e (￨e )￨e ;￨e if￨j (￨j selection￨c instanceof￨c IStructuredSelection￨c )￨j {￨j IStructuredSelection￨e structured￨e =￨e (￨e (￨e IStructuredSelection￨e )￨e (￨e selection￨e )￨e )￨e ;￨e if￨j (￨j (￨c structured￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j AwaitingFeedbackInfo￨e info￨e =￨e (￨e (￨e AwaitingFeedbackInfo￨e )￨e (￨e structured￨e .￨e getFirstElement￨e (￨e )￨e )￨e )￨e ;￨e info￨e .￨e getJob￨e (￨e )￨e .￨e schedule￨e (￨e )￨e ;￨e }￨j }￨j }￨f }￨f )￨e ;￨e return￨e mainArea￨e ;￨e }￨f protected￨f void￨f createButtonsForButtonBar￨f (￨f Composite￨p parent￨p )￨f {￨f }￨f }￨d
public￨d class￨d ParameterizedTypeBinding￨d extends￨d ReferenceBinding￨d implements￨d Substitution￨d {￨d public￨e ReferenceBinding￨e type￨e ;￨e public￨e TypeBinding￨e [￨e ]￨e arguments￨e ;￨e public￨e LookupEnvironment￨e environment￨e ;￨e public￨e char￨e [￨e ]￨e genericTypeSignature￨e ;￨e public￨e ReferenceBinding￨e superclass￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e superInterfaces￨e ;￨e public￨e FieldBinding￨e [￨e ]￨e fields￨e ;￨e public￨e ReferenceBinding￨e [￨e ]￨e memberTypes￨e ;￨e public￨e MethodBinding￨e [￨e ]￨e methods￨e ;￨e public￨e ReferenceBinding￨e enclosingType￨e ;￨e public￨f ParameterizedTypeBinding￨f (￨f ReferenceBinding￨p type￨p ,￨p TypeBinding￨p [￨p ]￨p arguments￨p ,￨p ReferenceBinding￨p enclosingType￨p ,￨p LookupEnvironment￨p environment￨p )￨f {￨f }￨f public￨f void￨f collectSubstitutes￨f (￨f TypeBinding￨p otherType￨p ,￨p Map￨p substitutes￨p )￨f {￨f }￨f public￨f void￨f computeId￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f constantPoolName￨f (￨f )￨f {￨f }￨f public￨f ParameterizedMethodBinding￨f createParameterizedMethod￨f (￨f MethodBinding￨p originalMethod￨p )￨f {￨f <START_BUG>￨b return￨b new￨b ParameterizedMethodBinding￨b (￨b this￨b ,￨b originalMethod￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f String￨f debugName￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f enclosingType￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f erasure￨f (￨f )￨f {￨f }￨f public￨f int￨f fieldCount￨f (￨f )￨f {￨f }￨f public￨f FieldBinding￨f [￨f ]￨f fields￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f genericTypeSignature￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f getExactConstructor￨f (￨f TypeBinding￨p [￨p ]￨p argumentTypes￨p )￨f {￨f }￨f public￨f MethodBinding￨f getExactMethod￨f (￨f char￨p [￨p ]￨p selector￨p ,￨p TypeBinding￨p [￨p ]￨p argumentTypes￨p ,￨p CompilationUnitScope￨p refScope￨p )￨f {￨f }￨f public￨f FieldBinding￨f getField￨f (￨f char￨p [￨p ]￨p fieldName￨p ,￨p boolean￨p needResolve￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f getMemberType￨f (￨f char￨p [￨p ]￨p typeName￨p )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f getMethods￨f (￨f char￨p [￨p ]￨p selector￨p )￨f {￨f }￨f public￨f boolean￨f hasMemberTypes￨f (￨f )￨f {￨f }￨f public￨f boolean￨f implementsMethod￨f (￨f MethodBinding￨p method￨p )￨f {￨f }￨f void￨f initialize￨f (￨f ReferenceBinding￨p someType￨p ,￨p TypeBinding￨p [￨p ]￨p someArguments￨p )￨f {￨f }￨f protected￨f void￨f initializeArguments￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEquivalentTo￨f (￨f TypeBinding￨p otherType￨p )￨f {￨f }￨f public￨f boolean￨f isParameterizedType￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f memberTypes￨f (￨f )￨f {￨f }￨f public￨f MethodBinding￨f [￨f ]￨f methods￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f qualifiedSourceName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f readableName￨f (￨f )￨f {￨f }￨f ReferenceBinding￨f resolve￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f shortReadableName￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f signature￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f sourceName￨f (￨f )￨f {￨f }￨f public￨f TypeBinding￨f substitute￨f (￨f TypeBinding￨p originalType￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f superclass￨f (￨f )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f superInterfaces￨f (￨f )￨f {￨f }￨f public￨f void￨f swapUnresolved￨f (￨f UnresolvedReferenceBinding￨p unresolvedType￨p ,￨p ReferenceBinding￨p resolvedType￨p ,￨p LookupEnvironment￨p env￨p )￨f {￨f }￨f public￨f ReferenceBinding￨f [￨f ]￨f syntheticEnclosingInstanceTypes￨f (￨f )￨f {￨f }￨f public￨f SyntheticArgumentBinding￨f [￨f ]￨f syntheticOuterLocalVariables￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f qualifiedPackageName￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f TypeVariableBinding￨f [￨f ]￨f typeVariables￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Jaxb2MarshallerTests￨d extends￨d AbstractMarshallerTests￨d {￨d private￨e static￨e final￨e String￨e CONTEXT_PATH￨e =￨e "org.springframework.oxm.jaxb.test"￨e ;￨e private￨e Jaxb2Marshaller￨e marshaller￨e ;￨e private￨e Flights￨e flights￨e ;￨e @￨f Override￨f public￨f Marshaller￨f createMarshaller￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f Object￨f createFlights￨f (￨f )￨f {￨f FlightType￨e flight￨e =￨e new￨e FlightType￨e (￨e )￨e ;￨e flight￨e .￨e setNumber￨e (￨e 42L￨e )￨e ;￨e flights￨e =￨e new￨e Flights￨e (￨e )￨e ;￨e <START_BUG>￨b flights￨b .￨b getFlight￨b (￨b )￨b .￨b configureBinding￨b (￨b flight￨b )￨b ;￨b <END_BUG>￨b return￨e flights￨e ;￨e }￨f @￨f Test￨f public￨f void￨f marshalSAXResult￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f laxyInit￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f properties￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨d Test￨d (￨d expected￨d =￨d IllegalArgumentException￨d .￨d class￨d )￨d public￨d void￨d noContextPathOrClassesToBeBound￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d @￨d Test￨d (￨d expected￨d =￨d UncategorizedMappingException￨d .￨d class￨d )￨d public￨d void￨d testInvalidContextPath￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d @￨d Test￨d (￨d expected￨d =￨d XmlMappingException￨d .￨d class￨d )￨d public￨d void￨d marshalInvalidClass￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d @￨f Test￨f public￨f void￨f supportsContextPath￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f supportsClassesToBeBound￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f marshalAttachments￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Spinner￨d extends￨d Composite￨d {￨d public￨e static￨e final￨e int￨e LIMIT￨e ;￨e public￨f Spinner￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f protected￨f void￨f checkSubclass￨f (￨f )￨f {￨f }￨f void￨f createHandle￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f addModifyListener￨f (￨f ModifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f addSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f void￨f addVerifyListener￨f (￨f VerifyListener￨p listener￨p )￨f {￨f }￨f public￨f Point￨f computeSize￨f (￨f int￨p wHint￨p ,￨p int￨p hHint￨p ,￨p boolean￨p changed￨p )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f public￨f void￨f copy￨f (￨f )￨f {￨f }￨f public￨f void￨f cut￨f (￨f )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f int￨f defaultBackground￨f (￨f )￨f {￨f }￨f int￨f defaultForeground￨f (￨f )￨f {￨f }￨f public￨f int￨f getDigits￨f (￨f )￨f {￨f }￨f public￨f int￨f getIncrement￨f (￨f )￨f {￨f }￨f public￨f int￨f getMaximum￨f (￨f )￨f {￨f }￨f public￨f int￨f getMinimum￨f (￨f )￨f {￨f }￨f public￨f int￨f getPageIncrement￨f (￨f )￨f {￨f }￨f public￨f int￨f getSelection￨f (￨f )￨f {￨f }￨f public￨f String￨f getText￨f (￨f )￨f {￨f }￨f public￨f int￨f getTextLimit￨f (￨f )￨f {￨f checkWidget￨e (￨e )￨e ;￨e <START_BUG>￨b return￨b 0￨b ;￨b <END_BUG>￨b }￨f boolean￨f hasFocus￨f (￨f )￨f {￨f }￨f void￨f hookEvents￨f (￨f )￨f {￨f }￨f public￨f void￨f paste￨f (￨f )￨f {￨f }￨f int￨f Pt_CB_NUMERIC_CHANGED￨f (￨f int￨p widget￨p ,￨p int￨p info￨p )￨f {￨f }￨f void￨f register￨f (￨f )￨f {￨f }￨f public￨f void￨f removeModifyListener￨f (￨f ModifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f removeSelectionListener￨f (￨f SelectionListener￨p listener￨p )￨f {￨f }￨f void￨f removeVerifyListener￨f (￨f VerifyListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setDigits￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setIncrement￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setMaximum￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setMinimum￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setPageIncrement￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setSelection￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f void￨f setTextLimit￨f (￨f int￨p limit￨p )￨f {￨f }￨f public￨f void￨f setValues￨f (￨f int￨p selection￨p ,￨p int￨p minimum￨p ,￨p int￨p maximum￨p ,￨p int￨p digits￨p ,￨p int￨p increment￨p ,￨p int￨p pageIncrement￨p )￨f {￨f }￨f boolean￨f translateTraversal￨f (￨f int￨p key_sym￨p ,￨p PhKeyEvent_t￨p phEvent￨p )￨f {￨f }￨f int￨f widgetClass￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FieldInfo￨d extends￨d ClassFileStruct￨d implements￨d Comparable￨d ,￨d AttributeNamesConstants￨d ,￨d IBinaryField￨d ,￨d TypeIds￨d {￨d private￨e int￨e accessFlags￨e ;￨e private￨e int￨e attributeBytes￨e ;￨e private￨e Constant￨e constant￨e ;￨e private￨e int￨e [￨e ]￨e constantPoolOffsets￨e ;￨e private￨e char￨e [￨e ]￨e descriptor￨e ;￨e private￨e char￨e [￨e ]￨e name￨e ;￨e private￨e char￨e [￨e ]￨e signature￨e ;￨e private￨e int￨e signatureUtf8Offset￨e ;￨e private￨e long￨e tagBits￨e ;￨e private￨e Object￨e wrappedConstantValue￨e ;￨e public￨f FieldInfo￨f (￨f byte￨p [￨p ]￨p classFileBytes￨p ,￨p int￨p [￨p ]￨p offsets￨p ,￨p int￨p offset￨p )￨f {￨f }￨f public￨f int￨f compareTo￨f (￨f Object￨p o￨p )￨f {￨f }￨f private￨f int￨f decodeAnnotation￨f (￨f int￨p offset￨p )￨f {￨f }￨f private￨f int￨f decodeElementValue￨f (￨f int￨p offset￨p )￨f {￨f }￨f private￨f void￨f decodeStandardAnnotations￨f (￨f int￨p offset￨p )￨f {￨f }￨f public￨f Constant￨f getConstant￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getGenericSignature￨f (￨f )￨f {￨f }￨f public￨f int￨f getModifiers￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getName￨f (￨f )￨f {￨f }￨f public￨f long￨f getTagBits￨f (￨f )￨f {￨f }￨f public￨f char￨f [￨f ]￨f getTypeName￨f (￨f )￨f {￨f }￨f public￨f Object￨f getWrappedConstantValue￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c wrappedConstantValue￨c )￨c ==￨c null￨c )￨j {￨j if￨j (￨j hasConstant￨c (￨c )￨c )￨j {￨j Constant￨e fieldConstant￨e =￨e getConstant￨e (￨e )￨e ;￨e switch￨s (￨s fieldConstant￨c .￨c typeID￨c (￨c )￨c )￨s {￨s case￨c TypeIds￨c .￨c T_int￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Integer￨e (￨e fieldConstant￨e .￨e intValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_byte￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Byte￨e (￨e fieldConstant￨e .￨e byteValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_short￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Short￨e (￨e fieldConstant￨e .￨e shortValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_char￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Character￨e (￨e fieldConstant￨e .￨e charValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_float￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Float￨e (￨e fieldConstant￨e .￨e floatValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_double￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Double￨e (￨e fieldConstant￨e .￨e doubleValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_boolean￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e Util￨e .￨e toBoolean￨e (￨e fieldConstant￨e .￨e booleanValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e case￨c TypeIds￨c .￨c T_long￨c :￨c this￨e .￨e wrappedConstantValue￨e =￨e new￨e Long￨e (￨e fieldConstant￨e .￨e longValue￨e (￨e )￨e )￨e ;￨e break￨e ;￨e <START_BUG>￨b <END_BUG>￨b case￨c T_String￨c :￨c <END_BUG>￨e this￨e .￨e wrappedConstantValue￨e =￨e fieldConstant￨e .￨e stringValue￨e (￨e )￨e ;￨e }￨s }￨j }￨j return￨e this￨e .￨e wrappedConstantValue￨e ;￨e }￨f public￨f boolean￨f hasConstant￨f (￨f )￨f {￨f }￨f void￨f initialize￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isSynthetic￨f (￨f )￨f {￨f }￨f private￨f void￨f readConstantAttribute￨f (￨f )￨f {￨f }￨f private￨f void￨f readModifierRelatedAttributes￨f (￨f )￨f {￨f }￨f protected￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f int￨f sizeInBytes￨f (￨f )￨f {￨f }￨f public￨f void￨f throwFormatException￨f (￨f )￨f throws￨f ClassFormatException￨f (￨f )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ModClusterEnableContext￨d implements￨d OperationStepHandler￨d {￨d static￨e final￨e ModClusterEnableContext￨e INSTANCE￨e =￨e new￨e ModClusterEnableContext￨e (￨e )￨e ;￨e static￨f OperationDefinition￨f getDefinition￨f (￨f ResourceDescriptionResolver￨p descriptionResolver￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j (￨c context￨c .￨c isNormalServer￨c (￨c )￨c )￨c &&￨c (￨c (￨c context￨c .￨c getServiceRegistry￨c (￨c false￨c )￨c .￨c getService￨c (￨c SERVICE_NAME￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j context￨f .￨f addStep￨f (￨f new￨f OperationStepHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f ServiceController￨e <￨e ?￨e >￨e controller￨e =￨e context￨e .￨e getServiceRegistry￨e (￨e false￨e )￨e .￨e getService￨e (￨e SERVICE_NAME￨e )￨e ;￨e final￨e ModClusterServiceMBean￨e service￨e =￨e (￨e (￨e ModClusterServiceMBean￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e ModClusterLogger￨e .￨e ROOT_LOGGER￨e .￨e debugf￨e (￨e "enable-context:<seq2seq4repair_space>%s"￨e ,￨e operation￨e )￨e ;￨e final￨e String￨e webHost￨e =￨e ModClusterSubsystemResourceDefinition￨e .￨e VIRTUAL_HOST￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e operation￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e String￨e webContext￨e =￨e ModClusterSubsystemResourceDefinition￨e .￨e CONTEXT￨e .￨e resolveModelAttribute￨e (￨e context￨e ,￨e operation￨e )￨e .￨e asString￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f service￨e .￨e enableContext￨e (￨e webHost￨e ,￨e webContext￨e )￨e ;￨e }￨f catch￨f (￨f IllegalArgumentException￨p e￨p )￨f {￨f <START_BUG>￨b throw￨b new￨b OperationFailedException￨b (￨b new￨b ModelNode￨b (￨b )￨b .￨b set￨b (￨b ROOT_LOGGER￨b .￨b contextOrHostNotFound￨b (￨b webHost￨b ,￨b webContext￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f context￨f .￨f completeStep￨f (￨f new￨f OperationContext￨f .￨f RollbackHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f handleRollback￨f (￨f OperationContext￨p context￨p ,￨p ModelNode￨p operation￨p )￨f {￨f service￨e .￨e disableContext￨e (￨e webHost￨e ,￨e webContext￨e )￨e ;￨e }￨f }￨f )￨e ;￨e }￨f }￨f ,￨e RUNTIME￨e )￨e ;￨e }￨j context￨e .￨e stepCompleted￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d ConstantInitializer￨d <￨d T￨d >￨d implements￨d ConcurrentInitializer￨d <￨d T￨d >￨d {￨d private￨e static￨e final￨e String￨e FMT_TO_STRING￨e =￨e "ConstantInitializer@%d<seq2seq4repair_space>[<seq2seq4repair_space>object<seq2seq4repair_space>=<seq2seq4repair_space>%s<seq2seq4repair_space>]"￨e ;￨e private￨e final￨e T￨e object￨e ;￨e public￨f ConstantInitializer￨f (￨f final￨p T￨p obj￨p )￨f {￨f }￨f public￨f final￨f T￨f getObject￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f T￨f get￨f (￨f )￨f throws￨f ConcurrentException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f final￨p Object￨p obj￨p )￨f {￨f if￨j (￨j (￨c this￨c )￨c ==￨c obj￨c )￨j {￨j return￨e true￨e ;￨e }￨j if￨j (￨j !￨c (￨c obj￨c instanceof￨c ConstantInitializer￨c <￨c ?￨c >￨c )￨c )￨j {￨j return￨e false￨e ;￨e }￨j <START_BUG>￨b ConstantInitializer￨b <￨b ?￨b >￨b c￨b =￨b (￨b (￨b ConstantInitializer￨b <￨b ?￨b >￨b )￨b (￨b obj￨b )￨b )￨b ;￨b <END_BUG>￨b return￨e ObjectUtils￨e .￨e equals￨e (￨e getObject￨e (￨e )￨e ,￨e c￨e .￨e getObject￨e (￨e )￨e )￨e ;￨e }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d WriteAttributeHandlers￨d {￨d public￨d static￨d class￨d WriteAttributeOperationHandler￨d implements￨d ModelUpdateOperationHandler￨d {￨d public￨e static￨e OperationHandler￨e INSTANCE￨e =￨e new￨e WriteAttributeHandlers￨e .￨e WriteAttributeOperationHandler￨e (￨e )￨e ;￨e final￨e ParameterValidator￨e validator￨e ;￨e private￨f WriteAttributeOperationHandler￨f (￨f )￨f {￨f }￨f protected￨f WriteAttributeOperationHandler￨f (￨f ParameterValidator￨p validator￨p )￨f {￨f }￨f @￨f Override￨f public￨f Cancellable￨f execute￨f (￨f final￨p NewOperationContext￨p context￨p ,￨p final￨p ModelNode￨p operation￨p ,￨p final￨p ResultHandler￨p resultHandler￨p )￨f {￨f Cancellable￨e cancellable￨e =￨e Cancellable￨e .￨e NULL￨e ;￨e try￨f (￨f )￨f {￨f final￨e String￨e name￨e =￨e operation￨e .￨e require￨e (￨e NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e ModelNode￨e value￨e =￨e operation￨e .￨e get￨e (￨e VALUE￨e )￨e ;￨e String￨e error￨e =￨e validateValue￨e (￨e name￨e ,￨e value￨e )￨e ;￨e if￨j (￨j error￨c !=￨c null￨c )￨j {￨j resultHandler￨e .￨e handleFailed￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e error￨e )￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b context￨b .￨b getSubModel￨b (￨b )￨b .￨b require￨b (￨b name￨b )￨b .￨b set￨b (￨b value￨b )￨b ;￨b <END_BUG>￨b resultHandler￨e .￨e handleResultComplete￨e (￨e null￨e )￨e ;￨e }￨j }￨f catch￨f (￨f final￨p Exception￨p e￨p )￨f {￨f resultHandler￨e .￨e handleFailed￨e (￨e new￨e ModelNode￨e (￨e )￨e .￨e set￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e )￨e )￨e ;￨e }￨f return￨e cancellable￨e ;￨e }￨f protected￨f String￨f validateValue￨f (￨f String￨p name￨p ,￨p ModelNode￨p value￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d ModelTypeValidatingHandler￨d extends￨d WriteAttributeHandlers￨d .￨d WriteAttributeOperationHandler￨d {￨d public￨f ModelTypeValidatingHandler￨f (￨f final￨p ModelType￨p type￨p )￨f {￨f }￨f public￨f ModelTypeValidatingHandler￨f (￨f final￨p ModelType￨p type￨p ,￨p final￨p boolean￨p nullable￨p )￨f {￨f }￨f public￨f ModelTypeValidatingHandler￨f (￨f final￨p ModelType￨p type￨p ,￨p final￨p boolean￨p nullable￨p ,￨p final￨p boolean￨p allowExpressions￨p )￨f {￨f }￨f public￨f ModelTypeValidatingHandler￨f (￨f final￨p boolean￨p nullable￨p ,￨p final￨p boolean￨p allowExpressions￨p ,￨p ModelType￨p firstValidType￨p ,￨p ModelType￨p ...￨p otherValidTypes￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d StringLengthValidatingHandler￨d extends￨d WriteAttributeHandlers￨d .￨d WriteAttributeOperationHandler￨d {￨d public￨f StringLengthValidatingHandler￨f (￨f final￨p int￨p min￨p )￨f {￨f }￨f public￨f StringLengthValidatingHandler￨f (￨f final￨p int￨p min￨p ,￨p final￨p boolean￨p nullable￨p )￨f {￨f }￨f public￨f StringLengthValidatingHandler￨f (￨f final￨p int￨p min￨p ,￨p final￨p int￨p max￨p ,￨p final￨p boolean￨p nullable￨p ,￨p final￨p boolean￨p allowExpressions￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d IntRangeValidatingHandler￨d extends￨d WriteAttributeHandlers￨d .￨d WriteAttributeOperationHandler￨d {￨d public￨f IntRangeValidatingHandler￨f (￨f final￨p int￨p min￨p )￨f {￨f }￨f public￨f IntRangeValidatingHandler￨f (￨f final￨p int￨p min￨p ,￨p final￨p boolean￨p nullable￨p )￨f {￨f }￨f public￨f IntRangeValidatingHandler￨f (￨f final￨p int￨p min￨p ,￨p final￨p int￨p max￨p ,￨p final￨p boolean￨p nullable￨p ,￨p final￨p boolean￨p allowExpressions￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d InetAddressValidatingHandler￨d extends￨d WriteAttributeHandlers￨d .￨d WriteAttributeOperationHandler￨d {￨d public￨f InetAddressValidatingHandler￨f (￨f final￨p boolean￨p nullable￨p ,￨p final￨p boolean￨p allowExpressions￨p )￨f {￨f }￨f }￨d public￨d static￨d class￨d ListValidatatingHandler￨d extends￨d WriteAttributeHandlers￨d .￨d WriteAttributeOperationHandler￨d {￨d public￨f ListValidatatingHandler￨f (￨f ParameterValidator￨p elementValidator￨p )￨f {￨f }￨f public￨f ListValidatatingHandler￨f (￨f ParameterValidator￨p elementValidator￨p ,￨p boolean￨p nullable￨p )￨f {￨f }￨f public￨f ListValidatatingHandler￨f (￨f ParameterValidator￨p elementValidator￨p ,￨p boolean￨p nullable￨p ,￨p int￨p minSize￨p ,￨p int￨p maxSize￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d EJB3SubsystemXMLPersister￨d implements￨d XMLElementWriter￨d <￨d SubsystemMarshallingContext￨d >￨d {￨d public￨e static￨e final￨e EJB3SubsystemXMLPersister￨e INSTANCE￨e =￨e new￨e EJB3SubsystemXMLPersister￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f writeContent￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f SubsystemMarshallingContext￨f context￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f <START_BUG>￨b context￨b .￨b startSubsystemElement￨b (￨b EJB3_1_5￨b .￨b getUriString￨b (￨b )￨b ,￨b false￨b )￨b ;￨b <END_BUG>￨b writeElements￨e (￨e writer￨e ,￨e context￨e )￨e ;￨e writer￨e .￨e writeEndElement￨e (￨e )￨e ;￨e }￨f protected￨f void￨f writeElements￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f SubsystemMarshallingContext￨f context￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeIIOP￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeThreadPools￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f threadPoolsModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f protected￨f void￨f writeRemote￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeAsync￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeMDB￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f mdbModelNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeEntityBean￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f entityModelNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeSingletonBean￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f singletonBeanModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeStatefulBean￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f statefulBeanModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeDefaultSLSBPool￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeBeanInstancePools￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f beanInstancePoolModelNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeStrictMaxPoolConfig￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f Property￨f strictMaxPoolModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeCaches￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeClusterPassivationStores￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeFilePassivationStores￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f model￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeTimerService￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f timerServiceModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeDatabaseDataStores￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f timerServiceModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeFileDataStores￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f timerServiceModel￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeChannelCreationOptions￨f (￨f final￨f XMLExtendedStreamWriter￨f writer￨f ,￨f final￨f ModelNode￨f node￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SingleNameReference￨d extends￨d NameReference￨d implements￨d OperatorIds￨d {￨d public￨e char￨e [￨e ]￨e token￨e ;￨e public￨e MethodBinding￨e [￨e ]￨e syntheticAccessors￨e ;￨e public￨e static￨e final￨e int￨e READ￨e =￨e 0￨e ;￨e public￨e static￨e final￨e int￨e WRITE￨e =￨e 1￨e ;￨e public￨f SingleNameReference￨f (￨f char￨p [￨p ]￨p source￨p ,￨p long￨p pos￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p isCompound￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f TypeBinding￨f checkFieldAccess￨f (￨f BlockScope￨p scope￨p )￨f {￨f FieldBinding￨e fieldBinding￨e =￨e (￨e (￨e FieldBinding￨e )￨e (￨e binding￨e )￨e )￨e ;￨e bits￨e &=￨e ~￨e (￨e ASTNode￨e .￨e RestrictiveFlagMASK￨e )￨e ;￨e bits￨e |=￨e FIELD￨e ;￨e if￨j (￨j !￨c (￨c (￨c (￨c FieldBinding￨c )￨c (￨c binding￨c )￨c )￨c .￨c isStatic￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j scope￨c .￨c methodScope￨c (￨c )￨c .￨c isStatic￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e staticFieldAccessToNonStaticVariable￨e (￨e this￨e ,￨e fieldBinding￨e )￨e ;￨e constant￨e =￨e NotAConstant￨e ;￨e return￨e null￨e ;￨e }￨j }￨j <START_BUG>￨b constant￨b =￨b FieldReference￨b .￨b getConstantFor￨b (￨b fieldBinding￨b ,￨b true￨b ,￨b this￨b ,￨b 0￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j isFieldUseDeprecated￨c (￨c fieldBinding￨c ,￨c scope￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e deprecatedField￨e (￨e fieldBinding￨e ,￨e this￨e )￨e ;￨e }￨j MethodScope￨e ms￨e =￨e scope￨e .￨e methodScope￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c ms￨c .￨c enclosingSourceType￨c (￨c )￨c )￨c ==￨c (￨c fieldBinding￨c .￨c declaringClass￨c )￨c )￨c &&￨c (￨c (￨c ms￨c .￨c fieldDeclarationIndex￨c )￨c !=￨c (￨c ms￨c .￨c NotInFieldDecl￨c )￨c )￨c )￨c &&￨c (￨c (￨c fieldBinding￨c .￨c id￨c )￨c >=￨c (￨c ms￨c .￨c fieldDeclarationIndex￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c !￨c (￨c fieldBinding￨c .￨c isStatic￨c (￨c )￨c )￨c )￨c ||￨c (￨c ms￨c .￨c isStatic￨c )￨c )￨j {￨j scope￨e .￨e problemReporter￨e (￨e )￨e .￨e forwardReference￨e (￨e this￨e ,￨e 0￨e ,￨e scope￨e .￨e enclosingSourceType￨e (￨e )￨e )￨e ;￨e }￨j }￨j return￨e fieldBinding￨e .￨e type￨e ;￨e }￨f public￨f void￨f generateAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Assignment￨p assignment￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCompoundAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p Expression￨p expression￨p ,￨p int￨p operator￨p ,￨p int￨p assignmentImplicitConversion￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateCompoundAssignment￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p MethodBinding￨p writeAccessor￨p ,￨p Expression￨p expression￨p ,￨p int￨p operator￨p ,￨p int￨p assignmentImplicitConversion￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generatePostIncrement￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p CompoundAssignment￨p postIncrement￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f }￨f public￨f void￨f generateReceiver￨f (￨f CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f manageEnclosingInstanceAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p )￨f {￨f }￨f public￨f void￨f manageSyntheticReadAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p )￨f {￨f }￨f public￨f void￨f manageSyntheticWriteAccessIfNecessary￨f (￨f BlockScope￨p currentScope￨p )￨f {￨f }￨f public￨f TypeBinding￨f reportError￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f String￨f toStringExpression￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f public￨f String￨f unboundReferenceErrorName￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Session￨d implements￨d IClusterable￨d ,￨d IEventSink￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d Session￨d .￨d class￨d )￨d ;￨d public￨d static￨d final￨d String￨d SESSION_ATTRIBUTE_NAME￨d =￨d "session"￨d ;￨d private￨d int￨d sequence￨d =￨d 1￨d ;￨d private￨d int￨d pageId￨d =￨d 0￨d ;￨d public￨d static￨d boolean￨d exists￨d (￨d )￨d {￨d }￨d public￨f static￨f Session￨f get￨f (￨f )￨f {￨f }￨f protected￨e ClientInfo￨e clientInfo￨e ;￨e private￨e transient￨e boolean￨e dirty￨e =￨e false￨e ;￨e private￨e final￨e FeedbackMessages￨e feedbackMessages￨e =￨e new￨e FeedbackMessages￨e (￨e )￨e ;￨e private￨e String￨e id￨e =￨e null￨e ;￨e private￨e Locale￨e locale￨e ;￨e private￨e MetaDataEntry￨e <￨e ?￨e >￨e [￨e ]￨e metaData￨e ;￨e private￨e transient￨e boolean￨e sessionInvalidated￨e =￨e false￨e ;￨e private￨e transient￨e ISessionStore￨e sessionStore￨e ;￨e private￨e String￨e style￨e ;￨e private￨e transient￨e Map￨e <￨e String￨e ,￨e Serializable￨e >￨e temporarySessionAttributes￨e ;￨e public￨f Session￨f (￨f Request￨p request￨p )￨f {￨f }￨f public￨f final￨f void￨f bind￨f (￨f )￨f {￨f }￨f public￨f abstract￨f void￨f cleanupFeedbackMessages￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f clear￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f error￨f (￨f final￨p String￨p message￨p )￨f {￨f }￨f public￨f final￨f Application￨f getApplication￨f (￨f )￨f {￨f }￨f public￨f IAuthorizationStrategy￨f getAuthorizationStrategy￨f (￨f )￨f {￨f }￨f public￨f final￨f IClassResolver￨f getClassResolver￨f (￨f )￨f {￨f }￨f public￨f abstract￨f ClientInfo￨f getClientInfo￨f (￨f )￨f {￨f }￨f public￨f final￨f FeedbackMessages￨f getFeedbackMessages￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getId￨f (￨f )￨f {￨f }￨f public￨f Locale￨f getLocale￨f (￨f )￨f {￨f }￨f public￨f final￨f <￨f M￨f extends￨f Serializable￨f >￨f M￨f getMetaData￨f (￨f final￨p MetaDataKey￨p <￨p M￨p >￨p key￨p )￨f {￨f }￨f protected￨f boolean￨f isCurrentRequestValid￨f (￨f RequestCycle￨p lockedRequestCycle￨p )￨f {￨f }￨f public￨f final￨f IPageFactory￨f getPageFactory￨f (￨f )￨f {￨f }￨f public￨f final￨f long￨f getSizeInBytes￨f (￨f )￨f {￨f }￨f public￨f final￨f String￨f getStyle￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f info￨f (￨f final￨p String￨p message￨p )￨f {￨f }￨f public￨f void￨f invalidate￨f (￨f )￨f {￨f if￨j (￨j (￨c sessionInvalidated￨c )￨c ==￨c false￨c )￨j {￨j RequestCycle￨f .￨f get￨f (￨f )￨f .￨f getListeners￨f (￨f )￨f .￨f add￨f (￨f new￨f AbstractRequestCycleListener￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f onDetach￨f (￨f final￨p RequestCycle￨p cycle￨p )￨f {￨f <START_BUG>￨b destroy￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f }￨f )￨e ;￨e }￨j sessionInvalidated￨e =￨e true￨e ;￨e }￨f private￨f void￨f destroy￨f (￨f )￨f {￨f }￨f public￨f void￨f invalidateNow￨f (￨f )￨f {￨f }￨f public￨f void￨f replaceSession￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isSessionInvalidated￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f isTemporary￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f setClientInfo￨f (￨f ClientInfo￨p clientInfo￨p )￨f {￨f }￨f public￨f void￨f setLocale￨f (￨f final￨p Locale￨p locale￨p )￨f {￨f }￨f public￨f final￨f void￨f setMetaData￨f (￨f final￨p MetaDataKey￨p <￨p ?￨p >￨p key￨p ,￨p final￨p Serializable￨p object￨p )￨f {￨f }￨f public￨f final￨f Session￨f setStyle￨f (￨f final￨p String￨p style￨p )￨f {￨f }￨f public￨f final￨f void￨f warn￨f (￨f final￨p String￨p message￨p )￨f {￨f }￨f private￨f void￨f addFeedbackMessage￨f (￨f String￨p message￨p ,￨p int￨p level￨p )￨f {￨f }￨f protected￨f void￨f detach￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f dirty￨f (￨f )￨f {￨f }￨f public￨f final￨f Serializable￨f getAttribute￨f (￨f final￨p String￨p name￨p )￨f {￨f }￨f protected￨f final￨f List￨f <￨f String￨f >￨f getAttributeNames￨f (￨f )￨f {￨f }￨f protected￨f ISessionStore￨f getSessionStore￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f removeAttribute￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f final￨f void￨f setAttribute￨f (￨f String￨p name￨p ,￨p Serializable￨p value￨p )￨f {￨f }￨f public￨f synchronized￨f int￨f nextSequenceValue￨f (￨f )￨f {￨f }￨f public￨f synchronized￨f int￨f nextPageId￨f (￨f )￨f {￨f }￨f public￨f final￨f IPageManager￨f getPageManager￨f (￨f )￨f {￨f }￨f public￨f void￨f onEvent￨f (￨f IEvent￨p <￨p ?￨p >￨p event￨p )￨f {￨f }￨f }￨d
public￨d class￨d CommitWorkingCopyOperation￨d extends￨d JavaModelOperation￨d {￨d public￨f CommitWorkingCopyOperation￨f (￨f ICompilationUnit￨p element￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f protected￨f void￨f executeOperation￨f (￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f beginTask￨e (￨e Util￨e .￨e bind￨e (￨e "workingCopy.commit"￨e )￨e ,￨e 2￨e )￨e ;￨e CompilationUnit￨e workingCopy￨e =￨e (￨e (￨e CompilationUnit￨e )￨e (￨e getCompilationUnit￨e (￨e )￨e )￨e )￨e ;￨e IFile￨e resource￨e =￨e (￨e (￨e IFile￨e )￨e (￨e workingCopy￨e .￨e getResource￨e (￨e )￨e )￨e )￨e ;￨e ICompilationUnit￨e primary￨e =￨e workingCopy￨e .￨e getPrimary￨e (￨e )￨e ;￨e boolean￨e isPrimary￨e =￨e workingCopy￨e .￨e isPrimary￨e (￨e )￨e ;￨e JavaElementDeltaBuilder￨e deltaBuilder￨e =￨e null￨e ;￨e PackageFragmentRoot￨e root￨e =￨e (￨e (￨e PackageFragmentRoot￨e )￨e (￨e workingCopy￨e .￨e getAncestor￨e (￨e IJavaElement￨e .￨e PACKAGE_FRAGMENT_ROOT￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b isPrimary￨b ||￨b (￨b (￨b root￨b .￨b isOnClasspath￨b (￨b )￨b )￨b &&￨b (￨b resource￨b .￨b isAccessible￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b if￨j (￨j (￨c !￨c isPrimary￨c )￨c &&￨c (￨c !￨c (￨c primary￨c .￨c isOpen￨c (￨c )￨c )￨c )￨c )￨j {￨j primary￨e .￨e open￨e (￨e null￨e )￨e ;￨e }￨j if￨j (￨j (￨c !￨c (￨c Util￨c .￨c isExcluded￨c (￨c workingCopy￨c )￨c )￨c )￨c &&￨c (￨c (￨c !￨c isPrimary￨c )￨c ||￨c (￨c !￨c (￨c workingCopy￨c .￨c isConsistent￨c (￨c )￨c )￨c )￨c )￨c )￨j {￨j deltaBuilder￨e =￨e new￨e JavaElementDeltaBuilder￨e (￨e primary￨e )￨e ;￨e }￨j IBuffer￨e primaryBuffer￨e =￨e primary￨e .￨e getBuffer￨e (￨e )￨e ;￨e if￨j (￨j !￨c isPrimary￨c )￨j {￨j if￨j (￨j primaryBuffer￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j char￨e [￨e ]￨e primaryContents￨e =￨e primaryBuffer￨e .￨e getCharacters￨e (￨e )￨e ;￨e boolean￨e hasSaved￨e =￨e false￨e ;￨e try￨f (￨f )￨f {￨f IBuffer￨e workingCopyBuffer￨e =￨e workingCopy￨e .￨e getBuffer￨e (￨e )￨e ;￨e if￨j (￨j workingCopyBuffer￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j primaryBuffer￨e .￨e setContents￨e (￨e workingCopyBuffer￨e .￨e getCharacters￨e (￨e )￨e )￨e ;￨e primaryBuffer￨e .￨e save￨e (￨e fMonitor￨e ,￨e fForce￨e )￨e ;￨e primary￨e .￨e makeConsistent￨e (￨e this￨e )￨e ;￨e hasSaved￨e =￨e true￨e ;￨e }￨f finally￨f (￨f )￨f {￨f if￨j (￨j !￨c hasSaved￨c )￨j {￨j primaryBuffer￨e .￨e setContents￨e (￨e primaryContents￨e )￨e ;￨e }￨j }￨f }￨j else￨j {￨j primaryBuffer￨e .￨e save￨e (￨e fMonitor￨e ,￨e fForce￨e )￨e ;￨e primary￨e .￨e makeConsistent￨e (￨e this￨e )￨e ;￨e }￨j else￨j {￨j String￨e encoding￨e =￨e workingCopy￨e .￨e getJavaProject￨e (￨e )￨e .￨e getOption￨e (￨e JavaCore￨e .￨e CORE_ENCODING￨e ,￨e true￨e )￨e ;￨e String￨e contents￨e =￨e workingCopy￨e .￨e getSource￨e (￨e )￨e ;￨e if￨j (￨j contents￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j try￨f (￨f )￨f {￨f byte￨e [￨e ]￨e bytes￨e =￨e (￨e encoding￨e ==￨e null￨e )￨e ?￨e contents￨e .￨e getBytes￨e (￨e )￨e :￨e contents￨e .￨e getBytes￨e (￨e encoding￨e )￨e ;￨e ByteArrayInputStream￨e stream￨e =￨e new￨e ByteArrayInputStream￨e (￨e bytes￨e )￨e ;￨e if￨j (￨j resource￨c .￨c exists￨c (￨c )￨c )￨j {￨j resource￨e .￨e setContents￨e (￨e stream￨e ,￨e (￨e fForce￨e ?￨e (￨e IResource￨e .￨e FORCE￨e )￨e |￨e (￨e IResource￨e .￨e KEEP_HISTORY￨e )￨e :￨e IResource￨e .￨e KEEP_HISTORY￨e )￨e ,￨e null￨e )￨e ;￨e }￨j else￨j {￨j resource￨e .￨e create￨e (￨e stream￨e ,￨e fForce￨e ,￨e fMonitor￨e )￨e ;￨e }￨j }￨f catch￨f (￨f CoreException￨p e￨p )￨f {￨f throw￨e new￨e JavaModelException￨e (￨e e￨e )￨e ;￨e }￨f catch￨f (￨f UnsupportedEncodingException￨p e￨p )￨f {￨f throw￨e new￨e JavaModelException￨e (￨e e￨e ,￨e IJavaModelStatusConstants￨e .￨e IO_EXCEPTION￨e )￨e ;￨e }￨f }￨j JavaModelOperation￨e .￨e setAttribute￨e (￨e JavaModelOperation￨e .￨e HAS_MODIFIED_RESOURCE_ATTR￨e ,￨e JavaModelOperation￨e .￨e TRUE￨e )￨e ;￨e workingCopy￨e .￨e updateTimeStamp￨e (￨e (￨e (￨e CompilationUnit￨e )￨e (￨e primary￨e )￨e )￨e )￨e ;￨e workingCopy￨e .￨e makeConsistent￨e (￨e this￨e )￨e ;￨e worked￨e (￨e 1￨e )￨e ;￨e if￨j (￨j deltaBuilder￨c !=￨c null￨c )￨j {￨j deltaBuilder￨e .￨e buildDeltas￨e (￨e )￨e ;￨e if￨j (￨j (￨c deltaBuilder￨c .￨c delta￨c )￨c !=￨c null￨c )￨j {￨j addDelta￨e (￨e deltaBuilder￨e .￨e delta￨e )￨e ;￨e }￨j }￨j worked￨e (￨e 1￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f done￨e (￨e )￨e ;￨e }￨f }￨f protected￨f ICompilationUnit￨f getCompilationUnit￨f (￨f )￨f {￨f }￨f public￨f IJavaModelStatus￨f verify￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Shell￨d extends￨d Decorations￨d {￨d int￨e shellHandle￨e ;￨e int￨e tooltipsHandle￨e ;￨e boolean￨e mapped￨e ;￨e boolean￨e moved￨e ;￨e boolean￨e resized￨e ;￨e boolean￨e opened￨e ;￨e int￨e oldX￨e ;￨e int￨e oldY￨e ;￨e int￨e oldWidth￨e ;￨e int￨e oldHeight￨e ;￨e int￨e minWidth￨e ;￨e int￨e minHeight￨e ;￨e Control￨e lastActive￨e ;￨e Region￨e region￨e ;￨e public￨f Shell￨f (￨f )￨f {￨f }￨f public￨f Shell￨f (￨f int￨p style￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Display￨p display￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Display￨p display￨p ,￨p int￨p style￨p )￨f {￨f }￨f Shell￨f (￨f Display￨p display￨p ,￨p Shell￨p parent￨p ,￨p int￨p style￨p ,￨p int￨p handle￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Shell￨p parent￨p )￨f {￨f }￨f public￨f Shell￨f (￨f Shell￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f public￨f static￨f Shell￨f gtk_new￨f (￨f Display￨p display￨p ,￨p int￨p handle￨p )￨f {￨f }￨f static￨f int￨f checkStyle￨f (￨f int￨p style￨p )￨f {￨f }￨f public￨f void￨f addShellListener￨f (￨f ShellListener￨p listener￨p )￨f {￨f }￨f void￨f adjustTrim￨f (￨f )￨f {￨f }￨f void￨f bringToTop￨f (￨f boolean￨p force￨p )￨f {￨f if￨j (￨j !￨c (￨c OS￨c .￨c GTK_WIDGET_VISIBLE￨c (￨c shellHandle￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j Display￨e display￨e =￨e this￨e .￨e display￨e ;￨e Shell￨e activeShell￨e =￨e display￨e .￨e activeShell￨e ;￨e if￨j (￨j activeShell￨c ==￨c (￨c this￨c )￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j !￨c force￨c )￨j {￨j if￨j (￨j activeShell￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j int￨e focusHandle￨e =￨e OS￨e .￨e gtk_window_get_focus￨e (￨e activeShell￨e .￨e shellHandle￨e )￨e ;￨e if￨j (￨j focusHandle￨c !=￨c 0￨c )￨j {￨j if￨j (￨j !￨c (￨c OS￨c .￨c GTK_WIDGET_HAS_FOCUS￨c (￨c focusHandle￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j }￨j }￨j if￨j (￨j activeShell￨c !=￨c null￨c )￨j {￨j display￨e .￨e activeShell￨e =￨e null￨e ;￨e }￨j int￨e window￨e =￨e OS￨e .￨e GTK_WIDGET_WINDOW￨e (￨e shellHandle￨e )￨e ;￨e if￨j (￨j (￨c (￨c (￨c style￨c )￨c &￨c (￨c SWT￨c .￨c ON_TOP￨c )￨c )￨c !=￨c 0￨c )￨c &&￨c (￨c OS￨c .￨c GDK_WINDOWING_X11￨c (￨c )￨c )￨c )￨j {￨j int￨e xDisplay￨e =￨e OS￨e .￨e gdk_x11_drawable_get_xdisplay￨e (￨e window￨e )￨e ;￨e int￨e xWindow￨e =￨e OS￨e .￨e gdk_x11_drawable_get_xid￨e (￨e window￨e )￨e ;￨e OS￨e .￨e gdk_error_trap_push￨e (￨e )￨e ;￨e OS￨e .￨e XSetInputFocus￨e (￨e xDisplay￨e ,￨e xWindow￨e ,￨e RevertToParent￨e ,￨e CurrentTime￨e )￨e ;￨e OS￨e .￨e gdk_error_trap_pop￨e (￨e )￨e ;￨e }￨j else￨j {￨j <START_BUG>￨b OS￨b .￨b gdk_window_focus￨b (￨b window￨b ,￨b OS￨b .￨b gtk_get_current_event_time￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨j display￨e .￨e activeShell￨e =￨e this￨e ;￨e }￨f void￨f checkBorder￨f (￨f )￨f {￨f }￨f void￨f checkOpen￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f void￨f closeWidget￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f void￨f createHandle￨f (￨f int￨p index￨p )￨f {￨f }￨f boolean￨f hasBorder￨f (￨f )￨f {￨f }￨f void￨f hookEvents￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isEnabled￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isLayoutDeferred￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isVisible￨f (￨f )￨f {￨f }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseChild￨f (￨f )￨f {￨f }￨f int￨f topHandle￨f (￨f )￨f {￨f }￨f int￨f filterProc￨f (￨f int￨p xEvent￨p ,￨p int￨p gdkEvent￨p ,￨p int￨p data￨p )￨f {￨f }￨f void￨f fixShell￨f (￨f Shell￨p newShell￨p ,￨p Control￨p control￨p )￨f {￨f }￨f void￨f forceResize￨f (￨f )￨f {￨f }￨f public￨f Point￨f getLocation￨f (￨f )￨f {￨f }￨f public￨f Point￨f getMinimumSize￨f (￨f )￨f {￨f }￨f public￨f Point￨f getSize￨f (￨f )￨f {￨f }￨f public￨f boolean￨f getVisible￨f (￨f )￨f {￨f }￨f public￨f Region￨f getRegion￨f (￨f )￨f {￨f }￨f public￨f int￨f getImeInputMode￨f (￨f )￨f {￨f }￨f Shell￨f _getShell￨f (￨f )￨f {￨f }￨f public￨f Shell￨f [￨f ]￨f getShells￨f (￨f )￨f {￨f }￨f int￨f gtk_configure_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_delete_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_enter_notify_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_focus￨f (￨f int￨p widget￨p ,￨p int￨p directionType￨p )￨f {￨f }￨f int￨f gtk_move_focus￨f (￨f int￨p widget￨p ,￨p int￨p directionType￨p )￨f {￨f }￨f int￨f gtk_focus_in_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_focus_out_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_map_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_size_allocate￨f (￨f int￨p widget￨p ,￨p int￨p allocation￨p )￨f {￨f }￨f int￨f gtk_realize￨f (￨f int￨p widget￨p )￨f {￨f }￨f int￨f gtk_unmap_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f int￨f gtk_window_state_event￨f (￨f int￨p widget￨p ,￨p int￨p event￨p )￨f {￨f }￨f public￨f void￨f open￨f (￨f )￨f {￨f }￨f public￨f void￨f removeShellListener￨f (￨f ShellListener￨p listener￨p )￨f {￨f }￨f public￨f void￨f setActive￨f (￨f )￨f {￨f }￨f void￨f setActiveControl￨f (￨f Control￨p control￨p )￨f {￨f }￨f void￨f resizeBounds￨f (￨f int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p notify￨p )￨f {￨f }￨f int￨f setBounds￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p move￨p ,￨p boolean￨p resize￨p )￨f {￨f }￨f void￨f setCursor￨f (￨f int￨p cursor￨p )￨f {￨f }￨f public￨f void￨f setEnabled￨f (￨f boolean￨p enabled￨p )￨f {￨f }￨f public￨f void￨f setImeInputMode￨f (￨f int￨p mode￨p )￨f {￨f }￨f void￨f setInitialBounds￨f (￨f )￨f {￨f }￨f public￨f void￨f setMaximized￨f (￨f boolean￨p maximized￨p )￨f {￨f }￨f public￨f void￨f setMenuBar￨f (￨f Menu￨p menu￨p )￨f {￨f }￨f public￨f void￨f setMinimized￨f (￨f boolean￨p minimized￨p )￨f {￨f }￨f public￨f void￨f setMinimumSize￨f (￨f int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f public￨f void￨f setMinimumSize￨f (￨f Point￨p size￨p )￨f {￨f }￨f public￨f void￨f setRegion￨f (￨f Region￨p region￨p )￨f {￨f }￨f public￨f void￨f setText￨f (￨f String￨p string￨p )￨f {￨f }￨f public￨f void￨f setVisible￨f (￨f boolean￨p visible￨p )￨f {￨f }￨f void￨f setZOrder￨f (￨f Control￨p sibling￨p ,￨p boolean￨p above￨p )￨f {￨f }￨f int￨f shellMapProc￨f (￨f int￨p handle￨p ,￨p int￨p arg0￨p ,￨p int￨p user_data￨p )￨f {￨f }￨f void￨f showWidget￨f (￨f )￨f {￨f }￨f boolean￨f traverseEscape￨f (￨f )￨f {￨f }￨f int￨f trimHeight￨f (￨f )￨f {￨f }￨f int￨f trimWidth￨f (￨f )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f public￨f void￨f forceActive￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getBounds￨f (￨f )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseShells￨f (￨f )￨f {￨f }￨f void￨f releaseWidget￨f (￨f )￨f {￨f }￨f void￨f setToolTipText￨f (￨f int￨p widget￨p ,￨p String￨p string￨p )￨f {￨f }￨f }￨d
public￨d class￨d HostControllerBootstrap￨d {￨d private￨e static￨e final￨e Logger￨e log￨e =￨e Logger￨e .￨e getLogger￨e (￨e "org.jboss.as.host.controller"￨e )￨e ;￨e static￨e final￨e ServiceName￨e SERVICE_NAME_BASE￨e =￨e JBOSS￨e .￨e append￨e (￨e "host"￨e ,￨e "controller"￨e )￨e ;￨e static￨e final￨e int￨e DEFAULT_POOL_SIZE￨e =￨e 20￨e ;￨e private￨e final￨e ServiceContainer￨e serviceContainer￨e =￨e Factory￨e .￨e create￨e (￨e "host-controller"￨e )￨e ;￨e private￨e final￨e HostControllerEnvironment￨e environment￨e ;￨e private￨e final￨e byte￨e [￨e ]￨e authCode￨e ;￨e public￨f HostControllerBootstrap￨f (￨f final￨p HostControllerEnvironment￨p environment￨p ,￨p final￨p byte￨p [￨p ]￨p authCode￨p )￨f {￨f }￨f public￨f void￨f start￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e File￨e configDir￨e =￨e environment￨e .￨e getDomainConfigurationDir￨e (￨e )￨e ;￨e final￨e ConfigurationFile￨e configurationFile￨e =￨e environment￨e .￨e getHostConfigurationFile￨e (￨e )￨e ;￨e final￨e ExtensibleConfigurationPersister￨e configurationPersister￨e =￨e HostControllerBootstrap￨e .￨e createHostConfigurationPersister￨e (￨e configDir￨e ,￨e configurationFile￨e )￨e ;￨e final￨e List￨e <￨e ModelNode￨e >￨e operations￨e =￨e configurationPersister￨e .￨e load￨e (￨e )￨e ;￨e final￨e ServiceTarget￨e serviceTarget￨e =￨e serviceContainer￨e ;￨e serviceTarget￨f .￨f addListener￨f (￨f new￨f org￨f .￨f jboss￨f .￨f msc￨f .￨f service￨f .￨f AbstractServiceListener￨f <￨f Object￨f >￨f (￨f )￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f transition￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p ,￨p final￨p ServiceController￨p .￨p Transition￨p transition￨p )￨f {￨f if￨j (￨j transition￨c ==￨c (￨c Transition￨c .￨c STARTING_to_START_FAILED￨c )￨c )￨j {￨j HostControllerBootstrap￨e .￨e log￨e .￨e errorf￨e (￨e controller￨e .￨e getStartException￨e (￨e )￨e ,￨e "Service<seq2seq4repair_space>[%s]<seq2seq4repair_space>failed."￨e ,￨e controller￨e .￨e getName￨e (￨e )￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e registerBaseServices￨e (￨e serviceTarget￨e )￨e ;￨e HostControllerBootstrap￨e .￨e DomainModelProxyImpl￨e domainModelProxy￨e =￨e new￨e HostControllerBootstrap￨e .￨e DomainModelProxyImpl￨e (￨e )￨e ;￨e final￨e ModelNodeRegistration￨e hostRegistry￨e =￨e HostModelUtil￨e .￨e createHostRegistry￨e (￨e configurationPersister￨e ,￨e environment￨e ,￨e domainModelProxy￨e )￨e ;￨e final￨e ModelNodeRegistration￨e rootRegistration￨e =￨e HostModelUtil￨e .￨e createBootstrapHostRegistry￨e (￨e hostRegistry￨e ,￨e domainModelProxy￨e )￨e ;￨e DomainModelImpl￨e domainModel￨e =￨e new￨e DomainModelImpl￨e (￨e rootRegistration￨e ,￨e serviceContainer￨e ,￨e configurationPersister￨e )￨e ;￨e domainModelProxy￨e .￨e setDomainModel￨e (￨e domainModel￨e )￨e ;￨e final￨e AtomicInteger￨e count￨e =￨e new￨e AtomicInteger￨e (￨e 1￨e )￨e ;￨e final￨f ResultHandler￨f resultHandler￨f =￨f new￨f ResultHandler￨f (￨f )￨f {￨f @￨f Override￨f public￨f void￨f handleResultFragment￨f (￨f final￨p String￨p [￨p ]￨p location￨p ,￨p final￨p ModelNode￨p result￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f handleResultComplete￨f (￨f )￨f {￨f if￨j (￨j (￨c count￨c .￨c decrementAndGet￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j }￨j }￨f @￨f Override￨f public￨f void￨f handleFailed￨f (￨f final￨p ModelNode￨p failureDescription￨p )￨f {￨f if￨j (￨j (￨c count￨c .￨c decrementAndGet￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j }￨j }￨f @￨f Override￨f public￨f void￨f handleCancellation￨f (￨f )￨f {￨f if￨j (￨j (￨c count￨c .￨c decrementAndGet￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j }￨j }￨f }￨f ;￨e for￨l (￨l final￨c ModelNode￨c operation￨c :￨c operations￨c )￨l {￨l count￨e .￨e incrementAndGet￨e (￨e )￨e ;￨e operation￨e .￨e get￨e (￨e OPERATION_HEADERS￨e ,￨e ROLLBACK_ON_RUNTIME_FAILURE￨e )￨e .￨e set￨e (￨e false￨e )￨e ;￨e domainModel￨e .￨e execute￨e (￨e OperationBuilder￨e .￨e Factory￨e .￨e create￨e (￨e operation￨e )￨e .￨e build￨e (￨e )￨e ,￨e resultHandler￨e )￨e ;￨e }￨l if￨j (￨j (￨c count￨c .￨c decrementAndGet￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j }￨j final￨e String￨e hostName￨e =￨e domainModel￨e .￨e getLocalHostName￨e (￨e )￨e ;￨e final￨e ModelNode￨e hostModelNode￨e =￨e domainModel￨e .￨e getHostModel￨e (￨e )￨e ;￨e final￨e String￨e mgmtNetwork￨e =￨e hostModelNode￨e .￨e get￨e (￨e MANAGEMENT_INTERFACE￨e ,￨e NATIVE_INTERFACE￨e ,￨e INTERFACE￨e )￨e .￨e asString￨e (￨e )￨e ;￨e final￨e int￨e mgmtPort￨e =￨e hostModelNode￨e .￨e get￨e (￨e MANAGEMENT_INTERFACE￨e ,￨e NATIVE_INTERFACE￨e ,￨e PORT￨e )￨e .￨e asInt￨e (￨e )￨e ;￨e final￨e ServerInventoryService￨e inventory￨e =￨e new￨e ServerInventoryService￨e (￨e environment￨e ,￨e mgmtPort￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e SERVICE_NAME￨e ,￨e inventory￨e )￨e .￨e addDependency￨e (￨e ProcessControllerConnectionService￨e .￨e SERVICE_NAME￨e ,￨e ProcessControllerConnectionService￨e .￨e class￨e ,￨e inventory￨e .￨e getClient￨e (￨e )￨e )￨e .￨e addDependency￨e (￨e JBOSS_NETWORK_INTERFACE￨e .￨e append￨e (￨e mgmtNetwork￨e )￨e ,￨e NetworkInterfaceBinding￨e .￨e class￨e ,￨e inventory￨e .￨e getInterface￨e (￨e )￨e )￨e .￨e install￨e (￨e )￨e ;￨e final￨e HostControllerService￨e hc￨e =￨e new￨e HostControllerService￨e (￨e hostName￨e ,￨e hostModelNode￨e ,￨e configurationPersister￨e ,￨e hostRegistry￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e HostController￨e .￨e SERVICE_NAME￨e ,￨e hc￨e )￨e .￨e addDependency￨e (￨e SERVICE_NAME￨e ,￨e ServerInventory￨e .￨e class￨e ,￨e hc￨e .￨e getServerInventory￨e (￨e )￨e )￨e .￨e addDependency￨e (￨e ServerToHostOperationHandler￨e .￨e SERVICE_NAME￨e )￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e final￨e ServerToHostOperationHandler￨e serverToHost￨e =￨e new￨e ServerToHostOperationHandler￨e (￨e )￨e ;￨e serviceTarget￨e .￨e addService￨e (￨e ServerToHostOperationHandler￨e .￨e SERVICE_NAME￨e ,￨e serverToHost￨e )￨e .￨e addDependency￨e (￨e SERVICE_NAME￨e ,￨e ManagedServerLifecycleCallback￨e .￨e class￨e ,￨e serverToHost￨e .￨e getCallbackInjector￨e (￨e )￨e )￨e .￨e install￨e (￨e )￨e ;￨e <START_BUG>￨b RemotingServices￨b .￨b installChannelOpenListenerService￨b (￨b serviceTarget￨b ,￨b "server"￨b ,￨b ServerToHostOperationHandler￨b .￨b SERVICE_NAME￨b ,￨b null￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f void￨f registerBaseServices￨f (￨f final￨p ServiceTarget￨p serviceTarget￨p )￨f {￨f }￨f static￨f ExtensibleConfigurationPersister￨f createHostConfigurationPersister￨f (￨f final￨p File￨p configDir￨p ,￨p final￨p ConfigurationFile￨p configurationFile￨p )￨f {￨f }￨f static￨d final￨d class￨d HostControllerExecutorService￨d implements￨d Service￨d <￨d Executor￨d >￨d {￨d final￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e threadFactoryValue￨e =￨e new￨e InjectedValue￨e <￨e ThreadFactory￨e >￨e (￨e )￨e ;￨e private￨e ScheduledExecutorService￨e executorService￨e ;￨e @￨f Override￨f public￨f synchronized￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f ScheduledExecutorService￨f getValue￨f (￨f )￨f throws￨f IllegalStateException￨f (￨f )￨f {￨f }￨f }￨d static￨d final￨d class￨d DomainModelProxyImpl￨d implements￨d DomainModelProxy￨d {￨d private￨e DomainModelImpl￨e domainModel￨e ;￨e public￨f void￨f setDomainModel￨f (￨f final￨p DomainModelImpl￨p domainModel￨p )￨f {￨f }￨f @￨f Override￨f public￨f DomainModelImpl￨f getDomainModel￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d FilteredPreferenceDialog￨d extends￨d PreferenceDialog￨d {￨d protected￨e TreeViewer￨e filteredViewer￨e ;￨e protected￨e TreeViewer￨e unfilteredViewer￨e ;￨e private￨e StackLayout￨e stackLayout￨e ;￨e private￨e Composite￨e stackComposite￨e ;￨e private￨e Button￨e showAllCheck￨e ;￨e public￨f FilteredPreferenceDialog￨f (￨f Shell￨p parentShell￨p ,￨p PreferenceManager￨p manager￨p )￨f {￨f }￨f protected￨f Control￨f createTreeAreaContents￨f (￨f Composite￨p composite￨p )￨f {￨f Composite￨e treeArea￨e =￨e new￨e Composite￨e (￨e composite￨e ,￨e SWT￨e .￨e None￨e )￨e ;￨e GridLayout￨e layout￨e =￨e new￨e GridLayout￨e (￨e )￨e ;￨e layout￨e .￨e marginHeight￨e =￨e 0￨e ;￨e layout￨e .￨e marginWidth￨e =￨e 0￨e ;￨e treeArea￨e .￨e setLayout￨e (￨e layout￨e )￨e ;￨e stackComposite￨e =￨e new￨e Composite￨e (￨e treeArea￨e ,￨e SWT￨e .￨e NONE￨e )￨e ;￨e stackLayout￨e =￨e new￨e StackLayout￨e (￨e )￨e ;￨e stackComposite￨e .￨e setLayout￨e (￨e stackLayout￨e )￨e ;￨e stackComposite￨e .￨e setLayoutData￨e (￨e new￨e GridData￨e (￨e GridData￨e .￨e FILL_BOTH￨e )￨e )￨e ;￨e stackComposite￨e .￨e setFont￨e (￨e composite￨e .￨e getFont￨e (￨e )￨e )￨e ;￨e layoutTreeAreaControl￨e (￨e treeArea￨e )￨e ;￨e filteredViewer￨e =￨e createTreeViewer￨e (￨e stackComposite￨e ,￨e true￨e )￨e ;￨e if￨j (￨j WorkbenchActivityHelper￨c .￨c showAll￨c (￨c )￨c )￨j {￨j unfilteredViewer￨e =￨e createTreeViewer￨e (￨e stackComposite￨e ,￨e false￨e )￨e ;￨e showAllCheck￨e =￨e new￨e Button￨e (￨e treeArea￨e ,￨e SWT￨e .￨e CHECK￨e )￨e ;￨e showAllCheck￨e .￨e setLayoutData￨e (￨e new￨e GridData￨e (￨e GridData￨e .￨e FILL_HORIZONTAL￨e )￨e )￨e ;￨e showAllCheck￨e .￨e setText￨e (￨e ActivityMessages￨e .￨e getString￨e (￨e "ActivityFiltering.showAll"￨e )￨e )￨e ;￨e showAllCheck￨f .￨f addSelectionListener￨f (￨f new￨f SelectionAdapter￨f (￨f )￨f {￨f public￨f void￨f widgetSelected￨f (￨f SelectionEvent￨p e￨p )￨f {￨f if￨j (￨j !￨c (￨c showAllCheck￨c .￨c getSelection￨c (￨c )￨c )￨c )￨j {￨j filteredViewer￨e .￨e setExpandedElements￨e (￨e unfilteredViewer￨e .￨e getExpandedElements￨e (￨e )￨e )￨e ;￨e filteredViewer￨e .￨e setSelection￨e (￨e unfilteredViewer￨e .￨e getSelection￨e (￨e )￨e )￨e ;￨e stackLayout￨e .￨e topControl￨e =￨e filteredViewer￨e .￨e getControl￨e (￨e )￨e ;￨e stackComposite￨e .￨e layout￨e (￨e )￨e ;￨e showPage￨e (￨e getSingleSelection￨e (￨e filteredViewer￨e .￨e getSelection￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j unfilteredViewer￨e .￨e setExpandedElements￨e (￨e filteredViewer￨e .￨e getExpandedElements￨e (￨e )￨e )￨e ;￨e unfilteredViewer￨e .￨e setSelection￨e (￨e filteredViewer￨e .￨e getSelection￨e (￨e )￨e )￨e ;￨e stackLayout￨e .￨e topControl￨e =￨e unfilteredViewer￨e .￨e getControl￨e (￨e )￨e ;￨e stackComposite￨e .￨e layout￨e (￨e )￨e ;￨e showPage￨e (￨e getSingleSelection￨e (￨e unfilteredViewer￨e .￨e getSelection￨e (￨e )￨e )￨e )￨e ;￨e }￨j }￨f }￨f )￨e ;￨e }￨j stackLayout￨e .￨e topControl￨e =￨e filteredViewer￨e .￨e getControl￨e (￨e )￨e ;￨e <START_BUG>￨b return￨b stackComposite￨b ;￨b <END_BUG>￨b }￨f private￨f TreeViewer￨f createTreeViewer￨f (￨f Composite￨p parent￨p ,￨p boolean￨p filtering￨p )￨f {￨f }￨f protected￨f IPreferenceNode￨f findNodeMatching￨f (￨f String￨p nodeId￨p )￨f {￨f }￨f protected￨f TreeViewer￨f getTreeViewer￨f (￨f )￨f {￨f }￨f protected￨f void￨f updateTreeFont￨f (￨f Font￨p dialogFont￨p )￨f {￨f }￨f }￨d
public￨d class￨d HashCodeBuilder￨d implements￨d Builder￨d <￨d Integer￨d >￨d {￨d private￨e static￨e final￨e ThreadLocal￨e <￨e Set￨e <￨e IDKey￨e >￨e >￨e REGISTRY￨e =￨e new￨e ThreadLocal￨e <￨e Set￨e <￨e IDKey￨e >￨e >￨e (￨e )￨e ;￨e static￨f Set￨f <￨f IDKey￨f >￨f getRegistry￨f (￨f )￨f {￨f }￨f static￨f boolean￨f isRegistered￨f (￨f Object￨p value￨p )￨f {￨f }￨f private￨f static￨f void￨f reflectionAppend￨f (￨f Object￨p object￨p ,￨p Class￨p <￨p ?￨p >￨p clazz￨p ,￨p HashCodeBuilder￨p builder￨p ,￨p boolean￨p useTransients￨p ,￨p String￨p [￨p ]￨p excludeFields￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f int￨p initialNonZeroOddNumber￨p ,￨p int￨p multiplierNonZeroOddNumber￨p ,￨p Object￨p object￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f int￨p initialNonZeroOddNumber￨p ,￨p int￨p multiplierNonZeroOddNumber￨p ,￨p Object￨p object￨p ,￨p boolean￨p testTransients￨p )￨f {￨f }￨f public￨f static￨f <￨f T￨f >￨f int￨f reflectionHashCode￨f (￨f int￨p initialNonZeroOddNumber￨p ,￨p int￨p multiplierNonZeroOddNumber￨p ,￨p T￨p object￨p ,￨p boolean￨p testTransients￨p ,￨p Class￨p <￨p ?￨p super￨p T￨p >￨p reflectUpToClass￨p )￨f {￨f }￨f public￨f static￨f <￨f T￨f >￨f int￨f reflectionHashCode￨f (￨f int￨p initialNonZeroOddNumber￨p ,￨p int￨p multiplierNonZeroOddNumber￨p ,￨p T￨p object￨p ,￨p boolean￨p testTransients￨p ,￨p Class￨p <￨p ?￨p super￨p T￨p >￨p reflectUpToClass￨p ,￨p String￨p [￨p ]￨p excludeFields￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f Object￨p object￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f Object￨p object￨p ,￨p boolean￨p testTransients￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f Object￨p object￨p ,￨p Collection￨p <￨p String￨p >￨p excludeFields￨p )￨f {￨f }￨f public￨f static￨f int￨f reflectionHashCode￨f (￨f Object￨p object￨p ,￨p String￨p [￨p ]￨p excludeFields￨p )￨f {￨f }￨f static￨f void￨f register￨f (￨f Object￨p value￨p )￨f {￨f }￨f static￨f void￨f unregister￨f (￨f Object￨p value￨p )￨f {￨f }￨f private￨e final￨e int￨e iConstant￨e ;￨e private￨e int￨e iTotal￨e =￨e 0￨e ;￨e public￨f HashCodeBuilder￨f (￨f )￨f {￨f }￨f public￨f HashCodeBuilder￨f (￨f int￨p initialNonZeroOddNumber￨p ,￨p int￨p multiplierNonZeroOddNumber￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f boolean￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f boolean￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f byte￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f byte￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f char￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f char￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f double￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f double￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f float￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f float￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f int￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f int￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f long￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f long￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f Object￨p object￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f Object￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f short￨p value￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f append￨f (￨f short￨p [￨p ]￨p array￨p )￨f {￨f }￨f public￨f HashCodeBuilder￨f appendSuper￨f (￨f int￨p superHashCode￨p )￨f {￨f }￨f public￨f int￨f toHashCode￨f (￨f )￨f {￨f }￨f public￨f Integer￨f build￨f (￨f )￨f {￨f <START_BUG>￨b return￨b toHashCode￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ManagedBeanDependencyProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨d static￨d final￨d DotName￨d MANAGED_BEAN_ANNOTATION_NAME￨d =￨d DotName￨d .￨d createSimple￨d (￨d ManagedBean￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d ModuleIdentifier￨d JAVASSIST_ID￨d =￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.javassist"￨d )￨d ;￨d private￨d static￨d ModuleIdentifier￨d JAVAEE_API_ID￨d =￨d ModuleIdentifier￨d .￨d create￨d (￨d "javaee.api"￨d )￨d ;￨d private￨d static￨d ModuleIdentifier￨d JBOSS_LOGGING_ID￨d =￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.logging"￨d )￨d ;￨d public￨d void￨d deploy￨d (￨d DeploymentPhaseContext￨d phaseContext￨d )￨d throws￨d DeploymentUnitProcessingException￨d {￨d final￨e Index￨e index￨e =￨e phaseContext￨e .￨e getAttachment￨e (￨e ANNOTATION_INDEX￨e )￨e ;￨e if￨j (￨j index￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b index￨b .￨b getAnnotationTargets￨b (￨b ManagedBeanDependencyProcessor￨b .￨b MANAGED_BEAN_ANNOTATION_NAME￨b )￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b return￨e ;￨e }￨e phaseContext￨e .￨e addToAttachmentList￨e (￨e MODULE_DEPENDENCIES￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e ManagedBeanDependencyProcessor￨e .￨e JAVAEE_API_ID￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e phaseContext￨e .￨e addToAttachmentList￨e (￨e MODULE_DEPENDENCIES￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e ManagedBeanDependencyProcessor￨e .￨e JBOSS_LOGGING_ID￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e phaseContext￨e .￨e addToAttachmentList￨e (￨e MODULE_DEPENDENCIES￨e ,￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e deployment￨e .￨e module￨e .￨e ModuleDependency￨e (￨e ManagedBeanDependencyProcessor￨e .￨e JAVASSIST_ID￨e ,￨e false￨e ,￨e false￨e )￨e )￨e ;￨e }￨d public￨f void￨f undeploy￨f (￨f final￨p DeploymentUnitContext￨p context￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d @￨d RunAsClient￨d public￨d class￨d EJBClientClusterConfigurationTestCase￨d {￨d private￨d static￨d final￨d Logger￨d logger￨d =￨d Logger￨d .￨d getLogger￨d (￨d EJBClientClusterConfigurationTestCase￨d .￨d class￨d )￨d ;￨d private￨d static￨d final￨d String￨d MODULE_NAME￨d =￨d "server-to-server-clustered-ejb-invocation"￨d ;￨d private￨d static￨d final￨d String￨d DEFAULT_JBOSSAS￨d =￨d "default-jbossas"￨d ;￨d private￨d static￨d final￨d String￨d JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨d =￨d "jbossas-with-remote-outbound-connection"￨d ;￨d private￨d static￨d final￨d String￨d DEFAULT_AS_DEPLOYMENT￨d =￨d "default-jbossas-deployment"￨d ;￨d private￨d static￨d final￨d String￨d DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨d =￨d "other-deployment"￨d ;￨d private￨d static￨d final￨d String￨d DEFAULT_JBOSSAS_NODE_NAME￨d =￨d "default-jbossas"￨d ;￨d private￨d static￨d final￨d String￨d JBOSSAS_WITH_OUTBOUND_CONNECTION_NODE_NAME￨d =￨d "jbossas-with-remote-outbound-connection"￨d ;￨d @￨d ArquillianResource￨d private￨d ContainerController￨d container￨d ;￨d @￨d ArquillianResource￨d private￨d Deployer￨d deployer￨d ;￨d private￨d static￨d Context￨d context￨d ;￨d private￨d static￨d ContextSelector￨d <￨d EJBClientContext￨d >￨d previousClientContextSelector￨d ;￨d @￨d BeforeClass￨d public￨d static￨d void￨d beforeClass￨d (￨d )￨d throws￨d Exception￨d {￨d }￨d @￨f AfterClass￨f public￨f static￨f void￨f afterClass￨f (￨f )￨f {￨f }￨f @￨f Deployment￨f (￨f name￨f =￨f EJBClientClusterConfigurationTestCase￨f .￨f DEFAULT_AS_DEPLOYMENT￨f ,￨f managed￨f =￨f false￨f ,￨f testable￨f =￨f false￨f )￨f @￨f TargetsContainer￨f (￨f EJBClientClusterConfigurationTestCase￨f .￨f DEFAULT_JBOSSAS￨f )￨f public￨f static￨f Archive￨f createContainer1Deployment￨f (￨f )￨f {￨f }￨f @￨f Deployment￨f (￨f name￨f =￨f EJBClientClusterConfigurationTestCase￨f .￨f DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨f ,￨f managed￨f =￨f false￨f ,￨f testable￨f =￨f false￨f )￨f @￨f TargetsContainer￨f (￨f EJBClientClusterConfigurationTestCase￨f .￨f JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨f )￨f public￨f static￨f Archive￨f createContainer2Deployment￨f (￨f )￨f {￨f final￨e JavaArchive￨e ejbJar￨e =￨e ShrinkWrap￨e .￨e create￨e (￨e JavaArchive￨e .￨e class￨e ,￨e (￨e (￨e EJBClientClusterConfigurationTestCase￨e .￨e MODULE_NAME￨e )￨e +￨e ".jar"￨e )￨e )￨e ;￨e <START_BUG>￨b ejbJar￨b .￨b addClasses￨b (￨b ClusteredStatefulNodeNameEcho￨b .￨b class￨b ,￨b NonClusteredStatefulNodeNameEcho￨b .￨b class￨b ,￨b NodeNameEcho￨b .￨b class￨b )￨b ;￨b <END_BUG>￨b ejbJar￨e .￨e addAsManifestResource￨e (￨e NonClusteredStatefulNodeNameEcho￨e .￨e class￨e .￨e getPackage￨e (￨e )￨e ,￨e "jboss-ejb-client.xml"￨e ,￨e "jboss-ejb-client.xml"￨e )￨e ;￨e return￨e ejbJar￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testServerToServerClusterFormation￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f ContextSelector￨f <￨f EJBClientContext￨f >￨f setupEJBClientContextSelector￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d final￨d class￨d SingleMemberAnnotation￨d extends￨d Annotation￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d TYPE_NAME_PROPERTY￨d =￨d Annotation￨d .￨d internalTypeNamePropertyFactory￨d (￨d SingleMemberAnnotation￨d .￨d class￨d )￨d ;￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d VALUE_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d SingleMemberAnnotation￨d .￨d class￨d ,￨d "value"￨d ,￨d Expression￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d private￨e Expression￨e value￨e =￨e null￨e ;￨e SingleMemberAnnotation￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f ChildPropertyDescriptor￨f internalTypeNameProperty￨f (￨f )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f SingleMemberAnnotation￨e result￨e =￨e new￨e SingleMemberAnnotation￨e (￨e target￨e )￨e ;￨e <START_BUG>￨b result￨b .￨b setSourceRange￨b (￨b this￨b .￨b getStartPosition￨b (￨b )￨b ,￨b this￨b .￨b getLength￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b result￨e .￨e setTypeName￨e (￨e (￨e (￨e Name￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getTypeName￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e result￨e .￨e setValue￨e (￨e (￨e (￨e Expression￨e )￨e (￨e ASTNode￨e .￨e copySubtree￨e (￨e target￨e ,￨e getValue￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f Expression￨f getValue￨f (￨f )￨f {￨f }￨f public￨f void￨f setValue￨f (￨f Expression￨p value￨p )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d BindingTypePattern￨d extends￨d ExactTypePattern￨d implements￨d BindingPattern￨d {￨d private￨e int￨e formalIndex￨e ;￨e public￨f BindingTypePattern￨f (￨f TypeX￨p type￨p ,￨p int￨p index￨p ,￨p boolean￨p isVarArgs￨p )￨f {￨f }￨f public￨f BindingTypePattern￨f (￨f FormalBinding￨p binding￨p ,￨p boolean￨p isVarArgs￨p )￨f {￨f }￨f public￨f int￨f getFormalIndex￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f out￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f TypePattern￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f TypePattern￨f remapAdviceFormals￨f (￨f IntMap￨p bindings￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f <START_BUG>￨b return￨b (￨b (￨b (￨b "BindingTypePattern("￨b +￨b (￨b type￨b .￨b toString￨b (￨b )￨b )￨b )￨b +￨b ",<seq2seq4repair_space>"￨b )￨b +￨b (￨b formalIndex￨b )￨b )￨b +￨b ")"￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d DeleteResourceElementsOperation￨d extends￨d MultiOperation￨d {￨d protected￨f DeleteResourceElementsOperation￨f (￨f IJavaElement￨p [￨p ]￨p elementsToProcess￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f private￨f void￨f deletePackageFragment￨f (￨f IPackageFragment￨f frag￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f IResource￨e res￨e =￨e frag￨e .￨e getResource￨e (￨e )￨e ;￨e if￨j (￨j (￨c res￨c !=￨c null￨c )￨c &&￨c (￨c (￨c res￨c .￨c getType￨c (￨c )￨c )￨c ==￨c (￨c IResource￨c .￨c FOLDER￨c )￨c )￨c )￨j {￨j IJavaElement￨e [￨e ]￨e childrenOfInterest￨e =￨e frag￨e .￨e getChildren￨e (￨e )￨e ;￨e if￨j (￨j (￨c childrenOfInterest￨c .￨c length￨c )￨c >￨c 0￨c )￨j {￨j IResource￨e [￨e ]￨e resources￨e =￨e new￨e IResource￨e [￨e childrenOfInterest￨e .￨e length￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c childrenOfInterest￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b resources￨b [￨b i￨b ]￨b =￨b childrenOfInterest￨b [￨b i￨b ]￨b .￨b getCorrespondingResource￨b (￨b )￨b ;￨b <END_BUG>￨b }￨l deleteResources￨e (￨e resources￨e ,￨e fForce￨e )￨e ;￨e }￨j Object￨e [￨e ]￨e nonJavaResources￨e =￨e frag￨e .￨e getNonJavaResources￨e (￨e )￨e ;￨e int￨e actualResourceCount￨e =￨e 0￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c nonJavaResources￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c nonJavaResources￨c [￨c i￨c ]￨c )￨c instanceof￨c IResource￨c )￨j {￨j actualResourceCount￨e ++￨e ;￨e }￨j }￨l IResource￨e [￨e ]￨e actualNonJavaResources￨e =￨e new￨e IResource￨e [￨e actualResourceCount￨e ]￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c nonJavaResources￨c .￨c length￨c ,￨c index￨c =￨c 0￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c nonJavaResources￨c [￨c i￨c ]￨c )￨c instanceof￨c IResource￨c )￨j {￨j actualNonJavaResources￨e [￨e (￨e index￨e ++￨e )￨e ]￨e =￨e (￨e (￨e IResource￨e )￨e (￨e nonJavaResources￨e [￨e i￨e ]￨e )￨e )￨e ;￨e }￨j }￨l deleteResources￨e (￨e actualNonJavaResources￨e ,￨e fForce￨e )￨e ;￨e IResource￨e [￨e ]￨e remainingFiles￨e ;￨e try￨f (￨f )￨f {￨f remainingFiles￨e =￨e (￨e (￨e IFolder￨e )￨e (￨e res￨e )￨e )￨e .￨e members￨e (￨e )￨e ;￨e }￨f catch￨f (￨f CoreException￨p ce￨p )￨f {￨f throw￨e new￨e JavaModelException￨e (￨e ce￨e )￨e ;￨e }￨f boolean￨e isEmpty￨e =￨e true￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c length￨c =￨c remainingFiles￨c .￨c length￨c ;￨c i￨c <￨c length￨c ;￨c i￨c ++￨c )￨l {￨l IResource￨e file￨e =￨e remainingFiles￨e [￨e i￨e ]￨e ;￨e if￨j (￨j file￨c instanceof￨c IFile￨c )￨j {￨j this￨e .￨e deleteResource￨e (￨e file￨e ,￨e (￨e (￨e IResource￨e .￨e FORCE￨e )￨e |￨e (￨e IResource￨e .￨e KEEP_HISTORY￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j isEmpty￨e =￨e false￨e ;￨e }￨j }￨l if￨j (￨j isEmpty￨c )￨j {￨j deleteEmptyPackageFragment￨e (￨e frag￨e ,￨e false￨e ,￨e frag￨e .￨e getParent￨e (￨e )￨e .￨e getResource￨e (￨e )￨e )￨e ;￨e }￨j }￨j }￨f protected￨f String￨f getMainTaskName￨f (￨f )￨f {￨f }￨f protected￨f void￨f processElement￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f verify￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f }￨d
public￨d p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f ,￨f String￨f p4￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f SplitFunction￨f SplitParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f BeanShell￨f BSHFParams￨f (￨f String￨f p1￨f ,￨f String￨f p2￨f ,￨f String￨f p3￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f static￨f Collection￨f MakeParams￨f (￨f String￨p p1￨p ,￨p String￨p p2￨p ,￨p String￨p p3￨p )￨f {￨f }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b TestSuite￨b allsuites￨b =￨b new￨b TestSuite￨b (￨b )￨b ;￨b <END_BUG>￨b TestSuite￨e bsh￨e =￨e new￨e TestSuite￨e (￨e "BeanShell"￨e )￨e ;￨e bsh￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "BSH1"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e bsh￨e )￨e ;￨e TestSuite￨e suite￨e =￨e new￨e TestSuite￨e (￨e "SingleThreaded"￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVParams"￨e )￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVNoFile"￨e )￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVSetup"￨e )￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVRun"￨e )￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSValias"￨e )￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVBlankLine"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e suite￨e )￨e ;￨e suite￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVSetup"￨e )￨e )￨e ;￨e TestSuite￨e par￨e =￨e new￨e ActiveTestSuite￨e (￨e "Parallel"￨e )￨e ;￨e par￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVThread1"￨e )￨e )￨e ;￨e par￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "CSVThread2"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e par￨e )￨e ;￨e TestSuite￨e sff￨e =￨e new￨e TestSuite￨e (￨e "StringFromFile"￨e )￨e ;￨e sff￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SFFTest1"￨e )￨e )￨e ;￨e sff￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SFFTest2"￨e )￨e )￨e ;￨e sff￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SFFTest3"￨e )￨e )￨e ;￨e sff￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SFFTest4"￨e )￨e )￨e ;￨e sff￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SFFTest5"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e sff￨e )￨e ;￨e TestSuite￨e split￨e =￨e new￨e TestSuite￨e (￨e "SplitFunction"￨e )￨e ;￨e split￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "SplitTest1"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e split￨e )￨e ;￨e TestSuite￨e xpath￨e =￨e new￨e TestSuite￨e (￨e "XPath"￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathtestColumns"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathtestDefault"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathtestNull"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathtestrowNum"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathEmpty"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathFile1"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathFile2"￨e )￨e )￨e ;￨e xpath￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathNoFile"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e xpath￨e )￨e ;￨e TestSuite￨e random￨e =￨e new￨e TestSuite￨e (￨e "Random"￨e )￨e ;￨e random￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "RandomTest1"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e random￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathSetup1"￨e )￨e )￨e ;￨e TestSuite￨e par2￨e =￨e new￨e ActiveTestSuite￨e (￨e "ParallelXPath1"￨e )￨e ;￨e par2￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathThread1"￨e )￨e )￨e ;￨e par2￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathThread2"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e par2￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathSetup2"￨e )￨e )￨e ;￨e TestSuite￨e par3￨e =￨e new￨e ActiveTestSuite￨e (￨e "ParallelXPath2"￨e )￨e ;￨e par3￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathThread1"￨e )￨e )￨e ;￨e par3￨e .￨e addTest￨e (￨e new￨e PackageTest￨e (￨e "XPathThread2"￨e )￨e )￨e ;￨e allsuites￨e .￨e addTest￨e (￨e par3￨e )￨e ;￨e return￨e allsuites￨e ;￨e }￨f private￨e JMeterContext￨e jmctx￨e =￨e null￨e ;￨e private￨e JMeterVariables￨e vars￨e =￨e null￨e ;￨e public￨f void￨f setUp￨f (￨f )￨f {￨f }￨f public￨f void￨f BSH1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SplitTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest3￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest4￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f SFFTest5￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨e static￨e CSVRead￨e cr1￨e ;￨e private￨e static￨e CSVRead￨e cr2￨e ;￨e private￨e static￨e CSVRead￨e cr3￨e ;￨e private￨e static￨e CSVRead￨e cr4￨e ;￨e private￨e static￨e CSVRead￨e cr5￨e ;￨e private￨e static￨e CSVRead￨e cr6￨e ;￨e private￨d static￨d class￨d Baton￨d {￨d void￨f pass￨f (￨f )￨f {￨f }￨f void￨f done￨f (￨f )￨f {￨f }￨f }￨d private￨e static￨e PackageTest￨e .￨e Baton￨e baton￨e =￨e new￨e PackageTest￨e .￨e Baton￨e (￨e )￨e ;￨e public￨f void￨f CSVThread1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVThread2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVRun￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVParams￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVSetup￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSValias￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVNoFile￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f CSVBlankLine￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestNull￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestrowNum￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestColumns￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathtestDefault￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathEmpty￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathNoFile￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathFile1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathFile2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨e static￨e XPath￨e sxp1￨e ;￨e private￨e static￨e XPath￨e sxp2￨e ;￨e public￨f void￨f XPathSetup1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathSetup2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathThread1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f XPathThread2￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f XPath￨f setupXPath￨f (￨f String￨f file￨f ,￨f String￨f expr￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f RandomTest1￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d RequestCycle￨d {￨d private￨e static￨e final￨e ThreadLocal￨e current￨e =￨e new￨e ThreadLocal￨e (￨e )￨e ;￨e private￨e static￨e final￨e int￨e DETACH_REQUEST￨e =￨e 6￨e ;￨e private￨e static￨e final￨e int￨e DONE￨e =￨e 7￨e ;￨e private￨e static￨e final￨e int￨e HANDLE_EXCEPTION￨e =￨e 5￨e ;￨e private￨d static￨d final￨d Logger￨d log￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d RequestCycle￨d .￨d class￨d )￨d ;￨d private￨d static￨d final￨d int￨d NOT_STARTED￨d =￨d 0￨d ;￨d private￨d static￨d final￨d int￨d PREPARE_REQUEST￨d =￨d 1￨d ;￨d private￨d static￨d final￨d int￨d PROCESS_EVENTS￨d =￨d 3￨d ;￨d private￨d static￨d final￨d int￨d RESOLVE_TARGET￨d =￨d 2￨d ;￨d private￨d static￨d final￨d int￨d RESPOND￨d =￨d 4￨d ;￨d public￨d static￨d RequestCycle￨d get￨d (￨d )￨d {￨d }￨d protected￨f static￨f void￨f set￨f (￨f RequestCycle￨p cycle￨p )￨f {￨f }￨f private￨e boolean￨e automaticallyClearFeedbackMessages￨e =￨e true￨e ;￨e private￨e int￨e currentStep￨e =￨e RequestCycle￨e .￨e NOT_STARTED￨e ;￨e private￨e final￨e Response￨e originalResponse￨e ;￨e private￨e boolean￨e redirect￨e ;￨e private￨e final￨e transient￨e ArrayListStack￨e requestTargets￨e =￨e new￨e ArrayListStack￨e (￨e 3￨e )￨e ;￨e private￨e PageParameters￨e pageParameters￨e ;￨e private￨e Session￨e session￨e ;￨e private￨e final￨e long￨e startTime￨e =￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ;￨e protected￨e final￨e Application￨e application￨e ;￨e protected￨e final￨e IRequestCycleProcessor￨e processor￨e ;￨e protected￨e Request￨e request￨e ;￨e protected￨e Response￨e response￨e ;￨e protected￨f RequestCycle￨f (￨f final￨p Application￨p application￨p ,￨p final￨p Request￨p request￨p ,￨p final￨p Response￨p response￨p )￨f {￨f }￨f public￨f final￨f Application￨f getApplication￨f (￨f )￨f {￨f }￨f public￨f final￨f ClientInfo￨f getClientInfo￨f (￨f )￨f {￨f }￨f public￨f final￨f Response￨f getOriginalResponse￨f (￨f )￨f {￨f }￨f public￨f final￨f PageParameters￨f getPageParameters￨f (￨f )￨f {￨f }￨f public￨f abstract￨f IRequestCycleProcessor￨f getProcessor￨f (￨f )￨f {￨f }￨f public￨f final￨f boolean￨f getRedirect￨f (￨f )￨f {￨f }￨f public￨f final￨f Request￨f getRequest￨f (￨f )￨f {￨f }￨f public￨f final￨f IRequestTarget￨f getRequestTarget￨f (￨f )￨f {￨f }￨f public￨f final￨f Response￨f getResponse￨f (￨f )￨f {￨f }￨f public￨f final￨f Page￨f getResponsePage￨f (￨f )￨f {￨f }￨f public￨f final￨f Class￨f getResponsePageClass￨f (￨f )￨f {￨f }￨f public￨f final￨f Session￨f getSession￨f (￨f )￨f {￨f }￨f public￨f final￨f long￨f getStartTime￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRedirect￨f (￨f )￨f {￨f }￨f public￨f Page￨f onRuntimeException￨f (￨f Page￨p page￨p ,￨p RuntimeException￨p e￨p )￨f {￨f }￨f public￨f abstract￨f void￨f redirectTo￨f (￨f final￨p Page￨p page￨p )￨f {￨f }￨f public￨f final￨f void￨f request￨f (￨f )￨f {￨f }￨f public￨f final￨f void￨f request￨f (￨f final￨p Component￨p component￨p )￨f {￨f }￨f public￨f final￨f void￨f request￨f (￨f IRequestTarget￨p target￨p )￨f {￨f }￨f public￨f void￨f setAutomaticallyClearFeedbackMessages￨f (￨f boolean￨p automaticallyClearFeedbackMessages￨p )￨f {￨f }￨f public￨f final￨f void￨f setRedirect￨f (￨f final￨p boolean￨p redirect￨p )￨f {￨f }￨f public￨f final￨f void￨f setRequest￨f (￨f Request￨p request￨p )￨f {￨f }￨f public￨f final￨f void￨f setRequestTarget￨f (￨f IRequestTarget￨p requestTarget￨p )￨f {￨f }￨f public￨f final￨f Response￨f setResponse￨f (￨f final￨p Response￨p response￨p )￨f {￨f }￨f public￨f final￨f void￨f setResponsePage￨f (￨f final￨p Class￨p pageClass￨p )￨f {￨f }￨f public￨f final￨f void￨f setResponsePage￨f (￨f final￨p Class￨p pageClass￨p ,￨p final￨p PageParameters￨p pageParameters￨p )￨f {￨f }￨f public￨f final￨f void￨f setResponsePage￨f (￨f final￨p Page￨p page￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p Class￨p pageClass￨p ,￨p final￨p PageParameters￨p parameters￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p Component￨p component￨p ,￨p final￨p IBehavior￨p behaviour￨p ,￨p final￨p RequestListenerInterface￨p listener￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p Component￨p component￨p ,￨p final￨p RequestListenerInterface￨p listener￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p IPageMap￨p pageMap￨p ,￨p final￨p Class￨p pageClass￨p ,￨p final￨p PageParameters￨p parameters￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p IRequestTarget￨p requestTarget￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p Page￨p page￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p ResourceReference￨p resourceReference￨p )￨f {￨f }￨f public￨f final￨f CharSequence￨f urlFor￨f (￨f final￨p ResourceReference￨p resourceReference￨p ,￨p ValueMap￨p parameters￨p )￨f {￨f }￨f private￨f void￨f checkReuse￨f (￨f )￨f {￨f }￨f private￨f void￨f detach￨f (￨f )￨f {￨f }￨f private￨f void￨f prepare￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f processEventsAndRespond￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f respond￨f (￨f )￨f {￨f }￨f private￨f final￨f IRequestCycleProcessor￨f safeGetRequestProcessor￨f (￨f )￨f {￨f }￨f private￨f boolean￨f sessionExists￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f step￨f (￨f )￨f {￨f }￨f private￨f final￨f void￨f steps￨f (￨f )￨f {￨f try￨f (￨f )￨f {￨f IRequestCycleProcessor￨e processor￨e =￨e safeGetRequestProcessor￨e (￨e )￨e ;￨e <START_BUG>￨b final￨b int￨b maxSteps￨b =￨b Short￨b .￨b MAX_VALUE￨b ;￨b <END_BUG>￨b for￨l (￨l int￨c totalSteps￨c =￨c 0￨c ;￨c (￨c currentStep￨c )￨c <￨c (￨c RequestCycle￨c .￨c DONE￨c )￨c ;￨c totalSteps￨c ++￨c )￨l {￨l if￨j (￨j totalSteps￨c >=￨c maxSteps￨c )￨j {￨j throw￨e new￨e IllegalStateException￨e (￨e (￨e (￨e "Request<seq2seq4repair_space>processing<seq2seq4repair_space>executed<seq2seq4repair_space>"￨e +￨e maxSteps￨e )￨e +￨e "<seq2seq4repair_space>steps,<seq2seq4repair_space>which<seq2seq4repair_space>means<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>probably<seq2seq4repair_space>in<seq2seq4repair_space>an<seq2seq4repair_space>infinite<seq2seq4repair_space>loop."￨e )￨e )￨e ;￨e }￨j try￨f (￨f )￨f {￨f step￨e (￨e )￨e ;￨e (￨e currentStep￨e )￨e ++￨e ;￨e }￨f catch￨f (￨f AbstractRestartResponseException￨p e￨p )￨f {￨f currentStep￨e =￨e RequestCycle￨e .￨e RESPOND￨e ;￨e }￨f }￨l }￨f finally￨f (￨f )￨f {￨f currentStep￨e =￨e RequestCycle￨e .￨e DETACH_REQUEST￨e ;￨e detach￨e (￨e )￨e ;￨e currentStep￨e =￨e RequestCycle￨e .￨e DONE￨e ;￨e }￨f }￨f private￨f final￨f void￨f threadDetach￨f (￨f )￨f {￨f }￨f final￨f void￨f setPageParameters￨f (￨f PageParameters￨p parameters￨p )￨f {￨f }￨f protected￨f void￨f logRuntimeException￨f (￨f RuntimeException￨p e￨p )￨f {￨f }￨f protected￨f abstract￨f ClientInfo￨f newClientInfo￨f (￨f )￨f {￨f }￨f protected￨f void￨f onBeginRequest￨f (￨f )￨f {￨f }￨f protected￨f void￨f onEndRequest￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d LocalEjbReceiver￨d extends￨d EJBReceiver￨d implements￨d RegistryCollector￨d .￨d Listener￨d <￨d String￨d ,￨d List￨d <￨d ClientMapping￨d >￨d >￨d ,￨d Service￨d <￨d LocalEjbReceiver￨d >￨d {￨d public￨e static￨e final￨e ServiceName￨e DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "ejb"￨e )￨e .￨e append￨e (￨e "default-local-ejb-receiver-service"￨e )￨e ;￨e public￨e static￨e final￨e ServiceName￨e BY_VALUE_SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "ejb3"￨e ,￨e "localEjbReceiver"￨e ,￨e "value"￨e )￨e ;￨e public￨e static￨e final￨e ServiceName￨e BY_REFERENCE_SERVICE_NAME￨e =￨e JBOSS￨e .￨e append￨e (￨e "ejb3"￨e ,￨e "localEjbReceiver"￨e ,￨e "reference"￨e )￨e ;￨e private￨f static￨f final￨f Object￨f [￨f ]￨f EMPTY_OBJECT_ARRAY￨f =￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f ;￨e private￨e final￨e List￨e <￨e EJBReceiverContext￨e >￨e contexts￨e =￨e new￨e CopyOnWriteArrayList￨e <￨e EJBReceiverContext￨e >￨e (￨e )￨e ;￨e private￨e final￨e InjectedValue￨e <￨e DeploymentRepository￨e >￨e deploymentRepository￨e =￨e new￨e InjectedValue￨e <￨e DeploymentRepository￨e >￨e (￨e )￨e ;￨e @￨e SuppressWarnings￨e (￨e "rawtypes"￨e )￨e private￨e final￨e InjectedValue￨e <￨e RegistryCollector￨e >￨e clusterRegistryCollector￨e =￨e new￨e InjectedValue￨e <￨e RegistryCollector￨e >￨e (￨e )￨e ;￨e private￨e final￨e LocalEjbReceiver￨e .￨e Listener￨e deploymentListener￨e =￨e new￨e LocalEjbReceiver￨e .￨e Listener￨e (￨e )￨e ;￨e private￨e final￨e boolean￨e allowPassByReference￨e ;￨e public￨f LocalEjbReceiver￨f (￨f final￨p String￨p nodeName￨p ,￨p final￨p boolean￨p allowPassByReference￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f associate￨f (￨f final￨p EJBReceiverContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f processInvocation￨f (￨f final￨f EJBClientInvocationContext￨f invocation￨f ,￨f final￨f EJBReceiverInvocationContext￨f receiverContext￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f <￨f T￨f >￨f StatefulEJBLocator￨f <￨f T￨f >￨f openSession￨f (￨f EJBReceiverContext￨f context￨f ,￨f Class￨f <￨f T￨f >￨f viewType￨f ,￨f String￨f appName￨f ,￨f String￨f moduleName￨f ,￨f String￨f distinctName￨f ,￨f String￨f beanName￨f )￨f throws￨f IllegalArgumentException￨f (￨f )￨f {￨f final￨e EjbDeploymentInformation￨e ejbInfo￨e =￨e findBean￨e (￨e appName￨e ,￨e moduleName￨e ,￨e distinctName￨e ,￨e beanName￨e )￨e ;￨e final￨e EJBComponent￨e component￨e =￨e ejbInfo￨e .￨e getEjbComponent￨e (￨e )￨e ;￨e if￨j (￨j !￨c (￨c component￨c instanceof￨c StatefulSessionComponent￨c )￨c )￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e (￨e "EJB<seq2seq4repair_space>"￨e +￨e beanName￨e )￨e +￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>Stateful<seq2seq4repair_space>Session<seq2seq4repair_space>bean<seq2seq4repair_space>in<seq2seq4repair_space>app:<seq2seq4repair_space>"￨e )￨e +￨e appName￨e )￨e +￨e "<seq2seq4repair_space>module:<seq2seq4repair_space>"￨e )￨e +￨e moduleName￨e )￨e +￨e "<seq2seq4repair_space>distinct<seq2seq4repair_space>name:"￨e )￨e +￨e distinctName￨e )￨e )￨e ;￨e }￨j final￨e StatefulSessionComponent￨e statefulComponent￨e =￨e (￨e (￨e StatefulSessionComponent￨e )￨e (￨e component￨e )￨e )￨e ;￨e final￨e SessionID￨e sessionID￨e =￨e statefulComponent￨e .￨e createSession￨e (￨e )￨e ;￨e <START_BUG>￨b return￨b new￨b StatefulEJBLocator￨b <￨b T￨b >￨b (￨b viewType￨b ,￨b appName￨b ,￨b moduleName￨b ,￨b beanName￨b ,￨b distinctName￨b ,￨b sessionID￨b ,￨b statefulComponent￨b .￨b getCache￨b (￨b )￨b .￨b getStrictAffinity￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f Object￨f clone￨f (￨f final￨p Class￨p <￨p ?￨p >￨p target￨p ,￨p final￨p ObjectCloner￨p cloner￨p ,￨p final￨p Object￨p object￨p ,￨p final￨p boolean￨p allowPassByReference￨p )￨f {￨f }￨f private￨f Object￨f clone￨f (￨f final￨p ObjectCloner￨p cloner￨p ,￨p final￨p Object￨p object￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f exists￨f (￨f final￨p String￨p appName￨p ,￨p final￨p String￨p moduleName￨p ,￨p final￨p String￨p distinctName￨p ,￨p final￨p String￨p beanName￨p )￨f {￨f }￨f @￨f Override￨f protected￨f int￨f sendPrepare￨f (￨f EJBReceiverContext￨f context￨f ,￨f TransactionID￨f transactionID￨f )￨f throws￨f XAException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f sendCommit￨f (￨f EJBReceiverContext￨f context￨f ,￨f TransactionID￨f transactionID￨f ,￨f boolean￨f onePhase￨f )￨f throws￨f XAException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f sendRollback￨f (￨f EJBReceiverContext￨f context￨f ,￨f TransactionID￨f transactionID￨f )￨f throws￨f XAException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f sendForget￨f (￨f EJBReceiverContext￨f context￨f ,￨f TransactionID￨f transactionID￨f )￨f throws￨f XAException￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f beforeCompletion￨f (￨f EJBReceiverContext￨p context￨p ,￨p TransactionID￨p transactionID￨p )￨f {￨f }￨f private￨f EjbDeploymentInformation￨f findBean￨f (￨f final￨p String￨p appName￨p ,￨p final￨p String￨p moduleName￨p ,￨p final￨p String￨p distinctName￨p ,￨p final￨p String￨p beanName￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f start￨f (￨f final￨f StartContext￨f context￨f )￨f throws￨f StartException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f stop￨f (￨f final￨p StopContext￨p context￨p )￨f {￨f }￨f @￨f Override￨f public￨f LocalEjbReceiver￨f getValue￨f (￨f )￨f throws￨f IllegalArgumentException￨f ,￨f IllegalStateException￨f (￨f )￨f {￨f }￨f public￨f InjectedValue￨f <￨f DeploymentRepository￨f >￨f getDeploymentRepository￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registryAdded￨f (￨f Registry￨p <￨p String￨p ,￨p List￨p <￨p ClientMapping￨p >￨p >￨p registry￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registryRemoved￨f (￨f Registry￨p <￨p String￨p ,￨p List￨p <￨p ClientMapping￨p >￨p >￨p registry￨p )￨f {￨f }￨f @￨f SuppressWarnings￨f (￨f "rawtypes"￨f )￨f public￨f Injector￨f <￨f RegistryCollector￨f >￨f getClusterRegistryCollectorInjector￨f (￨f )￨f {￨f }￨f private￨d static￨d class￨d ImmediateResultProducer￨d implements￨d EJBReceiverInvocationContext￨d .￨d ResultProducer￨d {￨d private￨e final￨e Object￨e clonedResult￨e ;￨e public￨f ImmediateResultProducer￨f (￨f final￨p Object￨p clonedResult￨p )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f getResult￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f discardResult￨f (￨f )￨f {￨f }￨f }￨d private￨d class￨d Listener￨d implements￨d DeploymentRepositoryListener￨d {￨d @￨f Override￨f public￨f void￨f listenerAdded￨f (￨f final￨p DeploymentRepository￨p repository￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f deploymentAvailable￨f (￨f final￨p DeploymentModuleIdentifier￨p deployment￨p ,￨p final￨p ModuleDeployment￨p moduleDeployment￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f deploymentRemoved￨f (￨f final￨p DeploymentModuleIdentifier￨p deployment￨p )￨f {￨f }￨f }￨d private￨d class￨d LocalClusterNodeManager￨d implements￨d ClusterNodeManager￨d {￨d @￨f Override￨f public￨f String￨f getNodeName￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f EJBReceiver￨f getEJBReceiver￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d SystemMenuSizeFastView￨d extends￨d ContributionItem￨d {￨d private￨e FastViewPane￨e fastViewPane￨e ;￨e public￨f SystemMenuSizeFastView￨f (￨f FastViewPane￨p fastViewPane￨p )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f }￨f public￨f void￨f fill￨f (￨f Menu￨p menu￨p ,￨p int￨p index￨p )￨f {￨f <START_BUG>￨b MenuItem￨b item￨b =￨b new￨b MenuItem￨b (￨b menu￨b ,￨b SWT￨b .￨b NONE￨b )￨b ;￨b <END_BUG>￨b item￨e .￨e setText￨e (￨e WorkbenchMessages￨e .￨e getString￨e (￨e "PartPane.size"￨e )￨e )￨e ;￨e item￨f .￨f addSelectionListener￨f (￨f new￨f SelectionAdapter￨f (￨f )￨f {￨f public￨f void￨f widgetSelected￨f (￨f SelectionEvent￨p e￨p )￨f {￨f fastViewPane￨e .￨e moveSash￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e item￨e .￨e setEnabled￨e (￨e (￨e (￨e fastViewPane￨e .￨e getCurrentPane￨e (￨e )￨e )￨e !=￨e null￨e )￨e )￨e ;￨e }￨f public￨f boolean￨f isDynamic￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ComplexPropertiesParseUtils￨d {￨d public￨f static￨f Properties￨f commonDsProperties￨f (￨f String￨p jndiName￨p )￨f {￨f }￨f public￨f static￨f Properties￨f xaDsProperties￨f (￨f String￨p jndiName￨p )￨f {￨f }￨f public￨f static￨f Properties￨f nonXaDsProperties￨f (￨f String￨p jndiName￨p )￨f {￨f }￨f public￨f static￨f Properties￨f raCommonProperties￨f (￨f )￨f {￨f }￨f public￨f static￨f Properties￨f raConnectionProperties￨f (￨f )￨f {￨f Properties￨e params￨e =￨e new￨e Properties￨e (￨e )￨e ;￨e params￨e .￨e put￨e (￨e "use-java-context"￨e ,￨e "false"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "class-name"￨e ,￨e "Class1"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "use-ccm"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "jndi-name"￨e ,￨e "java:jboss/name1"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "enabled"￨e ,￨e "false"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "min-pool-size"￨e ,￨e "1"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "max-pool-size"￨e ,￨e "5"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "pool-prefill"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "pool-use-strict-min"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "flush-strategy"￨e ,￨e "IdleConnections"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "same-rm-override"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "interleaving"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "no-tx-separate-pool"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "pad-xid"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "wrap-xa-resource"￨e ,￨e "true"￨e )￨e ;￨e <START_BUG>￨b params￨b .￨b put￨b (￨b "application"￨b ,￨b "true"￨b )￨b ;￨b <END_BUG>￨b params￨e .￨e put￨e (￨e "background-validation"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "background-validation-millis"￨e ,￨e "5000"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "use-fast-fail"￨e ,￨e "true"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "blocking-timeout-wait-millis"￨e ,￨e "5000"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "idle-timeout-minutes"￨e ,￨e "4"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "allocation-retry"￨e ,￨e "2"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "allocation-retry-wait-millis"￨e ,￨e "3000"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "xa-resource-timeout"￨e ,￨e "300"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "no-recovery"￨e ,￨e "false"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "recovery-plugin-class-name"￨e ,￨e "someClass2"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "recovery-username"￨e ,￨e "sa"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "recovery-password"￨e ,￨e "sa-pass"￨e )￨e ;￨e params￨e .￨e put￨e (￨e "recovery-security-domain"￨e ,￨e "HsqlDbRealm"￨e )￨e ;￨e return￨e params￨e ;￨e }￨f public￨f static￨f Properties￨f raAdminProperties￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f setOperationParams￨f (￨f ModelNode￨p operation￨p ,￨p Properties￨p params￨p )￨f {￨f }￨f public￨f static￨f void￨f addExtensionProperties￨f (￨f ModelNode￨p operation￨p )￨f {￨f }￨f public￨f static￨f boolean￨f checkModelParams￨f (￨f ModelNode￨p node￨p ,￨p Properties￨p params￨p )￨f {￨f }￨f }￨d
public￨d class￨d JmxMonitoredMap￨d <￨d K￨d ,￨d V￨d >￨d extends￨d ConcurrentHashMap￨d <￨d String￨d ,￨d SolrInfoMBean￨d >￨d {￨d private￨d static￨d final￨d Logger￨d LOG￨d =￨d LoggerFactory￨d .￨d getLogger￨d (￨d JmxMonitoredMap￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d MBeanServer￨d server￨d =￨d null￨d ;￨d private￨d String￨d jmxRootName￨d ;￨d private￨d String￨d coreHashCode￨d ;￨d public￨d JmxMonitoredMap￨d (￨d String￨d coreName￨d ,￨d String￨d coreHashCode￨d ,￨d final￨d JmxConfiguration￨d jmxConfig￨d )￨d {￨d }￨d @￨f Override￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f SolrInfoMBean￨f put￨f (￨f String￨p key￨p ,￨p SolrInfoMBean￨p infoBean￨p )￨f {￨f }￨f @￨f Override￨f public￨f SolrInfoMBean￨f remove￨f (￨f Object￨p key￨p )￨f {￨f }￨f private￨f void￨f unregister￨f (￨f String￨p key￨p ,￨p SolrInfoMBean￨p infoBean￨p )￨f {￨f }￨f private￨f ObjectName￨f getObjectName￨f (￨f String￨f key￨f ,￨f SolrInfoMBean￨f infoBean￨f )￨f throws￨f MalformedObjectNameException￨f (￨f )￨f {￨f }￨f public￨f MBeanServer￨f getServer￨f (￨f )￨f {￨f }￨f static￨d class￨d SolrDynamicMBean￨d implements￨d DynamicMBean￨d {￨d private￨e SolrInfoMBean￨e infoBean￨e ;￨e private￨e HashSet￨e <￨e String￨e >￨e staticStats￨e ;￨e private￨e String￨e coreHashCode￨e ;￨e public￨f SolrDynamicMBean￨f (￨f String￨p coreHashCode￨p ,￨p SolrInfoMBean￨p managedResource￨p )￨f {￨f }￨f @￨f Override￨f public￨f MBeanInfo￨f getMBeanInfo￨f (￨f )￨f {￨f }￨f private￨f OpenType￨f determineType￨f (￨f Class￨p type￨p )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f getAttribute￨f (￨f String￨f attribute￨f )￨f throws￨f AttributeNotFoundException￨f ,￨f MBeanException￨f ,￨f ReflectionException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f AttributeList￨f getAttributes￨f (￨f String￨p [￨p ]￨p attributes￨p )￨f {￨f AttributeList￨e list￨e =￨e new￨e AttributeList￨e (￨e )￨e ;￨e for￨l (￨l String￨c attribute￨c :￨c attributes￨c )￨l {￨l try￨f (￨f )￨f {￨f list￨e .￨e add￨e (￨e new￨e Attribute￨e (￨e attribute￨e ,￨e getAttribute￨e (￨e attribute￨e )￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f <START_BUG>￨b JmxMonitoredMap￨b .￨b LOG￨b .￨b warn￨b (￨b (￨b "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>attibute<seq2seq4repair_space>"￨b +￨b attribute￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨l return￨e list￨e ;￨e }￨f @￨f Override￨f public￨f void￨f setAttribute￨f (￨f Attribute￨f attribute￨f )￨f throws￨f AttributeNotFoundException￨f ,￨f InvalidAttributeValueException￨f ,￨f MBeanException￨f ,￨f ReflectionException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f AttributeList￨f setAttributes￨f (￨f AttributeList￨p attributes￨p )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f invoke￨f (￨f String￨f actionName￨f ,￨f Object￨f [￨f ]￨f params￨f ,￨f String￨f [￨f ]￨f signature￨f )￨f throws￨f MBeanException￨f ,￨f ReflectionException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d TestExternalValues￨d extends￨d SingleEMFTestCase￨d {￨d public￨f void￨f setUp￨f (￨f )￨f {￨f <START_BUG>￨b super￨b .￨b setUp￨b (￨b CLEAR_TABLES￨b ,￨b EntityA￨b .￨b class￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f void￨f testExternalValues￨f (￨f )￨f {￨f }￨f public￨f void￨f testUnrecognizedExternalValue￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PropertyColumn￨d extends￨d AbstractColumn￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e String￨e propertyExpression￨e ;￨e public￨f PropertyColumn￨f (￨f IModel￨p displayModel￨p ,￨p String￨p sortProperty￨p ,￨p String￨p propertyExpression￨p )￨f {￨f }￨f public￨f PropertyColumn￨f (￨f IModel￨p displayModel￨p ,￨p String￨p propertyExpressions￨p )￨f {￨f }￨f public￨f void￨f populateItem￨f (￨f Item￨p item￨p ,￨p String￨p componentId￨p ,￨p IModel￨p model￨p )￨f {￨f <START_BUG>￨b item￨b .￨b add￨b (￨b new￨b wicket￨b .￨b markup￨b .￨b html￨b .￨b basic￨b .￨b Label￨b (￨b item￨b ,￨b componentId￨b ,￨b createLabelModel￨b (￨b model￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f IModel￨f createLabelModel￨f (￨f IModel￨p embeddedModel￨p )￨f {￨f }￨f public￨f String￨f getPropertyExpression￨f (￨f )￨f {￨f }￨f }￨d
final￨d class￨d SortedBytesMergeUtils￨d {￨d private￨f SortedBytesMergeUtils￨f (￨f )￨f {￨f }￨f static￨f SortedBytesMergeUtils￨f .￨f MergeContext￨f init￨f (￨f ValueType￨p type￨p ,￨p IndexDocValues￨p [￨p ]￨p docValues￨p ,￨p Comparator￨p <￨p BytesRef￨p >￨p comp￨p ,￨p MergeState￨p mergeState￨p )￨f {￨f }￨f public￨d static￨d final￨d class￨d MergeContext￨d {￨d private￨e final￨e Comparator￨e <￨e BytesRef￨e >￨e comp￨e ;￨e private￨e final￨e BytesRef￨e missingValue￨e =￨e new￨e BytesRef￨e (￨e )￨e ;￨e final￨e int￨e sizePerValues￨e ;￨e final￨e ValueType￨e type￨e ;￨e final￨e int￨e [￨e ]￨e docToEntry￨e ;￨e long￨e [￨e ]￨e offsets￨e ;￨e public￨f MergeContext￨f (￨f Comparator￨p <￨p BytesRef￨p >￨p comp￨p ,￨p MergeState￨p mergeState￨p ,￨p int￨p size￨p ,￨p ValueType￨p type￨p )￨f {￨f }￨f }￨d static￨f List￨f <￨f SortedBytesMergeUtils￨f .￨f SortedSourceSlice￨f >￨f buildSlices￨f (￨f MergeState￨f mergeState￨f ,￨f IndexDocValues￨f [￨f ]￨f docValues￨f ,￨f SortedBytesMergeUtils￨f .￨f MergeContext￨f ctx￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f createOrdMapping￨f (￨f MergeState￨p mergeState￨p ,￨p SortedBytesMergeUtils￨p .￨p SortedSourceSlice￨p currentSlice￨p )￨f {￨f }￨f static￨f int￨f mergeRecords￨f (￨f SortedBytesMergeUtils￨f .￨f MergeContext￨f ctx￨f ,￨f IndexOutput￨f datOut￨f ,￨f List￨f <￨f SortedBytesMergeUtils￨f .￨f SortedSourceSlice￨f >￨f slices￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨d static￨d final￨d class￨d RecordMerger￨d {￨d private￨e final￨e SortedBytesMergeUtils￨e .￨e MergeQueue￨e queue￨e ;￨e private￨e final￨e SortedBytesMergeUtils￨e .￨e SortedSourceSlice￨e [￨e ]￨e top￨e ;￨e private￨e int￨e numTop￨e ;￨e BytesRef￨e current￨e ;￨e int￨e currentOrd￨e =￨e -￨e 1￨e ;￨e RecordMerger￨f (￨f SortedBytesMergeUtils￨p .￨p MergeQueue￨p queue￨p ,￨p SortedBytesMergeUtils￨p .￨p SortedSourceSlice￨p [￨p ]￨p top￨p )￨f {￨f }￨f private￨f void￨f pullTop￨f (￨f )￨f {￨f }￨f private￨f void￨f pushTop￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d static￨d class￨d SortedSourceSlice￨d {￨d final￨e SortedSource￨e source￨e ;￨e final￨e int￨e readerIdx￨e ;￨e final￨e int￨e [￨e ]￨e docIDToRelativeOrd￨e ;￨e final￨e int￨e [￨e ]￨e ordMapping￨e ;￨e final￨e int￨e docToOrdStart￨e ;￨e final￨e int￨e docToOrdEnd￨e ;￨e BytesRef￨e current￨e =￨e new￨e BytesRef￨e (￨e )￨e ;￨e int￨e relativeOrd￨e =￨e -￨e 1￨e ;￨e SortedSourceSlice￨f (￨f int￨p readerIdx￨p ,￨p SortedSource￨p source￨p ,￨p MergeState￨p state￨p ,￨p int￨p [￨p ]￨p docToOrd￨p )￨f {￨f }￨f private￨f static￨f int￨f numDocs￨f (￨f MergeState￨p state￨p ,￨p int￨p readerIndex￨p )￨f {￨f }￨f BytesRef￨f next￨f (￨f )￨f {￨f }￨f void￨f writeOrds￨f (￨f PackedInts￨f .￨f Writer￨f writer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d final￨d class￨d MissingValueSource￨d extends￨d SortedSource￨d {￨d private￨e BytesRef￨e missingValue￨e ;￨e public￨f MissingValueSource￨f (￨f SortedBytesMergeUtils￨p .￨p MergeContext￨p ctx￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f ord￨f (￨f int￨p docID￨p )￨f {￨f }￨f @￨f Override￨f public￨f BytesRef￨f getByOrd￨f (￨f int￨p ord￨p ,￨p BytesRef￨p bytesRef￨p )￨f {￨f <START_BUG>￨b bytesRef￨b .￨b copy￨b (￨b missingValue￨b )￨b ;￨b <END_BUG>￨b return￨e bytesRef￨e ;￨e }￨f @￨f Override￨f public￨f Reader￨f getDocToOrd￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f getValueCount￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d final￨d class￨d MergeQueue￨d extends￨d PriorityQueue￨d <￨d SortedBytesMergeUtils￨d .￨d SortedSourceSlice￨d >￨d {￨d final￨e Comparator￨e <￨e BytesRef￨e >￨e comp￨e ;￨e public￨f MergeQueue￨f (￨f int￨p maxSize￨p ,￨p Comparator￨p <￨p BytesRef￨p >￨p comp￨p )￨f {￨f }￨f @￨f Override￨f protected￨f boolean￨f lessThan￨f (￨f SortedBytesMergeUtils￨p .￨p SortedSourceSlice￨p a￨p ,￨p SortedBytesMergeUtils￨p .￨p SortedSourceSlice￨p b￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d OddEvenListItem￨d <￨d T￨d >￨d extends￨d ListItem￨d <￨d T￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e static￨e final￨e String￨e CLASS_EVEN￨e =￨e "even"￨e ;￨e private￨e static￨e final￨e String￨e CLASS_ODD￨e =￨e "odd"￨e ;￨e public￨f OddEvenListItem￨f (￨f int￨p index￨p ,￨p IModel￨p <￨p T￨p >￨p model￨p )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f onComponentTag￨f (￨f ComponentTag￨p tag￨p )￨f {￨f super￨e .￨e onComponentTag￨e (￨e tag￨e )￨e ;￨e <START_BUG>￨b tag￨b .￨b put￨b (￨b "class"￨b ,￨b (￨b (￨b (￨b OddEvenListItem￨b .￨b getIndex￨b (￨b )￨b )￨b %￨b 2￨b )￨b ==￨b 0￨b ?￨b OddEvenListItem￨b .￨b CLASS_EVEN￨b :￨b OddEvenListItem￨b .￨b CLASS_ODD￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
public￨d class￨d CommandlineJava￨d implements￨d Cloneable￨d {￨d private￨e Commandline￨e vmCommand￨e =￨e new￨e Commandline￨e (￨e )￨e ;￨e private￨e Commandline￨e javaCommand￨e =￨e new￨e Commandline￨e (￨e )￨e ;￨e private￨e CommandlineJava￨e .￨e SysProperties￨e sysProperties￨e =￨e new￨e CommandlineJava￨e .￨e SysProperties￨e (￨e )￨e ;￨e private￨e Path￨e classpath￨e =￨e null￨e ;￨e private￨e String￨e vmVersion￨e ;￨e public￨d static￨d class￨d SysProperties￨d extends￨d Environment￨d implements￨d Cloneable￨d {￨d Properties￨e sys￨e =￨e null￨e ;￨e public￨f String￨f [￨f ]￨f getVariables￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f void￨f setSystem￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f restoreSystem￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f }￨d public￨f CommandlineJava￨f (￨f )￨f {￨f }￨f public￨f Argument￨f createArgument￨f (￨f )￨f {￨f }￨f public￨f Argument￨f createVmArgument￨f (￨f )￨f {￨f }￨f public￨f void￨f addSysproperty￨f (￨f Environment￨p .￨p Variable￨p sysp￨p )￨f {￨f }￨f public￨f void￨f setVm￨f (￨f String￨p vm￨p )￨f {￨f }￨f public￨f void￨f setVmversion￨f (￨f String￨p value￨p )￨f {￨f }￨f public￨f void￨f setClassname￨f (￨f String￨p classname￨p )￨f {￨f }￨f public￨f String￨f getClassname￨f (￨f )￨f {￨f }￨f public￨f Path￨f createClasspath￨f (￨f Project￨p p￨p )￨f {￨f }￨f public￨f String￨f getVmversion￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getCommandline￨f (￨f )￨f {￨f Path￨e fullClasspath￨e =￨e (￨e (￨e classpath￨e )￨e !=￨e null￨e )￨e ?￨e classpath￨e .￨e concatSystemClasspath￨e (￨e "ignore"￨e )￨e :￨e null￨e ;￨e int￨e size￨e =￨e (￨e (￨e vmCommand￨e .￨e size￨e (￨e )￨e )￨e +￨e (￨e javaCommand￨e .￨e size￨e (￨e )￨e )￨e )￨e +￨e (￨e sysProperties￨e .￨e size￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c fullClasspath￨c !=￨c null￨c )￨c &&￨c (￨c (￨c fullClasspath￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨c )￨j {￨j size￨e +=￨e 2￨e ;￨e }￨j String￨e [￨e ]￨e result￨e =￨e new￨e String￨e [￨e size￨e ]￨e ;￨e System￨e .￨e arraycopy￨e (￨e vmCommand￨e .￨e getCommandline￨e (￨e )￨e ,￨e 0￨e ,￨e result￨e ,￨e 0￨e ,￨e vmCommand￨e .￨e size￨e (￨e )￨e )￨e ;￨e int￨e pos￨e =￨e vmCommand￨e .￨e size￨e (￨e )￨e ;￨e if￨j (￨j (￨c sysProperties￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j System￨e .￨e arraycopy￨e (￨e sysProperties￨e .￨e getVariables￨e (￨e )￨e ,￨e 0￨e ,￨e result￨e ,￨e pos￨e ,￨e sysProperties￨e .￨e size￨e (￨e )￨e )￨e ;￨e pos￨e +=￨e sysProperties￨e .￨e size￨e (￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b (￨b fullClasspath￨b !=￨b null￨b )￨b &&￨b (￨b (￨b fullClasspath￨b .￨b size￨b (￨b )￨b )￨b >￨b 0￨b )￨b )￨b {￨b <END_BUG>￨b result￨e [￨e (￨e pos￨e ++￨e )￨e ]￨e =￨e "-classpath"￨e ;￨e result￨e [￨e (￨e pos￨e ++￨e )￨e ]￨e =￨e fullClasspath￨e .￨e toString￨e (￨e )￨e ;￨e }￨e System￨e .￨e arraycopy￨e (￨e javaCommand￨e .￨e getCommandline￨e (￨e )￨e ,￨e 0￨e ,￨e result￨e ,￨e pos￨e ,￨e javaCommand￨e .￨e size￨e (￨e )￨e )￨e ;￨e return￨e result￨e ;￨e }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f Commandline￨f getJavaCommand￨f (￨f )￨f {￨f }￨f public￨f Commandline￨f getVmCommand￨f (￨f )￨f {￨f }￨f public￨f Path￨f getClasspath￨f (￨f )￨f {￨f }￨f public￨f void￨f setSystemProperties￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f restoreSystemProperties￨f (￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f CommandlineJava￨f .￨f SysProperties￨f getSystemProperties￨f (￨f )￨f {￨f }￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f public￨f void￨f clearJavaArgs￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ConstructorDeclaration￨d extends￨d AbstractMethodDeclaration￨d {￨d public￨e ExplicitConstructorCall￨e constructorCall￨e ;￨e public￨e static￨e final￨e char￨e [￨e ]￨e ConstantPoolName￨e =￨e "<init>"￨e .￨e toCharArray￨e (￨e )￨e ;￨e public￨e boolean￨e isDefaultConstructor￨e =￨e false￨e ;￨e public￨f ConstructorDeclaration￨f (￨f CompilationResult￨p compilationResult￨p )￨f {￨f }￨f public￨f void￨f analyseCode￨f (￨f ClassScope￨p classScope￨p ,￨p InitializationFlowContext￨p initializerFlowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f ClassScope￨p classScope￨p ,￨p ClassFile￨p classFile￨p )￨f {￨f }￨f public￨f void￨f generateSyntheticFieldInitializationsIfNecessary￨f (￨f MethodScope￨p methodScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p ReferenceBinding￨p declaringClass￨p )￨f {￨f }￨f private￨f void￨f internalGenerateCode￨f (￨f ClassScope￨p classScope￨p ,￨p ClassFile￨p classFile￨p )￨f {￨f classFile￨e .￨e generateMethodInfoHeader￨e (￨e binding￨e )￨e ;￨e int￨e methodAttributeOffset￨e =￨e classFile￨e .￨e contentsOffset￨e ;￨e int￨e attributeNumber￨e =￨e classFile￨e .￨e generateMethodInfoAttribute￨e (￨e binding￨e )￨e ;￨e if￨j (￨j (￨c !￨c (￨c binding￨c .￨c isNative￨c (￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c binding￨c .￨c isAbstract￨c (￨c )￨c )￨c )￨c )￨j {￨j TypeDeclaration￨e declaringType￨e =￨e classScope￨e .￨e referenceContext￨e ;￨e int￨e codeAttributeOffset￨e =￨e classFile￨e .￨e contentsOffset￨e ;￨e classFile￨e .￨e generateCodeAttributeHeader￨e (￨e )￨e ;￨e CodeStream￨e codeStream￨e =￨e classFile￨e .￨e codeStream￨e ;￨e codeStream￨e .￨e reset￨e (￨e this￨e ,￨e classFile￨e )￨e ;￨e ReferenceBinding￨e declaringClass￨e =￨e binding￨e .￨e declaringClass￨e ;￨e int￨e argSlotSize￨e =￨e 1￨e ;￨e if￨j (￨j declaringClass￨c .￨c isNestedType￨c (￨c )￨c )￨j {￨j NestedTypeBinding￨e nestedType￨e =￨e (￨e (￨e NestedTypeBinding￨e )￨e (￨e declaringClass￨e )￨e )￨e ;￨e this￨e .￨e scope￨e .￨e extraSyntheticArguments￨e =￨e nestedType￨e .￨e syntheticOuterLocalVariables￨e (￨e )￨e ;￨e scope￨e .￨e computeLocalVariablePositions￨e (￨e (￨e (￨e nestedType￨e .￨e enclosingInstancesSlotSize￨e )￨e +￨e 1￨e )￨e ,￨e codeStream￨e )￨e ;￨e argSlotSize￨e +=￨e nestedType￨e .￨e enclosingInstancesSlotSize￨e ;￨e argSlotSize￨e +=￨e nestedType￨e .￨e outerLocalVariablesSlotSize￨e ;￨e }￨j else￨j {￨j scope￨e .￨e computeLocalVariablePositions￨e (￨e 1￨e ,￨e codeStream￨e )￨e ;￨e }￨j if￨j (￨j (￨c arguments￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c arguments￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l LocalVariableBinding￨e argBinding￨e ;￨e codeStream￨e .￨e addVisibleLocalVariable￨e (￨e (￨e argBinding￨e =￨e arguments￨e [￨e i￨e ]￨e .￨e binding￨e )￨e )￨e ;￨e argBinding￨e .￨e recordInitializationStartPC￨e (￨e 0￨e )￨e ;￨e TypeBinding￨e argType￨e ;￨e if￨j (￨j (￨c (￨c argType￨c =￨c argBinding￨c .￨c type￨c )￨c ==￨c (￨c LongBinding￨c )￨c )￨c ||￨c (￨c argType￨c ==￨c (￨c DoubleBinding￨c )￨c )￨c )￨j {￨j argSlotSize￨e +=￨e 2￨e ;￨e }￨j else￨j {￨j argSlotSize￨e ++￨e ;￨e }￨j }￨l }￨j MethodScope￨e initializerScope￨e =￨e declaringType￨e .￨e initializerScope￨e ;￨e initializerScope￨e .￨e computeLocalVariablePositions￨e (￨e argSlotSize￨e ,￨e codeStream￨e )￨e ;￨e boolean￨e needFieldInitializations￨e =￨e (￨e (￨e constructorCall￨e )￨e ==￨e null￨e )￨e ||￨e (￨e (￨e constructorCall￨e .￨e accessMode￨e )￨e !=￨e (￨e ExplicitConstructorCall￨e .￨e This￨e )￨e )￨e ;￨e boolean￨e preInitSyntheticFields￨e =￨e (￨e scope￨e .￨e environment￨e (￨e )￨e .￨e options￨e .￨e targetJDK￨e )￨e >=￨e (￨e ClassFileConstants￨e .￨e JDK1_4￨e )￨e ;￨e if￨j (￨j needFieldInitializations￨c &&￨c preInitSyntheticFields￨c )￨j {￨j generateSyntheticFieldInitializationsIfNecessary￨e (￨e scope￨e ,￨e codeStream￨e ,￨e declaringClass￨e )￨e ;￨e }￨j if￨j (￨j (￨c constructorCall￨c )￨c !=￨c null￨c )￨j {￨j constructorCall￨e .￨e generateCode￨e (￨e scope￨e ,￨e codeStream￨e )￨e ;￨e }￨j if￨j (￨j needFieldInitializations￨c )￨j {￨j if￨j (￨j !￨c preInitSyntheticFields￨c )￨j {￨j generateSyntheticFieldInitializationsIfNecessary￨e (￨e scope￨e ,￨e codeStream￨e ,￨e declaringClass￨e )￨e ;￨e }￨j if￨j (￨j (￨c declaringType￨c .￨c fields￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c declaringType￨c .￨c fields￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l FieldDeclaration￨e fieldDecl￨e ;￨e if￨j (￨j !￨c (￨c (￨c fieldDecl￨c =￨c declaringType￨c .￨c fields￨c [￨c i￨c ]￨c )￨c .￨c isStatic￨c (￨c )￨c )￨c )￨j {￨j fieldDecl￨e .￨e generateCode￨e (￨e initializerScope￨e ,￨e codeStream￨e )￨e ;￨e }￨j }￨l }￨j }￨j if￨j (￨j (￨c statements￨c )￨c !=￨c null￨c )￨j {￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c max￨c =￨c statements￨c .￨c length￨c ;￨c i￨c <￨c max￨c ;￨c i￨c ++￨c )￨l {￨l statements￨e [￨e i￨e ]￨e .￨e generateCode￨e (￨e scope￨e ,￨e codeStream￨e )￨e ;￨e }￨l }￨j if￨j (￨j this￨c .￨c needFreeReturn￨c )￨j {￨j codeStream￨e .￨e return_￨e (￨e )￨e ;￨e }￨j codeStream￨e .￨e exitUserScope￨e (￨e scope￨e )￨e ;￨e codeStream￨e .￨e recordPositionsFrom￨e (￨e 0￨e ,￨e this￨e .￨e bodyEnd￨e )￨e ;￨e classFile￨e .￨e completeCodeAttribute￨e (￨e codeAttributeOffset￨e )￨e ;￨e attributeNumber￨e ++￨e ;￨e }￨j classFile￨e .￨e completeMethodInfo￨e (￨e methodAttributeOffset￨e ,￨e attributeNumber￨e )￨e ;￨e if￨j (￨j ignoreFurtherInvestigation￨c )￨j {￨j <START_BUG>￨b throw￨b new￨b org￨b .￨b eclipse￨b .￨b jdt￨b .￨b internal￨b .￨b compiler￨b .￨b problem￨b .￨b AbortMethod￨b (￨b scope￨b .￨b referenceCompilationUnit￨b (￨b )￨b .￨b compilationResult￨b )￨b ;￨b <END_BUG>￨b }￨j }￨f public￨f boolean￨f isConstructor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDefaultConstructor￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInitializationMethod￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isRecursive￨f (￨f ArrayList￨p visited￨p )￨f {￨f }￨f public￨f void￨f parseStatements￨f (￨f Parser￨p parser￨p ,￨p CompilationUnitDeclaration￨p unit￨p )￨f {￨f }￨f public￨f StringBuffer￨f printBody￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f void￨f resolveJavadoc￨f (￨f )￨f {￨f }￨f public￨f void￨f resolveStatements￨f (￨f )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p ClassScope￨p classScope￨p )￨f {￨f }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d PureTestCase￨d extends￨d AbstractMgmtTestBase￨d {￨d public￨f static￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f AfterClass￨f public￨f static￨f void￨f tearDown￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Deployment￨f public￨f static￨f ResourceAdapterArchive￨f createDeployment￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨e Inject￨e public￨e ServiceContainer￨e serviceContainer￨e ;￨e @￨f Test￨f public￨f void￨f testRegistryConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f <START_BUG>￨b ServiceController￨b <￨b ?￨b >￨b controller￨b =￨b serviceContainer￨b .￨b getService￨b (￨b RA_REPOSISTORY_SERVICE￨b )￨b ;￨b <END_BUG>￨b assertNotNull￨e (￨e controller￨e )￨e ;￨e ResourceAdapterRepository￨e repository￨e =￨e (￨e (￨e ResourceAdapterRepository￨e )￨e (￨e controller￨e .￨e getValue￨e (￨e )￨e )￨e )￨e ;￨e assertNotNull￨e (￨e repository￨e )￨e ;￨e Set￨e <￨e String￨e >￨e ids￨e =￨e repository￨e .￨e getResourceAdapters￨e (￨e )￨e ;￨e assertNotNull￨e (￨e ids￨e )￨e ;￨e assertEquals￨e (￨e 2￨e ,￨e ids￨e .￨e size￨e (￨e )￨e )￨e ;￨e for￨l (￨l String￨c piId￨c :￨c ids￨c )￨l {￨l assertNotNull￨e (￨e piId￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e (￨e "PID:"￨e +￨e piId￨e )￨e )￨e ;￨e assertNotNull￨e (￨e repository￨e .￨e getResourceAdapter￨e (￨e piId￨e )￨e )￨e ;￨e }￨l }￨f @￨f Test￨f public￨f void￨f testMetadataConfiguration￨f (￨f )￨f throws￨f Throwable￨f (￨f )￨f {￨f }￨f }￨d
class￨d MemoryManagerMXBeanAttributeHandler￨d extends￨d AbstractPlatformMBeanAttributeHandler￨d {￨d static￨e final￨e MemoryManagerMXBeanAttributeHandler￨e INSTANCE￨e =￨e new￨e MemoryManagerMXBeanAttributeHandler￨e (￨e )￨e ;￨e private￨f MemoryManagerMXBeanAttributeHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f executeReadAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e String￨e mmName￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e operation￨e .￨e require￨e (￨e OP_ADDR￨e )￨e )￨e .￨e getLastElement￨e (￨e )￨e .￨e getValue￨e (￨e )￨e ;￨e final￨e String￨e name￨e =￨e operation￨e .￨e require￨e (￨e NAME￨e )￨e .￨e asString￨e (￨e )￨e ;￨e MemoryManagerMXBean￨e memoryManagerMXBean￨e =￨e null￨e ;￨e for￨l (￨l MemoryManagerMXBean￨c mbean￨c :￨c ManagementFactory￨c .￨c getMemoryManagerMXBeans￨c (￨c )￨c )￨l {￨l if￨j (￨j mmName￨c .￨c equals￨c (￨c PlatformMBeanUtil￨c .￨c escapeMBeanName￨c (￨c mbean￨c .￨c getName￨c (￨c )￨c )￨c )￨c )￨j {￨j memoryManagerMXBean￨e =￨e mbean￨e ;￨e }￨j }￨l if￨j (￨j memoryManagerMXBean￨c ==￨c null￨c )￨j {￨j throw￨e ROOT_LOGGER￨e .￨e unknownMemoryManager￨e (￨e mmName￨e )￨e ;￨e }￨j <START_BUG>￨b if￨b (￨b OBJECT_NAME￨b .￨b getName￨b (￨b )￨b .￨b equals￨b (￨b name￨b )￨b )￨b {￨b <END_BUG>￨b final￨e String￨e objName￨e =￨e PlatformMBeanUtil￨e .￨e getObjectNameStringWithNameKey￨e (￨e ManagementFactory￨e .￨e MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE￨e ,￨e mmName￨e )￨e ;￨e context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e objName￨e )￨e ;￨e else￨j if￨j (￨j NAME￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e PlatformMBeanUtil￨e .￨e escapeMBeanName￨e (￨e memoryManagerMXBean￨e .￨e getName￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j VALID￨c .￨c getName￨c (￨c )￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j context￨e .￨e getResult￨e (￨e )￨e .￨e set￨e (￨e memoryManagerMXBean￨e .￨e isValid￨e (￨e )￨e )￨e ;￨e }￨j else￨j if￨j (￨j MEMORY_POOL_NAMES￨c .￨c equals￨c (￨c name￨c )￨c )￨j {￨j final￨e ModelNode￨e result￨e =￨e context￨e .￨e getResult￨e (￨e )￨e ;￨e result￨e .￨e setEmptyList￨e (￨e )￨e ;￨e for￨l (￨l String￨c pool￨c :￨c memoryManagerMXBean￨c .￨c getMemoryPoolNames￨c (￨c )￨c )￨l {￨l result￨e .￨e add￨e (￨e PlatformMBeanUtil￨e .￨e escapeMBeanName￨e (￨e pool￨e )￨e )￨e ;￨e }￨l }￨j else￨j if￨j (￨j MEMORY_MANAGER_READ_ATTRIBUTES￨c .￨c contains￨c (￨c name￨c )￨c )￨j {￨j throw￨e ROOT_LOGGER￨e .￨e badReadAttributeImpl￨e (￨e name￨e )￨e ;￨e }￨j else￨j {￨j throw￨e unknownAttribute￨e (￨e operation￨e )￨e ;￨e }￨j }￨f @￨f Override￨f protected￨f void￨f executeWriteAttribute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PathExtensionContentNegotiationStrategyTests￨d {￨d private￨e NativeWebRequest￨e webRequest￨e ;￨e private￨e MockHttpServletRequest￨e servletRequest￨e ;￨e @￨f Before￨f public￨f void￨f setup￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f resolveMediaTypesFromMapping￨f (￨f )￨f {￨f this￨e .￨e servletRequest￨e .￨e setRequestURI￨e (￨e "test.html"￨e )￨e ;￨e PathExtensionContentNegotiationStrategy￨e strategy￨e =￨e new￨e PathExtensionContentNegotiationStrategy￨e (￨e )￨e ;￨e List￨e <￨e MediaType￨e >￨e mediaTypes￨e =￨e strategy￨e .￨e resolveMediaTypes￨e (￨e this￨e .￨e webRequest￨e )￨e ;￨e assertEquals￨e (￨e Arrays￨e .￨e asList￨e (￨e new￨e MediaType￨e (￨e "text"￨e ,￨e "html"￨e )￨e )￨e ,￨e mediaTypes￨e )￨e ;￨e <START_BUG>￨b strategy￨b =￨b new￨b PathExtensionContentNegotiationStrategy￨b (￨b Collections￨b .￨b singletonMap￨b (￨b "HTML"￨b ,￨b "application/xhtml+xml"￨b )￨b )￨b ;￨b <END_BUG>￨b mediaTypes￨e =￨e strategy￨e .￨e resolveMediaTypes￨e (￨e this￨e .￨e webRequest￨e )￨e ;￨e assertEquals￨e (￨e Arrays￨e .￨e asList￨e (￨e new￨e MediaType￨e (￨e "application"￨e ,￨e "xhtml+xml"￨e )￨e )￨e ,￨e mediaTypes￨e )￨e ;￨e }￨f @￨f Test￨f public￨f void￨f resolveMediaTypesFromJaf￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getMediaTypeFromFilenameNoJaf￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getMediaTypeFilenameWithContextPath￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getMediaTypeFilenameWithEncodedURI￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d StatisticalSampleSender￨d extends￨d AbstractSampleSender￨d implements￨d Serializable￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 240L￨e ;￨e private￨e static￨e final￨e Logger￨e log￨e =￨e LoggingManager￨e .￨e getLoggerForClass￨e (￨e )￨e ;￨e private￨e static￨e final￨e int￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨e =￨e 100￨e ;￨e private￨e static￨e final￨e long￨e DEFAULT_TIME_THRESHOLD￨e =￨e 60000L￨e ;￨e private￨e static￨e final￨e int￨e NUM_SAMPLES_THRESHOLD￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "num_sample_threshold"￨e ,￨e StatisticalSampleSender￨e .￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨e )￨e ;￨e private￨e static￨e final￨e long￨e TIME_THRESHOLD_MS￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "time_threshold"￨e ,￨e StatisticalSampleSender￨e .￨e DEFAULT_TIME_THRESHOLD￨e )￨e ;￨e private￨e static￨e boolean￨e KEY_ON_THREADNAME￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "key_on_threadname"￨e ,￨e false￨e )￨e ;￨e private￨e final￨e int￨e clientConfiguredNumSamplesThreshold￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "num_sample_threshold"￨e ,￨e StatisticalSampleSender￨e .￨e DEFAULT_NUM_SAMPLE_THRESHOLD￨e )￨e ;￨e private￨e final￨e long￨e clientConfiguredTimeThresholdMs￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "time_threshold"￨e ,￨e StatisticalSampleSender￨e .￨e DEFAULT_TIME_THRESHOLD￨e )￨e ;￨e private￨e final￨e boolean￨e clientConfiguredKeyOnThreadName￨e =￨e JMeterUtils￨e .￨e getPropDefault￨e (￨e "key_on_threadname"￨e ,￨e false￨e )￨e ;￨e private￨e final￨e RemoteSampleListener￨e listener￨e ;￨e private￨e final￨e List￨e <￨e SampleEvent￨e >￨e sampleStore￨e =￨e new￨e ArrayList￨e <￨e SampleEvent￨e >￨e (￨e )￨e ;￨e private￨e final￨e Map￨e <￨e String￨e ,￨e StatisticalSampleResult￨e >￨e sampleTable￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e StatisticalSampleResult￨e >￨e (￨e )￨e ;￨e private￨e volatile￨e transient￨e int￨e numSamplesThreshold￨e ;￨e private￨e volatile￨e transient￨e long￨e timeThresholdMs￨e ;￨e private￨e volatile￨e transient￨e boolean￨e keyOnThreadName￨e ;￨e private￨e transient￨e int￨e sampleCount￨e ;￨e private￨e transient￨e long￨e batchSendTime￨e =￨e -￨e 1￨e ;￨e @￨f Deprecated￨f public￨f StatisticalSampleSender￨f (￨f )￨f {￨f }￨f StatisticalSampleSender￨f (￨f RemoteSampleListener￨p listener￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f testEnded￨f (￨f String￨p host￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f sampleOccurred￨f (￨f SampleEvent￨p e￨p )￨f {￨f synchronized￨f (￨f sampleStore￨p )￨f {￨f String￨e key￨e =￨e StatisticalSampleResult￨e .￨e getKey￨e (￨e e￨e ,￨e keyOnThreadName￨e )￨e ;￨e StatisticalSampleResult￨e statResult￨e =￨e sampleTable￨e .￨e get￨e (￨e key￨e )￨e ;￨e if￨j (￨j statResult￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b statResult￨b =￨b new￨b StatisticalSampleResult￨b (￨b e￨b .￨b getResult￨b (￨b )￨b ,￨b keyOnThreadName￨b )￨b ;￨b <END_BUG>￨b sampleTable￨e .￨e put￨e (￨e key￨e ,￨e statResult￨e )￨e ;￨e sampleStore￨e .￨e add￨e (￨e new￨e SampleEvent￨e (￨e statResult￨e ,￨e e￨e .￨e getThreadGroup￨e (￨e )￨e )￨e )￨e ;￨e }￨j statResult￨e .￨e add￨e (￨e e￨e .￨e getResult￨e (￨e )￨e )￨e ;￨e (￨e sampleCount￨e )￨e ++￨e ;￨e boolean￨e sendNow￨e =￨e false￨e ;￨e if￨j (￨j (￨c numSamplesThreshold￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j if￨j (￨j (￨c sampleCount￨c )￨c >=￨c (￨c numSamplesThreshold￨c )￨c )￨j {￨j sendNow￨e =￨e true￨e ;￨e }￨j }￨j long￨e now￨e =￨e 0￨e ;￨e if￨j (￨j (￨c timeThresholdMs￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j now￨e =￨e System￨e .￨e currentTimeMillis￨e (￨e )￨e ;￨e if￨j (￨j (￨c batchSendTime￨c )￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j this￨e .￨e batchSendTime￨e =￨e now￨e +￨e (￨e timeThresholdMs￨e )￨e ;￨e }￨j if￨j (￨j (￨c batchSendTime￨c )￨c <￨c now￨c )￨j {￨j sendNow￨e =￨e true￨e ;￨e }￨j }￨j if￨j (￨j sendNow￨c )￨j {￨j try￨f (￨f )￨f {￨f if￨j (￨j StatisticalSampleSender￨c .￨c log￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j StatisticalSampleSender￨e .￨e log￨e .￨e debug￨e (￨e "Firing<seq2seq4repair_space>sample"￨e )￨e ;￨e }￨j sendBatch￨e (￨e )￨e ;￨e if￨j (￨j (￨c timeThresholdMs￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨j {￨j this￨e .￨e batchSendTime￨e =￨e now￨e +￨e (￨e timeThresholdMs￨e )￨e ;￨e }￨j }￨f catch￨f (￨f RemoteException￨p err￨p )￨f {￨f StatisticalSampleSender￨e .￨e log￨e .￨e warn￨e (￨e "sampleOccurred"￨e ,￨e err￨e )￨e ;￨e }￨f }￨j }￨f }￨f private￨f void￨f sendBatch￨f (￨f )￨f throws￨f RemoteException￨f (￨f )￨f {￨f }￨f private￨f Object￨f readResolve￨f (￨f )￨f throws￨f ObjectStreamException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractTestComparator￨d <￨d T￨d >￨d extends￨d AbstractTestObject￨d {￨d public￨f AbstractTestComparator￨f (￨f String￨p testName￨p )￨f {￨f }￨f public￨f abstract￨f List￨f <￨f T￨f >￨f getComparableObjectsOrdered￨f (￨f )￨f {￨f }￨f public￨f abstract￨f Comparator￨f <￨f T￨f >￨f makeObject￨f (￨f )￨f {￨f }￨f public￨f boolean￨f supportsEmptyCollections￨f (￨f )￨f {￨f }￨f public￨f boolean￨f supportsFullCollections￨f (￨f )￨f {￨f }￨f public￨f String￨f getCompatibilityVersion￨f (￨f )￨f {￨f }￨f protected￨f void￨f reverseObjects￨f (￨f List￨p <￨p ?￨p >￨p list￨p )￨f {￨f }￨f protected￨f void￨f randomizeObjects￨f (￨f List￨p <￨p ?￨p >￨p list￨p )￨f {￨f }￨f protected￨f void￨f sortObjects￨f (￨f List￨p <￨p T￨p >￨p list￨p ,￨p Comparator￨p <￨p ?￨p super￨p T￨p >￨p comparator￨p )￨f {￨f }￨f public￨f void￨f testEmptyListSort￨f (￨f )￨f {￨f }￨f public￨f void￨f testReverseListSort￨f (￨f )￨f {￨f }￨f public￨f void￨f testRandomListSort￨f (￨f )￨f {￨f }￨f public￨f void￨f testComparatorIsSerializable￨f (￨f )￨f {￨f }￨f public￨f String￨f getCanonicalComparatorName￨f (￨f Object￨p object￨p )￨f {￨f <START_BUG>￨b StringBuffer￨b retval￨b =￨b new￨b StringBuffer￨b (￨b )￨b ;￨b <END_BUG>￨b retval￨e .￨e append￨e (￨e "data/test/"￨e )￨e ;￨e String￨e colName￨e =￨e object￨e .￨e getClass￨e (￨e )￨e .￨e getName￨e (￨e )￨e ;￨e colName￨e =￨e colName￨e .￨e substring￨e (￨e (￨e (￨e colName￨e .￨e lastIndexOf￨e (￨e "."￨e )￨e )￨e +￨e 1￨e )￨e ,￨e colName￨e .￨e length￨e (￨e )￨e )￨e ;￨e retval￨e .￨e append￨e (￨e colName￨e )￨e ;￨e retval￨e .￨e append￨e (￨e ".version"￨e )￨e ;￨e retval￨e .￨e append￨e (￨e getCompatibilityVersion￨e (￨e )￨e )￨e ;￨e retval￨e .￨e append￨e (￨e ".obj"￨e )￨e ;￨e return￨e retval￨e .￨e toString￨e (￨e )￨e ;￨e }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f void￨f testComparatorCompatibility￨f (￨f )￨f throws￨f IOException￨f ,￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d AbstractAutoCompleteBehavior￨d extends￨d AbstractDefaultAjaxBehavior￨d {￨d private￨d static￨d final￨d CompressedResourceReference￨d AUTOCOMPLETE_JS￨d =￨d new￨d CompressedResourceReference￨d (￨d AutoCompleteBehavior￨d .￨d class￨d ,￨d "wicket-autocomplete.js"￨d )￨d ;￨d private￨d static￨d final￨d long￨d serialVersionUID￨d =￨d 1L￨d ;￨d @￨d Override￨d public￨d void￨d renderHead￨d (￨d IHeaderResponse￨d response￨d )￨d {￨d }￨d @￨f Override￨f protected￨f void￨f onComponentRendered￨f (￨f )￨f {￨f Response￨e response￨e =￨e getComponent￨e (￨e )￨e .￨e getResponse￨e (￨e )￨e ;￨e final￨e String￨e id￨e =￨e getComponent￨e (￨e )￨e .￨e getMarkupId￨e (￨e )￨e ;￨e response￨e .￨e write￨e (￨e SCRIPT_OPEN_TAG￨e )￨e ;￨e <START_BUG>￨b response￨b .￨b write￨b (￨b (￨b (￨b (￨b (￨b "new<seq2seq4repair_space>Wicket.Ajax.AutoComplete('"￨b +￨b id￨b )￨b +￨b "','"￨b )￨b +￨b (￨b getCallbackUrl￨b (￨b )￨b )￨b )￨b +￨b "');"￨b )￨b )￨b ;￨b <END_BUG>￨b response￨e .￨e write￨e (￨e SCRIPT_CLOSE_TAG￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f void￨f respond￨f (￨f AjaxRequestTarget￨p target￨p )￨f {￨f }￨f protected￨f abstract￨f void￨f onRequest￨f (￨f String￨p input￨p ,￨p RequestCycle￨p requestCycle￨p )￨f {￨f }￨f }￨d
public￨d class￨d RAttributeAttributeGroup￨d extends￨d org￨d .￨d tigris￨d .￨d scarab￨d .￨d om￨d .￨d BaseRAttributeAttributeGroup￨d implements￨d UnsecurePersistent￨d {￨d public￨f void￨f delete￨f (￨f ScarabUser￨f user￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f <START_BUG>￨b ModuleEntity￨b module￨b =￨b getAttributeGroup￨b (￨b )￨b .￨b getScarabModule￨b (￨b )￨b ;￨b <END_BUG>￨b ScarabSecurity￨e security￨e =￨e SecurityFactory￨e .￨e getInstance￨e (￨e )￨e ;￨e if￨j (￨j security￨c .￨c hasPermission￨c (￨c ITEM__APPROVE￨c ,￨c user￨c ,￨c module￨c )￨c )￨j {￨j Criteria￨e c￨e =￨e new￨e Criteria￨e (￨e )￨e .￨e add￨e (￨e GROUP_ID￨e ,￨e getGroupId￨e (￨e )￨e )￨e .￨e add￨e (￨e ATTRIBUTE_ID￨e ,￨e getAttributeId￨e (￨e )￨e )￨e ;￨e RAttributeAttributeGroupPeer￨e .￨e doDelete￨e (￨e c￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e org￨e .￨e tigris￨e .￨e scarab￨e .￨e util￨e .￨e ScarabException￨e (￨e ScarabConstants￨e .￨e NO_PERMISSION_MESSAGE￨e )￨e ;￨e }￨j }￨f }￨d
public￨d class￨d ParsedRaDeploymentProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d public￨f ParsedRaDeploymentProcessor￨f (￨f )￨f {￨f }￨f public￨f void￨f deploy￨f (￨f DeploymentPhaseContext￨f phaseContext￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f final￨e ConnectorXmlDescriptor￨e connectorXmlDescriptor￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e .￨e getAttachment￨e (￨e ATTACHMENT_KEY￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e registration￨e ;￨e final￨e ManagementResourceRegistration￨e baseRegistration￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e .￨e getAttachment￨e (￨e MUTABLE_REGISTRATION_ATTACHMENT￨e )￨e ;￨e final￨e Resource￨e deploymentResource￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e .￨e getAttachment￨e (￨e DEPLOYMENT_RESOURCE￨e )￨e ;￨e if￨j (￨j connectorXmlDescriptor￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j final￨e ServiceTarget￨e serviceTarget￨e =￨e phaseContext￨e .￨e getServiceTarget￨e (￨e )￨e ;￨e final￨e DeploymentUnit￨e deploymentUnit￨e =￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e ;￨e if￨j (￨j (￨c deploymentUnit￨c .￨c getParent￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j registration￨e =￨e baseRegistration￨e .￨e getSubModel￨e (￨e PathAddress￨e .￨e pathAddress￨e (￨e PathElement￨e .￨e pathElement￨e (￨e "subdeployment"￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j registration￨e =￨e baseRegistration￨e ;￨e }￨j final￨e IronJacamarXmlDescriptor￨e ironJacamarXmlDescriptor￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e IronJacamarXmlDescriptor￨e .￨e ATTACHMENT_KEY￨e )￨e ;￨e final￨e Module￨e module￨e =￨e deploymentUnit￨e .￨e getAttachment￨e (￨e MODULE￨e )￨e ;￨e if￨j (￨j module￨c ==￨c null￨c )￨j {￨j throw￨e ROOT_LOGGER￨e .￨e failedToGetModuleAttachment￨e (￨e phaseContext￨e .￨e getDeploymentUnit￨e (￨e )￨e )￨e ;￨e }￨j DEPLOYMENT_CONNECTOR_LOGGER￨e .￨e debugf￨e (￨e "ParsedRaDeploymentProcessor:<seq2seq4repair_space>Processing=%s"￨e ,￨e deploymentUnit￨e )￨e ;￨e final￨e ClassLoader￨e classLoader￨e =￨e module￨e .￨e getClassLoader￨e (￨e )￨e ;￨e Map￨e <￨e ResourceRoot￨e ,￨e Index￨e >￨e annotationIndexes￨e =￨e AnnotationIndexUtils￨e .￨e getAnnotationIndexes￨e (￨e deploymentUnit￨e )￨e ;￨e ServiceBuilder￨e builder￨e =￨e ParsedRaDeploymentProcessor￨e .￨e process￨e (￨e connectorXmlDescriptor￨e ,￨e ironJacamarXmlDescriptor￨e ,￨e classLoader￨e ,￨e serviceTarget￨e ,￨e annotationIndexes￨e ,￨e deploymentUnit￨e .￨e getServiceName￨e (￨e )￨e )￨e ;￨e if￨j (￨j builder￨c !=￨c null￨c )￨j {￨j String￨e bootstrapCtx￨e =￨e null￨e ;￨e if￨j (￨j (￨c (￨c ironJacamarXmlDescriptor￨c !=￨c null￨c )￨c &&￨c (￨c (￨c ironJacamarXmlDescriptor￨c .￨c getIronJacamar￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨c &&￨c (￨c (￨c ironJacamarXmlDescriptor￨c .￨c getIronJacamar￨c (￨c )￨c .￨c getBootstrapContext￨c (￨c )￨c )￨c !=￨c null￨c )￨c )￨j {￨j bootstrapCtx￨e =￨e ironJacamarXmlDescriptor￨e .￨e getIronJacamar￨e (￨e )￨e .￨e getBootstrapContext￨e (￨e )￨e ;￨e }￨j if￨j (￨j bootstrapCtx￨c ==￨c null￨c )￨j {￨j bootstrapCtx￨e =￨e "default"￨e ;￨e }￨j if￨j (￨j (￨c registration￨c .￨c isAllowsOverride￨c (￨c )￨c )￨c &&￨c (￨c (￨c registration￨c .￨c getOverrideModel￨c (￨c deploymentUnit￨c .￨c getName￨c (￨c )￨c )￨c )￨c ==￨c null￨c )￨c )￨j {￨j registration￨f .￨f registerOverrideModel￨f (￨f deploymentUnit￨f .￨f getName￨f (￨f )￨f ,￨f new￨f OverrideDescriptionProvider￨f (￨f )￨f {￨f @￨f Override￨f public￨f Map￨f <￨f String￨f ,￨f ModelNode￨f >￨f getAttributeOverrideDescriptions￨f (￨f Locale￨p locale￨p )￨f {￨f return￨e Collections￨e .￨e emptyMap￨e (￨e )￨e ;￨e }￨f @￨f Override￨f public￨f Map￨f <￨f String￨f ,￨f ModelNode￨f >￨f getChildTypeOverrideDescriptions￨f (￨f Locale￨p locale￨p )￨f {￨f return￨e Collections￨e .￨e emptyMap￨e (￨e )￨e ;￨e }￨f }￨f )￨e ;￨e }￨j <START_BUG>￨b builder￨b .￨b addListener￨b (￨b new￨b AbstractResourceAdapterDeploymentServiceListener￨b (￨b registration￨b ,￨b deploymentUnit￨b .￨b getName￨b (￨b )￨b ,￨b deploymentResource￨b ,￨b bootstrapCtx￨b ,￨b deploymentUnit￨b .￨b getName￨b (￨b )￨b )￨b {￨b <END_BUG>￨b @￨f Override￨f protected￨f void￨f registerIronjacamar￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p ,￨p final￨p ManagementResourceRegistration￨p subRegistration￨p ,￨p final￨p Resource￨p subsystemResource￨p )￨f {￨f try￨f (￨f )￨f {￨f subRegistration￨e .￨e registerSubModel￨e (￨e new￨e IronJacamarResourceDefinition￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IllegalArgumentException￨p iae￨p )￨f {￨f }￨f AS7MetadataRepository￨e mdr￨e =￨e (￨e (￨e org￨e .￨e jboss￨e .￨e as￨e .￨e connector￨e .￨e services￨e .￨e resourceadapters￨e .￨e deployment￨e .￨e ResourceAdapterDeploymentService￨e )￨e (￨e controller￨e .￨e getService￨e (￨e )￨e )￨e )￨e .￨e getMdr￨e (￨e )￨e ;￨e INSTANCE￨e .￨e execute￨e (￨e subsystemResource￨e ,￨e mdr￨e )￨e ;￨e }￨f @￨f Override￨f protected￨f CommonDeployment￨f getDeploymentMetadata￨f (￨f final￨p ServiceController￨p <￨p ?￨p extends￨p Object￨p >￨p controller￨p )￨f {￨f return￨e (￨e (￨e org￨e .￨e jboss￨e .￨e as￨e .￨e connector￨e .￨e services￨e .￨e resourceadapters￨e .￨e deployment￨e .￨e ResourceAdapterDeploymentService￨e )￨e (￨e controller￨e .￨e getService￨e (￨e )￨e )￨e )￨e .￨e getRaDeployment￨e (￨e )￨e ;￨e }￨f }￨e )￨e ;￨e builder￨e .￨e setInitialMode￨e (￨e ACTIVE￨e )￨e .￨e install￨e (￨e )￨e ;￨e }￨j }￨f public￨f static￨f ServiceBuilder￨f process￨f (￨f final￨f ConnectorXmlDescriptor￨f connectorXmlDescriptor￨f ,￨f final￨f IronJacamarXmlDescriptor￨f ironJacamarXmlDescriptor￨f ,￨f final￨f ClassLoader￨f classLoader￨f ,￨f final￨f ServiceTarget￨f serviceTarget￨f ,￨f final￨f Map￨f <￨f ResourceRoot￨f ,￨f Index￨f >￨f annotationIndexes￨f ,￨f final￨f ServiceName￨f duServiceName￨f )￨f throws￨f DeploymentUnitProcessingException￨f (￨f )￨f {￨f }￨f public￨f void￨f undeploy￨f (￨f final￨p DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d SendAllMessagesCommand￨d extends￨d FolderCommand￨d {￨d protected￨e SendListManager￨e sendListManager￨e =￨e new￨e SendListManager￨e (￨e )￨e ;￨e protected￨e OutboxFolder￨e outboxFolder￨e ;￨e public￨f SendAllMessagesCommand￨f (￨f FrameController￨p frameController￨p ,￨p DefaultCommandReference￨p [￨p ]￨p references￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f Worker￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f FolderCommandReference￨e [￨e ]￨e r￨e =￨e (￨e (￨e FolderCommandReference￨e [￨e ]￨e )￨e (￨e getReferences￨e (￨e )￨e )￨e )￨e ;￨e outboxFolder￨e =￨e (￨e (￨e OutboxFolder￨e )￨e (￨e r￨e [￨e 0￨e ]￨e .￨e getFolder￨e (￨e )￨e )￨e )￨e ;￨e Object￨e [￨e ]￨e uids￨e =￨e outboxFolder￨e .￨e getUids￨e (￨e worker￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c uids￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l <START_BUG>￨b if￨b (￨b (￨b outboxFolder￨b .￨b exists￨b (￨b uids￨b [￨b i￨b ]￨b )￨b )￨b ==￨b true￨b )￨b {￨b <END_BUG>￨b SendableMessage￨e message￨e =￨e (￨e (￨e SendableMessage￨e )￨e (￨e outboxFolder￨e .￨e getMessage￨e (￨e uids￨e [￨e i￨e ]￨e ,￨e worker￨e )￨e )￨e )￨e ;￨e sendListManager￨e .￨e add￨e (￨e message￨e )￨e ;￨e }￨l int￨e actAccountUid￨e =￨e -￨e 1￨e ;￨e Vector￨e sentList￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e boolean￨e open￨e =￨e false￨e ;￨e SMTPServer￨e smtpServer￨e =￨e null￨e ;￨e Folder￨e sentFolder￨e =￨e null￨e ;￨e while￨l (￨l sendListManager￨c .￨c hasMoreMessages￨c (￨c )￨c )￨l {￨l SendableMessage￨e message￨e =￨e sendListManager￨e .￨e getNextMessage￨e (￨e )￨e ;￨e if￨j (￨j (￨c message￨c .￨c getAccountUid￨c (￨c )￨c )￨c !=￨c actAccountUid￨c )￨j {￨j if￨j (￨j (￨c sentList￨c .￨c size￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j sentList￨e .￨e clear￨e (￨e )￨e ;￨e }￨j actAccountUid￨e =￨e message￨e .￨e getAccountUid￨e (￨e )￨e ;￨e AccountItem￨e accountItem￨e =￨e MailConfig￨e .￨e getAccountList￨e (￨e )￨e .￨e uidGet￨e (￨e actAccountUid￨e )￨e ;￨e sentFolder￨e =￨e (￨e (￨e Folder￨e )￨e (￨e treeModel￨e .￨e getFolder￨e (￨e Integer￨e .￨e parseInt￨e (￨e accountItem￨e .￨e getSpecialFoldersItem￨e (￨e )￨e .￨e getSent￨e (￨e )￨e )￨e )￨e )￨e )￨e ;￨e smtpServer￨e =￨e new￨e SMTPServer￨e (￨e accountItem￨e )￨e ;￨e open￨e =￨e smtpServer￨e .￨e openConnection￨e (￨e )￨e ;￨e }￨j if￨j (￨j open￨c )￨j {￨j smtpServer￨e .￨e sendMessage￨e (￨e message￨e )￨e ;￨e sentList￨e .￨e add￨e (￨e message￨e .￨e getHeader￨e (￨e )￨e .￨e get￨e (￨e "columba.uid"￨e )￨e )￨e ;￨e }￨j }￨l if￨j (￨j (￨c sentList￨c .￨c size￨c (￨c )￨c )￨c >￨c 0￨c )￨j {￨j moveToSentFolder￨e (￨e sentList￨e ,￨e sentFolder￨e )￨e ;￨e }￨j }￨f protected￨f void￨f moveToSentFolder￨f (￨f Vector￨p v￨p ,￨p Folder￨p sentFolder￨p )￨f {￨f }￨f }￨d
public￨d class￨d ContentConflictsUnitTestCase￨d extends￨d AbstractTaskTestCase￨d {￨d @￨f Test￨f public￨f void￨f testApply￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f testRollback￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f assertConflicts￨f (￨f CommandLineException￨p e￨p ,￨p String￨p ...￨p conflicts￨p )￨f {￨f final￨e StringBuilder￨e buf￨e =￨e new￨e StringBuilder￨e (￨e )￨e ;￨e buf￨e .￨e append￨e (￨e "Conflicts<seq2seq4repair_space>detected:<seq2seq4repair_space>"￨e )￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e while￨l (￨l i￨c <￨c (￨c conflicts￨c .￨c length￨c )￨c )￨l {￨l <START_BUG>￨b buf￨b .￨b append￨b (￨b conflicts￨b [￨b (￨b i￨b ++￨b )￨b ]￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j i￨c <￨c (￨c conflicts￨c .￨c length￨c )￨c )￨j {￨j buf￨e .￨e append￨e (￨e ",<seq2seq4repair_space>"￨e )￨e ;￨e }￨j }￨l assertEquals￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e ,￨e buf￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨f }￨d
@￨d RunWith￨d (￨d Arquillian￨d .￨d class￨d )￨d public￨d class￨d RestEasyIntegrationTestCase￨d {￨d static￨e final￨e String￨e DEPLOYMENT_NAME￨e =￨e "resteasy-osgi-client.war"￨e ;￨e @￨e ArquillianResource￨e public￨e Deployer￨e deployer￨e ;￨e @￨e Inject￨e public￨e Bundle￨e bundle￨e ;￨e @￨f Deployment￨f public￨f static￨f JavaArchive￨f createDeployment￨f (￨f )￨f {￨f }￨f @￨f Deployment￨f (￨f name￨f =￨f RestEasyIntegrationTestCase￨f .￨f DEPLOYMENT_NAME￨f ,￨f managed￨f =￨f false￨f ,￨f testable￨f =￨f false￨f )￨f public￨f static￨f WebArchive￨f endpointWar￨f (￨f )￨f {￨f final￨d WebArchive￨d archive￨d =￨d ShrinkWrap￨d .￨d create￨d (￨d WebArchive￨d .￨d class￨d ,￨d RestEasyIntegrationTestCase￨d .￨d DEPLOYMENT_NAME￨d )￨d ;￨d archive￨d .￨d addClass￨d (￨d SimpleRestEndpoint￨d .￨d class￨d )￨d ;￨d <START_BUG>￨d archive￨d .￨d setWebXML￨d (￨d "osgi/jaxrs/web.xml"￨d )￨d ;￨d <END_BUG>￨d archive￨d .￨d add￨d (￨d new￨d Asset￨d (￨d )￨d {￨d public￨f InputStream￨f openStream￨f (￨f )￨f {￨f ManifestBuilder￨e builder￨e =￨e ManifestBuilder￨e .￨e newInstance￨e (￨e )￨e ;￨e builder￨e .￨e addManifestHeader￨e (￨e "Dependencies"￨e ,￨e "org.osgi.core,deployment.jaxrs-osgi-target:0.0.0"￨e )￨e ;￨e return￨e builder￨e .￨e openStream￨e (￨e )￨e ;￨e }￨f }￨d ,￨e JarFile￨e .￨e MANIFEST_NAME￨e )￨e ;￨e return￨e archive￨e ;￨e }￨f @￨f Test￨f public￨f void￨f testServiceAccess￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f private￨f String￨f getHttpResponse￨f (￨f String￨f message￨f )￨f throws￨f IOException￨f ,￨f ExecutionException￨f ,￨f TimeoutException￨f (￨f )￨f {￨f }￨f public￨f static￨f String￨f formatPossibleIpv6Address￨f (￨f String￨p address￨p )￨f {￨f }￨f }￨d
public￨d class￨d TreeView￨d extends￨d JTree￨d {￨d private￨e TreePath￨e selectedPathBeforeDrag￨e ;￨e private￨e TreePath￨e dropTargetPath￨e ;￨e private￨e boolean￨e isInDndMode￨e =￨e false￨e ;￨e private￨e Timer￨e dndAutoExpanderTimer￨e ;￨e public￨f TreeView￨f (￨f TreeModel￨p model￨p )￨f {￨f }￨f public￨f final￨f void￨f expand￨f (￨f AbstractFolder￨p parent￨p )￨f {￨f <START_BUG>￨b FolderItem￨b item￨b =￨b parent￨b .￨b getFolderItem￨b (￨b )￨b ;￨b <END_BUG>￨b XmlElement￨e property￨e =￨e item￨e .￨e getElement￨e (￨e "property"￨e )￨e ;￨e if￨j (￨j property￨c !=￨c null￨c )￨j {￨j String￨e expanded￨e =￨e property￨e .￨e getAttribute￨e (￨e "expanded"￨e )￨e ;￨e if￨j (￨j expanded￨c ==￨c null￨c )￨j {￨j expanded￨e =￨e "true"￨e ;￨e }￨j int￨e row￨e =￨e getRowForPath￨e (￨e new￨e TreePath￨e (￨e parent￨e .￨e getPath￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j expanded￨c .￨c equals￨c (￨c "true"￨c )￨c )￨j {￨j expandRow￨e (￨e row￨e )￨e ;￨e }￨j }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c parent￨c .￨c getChildCount￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l AbstractFolder￨e child￨e =￨e (￨e (￨e AbstractFolder￨e )￨e (￨e parent￨e .￨e getChildAt￨e (￨e i￨e )￨e )￨e )￨e ;￨e expand￨e (￨e child￨e )￨e ;￨e }￨l }￨f public￨f AbstractFolder￨f getDropTargetFolder￨f (￨f )￨f {￨f }￨f void￨f resetDropTargetFolder￨f (￨f )￨f {￨f }￨f public￨f AbstractFolder￨f getSelectedNodeBeforeDragAction￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isInDndAction￨f (￨f )￨f {￨f }￨f private￨f void￨f setUpDndAction￨f (￨f )￨f {￨f }￨f private￨f void￨f resetDndAction￨f (￨f )￨f {￨f }￨f private￨d class￨d DropHandler￨d extends￨d DropTarget￨d {￨d private￨e boolean￨e canImport￨e ;￨e private￨e Point￨e location￨e ;￨e public￨f void￨f dragOver￨f (￨f DropTargetDragEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f dragEnter￨f (￨f DropTargetDragEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f dragExit￨f (￨f DropTargetEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f drop￨f (￨f DropTargetDropEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f dropActionChanged￨f (￨f DropTargetDragEvent￨p e￨p )￨f {￨f }￨f }￨d private￨d class￨d TreeLeafActionListener￨d implements￨d ActionListener￨d {￨d private￨e JTree￨e treeParent￨e ;￨e public￨f TreeLeafActionListener￨f (￨f JTree￨p parent￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p e￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ExampleRunner￨d {￨d public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f final￨e ModelControllerClient￨e client￨e =￨e Factory￨e .￨e create￨e (￨e "localhost"￨e ,￨e 9999￨e )￨e ;￨e try￨f (￨f )￨f {￨f final￨e ModelNode￨e domainOp￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e domainOp￨e .￨e get￨e (￨e OP￨e )￨e .￨e set￨e (￨e READ_RESOURCE_OPERATION￨e )￨e ;￨e domainOp￨e .￨e get￨e (￨e OP_ADDR￨e )￨e .￨e setEmptyList￨e (￨e )￨e ;￨e domainOp￨e .￨e get￨e (￨e RECURSIVE￨e )￨e .￨e set￨e (￨e true￨e )￨e ;￨e domainOp￨e .￨e get￨e (￨e "proxies"￨e )￨e .￨e set￨e (￨e false￨e )￨e ;￨e ModelNode￨e result￨e =￨e client￨e .￨e execute￨e (￨e domainOp￨e )￨e ;￨e if￨j (￨j !￨c (￨c SUCCESS￨c .￨c equals￨c (￨c result￨c .￨c get￨c (￨c OUTCOME￨c )￨c .￨c asString￨c (￨c )￨c )￨c )￨c )￨j {￨j throw￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e OperationFailedException￨e (￨e result￨e .￨e get￨e (￨e FAILURE_DESCRIPTION￨e )￨e )￨e ;￨e }￨j System￨e .￨e out￨e .￨e println￨e (￨e "--<seq2seq4repair_space>domain<seq2seq4repair_space>configuration"￨e )￨e ;￨e final￨e ModelNode￨e domainResult￨e =￨e result￨e .￨e get￨e (￨e RESULT￨e )￨e .￨e clone￨e (￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e domainResult￨e )￨e ;￨e System￨e .￨e out￨e .￨e println￨e (￨e "--"￨e )￨e ;￨e final￨e ModelNode￨e hostOp￨e =￨e new￨e ModelNode￨e (￨e )￨e ;￨e hostOp￨e .￨e get￨e (￨e OP￨e )￨e .￨e set￨e (￨e READ_RESOURCE_OPERATION￨e )￨e ;￨e hostOp￨e .￨e get￨e (￨e OP_ADDR￨e )￨e .￨e setEmptyList￨e (￨e )￨e .￨e add￨e (￨e HOST￨e ,￨e "local"￨e )￨e ;￨e hostOp￨e .￨e get￨e (￨e RECURSIVE￨e )￨e .￨e set￨e (￨e true￨e )￨e ;￨e hostOp￨e .￨e get￨e (￨e "proxies"￨e )￨e .￨e set￨e (￨e false￨e )￨e ;￨e result￨e =￨e client￨e .￨e execute￨e (￨e hostOp￨e )￨e ;￨e if￨j (￨j !￨c (￨c SUCCESS￨c .￨c equals￨c (￨c result￨c .￨c get￨c (￨c OUTCOME￨c )￨c .￨c asString￨c (￨c )￨c )￨c )￨c )￨j {￨j throw￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e OperationFailedException￨e (￨e result￨e .￨e get￨e (￨e FAILURE_DESCRIPTION￨e )￨e )￨e ;￨e }￨j System￨e .￨e out￨e .￨e println￨e (￨e "--<seq2seq4repair_space>host<seq2seq4repair_space>configuration"￨e )￨e ;￨e final￨e ModelNode￨e hostResult￨e =￨e result￨e .￨e get￨e (￨e RESULT￨e )￨e .￨e clone￨e (￨e )￨e ;￨e <START_BUG>￨b System￨b .￨b out￨b .￨b println￨b (￨b )￨b ;￨b <END_BUG>￨b System￨e .￨e out￨e .￨e println￨e (￨e "--"￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f StreamUtils￨e .￨e safeClose￨e (￨e client￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d TarArchiveInputStream￨d extends￨d ArchiveInputStream￨d {￨d private￨e static￨e final￨e int￨e SMALL_BUFFER_SIZE￨e =￨e 256￨e ;￨e private￨e final￨e byte￨e [￨e ]￨e SMALL_BUF￨e =￨e new￨e byte￨e [￨e TarArchiveInputStream￨e .￨e SMALL_BUFFER_SIZE￨e ]￨e ;￨e private￨e final￨e int￨e recordSize￨e ;￨e private￨e final￨e int￨e blockSize￨e ;￨e private￨e boolean￨e hasHitEOF￨e ;￨e private￨e long￨e entrySize￨e ;￨e private￨e long￨e entryOffset￨e ;￨e private￨e final￨e InputStream￨e is￨e ;￨e private￨e TarArchiveEntry￨e currEntry￨e ;￨e private￨e final￨e ZipEncoding￨e encoding￨e ;￨e public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p )￨f {￨f }￨f public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p ,￨p int￨p blockSize￨p )￨f {￨f }￨f public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p ,￨p int￨p blockSize￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p ,￨p int￨p blockSize￨p ,￨p int￨p recordSize￨p )￨f {￨f }￨f public￨f TarArchiveInputStream￨f (￨f InputStream￨p is￨p ,￨p int￨p blockSize￨p ,￨p int￨p recordSize￨p ,￨p String￨p encoding￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f close￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f int￨f getRecordSize￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f available￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f long￨f skip￨f (￨f long￨f numToSkip￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f synchronized￨f void￨f reset￨f (￨f )￨f {￨f }￨f public￨f TarArchiveEntry￨f getNextTarEntry￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f skipRecordPadding￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f byte￨f [￨f ]￨f getLongNameData￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f byte￨f [￨f ]￨f getRecord￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isEOFRecord￨f (￨f byte￨p [￨p ]￨p record￨p )￨f {￨f }￨f protected￨f byte￨f [￨f ]￨f readRecord￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f paxHeaders￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f Map￨f <￨f String￨f ,￨f String￨f >￨f parsePaxHeaders￨f (￨f InputStream￨f i￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f Map￨e <￨e String￨e ,￨e String￨e >￨e headers￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e )￨e ;￨e while￨l (￨l true￨c )￨l {￨l int￨e ch￨e ;￨e int￨e len￨e =￨e 0￨e ;￨e int￨e read￨e =￨e 0￨e ;￨e while￨l (￨l (￨c ch￨c =￨c i￨c .￨c read￨c (￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨l {￨l read￨e ++￨e ;￨e if￨j (￨j ch￨c ==￨c '<seq2seq4repair_space>'￨c )￨j {￨j ByteArrayOutputStream￨e coll￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e while￨l (￨l (￨c ch￨c =￨c i￨c .￨c read￨c (￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨l {￨l read￨e ++￨e ;￨e if￨j (￨j ch￨c ==￨c '='￨c )￨j {￨j String￨e keyword￨e =￨e coll￨e .￨e toString￨e (￨e UTF_8￨e )￨e ;￨e byte￨e [￨e ]￨e rest￨e =￨e new￨e byte￨e [￨e len￨e -￨e read￨e ]￨e ;￨e <START_BUG>￨b int￨b got￨b =￨b i￨b .￨b read￨b (￨b rest￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j got￨c !=￨c (￨c len￨c -￨c read￨c )￨c )￨j {￨j throw￨e new￨e IOException￨e (￨e (￨e (￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>read<seq2seq4repair_space>"￨e +￨e "Paxheader.<seq2seq4repair_space>Expected<seq2seq4repair_space>"￨e )￨e +￨e (￨e len￨e -￨e read￨e )￨e )￨e +￨e "<seq2seq4repair_space>bytes,<seq2seq4repair_space>read<seq2seq4repair_space>"￨e )￨e +￨e got￨e )￨e )￨e ;￨e }￨j String￨e value￨e =￨e new￨e String￨e (￨e rest￨e ,￨e 0￨e ,￨e (￨e (￨e len￨e -￨e read￨e )￨e -￨e 1￨e )￨e ,￨e CharsetNames￨e .￨e UTF_8￨e )￨e ;￨e headers￨e .￨e put￨e (￨e keyword￨e ,￨e value￨e )￨e ;￨e break￨e ;￨e }￨j coll￨e .￨e write￨e (￨e (￨e (￨e byte￨e )￨e (￨e ch￨e )￨e )￨e )￨e ;￨e }￨l break￨e ;￨e }￨j len￨e *=￨e 10￨e ;￨e len￨e +=￨e ch￨e -￨e '0'￨e ;￨e }￨l if￨j (￨j ch￨c ==￨c (￨c -￨c 1￨c )￨c )￨j {￨j break￨e ;￨e }￨j }￨l return￨e headers￨e ;￨e }￨f private￨f void￨f applyPaxHeadersToCurrentEntry￨f (￨f Map￨p <￨p String￨p ,￨p String￨p >￨p headers￨p )￨f {￨f }￨f private￨f void￨f readGNUSparse￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f ArchiveEntry￨f getNextEntry￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f tryToConsumeSecondEOFRecord￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f int￨f read￨f (￨f byte￨f [￨f ]￨f buf￨f ,￨f int￨f offset￨f ,￨f int￨f numToRead￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f canReadEntryData￨f (￨f ArchiveEntry￨p ae￨p )￨f {￨f }￨f public￨f TarArchiveEntry￨f getCurrentEntry￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f setCurrentEntry￨f (￨f TarArchiveEntry￨p e￨p )￨f {￨f }￨f protected￨f final￨f boolean￨f isAtEOF￨f (￨f )￨f {￨f }￨f protected￨f final￨f void￨f setAtEOF￨f (￨f boolean￨p b￨p )￨f {￨f }￨f private￨f void￨f consumeRemainderOfLastBlock￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f matches￨f (￨f byte￨p [￨p ]￨p signature￨p ,￨p int￨p length￨p )￨f {￨f }￨f }￨d
public￨d class￨d ChannelInstanceResourceDefinition￨d extends￨d SimpleResourceDefinition￨d {￨d static￨f PathElement￨f pathElement￨f (￨f String￨p name￨p )￨f {￨f }￨f private￨e final￨e boolean￨e runtimeRegistration￨e ;￨e ChannelInstanceResourceDefinition￨f (￨f String￨p channelName￨p ,￨p boolean￨p runtimeRegistration￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f registerAttributes￨f (￨f ManagementResourceRegistration￨p registration￨p )￨f {￨f }￨f public￨f static￨f void￨f addChannelProtocolMetricsRegistrationStep￨f (￨f OperationContext￨p context￨p ,￨p String￨p channelName￨p ,￨p String￨p stackName￨p )￨f {￨f }￨f public￨f static￨f void￨f registerChannelProtocolMetrics￨f (￨f OperationContext￨f context￨f ,￨f String￨f channelName￨f ,￨f String￨f stackName￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j stackName￨c ==￨c null￨c )￨j {￨j stackName￨e =￨e ChannelInstanceResourceDefinition￨e .￨e getDefaultStack￨e (￨e context￨e )￨e ;￨e }￨j PathAddress￨e address￨e =￨e PathAddress￨e .￨e pathAddress￨e (￨e PATH￨e )￨e ;￨e PathAddress￨e stackAddress￨e =￨e address￨e .￨e append￨e (￨e StackResourceDefinition￨e .￨e pathElement￨e (￨e stackName￨e )￨e )￨e ;￨e ModelNode￨e stack￨e =￨e Tools￨e .￨e readModel￨e (￨e context￨e .￨e readResourceFromRoot￨e (￨e stackAddress￨e ,￨e true￨e )￨e )￨e ;￨e ModelNode￨e transport￨e =￨e stack￨e .￨e get￨e (￨e TRANSPORT￨e ,￨e TRANSPORT_NAME￨e )￨e .￨e clone￨e (￨e )￨e ;￨e <START_BUG>￨b String￨b transportName￨b =￨b transport￨b .￨b get￨b (￨b TYPE￨b )￨b .￨b asString￨b (￨b )￨b ;￨b <END_BUG>￨b ResourceDefinition￨e transportDefinition￨e =￨e ChannelInstanceResourceDefinition￨e .￨e getProtocolMetricResourceDefinition￨e (￨e context￨e ,￨e channelName￨e ,￨e transportName￨e )￨e ;￨e List￨e <￨e ModelNode￨e >￨e protocolOrdering￨e =￨e stack￨e .￨e get￨e (￨e PROTOCOLS￨e )￨e .￨e clone￨e (￨e )￨e .￨e asList￨e (￨e )￨e ;￨e final￨e List￨e <￨e ResourceDefinition￨e >￨e protocolDefinitions￨e =￨e new￨e ArrayList￨e <￨e ResourceDefinition￨e >￨e (￨e )￨e ;￨e for￨l (￨l ModelNode￨c protocolNameModelNode￨c :￨c protocolOrdering￨c )￨l {￨l String￨e protocolName￨e =￨e protocolNameModelNode￨e .￨e asString￨e (￨e )￨e ;￨e ResourceDefinition￨e protocolDefinition￨e =￨e ChannelInstanceResourceDefinition￨e .￨e getProtocolMetricResourceDefinition￨e (￨e context￨e ,￨e channelName￨e ,￨e protocolName￨e )￨e ;￨e protocolDefinitions￨e .￨e add￨e (￨e protocolDefinition￨e )￨e ;￨e }￨l ResourceDefinition￨e relayDefinition￨e =￨e null￨e ;￨e if￨j (￨j stack￨c .￨c hasDefined￨c (￨c RELAY￨c )￨c )￨j {￨j relayDefinition￨e =￨e ChannelInstanceResourceDefinition￨e .￨e getProtocolMetricResourceDefinition￨e (￨e context￨e ,￨e channelName￨e ,￨e "relay.RELAY2"￨e )￨e ;￨e }￨j ManagementResourceRegistration￨e subsystemRootRegistration￨e =￨e context￨e .￨e getResourceRegistrationForUpdate￨e (￨e )￨e ;￨e ManagementResourceRegistration￨e channelRegistration￨e =￨e subsystemRootRegistration￨e .￨e registerSubModel￨e (￨e new￨e ChannelInstanceResourceDefinition￨e (￨e channelName￨e ,￨e true￨e )￨e )￨e ;￨e channelRegistration￨e .￨e registerSubModel￨e (￨e transportDefinition￨e )￨e ;￨e for￨l (￨l ResourceDefinition￨c protocolDefinition￨c :￨c protocolDefinitions￨c )￨l {￨l channelRegistration￨e .￨e registerSubModel￨e (￨e protocolDefinition￨e )￨e ;￨e }￨l if￨j (￨j stack￨c .￨c hasDefined￨c (￨c RELAY￨c )￨c )￨j {￨j channelRegistration￨e .￨e registerSubModel￨e (￨e relayDefinition￨e )￨e ;￨e }￨j }￨f public￨f static￨f void￨f addChannelProtocolMetricsDeregistrationStep￨f (￨f OperationContext￨p context￨p ,￨p String￨p channelName￨p )￨f {￨f }￨f private￨f static￨f String￨f getDefaultStack￨f (￨f OperationContext￨f context￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f ResourceDefinition￨f getProtocolMetricResourceDefinition￨f (￨f OperationContext￨f context￨f ,￨f String￨f channelName￨f ,￨f String￨f protocolName￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f }￨f private￨f static￨f void￨f addAttributeDefinition￨f (￨f List￨p <￨p AttributeDefinition￨p >￨p attributes￨p ,￨p Map￨p <￨p String￨p ,￨p String￨p >￨p map￨p ,￨p String￨p protocolName￨p ,￨p String￨p name￨p ,￨p ModelType￨p type￨p ,￨p String￨p description￨p )￨f {￨f }￨f public￨f static￨f boolean￨f isEquivalentModelTypeAvailable￨f (￨f Class￨p <￨p ?￨p >￨p type￨p )￨f {￨f }￨f private￨f static￨f ModelType￨f getEquivalentModelType￨f (￨f Class￨p <￨p ?￨p >￨p typeClass￨p )￨f {￨f }￨f private￨f static￨f Field￨f [￨f ]￨f getProtocolFields￨f (￨f Class￨p <￨p ?￨p >￨p clazz￨p )￨f {￨f }￨f public￨d static￨d class￨d ProtocolResources￨d extends￨d ResourceBundle￨d {￨d private￨e static￨e Map￨e <￨e String￨e ,￨e String￨e >￨e resources￨e =￨e new￨e HashMap￨e <￨e String￨e ,￨e String￨e >￨e (￨e )￨e ;￨e public￨f static￨f void￨f addProtocolMapEntries￨f (￨f Map￨p <￨p String￨p ,￨p String￨p >￨p map￨p )￨f {￨f }￨f @￨f Override￨f public￨f Object￨f handleGetObject￨f (￨f String￨p key￨p )￨f {￨f }￨f @￨f Override￨f public￨f Enumeration￨f <￨f String￨f >￨f getKeys￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f Set￨f <￨f String￨f >￨f handleKeySet￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d {￨d int￨e size￨e ;￨e int￨e [￨e ]￨e elements￨e ;￨e IntList￨f (￨f int￨p [￨p ]￨p elements￨p )￨f {￨f }￨f void￨f add￨f (￨f int￨p newElement￨p )￨f {￨f }￨f int￨f [￨f ]￨f asArray￨f (￨f )￨f {￨f }￨f }￨d DiskIndex￨f (￨f String￨p fileName￨p )￨f {￨f }￨f SimpleSet￨f addDocumentNames￨f (￨f String￨f substring￨f ,￨f MemoryIndex￨f memoryIndex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f HashtableOfObject￨f addQueryResult￨f (￨f HashtableOfObject￨f results￨f ,￨f char￨f [￨f ]￨f word￨f ,￨f HashtableOfObject￨f wordsToDocNumbers￨f ,￨f MemoryIndex￨f memoryIndex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f HashtableOfObject￨f addQueryResults￨f (￨f char￨f [￨f ]￨f [￨f ]￨f categories￨f ,￨f char￨f [￨f ]￨f key￨f ,￨f int￨f matchRule￨f ,￨f MemoryIndex￨f memoryIndex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f cacheDocumentNames￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f String￨f [￨f ]￨f computeDocumentNames￨f (￨f String￨p [￨p ]￨p onDiskNames￨p ,￨p int￨p [￨p ]￨p positions￨p ,￨p SimpleLookupTable￨p indexedDocuments￨p ,￨p MemoryIndex￨p memoryIndex￨p )￨f {￨f }￨f private￨f void￨f copyQueryResults￨f (￨f HashtableOfObject￨p categoryToWords￨p ,￨p int￨p newPosition￨p )￨f {￨f }￨f File￨f getIndexFile￨f (￨f )￨f {￨f }￨f void￨f initialize￨f (￨f boolean￨f reuseExistingFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeFrom￨f (￨f DiskIndex￨f diskIndex￨f ,￨f File￨f newIndexFile￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f mergeCategories￨f (￨f DiskIndex￨f onDisk￨f ,￨f int￨f [￨f ]￨f positions￨f ,￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f mergeCategory￨f (￨f char￨f [￨f ]￨f categoryName￨f ,￨f DiskIndex￨f onDisk￨f ,￨f int￨f [￨f ]￨f positions￨f ,￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f DiskIndex￨f mergeWith￨f (￨f MemoryIndex￨f memoryIndex￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f synchronized￨f String￨f [￨f ]￨f readAllDocumentNames￨f (￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f synchronized￨f HashtableOfObject￨f readCategoryTable￨f (￨f char￨f [￨f ]￨f categoryName￨f ,￨f boolean￨f readDocNumbers￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f int￨e offset￨e =￨e this￨e .￨e categoryOffsets￨e .￨e get￨e (￨e categoryName￨e )￨e ;￨e if￨j (￨j offset￨c ==￨c (￨c HashtableOfIntValues￨c .￨c NO_VALUE￨c )￨c )￨j {￨j return￨e null￨e ;￨e }￨j if￨j (￨j (￨c this￨c .￨c categoryTables￨c )￨c ==￨c null￨c )￨j {￨j this￨e .￨e categoryTables￨e =￨e new￨e HashtableOfObject￨e (￨e 3￨e )￨e ;￨e }￨j else￨j {￨j HashtableOfObject￨e cachedTable￨e =￨e (￨e (￨e HashtableOfObject￨e )￨e (￨e this￨e .￨e categoryTables￨e .￨e get￨e (￨e categoryName￨e )￨e )￨e )￨e ;￨e if￨j (￨j cachedTable￨c !=￨c null￨c )￨j {￨j if￨j (￨j readDocNumbers￨c )￨j {￨j Object￨e [￨e ]￨e arrayOffsets￨e =￨e cachedTable￨e .￨e valueTable￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c l￨c =￨c arrayOffsets￨c .￨c length￨c ;￨c i￨c <￨c l￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j (￨c arrayOffsets￨c [￨c i￨c ]￨c )￨c instanceof￨c Integer￨c )￨j {￨j arrayOffsets￨e [￨e i￨e ]￨e =￨e readDocumentNumbers￨e (￨e arrayOffsets￨e [￨e i￨e ]￨e )￨e ;￨e }￨j }￨l }￨j return￨e cachedTable￨e ;￨e }￨j }￨j DataInputStream￨e stream￨e =￨e new￨e DataInputStream￨e (￨e new￨e BufferedInputStream￨e (￨e new￨e FileInputStream￨e (￨e getIndexFile￨e (￨e )￨e )￨e ,￨e 2048￨e )￨e )￨e ;￨e HashtableOfObject￨e categoryTable￨e =￨e null￨e ;￨e char￨e [￨e ]￨e [￨e ]￨e matchingWords￨e =￨e null￨e ;￨e int￨e count￨e =￨e 0￨e ;￨e int￨e firstOffset￨e =￨e -￨e 1￨e ;￨e try￨f (￨f )￨f {￨f stream￨e .￨e skip￨e (￨e offset￨e )￨e ;￨e int￨e size￨e =￨e stream￨e .￨e readInt￨e (￨e )￨e ;￨e categoryTable￨e =￨e new￨e HashtableOfObject￨e (￨e size￨e )￨e ;￨e int￨e largeArraySize￨e =￨e 256￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c size￨c ;￨c i￨c ++￨c )￨l {￨l char￨e [￨e ]￨e word￨e =￨e org￨e .￨e eclipse￨e .￨e jdt￨e .￨e internal￨e .￨e core￨e .￨e util￨e .￨e Util￨e .￨e readUTF￨e (￨e stream￨e )￨e ;￨e int￨e arrayOffset￨e =￨e stream￨e .￨e readInt￨e (￨e )￨e ;￨e if￨j (￨j arrayOffset￨c <=￨c 0￨c )￨j {￨j categoryTable￨f .￨f put￨f (￨f word￨f ,￨f new￨f int￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e }￨j else￨j if￨j (￨j arrayOffset￨c <￨c largeArraySize￨c )￨j {￨j categoryTable￨e .￨e put￨e (￨e word￨e ,￨e readDocumentArray￨e (￨e stream￨e ,￨e arrayOffset￨e )￨e )￨e ;￨e }￨j else￨j {￨j arrayOffset￨e =￨e stream￨e .￨e readInt￨e (￨e )￨e ;￨e if￨j (￨j readDocNumbers￨c )￨j {￨j if￨j (￨j matchingWords￨c ==￨c null￨c )￨j {￨j matchingWords￨e =￨e new￨e char￨e [￨e size￨e ]￨e [￨e ]￨e ;￨e }￨j if￨j (￨j count￨c ==￨c 0￨c )￨j {￨j firstOffset￨e =￨e arrayOffset￨e ;￨e }￨j matchingWords￨e [￨e (￨e count￨e ++￨e )￨e ]￨e =￨e word￨e ;￨e }￨j categoryTable￨e .￨e put￨e (￨e word￨e ,￨e new￨e Integer￨e (￨e arrayOffset￨e )￨e )￨e ;￨e }￨j }￨l this￨e .￨e categoryTables￨e .￨e put￨e (￨e categoryName￨e ,￨e categoryTable￨e )￨e ;￨e this￨e .￨e cachedCategoryName￨e =￨e (￨e (￨e categoryTable￨e .￨e elementSize￨e )￨e <￨e 10000￨e )￨e ?￨e categoryName￨e :￨e null￨e ;￨e }￨f finally￨f (￨f )￨f {￨f stream￨e .￨e close￨e (￨e )￨e ;￨e }￨f <START_BUG>￨b if￨b (￨b count￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b stream￨e =￨e new￨e DataInputStream￨e (￨e new￨e BufferedInputStream￨e (￨e new￨e FileInputStream￨e (￨e getIndexFile￨e (￨e )￨e )￨e ,￨e 2048￨e )￨e )￨e ;￨e try￨f (￨f )￨f {￨f stream￨e .￨e skip￨e (￨e firstOffset￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c count￨c ;￨c i￨c ++￨c )￨l {￨l categoryTable￨e .￨e put￨e (￨e matchingWords￨e [￨e i￨e ]￨e ,￨e readDocumentArray￨e (￨e stream￨e ,￨e stream￨e .￨e readInt￨e (￨e )￨e )￨e )￨e ;￨e }￨l }￨f finally￨f (￨f )￨f {￨f stream￨e .￨e close￨e (￨e )￨e ;￨e }￨f }￨e return￨e categoryTable￨e ;￨e }￨f private￨f void￨f readChunk￨f (￨f String￨f [￨f ]￨f docNames￨f ,￨f DataInputStream￨f stream￨f ,￨f int￨f index￨f ,￨f int￨f size￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f int￨f [￨f ]￨f readDocumentArray￨f (￨f DataInputStream￨f stream￨f ,￨f int￨f arraySize￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f synchronized￨f String￨f readDocumentName￨f (￨f int￨f docNumber￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f synchronized￨f int￨f [￨f ]￨f readDocumentNumbers￨f (￨f Object￨f arrayOffset￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readHeaderInfo￨f (￨f RandomAccessFile￨f file￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f synchronized￨f void￨f startQuery￨f (￨f )￨f {￨f }￨f synchronized￨f void￨f stopQuery￨f (￨f )￨f {￨f }￨f private￨f void￨f writeAllDocumentNames￨f (￨f String￨f [￨f ]￨f sortedDocNames￨f ,￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeCategories￨f (￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeCategoryTable￨f (￨f char￨f [￨f ]￨f categoryName￨f ,￨f HashtableOfObject￨f wordsToDocs￨f ,￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeDocumentNumbers￨f (￨f int￨f [￨f ]￨f documentNumbers￨f ,￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeHeaderInfo￨f (￨f DataOutputStream￨f stream￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeOffsetToHeader￨f (￨f int￨f offsetToHeader￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
class￨d OperationTransformationOverrideBuilderImpl￨d extends￨d AttributeTransformationDescriptionBuilderImpl￨d implements￨d OperationTransformationOverrideBuilder￨d {￨d private￨e boolean￨e inherit￨e =￨e false￨e ;￨e private￨e DiscardPolicy￨e discardPolicy￨e =￨e DiscardPolicy￨e .￨e NEVER￨e ;￨e private￨e OperationTransformer￨e transformer￨e =￨e OperationTransformer￨e .￨e DEFAULT￨e ;￨e private￨e String￨e newName￨e ;￨e protected￨f OperationTransformationOverrideBuilderImpl￨f (￨f ResourceTransformationDescriptionBuilder￨p builder￨p )￨f {￨f }￨f @￨f Override￨f public￨f OperationTransformationOverrideBuilder￨f inherit￨f (￨f )￨f {￨f }￨f public￨f OperationTransformationOverrideBuilder￨f setOperationTransformer￨f (￨f OperationTransformer￨p transformer￨p )￨f {￨f }￨f @￨f Override￨f public￨f OperationTransformationOverrideBuilder￨f rename￨f (￨f String￨p newName￨p )￨f {￨f }￨f protected￨f OperationTransformer￨f createTransformer￨f (￨f final￨p AttributeTransformationDescriptionBuilderRegistry￨p resourceRegistry￨p )￨f {￨f final￨e AttributeTransformationDescriptionBuilderRegistry￨e registry￨e =￨e resultingRegistry￨e (￨e resourceRegistry￨e )￨e ;￨e final￨e AttributeTransformationRule￨e first￨e =￨e new￨e AttributeTransformationRule￨e (￨e registry￨e .￨e buildAttributes￨e (￨e )￨e )￨e ;￨e return￨f new￨f OperationTransformer￨f (￨f )￨f {￨f @￨f Override￨f public￨f TransformedOperation￨f transformOperation￨f (￨f final￨f TransformationContext￨f ctx￨f ,￨f final￨f PathAddress￨f address￨f ,￨f final￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f if￨j (￨j discardPolicy￨c .￨c discard￨c (￨c operation￨c ,￨c address￨c ,￨c ctx￨c )￨c )￨j {￨j return￨e DISCARD￨e .￨e transformOperation￨e (￨e ctx￨e ,￨e address￨e ,￨e operation￨e )￨e ;￨e }￨j final￨e Iterator￨e <￨e TransformationRule￨e >￨e iterator￨e =￨e Collections￨e .￨e <￨e TransformationRule￨e >￨e emptyList￨e (￨e )￨e .￨e iterator￨e (￨e )￨e ;￨e final￨e ModelNode￨e originalModel￨e =￨e operation￨e .￨e clone￨e (￨e )￨e ;￨e originalModel￨e .￨e protect￨e (￨e )￨e ;￨e <START_BUG>￨b final￨b TransformationRule￨b .￨b OperationContext￨b context￨b =￨b new￨b TransformationRule￨b .￨b OperationContext￨b (￨b ctx￨b )￨b {￨b <END_BUG>￨b @￨f Override￨f void￨f invokeNext￨f (￨f OperationTransformer￨f .￨f TransformedOperation￨f transformedOperation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f recordTransformedOperation￨e (￨e transformedOperation￨e )￨e ;￨e if￨j (￨j iterator￨c .￨c hasNext￨c (￨c )￨c )￨j {￨j final￨e TransformationRule￨e next￨e =￨e iterator￨e .￨e next￨e (￨e )￨e ;￨e next￨e .￨e transformOperation￨e (￨e transformedOperation￨e .￨e getTransformedOperation￨e (￨e )￨e ,￨e address￨e ,￨e this￨e )￨e ;￨e }￨j else￨j {￨j if￨j (￨j (￨c newName￨c )￨c !=￨c null￨c )￨j {￨j transformedOperation￨e .￨e getTransformedOperation￨e (￨e )￨e .￨e get￨e (￨e OP￨e )￨e .￨e set￨e (￨e newName￨e )￨e ;￨e }￨j final￨e TransformationContext￨e ctx￨e =￨e getContext￨e (￨e )￨e ;￨e transformer￨e .￨e transformOperation￨e (￨e ctx￨e ,￨e address￨e ,￨e transformedOperation￨e .￨e getTransformedOperation￨e (￨e )￨e )￨e ;￨e }￨j }￨f }￨e ;￨e operation￨e .￨e get￨e (￨e OP_ADDR￨e )￨e .￨e set￨e (￨e address￨e .￨e toModelNode￨e (￨e )￨e )￨e ;￨e first￨e .￨e transformOperation￨e (￨e operation￨e ,￨e address￨e ,￨e context￨e )￨e ;￨e return￨e context￨e .￨e createOp￨e (￨e )￨e ;￨e }￨f }￨f ;￨e }￨f protected￨f AttributeTransformationDescriptionBuilderRegistry￨f resultingRegistry￨f (￨f final￨p AttributeTransformationDescriptionBuilderRegistry￨p resourceRegistry￨p )￨f {￨f }￨f }￨d
public￨d final￨d class￨d ServerCommunicationHandlerFactory￨d {￨d private￨e static￨e final￨e ServerCommunicationHandlerFactory￨e INSTANCE￨e =￨e new￨e ServerCommunicationHandlerFactory￨e (￨e )￨e ;￨e public￨f static￨f ServerCommunicationHandlerFactory￨f getInstance￨f (￨f )￨f {￨f }￨f public￨f ServerCommunicationHandler￨f getServerCommunicationHandler￨f (￨f ServerEnvironment￨p environment￨p ,￨p MessageHandler￨p handler￨p )￨f {￨f <START_BUG>￨b return￨b new￨b ServerCommunicationHandler￨b (￨b environment￨b .￨b getProcessName￨b (￨b )￨b ,￨b environment￨b .￨b getProcessManagerAddress￨b (￨b )￨b ,￨b environment￨b .￨b getProcessManagerPort￨b (￨b )￨b ,￨b handler￨b )￨b ;￨b <END_BUG>￨b }￨f private￨f ServerCommunicationHandlerFactory￨f (￨f )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d IndexReaderFactory￨d implements￨d NamedListInitializedPlugin￨d {￨d protected￨e int￨e termInfosIndexDivisor￨e =￨e 1￨e ;￨e public￨f void￨f init￨f (￨f NamedList￨p args￨p )￨f {￨f <START_BUG>￨b Integer￨b v￨b =￨b (￨b (￨b Integer￨b )￨b (￨b args￨b .￨b get￨b (￨b "setTermIndexInterval"￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j v￨c !=￨c null￨c )￨j {￨j termInfosIndexDivisor￨e =￨e v￨e .￨e intValue￨e (￨e )￨e ;￨e }￨j }￨f public￨f int￨f getTermInfosIndexDivisor￨f (￨f )￨f {￨f }￨f public￨f abstract￨f IndexReader￨f newReader￨f (￨f Directory￨f indexDir￨f ,￨f boolean￨f readOnly￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CopyElementsOperation￨d extends￨d MultiOperation￨d implements￨d SuffixConstants￨d {￨d private￨e Map￨e sources￨e =￨e new￨e HashMap￨e (￨e )￨e ;￨e public￨f CopyElementsOperation￨f (￨f IJavaElement￨p [￨p ]￨p elementsToCopy￨p ,￨p IJavaElement￨p [￨p ]￨p destContainers￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f public￨f CopyElementsOperation￨f (￨f IJavaElement￨p [￨p ]￨p elementsToCopy￨p ,￨p IJavaElement￨p destContainer￨p ,￨p boolean￨p force￨p )￨f {￨f }￨f protected￨f String￨f getMainTaskName￨f (￨f )￨f {￨f <START_BUG>￨b return￨b org￨b .￨b eclipse￨b .￨b jdt￨b .￨b internal￨b .￨b compiler￨b .￨b util￨b .￨b Util￨b .￨b bind￨b (￨b "operation.copyElementProgress"￨b )￨b ;￨b <END_BUG>￨b }￨f protected￨f JavaModelOperation￨f getNestedOperation￨f (￨f IJavaElement￨p element￨p )￨f {￨f }￨f private￨f String￨f getSourceFor￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f isRenamingMainType￨f (￨f IJavaElement￨f element￨f ,￨f IJavaElement￨f dest￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f void￨f processElement￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f private￨f IJavaElement￨f resolveRenameAnchor￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f protected￨f IJavaModelStatus￨f verify￨f (￨f )￨f {￨f }￨f protected￨f void￨f verify￨f (￨f IJavaElement￨f element￨f )￨f throws￨f JavaModelException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ImageFigure￨d extends￨d AttributeFigure￨d implements￨d ImageObserver￨d {￨d private￨e String￨e fFileName￨e ;￨e private￨e transient￨e Image￨e fImage￨e ;￨e private￨e Rectangle￨e fDisplayBox￨e ;￨e private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 148012030121282439L￨e ;￨e private￨e int￨e imageFigureSerializedDataVersion￨e =￨e 1￨e ;￨e public￨f ImageFigure￨f (￨f )￨f {￨f }￨f public￨f ImageFigure￨f (￨f Image￨p image￨p ,￨p String￨p fileName￨p ,￨p Point￨p origin￨p )￨f {￨f }￨f public￨f void￨f basicDisplayBox￨f (￨f Point￨p origin￨p ,￨p Point￨p corner￨p )￨f {￨f }￨f public￨f HandleEnumeration￨f handles￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f displayBox￨f (￨f )￨f {￨f }￨f protected￨f void￨f basicMoveBy￨f (￨f int￨p x￨p ,￨p int￨p y￨p )￨f {￨f }￨f public￨f void￨f draw￨f (￨f Graphics￨p g￨p )￨f {￨f if￨j (￨j (￨c fImage￨c )￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b fImage￨b =￨b Iconkit￨b .￨b instance￨b (￨b )￨b .￨b getImage￨b (￨b fFileName￨b )￨b ;￨b <END_BUG>￨b }￨j if￨j (￨j (￨c fImage￨c )￨c !=￨c null￨c )￨j {￨j g￨e .￨e drawImage￨e (￨e fImage￨e ,￨e fDisplayBox￨e .￨e x￨e ,￨e fDisplayBox￨e .￨e y￨e ,￨e fDisplayBox￨e .￨e width￨e ,￨e fDisplayBox￨e .￨e height￨e ,￨e this￨e )￨e ;￨e }￨j else￨j {￨j drawGhost￨e (￨e g￨e )￨e ;￨e }￨j }￨f private￨f void￨f drawGhost￨f (￨f Graphics￨p g￨p )￨f {￨f }￨f public￨f boolean￨f imageUpdate￨f (￨f Image￨p img￨p ,￨p int￨p flags￨p ,￨p int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p w￨p ,￨p int￨p h￨p )￨f {￨f }￨f public￨f void￨f release￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f StorableOutput￨p dw￨p )￨f {￨f }￨f public￨f void￨f read￨f (￨f StorableInput￨f dr￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f readObject￨f (￨f ObjectInputStream￨f s￨f )￨f throws￨f IOException￨f ,￨f ClassNotFoundException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d JcaExtension￨d implements￨d Extension￨d {￨d public￨e static￨e String￨e SUBSYSTEM_NAME￨e =￨e "jca"￨e ;￨e private￨e static￨e final￨e int￨e MANAGEMENT_API_MAJOR_VERSION￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e MANAGEMENT_API_MINOR_VERSION￨e =￨e 1￨e ;￨e private￨e static￨e final￨e int￨e MANAGEMENT_API_MICRO_VERSION￨e =￨e 0￨e ;￨e private￨d static￨d final￨d String￨d RESOURCE_NAME￨d =￨d (￨d JcaExtension￨d .￨d class￨d .￨d getPackage￨d (￨d )￨d .￨d getName￨d (￨d )￨d )￨d +￨d ".LocalDescriptions"￨d ;￨d protected￨d static￨d final￨d PathElement￨d PATH_SUBSYSTEM￨d =￨d PathElement￨d .￨d pathElement￨d (￨d SUBSYSTEM￨d ,￨d JcaExtension￨d .￨d SUBSYSTEM_NAME￨d )￨d ;￨d protected￨d static￨d final￨d PathElement￨d PATH_ARCHIVE_VALIDATION￨d =￨d PathElement￨d .￨d pathElement￨d (￨d Constants￨d .￨d ARCHIVE_VALIDATION￨d ,￨d Constants￨d .￨d ARCHIVE_VALIDATION￨d )￨d ;￨d static￨d StandardResourceDescriptionResolver￨d getResourceDescriptionResolver￨d (￨d final￨d String￨d ...￨d keyPrefix￨d )￨d {￨d }￨d @￨f Override￨f public￨f void￨f initialize￨f (￨f final￨p ExtensionContext￨p context￨p )￨f {￨f ROOT_LOGGER￨e .￨e debugf￨e (￨e "Initializing<seq2seq4repair_space>Connector<seq2seq4repair_space>Extension"￨e )￨e ;￨e final￨e boolean￨e registerRuntimeOnly￨e =￨e context￨e .￨e isRuntimeOnlyRegistrationValid￨e (￨e )￨e ;￨e final￨e SubsystemRegistration￨e subsystem￨e =￨e context￨e .￨e registerSubsystem￨e (￨e JcaExtension￨e .￨e SUBSYSTEM_NAME￨e ,￨e JcaExtension￨e .￨e MANAGEMENT_API_MAJOR_VERSION￨e ,￨e JcaExtension￨e .￨e MANAGEMENT_API_MINOR_VERSION￨e ,￨e JcaExtension￨e .￨e MANAGEMENT_API_MICRO_VERSION￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e registration￨e =￨e subsystem￨e .￨e registerSubsystemModel￨e (￨e INSTANCE￨e )￨e ;￨e <START_BUG>￨b registration￨b .￨b registerOperationHandler￨b (￨b DESCRIBE￨b ,￨b GenericSubsystemDescribeHandler￨b .￨b INSTANCE￨b ,￨b GenericSubsystemDescribeHandler￨b .￨b INSTANCE￨b ,￨b false￨b ,￨b PRIVATE￨b )￨b ;￨b <END_BUG>￨b final￨e ManagementResourceRegistration￨e archiveValidation￨e =￨e registration￨e .￨e registerSubModel￨e (￨e JcaArchiveValidationDefinition￨e .￨e INSTANCE￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e beanValidation￨e =￨e registration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e Constants￨e .￨e BEAN_VALIDATION￨e ,￨e Constants￨e .￨e BEAN_VALIDATION￨e )￨e ,￨e BEAN_VALIDATION_DESC￨e )￨e ;￨e beanValidation￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e BeanValidationAdd￨e .￨e INSTANCE￨e ,￨e ADD_BEAN_VALIDATION_DESC￨e ,￨e false￨e )￨e ;￨e beanValidation￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ReloadRequiredRemoveStepHandler￨e .￨e INSTANCE￨e ,￨e REMOVE_BEAN_VALIDATION_DESC￨e ,￨e false￨e )￨e ;￨e for￨l (￨l final￨c BeanValidationAdd￨c .￨c BeanValidationParameters￨c parameter￨c :￨c BeanValidationParameters￨c .￨c values￨c (￨c )￨c )￨l {￨l beanValidation￨e .￨e registerReadWriteAttribute￨e (￨e parameter￨e .￨e getAttribute￨e (￨e )￨e ,￨e null￨e ,￨e JcaAttributeWriteHandler￨e .￨e INSTANCE￨e )￨e ;￨e }￨l final￨e ManagementResourceRegistration￨e cachedConnectionManager￨e =￨e registration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e Constants￨e .￨e CACHED_CONNECTION_MANAGER￨e ,￨e Constants￨e .￨e CACHED_CONNECTION_MANAGER￨e )￨e ,￨e CACHED_CONNECTION_MANAGER_DESC￨e )￨e ;￨e cachedConnectionManager￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e CachedConnectionManagerAdd￨e .￨e INSTANCE￨e ,￨e ADD_CACHED_CONNECTION_MANAGER_DESC￨e ,￨e false￨e )￨e ;￨e cachedConnectionManager￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ReloadRequiredRemoveStepHandler￨e .￨e INSTANCE￨e ,￨e REMOVE_CACHED_CONNECTION_MANAGER_DESC￨e ,￨e false￨e )￨e ;￨e for￨l (￨l final￨c CachedConnectionManagerAdd￨c .￨c CcmParameters￨c parameter￨c :￨c CcmParameters￨c .￨c values￨c (￨c )￨c )￨l {￨l if￨j (￨j parameter￨c !=￨c (￨c CcmParameters￨c .￨c INSTALL￨c )￨c )￨j {￨j cachedConnectionManager￨e .￨e registerReadWriteAttribute￨e (￨e parameter￨e .￨e getAttribute￨e (￨e )￨e ,￨e null￨e ,￨e JcaAttributeWriteHandler￨e .￨e INSTANCE￨e )￨e ;￨e }￨j else￨j {￨j cachedConnectionManager￨e .￨e registerReadWriteAttribute￨e (￨e parameter￨e .￨e getAttribute￨e (￨e )￨e ,￨e null￨e ,￨e new￨e ReloadRequiredWriteAttributeHandler￨e (￨e )￨e )￨e ;￨e }￨j }￨l final￨e ManagementResourceRegistration￨e workManager￨e =￨e registration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e Constants￨e .￨e WORKMANAGER￨e )￨e ,￨e WORKMANAGER_DESC￨e )￨e ;￨e workManager￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e WorkManagerAdd￨e .￨e INSTANCE￨e ,￨e ADD_WORKMANAGER_DESC￨e ,￨e false￨e )￨e ;￨e workManager￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ReloadRequiredRemoveStepHandler￨e .￨e INSTANCE￨e ,￨e REMOVE_WORKMANAGER_DESC￨e ,￨e false￨e )￨e ;￨e for￨l (￨l final￨c WorkManagerAdd￨c .￨c WmParameters￨c parameter￨c :￨c WmParameters￨c .￨c values￨c (￨c )￨c )￨l {￨l workManager￨e .￨e registerReadWriteAttribute￨e (￨e parameter￨e .￨e getAttribute￨e (￨e )￨e ,￨e null￨e ,￨e new￨e ReloadRequiredWriteAttributeHandler￨e (￨e )￨e )￨e ;￨e }￨l workManager￨e .￨e registerSubModel￨e (￨e BoundedQueueThreadPoolResourceDefinition￨e .￨e create￨e (￨e Constants￨e .￨e WORKMANAGER_SHORT_RUNNING￨e ,￨e STANDARD_THREAD_FACTORY_RESOLVER￨e ,￨e STANDARD_HANDOFF_EXECUTOR_RESOLVER￨e ,￨e EXECUTOR￨e .￨e append￨e (￨e Constants￨e .￨e WORKMANAGER_SHORT_RUNNING￨e )￨e ,￨e registerRuntimeOnly￨e )￨e )￨e ;￨e workManager￨e .￨e registerSubModel￨e (￨e BoundedQueueThreadPoolResourceDefinition￨e .￨e create￨e (￨e Constants￨e .￨e WORKMANAGER_LONG_RUNNING￨e ,￨e STANDARD_THREAD_FACTORY_RESOLVER￨e ,￨e STANDARD_HANDOFF_EXECUTOR_RESOLVER￨e ,￨e EXECUTOR￨e .￨e append￨e (￨e Constants￨e .￨e WORKMANAGER_LONG_RUNNING￨e )￨e ,￨e registerRuntimeOnly￨e )￨e )￨e ;￨e final￨e ManagementResourceRegistration￨e bootstrapContext￨e =￨e registration￨e .￨e registerSubModel￨e (￨e PathElement￨e .￨e pathElement￨e (￨e Constants￨e .￨e BOOTSTRAP_CONTEXT￨e )￨e ,￨e BOOTSTRAP_CONTEXT_DESC￨e )￨e ;￨e bootstrapContext￨e .￨e registerOperationHandler￨e (￨e ADD￨e ,￨e BootstrapContextAdd￨e .￨e INSTANCE￨e ,￨e ADD_BOOTSTRAP_CONTEXT_DESC￨e ,￨e false￨e )￨e ;￨e bootstrapContext￨e .￨e registerOperationHandler￨e (￨e REMOVE￨e ,￨e ReloadRequiredRemoveStepHandler￨e .￨e INSTANCE￨e ,￨e REMOVE_BOOTSTRAP_CONTEXT_DESC￨e ,￨e false￨e )￨e ;￨e for￨l (￨l final￨c BootstrapContextAdd￨c .￨c BootstrapCtxParameters￨c parameter￨c :￨c BootstrapCtxParameters￨c .￨c values￨c (￨c )￨c )￨l {￨l bootstrapContext￨e .￨e registerReadWriteAttribute￨e (￨e parameter￨e .￨e getAttribute￨e (￨e )￨e ,￨e null￨e ,￨e new￨e ReloadRequiredWriteAttributeHandler￨e (￨e )￨e )￨e ;￨e }￨l subsystem￨e .￨e registerXMLElementWriter￨e (￨e JcaExtension￨e .￨e ConnectorSubsystemParser￨e .￨e INSTANCE￨e )￨e ;￨e }￨f @￨f Override￨f public￨f void￨f initializeParsers￨f (￨f final￨p ExtensionParsingContext￨p context￨p )￨f {￨f }￨f static￨d final￨d class￨d ConnectorSubsystemParser￨d implements￨d XMLStreamConstants￨d ,￨d XMLElementReader￨d <￨d List￨d <￨d ModelNode￨d >￨d >￨d ,￨d XMLElementWriter￨d <￨d SubsystemMarshallingContext￨d >￨d {￨d static￨e final￨e JcaExtension￨e .￨e ConnectorSubsystemParser￨e INSTANCE￨e =￨e new￨e JcaExtension￨e .￨e ConnectorSubsystemParser￨e (￨e )￨e ;￨e @￨f Override￨f public￨f void￨f writeContent￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f SubsystemMarshallingContext￨f context￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeArchiveValidation￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeBeanValidation￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeCachedConnectionManager￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeWorkManagers￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeBootstrapContexts￨f (￨f XMLExtendedStreamWriter￨f writer￨f ,￨f ModelNode￨f parentNode￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f readElement￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseArchiveValidation￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f parseWorkManager￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentAddress￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f ,￨f final￨f ModelNode￨f node￨f ,￨f boolean￨f defaultWm￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseBeanValidation￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f ModelNode￨f parseCcm￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentOperation￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f private￨f void￨f parseBootstrapContexts￨f (￨f final￨f XMLExtendedStreamReader￨f reader￨f ,￨f final￨f ModelNode￨f parentAddress￨f ,￨f final￨f List￨f <￨f ModelNode￨f >￨f list￨f )￨f throws￨f XMLStreamException￨f (￨f )￨f {￨f }￨f public￨f String￨f rawAttributeText￨f (￨f XMLStreamReader￨p reader￨p ,￨p String￨p attributeName￨p )￨f {￨f }￨f }￨d }￨d
class￨d LRSProxyMap￨d extends￨d AbstractLRSProxyMap￨d {￨d private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d LRSProxyMap￨d .￨d class￨d )￨d ;￨d private￨d final￨d LRSMapFieldStrategy￨d _strat￨d ;￨d public￨d LRSProxyMap￨d (￨d LRSMapFieldStrategy￨d strat￨d )￨d {￨d }￨d protected￨f synchronized￨f int￨f count￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f hasKey￨f (￨f Object￨p key￨p )￨f {￨f }￨f protected￨f boolean￨f hasValue￨f (￨f Object￨p value￨p )￨f {￨f }￨f private￨f boolean￨f has￨f (￨f final￨p Object￨p obj￨p ,￨p final￨p boolean￨p key￨p )￨f {￨f }￨f protected￨f Collection￨f keys￨f (￨f final￨p Object￨p obj￨p )￨f {￨f }￨f protected￨f Object￨f value￨f (￨f final￨p Object￨p obj￨p )￨f {￨f final￨e OpenJPAStateManager￨e sm￨e =￨e assertOwner￨e (￨e )￨e ;￨e final￨e JDBCStore￨e store￨e =￨e getStore￨e (￨e )￨e ;￨e if￨j (￨j (￨c _strat￨c .￨c getFieldMapping￨c (￨c )￨c .￨c getElement￨c (￨c )￨c .￨c getValueMappedBy￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j Object￨e val￨e =￨e _strat￨e .￨e deriveValue￨e (￨e store￨e ,￨e obj￨e )￨e ;￨e if￨j (￨j hasValue￨c (￨c val￨c )￨c )￨j {￨j return￨e val￨e ;￨e }￨j return￨e null￨e ;￨e }￨j final￨e JDBCFetchConfiguration￨e fetch￨e =￨e store￨e .￨e getFetchConfiguration￨e (￨e )￨e ;￨e final￨e ClassMapping￨e [￨e ]￨e clss￨e =￨e _strat￨e .￨e getIndependentValueMappings￨e (￨e true￨e )￨e ;￨e final￨e Joins￨e [￨e ]￨e resJoins￨e =￨e new￨e Joins￨e [￨e Math￨e .￨e max￨e (￨e 1￨e ,￨e clss￨e .￨e length￨e )￨e ]￨e ;￨e Union￨e union￨e =￨e store￨e .￨e getSQLFactory￨e (￨e )￨e .￨e newUnion￨e (￨e Math￨e .￨e max￨e (￨e 1￨e ,￨e clss￨e .￨e length￨e )￨e )￨e ;￨e <START_BUG>￨b union￨b .￨b setSingleResult￨b (￨b true￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c fetch￨c .￨c getSubclassFetchMode￨c (￨c _strat￨c .￨c getFieldMapping￨c (￨c )￨c .￨c getElementMapping￨c (￨c )￨c .￨c getTypeMapping￨c (￨c )￨c )￨c )￨c !=￨c (￨c JDBCFetchConfiguration￨c .￨c EAGER_JOIN￨c )￨c )￨j {￨j union￨e .￨e abortUnion￨e (￨e )￨e ;￨e }￨j union￨f .￨f select￨f (￨f new￨f Union￨f .￨f Selector￨f (￨f )￨f {￨f public￨f void￨f select￨f (￨f Select￨p sel￨p ,￨p int￨p idx￨p )￨f {￨f ClassMapping￨e cls￨e =￨e (￨e (￨e clss￨e .￨e length￨e )￨e ==￨e 0￨e )￨e ?￨e null￨e :￨e clss￨e [￨e idx￨e ]￨e ;￨e sel￨e .￨e whereForeignKey￨e (￨e _strat￨e .￨e getJoinForeignKey￨e (￨e cls￨e )￨e ,￨e sm￨e .￨e getObjectId￨e (￨e )￨e ,￨e _strat￨e .￨e getFieldMapping￨e (￨e )￨e .￨e getDefiningMapping￨e (￨e )￨e ,￨e store￨e )￨e ;￨e if￨j (￨j (￨c _strat￨c .￨c getFieldMapping￨c (￨c )￨c .￨c getKey￨c (￨c )￨c .￨c getValueMappedBy￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j resJoins￨e [￨e idx￨e ]￨e =￨e _strat￨e .￨e joinValueRelation￨e (￨e sel￨e .￨e newJoins￨e (￨e )￨e ,￨e cls￨e )￨e ;￨e }￨j Object￨e key￨e =￨e _strat￨e .￨e toKeyDataStoreValue￨e (￨e obj￨e ,￨e store￨e )￨e ;￨e Column￨e [￨e ]￨e cols￨e =￨e _strat￨e .￨e getKeyColumns￨e (￨e cls￨e )￨e ;￨e Object￨e [￨e ]￨e vals￨e =￨e (￨e (￨e cols￨e .￨e length￨e )￨e ==￨e 1￨e )￨e ?￨e null￨e :￨e (￨e (￨e Object￨e [￨e ]￨e )￨e (￨e key￨e )￨e )￨e ;￨e SQLBuffer￨e sql￨e =￨e new￨e SQLBuffer￨e (￨e store￨e .￨e getDBDictionary￨e (￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c cols￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l if￨j (￨j i￨c >￨c 0￨c )￨j {￨j sql￨e .￨e append￨e (￨e "<seq2seq4repair_space>AND<seq2seq4repair_space>"￨e )￨e ;￨e }￨j sql￨e .￨e append￨e (￨e sel￨e .￨e getColumnAlias￨e (￨e cols￨e [￨e i￨e ]￨e ,￨e resJoins￨e [￨e idx￨e ]￨e )￨e )￨e ;￨e if￨j (￨j vals￨c ==￨c null￨c )￨j {￨j sql￨e .￨e append￨e (￨e (￨e key￨e ==￨e null￨e ?￨e "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨e :￨e "<seq2seq4repair_space>=<seq2seq4repair_space>"￨e )￨e )￨e .￨e appendValue￨e (￨e key￨e ,￨e cols￨e [￨e i￨e ]￨e )￨e ;￨e }￨j else￨j {￨j sql￨e .￨e append￨e (￨e (￨e (￨e vals￨e [￨e i￨e ]￨e )￨e ==￨e null￨e ?￨e "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨e :￨e "<seq2seq4repair_space>=<seq2seq4repair_space>"￨e )￨e )￨e .￨e appendValue￨e (￨e vals￨e [￨e i￨e ]￨e ,￨e cols￨e [￨e i￨e ]￨e )￨e ;￨e }￨j }￨l sel￨e .￨e where￨e (￨e sql￨e ,￨e resJoins￨e [￨e idx￨e ]￨e )￨e ;￨e if￨j (￨j (￨c resJoins￨c [￨c idx￨c ]￨c )￨c ==￨c null￨c )￨j {￨j resJoins￨e [￨e idx￨e ]￨e =￨e _strat￨e .￨e joinValueRelation￨e (￨e sel￨e .￨e newJoins￨e (￨e )￨e ,￨e cls￨e )￨e ;￨e }￨j _strat￨e .￨e selectValue￨e (￨e sel￨e ,￨e cls￨e ,￨e sm￨e ,￨e store￨e ,￨e fetch￨e ,￨e resJoins￨e [￨e idx￨e ]￨e )￨e ;￨e }￨f }￨f )￨e ;￨e Result￨e res￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f res￨e =￨e union￨e .￨e execute￨e (￨e store￨e ,￨e fetch￨e )￨e ;￨e if￨j (￨j res￨c .￨c next￨c (￨c )￨c )￨j {￨j return￨e _strat￨e .￨e loadValue￨e (￨e sm￨e ,￨e store￨e ,￨e fetch￨e ,￨e res￨e ,￨e resJoins￨e [￨e res￨e .￨e indexOf￨e (￨e )￨e ]￨e )￨e ;￨e }￨j return￨e null￨e ;￨e }￨f catch￨f (￨f SQLException￨p se￨p )￨f {￨f throw￨e SQLExceptions￨e .￨e getStore￨e (￨e se￨e ,￨e store￨e .￨e getDBDictionary￨e (￨e )￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f if￨j (￨j res￨c !=￨c null￨c )￨j {￨j res￨e .￨e close￨e (￨e )￨e ;￨e }￨j }￨f }￨f protected￨f Iterator￨f itr￨f (￨f )￨f {￨f }￨f private￨f OpenJPAStateManager￨f assertOwner￨f (￨f )￨f {￨f }￨f private￨f JDBCStore￨f getStore￨f (￨f )￨f {￨f }￨f private￨d class￨d ResultIterator￨d implements￨d Iterator￨d ,￨d Closeable￨d {￨d private￨e final￨e OpenJPAStateManager￨e _sm￨e ;￨e private￨e final￨e JDBCStore￨e _store￨e ;￨e private￨e final￨e JDBCFetchConfiguration￨e _fetch￨e ;￨e private￨e final￨e Result￨e [￨e ]￨e _res￨e ;￨e private￨e final￨e Joins￨e [￨e ]￨e _joins￨e ;￨e private￨e Boolean￨e _next￨e =￨e null￨e ;￨e public￨f ResultIterator￨f (￨f OpenJPAStateManager￨p sm￨p ,￨p JDBCStore￨p store￨p ,￨p JDBCFetchConfiguration￨p fetch￨p ,￨p Result￨p [￨p ]￨p res￨p ,￨p Joins￨p [￨p ]￨p joins￨p )￨f {￨f }￨f public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f public￨f Object￨f next￨f (￨f )￨f {￨f }￨f public￨f void￨f remove￨f (￨f )￨f {￨f }￨f public￨f void￨f close￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d Entry￨d implements￨d Map￨d .￨d Entry￨d {￨d public￨e Object￨e key￨e ;￨e public￨e Object￨e val￨e ;￨e public￨f Object￨f getKey￨f (￨f )￨f {￨f }￨f public￨f Object￨f getValue￨f (￨f )￨f {￨f }￨f public￨f Object￨f setValue￨f (￨f Object￨p val￨p )￨f {￨f }￨f }￨d }￨d
public￨d abstract￨d class￨d DefaultCompilerAdapter￨d extends￨d AbstractLogEnabled￨d implements￨d CompilerAdapter￨d {￨d protected￨e boolean￨e m_debug￨e ;￨e protected￨e boolean￨e m_optimize￨e ;￨e protected￨e boolean￨e m_deprecation￨e ;￨e protected￨e boolean￨e m_depend￨e ;￨e protected￨e boolean￨e m_verbose￨e ;￨e protected￨e Javac￨e m_attributes￨e ;￨e protected￨e Path￨e m_bootclasspath￨e ;￨e protected￨e Path￨e m_compileClasspath￨e ;￨e protected￨e File￨e [￨e ]￨e m_compileList￨e ;￨e protected￨e File￨e m_destDir￨e ;￨e protected￨e String￨e m_encoding￨e ;￨e protected￨e Path￨e m_extdirs￨e ;￨e protected￨e boolean￨e m_includeAntRuntime￨e ;￨e protected￨e boolean￨e m_includeJavaRuntime￨e ;￨e protected￨e String￨e m_memoryInitialSize￨e ;￨e protected￨e String￨e m_memoryMaximumSize￨e ;￨e protected￨e File￨e m_baseDir￨e ;￨e protected￨e Path￨e src￨e ;￨e protected￨e String￨e target￨e ;￨e public￨f void￨f setJavac￨f (￨f Javac￨p attributes￨p )￨f {￨f }￨f public￨f Javac￨f getJavac￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupJavacCommand￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupJavacCommand￨f (￨f boolean￨f debugLevelCheck￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupJavacCommandlineSwitches￨f (￨f Commandline￨f cmd￨f ,￨f boolean￨f useDebugLevel￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupModernJavacCommand￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f Commandline￨f setupModernJavacCommandlineSwitches￨f (￨f Commandline￨f cmd￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f Path￨f getCompileClasspath￨f (￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f }￨f protected￨f void￨f addCurrentCompilerArgs￨f (￨f Commandline￨p cmd￨p )￨f {￨f }￨f protected￨f int￨f executeExternalCompile￨f (￨f String￨f [￨f ]￨f args￨f ,￨f int￨f firstFileName￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f String￨e [￨e ]￨e commandArray￨e =￨e null￨e ;￨e File￨e tmpFile￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b Commandline￨b .￨b toString￨b (￨b args￨b )￨b .￨b length￨b (￨b )￨b )￨b >￨b 4096￨b )￨b {￨b <END_BUG>￨b PrintWriter￨e out￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f tmpFile￨e =￨e File￨e .￨e createTempFile￨e (￨e "jikes"￨e ,￨e ""￨e ,￨e new￨e File￨e (￨e "."￨e )￨e )￨e ;￨e out￨e =￨e new￨e PrintWriter￨e (￨e new￨e FileWriter￨e (￨e tmpFile￨e )￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c firstFileName￨c ;￨c i￨c <￨c (￨c args￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l out￨e .￨e println￨e (￨e args￨e [￨e i￨e ]￨e )￨e ;￨e }￨l out￨e .￨e flush￨e (￨e )￨e ;￨e commandArray￨e =￨e new￨e String￨e [￨e firstFileName￨e +￨e 1￨e ]￨e ;￨e System￨e .￨e arraycopy￨e (￨e args￨e ,￨e 0￨e ,￨e commandArray￨e ,￨e 0￨e ,￨e firstFileName￨e )￨e ;￨e commandArray￨e [￨e firstFileName￨e ]￨e =￨e "@"￨e +￨e (￨e tmpFile￨e .￨e getAbsolutePath￨e (￨e )￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e TaskException￨e (￨e "Error<seq2seq4repair_space>creating<seq2seq4repair_space>temporary<seq2seq4repair_space>file"￨e ,￨e e￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f if￨j (￨j out￨c !=￨c null￨c )￨j {￨j try￨f (￨f )￨f {￨f out￨e .￨e close￨e (￨e )￨e ;￨e }￨f catch￨f (￨f Throwable￨p t￨p )￨f {￨f }￨f }￨j }￨f else￨j {￨j commandArray￨e =￨e args￨e ;￨e }￨j try￨f (￨f )￨f {￨f final￨e Execute2￨e exe￨e =￨e new￨e Execute2￨e (￨e )￨e ;￨e setupLogger￨e (￨e exe￨e )￨e ;￨e exe￨e .￨e setWorkingDirectory￨e (￨e m_baseDir￨e )￨e ;￨e exe￨e .￨e setCommandline￨e (￨e commandArray￨e )￨e ;￨e return￨e exe￨e .￨e execute￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e TaskException￨e (￨e (￨e (￨e "Error<seq2seq4repair_space>running<seq2seq4repair_space>"￨e +￨e (￨e args￨e [￨e 0￨e ]￨e )￨e )￨e +￨e "<seq2seq4repair_space>compiler"￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f finally￨f (￨f )￨f {￨f if￨j (￨j tmpFile￨c !=￨c null￨c )￨j {￨j tmpFile￨e .￨e delete￨e (￨e )￨e ;￨e }￨j }￨f }￨f protected￨f void￨f logAndAddFilesToCompile￨f (￨f Commandline￨p cmd￨p )￨f {￨f }￨f }￨d
public￨d class￨d CastExpression￨d extends￨d Expression￨d {￨d public￨e Expression￨e expression￨e ;￨e public￨e Expression￨e type￨e ;￨e public￨e TypeBinding￨e expectedType￨e ;￨e public￨f CastExpression￨f (￨f Expression￨p expression￨p ,￨p Expression￨p type￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForAssignedCast￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p expectedType￨p ,￨p CastExpression￨p rhs￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForEnclosingInstanceCast￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p enclosingInstance￨p ,￨p TypeBinding￨p enclosingInstanceType￨p ,￨p TypeBinding￨p memberType￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCast￨f (￨f BlockScope￨p scope￨p ,￨p int￨p operator￨p ,￨p int￨p operatorSignature￨p ,￨p Expression￨p expression￨p ,￨p int￨p expressionTypeId￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCasts￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p receiver￨p ,￨p TypeBinding￨p receiverType￨p ,￨p MethodBinding￨p binding￨p ,￨p Expression￨p [￨p ]￨p arguments￨p ,￨p TypeBinding￨p [￨p ]￨p argumentTypes￨p ,￨p final￨p InvocationSite￨p invocationSite￨p )￨f {￨f }￨f public￨f static￨f void￨f checkNeedForArgumentCasts￨f (￨f BlockScope￨p scope￨p ,￨p int￨p operator￨p ,￨p int￨p operatorSignature￨p ,￨p Expression￨p left￨p ,￨p int￨p leftTypeId￨p ,￨p boolean￨p leftIsCast￨p ,￨p Expression￨p right￨p ,￨p int￨p rightTypeId￨p ,￨p boolean￨p rightIsCast￨p )￨f {￨f }￨f private￨f static￨f void￨f checkAlternateBinding￨f (￨f BlockScope￨p scope￨p ,￨p Expression￨p receiver￨p ,￨p TypeBinding￨p receiverType￨p ,￨p MethodBinding￨p binding￨p ,￨p Expression￨p [￨p ]￨p arguments￨p ,￨p TypeBinding￨p [￨p ]￨p originalArgumentTypes￨p ,￨p TypeBinding￨p [￨p ]￨p alternateArgumentTypes￨p ,￨p final￨p InvocationSite￨p invocationSite￨p )￨f {￨f }￨f public￨f boolean￨f checkUnsafeCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p ,￨p TypeBinding￨p expressionType￨p ,￨p TypeBinding￨p match￨p ,￨p boolean￨p isNarrowing￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f int￨e pc￨e =￨e codeStream￨e .￨e position￨e ;￨e boolean￨e needRuntimeCheckcast￨e =￨e (￨e (￨e this￨e .￨e bits￨e )￨e &￨e (￨e ASTNode￨e .￨e GenerateCheckcast￨e )￨e )￨e !=￨e 0￨e ;￨e if￨j (￨j (￨c constant￨c )￨c !=￨c (￨c Constant￨c .￨c NotAConstant￨c )￨c )￨j {￨j if￨j (￨j valueRequired￨c ||￨c needRuntimeCheckcast￨c )￨j {￨j codeStream￨e .￨e generateConstant￨e (￨e constant￨e ,￨e implicitConversion￨e )￨e ;￨e if￨j (￨j needRuntimeCheckcast￨c )￨j {￨j codeStream￨e .￨e checkcast￨e (￨e this￨e .￨e resolvedType￨e )￨e ;￨e }￨j if￨j (￨j !￨c valueRequired￨c )￨j {￨j codeStream￨e .￨e pop￨e (￨e )￨e ;￨e }￨j }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e return￨e ;￨e }￨j expression￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e (￨e valueRequired￨e ||￨e needRuntimeCheckcast￨e )￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b needRuntimeCheckcast￨b &&￨b (￨b (￨b this￨b .￨b expression￨b .￨b postConversionType￨b (￨b currentScope￨b )￨b )￨b !=￨b (￨b this￨b .￨b resolvedType￨b )￨b )￨b )￨b {￨b <END_BUG>￨b codeStream￨e .￨e checkcast￨e (￨e this￨e .￨e resolvedType￨e )￨e ;￨e if￨j (￨j valueRequired￨c )￨j {￨j codeStream￨e .￨e generateImplicitConversion￨e (￨e implicitConversion￨e )￨e ;￨e }￨j else￨j if￨j (￨j needRuntimeCheckcast￨c )￨j {￨j codeStream￨e .￨e pop￨e (￨e )￨e ;￨e }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e }￨f public￨f Expression￨f innermostCastedExpression￨f (￨f )￨f {￨f }￨f public￨f LocalVariableBinding￨f localVariableBinding￨f (￨f )￨f {￨f }￨f public￨f int￨f nullStatus￨f (￨f FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f Constant￨f optimizedBooleanConstant￨f (￨f )￨f {￨f }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveType￨f (￨f BlockScope￨p scope￨p )￨f {￨f }￨f public￨f void￨f setExpectedType￨f (￨f TypeBinding￨p expectedType￨p )￨f {￨f }￨f private￨f boolean￨f isIndirectlyUsed￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsNeedCheckCast￨f (￨f )￨f {￨f }￨f public￨f void￨f tagAsUnnecessaryCast￨f (￨f Scope￨p scope￨p ,￨p TypeBinding￨p castType￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f }￨d
public￨d class￨d ParameterData￨d extends￨d ItemData￨d {￨d Method￨e method￨e ;￨e int￨e parameter￨e ;￨e public￨f ParameterData￨f (￨f Method￨p method￨p ,￨p int￨p parameter￨p ,￨p String￨p str￨p )￨f {￨f }￨f public￨f static￨f String￨f [￨f ]￨f getAllFlags￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b String￨b [￨b ]￨b {￨b FLAG_NO_IN￨b ,￨b FLAG_NO_OUT￨b ,￨b FLAG_CRITICAL￨b ,￨b FLAG_INIT￨b ,￨b FLAG_STRUCT￨b ,￨b FLAG_UNICODE￨b ,￨b FLAG_SENTINEL￨b }￨b ;￨b <END_BUG>￨b }￨f public￨f String￨f getCast￨f (￨f )￨f {￨f }￨f public￨f Method￨f getMethod￨f (￨f )￨f {￨f }￨f public￨f int￨f getParameter￨f (￨f )￨f {￨f }￨f public￨f void￨f setCast￨f (￨f String￨p str￨p )￨f {￨f }￨f }￨d
public￨d class￨d Sort￨d {￨d public￨e static￨e final￨e Sort￨e RELEVANCE￨e =￨e new￨e Sort￨e (￨e )￨e ;￨e public￨e static￨e final￨e Sort￨e INDEXORDER￨e =￨e new￨e Sort￨e (￨e SortField￨e .￨e FIELD_DOC￨e )￨e ;￨e SortField￨e [￨e ]￨e fields￨e ;￨e public￨f Sort￨f (￨f )￨f {￨f }￨f public￨f Sort￨f (￨f SortField￨p field￨p )￨f {￨f }￨f public￨f Sort￨f (￨f SortField￨p ...￨p fields￨p )￨f {￨f }￨f public￨f void￨f setSort￨f (￨f SortField￨p field￨p )￨f {￨f }￨f public￨f void￨f setSort￨f (￨f SortField￨p ...￨p fields￨p )￨f {￨f }￨f public￨f SortField￨f [￨f ]￨f getSort￨f (￨f )￨f {￨f }￨f public￨f Sort￨f rewrite￨f (￨f IndexSearcher￨f searcher￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f @￨f Override￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f boolean￨f needsScores￨f (￨f )￨f {￨f for￨l (￨l SortField￨c sortField￨c :￨c fields￨c )￨l {￨l <START_BUG>￨b if￨b (￨b (￨b sortField￨b .￨b getType￨b (￨b )￨b )￨b ==￨b (￨b Type￨b .￨b SCORE￨b )￨b )￨b {￨b <END_BUG>￨b return￨e true￨e ;￨e }￨l return￨e false￨e ;￨e }￨f }￨d
public￨d class￨d ServiceActivatorDependencyProcessor￨d implements￨d DeploymentUnitProcessor￨d {￨d private￨d static￨d final￨d String￨d SERVICE_ACTIVATOR_PATH￨d =￨d "META-INF/services/"￨d +￨d (￨d ServiceActivator￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d private￨d static￨d final￨d ModuleDependency￨d MSC_DEP￨d =￨d new￨d ModuleDependency￨d (￨d null￨d ,￨d ModuleIdentifier￨d .￨d create￨d (￨d "org.jboss.msc"￨d )￨d ,￨d false￨d ,￨d false￨d ,￨d false￨d )￨d ;￨d public￨d void￨d deploy￨d (￨d DeploymentPhaseContext￨d phaseContext￨d )￨d throws￨d DeploymentUnitProcessingException￨d {￨d <START_BUG>￨b final￨b ResourceRoot￨b deploymentRoot￨b =￨b phaseContext￨b .￨b getAttachment￨b (￨b DEPLOYMENT_ROOT￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j deploymentRoot￨c ==￨c null￨c )￨j {￨j return￨e ;￨e }￨j if￨j (￨j deploymentRoot￨c .￨c getRoot￨c (￨c )￨c .￨c getChild￨c (￨c ServiceActivatorDependencyProcessor￨c .￨c SERVICE_ACTIVATOR_PATH￨c )￨c .￨c exists￨c (￨c )￨c )￨j {￨j phaseContext￨e .￨e putAttachment￨e (￨e ATTACHMENT_KEY￨e ,￨e new￨e ServiceActivatorMarker￨e (￨e )￨e )￨e ;￨e phaseContext￨e .￨e addToAttachmentList￨e (￨e MODULE_DEPENDENCIES￨e ,￨e ServiceActivatorDependencyProcessor￨e .￨e MSC_DEP￨e )￨e ;￨e }￨j }￨d public￨f void￨f undeploy￨f (￨f final￨p DeploymentUnit￨p context￨p )￨f {￨f }￨f }￨d
public￨d class￨d SendMessageCommand￨d extends￨d Command￨d {￨d private￨e SendMessageDialog￨e sendMessageDialog￨e ;￨e private￨e boolean￨e showComposer￨e =￨e false￨e ;￨e private￨e ComposerController￨e composerController￨e ;￨e public￨f SendMessageCommand￨f (￨f ICommandReference￨p reference￨p )￨f {￨f }￨f private￨f void￨f showInvalidRecipientMessage￨f (￨f String￨p recipient￨p )￨f {￨f }￨f private￨f boolean￨f validArguments￨f (￨f ComposerCommandReference￨p reference￨p )￨f {￨f }￨f public￨f void￨f execute￨f (￨f IWorkerStatusController￨f worker￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f ComposerCommandReference￨e r￨e =￨e (￨e (￨e ComposerCommandReference￨e )￨e (￨e getReference￨e (￨e )￨e )￨e )￨e ;￨e if￨j (￨j !￨c (￨c validArguments￨c (￨c r￨c )￨c )￨c )￨j {￨j return￨e ;￨e }￨j worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message_compose"￨e )￨e )￨e ;￨e composerController￨e =￨e r￨e .￨e getComposerController￨e (￨e )￨e ;￨e if￨j (￨j (￨c composerController￨c .￨c getView￨c (￨c )￨c .￨c getFrame￨c (￨c )￨c )￨c !=￨c null￨c )￨j {￨j composerController￨e .￨e getView￨e (￨e )￨e .￨e getFrame￨e (￨e )￨e .￨e setVisible￨e (￨e false￨e )￨e ;￨e }￨j sendMessageDialog￨e =￨e new￨e SendMessageDialog￨e (￨e worker￨e )￨e ;￨e ComposerModel￨e model￨e =￨e (￨e (￨e ComposerModel￨e )￨e (￨e composerController￨e .￨e getModel￨e (￨e )￨e )￨e )￨e ;￨e AccountItem￨e item￨e =￨e model￨e .￨e getAccountItem￨e (￨e )￨e ;￨e AbstractMessageFolder￨e sentFolder￨e =￨e (￨e (￨e AbstractMessageFolder￨e )￨e (￨e FolderTreeModel￨e .￨e getInstance￨e (￨e )￨e .￨e getFolder￨e (￨e item￨e .￨e getSpecialFoldersItem￨e (￨e )￨e .￨e getInteger￨e (￨e "sent"￨e )￨e )￨e )￨e )￨e ;￨e SendableMessage￨e message￨e =￨e null￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b message￨b =￨b new￨b org￨b .￨b columba￨b .￨b mail￨b .￨b composer￨b .￨b MessageComposer￨b (￨b model￨b )￨b .￨b compose￨b (￨b worker￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f JSCFException￨p e1￨p )￨f {￨f if￨j (￨j e1￨c instanceof￨c CancelledException￨c )￨j {￨j showComposer￨e =￨e true￨e ;￨e return￨e ;￨e }￨j else￨j {￨j JOptionPane￨e .￨e showMessageDialog￨e (￨e null￨e ,￨e e1￨e .￨e getMessage￨e (￨e )￨e )￨e ;￨e showComposer￨e =￨e true￨e ;￨e return￨e ;￨e }￨j }￨f worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message_connect"￨e )￨e )￨e ;￨e final￨e SMTPServer￨e server￨e =￨e new￨e SMTPServer￨e (￨e item￨e )￨e ;￨e try￨f (￨f )￨f {￨f worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message"￨e )￨e )￨e ;￨e IWorkerStatusChangeListener￨f listener￨f =￨f new￨f IWorkerStatusChangeListener￨f (￨f )￨f {￨f public￨f void￨f workerStatusChanged￨f (￨f WorkerStatusChangedEvent￨p e￨p )￨f {￨f if￨j (￨j e￨c .￨c getSource￨c (￨c )￨c .￨c cancelled￨c (￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f server￨e .￨e dropConnection￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e1￨p )￨f {￨f }￨f }￨j }￨f }￨f ;￨e worker￨e .￨e addWorkerStatusChangeListener￨e (￨e listener￨e )￨e ;￨e server￨e .￨e sendMessage￨e (￨e message￨e ,￨e worker￨e )￨e ;￨e worker￨e .￨e removeWorkerStatusChangeListener￨e (￨e listener￨e )￨e ;￨e if￨j (￨j worker￨c .￨c cancelled￨c (￨c )￨c )￨j {￨j showComposer￨e =￨e true￨e ;￨e return￨e ;￨e }￨j Flags￨e flags￨e =￨e new￨e Flags￨e (￨e )￨e ;￨e flags￨e .￨e setSeen￨e (￨e true￨e )￨e ;￨e message￨e .￨e getHeader￨e (￨e )￨e .￨e setFlags￨e (￨e flags￨e )￨e ;￨e ComposerCommandReference￨e ref￨e =￨e new￨e ComposerCommandReference￨e (￨e composerController￨e ,￨e sentFolder￨e )￨e ;￨e ref￨e .￨e setMessage￨e (￨e message￨e )￨e ;￨e SaveMessageCommand￨e c￨e =￨e new￨e SaveMessageCommand￨e (￨e ref￨e )￨e ;￨e CommandProcessor￨e .￨e getInstance￨e (￨e )￨e .￨e addOp￨e (￨e c￨e )￨e ;￨e MailFolderCommandReference￨e ref2￨e =￨e model￨e .￨e getSourceReference￨e (￨e )￨e ;￨e if￨j (￨j (￨c ref2￨c !=￨c null￨c )￨c &&￨c (￨c (￨c (￨c IMailbox￨c )￨c (￨c ref2￨c .￨c getSourceFolder￨c (￨c )￨c )￨c )￨c .￨c exists￨c (￨c ref2￨c .￨c getUids￨c (￨c )￨c [￨c 0￨c ]￨c )￨c )￨c )￨j {￨j ref2￨e .￨e setMarkVariant￨e (￨e MARK_AS_ANSWERED￨e )￨e ;￨e MarkMessageCommand￨e c1￨e =￨e new￨e MarkMessageCommand￨e (￨e ref2￨e )￨e ;￨e CommandProcessor￨e .￨e getInstance￨e (￨e )￨e .￨e addOp￨e (￨e c1￨e )￨e ;￨e }￨j worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message_closing"￨e )￨e )￨e ;￨e server￨e .￨e closeConnection￨e (￨e )￨e ;￨e worker￨e .￨e setDisplayText￨e (￨e MailResourceLoader￨e .￨e getString￨e (￨e "statusbar"￨e ,￨e "message"￨e ,￨e "send_message_success"￨e )￨e )￨e ;￨e }￨f catch￨f (￨f Exception￨p e￨p )￨f {￨f showComposer￨e =￨e true￨e ;￨e throw￨e e￨e ;￨e }￨f }￨f public￨f void￨f updateGUI￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d SendMessageDialog￨d extends￨d JDialog￨d implements￨d ActionListener￨d ,￨d WorkerStatusChangeListener￨d {￨d private￨e JProgressBar￨e progressBar￨e ;￨e private￨e JButton￨e cancelButton￨e ;￨e private￨e JLabel￨e label￨e ;￨e private￨e WorkerStatusController￨e worker￨e ;￨e public￨f SendMessageDialog￨f (￨f WorkerStatusController￨f worker￨f )￨f throws￨f HeadlessException￨f (￨f )￨f {￨f }￨f protected￨f void￨f initComponents￨f (￨f )￨f {￨f }￨f protected￨f void￨f layoutComponents￨f (￨f )￨f {￨f }￨f public￨f void￨f workerStatusChanged￨f (￨f WorkerStatusChangedEvent￨p e￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p arg0￨p )￨f {￨f <START_BUG>￨b if￨b (￨b arg0￨b .￨b equals￨b (￨b "CANCEL"￨b )￨b )￨b {￨b <END_BUG>￨b worker￨e .￨e cancel￨e (￨e )￨e ;￨e setVisible￨e (￨e false￨e )￨e ;￨e }￨f public￨f void￨f setWorker￨f (￨f WorkerStatusController￨p worker￨p )￨f {￨f }￨f }￨d
public￨d class￨d ForStatement￨d extends￨d Statement￨d {￨d public￨e Statement￨e [￨e ]￨e initializations￨e ;￨e public￨e Expression￨e condition￨e ;￨e public￨e Statement￨e [￨e ]￨e increments￨e ;￨e public￨e Statement￨e action￨e ;￨e public￨e boolean￨e neededScope￨e ;￨e public￨e BlockScope￨e scope￨e ;￨e private￨e Label￨e breakLabel￨e ;￨e private￨e Label￨e continueLabel￨e ;￨e int￨e preCondInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e condIfTrueInitStateIndex￨e =￨e -￨e 1￨e ;￨e int￨e mergedInitStateIndex￨e =￨e -￨e 1￨e ;￨e public￨f ForStatement￨f (￨f Statement￨p [￨p ]￨p initializations￨p ,￨p Expression￨p condition￨p ,￨p Statement￨p [￨p ]￨p increments￨p ,￨p Statement￨p action￨p ,￨p boolean￨p neededScope￨p ,￨p int￨p s￨p ,￨p int￨p e￨p )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f breakLabel￨e =￨e new￨e Label￨e (￨e )￨e ;￨e continueLabel￨e =￨e new￨e Label￨e (￨e )￨e ;￨e if￨j (￨j (￨c initializations￨c )￨c !=￨c null￨c )￨j {￨j int￨e count￨e =￨e initializations￨e .￨e length￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e while￨l (￨l i￨c <￨c count￨c )￨l {￨l flowInfo￨e =￨e initializations￨e [￨e (￨e i￨e ++￨e )￨e ]￨e .￨e analyseCode￨e (￨e scope￨e ,￨e flowContext￨e ,￨e flowInfo￨e )￨e ;￨e }￨l }￨j preCondInitStateIndex￨e =￨e currentScope￨e .￨e methodScope￨e (￨e )￨e .￨e recordInitializationStates￨e (￨e flowInfo￨e )￨e ;￨e boolean￨e conditionIsInlinedToTrue￨e =￨e (￨e (￨e condition￨e )￨e ==￨e null￨e )￨e ||￨e (￨e (￨e (￨e condition￨e .￨e constant￨e )￨e !=￨e (￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e condition￨e .￨e constant￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e true￨e )￨e )￨e ;￨e boolean￨e conditionIsInlinedToFalse￨e =￨e (￨e !￨e conditionIsInlinedToTrue￨e )￨e &&￨e (￨e (￨e (￨e condition￨e .￨e constant￨e )￨e !=￨e (￨e NotAConstant￨e )￨e )￨e &&￨e (￨e (￨e condition￨e .￨e constant￨e .￨e booleanValue￨e (￨e )￨e )￨e ==￨e false￨e )￨e )￨e ;￨e LoopingFlowContext￨e condLoopContext￨e =￨e null￨e ;￨e if￨j (￨j (￨c condition￨c )￨c !=￨c null￨c )￨j {￨j if￨j (￨j !￨c conditionIsInlinedToTrue￨c )￨j {￨j flowInfo￨e =￨e condition￨e .￨e analyseCode￨e (￨e scope￨e ,￨e (￨e condLoopContext￨e =￨e new￨e LoopingFlowContext￨e (￨e flowContext￨e ,￨e this￨e ,￨e null￨e ,￨e null￨e ,￨e scope￨e )￨e )￨e ,￨e flowInfo￨e )￨e ;￨e }￨j }￨j LoopingFlowContext￨e loopingContext￨e ;￨e FlowInfo￨e actionInfo￨e ;￨e if￨j (￨j (￨c (￨c action￨c )￨c ==￨c null￨c )￨c ||￨c (￨c action￨c .￨c isEmptyBlock￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j condLoopContext￨c !=￨c null￨c )￨j {￨j condLoopContext￨e .￨e complainOnFinalAssignmentsInLoop￨e (￨e scope￨e ,￨e flowInfo￨e )￨e ;￨e }￨j if￨j (￨j conditionIsInlinedToTrue￨c )￨j {￨j return￨e DeadEnd￨e ;￨e }￨j else￨j {￨j if￨j (￨j conditionIsInlinedToFalse￨c )￨j {￨j continueLabel￨e =￨e null￨e ;￨e }￨j actionInfo￨e =￨e flowInfo￨e .￨e initsWhenTrue￨e (￨e )￨e .￨e copy￨e (￨e )￨e ;￨e loopingContext￨e =￨e new￨e LoopingFlowContext￨e (￨e flowContext￨e ,￨e this￨e ,￨e breakLabel￨e ,￨e continueLabel￨e ,￨e scope￨e )￨e ;￨e }￨j }￨j else￨j {￨j loopingContext￨e =￨e new￨e LoopingFlowContext￨e (￨e flowContext￨e ,￨e this￨e ,￨e breakLabel￨e ,￨e continueLabel￨e ,￨e scope￨e )￨e ;￨e FlowInfo￨e initsWhenTrue￨e =￨e flowInfo￨e .￨e initsWhenTrue￨e (￨e )￨e ;￨e condIfTrueInitStateIndex￨e =￨e currentScope￨e .￨e methodScope￨e (￨e )￨e .￨e recordInitializationStates￨e (￨e initsWhenTrue￨e )￨e ;￨e actionInfo￨e =￨e (￨e conditionIsInlinedToFalse￨e )￨e ?￨e DeadEnd￨e :￨e initsWhenTrue￨e .￨e copy￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b actionInfo￨b .￨b complainIfUnreachable￨b (￨b action￨b ,￨b scope￨b )￨b )￨b )￨b {￨b <END_BUG>￨b actionInfo￨e =￨e action￨e .￨e analyseCode￨e (￨e scope￨e ,￨e loopingContext￨e ,￨e actionInfo￨e )￨e ;￨e if￨j (￨j (￨c (￨c actionInfo￨c ==￨c (￨c DeadEnd￨c )￨c )￨c ||￨c (￨c actionInfo￨c .￨c isFakeReachable￨c (￨c )￨c )￨c )￨c &&￨c (￨c (￨c (￨c loopingContext￨c .￨c initsOnContinue￨c )￨c ==￨c (￨c DeadEnd￨c )￨c )￨c ||￨c (￨c loopingContext￨c .￨c initsOnContinue￨c .￨c isFakeReachable￨c (￨c )￨c )￨c )￨c )￨j {￨j continueLabel￨e =￨e null￨e ;￨e }￨j else￨j {￨j if￨j (￨j condLoopContext￨c !=￨c null￨c )￨j {￨j condLoopContext￨e .￨e complainOnFinalAssignmentsInLoop￨e (￨e scope￨e ,￨e flowInfo￨e )￨e ;￨e }￨j loopingContext￨e .￨e complainOnFinalAssignmentsInLoop￨e (￨e scope￨e ,￨e actionInfo￨e )￨e ;￨e actionInfo￨e =￨e actionInfo￨e .￨e mergedWith￨e (￨e loopingContext￨e .￨e initsOnContinue￨e .￨e unconditionalInits￨e (￨e )￨e )￨e ;￨e }￨j }￨j if￨j (￨j (￨c (￨c continueLabel￨c )￨c !=￨c null￨c )￨c &&￨c (￨c (￨c increments￨c )￨c !=￨c null￨c )￨c )￨j {￨j LoopingFlowContext￨e loopContext￨e =￨e new￨e LoopingFlowContext￨e (￨e flowContext￨e ,￨e this￨e ,￨e null￨e ,￨e null￨e ,￨e scope￨e )￨e ;￨e int￨e i￨e =￨e 0￨e ;￨e int￨e count￨e =￨e increments￨e .￨e length￨e ;￨e while￨l (￨l i￨c <￨c count￨c )￨l {￨l actionInfo￨e =￨e increments￨e [￨e (￨e i￨e ++￨e )￨e ]￨e .￨e analyseCode￨e (￨e scope￨e ,￨e loopContext￨e ,￨e actionInfo￨e )￨e ;￨e }￨l loopContext￨e .￨e complainOnFinalAssignmentsInLoop￨e (￨e scope￨e ,￨e flowInfo￨e )￨e ;￨e }￨j FlowInfo￨e mergedInfo￨e ;￨e if￨j (￨j conditionIsInlinedToTrue￨c )￨j {￨j mergedInitStateIndex￨e =￨e currentScope￨e .￨e methodScope￨e (￨e )￨e .￨e recordInitializationStates￨e (￨e (￨e mergedInfo￨e =￨e loopingContext￨e .￨e initsOnBreak￨e )￨e )￨e ;￨e return￨e mergedInfo￨e ;￨e }￨j mergedInfo￨e =￨e flowInfo￨e .￨e initsWhenFalse￨e (￨e )￨e .￨e unconditionalInits￨e (￨e )￨e .￨e mergedWith￨e (￨e loopingContext￨e .￨e initsOnBreak￨e .￨e unconditionalInits￨e (￨e )￨e )￨e ;￨e mergedInitStateIndex￨e =￨e currentScope￨e .￨e methodScope￨e (￨e )￨e .￨e recordInitializationStates￨e (￨e mergedInfo￨e )￨e ;￨e return￨e mergedInfo￨e ;￨e }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p )￨f {￨f }￨f public￨f void￨f resetStateForCodeGeneration￨f (￨f )￨f {￨f }￨f public￨f void￨f resolve￨f (￨f BlockScope￨p upperScope￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f int￨p tab￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f IAbstractSyntaxTreeVisitor￨p visitor￨p ,￨p BlockScope￨p blockScope￨p )￨f {￨f }￨f }￨d
public￨d class￨d CollectionProperty￨d extends￨d MultiProperty￨d {￨d protected￨e Collection￨e value￨e ;￨e private￨e Collection￨e savedValue￨e ;￨e public￨f CollectionProperty￨f (￨f String￨p name￨p ,￨p Collection￨p value￨p )￨f {￨f }￨f public￨f CollectionProperty￨f (￨f )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p o￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f String￨p prop￨p )￨f {￨f }￨f public￨f void￨f set￨f (￨f int￨p index￨p ,￨p String￨p prop￨p )￨f {￨f }￨f public￨f void￨f set￨f (￨f int￨p index￨p ,￨p JMeterProperty￨p prop￨p )￨f {￨f }￨f public￨f JMeterProperty￨f get￨f (￨f int￨p row￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f int￨p index￨p )￨f {￨f }￨f public￨f void￨f setObjectValue￨f (￨f Object￨p v￨p )￨f {￨f }￨f public￨f PropertyIterator￨f iterator￨f (￨f )￨f {￨f <START_BUG>￨b return￨b new￨b PropertyIteratorImpl￨b (￨b value￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f String￨f getStringValue￨f (￨f )￨f {￨f }￨f public￨f Object￨f getObjectValue￨f (￨f )￨f {￨f }￨f public￨f int￨f size￨f (￨f )￨f {￨f }￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f private￨f Collection￨f cloneCollection￨f (￨f )￨f {￨f }￨f public￨f void￨f setCollection￨f (￨f Collection￨p coll￨p )￨f {￨f }￨f public￨f void￨f clear￨f (￨f )￨f {￨f }￨f public￨f void￨f addProperty￨f (￨f JMeterProperty￨p prop￨p )￨f {￨f }￨f public￨f void￨f addItem￨f (￨f Object￨p item￨p )￨f {￨f }￨f protected￨f Class￨f getPropertyType￨f (￨f )￨f {￨f }￨f public￨f void￨f recoverRunningVersion￨f (￨f TestElement￨p owner￨p )￨f {￨f }￨f public￨d static￨d class￨d Test￨d extends￨d JMeterTestCase￨d {￨d public￨f Test￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f testAddingProperties￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f }￨d public￨f void￨f setRunningVersion￨f (￨f boolean￨p running￨p )￨f {￨f }￨f }￨d
final￨d class￨d Behaviors￨d implements￨d IDetachable￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e Component￨e component￨e ;￨e public￨f Behaviors￨f (￨f Component￨p component￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f Behavior￨p ...￨p behaviors￨p )￨f {￨f }￨f private￨f void￨f internalAdd￨f (￨f final￨p Behavior￨p behavior￨p )￨f {￨f component￨e .￨e data_add￨e (￨e behavior￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b behavior￨b .￨b isStateless￨b (￨b component￨b )￨b )￨b {￨b <END_BUG>￨b getBehaviorId￨e (￨e behavior￨e )￨e ;￨e }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f <￨f M￨f extends￨f Behavior￨f >￨f List￨f <￨f M￨f >￨f getBehaviors￨f (￨f Class￨p <￨p M￨p >￨p type￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f Behavior￨p behavior￨p )￨f {￨f }￨f public￨f final￨f void￨f detach￨f (￨f )￨f {￨f }￨f private￨f boolean￨f internalRemove￨f (￨f final￨p Behavior￨p behavior￨p )￨f {￨f }￨f private￨f void￨f removeBehaviorsIdList￨f (￨f )￨f {￨f }￨f private￨f Behaviors￨f .￨f BehaviorIdList￨f getBehaviorsIdList￨f (￨f boolean￨p createIfNotFound￨p )￨f {￨f }￨f private￨d static￨d class￨d BehaviorIdList￨d extends￨d ArrayList￨d <￨d Behavior￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f BehaviorIdList￨f (￨f )￨f {￨f }￨f }￨d public￨f final￨f int￨f getBehaviorId￨f (￨f Behavior￨p behavior￨p )￨f {￨f }￨f public￨f final￨f Behavior￨f getBehaviorById￨f (￨f int￨p id￨p )￨f {￨f }￨f }￨d
public￨d class￨d CoreContainer￨d {￨d protected￨d static￨d Logger￨d log￨d =￨d Logger￨d .￨d getLogger￨d (￨d CoreContainer￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d protected￨d final￨d Map￨d <￨d String￨d ,￨d SolrCore￨d >￨d cores￨d =￨d new￨d LinkedHashMap￨d <￨d String￨d ,￨d SolrCore￨d >￨d (￨d )￨d ;￨d protected￨d boolean￨d persistent￨d =￨d false￨d ;￨d protected￨d String￨d adminPath￨d =￨d null￨d ;￨d protected￨d String￨d managementPath￨d =￨d null￨d ;￨d protected￨d CoreAdminHandler￨d coreAdminHandler￨d =￨d null￨d ;￨d protected￨d File￨d configFile￨d =￨d null￨d ;￨d protected￨d String￨d libDir￨d =￨d null￨d ;￨d protected￨d ClassLoader￨d libLoader￨d =￨d null￨d ;￨d protected￨d SolrResourceLoader￨d loader￨d =￨d null￨d ;￨d protected￨d WeakReference￨d <￨d SolrCore￨d >￨d adminCore￨d =￨d null￨d ;￨d protected￨d Properties￨d containerProperties￨d ;￨d public￨d CoreContainer￨d (￨d )￨d {￨d }￨d public￨f Properties￨f getContainerProperties￨f (￨f )￨f {￨f }￨f public￨d static￨d class￨d Initializer￨d {￨d protected￨e String￨e solrConfigFilename￨e =￨e null￨e ;￨e protected￨e boolean￨e abortOnConfigurationError￨e =￨e true￨e ;￨e public￨f boolean￨f isAbortOnConfigurationError￨f (￨f )￨f {￨f }￨f public￨f void￨f setAbortOnConfigurationError￨f (￨f boolean￨p abortOnConfigurationError￨p )￨f {￨f }￨f public￨f String￨f getSolrConfigFilename￨f (￨f )￨f {￨f }￨f public￨f void￨f setSolrConfigFilename￨f (￨f String￨p solrConfigFilename￨p )￨f {￨f }￨f public￨f CoreContainer￨f initialize￨f (￨f )￨f throws￨f IOException￨f ,￨f ParserConfigurationException￨f ,￨f SAXException￨f (￨f )￨f {￨f CoreContainer￨e cores￨e =￨e null￨e ;￨e String￨e instanceDir￨e =￨e SolrResourceLoader￨e .￨e locateInstanceDir￨e (￨e )￨e ;￨e File￨e fconf￨e =￨e new￨e File￨e (￨e instanceDir￨e ,￨e (￨e (￨e solrConfigFilename￨e )￨e ==￨e null￨e ?￨e "solr.xml"￨e :￨e solrConfigFilename￨e )￨e )￨e ;￨e CoreContainer￨e .￨e log￨e .￨e info￨e (￨e (￨e "looking<seq2seq4repair_space>for<seq2seq4repair_space>solr.xml:<seq2seq4repair_space>"￨e +￨e (￨e fconf￨e .￨e getAbsolutePath￨e (￨e )￨e )￨e )￨e )￨e ;￨e if￨j (￨j fconf￨c .￨c exists￨c (￨c )￨c )￨j {￨j cores￨e =￨e new￨e CoreContainer￨e (￨e )￨e ;￨e cores￨e .￨e load￨e (￨e instanceDir￨e ,￨e fconf￨e )￨e ;￨e abortOnConfigurationError￨e =￨e false￨e ;￨e for￨l (￨l SolrCore￨c c￨c :￨c cores￨c .￨c getCores￨c (￨c )￨c )￨l {￨l if￨j (￨j c￨c .￨c getSolrConfig￨c (￨c )￨c .￨c getBool￨c (￨c "abortOnConfigurationError"￨c ,￨c false￨c )￨c )￨j {￨j abortOnConfigurationError￨e =￨e true￨e ;￨e break￨e ;￨e }￨j }￨l solrConfigFilename￨e =￨e cores￨e .￨e getConfigFile￨e (￨e )￨e .￨e getName￨e (￨e )￨e ;￨e }￨j else￨j {￨j cores￨e =￨e new￨e CoreContainer￨e (￨e new￨e SolrResourceLoader￨e (￨e instanceDir￨e )￨e )￨e ;￨e SolrConfig￨e cfg￨e =￨e (￨e (￨e solrConfigFilename￨e )￨e ==￨e null￨e )￨e ?￨e new￨e SolrConfig￨e (￨e )￨e :￨e new￨e SolrConfig￨e (￨e solrConfigFilename￨e )￨e ;￨e <START_BUG>￨b CoreDescriptor￨b dcore￨b =￨b new￨b CoreDescriptor￨b (￨b cores￨b ,￨b ""￨b ,￨b cfg￨b .￨b getResourceLoader￨b (￨b )￨b .￨b getInstanceDir￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b SolrCore￨e singlecore￨e =￨e new￨e SolrCore￨e (￨e null￨e ,￨e null￨e ,￨e cfg￨e ,￨e null￨e ,￨e dcore￨e )￨e ;￨e abortOnConfigurationError￨e =￨e cfg￨e .￨e getBool￨e (￨e "abortOnConfigurationError"￨e ,￨e abortOnConfigurationError￨e )￨e ;￨e cores￨e .￨e register￨e (￨e ""￨e ,￨e singlecore￨e ,￨e false￨e )￨e ;￨e cores￨e .￨e setPersistent￨e (￨e false￨e )￨e ;￨e solrConfigFilename￨e =￨e cfg￨e .￨e getName￨e (￨e )￨e ;￨e }￨j return￨e cores￨e ;￨e }￨f }￨d public￨f CoreContainer￨f (￨f String￨f dir￨f ,￨f File￨f configFile￨f )￨f throws￨f IOException￨f ,￨f ParserConfigurationException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f public￨f CoreContainer￨f (￨f SolrResourceLoader￨p loader￨p )￨f {￨f }￨f public￨f void￨f load￨f (￨f String￨f dir￨f ,￨f File￨f configFile￨f )￨f throws￨f IOException￨f ,￨f ParserConfigurationException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f private￨f Properties￨f readProperties￨f (￨f Config￨f cfg￨f ,￨f Node￨f node￨f )￨f throws￨f XPathExpressionException￨f (￨f )￨f {￨f }￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f @￨f Override￨f protected￨f void￨f finalize￨f (￨f )￨f {￨f }￨f public￨f SolrCore￨f register￨f (￨f String￨p name￨p ,￨p SolrCore￨p core￨p ,￨p boolean￨p returnPrev￨p )￨f {￨f }￨f public￨f SolrCore￨f create￨f (￨f CoreDescriptor￨f dcore￨f )￨f throws￨f IOException￨f ,￨f ParserConfigurationException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f SolrCore￨f >￨f getCores￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f String￨f >￨f getCoreNames￨f (￨f )￨f {￨f }￨f public￨f Collection￨f <￨f String￨f >￨f getCoreNames￨f (￨f SolrCore￨p core￨p )￨f {￨f }￨f public￨f void￨f reload￨f (￨f String￨f name￨f )￨f throws￨f IOException￨f ,￨f ParserConfigurationException￨f ,￨f SAXException￨f (￨f )￨f {￨f }￨f public￨f void￨f swap￨f (￨f String￨p n0￨p ,￨p String￨p n1￨p )￨f {￨f }￨f public￨f SolrCore￨f remove￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f SolrCore￨f getCore￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setAdminCore￨f (￨f SolrCore￨p core￨p )￨f {￨f }￨f public￨f SolrCore￨f getAdminCore￨f (￨f )￨f {￨f }￨f protected￨f CoreAdminHandler￨f createMultiCoreHandler￨f (￨f )￨f {￨f }￨f public￨f CoreAdminHandler￨f getMultiCoreHandler￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isPersistent￨f (￨f )￨f {￨f }￨f public￨f void￨f setPersistent￨f (￨f boolean￨p persistent￨p )￨f {￨f }￨f public￨f String￨f getAdminPath￨f (￨f )￨f {￨f }￨f public￨f void￨f setAdminPath￨f (￨f String￨p adminPath￨p )￨f {￨f }￨f public￨f String￨f getManagementPath￨f (￨f )￨f {￨f }￨f public￨f void￨f setManagementPath￨f (￨f String￨p path￨p )￨f {￨f }￨f public￨f File￨f getConfigFile￨f (￨f )￨f {￨f }￨f public￨f void￨f persist￨f (￨f )￨f {￨f }￨f public￨f void￨f persistFile￨f (￨f File￨p file￨p )￨f {￨f }￨f void￨f persist￨f (￨f Writer￨f writer￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f void￨f persist￨f (￨f Writer￨f writer￨f ,￨f List￨f <￨f String￨f >￨f aliases￨f ,￨f CoreDescriptor￨f dcore￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f private￨f void￨f writeProperties￨f (￨f Writer￨f writer￨f ,￨f Properties￨f props￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f fileCopy￨f (￨f File￨f src￨f ,￨f File￨f dest￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ArrayInitializer￨d extends￨d Expression￨d {￨d public￨e Expression￨e [￨e ]￨e expressions￨e ;￨e public￨e ArrayBinding￨e binding￨e ;￨e public￨f ArrayInitializer￨f (￨f )￨f {￨f }￨f public￨f FlowInfo￨f analyseCode￨f (￨f BlockScope￨p currentScope￨p ,￨p FlowContext￨p flowContext￨p ,￨p FlowInfo￨p flowInfo￨p )￨f {￨f }￨f public￨f void￨f generateCode￨f (￨f BlockScope￨p currentScope￨p ,￨p CodeStream￨p codeStream￨p ,￨p boolean￨p valueRequired￨p )￨f {￨f int￨e pc￨e =￨e codeStream￨e .￨e position￨e ;￨e int￨e expressionLength￨e =￨e (￨e (￨e expressions￨e )￨e ==￨e null￨e )￨e ?￨e 0￨e :￨e expressions￨e .￨e length￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e expressionLength￨e )￨e ;￨e <START_BUG>￨b codeStream￨b .￨b newArray￨b (￨b currentScope￨b ,￨b binding￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j (￨c expressions￨c )￨c !=￨c null￨c )￨j {￨j int￨e elementsTypeID￨e =￨e (￨e (￨e binding￨e .￨e dimensions￨e )￨e >￨e 1￨e )￨e ?￨e -￨e 1￨e :￨e binding￨e .￨e leafComponentType￨e .￨e id￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c expressionLength￨c ;￨c i￨c ++￨c )￨l {￨l Expression￨e expr￨e ;￨e if￨j (￨j (￨c (￨c expr￨c =￨c expressions￨c [￨c i￨c ]￨c )￨c .￨c constant￨c )￨c !=￨c (￨c NotAConstant￨c )￨c )￨j {￨j switch￨s (￨s elementsTypeID￨c )￨s {￨s case￨c TypeIds￨c .￨c T_int￨c :￨c case￨c TypeIds￨c .￨c T_short￨c :￨c case￨c TypeIds￨c .￨c T_byte￨c :￨c case￨c TypeIds￨c .￨c T_char￨c :￨c case￨c TypeIds￨c .￨c T_long￨c :￨c if￨j (￨j (￨c expr￨c .￨c constant￨c .￨c longValue￨c (￨c )￨c )￨c !=￨c 0￨c )￨j {￨j codeStream￨e .￨e dup￨e (￨e )￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e i￨e )￨e ;￨e expr￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e true￨e )￨e ;￨e codeStream￨e .￨e arrayAtPut￨e (￨e elementsTypeID￨e ,￨e false￨e )￨e ;￨e }￨j break￨e ;￨e case￨c TypeIds￨c .￨c T_float￨c :￨c case￨c TypeIds￨c .￨c T_double￨c :￨c double￨e constantValue￨e =￨e expr￨e .￨e constant￨e .￨e doubleValue￨e (￨e )￨e ;￨e if￨j (￨j (￨c constantValue￨c ==￨c (￨c -￨c 0.0￨c )￨c )￨c ||￨c (￨c constantValue￨c !=￨c 0￨c )￨c )￨j {￨j codeStream￨e .￨e dup￨e (￨e )￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e i￨e )￨e ;￨e expr￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e true￨e )￨e ;￨e codeStream￨e .￨e arrayAtPut￨e (￨e elementsTypeID￨e ,￨e false￨e )￨e ;￨e }￨j break￨e ;￨e case￨c TypeIds￨c .￨c T_boolean￨c :￨c if￨j (￨j (￨c expr￨c .￨c constant￨c .￨c booleanValue￨c (￨c )￨c )￨c !=￨c false￨c )￨j {￨j codeStream￨e .￨e dup￨e (￨e )￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e i￨e )￨e ;￨e expr￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e true￨e )￨e ;￨e codeStream￨e .￨e arrayAtPut￨e (￨e elementsTypeID￨e ,￨e false￨e )￨e ;￨e }￨j break￨e ;￨e default￨c :￨c if￨j (￨j !￨c (￨c expr￨c instanceof￨c NullLiteral￨c )￨c )￨j {￨j codeStream￨e .￨e dup￨e (￨e )￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e i￨e )￨e ;￨e expr￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e true￨e )￨e ;￨e codeStream￨e .￨e arrayAtPut￨e (￨e elementsTypeID￨e ,￨e false￨e )￨e ;￨e }￨j }￨s }￨j else￨j if￨j (￨j !￨c (￨c expr￨c instanceof￨c NullLiteral￨c )￨c )￨j {￨j codeStream￨e .￨e dup￨e (￨e )￨e ;￨e codeStream￨e .￨e generateInlinedValue￨e (￨e i￨e )￨e ;￨e expr￨e .￨e generateCode￨e (￨e currentScope￨e ,￨e codeStream￨e ,￨e true￨e )￨e ;￨e codeStream￨e .￨e arrayAtPut￨e (￨e elementsTypeID￨e ,￨e false￨e )￨e ;￨e }￨j }￨l }￨j if￨j (￨j !￨c valueRequired￨c )￨j {￨j codeStream￨e .￨e pop￨e (￨e )￨e ;￨e }￨j codeStream￨e .￨e recordPositionsFrom￨e (￨e pc￨e ,￨e this￨e .￨e sourceStart￨e )￨e ;￨e }￨f public￨f StringBuffer￨f printExpression￨f (￨f int￨p indent￨p ,￨p StringBuffer￨p output￨p )￨f {￨f }￨f public￨f TypeBinding￨f resolveTypeExpecting￨f (￨f BlockScope￨p scope￨p ,￨p TypeBinding￨p expectedTb￨p )￨f {￨f }￨f public￨f void￨f traverse￨f (￨f ASTVisitor￨p visitor￨p ,￨p BlockScope￨p scope￨p )￨f {￨f }￨f }￨d
public￨d class￨d ReferencePointcut￨d extends￨d Pointcut￨d {￨d public￨e TypeX￨e onType￨e ;￨e public￨e TypePattern￨e onTypeSymbolic￨e ;￨e public￨e String￨e name￨e ;￨e public￨e TypePatternList￨e arguments￨e ;￨e public￨f ReferencePointcut￨f (￨f TypePattern￨p onTypeSymbolic￨p ,￨p String￨p name￨p ,￨p TypePatternList￨p arguments￨p )￨f {￨f }￨f public￨f ReferencePointcut￨f (￨f TypeX￨p onType￨p ,￨p String￨p name￨p ,￨p TypePatternList￨p arguments￨p )￨f {￨f }￨f public￨f boolean￨f fastMatch￨f (￨f JavaClass￨p jc￨p )￨f {￨f }￨f public￨f FuzzyBoolean￨f match￨f (￨f Shadow￨p shadow￨p )￨f {￨f }￨f public￨f String￨f toString￨f (￨f )￨f {￨f }￨f public￨f void￨f write￨f (￨f DataOutputStream￨f s￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f static￨f Pointcut￨f read￨f (￨f DataInputStream￨f s￨f ,￨f ISourceContext￨f context￨f )￨f throws￨f IOException￨f (￨f )￨f {￨f }￨f public￨f void￨f resolveBindings￨f (￨f IScope￨p scope￨p ,￨p Bindings￨p bindings￨p )￨f {￨f if￨j (￨j (￨c onTypeSymbolic￨c )￨c !=￨c null￨c )￨j {￨j onType￨e =￨e onTypeSymbolic￨e .￨e resolveExactType￨e (￨e scope￨e ,￨e bindings￨e )￨e ;￨e }￨j ResolvedTypeX￨e searchType￨e ;￨e if￨j (￨j (￨c onType￨c )￨c !=￨c null￨c )￨j {￨j searchType￨e =￨e scope￨e .￨e getWorld￨e (￨e )￨e .￨e resolve￨e (￨e onType￨e )￨e ;￨e }￨j else￨j {￨j searchType￨e =￨e scope￨e .￨e getEnclosingType￨e (￨e )￨e ;￨e }￨j arguments￨e .￨e resolveBindings￨e (￨e scope￨e ,￨e bindings￨e ,￨e true￨e ,￨e true￨e )￨e ;￨e ResolvedPointcutDefinition￨e pointcutDef￨e =￨e searchType￨e .￨e findPointcut￨e (￨e name￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b onType￨b )￨b ==￨b null￨b )￨b {￨b <END_BUG>￨b while￨l (￨l true￨c )￨l {￨l TypeX￨e declaringType￨e =￨e searchType￨e .￨e getDeclaringType￨e (￨e )￨e ;￨e if￨j (￨j declaringType￨c ==￨c null￨c )￨j {￨j break￨e ;￨e }￨j searchType￨e =￨e declaringType￨e .￨e resolve￨e (￨e scope￨e .￨e getWorld￨e (￨e )￨e )￨e ;￨e pointcutDef￨e =￨e searchType￨e .￨e findPointcut￨e (￨e name￨e )￨e ;￨e if￨j (￨j pointcutDef￨c !=￨c null￨c )￨j {￨j onType￨e =￨e searchType￨e ;￨e break￨e ;￨e }￨j }￨l if￨j (￨j pointcutDef￨c ==￨c null￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e "can't<seq2seq4repair_space>find<seq2seq4repair_space>referenced<seq2seq4repair_space>pointcut"￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j !￨c (￨c pointcutDef￨c .￨c isVisible￨c (￨c scope￨c .￨c getEnclosingType￨c (￨c )￨c )￨c )￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e (￨e (￨e "pointcut<seq2seq4repair_space>declaration<seq2seq4repair_space>"￨e +￨e pointcutDef￨e )￨e +￨e "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>accessible"￨e )￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j Modifier￨c .￨c isAbstract￨c (￨c pointcutDef￨c .￨c getModifiers￨c (￨c )￨c )￨c )￨j {￨j if￨j (￨j (￨c onType￨c )￨c !=￨c null￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e "can't<seq2seq4repair_space>make<seq2seq4repair_space>static<seq2seq4repair_space>reference<seq2seq4repair_space>to<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut"￨e )￨e ;￨e return￨e ;￨e }￨j else￨j if￨j (￨j !￨c (￨c searchType￨c .￨c isAbstract￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e "can't<seq2seq4repair_space>use<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut<seq2seq4repair_space>in<seq2seq4repair_space>concrete<seq2seq4repair_space>context"￨e )￨e ;￨e return￨e ;￨e }￨j }￨j ResolvedTypeX￨e [￨e ]￨e parameterTypes￨e =￨e scope￨e .￨e getWorld￨e (￨e )￨e .￨e resolve￨e (￨e pointcutDef￨e .￨e getParameterTypes￨e (￨e )￨e )￨e ;￨e if￨j (￨j (￨c parameterTypes￨c .￨c length￨c )￨c !=￨c (￨c arguments￨c .￨c size￨c (￨c )￨c )￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e (￨e (￨e (￨e "incompatible<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>arguments<seq2seq4repair_space>to<seq2seq4repair_space>pointcut,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨e +￨e (￨e parameterTypes￨e .￨e length￨e )￨e )￨e +￨e "<seq2seq4repair_space>found<seq2seq4repair_space>"￨e )￨e +￨e (￨e arguments￨e .￨e size￨e (￨e )￨e )￨e )￨e )￨e ;￨e return￨e ;￨e }￨j for￨l (￨l int￨c i￨c =￨c 0￨c ,￨c len￨c =￨c arguments￨c .￨c size￨c (￨c )￨c ;￨c i￨c <￨c len￨c ;￨c i￨c ++￨c )￨l {￨l TypePattern￨e p￨e =￨e arguments￨e .￨e get￨e (￨e i￨e )￨e ;￨e if￨j (￨j p￨c ==￨c (￨c TypePattern￨c .￨c NO￨c )￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e this￨e ,￨e "bad<seq2seq4repair_space>parameter<seq2seq4repair_space>to<seq2seq4repair_space>pointcut<seq2seq4repair_space>reference"￨e )￨e ;￨e return￨e ;￨e }￨j if￨j (￨j (￨c !￨c (￨c p￨c .￨c matchesSubtypes￨c (￨c parameterTypes￨c [￨c i￨c ]￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c p￨c .￨c getExactType￨c (￨c )￨c .￨c equals￨c (￨c OBJECT￨c )￨c )￨c )￨c )￨j {￨j scope￨e .￨e message￨e (￨e ERROR￨e ,￨e p￨e ,￨e (￨e (￨e (￨e "incompatible<seq2seq4repair_space>type,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨e +￨e (￨e parameterTypes￨e [￨e i￨e ]￨e .￨e getName￨e (￨e )￨e )￨e )￨e +￨e "<seq2seq4repair_space>found<seq2seq4repair_space>"￨e )￨e +￨e p￨e )￨e )￨e ;￨e return￨e ;￨e }￨j }￨l }￨f public￨f void￨f postRead￨f (￨f ResolvedTypeX￨p enclosingType￨p )￨f {￨f }￨f public￨f Test￨f findResidue￨f (￨f Shadow￨p shadow￨p ,￨p ExposedState￨p state￨p )￨f {￨f }￨f private￨e boolean￨e concretizing￨e =￨e false￨e ;￨e public￨f Pointcut￨f concretize1￨f (￨f ResolvedTypeX￨p searchStart￨p ,￨p IntMap￨p bindings￨p )￨f {￨f }￨f public￨f boolean￨f equals￨f (￨f Object￨p other￨p )￨f {￨f }￨f public￨f int￨f hashCode￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d PathFileList￨d implements￨d FileList￨d {￨d private￨e String￨e m_path￨e ;￨e public￨f void￨f setPath￨f (￨f final￨p String￨p path￨p )￨f {￨f }￨f public￨f FileObject￨f [￨f ]￨f listFiles￨f (￨f final￨f TaskContext￨f context￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f FileSystemManager￨d fileSystemManager￨d =￨d (￨d (￨d FileSystemManager￨d )￨d (￨d context￨d .￨d getService￨d (￨d FileSystemManager￨d .￨d class￨d )￨d )￨d )￨d ;￨d final￨d String￨d [￨d ]￨d elements￨d =￨d FileUtils￨d .￨d parsePath￨d (￨d m_path￨d )￨d ;￨d final￨d FileObject￨d [￨d ]￨d result￨d =￨d new￨d FileObject￨d [￨d elements￨d .￨d length￨d ]￨d ;￨d for￨d (￨d int￨d i￨d =￨d 0￨d ;￨d i￨d <￨d (￨d elements￨d .￨d length￨d )￨d ;￨d i￨d ++￨d )￨d {￨d String￨e element￨e =￨e elements￨e [￨e i￨e ]￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b result￨b [￨b i￨b ]￨b =￨b fileSystemManager￨b .￨b resolveFile￨b (￨b element￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f FileSystemException￨p e￨p )￨f {￨f throw￨e new￨e TaskException￨e (￨e e￨e .￨e getMessage￨e (￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨d return￨e result￨e ;￨e }￨f }￨d
public￨d class￨d SessionManagerAdapterTestCase￨d {￨d private￨d final￨d SessionManager￨d <￨d LocalSessionContext￨d >￨d manager￨d =￨d mock￨d (￨d SessionManager￨d .￨d class￨d )￨d ;￨d private￨d final￨d SessionListener￨d listener￨d =￨d mock￨d (￨d SessionListener￨d .￨d class￨d )￨d ;￨d private￨d SessionManagerAdapter￨d adapter￨d =￨d new￨d SessionManagerAdapter￨d (￨d this￨d .￨d manager￨d )￨d ;￨d @￨d Before￨d public￨d void￨d init￨d (￨d )￨d {￨d }￨d @￨f Test￨f public￨f void￨f parse￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f format￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f start￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f stop￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f setDefaultSessionTimeout￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f createSessionNoSessionId￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f createSessionSpecifiedSessionId￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f createSessionAlreadyExists￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getSession￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getSessionNoSessionId￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getSessionNotExists￨f (￨f )￨f {￨f HttpServerExchange￨e exchange￨e =￨e new￨e HttpServerExchange￨e (￨e null￨e )￨e ;￨e Batcher￨e batcher￨e =￨e mock￨e (￨e Batcher￨e .￨e class￨e )￨e ;￨e Batch￨e batch￨e =￨e mock￨e (￨e Batch￨e .￨e class￨e )￨e ;￨e SessionConfig￨e config￨e =￨e mock￨e (￨e SessionConfig￨e .￨e class￨e )￨e ;￨e String￨e requestedSessionId￨e =￨e "session.route1"￨e ;￨e String￨e sessionId￨e =￨e "session"￨e ;￨e when￨e (￨e config￨e .￨e findSessionId￨e (￨e exchange￨e )￨e )￨e .￨e thenReturn￨e (￨e requestedSessionId￨e )￨e ;￨e when￨e (￨e this￨e .￨e manager￨e .￨e findSession￨e (￨e sessionId￨e )￨e )￨e .￨e thenReturn￨e (￨e null￨e )￨e ;￨e when￨e (￨e this￨e .￨e manager￨e .￨e getBatcher￨e (￨e )￨e )￨e .￨e thenReturn￨e (￨e batcher￨e )￨e ;￨e when￨e (￨e batcher￨e .￨e startBatch￨e (￨e )￨e )￨e .￨e thenReturn￨e (￨e batch￨e )￨e ;￨e Session￨e sessionAdapter￨e =￨e this￨e .￨e adapter￨e .￨e getSession￨e (￨e exchange￨e ,￨e config￨e )￨e ;￨e assertNull￨e (￨e sessionAdapter￨e )￨e ;￨e <START_BUG>￨b verify￨b (￨b batch￨b )￨b .￨b discard￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f @￨f Test￨f public￨f void￨f activeSessions￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getTransientSessions￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getActiveSessions￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getAllSessions￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getSessionByIdentifier￨f (￨f )￨f {￨f }￨f @￨f Test￨f public￨f void￨f getSessionByIdentifierNotExists￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d RunTestNotifier￨d extends￨d Notifier￨d {￨d private￨e final￨e Statement￨e fNext￨e ;￨e public￨f RunTestNotifier￨f (￨f Statement￨p next￨p )￨f {￨f }￨f @￨f Override￨f public￨f void￨f run￨f (￨f EachTestNotifier￨p context￨p )￨f {￨f context￨e .￨e fireTestStarted￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f fNext￨e .￨e evaluate￨e (￨e )￨e ;￨e }￨f catch￨f (￨f AssumptionViolatedException￨p e￨p )￨f {￨f <START_BUG>￨b context￨b .￨b addIgnorance￨b (￨b e￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f Throwable￨p e￨p )￨f {￨f context￨e .￨e addFailure￨e (￨e e￨e )￨e ;￨e }￨f finally￨f (￨f )￨f {￨f context￨e .￨e fireTestFinished￨e (￨e )￨e ;￨e }￨f }￨f }￨d
public￨d class￨d FormInputTest￨d extends￨d WebTestCase￨d {￨d public￨f FormInputTest￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setUp￨f (￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f void￨f testHelloWorld￨f (￨f )￨f {￨f beginAt￨e (￨e "/forminput"￨e )￨e ;￨e <START_BUG>￨b assertTitleEquals￨b (￨b "Wicket<seq2seq4repair_space>-<seq2seq4repair_space>Form<seq2seq4repair_space>Input<seq2seq4repair_space>Example"￨b )￨b ;￨b <END_BUG>￨b }￨f public￨f static￨f Test￨f suite￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d FileSet￨d extends￨d DataType￨d implements￨d Cloneable￨d {￨d private￨e PatternSet￨e defaultPatterns￨e =￨e new￨e PatternSet￨e (￨e )￨e ;￨e private￨e Vector￨e additionalPatterns￨e =￨e new￨e Vector￨e (￨e )￨e ;￨e private￨e File￨e dir￨e ;￨e private￨e boolean￨e useDefaultExcludes￨e =￨e true￨e ;￨e private￨e boolean￨e isCaseSensitive￨e =￨e true￨e ;￨e private￨e String￨e dataTypeName￨e =￨e "fileset"￨e ;￨e public￨f FileSet￨f (￨f )￨f {￨f }￨f protected￨f FileSet￨f (￨f FileSet￨p fileset￨p )￨f {￨f }￨f public￨f void￨f setRefid￨f (￨f Reference￨f r￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f setDir￨f (￨f File￨f dir￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f File￨f getDir￨f (￨f Project￨p p￨p )￨f {￨f }￨f public￨f PatternSet￨f createPatternSet￨f (￨f )￨f {￨f }￨f public￨f NameEntry￨f createInclude￨f (￨f )￨f {￨f }￨f public￨f NameEntry￨f createIncludesFile￨f (￨f )￨f {￨f }￨f public￨f NameEntry￨f createExclude￨f (￨f )￨f {￨f }￨f public￨f NameEntry￨f createExcludesFile￨f (￨f )￨f {￨f }￨f public￨f void￨f setIncludes￨f (￨f String￨p includes￨p )￨f {￨f }￨f public￨f void￨f setExcludes￨f (￨f String￨p excludes￨p )￨f {￨f }￨f public￨f void￨f setIncludesfile￨f (￨f File￨f incl￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f setExcludesfile￨f (￨f File￨f excl￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f }￨f public￨f void￨f setDefaultexcludes￨f (￨f boolean￨p useDefaultExcludes￨p )￨f {￨f }￨f public￨f void￨f setCaseSensitive￨f (￨f boolean￨p isCaseSensitive￨p )￨f {￨f }￨f protected￨f final￨f void￨f setDataTypeName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f DirectoryScanner￨f getDirectoryScanner￨f (￨f Project￨p p￨p )￨f {￨f }￨f public￨f void￨f setupDirectoryScanner￨f (￨f FileScanner￨p ds￨p ,￨p Project￨p p￨p )￨f {￨f }￨f protected￨f FileSet￨f getRef￨f (￨f Project￨p p￨p )￨f {￨f if￨j (￨j !￨c (￨c checked￨c )￨c )￨j {￨j Stack￨e stk￨e =￨e new￨e Stack￨e (￨e )￨e ;￨e stk￨e .￨e push￨e (￨e this￨e )￨e ;￨e dieOnCircularReference￨e (￨e stk￨e ,￨e p￨e )￨e ;￨e }￨j Object￨e o￨e =￨e ref￨e .￨e getReferencedObject￨e (￨e p￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b o￨b .￨b getClass￨b (￨b )￨b .￨b equals￨b (￨b getClass￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b String￨e msg￨e =￨e (￨e (￨e ref￨e .￨e getRefId￨e (￨e )￨e )￨e +￨e "<seq2seq4repair_space>doesn\'t<seq2seq4repair_space>denote<seq2seq4repair_space>a<seq2seq4repair_space>"￨e )￨e +￨e (￨e dataTypeName￨e )￨e ;￨e throw￨e new￨e BuildException￨e (￨e msg￨e )￨e ;￨e else￨j {￨j return￨e (￨e (￨e FileSet￨e )￨e (￨e o￨e )￨e )￨e ;￨e }￨j }￨f public￨f Object￨f clone￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d CustomResourceLoadingApplication￨d extends￨d WicketExampleApplication￨d {￨d private￨d static￨d final￨d Log￨d log￨d =￨d LogFactory￨d .￨d getLog￨d (￨d CustomResourceLoadingApplication￨d .￨d class￨d )￨d ;￨d private￨d final￨d class￨d CustomResourceStreamLocator￨d extends￨d AbstractResourceStreamLocator￨d {￨d private￨e ClassLoaderResourceStreamLocator￨e classLoaderLocator￨e =￨e new￨e ClassLoaderResourceStreamLocator￨e (￨e )￨e ;￨e protected￨f IResourceStream￨f locate￨f (￨f Class￨p clazz￨p ,￨p String￨p path￨p )￨f {￨f if￨j (￨j CustomResourceLoadingApplication￨c .￨c log￨c .￨c isDebugEnabled￨c (￨c )￨c )￨j {￨j CustomResourceLoadingApplication￨e .￨e log￨e .￨e debug￨e (￨e (￨e (￨e "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>locate<seq2seq4repair_space>resource<seq2seq4repair_space>'"￨e +￨e path￨e )￨e +￨e "'<seq2seq4repair_space>using<seq2seq4repair_space>classloader<seq2seq4repair_space>the<seq2seq4repair_space>servlet<seq2seq4repair_space>context"￨e )￨e )￨e ;￨e }￨j String￨e location￨e ;￨e if￨j (￨j clazz￨c ==￨c (￨c AlternativePageFromWebContext￨c .￨c class￨c )￨c )￨j {￨j String￨e extension￨e =￨e path￨e .￨e substring￨e (￨e (￨e (￨e path￨e .￨e lastIndexOf￨e (￨e '.'￨e )￨e )￨e +￨e 1￨e )￨e )￨e ;￨e String￨e simpleFileName￨e =￨e Strings￨e .￨e lastPathComponent￨e (￨e clazz￨e .￨e getName￨e (￨e )￨e ,￨e '.'￨e )￨e ;￨e location￨e =￨e (￨e (￨e "/WEB-INF/templates/"￨e +￨e simpleFileName￨e )￨e +￨e "."￨e )￨e +￨e extension￨e ;￨e }￨j else￨j {￨j location￨e =￨e "/WEB-INF/templates/"￨e +￨e path￨e ;￨e }￨j URL￨e url￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b url￨b =￨b getWicketServlet￨b (￨b )￨b .￨b getServletContext￨b (￨b )￨b .￨b getResource￨b (￨b location￨b )￨b ;￨b <END_BUG>￨b if￨j (￨j url￨c !=￨c null￨c )￨j {￨j return￨e new￨e UrlResourceStream￨e (￨e url￨e )￨e ;￨e }￨j }￨f catch￨f (￨f MalformedURLException￨p e￨p )￨f {￨f throw￨e new￨e WicketRuntimeException￨e (￨e e￨e )￨e ;￨e }￨f return￨e classLoaderLocator￨e .￨e locate￨e (￨e clazz￨e ,￨e path￨e )￨e ;￨e }￨f }￨d public￨f CustomResourceLoadingApplication￨f (￨f )￨f {￨f }￨f public￨f Class￨f getHomePage￨f (￨f )￨f {￨f }￨f protected￨f void￨f init￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ResourceAvailableCondition￨d extends￨d AbstractAvailableCondition￨d implements￨d Condition￨d {￨d private￨e String￨e m_resource￨e ;￨e public￨f void￨f setResource￨f (￨f final￨p String￨p resource￨p )￨f {￨f }￨f public￨f boolean￨f evaluate￨f (￨f final￨f TaskContext￨f context￨f )￨f throws￨f TaskException￨f (￨f )￨f {￨f if￨j (￨j (￨c m_resource￨c )￨c ==￨c null￨c )￨j {￨j throw￨e new￨e TaskException￨e (￨e "Resource<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>specified."￨e )￨e ;￨e }￨j <START_BUG>￨b final￨b ClassLoader￨b classLoader￨b =￨b buildClassLoader￨b (￨b )￨b ;￨b <END_BUG>￨b final￨e InputStream￨e instr￨e =￨e classLoader￨e .￨e getResourceAsStream￨e (￨e m_resource￨e )￨e ;￨e if￨j (￨j instr￨c !=￨c null￨c )￨j {￨j IOUtil￨e .￨e shutdownStream￨e (￨e instr￨e )￨e ;￨e return￨e true￨e ;￨e }￨j return￨e false￨e ;￨e }￨f }￨d
public￨d class￨d RuntimeMXBeanReadResourceHandler￨d implements￨d OperationStepHandler￨d {￨d public￨e static￨e final￨e RuntimeMXBeanReadResourceHandler￨e INSTANCE￨e =￨e new￨e RuntimeMXBeanReadResourceHandler￨e (￨e )￨e ;￨e private￨f RuntimeMXBeanReadResourceHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f void￨f execute￨f (￨f OperationContext￨f context￨f ,￨f ModelNode￨f operation￨f )￨f throws￨f OperationFailedException￨f (￨f )￨f {￨f final￨e ModelNode￨e result￨e =￨e context￨e .￨e getResult￨e (￨e )￨e ;￨e for￨l (￨l String￨c attribute￨c :￨c PlatformMBeanConstants￨c .￨c RUNTIME_READ_ATTRIBUTES￨c )￨l {￨l final￨e ModelNode￨e store￨e =￨e result￨e .￨e get￨e (￨e attribute￨e )￨e ;￨e try￨f (￨f )￨f {￨f RuntimeMXBeanAttributeHandler￨e .￨e storeResult￨e (￨e attribute￨e ,￨e store￨e )￨e ;￨e }￨f catch￨f (￨f SecurityException￨p ignored￨p )￨f {￨f }￨f catch￨f (￨f UnsupportedOperationException￨p ignored￨p )￨f {￨f }￨f }￨l for￨l (￨l String￨c attribute￨c :￨c PlatformMBeanConstants￨c .￨c RUNTIME_METRICS￨c )￨l {￨l final￨e ModelNode￨e store￨e =￨e result￨e .￨e get￨e (￨e attribute￨e )￨e ;￨e try￨f (￨f )￨f {￨f RuntimeMXBeanAttributeHandler￨e .￨e storeResult￨e (￨e attribute￨e ,￨e store￨e )￨e ;￨e }￨f catch￨f (￨f SecurityException￨p ignored￨p )￨f {￨f }￨f catch￨f (￨f UnsupportedOperationException￨p ignored￨p )￨f {￨f }￨f }￨l if￨j (￨j (￨c PlatformMBeanUtil￨c .￨c JVM_MAJOR_VERSION￨c )￨c >￨c 6￨c )￨j {￨j final￨e ModelNode￨e store￨e =￨e result￨e .￨e get￨e (￨e OBJECT_NAME￨e )￨e ;￨e RuntimeMXBeanAttributeHandler￨e .￨e storeResult￨e (￨e OBJECT_NAME￨e ,￨e store￨e )￨e ;￨e }￨j <START_BUG>￨b context￨b .￨b completeStep￨b (￨b NOOP_ROLLBACK_HANDLER￨b )￨b ;￨b <END_BUG>￨b }￨f }￨d
final￨d class￨d Behaviors￨d implements￨d IDetachable￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e private￨e final￨e Component￨e component￨e ;￨e public￨f Behaviors￨f (￨f Component￨p component￨p )￨f {￨f }￨f public￨f void￨f add￨f (￨f Behavior￨p ...￨p behaviors￨p )￨f {￨f }￨f private￨f void￨f internalAdd￨f (￨f final￨p Behavior￨p behavior￨p )￨f {￨f component￨e .￨e data_add￨e (￨e behavior￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b !￨b (￨b behavior￨b .￨b getStatelessHint￨b (￨b component￨b )￨b )￨b )￨b {￨b <END_BUG>￨b getBehaviorId￨e (￨e behavior￨e )￨e ;￨e }￨f @￨f SuppressWarnings￨f (￨f "unchecked"￨f )￨f public￨f <￨f M￨f extends￨f Behavior￨f >￨f List￨f <￨f M￨f >￨f getBehaviors￨f (￨f Class￨p <￨p M￨p >￨p type￨p )￨f {￨f }￨f public￨f void￨f remove￨f (￨f Behavior￨p behavior￨p )￨f {￨f }￨f public￨f final￨f void￨f detach￨f (￨f )￨f {￨f }￨f private￨f boolean￨f internalRemove￨f (￨f final￨p Behavior￨p behavior￨p )￨f {￨f }￨f private￨f void￨f removeBehaviorsIdList￨f (￨f )￨f {￨f }￨f private￨f Behaviors￨f .￨f BehaviorIdList￨f getBehaviorsIdList￨f (￨f boolean￨p createIfNotFound￨p )￨f {￨f }￨f private￨d static￨d class￨d BehaviorIdList￨d extends￨d ArrayList￨d <￨d Behavior￨d >￨d {￨d private￨e static￨e final￨e long￨e serialVersionUID￨e =￨e 1L￨e ;￨e public￨f BehaviorIdList￨f (￨f )￨f {￨f }￨f }￨d public￨f final￨f int￨f getBehaviorId￨f (￨f Behavior￨p behavior￨p )￨f {￨f }￨f public￨f final￨f Behavior￨f getBehaviorById￨f (￨f int￨p id￨p )￨f {￨f }￨f }￨d
public￨d class￨d PackageDeclaration￨d extends￨d ASTNode￨d {￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d JAVADOC_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d PackageDeclaration￨d .￨d class￨d ,￨d "javadoc"￨d ,￨d Javadoc￨d .￨d class￨d ,￨d ASTNode￨d .￨d OPTIONAL￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildListPropertyDescriptor￨d ANNOTATIONS_PROPERTY￨d =￨d new￨d ChildListPropertyDescriptor￨d (￨d PackageDeclaration￨d .￨d class￨d ,￨d "annotations"￨d ,￨d Annotation￨d .￨d class￨d ,￨d ASTNode￨d .￨d CYCLE_RISK￨d )￨d ;￨d public￨d static￨d final￨d ChildPropertyDescriptor￨d NAME_PROPERTY￨d =￨d new￨d ChildPropertyDescriptor￨d (￨d PackageDeclaration￨d .￨d class￨d ,￨d "name"￨d ,￨d Name￨d .￨d class￨d ,￨d ASTNode￨d .￨d MANDATORY￨d ,￨d ASTNode￨d .￨d NO_CYCLE_RISK￨d )￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS_2_0￨d ;￨d private￨d static￨d final￨d List￨d PROPERTY_DESCRIPTORS_3_0￨d ;￨d public￨d static￨d List￨d propertyDescriptors￨d (￨d int￨d apiLevel￨d )￨d {￨d }￨d Javadoc￨e optionalDocComment￨e =￨e null￨e ;￨e private￨e ASTNode￨e .￨e NodeList￨e annotations￨e =￨e null￨e ;￨e private￨e Name￨e packageName￨e =￨e null￨e ;￨e PackageDeclaration￨f (￨f AST￨p ast￨p )￨f {￨f }￨f final￨f List￨f internalStructuralPropertiesForType￨f (￨f int￨p apiLevel￨p )￨f {￨f }￨f final￨f ASTNode￨f internalGetSetChildProperty￨f (￨f ChildPropertyDescriptor￨p property￨p ,￨p boolean￨p get￨p ,￨p ASTNode￨p child￨p )￨f {￨f }￨f final￨f List￨f internalGetChildListProperty￨f (￨f ChildListPropertyDescriptor￨p property￨p )￨f {￨f }￨f final￨f int￨f getNodeType0￨f (￨f )￨f {￨f }￨f ASTNode￨f clone0￨f (￨f AST￨p target￨p )￨f {￨f }￨f final￨f boolean￨f subtreeMatch0￨f (￨f ASTMatcher￨p matcher￨p ,￨p Object￨p other￨p )￨f {￨f }￨f void￨f accept0￨f (￨f ASTVisitor￨p visitor￨p )￨f {￨f }￨f public￨f List￨f annotations￨f (￨f )￨f {￨f }￨f public￨f Javadoc￨f getJavadoc￨f (￨f )￨f {￨f }￨f public￨f void￨f setJavadoc￨f (￨f Javadoc￨p docComment￨p )￨f {￨f }￨f public￨f Name￨f getName￨f (￨f )￨f {￨f if￨j (￨j (￨c this￨c .￨c packageName￨c )￨c ==￨c null￨c )￨j {￨j <START_BUG>￨b synchronized￨b (￨b this￨b .￨b ast￨b )￨b {￨b <END_BUG>￨b if￨j (￨j (￨c this￨c .￨c packageName￨c )￨c ==￨c null￨c )￨j {￨j preLazyInit￨e (￨e )￨e ;￨e this￨e .￨e packageName￨e =￨e new￨e SimpleName￨e (￨e this￨e .￨e ast￨e )￨e ;￨e postLazyInit￨e (￨e this￨e .￨e packageName￨e ,￨e PackageDeclaration￨e .￨e NAME_PROPERTY￨e )￨e ;￨e }￨j }￨j return￨e this￨e .￨e packageName￨e ;￨e }￨f public￨f void￨f setName￨f (￨f Name￨p name￨p )￨f {￨f }￨f public￨f IPackageBinding￨f resolveBinding￨f (￨f )￨f {￨f }￨f int￨f memSize￨f (￨f )￨f {￨f }￨f int￨f treeSize￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d AddNamespaceHandler￨d implements￨d ModelUpdateOperationHandler￨d ,￨d DescriptionProvider￨d {￨d public￨e static￨e final￨e String￨e OPERATION_NAME￨e =￨e "add-namespace"￨e ;￨e public￨e static￨e final￨e AddNamespaceHandler￨e INSTANCE￨e =￨e new￨e AddNamespaceHandler￨e (￨e )￨e ;￨e public￨f static￨f ModelNode￨f getAddNamespaceOperation￨f (￨f ModelNode￨p address￨p ,￨p ModelNode￨p namespace￨p )￨f {￨f }￨f private￨e final￨e ParameterValidator￨e typeValidator￨e =￨e new￨e org￨e .￨e jboss￨e .￨e as￨e .￨e controller￨e .￨e operations￨e .￨e validation￨e .￨e ModelTypeValidator￨e (￨e ModelType￨e .￨e PROPERTY￨e )￨e ;￨e private￨f AddNamespaceHandler￨f (￨f )￨f {￨f }￨f @￨f Override￨f public￨f Cancellable￨f execute￨f (￨f NewOperationContext￨p context￨p ,￨p ModelNode￨p operation￨p ,￨p ResultHandler￨p resultHandler￨p )￨f {￨f }￨f @￨f Override￨f public￨f ModelNode￨f getModelDescription￨f (￨f Locale￨p locale￨p )￨f {￨f }￨f private￨f String￨f validate￨f (￨f ModelNode￨p param￨p ,￨p ModelNode￨p namespaces￨p )￨f {￨f String￨e failure￨e =￨e typeValidator￨e .￨e validateParameter￨e (￨e NAMESPACE￨e ,￨e param￨e )￨e ;￨e String￨e name￨e =￨e param￨e .￨e asProperty￨e (￨e )￨e .￨e getName￨e (￨e )￨e ;￨e <START_BUG>￨b if￨b (￨b (￨b failure￨b ==￨b null￨b )￨b &&￨b (￨b !￨b (￨b namespaces￨b .￨b isDefined￨b (￨b )￨b )￨b )￨b )￨b {￨b <END_BUG>￨b for￨l (￨l ModelNode￨c node￨c :￨c namespaces￨c .￨c asList￨c (￨c )￨c )￨l {￨l if￨j (￨j name￨c .￨c equals￨c (￨c node￨c .￨c asProperty￨c (￨c )￨c .￨c getName￨c (￨c )￨c )￨c )￨j {￨j failure￨e =￨e (￨e (￨e "Namespace<seq2seq4repair_space>with<seq2seq4repair_space>prefix<seq2seq4repair_space>"￨e +￨e name￨e )￨e +￨e "<seq2seq4repair_space>already<seq2seq4repair_space>registered<seq2seq4repair_space>with<seq2seq4repair_space>schema<seq2seq4repair_space>URI<seq2seq4repair_space>"￨e )￨e +￨e (￨e node￨e .￨e asProperty￨e (￨e )￨e .￨e getValue￨e (￨e )￨e .￨e asString￨e (￨e )￨e )￨e ;￨e }￨j }￨l }￨e return￨e failure￨e ;￨e }￨f }￨d
public￨d class￨d XQDTUriResolver￨d implements￨d IXQDTUriResolver￨d {￨d public￨f URI￨f resolveModuleImport￨f (￨f URI￨p baseUri￨p ,￨p String￨p uri￨p ,￨p String￨p [￨p ]￨p hints￨p )￨f {￨f }￨f public￨f URI￨f resolveUri￨f (￨f URI￨p baseUri￨p ,￨p String￨p uriString￨p )￨f {￨f }￨f public￨f ISourceModule￨f locateSourceModule￨f (￨f URI￨p uri￨p ,￨p IScriptProject￨p project￨p )￨f {￨f IPath￨e projectLoc￨e =￨e project￨e .￨e getProject￨e (￨e )￨e .￨e getLocation￨e (￨e )￨e ;￨e IPath￨e path￨e =￨e new￨e Path￨e (￨e uri￨e .￨e getPath￨e (￨e )￨e )￨e ;￨e if￨j (￨j projectLoc￨c .￨c isPrefixOf￨c (￨c path￨c )￨c )￨j {￨j IPath￨e packageAbolutePath￨e =￨e path￨e .￨e removeLastSegments￨e (￨e 1￨e )￨e ;￨e IPath￨e packageRelativePath￨e =￨e packageAbolutePath￨e .￨e removeFirstSegments￨e (￨e projectLoc￨e .￨e segmentCount￨e (￨e )￨e )￨e .￨e makeRelative￨e (￨e )￨e .￨e setDevice￨e (￨e null￨e )￨e ;￨e IModelElement￨e folder￨e =￨e null￨e ;￨e if￨j (￨j (￨c packageRelativePath￨c .￨c segmentCount￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j folder￨e =￨e project￨e ;￨e }￨j else￨j {￨j try￨f (￨f )￨f {￨f <START_BUG>￨b folder￨b =￨b project￨b .￨b findScriptFolder￨b (￨b packageRelativePath￨b .￨b makeAbsolute￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f ModelException￨p e￨p )￨f {￨f e￨e .￨e printStackTrace￨e (￨e )￨e ;￨e }￨f }￨j if￨j (￨j folder￨c !=￨c null￨c )￨j {￨j File￨e f￨e =￨e new￨e File￨e (￨e path￨e .￨e toOSString￨e (￨e )￨e )￨e ;￨e if￨j (￨j f￨c .￨c exists￨c (￨c )￨c )￨j {￨j return￨e DLTKCore￨e .￨e createSourceModuleFrom￨e (￨e (￨e (￨e IContainer￨e )￨e (￨e folder￨e .￨e getResource￨e (￨e )￨e )￨e )￨e .￨e getFile￨e (￨e new￨e Path￨e (￨e path￨e .￨e lastSegment￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j }￨j }￨j return￨e null￨e ;￨e }￨f }￨d
public￨d final￨d class￨d XpandBackendFacade￨d {￨d private￨e final￨e String￨e _xpandFile￨e ;￨e private￨e final￨e MiddleEnd￨e _middleEnd￨e ;￨e private￨e final￨e String￨e _fileEncoding￨e ;￨e private￨e final￨e Collection￨e <￨e MetaModel￨e >￨e _mms￨e ;￨e private￨e final￨e Collection￨e <￨e Outlet￨e >￨e _outlets￨e ;￨e private￨d static￨d Log￨d log￨d =￨d LogFactory￨d .￨d getLog￨d (￨d XpandBackendFacade￨d .￨d class￨d )￨d ;￨d public￨d static￨d Object￨d executeStatement￨d (￨d String￨d code￨d ,￨d Collection￨d <￨d MetaModel￨d >￨d mms￨d ,￨d Map￨d <￨d String￨d ,￨d Object￨d >￨d variables￨d ,￨d Collection￨d <￨d Outlet￨d >￨d outlets￨d ,￨d XpandProtectedRegionResolver￨d resolver￨d )￨d {￨d }￨d public￨f static￨f Object￨f executeStatement￨f (￨f String￨p code￨p ,￨p String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Map￨p <￨p String￨p ,￨p Object￨p >￨p variables￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p ,￨p XpandProtectedRegionResolver￨p resolver￨p )￨f {￨f }￨f public￨f static￨f Object￨f executeStatement￨f (￨f String￨p code￨p ,￨p String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Map￨p <￨p String￨p ,￨p Object￨p >￨p variables￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p ,￨p List￨p <￨p String￨p >￨p advice￨p ,￨p XpandProtectedRegionResolver￨p resolver￨p )￨f {￨f }￨f public￨f Object￨f executeStatement￨f (￨f String￨p code￨p ,￨p Map￨p <￨p String￨p ,￨p Object￨p >￨p variables￨p ,￨p List￨p <￨p String￨p >￨p advice￨p ,￨p XpandProtectedRegionResolver￨p resolver￨p )￨f {￨f }￨f public￨f static￨f void￨f registerOutlets￨f (￨f ExecutionContext￨p ctx￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p )￨f {￨f }￨f public￨f static￨f void￨f registerProtectedRegionResolver￨f (￨f ExecutionContext￨p ctx￨p ,￨p XpandProtectedRegionResolver￨p resolver￨p )￨f {￨f }￨f private￨d static￨d class￨d InMemoryPpAdapter￨d implements￨d InMemoryPostprocessor￨d {￨d private￨e final￨e PostProcessor￨e _oldPp￨e ;￨e private￨e final￨e Outlet￨e _outlet￨e ;￨e public￨f InMemoryPpAdapter￨f (￨f PostProcessor￨p oldPp￨p ,￨p Outlet￨p outlet￨p )￨f {￨f }￨f public￨f CharSequence￨f process￨f (￨f CharSequence￨p unprocessed￨p ,￨p String￨p uri￨p )￨f {￨f }￨f }￨d private￨d static￨d class￨d FileHandleImpl￨d implements￨d FileHandle￨d {￨d private￨e CharSequence￨e _buffer￨e ;￨e private￨e final￨e Outlet￨e _outlet￨e ;￨e private￨e final￨e File￨e _file￨e ;￨e public￨f FileHandleImpl￨f (￨f CharSequence￨p buffer￨p ,￨p Outlet￨p outlet￨p ,￨p File￨p file￨p )￨f {￨f }￨f public￨f CharSequence￨f getBuffer￨f (￨f )￨f {￨f }￨f public￨f String￨f getFileEncoding￨f (￨f )￨f {￨f }￨f public￨f Outlet￨f getOutlet￨f (￨f )￨f {￨f }￨f public￨f File￨f getTargetFile￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isAppend￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isOverwrite￨f (￨f )￨f {￨f }￨f public￨f void￨f setBuffer￨f (￨f CharSequence￨p buffer￨p )￨f {￨f }￨f public￨f void￨f writeAndClose￨f (￨f )￨f {￨f }￨f }￨d private￨d static￨d class￨d UriBasedPpAdapter￨d implements￨d UriBasedPostprocessor￨d {￨d private￨e final￨e PostProcessor￨e _oldPp￨e ;￨e private￨e final￨e Outlet￨e _outlet￨e ;￨e public￨f UriBasedPpAdapter￨f (￨f PostProcessor￨p oldPp￨p ,￨p Outlet￨p outlet￨p )￨f {￨f }￨f public￨f void￨f process￨f (￨f String￨p uri￨p )￨f {￨f }￨f }￨d public￨f static￨f XpandBackendFacade￨f createForFile￨f (￨f String￨p xpandFilename￨p ,￨p String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p )￨f {￨f }￨f private￨f XpandExecutionContext￨f createXpandExecutionContext￨f (￨f String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p )￨f {￨f fileEncoding￨e =￨e OldHelper￨e .￨e normalizedFileEncoding￨e (￨e fileEncoding￨e )￨e ;￨e final￨e Output￨e output￨e =￨e new￨e OutputImpl￨e (￨e )￨e ;￨e for￨l (￨l Outlet￨c outlet￨c :￨c outlets￨c )￨l {￨l output￨e .￨e addOutlet￨e (￨e outlet￨e )￨e ;￨e }￨l final￨e XpandExecutionContextImpl￨e ctx￨e =￨e new￨e XpandExecutionContextImpl￨e (￨e output￨e ,￨e null￨e )￨e ;￨e for￨l (￨l MetaModel￨c mm￨c :￨c mms￨c )￨l {￨l ctx￨e .￨e registerMetaModel￨e (￨e mm￨e )￨e ;￨e }￨l <START_BUG>￨b ctx￨b .￨b setFileEncoding￨b (￨b fileEncoding￨b )￨b ;￨b <END_BUG>￨b return￨e ctx￨e ;￨e }￨f private￨f Map￨f <￨f Class￨f <￨f ?￨f >￨f ,￨f Object￨f >￨f createSpecificParameters￨f (￨f String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p )￨f {￨f }￨f private￨f XpandBackendFacade￨f (￨f String￨p xpandFilename￨p ,￨p String￨p fileEncoding￨p ,￨p Collection￨p <￨p MetaModel￨p >￨p mms￨p ,￨p Collection￨p <￨p Outlet￨p >￨p outlets￨p )￨f {￨f }￨f public￨f Collection￨f <￨f NamedFunction￨f >￨f getContributedFunctions￨f (￨f )￨f {￨f }￨f public￨f FunctionDefContext￨f getFunctionDefContext￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ActionExit￨d extends￨d UMLAction￨d {￨d public￨e static￨e ActionExit￨e SINGLETON￨e =￨e new￨e ActionExit￨e (￨e )￨e ;￨e private￨e boolean￨e active￨e =￨e false￨e ;￨e protected￨f ActionExit￨f (￨f )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p ae￨p )￨f {￨f <START_BUG>￨b ProjectBrowser￨b pb￨b =￨b ProjectBrowser￨b .￨b TheInstance￨b ;￨b <END_BUG>￨b Project￨e p￨e =￨e ProjectManager￨e .￨e getManager￨e (￨e )￨e .￨e getCurrentProject￨e (￨e )￨e ;￨e if￨j (￨j (￨c (￨c p￨c !=￨c null￨c )￨c &&￨c (￨c p￨c .￨c needsSave￨c (￨c )￨c )￨c )￨c &&￨c (￨c !￨c (￨c active￨c )￨c )￨c )￨j {￨j active￨e =￨e true￨e ;￨e String￨f t￨f =￨f MessageFormat￨f .￨f format￨f (￨f Argo￨f .￨f localize￨f (￨f "Actions"￨f ,￨f "template.exit.save_changes_to"￨f )￨f ,￨f new￨f Object￨f [￨f ]￨f (￨f )￨f {￨f }￨f )￨e ;￨e int￨e response￨e =￨e JOptionPane￨e .￨e showConfirmDialog￨e (￨e pb￨e ,￨e t￨e ,￨e t￨e ,￨e JOptionPane￨e .￨e YES_NO_CANCEL_OPTION￨e )￨e ;￨e if￨j (￨j response￨c ==￨c (￨c JOptionPane￨c .￨c CANCEL_OPTION￨c )￨c )￨j {￨j active￨e =￨e false￨e ;￨e return￨e ;￨e }￨j if￨j (￨j response￨c ==￨c (￨c JOptionPane￨c .￨c YES_OPTION￨c )￨c )￨j {￨j boolean￨e safe￨e =￨e false￨e ;￨e if￨j (￨j ActionSaveProject￨c .￨c SINGLETON￨c .￨c shouldBeEnabled￨c (￨c )￨c )￨j {￨j safe￨e =￨e ActionSaveProject￨e .￨e SINGLETON￨e .￨e trySave￨e (￨e true￨e )￨e ;￨e }￨j if￨j (￨j !￨c safe￨c )￨j {￨j safe￨e =￨e ActionSaveProjectAs￨e .￨e SINGLETON￨e .￨e trySave￨e (￨e false￨e )￨e ;￨e }￨j if￨j (￨j !￨c safe￨c )￨j {￨j active￨e =￨e false￨e ;￨e return￨e ;￨e }￨j }￨j active￨e =￨e false￨e ;￨e }￨j if￨j (￨j !￨c (￨c active￨c )￨c )￨j {￨j Configuration￨e .￨e save￨e (￨e )￨e ;￨e ArgoSecurityManager￨e .￨e getInstance￨e (￨e )￨e .￨e setAllowExit￨e (￨e true￨e )￨e ;￨e System￨e .￨e exit￨e (￨e 0￨e )￨e ;￨e }￨j }￨f }￨d
public￨d final￨d class￨d WorkbenchKeyboard￨d {￨d private￨e static￨e final￨e boolean￨e DEBUG￨e =￨e Policy￨e .￨e DEBUG_KEY_BINDINGS￨e ;￨e private￨e static￨e final￨e boolean￨e DEBUG_VERBOSE￨e =￨e Policy￨e .￨e DEBUG_KEY_BINDINGS_VERBOSE￨e ;￨e private￨e static￨e final￨e int￨e MULTI_KEY_ASSIST_SHELL_MAX_HEIGHT￨e =￨e 175￨e ;￨e private￨e static￨e final￨e int￨e MULTI_KEY_ASSIST_SHELL_MAX_WIDTH￨e =￨e 300￨e ;￨e static￨e final￨e String￨e OUT_OF_ORDER_KEYS￨e =￨e "OutOfOrderKeys"￨e ;￨e static￨e KeySequence￨e outOfOrderKeys￨e ;￨e private￨d static￨d final￨d ResourceBundle￨d RESOURCE_BUNDLE￨d =￨d ResourceBundle￨d .￨d getBundle￨d (￨d WorkbenchKeyboard￨d .￨d class￨d .￨d getName￨d (￨d )￨d )￨d ;￨d public￨d static￨d List￨d generatePossibleKeyStrokes￨d (￨d Event￨d event￨d )￨d {￨d }￨d private￨f static￨f void￨f initializeOutOfOrderKeys￨f (￨f )￨f {￨f }￨f private￨f static￨f boolean￨f isOutOfOrderKey￨f (￨f List￨p keyStrokes￨p )￨f {￨f }￨f private￨e final￨e IActivityManager￨e activityManager￨e ;￨e private￨e final￨e ICommandManager￨e commandManager￨e ;￨e private￨f final￨f Listener￨f keyDownFilter￨f =￨f new￨f Listener￨f (￨f )￨f {￨f public￨f void￨f handleEvent￨f (￨f Event￨p event￨p )￨f {￨f }￨f }￨f ;￨e private￨e Shell￨e multiKeyAssistShell￨e =￨e null￨e ;￨e private￨e long￨e startTime￨e =￨e Long￨e .￨e MAX_VALUE￨e ;￨e private￨e final￨e KeyBindingState￨e state￨e ;￨e private￨f final￨f IWindowListener￨f windowListener￨f =￨f new￨f IWindowListener￨f (￨f )￨f {￨f public￨f void￨f windowActivated￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f void￨f windowClosed￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f void￨f windowDeactivated￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f public￨f void￨f windowOpened￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f }￨f ;￨e private￨e final￨e IWorkbench￨e workbench￨e ;￨e public￨f WorkbenchKeyboard￨f (￨f Workbench￨p associatedWorkbench￨p ,￨p IActivityManager￨p associatedActivityManager￨p ,￨p ICommandManager￨p associatedCommandManager￨p )￨f {￨f }￨f private￨f void￨f checkActiveWindow￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f private￨f void￨f closeMultiKeyAssistShell￨f (￨f )￨f {￨f }￨f private￨f static￨f boolean￨f isEnabled￨f (￨f ICommand￨p command￨p )￨f {￨f }￨f private￨f boolean￨f executeCommand￨f (￨f String￨f commandId￨f )￨f throws￨f CommandException￨f (￨f )￨f {￨f }￨f private￨f void￨f filterKeySequenceBindings￨f (￨f Event￨p event￨p )￨f {￨f }￨f public￨f Listener￨f getKeyDownFilter￨f (￨f )￨f {￨f }￨f private￨f String￨f getPerfectMatch￨f (￨f KeySequence￨p keySequence￨p )￨f {￨f }￨f private￨f void￨f incrementState￨f (￨f KeySequence￨p sequence￨p )￨f {￨f }￨f private￨f boolean￨f isPartialMatch￨f (￨f KeySequence￨p keySequence￨p )￨f {￨f }￨f private￨f boolean￨f isPerfectMatch￨f (￨f KeySequence￨p keySequence￨p )￨f {￨f }￨f private￨f final￨f void￨f logException￨f (￨f CommandException￨p e￨p )￨f {￨f }￨f private￨f void￨f openMultiKeyAssistShell￨f (￨f final￨p Display￨p display￨p )￨f {￨f }￨f public￨f boolean￨f press￨f (￨f List￨f potentialKeyStrokes￨f ,￨f Event￨f event￨f )￨f throws￨f CommandException￨f (￨f )￨f {￨f }￨f void￨f processKeyEvent￨f (￨f List￨p keyStrokes￨p ,￨p Event￨p event￨p )￨f {￨f boolean￨e eatKey￨e =￨e false￨e ;￨e if￨j (￨j !￨c (￨c keyStrokes￨c .￨c isEmpty￨c (￨c )￨c )￨c )￨j {￨j try￨f (￨f )￨f {￨f eatKey￨e =￨e press￨e (￨e keyStrokes￨e ,￨e event￨e )￨e ;￨e }￨f catch￨f (￨f CommandException￨p e￨p )￨f {￨f logException￨e (￨e e￨e )￨e ;￨e eatKey￨e =￨e true￨e ;￨e }￨f }￨j if￨j (￨j eatKey￨c )￨j {￨j switch￨s (￨s event￨c .￨c type￨c )￨s {￨s case￨c SWT￨c .￨c KeyDown￨c :￨c event￨e .￨e doit￨e =￨e false￨e ;￨e break￨e ;￨e case￨c SWT￨c .￨c Traverse￨c :￨c event￨e .￨e detail￨e =￨e SWT￨e .￨e TRAVERSE_NONE￨e ;￨e <START_BUG>￨b event￨b .￨b doit￨b =￨b true￨b ;￨b <END_BUG>￨b break￨e ;￨e default￨c :￨c }￨s event￨e .￨e type￨e =￨e SWT￨e .￨e NONE￨e ;￨e }￨j }￨f private￨f void￨f resetState￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d TableJDBCSeq￨d extends￨d AbstractJDBCSeq￨d implements￨d Configurable￨d {￨d public￨e static￨e final￨e String￨e ACTION_DROP￨e =￨e "drop"￨e ;￨e public￨e static￨e final￨e String￨e ACTION_ADD￨e =￨e "add"￨e ;￨e public￨e static￨e final￨e String￨e ACTION_GET￨e =￨e "get"￨e ;￨e public￨e static￨e final￨e String￨e ACTION_SET￨e =￨e "set"￨e ;￨e public￨e static￨e final￨e String￨e DEFAULT_TABLE￨e =￨e "OPENJPA_SEQUENCE_TABLE"￨e ;￨e private￨d static￨d final￨d Localizer￨d _loc￨d =￨d Localizer￨d .￨d forPackage￨d (￨d TableJDBCSeq￨d .￨d class￨d )￨d ;￨d private￨d transient￨d JDBCConfiguration￨d _conf￨d =￨d null￨d ;￨d private￨d transient￨d Log￨d _log￨d =￨d null￨d ;￨d private￨d int￨d _alloc￨d =￨d 50￨d ;￨d private￨d int￨d _intValue￨d =￨d 1￨d ;￨d private￨d final￨d HashMap￨d <￨d ClassMapping￨d ,￨d TableJDBCSeq￨d .￨d Status￨d >￨d _stat￨d =￨d new￨d HashMap￨d <￨d ClassMapping￨d ,￨d TableJDBCSeq￨d .￨d Status￨d >￨d (￨d )￨d ;￨d private￨d String￨d _table￨d =￨d TableJDBCSeq￨d .￨d DEFAULT_TABLE￨d ;￨d private￨d String￨d _seqColumnName￨d =￨d "SEQUENCE_VALUE"￨d ;￨d private￨d String￨d _pkColumnName￨d =￨d "ID"￨d ;￨d private￨d String￨d [￨d ]￨d _uniqueColumnNames￨d ;￨d private￨d String￨d _uniqueConstraintName￨d ;￨d private￨d Column￨d _seqColumn￨d =￨d null￨d ;￨d private￨d Column￨d _pkColumn￨d =￨d null￨d ;￨d public￨d String￨d getTable￨d (￨d )￨d {￨d }￨d public￨f void￨f setTable￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f void￨f setTableName￨f (￨f String￨p name￨p )￨f {￨f }￨f public￨f String￨f getSequenceColumn￨f (￨f )￨f {￨f }￨f public￨f void￨f setSequenceColumn￨f (￨f String￨p sequenceColumn￨p )￨f {￨f }￨f public￨f String￨f getPrimaryKeyColumn￨f (￨f )￨f {￨f }￨f public￨f void￨f setPrimaryKeyColumn￨f (￨f String￨p primaryKeyColumn￨p )￨f {￨f }￨f public￨f int￨f getAllocate￨f (￨f )￨f {￨f }￨f public￨f void￨f setAllocate￨f (￨f int￨p alloc￨p )￨f {￨f }￨f public￨f int￨f getInitialValue￨f (￨f )￨f {￨f }￨f public￨f void￨f setInitialValue￨f (￨f int￨p intValue￨p )￨f {￨f }￨f public￨f void￨f setUniqueColumns￨f (￨f String￨p columnNames￨p )￨f {￨f }￨f public￨f String￨f getUniqueColumns￨f (￨f )￨f {￨f }￨f public￨f void￨f setIncrement￨f (￨f int￨p inc￨p )￨f {￨f }￨f public￨f JDBCConfiguration￨f getConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f setConfiguration￨f (￨f Configuration￨p conf￨p )￨f {￨f }￨f public￨f void￨f startConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f endConfiguration￨f (￨f )￨f {￨f }￨f public￨f void￨f addSchema￨f (￨f ClassMapping￨p mapping￨p ,￨p SchemaGroup￨p group￨p )￨f {￨f Schema￨e [￨e ]￨e schemas￨e =￨e group￨e .￨e getSchemas￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c schemas￨c .￨c length￨c )￨c ;￨c i￨c ++￨c )￨l {￨l String￨e schemaName￨e =￨e Strings￨e .￨e getPackageName￨e (￨e _table￨e )￨e ;￨e if￨j (￨j (￨c schemaName￨c .￨c length￨c (￨c )￨c )￨c ==￨c 0￨c )￨j {￨j schemaName￨e =￨e Schemas￨e .￨e getNewTableSchema￨e (￨e _conf￨e )￨e ;￨e }￨j if￨j (￨j schemaName￨c ==￨c null￨c )￨j {￨j schemaName￨e =￨e schemas￨e [￨e i￨e ]￨e .￨e getName￨e (￨e )￨e ;￨e }￨j Schema￨e schema￨e =￨e group￨e .￨e getSchema￨e (￨e schemaName￨e )￨e ;￨e if￨j (￨j schema￨c ==￨c null￨c )￨j {￨j schema￨e =￨e group￨e .￨e addSchema￨e (￨e schemaName￨e )￨e ;￨e }￨j Table￨e copy￨e =￨e schema￨e .￨e importTable￨e (￨e _pkColumn￨e .￨e getTable￨e (￨e )￨e )￨e ;￨e Unique￨e [￨e ]￨e uniques￨e =￨e _pkColumn￨e .￨e getTable￨e (￨e )￨e .￨e getUniques￨e (￨e )￨e ;￨e for￨l (￨l Unique￨c u￨c :￨c uniques￨c )￨l {￨l <START_BUG>￨b copy￨b .￨b importUnique￨b (￨b u￨b ,￨b _conf￨b .￨b getDBDictionaryInstance￨b (￨b )￨b )￨b ;￨b <END_BUG>￨b }￨l _pkColumn￨e .￨e resetTableName￨e (￨e (￨e (￨e schemaName￨e +￨e "."￨e )￨e +￨e (￨e _pkColumn￨e .￨e getTableName￨e (￨e )￨e )￨e )￨e )￨e ;￨e _conf￨e .￨e getDBDictionaryInstance￨e (￨e )￨e .￨e createIndexIfNecessary￨e (￨e schema￨e ,￨e _table￨e ,￨e _pkColumn￨e )￨e ;￨e }￨l }￨f protected￨f Object￨f nextInternal￨f (￨f JDBCStore￨f store￨f ,￨f ClassMapping￨f mapping￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f Object￨f currentInternal￨f (￨f JDBCStore￨f store￨f ,￨f ClassMapping￨f mapping￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨f void￨f allocateInternal￨f (￨f int￨f count￨f ,￨f JDBCStore￨f store￨f ,￨f ClassMapping￨f mapping￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f TableJDBCSeq￨f .￨f Status￨f getStatus￨f (￨f ClassMapping￨p mapping￨p )￨f {￨f }￨f protected￨f Column￨f addPrimaryKeyColumn￨f (￨f Table￨p table￨p )￨f {￨f }￨f protected￨f Object￨f getPrimaryKey￨f (￨f ClassMapping￨p mapping￨p )￨f {￨f }￨f private￨f void￨f buildTable￨f (￨f )￨f {￨f }￨f private￨f void￨f allocateSequence￨f (￨f JDBCStore￨f store￨f ,￨f ClassMapping￨f mapping￨f ,￨f TableJDBCSeq￨f .￨f Status￨f stat￨f ,￨f int￨f alloc￨f ,￨f boolean￨f updateStatSeq￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f private￨f void￨f insertSequence￨f (￨f ClassMapping￨f mapping￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f long￨f getSequence￨f (￨f ClassMapping￨f mapping￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f boolean￨f setSequence￨f (￨f ClassMapping￨f mapping￨f ,￨f TableJDBCSeq￨f .￨f Status￨f stat￨f ,￨f int￨f inc￨f ,￨f boolean￨f updateStatSeq￨f ,￨f Connection￨f conn￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f String￨f resolveTableName￨f (￨f ClassMapping￨p mapping￨p ,￨p Table￨p table￨p )￨f {￨f }￨f public￨f void￨f refreshTable￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f dropTable￨f (￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f run￨f (￨f JDBCConfiguration￨f conf￨f ,￨f String￨f [￨f ]￨f args￨f ,￨f Options￨f opts￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f public￨f static￨f boolean￨f run￨f (￨f JDBCConfiguration￨f conf￨f ,￨f String￨f [￨f ]￨f args￨f ,￨f String￨f action￨f )￨f throws￨f Exception￨f (￨f )￨f {￨f }￨f protected￨d static￨d class￨d Status￨d implements￨d Serializable￨d {￨d public￨e long￨e seq￨e =￨e 1L￨e ;￨e public￨e long￨e max￨e =￨e 0L￨e ;￨e }￨d protected￨f PreparedStatement￨f prepareStatement￨f (￨f Connection￨f conn￨f ,￨f SQLBuffer￨f buf￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f int￨f executeUpdate￨f (￨f JDBCConfiguration￨f conf￨f ,￨f Connection￨f conn￨f ,￨f PreparedStatement￨f stmnt￨f ,￨f SQLBuffer￨f buf￨f ,￨f int￨f opcode￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f ResultSet￨f executeQuery￨f (￨f JDBCConfiguration￨f conf￨f ,￨f Connection￨f conn￨f ,￨f PreparedStatement￨f stmnt￨f ,￨f SQLBuffer￨f buf￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f protected￨f long￨f getSequence￨f (￨f ResultSet￨f rs￨f ,￨f DBDictionary￨f dict￨f )￨f throws￨f SQLException￨f (￨f )￨f {￨f }￨f public￨f void￨f setUniqueConstraintName￨f (￨f String￨p _uniqueConstraintName￨p )￨f {￨f }￨f public￨f String￨f getUniqueConstraintName￨f (￨f )￨f {￨f }￨f protected￨d class￨d AllocateSequenceRunnable￨d implements￨d Runnable￨d {￨d JDBCStore￨e store￨e =￨e null￨e ;￨e ClassMapping￨e mapping￨e =￨e null￨e ;￨e TableJDBCSeq￨e .￨e Status￨e stat￨e =￨e null￨e ;￨e int￨e alloc￨e ;￨e boolean￨e updateStatSeq￨e ;￨e AllocateSequenceRunnable￨f (￨f JDBCStore￨p store￨p ,￨p ClassMapping￨p mapping￨p ,￨p TableJDBCSeq￨p .￨p Status￨p stat￨p ,￨p int￨p alloc￨p ,￨p boolean￨p updateStatSeq￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f throws￨f RuntimeException￨f (￨f )￨f {￨f }￨f }￨d protected￨d class￨d CurrentSequenceRunnable￨d implements￨d Runnable￨d {￨d private￨e JDBCStore￨e _store￨e ;￨e private￨e ClassMapping￨e _mapping￨e ;￨e CurrentSequenceRunnable￨f (￨f JDBCStore￨p store￨p ,￨p ClassMapping￨p mapping￨p )￨f {￨f }￨f public￨f void￨f run￨f (￨f )￨f throws￨f RuntimeException￨f (￨f )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ShowInMenu￨d extends￨d ContributionItem￨d implements￨d IWorkbenchContribution￨d {￨d private￨e static￨e final￨e String￨e NO_TARGETS_MSG￨e =￨e WorkbenchMessages￨e .￨e Workbench_showInNoTargets￨e ;￨e private￨e IWorkbenchWindow￨e window￨e ;￨e private￨e Map￨e actions￨e =￨e new￨e HashMap￨e (￨e 21￨e )￨e ;￨e private￨e boolean￨e dirty￨e =￨e true￨e ;￨e private￨f IMenuListener￨f menuListener￨f =￨f new￨f IMenuListener￨f (￨f )￨f {￨f public￨f void￨f menuAboutToShow￨f (￨f IMenuManager￨p manager￨p )￨f {￨f }￨f }￨f ;￨e private￨e IServiceLocator￨e locator￨e ;￨e private￨e MenuManager￨e currentManager￨e ;￨e public￨f ShowInMenu￨f (￨f )￨f {￨f }￨f public￨f ShowInMenu￨f (￨f IWorkbenchWindow￨p window￨p ,￨p String￨p id￨p )￨f {￨f }￨f public￨f boolean￨f isDirty￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isDynamic￨f (￨f )￨f {￨f }￨f public￨f void￨f fill￨f (￨f Menu￨p menu￨p ,￨p int￨p index￨p )￨f {￨f }￨f private￨f void￨f fillMenu￨f (￨f IMenuManager￨p innerMgr￨p )￨f {￨f }￨f private￨f IAction￨f getAction￨f (￨f IViewDescriptor￨p desc￨p )￨f {￨f }￨f private￨f ArrayList￨f getShowInPartIds￨f (￨f IWorkbenchPart￨p sourcePart￨p )￨f {￨f }￨f private￨f IWorkbenchPart￨f getSourcePart￨f (￨f )￨f {￨f }￨f private￨f IShowInSource￨f getShowInSource￨f (￨f IWorkbenchPart￨p sourcePart￨p )￨f {￨f }￨f private￨f IShowInTargetList￨f getShowInTargetList￨f (￨f IWorkbenchPart￨p sourcePart￨p )￨f {￨f }￨f private￨f ShowInContext￨f getContext￨f (￨f IWorkbenchPart￨p sourcePart￨p )￨f {￨f }￨f private￨f IViewDescriptor￨f [￨f ]￨f getViewDescriptors￨f (￨f IWorkbenchPart￨p sourcePart￨p )￨f {￨f }￨f public￨f void￨f initialize￨f (￨f IServiceLocator￨p serviceLocator￨p )￨f {￨f }￨f protected￨f IWorkbenchWindow￨f getWindow￨f (￨f )￨f {￨f }￨f public￨f void￨f dispose￨f (￨f )￨f {￨f <START_BUG>￨b if￨b (￨b (￨b currentManager￨b .￨b getSize￨b (￨b )￨b )￨b >￨b 0￨b )￨b {￨b <END_BUG>￨b IMenuService￨e service￨e =￨e (￨e (￨e IMenuService￨e )￨e (￨e locator￨e .￨e getService￨e (￨e IMenuService￨e .￨e class￨e )￨e )￨e )￨e ;￨e service￨e .￨e releaseContributions￨e (￨e currentManager￨e )￨e ;￨e currentManager￨e .￨e removeAll￨e (￨e )￨e ;￨e }￨f }￨d
public￨d class￨d CreateFilterOnToAction￨d extends￨d AbstractColumbaAction￨d implements￨d SelectionListener￨d {￨d public￨f CreateFilterOnToAction￨f (￨f FrameMediator￨p frameMediator￨p )￨f {￨f }￨f public￨f void￨f actionPerformed￨f (￨f ActionEvent￨p evt￨p )￨f {￨f FolderCommandReference￨e [￨e ]￨e r￨e =￨e (￨e (￨e org￨e .￨e columba￨e .￨e mail￨e .￨e gui￨e .￨e frame￨e .￨e MailFrameMediator￨e )￨e (￨e getFrameMediator￨e (￨e )￨e )￨e )￨e .￨e getTableSelection￨e (￨e )￨e ;￨e <START_BUG>￨b CreateFilterOnMessageCommand￨b c￨b =￨b new￨b CreateFilterOnMessageCommand￨b (￨b r￨b ,￨b CreateFilterOnMessageCommand￨b .￨b FILTER_ON_TO￨b )￨b ;￨b <END_BUG>￨b processor￨e .￨e addOp￨e (￨e c￨e )￨e ;￨e }￨f public￨f void￨f selectionChanged￨f (￨f SelectionChangedEvent￨p e￨p )￨f {￨f }￨f }￨d
public￨d abstract￨d class￨d Scrollable￨d extends￨d Control￨d {￨d int￨e scrolledHandle￨e ;￨e ScrollBar￨e horizontalBar￨e ;￨e ScrollBar￨e verticalBar￨e ;￨e Scrollable￨f (￨f )￨f {￨f }￨f public￨f Scrollable￨f (￨f Composite￨p parent￨p ,￨p int￨p style￨p )￨f {￨f }￨f int￨f clientHandle￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f computeTrim￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f ScrollBar￨f createScrollBar￨f (￨f int￨p style￨p )￨f {￨f }￨f void￨f createWidget￨f (￨f int￨p index￨p )￨f {￨f }￨f void￨f deregister￨f (￨f )￨f {￨f }￨f public￨f int￨f getBorderWidth￨f (￨f )￨f {￨f }￨f public￨f Rectangle￨f getClientArea￨f (￨f )￨f {￨f }￨f public￨f ScrollBar￨f getHorizontalBar￨f (￨f )￨f {￨f }￨f public￨f ScrollBar￨f getVerticalBar￨f (￨f )￨f {￨f }￨f int￨f gtk_scroll_event￨f (￨f int￨p widget￨p ,￨p int￨p eventPtr￨p )￨f {￨f }￨f int￨f hScrollBarWidth￨f (￨f )￨f {￨f }￨f void￨f setOrientation￨f (￨f )￨f {￨f }￨f boolean￨f setScrollBarVisible￨f (￨f ScrollBar￨p bar￨p ,￨p boolean￨p visible￨p )￨f {￨f }￨f void￨f redrawBackgroundImage￨f (￨f )￨f {￨f }￨f void￨f redrawWidget￨f (￨f int￨p x￨p ,￨p int￨p y￨p ,￨p int￨p width￨p ,￨p int￨p height￨p ,￨p boolean￨p redrawAll￨p ,￨p boolean￨p all￨p ,￨p boolean￨p trim￨p )￨f {￨f }￨f void￨f register￨f (￨f )￨f {￨f }￨f void￨f releaseHandle￨f (￨f )￨f {￨f }￨f void￨f releaseChildren￨f (￨f boolean￨p destroy￨p )￨f {￨f }￨f void￨f resizeHandle￨f (￨f int￨p width￨p ,￨p int￨p height￨p )￨f {￨f }￨f void￨f showWidget￨f (￨f )￨f {￨f }￨f int￨f topHandle￨f (￨f )￨f {￨f }￨f void￨f updateScrollBarValue￨f (￨f ScrollBar￨p bar￨p )￨f {￨f <START_BUG>￨b parent￨b .￨b redrawBackgroundImage￨b (￨b )￨b ;￨b <END_BUG>￨b }￨f int￨f vScrollBarWidth￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Launcher￨d {￨d public￨e static￨e final￨e String￨e ANTHOME_PROPERTY￨e =￨e MagicNames￨e .￨e ANT_HOME￨e ;￨e public￨e static￨e final￨e String￨e ANTLIBDIR_PROPERTY￨e =￨e "ant.library.dir"￨e ;￨e public￨e static￨e final￨e String￨e ANT_PRIVATEDIR￨e =￨e ".ant"￨e ;￨e public￨e static￨e final￨e String￨e ANT_PRIVATELIB￨e =￨e "lib"￨e ;￨e public￨e static￨e final￨e String￨e USER_LIBDIR￨e =￨e (￨e (￨e Launcher￨e .￨e ANT_PRIVATEDIR￨e )￨e +￨e (￨e File￨e .￨e separatorChar￨e )￨e )￨e +￨e (￨e Launcher￨e .￨e ANT_PRIVATELIB￨e )￨e ;￨e public￨e static￨e final￨e String￨e MAIN_CLASS￨e =￨e "org.apache.tools.ant.Main"￨e ;￨e public￨e static￨e final￨e String￨e USER_HOMEDIR￨e =￨e "user.home"￨e ;￨e private￨e static￨e final￨e String￨e JAVA_CLASS_PATH￨e =￨e "java.class.path"￨e ;￨e public￨f static￨f void￨f main￨f (￨f String￨p [￨p ]￨p args￨p )￨f {￨f }￨f private￨f void￨f addPath￨f (￨f String￨f path￨f ,￨f boolean￨f getJars￨f ,￨f List￨f libPathURLs￨f )￨f throws￨f MalformedURLException￨f (￨f )￨f {￨f StringTokenizer￨e tokenizer￨e =￨e new￨e StringTokenizer￨e (￨e path￨e ,￨e File￨e .￨e pathSeparator￨e )￨e ;￨e while￨l (￨l tokenizer￨c .￨c hasMoreElements￨c (￨c )￨c )￨l {￨l String￨e elementName￨e =￨e tokenizer￨e .￨e nextToken￨e (￨e )￨e ;￨e File￨e element￨e =￨e new￨e File￨e (￨e elementName￨e )￨e ;￨e if￨j (￨j (￨c (￨c elementName￨c .￨c indexOf￨c (￨c "%"￨c )￨c )￨c !=￨c (￨c -￨c 1￨c )￨c )￨c &&￨c (￨c !￨c (￨c element￨c .￨c exists￨c (￨c )￨c )￨c )￨c )￨j {￨j continue￨e ;￨e }￨j if￨j (￨j getJars￨c &&￨c (￨c element￨c .￨c isDirectory￨c (￨c )￨c )￨c )￨j {￨j URL￨e [￨e ]￨e dirURLs￨e =￨e Locator￨e .￨e getLocationURLs￨e (￨e element￨e )￨e ;￨e for￨l (￨l int￨c j￨c =￨c 0￨c ;￨c j￨c <￨c (￨c dirURLs￨c .￨c length￨c )￨c ;￨c ++￨c j￨c )￨l {￨l libPathURLs￨e .￨e add￨e (￨e dirURLs￨e [￨e j￨e ]￨e )￨e ;￨e }￨l }￨j try￨f (￨f )￨f {￨f <START_BUG>￨b libPathURLs￨b .￨b add￨b (￨b new￨b URL￨b (￨b Locator￨b .￨b encodeUri￨b (￨b element￨b .￨b toURL￨b (￨b )￨b .￨b toString￨b (￨b )￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f UnsupportedEncodingException￨p ex￨p )￨f {￨f throw￨e new￨e MalformedURLException￨e (￨e ex￨e .￨e toString￨e (￨e )￨e )￨e ;￨e }￨f }￨l }￨f private￨f void￨f run￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f MalformedURLException￨f ,￨f LaunchException￨f (￨f )￨f {￨f }￨f }￨d
public￨d {￨f }￨f public￨f boolean￨f saveAllEditors￨f (￨f boolean￨p confirm￨p )￨f {￨f }￨f private￨f IWorkbenchWindow￨f busyOpenWorkbenchWindow￨f (￨f String￨f perspID￨f ,￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f void￨f checkUpdates￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f Object￨p returnCode￨p )￨f {￨f }￨f public￨f boolean￨f close￨f (￨f Object￨p returnCode￨p ,￨p final￨p boolean￨p force￨p )￨f {￨f }￨f protected￨f WorkbenchActionBuilder￨f createActionBuilder￨f (￨f IWorkbenchWindow￨p window￨p )￨f {￨f }￨f private￨f void￨f connectToWorkspace￨f (￨f )￨f {￨f }￨f private￨f void￨f disconnectFromWorkspace￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f getActiveWorkbenchWindow￨f (￨f )￨f {￨f }￨f public￨f String￨f [￨f ]￨f getCommandLineArgs￨f (￨f )￨f {￨f }￨f public￨f EditorHistory￨f getEditorHistory￨f (￨f )￨f {￨f }￨f public￨f PerspectiveHistory￨f getPerspectiveHistory￨f (￨f )￨f {￨f }￨f public￨f IEditorRegistry￨f getEditorRegistry￨f (￨f )￨f {￨f }￨f protected￨f int￨f getNewWindowNumber￨f (￨f )￨f {￨f }￨f public￨f IPerspectiveRegistry￨f getPerspectiveRegistry￨f (￨f )￨f {￨f }￨f public￨f PreferenceManager￨f getPreferenceManager￨f (￨f )￨f {￨f }￨f public￨f IPreferenceStore￨f getPreferenceStore￨f (￨f )￨f {￨f }￨f public￨f ISharedImages￨f getSharedImages￨f (￨f )￨f {￨f }￨f public￨f IMarkerHelpRegistry￨f getMarkerHelpRegistry￨f (￨f )￨f {￨f }￨f protected￨f WindowManager￨f getWindowManager￨f (￨f )￨f {￨f }￨f public￨f WorkbenchConfigurationInfo￨f getConfigurationInfo￨f (￨f )￨f {￨f }￨f private￨f File￨f getWorkbenchStateFile￨f (￨f )￨f {￨f }￨f public￨f int￨f getWorkbenchWindowCount￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f [￨f ]￨f getWorkbenchWindows￨f (￨f )￨f {￨f }￨f public￨f IWorkingSetManager￨f getWorkingSetManager￨f (￨f )￨f {￨f }￨f public￨f void￨f updateKeys￨f (￨f )￨f {￨f }￨f private￨f boolean￨f init￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f private￨f void￨f refreshFromLocal￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f private￨f void￨f forceOpenPerspective￨f (￨f String￨p [￨p ]￨p commandLineArgs￨p )￨f {￨f }￨f private￨f void￨f initializeSingleClickOption￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeFonts￨f (￨f )￨f {￨f }￨f private￨f void￨f initializeFont￨f (￨f String￨p fontKey￨p ,￨p FontRegistry￨p registry￨p ,￨p IPreferenceStore￨p store￨p )￨f {￨f }￨f private￨f void￨f initializeProductImage￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isClosing￨f (￨f )￨f {￨f }￨f public￨f boolean￨f isStarting￨f (￨f )￨f {￨f }￨f protected￨f WorkbenchWindow￨f newWorkbenchWindow￨f (￨f )￨f {￨f }￨f private￨f void￨f openFirstTimeWindow￨f (￨f )￨f {￨f }￨f private￨f int￨f openPreviousWorkbenchState￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f openWorkbenchWindow￨f (￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchWindow￨f openWorkbenchWindow￨f (￨f final￨f String￨f perspID￨f ,￨f final￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f XMLMemento￨f recordWorkbenchState￨f (￨f )￨f {￨f }￨f public￨f boolean￨f restart￨f (￨f )￨f {￨f }￨f private￨f IStatus￨f restoreState￨f (￨f IMemento￨p memento￨p )￨f {￨f MultiStatus￨e result￨e =￨e new￨e MultiStatus￨e (￨e PlatformUI￨e .￨e PLUGIN_ID￨e ,￨e IStatus￨e .￨e OK￨e ,￨e WorkbenchMessages￨e .￨e getString￨e (￨e "Workbench.problemsRestoring"￨e )￨e ,￨e null￨e )￨e ;￨e IMemento￨e childMem￨e ;￨e try￨f (￨f )￨f {￨f UIStats￨e .￨e start￨e (￨e RESTORE_WORKBENCH￨e ,￨e "PerspectiveHistory"￨e )￨e ;￨e childMem￨e =￨e memento￨e .￨e getChild￨e (￨e TAG_PERSPECTIVE_HISTORY￨e )￨e ;￨e if￨j (￨j childMem￨c !=￨c null￨c )￨j {￨j result￨e .￨e add￨e (￨e getPerspectiveHistory￨e (￨e )￨e .￨e restoreState￨e (￨e childMem￨e )￨e )￨e ;￨e }￨j }￨f finally￨f (￨f )￨f {￨f UIStats￨e .￨e end￨e (￨e RESTORE_WORKBENCH￨e ,￨e "PerspectiveHistory"￨e )￨e ;￨e }￨f try￨f (￨f )￨f {￨f UIStats￨e .￨e start￨e (￨e RESTORE_WORKBENCH￨e ,￨e "MRUList"￨e )￨e ;￨e IMemento￨e mruMemento￨e =￨e memento￨e .￨e getChild￨e (￨e TAG_MRU_LIST￨e )￨e ;￨e if￨j (￨j mruMemento￨c !=￨c null￨c )￨j {￨j result￨e .￨e add￨e (￨e getEditorHistory￨e (￨e )￨e .￨e restoreState￨e (￨e mruMemento￨e )￨e )￨e ;￨e }￨j }￨f finally￨f (￨f )￨f {￨f UIStats￨e .￨e end￨e (￨e RESTORE_WORKBENCH￨e ,￨e "MRUList"￨e )￨e ;￨e }￨f IMemento￨e [￨e ]￨e children￨e =￨e memento￨e .￨e getChildren￨e (￨e TAG_WINDOW￨e )￨e ;￨e IPerspectiveRegistry￨e reg￨e =￨e WorkbenchPlugin￨e .￨e getDefault￨e (￨e )￨e .￨e getPerspectiveRegistry￨e (￨e )￨e ;￨e AboutInfo￨e [￨e ]￨e newFeaturesWithPerspectives￨e =￨e getConfigurationInfo￨e (￨e )￨e .￨e collectNewFeaturesWithPerspectives￨e (￨e )￨e ;￨e for￨l (￨l int￨c x￨c =￨c 0￨c ;￨c x￨c <￨c (￨c children￨c .￨c length￨c )￨c ;￨c x￨c ++￨c )￨l {￨l childMem￨e =￨e children￨e [￨e x￨e ]￨e ;￨e WorkbenchWindow￨e newWindow￨e =￨e newWorkbenchWindow￨e (￨e )￨e ;￨e newWindow￨e .￨e create￨e (￨e )￨e ;￨e IPerspectiveDescriptor￨e desc￨e =￨e null￨e ;￨e if￨j (￨j x￨c <￨c (￨c newFeaturesWithPerspectives￨c .￨c length￨c )￨c )￨j {￨j desc￨e =￨e reg￨e .￨e findPerspectiveWithId￨e (￨e newFeaturesWithPerspectives￨e [￨e x￨e ]￨e .￨e getWelcomePerspective￨e (￨e )￨e )￨e ;￨e }￨j result￨e .￨e merge￨e (￨e newWindow￨e .￨e restoreState￨e (￨e childMem￨e ,￨e desc￨e )￨e )￨e ;￨e if￨j (￨j desc￨c !=￨c null￨c )￨j {￨j IWorkbenchPage￨e page￨e =￨e newWindow￨e .￨e getActivePage￨e (￨e )￨e ;￨e if￨j (￨j page￨c ==￨c null￨c )￨j {￨j IWorkbenchPage￨e [￨e ]￨e pages￨e =￨e newWindow￨e .￨e getPages￨e (￨e )￨e ;￨e if￨j (￨j (￨c pages￨c !=￨c null￨c )￨c &&￨c (￨c (￨c pages￨c .￨c length￨c )￨c >￨c 0￨c )￨c )￨j {￨j page￨e =￨e pages￨e [￨e 0￨e ]￨e ;￨e }￨j }￨j if￨j (￨j page￨c ==￨c null￨c )￨j {￨j IContainer￨e root￨e =￨e WorkbenchPlugin￨e .￨e getPluginWorkspace￨e (￨e )￨e .￨e getRoot￨e (￨e )￨e ;￨e try￨f (￨f )￨f {￨f <START_BUG>￨b page￨b =￨b (￨b (￨b WorkbenchPage￨b )￨b (￨b getActiveWorkbenchWindow￨b (￨b )￨b .￨b openPage￨b (￨b newFeaturesWithPerspectives￨b [￨b x￨b ]￨b .￨b getWelcomePerspective￨b (￨b )￨b ,￨b root￨b )￨b )￨b )￨b ;￨b <END_BUG>￨b }￨f catch￨f (￨f WorkbenchException￨p e￨p )￨f {￨f result￨e .￨e add￨e (￨e e￨e .￨e getStatus￨e (￨e )￨e )￨e ;￨e }￨f }￨j else￨j {￨j page￨e .￨e setPerspective￨e (￨e desc￨e )￨e ;￨e }￨j newWindow￨e .￨e setActivePage￨e (￨e page￨e )￨e ;￨e try￨f (￨f )￨f {￨f page￨e .￨e openEditor￨e (￨e new￨e org￨e .￨e eclipse￨e .￨e ui￨e .￨e internal￨e .￨e dialogs￨e .￨e WelcomeEditorInput￨e (￨e newFeaturesWithPerspectives￨e [￨e x￨e ]￨e )￨e ,￨e Workbench￨e .￨e WELCOME_EDITOR_ID￨e ,￨e true￨e )￨e ;￨e }￨f catch￨f (￨f PartInitException￨p e￨p )￨f {￨f result￨e .￨e add￨e (￨e e￨e .￨e getStatus￨e (￨e )￨e )￨e ;￨e }￨f }￨j windowManager￨e .￨e add￨e (￨e newWindow￨e )￨e ;￨e newWindow￨e .￨e open￨e (￨e )￨e ;￨e }￨l return￨e result￨e ;￨e }￨f public￨f IPluginDescriptor￨f [￨f ]￨f getEarlyActivatedPlugins￨f (￨f )￨f {￨f }￨f protected￨f void￨f startPlugins￨f (￨f )￨f {￨f }￨f public￨f Object￨f run￨f (￨f Object￨p arg￨p )￨f {￨f }￨f protected￨f void￨f runEventLoop￨f (￨f Window￨p .￨p IExceptionHandler￨p handler￨p )￨f {￨f }￨f private￨f IStatus￨f saveState￨f (￨f IMemento￨p memento￨p )￨f {￨f }￨f private￨f boolean￨f saveWorkbenchState￨f (￨f XMLMemento￨p memento￨p )￨f {￨f }￨f public￨f void￨f setInitializationData￨f (￨f IConfigurationElement￨p configElement￨p ,￨p String￨p propertyName￨p ,￨p Object￨p data￨p )￨f {￨f }￨f public￨f IWorkbenchPage￨f showPerspective￨f (￨f String￨f perspectiveId￨f ,￨f IWorkbenchWindow￨f window￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f public￨f IWorkbenchPage￨f showPerspective￨f (￨f String￨f perspectiveId￨f ,￨f IWorkbenchWindow￨f window￨f ,￨f IAdaptable￨f input￨f )￨f throws￨f WorkbenchException￨f (￨f )￨f {￨f }￨f private￨f void￨f shutdown￨f (￨f )￨f {￨f }￨f public￨f void￨f refreshPluginActions￨f (￨f String￨p pluginId￨p )￨f {￨f }￨f public￨f IDecoratorManager￨f getDecoratorManager￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d ShutdownManager￨d {￨d Vector￨e list￨e ;￨e public￨f ShutdownManager￨f (￨f )￨f {￨f }￨f public￨f void￨f register￨f (￨f ShutdownPluginInterface￨p plugin￨p )￨f {￨f }￨f public￨f void￨f shutdown￨f (￨f )￨f {￨f for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c list￨c .￨c size￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l ShutdownPluginInterface￨e plugin￨e =￨e (￨e (￨e ShutdownPluginInterface￨e )￨e (￨e list￨e .￨e get￨e (￨e i￨e )￨e )￨e )￨e ;￨e <START_BUG>￨b plugin￨b .￨b run￨b (￨b )￨b ;￨b <END_BUG>￨b }￨l System￨e .￨e exit￨e (￨e 1￨e )￨e ;￨e }￨f }￨d
public￨d class￨d StompMessageConverter￨d {￨d private￨e static￨e final￨e Charset￨e STOMP_CHARSET￨e =￨e Charset￨e .￨e forName￨e (￨e "UTF-8"￨e )￨e ;￨e public￨e static￨e final￨e byte￨e LF￨e =￨e 10￨e ;￨e public￨e static￨e final￨e byte￨e CR￨e =￨e 13￨e ;￨e private￨e static￨e final￨e byte￨e COLON￨e =￨e ':'￨e ;￨e public￨f Message￨f <￨f ?￨f >￨f toMessage￨f (￨f Object￨p stompContent￨p )￨f {￨f }￨f private￨f int￨f findIndexOfPayload￨f (￨f byte￨p [￨p ]￨p bytes￨p )￨f {￨f }￨f public￨f byte￨f [￨f ]￨f fromMessage￨f (￨f Message￨p <￨p ?￨p >￨p message￨p )￨f {￨f byte￨e [￨e ]￨e payload￨e ;￨e if￨j (￨j (￨c message￨c .￨c getPayload￨c (￨c )￨c )￨c instanceof￨c byte￨c [￨c ]￨c )￨j {￨j payload￨e =￨e (￨e (￨e byte￨e [￨e ]￨e )￨e (￨e message￨e .￨e getPayload￨e (￨e )￨e )￨e )￨e ;￨e }￨j else￨j {￨j throw￨e new￨e IllegalArgumentException￨e (￨e (￨e "stompContent<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>byte[]:<seq2seq4repair_space>"￨e +￨e (￨e message￨e .￨e getPayload￨e (￨e )￨e .￨e getClass￨e (￨e )￨e )￨e )￨e )￨e ;￨e }￨j ByteArrayOutputStream￨e out￨e =￨e new￨e ByteArrayOutputStream￨e (￨e )￨e ;￨e StompHeaderAccessor￨e stompHeaders￨e =￨e StompHeaderAccessor￨e .￨e wrap￨e (￨e message￨e )￨e ;￨e try￨f (￨f )￨f {￨f out￨e .￨e write￨e (￨e stompHeaders￨e .￨e getCommand￨e (￨e )￨e .￨e toString￨e (￨e )￨e .￨e getBytes￨e (￨e "UTF-8"￨e )￨e )￨e ;￨e out￨e .￨e write￨e (￨e StompMessageConverter￨e .￨e LF￨e )￨e ;￨e <START_BUG>￨b for￨b (￨b Map￨b .￨b Entry￨b <￨b String￨b ,￨b List￨b <￨b String￨b >￨b >￨b entry￨b :￨b stompHeaders￨b .￨b toNativeHeaderMap￨b (￨b )￨b .￨b entrySet￨b (￨b )￨b )￨b {￨b <END_BUG>￨b String￨e key￨e =￨e entry￨e .￨e getKey￨e (￨e )￨e ;￨e key￨e =￨e replaceAllOutbound￨e (￨e key￨e )￨e ;￨e for￨l (￨l String￨c value￨c :￨c entry￨c .￨c getValue￨c (￨c )￨c )￨l {￨l out￨e .￨e write￨e (￨e key￨e .￨e getBytes￨e (￨e "UTF-8"￨e )￨e )￨e ;￨e out￨e .￨e write￨e (￨e StompMessageConverter￨e .￨e COLON￨e )￨e ;￨e value￨e =￨e replaceAllOutbound￨e (￨e value￨e )￨e ;￨e out￨e .￨e write￨e (￨e value￨e .￨e getBytes￨e (￨e "UTF-8"￨e )￨e )￨e ;￨e out￨e .￨e write￨e (￨e StompMessageConverter￨e .￨e LF￨e )￨e ;￨e }￨l }￨e out￨e .￨e write￨e (￨e StompMessageConverter￨e .￨e LF￨e )￨e ;￨e out￨e .￨e write￨e (￨e payload￨e )￨e ;￨e out￨e .￨e write￨e (￨e 0￨e )￨e ;￨e return￨e out￨e .￨e toByteArray￨e (￨e )￨e ;￨e }￨f catch￨f (￨f IOException￨p e￨p )￨f {￨f throw￨e new￨e StompConversionException￨e (￨e (￨e "Failed<seq2seq4repair_space>to<seq2seq4repair_space>serialize<seq2seq4repair_space>"￨e +￨e message￨e )￨e ,￨e e￨e )￨e ;￨e }￨f }￨f private￨f String￨f replaceAllOutbound￨f (￨f String￨p key￨p )￨f {￨f }￨f private￨d class￨d Parser￨d {￨d private￨e final￨e String￨e content￨e ;￨e private￨e int￨e offset￨e ;￨e public￨f Parser￨f (￨f String￨p content￨p )￨f {￨f }￨f public￨f boolean￨f hasNext￨f (￨f )￨f {￨f }￨f public￨f String￨f nextToken￨f (￨f byte￨p delimiter￨p )￨f {￨f }￨f }￨d }￨d
public￨d class￨d ParseStuff￨d {￨d private￨e static￨e boolean￨e useNodeParser￨e ;￨e public￨f static￨f void￨f main￨f (￨f String￨f [￨f ]￨f args￨f )￨f throws￨f RecognitionException￨f (￨f )￨f {￨f }￨f public￨f static￨f void￨f parseWithNodeParser￨f (￨f String￨f s￨f )￨f throws￨f RecognitionException￨f (￨f )￨f {￨f ANTLRStringStream￨e stream￨e =￨e new￨e ANTLRStringStream￨e (￨e s￨e )￨e ;￨e Xpand3NodeLexer￨e lexer￨e =￨e new￨e Xpand3NodeLexer￨e (￨e stream￨e )￨e ;￨e CommonTokenStream￨e tokenStream￨e =￨e new￨e CommonTokenStream￨e (￨e lexer￨e )￨e ;￨e Xpand3NodeParser￨e xpand3NodeParser￨e =￨e new￨e Xpand3NodeParser￨e (￨e tokenStream￨e )￨e ;￨e <START_BUG>￨b Node￨b rootNode￨b =￨b xpand3NodeParser￨b .￨b file￨b (￨b )￨b ;￨b <END_BUG>￨b Node2AstTransformer￨e node2AstTransformer￨e =￨e new￨e Node2AstTransformer￨e (￨e )￨e ;￨e node2AstTransformer￨e .￨e doSwitch￨e (￨e rootNode￨e )￨e ;￨e }￨f private￨f static￨f void￨f checkFor￨f (￨f int￨f extensions￨f )￨f throws￨f RecognitionException￨f (￨f )￨f {￨f }￨f }￨d
public￨d class￨d Jdk14RegexpRegexp￨d extends￨d Jdk14RegexpMatcher￨d implements￨d Regexp￨d {￨d public￨f Jdk14RegexpRegexp￨f (￨f )￨f {￨f }￨f protected￨f int￨f getSubsOptions￨f (￨f int￨p options￨p )￨f {￨f }￨f public￨f String￨f substitute￨f (￨f String￨f input￨f ,￨f String￨f argument￨f ,￨f int￨f options￨f )￨f throws￨f BuildException￨f (￨f )￨f {￨f StringBuffer￨e subst￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e for￨l (￨l int￨c i￨c =￨c 0￨c ;￨c i￨c <￨c (￨c argument￨c .￨c length￨c (￨c )￨c )￨c ;￨c i￨c ++￨c )￨l {￨l char￨e c￨e =￨e argument￨e .￨e charAt￨e (￨e i￨e )￨e ;￨e if￨j (￨j c￨c ==￨c '\\'￨c )￨j {￨j if￨j (￨j (￨c ++￨c i￨c )￨c <￨c (￨c argument￨c .￨c length￨c (￨c )￨c )￨c )￨j {￨j c￨e =￨e argument￨e .￨e charAt￨e (￨e i￨e )￨e ;￨e int￨e value￨e =￨e Character￨e .￨e digit￨e (￨e c￨e ,￨e 10￨e )￨e ;￨e if￨j (￨j value￨c >￨c (￨c -￨c 1￨c )￨c )￨j {￨j <START_BUG>￨b subst￨b .￨b append￨b (￨b "$("￨b )￨b .￨b append￨b (￨b value￨b )￨b .￨b append￨b (￨b ")"￨b )￨b ;￨b <END_BUG>￨b }￨j else￨j {￨j subst￨e .￨e append￨e (￨e c￨e )￨e ;￨e }￨j }￨j else￨j {￨j subst￨e .￨e append￨e (￨e '\\'￨e )￨e ;￨e }￨j }￨j else￨j {￨j subst￨e .￨e append￨e (￨e c￨e )￨e ;￨e }￨j }￨l argument￨e =￨e subst￨e .￨e toString￨e (￨e )￨e ;￨e int￨e sOptions￨e =￨e getSubsOptions￨e (￨e options￨e )￨e ;￨e Pattern￨e p￨e =￨e getCompiledPattern￨e (￨e options￨e )￨e ;￨e StringBuffer￨e sb￨e =￨e new￨e StringBuffer￨e (￨e )￨e ;￨e Matcher￨e m￨e =￨e p￨e .￨e matcher￨e (￨e input￨e )￨e ;￨e if￨j (￨j RegexpUtil￨c .￨c hasFlag￨c (￨c sOptions￨c ,￨c REPLACE_ALL￨c )￨c )￨j {￨j sb￨e .￨e append￨e (￨e m￨e .￨e replaceAll￨e (￨e argument￨e )￨e )￨e ;￨e }￨j else￨j {￨j boolean￨e res￨e =￨e m￨e .￨e find￨e (￨e )￨e ;￨e if￨j (￨j res￨c )￨j {￨j m￨e .￨e appendReplacement￨e (￨e sb￨e ,￨e argument￨e )￨e ;￨e m￨e .￨e appendTail￨e (￨e sb￨e )￨e ;￨e }￨j else￨j {￨j sb￨e .￨e append￨e (￨e input￨e )￨e ;￨e }￨j }￨j return￨e sb￨e .￨e toString￨e (￨e )￨e ;￨e }￨f }￨d
