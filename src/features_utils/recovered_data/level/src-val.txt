public￨1 class￨1 GenericController￨1 extends￨1 AbstractTestElement￨1 implements￨1 Serializable￨1 ,￨1 Controller￨1 ,￨1 PerThreadClonable￨1 {￨1 protected￨2 List￨2 subControllersAndSamplers￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 protected￨2 int￨2 current￨2 ;￨2 protected￨2 Iterator￨2 controlIt￨2 ;￨2 private￨2 List￨2 configs￨2 =￨2 new￨2 LinkedList￨2 (￨2 )￨2 ;￨2 private￨2 boolean￨2 returnedNull￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 done￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 timeForNext￨2 =￨2 false￨2 ;￨2 private￨2 List￨2 assertions￨2 =￨2 new￨2 LinkedList￨2 (￨2 )￨2 ;￨2 public￨2 GenericController￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNextFirst￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 List￨2 getConfigElements￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addConfigElement￨2 (￨2 TestElement￨3 el￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initialize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 reInitialize￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 removeCurrentController￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 resetCurrent￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 incrementCurrent￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 hasNextAtEnd￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 nextAtEnd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasNext￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 currentHasNextIsFalse￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 shortCircuitIsDone￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setShortCircuit￨2 (￨2 boolean￨3 done￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDone￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 TestElement￨2 getCurrentController￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 List￨2 getSubControllers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addTestElement￨2 (￨2 TestElement￨3 child￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addController￨2 (￨2 TestElement￨3 child￨3 )￨2 {￨2 }￨2 public￨2 Sampler￨2 next￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Test￨2 extends￨2 TestCase￨2 {￨2 public￨3 Test￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 public￨3 void￨3 testProcessing￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 GenericController￨4 controller￨4 =￨4 new￨4 GenericController￨4 (￨4 )￨4 ;￨4 GenericController￨4 sub_1￨4 =￨4 new￨4 GenericController￨4 (￨4 )￨4 ;￨4 sub_1￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "one"￨4 )￨4 )￨4 ;￨4 sub_1￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "two"￨4 )￨4 )￨4 ;￨4 controller￨4 .￨4 addTestElement￨4 (￨4 sub_1￨4 )￨4 ;￨4 controller￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "three"￨4 )￨4 )￨4 ;￨4 GenericController￨4 sub_2￨4 =￨4 new￨4 GenericController￨4 (￨4 )￨4 ;￨4 GenericController￨4 sub_3￨4 =￨4 new￨4 GenericController￨4 (￨4 )￨4 ;￨4 sub_2￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "four"￨4 )￨4 )￨4 ;￨4 sub_3￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "five"￨4 )￨4 )￨4 ;￨4 sub_3￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "six"￨4 )￨4 )￨4 ;￨4 sub_2￨4 .￨4 addTestElement￨4 (￨4 sub_3￨4 )￨4 ;￨4 sub_2￨4 .￨4 addTestElement￨4 (￨4 makeSampler￨4 (￨4 "seven"￨4 )￨4 )￨4 ;￨4 controller￨4 .￨4 addTestElement￨4 (￨4 sub_2￨4 )￨4 ;￨4 String￨4 [￨4 ]￨4 order￨4 =￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ;￨4 int￨4 counter￨4 =￨4 7￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 2￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 assertEquals￨5 (￨5 7￨5 ,￨5 counter￨5 )￨5 ;￨5 counter￨5 =￨5 0￨5 ;￨5 while￨5 (￨5 controller￨6 .￨6 hasNext￨6 (￨6 )￨6 )￨5 {￨5 TestElement￨6 sampler￨6 =￨6 controller￨6 .￨6 next￨6 (￨6 )￨6 ;￨6 <START_BUG>￨6 assertEquals￨6 (￨6 order￨6 [￨6 (￨6 counter￨6 ++￨6 )￨6 ]￨6 ,￨6 sampler￨6 .￨6 getProperty￨6 (￨6 NAME￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 }￨3 private￨3 TestElement￨3 makeSampler￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 class￨3 TestSampler￨3 extends￨3 AbstractSampler￨3 implements￨3 PerSampleClonable￨3 {￨3 public￨4 void￨4 addCustomTestElement￨4 (￨4 TestElement￨5 t￨5 )￨4 {￨4 }￨4 public￨4 SampleResult￨4 sample￨4 (￨4 Entry￨5 e￨5 )￨4 {￨4 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 RenameFolderAction￨1 extends￨1 AbstractColumbaAction￨1 implements￨1 ISelectionListener￨1 {￨1 public￨2 RenameFolderAction￨2 (￨2 FrameMediator￨3 frameMediator￨3 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectionChanged￨2 (￨2 SelectionChangedEvent￨3 evt￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 (￨3 org￨3 .￨3 columba￨3 .￨3 mail￨3 .￨3 gui￨3 .￨3 tree￨3 .￨3 selection￨3 .￨3 TreeSelectionChangedEvent￨3 )￨3 (￨3 evt￨3 )￨3 )￨3 .￨3 getSelected￨3 (￨3 )￨3 .￨3 length￨3 )￨3 >￨3 0￨3 )￨3 {￨3 <END_BUG>￨3 AbstractFolder￨3 folder￨3 =￨3 (￨3 (￨3 org￨3 .￨3 columba￨3 .￨3 mail￨3 .￨3 gui￨3 .￨3 tree￨3 .￨3 selection￨3 .￨3 TreeSelectionChangedEvent￨3 )￨3 (￨3 evt￨3 )￨3 )￨3 .￨3 getSelected￨3 (￨3 )￨3 [￨3 0￨3 ]￨3 ;￨3 if￨3 (￨3 (￨4 folder￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 folder￨4 instanceof￨4 AbstractMessageFolder￨4 )￨4 )￨3 {￨3 IFolderItem￨4 item￨4 =￨4 folder￨4 .￨4 getConfiguration￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 item￨5 .￨5 getString￨5 (￨5 "property"￨5 ,￨5 "accessrights"￨5 )￨5 .￨5 equals￨5 (￨5 "user"￨5 )￨5 )￨4 {￨4 setEnabled￨5 (￨5 true￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 setEnabled￨5 (￨5 false￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 setEnabled￨4 (￨4 false￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ResourceUrlEncodingFilter￨1 extends￨1 OncePerRequestFilter￨1 {￨1 private￨2 static￨2 final￨2 Log￨2 logger￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 ResourceUrlEncodingFilter￨2 .￨2 class￨2 )￨2 ;￨2 @￨2 Override￨2 protected￨2 void￨2 doFilterInternal￨2 (￨2 HttpServletRequest￨2 request￨2 ,￨2 HttpServletResponse￨2 response￨2 ,￨2 FilterChain￨2 filterChain￨2 )￨2 throws￨2 IOException￨2 ,￨2 ServletException￨2 {￨2 }￨2 private￨2 static￨2 class￨2 ResourceUrlEncodingResponseWrapper￨2 extends￨2 HttpServletResponseWrapper￨2 {￨2 private￨3 HttpServletRequest￨3 request￨3 ;￨3 private￨3 Integer￨3 indexLookupPath￨3 ;￨3 private￨3 ResourceUrlEncodingResponseWrapper￨3 (￨3 HttpServletRequest￨4 request￨4 ,￨4 HttpServletResponse￨4 wrapped￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 encodeURL￨3 (￨3 String￨4 url￨4 )￨3 {￨3 }￨3 private￨3 ResourceUrlProvider￨3 getResourceUrlProvider￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 initIndexLookupPath￨3 (￨3 ResourceUrlProvider￨4 urlProvider￨4 )￨3 {￨3 if￨4 (￨4 (￨5 this￨5 .￨5 indexLookupPath￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 String￨5 requestUri￨5 =￨5 urlProvider￨5 .￨5 getPathHelper￨5 (￨5 )￨5 .￨5 getRequestUri￨5 (￨5 this￨5 .￨5 request￨5 )￨5 ;￨5 String￨5 lookupPath￨5 =￨5 urlProvider￨5 .￨5 getPathHelper￨5 (￨5 )￨5 .￨5 getLookupPathForRequest￨5 (￨5 this￨5 .￨5 request￨5 )￨5 ;￨5 <START_BUG>￨5 this￨5 .￨5 indexLookupPath￨5 =￨5 requestUri￨5 .￨5 indexOf￨5 (￨5 lookupPath￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 TextFile￨1 extends￨1 File￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 encoding￨2 =￨2 null￨2 ;￨2 public￨2 TextFile￨2 (￨2 File￨3 filename￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 public￨2 TextFile￨2 (￨2 File￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 TextFile￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 TextFile￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 body￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 String￨3 lineEnd￨3 =￨3 System￨3 .￨3 getProperty￨3 (￨3 "line.separator"￨3 )￨3 ;￨3 <START_BUG>￨3 StringBuffer￨3 sb￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 Reader￨3 reader￨3 =￨3 null￨3 ;￨3 BufferedReader￨3 br￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 (￨5 encoding￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 reader￨5 =￨5 new￨5 FileReader￨5 (￨5 this￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 reader￨5 =￨5 new￨5 InputStreamReader￨5 (￨5 new￨5 FileInputStream￨5 (￨5 this￨5 )￨5 ,￨5 encoding￨5 )￨5 ;￨5 }￨4 br￨4 =￨4 new￨4 BufferedReader￨4 (￨4 reader￨4 )￨4 ;￨4 String￨4 line￨4 =￨4 "NOTNULL"￨4 ;￨4 while￨4 (￨4 line￨5 !=￨5 null￨5 )￨4 {￨4 line￨5 =￨5 br￨5 .￨5 readLine￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 line￨6 !=￨6 null￨6 )￨5 {￨5 sb￨6 .￨6 append￨6 (￨6 (￨6 line￨6 +￨6 lineEnd￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 ioe￨4 )￨3 {￨3 TextFile￨4 .￨4 log￨4 .￨4 error￨4 (￨4 ""￨4 ,￨4 ioe￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 JOrphanUtils￨4 .￨4 closeQuietly￨4 (￨4 br￨4 )￨4 ;￨4 }￨3 return￨3 sb￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 getEncoding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setEncoding￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DigestAlgorithm￨1 implements￨1 Algorithm￨1 {￨1 private￨2 static￨2 final￨2 int￨2 BYTE_MASK￨2 =￨2 255￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 BUFFER_SIZE￨2 =￨2 8192￨2 ;￨2 private￨2 String￨2 algorithm￨2 =￨2 "MD5"￨2 ;￨2 private￨2 String￨2 provider￨2 =￨2 null￨2 ;￨2 private￨2 MessageDigest￨2 messageDigest￨2 =￨2 null￨2 ;￨2 private￨2 int￨2 readBufferSize￨2 =￨2 DigestAlgorithm￨2 .￨2 BUFFER_SIZE￨2 ;￨2 public￨2 void￨2 setAlgorithm￨2 (￨2 String￨3 algorithm￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setProvider￨2 (￨2 String￨3 provider￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initMessageDigest￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isValid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getValue￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 StringBuffer￨3 buf￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 buf￨3 .￨3 append￨3 (￨3 "<DigestAlgorithm:"￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 "algorithm="￨3 )￨3 .￨3 append￨3 (￨3 algorithm￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 ";provider="￨3 )￨3 .￨3 append￨3 (￨3 provider￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 ">"￨3 )￨3 ;￨3 return￨3 buf￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ChangePassword￨1 extends￨1 ScarabTemplateAction￨1 {￨1 public￨2 void￨2 doChangepassword￨2 (￨2 RunData￨2 data￨2 ,￨2 TemplateContext￨2 context￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 String￨3 template￨3 =￨3 getCurrentTemplate￨3 (￨3 data￨3 ,￨3 null￨3 )￨3 ;￨3 String￨3 nextTemplate￨3 =￨3 getNextTemplate￨3 (￨3 data￨3 ,￨3 template￨3 )￨3 ;￨3 IntakeTool￨3 intake￨3 =￨3 getIntakeTool￨3 (￨3 context￨3 )￨3 ;￨3 if￨3 (￨3 intake￨4 .￨4 isAllValid￨4 (￨4 )￨4 )￨3 {￨3 Object￨4 user￨4 =￨4 data￨4 .￨4 getUser￨4 (￨4 )￨4 .￨4 getTemp￨4 (￨4 SESSION_REGISTER￨4 )￨4 ;￨4 Group￨4 register￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 user￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 user￨5 instanceof￨5 ScarabUser￨5 )￨5 )￨4 {￨4 register￨5 =￨5 intake￨5 .￨5 get￨5 (￨5 "Register"￨5 ,￨5 (￨5 (￨5 ScarabUser￨5 )￨5 (￨5 user￨5 )￨5 )￨5 .￨5 getQueryKey￨5 (￨5 )￨5 ,￨5 false￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 register￨5 =￨5 intake￨5 .￨5 get￨5 (￨5 "Register"￨5 ,￨5 DEFAULT_KEY￨5 ,￨5 false￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 String￨4 username￨4 =￨4 register￨4 .￨4 get￨4 (￨4 "Email"￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 String￨4 oldPassword￨4 =￨4 register￨4 .￨4 get￨4 (￨4 "OldPassword"￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 String￨4 password￨4 =￨4 register￨4 .￨4 get￨4 (￨4 "Password"￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 String￨4 passwordConfirm￨4 =￨4 register￨4 .￨4 get￨4 (￨4 "PasswordConfirm"￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 oldPassword￨5 .￨5 equals￨5 (￨5 password￨5 )￨5 )￨4 {￨4 getScarabRequestTool￨5 (￨5 context￨5 )￨5 .￨5 setInfoMessage￨5 (￨5 (￨5 "Your<seq2seq4repair_space>new<seq2seq4repair_space>password<seq2seq4repair_space>was<seq2seq4repair_space>the<seq2seq4repair_space>same<seq2seq4repair_space>as<seq2seq4repair_space>your<seq2seq4repair_space>old<seq2seq4repair_space>one.<seq2seq4repair_space>"￨5 +￨5 "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>not<seq2seq4repair_space>been<seq2seq4repair_space>changed!"￨5 )￨5 )￨5 ;￨5 setTarget￨5 (￨5 data￨5 ,￨5 template￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 password￨5 .￨5 equals￨5 (￨5 passwordConfirm￨5 )￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 ScarabUser￨6 confirmedUser￨6 =￨6 (￨6 (￨6 ScarabUser￨6 )￨6 (￨6 TurbineSecurity￨6 .￨6 getUser￨6 (￨6 username￨6 )￨6 )￨6 )￨6 ;￨6 confirmedUser￨6 .￨6 setPasswordExpire￨6 (￨6 )￨6 ;￨6 confirmedUser￨6 .￨6 setHasLoggedIn￨6 (￨6 Boolean￨6 .￨6 FALSE￨6 )￨6 ;￨6 data￨6 .￨6 setUser￨6 (￨6 confirmedUser￨6 )￨6 ;￨6 data￨6 .￨6 save￨6 (￨6 )￨6 ;￨6 TurbineSecurity￨6 .￨6 changePassword￨6 (￨6 confirmedUser￨6 ,￨6 oldPassword￨6 ,￨6 password￨6 )￨6 ;￨6 getScarabRequestTool￨6 (￨6 context￨6 )￨6 .￨6 setConfirmMessage￨6 (￨6 (￨6 "Your<seq2seq4repair_space>password<seq2seq4repair_space>has<seq2seq4repair_space>been<seq2seq4repair_space>changed."￨6 +￨6 "<seq2seq4repair_space>Please<seq2seq4repair_space>login<seq2seq4repair_space>with<seq2seq4repair_space>your<seq2seq4repair_space>new<seq2seq4repair_space>password."￨6 )￨6 )￨6 ;￨6 setTarget￨6 (￨6 data￨6 ,￨6 "Login.vm"￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 PasswordMismatchException￨6 pme￨6 )￨5 {￨5 getScarabRequestTool￨6 (￨6 context￨6 )￨6 .￨6 setAlertMessage￨6 (￨6 pme￨6 .￨6 getMessage￨6 (￨6 )￨6 )￨6 ;￨6 setTarget￨6 (￨6 data￨6 ,￨6 template￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 getScarabRequestTool￨5 (￨5 context￨5 )￨5 .￨5 setAlertMessage￨5 (￨5 "The<seq2seq4repair_space>passwords<seq2seq4repair_space>you<seq2seq4repair_space>entered<seq2seq4repair_space>do<seq2seq4repair_space>not<seq2seq4repair_space>match!"￨5 )￨5 ;￨5 setTarget￨5 (￨5 data￨5 ,￨5 template￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 }￨1
public￨1 }￨2 void￨2 setBackgroundPixel￨2 (￨2 int￨3 pixel￨3 )￨2 {￨2 }￨2 void￨2 setCheckboxImageListColor￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setCheckboxImageList￨2 (￨2 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 void￨2 setFocusIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 Font￨3 font￨3 )￨2 {￨2 }￨2 void￨2 setForegroundPixel￨2 (￨2 int￨3 pixel￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setHeaderVisible￨2 (￨2 boolean￨3 show￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setItemCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 void￨2 setItemHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setLinesVisible￨2 (￨2 boolean￨3 show￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRedraw￨2 (￨2 boolean￨3 redraw￨3 )￨2 {￨2 }￨2 boolean￨2 setScrollWidth￨2 (￨2 TableItem￨3 item￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 [￨3 ]￨3 indices￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 TableItem￨3 [￨3 ]￨3 items￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 void￨2 setTableEmpty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTopIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showColumn￨2 (￨2 TableColumn￨3 column￨3 )￨2 {￨2 }￨2 void￨2 showItem￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showItem￨2 (￨2 TableItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showSelection￨2 (￨2 )￨2 {￨2 }￨2 String￨2 toolTipText￨2 (￨2 NMTTDISPINFO￨3 hdr￨3 )￨2 {￨2 }￨2 int￨2 widgetStyle￨2 (￨2 )￨2 {￨2 }￨2 TCHAR￨2 windowClass￨2 (￨2 )￨2 {￨2 }￨2 int￨2 windowProc￨2 (￨2 )￨2 {￨2 }￨2 LRESULT￨2 WM_CHAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_ERASEBKGND￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_GETOBJECT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_KEYDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONDBLCLK￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSEHOVER￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PAINT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NOTIFY￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 NMHDR￨3 hdr￨3 =￨3 new￨3 NMHDR￨3 (￨3 )￨3 ;￨3 OS￨3 .￨3 MoveMemory￨3 (￨3 hdr￨3 ,￨3 lParam￨3 ,￨3 sizeof￨3 )￨3 ;￨3 int￨3 hwndHeader￨3 =￨3 OS￨3 .￨3 SendMessage￨3 (￨3 handle￨3 ,￨3 LVM_GETHEADER￨3 ,￨3 0￨3 ,￨3 0￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 hdr￨4 .￨4 hwndFrom￨4 )￨4 ==￨4 hwndHeader￨4 )￨3 {￨3 switch￨4 (￨4 hdr￨4 .￨4 code￨4 )￨4 {￨4 case￨5 OS￨5 .￨5 HDN_BEGINTRACKW￨5 :￨5 case￨5 OS￨5 .￨5 HDN_BEGINTRACKA￨5 :￨5 case￨5 OS￨5 .￨5 HDN_DIVIDERDBLCLICKW￨5 :￨5 case￨5 OS￨5 .￨5 HDN_DIVIDERDBLCLICKA￨5 :￨5 {￨6 NMHEADER￨6 phdn￨6 =￨6 new￨6 NMHEADER￨6 (￨6 )￨6 ;￨6 OS￨6 .￨6 MoveMemory￨6 (￨6 phdn￨6 ,￨6 lParam￨6 ,￨6 NMHEADER￨6 .￨6 sizeof￨6 )￨6 ;￨6 TableColumn￨6 column￨6 =￨6 columns￨6 [￨6 phdn￨6 .￨6 iItem￨6 ]￨6 ;￨6 if￨6 (￨6 (￨7 column￨7 !=￨7 null￨7 )￨7 &&￨7 (￨7 !￨7 (￨7 column￨7 .￨7 getResizable￨7 (￨7 )￨7 )￨7 )￨7 )￨6 {￨6 return￨7 LRESULT￨7 .￨7 ONE￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 OS￨5 .￨5 HDN_ITEMCHANGEDW￨5 :￨5 case￨5 OS￨5 .￨5 HDN_ITEMCHANGEDA￨5 :￨5 {￨6 int￨6 width￨6 =￨6 OS￨6 .￨6 SendMessage￨6 (￨6 handle￨6 ,￨6 LVM_GETCOLUMNWIDTH￨6 ,￨6 0￨6 ,￨6 0￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 (￨7 lastWidth￨7 )￨7 ==￨7 0￨7 )￨7 &&￨7 (￨7 width￨7 >￨7 0￨7 )￨7 )￨6 {￨6 int￨7 bits￨7 =￨7 OS￨7 .￨7 SendMessage￨7 (￨7 handle￨7 ,￨7 LVM_GETEXTENDEDLISTVIEWSTYLE￨7 ,￨7 0￨7 ,￨7 0￨7 )￨7 ;￨7 if￨7 (￨7 (￨8 bits￨8 &￨8 (￨8 OS￨8 .￨8 LVS_EX_GRIDLINES￨8 )￨8 )￨8 !=￨8 0￨8 )￨7 {￨7 RECT￨8 rect￨8 =￨8 new￨8 RECT￨8 (￨8 )￨8 ;￨8 OS￨8 .￨8 GetClientRect￨8 (￨8 handle￨8 ,￨8 rect￨8 )￨8 ;￨8 rect￨8 .￨8 right￨8 =￨8 (￨8 rect￨8 .￨8 left￨8 )￨8 +￨8 width￨8 ;￨8 OS￨8 .￨8 InvalidateRect￨8 (￨8 handle￨8 ,￨8 rect￨8 ,￨8 true￨8 )￨8 ;￨8 }￨7 }￨6 lastWidth￨6 =￨6 width￨6 ;￨6 if￨6 (￨6 !￨7 (￨7 ignoreResize￨7 )￨7 )￨6 {￨6 NMHEADER￨7 phdn￨7 =￨7 new￨7 NMHEADER￨7 (￨7 )￨7 ;￨7 OS￨7 .￨7 MoveMemory￨7 (￨7 phdn￨7 ,￨7 lParam￨7 ,￨7 NMHEADER￨7 .￨7 sizeof￨7 )￨7 ;￨7 if￨7 (￨7 (￨8 phdn￨8 .￨8 pitem￨8 )￨8 !=￨8 0￨8 )￨7 {￨7 HDITEM￨8 pitem￨8 =￨8 new￨8 HDITEM￨8 (￨8 )￨8 ;￨8 OS￨8 .￨8 MoveMemory￨8 (￨8 pitem￨8 ,￨8 phdn￨8 .￨8 pitem￨8 ,￨8 HDITEM￨8 .￨8 sizeof￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 (￨9 pitem￨9 .￨9 mask￨9 )￨9 &￨9 (￨9 OS￨9 .￨9 HDI_WIDTH￨9 )￨9 )￨9 !=￨9 0￨9 )￨8 {￨8 TableColumn￨9 column￨9 =￨9 columns￨9 [￨9 phdn￨9 .￨9 iItem￨9 ]￨9 ;￨9 if￨9 (￨9 column￨10 !=￨10 null￨10 )￨9 {￨9 column￨10 .￨10 sendEvent￨10 (￨10 Resize￨10 )￨10 ;￨10 if￨10 (￨10 isDisposed￨11 (￨11 )￨11 )￨10 {￨10 return￨11 LRESULT￨11 .￨11 ZERO￨11 ;￨11 }￨10 int￨10 count￨10 =￨10 OS￨10 .￨10 SendMessage￨10 (￨10 hwndHeader￨10 ,￨10 HDM_GETITEMCOUNT￨10 ,￨10 0￨10 ,￨10 0￨10 )￨10 ;￨10 if￨10 (￨10 (￨11 count￨11 ==￨11 1￨11 )￨11 &&￨11 (￨11 (￨11 columns￨11 [￨11 0￨11 ]￨11 )￨11 ==￨11 null￨11 )￨11 )￨10 {￨10 count￨11 =￨11 0￨11 ;￨11 }￨10 TableColumn￨10 [￨10 ]￨10 newColumns￨10 =￨10 new￨10 TableColumn￨10 [￨10 count￨10 ]￨10 ;￨10 System￨10 .￨10 arraycopy￨10 (￨10 columns￨10 ,￨10 0￨10 ,￨10 newColumns￨10 ,￨10 0￨10 ,￨10 count￨10 )￨10 ;￨10 for￨10 (￨10 int￨11 i￨11 =￨11 (￨11 phdn￨11 .￨11 iItem￨11 )￨11 +￨11 1￨11 ;￨11 i￨11 <￨11 count￨11 ;￨11 i￨11 ++￨11 )￨10 {￨10 <START_BUG>￨11 if￨11 (￨11 (￨11 (￨11 newColumns￨11 [￨11 i￨11 ]￨11 )￨11 !=￨11 null￨11 )￨11 &&￨11 (￨11 !￨11 (￨11 newColumns￨11 [￨11 i￨11 ]￨11 .￨11 isDisposed￨11 (￨11 )￨11 )￨11 )￨11 )￨11 {￨11 <END_BUG>￨11 newColumns￨11 [￨11 i￨11 ]￨11 .￨11 sendEvent￨11 (￨11 Move￨11 )￨11 ;￨11 }￨10 }￨9 }￨8 }￨7 }￨6 break￨6 ;￨6 case￨5 OS￨5 .￨5 HDN_ITEMDBLCLICKW￨5 :￨5 case￨5 OS￨5 .￨5 HDN_ITEMDBLCLICKA￨5 :￨5 {￨6 NMHEADER￨6 phdn￨6 =￨6 new￨6 NMHEADER￨6 (￨6 )￨6 ;￨6 OS￨6 .￨6 MoveMemory￨6 (￨6 phdn￨6 ,￨6 lParam￨6 ,￨6 NMHEADER￨6 .￨6 sizeof￨6 )￨6 ;￨6 TableColumn￨6 column￨6 =￨6 columns￨6 [￨6 phdn￨6 .￨6 iItem￨6 ]￨6 ;￨6 if￨6 (￨6 column￨7 !=￨7 null￨7 )￨6 {￨6 column￨7 .￨7 postEvent￨7 (￨7 DefaultSelection￨7 )￨7 ;￨7 }￨6 break￨6 ;￨6 }￨4 }￨3 return￨3 super￨3 .￨3 WM_NOTIFY￨3 (￨3 wParam￨3 ,￨3 lParam￨3 )￨3 ;￨3 }￨2 LRESULT￨2 WM_RBUTTONDBLCLK￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_RBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETFOCUS￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SIZE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SYSCOLORCHANGE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_VSCROLL￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_WINDOWPOSCHANGED￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmNotifyChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 }￨1
class￨1 (￨7 baseValidator￨7 .￨7 getVariety￨7 (￨7 )￨7 )￨7 ==￨7 (￨7 XSSimpleType￨7 .￨7 VARIETY_UNION￨7 )￨7 )￨6 {￨6 XSSimpleType￨7 [￨7 ]￨7 types￨7 =￨7 (￨7 (￨7 org￨7 .￨7 apache￨7 .￨7 xerces￨7 .￨7 impl￨7 .￨7 dv￨7 .￨7 XSUnionSimpleType￨7 )￨7 (￨7 baseValidator￨7 )￨7 )￨7 .￨7 getMemberTypes￨7 (￨7 )￨7 ;￨7 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 (￨8 types￨8 .￨8 length￨8 )￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 dTValidators￨8 .￨8 addElement￨8 (￨8 types￨8 [￨8 j￨8 ]￨8 )￨8 ;￨8 }￨7 }￨6 else￨6 {￨6 dTValidators￨7 .￨7 addElement￨7 (￨7 baseValidator￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 if￨3 (￨3 baseTypeName￨4 ==￨4 null￨4 )￨3 {￨3 content￨4 =￨4 DOMUtil￨4 .￨4 getNextSiblingElement￨4 (￨4 content￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 content￨4 =￨4 DOMUtil￨4 .￨4 getFirstChildElement￨4 (￨4 content￨4 )￨4 ;￨4 if￨4 (￨4 content￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 DOMUtil￨6 .￨6 getLocalName￨6 (￨6 content￨6 )￨6 .￨6 equals￨6 (￨6 ELT_ANNOTATION￨6 )￨6 )￨5 {￨5 traverseAnnotationDecl￨6 (￨6 content￨6 ,￨6 attrValues￨6 ,￨6 false￨6 ,￨6 schemaDoc￨6 )￨6 ;￨6 content￨6 =￨6 DOMUtil￨6 .￨6 getNextSiblingElement￨6 (￨6 content￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 union￨4 )￨3 {￨3 if￨4 (￨4 memberTypes￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 content￨6 !=￨6 null￨6 )￨5 {￨5 if￨6 (￨6 DOMUtil￨7 .￨7 getLocalName￨7 (￨7 content￨7 )￨7 .￨7 equals￨7 (￨7 ELT_ANNOTATION￨7 )￨7 )￨6 {￨6 traverseAnnotationDecl￨7 (￨7 content￨7 ,￨7 attrValues￨7 ,￨7 false￨7 ,￨7 schemaDoc￨7 )￨7 ;￨7 content￨7 =￨7 DOMUtil￨7 .￨7 getNextSiblingElement￨7 (￨7 content￨7 )￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 content￨6 !=￨6 null￨6 )￨5 {￨5 if￨6 (￨6 DOMUtil￨7 .￨7 getLocalName￨7 (￨7 content￨7 )￨7 .￨7 equals￨7 (￨7 ELT_ANNOTATION￨7 )￨7 )￨6 {￨6 Object￨7 [￨7 ]￨7 args￨7 =￨7 new￨7 Object￨7 [￨7 ]￨7 (￨7 )￨7 {￨7 }￨7 ;￨7 reportSchemaError￨7 (￨7 "dt-union-memberType"￨7 ,￨7 args￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 while￨4 (￨4 content￨5 !=￨5 null￨5 )￨4 {￨4 baseValidator￨5 =￨5 traverseLocal￨5 (￨5 content￨5 ,￨5 schemaDoc￨5 ,￨5 grammar￨5 )￨5 ;￨5 if￨5 (￨5 baseValidator￨6 !=￨6 null￨6 )￨5 {￨5 if￨6 (￨6 (￨7 (￨7 fListName￨7 .￨7 length￨7 (￨7 )￨7 )￨7 !=￨7 0￨7 )￨7 &&￨7 (￨7 (￨7 baseValidator￨7 .￨7 getVariety￨7 (￨7 )￨7 )￨7 ==￨7 (￨7 XSSimpleType￨7 .￨7 VARIETY_LIST￨7 )￨7 )￨7 )￨6 {￨6 reportCosListOfAtomic￨7 (￨7 qualifiedName￨7 )￨7 ;￨7 return￨7 null￨7 ;￨7 }￨6 if￨6 (￨6 (￨7 baseValidator￨7 .￨7 getVariety￨7 (￨7 )￨7 )￨7 ==￨7 (￨7 XSSimpleType￨7 .￨7 VARIETY_UNION￨7 )￨7 )￨6 {￨6 XSSimpleType￨7 [￨7 ]￨7 types￨7 =￨7 (￨7 (￨7 org￨7 .￨7 apache￨7 .￨7 xerces￨7 .￨7 impl￨7 .￨7 dv￨7 .￨7 XSUnionSimpleType￨7 )￨7 (￨7 baseValidator￨7 )￨7 )￨7 .￨7 getMemberTypes￨7 (￨7 )￨7 ;￨7 for￨7 (￨7 int￨8 i￨8 =￨8 0￨8 ;￨8 i￨8 <￨8 (￨8 types￨8 .￨8 length￨8 )￨8 ;￨8 i￨8 ++￨8 )￨7 {￨7 dTValidators￨8 .￨8 addElement￨8 (￨8 types￨8 [￨8 i￨8 ]￨8 )￨8 ;￨8 }￨7 }￨6 else￨6 {￨6 dTValidators￨7 .￨7 addElement￨7 (￨7 baseValidator￨7 )￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 baseValidator￨6 ==￨6 null￨6 )￨5 {￨5 Object￨6 [￨6 ]￨6 args￨6 =￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 ;￨6 reportSchemaError￨6 (￨6 "dt-unknown-basetype"￨6 ,￨6 args￨6 )￨6 ;￨6 baseValidator￨6 =￨6 SchemaGrammar￨6 .￨6 fAnySimpleType￨6 ;￨6 }￨5 content￨5 =￨5 DOMUtil￨5 .￨5 getNextSiblingElement￨5 (￨5 content￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 fListName￨4 .￨4 length￨4 (￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 if￨4 (￨4 fListName￨5 .￨5 equals￨5 (￨5 qualifiedName￨5 )￨5 )￨4 {￨4 fListName￨5 =￨5 SchemaSymbols￨5 .￨5 EMPTY_STRING￨5 ;￨5 }￨4 }￨3 XSFacets￨3 facetData￨3 =￨3 null￨3 ;￨3 short￨3 presentFacets￨3 =￨3 0￨3 ;￨3 short￨3 fixedFacets￨3 =￨3 0￨3 ;￨3 if￨3 (￨3 restriction￨4 &&￨4 (￨4 content￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 FacetInfo￨4 fi￨4 =￨4 traverseFacets￨4 (￨4 content￨4 ,￨4 contentAttrs￨4 ,￨4 nameProperty￨4 ,￨4 baseValidator￨4 ,￨4 schemaDoc￨4 ,￨4 grammar￨4 )￨4 ;￨4 content￨4 =￨4 fi￨4 .￨4 nodeAfterFacets￨4 ;￨4 if￨4 (￨4 content￨5 !=￨5 null￨5 )￨4 {￨4 content￨5 =￨5 null￨5 ;￨5 reportSchemaError￨5 (￨5 "s4s-elt-must-match"￨5 ,￨5 new￨5 Object￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 )￨5 ;￨5 }￨4 facetData￨4 =￨4 fi￨4 .￨4 facetdata￨4 ;￨4 presentFacets￨4 =￨4 fi￨4 .￨4 fPresentFacets￨4 ;￨4 fixedFacets￨4 =￨4 fi￨4 .￨4 fFixedFacets￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 list￨4 &&￨4 (￨4 content￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 if￨4 (￨4 baseTypeName￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 DOMUtil￨6 .￨6 getLocalName￨6 (￨6 content￨6 )￨6 .￨6 equals￨6 (￨6 ELT_ANNOTATION￨6 )￨6 )￨5 {￨5 traverseAnnotationDecl￨6 (￨6 content￨6 ,￨6 attrValues￨6 ,￨6 false￨6 ,￨6 schemaDoc￨6 )￨6 ;￨6 content￨6 =￨6 DOMUtil￨6 .￨6 getNextSiblingElement￨6 (￨6 content￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 content￨6 !=￨6 null￨6 )￨5 {￨5 Object￨6 [￨6 ]￨6 args￨6 =￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 ;￨6 reportSchemaError￨6 (￨6 "dt-list-itemType"￨6 ,￨6 args￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 reportSchemaError￨5 (￨5 "s4s-elt-must-match"￨5 ,￨5 new￨5 Object￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 union￨4 &&￨4 (￨4 content￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 reportSchemaError￨4 (￨4 "s4s-elt-must-match"￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 XSSimpleType￨3 newDecl￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 list￨4 )￨3 {￨3 newDecl￨4 =￨4 schemaFactory￨4 .￨4 createTypeList￨4 (￨4 nameProperty￨4 ,￨4 schemaDoc￨4 .￨4 fTargetNamespace￨4 ,￨4 (￨4 (￨4 short￨4 )￨4 (￨4 finalProperty￨4 )￨4 )￨4 ,￨4 baseValidator￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 restriction￨4 )￨3 {￨3 newDecl￨4 =￨4 schemaFactory￨4 .￨4 createTypeRestriction￨4 (￨4 nameProperty￨4 ,￨4 schemaDoc￨4 .￨4 fTargetNamespace￨4 ,￨4 (￨4 (￨4 short￨4 )￨4 (￨4 finalProperty￨4 )￨4 )￨4 ,￨4 baseValidator￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 fValidationState￨5 .￨5 setNamespaceSupport￨5 (￨5 schemaDoc￨5 .￨5 fNamespaceSupport￨5 )￨5 ;￨5 newDecl￨5 .￨5 applyFacets￨5 (￨5 facetData￨5 ,￨5 presentFacets￨5 ,￨5 fixedFacets￨5 ,￨5 fValidationState￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 InvalidDatatypeFacetException￨5 ex￨5 )￨4 {￨4 <START_BUG>￨5 reportGenericSchemaError￨5 (￨5 (￨5 (￨5 (￨5 "facet<seq2seq4repair_space>error<seq2seq4repair_space>when<seq2seq4repair_space>creating<seq2seq4repair_space>type<seq2seq4repair_space>'"￨5 +￨5 qualifiedName￨5 )￨5 +￨5 "':<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 ex￨5 .￨5 getLocalizedMessage￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 else￨3 {￨3 XSSimpleType￨4 [￨4 ]￨4 memberDecls￨4 =￨4 new￨4 XSSimpleType￨4 [￨4 dTValidators￨4 .￨4 size￨4 (￨4 )￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 dTValidators￨5 .￨5 size￨5 (￨5 )￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 memberDecls￨5 [￨5 i￨5 ]￨5 =￨5 (￨5 (￨5 XSSimpleType￨5 )￨5 (￨5 dTValidators￨5 .￨5 elementAt￨5 (￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 newDecl￨4 =￨4 schemaFactory￨4 .￨4 createTypeUnion￨4 (￨4 nameProperty￨4 ,￨4 schemaDoc￨4 .￨4 fTargetNamespace￨4 ,￨4 (￨4 (￨4 short￨4 )￨4 (￨4 finalProperty￨4 )￨4 )￨4 ,￨4 memberDecls￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 nameProperty￨4 ==￨4 null￨4 )￨4 &&￨4 isGlobal￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 newDecl￨4 !=￨4 null￨4 )￨4 &&￨4 isGlobal￨4 )￨3 {￨3 grammar￨4 .￨4 addGlobalTypeDecl￨4 (￨4 newDecl￨4 )￨4 ;￨4 }￨3 return￨3 newDecl￨3 ;￨3 }￨2 private￨2 void￨2 reportCosListOfAtomic￨2 (￨2 String￨3 qualifiedName￨3 )￨2 {￨2 }￨2 private￨2 XSSimpleType￨2 findDTValidator￨2 (￨2 Element￨3 elm￨3 ,￨3 QName￨3 baseTypeStr￨3 ,￨3 short￨3 baseRefContext￨3 ,￨3 XSDocumentInfo￨3 schemaDoc￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isListDatatype￨2 (￨2 XSSimpleType￨3 validator￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WarWebXmlInterceptor￨1 extends￨1 BaseInterceptor￨1 implements￨1 ContextInterceptor￨1 {￨1 private￨2 static￨2 StringManager￨2 sm￨2 =￨2 StringManager￨2 .￨2 getManager￨2 (￨2 "org.apache.tomcat.core"￨2 )￨2 ;￨2 public￨2 WarWebXmlInterceptor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 contextInit￨2 (￨2 Context￨3 ctx￨3 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 ctx￨4 .￨4 getDocumentBase￨4 (￨4 )￨4 .￨4 getProtocol￨4 (￨4 )￨4 .￨4 equalsIgnoreCase￨4 (￨4 "war"￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 WebApplicationReader￨3 webXmlReader￨3 =￨3 new￨3 WebApplicationReader￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 webXmlReader￨4 .￨4 processDefaultWebApp￨4 (￨4 ctx￨4 )￨4 ;￨4 String￨4 s￨4 =￨4 ctx￨4 .￨4 getDocumentBase￨4 (￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 s￨5 .￨5 endsWith￨5 (￨5 "/"￨5 )￨5 )￨4 {￨4 s￨5 =￨5 s￨5 .￨5 substring￨5 (￨5 0￨5 ,￨5 (￨5 (￨5 s￨5 .￨5 length￨5 (￨5 )￨5 )￨5 -￨5 1￨5 )￨5 )￨5 ;￨5 }￨4 URL￨4 webURL￨4 =￨4 null￨4 ;￨4 <START_BUG>￨4 webURL￨4 =￨4 new￨4 URL￨4 (￨4 (￨4 (￨4 s￨4 +￨4 "!/"￨4 )￨4 +￨4 (￨4 Constants￨4 .￨4 Context￨4 .￨4 ConfigFile￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 InputStream￨4 is￨4 =￨4 webURL￨4 .￨4 openConnection￨4 (￨4 )￨4 .￨4 getInputStream￨4 (￨4 )￨4 ;￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 (￨4 (￨4 "Context("￨4 +￨4 (￨4 ctx￨4 .￨4 getPath￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "):<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 webURL￨4 .￨4 getFile￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 webXmlReader￨4 .￨4 processWebApp￨4 (￨4 ctx￨4 ,￨4 is￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 String￨4 msg￨4 =￨4 WarWebXmlInterceptor￨4 .￨4 sm￨4 .￨4 getString￨4 (￨4 "context.getConfig.e"￨4 ,￨4 (￨4 (￨4 (￨4 ctx￨4 .￨4 getPath￨4 (￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 ctx￨4 .￨4 getDocBase￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 Choices￨1 <￨1 T￨1 >￨1 extends￨1 AbstractOptions￨1 <￨1 T￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 public￨2 Choices￨2 (￨2 String￨3 id￨3 ,￨3 Palette￨3 <￨3 T￨3 >￨3 palette￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 ComponentTag￨3 tag￨3 )￨2 {￨2 super￨3 .￨3 onComponentTag￨3 (￨3 tag￨3 )￨3 ;￨3 IValueMap￨3 attrs￨3 =￨3 tag￨3 .￨3 getAttributes￨3 (￨3 )￨3 ;￨3 String￨3 onFocus￨3 =￨3 Choices￨3 .￨3 getPalette￨3 (￨3 )￨3 .￨3 getChoicesOnFocusJS￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 onFocus￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 attrs￨4 .￨4 put￨4 (￨4 "onFocus"￨4 ,￨4 onFocus￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 tag￨3 .￨3 getAttributes￨3 (￨3 )￨3 .￨3 put￨3 (￨3 "ondblclick"￨3 ,￨3 Choices￨3 .￨3 getPalette￨3 (￨3 )￨3 .￨3 getAddOnClickJS￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 Iterator￨2 <￨2 T￨2 >￨2 getOptionsIterator￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CodeFlow￨1 implements￨1 Opcodes￨1 {￨1 private￨2 final￨2 Stack￨2 <￨2 ArrayList￨2 <￨2 String￨2 >￨2 >￨2 compilationScopes￨2 ;￨2 public￨2 CodeFlow￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 loadTarget￨2 (￨2 MethodVisitor￨3 mv￨3 )￨2 {￨2 }￨2 public￨2 void￨2 pushDescriptor￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 <START_BUG>￨3 Assert￨3 .￨3 notNull￨3 (￨3 descriptor￨3 )￨3 ;￨3 <END_BUG>￨3 this￨3 .￨3 compilationScopes￨3 .￨3 peek￨3 (￨3 )￨3 .￨3 add￨3 (￨3 descriptor￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 enterCompilationScope￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 exitCompilationScope￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 lastDescriptor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 unboxBooleanIfNecessary￨2 (￨2 MethodVisitor￨3 mv￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 insertUnboxInsns￨2 (￨2 MethodVisitor￨3 mv￨3 ,￨3 char￨3 ch￨3 ,￨3 boolean￨3 isObject￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 createSignatureDescriptor￨2 (￨2 Method￨3 method￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 createSignatureDescriptor￨2 (￨2 Constructor￨3 <￨3 ?￨3 >￨3 ctor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toJVMDescriptor￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 clazz￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toDescriptorFromObject￨2 (￨2 Object￨3 value￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isBooleanCompatible￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isPrimitive￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isPrimitiveArray￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 areBoxingCompatible￨2 (￨2 String￨3 desc1￨3 ,￨3 String￨3 desc2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isPrimitiveOrUnboxableSupportedNumberOrBoolean￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isPrimitiveOrUnboxableSupportedNumber￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 char￨2 toPrimitiveTargetDesc￨2 (￨2 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 insertCheckCast￨2 (￨2 MethodVisitor￨3 mv￨3 ,￨3 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 insertBoxIfNecessary￨2 (￨2 MethodVisitor￨3 mv￨3 ,￨3 String￨3 descriptor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 insertBoxIfNecessary￨2 (￨2 MethodVisitor￨3 mv￨3 ,￨3 char￨3 ch￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toDescriptor￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 type￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 [￨2 ]￨2 toParamDescriptors￨2 (￨2 Method￨3 method￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 [￨2 ]￨2 toParamDescriptors￨2 (￨2 Constructor￨3 <￨3 ?￨3 >￨3 ctor￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 [￨2 ]￨2 toDescriptors￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 types￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Form￨1 extends￨1 WebMarkupContainer￨1 implements￨1 IFormSubmitListener￨1 {￨1 public￨2 abstract￨2 static￨2 class￨2 ValidationVisitor￨2 implements￨2 FormComponent￨2 .￨2 IVisitor￨2 {￨2 public￨3 Object￨3 formComponent￨3 (￨3 IFormVisitorParticipant￨4 component￨4 )￨3 {￨3 }￨3 public￨3 abstract￨3 void￨3 validate￨3 (￨3 FormComponent￨4 formComponent￨4 )￨3 {￨3 }￨3 }￨2 class￨2 FormDispatchRequest￨2 extends￨2 Request￨2 {￨2 private￨3 final￨3 ValueMap￨3 params￨3 =￨3 new￨3 ValueMap￨3 (￨3 )￨3 ;￨3 private￨3 final￨3 Request￨3 realRequest￨3 ;￨3 private￨3 final￨3 String￨3 url￨3 ;￨3 public￨3 FormDispatchRequest￨3 (￨3 final￨4 Request￨4 realRequest￨4 ,￨4 final￨4 String￨4 url￨4 )￨3 {￨3 }￨3 public￨3 Locale￨3 getLocale￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getParameter￨3 (￨3 String￨4 key￨4 )￨3 {￨3 }￨3 public￨3 Map￨3 getParameterMap￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 [￨3 ]￨3 getParameters￨3 (￨3 String￨4 key￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getPath￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getRelativePathPrefixToContextRoot￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getRelativePathPrefixToWicketHandler￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getURL￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 final￨2 String￨2 METHOD_GET￨2 =￨2 "get"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 METHOD_POST￨2 =￨2 "post"￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 FLAG_SUBMITTED￨2 =￨2 FLAG_RESERVED1￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 Form￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 UPLOAD_FAILED_RESOURCE_KEY￨2 =￨2 "uploadFailed"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 UPLOAD_TOO_LARGE_RESOURCE_KEY￨2 =￨2 "uploadTooLarge"￨2 ;￨2 private￨2 IFormSubmittingComponent￨2 defaultSubmittingComponent￨2 ;￨2 private￨2 Object￨2 formValidators￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 javascriptId￨2 ;￨2 private￨2 Bytes￨2 maxSize￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 multiPart￨2 =￨2 false￨2 ;￨2 public￨2 Form￨2 (￨2 final￨2 String￨2 id￨2 )￨2 {￨2 }￨2 public￨2 Form￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 IModel￨3 model￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 private￨2 final￨2 int￨2 formValidators_indexOf￨2 (￨2 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 private￨2 final￨2 IFormValidator￨2 formValidators_remove￨2 (￨2 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 private￨2 final￨2 IFormValidator￨2 formValidators_remove￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 clearInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 error￨2 (￨2 String￨3 error￨3 ,￨3 Map￨3 args￨3 )￨2 {￨2 }￨2 public￨2 final￨2 IFormSubmittingComponent￨2 findSubmittingButton￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IFormSubmittingComponent￨2 getDefaultButton￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 getJsForInterfaceUrl￨2 (￨2 CharSequence￨3 url￨3 )￨2 {￨2 }￨2 public￨2 Bytes￨2 getMaxSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Form￨2 getRootForm￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getValidatorKeyPrefix￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 hasError￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRootForm￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isSubmitted￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVersioned￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 loadPersistentFormComponentValues￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 onFormSubmitted￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 process￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 callOnError￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 markFormsSubmitted￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removePersistentFormComponentValues￨2 (￨2 final￨3 boolean￨3 disablePersistence￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setDefaultButton￨2 (￨2 IFormSubmittingComponent￨3 submittingComponent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaxSize￨2 (￨2 final￨3 Bytes￨3 maxSize￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMultiPart￨2 (￨2 boolean￨3 multiPart￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Component￨2 setVersioned￨2 (￨2 final￨3 boolean￨3 isVersioned￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 visitFormComponents￨2 (￨2 final￨3 FormComponent￨3 .￨3 IVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 visitFormComponentsPostOrder￨2 (￨2 final￨3 FormComponent￨3 .￨3 IVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 private￨2 void￨2 visitChildrenInContainingBorder￨2 (￨2 final￨3 FormComponent￨3 .￨3 IVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 anyFormComponentError￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 dispatchEvent￨2 (￨2 final￨3 Page￨3 page￨3 ,￨3 final￨3 String￨3 url￨3 )￨2 {￨2 }￨2 private￨2 void￨2 formValidators_add￨2 (￨2 final￨3 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 private￨2 IFormValidator￨2 formValidators_get￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 private￨2 int￨2 formValidators_size￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 inputChanged￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 persistFormComponentData￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 appendDefaultButtonField￨2 (￨2 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 openTag￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 beforeUpdateFormComponentModels￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 delegateSubmit￨2 (￨2 IFormSubmittingComponent￨3 submittingComponent￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 String￨2 getHiddenFieldId￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 String￨2 getJavascriptId￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getMethod￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 getStatelessHint￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IValuePersister￨2 getValuePersister￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 handleMultiPart￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalOnModelChanged￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 markFormComponentsInvalid￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 markFormComponentsValid￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 markNestedFormComponentsValid￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 internalMarkFormComponentsValid￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onComponentTagBody￨2 (￨2 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 openTag￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onDetach￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onError￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onRender￨2 (￨2 final￨3 MarkupStream￨3 markupStream￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onSubmit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 updateFormComponentModels￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 updateNestedFormComponentModels￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 internalUpdateFormComponentModels￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 validate￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateComponents￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 visitFormComponents￨3 (￨3 new￨3 Form￨3 .￨3 ValidationVisitor￨3 (￨3 )￨3 {￨3 <END_BUG>￨3 public￨3 void￨3 validate￨3 (￨3 final￨4 FormComponent￨4 formComponent￨4 )￨3 {￨3 final￨4 Form￨4 form￨4 =￨4 formComponent￨4 .￨4 getForm￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 (￨5 form￨5 ==￨5 (￨5 Form￨5 .￨5 this￨5 )￨5 )￨5 &&￨5 (￨5 form￨5 .￨5 isEnabled￨5 (￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 form￨5 .￨5 isEnableAllowed￨5 (￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 form￨5 .￨5 isVisibleInHierarchy￨5 (￨5 )￨5 )￨5 )￨4 {￨4 formComponent￨5 .￨5 validate￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 }￨3 )￨3 ;￨3 }￨2 private￨2 boolean￨2 isFormComponentVisibleInPage￨2 (￨2 FormComponent￨3 fc￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateFormValidator￨2 (￨2 final￨3 IFormValidator￨3 validator￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateFormValidators￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validateNestedForms￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 FormValidatorRemovedChange￨2 extends￨2 Change￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 final￨3 IFormValidator￨3 removed￨3 ;￨3 public￨3 FormValidatorRemovedChange￨3 (￨3 final￨4 IFormValidator￨4 removed￨4 )￨3 {￨3 }￨3 public￨3 void￨3 undo￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 LegacyActionPersistence￨1 extends￨1 RegistryPersistence￨1 {￨1 private￨2 static￨2 final￨2 int￨2 INDEX_ACTION_SETS￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INDEX_EDITOR_CONTRIBUTIONS￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INDEX_OBJECT_CONTRIBUTIONS￨2 =￨2 2￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INDEX_VIEW_CONTRIBUTIONS￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INDEX_VIEWER_CONTRIBUTIONS￨2 =￨2 4￨2 ;￨2 private￨2 static￨2 final￨2 SLocation￨2 createLocation￨2 (￨2 final￨3 String￨3 barType￨3 ,￨3 final￨3 String￨3 path￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 char￨3 mnemonic￨3 ,￨3 final￨3 String￨3 imageStyle￨3 )￨2 {￨2 final￨3 LeafLocationElement￨3 leafElement￨3 =￨3 new￨3 SBar￨3 (￨3 barType￨3 ,￨3 path￨3 )￨3 ;￨3 final￨3 LocationElement￨3 locationElement￨3 ;￨3 if￨3 (￨3 locationInfo￨4 ==￨4 null￨4 )￨3 {￨3 locationElement￨4 =￨4 leafElement￨4 ;￨4 }￨3 else￨3 {￨3 locationElement￨4 =￨4 locationInfo￨4 .￨4 append￨4 (￨4 leafElement￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 new￨3 SLocation￨3 (￨3 mnemonic￨3 ,￨3 imageStyle￨3 ,￨3 null￨3 ,￨3 locationElement￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 static￨2 final￨2 Expression￨2 readVisibility￨2 (￨2 final￨3 IConfigurationElement￨3 parentElement￨3 ,￨3 final￨3 String￨3 parentId￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 )￨2 {￨2 }￨2 private￨2 final￨2 BindingManager￨2 bindingManager￨2 ;￨2 private￨2 final￨2 CommandImageManager￨2 commandImageManager￨2 ;￨2 private￨2 final￨2 CommandManager￨2 commandManager￨2 ;￨2 private￨2 final￨2 Collection￨2 menuContributions￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 IMenuService￨2 menuService￨2 ;￨2 public￨2 LegacyActionPersistence￨2 (￨2 final￨3 CommandManager￨3 commandManager￨3 ,￨3 final￨3 BindingManager￨3 bindingManager￨3 ,￨3 final￨3 CommandImageManager￨3 commandImageManager￨3 ,￨3 final￨3 IMenuService￨3 menuService￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 clearBindings￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 clearImages￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 clearMenus￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 convertActionToBinding￨2 (￨2 final￨3 IConfigurationElement￨3 element￨3 ,￨3 final￨3 ParameterizedCommand￨3 command￨3 )￨2 {￨2 }￨2 private￨2 final￨2 ParameterizedCommand￨2 convertActionToCommand￨2 (￨2 final￨3 IConfigurationElement￨3 element￨3 ,￨3 final￨3 String￨3 primaryId￨3 ,￨3 final￨3 String￨3 secondaryId￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 )￨2 {￨2 }￨2 private￨2 final￨2 String￨2 convertActionToImages￨2 (￨2 final￨3 IConfigurationElement￨3 element￨3 ,￨3 final￨3 ParameterizedCommand￨3 command￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 convertActionToItem￨2 (￨2 final￨3 IConfigurationElement￨3 element￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 ,￨3 final￨3 ParameterizedCommand￨3 command￨3 ,￨3 final￨3 String￨3 imageStyle￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 Expression￨3 visibleWhenExpression￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 boolean￨2 isChangeImportant￨2 (￨2 final￨3 IRegistryChangeEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 read￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 SReference￨2 [￨2 ]￨2 readActions￨2 (￨2 final￨3 String￨3 primaryId￨3 ,￨3 final￨3 IConfigurationElement￨3 [￨3 ]￨3 elements￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 Expression￨3 visibleWhenExpression￨3 )￨2 {￨2 }￨2 private￨2 final￨2 SReference￨2 [￨2 ]￨2 readActionsAndMenus￨2 (￨2 final￨3 IConfigurationElement￨3 element￨3 ,￨3 final￨3 String￨3 id￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 Expression￨3 visibleWhenExpression￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readActionSets￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 configurationElements￨3 ,￨3 final￨3 int￨3 configurationElementCount￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readEditorContributions￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 configurationElements￨3 ,￨3 final￨3 int￨3 configurationElementCount￨3 )￨2 {￨2 }￨2 private￨2 final￨2 SReference￨2 [￨2 ]￨2 readGroups￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 elements￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 ,￨3 final￨3 String￨3 path￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 Expression￨3 visibleWhenExpression￨3 ,￨3 final￨3 boolean￨3 separatorsVisible￨3 )￨2 {￨2 }￨2 private￨2 final￨2 SReference￨2 [￨2 ]￨2 readMenusAndGroups￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 menuElements￨3 ,￨3 final￨3 String￨3 contributionId￨3 ,￨3 final￨3 List￨3 warningsToLog￨3 ,￨3 final￨3 LegacyLocationInfo￨3 locationInfo￨3 ,￨3 final￨3 Expression￨3 visibleWhenExpression￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readObjectContributions￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 configurationElements￨3 ,￨3 final￨3 int￨3 configurationElementCount￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readViewContributions￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 configurationElements￨3 ,￨3 final￨3 int￨3 configurationElementCount￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readViewerContributions￨2 (￨2 final￨3 IConfigurationElement￨3 [￨3 ]￨3 configurationElements￨3 ,￨3 final￨3 int￨3 configurationElementCount￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HelloHostApplication￨1 implements￨1 IDistributionConstants￨1 ,￨1 IApplication￨1 {￨1 private￨2 static￨2 final￨2 String￨2 DEFAULT_CONTAINER_TYPE￨2 =￨2 "ecf.r_osgi.peer"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 DEFAULT_CONTAINER_ID￨2 =￨2 null￨2 ;￨2 private￨2 BundleContext￨2 bundleContext￨2 ;￨2 private￨2 ServiceTracker￨2 containerManagerServiceTracker￨2 ;￨2 private￨2 String￨2 containerType￨2 =￨2 HelloHostApplication￨2 .￨2 DEFAULT_CONTAINER_TYPE￨2 ;￨2 private￨2 String￨2 containerId￨2 =￨2 HelloHostApplication￨2 .￨2 DEFAULT_CONTAINER_ID￨2 ;￨2 private￨2 final￨2 Object￨2 appLock￨2 =￨2 new￨2 Object￨2 (￨2 )￨2 ;￨2 private￨2 boolean￨2 done￨2 =￨2 false￨2 ;￨2 private￨2 ServiceRegistration￨2 helloRegistration￨2 ;￨2 public￨2 Object￨2 start￨2 (￨2 IApplicationContext￨2 appContext￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 bundleContext￨3 =￨3 Activator￨3 .￨3 getContext￨3 (￨3 )￨3 ;￨3 processArgs￨3 (￨3 appContext￨3 )￨3 ;￨3 IContainerManager￨3 containerManager￨3 =￨3 getContainerManagerService￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 containerId￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 ""￨4 .￨4 equals￨4 (￨4 containerId￨4 )￨4 )￨4 )￨3 {￨3 containerManager￨4 .￨4 getContainerFactory￨4 (￨4 )￨4 .￨4 createContainer￨4 (￨4 containerType￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 containerManager￨4 .￨4 getContainerFactory￨4 (￨4 )￨4 .￨4 createContainer￨4 (￨4 containerType￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 Properties￨3 props￨3 =￨3 new￨3 Properties￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 props￨3 .￨3 put￨3 (￨3 REMOTE_INTERFACES￨3 ,￨3 REMOTE_INTERFACES_WILDCARD￨3 )￨3 ;￨3 <END_BUG>￨3 helloRegistration￨3 =￨3 bundleContext￨3 .￨3 registerService￨3 (￨3 IHello￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 ,￨3 new￨3 Hello￨3 (￨3 )￨3 ,￨3 props￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "Host:<seq2seq4repair_space>Hello<seq2seq4repair_space>Service<seq2seq4repair_space>Registered"￨3 )￨3 ;￨3 waitForDone￨3 (￨3 )￨3 ;￨3 return￨3 IApplication￨3 .￨3 EXIT_OK￨3 ;￨3 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IContainerManager￨2 getContainerManagerService￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processArgs￨2 (￨2 IApplicationContext￨3 appContext￨3 )￨2 {￨2 }￨2 private￨2 void￨2 waitForDone￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ImageTransfer￨1 extends￨1 ByteArrayTransfer￨1 {￨1 private￨2 static￨2 ImageTransfer￨2 _instance￨2 =￨2 new￨2 ImageTransfer￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CF_DIB￨2 =￨2 "CF_DIB"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 CF_DIBID￨2 =￨2 COM￨2 .￨2 CF_DIB￨2 ;￨2 private￨2 ImageTransfer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 ImageTransfer￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 javaToNative￨2 (￨2 Object￨3 object￨3 ,￨3 TransferData￨3 transferData￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 nativeToJava￨2 (￨2 TransferData￨3 transferData￨3 )￨2 {￨2 if￨3 (￨3 (￨4 !￨4 (￨4 isSupportedType￨4 (￨4 transferData￨4 )￨4 )￨4 )￨4 ||￨4 (￨4 (￨4 transferData￨4 .￨4 pIDataObject￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 IDataObject￨3 dataObject￨3 =￨3 new￨3 IDataObject￨3 (￨3 transferData￨3 .￨3 pIDataObject￨3 )￨3 ;￨3 dataObject￨3 .￨3 AddRef￨3 (￨3 )￨3 ;￨3 FORMATETC￨3 formatetc￨3 =￨3 new￨3 FORMATETC￨3 (￨3 )￨3 ;￨3 formatetc￨3 .￨3 cfFormat￨3 =￨3 COM￨3 .￨3 CF_DIB￨3 ;￨3 formatetc￨3 .￨3 ptd￨3 =￨3 0￨3 ;￨3 formatetc￨3 .￨3 dwAspect￨3 =￨3 COM￨3 .￨3 DVASPECT_CONTENT￨3 ;￨3 formatetc￨3 .￨3 lindex￨3 =￨3 -￨3 1￨3 ;￨3 formatetc￨3 .￨3 tymed￨3 =￨3 COM￨3 .￨3 TYMED_HGLOBAL￨3 ;￨3 STGMEDIUM￨3 stgmedium￨3 =￨3 new￨3 STGMEDIUM￨3 (￨3 )￨3 ;￨3 stgmedium￨3 .￨3 tymed￨3 =￨3 COM￨3 .￨3 TYMED_HGLOBAL￨3 ;￨3 transferData￨3 .￨3 result￨3 =￨3 getData￨3 (￨3 dataObject￨3 ,￨3 formatetc￨3 ,￨3 stgmedium￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 transferData￨4 .￨4 result￨4 )￨4 !=￨4 (￨4 COM￨4 .￨4 S_OK￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 int￨3 hMem￨3 =￨3 stgmedium￨3 .￨3 unionField￨3 ;￨3 dataObject￨3 .￨3 Release￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 int￨4 ptr￨4 =￨4 OS￨4 .￨4 GlobalLock￨4 (￨4 hMem￨4 )￨4 ;￨4 if￨4 (￨4 ptr￨5 ==￨5 0￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 try￨4 (￨4 )￨4 {￨4 BITMAPINFOHEADER￨5 bmiHeader￨5 =￨5 new￨5 BITMAPINFOHEADER￨5 (￨5 )￨5 ;￨5 OS￨5 .￨5 MoveMemory￨5 (￨5 bmiHeader￨5 ,￨5 ptr￨5 ,￨5 sizeof￨5 )￨5 ;￨5 int￨5 [￨5 ]￨5 pBits￨5 =￨5 new￨5 int￨5 [￨5 1￨5 ]￨5 ;￨5 int￨5 memDib￨5 =￨5 OS￨5 .￨5 CreateDIBSection￨5 (￨5 0￨5 ,￨5 ptr￨5 ,￨5 DIB_RGB_COLORS￨5 ,￨5 pBits￨5 ,￨5 0￨5 ,￨5 0￨5 )￨5 ;￨5 if￨5 (￨5 memDib￨6 ==￨6 0￨6 )￨5 {￨5 SWT￨6 .￨6 error￨6 (￨6 ERROR_NO_HANDLES￨6 )￨6 ;￨6 }￨5 int￨5 bits￨5 =￨5 ptr￨5 +￨5 (￨5 bmiHeader￨5 .￨5 biSize￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 bmiHeader￨6 .￨6 biBitCount￨6 )￨6 <=￨6 8￨6 )￨5 {￨5 <START_BUG>￨6 bits￨6 +=￨6 (￨6 1￨6 <<￨6 (￨6 bmiHeader￨6 .￨6 biBitCount￨6 )￨6 )￨6 *￨6 4￨6 ;￨6 <END_BUG>￨6 }￨5 else￨5 if￨5 (￨5 (￨6 bmiHeader￨6 .￨6 biCompression￨6 )￨6 ==￨6 (￨6 OS￨6 .￨6 BI_BITFIELDS￨6 )￨6 )￨5 {￨5 bits￨6 +=￨6 12￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 bmiHeader￨6 .￨6 biHeight￨6 )￨6 <￨6 0￨6 )￨5 {￨5 OS￨6 .￨6 MoveMemory￨6 (￨6 pBits￨6 [￨6 0￨6 ]￨6 ,￨6 bits￨6 ,￨6 bmiHeader￨6 .￨6 biSizeImage￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 DIBSECTION￨6 dib￨6 =￨6 new￨6 DIBSECTION￨6 (￨6 )￨6 ;￨6 OS￨6 .￨6 GetObject￨6 (￨6 memDib￨6 ,￨6 DIBSECTION￨6 .￨6 sizeof￨6 ,￨6 dib￨6 )￨6 ;￨6 int￨6 biHeight￨6 =￨6 dib￨6 .￨6 biHeight￨6 ;￨6 int￨6 scanline￨6 =￨6 (￨6 dib￨6 .￨6 biSizeImage￨6 )￨6 /￨6 biHeight￨6 ;￨6 int￨6 pDestBits￨6 =￨6 pBits￨6 [￨6 0￨6 ]￨6 ;￨6 int￨6 pSourceBits￨6 =￨6 bits￨6 +￨6 (￨6 scanline￨6 *￨6 (￨6 biHeight￨6 -￨6 1￨6 )￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ;￨7 i￨7 <￨7 biHeight￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 OS￨7 .￨7 MoveMemory￨7 (￨7 pDestBits￨7 ,￨7 pSourceBits￨7 ,￨7 scanline￨7 )￨7 ;￨7 pDestBits￨7 +=￨7 scanline￨7 ;￨7 pSourceBits￨7 -=￨7 scanline￨7 ;￨7 }￨6 }￨5 Image￨5 image￨5 =￨5 Image￨5 .￨5 win32_new￨5 (￨5 null￨5 ,￨5 BITMAP￨5 ,￨5 memDib￨5 )￨5 ;￨5 ImageData￨5 data￨5 =￨5 image￨5 .￨5 getImageData￨5 (￨5 )￨5 ;￨5 OS￨5 .￨5 DeleteObject￨5 (￨5 memDib￨5 )￨5 ;￨5 image￨5 .￨5 dispose￨5 (￨5 )￨5 ;￨5 return￨5 data￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 OS￨5 .￨5 GlobalUnlock￨5 (￨5 hMem￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 OS￨4 .￨4 GlobalFree￨4 (￨4 hMem￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 int￨2 [￨2 ]￨2 getTypeIds￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 [￨2 ]￨2 getTypeNames￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 checkImage￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 validate￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FunctionReference￨1 extends￨1 SpelNodeImpl￨1 {￨1 private￨2 final￨2 String￨2 name￨2 ;￨2 public￨2 FunctionReference￨2 (￨2 String￨3 functionName￨3 ,￨3 int￨3 pos￨3 ,￨3 SpelNodeImpl￨3 ...￨3 arguments￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 TypedValue￨2 getValueInternal￨2 (￨2 ExpressionState￨2 state￨2 )￨2 throws￨2 EvaluationException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 TypedValue￨2 executeFunctionJLRMethod￨2 (￨2 ExpressionState￨2 state￨2 ,￨2 Method￨2 method￨2 )￨2 throws￨2 EvaluationException￨2 (￨2 )￨2 {￨2 Object￨3 [￨3 ]￨3 functionArgs￨3 =￨3 getArguments￨3 (￨3 state￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 !￨4 (￨4 method￨4 .￨4 isVarArgs￨4 (￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 method￨4 .￨4 getParameterTypes￨4 (￨4 )￨4 .￨4 length￨4 )￨4 !=￨4 (￨4 functionArgs￨4 .￨4 length￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 expression￨4 .￨4 spel￨4 .￨4 SpelEvaluationException￨4 (￨4 SpelMessage￨4 .￨4 INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION￨4 ,￨4 functionArgs￨4 .￨4 length￨4 ,￨4 method￨4 .￨4 getParameterTypes￨4 (￨4 )￨4 .￨4 length￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 Modifier￨4 .￨4 isStatic￨4 (￨4 method￨4 .￨4 getModifiers￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 expression￨4 .￨4 spel￨4 .￨4 SpelEvaluationException￨4 (￨4 getStartPosition￨4 (￨4 )￨4 ,￨4 SpelMessage￨4 .￨4 FUNCTION_MUST_BE_STATIC￨4 ,￨4 (￨4 (￨4 (￨4 method￨4 .￨4 getDeclaringClass￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 +￨4 "."￨4 )￨4 +￨4 (￨4 method￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 name￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 functionArgs￨4 !=￨4 null￨4 )￨3 {￨3 TypeConverter￨4 converter￨4 =￨4 state￨4 .￨4 getEvaluationContext￨4 (￨4 )￨4 .￨4 getTypeConverter￨4 (￨4 )￨4 ;￨4 ReflectionHelper￨4 .￨4 convertAllArguments￨4 (￨4 converter￨4 ,￨4 functionArgs￨4 ,￨4 method￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 method￨4 .￨4 isVarArgs￨4 (￨4 )￨4 )￨3 {￨3 functionArgs￨4 =￨4 ReflectionHelper￨4 .￨4 setupArgumentsForVarargsInvocation￨4 (￨4 method￨4 .￨4 getParameterTypes￨4 (￨4 )￨4 ,￨4 functionArgs￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 ReflectionUtils￨4 .￨4 makeAccessible￨4 (￨4 method￨4 )￨4 ;￨4 Object￨4 result￨4 =￨4 method￨4 .￨4 invoke￨4 (￨4 method￨4 .￨4 getClass￨4 (￨4 )￨4 ,￨4 functionArgs￨4 )￨4 ;￨4 <START_BUG>￨4 return￨4 new￨4 TypedValue￨4 (￨4 result￨4 ,￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 core￨4 .￨4 convert￨4 .￨4 TypeDescriptor￨4 (￨4 new￨4 MethodParameter￨4 (￨4 method￨4 ,￨4 (￨4 -￨4 1￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 expression￨4 .￨4 spel￨4 .￨4 SpelEvaluationException￨4 (￨4 getStartPosition￨4 (￨4 )￨4 ,￨4 ex￨4 ,￨4 SpelMessage￨4 .￨4 EXCEPTION_DURING_FUNCTION_CALL￨4 ,￨4 this￨4 .￨4 name￨4 ,￨4 ex￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 String￨2 toStringAST￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Object￨2 [￨2 ]￨2 getArguments￨2 (￨2 ExpressionState￨2 state￨2 )￨2 throws￨2 EvaluationException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ReturnStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 TypeBinding￨2 expressionType￨2 ;￨2 public￨2 boolean￨2 isSynchronized￨2 ;￨2 public￨2 AstNode￨2 [￨2 ]￨2 subroutines￨2 ;￨2 public￨2 LocalVariableBinding￨2 saveValueVariable￨2 ;￨2 public￨2 ReturnStatement￨2 (￨2 Expression￨3 expr￨3 ,￨3 int￨3 s￨3 ,￨3 int￨3 e￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateReturnBytecode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateStoreSaveValueIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 needValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 prepareSaveValueLocation￨2 (￨2 TryStatement￨3 targetTryStatement￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 MethodScope￨3 methodScope￨3 =￨3 scope￨3 .￨3 methodScope￨3 (￨3 )￨3 ;￨3 MethodBinding￨3 methodBinding￨3 ;￨3 TypeBinding￨3 methodType￨3 =￨3 (￨3 (￨3 methodScope￨3 .￨3 referenceContext￨3 )￨3 instanceof￨3 AbstractMethodDeclaration￨3 )￨3 ?￨3 (￨3 methodBinding￨3 =￨3 (￨3 (￨3 AbstractMethodDeclaration￨3 )￨3 (￨3 methodScope￨3 .￨3 referenceContext￨3 )￨3 )￨3 .￨3 binding￨3 )￨3 ==￨3 null￨3 ?￨3 null￨3 :￨3 methodBinding￨3 .￨3 returnType￨3 :￨3 VoidBinding￨3 ;￨3 if￨3 (￨3 methodType￨4 ==￨4 (￨4 VoidBinding￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 expression￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 expressionType￨5 =￨5 expression￨5 .￨5 resolveType￨5 (￨5 scope￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 attemptToReturnNonVoidExpression￨5 (￨5 this￨5 ,￨5 expressionType￨5 )￨5 ;￨5 }￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 expression￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 methodType￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 shouldReturn￨5 (￨5 methodType￨5 ,￨5 this￨5 )￨5 ;￨5 }￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 expressionType￨4 =￨4 expression￨4 .￨4 resolveType￨4 (￨4 scope￨4 )￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 methodType￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 expression￨4 .￨4 isConstantValueOfTypeAssignableToType￨4 (￨4 expressionType￨4 ,￨4 methodType￨4 )￨4 )￨4 )￨3 {￨3 expression￨4 .￨4 implicitWidening￨4 (￨4 methodType￨4 ,￨4 expressionType￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 expressionType￨4 )￨4 ==￨4 (￨4 VoidBinding￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 attemptToReturnVoidValue￨4 (￨4 this￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 methodType￨3 !=￨3 null￨3 )￨3 &&￨3 (￨3 org￨3 .￨3 eclipse￨3 .￨3 jdt￨3 .￨3 internal￨3 .￨3 compiler￨3 .￨3 lookup￨3 .￨3 Scope￨3 .￨3 areTypesCompatible￨3 (￨3 expressionType￨3 ,￨3 methodType￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 expression￨3 .￨3 implicitWidening￨3 (￨3 methodType￨3 ,￨3 expressionType￨3 )￨3 ;￨3 return￨3 ;￨3 if￨3 (￨3 methodType￨4 !=￨4 null￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 typeMismatchErrorActualTypeExpectedType￨4 (￨4 expression￨4 ,￨4 expressionType￨4 ,￨4 methodType￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WeldEjbServices￨1 implements￨1 EjbServices￨1 {￨1 private￨2 final￨2 ServiceRegistry￨2 serviceRegistry￨2 ;￨2 private￨2 volatile￨2 Map￨2 <￨2 String￨2 ,￨2 InterceptorBindings￨2 >￨2 bindings￨2 =￨2 Collections￨2 .￨2 emptyMap￨2 (￨2 )￨2 ;￨2 public￨2 WeldEjbServices￨2 (￨2 ServiceRegistry￨3 serviceRegistry￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 synchronized￨2 void￨2 registerInterceptors￨2 (￨2 EjbDescriptor￨3 <￨3 ?￨3 >￨3 ejbDescriptor￨3 ,￨3 InterceptorBindings￨3 interceptorBindings￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 SessionObjectReference￨2 resolveEjb￨2 (￨2 EjbDescriptor￨3 <￨3 ?￨3 >￨3 ejbDescriptor￨3 )￨2 {￨2 if￨3 (￨3 ejbDescriptor￨4 .￨4 isStateful￨4 (￨4 )￨4 )￨3 {￨3 return￨4 new￨4 StatefulSessionObjectReferenceImpl￨4 (￨4 (￨4 (￨4 EjbDescriptorImpl￨4 <￨4 ?￨4 >￨4 )￨4 (￨4 ejbDescriptor￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 return￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 as￨4 .￨4 weld￨4 .￨4 ejb￨4 .￨4 SessionObjectReferenceImpl￨4 (￨4 (￨4 (￨4 EjbDescriptorImpl￨4 <￨4 ?￨4 >￨4 )￨4 (￨4 ejbDescriptor￨4 )￨4 )￨4 ,￨4 serviceRegistry￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 cleanup￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InterceptorBindings￨2 getBindings￨2 (￨2 String￨3 ejbName￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JMXSubsystemTestCase￨1 extends￨1 AbstractSubsystemTest￨1 {￨1 private￨2 static￨2 final￨2 String￨2 LAUNCH_TYPE￨2 =￨2 "launch-type"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TYPE_STANDALONE￨2 =￨2 "STANDALONE"￨2 ;￨2 public￨2 JMXSubsystemTestCase￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseEmptySubsystem￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseSubsystemWithBadChild￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseSubsystemWithBadAttribute￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseSubsystemWithConnector￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseSubsystemWithTwoConnectors￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseSubsystemWithBadConnectorAttribute￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testInstallIntoController￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModel1_0￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModel1_1WithShowModel￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModelWithRemoteConnectorRef1_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModel1_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModel1_2WithShowModels￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseAndMarshalModel1_2WithShowModelsAndOldPropertyFormat￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDescribeHandler￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testShowModelAlias￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testTransformationAS712￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testTransformationAS713￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 testTransformation_1_0_0￨2 (￨2 ModelTestControllerVersion￨2 controllerVersion￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRejectExpressionsAS712￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRejectExpressionsAS713￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 testRejectExpressions_1_0_0￨2 (￨2 ModelTestControllerVersion￨2 controllerVersion￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 FailedOperationTransformationConfig￨2 .￨2 AttributesPathAddressConfig￨2 <￨2 ?￨2 >￨2 >￨2 createChainedConfigList￨2 (￨2 FailedOperationTransformationConfig￨3 <￨3 ?￨3 >￨3 ...￨3 cfgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 check_1_0_0_Model￨2 (￨2 ModelNode￨3 legacySubsystem￨3 ,￨3 boolean￨3 remotingConnector￨3 ,￨3 boolean￨3 showModel￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertJmxConnectorAddress￨2 (￨2 ModelNode￨3 address￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertJmxSubsystemAddress￨2 (￨2 ModelNode￨3 address￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ModelNode￨2 createOperation￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 ...￨3 addressElements￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 BaseAdditionalInitalization￨2 extends￨2 AdditionalInitialization￨2 {￨2 @￨3 Override￨3 protected￨3 void￨3 initializeExtraSubystemsAndModel￨3 (￨3 ExtensionRegistry￨4 extensionRegistry￨4 ,￨4 Resource￨4 rootResource￨4 ,￨4 ManagementResourceRegistration￨4 rootRegistration￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 setupController￨3 (￨3 ControllerInitializer￨4 controllerInitializer￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 addExtraServices￨3 (￨3 final￨4 ServiceTarget￨4 target￨4 )￨3 {￨3 <START_BUG>￨4 ManagementRemotingServices￨4 .￨4 installRemotingEndpoint￨4 (￨4 target￨4 ,￨4 MANAGEMENT_ENDPOINT￨4 ,￨4 "loaclhost"￨4 ,￨4 MANAGEMENT￨4 ,￨4 null￨4 ,￨4 null￨4 )￨4 ;￨4 <END_BUG>￨4 ServiceName￨4 tmpDirPath￨4 =￨4 JBOSS￨4 .￨4 append￨4 (￨4 "server"￨4 ,￨4 "path"￨4 ,￨4 "jboss.controller.temp.dir"￨4 )￨4 ;￨4 RemotingServices￨4 .￨4 installSecurityServices￨4 (￨4 target￨4 ,￨4 "remote"￨4 ,￨4 null￨4 ,￨4 null￨4 ,￨4 tmpDirPath￨4 ,￨4 null￨4 ,￨4 null￨4 )￨4 ;￨4 RemotingServices￨4 .￨4 installConnectorServicesForSocketBinding￨4 (￨4 target￨4 ,￨4 MANAGEMENT_ENDPOINT￨4 ,￨4 "remote"￨4 ,￨4 JBOSS_BINDING_NAME￨4 .￨4 append￨4 (￨4 "remote"￨4 )￨4 ,￨4 EMPTY￨4 ,￨4 null￨4 ,￨4 null￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 class￨2 CorrectDomainNameConfig￨2 extends￨2 FailedOperationTransformationConfig￨2 .￨2 AttributesPathAddressConfig￨2 <￨2 JMXSubsystemTestCase￨2 .￨2 CorrectDomainNameConfig￨2 >￨2 {￨2 public￨3 CorrectDomainNameConfig￨3 (￨3 AttributeDefinition￨4 ...￨4 attributes￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 isAttributeWritable￨3 (￨3 String￨4 attributeName￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 checkValue￨3 (￨3 String￨4 attrName￨4 ,￨4 ModelNode￨4 attribute￨4 ,￨4 boolean￨4 isWriteAttribute￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModelNode￨3 correctValue￨3 (￨3 ModelNode￨4 toResolve￨4 ,￨4 boolean￨4 isWriteAttribute￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 CorrectPropertyFormatConfig￨2 extends￨2 FailedOperationTransformationConfig￨2 .￨2 AttributesPathAddressConfig￨2 <￨2 JMXSubsystemTestCase￨2 .￨2 CorrectDomainNameConfig￨2 >￨2 {￨2 public￨3 CorrectPropertyFormatConfig￨3 (￨3 AttributeDefinition￨4 ...￨4 attributes￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 isAttributeWritable￨3 (￨3 String￨4 attributeName￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 checkValue￨3 (￨3 String￨4 attrName￨4 ,￨4 ModelNode￨4 attribute￨4 ,￨4 boolean￨4 isWriteAttribute￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModelNode￨3 correctValue￨3 (￨3 ModelNode￨4 toResolve￨4 ,￨4 boolean￨4 isWriteAttribute￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 BootStrapperTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testGuessToken￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 StorageService￨3 ss￨3 =￨3 StorageService￨3 .￨3 instance￨3 (￨3 )￨3 ;￨3 generateFakeEndpoints￨3 (￨3 3￨3 )￨3 ;￨3 InetAddress￨3 one￨3 =￨3 InetAddress￨3 .￨3 getByName￨3 (￨3 "127.0.0.2"￨3 )￨3 ;￨3 InetAddress￨3 two￨3 =￨3 InetAddress￨3 .￨3 getByName￨3 (￨3 "127.0.0.3"￨3 )￨3 ;￨3 InetAddress￨3 three￨3 =￨3 InetAddress￨3 .￨3 getByName￨3 (￨3 "127.0.0.4"￨3 )￨3 ;￨3 Map￨3 <￨3 InetAddress￨3 ,￨3 Double￨3 >￨3 load￨3 =￨3 new￨3 HashMap￨3 <￨3 InetAddress￨3 ,￨3 Double￨3 >￨3 (￨3 )￨3 ;￨3 load￨3 .￨3 put￨3 (￨3 one￨3 ,￨3 1.0￨3 )￨3 ;￨3 load￨3 .￨3 put￨3 (￨3 two￨3 ,￨3 2.0￨3 )￨3 ;￨3 load￨3 .￨3 put￨3 (￨3 three￨3 ,￨3 3.0￨3 )￨3 ;￨3 TokenMetadata￨3 tmd￨3 =￨3 ss￨3 .￨3 getTokenMetadata￨3 (￨3 )￨3 ;￨3 InetAddress￨3 source￨3 =￨3 BootStrapper￨3 .￨3 getBootstrapSource￨3 (￨3 tmd￨3 ,￨3 load￨3 )￨3 ;￨3 assert￨3 three￨3 .￨3 equals￨3 (￨3 source￨3 )￨3 ;￨3 InetAddress￨3 myEndpoint￨3 =￨3 InetAddress￨3 .￨3 getByName￨3 (￨3 "127.0.0.1"￨3 )￨3 ;￨3 Range￨3 range3￨3 =￨3 ss￨3 .￨3 getPrimaryRangeForEndPoint￨3 (￨3 three￨3 )￨3 ;￨3 <START_BUG>￨3 Token￨3 fakeToken￨3 =￨3 (￨3 (￨3 IPartitioner￨3 )￨3 (￨3 StorageService￨3 .￨3 getPartitioner￨3 (￨3 )￨3 )￨3 )￨3 .￨3 midpoint￨3 (￨3 range3￨3 .￨3 left￨3 (￨3 )￨3 ,￨3 range3￨3 .￨3 right￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 assert￨3 range3￨3 .￨3 contains￨3 (￨3 fakeToken￨3 )￨3 ;￨3 ss￨3 .￨3 onChange￨3 (￨3 myEndpoint￨3 ,￨3 MOVE_STATE￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 cassandra￨3 .￨3 gms￨3 .￨3 ApplicationState￨3 (￨3 (￨3 (￨3 (￨3 StorageService￨3 .￨3 STATE_BOOTSTRAPPING￨3 )￨3 +￨3 (￨3 StorageService￨3 .￨3 Delimiter￨3 )￨3 )￨3 +￨3 (￨3 ss￨3 .￨3 getPartitioner￨3 (￨3 )￨3 .￨3 getTokenFactory￨3 (￨3 )￨3 .￨3 toString￨3 (￨3 fakeToken￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 tmd￨3 =￨3 ss￨3 .￨3 getTokenMetadata￨3 (￨3 )￨3 ;￨3 InetAddress￨3 source2￨3 =￨3 BootStrapper￨3 .￨3 getBootstrapSource￨3 (￨3 tmd￨3 ,￨3 load￨3 )￨3 ;￨3 assert￨3 two￨3 .￨3 equals￨3 (￨3 source2￨3 )￨3 :￨3 source2￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testSourceTargetComputation￨2 (￨2 )￨2 throws￨2 UnknownHostException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 testSourceTargetComputation￨2 (￨2 int￨2 numOldNodes￨2 )￨2 throws￨2 UnknownHostException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 generateFakeEndpoints￨2 (￨2 int￨2 numOldNodes￨2 )￨2 throws￨2 UnknownHostException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FieldReference￨1 extends￨1 Reference￨1 implements￨1 InvocationSite￨1 {￨1 public￨2 Expression￨2 receiver￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 token￨2 ;￨2 public￨2 FieldBinding￨2 binding￨2 ;￨2 public￨2 FieldBinding￨2 codegenBinding￨2 ;￨2 public￨2 long￨2 nameSourcePosition￨2 ;￨2 MethodBinding￨2 syntheticReadAccessor￨2 ;￨2 MethodBinding￨2 syntheticWriteAccessor￨2 ;￨2 public￨2 TypeBinding￨2 receiverType￨2 ;￨2 public￨2 FieldReference￨2 (￨2 char￨3 [￨3 ]￨3 source￨3 ,￨3 long￨3 pos￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 isCompound￨3 )￨2 {￨2 if￨3 (￨3 isCompound￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 (￨5 binding￨5 .￨5 isBlankFinal￨5 (￨5 )￨5 )￨5 &&￨5 (￨5 receiver￨5 .￨5 isThis￨5 (￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 currentScope￨5 .￨5 allowBlankFinalFieldAssignment￨5 (￨5 binding￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 flowInfo￨5 .￨5 isDefinitelyAssigned￨5 (￨5 binding￨5 )￨5 )￨5 )￨5 )￨4 {￨4 currentScope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 uninitializedBlankFinalField￨5 (￨5 binding￨5 ,￨5 this￨5 )￨5 ;￨5 }￨4 manageSyntheticReadAccessIfNecessary￨4 (￨4 currentScope￨4 ,￨4 flowInfo￨4 )￨4 ;￨4 }￨3 flowInfo￨3 =￨3 receiver￨3 .￨3 analyseCode￨3 (￨3 currentScope￨3 ,￨3 flowContext￨3 ,￨3 flowInfo￨3 ,￨3 (￨3 !￨3 (￨3 binding￨3 .￨3 isStatic￨3 (￨3 )￨3 )￨3 )￨3 )￨3 .￨3 unconditionalInits￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 assignment￨4 .￨4 expression￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 flowInfo￨4 =￨4 assignment￨4 .￨4 expression￨4 .￨4 analyseCode￨4 (￨4 currentScope￨4 ,￨4 flowContext￨4 ,￨4 flowInfo￨4 )￨4 .￨4 unconditionalInits￨4 (￨4 )￨4 ;￨4 }￨3 manageSyntheticWriteAccessIfNecessary￨3 (￨3 currentScope￨3 ,￨3 flowInfo￨3 )￨3 ;￨3 if￨3 (￨3 binding￨4 .￨4 isFinal￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 (￨5 (￨5 (￨5 binding￨5 .￨5 isBlankFinal￨5 (￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 isCompound￨5 )￨5 )￨5 &&￨5 (￨5 receiver￨5 .￨5 isThis￨5 (￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 (￨5 receiver￨5 )￨5 instanceof￨5 QualifiedThisReference￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 (￨5 receiver￨5 .￨5 bits￨5 )￨5 &￨5 (￨5 ASTNode￨5 .￨5 ParenthesizedMASK￨5 )￨5 )￨5 ==￨5 0￨5 )￨5 )￨5 &&￨5 (￨5 currentScope￨5 .￨5 allowBlankFinalFieldAssignment￨5 (￨5 binding￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 flowInfo￨6 .￨6 isPotentiallyAssigned￨6 (￨6 binding￨6 )￨6 )￨5 {￨5 currentScope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 duplicateInitializationOfBlankFinalField￨6 (￨6 binding￨6 ,￨6 this￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 <START_BUG>￨6 flowContext￨6 .￨6 recordSettingFinal￨6 (￨6 binding￨6 ,￨6 this￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 flowInfo￨5 .￨5 markAsDefinitelyAssigned￨5 (￨5 binding￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 currentScope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 cannotAssignToFinalField￨5 (￨5 binding￨5 ,￨5 this￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 flowInfo￨3 ;￨3 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 fieldBinding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generateAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCompoundAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 assignmentImplicitConversion￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generatePostIncrement￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 CompoundAssignment￨3 postIncrement￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 Constant￨2 getConstantFor￨2 (￨2 FieldBinding￨3 binding￨3 ,￨3 Reference￨3 reference￨3 ,￨3 boolean￨3 isImplicit￨3 ,￨3 Scope￨3 referenceScope￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSuperAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTypeAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticReadAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticWriteAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setActualReceiverType￨2 (￨2 ReferenceBinding￨3 receiverType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDepth￨2 (￨2 int￨3 depth￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFieldIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PossibleMatch￨1 implements￨1 ICompilationUnit￨1 {￨1 public￨2 static￨2 final￨2 String￨2 NO_SOURCE_FILE_NAME￨2 =￨2 "NO<seq2seq4repair_space>SOURCE<seq2seq4repair_space>FILE<seq2seq4repair_space>NAME"￨2 ;￨2 public￨2 IResource￨2 resource￨2 ;￨2 public￨2 Openable￨2 openable￨2 ;￨2 public￨2 MatchingNodeSet￨2 nodeSet￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 compoundName￨2 ;￨2 CompilationUnitDeclaration￨2 parsedUnit￨2 ;￨2 public￨2 SearchDocument￨2 document￨2 ;￨2 private￨2 String￨2 sourceFileName￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 source￨2 ;￨2 public￨2 PossibleMatch￨2 (￨2 MatchLocator￨3 locator￨3 ,￨3 IResource￨3 resource￨3 ,￨3 Openable￨3 openable￨3 ,￨3 SearchDocument￨3 document￨3 ,￨3 boolean￨3 mustResolve￨3 )￨2 {￨2 }￨2 public￨2 void￨2 cleanUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getContents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getFileName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getMainTypeName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 getPackageName￨2 (￨2 )￨2 {￨2 }￨2 private￨2 char￨2 [￨2 ]￨2 getQualifiedName￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 openable￨4 )￨4 instanceof￨4 CompilationUnit￨4 )￨3 {￨3 <START_BUG>￨4 String￨4 fileName￨4 =￨4 this￨4 .￨4 resource￨4 .￨4 getFullPath￨4 (￨4 )￨4 .￨4 lastSegment￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 char￨4 [￨4 ]￨4 mainTypeName￨4 =￨4 Util￨4 .￨4 getNameWithoutJavaLikeExtension￨4 (￨4 fileName￨4 )￨4 .￨4 toCharArray￨4 (￨4 )￨4 ;￨4 CompilationUnit￨4 cu￨4 =￨4 (￨4 (￨4 CompilationUnit￨4 )￨4 (￨4 this￨4 .￨4 openable￨4 )￨4 )￨4 ;￨4 return￨4 cu￨4 .￨4 getType￨4 (￨4 new￨4 String￨4 (￨4 mainTypeName￨4 )￨4 )￨4 .￨4 getFullyQualifiedName￨4 (￨4 )￨4 .￨4 toCharArray￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 this￨4 .￨4 openable￨4 )￨4 instanceof￨4 ClassFile￨4 )￨3 {￨3 String￨4 fileName￨4 =￨4 getSourceFileName￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 fileName￨5 ==￨5 (￨5 PossibleMatch￨5 .￨5 NO_SOURCE_FILE_NAME￨5 )￨5 )￨4 {￨4 return￨5 (￨5 (￨5 ClassFile￨5 )￨5 (￨5 this￨5 .￨5 openable￨5 )￨5 )￨5 .￨5 getType￨5 (￨5 )￨5 .￨5 getFullyQualifiedName￨5 (￨5 '.'￨5 )￨5 .￨5 toCharArray￨5 (￨5 )￨5 ;￨5 }￨4 int￨4 index￨4 =￨4 Util￨4 .￨4 indexOfJavaLikeExtension￨4 (￨4 fileName￨4 )￨4 ;￨4 String￨4 simpleName￨4 =￨4 (￨4 index￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨4 ?￨4 fileName￨4 :￨4 fileName￨4 .￨4 substring￨4 (￨4 0￨4 ,￨4 index￨4 )￨4 ;￨4 PackageFragment￨4 pkg￨4 =￨4 (￨4 (￨4 PackageFragment￨4 )￨4 (￨4 this￨4 .￨4 openable￨4 .￨4 getParent￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 return￨4 Util￨4 .￨4 concatWith￨4 (￨4 pkg￨4 .￨4 names￨4 ,￨4 simpleName￨4 ,￨4 '.'￨4 )￨4 .￨4 toCharArray￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 private￨2 String￨2 getSourceFileName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WebRequestCycle￨1 extends￨1 RequestCycle￨1 {￨1 private￨2 static￨2 final￨2 Log￨2 log￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 WebRequestCycle￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 WebRequestCycle￨2 (￨2 final￨2 WebSession￨2 session￨2 ,￨2 final￨2 WebRequest￨2 request￨2 ,￨2 final￨2 Response￨2 response￨2 )￨2 {￨2 }￨2 public￨2 WebRequest￨2 getWebRequest￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WebResponse￨2 getWebResponse￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WebSession￨2 getWebSession￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 redirectTo￨2 (￨2 final￨3 Page￨3 page￨3 )￨2 {￨2 String￨3 redirectUrl￨3 =￨3 null￨3 ;￨3 ApplicationSettings￨3 settings￨3 =￨3 application￨3 .￨3 getSettings￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 settings￨4 .￨4 getRenderStrategy￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 ApplicationSettings￨4 .￨4 REDIRECT_TO_BUFFER￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 application￨4 )￨4 instanceof￨4 WebApplication￨4 )￨4 )￨3 {￨3 final￨4 Response￨4 currentResponse￨4 =￨4 getResponse￨4 (￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 final￨5 BufferedResponse￨5 redirectResponse￨5 =￨5 new￨5 BufferedResponse￨5 (￨5 )￨5 {￨5 public￨6 String￨6 encodeURL￨6 (￨6 String￨7 url￨7 )￨6 {￨6 return￨7 currentResponse￨7 .￨7 encodeURL￨7 (￨7 url￨7 )￨7 ;￨7 }￨6 }￨5 ;￨5 redirectResponse￨5 .￨5 setCharacterEncoding￨5 (￨5 currentResponse￨5 .￨5 getCharacterEncoding￨5 (￨5 )￨5 )￨5 ;￨5 setResponse￨5 (￨5 redirectResponse￨5 )￨5 ;￨5 page￨5 .￨5 doRender￨5 (￨5 )￨5 ;￨5 setResponse￨5 (￨5 currentResponse￨5 )￨5 ;￨5 final￨5 String￨5 responseRedirect￨5 =￨5 redirectResponse￨5 .￨5 getRedirectUrl￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 responseRedirect￨6 !=￨6 null￨6 )￨5 {￨5 redirectUrl￨6 =￨6 responseRedirect￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 redirectResponse￨6 .￨6 getContentLength￨6 (￨6 )￨6 )￨6 >￨6 0￨6 )￨5 {￨5 redirectResponse￨6 .￨6 setCharacterEncoding￨6 (￨6 currentResponse￨6 .￨6 getCharacterEncoding￨6 (￨6 )￨6 )￨6 ;￨6 redirectResponse￨6 .￨6 filter￨6 (￨6 )￨6 ;￨6 redirectResponse￨6 .￨6 close￨6 (￨6 )￨6 ;￨6 redirectUrl￨6 =￨6 page￨6 .￨6 urlFor￨6 (￨6 page￨6 ,￨6 IRedirectListener￨6 .￨6 class￨6 )￨6 ;￨6 <START_BUG>￨6 (￨6 (￨6 WebApplication￨6 )￨6 (￨6 application￨6 )￨6 )￨6 .￨6 addRedirect￨6 (￨6 getWebRequest￨6 (￨6 )￨6 .￨6 getHttpServletRequest￨6 (￨6 )￨6 ,￨6 redirectUrl￨6 ,￨6 redirectResponse￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 catch￨4 (￨4 RuntimeException￨5 ex￨5 )￨4 {￨4 setResponse￨5 (￨5 currentResponse￨5 )￨5 ;￨5 WebRequestCycle￨5 .￨5 log￨5 .￨5 error￨5 (￨5 ex￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 ex￨5 )￨5 ;￨5 IRequestCycleProcessor￨5 processor￨5 =￨5 getRequestCycleProcessor￨5 (￨5 )￨5 ;￨5 processor￨5 .￨5 respond￨5 (￨5 ex￨5 ,￨5 this￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 session￨4 .￨4 touch￨4 (￨4 page￨4 )￨4 ;￨4 page￨4 .￨4 internalEndRequest￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 redirectUrl￨4 ==￨4 null￨4 )￨3 {￨3 redirectUrl￨4 =￨4 page￨4 .￨4 urlFor￨4 (￨4 page￨4 ,￨4 IRedirectListener￨4 .￨4 class￨4 )￨4 ;￨4 }￨3 response￨3 .￨3 redirect￨3 (￨3 redirectUrl￨3 )￨3 ;￨3 }￨2 protected￨2 ClientInfo￨2 newClientInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IRequestCycleProcessor￨2 getRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DomainClientImpl￨1 implements￨1 DomainClient￨1 {￨1 private￨2 volatile￨2 DomainDeploymentManager￨2 deploymentManager￨2 ;￨2 private￨2 final￨2 ModelControllerClient￨2 delegate￨2 ;￨2 public￨2 DomainClientImpl￨2 (￨2 InetAddress￨3 address￨3 ,￨3 int￨3 port￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 OperationResult￨2 execute￨2 (￨2 ModelNode￨3 operation￨3 ,￨3 ResultHandler￨3 handler￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 execute￨2 (￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 IOException￨2 ,￨2 CancellationException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 OperationResult￨2 execute￨2 (￨2 Operation￨3 operation￨3 ,￨3 ResultHandler￨3 handler￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 execute￨2 (￨2 Operation￨2 operation￨2 )￨2 throws￨2 IOException￨2 ,￨2 CancellationException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 byte￨2 [￨2 ]￨2 addDeploymentContent￨2 (￨2 InputStream￨3 stream￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 DomainDeploymentManager￨2 getDeploymentManager￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 String￨2 >￨2 getHostControllerNames￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Map￨2 <￨2 ServerIdentity￨2 ,￨2 ServerStatus￨2 >￨2 getServerStatuses￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Set￨2 <￨2 String￨2 >￨2 getServerNames￨2 (￨2 String￨3 host￨3 )￨2 {￨2 ModelNode￨3 op￨3 =￨3 new￨3 ModelNode￨3 (￨3 )￨3 ;￨3 op￨3 .￨3 get￨3 (￨3 "operation"￨3 )￨3 .￨3 set￨3 (￨3 "read-children-names"￨3 )￨3 ;￨3 op￨3 .￨3 get￨3 (￨3 "child-type"￨3 )￨3 .￨3 set￨3 (￨3 "server-config"￨3 )￨3 ;￨3 <START_BUG>￨3 op￨3 .￨3 get￨3 (￨3 "address"￨3 )￨3 .￨3 set￨3 (￨3 "host"￨3 ,￨3 host￨3 )￨3 ;￨3 <END_BUG>￨3 ModelNode￨3 result￨3 =￨3 executeForResult￨3 (￨3 Factory￨3 .￨3 create￨3 (￨3 op￨3 )￨3 .￨3 build￨3 (￨3 )￨3 )￨3 ;￨3 Set￨3 <￨3 String￨3 >￨3 servers￨3 =￨3 new￨3 HashSet￨3 <￨3 String￨3 >￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 ModelNode￨4 server￨4 :￨4 result￨4 .￨4 asList￨4 (￨4 )￨4 )￨3 {￨3 servers￨4 .￨4 add￨4 (￨4 server￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 servers￨3 ;￨3 }￨2 private￨2 ModelNode￨2 readAttribute￨2 (￨2 String￨3 name￨3 ,￨3 ModelNode￨3 address￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServerStatus￨2 startServer￨2 (￨2 String￨3 hostControllerName￨3 ,￨3 String￨3 serverName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServerStatus￨2 stopServer￨2 (￨2 String￨3 hostControllerName￨3 ,￨3 String￨3 serverName￨3 ,￨3 long￨3 gracefulShutdownTimeout￨3 ,￨3 TimeUnit￨3 timeUnit￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServerStatus￨2 restartServer￨2 (￨2 String￨3 hostControllerName￨3 ,￨3 String￨3 serverName￨3 ,￨3 long￨3 gracefulShutdownTimeout￨3 ,￨3 TimeUnit￨3 timeUnit￨3 )￨2 {￨2 }￨2 boolean￨2 isDeploymentNameUnique￨2 (￨2 final￨3 String￨3 deploymentName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 ModelNode￨2 executeForResult￨2 (￨2 Operation￨3 op￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RarConfigProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 ModuleIdentifier￨2 JAVAX_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javax.resource.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 LOGGING_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.logging"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 IRON_JACAMAR_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.ironjacamar.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 IRON_JACAMAR_IMPL_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.ironjacamar.impl"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 NAMING_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.as.naming"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 VALIDATION_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javax.validation.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 HIBERNATE_VALIDATOR_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.hibernate.validator"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 COMMON_CORE_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.common-core"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 SYSTEM_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javax.api"￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 phaseContext￨4 .￨4 getDeploymentUnit￨4 (￨4 )￨4 .￨4 getAttachment￨4 (￨4 ATTACHMENT_KEY￨4 )￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 final￨3 ModuleLoader￨3 moduleLoader￨3 =￨3 Module￨3 .￨3 getSystemModuleLoader￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ModuleSpecification￨3 moduleSpecification￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 MODULE_SPECIFICATION￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 JAVAX_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 LOGGING_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 IRON_JACAMAR_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 IRON_JACAMAR_IMPL_ID￨3 ,￨3 false￨3 ,￨3 true￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 SYSTEM_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 NAMING_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 VALIDATION_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 HIBERNATE_VALIDATOR_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 RarConfigProcessor￨3 .￨3 COMMON_CORE_ID￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 undeploy￨2 (￨2 final￨3 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ReturnStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 boolean￨2 isSynchronized￨2 ;￨2 public￨2 SubRoutineStatement￨2 [￨2 ]￨2 subroutines￨2 ;￨2 public￨2 boolean￨2 isAnySubRoutineEscaping￨2 =￨2 false￨2 ;￨2 public￨2 LocalVariableBinding￨2 saveValueVariable￨2 ;￨2 public￨2 ReturnStatement￨2 (￨2 Expression￨3 expr￨3 ,￨3 int￨3 s￨3 ,￨3 int￨3 e￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateReturnBytecode￨2 (￨2 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateStoreSaveValueIfNecessary￨2 (￨2 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 needValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 prepareSaveValueLocation￨2 (￨2 TryStatement￨3 targetTryStatement￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 MethodScope￨3 methodScope￨3 =￨3 scope￨3 .￨3 methodScope￨3 (￨3 )￨3 ;￨3 MethodBinding￨3 methodBinding￨3 ;￨3 TypeBinding￨3 methodType￨3 =￨3 (￨3 (￨3 methodScope￨3 .￨3 referenceContext￨3 )￨3 instanceof￨3 AbstractMethodDeclaration￨3 )￨3 ?￨3 (￨3 methodBinding￨3 =￨3 (￨3 (￨3 AbstractMethodDeclaration￨3 )￨3 (￨3 methodScope￨3 .￨3 referenceContext￨3 )￨3 )￨3 .￨3 binding￨3 )￨3 ==￨3 null￨3 ?￨3 null￨3 :￨3 methodBinding￨3 .￨3 returnType￨3 :￨3 VoidBinding￨3 ;￨3 TypeBinding￨3 expressionType￨3 ;￨3 if￨3 (￨3 methodType￨4 ==￨4 (￨4 VoidBinding￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 expression￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 expressionType￨5 =￨5 expression￨5 .￨5 resolveType￨5 (￨5 scope￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 attemptToReturnNonVoidExpression￨5 (￨5 this￨5 ,￨5 expressionType￨5 )￨5 ;￨5 }￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 expression￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 methodType￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 shouldReturn￨5 (￨5 methodType￨5 ,￨5 this￨5 )￨5 ;￨5 }￨4 return￨4 ;￨4 }￨3 expression￨3 .￨3 setExpectedType￨3 (￨3 methodType￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 expressionType￨4 =￨4 expression￨4 .￨4 resolveType￨4 (￨4 scope￨4 )￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 expressionType￨4 ==￨4 (￨4 VoidBinding￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 attemptToReturnVoidValue￨4 (￨4 this￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 methodType￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 expressionType￨3 .￨3 isRawType￨3 (￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 methodType￨3 .￨3 isBoundParameterizedType￨3 (￨3 )￨3 )￨3 ||￨3 (￨3 methodType￨3 .￨3 isGenericType￨3 (￨3 )￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 unsafeRawConversion￨3 (￨3 this￨3 .￨3 expression￨3 ,￨3 expressionType￨3 ,￨3 methodType￨3 )￨3 ;￨3 if￨3 (￨3 expression￨4 .￨4 isConstantValueOfTypeAssignableToType￨4 (￨4 expressionType￨4 ,￨4 methodType￨4 )￨4 )￨3 {￨3 expression￨4 .￨4 computeConversion￨4 (￨4 scope￨4 ,￨4 methodType￨4 ,￨4 expressionType￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 expressionType￨4 .￨4 isCompatibleWith￨4 (￨4 methodType￨4 )￨4 )￨3 {￨3 expression￨4 .￨4 computeConversion￨4 (￨4 scope￨4 ,￨4 methodType￨4 ,￨4 expressionType￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 typeMismatchError￨3 (￨3 expressionType￨3 ,￨3 methodType￨3 ,￨3 expression￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PanelTest￨1 extends￨1 WicketTestCase￨1 {￨1 public￨2 PanelTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderHomePage_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 boolean￨3 hit￨3 =￨3 false￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 executeTest￨4 (￨4 PanelPage_1￨4 .￨4 class￨4 ,￨4 "Dummy.html"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 MarkupException￨4 mex￨4 )￨3 {￨3 hit￨4 =￨4 true￨4 ;￨4 assertNotNull￨4 (￨4 mex￨4 .￨4 getMarkupStream￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 assertTrue￨4 (￨4 mex￨4 .￨4 getMessage￨4 (￨4 )￨4 .￨4 contains￨4 (￨4 "does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag"￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 assertTrue￨4 (￨4 mex￨4 .￨4 getMessage￨4 (￨4 )￨4 .￨4 contains￨4 (￨4 "SimplePanel_1.html"￨4 )￨4 )￨4 ;￨4 }￨3 assertTrue￨3 (￨3 "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨3 ,￨3 hit￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testRenderHomePage_2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanel3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanel4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_5￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_6￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanelWithAttributeModifier￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_7￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_8￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStartPanel￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SegmentTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testDistance￨2 (￨2 )￨2 {￨2 Vector2D￨3 start￨3 =￨3 new￨3 Vector2D￨3 (￨3 2￨3 ,￨3 2￨3 )￨3 ;￨3 Vector2D￨3 end￨3 =￨3 new￨3 Vector2D￨3 (￨3 (￨3 -￨3 2￨3 )￨3 ,￨3 (￨3 -￨3 2￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 Segment￨3 segment￨3 =￨3 new￨3 Segment￨3 (￨3 start￨3 ,￨3 end￨3 ,￨3 new￨3 Line￨3 (￨3 start￨3 ,￨3 end￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 FastMath￨3 .￨3 sqrt￨3 (￨3 2￨3 )￨3 ,￨3 segment￨3 .￨3 distance￨3 (￨3 new￨3 Vector2D￨3 (￨3 1￨3 ,￨3 (￨3 -￨3 1￨3 )￨3 )￨3 )￨3 ,￨3 1.0E-10￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 FastMath￨3 .￨3 sin￨3 (￨3 (￨3 (￨3 Math￨3 .￨3 PI￨3 )￨3 /￨3 4.0￨3 )￨3 )￨3 ,￨3 segment￨3 .￨3 distance￨3 (￨3 new￨3 Vector2D￨3 (￨3 0￨3 ,￨3 (￨3 -￨3 1￨3 )￨3 )￨3 )￨3 ,￨3 1.0E-10￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 FastMath￨3 .￨3 sqrt￨3 (￨3 8￨3 )￨3 ,￨3 segment￨3 .￨3 distance￨3 (￨3 new￨3 Vector2D￨3 (￨3 0￨3 ,￨3 4￨3 )￨3 )￨3 ,￨3 1.0E-10￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 FastMath￨3 .￨3 sqrt￨3 (￨3 8￨3 )￨3 ,￨3 segment￨3 .￨3 distance￨3 (￨3 new￨3 Vector2D￨3 (￨3 0￨3 ,￨3 (￨3 -￨3 4￨3 )￨3 )￨3 )￨3 ,￨3 1.0E-10￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 Wizard￨1 extends￨1 Panel￨1 implements￨1 IWizard￨1 ,￨1 IWizardModelListener￨1 {￨1 public￨2 static￨2 final￨2 String￨2 BUTTONS_ID￨2 =￨2 "buttons"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FEEDBACK_ID￨2 =￨2 "feedback"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 HEADER_ID￨2 =￨2 "header"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 OVERVIEW_ID￨2 =￨2 "overview"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FORM_ID￨2 =￨2 "form"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VIEW_ID￨2 =￨2 "view"￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 IWizardStep￨2 activeStep￨2 ;￨2 private￨2 Form￨2 form￨2 ;￨2 private￨2 IWizardModel￨2 wizardModel￨2 ;￨2 public￨2 Wizard￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Wizard￨2 (￨2 String￨3 id￨3 ,￨3 boolean￨3 addDefaultCssStyle￨3 )￨2 {￨2 }￨2 public￨2 Wizard￨2 (￨2 String￨3 id￨3 ,￨3 IWizardModel￨3 wizardModel￨3 )￨2 {￨2 }￨2 public￨2 Wizard￨2 (￨2 String￨3 id￨3 ,￨3 IWizardModel￨3 wizardModel￨3 ,￨3 boolean￨3 addDefaultCssStyle￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addDefaultCssStyle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IWizardStep￨2 getActiveStep￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Form￨2 getForm￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IWizardModel￨2 getWizardModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVersioned￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 onActiveStepChanged￨2 (￨2 IWizardStep￨3 newStep￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onCancel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 onFinish￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 init￨2 (￨2 IWizardModel￨3 wizardModel￨3 )￨2 {￨2 }￨2 protected￨2 Component￨2 newButtonBar￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 protected￨2 FeedbackPanel￨2 newFeedbackPanel￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 protected￨2 Form￨2 newForm￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onBeforeRender￨2 (￨2 )￨2 {￨2 super￨3 .￨3 onBeforeRender￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 Component￨3 buttonBar￨3 =￨3 get￨3 (￨3 Wizard￨3 .￨3 BUTTONS_ID￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 buttonBar￨4 instanceof￨4 IDefaultButtonProvider￨4 )￨3 {￨3 IFormSubmittingComponent￨4 defaultButton￨4 =￨4 (￨4 (￨4 IDefaultButtonProvider￨4 )￨4 (￨4 buttonBar￨4 )￨4 )￨4 .￨4 getDefaultButton￨4 (￨4 wizardModel￨4 )￨4 ;￨4 form￨4 .￨4 setDefaultButton￨4 (￨4 defaultButton￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 Component￨2 newOverviewBar￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WorkingSetManager￨1 implements￨1 IWorkingSetManager￨1 {￨1 private￨2 static￨2 final￨2 String￨2 WORKING_SET_STATE_FILENAME￨2 =￨2 "workingsets.xml"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MRU_SIZE￨2 =￨2 5￨2 ;￨2 private￨2 SortedSet￨2 workingSets￨2 =￨2 new￨2 TreeSet￨2 (￨2 new￨2 WorkingSetComparator￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 List￨2 recentWorkingSets￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 private￨2 ListenerList￨2 propertyChangeListeners￨2 =￨2 new￨2 ListenerList￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 addRecentWorkingSet￨2 (￨2 IWorkingSet￨3 workingSet￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addWorkingSet￨2 (￨2 IWorkingSet￨3 workingSet￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addPropertyChangeListener￨2 (￨2 IPropertyChangeListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 IWorkingSet￨2 createWorkingSet￨2 (￨2 String￨3 name￨3 ,￨3 IAdaptable￨3 [￨3 ]￨3 elements￨3 )￨2 {￨2 }￨2 public￨2 IWorkingSetEditWizard￨2 createWorkingSetEditWizard￨2 (￨2 IWorkingSet￨3 workingSet￨3 )￨2 {￨2 }￨2 public￨2 IWorkingSetSelectionDialog￨2 createWorkingSetSelectionDialog￨2 (￨2 Shell￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 IWorkingSetSelectionDialog￨2 createWorkingSetSelectionDialog￨2 (￨2 Shell￨3 parent￨3 ,￨3 boolean￨3 multi￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 private￨2 void￨2 firePropertyChange￨2 (￨2 String￨3 changeId￨3 ,￨3 Object￨3 oldValue￨3 ,￨3 Object￨3 newValue￨3 )￨2 {￨2 }￨2 public￨2 IWorkingSet￨2 [￨2 ]￨2 getRecentWorkingSets￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkingSet￨2 getWorkingSet￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkingSet￨2 [￨2 ]￨2 getWorkingSets￨2 (￨2 )￨2 {￨2 }￨2 private￨2 File￨2 getWorkingSetStateFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removePropertyChangeListener￨2 (￨2 IPropertyChangeListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeWorkingSet￨2 (￨2 IWorkingSet￨3 workingSet￨3 )￨2 {￨2 }￨2 private￨2 void￨2 restoreMruList￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 void￨2 restoreState￨2 (￨2 )￨2 {￨2 File￨3 stateFile￨3 =￨3 getWorkingSetStateFile￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 stateFile￨4 .￨4 exists￨4 (￨4 )￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 FileInputStream￨5 input￨5 =￨5 new￨5 FileInputStream￨5 (￨5 stateFile￨5 )￨5 ;￨5 <START_BUG>￨5 InputStreamReader￨5 reader￨5 =￨5 new￨5 InputStreamReader￨5 (￨5 input￨5 ,￨5 "utf-8"￨5 )￨5 ;￨5 <END_BUG>￨5 IMemento￨5 memento￨5 =￨5 XMLMemento￨5 .￨5 createReadRoot￨5 (￨5 reader￨5 )￨5 ;￨5 restoreWorkingSetState￨5 (￨5 memento￨5 )￨5 ;￨5 restoreMruList￨5 (￨5 memento￨5 )￨5 ;￨5 reader￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 MessageDialog￨5 .￨5 openError￨5 (￨5 (￨5 (￨5 Shell￨5 )￨5 (￨5 null￨5 )￨5 )￨5 ,￨5 WorkbenchMessages￨5 .￨5 getString￨5 (￨5 "ProblemRestoringWorkingSetState.title"￨5 )￨5 ,￨5 WorkbenchMessages￨5 .￨5 getString￨5 (￨5 "ProblemRestoringWorkingSetState.message"￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 WorkbenchException￨5 e￨5 )￨4 {￨4 ErrorDialog￨5 .￨5 openError￨5 (￨5 (￨5 (￨5 Shell￨5 )￨5 (￨5 null￨5 )￨5 )￨5 ,￨5 WorkbenchMessages￨5 .￨5 getString￨5 (￨5 "ProblemRestoringWorkingSetState.title"￨5 )￨5 ,￨5 WorkbenchMessages￨5 .￨5 getString￨5 (￨5 "ProblemRestoringWorkingSetState.message"￨5 )￨5 ,￨5 e￨5 .￨5 getStatus￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 IWorkingSet￨2 restoreWorkingSet￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 private￨2 void￨2 restoreWorkingSetState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 private￨2 void￨2 saveState￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 saveMruList￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 private￨2 void￨2 saveWorkingSetState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 void￨2 workingSetChanged￨2 (￨2 IWorkingSet￨3 changedWorkingSet￨3 ,￨3 String￨3 propertyChangeId￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Text￨1 extends￨1 Scrollable￨1 {￨1 int￨2 txnObject￨2 ;￨2 int￨2 txnFrameID￨2 ;￨2 int￨2 textLimit￨2 =￨2 Text￨2 .￨2 LIMIT￨2 ;￨2 int￨2 tabs￨2 =￨2 8￨2 ;￨2 char￨2 echoCharacter￨2 ;￨2 boolean￨2 doubleClick￨2 ;￨2 String￨2 hiddenText￨2 ;￨2 ControlEditTextSelectionRec￨2 selection￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 LIMIT￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 DELIMITER￨2 ;￨2 static￨2 final￨2 char￨2 PASSWORD￨2 =￨2 '¥'￨2 ;￨2 public￨2 Text￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addModifyListener￨2 (￨2 ModifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addVerifyListener￨2 (￨2 VerifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 append￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 int￨2 callFocusEventHandler￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clearSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 computeSize￨2 (￨2 int￨3 wHint￨3 ,￨3 int￨3 hHint￨3 ,￨3 boolean￨3 changed￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copy￨2 (￨2 )￨2 {￨2 }￨2 void￨2 copy￨2 (￨2 char￨3 [￨3 ]￨3 buffer￨3 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 )￨2 {￨2 }￨2 ScrollBar￨2 createScrollBar￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 void￨2 createWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 cut￨2 (￨2 )￨2 {￨2 }￨2 Color￨2 defaultBackground￨2 (￨2 )￨2 {￨2 }￨2 Color￨2 defaultForeground￨2 (￨2 )￨2 {￨2 }￨2 void￨2 drawBackground￨2 (￨2 int￨3 control￨3 ,￨3 int￨3 context￨3 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 OS￨4 .￨4 HIVIEW￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 drawFocus￨4 (￨4 control￨4 ,￨4 context￨4 ,￨4 (￨4 (￨4 hasFocus￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 drawFocusRing￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 hasBorder￨4 (￨4 )￨4 ,￨4 getParentBackground￨4 (￨4 )￨4 ,￨4 inset￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 void￨2 drawWidget￨2 (￨2 int￨3 control￨3 ,￨3 int￨3 context￨3 ,￨3 int￨3 damageRgn￨3 ,￨3 int￨3 visibleRgn￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getCaretLineNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getCaretLocation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getCaretPosition￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getCharCount￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getClipboardText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getDoubleClickEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 getEchoChar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getEditable￨2 (￨2 )￨2 {￨2 }￨2 Rect￨2 getInset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLineCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getLineDelimiter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLineHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getOrientation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getSelectionCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSelectionText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTabs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 char￨2 [￨2 ]￨2 getEditText￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 ,￨3 boolean￨3 hidden￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getTextLimit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTopIndex￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTopPixel￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getTXNText￨2 (￨2 int￨3 iStartOffset￨3 ,￨3 int￨3 iEndOffset￨3 )￨2 {￨2 }￨2 Rect￨2 inset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 insert￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 insertEditText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 int￨2 kEventControlActivate￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlBoundsChanged￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlClick￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlDeactivate￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlGetFocusPart￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventMouseDown￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlSetCursor￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventControlSetFocusPart￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 int￨2 kEventUnicodeKeyPressed￨2 (￨2 int￨3 nextHandler￨3 ,￨3 int￨3 theEvent￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 org￨2 .￨2 eclipse￨2 .￨2 swt￨2 .￨2 internal￨2 .￨2 carbon￨2 .￨2 Point￨2 measureSpace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 paste￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeModifyListener￨2 (￨2 ModifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeVerifyListener￨2 (￨2 VerifyListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 resetVisibleRegion￨2 (￨2 int￨3 control￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectAll￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 sendKeyEvent￨2 (￨2 int￨3 type￨3 ,￨3 Event￨3 event￨3 )￨2 {￨2 }￨2 void￨2 setBackground￨2 (￨2 float￨3 [￨3 ]￨3 color￨3 )￨2 {￨2 }￨2 int￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 resize￨3 ,￨3 boolean￨3 events￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDoubleClickEnabled￨2 (￨2 boolean￨3 doubleClick￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEchoChar￨2 (￨2 char￨3 echo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEditable￨2 (￨2 boolean￨3 editable￨3 )￨2 {￨2 }￨2 void￨2 setForeground￨2 (￨2 float￨3 [￨3 ]￨3 color￨3 )￨2 {￨2 }￨2 void￨2 setFontStyle￨2 (￨2 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOrientation￨2 (￨2 int￨3 orientation￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 start￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 Point￨3 selection￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTabs￨2 (￨2 int￨3 tabs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 setEditText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 setTXNBounds￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setTXNText￨2 (￨2 int￨3 iStartOffset￨3 ,￨3 int￨3 iEndOffset￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTextLimit￨2 (￨2 int￨3 limit￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTopIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showSelection￨2 (￨2 )￨2 {￨2 }￨2 int￨2 traversalCode￨2 (￨2 int￨3 key￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 String￨2 verifyText￨2 (￨2 String￨3 string￨3 ,￨3 int￨3 start￨3 ,￨3 int￨3 end￨3 ,￨3 Event￨3 keyEvent￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 Program￨1 {￨1 String￨2 name￨2 ;￨2 String￨2 command￨2 ;￨2 String￨2 iconName￨2 ;￨2 Program￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Program￨2 findProgram￨2 (￨2 String￨3 extension￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 [￨2 ]￨2 getExtensions￨2 (￨2 )￨2 {￨2 }￨2 static￨2 String￨2 getKeyValue￨2 (￨2 String￨3 string￨3 ,￨3 boolean￨3 expand￨3 )￨2 {￨2 }￨2 static￨2 Program￨2 getProgram￨2 (￨2 String￨3 key￨3 )￨2 {￨2 String￨3 name￨3 =￨3 Program￨3 .￨3 getKeyValue￨3 (￨3 key￨3 ,￨3 false￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 name￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 name￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 name￨4 =￨4 key￨4 ;￨4 }￨3 String￨3 DEFAULT_COMMAND￨3 =￨3 "\\shell"￨3 ;￨3 String￨3 defaultCommand￨3 =￨3 Program￨3 .￨3 getKeyValue￨3 (￨3 (￨3 key￨3 +￨3 DEFAULT_COMMAND￨3 )￨3 ,￨3 true￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 defaultCommand￨3 ==￨3 null￨3 )￨3 <END_BUG>￨3 defaultCommand￨3 =￨3 "open"￨3 ;￨3 String￨3 COMMAND￨3 =￨3 (￨3 "\\shell\\"￨3 +￨3 defaultCommand￨3 )￨3 +￨3 "\\command"￨3 ;￨3 String￨3 command￨3 =￨3 Program￨3 .￨3 getKeyValue￨3 (￨3 (￨3 key￨3 +￨3 COMMAND￨3 )￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 command￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 command￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 String￨3 DEFAULT_ICON￨3 =￨3 "\\DefaultIcon"￨3 ;￨3 String￨3 iconName￨3 =￨3 Program￨3 .￨3 getKeyValue￨3 (￨3 (￨3 key￨3 +￨3 DEFAULT_ICON￨3 )￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 iconName￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 iconName￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 Program￨3 program￨3 =￨3 new￨3 Program￨3 (￨3 )￨3 ;￨3 program￨3 .￨3 name￨3 =￨3 name￨3 ;￨3 program￨3 .￨3 command￨3 =￨3 command￨3 ;￨3 program￨3 .￨3 iconName￨3 =￨3 iconName￨3 ;￨3 return￨3 program￨3 ;￨3 }￨2 public￨2 static￨2 Program￨2 [￨2 ]￨2 getPrograms￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 launch￨2 (￨2 String￨3 fileName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 execute￨2 (￨2 String￨3 fileName￨3 )￨2 {￨2 }￨2 public￨2 ImageData￨2 getImageData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ShowViewDialog￨1 extends￨1 Dialog￨1 implements￨1 IDoubleClickListener￨1 ,￨1 ISelectionChangedListener￨1 {￨1 private￨2 static￨2 final￨2 String￨2 DIALOG_SETTING_SECTION_NAME￨2 =￨2 "ShowViewDialog"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 LIST_HEIGHT￨2 =￨2 300￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 LIST_WIDTH￨2 =￨2 250￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 STORE_EXPANDED_CATEGORIES_ID￨2 =￨2 (￨2 ShowViewDialog￨2 .￨2 DIALOG_SETTING_SECTION_NAME￨2 )￨2 +￨2 ".STORE_EXPANDED_CATEGORIES_ID"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 STORE_SELECTED_VIEW_ID￨2 =￨2 (￨2 ShowViewDialog￨2 .￨2 DIALOG_SETTING_SECTION_NAME￨2 )￨2 +￨2 ".STORE_SELECTED_VIEW_ID"￨2 ;￨2 private￨2 FilteredTree￨2 filteredTree￨2 ;￨2 private￨2 Button￨2 okButton￨2 ;￨2 private￨2 IViewDescriptor￨2 [￨2 ]￨2 viewDescs￨2 =￨2 new￨2 IViewDescriptor￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 IViewRegistry￨2 viewReg￨2 ;￨2 private￨2 IWorkbenchWindow￨2 window￨2 ;￨2 private￨2 Color￨2 dimmedForeground￨2 ;￨2 public￨2 ShowViewDialog￨2 (￨2 IWorkbenchWindow￨3 window￨3 ,￨3 IViewRegistry￨3 viewReg￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 buttonPressed￨2 (￨2 int￨3 buttonId￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 cancelPressed￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 configureShell￨2 (￨2 Shell￨3 shell￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createButtonsForButtonBar￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createDialogArea￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 private￨2 static￨2 RGB￨2 blend￨2 (￨2 RGB￨3 c1￨3 ,￨3 RGB￨3 c2￨3 ,￨3 int￨3 ratio￨3 )￨2 {￨2 }￨2 private￨2 static￨2 int￨2 blend￨2 (￨2 int￨3 v1￨3 ,￨3 int￨3 v2￨3 ,￨3 int￨3 ratio￨3 )￨2 {￨2 }￨2 private￨2 void￨2 createFilteredTreeViewer￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 PatternFilter￨3 filter￨3 =￨3 new￨3 ViewPatternFilter￨3 (￨3 )￨3 ;￨3 int￨3 styleBits￨3 =￨3 (￨3 (￨3 (￨3 SWT￨3 .￨3 MULTI￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 H_SCROLL￨3 )￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 V_SCROLL￨3 )￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 BORDER￨3 )￨3 ;￨3 filteredTree￨3 =￨3 new￨3 FilteredTree￨3 (￨3 parent￨3 ,￨3 styleBits￨3 ,￨3 filter￨3 )￨3 ;￨3 filteredTree￨3 .￨3 setBackground￨3 (￨3 parent￨3 .￨3 getDisplay￨3 (￨3 )￨3 .￨3 getSystemColor￨3 (￨3 COLOR_WIDGET_BACKGROUND￨3 )￨3 )￨3 ;￨3 TreeViewer￨3 treeViewer￨3 =￨3 filteredTree￨3 .￨3 getViewer￨3 (￨3 )￨3 ;￨3 Control￨3 treeControl￨3 =￨3 treeViewer￨3 .￨3 getControl￨3 (￨3 )￨3 ;￨3 RGB￨3 dimmedRGB￨3 =￨3 ShowViewDialog￨3 .￨3 blend￨3 (￨3 treeControl￨3 .￨3 getForeground￨3 (￨3 )￨3 .￨3 getRGB￨3 (￨3 )￨3 ,￨3 treeControl￨3 .￨3 getBackground￨3 (￨3 )￨3 .￨3 getRGB￨3 (￨3 )￨3 ,￨3 60￨3 )￨3 ;￨3 dimmedForeground￨3 =￨3 new￨3 Color￨3 (￨3 treeControl￨3 .￨3 getDisplay￨3 (￨3 )￨3 ,￨3 dimmedRGB￨3 )￨3 ;￨3 treeControl￨3 .￨3 addDisposeListener￨3 (￨3 new￨3 DisposeListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 widgetDisposed￨4 (￨4 DisposeEvent￨5 e￨5 )￨4 {￨4 dimmedForeground￨5 .￨5 dispose￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 treeViewer￨3 .￨3 setLabelProvider￨3 (￨3 new￨3 ViewLabelProvider￨3 (￨3 window￨3 ,￨3 dimmedForeground￨3 )￨3 )￨3 ;￨3 treeViewer￨3 .￨3 setContentProvider￨3 (￨3 new￨3 ViewContentProvider￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 treeViewer￨3 .￨3 setSorter￨3 (￨3 new￨3 ViewSorter￨3 (￨3 (￨3 (￨3 ViewRegistry￨3 )￨3 (￨3 viewReg￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 treeViewer￨3 .￨3 setInput￨3 (￨3 viewReg￨3 )￨3 ;￨3 treeViewer￨3 .￨3 addSelectionChangedListener￨3 (￨3 this￨3 )￨3 ;￨3 treeViewer￨3 .￨3 addDoubleClickListener￨3 (￨3 this￨3 )￨3 ;￨3 treeViewer￨3 .￨3 addFilter￨3 (￨3 new￨3 CapabilityFilter￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 hasAtMostOneView￨4 (￨4 filteredTree￨4 .￨4 getViewer￨4 (￨4 )￨4 )￨4 )￨3 {￨3 Text￨4 filterText￨4 =￨4 filteredTree￨4 .￨4 getFilterControl￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 filterText￨5 !=￨5 null￨5 )￨4 {￨4 filterText￨5 .￨5 setEnabled￨5 (￨5 false￨5 )￨5 ;￨5 }￨4 }￨3 applyDialogFont￨3 (￨3 filteredTree￨3 )￨3 ;￨3 }￨2 private￨2 boolean￨2 hasAtMostOneView￨2 (￨2 TreeViewer￨3 tree￨3 )￨2 {￨2 }￨2 public￨2 void￨2 doubleClick￨2 (￨2 DoubleClickEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 IDialogSettings￨2 getDialogSettings￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IViewDescriptor￨2 [￨2 ]￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 layoutTopControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 restoreWidgetValues￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 saveWidgetValues￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 selectionChanged￨2 (￨2 SelectionChangedEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateButtons￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateSelection￨2 (￨2 SelectionChangedEvent￨3 event￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FieldReference￨1 extends￨1 Reference￨1 implements￨1 InvocationSite￨1 {￨1 public￨2 Expression￨2 receiver￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 token￨2 ;￨2 public￨2 FieldBinding￨2 binding￨2 ;￨2 public￨2 FieldBinding￨2 codegenBinding￨2 ;￨2 public￨2 long￨2 nameSourcePosition￨2 ;￨2 MethodBinding￨2 syntheticReadAccessor￨2 ;￨2 MethodBinding￨2 syntheticWriteAccessor￨2 ;￨2 public￨2 TypeBinding￨2 receiverType￨2 ;￨2 public￨2 FieldReference￨2 (￨2 char￨3 [￨3 ]￨3 source￨3 ,￨3 long￨3 pos￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 isCompound￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 fieldBinding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generateAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCompoundAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 assignmentImplicitConversion￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generatePostIncrement￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 CompoundAssignment￨3 postIncrement￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 Constant￨2 getConstantFor￨2 (￨2 FieldBinding￨3 binding￨3 ,￨3 Reference￨3 reference￨3 ,￨3 boolean￨3 isImplicit￨3 ,￨3 Scope￨3 referenceScope￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSuperAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTypeAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticReadAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticWriteAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 this￨3 .￨3 receiverType￨3 =￨3 receiver￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 receiverType￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 constant￨4 =￨4 NotAConstant￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 this￨3 .￨3 codegenBinding￨3 =￨3 this￨3 .￨3 binding￨3 =￨3 scope￨3 .￨3 getField￨3 (￨3 this￨3 .￨3 receiverType￨3 ,￨3 token￨3 ,￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 binding￨4 .￨4 isValidBinding￨4 (￨4 )￨4 )￨4 )￨3 {￨3 constant￨4 =￨4 NotAConstant￨4 ;￨4 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 invalidField￨4 (￨4 this￨4 ,￨4 this￨4 .￨4 receiverType￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 isFieldUseDeprecated￨3 (￨3 binding￨3 ,￨3 scope￨3 )￨3 )￨3 <END_BUG>￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 deprecatedField￨3 (￨3 binding￨3 ,￨3 this￨3 )￨3 ;￨3 boolean￨3 isImplicitThisRcv￨3 =￨3 receiver￨3 .￨3 isImplicitThis￨3 (￨3 )￨3 ;￨3 constant￨3 =￨3 FieldReference￨3 .￨3 getConstantFor￨3 (￨3 binding￨3 ,￨3 this￨3 ,￨3 isImplicitThisRcv￨3 ,￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 isImplicitThisRcv￨4 )￨3 {￨3 constant￨4 =￨4 NotAConstant￨4 ;￨4 }￨3 if￨3 (￨3 binding￨4 .￨4 isStatic￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 (￨5 isImplicitThisRcv￨5 ||￨5 (￨5 receiver￨5 .￨5 isSuper￨5 (￨5 )￨5 )￨5 )￨5 ||￨5 (￨5 (￨5 (￨5 receiver￨5 )￨5 instanceof￨5 NameReference￨5 )￨5 &&￨5 (￨5 (￨5 (￨5 (￨5 (￨5 NameReference￨5 )￨5 (￨5 receiver￨5 )￨5 )￨5 .￨5 bits￨5 )￨5 &￨5 (￨5 BindingIds￨5 .￨5 TYPE￨5 )￨5 )￨5 !=￨5 0￨5 )￨5 )￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 unnecessaryReceiverForStaticField￨5 (￨5 this￨5 ,￨5 binding￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 this￨3 .￨3 resolvedType￨3 =￨3 binding￨3 .￨3 type￨3 ;￨3 }￨2 public￨2 void￨2 setActualReceiverType￨2 (￨2 ReferenceBinding￨3 receiverType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDepth￨2 (￨2 int￨3 depth￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFieldIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 ;￨2 private￨2 static￨2 final￨2 AtomicInteger￨2 archiveCount￨2 =￨2 new￨2 AtomicInteger￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 private￨2 OSGiSubsystemState￨2 subsystemState￨2 ;￨2 private￨2 DeploymentChain￨2 deploymentChain￨2 ;￨2 private￨2 Selector￨2 selector￨2 ;￨2 public￨2 OSGiSubsystemSupport￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 public￨2 OSGiSubsystemSupport￨2 (￨2 final￨2 OSGiSubsystemState￨2 subsystemState￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServiceContainer￨2 getServiceContainer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModuleLoader￨2 getClassifyingModuleLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 OSGiSubsystemSupport￨2 .￨2 TestModuleLoader￨2 getTestModuleLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DeploymentChain￨2 getDeploymentChain￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getUniqueName￨2 (￨2 String￨3 prefix￨3 )￨2 {￨2 }￨2 public￨2 void￨2 assertServiceUp￨2 (￨2 ServiceName￨3 serviceName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 assertServiceDown￨2 (￨2 ServiceName￨3 serviceName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeDeploymentChain￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setupServices￨2 (￨2 final￨2 BatchBuilder￨2 batchBuilder￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setupEnvironmentServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupModuleLoaderServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupDeploymentServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupFrameworkServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 batchBuilder￨3 .￨3 addService￨3 (￨3 SERVICE_NAME￨3 ,￨3 new￨3 MBeanServerService￨3 (￨3 )￨3 )￨3 ;￨3 OSGiSubsystemSupport￨3 .￨3 TestBundleManagerService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 )￨3 ;￨3 <START_BUG>￨3 FrameworkService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 ,￨3 IMMEDIATE￨3 )￨3 ;￨3 <END_BUG>￨3 PackageAdminService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 )￨3 ;￨3 }￨2 private￨2 Selector￨2 getDeploymentChainSelector￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BundleManager￨2 getBundleManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BundleContext￨2 getSystemContext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Configuration￨2 getSubsystemConfig￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 ,￨2 ModuleIdentifier￨2 exporterId￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClassFails￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 <￨2 ?￨2 >￨2 loadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Module￨2 loadModule￨2 (￨2 ModuleIdentifier￨2 identifier￨2 )￨2 throws￨2 ModuleLoadException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Bundle￨2 executeDeploy￨2 (￨2 final￨2 JavaArchive￨2 archive￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 executeUndeploy￨2 (￨2 final￨2 JavaArchive￨2 archive￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 List￨2 <￨2 ServiceName￨2 >￨2 runWithLatchedBatch￨2 (￨2 final￨2 OSGiSubsystemSupport￨2 .￨2 BatchedWork￨2 work￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 interface￨2 BatchedWork￨2 (￨2 )￨2 {￨2 void￨3 execute￨3 (￨3 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 TestServiceListener￨2 extends￨2 AbstractServiceListener￨2 <￨2 Object￨2 >￨2 {￨2 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 registeredServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 startedServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 failedServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 Mode￨3 ,￨3 List￨3 <￨3 ServiceName￨3 >￨3 >￨3 initialModes￨3 ;￨3 private￨3 final￨3 AtomicInteger￨3 count￨3 =￨3 new￨3 AtomicInteger￨3 (￨3 1￨3 )￨3 ;￨3 private￨3 final￨3 Runnable￨3 finishTask￨3 ;￨3 public￨3 TestServiceListener￨3 (￨3 Runnable￨4 finishTask￨4 ,￨4 Map￨4 <￨4 Mode￨4 ,￨4 List￨4 <￨4 ServiceName￨4 >￨4 >￨4 initialModes￨4 )￨3 {￨3 }￨3 public￨3 void￨3 listenerAdded￨3 (￨3 final￨4 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 serviceStarted￨3 (￨3 final￨4 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 serviceFailed￨3 (￨3 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 ,￨4 StartException￨4 reason￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 serviceRemoved￨3 (￨3 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 finishBatch￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 batchComplete￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 TestModuleLoader￨2 extends￨2 ModuleLoader￨2 implements￨2 Service￨2 <￨2 OSGiSubsystemSupport￨2 .￨2 TestModuleLoader￨2 >￨2 {￨2 public￨3 static￨3 final￨3 ServiceName￨3 SERVICE_NAME￨3 =￨3 JBOSS￨3 .￨3 append￨3 (￨3 "module"￨3 ,￨3 "loader"￨3 ,￨3 "support"￨3 )￨3 ;￨3 private￨3 String￨3 prefix￨3 ;￨3 private￨3 Map￨3 <￨3 ModuleIdentifier￨3 ,￨3 ModuleSpec￨3 >￨3 modules￨3 =￨3 new￨3 HashMap￨3 <￨3 ModuleIdentifier￨3 ,￨3 ModuleSpec￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 Injector￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 injector￨3 ;￨3 TestModuleLoader￨3 (￨3 String￨4 prefix￨4 )￨3 {￨3 }￨3 public￨3 void￨3 addModuleSpec￨3 (￨3 ModuleSpec￨4 moduleSpec￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModuleSpec￨3 findModule￨3 (￨3 ModuleIdentifier￨3 identifier￨3 )￨3 throws￨3 ModuleLoadException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 static￨3 OSGiSubsystemSupport￨3 .￨3 TestModuleLoader￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 OSGiSubsystemSupport￨3 .￨3 TestModuleLoader￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 TestBundleManagerService￨2 implements￨2 Service￨2 <￨2 BundleManager￨2 >￨2 {￨2 public￨3 static￨3 final￨3 ServiceName￨3 SERVICE_NAME￨3 =￨3 BundleManagerService￨3 .￨3 SERVICE_NAME￨3 ;￨3 private￨3 static￨3 final￨3 Logger￨3 log￨3 =￨3 Logger￨3 .￨3 getLogger￨3 (￨3 "org.jboss.as.osgi"￨3 )￨3 ;￨3 private￨3 InjectedValue￨3 <￨3 Configuration￨3 >￨3 injectedConfig￨3 =￨3 new￨3 InjectedValue￨3 <￨3 Configuration￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 InjectedValue￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 injectedModuleLoader￨3 =￨3 new￨3 InjectedValue￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 Injector￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 moduleLoaderInjector￨3 ;￨3 private￨3 BundleManager￨3 bundleManager￨3 ;￨3 public￨3 static￨3 void￨3 addService￨3 (￨3 final￨4 BatchBuilder￨4 batchBuilder￨4 )￨3 {￨3 }￨3 public￨3 static￨3 BundleManager￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BundleManager￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 TestServerDeploymentRepository￨2 implements￨2 ServerDeploymentRepository￨2 ,￨2 Service￨2 <￨2 ServerDeploymentRepository￨2 >￨2 {￨2 private￨3 Map￨3 <￨3 String￨3 ,￨3 JavaArchive￨3 >￨3 repository￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 JavaArchive￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 static￨3 OSGiSubsystemSupport￨3 .￨3 TestServerDeploymentRepository￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 void￨3 registerDeploymentArchive￨3 (￨3 String￨4 name￨4 ,￨4 JavaArchive￨4 archive￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 ServerDeploymentRepository￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 byte￨3 [￨3 ]￨3 addDeploymentContent￨3 (￨3 String￨3 name￨3 ,￨3 String￨3 runtimeName￨3 ,￨3 InputStream￨3 stream￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Closeable￨3 mountDeploymentContent￨3 (￨3 String￨3 name￨3 ,￨3 String￨3 runtimeName￨3 ,￨3 byte￨3 [￨3 ]￨3 deploymentHash￨3 ,￨3 VirtualFile￨3 mountPoint￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 JavadocAllocationExpression￨1 extends￨1 AllocationExpression￨1 {￨1 public￨2 int￨2 tagSourceStart￨2 ;￨2 public￨2 int￨2 tagSourceEnd￨2 ;￨2 public￨2 int￨2 tagValue￨2 ;￨2 public￨2 boolean￨2 superAccess￨2 =￨2 false￨2 ;￨2 public￨2 JavadocAllocationExpression￨2 (￨2 long￨3 pos￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 internalResolveType￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 this￨3 .￨3 constant￨3 =￨3 NotAConstant￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 type￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 this￨4 .￨4 resolvedType￨4 =￨4 scope￨4 .￨4 enclosingSourceType￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 scope￨4 .￨4 kind￨4 )￨4 ==￨4 (￨4 Scope￨4 .￨4 CLASS_SCOPE￨4 )￨4 )￨3 {￨3 this￨4 .￨4 resolvedType￨4 =￨4 this￨4 .￨4 type￨4 .￨4 resolveType￨4 (￨4 (￨4 (￨4 ClassScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 this￨4 .￨4 resolvedType￨4 =￨4 this￨4 .￨4 type￨4 .￨4 resolveType￨4 (￨4 (￨4 (￨4 BlockScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 =￨3 NoParameters￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 arguments￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 boolean￨4 argHasError￨4 =￨4 false￨4 ;￨4 int￨4 length￨4 =￨4 this￨4 .￨4 arguments￨4 .￨4 length￨4 ;￨4 argumentTypes￨4 =￨4 new￨4 TypeBinding￨4 [￨4 length￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 Expression￨5 argument￨5 =￨5 this￨5 .￨5 arguments￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 (￨6 scope￨6 .￨6 kind￨6 )￨6 ==￨6 (￨6 Scope￨6 .￨6 CLASS_SCOPE￨6 )￨6 )￨5 {￨5 argumentTypes￨6 [￨6 i￨6 ]￨6 =￨6 argument￨6 .￨6 resolveType￨6 (￨6 (￨6 (￨6 ClassScope￨6 )￨6 (￨6 scope￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 argumentTypes￨6 [￨6 i￨6 ]￨6 =￨6 argument￨6 .￨6 resolveType￨6 (￨6 (￨6 (￨6 BlockScope￨6 )￨6 (￨6 scope￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 argumentTypes￨6 [￨6 i￨6 ]￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 argHasError￨6 =￨6 true￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 argHasError￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 resolvedType￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 this￨3 .￨3 superAccess￨3 =￨3 scope￨3 .￨3 enclosingSourceType￨3 (￨3 )￨3 .￨3 isCompatibleWith￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 ;￨3 ReferenceBinding￨3 allocationType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 )￨3 ;￨3 this￨3 .￨3 binding￨3 =￨3 scope￨3 .￨3 getConstructor￨3 (￨3 allocationType￨3 ,￨3 argumentTypes￨3 ,￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 this￨4 .￨4 binding￨4 .￨4 isValidBinding￨4 (￨4 )￨4 )￨4 )￨3 {￨3 MethodBinding￨4 methodBinding￨4 =￨4 scope￨4 .￨4 getMethod￨4 (￨4 this￨4 .￨4 resolvedType￨4 ,￨4 this￨4 .￨4 resolvedType￨4 .￨4 sourceName￨4 (￨4 )￨4 ,￨4 argumentTypes￨4 ,￨4 this￨4 )￨4 ;￨4 if￨4 (￨4 methodBinding￨5 .￨5 isValidBinding￨5 (￨5 )￨5 )￨4 {￨4 this￨5 .￨5 binding￨5 =￨5 methodBinding￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 (￨6 this￨6 .￨6 binding￨6 .￨6 declaringClass￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 this￨6 .￨6 binding￨6 .￨6 declaringClass￨6 =￨6 allocationType￨6 ;￨6 }￨5 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 javadocInvalidConstructor￨5 (￨5 this￨5 ,￨5 this￨5 .￨5 binding￨5 ,￨5 scope￨5 .￨5 getDeclarationModifiers￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 this￨4 .￨4 resolvedType￨4 ;￨4 }￨3 if￨3 (￨3 isMethodUseDeprecated￨4 (￨4 this￨4 .￨4 binding￨4 ,￨4 scope￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 javadocDeprecatedMethod￨4 (￨4 this￨4 .￨4 binding￨4 ,￨4 this￨4 ,￨4 scope￨4 .￨4 getDeclarationModifiers￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 allocationType￨3 ;￨3 }￨2 public￨2 boolean￨2 isSuperAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 OracleDictionary￨1 extends￨1 DBDictionary￨1 {￨1 public￨2 static￨2 final￨2 String￨2 SELECT_HINT￨2 =￨2 "openjpa.hint.OracleSelectHint"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VENDOR_ORACLE￨2 =￨2 "oracle"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 BEHAVE_OTHER￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 BEHAVE_ORACLE￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 BEHAVE_DATADIRECT31￨2 =￨2 2￨2 ;￨2 private￨2 static￨2 Blob￨2 EMPTY_BLOB￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 Clob￨2 EMPTY_CLOB￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 OracleDictionary￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 boolean￨2 useTriggersForAutoAssign￨2 =￨2 false￨2 ;￨2 public￨2 String￨2 autoAssignSequenceName￨2 =￨2 null￨2 ;￨2 public￨2 boolean￨2 openjpa3GeneratedKeyNames￨2 =￨2 false￨2 ;￨2 public￨2 boolean￨2 useSetFormOfUseForUnicode￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 _checkedUpdateBug￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 _warnedCharColumn￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 _warnedNcharColumn￨2 =￨2 false￨2 ;￨2 private￨2 int￨2 _driverBehavior￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 Method￨2 _putBytes￨2 =￨2 null￨2 ;￨2 private￨2 Method￨2 _putString￨2 =￨2 null￨2 ;￨2 private￨2 Method￨2 _putChars￨2 =￨2 null￨2 ;￨2 private￨2 int￨2 defaultBatchLimit￨2 =￨2 100￨2 ;￨2 public￨2 OracleDictionary￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 endConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 connectedConfiguration￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 cacheDriverBehavior￨2 (￨2 String￨3 driverVendor￨3 )￨2 {￨2 }￨2 public￨2 void￨2 ensureDriverVendor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsLocking￨2 (￨2 Select￨3 sel￨3 )￨2 {￨2 }￨2 protected￨2 SQLBuffer￨2 getSelects￨2 (￨2 Select￨3 sel￨3 ,￨3 boolean￨3 distinctIdentifiers￨3 ,￨3 boolean￨3 forUpdate￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canOuterJoin￨2 (￨2 int￨3 syntax￨3 ,￨3 ForeignKey￨3 fk￨3 )￨2 {￨2 }￨2 public￨2 SQLBuffer￨2 toNativeJoin￨2 (￨2 Join￨3 join￨3 )￨2 {￨2 }￨2 protected￨2 SQLBuffer￨2 toSelect￨2 (￨2 SQLBuffer￨3 select￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 ,￨3 SQLBuffer￨3 tables￨3 ,￨3 SQLBuffer￨3 where￨3 ,￨3 SQLBuffer￨3 group￨3 ,￨3 SQLBuffer￨3 having￨3 ,￨3 SQLBuffer￨3 order￨3 ,￨3 boolean￨3 distinct￨3 ,￨3 boolean￨3 forUpdate￨3 ,￨3 long￨3 start￨3 ,￨3 long￨3 end￨3 ,￨3 boolean￨3 subselect￨3 ,￨3 Select￨3 sel￨3 )￨2 {￨2 }￨2 protected￨2 SQLBuffer￨2 toSelect￨2 (￨2 SQLBuffer￨3 select￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 ,￨3 SQLBuffer￨3 tables￨3 ,￨3 SQLBuffer￨3 where￨3 ,￨3 SQLBuffer￨3 group￨3 ,￨3 SQLBuffer￨3 having￨3 ,￨3 SQLBuffer￨3 order￨3 ,￨3 boolean￨3 distinct￨3 ,￨3 boolean￨3 forUpdate￨3 ,￨3 long￨3 start￨3 ,￨3 long￨3 end￨3 ,￨3 Select￨3 sel￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 requiresSubselectForRange￨2 (￨2 long￨3 start￨3 ,￨3 long￨3 end￨3 ,￨3 boolean￨3 distinct￨3 ,￨3 SQLBuffer￨3 order￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getSelectOperation￨2 (￨2 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setString￨2 (￨2 PreparedStatement￨2 stmnt￨2 ,￨2 int￨2 idx￨2 ,￨2 String￨2 val￨2 ,￨2 Column￨2 col￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setNull￨2 (￨2 PreparedStatement￨2 stmnt￨2 ,￨2 int￨2 idx￨2 ,￨2 int￨2 colType￨2 ,￨2 Column￨2 col￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getClobString￨2 (￨2 ResultSet￨2 rs￨2 ,￨2 int￨2 column￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Timestamp￨2 getTimestamp￨2 (￨2 ResultSet￨2 rs￨2 ,￨2 int￨2 column￨2 ,￨2 Calendar￨2 cal￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getObject￨2 (￨2 ResultSet￨2 rs￨2 ,￨2 int￨2 column￨2 ,￨2 Map￨2 map￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Object￨2 convertFromOracleType￨2 (￨2 Object￨2 obj￨2 ,￨2 String￨2 convertMethod￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Column￨2 [￨2 ]￨2 getColumns￨2 (￨2 DatabaseMetaData￨2 meta￨2 ,￨2 String￨2 catalog￨2 ,￨2 String￨2 schemaName￨2 ,￨2 String￨2 tableName￨2 ,￨2 String￨2 columnName￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PrimaryKey￨2 [￨2 ]￨2 getPrimaryKeys￨2 (￨2 DatabaseMetaData￨2 meta￨2 ,￨2 String￨2 catalog￨2 ,￨2 String￨2 schemaName￨2 ,￨2 String￨2 tableName￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Index￨2 [￨2 ]￨2 getIndexInfo￨2 (￨2 DatabaseMetaData￨2 meta￨2 ,￨2 String￨2 catalog￨2 ,￨2 String￨2 schemaName￨2 ,￨2 String￨2 tableName￨2 ,￨2 boolean￨2 unique￨2 ,￨2 boolean￨2 approx￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ForeignKey￨2 [￨2 ]￨2 getImportedKeys￨2 (￨2 DatabaseMetaData￨2 meta￨2 ,￨2 String￨2 catalog￨2 ,￨2 String￨2 schemaName￨2 ,￨2 String￨2 tableName￨2 ,￨2 Connection￨2 conn￨2 ,￨2 boolean￨2 partialKeys￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getCreateTableSQL￨2 (￨2 Table￨3 table￨3 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getCreateSequenceSQL￨2 (￨2 Sequence￨3 seq￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 getJDBCType￨2 (￨2 int￨3 metaTypeCode￨3 ,￨3 boolean￨3 lob￨3 ,￨3 int￨3 precis￨3 ,￨3 int￨3 scale￨3 ,￨3 boolean￨3 xml￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 getJDBCType￨3 (￨3 metaTypeCode￨3 ,￨3 (￨3 lob￨3 &&￨3 (￨3 !￨3 xml￨3 )￨3 )￨3 ,￨3 precis￨3 ,￨3 scale￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 String￨2 getSequencesSQL￨2 (￨2 String￨3 schemaName￨3 ,￨3 String￨3 sequenceName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSystemSequence￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 schema￨3 ,￨3 boolean￨3 targetSchema￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getGeneratedKey￨2 (￨2 Column￨2 col￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getGeneratedKeyTriggerName￨2 (￨2 Column￨3 col￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getOpenJPA3GeneratedKeySequenceName￨2 (￨2 Column￨3 col￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getOpenJPA3GeneratedKeyTriggerName￨2 (￨2 Column￨3 col￨3 )￨2 {￨2 }￨2 public￨2 void￨2 putBytes￨2 (￨2 Blob￨2 blob￨2 ,￨2 byte￨2 [￨2 ]￨2 data￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 putString￨2 (￨2 Clob￨2 clob￨2 ,￨2 String￨2 data￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 putChars￨2 (￨2 Clob￨2 clob￨2 ,￨2 char￨2 [￨2 ]￨2 data￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 invokePutLobMethod￨2 (￨2 Method￨2 method￨2 ,￨2 Object￨2 target￨2 ,￨2 Object￨2 data￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Clob￨2 getEmptyClob￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Blob￨2 getEmptyBlob￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 isOraclePreparedStatement￨2 (￨2 Statement￨3 stmnt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 appendXmlComparison￨2 (￨2 SQLBuffer￨3 buf￨3 ,￨3 String￨3 op￨3 ,￨3 FilterValue￨3 lhs￨3 ,￨3 FilterValue￨3 rhs￨3 ,￨3 boolean￨3 lhsxml￨3 ,￨3 boolean￨3 rhsxml￨3 )￨2 {￨2 }￨2 private￨2 void￨2 appendXmlComparison1￨2 (￨2 SQLBuffer￨3 buf￨3 ,￨3 String￨3 op￨3 ,￨3 FilterValue￨3 lhs￨3 ,￨3 FilterValue￨3 rhs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 appendXmlComparison2￨2 (￨2 SQLBuffer￨3 buf￨3 ,￨3 String￨3 op￨3 ,￨3 FilterValue￨3 lhs￨3 ,￨3 FilterValue￨3 rhs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 appendXmlExtractValue￨2 (￨2 SQLBuffer￨3 buf￨3 ,￨3 FilterValue￨3 val￨3 )￨2 {￨2 }￨2 public￨2 void￨2 insertClobForStreamingLoad￨2 (￨2 Row￨2 row￨2 ,￨2 Column￨2 col￨2 ,￨2 Object￨2 ob￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getBatchUpdateCount￨2 (￨2 PreparedStatement￨2 ps￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Boolean￨2 matchErrorState￨2 (￨2 int￨3 subtype￨3 ,￨3 Set￨3 <￨3 String￨3 >￨3 errorStates￨3 ,￨3 SQLException￨3 ex￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 insertBlobForStreamingLoad￨2 (￨2 Row￨2 row￨2 ,￨2 Column￨2 col￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 Object￨2 ob￨2 ,￨2 Select￨2 sel￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ModClusterEnableContext￨1 implements￨1 OperationStepHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 static￨2 final￨2 ModClusterEnableContext￨2 INSTANCE￨2 =￨2 new￨2 ModClusterEnableContext￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 context￨3 .￨3 getProcessType￨3 (￨3 )￨3 .￨3 isServer￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 OperationStepHandler￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 execute￨4 (￨4 OperationContext￨4 context￨4 ,￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 ServiceController￨5 <￨5 ?￨5 >￨5 controller￨5 =￨5 context￨5 .￨5 getServiceRegistry￨5 (￨5 false￨5 )￨5 .￨5 getService￨5 (￨5 NAME￨5 )￨5 ;￨5 ModCluster￨5 modcluster￨5 =￨5 (￨5 (￨5 ModCluster￨5 )￨5 (￨5 controller￨5 .￨5 getValue￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 ModClusterLogger￨5 .￨5 ROOT_LOGGER￨5 .￨5 debugf￨5 (￨5 "enable-context:<seq2seq4repair_space>%s"￨5 ,￨5 operation￨5 )￨5 ;￨5 ContextHost￨5 contexthost￨5 =￨5 new￨5 ContextHost￨5 (￨5 operation￨5 )￨5 ;￨5 modcluster￨5 .￨5 enableContext￨5 (￨5 contexthost￨5 .￨5 webhost￨5 ,￨5 contexthost￨5 .￨5 webcontext￨5 )￨5 ;￨5 context￨5 .￨5 completeStep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 }￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
class￨1 ASTSyntaxErrorPropagator￨1 extends￨1 ASTVisitor￨1 {￨1 private￨2 IProblem￨2 [￨2 ]￨2 problems￨2 ;￨2 ASTSyntaxErrorPropagator￨2 (￨2 IProblem￨3 [￨3 ]￨3 problems￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkAndTagAsMalformed￨2 (￨2 ASTNode￨3 node￨3 )￨2 {￨2 boolean￨3 tagWithErrors￨3 =￨3 false￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 max￨4 =￨4 this￨4 .￨4 problems￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 max￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 IProblem￨4 problem￨4 =￨4 this￨4 .￨4 problems￨4 [￨4 i￨4 ]￨4 ;￨4 switch￨4 (￨4 problem￨4 .￨4 getID￨4 (￨4 )￨4 )￨4 {￨4 case￨5 IProblem￨5 .￨5 ParsingErrorOnKeywordNoSuggestion￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorOnKeyword￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingError￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorNoSuggestion￨5 :￨5 break￨6 ;￨6 case￨5 IProblem￨5 .￨5 ParsingErrorInsertTokenBefore￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorInsertTokenAfter￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorDeleteToken￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorDeleteTokens￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorMergeTokens￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorInvalidToken￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorMisplacedConstruct￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorReplaceTokens￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorNoSuggestionForTokens￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorUnexpectedEOF￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorInsertToComplete￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorInsertToCompleteScope￨5 :￨5 case￨5 IProblem￨5 .￨5 ParsingErrorInsertToCompletePhrase￨5 :￨5 break￨6 ;￨6 default￨5 :￨5 continue￨6 search￨6 ;￨6 }￨4 int￨4 position￨4 =￨4 problem￨4 .￨4 getSourceStart￨4 (￨4 )￨4 ;￨4 int￨4 start￨4 =￨4 node￨4 .￨4 getStartPosition￨4 (￨4 )￨4 ;￨4 int￨4 end￨4 =￨4 start￨4 +￨4 (￨4 node￨4 .￨4 getLength￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 start￨5 <=￨5 position￨5 )￨5 &&￨5 (￨5 position￨5 <=￨5 end￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 node￨5 .￨5 setFlags￨5 (￨5 ASTNode￨5 .￨5 MALFORMED￨5 )￨5 ;￨5 <END_BUG>￨5 ASTNode￨5 currentNode￨5 =￨5 node￨5 .￨5 getParent￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 currentNode￨6 !=￨6 null￨6 )￨5 {￨5 currentNode￨6 .￨6 setFlags￨6 (￨6 (￨6 (￨6 currentNode￨6 .￨6 getFlags￨6 (￨6 )￨6 )￨6 &￨6 (￨6 ~￨6 (￨6 ASTNode￨6 .￨6 MALFORMED￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 currentNode￨6 =￨6 currentNode￨6 .￨6 getParent￨6 (￨6 )￨6 ;￨6 }￨5 tagWithErrors￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 return￨3 tagWithErrors￨3 ;￨3 }￨2 public￨2 boolean￨2 visit￨2 (￨2 FieldDeclaration￨3 node￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 visit￨2 (￨2 MethodDeclaration￨3 node￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 visit￨2 (￨2 PackageDeclaration￨3 node￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 visit￨2 (￨2 ImportDeclaration￨3 node￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 visit￨2 (￨2 CompilationUnit￨3 node￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 visit￨2 (￨2 Initializer￨3 node￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestBufferedIndexInput￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 void￨2 writeBytes￨2 (￨2 File￨2 aFile￨2 ,￨2 long￨2 size￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 long￨2 TEST_FILE_LENGTH￨2 =￨2 1024￨2 *￨2 1024￨2 ;￨2 public￨2 void￨2 testReadByte￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReadBytes￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 runReadBytesAndClose￨2 (￨2 IndexInput￨2 input￨2 ,￨2 int￨2 bufferSize￨2 ,￨2 Random￨2 r￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 runReadBytes￨2 (￨2 IndexInput￨2 input￨2 ,￨2 int￨2 bufferSize￨2 ,￨2 Random￨2 r￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 byte￨2 [￨2 ]￨2 buffer￨2 =￨2 new￨2 byte￨2 [￨2 10￨2 ]￨2 ;￨2 private￨2 void￨2 checkReadBytes￨2 (￨2 IndexInput￨2 input￨2 ,￨2 int￨2 size￨2 ,￨2 int￨2 pos￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testEOF￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 byte￨2 byten￨2 (￨2 long￨3 n￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 MyBufferedIndexInput￨2 extends￨2 BufferedIndexInput￨2 {￨2 private￨3 long￨3 pos￨3 ;￨3 private￨3 long￨3 len￨3 ;￨3 public￨3 MyBufferedIndexInput￨3 (￨3 long￨4 len￨4 )￨3 {￨3 }￨3 public￨3 MyBufferedIndexInput￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 void￨3 readInternal￨3 (￨3 byte￨3 [￨3 ]￨3 b￨3 ,￨3 int￨3 offset￨3 ,￨3 int￨3 length￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 void￨3 seekInternal￨3 (￨3 long￨3 pos￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 close￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 length￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 testSetBufferSize￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 File￨3 indexDir￨3 =￨3 new￨3 File￨3 (￨3 System￨3 .￨3 getProperty￨3 (￨3 "tempDir"￨3 )￨3 ,￨3 "testSetBufferSize"￨3 )￨3 ;￨3 TestBufferedIndexInput￨3 .￨3 MockFSDirectory￨3 dir￨3 =￨3 new￨3 TestBufferedIndexInput￨3 .￨3 MockFSDirectory￨3 (￨3 indexDir￨3 ,￨3 newRandom￨3 (￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 IndexWriter￨4 writer￨4 =￨4 new￨4 IndexWriter￨4 (￨4 dir￨4 ,￨4 new￨4 WhitespaceAnalyzer￨4 (￨4 )￨4 ,￨4 true￨4 ,￨4 MaxFieldLength￨4 .￨4 LIMITED￨4 )￨4 ;￨4 writer￨4 .￨4 setUseCompoundFile￨4 (￨4 false￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 37￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 Document￨5 doc￨5 =￨5 new￨5 Document￨5 (￨5 )￨5 ;￨5 doc￨5 .￨5 add￨5 (￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 lucene￨5 .￨5 document￨5 .￨5 Field￨5 (￨5 "content"￨5 ,￨5 (￨5 "aaa<seq2seq4repair_space>bbb<seq2seq4repair_space>ccc<seq2seq4repair_space>ddd"￨5 +￨5 i￨5 )￨5 ,￨5 Store￨5 .￨5 YES￨5 ,￨5 Index￨5 .￨5 ANALYZED￨5 )￨5 )￨5 ;￨5 doc￨5 .￨5 add￨5 (￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 lucene￨5 .￨5 document￨5 .￨5 Field￨5 (￨5 "id"￨5 ,￨5 (￨5 ""￨5 +￨5 i￨5 )￨5 ,￨5 Store￨5 .￨5 YES￨5 ,￨5 Index￨5 .￨5 ANALYZED￨5 )￨5 )￨5 ;￨5 writer￨5 .￨5 addDocument￨5 (￨5 doc￨5 )￨5 ;￨5 }￨4 writer￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 dir￨4 .￨4 allIndexInputs￨4 .￨4 clear￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 IndexReader￨4 reader￨4 =￨4 IndexReader￨4 .￨4 open￨4 (￨4 dir￨4 )￨4 ;￨4 <END_BUG>￨4 Term￨4 aaa￨4 =￨4 new￨4 Term￨4 (￨4 "content"￨4 ,￨4 "aaa"￨4 )￨4 ;￨4 Term￨4 bbb￨4 =￨4 new￨4 Term￨4 (￨4 "content"￨4 ,￨4 "bbb"￨4 )￨4 ;￨4 Term￨4 ccc￨4 =￨4 new￨4 Term￨4 (￨4 "content"￨4 ,￨4 "ccc"￨4 )￨4 ;￨4 assertEquals￨4 (￨4 37￨4 ,￨4 reader￨4 .￨4 docFreq￨4 (￨4 ccc￨4 )￨4 )￨4 ;￨4 reader￨4 .￨4 deleteDocument￨4 (￨4 0￨4 )￨4 ;￨4 assertEquals￨4 (￨4 37￨4 ,￨4 reader￨4 .￨4 docFreq￨4 (￨4 aaa￨4 )￨4 )￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 reader￨4 .￨4 deleteDocument￨4 (￨4 4￨4 )￨4 ;￨4 assertEquals￨4 (￨4 reader￨4 .￨4 docFreq￨4 (￨4 bbb￨4 )￨4 ,￨4 37￨4 )￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 IndexSearcher￨4 searcher￨4 =￨4 new￨4 IndexSearcher￨4 (￨4 reader￨4 )￨4 ;￨4 ScoreDoc￨4 [￨4 ]￨4 hits￨4 =￨4 searcher￨4 .￨4 search￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 search￨4 .￨4 TermQuery￨4 (￨4 bbb￨4 )￨4 ,￨4 null￨4 ,￨4 1000￨4 )￨4 .￨4 scoreDocs￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 assertEquals￨4 (￨4 35￨4 ,￨4 hits￨4 .￨4 length￨4 )￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 hits￨4 =￨4 searcher￨4 .￨4 search￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 search￨4 .￨4 TermQuery￨4 (￨4 new￨4 Term￨4 (￨4 "id"￨4 ,￨4 "33"￨4 )￨4 )￨4 ,￨4 null￨4 ,￨4 1000￨4 )￨4 .￨4 scoreDocs￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 assertEquals￨4 (￨4 1￨4 ,￨4 hits￨4 .￨4 length￨4 )￨4 ;￨4 hits￨4 =￨4 searcher￨4 .￨4 search￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 search￨4 .￨4 TermQuery￨4 (￨4 aaa￨4 )￨4 ,￨4 null￨4 ,￨4 1000￨4 )￨4 .￨4 scoreDocs￨4 ;￨4 dir￨4 .￨4 tweakBufferSizes￨4 (￨4 )￨4 ;￨4 assertEquals￨4 (￨4 35￨4 ,￨4 hits￨4 .￨4 length￨4 )￨4 ;￨4 searcher￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 reader￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 _TestUtil￨4 .￨4 rmDir￨4 (￨4 indexDir￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 class￨2 MockFSDirectory￨2 extends￨2 Directory￨2 {￨2 List￨3 allIndexInputs￨3 =￨3 new￨3 ArrayList￨3 (￨3 )￨3 ;￨3 Random￨3 rand￨3 ;￨3 private￨3 Directory￨3 dir￨3 ;￨3 public￨3 MockFSDirectory￨3 (￨3 File￨3 path￨3 ,￨3 Random￨3 rand￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 IndexInput￨3 openInput￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 tweakBufferSizes￨3 (￨3 )￨3 {￨3 }￨3 public￨3 IndexInput￨3 openInput￨3 (￨3 String￨3 name￨3 ,￨3 int￨3 bufferSize￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 IndexOutput￨3 createOutput￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 close￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 deleteFile￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 touchFile￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 fileModified￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 fileExists￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 [￨3 ]￨3 list￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 [￨3 ]￨3 listAll￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 fileLength￨3 (￨3 String￨3 name￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 renameFile￨3 (￨3 String￨3 from￨3 ,￨3 String￨3 to￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TestCustomSearcherSort￨1 extends￨1 LuceneTestCase￨1 implements￨1 Serializable￨1 {￨1 private￨2 Directory￨2 index￨2 =￨2 null￨2 ;￨2 private￨2 Query￨2 query￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INDEX_SIZE￨2 =￨2 2000￨2 ;￨2 public￨2 TestCustomSearcherSort￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 argv￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Directory￨2 getIndex￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 RAMDirectory￨3 indexStore￨3 =￨3 new￨3 RAMDirectory￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 IndexWriter￨3 writer￨3 =￨3 new￨3 IndexWriter￨3 (￨3 indexStore￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 analysis￨3 .￨3 standard￨3 .￨3 StandardAnalyzer￨3 (￨3 Version￨3 .￨3 LUCENE_CURRENT￨3 )￨3 ,￨3 true￨3 ,￨3 MaxFieldLength￨3 .￨3 LIMITED￨3 )￨3 ;￨3 <END_BUG>￨3 TestCustomSearcherSort￨3 .￨3 RandomGen￨3 random￨3 =￨3 new￨3 TestCustomSearcherSort￨3 .￨3 RandomGen￨3 (￨3 newRandom￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 TestCustomSearcherSort￨4 .￨4 INDEX_SIZE￨4 )￨4 ;￨4 ++￨4 i￨4 )￨3 {￨3 Document￨4 doc￨4 =￨4 new￨4 Document￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 i￨5 %￨5 5￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 doc￨5 .￨5 add￨5 (￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 lucene￨5 .￨5 document￨5 .￨5 Field￨5 (￨5 "publicationDate_"￨5 ,￨5 random￨5 .￨5 getLuceneDate￨5 (￨5 )￨5 ,￨5 Store￨5 .￨5 YES￨5 ,￨5 Index￨5 .￨5 NOT_ANALYZED￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 i￨5 %￨5 7￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 doc￨5 .￨5 add￨5 (￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 lucene￨5 .￨5 document￨5 .￨5 Field￨5 (￨5 "content"￨5 ,￨5 "test"￨5 ,￨5 Store￨5 .￨5 YES￨5 ,￨5 Index￨5 .￨5 ANALYZED￨5 )￨5 )￨5 ;￨5 }￨4 doc￨4 .￨4 add￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 document￨4 .￨4 Field￨4 (￨4 "mandant"￨4 ,￨4 Integer￨4 .￨4 toString￨4 (￨4 (￨4 i￨4 %￨4 3￨4 )￨4 )￨4 ,￨4 Store￨4 .￨4 YES￨4 ,￨4 Index￨4 .￨4 NOT_ANALYZED￨4 )￨4 )￨4 ;￨4 writer￨4 .￨4 addDocument￨4 (￨4 doc￨4 )￨4 ;￨4 }￨3 writer￨3 .￨3 optimize￨3 (￨3 )￨3 ;￨3 writer￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 return￨3 indexStore￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldSortCustomSearcher￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldSortSingleSearcher￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldSortMultiCustomSearcher￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 matchHits￨2 (￨2 Searcher￨2 searcher￨2 ,￨2 Sort￨2 sort￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkHits￨2 (￨2 ScoreDoc￨3 [￨3 ]￨3 hits￨3 ,￨3 String￨3 prefix￨3 )￨2 {￨2 }￨2 private￨2 void￨2 log￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 class￨2 CustomSearcher￨2 extends￨2 IndexSearcher￨2 {￨2 private￨3 int￨3 switcher￨3 ;￨3 public￨3 CustomSearcher￨3 (￨3 Directory￨3 directory￨3 ,￨3 int￨3 switcher￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 CustomSearcher￨3 (￨3 IndexReader￨4 r￨4 ,￨4 int￨4 switcher￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 TopFieldDocs￨3 search￨3 (￨3 Query￨3 query￨3 ,￨3 Filter￨3 filter￨3 ,￨3 int￨3 nDocs￨3 ,￨3 Sort￨3 sort￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 TopDocs￨3 search￨3 (￨3 Query￨3 query￨3 ,￨3 Filter￨3 filter￨3 ,￨3 int￨3 nDocs￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 RandomGen￨2 {￨2 RandomGen￨3 (￨3 Random￨4 random￨4 )￨3 {￨3 }￨3 private￨3 Random￨3 random￨3 ;￨3 private￨3 Calendar￨3 base￨3 =￨3 new￨3 GregorianCalendar￨3 (￨3 1980￨3 ,￨3 1￨3 ,￨3 1￨3 )￨3 ;￨3 private￨3 String￨3 getLuceneDate￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 BasicSearchEngine￨1 {￨1 private￨2 Parser￨2 parser￨2 ;￨2 private￨2 CompilerOptions￨2 compilerOptions￨2 ;￨2 private￨2 ICompilationUnit￨2 [￨2 ]￨2 workingCopies￨2 ;￨2 private￨2 WorkingCopyOwner￨2 workingCopyOwner￨2 ;￨2 public￨2 static￨2 boolean￨2 VERBOSE￨2 =￨2 false￨2 ;￨2 public￨2 BasicSearchEngine￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BasicSearchEngine￨2 (￨2 ICompilationUnit￨3 [￨3 ]￨3 workingCopies￨3 )￨2 {￨2 }￨2 char￨2 convertTypeKind￨2 (￨2 int￨3 typeDeclarationKind￨3 )￨2 {￨2 }￨2 public￨2 BasicSearchEngine￨2 (￨2 WorkingCopyOwner￨3 workingCopyOwner￨3 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createHierarchyScope￨2 (￨2 IType￨2 type￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createHierarchyScope￨2 (￨2 IType￨2 type￨2 ,￨2 WorkingCopyOwner￨2 owner￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createJavaSearchScope￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elements￨3 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createJavaSearchScope￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elements￨3 ,￨3 boolean￨3 includeReferencedProjects￨3 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createJavaSearchScope￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elements￨3 ,￨3 int￨3 includeMask￨3 )￨2 {￨2 }￨2 public￨2 static￨2 IJavaSearchScope￨2 createWorkspaceScope￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 JavaWorkspaceScope￨3 .￨3 createScope￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 findMatches￨2 (￨2 SearchPattern￨2 pattern￨2 ,￨2 SearchParticipant￨2 [￨2 ]￨2 participants￨2 ,￨2 IJavaSearchScope￨2 scope￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 SearchParticipant￨2 getDefaultSearchParticipant￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Parser￨2 getParser￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IResource￨2 getResource￨2 (￨2 IJavaElement￨3 element￨3 )￨2 {￨2 }￨2 private￨2 ICompilationUnit￨2 [￨2 ]￨2 getWorkingCopies￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ICompilationUnit￨2 [￨2 ]￨2 getWorkingCopies￨2 (￨2 IJavaElement￨3 element￨3 )￨2 {￨2 }￨2 boolean￨2 match￨2 (￨2 char￨3 patternTypeSuffix￨3 ,￨3 int￨3 modifiers￨3 )￨2 {￨2 }￨2 boolean￨2 match￨2 (￨2 char￨3 patternTypeSuffix￨3 ,￨3 char￨3 [￨3 ]￨3 patternPkg￨3 ,￨3 char￨3 [￨3 ]￨3 patternTypeName￨3 ,￨3 int￨3 matchRule￨3 ,￨3 int￨3 typeKind￨3 ,￨3 char￨3 [￨3 ]￨3 pkg￨3 ,￨3 char￨3 [￨3 ]￨3 typeName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 search￨2 (￨2 SearchPattern￨2 pattern￨2 ,￨2 SearchParticipant￨2 [￨2 ]￨2 participants￨2 ,￨2 IJavaSearchScope￨2 scope￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchAllTypeNames￨2 (￨2 final￨2 char￨2 [￨2 ]￨2 packageName￨2 ,￨2 final￨2 char￨2 [￨2 ]￨2 typeName￨2 ,￨2 final￨2 int￨2 matchRule￨2 ,￨2 int￨2 searchFor￨2 ,￨2 IJavaSearchScope￨2 scope￨2 ,￨2 final￨2 IRestrictedAccessTypeRequestor￨2 nameRequestor￨2 ,￨2 int￨2 waitingPolicy￨2 ,￨2 IProgressMonitor￨2 progressMonitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchAllTypeNames￨2 (￨2 final￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 qualifications￨2 ,￨2 final￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 typeNames￨2 ,￨2 final￨2 int￨2 matchRule￨2 ,￨2 int￨2 searchFor￨2 ,￨2 IJavaSearchScope￨2 scope￨2 ,￨2 final￨2 IRestrictedAccessTypeRequestor￨2 nameRequestor￨2 ,￨2 int￨2 waitingPolicy￨2 ,￨2 IProgressMonitor￨2 progressMonitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchDeclarations￨2 (￨2 IJavaElement￨2 enclosingElement￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 SearchPattern￨2 pattern￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchDeclarationsOfAccessedFields￨2 (￨2 IJavaElement￨2 enclosingElement￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchDeclarationsOfReferencedTypes￨2 (￨2 IJavaElement￨2 enclosingElement￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 searchDeclarationsOfSentMessages￨2 (￨2 IJavaElement￨2 enclosingElement￨2 ,￨2 SearchRequestor￨2 requestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 TypeBinding￨1 implements￨1 ITypeBinding￨1 {￨1 private￨2 static￨2 final￨2 IMethodBinding￨2 [￨2 ]￨2 NO_METHOD_BINDINGS￨2 =￨2 new￨2 IMethodBinding￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NO_NAME￨2 =￨2 ""￨2 ;￨2 private￨2 static￨2 final￨2 ITypeBinding￨2 [￨2 ]￨2 NO_TYPE_BINDINGS￨2 =￨2 new￨2 ITypeBinding￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 static￨2 final￨2 IVariableBinding￨2 [￨2 ]￨2 NO_VARIABLE_BINDINGS￨2 =￨2 new￨2 IVariableBinding￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 VALID_MODIFIERS￨2 =￨2 (￨2 (￨2 (￨2 (￨2 (￨2 (￨2 Modifier￨2 .￨2 PUBLIC￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PROTECTED￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PRIVATE￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 ABSTRACT￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STATIC￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 FINAL￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STRICTFP￨2 )￨2 ;￨2 private￨2 org￨2 .￨2 eclipse￨2 .￨2 jdt￨2 .￨2 internal￨2 .￨2 compiler￨2 .￨2 lookup￨2 .￨2 TypeBinding￨2 binding￨2 ;￨2 private￨2 String￨2 key￨2 ;￨2 private￨2 BindingResolver￨2 resolver￨2 ;￨2 public￨2 TypeBinding￨2 (￨2 BindingResolver￨3 resolver￨3 ,￨3 org￨3 .￨3 eclipse￨3 .￨3 jdt￨3 .￨3 internal￨3 .￨3 compiler￨3 .￨3 lookup￨3 .￨3 TypeBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getBinaryName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getBound￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IClassFile￨2 getClassFile￨2 (￨2 char￨3 [￨3 ]￨3 fileName￨3 )￨2 {￨2 }￨2 private￨2 ICompilationUnit￨2 getCompilationUnit￨2 (￨2 char￨3 [￨3 ]￨3 fileName￨3 )￨2 {￨2 }￨2 public￨2 IVariableBinding￨2 [￨2 ]￨2 getDeclaredFields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IMethodBinding￨2 [￨2 ]￨2 getDeclaredMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getDeclaredModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 [￨2 ]￨2 getDeclaredTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IMethodBinding￨2 getDeclaringMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getDeclaringClass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getDimensions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getElementType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getTypeDeclaration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getErasure￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 [￨2 ]￨2 getInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getJavaElement￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JavaElement￨2 getUnresolvedJavaElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getKey￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getKind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPackageBinding￨2 getPackage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IPackageFragment￨2 getPackageFragment￨2 (￨2 char￨3 [￨3 ]￨3 fileName￨3 ,￨3 int￨3 lastSlash￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getQualifiedName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getSuperclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 [￨2 ]￨2 getTypeArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 [￨2 ]￨2 getTypeBounds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 [￨2 ]￨2 getTypeParameters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 getWildcard￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isGenericType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAnnotation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAnonymous￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAssignmentCompatible￨2 (￨2 ITypeBinding￨3 type￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCapture￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCastCompatible￨2 (￨2 ITypeBinding￨3 type￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isClass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDeprecated￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEnum￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEqualTo￨2 (￨2 IBinding￨3 other￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFromSource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInterface￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 this￨3 .￨3 binding￨3 .￨3 isInterface￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 boolean￨2 isLocal￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMember￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNested￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNullType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isParameterizedType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPrimitive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRawType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSubTypeCompatible￨2 (￨2 ITypeBinding￨3 type￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSynthetic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTopLevel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTypeVariable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isUpperbound￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isWildcardType￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 shouldBeRemoved￨2 (￨2 MethodBinding￨3 methodBinding￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestPlan￨1 extends￨1 AbstractTestElement￨1 implements￨1 Serializable￨1 ,￨1 TestListener￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 233L￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 FUNCTIONAL_MODE￨2 =￨2 "TestPlan.functional_mode"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 USER_DEFINED_VARIABLES￨2 =￨2 "TestPlan.user_defined_variables"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 SERIALIZE_THREADGROUPS￨2 =￨2 "TestPlan.serialize_threadgroups"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CLASSPATHS￨2 =￨2 "TestPlan.user_define_classpath"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CLASSPATH_SEPARATOR￨2 =￨2 ","￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 BASEDIR￨2 =￨2 "basedir"￨2 ;￨2 private￨2 transient￨2 List￨2 <￨2 ThreadGroup￨2 >￨2 threadGroups￨2 =￨2 new￨2 LinkedList￨2 <￨2 ThreadGroup￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 volatile￨2 boolean￨2 functionalMode￨2 =￨2 false￨2 ;￨2 public￨2 TestPlan￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TestPlan￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 Object￨2 readResolve￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 prepareForPreCompile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFunctionalMode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setUserDefinedVariables￨2 (￨2 Arguments￨3 vars￨3 )￨2 {￨2 }￨2 public￨2 JMeterProperty￨2 getUserDefinedVariablesAsProperty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getBasedir￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBasedir￨2 (￨2 String￨3 b￨3 )￨2 {￨2 }￨2 public￨2 Arguments￨2 getArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 getUserDefinedVariables￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Arguments￨2 getVariables￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFunctionalMode￨2 (￨2 boolean￨3 funcMode￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 getFunctionalMode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSerialized￨2 (￨2 boolean￨3 serializeTGs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTestPlanClasspath￨2 (￨2 String￨3 text￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTestPlanClasspathArray￨2 (￨2 String￨3 [￨3 ]￨3 text￨3 )￨2 {￨2 <START_BUG>￨3 StringBuffer￨3 cat￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 int￨4 idx￨4 =￨4 0￨4 ;￨4 idx￨4 <￨4 (￨4 text￨4 .￨4 length￨4 )￨4 ;￨4 idx￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 idx￨5 >￨5 0￨5 )￨4 {￨4 cat￨5 .￨5 append￨5 (￨5 TestPlan￨5 .￨5 CLASSPATH_SEPARATOR￨5 )￨5 ;￨5 }￨4 cat￨4 .￨4 append￨4 (￨4 text￨4 [￨4 idx￨4 ]￨4 )￨4 ;￨4 }￨3 this￨3 .￨3 setTestPlanClasspath￨3 (￨3 cat￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 [￨2 ]￨2 getTestPlanClasspathArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getTestPlanClasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSerialized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addParameter￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 value￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 addTestElement￨2 (￨2 TestElement￨3 tg￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addThreadGroup￨2 (￨2 ThreadGroup￨3 group￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testEnded￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testEnded￨2 (￨2 String￨3 host￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testIterationStart￨2 (￨2 LoopIterationEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testStarted￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStarted￨2 (￨2 String￨3 host￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AboutFeaturesDialog￨1 extends￨1 ProductInfoDialog￨1 {￨1 private￨2 static￨2 final￨2 int￨2 TABLE_HEIGHT￨2 =￨2 150￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INFO_HEIGHT￨2 =￨2 100￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MORE_ID￨2 =￨2 (￨2 IDialogConstants￨2 .￨2 CLIENT_ID￨2 )￨2 +￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 PLUGINS_ID￨2 =￨2 (￨2 IDialogConstants￨2 .￨2 CLIENT_ID￨2 )￨2 +￨2 2￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 COLUMNS_ID￨2 =￨2 (￨2 IDialogConstants￨2 .￨2 CLIENT_ID￨2 )￨2 +￨2 3￨2 ;￨2 private￨2 Table￨2 table￨2 ;￨2 private￨2 Label￨2 imageLabel￨2 ;￨2 private￨2 StyledText￨2 text￨2 ;￨2 private￨2 Composite￨2 infoArea￨2 ;￨2 private￨2 Map￨2 cachedImages￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 columnTitles￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 String￨2 productName￨2 ;￨2 private￨2 AboutBundleGroupData￨2 [￨2 ]￨2 bundleGroupInfos￨2 ;￨2 private￨2 int￨2 lastColumnChosen￨2 =￨2 0￨2 ;￨2 private￨2 boolean￨2 reverseSort￨2 =￨2 false￨2 ;￨2 private￨2 AboutBundleGroupData￨2 lastSelection￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 moreButton￨2 ;￨2 private￨2 Button￨2 pluginsButton￨2 ;￨2 private￨2 static￨2 Map￨2 featuresMap￨2 ;￨2 public￨2 AboutFeaturesDialog￨2 (￨2 Shell￨3 parentShell￨3 ,￨3 String￨3 productName￨3 ,￨3 AboutBundleGroupData￨3 [￨3 ]￨3 bundleGroupInfos￨3 )￨2 {￨2 }￨2 private￨2 void￨2 handleMoreInfoPressed￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 handlePluginInfoPressed￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 buttonPressed￨2 (￨2 int￨3 buttonId￨3 )￨2 {￨2 }￨2 private￨2 void￨2 handleColumnsPressed￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 configureShell￨2 (￨2 Shell￨3 newShell￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createButtonsForButtonBar￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createDialogArea￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createInfoArea￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 Font￨3 font￨3 =￨3 parent￨3 .￨3 getFont￨3 (￨3 )￨3 ;￨3 infoArea￨3 =￨3 new￨3 Composite￨3 (￨3 parent￨3 ,￨3 SWT￨3 .￨3 NULL￨3 )￨3 ;￨3 GridData￨3 data￨3 =￨3 new￨3 GridData￨3 (￨3 GridData￨3 .￨3 FILL￨3 ,￨3 GridData￨3 .￨3 FILL￨3 ,￨3 true￨3 ,￨3 true￨3 )￨3 ;￨3 data￨3 .￨3 heightHint￨3 =￨3 convertVerticalDLUsToPixels￨3 (￨3 AboutFeaturesDialog￨3 .￨3 INFO_HEIGHT￨3 )￨3 ;￨3 infoArea￨3 .￨3 setLayoutData￨3 (￨3 data￨3 )￨3 ;￨3 GridLayout￨3 layout￨3 =￨3 new￨3 GridLayout￨3 (￨3 )￨3 ;￨3 layout￨3 .￨3 numColumns￨3 =￨3 2￨3 ;￨3 infoArea￨3 .￨3 setLayout￨3 (￨3 layout￨3 )￨3 ;￨3 imageLabel￨3 =￨3 new￨3 Label￨3 (￨3 infoArea￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 data￨3 =￨3 new￨3 GridData￨3 (￨3 GridData￨3 .￨3 FILL￨3 ,￨3 GridData￨3 .￨3 BEGINNING￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 ;￨3 data￨3 .￨3 widthHint￨3 =￨3 32￨3 ;￨3 data￨3 .￨3 heightHint￨3 =￨3 32￨3 ;￨3 imageLabel￨3 .￨3 setLayoutData￨3 (￨3 data￨3 )￨3 ;￨3 imageLabel￨3 .￨3 setFont￨3 (￨3 font￨3 )￨3 ;￨3 <START_BUG>￨3 text￨3 =￨3 new￨3 StyledText￨3 (￨3 infoArea￨3 ,￨3 (￨3 (￨3 SWT￨3 .￨3 MULTI￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 READ_ONLY￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 text￨3 .￨3 setCaret￨3 (￨3 null￨3 )￨3 ;￨3 text￨3 .￨3 setFont￨3 (￨3 parent￨3 .￨3 getFont￨3 (￨3 )￨3 )￨3 ;￨3 data￨3 =￨3 new￨3 GridData￨3 (￨3 GridData￨3 .￨3 FILL￨3 ,￨3 GridData￨3 .￨3 FILL￨3 ,￨3 true￨3 ,￨3 true￨3 )￨3 ;￨3 text￨3 .￨3 setLayoutData￨3 (￨3 data￨3 )￨3 ;￨3 text￨3 .￨3 setFont￨3 (￨3 font￨3 )￨3 ;￨3 text￨3 .￨3 setCursor￨3 (￨3 null￨3 )￨3 ;￨3 text￨3 .￨3 setBackground￨3 (￨3 infoArea￨3 .￨3 getBackground￨3 (￨3 )￨3 )￨3 ;￨3 addListeners￨3 (￨3 text￨3 )￨3 ;￨3 TableItem￨3 [￨3 ]￨3 items￨3 =￨3 table￨3 .￨3 getSelection￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 items￨4 .￨4 length￨4 )￨4 >￨4 0￨4 )￨3 {￨3 updateInfoArea￨4 (￨4 (￨4 (￨4 AboutBundleGroupData￨4 )￨4 (￨4 items￨4 [￨4 0￨4 ]￨4 .￨4 getData￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 createTable￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateButtons￨2 (￨2 AboutBundleGroupData￨3 info￨3 )￨2 {￨2 }￨2 private￨2 void￨2 updateInfoArea￨2 (￨2 AboutBundleGroupData￨3 info￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setInitialSelection￨2 (￨2 AboutBundleGroupData￨3 info￨3 )￨2 {￨2 }￨2 private￨2 void￨2 sort￨2 (￨2 int￨3 column￨3 )￨2 {￨2 }￨2 private￨2 void￨2 refreshTable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 [￨2 ]￨2 createRow￨2 (￨2 AboutBundleGroupData￨3 info￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 UploadForm￨1 extends￨1 Form￨1 {￨1 Bytes￨2 maxSize￨2 =￨2 Bytes￨2 .￨2 MAX￨2 ;￨2 public￨2 UploadForm￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 UploadForm￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 IFeedback￨3 validationFeedback￨3 )￨2 {￨2 }￨2 public￨2 UploadForm￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 IModel￨3 model￨3 ,￨3 IFeedback￨3 feedback￨3 )￨2 {￨2 }￨2 public￨2 void￨2 process￨2 (￨2 )￨2 {￨2 final￨3 HttpServletRequest￨3 request￨3 =￨3 (￨3 (￨3 wicket￨3 .￨3 protocol￨3 .￨3 http￨3 .￨3 WebRequest￨3 )￨3 (￨3 getRequest￨3 (￨3 )￨3 )￨3 )￨3 .￨3 getHttpServletRequest￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 final￨4 MultipartWebRequest￨4 multipartWebRequest￨4 =￨4 new￨4 MultipartWebRequest￨4 (￨4 this￨4 ,￨4 request￨4 )￨4 ;￨4 getRequestCycle￨4 (￨4 )￨4 .￨4 setRequest￨4 (￨4 multipartWebRequest￨4 )￨4 ;￨4 <START_BUG>￨4 super￨4 .￨4 onFormSubmitted￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 FileUploadException￨4 e￨4 )￨3 {￨3 final￨4 HashMap￨4 model￨4 =￨4 new￨4 HashMap￨4 (￨4 )￨4 ;￨4 model￨4 .￨4 put￨4 (￨4 "exception"￨4 ,￨4 e￨4 )￨4 ;￨4 model￨4 .￨4 put￨4 (￨4 "maxSize"￨4 ,￨4 maxSize￨4 )￨4 ;￨4 if￨4 (￨4 e￨5 instanceof￨5 SizeLimitExceededException￨5 )￨4 {￨4 final￨5 String￨5 defaultValue￨5 =￨5 "Upload<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>less<seq2seq4repair_space>than<seq2seq4repair_space>"￨5 +￨5 (￨5 maxSize￨5 )￨5 ;￨5 error￨5 (￨5 getString￨5 (￨5 (￨5 (￨5 getId￨5 (￨5 )￨5 )￨5 +￨5 ".uploadTooLarge"￨5 )￨5 ,￨5 Model￨5 .￨5 valueOf￨5 (￨5 model￨5 )￨5 ,￨5 defaultValue￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 final￨5 String￨5 defaultValue￨5 =￨5 "Upload<seq2seq4repair_space>failed:<seq2seq4repair_space>"￨5 +￨5 (￨5 e￨5 .￨5 getLocalizedMessage￨5 (￨5 )￨5 )￨5 ;￨5 error￨5 (￨5 getString￨5 (￨5 (￨5 (￨5 getId￨5 (￨5 )￨5 )￨5 +￨5 ".uploadFailed"￨5 )￨5 ,￨5 Model￨5 .￨5 valueOf￨5 (￨5 model￨5 )￨5 ,￨5 defaultValue￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 setMaxSize￨2 (￨2 final￨3 Bytes￨3 maxSize￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 onComponentTag￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 void￨2 onSubmit￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FloatDatatypeValidator￨1 extends￨1 AbstractNumericValidator￨1 {￨1 public￨2 FloatDatatypeValidator￨2 (￨2 )￨2 throws￨2 InvalidDatatypeFacetException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FloatDatatypeValidator￨2 (￨2 DatatypeValidator￨2 base￨2 ,￨2 Hashtable￨2 facets￨2 ,￨2 boolean￨2 derivedByList￨2 )￨2 throws￨2 InvalidDatatypeFacetException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 compare￨2 (￨2 String￨3 value1￨3 ,￨3 String￨3 value2￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 assignAdditionalFacets￨2 (￨2 String￨2 key￨2 ,￨2 Hashtable￨2 facets￨2 )￨2 throws￨2 InvalidDatatypeFacetException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 compareValues￨2 (￨2 Object￨3 value1￨3 ,￨3 Object￨3 value2￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMaxInclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMinInclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMaxExclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMinExclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setEnumeration￨2 (￨2 Vector￨2 enumeration￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getMaxInclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMinInclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMaxExclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMinExclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkContent￨2 (￨2 String￨2 content￨2 ,￨2 Object￨2 state￨2 ,￨2 Vector￨2 enumeration￨2 ,￨2 boolean￨2 asBase￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 this￨3 .￨3 fBaseValidator￨3 )￨3 !=￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 (￨3 (￨3 FloatDatatypeValidator￨3 )￨3 (￨3 fBaseValidator￨3 )￨3 )￨3 .￨3 checkContent￨3 (￨3 content￨3 ,￨3 state￨3 ,￨3 enumeration￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 fFacetsDefined￨4 )￨4 &￨4 (￨4 DatatypeValidator￨4 .￨4 FACET_PATTERN￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 fRegex￨5 )￨5 ==￨5 null￨5 )￨5 ||￨5 (￨5 (￨5 fRegex￨5 .￨5 matches￨5 (￨5 content￨5 )￨5 )￨5 ==￨5 false￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 InvalidDatatypeValueException￨5 (￨5 (￨5 (￨5 (￨5 "Value'"￨5 +￨5 content￨5 )￨5 +￨5 "does<seq2seq4repair_space>not<seq2seq4repair_space>match<seq2seq4repair_space>regular<seq2seq4repair_space>expression<seq2seq4repair_space>facet"￨5 )￨5 +￨5 (￨5 fPattern￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 asBase￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 Float￨3 f￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 f￨4 =￨4 FloatDatatypeValidator￨4 .￨4 fValueOf￨4 (￨4 content￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 NumberFormatException￨4 nfe￨4 )￨3 {￨3 String￨4 msg￨4 =￨4 getErrorString￨4 (￨4 DatatypeMessageProvider￨4 .￨4 fgMessageKeys￨4 [￨4 DatatypeMessageProvider￨4 .￨4 NOT_FLOAT￨4 ]￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 throw￨4 new￨4 InvalidDatatypeValueException￨4 (￨4 msg￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 enumeration￨4 !=￨4 null￨4 )￨3 {￨3 int￨4 size￨4 =￨4 enumeration￨4 .￨4 size￨4 (￨4 )￨4 ;￨4 Float￨4 [￨4 ]￨4 enumFloats￨4 =￨4 new￨4 Float￨4 [￨4 size￨4 ]￨4 ;￨4 int￨4 i￨4 =￨4 0￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 for￨5 (￨5 ;￨6 i￨6 <￨6 size￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 enumFloats￨6 [￨6 i￨6 ]￨6 =￨6 FloatDatatypeValidator￨6 .￨6 fValueOf￨6 (￨6 (￨6 (￨6 String￨6 )￨6 (￨6 enumeration￨6 .￨6 elementAt￨6 (￨6 i￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 catch￨4 (￨4 NumberFormatException￨5 nfe￨5 )￨4 {￨4 String￨5 msg￨5 =￨5 getErrorString￨5 (￨5 DatatypeMessageProvider￨5 .￨5 fgMessageKeys￨5 [￨5 DatatypeMessageProvider￨5 .￨5 INVALID_ENUM_VALUE￨5 ]￨5 ,￨5 new￨5 Object￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 )￨5 ;￨5 throw￨5 new￨5 InvalidDatatypeValueException￨5 (￨5 msg￨5 )￨5 ;￨5 }￨4 enumCheck￨4 (￨4 f￨4 .￨4 floatValue￨4 (￨4 )￨4 ,￨4 enumFloats￨4 )￨4 ;￨4 }￨3 boundsCheck￨3 (￨3 f￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 (￨4 fFacetsDefined￨4 )￨4 &￨4 (￨4 DatatypeValidator￨4 .￨4 FACET_ENUMERATION￨4 )￨4 )￨4 !=￨4 0￨4 )￨4 &&￨4 (￨4 (￨4 fEnumeration￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 enumCheck￨4 (￨4 f￨4 .￨4 floatValue￨4 (￨4 )￨4 ,￨4 (￨4 (￨4 Float￨4 [￨4 ]￨4 )￨4 (￨4 fEnumeration￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 int￨2 getInvalidFacetMsg￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 enumCheck￨2 (￨2 float￨2 v￨2 ,￨2 Float￨2 [￨2 ]￨2 enumFloats￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Float￨2 fValueOf￨2 (￨2 String￨2 s￨2 )￨2 throws￨2 NumberFormatException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 compareFloats￨2 (￨2 float￨3 f1￨3 ,￨3 float￨3 f2￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Echo￨1 extends￨1 Task￨1 {￨1 protected￨2 String￨2 message￨2 =￨2 ""￨2 ;￨2 protected￨2 File￨2 file￨2 =￨2 null￨2 ;￨2 protected￨2 boolean￨2 append￨2 =￨2 false￨2 ;￨2 protected￨2 int￨2 logLevel￨2 =￨2 Project￨2 .￨2 MSG_WARN￨2 ;￨2 public￨2 void￨2 setAppend￨2 (￨2 boolean￨3 append￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLevel￨2 (￨2 Echo￨3 .￨3 EchoLevel￨3 echoLevel￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMessage￨2 (￨2 String￨3 msg￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addText￨2 (￨2 String￨2 msg￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 message￨3 +=￨3 project￨3 .￨3 replaceProperties￨3 (￨3 msg￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 EchoLevel￨2 extends￨2 EnumeratedAttribute￨2 {￨2 public￨3 String￨3 [￨3 ]￨3 getValues￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 SSTableExport￨1 {￨1 private￨2 static￨2 int￨2 INPUT_FILE_BUFFER_SIZE￨2 =￨2 (￨2 8￨2 *￨2 1024￨2 )￨2 *￨2 1024￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 KEY_OPTION￨2 =￨2 "k"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 EXCLUDEKEY_OPTION￨2 =￨2 "x"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ENUMERATEKEYS_OPTION￨2 =￨2 "e"￨2 ;￨2 private￨2 static￨2 Options￨2 options￨2 ;￨2 private￨2 static￨2 CommandLine￨2 cmd￨2 ;￨2 private￨2 static￨2 String￨2 quote￨2 (￨2 String￨3 val￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 asKey￨2 (￨2 String￨3 val￨3 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 private￨2 static￨2 String￨2 asStr￨2 (￨2 byte￨3 [￨3 ]￨3 val￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 serializeColumns￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 cols￨3 ,￨3 AbstractType￨3 comp￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 serializeRow￨2 (￨2 SSTableIdentityIterator￨2 row￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 enumeratekeys￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 PrintStream￨2 outs￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 IPartitioner￨3 partitioner￨3 =￨3 StorageService￨3 .￨3 getPartitioner￨3 (￨3 )￨3 ;￨3 BufferedRandomAccessFile￨3 input￨3 =￨3 new￨3 BufferedRandomAccessFile￨3 (￨3 SSTable￨3 .￨3 indexFilename￨3 (￨3 ssTableFile￨3 )￨3 ,￨3 "r"￨3 )￨3 ;￨3 while￨3 (￨3 !￨4 (￨4 input￨4 .￨4 isEOF￨4 (￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 DecoratedKey￨4 decoratedKey￨4 =￨4 partitioner￨4 .￨4 convertFromDiskFormat￨4 (￨4 input￨4 .￨4 readUTF￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 long￨4 dataPosition￨4 =￨4 input￨4 .￨4 readLong￨4 (￨4 )￨4 ;￨4 outs￨4 .￨4 println￨4 (￨4 SSTableExport￨4 .￨4 asStr￨4 (￨4 decoratedKey￨4 .￨4 key￨4 )￨4 )￨4 ;￨4 }￨3 outs￨3 .￨3 flush￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 void￨2 enumeratekeys￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 String￨2 outFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 export￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 PrintStream￨2 outs￨2 ,￨2 String￨2 [￨2 ]￨2 keys￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 export￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 String￨2 outFile￨2 ,￨2 String￨2 [￨2 ]￨2 keys￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 export￨2 (￨2 SSTableReader￨2 reader￨2 ,￨2 PrintStream￨2 outs￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 export￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 PrintStream￨2 outs￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 export￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 String￨2 outFile￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 export￨2 (￨2 String￨2 ssTableFile￨2 ,￨2 String￨2 [￨2 ]￨2 excludes￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DomainUtil￨1 {￨1 public￨2 static￨2 void￨2 writeResponse￨2 (￨2 final￨3 HttpServerExchange￨3 exchange￨3 ,￨3 final￨3 int￨3 status￨3 ,￨3 ModelNode￨3 response￨3 ,￨3 OperationParameter￨3 operationParameter￨3 )￨2 {￨2 }￨2 private￨2 static￨2 int￨2 getResponseLength￨2 (￨2 final￨2 ModelNode￨2 modelNode￨2 ,￨2 final￨2 OperationParameter￨2 operationParameter￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 writeCacheHeaders￨2 (￨2 final￨3 HttpServerExchange￨3 exchange￨3 ,￨3 final￨3 int￨3 status￨3 ,￨3 final￨3 OperationParameter￨3 operationParameter￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 constructUrl￨2 (￨2 final￨3 HttpServerExchange￨3 exchange￨3 ,￨3 final￨3 String￨3 path￨3 )￨2 {￨2 final￨3 HeaderMap￨3 headers￨3 =￨3 exchange￨3 .￨3 getRequestHeaders￨3 (￨3 )￨3 ;￨3 String￨3 host￨3 =￨3 headers￨3 .￨3 getFirst￨3 (￨3 HOST￨3 )￨3 ;￨3 <START_BUG>￨3 String￨3 protocol￨3 =￨3 (￨3 (￨3 exchange￨3 .￨3 getConnection￨3 (￨3 )￨3 .￨3 getSslSession￨3 (￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 ?￨3 "https"￨3 :￨3 "http"￨3 ;￨3 <END_BUG>￨3 return￨3 (￨3 (￨3 protocol￨3 +￨3 "://"￨3 )￨3 +￨3 host￨3 )￨3 +￨3 path￨3 ;￨3 }￨2 }￨1
final￨1 class￨1 ComponentEventSender￨1 implements￨1 IEventSource￨1 {￨1 private￨2 final￨2 Component￨2 source￨2 ;￨2 private￨2 final￨2 IEventDispatcher￨2 dispatcher￨2 ;￨2 public￨2 ComponentEventSender￨2 (￨2 Component￨3 source￨3 ,￨3 IEventDispatcher￨3 dispatcher￨3 )￨2 {￨2 }￨2 public￨2 <￨2 T￨2 >￨2 void￨2 send￨2 (￨2 IEventSink￨3 sink￨3 ,￨3 Broadcast￨3 type￨3 ,￨3 T￨3 payload￨3 )￨2 {￨2 }￨2 private￨2 void￨2 breadth￨2 (￨2 final￨3 ComponentEvent￨3 <￨3 ?￨3 >￨3 event￨3 )￨2 {￨2 IEventSink￨3 sink￨3 =￨3 event￨3 .￨3 getSink￨3 (￨3 )￨3 ;￨3 boolean￨3 targetsApplication￨3 =￨3 sink￨3 instanceof￨3 Application￨3 ;￨3 boolean￨3 targetsSession￨3 =￨3 targetsApplication￨3 ||￨3 (￨3 sink￨3 instanceof￨3 Session￨3 )￨3 ;￨3 boolean￨3 targetsCycle￨3 =￨3 targetsSession￨3 ||￨3 (￨3 sink￨3 instanceof￨3 RequestCycle￨3 )￨3 ;￨3 boolean￨3 targetsComponent￨3 =￨3 sink￨3 instanceof￨3 Component￨3 ;￨3 if￨3 (￨3 (￨4 !￨4 targetsComponent￨4 )￨4 &&￨4 (￨4 !￨4 targetsCycle￨4 )￨4 )￨3 {￨3 dispatcher￨4 .￨4 dispatchEvent￨4 (￨4 sink￨4 ,￨4 event￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 targetsApplication￨4 )￨3 {￨3 dispatcher￨4 .￨4 dispatchEvent￨4 (￨4 source￨4 .￨4 getApplication￨4 (￨4 )￨4 ,￨4 event￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 event￨4 .￨4 isStop￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 targetsSession￨4 )￨3 {￨3 dispatcher￨4 .￨4 dispatchEvent￨4 (￨4 source￨4 .￨4 getSession￨4 (￨4 )￨4 ,￨4 event￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 event￨4 .￨4 isStop￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 targetsCycle￨4 )￨3 {￨3 dispatcher￨4 .￨4 dispatchEvent￨4 (￨4 source￨4 .￨4 getRequestCycle￨4 (￨4 )￨4 ,￨4 event￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 event￨4 .￨4 isStop￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 <START_BUG>￨3 Component￨3 cursor￨3 =￨3 (￨3 targetsCycle￨3 )￨3 ?￨3 cursor￨3 =￨3 source￨3 .￨3 getPage￨3 (￨3 )￨3 :￨3 (￨3 (￨3 Component￨3 )￨3 (￨3 sink￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 dispatcher￨3 .￨3 dispatchEvent￨3 (￨3 cursor￨3 ,￨3 event￨3 )￨3 ;￨3 if￨3 (￨3 event￨4 .￨4 isStop￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 event￨3 .￨3 resetShallow￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 cursor￨4 instanceof￨4 MarkupContainer￨4 )￨3 {￨3 (￨4 (￨4 MarkupContainer￨4 )￨4 (￨4 cursor￨4 )￨4 )￨4 .￨4 visitChildren￨4 (￨4 new￨4 ComponentEventSender￨4 .￨4 ComponentEventVisitor￨4 (￨4 event￨4 ,￨4 dispatcher￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 depth￨2 (￨2 final￨3 ComponentEvent￨3 <￨3 ?￨3 >￨3 event￨3 )￨2 {￨2 }￨2 private￨2 void￨2 bubble￨2 (￨2 ComponentEvent￨3 <￨3 ?￨3 >￨3 event￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 ComponentEventVisitor￨2 implements￨2 IVisitor￨2 <￨2 Component￨2 ,￨2 Void￨2 >￨2 {￨2 private￨3 final￨3 ComponentEvent￨3 <￨3 ?￨3 >￨3 e￨3 ;￨3 private￨3 final￨3 IEventDispatcher￨3 dispatcher￨3 ;￨3 private￨3 ComponentEventVisitor￨3 (￨3 ComponentEvent￨4 <￨4 ?￨4 >￨4 event￨4 ,￨4 IEventDispatcher￨4 dispatcher￨4 )￨3 {￨3 }￨3 public￨3 void￨3 component￨3 (￨3 Component￨4 object￨4 ,￨4 IVisit￨4 <￨4 Void￨4 >￨4 visit￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ModelBean￨1 implements￨1 Serializable￨1 {￨1 private￨2 String￨2 property1￨2 ;￨2 private￨2 String￨2 property2￨2 ;￨2 private￨2 String￨2 property3￨2 ;￨2 private￨2 String￨2 property4￨2 ;￨2 private￨2 String￨2 property5￨2 ;￨2 private￨2 String￨2 property6￨2 ;￨2 public￨2 ModelBean￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty1￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty1￨2 (￨2 String￨3 property1￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty2￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty2￨2 (￨2 String￨3 property2￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty3￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty3￨2 (￨2 String￨3 property3￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty4￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty4￨2 (￨2 String￨3 property4￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty5￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty5￨2 (￨2 String￨3 property5￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getProperty6￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setProperty6￨2 (￨2 String￨3 property6￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 getProperty1￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 Version￨1 {￨1 private￨2 Version￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 id￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "4.5-SNAPSHOT-20080602-1631"￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 }￨1
class￨1 MethodVerifier15￨1 extends￨1 MethodVerifier￨1 {￨1 MethodVerifier15￨2 (￨2 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 boolean￨2 areMethodsEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 substituteTwo￨3 )￨2 {￨2 }￨2 boolean￨2 areParametersEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 areReturnTypesEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 substituteTwo￨3 )￨2 {￨2 }￨2 boolean￨2 areTypesEqual￨2 (￨2 TypeBinding￨3 one￨3 ,￨3 TypeBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 canSkipInheritedMethods￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 canSkipInheritedMethods￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 void￨2 checkConcreteInheritedMethod￨2 (￨2 MethodBinding￨3 concreteMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 abstractMethods￨3 )￨2 {￨2 }￨2 void￨2 checkForBridgeMethod￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 otherInheritedMethods￨3 )￨2 {￨2 }￨2 void￨2 checkForInheritedNameClash￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 otherInheritedMethod￨3 )￨2 {￨2 }￨2 void￨2 checkForNameClash￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 void￨2 checkInheritedMethods￨2 (￨2 MethodBinding￨3 [￨3 ]￨3 methods￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 }￨2 void￨2 checkTypeVariableMethods￨2 (￨2 )￨2 {￨2 }￨2 MethodBinding￨2 computeSubstituteMethod￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 currentMethod￨3 )￨2 {￨2 }￨2 boolean￨2 detectInheritedMethodClash￨2 (￨2 MethodBinding￨3 inherited￨3 ,￨3 MethodBinding￨3 otherInherited￨3 )￨2 {￨2 }￨2 boolean￨2 detectNameClash￨2 (￨2 MethodBinding￨3 current￨3 ,￨3 MethodBinding￨3 inherited￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 doesMethodOverride￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 doParametersClash￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 substituteTwo￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 doReturnTypesCollide￨2 (￨2 MethodBinding￨3 method￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 boolean￨2 doTypeVariablesClash￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 substituteTwo￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 (￨3 one￨3 .￨3 typeVariables￨3 .￨3 length￨3 )￨3 >￨3 0￨3 )￨3 &&￨3 (￨3 !￨3 (￨3 one￨3 .￨3 areTypeVariableErasuresEqual￨3 (￨3 substituteTwo￨3 .￨3 original￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 boolean￨2 isInterfaceMethodImplemented￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 existingMethod￨3 ,￨3 ReferenceBinding￨3 superType￨3 )￨2 {￨2 }￨2 boolean￨2 mustImplementAbstractMethod￨2 (￨2 ReferenceBinding￨3 declaringClass￨3 )￨2 {￨2 }￨2 void￨2 verify￨2 (￨2 SourceTypeBinding￨3 someType￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 JavaElement￨1 extends￨1 PlatformObject￨1 implements￨1 IJavaElement￨1 {￨1 public￨2 static￨2 final￨2 char￨2 JEM_JAVAPROJECT￨2 =￨2 '='￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_PACKAGEFRAGMENTROOT￨2 =￨2 Path￨2 .￨2 SEPARATOR￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_PACKAGEFRAGMENT￨2 =￨2 '<'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_FIELD￨2 =￨2 '^'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_METHOD￨2 =￨2 '~'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_INITIALIZER￨2 =￨2 '|'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_COMPILATIONUNIT￨2 =￨2 '{'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_CLASSFILE￨2 =￨2 '('￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_TYPE￨2 =￨2 '['￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_PACKAGEDECLARATION￨2 =￨2 '%'￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 JEM_IMPORTDECLARATION￨2 =￨2 '#'￨2 ;￨2 protected￨2 int￨2 fOccurrenceCount￨2 =￨2 1￨2 ;￨2 protected￨2 int￨2 fLEType￨2 =￨2 0￨2 ;￨2 protected￨2 IJavaElement￨2 fParent￨2 ;￨2 protected￨2 String￨2 fName￨2 ;￨2 protected￨2 static￨2 JavaModelManager￨2 fgJavaModelManager￨2 =￨2 JavaModelManager￨2 .￨2 getJavaModelManager￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 Object￨2 NO_INFO￨2 =￨2 new￨2 Object￨2 (￨2 )￨2 ;￨2 protected￨2 JavaElement￨2 (￨2 int￨2 type￨2 ,￨2 IJavaElement￨2 parent￨2 ,￨2 String￨2 name￨2 )￨2 throws￨2 IllegalArgumentException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 Object￨3 info￨3 =￨3 JavaElement￨3 .￨3 fgJavaModelManager￨3 .￨3 peekAtInfo￨3 (￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 info￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 (￨5 JavaModelManager￨5 .￨5 VERBOSE￨5 )￨5 &&￨5 (￨5 (￨5 this￨5 )￨5 instanceof￨5 JavaModel￨5 )￨5 )￨4 {￨4 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 "CLOSING<seq2seq4repair_space>Java<seq2seq4repair_space>Model"￨5 )￨5 ;￨5 JavaModelManager￨5 .￨5 VERBOSE￨5 =￨5 false￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 this￨5 )￨5 instanceof￨5 IParent￨5 )￨4 {￨4 IJavaElement￨5 [￨5 ]￨5 children￨5 =￨5 (￨5 (￨5 JavaElementInfo￨5 )￨5 (￨5 info￨5 )￨5 )￨5 .￨5 getChildren￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 size￨6 =￨6 children￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 size￨6 ;￨6 ++￨6 i￨6 )￨5 {￨5 JavaElement￨6 child￨6 =￨6 (￨6 (￨6 JavaElement￨6 )￨6 (￨6 children￨6 [￨6 i￨6 ]￨6 )￨6 )￨6 ;￨6 child￨6 .￨6 close￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 closing￨4 (￨4 info￨4 )￨4 ;￨4 JavaElement￨4 .￨4 fgJavaModelManager￨4 .￨4 removeInfo￨4 (￨4 this￨4 )￨4 ;￨4 if￨4 (￨4 JavaModelManager￨5 .￨5 VERBOSE￨5 )￨4 {￨4 <START_BUG>￨5 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 (￨5 (￨5 "-><seq2seq4repair_space>Package<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨5 +￨5 (￨5 JavaElement￨5 .￨5 fgJavaModelManager￨5 .￨5 cache￨5 .￨5 pkgFillingRate￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "%"￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 (￨5 (￨5 "-><seq2seq4repair_space>Openable<seq2seq4repair_space>cache<seq2seq4repair_space>filling<seq2seq4repair_space>rate<seq2seq4repair_space>=<seq2seq4repair_space>"￨5 +￨5 (￨5 JavaElement￨5 .￨5 fgJavaModelManager￨5 .￨5 cache￨5 .￨5 openableFillingRate￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "%"￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 void￨2 closing￨2 (￨2 Object￨2 info￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 equalsDOMNode￨2 (￨2 IDOMNode￨2 node￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 exists￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IDOMNode￨2 findNode￨2 (￨2 IDOMCompilationUnit￨3 dom￨3 )￨2 {￨2 }￨2 protected￨2 IDOMNode￨2 followPath￨2 (￨2 ArrayList￨3 path￨3 ,￨3 int￨3 position￨3 ,￨3 IDOMNode￨3 node￨3 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getAncestor￨2 (￨2 int￨3 ancestorType￨3 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 [￨2 ]￨2 getChildren￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ArrayList￨2 getChildrenOfType￨2 (￨2 int￨2 type￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IClassFile￨2 getClassFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ICompilationUnit￨2 getCompilationUnit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JavaElementInfo￨2 getElementInfo￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getElementName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getElementType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getHandleIdentifier￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getHandleMemento￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 char￨2 getHandleMementoDelimiter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaModel￨2 getJavaModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JavaModelManager￨2 getJavaModelManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaProject￨2 getJavaProject￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 getOccurrenceCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IOpenable￨2 getOpenable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IOpenable￨2 getOpenableParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getRawInfo￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IJavaElement￨2 getSourceElementAt￨2 (￨2 int￨2 position￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SourceMapper￨2 getSourceMapper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 IResource￨2 getUnderlyingResource￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkspace￨2 getWorkspace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isAncestorOf￨2 (￨2 IJavaElement￨3 e￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isReadOnly￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStructureKnown￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JavaModelException￨2 newNotPresentException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 offsetSourceEndAndChildren￨2 (￨2 int￨3 amount￨3 ,￨3 IJavaElement￨3 child￨3 )￨2 {￨2 }￨2 public￨2 void￨2 offsetSourceRange￨2 (￨2 int￨3 amount￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 openHierarchy￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 opening￨2 (￨2 Object￨3 info￨3 )￨2 {￨2 }￨2 public￨2 String￨2 readableName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 removeInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 IJavaElement￨2 rootedAt￨2 (￨2 IJavaProject￨3 project￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 runOperation￨2 (￨2 JavaModelOperation￨2 operation￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setOccurrenceCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 tabString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toDebugString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 toString￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringWithAncestors￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringAncestors￨2 (￨2 StringBuffer￨3 buffer￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringChildren￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 ,￨3 Object￨3 info￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 toStringInfo￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringInfo￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 ,￨3 Object￨3 info￨3 )￨2 {￨2 }￨2 public￨2 void￨2 triggerSourceEndOffset￨2 (￨2 int￨3 amount￨3 ,￨3 int￨3 nameStart￨3 ,￨3 int￨3 nameEnd￨3 )￨2 {￨2 }￨2 public￨2 void￨2 triggerSourceRangeOffset￨2 (￨2 int￨3 amount￨3 ,￨3 int￨3 nameStart￨3 ,￨3 int￨3 nameEnd￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CastExpression￨1 extends￨1 Expression￨1 {￨1 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 Expression￨2 type￨2 ;￨2 public￨2 TypeBinding￨2 expectedType￨2 ;￨2 public￨2 CastExpression￨2 (￨2 Expression￨3 expression￨3 ,￨3 Expression￨3 type￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForAssignedCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 expectedType￨3 ,￨3 CastExpression￨3 rhs￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForEnclosingInstanceCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 enclosingInstance￨3 ,￨3 TypeBinding￨3 enclosingInstanceType￨3 ,￨3 TypeBinding￨3 memberType￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 operatorSignature￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 expressionTypeId￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCasts￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 receiver￨3 ,￨3 TypeBinding￨3 receiverType￨3 ,￨3 MethodBinding￨3 binding￨3 ,￨3 Expression￨3 [￨3 ]￨3 arguments￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 ,￨3 final￨3 InvocationSite￨3 invocationSite￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCasts￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 operatorSignature￨3 ,￨3 Expression￨3 left￨3 ,￨3 int￨3 leftTypeId￨3 ,￨3 boolean￨3 leftIsCast￨3 ,￨3 Expression￨3 right￨3 ,￨3 int￨3 rightTypeId￨3 ,￨3 boolean￨3 rightIsCast￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 checkAlternateBinding￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 receiver￨3 ,￨3 TypeBinding￨3 receiverType￨3 ,￨3 MethodBinding￨3 binding￨3 ,￨3 Expression￨3 [￨3 ]￨3 arguments￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 originalArgumentTypes￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 alternateArgumentTypes￨3 ,￨3 final￨3 InvocationSite￨3 invocationSite￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 checkUnsafeCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 TypeBinding￨3 match￨3 ,￨3 boolean￨3 isNarrowing￨3 )￨2 {￨2 if￨3 (￨3 match￨4 ==￨4 castType￨4 )￨3 {￨3 if￨4 (￨4 (￨5 !￨5 isNarrowing￨5 )￨5 &&￨5 (￨5 match￨5 ==￨5 (￨5 this￨5 .￨5 resolvedType￨5 .￨5 leafComponentType￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 tagAsUnnecessaryCast￨5 (￨5 scope￨5 ,￨5 castType￨5 )￨5 ;￨5 }￨4 return￨4 true￨4 ;￨4 }￨3 if￨3 (￨3 match￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 isNarrowing￨5 ?￨5 checkProvablyDistinctTypes￨5 (￨5 scope￨5 ,￨5 match￨5 ,￨5 expressionType￨5 ,￨5 0￨5 )￨5 :￨5 checkProvablyDistinctTypes￨5 (￨5 scope￨5 ,￨5 castType￨5 ,￨5 match￨5 ,￨5 0￨5 )￨5 )￨4 {￨4 return￨5 false￨5 ;￨5 }￨4 }￨3 switch￨3 (￨3 castType￨3 .￨3 kind￨3 (￨3 )￨3 )￨3 {￨3 case￨4 Binding￨4 .￨4 PARAMETERIZED_TYPE￨4 :￨4 if￨5 (￨5 castType￨6 .￨6 isBoundParameterizedType￨6 (￨6 )￨6 )￨5 {￨5 if￨6 (￨6 match￨7 ==￨7 null￨7 )￨6 {￨6 this￨7 .￨7 bits￨7 |=￨7 ASTNode￨7 .￨7 UnsafeCast￨7 ;￨7 return￨7 true￨7 ;￨7 }￨6 switch￨6 (￨6 match￨6 .￨6 kind￨6 (￨6 )￨6 )￨6 {￨6 }￨6 }￨5 case￨4 Binding￨4 .￨4 PARAMETERIZED_TYPE￨4 :￨4 if￨5 (￨5 isNarrowing￨6 )￨5 {￨5 if￨6 (￨6 (￨7 expressionType￨7 .￨7 isRawType￨7 (￨7 )￨7 )￨7 ||￨7 (￨7 !￨7 (￨7 expressionType￨7 .￨7 isEquivalentTo￨7 (￨7 match￨7 )￨7 )￨7 )￨7 )￨6 {￨6 this￨7 .￨7 bits￨7 |=￨7 ASTNode￨7 .￨7 UnsafeCast￨7 ;￨7 return￨7 true￨7 ;￨7 }￨6 TypeBinding￨6 genericCastType￨6 =￨6 castType￨6 .￨6 erasure￨6 (￨6 )￨6 ;￨6 <START_BUG>￨6 TypeBinding￨6 genericMatch￨6 =￨6 genericCastType￨6 .￨6 findSuperTypeWithSameErasure￨6 (￨6 expressionType￨6 )￨6 ;￨6 <END_BUG>￨6 if￨6 (￨6 genericMatch￨7 ==￨7 match￨7 )￨6 {￨6 this￨7 .￨7 bits￨7 |=￨7 ASTNode￨7 .￨7 UnsafeCast￨7 ;￨7 }￨6 return￨6 true￨6 ;￨6 }￨5 else￨5 {￨5 if￨6 (￨6 !￨7 (￨7 match￨7 .￨7 isEquivalentTo￨7 (￨7 castType￨7 )￨7 )￨7 )￨6 {￨6 this￨7 .￨7 bits￨7 |=￨7 ASTNode￨7 .￨7 UnsafeCast￨7 ;￨7 return￨7 true￨7 ;￨7 }￨6 }￨5 break￨5 ;￨5 case￨4 Binding￨4 .￨4 RAW_TYPE￨4 :￨4 this￨5 .￨5 bits￨5 |=￨5 ASTNode￨5 .￨5 UnsafeCast￨5 ;￨5 return￨5 true￨5 ;￨5 default￨4 :￨4 if￨5 (￨5 isNarrowing￨6 )￨5 {￨5 this￨6 .￨6 bits￨6 |=￨6 ASTNode￨6 .￨6 UnsafeCast￨6 ;￨6 return￨6 true￨6 ;￨6 }￨5 break￨5 ;￨5 }￨5 }￨5 break￨5 ;￨5 case￨4 Binding￨4 .￨4 ARRAY_TYPE￨4 :￨4 TypeBinding￨5 leafType￨5 =￨5 castType￨5 .￨5 leafComponentType￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 isNarrowing￨6 &&￨6 (￨6 (￨6 leafType￨6 .￨6 isBoundParameterizedType￨6 (￨6 )￨6 )￨6 ||￨6 (￨6 leafType￨6 .￨6 isTypeVariable￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 this￨6 .￨6 bits￨6 |=￨6 ASTNode￨6 .￨6 UnsafeCast￨6 ;￨6 return￨6 true￨6 ;￨6 }￨5 break￨5 ;￨5 case￨4 Binding￨4 .￨4 TYPE_PARAMETER￨4 :￨4 this￨5 .￨5 bits￨5 |=￨5 ASTNode￨5 .￨5 UnsafeCast￨5 ;￨5 return￨5 true￨5 ;￨5 }￨3 if￨3 (￨3 (￨4 !￨4 isNarrowing￨4 )￨4 &&￨4 (￨4 match￨4 ==￨4 (￨4 this￨4 .￨4 resolvedType￨4 .￨4 leafComponentType￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 tagAsUnnecessaryCast￨4 (￨4 scope￨4 ,￨4 castType￨4 )￨4 ;￨4 }￨3 return￨3 true￨3 ;￨3 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 innermostCastedExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 LocalVariableBinding￨2 localVariableBinding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 nullStatus￨2 (￨2 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpectedType￨2 (￨2 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isIndirectlyUsed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsNeedCheckCast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsUnnecessaryCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PanelTest￨1 extends￨1 WicketTestCase￨1 {￨1 public￨2 PanelTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderHomePage_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 boolean￨3 hit￨3 =￨3 false￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 executeTest￨4 (￨4 PanelPage_1￨4 .￨4 class￨4 ,￨4 "Dummy.html"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 MarkupException￨4 mex￨4 )￨3 {￨3 hit￨4 =￨4 true￨4 ;￨4 assertNotNull￨4 (￨4 mex￨4 .￨4 getMarkupStream￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 assertTrue￨4 (￨4 mex￨4 .￨4 getMessage￨4 (￨4 )￨4 .￨4 contains￨4 (￨4 "Expected<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>for<seq2seq4repair_space>"￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 assertTrue￨4 (￨4 mex￨4 .￨4 getMessage￨4 (￨4 )￨4 .￨4 contains￨4 (￨4 "SimplePanel_1.html"￨4 )￨4 )￨4 ;￨4 }￨3 assertTrue￨3 (￨3 "Did<seq2seq4repair_space>expect<seq2seq4repair_space>a<seq2seq4repair_space>MarkupException"￨3 ,￨3 hit￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testRenderHomePage_2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanel3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanel4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_5￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_6￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPanelWithAttributeModifier￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_7￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInlinePanel_8￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStartPanel￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DomainServerCommunicationServices￨1 implements￨1 Serializable￨1 ,￨1 ServiceActivator￨1 {￨1 private￨2 static￨2 final￨2 OptionMap￨2 DEFAULTS￨2 =￨2 OptionMap￨2 .￨2 create￨2 (￨2 RECEIVE_WINDOW_SIZE￨2 ,￨2 WINDOW_SIZE￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1593964083902839384L￨2 ;￨2 private￨2 static￨2 volatile￨2 int￨2 initialOperationID￨2 ;￨2 private￨2 final￨2 ModelNode￨2 endpointConfig￨2 ;￨2 private￨2 final￨2 InetSocketAddress￨2 managementSocket￨2 ;￨2 private￨2 final￨2 String￨2 serverName￨2 ;￨2 private￨2 final￨2 String￨2 serverProcessName￨2 ;￨2 private￨2 final￨2 byte￨2 [￨2 ]￨2 authKey￨2 ;￨2 private￨2 final￨2 boolean￨2 managementSubsystemEndpoint￨2 ;￨2 DomainServerCommunicationServices￨2 (￨2 ModelNode￨3 endpointConfig￨3 ,￨3 InetSocketAddress￨3 managementSocket￨3 ,￨3 String￨3 serverName￨3 ,￨3 String￨3 serverProcessName￨3 ,￨3 byte￨3 [￨3 ]￨3 authKey￨3 ,￨3 boolean￨3 managementSubsystemEndpoint￨3 )￨2 {￨2 }￨2 static￨2 void￨2 updateOperationID￨2 (￨2 final￨3 int￨3 operationID￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 activate￨2 (￨2 final￨2 ServiceActivatorContext￨2 serviceActivatorContext￨2 )￨2 throws￨2 ServiceRegistryException￨2 (￨2 )￨2 {￨2 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 serviceActivatorContext￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 endpointName￨3 =￨3 (￨3 managementSubsystemEndpoint￨3 )￨3 ?￨3 RemotingServices￨3 .￨3 SUBSYSTEM_ENDPOINT￨3 :￨3 ManagementRemotingServices￨3 .￨3 MANAGEMENT_ENDPOINT￨3 ;￨3 final￨3 EndpointService￨3 .￨3 EndpointType￨3 endpointType￨3 =￨3 (￨3 managementSubsystemEndpoint￨3 )￨3 ?￨3 EndpointType￨3 .￨3 SUBSYSTEM￨3 :￨3 EndpointType￨3 .￨3 MANAGEMENT￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 @￨4 SuppressWarnings￨4 (￨4 "deprecation"￨4 )￨4 final￨4 OptionMap￨4 options￨4 =￨4 EndpointConfigFactory￨4 .￨4 create￨4 (￨4 DEFAULT￨4 ,￨4 endpointConfig￨4 ,￨4 DomainServerCommunicationServices￨4 .￨4 DEFAULTS￨4 )￨4 ;￨4 <START_BUG>￨4 ManagementRemotingServices￨4 .￨4 installRemotingManagementEndpoint￨4 (￨4 serviceTarget￨4 ,￨4 endpointName￨4 ,￨4 WildFlySecurityManager￨4 .￨4 getPropertyPrivileged￨4 (￨4 NODE_NAME￨4 ,￨4 null￨4 )￨4 ,￨4 endpointType￨4 ,￨4 options￨4 ,￨4 null￨4 ,￨4 null￨4 )￨4 ;￨4 <END_BUG>￨4 final￨4 int￨4 port￨4 =￨4 managementSocket￨4 .￨4 getPort￨4 (￨4 )￨4 ;￨4 final￨4 String￨4 host￨4 =￨4 managementSocket￨4 .￨4 getAddress￨4 (￨4 )￨4 .￨4 getHostAddress￨4 (￨4 )￨4 ;￨4 HostControllerConnectionService￨4 service￨4 =￨4 new￨4 HostControllerConnectionService￨4 (￨4 host￨4 ,￨4 port￨4 ,￨4 serverName￨4 ,￨4 serverProcessName￨4 ,￨4 authKey￨4 ,￨4 DomainServerCommunicationServices￨4 .￨4 initialOperationID￨4 ,￨4 managementSubsystemEndpoint￨4 )￨4 ;￨4 serviceTarget￨4 .￨4 addService￨4 (￨4 SERVICE_NAME￨4 ,￨4 service￨4 )￨4 .￨4 addDependency￨4 (￨4 endpointName￨4 ,￨4 Endpoint￨4 .￨4 class￨4 ,￨4 service￨4 .￨4 getEndpointInjector￨4 (￨4 )￨4 )￨4 .￨4 addDependency￨4 (￨4 ControlledProcessStateService￨4 .￨4 SERVICE_NAME￨4 ,￨4 ControlledProcessStateService￨4 .￨4 class￨4 ,￨4 service￨4 .￨4 getProcessStateServiceInjectedValue￨4 (￨4 )￨4 )￨4 .￨4 setInitialMode￨4 (￨4 ACTIVE￨4 )￨4 .￨4 install￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 OperationFailedException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 ServiceRegistryException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 ServiceActivator￨2 create￨2 (￨2 final￨3 ModelNode￨3 endpointConfig￨3 ,￨3 final￨3 InetSocketAddress￨3 managementSocket￨3 ,￨3 final￨3 String￨3 serverName￨3 ,￨3 final￨3 String￨3 serverProcessName￨3 ,￨3 final￨3 byte￨3 [￨3 ]￨3 authKey￨3 ,￨3 final￨3 boolean￨3 managementSubsystemEndpoint￨3 )￨2 {￨2 }￨2 public￨2 interface￨2 OperationIDUpdater￨2 (￨2 )￨2 {￨2 void￨3 updateOperationID￨3 (￨3 int￨4 operationID￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 Base64￨1 {￨1 private￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 intToBase64￨2 =￨2 new￨2 char￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 byte￨2 [￨2 ]￨2 base64ToInt￨2 =￨2 new￨2 byte￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 static￨2 String￨2 byteArrayToBase64￨2 (￨2 byte￨3 [￨3 ]￨3 a￨3 ,￨3 int￨3 offset￨3 ,￨3 int￨3 len￨3 )￨2 {￨2 int￨3 aLen￨3 =￨3 len￨3 ;￨3 int￨3 numFullGroups￨3 =￨3 aLen￨3 /￨3 3￨3 ;￨3 int￨3 numBytesInPartialGroup￨3 =￨3 aLen￨3 -￨3 (￨3 3￨3 *￨3 numFullGroups￨3 )￨3 ;￨3 int￨3 resultLen￨3 =￨3 4￨3 *￨3 (￨3 (￨3 aLen￨3 +￨3 2￨3 )￨3 /￨3 3￨3 )￨3 ;￨3 <START_BUG>￨3 StringBuffer￨3 result￨3 =￨3 new￨3 StringBuffer￨3 (￨3 resultLen￨3 )￨3 ;￨3 <END_BUG>￨3 char￨3 [￨3 ]￨3 intToAlpha￨3 =￨3 Base64￨3 .￨3 intToBase64￨3 ;￨3 int￨3 inCursor￨3 =￨3 offset￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 numFullGroups￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 int￨4 byte0￨4 =￨4 (￨4 a￨4 [￨4 (￨4 inCursor￨4 ++￨4 )￨4 ]￨4 )￨4 &￨4 255￨4 ;￨4 int￨4 byte1￨4 =￨4 (￨4 a￨4 [￨4 (￨4 inCursor￨4 ++￨4 )￨4 ]￨4 )￨4 &￨4 255￨4 ;￨4 int￨4 byte2￨4 =￨4 (￨4 a￨4 [￨4 (￨4 inCursor￨4 ++￨4 )￨4 ]￨4 )￨4 &￨4 255￨4 ;￨4 result￨4 .￨4 append￨4 (￨4 intToAlpha￨4 [￨4 (￨4 byte0￨4 >￨4 >￨4 2￨4 )￨4 ]￨4 )￨4 ;￨4 result￨4 .￨4 append￨4 (￨4 intToAlpha￨4 [￨4 (￨4 (￨4 (￨4 byte0￨4 <<￨4 4￨4 )￨4 &￨4 63￨4 )￨4 |￨4 (￨4 byte1￨4 >￨4 >￨4 4￨4 )￨4 )￨4 ]￨4 )￨4 ;￨4 result￨4 .￨4 append￨4 (￨4 intToAlpha￨4 [￨4 (￨4 (￨4 (￨4 byte1￨4 <<￨4 2￨4 )￨4 &￨4 63￨4 )￨4 |￨4 (￨4 byte2￨4 >￨4 >￨4 6￨4 )￨4 )￨4 ]￨4 )￨4 ;￨4 result￨4 .￨4 append￨4 (￨4 intToAlpha￨4 [￨4 (￨4 byte2￨4 &￨4 63￨4 )￨4 ]￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 numBytesInPartialGroup￨4 !=￨4 0￨4 )￨3 {￨3 int￨4 byte0￨4 =￨4 (￨4 a￨4 [￨4 (￨4 inCursor￨4 ++￨4 )￨4 ]￨4 )￨4 &￨4 255￨4 ;￨4 result￨4 .￨4 append￨4 (￨4 intToAlpha￨4 [￨4 (￨4 byte0￨4 >￨4 >￨4 2￨4 )￨4 ]￨4 )￨4 ;￨4 if￨4 (￨4 numBytesInPartialGroup￨5 ==￨5 1￨5 )￨4 {￨4 result￨5 .￨5 append￨5 (￨5 intToAlpha￨5 [￨5 (￨5 (￨5 byte0￨5 <<￨5 4￨5 )￨5 &￨5 63￨5 )￨5 ]￨5 )￨5 ;￨5 result￨5 .￨5 append￨5 (￨5 "=="￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 int￨5 byte1￨5 =￨5 (￨5 a￨5 [￨5 (￨5 inCursor￨5 ++￨5 )￨5 ]￨5 )￨5 &￨5 255￨5 ;￨5 result￨5 .￨5 append￨5 (￨5 intToAlpha￨5 [￨5 (￨5 (￨5 (￨5 byte0￨5 <<￨5 4￨5 )￨5 &￨5 63￨5 )￨5 |￨5 (￨5 byte1￨5 >￨5 >￨5 4￨5 )￨5 )￨5 ]￨5 )￨5 ;￨5 result￨5 .￨5 append￨5 (￨5 intToAlpha￨5 [￨5 (￨5 (￨5 byte1￨5 <<￨5 2￨5 )￨5 &￨5 63￨5 )￨5 ]￨5 )￨5 ;￨5 result￨5 .￨5 append￨5 (￨5 '='￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 result￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 byte￨2 [￨2 ]￨2 base64ToByteArray￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 private￨2 static￨2 int￨2 base64toInt￨2 (￨2 char￨3 c￨3 ,￨3 byte￨3 [￨3 ]￨3 alphaToInt￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractCollectionTest￨1 <￨1 E￨1 >￨1 extends￨1 AbstractObjectTest￨1 {￨1 private￨2 Collection￨2 <￨2 E￨2 >￨2 collection￨2 ;￨2 private￨2 Collection￨2 <￨2 E￨2 >￨2 confirmed￨2 ;￨2 public￨2 AbstractCollectionTest￨2 (￨2 String￨3 testName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 areEqualElementsDistinguishable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAddSupported￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRemoveSupported￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNullSupported￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFailFastSupported￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 isEqualsCheckable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resetEmpty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resetFull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 Collection￨2 <￨2 E￨2 >￨2 makeConfirmedCollection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 Collection￨2 <￨2 E￨2 >￨2 makeConfirmedFullCollection￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 abstract￨2 Collection￨2 <￨2 E￨2 >￨2 makeObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 makeFullCollection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 .￨2 Entry￨2 <￨2 E￨2 ,￨2 E￨2 >￨2 cloneMapEntry￨2 (￨2 Map￨3 .￨3 Entry￨3 <￨3 E￨3 ,￨3 E￨3 >￨3 entry￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 E￨2 [￨2 ]￨2 getFullElements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 E￨2 [￨2 ]￨2 getOtherElements￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 E￨2 [￨2 ]￨2 getFullNonNullElements￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 E￨2 [￨2 ]￨2 getOtherNonNullElements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 getFullNonNullStringElements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 getOtherNonNullStringElements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionAdd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionAddAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnsupportedAdd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionClear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionContains￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionContainsAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionIsEmpty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionIterator￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 void￨2 testCollectionIteratorRemove￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionRemove￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionRemoveAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionRetainAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionToArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionToArray2￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCollectionToString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnsupportedRemove￨2 (￨2 )￨2 {￨2 if￨3 (￨3 isRemoveSupported￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 resetEmpty￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 getCollection￨4 (￨4 )￨4 .￨4 clear￨4 (￨4 )￨4 ;￨4 AbstractCollectionTest￨4 .￨4 fail￨4 (￨4 "clear<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedOperationException￨4 e￨4 )￨3 {￨3 }￨3 verify￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 getCollection￨4 (￨4 )￨4 .￨4 remove￨4 (￨4 null￨4 )￨4 ;￨4 AbstractCollectionTest￨4 .￨4 fail￨4 (￨4 "remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedOperationException￨4 e￨4 )￨3 {￨3 }￨3 verify￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 getCollection￨4 (￨4 )￨4 .￨4 removeAll￨4 (￨4 null￨4 )￨4 ;￨4 AbstractCollectionTest￨4 .￨4 fail￨4 (￨4 "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedOperationException￨4 e￨4 )￨3 {￨3 }￨3 verify￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 getCollection￨4 (￨4 )￨4 .￨4 retainAll￨4 (￨4 null￨4 )￨4 ;￨4 <START_BUG>￨4 AbstractCollectionTest￨4 .￨4 fail￨4 (￨4 "removeAll<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 UnsupportedOperationException￨4 e￨4 )￨3 {￨3 }￨3 verify￨3 (￨3 )￨3 ;￨3 resetFull￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Iterator￨4 <￨4 E￨4 >￨4 iterator￨4 =￨4 getCollection￨4 (￨4 )￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 iterator￨4 .￨4 next￨4 (￨4 )￨4 ;￨4 iterator￨4 .￨4 remove￨4 (￨4 )￨4 ;￨4 AbstractCollectionTest￨4 .￨4 fail￨4 (￨4 "iterator.remove<seq2seq4repair_space>should<seq2seq4repair_space>raise<seq2seq4repair_space>UnsupportedOperationException"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedOperationException￨4 e￨4 )￨3 {￨3 }￨3 verify￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testCollectionIteratorFailFast￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 testSerializeDeserializeThenCompare￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 getCollection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCollection￨2 (￨2 Collection￨3 <￨3 E￨3 >￨3 collection￨3 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 getConfirmed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setConfirmed￨2 (￨2 Collection￨3 <￨3 E￨3 >￨3 confirmed￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 assertNotCollectionContains￨2 (￨2 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 ,￨3 Object￨3 element￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 assertNotCollectionContainsAll￨2 (￨2 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 ,￨3 Collection￨3 <￨3 ?￨3 >￨3 sub￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 assertNotRemoveFromCollection￨2 (￨2 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 ,￨3 Object￨3 element￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 assertNotRemoveAllFromCollection￨2 (￨2 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 ,￨3 Collection￨3 <￨3 ?￨3 >￨3 sub￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 NativeRemotingManagementAddHandler￨1 extends￨1 AbstractAddStepHandler￨1 implements￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 NativeRemotingManagementAddHandler￨2 INSTANCE￨2 =￨2 new￨2 NativeRemotingManagementAddHandler￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 OPERATION_NAME￨2 =￨2 ModelDescriptionConstants￨2 .￨2 ADD￨2 ;￨2 protected￨2 void￨2 populateModel￨2 (￨2 ModelNode￨3 operation￨3 ,￨3 ModelNode￨3 model￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨3 context￨3 ,￨3 ModelNode￨3 operation￨3 ,￨3 ModelNode￨3 model￨3 ,￨3 ServiceVerificationHandler￨3 verificationHandler￨3 ,￨3 List￨3 <￨3 ServiceController￨3 <￨3 ?￨3 >￨3 >￨3 newControllers￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 ManagementDescription￨3 .￨3 getAddNativeManagementDescription￨3 (￨3 locale￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 ;￨4 if￨4 (￨4 index￨5 ==￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getEntryKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 IClasspathEntry￨6 .￨6 CPE_PROJECT￨6 )￨6 )￨5 {￨5 needToUpdateDependents￨6 =￨6 true￨6 ;￨6 this￨6 .￨6 needCycleCheck￨6 =￨6 true￨6 ;￨6 continue￨6 ;￨6 }￨5 IPackageFragmentRoot￨5 [￨5 ]￨5 pkgFragmentRoots￨5 =￨5 null￨5 ;￨5 if￨5 (￨5 removedRoots￨6 !=￨6 null￨6 )￨5 {￨5 IPackageFragmentRoot￨6 removedRoot￨6 =￨6 (￨6 (￨6 IPackageFragmentRoot￨6 )￨6 (￨6 removedRoots￨6 .￨6 get￨6 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getPath￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 removedRoot￨7 !=￨7 null￨7 )￨6 {￨6 pkgFragmentRoots￨7 =￨7 new￨7 IPackageFragmentRoot￨7 [￨7 ]￨7 (￨7 )￨7 {￨7 }￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 pkgFragmentRoots￨6 ==￨6 null￨6 )￨5 {￨5 pkgFragmentRoots￨6 =￨6 project￨6 .￨6 computePackageFragmentRoots￨6 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 )￨6 ;￨6 }￨5 addClasspathDeltas￨5 (￨5 pkgFragmentRoots￨5 ,￨5 IJavaElementDelta￨5 .￨5 F_REMOVED_FROM_CLASSPATH￨5 ,￨5 delta￨5 )￨5 ;￨5 int￨5 changeKind￨5 =￨5 oldResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 getEntryKind￨5 (￨5 )￨5 ;￨5 needToUpdateDependents￨5 |=￨5 (￨5 changeKind￨5 ==￨5 (￨5 IClasspathEntry￨5 .￨5 CPE_SOURCE￨5 )￨5 )￨5 ||￨5 (￨5 oldResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 isExported￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 indexManager￨6 !=￨6 null￨6 )￨6 &&￨6 (￨6 changeKind￨6 ==￨6 (￨6 IClasspathEntry￨6 .￨6 CPE_SOURCE￨6 )￨6 )￨6 )￨5 {￨5 final￨6 IPath￨6 path￨6 =￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getPath￨6 (￨6 )￨6 ;￨6 postAction￨6 (￨6 new￨6 JavaModelOperation￨6 .￨6 IPostAction￨6 (￨6 )￨6 {￨6 public￨7 String￨7 getID￨7 (￨7 )￨7 {￨7 return￨8 path￨8 .￨8 toString￨8 (￨8 )￨8 ;￨8 }￨7 public￨7 void￨7 run￨7 (￨7 )￨7 throws￨7 JavaModelException￨7 (￨7 )￨7 {￨7 indexManager￨8 .￨8 removeSourceFolderFromIndex￨8 (￨8 project￨8 ,￨8 path￨8 )￨8 ;￨8 }￨7 }￨6 ,￨6 JavaModelOperation￨6 .￨6 REMOVEALL_APPEND￨6 )￨6 ;￨6 }￨5 hasDelta￨5 =￨5 true￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getEntryKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 IClasspathEntry￨6 .￨6 CPE_PROJECT￨6 )￨6 )￨5 {￨5 this￨6 .￨6 needCycleCheck￨6 |=￨6 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 isExported￨6 (￨6 )￨6 )￨6 !=￨6 (￨6 newResolvedPath￨6 [￨6 index￨6 ]￨6 .￨6 isExported￨6 (￨6 )￨6 )￨6 ;￨6 continue￨6 ;￨6 }￨5 needToUpdateDependents￨5 |=￨5 (￨5 oldResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 isExported￨5 (￨5 )￨5 )￨5 !=￨5 (￨5 newResolvedPath￨5 [￨5 index￨5 ]￨5 .￨5 isExported￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 oldResolvedPathLongest￨6 &&￨6 (￨6 index￨6 !=￨6 i￨6 )￨6 )￨5 {￨5 addClasspathDeltas￨6 (￨6 project￨6 .￨6 computePackageFragmentRoots￨6 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 )￨6 ,￨6 IJavaElementDelta￨6 .￨6 F_CLASSPATH_REORDER￨6 ,￨6 delta￨6 )￨6 ;￨6 int￨6 changeKind￨6 =￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getEntryKind￨6 (￨6 )￨6 ;￨6 needToUpdateDependents￨6 |=￨6 changeKind￨6 ==￨6 (￨6 IClasspathEntry￨6 .￨6 CPE_SOURCE￨6 )￨6 ;￨6 hasDelta￨6 =￨6 true￨6 ;￨6 }￨5 int￨5 sourceAttachmentFlags￨5 =￨5 this￨5 .￨5 getSourceAttachmentDeltaFlag￨5 (￨5 oldResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 getSourceAttachmentPath￨5 (￨5 )￨5 ,￨5 newResolvedPath￨5 [￨5 index￨5 ]￨5 .￨5 getSourceAttachmentPath￨5 (￨5 )￨5 )￨5 ;￨5 int￨5 sourceAttachmentRootFlags￨5 =￨5 this￨5 .￨5 getSourceAttachmentDeltaFlag￨5 (￨5 oldResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 getSourceAttachmentRootPath￨5 (￨5 )￨5 ,￨5 newResolvedPath￨5 [￨5 index￨5 ]￨5 .￨5 getSourceAttachmentRootPath￨5 (￨5 )￨5 )￨5 ;￨5 int￨5 flags￨5 =￨5 sourceAttachmentFlags￨5 |￨5 sourceAttachmentRootFlags￨5 ;￨5 if￨5 (￨5 flags￨6 !=￨6 0￨6 )￨5 {￨5 addClasspathDeltas￨6 (￨6 project￨6 .￨6 computePackageFragmentRoots￨6 (￨6 oldResolvedPath￨6 [￨6 i￨6 ]￨6 )￨6 ,￨6 flags￨6 ,￨6 delta￨6 )￨6 ;￨6 hasDelta￨6 =￨6 true￨6 ;￨6 }￨5 }￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 newResolvedPath￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 int￨4 index￨4 =￨4 classpathContains￨4 (￨4 oldResolvedPath￨4 ,￨4 newResolvedPath￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 if￨4 (￨4 index￨5 ==￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 newResolvedPath￨6 [￨6 i￨6 ]￨6 .￨6 getEntryKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 IClasspathEntry￨6 .￨6 CPE_PROJECT￨6 )￨6 )￨5 {￨5 needToUpdateDependents￨6 =￨6 true￨6 ;￨6 this￨6 .￨6 needCycleCheck￨6 =￨6 true￨6 ;￨6 continue￨6 ;￨6 }￨5 addClasspathDeltas￨5 (￨5 project￨5 .￨5 computePackageFragmentRoots￨5 (￨5 newResolvedPath￨5 [￨5 i￨5 ]￨5 )￨5 ,￨5 IJavaElementDelta￨5 .￨5 F_ADDED_TO_CLASSPATH￨5 ,￨5 delta￨5 )￨5 ;￨5 int￨5 changeKind￨5 =￨5 newResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 getEntryKind￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 indexManager￨6 !=￨6 null￨6 )￨5 {￨5 switch￨6 (￨6 changeKind￨6 )￨6 {￨6 case￨7 IClasspathEntry￨7 .￨7 CPE_LIBRARY￨7 :￨7 boolean￨8 pathHasChanged￨8 =￨8 true￨8 ;￨8 final￨8 IPath￨8 newPath￨8 =￨8 newResolvedPath￨8 [￨8 i￨8 ]￨8 .￨8 getPath￨8 (￨8 )￨8 ;￨8 for￨8 (￨8 int￨9 j￨9 =￨9 0￨9 ;￨9 j￨9 <￨9 (￨9 oldResolvedPath￨9 .￨9 length￨9 )￨9 ;￨9 j￨9 ++￨9 )￨8 {￨8 IClasspathEntry￨9 oldEntry￨9 =￨9 oldResolvedPath￨9 [￨9 j￨9 ]￨9 ;￨9 if￨9 (￨9 oldEntry￨10 .￨10 getPath￨10 (￨10 )￨10 .￨10 equals￨10 (￨10 newPath￨10 )￨10 )￨9 {￨9 pathHasChanged￨10 =￨10 false￨10 ;￨10 break￨10 ;￨10 }￨9 }￨8 if￨8 (￨8 pathHasChanged￨9 )￨8 {￨8 postAction￨9 (￨9 new￨9 JavaModelOperation￨9 .￨9 IPostAction￨9 (￨9 )￨9 {￨9 public￨10 String￨10 getID￨10 (￨10 )￨10 {￨10 return￨11 newPath￨11 .￨11 toString￨11 (￨11 )￨11 ;￨11 }￨10 public￨10 void￨10 run￨10 (￨10 )￨10 throws￨10 JavaModelException￨10 (￨10 )￨10 {￨10 indexManager￨11 .￨11 indexLibrary￨11 (￨11 newPath￨11 ,￨11 project￨11 .￨11 getProject￨11 (￨11 )￨11 )￨11 ;￨11 }￨10 }￨9 ,￨9 JavaModelOperation￨9 .￨9 REMOVEALL_APPEND￨9 )￨9 ;￨9 }￨8 break￨8 ;￨8 case￨7 IClasspathEntry￨7 .￨7 CPE_SOURCE￨7 :￨7 IClasspathEntry￨8 entry￨8 =￨8 newResolvedPath￨8 [￨8 i￨8 ]￨8 ;￨8 final￨8 IPath￨8 path￨8 =￨8 entry￨8 .￨8 getPath￨8 (￨8 )￨8 ;￨8 <START_BUG>￨8 final￨8 char￨8 [￨8 ]￨8 [￨8 ]￨8 exclusionPatterns￨8 =￨8 (￨8 (￨8 ClasspathEntry￨8 )￨8 (￨8 entry￨8 )￨8 )￨8 .￨8 fulExclusionPatternChars￨8 (￨8 )￨8 ;￨8 <END_BUG>￨8 postAction￨8 (￨8 new￨8 JavaModelOperation￨8 .￨8 IPostAction￨8 (￨8 )￨8 {￨8 public￨9 String￨9 getID￨9 (￨9 )￨9 {￨9 return￨10 path￨10 .￨10 toString￨10 (￨10 )￨10 ;￨10 }￨9 public￨9 void￨9 run￨9 (￨9 )￨9 throws￨9 JavaModelException￨9 (￨9 )￨9 {￨9 indexManager￨10 .￨10 indexSourceFolder￨10 (￨10 project￨10 ,￨10 path￨10 ,￨10 exclusionPatterns￨10 )￨10 ;￨10 }￨9 }￨8 ,￨8 JavaModelOperation￨8 .￨8 APPEND￨8 )￨8 ;￨8 break￨8 ;￨8 }￨6 }￨5 needToUpdateDependents￨5 |=￨5 (￨5 changeKind￨5 ==￨5 (￨5 IClasspathEntry￨5 .￨5 CPE_SOURCE￨5 )￨5 )￨5 ||￨5 (￨5 newResolvedPath￨5 [￨5 i￨5 ]￨5 .￨5 isExported￨5 (￨5 )￨5 )￨5 ;￨5 hasDelta￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 hasDelta￨4 )￨3 {￨3 this￨4 .￨4 addDelta￨4 (￨4 delta￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 needToUpdateDependents￨4 )￨3 {￨3 updateAffectedProjects￨4 (￨4 project￨4 .￨4 getProject￨4 (￨4 )￨4 .￨4 getFullPath￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 JavaProject￨2 getProject￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 getSourceAttachmentDeltaFlag￨2 (￨2 IPath￨3 oldPath￨3 ,￨3 IPath￨3 newPath￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isReadOnly￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 saveClasspathIfNecessary￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateClasspath￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateAffectedProjects￨2 (￨2 IPath￨3 prerequisiteProjectPath￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateCycleMarkersIfNecessary￨2 (￨2 IClasspathEntry￨3 [￨3 ]￨3 newResolvedPath￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateOutputLocation￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateProjectReferencesIfNecessary￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaModelStatus￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BundleContextService￨1 implements￨1 Service￨1 <￨1 BundleContext￨1 >￨1 {￨1 public￨2 static￨2 final￨2 ServiceName￨2 SERVICE_NAME￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "osgi"￨2 ,￨2 "context"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.jboss.as.osgi"￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 BundleManager￨2 >￨2 injectedBundleManager￨2 =￨2 new￨2 InjectedValue￨2 <￨2 BundleManager￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 Framework￨2 >￨2 injectedFramework￨2 =￨2 new￨2 InjectedValue￨2 <￨2 Framework￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 BundleContext￨2 sysContext￨2 ;￨2 public￨2 static￨2 void￨2 addService￨2 (￨2 final￨3 ServiceTarget￨3 target￨3 ,￨3 Activation￨3 policy￨3 )￨2 {￨2 }￨2 public￨2 static￨2 BundleContext￨2 getServiceValue￨2 (￨2 ServiceContainer￨3 container￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 start￨2 (￨2 final￨2 StartContext￨2 context￨2 )￨2 throws￨2 StartException￨2 (￨2 )￨2 {￨2 sysContext￨3 =￨3 injectedFramework￨3 .￨3 getValue￨3 (￨3 )￨3 .￨3 getBundleContext￨3 (￨3 )￨3 ;￨3 BundleListener￨3 bundleListener￨3 =￨3 new￨3 BundleListener￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 bundleChanged￨4 (￨4 BundleEvent￨5 event￨5 )￨4 {￨4 if￨5 (￨5 (￨6 event￨6 .￨6 getType￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 BundleEvent￨6 .￨6 INSTALLED￨6 )￨6 )￨5 {￨5 AbstractUserBundle￨6 userBundle￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 userBundle￨7 =￨7 AbstractUserBundle￨7 .￨7 assertBundleState￨7 (￨7 event￨7 .￨7 getBundle￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 RuntimeException￨7 ex￨7 )￨6 {￨6 return￨7 ;￨7 }￨6 Deployment￨6 dep￨6 =￨6 userBundle￨6 .￨6 getDeployment￨6 (￨6 )￨6 ;￨6 String￨6 contextName￨6 =￨6 DeploymentHolderService￨6 .￨6 getContextName￨6 (￨6 dep￨6 )￨6 ;￨6 ServiceContainer￨6 container￨6 =￨6 context￨6 .￨6 getController￨6 (￨6 )￨6 .￨6 getServiceContainer￨6 (￨6 )￨6 ;￨6 ServiceName￨6 osgiDeploymentService￨6 =￨6 OSGiDeploymentService￨6 .￨6 getServiceName￨6 (￨6 contextName￨6 )￨6 ;￨6 <START_BUG>￨6 ServiceName￨6 deploymentService￨6 =￨6 JBOSS_DEPLOYMENT￨6 .￨6 append￨6 (￨6 contextName￨6 )￨6 ;￨6 <END_BUG>￨6 if￨6 (￨6 (￨7 (￨7 container￨7 .￨7 getService￨7 (￨7 deploymentService￨7 )￨7 )￨7 !=￨7 null￨7 )￨7 &&￨7 (￨7 (￨7 container￨7 .￨7 getService￨7 (￨7 osgiDeploymentService￨7 )￨7 )￨7 ==￨7 null￨7 )￨7 )￨6 {￨6 ServiceName￨7 serviceName￨7 =￨7 ModuleRegistrationService￨7 .￨7 getServiceName￨7 (￨7 contextName￨7 )￨7 ;￨7 try￨7 (￨7 )￨7 {￨7 BundleContextService￨8 .￨8 log￨8 .￨8 tracef￨8 (￨8 "Register<seq2seq4repair_space>service:<seq2seq4repair_space>%s"￨8 ,￨8 serviceName￨8 )￨8 ;￨8 BatchBuilder￨8 batchBuilder￨8 =￨8 container￨8 .￨8 batchBuilder￨8 (￨8 )￨8 ;￨8 ModuleRegistrationService￨8 .￨8 addService￨8 (￨8 batchBuilder￨8 ,￨8 dep￨8 ,￨8 contextName￨8 )￨8 ;￨8 batchBuilder￨8 .￨8 install￨8 (￨8 )￨8 ;￨8 }￨7 catch￨7 (￨7 ServiceRegistryException￨8 ex￨8 )￨7 {￨7 throw￨8 new￨8 IllegalStateException￨8 (￨8 (￨8 "Cannot<seq2seq4repair_space>register<seq2seq4repair_space>service:<seq2seq4repair_space>"￨8 +￨8 serviceName￨8 )￨8 ,￨8 ex￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 }￨4 }￨3 ;￨3 sysContext￨3 .￨3 addBundleListener￨3 (￨3 bundleListener￨3 )￨3 ;￨3 }￨2 public￨2 synchronized￨2 void￨2 stop￨2 (￨2 StopContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 BundleContext￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StreamThread￨1 extends￨1 Thread￨1 {￨1 InputStream￨2 is￨2 ;￨2 String￨2 type￨2 ;￨2 StringBuffer￨2 buf￨2 ;￨2 public￨2 StreamThread￨2 (￨2 InputStream￨3 is￨3 ,￨3 String￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 InputStreamReader￨4 isr￨4 =￨4 new￨4 InputStreamReader￨4 (￨4 is￨4 )￨4 ;￨4 BufferedReader￨4 br￨4 =￨4 new￨4 BufferedReader￨4 (￨4 isr￨4 )￨4 ;￨4 String￨4 line￨4 =￨4 null￨4 ;￨4 while￨4 (￨4 (￨5 line￨5 =￨5 br￨5 .￨5 readLine￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 <START_BUG>￨5 log￨5 .￨5 debug￨5 (￨5 (￨5 (￨5 (￨5 type￨5 )￨5 +￨5 ">"￨5 )￨5 +￨5 line￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 buf￨5 .￨5 append￨5 (￨5 (￨5 line￨5 +￨5 "\n"￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 ioe￨4 )￨3 {￨3 ioe￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 String￨2 getBuffer￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractPathService￨1 implements￨1 Service￨1 <￨1 String￨1 >￨1 {￨1 private￨2 static￨2 final￨2 ServiceName￨2 SERVICE_NAME_BASE￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "server"￨2 ,￨2 "path"￨2 )￨2 ;￨2 public￨2 static￨2 ServiceName￨2 pathNameOf￨2 (￨2 String￨3 pathName￨3 )￨2 {￨2 }￨2 private￨2 String￨2 path￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 start￨2 (￨2 StartContext￨2 context￨2 )￨2 throws￨2 StartException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 this￨3 .￨3 path￨3 =￨3 resolvePath￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 stop￨2 (￨2 StopContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 String￨2 resolvePath￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Path￨1 extends￨1 Resource￨1 {￨1 public￨2 int￨2 handle￨2 ;￨2 PointF￨2 currentPoint￨2 =￨2 new￨2 PointF￨2 (￨2 )￨2 ;￨2 PointF￨2 startPoint￨2 =￨2 new￨2 PointF￨2 (￨2 )￨2 ;￨2 public￨2 Path￨2 (￨2 Device￨3 device￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addArc￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 ,￨3 float￨3 width￨3 ,￨3 float￨3 height￨3 ,￨3 float￨3 startAngle￨3 ,￨3 float￨3 arcAngle￨3 )￨2 {￨2 if￨3 (￨3 isDisposed￨4 (￨4 )￨4 )￨3 {￨3 SWT￨4 .￨4 error￨4 (￨4 ERROR_GRAPHIC_DISPOSED￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 width￨4 <￨4 0￨4 )￨3 {￨3 x￨4 =￨4 x￨4 +￨4 width￨4 ;￨4 width￨4 =￨4 -￨4 width￨4 ;￨4 }￨3 if￨3 (￨3 height￨4 <￨4 0￨4 )￨3 {￨3 y￨4 =￨4 y￨4 +￨4 height￨4 ;￨4 height￨4 =￨4 -￨4 height￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 width￨4 ==￨4 0￨4 )￨4 ||￨4 (￨4 height￨4 ==￨4 0￨4 )￨4 )￨4 ||￨4 (￨4 arcAngle￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 width￨4 ==￨4 height￨4 )￨3 {￨3 Gdip￨4 .￨4 GraphicsPath_AddArc￨4 (￨4 handle￨4 ,￨4 x￨4 ,￨4 y￨4 ,￨4 width￨4 ,￨4 height￨4 ,￨4 (￨4 -￨4 startAngle￨4 )￨4 ,￨4 (￨4 -￨4 arcAngle￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 int￨4 path￨4 =￨4 Gdip￨4 .￨4 GraphicsPath_new￨4 (￨4 FillModeAlternate￨4 )￨4 ;￨4 if￨4 (￨4 path￨5 ==￨5 0￨5 )￨4 {￨4 SWT￨5 .￨5 error￨5 (￨5 ERROR_NO_HANDLES￨5 )￨5 ;￨5 }￨4 int￨4 matrix￨4 =￨4 Gdip￨4 .￨4 Matrix_new￨4 (￨4 width￨4 ,￨4 0￨4 ,￨4 0￨4 ,￨4 height￨4 ,￨4 x￨4 ,￨4 y￨4 )￨4 ;￨4 if￨4 (￨4 matrix￨5 ==￨5 0￨5 )￨4 {￨4 SWT￨5 .￨5 error￨5 (￨5 ERROR_NO_HANDLES￨5 )￨5 ;￨5 }￨4 Gdip￨4 .￨4 GraphicsPath_AddArc￨4 (￨4 path￨4 ,￨4 0￨4 ,￨4 0￨4 ,￨4 1￨4 ,￨4 1￨4 ,￨4 (￨4 -￨4 startAngle￨4 )￨4 ,￨4 (￨4 -￨4 arcAngle￨4 )￨4 )￨4 ;￨4 Gdip￨4 .￨4 GraphicsPath_Transform￨4 (￨4 path￨4 ,￨4 matrix￨4 )￨4 ;￨4 <START_BUG>￨4 Gdip￨4 .￨4 GraphicsPath_AddPath￨4 (￨4 handle￨4 ,￨4 path￨4 ,￨4 false￨4 )￨4 ;￨4 <END_BUG>￨4 Gdip￨4 .￨4 Matrix_delete￨4 (￨4 matrix￨4 )￨4 ;￨4 Gdip￨4 .￨4 GraphicsPath_delete￨4 (￨4 path￨4 )￨4 ;￨4 }￨3 Gdip￨3 .￨3 GraphicsPath_GetLastPoint￨3 (￨3 handle￨3 ,￨3 currentPoint￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 addPath￨2 (￨2 Path￨3 path￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addRectangle￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 ,￨3 float￨3 width￨3 ,￨3 float￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addString￨2 (￨2 String￨3 string￨3 ,￨3 float￨3 x￨3 ,￨3 float￨3 y￨3 ,￨3 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 contains￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 ,￨3 GC￨3 gc￨3 ,￨3 boolean￨3 outline￨3 )￨2 {￨2 }￨2 public￨2 void￨2 cubicTo￨2 (￨2 float￨3 cx1￨3 ,￨3 float￨3 cy1￨3 ,￨3 float￨3 cx2￨3 ,￨3 float￨3 cy2￨3 ,￨3 float￨3 x￨3 ,￨3 float￨3 y￨3 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 getBounds￨2 (￨2 float￨3 [￨3 ]￨3 bounds￨3 )￨2 {￨2 }￨2 public￨2 void￨2 getCurrentPoint￨2 (￨2 float￨3 [￨3 ]￨3 point￨3 )￨2 {￨2 }￨2 public￨2 PathData￨2 getPathData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 lineTo￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDisposed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 moveTo￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 )￨2 {￨2 }￨2 public￨2 void￨2 quadTo￨2 (￨2 float￨3 cx￨3 ,￨3 float￨3 cy￨3 ,￨3 float￨3 x￨3 ,￨3 float￨3 y￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CodeSnippetClassFile￨1 extends￨1 ClassFile￨1 {￨1 public￨2 CodeSnippetClassFile￨2 (￨2 SourceTypeBinding￨3 aType￨3 ,￨3 ClassFile￨3 enclosingClassFile￨3 ,￨3 boolean￨3 creatingProblemType￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 createProblemType￨2 (￨2 TypeDeclaration￨3 typeDeclaration￨3 ,￨3 CompilationResult￨3 unitResult￨3 )￨2 {￨2 SourceTypeBinding￨3 typeBinding￨3 =￨3 typeDeclaration￨3 .￨3 binding￨3 ;￨3 ClassFile￨3 classFile￨3 =￨3 new￨3 CodeSnippetClassFile￨3 (￨3 typeBinding￨3 ,￨3 null￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 typeBinding￨4 .￨4 isMemberType￨4 (￨4 )￨4 )￨3 {￨3 classFile￨4 .￨4 recordEnclosingTypeAttributes￨4 (￨4 typeBinding￨4 )￨4 ;￨4 }￨3 FieldBinding￨3 [￨3 ]￨3 fields￨3 =￨3 typeBinding￨3 .￨3 fields￨3 ;￨3 if￨3 (￨3 (￨4 fields￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 fields￨4 !=￨4 (￨4 NoFields￨4 )￨4 )￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 fields￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 <START_BUG>￨5 if￨5 (￨5 (￨5 fields￨5 [￨5 i￨5 ]￨5 .￨5 constant￨5 )￨5 ==￨5 null￨5 )￨5 {￨5 <END_BUG>￨5 org￨5 .￨5 eclipse￨5 .￨5 jdt￨5 .￨5 internal￨5 .￨5 compiler￨5 .￨5 ast￨5 .￨5 FieldReference￨5 .￨5 getConstantFor￨5 (￨5 fields￨5 [￨5 i￨5 ]￨5 ,￨5 null￨5 ,￨5 false￨5 ,￨5 null￨5 )￨5 ;￨5 }￨4 classFile￨4 .￨4 addFieldInfos￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 classFile￨4 .￨4 contents￨4 [￨4 (￨4 (￨4 classFile￨4 .￨4 contentsOffset￨4 )￨4 ++￨4 )￨4 ]￨4 =￨4 0￨4 ;￨4 classFile￨4 .￨4 contents￨4 [￨4 (￨4 (￨4 classFile￨4 .￨4 contentsOffset￨4 )￨4 ++￨4 )￨4 ]￨4 =￨4 0￨4 ;￨4 }￨3 classFile￨3 .￨3 setForMethodInfos￨3 (￨3 )￨3 ;￨3 MethodBinding￨3 [￨3 ]￨3 methods￨3 =￨3 typeBinding￨3 .￨3 methods￨3 ;￨3 AbstractMethodDeclaration￨3 [￨3 ]￨3 methodDeclarations￨3 =￨3 typeDeclaration￨3 .￨3 methods￨3 ;￨3 int￨3 maxMethodDecl￨3 =￨3 (￨3 methodDeclarations￨3 ==￨3 null￨3 )￨3 ?￨3 0￨3 :￨3 methodDeclarations￨3 .￨3 length￨3 ;￨3 int￨3 problemsLength￨3 ;￨3 IProblem￨3 [￨3 ]￨3 problems￨3 =￨3 unitResult￨3 .￨3 getErrors￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 problems￨4 ==￨4 null￨4 )￨3 {￨3 problems￨4 =￨4 new￨4 IProblem￨4 [￨4 0￨4 ]￨4 ;￨4 }￨3 IProblem￨3 [￨3 ]￨3 problemsCopy￨3 =￨3 new￨3 IProblem￨3 [￨3 problemsLength￨3 =￨3 problems￨3 .￨3 length￨3 ]￨3 ;￨3 System￨3 .￨3 arraycopy￨3 (￨3 problems￨3 ,￨3 0￨3 ,￨3 problemsCopy￨3 ,￨3 0￨3 ,￨3 problemsLength￨3 )￨3 ;￨3 if￨3 (￨3 methods￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 typeBinding￨5 .￨5 isInterface￨5 (￨5 )￨5 )￨4 {￨4 classFile￨5 .￨5 addProblemClinit￨5 (￨5 problemsCopy￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 max￨6 =￨6 methods￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 max￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 MethodBinding￨6 methodBinding￨6 ;￨6 if￨6 (￨6 (￨7 methodBinding￨7 =￨7 methods￨7 [￨7 i￨7 ]￨7 )￨7 !=￨7 null￨7 )￨6 {￨6 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 maxMethodDecl￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 if￨8 (￨8 (￨9 (￨9 methodDeclarations￨9 [￨9 j￨9 ]￨9 )￨9 !=￨9 null￨9 )￨9 &&￨9 (￨9 (￨9 methodDeclarations￨9 [￨9 j￨9 ]￨9 .￨9 binding￨9 )￨9 ==￨9 (￨9 methods￨9 [￨9 i￨9 ]￨9 )￨9 )￨9 )￨8 {￨8 if￨9 (￨9 !￨10 (￨10 methodBinding￨10 .￨10 isConstructor￨10 (￨10 )￨10 )￨10 )￨9 {￨9 classFile￨10 .￨10 addAbstractMethod￨10 (￨10 methodDeclarations￨10 [￨10 j￨10 ]￨10 ,￨10 methodBinding￨10 )￨10 ;￨10 }￨9 break￨9 ;￨9 }￨8 }￨7 }￨6 }￨5 }￨4 else￨4 {￨4 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 max￨6 =￨6 methods￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 max￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 MethodBinding￨6 methodBinding￨6 ;￨6 if￨6 (￨6 (￨7 methodBinding￨7 =￨7 methods￨7 [￨7 i￨7 ]￨7 )￨7 !=￨7 null￨7 )￨6 {￨6 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 maxMethodDecl￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 if￨8 (￨8 (￨9 (￨9 methodDeclarations￨9 [￨9 j￨9 ]￨9 )￨9 !=￨9 null￨9 )￨9 &&￨9 (￨9 (￨9 methodDeclarations￨9 [￨9 j￨9 ]￨9 .￨9 binding￨9 )￨9 ==￨9 (￨9 methods￨9 [￨9 i￨9 ]￨9 )￨9 )￨9 )￨8 {￨8 AbstractMethodDeclaration￨9 methodDecl￨9 ;￨9 if￨9 (￨9 (￨10 methodDecl￨10 =￨10 methodDeclarations￨10 [￨10 j￨10 ]￨10 )￨10 .￨10 isConstructor￨10 (￨10 )￨10 )￨9 {￨9 classFile￨10 .￨10 addProblemConstructor￨10 (￨10 methodDecl￨10 ,￨10 methodBinding￨10 ,￨10 problemsCopy￨10 )￨10 ;￨10 }￨9 else￨9 {￨9 classFile￨10 .￨10 addProblemMethod￨10 (￨10 methodDecl￨10 ,￨10 methodBinding￨10 ,￨10 problemsCopy￨10 )￨10 ;￨10 }￨9 break￨9 ;￨9 }￨8 }￨7 }￨6 }￨5 }￨4 classFile￨4 .￨4 addDefaultAbstractMethods￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 typeDeclaration￨4 .￨4 memberTypes￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 typeDeclaration￨5 .￨5 memberTypes￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 TypeDeclaration￨5 memberType￨5 =￨5 typeDeclaration￨5 .￨5 memberTypes￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 (￨6 memberType￨6 .￨6 binding￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 classFile￨6 .￨6 recordNestedMemberAttribute￨6 (￨6 memberType￨6 .￨6 binding￨6 )￨6 ;￨6 ClassFile￨6 .￨6 createProblemType￨6 (￨6 memberType￨6 ,￨6 unitResult￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 classFile￨3 .￨3 addAttributes￨3 (￨3 )￨3 ;￨3 unitResult￨3 .￨3 record￨3 (￨3 typeBinding￨3 .￨3 constantPoolName￨3 (￨3 )￨3 ,￨3 classFile￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CommandProvider￨1 extends￨1 QuickAccessProvider￨1 {￨1 private￨2 Map￨2 idToElement￨2 ;￨2 private￨2 IEvaluationContext￨2 contextSnapshot￨2 ;￨2 private￨2 HandlerService￨2 realHandlerService￨2 ;￨2 public￨2 CommandProvider￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 QuickAccessElement￨2 getElementForId￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 QuickAccessElement￨2 [￨2 ]￨2 getElements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ImageDescriptor￨2 getImageDescriptor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 saveApplicationContext￨2 (￨2 )￨2 {￨2 realHandlerService￨3 =￨3 (￨3 (￨3 HandlerService￨3 )￨3 (￨3 PlatformUI￨3 .￨3 getWorkbench￨3 (￨3 )￨3 .￨3 getService￨3 (￨3 IHandlerService￨3 .￨3 class￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 contextSnapshot￨3 =￨3 realHandlerService￨3 .￨3 getContextSnapshot￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 HandlerService￨2 getRealHandlerService￨2 (￨2 )￨2 {￨2 }￨2 IEvaluationContext￨2 getContextSnapshot￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 SelectionEngine￨1 extends￨1 Engine￨1 implements￨1 ISearchRequestor￨1 {￨1 public￨2 static￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 public￨2 static￨2 boolean￨2 PERF￨2 =￨2 false￨2 ;￨2 SelectionParser￨2 parser￨2 ;￨2 ISelectionRequestor￨2 requestor￨2 ;￨2 boolean￨2 acceptedAnswer￨2 ;￨2 private￨2 int￨2 actualSelectionStart￨2 ;￨2 private￨2 int￨2 actualSelectionEnd￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 selectedIdentifier￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 [￨2 ]￨2 acceptedClasses￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 acceptedClassesModifiers￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 [￨2 ]￨2 acceptedInterfaces￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 acceptedInterfacesModifiers￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 [￨2 ]￨2 acceptedEnums￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 acceptedEnumsModifiers￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 [￨2 ]￨2 acceptedAnnotations￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 acceptedAnnotationsModifiers￨2 ;￨2 int￨2 acceptedClassesCount￨2 ;￨2 int￨2 acceptedInterfacesCount￨2 ;￨2 int￨2 acceptedEnumsCount￨2 ;￨2 int￨2 acceptedAnnotationsCount￨2 ;￨2 boolean￨2 noProposal￨2 =￨2 true￨2 ;￨2 CategorizedProblem￨2 problem￨2 =￨2 null￨2 ;￨2 public￨2 SelectionEngine￨2 (￨2 SearchableEnvironment￨3 nameEnvironment￨3 ,￨3 ISelectionRequestor￨3 requestor￨3 ,￨3 Map￨3 settings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 acceptType￨2 (￨2 char￨3 [￨3 ]￨3 packageName￨3 ,￨3 char￨3 [￨3 ]￨3 simpleTypeName￨3 ,￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 enclosingTypeNames￨3 ,￨3 int￨3 modifiers￨3 ,￨3 AccessRestriction￨3 accessRestriction￨3 )￨2 {￨2 }￨2 public￨2 void￨2 acceptPackage￨2 (￨2 char￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 private￨2 void￨2 acceptQualifiedTypes￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkSelection￨2 (￨2 char￨3 [￨3 ]￨3 source￨3 ,￨3 int￨3 selectionStart￨3 ,￨3 int￨3 selectionEnd￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkTypeArgument￨2 (￨2 Scanner￨2 scanner￨2 )￨2 throws￨2 InvalidInputException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AssistParser￨2 getParser￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 isLocal￨2 (￨2 ReferenceBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 ICompilationUnit￨3 sourceUnit￨3 ,￨3 int￨3 selectionSourceStart￨3 ,￨3 int￨3 selectionSourceEnd￨3 )￨2 {￨2 }￨2 private￨2 void￨2 selectMemberTypeFromImport￨2 (￨2 CompilationUnitDeclaration￨3 parsedUnit￨3 ,￨3 char￨3 [￨3 ]￨3 lastToken￨3 ,￨3 ReferenceBinding￨3 ref￨3 ,￨3 boolean￨3 staticOnly￨3 )￨2 {￨2 }￨2 private￨2 void￨2 selectStaticFieldFromStaticImport￨2 (￨2 CompilationUnitDeclaration￨3 parsedUnit￨3 ,￨3 char￨3 [￨3 ]￨3 lastToken￨3 ,￨3 ReferenceBinding￨3 ref￨3 )￨2 {￨2 }￨2 private￨2 void￨2 selectStaticMethodFromStaticImport￨2 (￨2 CompilationUnitDeclaration￨3 parsedUnit￨3 ,￨3 char￨3 [￨3 ]￨3 lastToken￨3 ,￨3 ReferenceBinding￨3 ref￨3 )￨2 {￨2 }￨2 private￨2 void￨2 selectFrom￨2 (￨2 Binding￨3 binding￨3 ,￨3 CompilationUnitDeclaration￨3 parsedUnit￨3 ,￨3 boolean￨3 isDeclaration￨3 )￨2 {￨2 }￨2 private￨2 void￨2 selectLocalDeclaration￨2 (￨2 ASTNode￨3 node￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectType￨2 (￨2 ISourceType￨3 sourceType￨3 ,￨3 char￨3 [￨3 ]￨3 typeName￨3 ,￨3 SourceTypeElementInfo￨3 [￨3 ]￨3 topLevelTypes￨3 ,￨3 boolean￨3 searchInEnvironment￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 selectDeclaration￨2 (￨2 CompilationUnitDeclaration￨3 compilationUnit￨3 )￨2 {￨2 char￨3 [￨3 ]￨3 assistIdentifier￨3 =￨3 this￨3 .￨3 getParser￨3 (￨3 )￨3 .￨3 assistIdentifier￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 assistIdentifier￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 ImportReference￨3 currentPackage￨3 =￨3 compilationUnit￨3 .￨3 currentPackage￨3 ;￨3 <START_BUG>￨3 char￨3 [￨3 ]￨3 packageName￨3 =￨3 (￨3 currentPackage￨3 ==￨3 null￨3 )￨3 ?￨3 new￨3 char￨3 [￨3 0￨3 ]￨3 :￨3 CharOperation￨3 .￨3 concatWith￨3 (￨3 currentPackage￨3 .￨3 tokens￨3 ,￨3 '.'￨3 )￨3 ;￨3 <END_BUG>￨3 TypeDeclaration￨3 [￨3 ]￨3 types￨3 =￨3 compilationUnit￨3 .￨3 types￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 length￨4 =￨4 (￨4 types￨4 ==￨4 null￨4 )￨4 ?￨4 0￨4 :￨4 types￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 length￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 selectDeclaration￨5 (￨5 types￨5 [￨5 i￨5 ]￨5 ,￨5 assistIdentifier￨5 ,￨5 packageName￨5 )￨5 )￨4 {￨4 return￨5 true￨5 ;￨5 }￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 private￨2 boolean￨2 selectDeclaration￨2 (￨2 TypeDeclaration￨3 typeDeclaration￨3 ,￨3 char￨3 [￨3 ]￨3 assistIdentifier￨3 ,￨3 char￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 AllTests￨1 {￨1 private￨2 static￨2 transient￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 AllTests￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 logprop￨2 (￨2 String￨3 prop￨3 ,￨3 boolean￨3 show￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 logprop￨2 (￨2 String￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 if￨3 (￨3 (￨4 args￨4 .￨4 length￨4 )￨4 <￨4 1￨4 )￨3 {￨3 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>comma-delimited<seq2seq4repair_space>list<seq2seq4repair_space>of<seq2seq4repair_space>paths<seq2seq4repair_space>to<seq2seq4repair_space>search<seq2seq4repair_space>"￨4 +￨4 "for<seq2seq4repair_space>unit<seq2seq4repair_space>tests"￨4 )￨4 )￨4 ;￨4 System￨4 .￨4 exit￨4 (￨4 0￨4 )￨4 ;￨4 }￨3 AllTests￨3 .￨3 initializeLogging￨3 (￨3 args￨3 )￨3 ;￨3 AllTests￨3 .￨3 initializeManager￨3 (￨3 args￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.version"￨3 ,￨3 true￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.vendor"￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.home"￨3 ,￨3 true￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "user.home"￨3 )￨3 ;￨3 <START_BUG>￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "user.dir"￨3 )￨3 ;￨3 <END_BUG>￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "os.name"￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "os.version"￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "os.arch"￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.class.version"￨3 )￨3 ;￨3 String￨3 cp￨3 =￨3 System￨3 .￨3 getProperty￨3 (￨3 "java.class.path"￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 cpe￨3 =￨3 JOrphanUtils￨3 .￨3 split￨3 (￨3 cp￨3 ,￨3 File￨3 .￨3 pathSeparator￨3 )￨3 ;￨3 StringBuffer￨3 sb￨3 =￨3 new￨3 StringBuffer￨3 (￨3 3000￨3 )￨3 ;￨3 sb￨3 .￨3 append￨3 (￨3 "java.class.path="￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 cpe￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 sb￨4 .￨4 append￨4 (￨4 "\n"￨4 )￨4 ;￨4 sb￨4 .￨4 append￨4 (￨4 cpe￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 if￨4 (￨4 new￨5 File￨5 (￨5 cpe￨5 [￨5 i￨5 ]￨5 )￨5 .￨5 exists￨5 (￨5 )￨5 )￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>-<seq2seq4repair_space>OK"￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>-<seq2seq4repair_space>??"￨5 )￨5 ;￨5 }￨4 }￨3 AllTests￨3 .￨3 log￨3 .￨3 info￨3 (￨3 sb￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "+++++++++++"￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.awt.headless"￨3 ,￨3 true￨3 )￨3 ;￨3 AllTests￨3 .￨3 logprop￨3 (￨3 "java.awt.graphicsenv"￨3 ,￨3 true￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "------------"￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "Creating<seq2seq4repair_space>test<seq2seq4repair_space>suite"￨3 )￨3 ;￨3 TestSuite￨3 suite￨3 =￨3 AllTests￨3 .￨3 suite￨3 (￨3 args￨3 [￨3 0￨3 ]￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "Starting<seq2seq4repair_space>test<seq2seq4repair_space>run"￨3 )￨3 ;￨3 TestRunner￨3 .￨3 run￨3 (￨3 suite￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "+++++++++++"￨3 )￨3 ;￨3 System￨3 .￨3 out￨3 .￨3 println￨3 (￨3 "------------"￨3 )￨3 ;￨3 System￨3 .￨3 exit￨3 (￨3 0￨3 )￨3 ;￨3 }￨2 protected￨2 static￨2 void￨2 initializeLogging￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 initializeManager￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 public￨2 static￨2 TestSuite￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 TestSuite￨2 suite￨2 (￨2 String￨3 searchPaths￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AttachmentController￨1 implements￨1 KeyListener￨1 {￨1 AttachmentView￨2 view￨2 ;￨2 ComposerController￨2 controller￨2 ;￨2 AttachmentActionListener￨2 actionListener￨2 ;￨2 AttachmentMenu￨2 menu￨2 ;￨2 private￨2 JFileChooser￨2 fileChooser￨2 ;￨2 public￨2 AttachmentController￨2 (￨2 ComposerController￨3 controller￨3 )￨2 {￨2 }￨2 public￨2 ActionListener￨2 getActionListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 installListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 updateComponents￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 MimePart￨3 part￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelected￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addFileAttachment￨2 (￨2 )￨2 {￨2 int￨3 returnValue￨3 ;￨3 File￨3 [￨3 ]￨3 files￨3 ;￨3 <START_BUG>￨3 fileChooser￨3 .￨3 setDialogTitle￨3 (￨3 MailResourceLoader￨3 .￨3 getString￨3 (￨3 "menu"￨3 ,￨3 "mainframe"￨3 ,￨3 "composer_attach_file"￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 fileChooser￨3 .￨3 setFileSelectionMode￨3 (￨3 JFileChooser￨3 .￨3 FILES_ONLY￨3 )￨3 ;￨3 fileChooser￨3 .￨3 setMultiSelectionEnabled￨3 (￨3 true￨3 )￨3 ;￨3 returnValue￨3 =￨3 fileChooser￨3 .￨3 showOpenDialog￨3 (￨3 view￨3 )￨3 ;￨3 if￨3 (￨3 returnValue￨4 ==￨4 (￨4 JFileChooser￨4 .￨4 APPROVE_OPTION￨4 )￨4 )￨3 {￨3 files￨4 =￨4 fileChooser￨4 .￨4 getSelectedFiles￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 files￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 File￨5 file￨5 =￨5 files￨5 [￨5 i￨5 ]￨5 ;￨5 FileNameMap￨5 fileNameMap￨5 =￨5 URLConnection￨5 .￨5 getFileNameMap￨5 (￨5 )￨5 ;￨5 String￨5 mimetype￨5 =￨5 fileNameMap￨5 .￨5 getContentTypeFor￨5 (￨5 file￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 mimetype￨6 ==￨6 null￨6 )￨5 {￨5 mimetype￨6 =￨6 "application/octet-stream"￨6 ;￨6 }￨5 MimeHeader￨5 header￨5 =￨5 new￨5 MimeHeader￨5 (￨5 mimetype￨5 .￨5 substring￨5 (￨5 0￨5 ,￨5 mimetype￨5 .￨5 indexOf￨5 (￨5 '/'￨5 )￨5 )￨5 ,￨5 mimetype￨5 .￨5 substring￨5 (￨5 (￨5 (￨5 mimetype￨5 .￨5 indexOf￨5 (￨5 '/'￨5 )￨5 )￨5 +￨5 1￨5 )￨5 )￨5 )￨5 ;￨5 ComposerAttachment￨5 mimePart￨5 =￨5 new￨5 ComposerAttachment￨5 (￨5 header￨5 ,￨5 file￨5 )￨5 ;￨5 view￨5 .￨5 add￨5 (￨5 mimePart￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 keyPressed￨2 (￨2 KeyEvent￨3 k￨3 )￨2 {￨2 }￨2 public￨2 void￨2 keyReleased￨2 (￨2 KeyEvent￨3 k￨3 )￨2 {￨2 }￨2 public￨2 void￨2 keyTyped￨2 (￨2 KeyEvent￨3 k￨3 )￨2 {￨2 }￨2 class￨2 PopupListener￨2 extends￨2 MouseAdapter￨2 {￨2 public￨3 void￨3 mousePressed￨3 (￨3 MouseEvent￨4 e￨4 )￨3 {￨3 }￨3 public￨3 void￨3 mouseReleased￨3 (￨3 MouseEvent￨4 e￨4 )￨3 {￨3 }￨3 private￨3 void￨3 maybeShowPopup￨3 (￨3 MouseEvent￨4 e￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 LocalizedResource￨1 implements￨1 PrivilegedAction￨1 {￨1 private￨2 static￨2 final￨2 boolean￨2 SUPPORTS_BIG_DECIMAL_CALLS￨2 ;￨2 private￨2 ResourceBundle￨2 res￨2 ;￨2 private￨2 Locale￨2 locale￨2 ;￨2 private￨2 String￨2 encode￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 MESSAGE_FILE￨2 =￨2 "org.apache.derby.loc.toolsmessages"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ENV_CODESET￨2 =￨2 "derby.ui.codeset"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ENV_LOCALE￨2 =￨2 "derby.ui.locale"￨2 ;￨2 private￨2 String￨2 messageFileName￨2 ;￨2 private￨2 String￨2 resourceKey￨2 ;￨2 private￨2 LocalizedOutput￨2 out￨2 ;￨2 private￨2 LocalizedInput￨2 in￨2 ;￨2 private￨2 boolean￨2 enableLocalized￨2 ;￨2 private￨2 boolean￨2 unicodeEscape￨2 ;￨2 private￨2 static￨2 LocalizedResource￨2 local￨2 ;￨2 private￨2 int￨2 dateSize￨2 ;￨2 private￨2 int￨2 timeSize￨2 ;￨2 private￨2 int￨2 timestampSize￨2 ;￨2 private￨2 DateFormat￨2 formatDate￨2 ;￨2 private￨2 DateFormat￨2 formatTime￨2 ;￨2 private￨2 DateFormat￨2 formatTimestamp￨2 ;￨2 private￨2 NumberFormat￨2 formatNumber￨2 ;￨2 private￨2 DecimalFormat￨2 formatDecimal￨2 ;￨2 public￨2 LocalizedResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 LocalizedResource￨2 (￨2 String￨3 encStr￨3 ,￨3 String￨3 locStr￨3 ,￨3 String￨3 msgF￨3 )￨2 {￨2 }￨2 public￨2 static￨2 LocalizedResource￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 String￨3 encStr￨3 ,￨3 String￨3 locStr￨3 ,￨3 String￨3 msgF￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setResource￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 res￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 locale￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 locale￨4 .￨4 toString￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 "none"￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 res￨4 =￨4 ResourceBundle￨4 .￨4 getBundle￨4 (￨4 LocalizedResource￨4 .￨4 MESSAGE_FILE￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 else￨3 {￨3 try￨4 (￨4 )￨4 {￨4 res￨5 =￨5 ResourceBundle￨5 .￨5 getBundle￨5 (￨5 messageFileName￨5 ,￨5 locale￨5 )￨5 ;￨5 }￨4 }￨3 }￨3 catch￨3 (￨3 MissingResourceException￨4 e￨4 )￨3 {￨3 res￨4 =￨4 ResourceBundle￨4 .￨4 getBundle￨4 (￨4 messageFileName￨4 ,￨4 Locale￨4 .￨4 ENGLISH￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 initMaxSizes2￨2 (￨2 )￨2 {￨2 }￨2 public￨2 LocalizedInput￨2 getNewInput￨2 (￨2 InputStream￨3 i￨3 )￨2 {￨2 }￨2 public￨2 LocalizedInput￨2 getNewEncodedInput￨2 (￨2 InputStream￨3 i￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 public￨2 LocalizedOutput￨2 getNewOutput￨2 (￨2 OutputStream￨3 o￨3 )￨2 {￨2 }￨2 public￨2 LocalizedOutput￨2 getNewEncodedOutput￨2 (￨2 OutputStream￨2 o￨2 ,￨2 String￨2 encoding￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 ,￨3 Object￨3 o3￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 ,￨3 Object￨3 o3￨3 ,￨3 Object￨3 o4￨3 )￨2 {￨2 }￨2 private￨2 Locale￨2 getNewLocale￨2 (￨2 String￨3 locStr￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTextMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 [￨3 ]￨3 objectArr￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getLocalizedString￨2 (￨2 ResultSet￨2 rs￨2 ,￨2 ResultSetMetaData￨2 rsm￨2 ,￨2 int￨2 columnNumber￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDateAsString￨2 (￨2 Date￨3 d￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTimeAsString￨2 (￨2 Date￨3 t￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getNumberAsString￨2 (￨2 int￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getNumberAsString￨2 (￨2 long￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getNumberAsString￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getNumberAsString￨2 (￨2 double￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTimestampAsString￨2 (￨2 Timestamp￨3 t￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getColumnDisplaySize￨2 (￨2 ResultSetMetaData￨2 rsm￨2 ,￨2 int￨2 columnNumber￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStringFromDate￨2 (￨2 String￨2 dateStr￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStringFromTime￨2 (￨2 String￨2 timeStr￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStringFromValue￨2 (￨2 String￨2 val￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStringFromTimestamp￨2 (￨2 String￨2 timestampStr￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Locale￨2 getLocale￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 synchronized￨2 String￨2 getEnvProperty￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Object￨2 run￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 enableLocalization￨2 (￨2 boolean￨3 mode￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLocalized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getMessage￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 ,￨3 Object￨3 o3￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getMessage￨2 (￨2 String￨3 key￨3 ,￨3 Object￨3 o1￨3 ,￨3 Object￨3 o2￨3 ,￨3 Object￨3 o3￨3 ,￨3 Object￨3 o4￨3 )￨2 {￨2 }￨2 public￨2 static￨2 LocalizedOutput￨2 OutputWriter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 LocalizedInput￨2 InputReader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getNumber￨2 (￨2 long￨3 o￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getNumber￨2 (￨2 int￨3 o￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 setUnicodeEscape￨2 (￨2 boolean￨3 u￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 getUnicodeEscape￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Page￨1 extends￨1 MarkupContainer￨1 implements￨1 IRedirectListener￨1 {￨1 protected￨2 static￨2 final￨2 boolean￨2 ACCESS_ALLOWED￨2 =￨2 true￨2 ;￨2 protected￨2 static￨2 final￨2 boolean￨2 ACCESS_DENIED￨2 =￨2 false￨2 ;￨2 private￨2 static￨2 final￨2 Log￨2 log￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 Page￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 int￨2 autoIndex￨2 ;￨2 private￨2 transient￨2 int￨2 changeCount￨2 ;￨2 private￨2 IFeedback￨2 feedback￨2 ;￨2 private￨2 FeedbackMessages￨2 feedbackMessages￨2 ;￨2 private￨2 int￨2 id￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 transient￨2 Set￨2 renderedComponents￨2 ;￨2 private￨2 transient￨2 Session￨2 session￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 trackChanges￨2 =￨2 false￨2 ;￨2 private￨2 IPageVersionManager￨2 versionManager￨2 ;￨2 protected￨2 Page￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Page￨2 (￨2 final￨3 IModel￨3 model￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getAutoIndex￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 getCurrentVersionNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FeedbackMessages￨2 getFeedbackMessages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 getId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Session￨2 getSession￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Page￨2 getVersion￨2 (￨2 final￨3 int￨3 versionNumber￨3 )￨2 {￨2 }￨2 public￨2 PageState￨2 newPageState￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 onRedirect￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 getRequestCycle￨3 (￨3 )￨3 .￨3 setPage￨3 (￨3 this￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 final￨2 void￨2 removePersistedFormData￨2 (￨2 final￨3 Class￨3 formClass￨3 ,￨3 final￨3 boolean￨3 disablePersistence￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFeedback￨2 (￨2 final￨3 IFeedback￨3 feedback￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 checkAccess￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 configureResponse￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IModel￨2 initModel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalOnModelChanged￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IPageVersionManager￨2 newVersionManager￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onEndRequest￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 onRender￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 componentAdded￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 final￨2 void￨2 componentModelChangeImpending￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 final￨2 void￨2 componentRemoved￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 final￨2 void￨2 componentRendered￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 final￨2 void￨2 internalOnBeginRender￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 internalOnEndRender￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 internalOnEndRequest￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 resetMarkupStreams￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 setId￨2 (￨2 final￨3 int￨3 id￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 checkRendering￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 onChanged￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestUmlNamespace￨1 extends￨1 GenericObjectTestFixture￨1 {￨1 public￨2 TestUmlNamespace￨2 (￨2 String￨3 arg0￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testNamespace￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 Object￨3 o￨3 =￨3 getFactory￨3 (￨3 )￨3 .￨3 create￨3 (￨3 NAMESPACE￨3 )￨3 ;￨3 <END_BUG>￨3 assertNotNull￨3 (￨3 "Didn't<seq2seq4repair_space>create<seq2seq4repair_space>object"￨3 ,￨3 o￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>base"￨3 ,￨3 ModelFacade￨3 .￨3 isABase￨3 (￨3 o￨3 )￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "Should<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>namespace"￨3 ,￨3 ModelFacade￨3 .￨3 isANamespace￨3 (￨3 o￨3 )￨3 )￨3 ;￨3 runTruthTests￨3 (￨3 o￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 initializeTruth￨2 (￨2 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 TermScorer￨1 extends￨1 Scorer￨1 {￨1 private￨2 Weight￨2 weight￨2 ;￨2 private￨2 DocsEnum￨2 docsEnum￨2 ;￨2 private￨2 byte￨2 [￨2 ]￨2 norms￨2 ;￨2 private￨2 float￨2 weightValue￨2 ;￨2 private￨2 int￨2 doc￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 int￨2 freq￨2 ;￨2 private￨2 int￨2 pointer￨2 ;￨2 private￨2 int￨2 pointerMax￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 SCORE_CACHE_SIZE￨2 =￨2 32￨2 ;￨2 private￨2 float￨2 [￨2 ]￨2 scoreCache￨2 =￨2 new￨2 float￨2 [￨2 TermScorer￨2 .￨2 SCORE_CACHE_SIZE￨2 ]￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 docs￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 freqs￨2 ;￨2 private￨2 final￨2 BulkReadResult￨2 bulkResult￨2 ;￨2 TermScorer￨2 (￨2 Weight￨3 weight￨3 ,￨3 DocsEnum￨3 td￨3 ,￨3 Similarity￨3 similarity￨3 ,￨3 byte￨3 [￨3 ]￨3 norms￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 score￨2 (￨2 Collector￨2 c￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 refillBuffer￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 boolean￨2 score￨2 (￨2 Collector￨2 c￨2 ,￨2 int￨2 end￨2 ,￨2 int￨2 firstDocID￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 docID￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 nextDoc￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 float￨2 score￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 advance￨2 (￨2 int￨2 target￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 for￨3 (￨3 (￨4 pointer￨4 )￨4 ++￨4 ;￨4 (￨4 pointer￨4 )￨4 <￨4 (￨4 pointerMax￨4 )￨4 ;￨4 (￨4 pointer￨4 )￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 docs￨5 [￨5 pointer￨5 ]￨5 )￨5 >=￨5 target￨5 )￨4 {￨4 freq￨5 =￨5 freqs￨5 [￨5 pointer￨5 ]￨5 ;￨5 return￨5 doc￨5 =￨5 docs￨5 [￨5 pointer￨5 ]￨5 ;￨5 }￨4 }￨3 int￨3 newDoc￨3 =￨3 docsEnum￨3 .￨3 advance￨3 (￨3 target￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 newDoc￨3 !=￨3 (￨3 DocsEnum￨3 .￨3 NO_MORE_DOCS￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 doc￨3 =￨3 newDoc￨3 ;￨3 freq￨3 =￨3 docsEnum￨3 .￨3 freq￨3 (￨3 )￨3 ;￨3 else￨3 {￨3 doc￨4 =￨4 NO_MORE_DOCS￨4 ;￨4 }￨3 return￨3 doc￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 LocalShowHistoryHandler￨1 implements￨1 OperationStepHandler￨1 {￨1 public￨2 static￨2 final￨2 OperationStepHandler￨2 INSTANCE￨2 =￨2 new￨2 LocalShowHistoryHandler￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 context￨3 .￨3 acquireControllerLock￨3 (￨3 )￨3 ;￨3 final￨3 InstallationManager￨3 installationManager￨3 =￨3 (￨3 (￨3 InstallationManager￨3 )￨3 (￨3 context￨3 .￨3 getServiceRegistry￨3 (￨3 false￨3 )￨3 .￨3 getRequiredService￨3 (￨3 NAME￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 final￨4 PatchableTarget￨4 .￨4 TargetInfo￨4 info￨4 =￨4 installationManager￨4 .￨4 getIdentity￨4 (￨4 )￨4 .￨4 loadTargetInfo￨4 (￨4 )￨4 ;￨4 final￨4 InstalledImage￨4 installedImage￨4 =￨4 info￨4 .￨4 getDirectoryStructure￨4 (￨4 )￨4 .￨4 getInstalledImage￨4 (￨4 )￨4 ;￨4 final￨4 ModelNode￨4 result￨4 =￨4 new￨4 ModelNode￨4 (￨4 )￨4 ;￨4 result￨4 .￨4 setEmptyList￨4 (￨4 )￨4 ;￨4 final￨4 String￨4 releaseID￨4 =￨4 info￨4 .￨4 getCumulativePatchID￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 Constants￨5 .￨5 BASE￨5 .￨5 equals￨5 (￨5 releaseID￨5 )￨5 )￨5 )￨4 {￨4 fillHistory￨5 (￨5 result￨5 ,￨5 CUMULATIVE￨5 ,￨5 releaseID￨5 ,￨5 installedImage￨5 .￨5 getPatchHistoryDir￨5 (￨5 releaseID￨5 )￨5 )￨5 ;￨5 }￨4 final￨4 List￨4 <￨4 String￨4 >￨4 oneOffPatchIDs￨4 =￨4 info￨4 .￨4 getPatchIDs￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 oneOffPatchID￨5 :￨5 oneOffPatchIDs￨5 )￨4 {￨4 File￨5 historyDir￨5 =￨5 installedImage￨5 .￨5 getPatchHistoryDir￨5 (￨5 oneOffPatchID￨5 )￨5 ;￨5 fillHistory￨5 (￨5 result￨5 ,￨5 ONE_OFF￨5 ,￨5 oneOffPatchID￨5 ,￨5 historyDir￨5 )￨5 ;￨5 }￨4 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 result￨4 )￨4 ;￨4 context￨4 .￨4 stepCompleted￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Throwable￨4 t￨4 )￨3 {￨3 <START_BUG>￨4 t￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 throw￨4 MESSAGES￨4 .￨4 failedToShowHistory￨4 (￨4 t￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 fillHistory￨2 (￨2 ModelNode￨2 result￨2 ,￨2 PatchType￨2 type￨2 ,￨2 String￨2 oneOffPatchID￨2 ,￨2 File￨2 historyDir￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TreeItem￨1 extends￨1 Item￨1 {￨1 Tree￨2 parent￨2 ;￨2 TreeItem￨2 parentItem￨2 ;￨2 TreeItem￨2 [￨2 ]￨2 items￨2 ;￨2 int￨2 itemCount￨2 ;￨2 String￨2 [￨2 ]￨2 strings￨2 ;￨2 Image￨2 [￨2 ]￨2 images￨2 ;￨2 boolean￨2 checked￨2 ;￨2 boolean￨2 grayed￨2 ;￨2 boolean￨2 cached￨2 ;￨2 Color￨2 foreground￨2 ;￨2 Color￨2 background￨2 ;￨2 Color￨2 [￨2 ]￨2 cellForeground￨2 ;￨2 Color￨2 [￨2 ]￨2 cellBackground￨2 ;￨2 Font￨2 font￨2 ;￨2 Font￨2 [￨2 ]￨2 cellFont￨2 ;￨2 int￨2 width￨2 =￨2 -￨2 1￨2 ;￨2 SWTTreeItem￨2 handle￨2 ;￨2 static￨2 final￨2 int￨2 IMAGETEXT_MARGIN￨2 =￨2 2￨2 ;￨2 public￨2 TreeItem￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 (￨2 TreeItem￨3 parentItem￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 (￨2 TreeItem￨3 parentItem￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 TreeItem￨2 (￨2 Tree￨3 parent￨3 ,￨3 TreeItem￨3 parentItem￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 ,￨3 boolean￨3 create￨3 )￨2 {￨2 }￨2 static￨2 TreeItem￨2 checkNull￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 static￨2 Tree￨2 checkNull￨2 (￨2 Tree￨3 parent￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkIndex￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 int￨2 calculateWidth￨2 (￨2 int￨3 index￨3 ,￨3 GC￨3 gc￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 clear￨2 (￨2 int￨3 index￨3 ,￨3 boolean￨3 all￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clearAll￨2 (￨2 boolean￨3 all￨3 )￨2 {￨2 }￨2 void￨2 clearSelection￨2 (￨2 )￨2 {￨2 }￨2 NSObject￨2 createString￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getBackground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getBackground￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getChecked￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getExpanded￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Font￨2 getFont￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Font￨2 getFont￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Color￨2 getForeground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getForeground￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getGrayed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getImage￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getImageBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getItem￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getItemCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 [￨2 ]￨2 getItems￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getNameText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Tree￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getParentItem￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getTextBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 void￨2 redraw￨2 (￨2 int￨3 columnIndex￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 parent￨3 .￨3 ignoreRedraw￨3 )￨3 ||￨3 (￨3 (￨3 parent￨3 .￨3 drawCount￨3 )￨3 !=￨3 0￨3 )￨3 )￨3 <END_BUG>￨3 return￨3 ;￨3 NSOutlineView￨3 outlineView￨3 =￨3 (￨3 (￨3 NSOutlineView￨3 )￨3 (￨3 parent￨3 .￨3 view￨3 )￨3 )￨3 ;￨3 NSRect￨3 rect￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 (￨4 columnIndex￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨4 ||￨4 (￨4 parent￨4 .￨4 hooks￨4 (￨4 MeasureItem￨4 )￨4 )￨4 )￨4 ||￨4 (￨4 parent￨4 .￨4 hooks￨4 (￨4 EraseItem￨4 )￨4 )￨4 )￨4 ||￨4 (￨4 parent￨4 .￨4 hooks￨4 (￨4 PaintItem￨4 )￨4 )￨4 )￨3 {￨3 rect￨4 =￨4 outlineView￨4 .￨4 rectOfRow￨4 (￨4 outlineView￨4 .￨4 rowForItem￨4 (￨4 handle￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 int￨4 index￨4 ;￨4 if￨4 (￨4 (￨5 parent￨5 .￨5 columnCount￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 index￨5 =￨5 (￨5 (￨5 (￨5 parent￨5 .￨5 style￨5 )￨5 &￨5 (￨5 SWT￨5 .￨5 CHECK￨5 )￨5 )￨5 !=￨5 0￨5 )￨5 ?￨5 1￨5 :￨5 0￨5 ;￨5 }￨4 else￨4 {￨4 TreeColumn￨5 column￨5 =￨5 parent￨5 .￨5 getColumn￨5 (￨5 columnIndex￨5 )￨5 ;￨5 index￨5 =￨5 (￨5 (￨5 int￨5 )￨5 (￨5 outlineView￨5 .￨5 columnWithIdentifier￨5 (￨5 column￨5 .￨5 nsColumn￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 rect￨4 =￨4 outlineView￨4 .￨4 frameOfCellAtColumn￨4 (￨4 index￨4 ,￨4 outlineView￨4 .￨4 rowForItem￨4 (￨4 handle￨4 )￨4 )￨4 ;￨4 }￨3 outlineView￨3 .￨3 setNeedsDisplayInRect￨3 (￨3 rect￨3 )￨3 ;￨3 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 release￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBackground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBackground￨2 (￨2 int￨3 index￨3 ,￨3 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setChecked￨2 (￨2 boolean￨3 checked￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpanded￨2 (￨2 boolean￨3 expanded￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 int￨3 index￨3 ,￨3 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForeground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForeground￨2 (￨2 int￨3 index￨3 ,￨3 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setGrayed￨2 (￨2 boolean￨3 grayed￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 [￨3 ]￨3 images￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 int￨3 index￨3 ,￨3 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setItemCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 [￨3 ]￨3 strings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 int￨3 index￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 RawMarkup￨1 extends￨1 MarkupElement￨1 {￨1 private￨2 final￨2 CharSequence￨2 string￨2 ;￨2 public￨2 RawMarkup￨2 (￨2 final￨3 CharSequence￨3 string￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 final￨3 Object￨3 o￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 o￨3 instanceof￨3 String￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 string￨3 .￨3 equals￨3 (￨3 o￨3 )￨3 ;￨3 if￨3 (￨3 o￨4 instanceof￨4 RawMarkup￨4 )￨3 {￨3 return￨4 string￨4 .￨4 equals￨4 (￨4 (￨4 (￨4 RawMarkup￨4 )￨4 (￨4 o￨4 )￨4 )￨4 .￨4 string￨4 )￨4 ;￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equalTo￨2 (￨2 final￨3 MarkupElement￨3 element￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 CharSequence￨2 toCharSequence￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toUserDebugString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PersistenceContextInjectionSource￨1 extends￨1 InjectionSource￨1 {￨1 private￨2 final￨2 PersistenceContextType￨2 type￨2 ;￨2 private￨2 final￨2 PersistenceContextInjectionSource￨2 .￨2 PersistenceContextJndiInjectable￨2 injectable￨2 ;￨2 private￨2 final￨2 ServiceName￨2 puServiceName￨2 ;￨2 public￨2 PersistenceContextInjectionSource￨2 (￨2 final￨3 PersistenceContextType￨3 type￨3 ,￨3 final￨3 SynchronizationType￨3 synchronizationType￨3 ,￨3 final￨3 Map￨3 properties￨3 ,￨3 final￨3 ServiceName￨3 puServiceName￨3 ,￨3 final￨3 ServiceRegistry￨3 serviceRegistry￨3 ,￨3 final￨3 String￨3 scopedPuName￨3 ,￨3 final￨3 String￨3 injectionTypeName￨3 ,￨3 final￨3 PersistenceUnitMetadata￨3 pu￨3 ,￨3 final￨3 JPADeploymentSettings￨3 jpaDeploymentSettings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 getResourceValue￨2 (￨2 final￨2 ResolutionContext￨2 resolutionContext￨2 ,￨2 final￨2 ServiceBuilder￨2 <￨2 ?￨2 >￨2 serviceBuilder￨2 ,￨2 final￨2 DeploymentPhaseContext￨2 phaseContext￨2 ,￨2 final￨2 Injector￨2 <￨2 ManagedReferenceFactory￨2 >￨2 injector￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 class￨2 PersistenceContextJndiInjectable￨2 implements￨2 ManagedReferenceFactory￨2 {￨2 private￨3 final￨3 ServiceName￨3 puServiceName￨3 ;￨3 private￨3 final￨3 ServiceRegistry￨3 serviceRegistry￨3 ;￨3 private￨3 final￨3 PersistenceContextType￨3 type￨3 ;￨3 private￨3 final￨3 SynchronizationType￨3 synchronizationType￨3 ;￨3 private￨3 final￨3 Map￨3 properties￨3 ;￨3 private￨3 final￨3 String￨3 unitName￨3 ;￨3 private￨3 final￨3 String￨3 injectionTypeName￨3 ;￨3 private￨3 final￨3 PersistenceUnitMetadata￨3 pu￨3 ;￨3 private￨3 final￨3 JPADeploymentSettings￨3 jpaDeploymentSettings￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 ENTITY_MANAGER_CLASS￨3 =￨3 "javax.persistence.EntityManager"￨3 ;￨3 public￨3 PersistenceContextJndiInjectable￨3 (￨3 final￨4 ServiceName￨4 puServiceName￨4 ,￨4 final￨4 ServiceRegistry￨4 serviceRegistry￨4 ,￨4 final￨4 PersistenceContextType￨4 type￨4 ,￨4 SynchronizationType￨4 synchronizationType￨4 ,￨4 final￨4 Map￨4 properties￨4 ,￨4 final￨4 String￨4 unitName￨4 ,￨4 final￨4 String￨4 injectionTypeName￨4 ,￨4 final￨4 PersistenceUnitMetadata￨4 pu￨4 ,￨4 final￨4 JPADeploymentSettings￨4 jpaDeploymentSettings￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 ManagedReference￨3 getReference￨3 (￨3 )￨3 {￨3 PersistenceUnitServiceImpl￨4 service￨4 =￨4 (￨4 (￨4 PersistenceUnitServiceImpl￨4 )￨4 (￨4 serviceRegistry￨4 .￨4 getRequiredService￨4 (￨4 puServiceName￨4 )￨4 .￨4 getValue￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 EntityManagerFactory￨4 emf￨4 =￨4 service￨4 .￨4 getEntityManagerFactory￨4 (￨4 )￨4 ;￨4 EntityManager￨4 entityManager￨4 ;￨4 boolean￨4 standardEntityManager￨4 =￨4 PersistenceContextInjectionSource￨4 .￨4 PersistenceContextJndiInjectable￨4 .￨4 ENTITY_MANAGER_CLASS￨4 .￨4 equals￨4 (￨4 injectionTypeName￨4 )￨4 ;￨4 if￨4 (￨4 type￨5 .￨5 equals￨5 (￨5 TRANSACTION￨5 )￨5 )￨4 {￨4 entityManager￨5 =￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 jpa￨5 .￨5 container￨5 .￨5 TransactionScopedEntityManager￨5 (￨5 unitName￨5 ,￨5 properties￨5 ,￨5 emf￨5 ,￨5 synchronizationType￨5 )￨5 ;￨5 if￨5 (￨5 JPA_LOGGER￨6 .￨6 isDebugEnabled￨6 (￨6 )￨6 )￨5 {￨5 JPA_LOGGER￨6 .￨6 debugf￨6 (￨6 "created<seq2seq4repair_space>new<seq2seq4repair_space>TransactionScopedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s"￨6 ,￨6 unitName￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 boolean￨5 useDeepInheritance￨5 =￨5 !￨5 (￨5 SHALLOW￨5 .￨5 equals￨5 (￨5 JPAService￨5 .￨5 getDefaultExtendedPersistenceInheritance￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 jpaDeploymentSettings￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 useDeepInheritance￨6 =￨6 DEEP￨6 .￨6 equals￨6 (￨6 jpaDeploymentSettings￨6 .￨6 getExtendedPersistenceInheritanceType￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 boolean￨5 createdNewExtendedPersistence￨5 =￨5 false￨5 ;￨5 ExtendedEntityManager￨5 entityManager1￨5 ;￨5 if￨5 (￨5 useDeepInheritance￨6 )￨5 {￨5 entityManager1￨6 =￨6 INSTANCE￨6 .￨6 findExtendedPersistenceContext￨6 (￨6 unitName￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 entityManager1￨6 =￨6 ExtendedPersistenceShallowInheritance￨6 .￨6 INSTANCE￨6 .￨6 findExtendedPersistenceContext￨6 (￨6 unitName￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 entityManager1￨6 ==￨6 null￨6 )￨5 {￨5 <START_BUG>￨6 entityManager1￨6 =￨6 new￨6 ExtendedEntityManager￨6 (￨6 unitName￨6 ,￨6 emf￨6 .￨6 createEntityManager￨6 (￨6 properties￨6 )￨6 ,￨6 synchronizationType￨6 )￨6 ;￨6 <END_BUG>￨6 createdNewExtendedPersistence￨6 =￨6 true￨6 ;￨6 if￨6 (￨6 JPA_LOGGER￨7 .￨7 isDebugEnabled￨7 (￨7 )￨7 )￨6 {￨6 JPA_LOGGER￨7 .￨7 debugf￨7 (￨7 "created<seq2seq4repair_space>new<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>for<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨7 ,￨7 unitName￨7 ,￨7 useDeepInheritance￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 entityManager1￨6 .￨6 increaseReferenceCount￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 JPA_LOGGER￨7 .￨7 isDebugEnabled￨7 (￨7 )￨7 )￨6 {￨6 JPA_LOGGER￨7 .￨7 debugf￨7 (￨7 (￨7 "inherited<seq2seq4repair_space>existing<seq2seq4repair_space>ExtendedEntityManager<seq2seq4repair_space>from<seq2seq4repair_space>SFSB<seq2seq4repair_space>invocation<seq2seq4repair_space>stack,<seq2seq4repair_space>unit<seq2seq4repair_space>name=%s,<seq2seq4repair_space>"￨7 +￨7 "%d<seq2seq4repair_space>beans<seq2seq4repair_space>sharing<seq2seq4repair_space>ExtendedEntityManager,<seq2seq4repair_space>useDeepInheritance<seq2seq4repair_space>=<seq2seq4repair_space>%b"￨7 )￨7 ,￨7 unitName￨7 ,￨7 entityManager1￨7 .￨7 getReferenceCount￨7 (￨7 )￨7 ,￨7 useDeepInheritance￨7 )￨7 ;￨7 }￨6 }￨5 entityManager￨5 =￨5 entityManager1￨5 ;￨5 CreatedEntityManagers￨5 .￨5 registerPersistenceContext￨5 (￨5 entityManager1￨5 )￨5 ;￨5 if￨5 (￨5 createdNewExtendedPersistence￨6 )￨5 {￨5 if￨6 (￨6 useDeepInheritance￨7 )￨6 {￨6 INSTANCE￨7 .￨7 registerExtendedPersistenceContext￨7 (￨7 unitName￨7 ,￨7 entityManager1￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 ExtendedPersistenceShallowInheritance￨7 .￨7 INSTANCE￨7 .￨7 registerExtendedPersistenceContext￨7 (￨7 unitName￨7 ,￨7 entityManager1￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 if￨4 (￨4 !￨5 standardEntityManager￨5 )￨4 {￨4 Class￨5 extensionClass￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 extensionClass￨6 =￨6 pu￨6 .￨6 getClassLoader￨6 (￨6 )￨6 .￨6 loadClass￨6 (￨6 injectionTypeName￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 ClassNotFoundException￨6 e￨6 )￨5 {￨5 throw￨6 MESSAGES￨6 .￨6 cannotLoadFromJpa￨6 (￨6 e￨6 ,￨6 injectionTypeName￨6 )￨6 ;￨6 }￨5 Object￨5 targetValueToInject￨5 =￨5 entityManager￨5 .￨5 unwrap￨5 (￨5 extensionClass￨5 )￨5 ;￨5 Class￨5 [￨5 ]￨5 targetInterfaces￨5 =￨5 targetValueToInject￨5 .￨5 getClass￨5 (￨5 )￨5 .￨5 getInterfaces￨5 (￨5 )￨5 ;￨5 Class￨5 [￨5 ]￨5 proxyInterfaces￨5 =￨5 new￨5 Class￨5 [￨5 (￨5 targetInterfaces￨5 .￨5 length￨5 )￨5 +￨5 1￨5 ]￨5 ;￨5 boolean￨5 alreadyHasInterfaceClass￨5 =￨5 false￨5 ;￨5 for￨5 (￨5 int￨6 interfaceIndex￨6 =￨6 0￨6 ;￨6 interfaceIndex￨6 <￨6 (￨6 targetInterfaces￨6 .￨6 length￨6 )￨6 ;￨6 interfaceIndex￨6 ++￨6 )￨5 {￨5 Class￨6 interfaceClass￨6 =￨6 targetInterfaces￨6 [￨6 interfaceIndex￨6 ]￨6 ;￨6 if￨6 (￨6 interfaceClass￨7 .￨7 equals￨7 (￨7 extensionClass￨7 )￨7 )￨6 {￨6 proxyInterfaces￨7 =￨7 targetInterfaces￨7 ;￨7 alreadyHasInterfaceClass￨7 =￨7 true￨7 ;￨7 break￨7 ;￨7 }￨6 proxyInterfaces￨6 [￨6 (￨6 1￨6 +￨6 interfaceIndex￨6 )￨6 ]￨6 =￨6 interfaceClass￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 alreadyHasInterfaceClass￨6 )￨5 {￨5 proxyInterfaces￨6 [￨6 0￨6 ]￨6 =￨6 extensionClass￨6 ;￨6 }￨5 EntityManagerUnwrappedTargetInvocationHandler￨5 entityManagerUnwrappedTargetInvocationHandler￨5 =￨5 new￨5 EntityManagerUnwrappedTargetInvocationHandler￨5 (￨5 entityManager￨5 ,￨5 extensionClass￨5 )￨5 ;￨5 Object￨5 proxyForUnwrappedObject￨5 =￨5 Proxy￨5 .￨5 newProxyInstance￨5 (￨5 extensionClass￨5 .￨5 getClassLoader￨5 (￨5 )￨5 ,￨5 proxyInterfaces￨5 ,￨5 entityManagerUnwrappedTargetInvocationHandler￨5 )￨5 ;￨5 if￨5 (￨5 JPA_LOGGER￨6 .￨6 isDebugEnabled￨6 (￨6 )￨6 )￨5 {￨5 JPA_LOGGER￨6 .￨6 debugf￨6 (￨6 "injecting<seq2seq4repair_space>entity<seq2seq4repair_space>manager<seq2seq4repair_space>into<seq2seq4repair_space>a<seq2seq4repair_space>'%s'<seq2seq4repair_space>(unit<seq2seq4repair_space>name=%s)"￨6 ,￨6 extensionClass￨6 .￨6 getName￨6 (￨6 )￨6 ,￨6 unitName￨6 )￨6 ;￨6 }￨5 return￨5 new￨5 ValueManagedReference￨5 (￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 msc￨5 .￨5 value￨5 .￨5 ImmediateValue￨5 <￨5 Object￨5 >￨5 (￨5 proxyForUnwrappedObject￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 new￨4 ValueManagedReference￨4 (￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 msc￨4 .￨4 value￨4 .￨4 ImmediateValue￨4 <￨4 Object￨4 >￨4 (￨4 entityManager￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 TestPlanGui￨1 extends￨1 AbstractJMeterGuiComponent￨1 {￨1 private￨2 JCheckBox￨2 functionalMode￨2 ;￨2 private￨2 JCheckBox￨2 serializedMode￨2 ;￨2 private￨2 ArgumentsPanel￨2 argsPanel￨2 ;￨2 public￨2 TestPlanGui￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JPopupMenu￨2 createPopupMenu￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyTestElement￨2 (￨2 TestElement￨3 plan￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getStaticLabel￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 JMeterUtils￨3 .￨3 getResString￨3 (￨3 "Test<seq2seq4repair_space>Plan"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Collection￨2 getMenuCategories￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 configure￨2 (￨2 TestElement￨3 el￨3 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createVariablePanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PackageMapper￨1 extends￨1 AbstractBookmarkableMapper￨1 {￨1 private￨2 final￨2 String￨2 mountPath￨2 ;￨2 private￨2 final￨2 PackageName￨2 packageName￨2 ;￨2 private￨2 final￨2 IPageParametersEncoder￨2 pageParametersEncoder￨2 ;￨2 public￨2 PackageMapper￨2 (￨2 final￨3 String￨3 mountPath￨3 ,￨3 final￨3 PackageName￨3 packageName￨3 )￨2 {￨2 }￨2 public￨2 PackageMapper￨2 (￨2 final￨3 String￨3 mountPath￨3 ,￨3 final￨3 PackageName￨3 packageName￨3 ,￨3 final￨3 IPageParametersEncoder￨3 pageParametersEncoder￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Url￨2 buildUrl￨2 (￨2 UrlInfo￨3 info￨3 )￨2 {￨2 Class￨3 <￨3 ?￨3 extends￨3 IRequestablePage￨3 >￨3 pageClass￨3 =￨3 info￨3 .￨3 getPageClass￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 pageClass￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 startsWith￨3 (￨3 packageName￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 Url￨3 url￨3 =￨3 new￨3 Url￨3 (￨3 )￨3 ;￨3 url￨3 .￨3 getSegments￨3 (￨3 )￨3 .￨3 add￨3 (￨3 mountPath￨3 )￨3 ;￨3 url￨3 .￨3 getSegments￨3 (￨3 )￨3 .￨3 add￨3 (￨3 pageClass￨3 .￨3 getSimpleName￨3 (￨3 )￨3 )￨3 ;￨3 encodePageComponentInfo￨3 (￨3 url￨3 ,￨3 info￨3 .￨3 getPageComponentInfo￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 encodePageParameters￨3 (￨3 url￨3 ,￨3 info￨3 .￨3 getPageParameters￨3 (￨3 )￨3 ,￨3 pageParametersEncoder￨3 )￨3 ;￨3 }￨3 return￨3 null￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 UrlInfo￨2 parseRequest￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 boolean￨2 pageMustHaveBeenCreatedBookmarkable￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 getCompatibilityScore￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 ResourceRefTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 ResourceRefTestCase￨2 .￨2 class￨2 )￨2 ;￨2 @￨2 Deployment￨2 public￨2 static￨2 Archive￨2 <￨2 ?￨2 >￨2 deployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testCorrectBinding￨2 (￨2 )￨2 throws￨2 NamingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testInjection￨2 (￨2 )￨2 throws￨2 NamingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testResourceRefEntriesWithoutResType￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testResourceEnvRefWithoutInjectionTarget￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 test2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 ResUrlChecker￨3 bean￨3 =￨3 (￨3 (￨3 ResUrlChecker￨3 )￨3 (￨3 new￨3 InitialContext￨3 (￨3 )￨3 .￨3 lookup￨3 (￨3 "java:app/resource-ref-test/ResUrlCheckerBean"￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 URL￨3 expected￨3 =￨3 new￨3 URL￨3 (￨3 "http://localhost/url2"￨3 )￨3 ;￨3 <END_BUG>￨3 URL￨3 actual￨3 =￨3 bean￨3 .￨3 getURL2￨3 (￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 expected￨3 ,￨3 actual￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 Gcj￨1 extends￨1 DefaultCompilerAdapter￨1 {￨1 public￨2 boolean￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupGCJCommand￨2 (￨2 )￨2 {￨2 Commandline￨3 cmd￨3 =￨3 new￨3 Commandline￨3 (￨3 )￨3 ;￨3 Path￨3 classpath￨3 =￨3 new￨3 Path￨3 (￨3 project￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 bootclasspath￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 classpath￨4 .￨4 append￨4 (￨4 bootclasspath￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 addExtdirsToClasspath￨3 (￨3 classpath￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 (￨4 bootclasspath￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 bootclasspath￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 includeJavaRuntime￨4 =￨4 true￨4 ;￨4 }￨3 classpath￨3 .￨3 append￨3 (￨3 getCompileClasspath￨3 (￨3 )￨3 )￨3 ;￨3 classpath￨3 .￨3 append￨3 (￨3 src￨3 )￨3 ;￨3 cmd￨3 .￨3 setExecutable￨3 (￨3 "gcj"￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 destDir￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 cmd￨4 .￨4 createArgument￨4 (￨4 )￨4 .￨4 setValue￨4 (￨4 "-d"￨4 )￨4 ;￨4 cmd￨4 .￨4 createArgument￨4 (￨4 )￨4 .￨4 setFile￨4 (￨4 destDir￨4 )￨4 ;￨4 if￨4 (￨4 destDir￨5 .￨5 mkdirs￨5 (￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 BuildException￨5 (￨5 "Can't<seq2seq4repair_space>make<seq2seq4repair_space>output<seq2seq4repair_space>directories.<seq2seq4repair_space>Maybe<seq2seq4repair_space>permission<seq2seq4repair_space>is<seq2seq4repair_space>wrong.<seq2seq4repair_space>"￨5 )￨5 ;￨5 }￨4 }￨3 cmd￨3 .￨3 createArgument￨3 (￨3 )￨3 .￨3 setValue￨3 (￨3 "-classpath"￨3 )￨3 ;￨3 cmd￨3 .￨3 createArgument￨3 (￨3 )￨3 .￨3 setPath￨3 (￨3 classpath￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 encoding￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 cmd￨4 .￨4 createArgument￨4 (￨4 )￨4 .￨4 setValue￨4 (￨4 (￨4 "--encoding="￨4 +￨4 (￨4 encoding￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 debug￨4 )￨3 {￨3 cmd￨4 .￨4 createArgument￨4 (￨4 )￨4 .￨4 setValue￨4 (￨4 "-g1"￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 optimize￨4 )￨3 {￨3 cmd￨4 .￨4 createArgument￨4 (￨4 )￨4 .￨4 setValue￨4 (￨4 "-O"￨4 )￨4 ;￨4 }￨3 cmd￨3 .￨3 createArgument￨3 (￨3 )￨3 .￨3 setValue￨3 (￨3 "-C"￨3 )￨3 ;￨3 addCurrentCompilerArgs￨3 (￨3 cmd￨3 )￨3 ;￨3 return￨3 cmd￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 PerformanceTest￨1 {￨1 private￨2 final￨2 int￨2 max￨2 =￨2 10￨2 ;￨2 private￨2 static￨2 final￨2 File￨2 BIG_FILE￨2 =￨2 new￨2 File￨2 (￨2 System￨2 .￨2 getProperty￨2 (￨2 "java.io.tmpdir"￨2 )￨2 ,￨2 "worldcitiespop.txt"￨2 )￨2 ;￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 setUpClass￨2 (￨2 )￨2 throws￨2 FileNotFoundException￨2 ,￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 BufferedReader￨2 getBufferedReader￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 long￨2 parse￨2 (￨2 final￨2 Reader￨2 in￨2 ,￨2 boolean￨2 traverseColumns￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 CSVFormat￨3 format￨3 =￨3 CSVFormat￨3 .￨3 defaults￨3 (￨3 )￨3 .￨3 withIgnoreSurroundingSpaces￨3 (￨3 false￨3 )￨3 .￨3 build￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 long￨3 recordCount￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 final￨4 CSVRecord￨4 record￨4 :￨4 format￨4 .￨4 parse￨4 (￨4 in￨4 )￨4 )￨3 {￨3 recordCount￨4 ++￨4 ;￨4 if￨4 (￨4 traverseColumns￨5 )￨4 {￨4 for￨5 (￨5 String￨6 value￨6 :￨6 record￨6 )￨5 {￨5 }￨5 }￨4 }￨3 return￨3 recordCount￨3 ;￨3 }￨2 private￨2 void￨2 println￨2 (￨2 final￨3 String￨3 s￨3 )￨2 {￨2 }￨2 private￨2 long￨2 readAll￨2 (￨2 final￨2 BufferedReader￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 testParseBigFile￨2 (￨2 boolean￨2 traverseColumns￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testParseBigFileRepeat￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testReadBigFile￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 EqualExpression￨1 extends￨1 BinaryExpression￨1 {￨1 public￨2 EqualExpression￨2 (￨2 Expression￨3 left￨3 ,￨3 Expression￨3 right￨3 ,￨3 int￨3 operator￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 areTypesCastCompatible￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 computeConstant￨2 (￨2 TypeBinding￨3 leftType￨3 ,￨3 TypeBinding￨3 rightType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedBoolean￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Label￨3 trueLabel￨3 ,￨3 Label￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedBooleanEqual￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Label￨3 trueLabel￨3 ,￨3 Label￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedNonBooleanEqual￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Label￨3 trueLabel￨3 ,￨3 Label￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCompactableOperation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 boolean￨3 argsContainCast￨3 =￨3 false￨3 ;￨3 if￨3 (￨3 (￨4 left￨4 )￨4 instanceof￨4 CastExpression￨4 )￨3 {￨3 left￨4 .￨4 bits￨4 |=￨4 IgnoreNeedForCastCheckMASK￨4 ;￨4 argsContainCast￨4 =￨4 true￨4 ;￨4 }￨3 TypeBinding￨3 leftType￨3 =￨3 left￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 right￨4 )￨4 instanceof￨4 CastExpression￨4 )￨3 {￨3 right￨4 .￨4 bits￨4 |=￨4 IgnoreNeedForCastCheckMASK￨4 ;￨4 argsContainCast￨4 =￨4 true￨4 ;￨4 }￨3 TypeBinding￨3 rightType￨3 =￨3 right￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 leftType￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 rightType￨4 ==￨4 null￨4 )￨4 )￨3 {￨3 constant￨4 =￨4 NotAConstant￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 leftType￨4 .￨4 isBaseType￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 rightType￨4 .￨4 isBaseType￨4 (￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 int￨4 operatorSignature￨4 =￨4 ResolveTypeTables￨4 [￨4 OperatorIds￨4 .￨4 EQUAL_EQUAL￨4 ]￨4 [￨4 (￨4 (￨4 (￨4 leftType￨4 .￨4 id￨4 )￨4 <<￨4 4￨4 )￨4 +￨4 (￨4 rightType￨4 .￨4 id￨4 )￨4 )￨4 ]￨4 ;￨4 <END_BUG>￨4 left￨4 .￨4 implicitConversion￨4 =￨4 operatorSignature￨4 >￨4 >￨4 >￨4 12￨4 ;￨4 right￨4 .￨4 implicitConversion￨4 =￨4 (￨4 operatorSignature￨4 >￨4 >￨4 >￨4 4￨4 )￨4 &￨4 255￨4 ;￨4 bits￨4 |=￨4 operatorSignature￨4 &￨4 15￨4 ;￨4 if￨4 (￨4 (￨5 operatorSignature￨5 &￨5 15￨5 )￨5 ==￨5 (￨5 TypeIds￨5 .￨5 T_undefined￨5 )￨5 )￨4 {￨4 constant￨5 =￨5 Constant￨5 .￨5 NotAConstant￨5 ;￨5 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 invalidOperator￨5 (￨5 this￨5 ,￨5 leftType￨5 ,￨5 rightType￨5 )￨5 ;￨5 return￨5 null￨5 ;￨5 }￨4 if￨4 (￨4 argsContainCast￨5 )￨4 {￨4 CastExpression￨5 .￨5 checkNeedForArgumentCasts￨5 (￨5 scope￨5 ,￨5 OperatorIds￨5 .￨5 EQUAL_EQUAL￨5 ,￨5 operatorSignature￨5 ,￨5 left￨5 ,￨5 leftType￨5 .￨5 id￨5 ,￨5 right￨5 ,￨5 rightType￨5 .￨5 id￨5 )￨5 ;￨5 }￨4 computeConstant￨4 (￨4 leftType￨4 ,￨4 rightType￨4 )￨4 ;￨4 return￨4 this￨4 .￨4 resolvedType￨4 =￨4 BooleanBinding￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 areTypesCastCompatible￨4 (￨4 scope￨4 ,￨4 rightType￨4 ,￨4 leftType￨4 )￨4 )￨4 ||￨4 (￨4 areTypesCastCompatible￨4 (￨4 scope￨4 ,￨4 leftType￨4 ,￨4 rightType￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 rightType￨5 .￨5 id￨5 )￨5 ==￨5 (￨5 T_String￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 leftType￨5 .￨5 id￨5 )￨5 ==￨5 (￨5 T_String￨5 )￨5 )￨5 )￨4 {￨4 computeConstant￨5 (￨5 leftType￨5 ,￨5 rightType￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 constant￨5 =￨5 NotAConstant￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 rightType￨5 .￨5 id￨5 )￨5 ==￨5 (￨5 T_String￨5 )￨5 )￨4 {￨4 right￨5 .￨5 implicitConversion￨5 =￨5 TypeIds￨5 .￨5 String2String￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 leftType￨5 .￨5 id￨5 )￨5 ==￨5 (￨5 T_String￨5 )￨5 )￨4 {￨4 left￨5 .￨5 implicitConversion￨5 =￨5 TypeIds￨5 .￨5 String2String￨5 ;￨5 }￨4 boolean￨4 unnecessaryLeftCast￨4 =￨4 (￨4 (￨4 left￨4 .￨4 bits￨4 )￨4 &￨4 (￨4 UnnecessaryCastMask￨4 )￨4 )￨4 !=￨4 0￨4 ;￨4 boolean￨4 unnecessaryRightCast￨4 =￨4 (￨4 (￨4 right￨4 .￨4 bits￨4 )￨4 &￨4 (￨4 UnnecessaryCastMask￨4 )￨4 )￨4 !=￨4 0￨4 ;￨4 if￨4 (￨4 unnecessaryLeftCast￨5 ||￨5 unnecessaryRightCast￨5 )￨4 {￨4 TypeBinding￨5 alternateLeftType￨5 =￨5 (￨5 unnecessaryLeftCast￨5 )￨5 ?￨5 (￨5 (￨5 CastExpression￨5 )￨5 (￨5 left￨5 )￨5 )￨5 .￨5 expression￨5 .￨5 resolvedType￨5 :￨5 leftType￨5 ;￨5 TypeBinding￨5 alternateRightType￨5 =￨5 (￨5 unnecessaryRightCast￨5 )￨5 ?￨5 (￨5 (￨5 CastExpression￨5 )￨5 (￨5 right￨5 )￨5 )￨5 .￨5 expression￨5 .￨5 resolvedType￨5 :￨5 rightType￨5 ;￨5 if￨5 (￨5 (￨6 areTypesCastCompatible￨6 (￨6 scope￨6 ,￨6 alternateLeftType￨6 ,￨6 alternateRightType￨6 )￨6 )￨6 ||￨6 (￨6 areTypesCastCompatible￨6 (￨6 scope￨6 ,￨6 alternateRightType￨6 ,￨6 alternateLeftType￨6 )￨6 )￨6 )￨5 {￨5 if￨6 (￨6 unnecessaryLeftCast￨7 )￨6 {￨6 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 unnecessaryCast￨7 (￨7 (￨7 (￨7 CastExpression￨7 )￨7 (￨7 left￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 if￨6 (￨6 unnecessaryRightCast￨7 )￨6 {￨6 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 unnecessaryCast￨7 (￨7 (￨7 (￨7 CastExpression￨7 )￨7 (￨7 right￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 return￨4 this￨4 .￨4 resolvedType￨4 =￨4 BooleanBinding￨4 ;￨4 }￨3 constant￨3 =￨3 NotAConstant￨3 ;￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 notCompatibleTypesError￨3 (￨3 this￨3 ,￨3 leftType￨3 ,￨3 rightType￨3 )￨3 ;￨3 return￨3 null￨3 ;￨3 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
class￨1 DefaultFailureDetailView￨1 implements￨1 FailureDetailView￨1 {￨1 JTextArea￨2 fTextArea￨2 ;￨2 public￨2 Component￨2 getComponent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 showFailure￨2 (￨2 TestFailure￨3 failure￨3 )￨2 {￨2 <START_BUG>￨3 fTextArea￨3 .￨3 setText￨3 (￨3 BaseTestRunner￨3 .￨3 getFilteredTrace￨3 (￨3 failure￨3 .￨3 thrownException￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 fTextArea￨3 .￨3 select￨3 (￨3 0￨3 ,￨3 0￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DatabaseTimerPersistence￨1 implements￨1 TimerPersistence￨1 ,￨1 Service￨1 <￨1 DatabaseTimerPersistence￨1 >￨1 {￨1 private￨2 final￨2 InjectedValue￨2 <￨2 ManagedReferenceFactory￨2 >￨2 dataSourceInjectedValue￨2 =￨2 new￨2 InjectedValue￨2 <￨2 ManagedReferenceFactory￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 ModuleLoader￨2 >￨2 moduleLoader￨2 =￨2 new￨2 InjectedValue￨2 <￨2 ModuleLoader￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 String￨2 name￨2 ;￨2 private￨2 final￨2 String￨2 database￨2 ;￨2 private￨2 final￨2 String￨2 partition￨2 ;￨2 private￨2 volatile￨2 ManagedReference￨2 managedReference￨2 ;￨2 private￨2 volatile￨2 DataSource￨2 dataSource￨2 ;￨2 private￨2 volatile￨2 Properties￨2 sql￨2 ;￨2 private￨2 MarshallerFactory￨2 factory￨2 ;￨2 private￨2 MarshallingConfiguration￨2 configuration￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CREATE_TABLE￨2 =￨2 "create-table"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CREATE_TIMER￨2 =￨2 "create-timer"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 UPDATE_TIMER￨2 =￨2 "update-timer"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 LOAD_ALL_TIMERS￨2 =￨2 "load-all-timers"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 LOAD_TIMER￨2 =￨2 "load-timer"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DELETE_TIMER￨2 =￨2 "delete-timer"￨2 ;￨2 public￨2 DatabaseTimerPersistence￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 String￨3 database￨3 ,￨3 String￨3 partition￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 start￨2 (￨2 final￨2 StartContext￨2 context￨2 )￨2 throws￨2 StartException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 stop￨2 (￨2 final￨3 StopContext￨3 context￨3 )￨2 {￨2 }￨2 void￨2 runCreateTable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 sql￨2 (￨2 final￨3 String￨3 key￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 addTimer￨2 (￨2 final￨3 TimerImpl￨3 timerEntity￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 persistTimer￨2 (￨2 final￨3 TimerImpl￨3 timerEntity￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 timerUndeployed￨2 (￨2 final￨3 String￨3 timedObjectId￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 TimerImpl￨2 >￨2 loadActiveTimers￨2 (￨2 final￨3 String￨3 timedObjectId￨3 ,￨3 final￨3 TimerServiceImpl￨3 timerService￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 DatabaseTimerPersistence￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalArgumentException￨2 ,￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 TimerImpl￨2 timerFromResult￨2 (￨2 final￨2 ResultSet￨2 resultSet￨2 ,￨2 final￨2 TimerServiceImpl￨2 timerService￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 boolean￨3 calendarTimer￨3 =￨3 resultSet￨3 .￨3 getBoolean￨3 (￨3 24￨3 )￨3 ;￨3 TimerImpl￨3 .￨3 Builder￨3 builder￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 calendarTimer￨4 )￨3 {￨3 CalendarTimer￨4 .￨4 Builder￨4 cb￨4 =￨4 CalendarTimer￨4 .￨4 builder￨4 (￨4 )￨4 ;￨4 builder￨4 =￨4 cb￨4 ;￨4 cb￨4 .￨4 setScheduleExprSecond￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 10￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprMinute￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 11￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprHour￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 12￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprDayOfWeek￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 13￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprDayOfMonth￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 14￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprMonth￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 15￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprYear￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 16￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprStartDate￨4 (￨4 resultSet￨4 .￨4 getTimestamp￨4 (￨4 17￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprEndDate￨4 (￨4 resultSet￨4 .￨4 getTimestamp￨4 (￨4 18￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setScheduleExprTimezone￨4 (￨4 resultSet￨4 .￨4 getString￨4 (￨4 19￨4 )￨4 )￨4 ;￨4 cb￨4 .￨4 setAutoTimer￨4 (￨4 resultSet￨4 .￨4 getBoolean￨4 (￨4 20￨4 )￨4 )￨4 ;￨4 final￨4 String￨4 clazz￨4 =￨4 resultSet￨4 .￨4 getString￨4 (￨4 21￨4 )￨4 ;￨4 final￨4 String￨4 methodName￨4 =￨4 resultSet￨4 .￨4 getString￨4 (￨4 22￨4 )￨4 ;￨4 if￨4 (￨4 methodName￨5 !=￨5 null￨5 )￨4 {￨4 final￨5 String￨5 paramString￨5 =￨5 resultSet￨5 .￨5 getString￨5 (￨5 23￨5 )￨5 ;￨5 final￨5 String￨5 [￨5 ]￨5 params￨5 =￨5 (￨5 (￨5 paramString￨5 ==￨5 null￨5 )￨5 ||￨5 (￨5 paramString￨5 .￨5 isEmpty￨5 (￨5 )￨5 )￨5 )￨5 ?￨5 new￨5 String￨5 [￨5 0￨5 ]￨5 :￨5 paramString￨5 .￨5 split￨5 (￨5 ";"￨5 )￨5 ;￨5 <START_BUG>￨5 final￨5 Method￨5 timeoutMethod￨5 =￨5 CalendarTimer￨5 .￨5 getTimeoutMethod￨5 (￨5 new￨5 TimeoutMethod￨5 (￨5 clazz￨5 ,￨5 methodName￨5 ,￨5 params￨5 )￨5 ,￨5 timerService￨5 .￨5 getTimedObjectInvoker￨5 (￨5 )￨5 .￨5 getValue￨5 (￨5 )￨5 .￨5 getClassLoader￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 if￨5 (￨5 timeoutMethod￨6 ==￨6 null￨6 )￨5 {￨5 ROOT_LOGGER￨6 .￨6 timerReinstatementFailed￨6 (￨6 resultSet￨6 .￨6 getString￨6 (￨6 2￨6 )￨6 ,￨6 resultSet￨6 .￨6 getString￨6 (￨6 1￨6 )￨6 ,￨6 new￨6 NoSuchMethodException￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 cb￨5 .￨5 setTimeoutMethod￨5 (￨5 timeoutMethod￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 builder￨4 =￨4 TimerImpl￨4 .￨4 builder￨4 (￨4 )￨4 ;￨4 }￨3 builder￨3 .￨3 setId￨3 (￨3 resultSet￨3 .￨3 getString￨3 (￨3 1￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setTimedObjectId￨3 (￨3 resultSet￨3 .￨3 getString￨3 (￨3 2￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setInitialDate￨3 (￨3 resultSet￨3 .￨3 getTimestamp￨3 (￨3 3￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setRepeatInterval￨3 (￨3 resultSet￨3 .￨3 getLong￨3 (￨3 4￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setNextDate￨3 (￨3 resultSet￨3 .￨3 getTimestamp￨3 (￨3 5￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setPreviousRun￨3 (￨3 resultSet￨3 .￨3 getTimestamp￨3 (￨3 6￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setPrimaryKey￨3 (￨3 deSerialize￨3 (￨3 resultSet￨3 .￨3 getString￨3 (￨3 7￨3 )￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setInfo￨3 (￨3 (￨3 (￨3 Serializable￨3 )￨3 (￨3 deSerialize￨3 (￨3 resultSet￨3 .￨3 getString￨3 (￨3 8￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setTimerState￨3 (￨3 TimerState￨3 .￨3 valueOf￨3 (￨3 resultSet￨3 .￨3 getString￨3 (￨3 9￨3 )￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 setPersistent￨3 (￨3 true￨3 )￨3 ;￨3 return￨3 builder￨3 .￨3 build￨3 (￨3 timerService￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 statementParameters￨2 (￨2 final￨2 TimerImpl￨2 timerEntity￨2 ,￨2 final￨2 PreparedStatement￨2 statement￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 serialize￨2 (￨2 final￨3 Serializable￨3 serializable￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 deSerialize￨2 (￨2 final￨2 String￨2 data￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Timestamp￨2 timestamp￨2 (￨2 final￨3 Date￨3 date￨3 )￨2 {￨2 }￨2 public￨2 InjectedValue￨2 <￨2 ManagedReferenceFactory￨2 >￨2 getDataSourceInjectedValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InjectedValue￨2 <￨2 ModuleLoader￨2 >￨2 getModuleLoader￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 safeClose￨2 (￨2 final￨3 Closeable￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 safeClose￨2 (￨2 final￨3 Statement￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 safeClose￨2 (￨2 final￨3 Connection￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 safeClose￨2 (￨2 final￨3 ResultSet￨3 resource￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JaxrsSpringProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 String￨2 VERSION_KEY￨2 =￨2 "resteasy.version"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 SPRING_INT_JAR_BASE￨2 =￨2 "resteasy-spring"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JAR_LOCATION￨2 =￨2 "resteasy-spring-jar"￨2 ;￨2 private￨2 static￨2 final￨2 ModuleIdentifier￨2 MODULE￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.resteasy.resteasy-spring"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SPRING_LISTENER￨2 =￨2 "org.jboss.resteasy.plugins.spring.SpringContextLoaderListener"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SPRING_SERVLET￨2 =￨2 "org.springframework.web.servlet.DispatcherServlet"￨2 ;￨2 @￨2 Deprecated￨2 public￨2 static￨2 final￨2 String￨2 DISABLE_PROPERTY￨2 =￨2 "org.jboss.as.jaxrs.disableSpringIntegration"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ENABLE_PROPERTY￨2 =￨2 "org.jboss.as.jaxrs.enableSpringIntegration"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SERVICE_NAME￨2 =￨2 "resteasy-spring-integration-resource-root"￨2 ;￨2 private￨2 final￨2 ServiceTarget￨2 serviceTarget￨2 ;￨2 private￨2 VirtualFile￨2 resourceRoot￨2 ;￨2 public￨2 JaxrsSpringProcessor￨2 (￨2 ServiceTarget￨3 serviceTarget￨3 )￨2 {￨2 }￨2 protected￨2 synchronized￨2 VirtualFile￨2 getResteasySpringVirtualFile￨2 (￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 Module￨4 module￨4 =￨4 Module￨4 .￨4 getBootModuleLoader￨4 (￨4 )￨4 .￨4 loadModule￨4 (￨4 JaxrsSpringProcessor￨4 .￨4 MODULE￨4 )￨4 ;￨4 URL￨4 fileUrl￨4 =￨4 module￨4 .￨4 getClassLoader￨4 (￨4 )￨4 .￨4 getResource￨4 (￨4 JaxrsSpringProcessor￨4 .￨4 JAR_LOCATION￨4 )￨4 ;￨4 if￨4 (￨4 fileUrl￨5 ==￨5 null￨5 )￨4 {￨4 throw￨5 JAXRS_LOGGER￨5 .￨5 noSpringIntegrationJar￨5 (￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 File￨4 dir￨4 =￨4 new￨4 File￨4 (￨4 fileUrl￨4 .￨4 getFile￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 File￨4 file￨4 =￨4 null￨4 ;￨4 for￨4 (￨4 String￨5 jar￨5 :￨5 dir￨5 .￨5 list￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 jar￨6 .￨6 endsWith￨6 (￨6 ".jar"￨6 )￨6 )￨5 {￨5 file￨6 =￨6 new￨6 File￨6 (￨6 dir￨6 ,￨6 jar￨6 )￨6 ;￨6 break￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 file￨5 ==￨5 null￨5 )￨4 {￨4 throw￨5 JAXRS_LOGGER￨5 .￨5 noSpringIntegrationJar￨5 (￨5 )￨5 ;￨5 }￨4 VirtualFile￨4 vf￨4 =￨4 VFS￨4 .￨4 getChild￨4 (￨4 file￨4 .￨4 toURI￨4 (￨4 )￨4 )￨4 ;￨4 final￨4 Closeable￨4 mountHandle￨4 =￨4 VFS￨4 .￨4 mountZip￨4 (￨4 file￨4 ,￨4 vf￨4 ,￨4 TempFileProviderService￨4 .￨4 provider￨4 (￨4 )￨4 )￨4 ;￨4 Service￨4 <￨4 Closeable￨4 >￨4 mountHandleService￨4 =￨4 new￨4 Service￨4 <￨4 Closeable￨4 >￨4 (￨4 )￨4 (￨4 )￨4 {￨4 public￨5 void￨5 start￨5 (￨5 StartContext￨5 startContext￨5 )￨5 throws￨5 StartException￨5 (￨5 )￨5 {￨5 }￨5 public￨5 void￨5 stop￨5 (￨5 StopContext￨6 stopContext￨6 )￨5 {￨5 VFSUtils￨6 .￨6 safeClose￨6 (￨6 mountHandle￨6 )￨6 ;￨6 }￨5 public￨5 Closeable￨5 getValue￨5 (￨5 )￨5 throws￨5 IllegalArgumentException￨5 ,￨5 IllegalStateException￨5 (￨5 )￨5 {￨5 return￨6 mountHandle￨6 ;￨6 }￨5 }￨4 ;￨4 ServiceBuilder￨4 <￨4 Closeable￨4 >￨4 builder￨4 =￨4 serviceTarget￨4 .￨4 addService￨4 (￨4 JBOSS￨4 .￨4 append￨4 (￨4 JaxrsSpringProcessor￨4 .￨4 SERVICE_NAME￨4 )￨4 ,￨4 mountHandleService￨4 )￨4 ;￨4 builder￨4 .￨4 setInitialMode￨4 (￨4 ACTIVE￨4 )￨4 .￨4 install￨4 (￨4 )￨4 ;￨4 resourceRoot￨4 =￨4 vf￨4 ;￨4 return￨4 resourceRoot￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 DeploymentUnitProcessingException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 FormComponent￨1 <￨1 T￨1 >￨1 extends￨1 WebMarkupContainer￨1 <￨1 T￨1 >￨1 implements￨1 IFormProcessingListener￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 EMPTY_STRING_ARRAY￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VALUE_SEPARATOR￨2 =￨2 ";"￨2 ;￨2 public￨2 static￨2 interface￨2 IVisitor￨2 (￨2 )￨2 {￨2 public￨3 Object￨3 formComponent￨3 (￨3 IFormProcessingListener￨4 formComponent￨4 )￨3 {￨3 }￨3 }￨2 public￨2 abstract￨2 static￨2 class￨2 AbstractVisitor￨2 implements￨2 FormComponent￨2 .￨2 IVisitor￨2 {￨2 public￨3 Object￨3 formComponent￨3 (￨3 IFormProcessingListener￨4 component￨4 )￨3 {￨3 }￨3 protected￨3 abstract￨3 void￨3 onFormComponent￨3 (￨3 FormComponent￨4 formComponent￨4 )￨3 {￨3 }￨3 }￨2 private￨2 final￨2 class￨2 RequiredStateChange￨2 extends￨2 Change￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 final￨3 boolean￨3 required￨3 =￨3 isRequired￨3 (￨3 )￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 undo￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 Class￨2 type￨2 ;￨2 protected￨2 static￨2 final￨2 short￨2 FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨2 =￨2 FLAG_RESERVED1￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 FLAG_PERSISTENT￨2 =￨2 FLAG_RESERVED2￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 FLAG_REQUIRED￨2 =￨2 FLAG_RESERVED3￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NO_RAW_INPUT￨2 =￨2 "[-NO-RAW-INPUT-]"￨2 ;￨2 private￨2 String￨2 rawInput￨2 =￨2 FormComponent￨2 .￨2 NO_RAW_INPUT￨2 ;￨2 private￨2 Object￨2 validators￨2 =￨2 null￨2 ;￨2 private￨2 IModel￨2 labelModel￨2 =￨2 null￨2 ;￨2 private￨2 transient￨2 T￨2 convertedInput￨2 ;￨2 public￨2 FormComponent￨2 (￨2 MarkupContainer￨3 parent￨3 ,￨3 final￨3 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 FormComponent￨2 (￨2 MarkupContainer￨3 parent￨3 ,￨3 final￨3 String￨3 id￨3 ,￨3 IModel￨3 <￨3 T￨3 >￨3 model￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 add￨2 (￨2 final￨3 IValidator￨3 validator￨3 )￨2 {￨2 }￨2 public￨2 Form￨2 getForm￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 FormComponent￨2 setLabel￨2 (￨2 final￨3 IModel￨3 labelModel￨3 )￨2 {￨2 }￨2 public￨2 IModel￨2 getLabel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getInputAsArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getInputName￨2 (￨2 )￨2 {￨2 String￨3 id￨3 =￨3 FormComponent￨3 .￨3 getId￨3 (￨3 )￨3 ;￨3 final￨3 PrependingStringBuffer￨3 inputName￨3 =￨3 new￨3 PrependingStringBuffer￨3 (￨3 id￨3 .￨3 length￨3 (￨3 )￨3 )￨3 ;￨3 Component￨3 c￨3 =￨3 this￨3 ;￨3 while￨3 (￨3 true￨4 )￨3 {￨3 inputName￨4 .￨4 prepend￨4 (￨4 id￨4 )￨4 ;￨4 c￨4 =￨4 c￨4 .￨4 getParent￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 (￨4 c￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 c￨4 instanceof￨4 Form￨4 )￨4 )￨4 ||￨4 (￨4 c￨4 instanceof￨4 Page￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 break￨4 ;￨4 }￨4 inputName￨4 .￨4 prepend￨4 (￨4 PATH_SEPARATOR￨4 )￨4 ;￨4 id￨4 =￨4 c￨4 .￨4 getId￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 inputName￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 final￨2 List￨2 <￨2 IValidator￨2 >￨2 getValidators￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getRawInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 hasRawInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 invalid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMultiPart￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isPersistent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isValid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isValidated￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInputNullable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setModelValue￨2 (￨2 final￨3 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setModelValue￨2 (￨2 final￨3 String￨3 [￨3 ]￨3 value￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 setPersistent￨2 (￨2 final￨3 boolean￨3 persistent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 valid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 clearInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 checkRequired￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateRequired￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 final￨2 void￨2 convert￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 T￨2 convertValue￨2 (￨2 String￨2 [￨2 ]￨2 value￨2 )￨2 throws￨2 ConversionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 validate￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 final￨2 void￨2 validateValidators￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getModelValue￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 inputAsInt￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 inputAsInt￨2 (￨2 final￨3 int￨3 defaultValue￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 [￨2 ]￨2 inputAsIntArray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onInvalid￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 internalOnModelChanged￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onValid￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 supportsPersistence￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validators_add￨2 (￨2 final￨3 IValidator￨3 validator￨3 )￨2 {￨2 }￨2 private￨2 IValidator￨2 validators_get￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 private￨2 int￨2 validators_size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 inputChanged￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 setRequired￨2 (￨2 final￨3 boolean￨3 required￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRequired￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 T￨2 getConvertedInput￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onDetach￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Class￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 setType￨2 (￨2 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getValidatorKeyPrefix￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 error￨2 (￨2 IValidationError￨3 error￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 processInput￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 ValidatableAdapter￨2 implements￨2 IValidatable￨2 <￨2 T￨2 >￨2 {￨2 public￨3 void￨3 error￨3 (￨3 IValidationError￨4 error￨4 )￨3 {￨3 }￨3 public￨3 T￨3 getValue￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 MessageSource￨2 implements￨2 IMessageSource￨2 {￨2 public￨3 String￨3 getMessage￨3 (￨3 String￨4 key￨4 )￨3 {￨3 }￨3 private￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 addDefaultVars￨3 (￨3 Map￨4 <￨4 String￨4 ,￨4 Object￨4 >￨4 params￨4 )￨3 {￨3 }￨3 private￨3 Object￨3 getLabel￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 substitute￨3 (￨3 String￨3 string￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 vars￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 boolean￨2 processChildren￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 AddCompilationUnitToIndex￨1 extends￨1 IndexRequest￨1 {￨1 IFile￨2 resource￨2 ;￨2 IndexManager￨2 manager￨2 ;￨2 IPath￨2 indexedContainer￨2 ;￨2 char￨2 [￨2 ]￨2 contents￨2 ;￨2 public￨2 AddCompilationUnitToIndex￨2 (￨2 IFile￨3 resource￨3 ,￨3 IndexManager￨3 manager￨3 ,￨3 IPath￨3 indexedContainer￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 belongsTo￨2 (￨2 String￨3 jobFamily￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 execute￨2 (￨2 IProgressMonitor￨3 progressMonitor￨3 )￨2 {￨2 if￨3 (￨3 (￨4 progressMonitor￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 progressMonitor￨4 .￨4 isCanceled￨4 (￨4 )￨4 )￨4 )￨3 {￨3 return￨4 IJob￨4 .￨4 COMPLETE￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 IIndex￨4 index￨4 =￨4 manager￨4 .￨4 getIndex￨4 (￨4 this￨4 .￨4 indexedContainer￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 index￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 IJob￨5 .￨5 COMPLETE￨5 ;￨5 }￨4 ReadWriteMonitor￨4 monitor￨4 =￨4 manager￨4 .￨4 getMonitorFor￨4 (￨4 index￨4 )￨4 ;￨4 if￨4 (￨4 monitor￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 IJob￨5 .￨5 COMPLETE￨5 ;￨5 }￨4 try￨4 (￨4 )￨4 {￨4 monitor￨5 .￨5 enterWrite￨5 (￨5 )￨5 ;￨5 char￨5 [￨5 ]￨5 contents￨5 =￨5 this￨5 .￨5 getContents￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 contents￨6 ==￨6 null￨6 )￨5 {￨5 return￨6 IJob￨6 .￨6 FAILED￨6 ;￨6 }￨5 index￨5 .￨5 add￨5 (￨5 new￨5 IFileDocument￨5 (￨5 resource￨5 ,￨5 contents￨5 )￨5 ,￨5 new￨5 SourceIndexer￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 monitor￨5 .￨5 exitWrite￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 if￨4 (￨4 JobManager￨5 .￨5 VERBOSE￨5 )￨4 {￨4 JobManager￨5 .￨5 verbose￨5 (￨5 (￨5 (￨5 "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>index<seq2seq4repair_space>"￨5 +￨5 (￨5 this￨5 .￨5 resource￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>because<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>following<seq2seq4repair_space>exception:"￨5 )￨5 )￨5 ;￨5 e￨5 .￨5 printStackTrace￨5 (￨5 )￨5 ;￨5 }￨4 return￨4 IJob￨4 .￨4 FAILED￨4 ;￨4 }￨3 return￨3 IJob￨3 .￨3 COMPLETE￨3 ;￨3 }￨2 private￨2 char￨2 [￨2 ]￨2 getContents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 initializeContents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CreateVFolderOnMessageCommand￨1 extends￨1 FolderCommand￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.columba.mail.folder.command"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VFOLDER_ON_SUBJECT￨2 =￨2 "Subject"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VFOLDER_ON_FROM￨2 =￨2 "From"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VFOLDER_ON_TO￨2 =￨2 "To"￨2 ;￨2 private￨2 String￨2 vfolderType￨2 ;￨2 private￨2 MessageFolder￨2 parentFolder￨2 =￨2 null￨2 ;￨2 private￨2 VirtualFolder￨2 vfolder￨2 =￨2 null￨2 ;￨2 public￨2 CreateVFolderOnMessageCommand￨2 (￨2 FrameMediator￨3 frameController￨3 ,￨3 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 ,￨3 String￨3 vfolderType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateGUI￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 treeModel￨3 .￨3 nodeStructureChanged￨3 (￨3 parentFolder￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 vfolder￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 new￨4 org￨4 .￨4 columba￨4 .￨4 mail￨4 .￨4 gui￨4 .￨4 config￨4 .￨4 filter￨4 .￨4 ConfigFrame￨4 (￨4 getFrameMediator￨4 (￨4 )￨4 .￨4 getView￨4 (￨4 )￨4 .￨4 getFrame￨4 (￨4 )￨4 ,￨4 vfolder￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 void￨2 execute￨2 (￨2 WorkerStatusController￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 VirtualFolder￨2 createVirtualFolder￨2 (￨2 String￨3 folderName￨3 ,￨3 String￨3 headerField￨3 ,￨3 String￨3 pattern￨3 ,￨3 MessageFolder￨3 parent￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 StatisticalSummaryValuesTest￨1 extends￨1 TestCase￨1 {￨1 public￨2 StatisticalSummaryValuesTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSerialization￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testEqualsAndHashCode￨2 (￨2 )￨2 {￨2 StatisticalSummaryValues￨3 u￨3 =￨3 new￨3 StatisticalSummaryValues￨3 (￨3 1￨3 ,￨3 2￨3 ,￨3 3￨3 ,￨3 4￨3 ,￨3 5￨3 ,￨3 6￨3 )￨3 ;￨3 StatisticalSummaryValues￨3 t￨3 =￨3 null￨3 ;￨3 assertTrue￨3 (￨3 "reflexive"￨3 ,￨3 u￨3 .￨3 equals￨3 (￨3 u￨3 )￨3 )￨3 ;￨3 assertFalse￨3 (￨3 "non-null<seq2seq4repair_space>compared<seq2seq4repair_space>to<seq2seq4repair_space>null"￨3 ,￨3 u￨3 .￨3 equals￨3 (￨3 t￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 assertFalse￨3 (￨3 "wrong<seq2seq4repair_space>type"￨3 ,￨3 u￨3 .￨3 equals￨3 (￨3 Double￨3 .￨3 valueOf￨3 (￨3 0￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 t￨3 =￨3 new￨3 StatisticalSummaryValues￨3 (￨3 1￨3 ,￨3 2￨3 ,￨3 3￨3 ,￨3 4￨3 ,￨3 5￨3 ,￨3 6￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "instances<seq2seq4repair_space>with<seq2seq4repair_space>same<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>equal"￨3 ,￨3 t￨3 .￨3 equals￨3 (￨3 u￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 "hash<seq2seq4repair_space>code"￨3 ,￨3 u￨3 .￨3 hashCode￨3 (￨3 )￨3 ,￨3 t￨3 .￨3 hashCode￨3 (￨3 )￨3 )￨3 ;￨3 u￨3 =￨3 new￨3 StatisticalSummaryValues￨3 (￨3 Double￨3 .￨3 NaN￨3 ,￨3 2￨3 ,￨3 3￨3 ,￨3 4￨3 ,￨3 5￨3 ,￨3 6￨3 )￨3 ;￨3 t￨3 =￨3 new￨3 StatisticalSummaryValues￨3 (￨3 1￨3 ,￨3 Double￨3 .￨3 NaN￨3 ,￨3 3￨3 ,￨3 4￨3 ,￨3 5￨3 ,￨3 6￨3 )￨3 ;￨3 assertFalse￨3 (￨3 "instances<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>different<seq2seq4repair_space>data<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>different"￨3 ,￨3 (￨3 (￨3 u￨3 .￨3 equals￨3 (￨3 t￨3 )￨3 )￨3 ||￨3 (￨3 t￨3 .￨3 equals￨3 (￨3 u￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 verifyEquality￨2 (￨2 StatisticalSummaryValues￨3 s￨3 ,￨3 StatisticalSummaryValues￨3 u￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Composite￨1 extends￨1 Scrollable￨1 {￨1 Layout￨2 layout￨2 ;￨2 Control￨2 [￨2 ]￨2 tabList￨2 ;￨2 int￨2 layoutCount￨2 ;￨2 int￨2 backgroundMode￨2 ;￨2 boolean￨2 keyInputHappened￨2 ;￨2 Composite￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Composite￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 _getChildren￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 _getTabList￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 acceptsFirstResponder￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 int￨2 accessibilityAttributeNames￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 boolean￨2 accessibilityIsIgnored￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 public￨2 void￨2 changed￨2 (￨2 Control￨3 [￨3 ]￨3 changed￨3 )￨2 {￨2 }￨2 public￨2 Point￨2 computeSize￨2 (￨2 int￨3 wHint￨3 ,￨3 int￨3 hHint￨3 ,￨3 boolean￨3 changed￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 computeTabList￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 resize￨3 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 )￨2 {￨2 state￨3 |=￨3 CANVAS￨3 ;￨3 boolean￨3 scrolled￨3 =￨3 (￨3 (￨3 style￨3 )￨3 &￨3 (￨3 (￨3 SWT￨3 .￨3 V_SCROLL￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 H_SCROLL￨3 )￨3 )￨3 )￨3 !=￨3 0￨3 ;￨3 if￨3 (￨3 !￨4 scrolled￨4 )￨3 {￨3 state￨4 |=￨4 THEME_BACKGROUND￨4 ;￨4 }￨3 NSRect￨3 rect￨3 =￨3 new￨3 NSRect￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 scrolled￨4 ||￨4 (￨4 hasBorder￨4 (￨4 )￨4 )￨4 )￨3 {￨3 NSScrollView￨4 scrollWidget￨4 =￨4 (￨4 (￨4 NSScrollView￨4 )￨4 (￨4 new￨4 SWTScrollView￨4 (￨4 )￨4 .￨4 alloc￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 scrollWidget￨4 .￨4 initWithFrame￨4 (￨4 rect￨4 )￨4 ;￨4 scrollWidget￨4 .￨4 setDrawsBackground￨4 (￨4 false￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 style￨5 )￨5 &￨5 (￨5 SWT￨5 .￨5 H_SCROLL￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 scrollWidget￨5 .￨5 setHasHorizontalScroller￨5 (￨5 true￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 (￨5 style￨5 )￨5 &￨5 (￨5 SWT￨5 .￨5 V_SCROLL￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 scrollWidget￨5 .￨5 setHasVerticalScroller￨5 (￨5 true￨5 )￨5 ;￨5 }￨4 scrollWidget￨4 .￨4 setBorderType￨4 (￨4 (￨4 hasBorder￨4 (￨4 )￨4 ?￨4 OS￨4 .￨4 NSBezelBorder￨4 :￨4 OS￨4 .￨4 NSNoBorder￨4 )￨4 )￨4 ;￨4 scrollView￨4 =￨4 scrollWidget￨4 ;￨4 }￨3 <START_BUG>￨3 NSView￨3 widget￨3 =￨3 (￨3 (￨3 NSView￨3 )￨3 (￨3 new￨3 SWTView￨3 (￨3 )￨3 .￨3 alloc￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 widget￨3 .￨3 initWithFrame￨3 (￨3 rect￨3 )￨3 ;￨3 view￨3 =￨3 widget￨3 ;￨3 }￨2 void￨2 doCommandBySelector￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 selector￨3 )￨2 {￨2 }￨2 void￨2 drawWidget￨2 (￨2 int￨3 id￨3 ,￨3 NSGraphicsContext￨3 context￨3 ,￨3 NSRect￨3 rect￨3 ,￨3 boolean￨3 sendPaint￨3 )￨2 {￨2 }￨2 void￨2 flagsChanged￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 Composite￨2 findDeferredControl￨2 (￨2 )￨2 {￨2 }￨2 Menu￨2 [￨2 ]￨2 findMenus￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 void￨2 fixChildren￨2 (￨2 Shell￨3 newShell￨3 ,￨3 Shell￨3 oldShell￨3 ,￨3 Decorations￨3 newDecorations￨3 ,￨3 Decorations￨3 oldDecorations￨3 ,￨3 Menu￨3 [￨3 ]￨3 menus￨3 )￨2 {￨2 }￨2 void￨2 fixTabList￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getBackgroundMode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Control￨2 [￨2 ]￨2 getChildren￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getChildrenCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Layout￨2 getLayout￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getLayoutDeferred￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Control￨2 [￨2 ]￨2 getTabList￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 hooksKeys￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 insertText￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 string￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLayoutDeferred￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isOpaque￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 boolean￨2 isTabGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 keyDown￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 layout￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 layout￨2 (￨2 boolean￨3 changed￨3 )￨2 {￨2 }￨2 public￨2 void￨2 layout￨2 (￨2 boolean￨3 changed￨3 ,￨3 boolean￨3 all￨3 )￨2 {￨2 }￨2 public￨2 void￨2 layout￨2 (￨2 Control￨3 [￨3 ]￨3 changed￨3 )￨2 {￨2 }￨2 void￨2 markLayout￨2 (￨2 boolean￨3 changed￨3 ,￨3 boolean￨3 all￨3 )￨2 {￨2 }￨2 Point￨2 minimumSize￨2 (￨2 int￨3 wHint￨3 ,￨3 int￨3 Hint￨3 ,￨3 boolean￨3 changed￨3 )￨2 {￨2 }￨2 void￨2 pageDown￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 sender￨3 )￨2 {￨2 }￨2 void￨2 pageUp￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 sender￨3 )￨2 {￨2 }￨2 void￨2 reflectScrolledClipView￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 aClipView￨3 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 removeControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 void￨2 resized￨2 (￨2 )￨2 {￨2 }￨2 void￨2 scrollWheel￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBackgroundMode￨2 (￨2 int￨3 mode￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 setFocus￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setLayout￨2 (￨2 Layout￨3 layout￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLayoutDeferred￨2 (￨2 boolean￨3 defer￨3 )￨2 {￨2 }￨2 boolean￨2 setMarkedText_selectedRange￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 string￨3 ,￨3 int￨3 range￨3 )￨2 {￨2 }￨2 boolean￨2 setScrollBarVisible￨2 (￨2 ScrollBar￨3 bar￨3 ,￨3 boolean￨3 visible￨3 )￨2 {￨2 }￨2 boolean￨2 setTabGroupFocus￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTabList￨2 (￨2 Control￨3 [￨3 ]￨3 tabList￨3 )￨2 {￨2 }￨2 int￨2 traversalCode￨2 (￨2 int￨3 key￨3 ,￨3 NSEvent￨3 theEvent￨3 )￨2 {￨2 }￨2 void￨2 updateBackgroundMode￨2 (￨2 )￨2 {￨2 }￨2 void￨2 updateLayout￨2 (￨2 boolean￨3 all￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 JMSMessageDrivenBeanTestCase￨1 {￨1 @￨2 Deployment￨2 public￨2 static￨2 Archive￨2 <￨2 ?￨2 >￨2 deployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSendMessage￨2 (￨2 )￨2 throws￨2 JMSException￨2 ,￨2 NamingException￨2 (￨2 )￨2 {￨2 final￨3 InitialContext￨3 ctx￨3 =￨3 new￨3 InitialContext￨3 (￨3 )￨3 ;￨3 final￨3 QueueConnectionFactory￨3 factory￨3 =￨3 (￨3 (￨3 QueueConnectionFactory￨3 )￨3 (￨3 ctx￨3 .￨3 lookup￨3 (￨3 "java:/JmsXA"￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 QueueConnection￨3 connection￨3 =￨3 factory￨3 .￨3 createQueueConnection￨3 (￨3 )￨3 ;￨3 connection￨3 .￨3 start￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 final￨4 QueueSession￨4 session￨4 =￨4 connection￨4 .￨4 createQueueSession￨4 (￨4 false￨4 ,￨4 AUTO_ACKNOWLEDGE￨4 )￨4 ;￨4 final￨4 Queue￨4 replyDestination￨4 =￨4 session￨4 .￨4 createTemporaryQueue￨4 (￨4 )￨4 ;￨4 final￨4 QueueReceiver￨4 receiver￨4 =￨4 session￨4 .￨4 createReceiver￨4 (￨4 replyDestination￨4 )￨4 ;￨4 final￨4 Message￨4 message￨4 =￨4 session￨4 .￨4 createTextMessage￨4 (￨4 "Test"￨4 )￨4 ;￨4 message￨4 .￨4 setJMSReplyTo￨4 (￨4 replyDestination￨4 )￨4 ;￨4 <START_BUG>￨4 final￨4 Destination￨4 destination￨4 =￨4 (￨4 (￨4 Destination￨4 )￨4 (￨4 ctx￨4 .￨4 lookup￨4 (￨4 "java:jboss/jms/queue/test"￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 final￨4 MessageProducer￨4 producer￨4 =￨4 session￨4 .￨4 createProducer￨4 (￨4 destination￨4 )￨4 ;￨4 producer￨4 .￨4 send￨4 (￨4 message￨4 )￨4 ;￨4 producer￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 final￨4 Message￨4 reply￨4 =￨4 receiver￨4 .￨4 receive￨4 (￨4 1000￨4 )￨4 ;￨4 assertNotNull￨4 (￨4 reply￨4 )￨4 ;￨4 final￨4 String￨4 result￨4 =￨4 (￨4 (￨4 javax￨4 .￨4 jms￨4 .￨4 TextMessage￨4 )￨4 (￨4 reply￨4 )￨4 )￨4 .￨4 getText￨4 (￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "replying<seq2seq4repair_space>Test"￨4 ,￨4 result￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 LuceneSegmentInputSplitTest￨1 extends￨1 AbstractLuceneStorageTest￨1 {￨1 private￨2 Configuration￨2 configuration￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 before￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 configuration￨3 =￨3 new￨3 Configuration￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 After￨2 public￨2 void￨2 after￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testGetSegment￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 (￨2 expected￨2 =￨2 IllegalArgumentException￨2 .￨2 class￨2 )￨2 public￨2 void￨2 testGetSegmentNonExistingSegment￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 private￨2 void￨2 assertSegmentContainsOneDoc￨2 (￨2 String￨2 segmentName￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DeleteResourceElementsOperation￨1 extends￨1 MultiOperation￨1 {￨1 protected￨2 DeleteResourceElementsOperation￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elementsToProcess￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 private￨2 void￨2 deletePackageFragment￨2 (￨2 IPackageFragment￨2 frag￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 IResource￨3 res￨3 =￨3 frag￨3 .￨3 getResource￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 res￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 res￨4 .￨4 getType￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 IResource￨4 .￨4 FOLDER￨4 )￨4 )￨4 )￨3 {￨3 IJavaElement￨4 [￨4 ]￨4 childrenOfInterest￨4 =￨4 frag￨4 .￨4 getChildren￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 childrenOfInterest￨5 .￨5 length￨5 )￨5 >￨5 0￨5 )￨4 {￨4 IResource￨5 [￨5 ]￨5 resources￨5 =￨5 new￨5 IResource￨5 [￨5 childrenOfInterest￨5 .￨5 length￨5 ]￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 childrenOfInterest￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 resources￨6 [￨6 i￨6 ]￨6 =￨6 childrenOfInterest￨6 [￨6 i￨6 ]￨6 .￨6 getCorrespondingResource￨6 (￨6 )￨6 ;￨6 }￨5 deleteResources￨5 (￨5 resources￨5 ,￨5 fForce￨5 )￨5 ;￨5 }￨4 Object￨4 [￨4 ]￨4 nonJavaResources￨4 =￨4 frag￨4 .￨4 getNonJavaResources￨4 (￨4 )￨4 ;￨4 int￨4 actualResourceCount￨4 =￨4 0￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 nonJavaResources￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 instanceof￨6 IResource￨6 )￨5 {￨5 actualResourceCount￨6 ++￨6 ;￨6 }￨5 }￨4 IResource￨4 [￨4 ]￨4 actualNonJavaResources￨4 =￨4 new￨4 IResource￨4 [￨4 actualResourceCount￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 nonJavaResources￨5 .￨5 length￨5 ,￨5 index￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 instanceof￨6 IResource￨6 )￨5 {￨5 actualNonJavaResources￨6 [￨6 (￨6 index￨6 ++￨6 )￨6 ]￨6 =￨6 (￨6 (￨6 IResource￨6 )￨6 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 deleteResources￨4 (￨4 actualNonJavaResources￨4 ,￨4 fForce￨4 )￨4 ;￨4 IResource￨4 [￨4 ]￨4 remainingFiles￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 remainingFiles￨5 =￨5 (￨5 (￨5 IFolder￨5 )￨5 (￨5 res￨5 )￨5 )￨5 .￨5 members￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 CoreException￨5 ce￨5 )￨4 {￨4 throw￨5 new￨5 JavaModelException￨5 (￨5 ce￨5 )￨5 ;￨5 }￨4 boolean￨4 isEmpty￨4 =￨4 true￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 length￨5 =￨5 remainingFiles￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 IResource￨5 file￨5 =￨5 remainingFiles￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 file￨6 instanceof￨6 IFile￨6 )￨5 {￨5 this￨6 .￨6 deleteResource￨6 (￨6 file￨6 ,￨6 (￨6 (￨6 IResource￨6 .￨6 FORCE￨6 )￨6 |￨6 (￨6 IResource￨6 .￨6 KEEP_HISTORY￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 isEmpty￨6 =￨6 false￨6 ;￨6 }￨5 }￨4 <START_BUG>￨4 if￨4 (￨4 isEmpty￨4 )￨4 {￨4 <END_BUG>￨4 IResource￨4 fragResource￨4 =￨4 frag￨4 .￨4 getResource￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 fragResource￨5 !=￨5 null￨5 )￨4 {￨4 deleteEmptyPackageFragment￨5 (￨5 frag￨5 ,￨5 false￨5 ,￨5 fragResource￨5 .￨5 getParent￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 String￨2 getMainTaskName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 processElement￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 verify￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 OperationCoordinatorStepHandler￨1 {￨1 private￨2 final￨2 LocalHostControllerInfo￨2 localHostControllerInfo￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 ProxyController￨2 >￨2 hostProxies￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 ProxyController￨2 >￨2 serverProxies￨2 ;￨2 private￨2 final￨2 OperationSlaveStepHandler￨2 localSlaveHandler￨2 ;￨2 private￨2 volatile￨2 ExecutorService￨2 executorService￨2 ;￨2 OperationCoordinatorStepHandler￨2 (￨2 final￨3 LocalHostControllerInfo￨3 localHostControllerInfo￨3 ,￨3 final￨3 Map￨3 <￨3 String￨3 ,￨3 ProxyController￨3 >￨3 hostProxies￨3 ,￨3 final￨3 Map￨3 <￨3 String￨3 ,￨3 ProxyController￨3 >￨3 serverProxies￨3 ,￨3 final￨3 OperationSlaveStepHandler￨3 localSlaveHandler￨3 )￨2 {￨2 }￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExecutorService￨2 (￨2 ExecutorService￨3 executorService￨3 )￨2 {￨2 }￨2 private￨2 ExecutorService￨2 getExecutorService￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 routetoMasterDomainController￨2 (￨2 OperationContext￨3 context￨3 ,￨3 ModelNode￨3 operation￨3 )￨2 {￨2 <START_BUG>￨3 context￨3 .￨3 getFailureDescription￨3 (￨3 )￨3 .￨3 set￨3 (￨3 String￨3 .￨3 format￨3 (￨3 (￨3 "Operation<seq2seq4repair_space>%s<seq2seq4repair_space>for<seq2seq4repair_space>address<seq2seq4repair_space>%s<seq2seq4repair_space>can<seq2seq4repair_space>only<seq2seq4repair_space>handled<seq2seq4repair_space>by<seq2seq4repair_space>the<seq2seq4repair_space>"￨3 +￨3 "master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller;<seq2seq4repair_space>this<seq2seq4repair_space>host<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>the<seq2seq4repair_space>master<seq2seq4repair_space>Domain<seq2seq4repair_space>Controller"￨3 )￨3 ,￨3 operation￨3 .￨3 get￨3 (￨3 OP￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ,￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 executeDirect￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 executeTwoPhaseOperation￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 OperationRouting￨2 routing￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 storeDeploymentContent￨2 (￨2 ModelNode￨2 opNode￨2 ,￨2 OperationContext￨2 context￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasStorableContent￨2 (￨2 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 List￨2 <￨2 String￨2 >￨2 CONTENT_ADDITION_PARAMETERS￨2 =￨2 Arrays￨2 .￨2 asList￨2 (￨2 INPUT_STREAM_INDEX￨2 ,￨2 BYTES￨2 ,￨2 URL￨2 )￨2 ;￨2 private￨2 static￨2 boolean￨2 hasValidContentAdditionParameterDefined￨2 (￨2 ModelNode￨3 item￨3 )￨2 {￨2 }￨2 }￨1
class￨1 Substring￨1 extends￨1 AbstractVal￨1 implements￨1 Val￨1 {￨1 private￨2 final￨2 Val￨2 _val1￨2 ;￨2 private￨2 final￨2 Val￨2 _val2￨2 ;￨2 private￨2 Joins￨2 _joins￨2 =￨2 null￨2 ;￨2 private￨2 ClassMetaData￨2 _meta￨2 =￨2 null￨2 ;￨2 public￨2 Substring￨2 (￨2 Val￨3 val1￨3 ,￨3 Val￨3 val2￨3 )￨2 {￨2 }￨2 public￨2 ClassMetaData￨2 getMetaData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setMetaData￨2 (￨2 ClassMetaData￨3 meta￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVariable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setImplicitType￨2 (￨2 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initialize￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 boolean￨3 nullTest￨3 )￨2 {￨2 }￨2 public￨2 Joins￨2 getJoins￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 toDataStoreValue￨2 (￨2 Object￨3 val￨3 ,￨3 JDBCStore￨3 store￨3 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 pks￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectColumns￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 pks￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 groupBy￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 <START_BUG>￨3 sel￨3 .￨3 groupBy￨3 (￨3 newSQLBuffer￨3 (￨3 sel￨3 ,￨3 store￨3 ,￨3 params￨3 ,￨3 fetch￨3 )￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 orderBy￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 asc￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 private￨2 SQLBuffer￨2 newSQLBuffer￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 load￨2 (￨2 Result￨2 res￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 JDBCFetchConfiguration￨2 fetch￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasVariable￨2 (￨2 Variable￨3 var￨3 )￨2 {￨2 }￨2 public￨2 void￨2 calculateValue￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 Val￨3 other￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clearParameters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 length￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 appendTo￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 int￨3 index￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LoggerLevelChange￨1 extends￨1 AbstractModelUpdateHandler￨1 {￨1 static￨2 final￨2 String￨2 OPERATION_NAME￨2 =￨2 "change-log-level"￨2 ;￨2 static￨2 final￨2 LoggerLevelChange￨2 INSTANCE￨2 =￨2 new￨2 LoggerLevelChange￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 protected￨2 void￨2 updateModel￨2 (￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 ModelNode￨2 model￨2 ,￨2 final￨2 ServiceVerificationHandler￨2 verificationHandler￨2 ,￨2 final￨2 List￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 newControllers￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 PathAddress￨3 address￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 ;￨3 final￨3 String￨3 name￨3 =￨3 address￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 ModelNode￨3 level￨3 =￨3 CommonAttributes￨3 .￨3 LEVEL￨3 .￨3 validateResolvedOperation￨3 (￨3 model￨3 )￨3 ;￨3 <START_BUG>￨3 final￨3 ServiceRegistry￨3 serviceRegistry￨3 =￨3 context￨3 .￨3 getServiceRegistry￨3 (￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ServiceController￨3 <￨3 Logger￨3 >￨3 controller￨3 =￨3 (￨3 (￨3 ServiceController￨3 <￨3 Logger￨3 >￨3 )￨3 (￨3 serviceRegistry￨3 .￨3 getService￨3 (￨3 LogServices￨3 .￨3 loggerName￨3 (￨3 name￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 controller￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 level￨4 .￨4 isDefined￨4 (￨4 )￨4 )￨4 )￨3 {￨3 controller￨4 .￨4 getValue￨4 (￨4 )￨4 .￨4 setLevel￨4 (￨4 Level￨4 .￨4 parse￨4 (￨4 level￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractMessageChannel￨1 implements￨1 BeanNameAware￨1 ,￨1 MessageChannel￨1 {￨1 protected￨2 Log￨2 logger￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 getClass￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 String￨2 beanName￨2 ;￨2 private￨2 final￨2 ChannelInterceptorChain￨2 interceptorChain￨2 =￨2 new￨2 ChannelInterceptorChain￨2 (￨2 )￨2 ;￨2 public￨2 AbstractMessageChannel￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 setBeanName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getBeanName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInterceptors￨2 (￨2 List￨3 <￨3 ChannelInterceptor￨3 >￨3 interceptors￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addInterceptor￨2 (￨2 ChannelInterceptor￨3 interceptor￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 ChannelInterceptor￨2 >￨2 getInterceptors￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ChannelInterceptorChain￨2 getInterceptorChain￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 final￨2 boolean￨2 send￨2 (￨2 Message￨3 <￨3 ?￨3 >￨3 message￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 final￨2 boolean￨2 send￨2 (￨2 Message￨3 <￨3 ?￨3 >￨3 message￨3 ,￨3 long￨3 timeout￨3 )￨2 {￨2 Assert￨3 .￨3 notNull￨3 (￨3 message￨3 ,￨3 "Message<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3 )￨3 ;￨3 if￨3 (￨3 logger￨4 .￨4 isTraceEnabled￨4 (￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 logger￨4 .￨4 trace￨4 (￨4 (￨4 (￨4 (￨4 "["￨4 +￨4 (￨4 this￨4 .￨4 beanName￨4 )￨4 )￨4 +￨4 "]<seq2seq4repair_space>sending<seq2seq4repair_space>message<seq2seq4repair_space>"￨4 )￨4 +￨4 message￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 message￨3 =￨3 this￨3 .￨3 interceptorChain￨3 .￨3 preSend￨3 (￨3 message￨3 ,￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 message￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 boolean￨4 sent￨4 =￨4 sendInternal￨4 (￨4 message￨4 ,￨4 timeout￨4 )￨4 ;￨4 this￨4 .￨4 interceptorChain￨4 .￨4 postSend￨4 (￨4 message￨4 ,￨4 this￨4 ,￨4 sent￨4 )￨4 ;￨4 return￨4 sent￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 if￨4 (￨4 e￨5 instanceof￨5 MessagingException￨5 )￨4 {￨4 throw￨5 (￨5 (￨5 MessagingException￨5 )￨5 (￨5 e￨5 )￨5 )￨5 ;￨5 }￨4 throw￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 messaging￨4 .￨4 MessageDeliveryException￨4 (￨4 message￨4 ,￨4 (￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>send<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>channel<seq2seq4repair_space>'"￨4 +￨4 (￨4 this￨4 .￨4 getBeanName￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "'"￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 abstract￨2 boolean￨2 sendInternal￨2 (￨2 Message￨3 <￨3 ?￨3 >￨3 message￨3 ,￨3 long￨3 timeout￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PlatformLoggingMXBeanGetLoggerLevelHandler￨1 implements￨1 OperationStepHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 PlatformLoggingMXBeanGetLoggerLevelHandler￨2 INSTANCE￨2 =￨2 new￨2 PlatformLoggingMXBeanGetLoggerLevelHandler￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 SIGNATURE￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 final￨2 ParametersValidator￨2 parametersValidator￨2 =￨2 new￨2 ParametersValidator￨2 (￨2 )￨2 ;￨2 private￨2 PlatformLoggingMXBeanGetLoggerLevelHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 parametersValidator￨3 .￨3 validate￨3 (￨3 operation￨3 )￨3 ;￨3 final￨3 String￨3 loggerName￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 LOGGER_NAME￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Object￨4 level￨4 =￨4 ManagementFactory￨4 .￨4 getPlatformMBeanServer￨4 (￨4 )￨4 .￨4 invoke￨4 (￨4 PLATFORM_LOGGING_OBJECT_NAME￨4 ,￨4 "getLoggerLevel"￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 PlatformLoggingMXBeanGetLoggerLevelHandler￨4 .￨4 SIGNATURE￨4 )￨4 ;￨4 final￨4 ModelNode￨4 result￨4 =￨4 context￨4 .￨4 getResult￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 level￨5 !=￨5 null￨5 )￨4 {￨4 result￨5 .￨5 set￨5 (￨5 level￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 JMRuntimeException￨4 e￨4 )￨3 {￨3 throw￨4 e￨4 ;￨4 }￨3 catch￨3 (￨3 JMException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 }￨1
@￨1 ServerSetup￨1 (￨1 NonExistingProfileTestCase￨1 .￨1 NonExistingProfileTestCaseSetup￨1 .￨1 class￨1 )￨1 @￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 NonExistingProfileTestCase￨1 extends￨1 AbstractLoggingTest￨1 {￨1 private￨2 static￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 NonExistingProfileTestCase￨2 .￨2 class￨2 )￨2 ;￨2 @￨2 ArquillianResource￨2 (￨2 LoggingServlet￨2 .￨2 class￨2 )￨2 URL￨2 url￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 LOG_FILE_NAME￨2 =￨2 "non-existing-profile-test.log"￨2 ;￨2 private￨2 static￨2 File￨2 loggingTestLog￨2 ;￨2 static￨2 class￨2 NonExistingProfileTestCaseSetup￨2 extends￨2 AbstractMgmtServerSetupTask￨2 {￨2 @￨3 Override￨3 protected￨3 void￨3 doSetup￨3 (￨3 ManagementClient￨3 managementClient￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 tearDown￨3 (￨3 ManagementClient￨3 managementClient￨3 ,￨3 String￨3 containerId￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Deployment￨2 public￨2 static￨2 WebArchive￨2 createDeployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 AfterClass￨2 @￨2 RunAsClient￨2 public￨2 static￨2 void￨2 cleanCustomFile￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 @￨2 RunAsClient￨2 public￨2 void￨2 warningMessageTest￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 BufferedReader￨3 br￨3 =￨3 new￨3 BufferedReader￨3 (￨3 new￨3 InputStreamReader￨3 (￨3 new￨3 FileInputStream￨3 (￨3 NonExistingProfileTestCase￨3 .￨3 loggingTestLog￨3 )￨3 ,￨3 StandardCharsets￨3 .￨3 UTF_8￨3 )￨3 )￨3 ;￨3 String￨3 line￨3 ;￨3 boolean￨3 warningFound￨3 =￨3 false￨3 ;￨3 while￨3 (￨3 (￨4 line￨4 =￨4 br￨4 .￨4 readLine￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 line￨4 .￨4 contains￨4 (￨4 "JBAS011509"￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 warningFound￨4 =￨4 true￨4 ;￨4 break￨4 ;￨4 }￨3 br￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 Assert￨3 .￨3 assertTrue￨3 (￨3 warningFound￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 @￨2 RunAsClient￨2 public￨2 void￨2 defaultLoggingTest￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ForStatement￨1 extends￨1 Statement￨1 {￨1 private￨2 ASTNode￨2 .￨2 NodeList￨2 initializers￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 true￨2 ,￨2 Expression￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 Expression￨2 optionalConditionExpression￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 updaters￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 true￨2 ,￨2 Expression￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 Statement￨2 body￨2 =￨2 null￨2 ;￨2 ForStatement￨2 (￨2 AST￨2 ast￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getNodeType￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 ForStatement￨3 result￨3 =￨3 new￨3 ForStatement￨3 (￨3 target￨3 )￨3 ;￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setLeadingComment￨3 (￨3 getLeadingComment￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 initializers￨3 (￨3 )￨3 .￨3 addAll￨3 (￨3 ASTNode￨3 .￨3 copySubtrees￨3 (￨3 target￨3 ,￨3 initializers￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 setExpression￨3 (￨3 (￨3 (￨3 Expression￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getExpression￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 updaters￨3 (￨3 )￨3 .￨3 addAll￨3 (￨3 ASTNode￨3 .￨3 copySubtrees￨3 (￨3 target￨3 ,￨3 updaters￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 setBody￨3 (￨3 (￨3 (￨3 Statement￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getBody￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 boolean￨2 subtreeMatch￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 List￨2 initializers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Expression￨2 getExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExpression￨2 (￨2 Expression￨3 expression￨3 )￨2 {￨2 }￨2 public￨2 List￨2 updaters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Statement￨2 getBody￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBody￨2 (￨2 Statement￨3 statement￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BeanShell￨1 {￨1 public￨2 static￨2 void￨2 evalSelection￨2 (￨2 View￨3 view￨3 ,￨3 JEditTextArea￨3 textArea￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 showEvaluateDialog￨2 (￨2 View￨3 view￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 showEvaluateLinesDialog￨2 (￨2 View￨3 view￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 runScript￨2 (￨2 View￨3 view￨3 ,￨3 String￨3 path￨3 ,￨3 Reader￨3 in￨3 ,￨3 boolean￨3 ownNamespace￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 _runScript￨2 (￨2 View￨2 view￨2 ,￨2 String￨2 path￨2 ,￨2 Reader￨2 in￨2 ,￨2 boolean￨2 ownNamespace￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 eval￨2 (￨2 View￨3 view￨3 ,￨3 NameSpace￨3 namespace￨3 ,￨3 String￨3 command￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 _eval￨2 (￨2 View￨2 view￨2 ,￨2 NameSpace￨2 namespace￨2 ,￨2 String￨2 command￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 BshMethod￨2 cacheBlock￨2 (￨2 String￨2 id￨2 ,￨2 String￨2 code￨2 ,￨2 boolean￨2 namespace￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 String￨3 name￨3 =￨3 "__internal_"￨3 +￨3 id￨3 ;￨3 if￨3 (￨3 namespace￨4 )￨3 {￨3 <START_BUG>￨4 BeanShell￨4 .￨4 _eval￨4 (￨4 null￨4 ,￨4 BeanShell￨4 .￨4 global￨4 ,￨4 (￨4 (￨4 (￨4 name￨4 +￨4 "(ns)<seq2seq4repair_space>{\this.callstack.set(0,ns);\n"￨4 )￨4 +￨4 code￨4 )￨4 +￨4 "\n}"￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 BeanShell￨4 .￨4 global￨4 .￨4 getMethod￨4 (￨4 name￨4 ,￨4 new￨4 Class￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 BeanShell￨4 .￨4 _eval￨4 (￨4 null￨4 ,￨4 BeanShell￨4 .￨4 global￨4 ,￨4 (￨4 (￨4 (￨4 name￨4 +￨4 "()<seq2seq4repair_space>{\n"￨4 )￨4 +￨4 code￨4 )￨4 +￨4 "\n}"￨4 )￨4 )￨4 ;￨4 return￨4 BeanShell￨4 .￨4 global￨4 .￨4 getMethod￨4 (￨4 name￨4 ,￨4 new￨4 Class￨4 [￨4 0￨4 ]￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 Object￨2 runCachedBlock￨2 (￨2 BshMethod￨2 method￨2 ,￨2 View￨2 view￨2 ,￨2 NameSpace￨2 namespace￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isScriptRunning￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 NameSpace￨2 getNameSpace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 runScript￨2 (￨2 View￨3 view￨3 ,￨3 String￨3 path￨3 ,￨3 boolean￨3 ownNamespace￨3 ,￨3 boolean￨3 rethrowBshErrors￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 runScript￨2 (￨2 View￨3 view￨3 ,￨3 String￨3 path￨3 ,￨3 Reader￨3 in￨3 ,￨3 boolean￨3 ownNamespace￨3 ,￨3 boolean￨3 rethrowBshErrors￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 eval￨2 (￨2 View￨3 view￨3 ,￨3 String￨3 command￨3 ,￨3 boolean￨3 rethrowBshErrors￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 eval￨2 (￨2 View￨3 view￨3 ,￨3 NameSpace￨3 namespace￨3 ,￨3 String￨3 command￨3 ,￨3 boolean￨3 rethrowBshErrors￨3 )￨2 {￨2 }￨2 static￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 Object￨2 [￨2 ]￨2 NO_ARGS￨2 =￨2 new￨2 Object￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 static￨2 Interpreter￨2 interpForMethods￨2 ;￨2 private￨2 static￨2 NameSpace￨2 global￨2 ;￨2 private￨2 static￨2 boolean￨2 running￨2 ;￨2 private￨2 static￨2 void￨2 unwrapException￨2 (￨2 Exception￨2 e￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 handleException￨2 (￨2 View￨3 view￨3 ,￨3 String￨3 path￨3 ,￨3 Throwable￨3 t￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Interpreter￨2 createInterpreter￨2 (￨2 NameSpace￨3 nameSpace￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PackageTest￨1 extends￨1 JMeterTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 public￨2 PackageTest￨2 (￨2 String￨3 arg0￨3 )￨2 {￨2 }￨2 private￨2 static￨2 CSVRead￨2 setCSVReadParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 StringFromFile￨2 SFFParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 ,￨2 String￨2 p4￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 SplitFunction￨2 SplitParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 BeanShell￨2 BSHFParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Collection￨2 MakeParams￨2 (￨2 String￨3 p1￨3 ,￨3 String￨3 p2￨3 ,￨3 String￨3 p3￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JMeterContext￨2 jmctx￨2 =￨2 null￨2 ;￨2 private￨2 JMeterVariables￨2 vars￨2 =￨2 null￨2 ;￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 BSH1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 splitTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest5￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 CSVRead￨2 cr1￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr2￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr3￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr4￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr5￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr6￨2 ;￨2 private￨2 static￨2 class￨2 Baton￨2 {￨2 void￨3 pass￨3 (￨3 )￨3 {￨3 }￨3 void￨3 done￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 final￨2 PackageTest￨2 .￨2 Baton￨2 baton￨2 =￨2 new￨2 PackageTest￨2 .￨2 Baton￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 CSVThread1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVThread2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVRun￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVParams￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVSetup￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSValias￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVNoFile￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVBlankLine￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestNull￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestrowNum￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestColumns￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestDefault￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 XPathFileContainer￨3 f￨3 =￨3 new￨3 XPathFileContainer￨3 (￨3 "../build.xml"￨3 ,￨3 "/project/@default"￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 f￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "Not<seq2seq4repair_space>empty"￨3 ,￨3 (￨3 (￨3 f￨3 .￨3 size￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 assertEquals￨3 (￨3 "all"￨3 ,￨3 f￨3 .￨3 getXPathString￨3 (￨3 0￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 XPathEmpty￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathNoFile￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathFile1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathFile2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 XPath￨2 sxp1￨2 ;￨2 private￨2 static￨2 XPath￨2 sxp2￨2 ;￨2 public￨2 void￨2 XPathSetup1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathSetup2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathThread1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathThread2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 XPath￨2 setupXPath￨2 (￨2 String￨2 file￨2 ,￨2 String￨2 expr￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 randomTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 variableTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 evalTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 evalTest2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 sumTest￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkSum￨2 (￨2 AbstractFunction￨2 func￨2 ,￨2 String￨2 value￨2 ,￨2 String￨2 [￨2 ]￨2 addends￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkSumNoVar￨2 (￨2 AbstractFunction￨2 func￨2 ,￨2 String￨2 value￨2 ,￨2 String￨2 [￨2 ]￨2 addends￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AnnotProxyFieldValueFactory￨1 implements￨1 IFieldValueFactory￨1 {￨1 private￨2 final￨2 ISpringContextLocator￨2 contextLocator￨2 ;￨2 private￨2 final￨2 ConcurrentHashMap￨2 <￨2 SpringBeanLocator￨2 ,￨2 Object￨2 >￨2 cache￨2 =￨2 Generics￨2 .￨2 newConcurrentHashMap￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 ConcurrentHashMap￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 String￨2 >￨2 beanNameCache￨2 =￨2 Generics￨2 .￨2 newConcurrentHashMap￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 boolean￨2 wrapInProxies￨2 ;￨2 public￨2 AnnotProxyFieldValueFactory￨2 (￨2 ISpringContextLocator￨3 contextLocator￨3 )￨2 {￨2 }￨2 public￨2 AnnotProxyFieldValueFactory￨2 (￨2 ISpringContextLocator￨3 contextLocator￨3 ,￨3 boolean￨3 wrapInProxies￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getFieldValue￨2 (￨2 Field￨3 field￨3 ,￨3 Object￨3 fieldOwner￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 field￨3 .￨3 isAnnotationPresent￨3 (￨3 SpringBean￨3 .￨3 class￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 SpringBeanLocator￨3 locator￨3 =￨3 new￨3 SpringBeanLocator￨3 (￨3 getBeanName￨3 (￨3 field￨3 )￨3 ,￨3 field￨3 .￨3 getType￨3 (￨3 )￨3 ,￨3 contextLocator￨3 )￨3 ;￨3 Object￨3 cachedValue￨3 =￨3 cache￨3 .￨3 get￨3 (￨3 locator￨3 )￨3 ;￨3 if￨3 (￨3 cachedValue￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 cachedValue￨4 ;￨4 }￨3 final￨3 Object￨3 target￨3 ;￨3 if￨3 (￨3 wrapInProxies￨4 )￨3 {￨3 target￨4 =￨4 LazyInitProxyFactory￨4 .￨4 createProxy￨4 (￨4 field￨4 .￨4 getType￨4 (￨4 )￨4 ,￨4 locator￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 target￨4 =￨4 locator￨4 .￨4 locateProxyTarget￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 locator￨4 .￨4 isSingletonBean￨4 (￨4 )￨4 )￨3 {￨3 cache￨4 .￨4 put￨4 (￨4 locator￨4 ,￨4 target￨4 )￨4 ;￨4 }￨3 return￨3 target￨3 ;￨3 }￨3 return￨3 null￨3 ;￨3 }￨2 private￨2 String￨2 getBeanName￨2 (￨2 final￨3 Field￨3 field￨3 )￨2 {￨2 }￨2 private￨2 final￨2 String￨2 getBeanNameOfClass￨2 (￨2 ApplicationContext￨3 ctx￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 clazz￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsField￨2 (￨2 Field￨3 field￨3 )￨2 {￨2 }￨2 }￨1
class￨1 PrefixMapper￨1 {￨1 private￨2 static￨2 int￨2 debug￨2 =￨2 1￨2 ;￨2 SimpleHashtable￨2 vhostMaps￨2 =￨2 new￨2 SimpleHashtable￨2 (￨2 )￨2 ;￨2 SimpleHashtable￨2 vhostMapsWC￨2 =￨2 new￨2 SimpleHashtable￨2 (￨2 )￨2 ;￨2 SimpleHashtable￨2 prefixMappedServlets￨2 ;￨2 SimpleHashtable￨2 exactMappedServlets￨2 ;￨2 SimpleHashtable￨2 mapCache￨2 ;￨2 boolean￨2 mapCacheEnabled￨2 =￨2 false￨2 ;￨2 boolean￨2 ignoreCase￨2 =￨2 false￨2 ;￨2 public￨2 PrefixMapper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setMapCache￨2 (￨2 boolean￨3 v￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIgnoreCase￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeAllMappings￨2 (￨2 String￨3 host￨3 ,￨3 Context￨3 ctx￨3 )￨2 {￨2 PrefixMapper￨3 vmap￨3 =￨3 this￨3 ;￨3 if￨3 (￨3 host￨4 !=￨4 null￨4 )￨3 {￨3 host￨4 =￨4 host￨4 .￨4 toLowerCase￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 host￨5 .￨5 startsWith￨5 (￨5 "*"￨5 )￨5 )￨4 {￨4 vmap￨5 =￨5 (￨5 (￨5 PrefixMapper￨5 )￨5 (￨5 vhostMapsWC￨5 .￨5 get￨5 (￨5 host￨5 .￨5 substring￨5 (￨5 1￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 vmap￨5 =￨5 (￨5 (￨5 PrefixMapper￨5 )￨5 (￨5 vhostMaps￨5 .￨5 get￨5 (￨5 host￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 Enumeration￨3 en￨3 =￨3 vmap￨3 .￨3 prefixMappedServlets￨3 .￨3 keys￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 en￨4 .￨4 hasMoreElements￨4 (￨4 )￨4 )￨3 {￨3 String￨4 s￨4 =￨4 (￨4 (￨4 String￨4 )￨4 (￨4 en￨4 .￨4 nextElement￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 Container￨4 ct￨4 =￨4 (￨4 (￨4 Container￨4 )￨4 (￨4 vmap￨4 .￨4 prefixMappedServlets￨4 .￨4 get￨4 (￨4 s￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 ct￨4 .￨4 getContext￨4 (￨4 )￨4 )￨4 ==￨4 ctx￨4 )￨4 {￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 PrefixMapper￨5 .￨5 debug￨5 )￨5 >￨5 0￨5 )￨4 {￨4 ctx￨5 .￨5 log￨5 (￨5 (￨5 "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨5 +￨5 s￨5 )￨5 )￨5 ;￨5 }￨4 vmap￨4 .￨4 prefixMappedServlets￨4 .￨4 remove￨4 (￨4 s￨4 )￨4 ;￨4 }￨3 en￨3 =￨3 vmap￨3 .￨3 exactMappedServlets￨3 .￨3 keys￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 en￨4 .￨4 hasMoreElements￨4 (￨4 )￨4 )￨3 {￨3 String￨4 s￨4 =￨4 (￨4 (￨4 String￨4 )￨4 (￨4 en￨4 .￨4 nextElement￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 Container￨4 ct￨4 =￨4 (￨4 (￨4 Container￨4 )￨4 (￨4 vmap￨4 .￨4 exactMappedServlets￨4 .￨4 get￨4 (￨4 s￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 ct￨5 .￨5 getContext￨5 (￨5 )￨5 )￨5 ==￨5 ctx￨5 )￨4 {￨4 if￨5 (￨5 (￨6 PrefixMapper￨6 .￨6 debug￨6 )￨6 >￨6 0￨6 )￨5 {￨5 ctx￨6 .￨6 log￨6 (￨6 (￨6 "Remove<seq2seq4repair_space>mapping<seq2seq4repair_space>"￨6 +￨6 s￨6 )￨6 )￨6 ;￨6 }￨5 vmap￨5 .￨5 exactMappedServlets￨5 .￨5 remove￨5 (￨5 s￨5 )￨5 ;￨5 }￨4 }￨3 mapCache￨3 =￨3 new￨3 SimpleHashtable￨3 (￨3 )￨3 ;￨3 }￨2 void￨2 addMapping￨2 (￨2 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 void￨2 addExactMapping￨2 (￨2 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addMapping￨2 (￨2 String￨3 host￨3 ,￨3 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addMappings￨2 (￨2 Enumeration￨3 hostAliases￨3 ,￨3 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addExactMapping￨2 (￨2 String￨3 host￨3 ,￨3 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addExactMappings￨2 (￨2 Enumeration￨3 hostAliases￨3 ,￨3 String￨3 path￨3 ,￨3 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getLongestPrefixMatch￨2 (￨2 MessageBytes￨3 hostMB￨3 ,￨3 MessageBytes￨3 pathMB￨3 )￨2 {￨2 }￨2 }￨1
class￨1 MethodVerifier15￨1 extends￨1 MethodVerifier￨1 {￨1 MethodVerifier15￨2 (￨2 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 boolean￨2 areTypesEqual￨2 (￨2 TypeBinding￨3 one￨3 ,￨3 TypeBinding￨3 two￨3 )￨2 {￨2 }￨2 void￨2 checkAgainstInheritedMethods￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 methods￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 }￨2 boolean￨2 doesMethodOverride￨2 (￨2 MethodBinding￨3 method￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 boolean￨2 hasBoundedParameters￨2 (￨2 ParameterizedTypeBinding￨3 parameterizedType￨3 )￨2 {￨2 }￨2 boolean￨2 isReturnTypeSubstituable￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 isTypeSubstituable￨2 (￨2 TypeBinding￨3 one￨3 ,￨3 TypeBinding￨3 two￨3 )￨2 {￨2 if￨3 (￨3 one￨4 ==￨4 two￨4 )￨3 {￨3 return￨4 true￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 one￨4 .￨4 isArrayType￨4 (￨4 )￨4 )￨4 ||￨4 (￨4 two￨4 .￨4 isArrayType￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 one￨5 .￨5 isArrayType￨5 (￨5 )￨5 )￨5 !=￨5 (￨5 two￨5 .￨5 isArrayType￨5 (￨5 )￨5 )￨5 )￨4 {￨4 return￨5 false￨5 ;￨5 }￨4 ArrayBinding￨4 arrayOne￨4 =￨4 (￨4 (￨4 ArrayBinding￨4 )￨4 (￨4 one￨4 )￨4 )￨4 ;￨4 ArrayBinding￨4 arrayTwo￨4 =￨4 (￨4 (￨4 ArrayBinding￨4 )￨4 (￨4 two￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 arrayOne￨5 .￨5 dimensions￨5 )￨5 !=￨5 (￨5 arrayTwo￨5 .￨5 dimensions￨5 )￨5 )￨4 {￨4 return￨5 false￨5 ;￨5 }￨4 one￨4 =￨4 arrayOne￨4 .￨4 leafComponentType￨4 ;￨4 two￨4 =￨4 arrayTwo￨4 .￨4 leafComponentType￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 one￨4 .￨4 isBaseType￨4 (￨4 )￨4 )￨4 ||￨4 (￨4 two￨4 .￨4 isBaseType￨4 (￨4 )￨4 )￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 ReferenceBinding￨3 subType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 one￨3 )￨3 )￨3 ;￨3 ReferenceBinding￨3 superType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 two￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 CharOperation￨4 .￨4 equals￨4 (￨4 subType￨4 .￨4 compoundName￨4 ,￨4 superType￨4 .￨4 compoundName￨4 )￨4 )￨3 {￨3 return￨4 true￨4 ;￨4 }￨3 superType￨3 =￨3 BinaryTypeBinding￨3 .￨3 resolveType￨3 (￨3 superType￨3 ,￨3 this￨3 .￨3 environment￨3 ,￨3 true￨3 )￨3 ;￨3 subType￨3 =￨3 BinaryTypeBinding￨3 .￨3 resolveType￨3 (￨3 subType￨3 ,￨3 this￨3 .￨3 environment￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 superType￨4 .￨4 isInterface￨4 (￨4 )￨4 )￨3 {￨3 return￨4 subType￨4 .￨4 implementsInterface￨4 (￨4 superType￨4 ,￨4 true￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 (￨3 subType￨3 .￨3 isClass￨3 (￨3 )￨3 )￨3 &&￨3 (￨3 isSameClassOrSubclassOf￨3 (￨3 subType￨3 ,￨3 superType￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 TCPSyslogServer￨1 extends￨1 TCPNetSyslogServer￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOGGER￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 TCPSyslogServer￨2 .￨2 class￨2 )￨2 ;￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 TCPSyslogServer￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 @￨2 Override￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 TCPSyslogServer￨4 .￨4 LOGGER￨4 .￨4 debug￨4 (￨4 "Creating<seq2seq4repair_space>Syslog<seq2seq4repair_space>server<seq2seq4repair_space>socket"￨4 )￨4 ;￨4 this￨4 .￨4 serverSocket￨4 =￨4 createServerSocket￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 TCPSyslogServer￨4 .￨4 LOGGER￨4 .￨4 error￨4 (￨4 "ServerSocket<seq2seq4repair_space>creation<seq2seq4repair_space>failed."￨4 ,￨4 e￨4 )￨4 ;￨4 throw￨4 new￨4 SyslogRuntimeException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 while￨3 (￨3 !￨4 (￨4 this￨4 .￨4 shutdown￨4 )￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 final￨5 Socket￨5 socket￨5 =￨5 this￨5 .￨5 serverSocket￨5 .￨5 accept￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 TCPSyslogServer￨6 .￨6 LOGGER￨6 .￨6 isDebugEnabled￨6 (￨6 )￨6 )￨5 {￨5 TCPSyslogServer￨6 .￨6 LOGGER￨6 .￨6 debug￨6 (￨6 (￨6 "Handling<seq2seq4repair_space>Syslog<seq2seq4repair_space>client<seq2seq4repair_space>"￨6 +￨6 (￨6 socket￨6 .￨6 getInetAddress￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 new￨5 Thread￨5 (￨5 new￨5 TCPSyslogSocketHandler￨5 (￨5 this￨5 .￨5 sockets￨5 ,￨5 this￨5 ,￨5 socket￨5 )￨5 )￨5 .￨5 start￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 <START_BUG>￨5 TCPSyslogServer￨5 .￨5 LOGGER￨5 .￨5 error￨5 (￨5 "IOException<seq2seq4repair_space>occurred."￨5 ,￨5 e￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 WeblogicDeploymentTool￨1 extends￨1 GenericDeploymentTool￨1 {￨1 public￨2 static￨2 final￨2 String￨2 PUBLICID_EJB11￨2 =￨2 "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>1.1//EN"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PUBLICID_EJB20￨2 =￨2 "-//Sun<seq2seq4repair_space>Microsystems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>Enterprise<seq2seq4repair_space>JavaBeans<seq2seq4repair_space>2.0//EN"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PUBLICID_WEBLOGIC_EJB510￨2 =￨2 "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>5.1.0<seq2seq4repair_space>EJB//EN"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PUBLICID_WEBLOGIC_EJB600￨2 =￨2 "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>6.0.0<seq2seq4repair_space>EJB//EN"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PUBLICID_WEBLOGIC_EJB700￨2 =￨2 "-//BEA<seq2seq4repair_space>Systems,<seq2seq4repair_space>Inc.//DTD<seq2seq4repair_space>WebLogic<seq2seq4repair_space>7.0.0<seq2seq4repair_space>EJB//EN"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL51_EJB11_DTD_LOCATION￨2 =￨2 "/weblogic/ejb/deployment/xml/ejb-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL60_EJB11_DTD_LOCATION￨2 =￨2 "/weblogic/ejb20/dd/xml/ejb11-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL60_EJB20_DTD_LOCATION￨2 =￨2 "/weblogic/ejb20/dd/xml/ejb20-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL51_DTD_LOCATION￨2 =￨2 "/weblogic/ejb/deployment/xml/weblogic-ejb-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL60_51_DTD_LOCATION￨2 =￨2 "/weblogic/ejb20/dd/xml/weblogic510-ejb-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL60_DTD_LOCATION￨2 =￨2 "/weblogic/ejb20/dd/xml/weblogic600-ejb-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_WL70_DTD_LOCATION￨2 =￨2 "/weblogic/ejb20/dd/xml/weblogic700-ejb-jar.dtd"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 DEFAULT_COMPILER￨2 =￨2 "default"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 WL_DD￨2 =￨2 "weblogic-ejb-jar.xml"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 WL_CMP_DD￨2 =￨2 "weblogic-cmp-rdbms-jar.xml"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 COMPILER_EJB11￨2 =￨2 "weblogic.ejbc"￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 COMPILER_EJB20￨2 =￨2 "weblogic.ejbc20"￨2 ;￨2 private￨2 String￨2 jarSuffix￨2 =￨2 ".jar"￨2 ;￨2 private￨2 String￨2 weblogicDTD￨2 ;￨2 private￨2 String￨2 ejb11DTD￨2 ;￨2 private￨2 boolean￨2 keepgenerated￨2 =￨2 false￨2 ;￨2 private￨2 String￨2 ejbcClass￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 additionalArgs￨2 =￨2 ""￨2 ;￨2 private￨2 String￨2 additionalJvmArgs￨2 =￨2 ""￨2 ;￨2 private￨2 boolean￨2 keepGeneric￨2 =￨2 false￨2 ;￨2 private￨2 String￨2 compiler￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 alwaysRebuild￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 noEJBC￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 newCMP￨2 =￨2 false￨2 ;￨2 private￨2 Path￨2 wlClasspath￨2 =￨2 null￨2 ;￨2 private￨2 Vector￨2 sysprops￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 Integer￨2 jvmDebugLevel￨2 =￨2 null￨2 ;￨2 private￨2 FileUtils￨2 fileUtils￨2 =￨2 FileUtils￨2 .￨2 newFileUtils￨2 (￨2 )￨2 ;￨2 private￨2 File￨2 outputDir￨2 ;￨2 public￨2 void￨2 addSysproperty￨2 (￨2 Environment￨3 .￨3 Variable￨3 sysp￨3 )￨2 {￨2 }￨2 public￨2 Path￨2 createWLClasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setOutputDir￨2 (￨2 File￨3 outputDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWLClasspath￨2 (￨2 Path￨3 wlClasspath￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCompiler￨2 (￨2 String￨3 compiler￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRebuild￨2 (￨2 boolean￨3 rebuild￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setJvmDebugLevel￨2 (￨2 Integer￨3 jvmDebugLevel￨3 )￨2 {￨2 }￨2 public￨2 Integer￨2 getJvmDebugLevel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSuffix￨2 (￨2 String￨3 inString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setKeepgeneric￨2 (￨2 boolean￨3 inValue￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setKeepgenerated￨2 (￨2 String￨3 inValue￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setArgs￨2 (￨2 String￨3 args￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setJvmargs￨2 (￨2 String￨3 args￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEjbcClass￨2 (￨2 String￨3 ejbcClass￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getEjbcClass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setWeblogicdtd￨2 (￨2 String￨3 inString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWLdtd￨2 (￨2 String￨3 inString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEJBdtd￨2 (￨2 String￨3 inString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOldCMP￨2 (￨2 boolean￨3 oldCMP￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setNewCMP￨2 (￨2 boolean￨3 newCMP￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setNoEJBC￨2 (￨2 boolean￨3 noEJBC￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 registerKnownDTDs￨2 (￨2 DescriptorHandler￨3 handler￨3 )￨2 {￨2 }￨2 protected￨2 DescriptorHandler￨2 getWeblogicDescriptorHandler￨2 (￨2 final￨3 File￨3 srcDir￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addVendorFiles￨2 (￨2 Hashtable￨3 ejbFiles￨3 ,￨3 String￨3 ddPrefix￨3 )￨2 {￨2 }￨2 File￨2 getVendorOutputJarFile￨2 (￨2 String￨3 baseName￨3 )￨2 {￨2 }￨2 private￨2 void￨2 buildWeblogicJar￨2 (￨2 File￨3 sourceJar￨3 ,￨3 File￨3 destJar￨3 ,￨3 String￨3 publicId￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 writeJar￨2 (￨2 String￨2 baseName￨2 ,￨2 File￨2 jarFile￨2 ,￨2 Hashtable￨2 files￨2 ,￨2 String￨2 publicId￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 validateConfigured￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isRebuildRequired￨2 (￨2 File￨3 genericJarFile￨3 ,￨3 File￨3 weblogicJarFile￨3 )￨2 {￨2 }￨2 protected￨2 ClassLoader￨2 getClassLoaderFromJar￨2 (￨2 File￨2 classjar￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 Path￨3 lookupPath￨3 =￨3 new￨3 Path￨3 (￨3 getTask￨3 (￨3 )￨3 .￨3 getProject￨3 (￨3 )￨3 )￨3 ;￨3 lookupPath￨3 .￨3 setLocation￨3 (￨3 classjar￨3 )￨3 ;￨3 Path￨3 classpath￨3 =￨3 getCombinedClasspath￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 classpath￨4 !=￨4 null￨4 )￨3 {￨3 lookupPath￨4 .￨4 append￨4 (￨4 classpath￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 tools￨3 .￨3 ant￨3 .￨3 AntClassLoader￨3 (￨3 getTask￨3 (￨3 )￨3 .￨3 getProject￨3 (￨3 )￨3 ,￨3 lookupPath￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 MenuSeparatorContribution￨1 extends￨1 CommonMenuAddition￨1 {￨1 public￨2 MenuSeparatorContribution￨2 (￨2 IConfigurationElement￨3 element￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVisible￨2 (￨2 )￨2 {￨2 String￨3 val￨3 =￨3 element￨3 .￨3 getAttribute￨3 (￨3 ATT_VISIBLE￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 Boolean￨3 .￨3 parseBoolean￨3 (￨3 val￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 fill￨2 (￨2 Menu￨3 parent￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 fill￨2 (￨2 ToolBar￨3 parent￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Copy￨1 extends￨1 Task￨1 {￨1 protected￨2 File￨2 file￨2 =￨2 null￨2 ;￨2 protected￨2 File￨2 destFile￨2 =￨2 null￨2 ;￨2 protected￨2 File￨2 destDir￨2 =￨2 null￨2 ;￨2 protected￨2 Vector￨2 filesets￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 protected￨2 boolean￨2 filtering￨2 =￨2 false￨2 ;￨2 protected￨2 boolean￨2 forceOverwrite￨2 =￨2 false￨2 ;￨2 protected￨2 boolean￨2 flatten￨2 =￨2 false￨2 ;￨2 protected￨2 int￨2 verbosity￨2 =￨2 Project￨2 .￨2 MSG_VERBOSE￨2 ;￨2 protected￨2 boolean￨2 includeEmpty￨2 =￨2 true￨2 ;￨2 protected￨2 Hashtable￨2 fileCopyMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 protected￨2 Hashtable￨2 dirCopyMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 setFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTofile￨2 (￨2 File￨3 destFile￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTodir￨2 (￨2 File￨3 destDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFiltering￨2 (￨2 boolean￨3 filtering￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOverwrite￨2 (￨2 boolean￨3 overwrite￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFlatten￨2 (￨2 boolean￨3 flatten￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVerbose￨2 (￨2 boolean￨3 verbose￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludeEmptyDirs￨2 (￨2 boolean￨3 includeEmpty￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addFileset￨2 (￨2 FileSet￨3 set￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 validateAttributes￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 scan￨2 (￨2 File￨3 fromDir￨3 ,￨3 File￨3 toDir￨3 ,￨3 String￨3 [￨3 ]￨3 files￨3 ,￨3 String￨3 [￨3 ]￨3 dirs￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 buildMap￨2 (￨2 File￨3 fromDir￨3 ,￨3 File￨3 toDir￨3 ,￨3 String￨3 [￨3 ]￨3 names￨3 ,￨3 FileNameMapper￨3 mapper￨3 ,￨3 Hashtable￨3 map￨3 )￨2 {￨2 String￨3 [￨3 ]￨3 toCopy￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 forceOverwrite￨4 )￨3 {￨3 toCopy￨4 =￨4 names￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 SourceFileScanner￨4 ds￨4 =￨4 new￨4 SourceFileScanner￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 toCopy￨4 =￨4 ds￨4 .￨4 restrict￨4 (￨4 names￨4 ,￨4 fromDir￨4 ,￨4 toDir￨4 ,￨4 mapper￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 toCopy￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 File￨4 src￨4 =￨4 new￨4 File￨4 (￨4 fromDir￨4 ,￨4 toCopy￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 File￨4 dest￨4 =￨4 new￨4 File￨4 (￨4 toDir￨4 ,￨4 mapper￨4 .￨4 mapFileName￨4 (￨4 toCopy￨4 [￨4 i￨4 ]￨4 )￨4 [￨4 0￨4 ]￨4 )￨4 ;￨4 map￨4 .￨4 put￨4 (￨4 src￨4 .￨4 getAbsolutePath￨4 (￨4 )￨4 ,￨4 dest￨4 .￨4 getAbsolutePath￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 doFileOperations￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SearchGroupsRequestFactory￨1 implements￨1 ShardRequestFactory￨1 {￨1 public￨2 ShardRequest￨2 [￨2 ]￨2 constructRequest￨2 (￨2 ResponseBuilder￨3 rb￨3 )￨2 {￨2 ShardRequest￨3 sreq￨3 =￨3 new￨3 ShardRequest￨3 (￨3 )￨3 ;￨3 GroupingSpecification￨3 groupingSpecification￨3 =￨3 rb￨3 .￨3 getGroupingSpec￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 groupingSpecification￨4 .￨4 getFields￨4 (￨4 )￨4 .￨4 length￨4 )￨4 ==￨4 0￨4 )￨3 {￨3 return￨4 new￨4 ShardRequest￨4 [￨4 0￨4 ]￨4 ;￨4 }￨3 sreq￨3 .￨3 purpose￨3 =￨3 ShardRequest￨3 .￨3 PURPOSE_GET_TOP_GROUPS￨3 ;￨3 sreq￨3 .￨3 params￨3 =￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 solr￨3 .￨3 common￨3 .￨3 params￨3 .￨3 ModifiableSolrParams￨3 (￨3 rb￨3 .￨3 req￨3 .￨3 getParams￨3 (￨3 )￨3 )￨3 ;￨3 sreq￨3 .￨3 params￨3 .￨3 remove￨3 (￨3 SHARDS￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 rb￨4 .￨4 shards_start￨4 )￨4 >￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 START￨4 ,￨4 rb￨4 .￨4 shards_start￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 START￨4 ,￨4 "0"￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 rb￨4 .￨4 shards_rows￨4 )￨4 >￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 ROWS￨4 ,￨4 rb￨4 .￨4 shards_rows￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 ROWS￨4 ,￨4 (￨4 (￨4 rb￨4 .￨4 getSortSpec￨4 (￨4 )￨4 .￨4 getOffset￨4 (￨4 )￨4 )￨4 +￨4 (￨4 rb￨4 .￨4 getSortSpec￨4 (￨4 )￨4 .￨4 getCount￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 sreq￨3 .￨3 params￨3 .￨3 set￨3 (￨3 "group.distibuted.first"￨3 ,￨3 "true"￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 (￨4 (￨4 rb￨4 .￨4 getFieldFlags￨4 (￨4 )￨4 )￨4 &￨4 (￨4 SolrIndexSearcher￨4 .￨4 GET_SCORES￨4 )￨4 )￨4 !=￨4 0￨4 )￨4 ||￨4 (￨4 rb￨4 .￨4 getSortSpec￨4 (￨4 )￨4 .￨4 includesScore￨4 (￨4 )￨4 )￨4 )￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 FL￨4 ,￨4 (￨4 (￨4 rb￨4 .￨4 req￨4 .￨4 getSchema￨4 (￨4 )￨4 .￨4 getUniqueKeyField￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 +￨4 ",score"￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 sreq￨4 .￨4 params￨4 .￨4 set￨4 (￨4 FL￨4 ,￨4 rb￨4 .￨4 req￨4 .￨4 getSchema￨4 (￨4 )￨4 .￨4 getUniqueKeyField￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 ShardRequest￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 UnmodifiableBoundedCollection￨1 <￨1 E￨1 >￨1 extends￨1 AbstractCollectionDecorator￨1 <￨1 E￨1 >￨1 implements￨1 BoundedCollection￨1 <￨1 E￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 -￨2 7112672385450340330L￨2 ;￨2 public￨2 static￨2 <￨2 E￨2 >￨2 BoundedCollection￨2 <￨2 E￨2 >￨2 unmodifiableBoundedCollection￨2 (￨2 final￨3 BoundedCollection￨3 <￨3 E￨3 >￨3 coll￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 static￨2 <￨2 E￨2 >￨2 BoundedCollection￨2 <￨2 E￨2 >￨2 unmodifiableBoundedCollection￨2 (￨2 Collection￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 coll￨3 )￨2 {￨2 if￨3 (￨3 coll￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 "The<seq2seq4repair_space>collection<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 1000￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 coll￨5 instanceof￨5 BoundedCollection￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 if￨4 (￨4 coll￨5 instanceof￨5 AbstractCollectionDecorator￨5 )￨4 {￨4 coll￨5 =￨5 (￨5 (￨5 AbstractCollectionDecorator￨5 <￨5 E￨5 >￨5 )￨5 (￨5 coll￨5 )￨5 )￨5 .￨5 collection￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 coll￨5 instanceof￨5 SynchronizedCollection￨5 )￨4 {￨4 <START_BUG>￨5 coll￨5 =￨5 (￨5 (￨5 SynchronizedCollection￨5 <￨5 E￨5 >￨5 )￨5 (￨5 coll￨5 )￨5 )￨5 .￨5 collection￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 if￨3 (￨3 (￨4 coll￨4 instanceof￨4 BoundedCollection￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 "The<seq2seq4repair_space>collection<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>bounded<seq2seq4repair_space>collection"￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 UnmodifiableBoundedCollection￨3 <￨3 E￨3 >￨3 (￨3 (￨3 (￨3 BoundedCollection￨3 <￨3 E￨3 >￨3 )￨3 (￨3 coll￨3 )￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 UnmodifiableBoundedCollection￨2 (￨2 final￨3 BoundedCollection￨3 <￨3 E￨3 >￨3 coll￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Iterator￨2 <￨2 E￨2 >￨2 iterator￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 add￨2 (￨2 final￨3 E￨3 object￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 addAll￨2 (￨2 final￨3 Collection￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 coll￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 remove￨2 (￨2 final￨3 Object￨3 object￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 removeAll￨2 (￨2 final￨3 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 retainAll￨2 (￨2 final￨3 Collection￨3 <￨3 ?￨3 >￨3 coll￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 maxSize￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 BoundedCollection￨2 <￨2 E￨2 >￨2 decorated￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ColumnIndexer￨1 {￨1 public￨2 static￨2 void￨2 serialize￨2 (￨2 ColumnFamily￨3 columnFamily￨3 ,￨3 DataOutput￨3 dos￨3 )￨2 {￨2 }￨2 private￨2 static￨2 BloomFilter￨2 createColumnBloomFilter￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 columns￨3 )￨2 {￨2 int￨3 columnCount￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 IColumn￨4 column￨4 :￨4 columns￨4 )￨3 {￨3 columnCount￨4 +=￨4 column￨4 .￨4 getObjectCount￨4 (￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 BloomFilter￨3 bf￨3 =￨3 new￨3 BloomFilter￨3 (￨3 columnCount￨3 ,￨3 4￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 IColumn￨4 column￨4 :￨4 columns￨4 )￨3 {￨3 bf￨4 .￨4 add￨4 (￨4 column￨4 .￨4 name￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 column￨5 instanceof￨5 SuperColumn￨5 )￨4 {￨4 Collection￨5 <￨5 IColumn￨5 >￨5 subColumns￨5 =￨5 column￨5 .￨5 getSubColumns￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 IColumn￨6 subColumn￨6 :￨6 subColumns￨6 )￨5 {￨5 bf￨6 .￨6 add￨6 (￨6 subColumn￨6 .￨6 name￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 return￨3 bf￨3 ;￨3 }￨2 private￨2 static￨2 void￨2 doIndexing￨2 (￨2 AbstractType￨2 comparator￨2 ,￨2 Collection￨2 <￨2 IColumn￨2 >￨2 columns￨2 ,￨2 DataOutput￨2 dos￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JavadocArgumentExpression￨1 extends￨1 Expression￨1 {￨1 public￨2 char￨2 [￨2 ]￨2 token￨2 ;￨2 public￨2 Argument￨2 argument￨2 ;￨2 public￨2 JavadocArgumentExpression￨2 (￨2 char￨3 [￨3 ]￨3 name￨3 ,￨3 int￨3 startPos￨3 ,￨3 int￨3 endPos￨3 ,￨3 TypeReference￨3 typeRef￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 internalResolveType￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 this￨3 .￨3 constant￨3 =￨3 Constant￨3 .￨3 NotAConstant￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 resolvedType￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 this￨4 .￨4 resolvedType￨4 .￨4 isValidBinding￨4 (￨4 )￨4 ?￨4 this￨4 .￨4 resolvedType￨4 :￨4 null￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 argument￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 TypeReference￨4 typeRef￨4 =￨4 this￨4 .￨4 argument￨4 .￨4 type￨4 ;￨4 if￨4 (￨4 typeRef￨5 !=￨5 null￨5 )￨4 {￨4 this￨5 .￨5 resolvedType￨5 =￨5 typeRef￨5 .￨5 getTypeBinding￨5 (￨5 scope￨5 )￨5 ;￨5 typeRef￨5 .￨5 resolvedType￨5 =￨5 this￨5 .￨5 resolvedType￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 typeRef￨6 instanceof￨6 SingleTypeReference￨6 )￨6 &&￨6 (￨6 (￨6 this￨6 .￨6 resolvedType￨6 .￨6 leafComponentType￨6 (￨6 )￨6 .￨6 enclosingType￨6 (￨6 )￨6 )￨6 !=￨6 null￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 scope￨6 .￨6 compilerOptions￨6 (￨6 )￨6 .￨6 complianceLevel￨6 )￨6 <=￨6 (￨6 ClassFileConstants￨6 .￨6 JDK1_4￨6 )￨6 )￨6 )￨5 {￨5 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 javadocInvalidMemberTypeQualification￨6 (￨6 this￨6 .￨6 sourceStart￨6 ,￨6 this￨6 .￨6 sourceEnd￨6 ,￨6 scope￨6 .￨6 getDeclarationModifiers￨6 (￨6 )￨6 )￨6 ;￨6 return￨6 null￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 (￨6 this￨6 .￨6 resolvedType￨6 .￨6 isValidBinding￨6 (￨6 )￨6 )￨6 )￨5 {￨5 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 javadocInvalidType￨6 (￨6 typeRef￨6 ,￨6 this￨6 .￨6 resolvedType￨6 ,￨6 scope￨6 .￨6 getDeclarationModifiers￨6 (￨6 )￨6 )￨6 ;￨6 return￨6 null￨6 ;￨6 }￨5 if￨5 (￨5 isTypeUseDeprecated￨6 (￨6 this￨6 .￨6 resolvedType￨6 ,￨6 scope￨6 )￨6 )￨5 {￨5 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 javadocDeprecatedType￨6 (￨6 this￨6 .￨6 resolvedType￨6 ,￨6 typeRef￨6 ,￨6 scope￨6 .￨6 getDeclarationModifiers￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 <START_BUG>￨5 return￨5 this￨5 .￨5 resolvedType￨5 =￨5 scope￨5 .￨5 environment￨5 (￨5 )￨5 .￨5 convertToRawType￨5 (￨5 this￨5 .￨5 resolvedType￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 InflowTestCase￨1 extends￨1 ContainerResourceMgmtTestBase￨1 {￨1 @￨2 Deployment￨2 public￨2 static￨2 ResourceAdapterArchive￨2 createDeployment￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 ArquillianResource￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testRegistryConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 ServiceController￨3 <￨3 ?￨3 >￨3 controller￨3 =￨3 serviceContainer￨3 .￨3 getService￨3 (￨3 RA_REPOSITORY_SERVICE￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 controller￨3 )￨3 ;￨3 ResourceAdapterRepository￨3 repository￨3 =￨3 (￨3 (￨3 ResourceAdapterRepository￨3 )￨3 (￨3 controller￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 repository￨3 )￨3 ;￨3 Set￨3 <￨3 String￨3 >￨3 ids￨3 =￨3 repository￨3 .￨3 getResourceAdapters￨3 (￨3 MessageListener￨3 .￨3 class￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 ids￨3 )￨3 ;￨3 <START_BUG>￨3 assertEquals￨3 (￨3 1￨3 ,￨3 ids￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 piId￨3 =￨3 ids￨3 .￨3 iterator￨3 (￨3 )￨3 .￨3 next￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 piId￨3 )￨3 ;￨3 Endpoint￨3 endpoint￨3 =￨3 repository￨3 .￨3 getEndpoint￨3 (￨3 piId￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 endpoint￨3 )￨3 ;￨3 List￨3 <￨3 MessageListener￨3 >￨3 listeners￨3 =￨3 repository￨3 .￨3 getMessageListeners￨3 (￨3 piId￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 listeners￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 listeners￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 MessageListener￨3 listener￨3 =￨3 listeners￨3 .￨3 get￨3 (￨3 0￨3 )￨3 ;￨3 ActivationSpec￨3 as￨3 =￨3 listener￨3 .￨3 getActivation￨3 (￨3 )￨3 .￨3 createInstance￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 as￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 as￨3 .￨3 getResourceAdapter￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testMetadataConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ThrowStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Expression￨2 exception￨2 ;￨2 public￨2 TypeBinding￨2 exceptionType￨2 ;￨2 public￨2 ThrowStatement￨2 (￨2 Expression￨3 exception￨3 ,￨3 int￨3 startPosition￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 exception￨3 .￨3 analyseCode￨3 (￨3 currentScope￨3 ,￨3 flowContext￨3 ,￨3 flowInfo￨3 )￨3 ;￨3 flowContext￨3 .￨3 checkExceptionHandlers￨3 (￨3 exceptionType￨3 ,￨3 this￨3 ,￨3 flowInfo￨3 ,￨3 currentScope￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 DeadEnd￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WildcardType￨1 extends￨1 Type￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 BOUND_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 WildcardType￨2 .￨2 class￨2 ,￨2 "bound"￨2 ,￨2 Type￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 OPTIONAL￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimplePropertyDescriptor￨2 UPPER_BOUND_PROPERTY￨2 =￨2 new￨2 SimplePropertyDescriptor￨2 (￨2 WildcardType￨2 .￨2 class￨2 ,￨2 "upperBound"￨2 ,￨2 boolean￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 private￨2 Type￨2 optionalBound￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 isUpperBound￨2 =￨2 true￨2 ;￨2 WildcardType￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 boolean￨2 internalGetSetBooleanProperty￨2 (￨2 SimplePropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 boolean￨3 value￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 WildcardType￨3 result￨3 =￨3 new￨3 WildcardType￨3 (￨3 target￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 setBound￨3 (￨3 (￨3 (￨3 Type￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getBound￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ,￨3 isUpperBound￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isUpperBound￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Type￨2 getBound￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBound￨2 (￨2 Type￨3 type￨3 ,￨3 boolean￨3 isUpperBound￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBound￨2 (￨2 Type￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUpperBound￨2 (￨2 boolean￨3 isUpperBound￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 ProcessDestroyer￨1 implements￨1 Runnable￨1 {￨1 private￨2 Vector￨2 processes￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 Method￨2 addShutdownHookMethod￨2 ;￨2 private￨2 Method￨2 removeShutdownHookMethod￨2 ;￨2 private￨2 ProcessDestroyer￨2 .￨2 ProcessDestroyerImpl￨2 destroyProcessThread￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 added￨2 =￨2 false￨2 ;￨2 private￨2 class￨2 ProcessDestroyerImpl￨2 extends￨2 Thread￨2 {￨2 private￨3 boolean￨3 shouldDestroy￨3 =￨3 true￨3 ;￨3 public￨3 ProcessDestroyerImpl￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 run￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setShouldDestroy￨3 (￨3 boolean￨4 shouldDestroy￨4 )￨3 {￨3 }￨3 }￨2 public￨2 ProcessDestroyer￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addShutdownHook￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 removeShutdownHook￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAddedAsShutdownHook￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 add￨2 (￨2 Process￨3 process￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 remove￨2 (￨2 Process￨3 process￨3 )￨2 {￨2 synchronized￨3 (￨3 processes￨4 )￨3 {￨3 boolean￨4 processRemoved￨4 =￨4 processes￨4 .￨4 removeElement￨4 (￨4 process￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 processes￨5 .￨5 size￨5 (￨5 )￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 <START_BUG>￨5 processes￨5 .￨5 notify￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 removeShutdownHook￨5 (￨5 )￨5 ;￨5 }￨4 return￨4 processRemoved￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 QuickVerificationCommand￨1 extends￨1 AbstractHandler￨1 {￨1 private￨2 String￨2 signatureId￨2 ;￨2 private￨2 boolean￨2 preferencesComplete￨2 =￨2 false￨2 ;￨2 private￨2 ExecutionEvent￨2 event￨2 ;￨2 private￨2 IFile￨2 file￨2 =￨2 null￨2 ;￨2 public￨2 Object￨2 execute￨2 (￨2 ExecutionEvent￨2 event￨2 )￨2 throws￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 createVerification￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 VerifySignature￨3 verify￨3 =￨3 new￨3 VerifySignature￨3 (￨3 )￨3 ;￨3 ArrayList￨3 <￨3 VerificationResult￨3 >￨3 results￨3 =￨3 new￨3 ArrayList￨3 <￨3 VerificationResult￨3 >￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 HandlerUtil￨4 .￨4 getActivePart￨4 (￨4 event￨4 )￨4 )￨4 instanceof￨4 IEditorPart￨4 )￨3 {￨3 final￨4 IEditorPart￨4 editorPart￨4 =￨4 (￨4 (￨4 IEditorPart￨4 )￨4 (￨4 HandlerUtil￨4 .￨4 getActivePart￨4 (￨4 event￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 editorPart￨5 .￨5 isDirty￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 null￨6 !=￨6 (￨6 editorPart￨6 .￨6 getTitle￨6 (￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 editorPart￨6 .￨6 getTitle￨6 (￨6 )￨6 .￨6 length￨6 (￨6 )￨6 )￨6 >￨6 0￨6 )￨6 )￨5 {￨5 IRunnableWithProgress￨6 op￨6 =￨6 new￨6 IRunnableWithProgress￨6 (￨6 )￨6 {￨6 public￨7 void￨7 run￨7 (￨7 final￨8 IProgressMonitor￨8 monitor￨8 )￨7 {￨7 editorPart￨8 .￨8 doSave￨8 (￨8 monitor￨8 )￨8 ;￨8 }￨7 }￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 PlatformUI￨7 .￨7 getWorkbench￨7 (￨7 )￨7 .￨7 getProgressService￨7 (￨7 )￨7 .￨7 runInUI￨7 (￨7 XSTUIPlugin￨7 .￨7 getActiveWorkbenchWindow￨7 (￨7 )￨7 ,￨7 op￨7 ,￨7 ResourcesPlugin￨7 .￨7 getWorkspace￨7 (￨7 )￨7 .￨7 getRoot￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 InvocationTargetException￨7 ite￨7 )￨6 {￨6 Utils￨7 .￨7 log￨7 (￨7 "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨7 ,￨7 ite￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 InterruptedException￨7 ie￨7 )￨6 {￨6 Utils￨7 .￨7 log￨7 (￨7 "Error<seq2seq4repair_space>while<seq2seq4repair_space>saving<seq2seq4repair_space>editor<seq2seq4repair_space>content"￨7 ,￨7 ie￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 editorPart￨6 .￨6 doSaveAs￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 file￨4 =￨4 (￨4 (￨4 IFile￨4 )￨4 (￨4 editorPart￨4 .￨4 getEditorInput￨4 (￨4 )￨4 .￨4 getAdapter￨4 (￨4 IFile￨4 .￨4 class￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 ISelection￨4 selection￨4 =￨4 HandlerUtil￨4 .￨4 getCurrentSelection￨4 (￨4 event￨4 )￨4 ;￨4 if￨4 (￨4 selection￨5 instanceof￨5 IStructuredSelection￨5 )￨4 {￨4 file￨5 =￨5 (￨5 (￨5 IFile￨5 )￨5 (￨5 (￨5 (￨5 IStructuredSelection￨5 )￨5 (￨5 selection￨5 )￨5 )￨5 .￨5 getFirstElement￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 (￨4 file￨4 )￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 file￨4 .￨4 isAccessible￨4 (￨4 )￨4 )￨4 )￨3 {￨3 results￨4 =￨4 verify￨4 .￨4 verify￨4 (￨4 file￨4 .￨4 getLocation￨4 (￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 ,￨4 signatureId￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 MessageDialog￨4 .￨4 openInformation￨4 (￨4 HandlerUtil￨4 .￨4 getActiveShell￨4 (￨4 event￨4 )￨4 ,￨4 QuickVerificationCommand_0￨4 ,￨4 NLS￨4 .￨4 bind￨4 (￨4 RemoveReadOnlyFlag￨4 ,￨4 QuickVerificationCommand_5￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 results￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ==￨4 1￨4 )￨3 {￨3 VerificationResult￨4 result￨4 =￨4 (￨4 (￨4 VerificationResult￨4 )￨4 (￨4 results￨4 .￨4 get￨4 (￨4 0￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 result￨5 .￨5 getSignature￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 <START_BUG>￨5 Verification￨5 .￨5 showVerificationResult￨5 (￨5 result￨5 ,￨5 HandlerUtil￨5 .￨5 getActiveShell￨5 (￨5 event￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 else￨4 {￨4 MessageDialog￨5 .￨5 openError￨5 (￨5 HandlerUtil￨5 .￨5 getActiveShell￨5 (￨5 event￨5 )￨5 ,￨5 QuickVerificationCommand_0￨5 ,￨5 NLS￨5 .￨5 bind￨5 (￨5 QuickVerificationCommand_4￨5 ,￨5 signatureId￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 MessageDialog￨4 .￨4 openError￨4 (￨4 HandlerUtil￨4 .￨4 getActiveShell￨4 (￨4 event￨4 )￨4 ,￨4 QuickVerificationCommand_0￨4 ,￨4 NLS￨4 .￨4 bind￨4 (￨4 QuickVerificationCommand_4￨4 ,￨4 signatureId￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 getPreferenceValues￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkPreferences￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JMXProtocolPackager￨1 implements￨1 DeploymentPackager￨1 {￨1 private￨2 static￨2 final￨2 List￨2 <￨2 String￨2 >￨2 defaultDependencies￨2 =￨2 new￨2 ArrayList￨2 <￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 JMXProtocolPackager￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 ServiceArchiveHolder￨2 archiveHolder￨2 ;￨2 JMXProtocolPackager￨2 (￨2 ServiceArchiveHolder￨2 archiveHolder￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Archive￨2 <￨2 ?￨2 >￨2 generateDeployment￨2 (￨2 TestDeployment￨3 testDeployment￨3 ,￨3 Collection￨3 <￨3 ProtocolArchiveProcessor￨3 >￨3 protocolProcessors￨3 )￨2 {￨2 }￨2 private￨2 JavaArchive￨2 generateArquillianServiceArchive￨2 (￨2 Collection￨2 <￨2 Archive￨2 <￨2 ?￨2 >￨2 >￨2 auxArchives￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 JavaArchive￨3 archive￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 JavaArchive￨3 .￨3 class￨3 ,￨3 "arquillian-service"￨3 )￨3 ;￨3 JMXProtocolPackager￨3 .￨3 log￨3 .￨3 debugf￨3 (￨3 "Generating:<seq2seq4repair_space>%s"￨3 ,￨3 archive￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 archive￨3 .￨3 addPackage￨3 (￨3 ArquillianService￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 )￨3 ;￨3 archive￨3 .￨3 addPackage￨3 (￨3 AbstractJMXProtocol￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 )￨3 ;￨3 archive￨3 .￨3 addClasses￨3 (￨3 ServerSetup￨3 .￨3 class￨3 ,￨3 ServerSetupTask￨3 .￨3 class￨3 ,￨3 ManagementClient￨3 .￨3 class￨3 ,￨3 Authentication￨3 .￨3 class￨3 ,￨3 NetworkUtils￨3 .￨3 class￨3 )￨3 ;￨3 final￨3 Set￨3 <￨3 ModuleIdentifier￨3 >￨3 archiveDependencies￨3 =￨3 new￨3 LinkedHashSet￨3 <￨3 ModuleIdentifier￨3 >￨3 (￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.as.jmx"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.as.server"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.as.controller-client"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.jandex"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.logging"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.modules"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.dmr"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.jboss.msc"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.osgi.core"￨3 )￨3 )￨3 ;￨3 archiveDependencies￨3 .￨3 add￨3 (￨3 ModuleIdentifier￨3 .￨3 create￨3 (￨3 "org.wildfly.security.manager"￨3 )￨3 )￨3 ;￨3 final￨3 Set￨3 <￨3 String￨3 >￨3 loadableExtensions￨3 =￨3 new￨3 HashSet￨3 <￨3 String￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 loadableExtensionsPath￨3 =￨3 "META-INF/services/"￨3 +￨3 (￨3 RemoteLoadableExtension￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 Archive￨3 <￨3 ?￨3 >￨3 aux￨3 :￨3 auxArchives￨3 )￨3 {￨3 Node￨4 node￨4 =￨4 aux￨4 .￨4 get￨4 (￨4 loadableExtensionsPath￨4 )￨4 ;￨4 if￨4 (￨4 node￨5 !=￨5 null￨5 )￨4 {￨4 BufferedReader￨5 br￨5 =￨5 new￨5 BufferedReader￨5 (￨5 new￨5 InputStreamReader￨5 (￨5 node￨5 .￨5 getAsset￨5 (￨5 )￨5 .￨5 openStream￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 String￨5 line￨5 =￨5 br￨5 .￨5 readLine￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 line￨6 !=￨6 null￨6 )￨5 {￨5 loadableExtensions￨6 .￨6 add￨6 (￨6 line￨6 )￨6 ;￨6 ClassLoader￨6 classLoader￨6 =￨6 getClass￨6 (￨6 )￨6 .￨6 getClassLoader￨6 (￨6 )￨6 ;￨6 Object￨6 extension￨6 =￨6 classLoader￨6 .￨6 loadClass￨6 (￨6 line￨6 )￨6 .￨6 newInstance￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 extension￨7 instanceof￨7 DependenciesProvider￨7 )￨6 {￨6 DependenciesProvider￨7 provider￨7 =￨7 (￨7 (￨7 DependenciesProvider￨7 )￨7 (￨7 extension￨7 )￨7 )￨7 ;￨7 archiveDependencies￨7 .￨7 addAll￨7 (￨7 provider￨7 .￨7 getDependencies￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 line￨6 =￨6 br￨6 .￨6 readLine￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 JMXProtocolPackager￨4 .￨4 log￨4 .￨4 debugf￨4 (￨4 "Merging<seq2seq4repair_space>archive:<seq2seq4repair_space>%s"￨4 ,￨4 aux￨4 )￨4 ;￨4 archive￨4 .￨4 merge￨4 (￨4 aux￨4 )￨4 ;￨4 }￨3 loadableExtensions￨3 .￨3 add￨3 (￨3 JMXProtocolEndpointExtension￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 loadableExtensions￨3 .￨3 add￨3 (￨3 InContainerManagementClientExtension￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 archive￨3 .￨3 setManifest￨3 (￨3 new￨3 Asset￨3 (￨3 )￨3 {￨3 public￨4 InputStream￨4 openStream￨4 (￨4 )￨4 {￨4 ManifestBuilder￨5 builder￨5 =￨5 ManifestBuilder￨5 .￨5 newInstance￨5 (￨5 )￨5 ;￨5 Iterator￨5 <￨5 ModuleIdentifier￨5 >￨5 itdep￨5 =￨5 archiveDependencies￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 StringBuffer￨5 depspec￨5 =￨5 new￨5 StringBuffer￨5 (￨5 (￨5 ""￨5 +￨5 (￨5 itdep￨5 .￨5 next￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 while￨5 (￨5 itdep￨6 .￨6 hasNext￨6 (￨6 )￨6 )￨5 {￨5 depspec￨6 .￨6 append￨6 (￨6 (￨6 ","￨6 +￨6 (￨6 itdep￨6 .￨6 next￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 builder￨5 .￨5 addManifestHeader￨5 (￨5 "Dependencies"￨5 ,￨5 depspec￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 return￨5 builder￨5 .￨5 openStream￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 String￨3 serviceActivatorPath￨3 =￨3 "META-INF/services/"￨3 +￨3 (￨3 ServiceActivator￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 URL￨3 serviceActivatorURL￨3 =￨3 this￨3 .￨3 getClass￨3 (￨3 )￨3 .￨3 getClassLoader￨3 (￨3 )￨3 .￨3 getResource￨3 (￨3 (￨3 "arquillian-service/"￨3 +￨3 serviceActivatorPath￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 serviceActivatorURL￨3 ==￨3 null￨3 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 (￨4 (￨4 (￨4 "No<seq2seq4repair_space>arquillian-service/"￨4 +￨4 serviceActivatorPath￨4 )￨4 +￨4 "<seq2seq4repair_space>found<seq2seq4repair_space>by<seq2seq4repair_space>classloader:<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 this￨4 .￨4 getClass￨4 (￨4 )￨4 .￨4 getClassLoader￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 archive￨3 .￨3 addAsResource￨3 (￨3 new￨3 UrlAsset￨3 (￨3 serviceActivatorURL￨3 )￨3 ,￨3 serviceActivatorPath￨3 )￨3 ;￨3 archive￨3 .￨3 addAsResource￨3 (￨3 new￨3 Asset￨3 (￨3 )￨3 {￨3 public￨4 InputStream￨4 openStream￨4 (￨4 )￨4 {￨4 ByteArrayOutputStream￨5 baos￨5 =￨5 new￨5 ByteArrayOutputStream￨5 (￨5 )￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 Properties￨6 props￨6 =￨6 new￨6 Properties￨6 (￨6 )￨6 ;￨6 props￨6 .￨6 setProperty￨6 (￨6 Constants￨6 .￨6 BUNDLE_SYMBOLICNAME￨6 ,￨6 "arquillian-service"￨6 )￨6 ;￨6 StringBuilder￨6 builder￨6 =￨6 new￨6 StringBuilder￨6 (￨6 )￨6 ;￨6 builder￨6 .￨6 append￨6 (￨6 "org.jboss.arquillian.container.test.api,org.jboss.arquillian.junit,"￨6 )￨6 ;￨6 builder￨6 .￨6 append￨6 (￨6 "org.jboss.arquillian.osgi,org.jboss.arquillian.test.api,"￨6 )￨6 ;￨6 <START_BUG>￨6 builder￨6 .￨6 append￨6 (￨6 "org.jboss.as.arquillian.api,org.jboss.as.arquillian.container,org.jboss.as.osgi,"￨6 )￨6 ;￨6 <END_BUG>￨6 builder￨6 .￨6 append￨6 (￨6 "org.jboss.shrinkwrap.api,org.jboss.shrinkwrap.api.asset,org.jboss.shrinkwrap.api.spec,"￨6 )￨6 ;￨6 builder￨6 .￨6 append￨6 (￨6 "org.junit,org.junit.runner"￨6 )￨6 ;￨6 props￨6 .￨6 setProperty￨6 (￨6 Constants￨6 .￨6 EXPORT_PACKAGE￨6 ,￨6 builder￨6 .￨6 toString￨6 (￨6 )￨6 )￨6 ;￨6 props￨6 .￨6 store￨6 (￨6 baos￨6 ,￨6 null￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 IOException￨6 ex￨6 )￨5 {￨5 throw￨6 new￨6 IllegalStateException￨6 (￨6 "Cannot<seq2seq4repair_space>write<seq2seq4repair_space>osgi<seq2seq4repair_space>metadata"￨6 ,￨6 ex￨6 )￨6 ;￨6 }￨5 return￨5 new￨5 ByteArrayInputStream￨5 (￨5 baos￨5 .￨5 toByteArray￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 "META-INF/jbosgi-xservice.properties"￨3 )￨3 ;￨3 archive￨3 .￨3 delete￨3 (￨3 ArchivePaths￨3 .￨3 create￨3 (￨3 loadableExtensionsPath￨3 )￨3 )￨3 ;￨3 archive￨3 .￨3 addAsResource￨3 (￨3 new￨3 Asset￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 InputStream￨4 openStream￨4 (￨4 )￨4 {￨4 ByteArrayOutputStream￨5 baos￨5 =￨5 new￨5 ByteArrayOutputStream￨5 (￨5 )￨5 ;￨5 PrintWriter￨5 pw￨5 =￨5 new￨5 PrintWriter￨5 (￨5 new￨5 OutputStreamWriter￨5 (￨5 baos￨5 )￨5 )￨5 ;￨5 for￨5 (￨5 String￨6 line￨6 :￨6 loadableExtensions￨6 )￨5 {￨5 pw￨6 .￨6 println￨6 (￨6 line￨6 )￨6 ;￨6 }￨5 pw￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 return￨5 new￨5 ByteArrayInputStream￨5 (￨5 baos￨5 .￨5 toByteArray￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 loadableExtensionsPath￨3 )￨3 ;￨3 JMXProtocolPackager￨3 .￨3 log￨3 .￨3 debugf￨3 (￨3 "Loadable<seq2seq4repair_space>extensions:<seq2seq4repair_space>%s"￨3 ,￨3 loadableExtensions￨3 )￨3 ;￨3 JMXProtocolPackager￨3 .￨3 log￨3 .￨3 tracef￨3 (￨3 "Archive<seq2seq4repair_space>content:<seq2seq4repair_space>%s\n%s"￨3 ,￨3 archive￨3 ,￨3 archive￨3 .￨3 toString￨3 (￨3 true￨3 )￨3 )￨3 ;￨3 return￨3 archive￨3 ;￨3 }￨2 private￨2 void￨2 addModulesManifestDependencies￨2 (￨2 Archive￨3 <￨3 ?￨3 >￨3 appArchive￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 OverseerCollectionProcessor￨1 implements￨1 Runnable￨1 ,￨1 ClosableThread￨1 {￨1 public￨2 static￨2 final￨2 String￨2 NUM_SLICES￨2 =￨2 "numShards"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 REPLICATION_FACTOR￨2 =￨2 "replicationFactor"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 MAX_SHARDS_PER_NODE￨2 =￨2 "maxShardsPerNode"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 CREATE_NODE_SET￨2 =￨2 "createNodeSet"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 DELETECOLLECTION￨2 =￨2 "deletecollection"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 CREATECOLLECTION￨2 =￨2 "createcollection"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 RELOADCOLLECTION￨2 =￨2 "reloadcollection"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 QUEUE_OPERATION￨2 =￨2 "operation"￨2 ;￨2 private￨2 static￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 OverseerCollectionProcessor￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 DistributedQueue￨2 workQueue￨2 ;￨2 private￨2 String￨2 myId￨2 ;￨2 private￨2 ShardHandler￨2 shardHandler￨2 ;￨2 private￨2 String￨2 adminPath￨2 ;￨2 private￨2 ZkStateReader￨2 zkStateReader￨2 ;￨2 private￨2 boolean￨2 isClosed￨2 ;￨2 public￨2 OverseerCollectionProcessor￨2 (￨2 ZkStateReader￨2 zkStateReader￨2 ,￨2 String￨2 myId￨2 ,￨2 ShardHandler￨2 shardHandler￨2 ,￨2 String￨2 adminPath￨2 )￨2 {￨2 }￨2 protected￨2 OverseerCollectionProcessor￨2 (￨2 ZkStateReader￨3 zkStateReader￨3 ,￨3 String￨3 myId￨3 ,￨3 ShardHandler￨3 shardHandler￨3 ,￨3 String￨3 adminPath￨3 ,￨3 DistributedQueue￨3 workQueue￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 amILeader￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 SolrResponse￨2 processMessage￨2 (￨2 ZkNodeProps￨3 message￨3 ,￨3 String￨3 operation￨3 )￨2 {￨2 NamedList￨3 results￨3 =￨3 new￨3 NamedList￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 OverseerCollectionProcessor￨5 .￨5 CREATECOLLECTION￨5 .￨5 equals￨5 (￨5 operation￨5 )￨5 )￨4 {￨4 createCollection￨5 (￨5 zkStateReader￨5 .￨5 getClusterState￨5 (￨5 )￨5 ,￨5 message￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 OverseerCollectionProcessor￨5 .￨5 DELETECOLLECTION￨5 .￨5 equals￨5 (￨5 operation￨5 )￨5 )￨4 {￨4 ModifiableSolrParams￨5 params￨5 =￨5 new￨5 ModifiableSolrParams￨5 (￨5 )￨5 ;￨5 params￨5 .￨5 set￨5 (￨5 ACTION￨5 ,￨5 UNLOAD￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 params￨5 .￨5 set￨5 (￨5 DELETE_INSTANCE_DIR￨5 ,￨5 true￨5 )￨5 ;￨5 collectionCmd￨5 (￨5 zkStateReader￨5 .￨5 getClusterState￨5 (￨5 )￨5 ,￨5 message￨5 ,￨5 params￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 OverseerCollectionProcessor￨5 .￨5 RELOADCOLLECTION￨5 .￨5 equals￨5 (￨5 operation￨5 )￨5 )￨4 {￨4 ModifiableSolrParams￨5 params￨5 =￨5 new￨5 ModifiableSolrParams￨5 (￨5 )￨5 ;￨5 params￨5 .￨5 set￨5 (￨5 ACTION￨5 ,￨5 RELOAD￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 collectionCmd￨5 (￨5 zkStateReader￨5 .￨5 getClusterState￨5 (￨5 )￨5 ,￨5 message￨5 ,￨5 params￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 SolrException￨5 (￨5 ErrorCode￨5 .￨5 BAD_REQUEST￨5 ,￨5 (￨5 "Unknow<seq2seq4repair_space>the<seq2seq4repair_space>operation:"￨5 +￨5 operation￨5 )￨5 )￨5 ;￨5 }￨4 int￨4 failed￨4 =￨4 0￨4 ;￨4 ShardResponse￨4 srsp￨4 ;￨4 do￨4 {￨4 srsp￨5 =￨5 shardHandler￨5 .￨5 takeCompletedIncludingErrors￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 srsp￨6 !=￨6 null￨6 )￨5 {￨5 Throwable￨6 e￨6 =￨6 srsp￨6 .￨6 getException￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 e￨7 !=￨7 null￨7 )￨6 {￨6 failed￨7 ++￨7 ;￨7 OverseerCollectionProcessor￨7 .￨7 log￨7 .￨7 error￨7 (￨7 (￨7 "Error<seq2seq4repair_space>talking<seq2seq4repair_space>to<seq2seq4repair_space>shard:<seq2seq4repair_space>"￨7 +￨7 (￨7 srsp￨7 .￨7 getShard￨7 (￨7 )￨7 )￨7 )￨7 ,￨7 e￨7 )￨7 ;￨7 results￨7 .￨7 add￨7 (￨7 srsp￨7 .￨7 getShard￨7 (￨7 )￨7 ,￨7 e￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 results￨7 .￨7 add￨7 (￨7 srsp￨7 .￨7 getShard￨7 (￨7 )￨7 ,￨7 srsp￨7 .￨7 getSolrResponse￨7 (￨7 )￨7 .￨7 getResponse￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 while￨4 (￨4 srsp￨5 !=￨5 null￨5 )￨4 ;￨4 }￨3 catch￨3 (￨3 SolrException￨4 ex￨4 )￨3 {￨3 SolrException￨4 .￨4 log￨4 (￨4 OverseerCollectionProcessor￨4 .￨4 log￨4 ,￨4 (￨4 (￨4 (￨4 (￨4 "Collection<seq2seq4repair_space>"￨4 +￨4 operation￨4 )￨4 +￨4 "<seq2seq4repair_space>of<seq2seq4repair_space>"￨4 )￨4 +￨4 operation￨4 )￨4 +￨4 "<seq2seq4repair_space>failed"￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 results￨4 .￨4 add￨4 (￨4 (￨4 (￨4 "Operation<seq2seq4repair_space>"￨4 +￨4 operation￨4 )￨4 +￨4 "<seq2seq4repair_space>cause<seq2seq4repair_space>exception:"￨4 )￨4 ,￨4 ex￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 return￨4 new￨4 OverseerSolrResponse￨4 (￨4 results￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 boolean￨2 createCollection￨2 (￨2 ClusterState￨3 clusterState￨3 ,￨3 ZkNodeProps￨3 message￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 collectionCmd￨2 (￨2 ClusterState￨3 clusterState￨3 ,￨3 ZkNodeProps￨3 message￨3 ,￨3 ModifiableSolrParams￨3 params￨3 )￨2 {￨2 }￨2 private￨2 int￨2 msgStrToInt￨2 (￨2 ZkNodeProps￨2 message￨2 ,￨2 String￨2 key￨2 ,￨2 Integer￨2 def￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 isClosed￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 OutputAttribute￨1 extends￨1 ProjectComponent￨1 {￨1 public￨2 static￨2 final￨2 String￨2 STDOUT￨2 =￨2 "stdout"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 STDERR￨2 =￨2 "stderr"￨2 ;￨2 protected￨2 String￨2 value￨2 ;￨2 public￨2 OutputAttribute￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 OutputStream￨2 getOutputStream￨2 (￨2 )￨2 {￨2 if￨3 (￨3 OutputAttribute￨4 .￨4 STDOUT￨4 .￨4 equals￨4 (￨4 value￨4 )￨4 )￨3 {￨3 return￨4 new￨4 KeepAliveOutputStream￨4 (￨4 System￨4 .￨4 out￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 OutputAttribute￨4 .￨4 STDERR￨4 .￨4 equals￨4 (￨4 value￨4 )￨4 )￨3 {￨3 return￨4 new￨4 KeepAliveOutputStream￨4 (￨4 System￨4 .￨4 err￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 File￨3 f￨3 =￨3 project￨3 .￨3 resolveFile￨3 (￨3 value￨3 )￨3 ;￨3 <END_BUG>￨3 try￨3 (￨3 )￨3 {￨3 return￨4 new￨4 FileOutputStream￨4 (￨4 f￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 BuildException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 LookAndFeelCommand￨1 implements￨1 Command￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JMETER_LAF￨2 =￨2 "jmeter.laf"￨2 ;￨2 private￨2 static￨2 final￨2 Set￨2 <￨2 String￨2 >￨2 commands￨2 =￨2 new￨2 HashSet￨2 <￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 String￨2 getJMeterLaf￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 checkLafName￨2 (￨2 String￨3 laf￨3 )￨2 {￨2 }￨2 public￨2 LookAndFeelCommand￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 doAction￨2 (￨2 ActionEvent￨3 ev￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 String￨4 className￨4 =￨4 ev￨4 .￨4 getActionCommand￨4 (￨4 )￨4 .￨4 substring￨4 (￨4 4￨4 )￨4 .￨4 replace￨4 (￨4 '/'￨4 ,￨4 '.'￨4 )￨4 ;￨4 <END_BUG>￨4 UIManager￨4 .￨4 setLookAndFeel￨4 (￨4 className￨4 )￨4 ;￨4 SwingUtilities￨4 .￨4 updateComponentTreeUI￨4 (￨4 GuiPackage￨4 .￨4 getInstance￨4 (￨4 )￨4 .￨4 getMainFrame￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedLookAndFeelException￨4 e￨4 )￨3 {￨3 JMeterUtils￨4 .￨4 reportErrorToUser￨4 (￨4 (￨4 "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4 +￨4 (￨4 e￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 InstantiationException￨4 e￨4 )￨3 {￨3 JMeterUtils￨4 .￨4 reportErrorToUser￨4 (￨4 (￨4 "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4 +￨4 (￨4 e￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 ClassNotFoundException￨4 e￨4 )￨3 {￨3 JMeterUtils￨4 .￨4 reportErrorToUser￨4 (￨4 (￨4 "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4 +￨4 (￨4 e￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IllegalAccessException￨4 e￨4 )￨3 {￨3 JMeterUtils￨4 .￨4 reportErrorToUser￨4 (￨4 (￨4 "Look<seq2seq4repair_space>and<seq2seq4repair_space>Feel<seq2seq4repair_space>unavailable:"￨4 +￨4 (￨4 e￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Set￨2 <￨2 String￨2 >￨2 getActionNames￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SSLTest￨1 extends￨1 BaseJDBCTestCase￨1 {￨1 private￨2 InputStream￨2 [￨2 ]￨2 _inputStreamHolder￨2 ;￨2 private￨2 NetworkServerTestSetup￨2 nsTestSetup￨2 ;￨2 public￨2 SSLTest￨2 (￨2 String￨3 testName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Test￨2 decorateTest￨2 (￨2 String￨3 testName￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 [￨2 ]￨2 getStartupProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSSLBasicDSConnect￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSSLBasicDSPlainConnect￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 DataSource￨3 ds￨3 =￨3 JDBCDataSource￨3 .￨3 getDataSource￨3 (￨3 )￨3 ;￨3 JDBCDataSource￨3 .￨3 setBeanProperty￨3 (￨3 ds￨3 ,￨3 "createDatabase"￨3 ,￨3 "create"￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Connection￨4 c2￨4 =￨4 ds￨4 .￨4 getConnection￨4 (￨4 )￨4 ;￨4 c2￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 fail￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 SQLException￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 assertSQLState￨4 (￨4 "58009"￨4 ,￨4 e￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 TagTypeHandler￨1 extends￨1 AbstractMarkupFilter￨1 {￨1 private￨2 final￨2 ArrayListStack￨2 <￨2 ComponentTag￨2 >￨2 stack￨2 =￨2 new￨2 ArrayListStack￨2 <￨2 ComponentTag￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 Boolean￨2 >￨2 requireOpenBodyCloseTag￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 Boolean￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 TagTypeHandler￨2 (￨2 final￨3 IMarkupFilter￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 MarkupElement￨2 nextTag￨2 (￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 while￨3 (￨3 (￨4 stack￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 final￨4 ComponentTag￨4 top￨4 =￨4 stack￨4 .￨4 pop￨4 (￨4 )￨4 ;￨4 return￨4 top￨4 ;￨4 }￨3 final￨3 ComponentTag￨3 tag￨3 =￨3 nextComponentTag￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 tag￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 tag￨4 ;￨4 }￨3 if￨3 (￨3 tag￨4 .￨4 isOpenClose￨4 (￨4 )￨4 )￨3 {￨3 String￨4 name￨4 =￨4 tag￨4 .￨4 getName￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 tag￨5 .￨5 getNamespace￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 name￨5 =￨5 (￨5 (￨5 tag￨5 .￨5 getNamespace￨5 (￨5 )￨5 )￨5 +￨5 ":"￨5 )￨5 +￨5 (￨5 tag￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 TagTypeHandler￨5 .￨5 requiresOpenBodyCloseTag￨5 (￨5 name￨5 )￨5 )￨4 {￨4 tag￨5 .￨5 setType￨5 (￨5 OPEN￨5 )￨5 ;￨5 <START_BUG>￨5 XmlTag￨5 closeTag￨5 =￨5 new￨5 XmlTag￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 closeTag￨5 .￨5 setType￨5 (￨5 CLOSE￨5 )￨5 ;￨5 closeTag￨5 .￨5 setName￨5 (￨5 tag￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 ;￨5 closeTag￨5 .￨5 setNamespace￨5 (￨5 tag￨5 .￨5 getNamespace￨5 (￨5 )￨5 )￨5 ;￨5 closeTag￨5 .￨5 closes￨5 (￨5 tag￨5 )￨5 ;￨5 stack￨5 .￨5 push￨5 (￨5 new￨5 ComponentTag￨5 (￨5 closeTag￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 tag￨3 ;￨3 }￨2 public￨2 static￨2 boolean￨2 requiresOpenBodyCloseTag￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SolrDispatchFilter￨1 implements￨1 Filter￨1 {￨1 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 SolrDispatchFilter￨2 .￨2 class￨2 )￨2 ;￨2 protected￨2 CoreContainer￨2 cores￨2 ;￨2 protected￨2 String￨2 pathPrefix￨2 =￨2 null￨2 ;￨2 protected￨2 String￨2 abortErrorMessage￨2 =￨2 null￨2 ;￨2 protected￨2 String￨2 solrConfigFilename￨2 =￨2 null￨2 ;￨2 protected￨2 final￨2 Map￨2 <￨2 SolrConfig￨2 ,￨2 SolrRequestParsers￨2 >￨2 parsers￨2 =￨2 new￨2 WeakHashMap￨2 <￨2 SolrConfig￨2 ,￨2 SolrRequestParsers￨2 >￨2 (￨2 )￨2 ;￨2 protected￨2 final￨2 SolrRequestParsers￨2 adminRequestParser￨2 ;￨2 private￨2 static￨2 final￨2 Charset￨2 UTF8￨2 =￨2 Charset￨2 .￨2 forName￨2 (￨2 "UTF-8"￨2 )￨2 ;￨2 public￨2 SolrDispatchFilter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 FilterConfig￨2 config￨2 )￨2 throws￨2 ServletException￨2 (￨2 )￨2 {￨2 log￨3 .￨3 info￨3 (￨3 "SolrDispatchFilter.init()"￨3 )￨3 ;￨3 boolean￨3 abortOnConfigurationError￨3 =￨3 true￨3 ;￨3 CoreContainer￨3 .￨3 Initializer￨3 init￨3 =￨3 createInitializer￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 this￨4 .￨4 pathPrefix￨4 =￨4 config￨4 .￨4 getInitParameter￨4 (￨4 "path-prefix"￨4 )￨4 ;￨4 init￨4 .￨4 setSolrConfigFilename￨4 (￨4 config￨4 .￨4 getInitParameter￨4 (￨4 "solrconfig-filename"￨4 )￨4 )￨4 ;￨4 this￨4 .￨4 cores￨4 =￨4 init￨4 .￨4 initialize￨4 (￨4 )￨4 ;￨4 abortOnConfigurationError￨4 =￨4 init￨4 .￨4 isAbortOnConfigurationError￨4 (￨4 )￨4 ;￨4 log￨4 .￨4 info￨4 (￨4 (￨4 "user.dir="￨4 +￨4 (￨4 System￨4 .￨4 getProperty￨4 (￨4 "user.dir"￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Throwable￨4 t￨4 )￨3 {￨3 <START_BUG>￨4 log￨4 .￨4 error￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>start<seq2seq4repair_space>Solr.<seq2seq4repair_space>Check<seq2seq4repair_space>solr/home<seq2seq4repair_space>property"￨4 ,￨4 t￨4 )￨4 ;￨4 <END_BUG>￨4 severeErrors￨4 .￨4 add￨4 (￨4 t￨4 )￨4 ;￨4 SolrCore￨4 .￨4 log￨4 (￨4 t￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 abortOnConfigurationError￨4 &&￨4 (￨4 (￨4 severeErrors￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 )￨3 {￨3 StringWriter￨4 sw￨4 =￨4 new￨4 StringWriter￨4 (￨4 )￨4 ;￨4 PrintWriter￨4 out￨4 =￨4 new￨4 PrintWriter￨4 (￨4 sw￨4 )￨4 ;￨4 out￨4 .￨4 println￨4 (￨4 "Severe<seq2seq4repair_space>errors<seq2seq4repair_space>in<seq2seq4repair_space>solr<seq2seq4repair_space>configuration.\n"￨4 )￨4 ;￨4 out￨4 .￨4 println￨4 (￨4 "Check<seq2seq4repair_space>your<seq2seq4repair_space>log<seq2seq4repair_space>files<seq2seq4repair_space>for<seq2seq4repair_space>more<seq2seq4repair_space>detailed<seq2seq4repair_space>information<seq2seq4repair_space>on<seq2seq4repair_space>what<seq2seq4repair_space>may<seq2seq4repair_space>be<seq2seq4repair_space>wrong.\n"￨4 )￨4 ;￨4 out￨4 .￨4 println￨4 (￨4 "If<seq2seq4repair_space>you<seq2seq4repair_space>want<seq2seq4repair_space>solr<seq2seq4repair_space>to<seq2seq4repair_space>continue<seq2seq4repair_space>after<seq2seq4repair_space>configuration<seq2seq4repair_space>errors,<seq2seq4repair_space>change:<seq2seq4repair_space>\n"￨4 )￨4 ;￨4 out￨4 .￨4 println￨4 (￨4 "<seq2seq4repair_space><abortOnConfigurationError>false</abortOnConfigurationError>\n"￨4 )￨4 ;￨4 out￨4 .￨4 println￨4 (￨4 (￨4 (￨4 "in<seq2seq4repair_space>"￨4 +￨4 (￨4 init￨4 .￨4 getSolrConfigFilename￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "\n"￨4 )￨4 )￨4 ;￨4 for￨4 (￨4 Throwable￨5 t￨5 :￨5 SolrConfig￨5 .￨5 severeErrors￨5 )￨4 {￨4 out￨5 .￨5 println￨5 (￨5 "-------------------------------------------------------------"￨5 )￨5 ;￨5 t￨5 .￨5 printStackTrace￨5 (￨5 out￨5 )￨5 ;￨5 }￨4 out￨4 .￨4 flush￨4 (￨4 )￨4 ;￨4 abortErrorMessage￨4 =￨4 sw￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 }￨3 log￨3 .￨3 info￨3 (￨3 "SolrDispatchFilter.init()<seq2seq4repair_space>done"￨3 )￨3 ;￨3 }￨2 protected￨2 Initializer￨2 createInitializer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 destroy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 doFilter￨2 (￨2 ServletRequest￨2 request￨2 ,￨2 ServletResponse￨2 response￨2 ,￨2 FilterChain￨2 chain￨2 )￨2 throws￨2 IOException￨2 ,￨2 ServletException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 handleAdminRequest￨2 (￨2 HttpServletRequest￨2 req￨2 ,￨2 ServletResponse￨2 response￨2 ,￨2 SolrRequestHandler￨2 handler￨2 ,￨2 SolrQueryRequest￨2 solrReq￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeResponse￨2 (￨2 SolrQueryResponse￨2 solrRsp￨2 ,￨2 ServletResponse￨2 response￨2 ,￨2 QueryResponseWriter￨2 responseWriter￨2 ,￨2 SolrQueryRequest￨2 solrReq￨2 ,￨2 Method￨2 reqMethod￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 execute￨2 (￨2 HttpServletRequest￨3 req￨3 ,￨3 SolrRequestHandler￨3 handler￨3 ,￨3 SolrQueryRequest￨3 sreq￨3 ,￨3 SolrQueryResponse￨3 rsp￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 sendError￨2 (￨2 HttpServletResponse￨2 res￨2 ,￨2 Throwable￨2 ex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setPathPrefix￨2 (￨2 String￨3 pathPrefix￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getPathPrefix￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BCodec￨1 extends￨1 RFC1522Codec￨1 implements￨1 StringDecoder￨1 ,￨1 StringEncoder￨1 {￨1 private￨2 final￨2 String￨2 charset￨2 ;￨2 public￨2 BCodec￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BCodec￨2 (￨2 final￨3 String￨3 charset￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getEncoding￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 byte￨2 [￨2 ]￨2 doEncoding￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 protected￨2 byte￨2 [￨2 ]￨2 doDecoding￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 String￨2 encode￨2 (￨2 final￨2 String￨2 value￨2 ,￨2 final￨2 String￨2 charset￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 value￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 return￨4 encodeText￨4 (￨4 value￨4 ,￨4 charset￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 UnsupportedEncodingException￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 EncoderException￨4 (￨4 e￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 String￨2 encode￨2 (￨2 String￨2 value￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 decode￨2 (￨2 String￨2 value￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 encode￨2 (￨2 Object￨2 value￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 decode￨2 (￨2 Object￨2 value￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDefaultCharset￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HttpManagementWriteAttributeHandler￨1 extends￨1 AbstractWriteAttributeHandler￨1 <￨1 Void￨1 >￨1 {￨1 private￨2 final￨2 LocalHostControllerInfoImpl￨2 hostControllerInfo￨2 ;￨2 private￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ;￨2 public￨2 HttpManagementWriteAttributeHandler￨2 (￨2 final￨3 LocalHostControllerInfoImpl￨3 hostControllerInfo￨3 ,￨3 final￨3 HostControllerEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 boolean￨2 applyUpdateToRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 String￨2 attributeName￨2 ,￨2 ModelNode￨2 resolvedValue￨2 ,￨2 ModelNode￨2 currentValue￨2 ,￨2 HandbackHolder￨2 <￨2 Void￨2 >￨2 handbackHolder￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 revertUpdateToRuntime￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 String￨2 attributeName￨2 ,￨2 final￨2 ModelNode￨2 valueToRestore￨2 ,￨2 final￨2 ModelNode￨2 valueToRevert￨2 ,￨2 final￨2 Void￨2 handback￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 updateHttpManagementService￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 subModel￨2 ,￨2 final￨2 LocalHostControllerInfoImpl￨2 hostControllerInfo￨2 ,￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ,￨2 final￨2 ServiceVerificationHandler￨2 verificationHandler￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 HttpManagementRemoveHandler￨3 .￨3 removeHttpManagementService￨3 (￨3 context￨3 )￨3 ;￨3 HttpManagementAddHandler￨3 .￨3 populateHostControllerInfo￨3 (￨3 hostControllerInfo￨3 ,￨3 context￨3 ,￨3 subModel￨3 )￨3 ;￨3 <START_BUG>￨3 HttpManagementAddHandler￨3 .￨3 installHttpManagementServices￨3 (￨3 context￨3 .￨3 getRunningMode￨3 (￨3 )￨3 ,￨3 context￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ,￨3 hostControllerInfo￨3 ,￨3 environment￨3 ,￨3 verificationHandler￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 ModuleContextProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 DeploymentTypeMarker￨4 .￨4 isType￨4 (￨4 EAR￨4 ,￨4 deploymentUnit￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 EEModuleDescription￨3 moduleDescription￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 EE_MODULE_DESCRIPTION￨3 )￨3 ;￨3 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 phaseContext￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 appContextServiceName￨3 =￨3 ContextNames￨3 .￨3 contextServiceNameOfApplication￨3 (￨3 moduleDescription￨3 .￨3 getApplicationName￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 ServiceName￨3 moduleContextServiceName￨3 =￨3 ContextNames￨3 .￨3 contextServiceNameOfModule￨3 (￨3 moduleDescription￨3 .￨3 getApplicationName￨3 (￨3 )￨3 ,￨3 moduleDescription￨3 .￨3 getModuleName￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 NamingStoreService￨3 contextService￨3 =￨3 new￨3 NamingStoreService￨3 (￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 moduleContextServiceName￨3 ,￨3 contextService￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 final￨3 BinderService￨3 moduleNameBinder￨3 =￨3 new￨3 BinderService￨3 (￨3 "ModuleName"￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 moduleContextServiceName￨3 .￨3 append￨3 (￨3 "ModuleName"￨3 )￨3 ,￨3 moduleNameBinder￨3 )￨3 .￨3 addInjection￨3 (￨3 moduleNameBinder￨3 .￨3 getManagedObjectInjector￨3 (￨3 )￨3 ,￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 naming￨3 .￨3 ValueManagedReferenceFactory￨3 (￨3 Values￨3 .￨3 immediateValue￨3 (￨3 moduleDescription￨3 .￨3 getModuleName￨3 (￨3 )￨3 )￨3 )￨3 )￨3 .￨3 addDependency￨3 (￨3 moduleContextServiceName￨3 ,￨3 ServiceBasedNamingStore￨3 .￨3 class￨3 ,￨3 moduleNameBinder￨3 .￨3 getNamingStoreInjector￨3 (￨3 )￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 deploymentUnit￨3 .￨3 putAttachment￨3 (￨3 Attachments￨3 .￨3 MODULE_CONTEXT_CONFIG￨3 ,￨3 moduleContextServiceName￨3 )￨3 ;￨3 final￨3 InjectedEENamespaceContextSelector￨3 selector￨3 =￨3 new￨3 InjectedEENamespaceContextSelector￨3 (￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addDependency￨3 (￨3 appContextServiceName￨3 ,￨3 NamingStore￨3 .￨3 class￨3 ,￨3 selector￨3 .￨3 getAppContextInjector￨3 (￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addDependency￨3 (￨3 moduleContextServiceName￨3 ,￨3 NamingStore￨3 .￨3 class￨3 ,￨3 selector￨3 .￨3 getModuleContextInjector￨3 (￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addDependency￨3 (￨3 moduleContextServiceName￨3 ,￨3 NamingStore￨3 .￨3 class￨3 ,￨3 selector￨3 .￨3 getCompContextInjector￨3 (￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addDependency￨3 (￨3 JBOSS_CONTEXT_SERVICE_NAME￨3 ,￨3 NamingStore￨3 .￨3 class￨3 ,￨3 selector￨3 .￨3 getJbossContextInjector￨3 (￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addDependency￨3 (￨3 GLOBAL_CONTEXT_SERVICE_NAME￨3 ,￨3 NamingStore￨3 .￨3 class￨3 ,￨3 selector￨3 .￨3 getGlobalContextInjector￨3 (￨3 )￨3 )￨3 ;￨3 moduleDescription￨3 .￨3 setNamespaceContextSelector￨3 (￨3 selector￨3 )￨3 ;￨3 final￨3 Set￨3 <￨3 ServiceName￨3 >￨3 serviceNames￨3 =￨3 new￨3 HashSet￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 serviceNames￨3 .￨3 add￨3 (￨3 appContextServiceName￨3 )￨3 ;￨3 serviceNames￨3 .￨3 add￨3 (￨3 moduleContextServiceName￨3 )￨3 ;￨3 serviceNames￨3 .￨3 add￨3 (￨3 JBOSS_CONTEXT_SERVICE_NAME￨3 )￨3 ;￨3 serviceNames￨3 .￨3 add￨3 (￨3 GLOBAL_CONTEXT_SERVICE_NAME￨3 )￨3 ;￨3 final￨3 JavaNamespaceSetup￨3 setupAction￨3 =￨3 new￨3 JavaNamespaceSetup￨3 (￨3 selector￨3 ,￨3 serviceTarget￨3 )￨3 ;￨3 deploymentUnit￨3 .￨3 addToAttachmentList￨3 (￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 Attachments￨3 .￨3 SETUP_ACTIONS￨3 ,￨3 setupAction￨3 )￨3 ;￨3 <START_BUG>￨3 deploymentUnit￨3 .￨3 addToAttachmentList￨3 (￨3 EE_SETUP_ACTIONS￨3 ,￨3 setupAction￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HttpRequestHdr￨1 {￨1 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerFor￨2 (￨2 HTTP￨2 )￨2 ;￨2 public￨2 String￨2 method￨2 =￨2 new￨2 String￨2 (￨2 )￨2 ;￨2 public￨2 String￨2 url￨2 =￨2 new￨2 String￨2 (￨2 )￨2 ;￨2 public￨2 String￨2 version￨2 =￨2 new￨2 String￨2 (￨2 )￨2 ;￨2 public￨2 String￨2 postData￨2 =￨2 ""￨2 ;￨2 static￨2 String￨2 CR￨2 =￨2 "\r\n"￨2 ;￨2 private￨2 Map￨2 headers￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 public￨2 byte￨2 [￨2 ]￨2 parse￨2 (￨2 InputStream￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 parseFirstLine￨2 (￨2 String￨3 firstLine￨3 )￨2 {￨2 }￨2 public￨2 int￨2 parseLine￨2 (￨2 String￨3 nextLine￨3 )￨2 {￨2 }￨2 public￨2 HeaderManager￨2 getHeaderManager￨2 (￨2 )￨2 {￨2 HeaderManager￨3 manager￨3 =￨3 new￨3 HeaderManager￨3 (￨3 )￨3 ;￨3 Iterator￨3 keys￨3 =￨3 headers￨3 .￨3 keySet￨3 (￨3 )￨3 .￨3 iterator￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 keys￨4 .￨4 hasNext￨4 (￨4 )￨4 )￨3 {￨3 String￨4 key￨4 =￨4 (￨4 (￨4 String￨4 )￨4 (￨4 keys￨4 .￨4 next￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 (￨4 !￨4 (￨4 key￨4 .￨4 equals￨4 (￨4 "proxy-connection"￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 key￨4 .￨4 equals￨4 (￨4 "content-length"￨4 )￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 key￨4 .￨4 equals￨4 (￨4 "accept-encoding"￨4 )￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 manager￨4 .￨4 add￨4 (￨4 (￨4 (￨4 Header￨4 )￨4 (￨4 headers￨4 .￨4 get￨4 (￨4 key￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 manager￨3 .￨3 setName￨3 (￨3 "Browser-derived<seq2seq4repair_space>headers"￨3 )￨3 ;￨3 manager￨3 .￨3 setProperty￨3 (￨3 TEST_CLASS￨3 ,￨3 HeaderManager￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 manager￨3 .￨3 setProperty￨3 (￨3 GUI_CLASS￨3 ,￨3 HeaderPanel￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 manager￨3 ;￨3 }￨2 public￨2 HTTPSampler￨2 getSampler￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 MalformedURLException￨2 ,￨2 ProtocolException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getContentType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 MultipartUrlConfig￨2 isMultipart￨2 (￨2 String￨3 contentType￨3 )￨2 {￨2 }￨2 private￨2 HTTPSampler￨2 createSampler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 serverName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 serverPort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 serverUrl￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getToken￨2 (￨2 StringTokenizer￨3 tk￨3 )￨2 {￨2 }￨2 String￨2 getRemainder￨2 (￨2 StringTokenizer￨3 tk￨3 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Test￨2 extends￨2 TestCase￨2 {￨2 public￨3 Test￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setUp￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 testRepeatedArguments￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 SaveAttachmentCommand￨1 extends￨1 FolderCommand￨1 {￨1 File￨2 tempFile￨2 =￨2 null￨2 ;￨2 MimePart￨2 part￨2 ;￨2 static￨2 File￨2 lastDir￨2 =￨2 null￨2 ;￨2 public￨2 SaveAttachmentCommand￨2 (￨2 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateGUI￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 Worker￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 FolderCommandReference￨3 [￨3 ]￨3 r￨3 =￨3 (￨3 (￨3 FolderCommandReference￨3 [￨3 ]￨3 )￨3 (￨3 getReferences￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 Folder￨3 folder￨3 =￨3 (￨3 (￨3 Folder￨3 )￨3 (￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getFolder￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 Object￨3 [￨3 ]￨3 uids￨3 =￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getUids￨3 (￨3 )￨3 ;￨3 Integer￨3 [￨3 ]￨3 address￨3 =￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getAddress￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 part￨3 =￨3 folder￨3 .￨3 getMimePart￨3 (￨3 uids￨3 [￨3 0￨3 ]￨3 ,￨3 address￨3 ,￨3 worker￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 fileName￨3 =￨3 part￨3 .￨3 getHeader￨3 (￨3 )￨3 .￨3 getContentParameter￨3 (￨3 "name"￨3 )￨3 ;￨3 if￨3 (￨3 fileName￨4 ==￨4 null￨4 )￨3 {￨3 fileName￨4 =￨4 part￨4 .￨4 getHeader￨4 (￨4 )￨4 .￨4 getDispositionParameter￨4 (￨4 "filename"￨4 )￨4 ;￨4 }￨3 cFileChooser￨3 fileChooser￨3 ;￨3 if￨3 (￨3 (￨4 SaveAttachmentCommand￨4 .￨4 lastDir￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 fileChooser￨4 =￨4 new￨4 cFileChooser￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 fileChooser￨4 =￨4 new￨4 cFileChooser￨4 (￨4 SaveAttachmentCommand￨4 .￨4 lastDir￨4 )￨4 ;￨4 }￨3 cFileFilter￨3 fileFilter￨3 =￨3 new￨3 cFileFilter￨3 (￨3 )￨3 ;￨3 fileFilter￨3 .￨3 acceptFilesWithProperty￨3 (￨3 FILEPROPERTY_FILE￨3 )￨3 ;￨3 fileChooser￨3 .￨3 setDialogTitle￨3 (￨3 "Save<seq2seq4repair_space>Attachment<seq2seq4repair_space>as<seq2seq4repair_space>..."￨3 )￨3 ;￨3 if￨3 (￨3 fileName￨4 !=￨4 null￨4 )￨3 {￨3 fileChooser￨4 .￨4 forceSelectedFile￨4 (￨4 new￨4 File￨4 (￨4 fileName￨4 )￨4 )￨4 ;￨4 }￨3 fileChooser￨3 .￨3 setSelectFilter￨3 (￨3 fileFilter￨3 )￨3 ;￨3 while￨3 (￨3 true￨4 )￨3 {￨3 if￨4 (￨4 (￨5 fileChooser￨5 .￨5 showSaveDialog￨5 (￨5 null￨5 )￨5 )￨5 !=￨5 (￨5 JFileChooser￨5 .￨5 APPROVE_OPTION￨5 )￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 tempFile￨4 =￨4 fileChooser￨4 .￨4 getSelectedFile￨4 (￨4 )￨4 ;￨4 SaveAttachmentCommand￨4 .￨4 lastDir￨4 =￨4 tempFile￨4 .￨4 getParentFile￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 tempFile￨5 .￨5 exists￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 JOptionPane￨6 .￨6 showConfirmDialog￨6 (￨6 null￨6 ,￨6 "Overwrite<seq2seq4repair_space>File?"￨6 ,￨6 "Warning"￨6 ,￨6 JOptionPane￨6 .￨6 YES_NO_OPTION￨6 ,￨6 JOptionPane￨6 .￨6 WARNING_MESSAGE￨6 )￨6 )￨6 ==￨6 (￨6 JOptionPane￨6 .￨6 YES_OPTION￨6 )￨6 )￨5 {￨5 break￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 break￨5 ;￨5 }￨4 }￨3 Decoder￨3 decoder￨3 ;￨3 MimeHeader￨3 header￨3 ;￨3 header￨3 =￨3 part￨3 .￨3 getHeader￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 decoder￨4 =￨4 CoderRouter￨4 .￨4 getDecoder￨4 (￨4 header￨4 .￨4 contentTransferEncoding￨4 )￨4 ;￨4 decoder￨4 .￨4 decode￨4 (￨4 new￨4 ByteArrayInputStream￨4 (￨4 part￨4 .￨4 getBody￨4 (￨4 )￨4 .￨4 getBytes￨4 (￨4 "ISO_8859_1"￨4 )￨4 )￨4 ,￨4 new￨4 FileOutputStream￨4 (￨4 tempFile￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 ex￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ContactGenerator￨1 {￨1 private￨2 static￨2 ContactGenerator￨2 instance￨2 =￨2 new￨2 ContactGenerator￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 long￨2 nextId￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 ContactGenerator￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 firstNames￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 lastNames￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 ContactGenerator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 long￨2 generateId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Contact￨2 generate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generate￨2 (￨2 Collection￨3 <￨3 Contact￨3 >￨3 collection￨3 ,￨3 int￨3 count￨3 )￨2 {￨2 }￨2 private￨2 String￨2 generatePhoneNumber￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 StringBuffer￨3 (￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 2￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 0￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 0￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 "-555-"￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 1￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 0￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 0￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 append￨3 (￨3 rint￨3 (￨3 0￨3 ,￨3 9￨3 )￨3 )￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 int￨2 rint￨2 (￨2 int￨3 min￨3 ,￨3 int￨3 max￨3 )￨2 {￨2 }￨2 private￨2 String￨2 randomString￨2 (￨2 String￨3 [￨3 ]￨3 choices￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AutoWebApp￨1 extends￨1 BaseInterceptor￨1 {￨1 int￨2 debug￨2 =￨2 0￨2 ;￨2 Hashtable￨2 hosts￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 String￨2 appsD￨2 =￨2 "webapps"￨2 ;￨2 String￨2 defaultHost￨2 =￨2 null￨2 ;￨2 boolean￨2 flat￨2 =￨2 true￨2 ;￨2 char￨2 hostSeparator￨2 =￨2 '@'￨2 ;￨2 char￨2 dotReplacement￨2 =￨2 '_'￨2 ;￨2 char￨2 slashReplacement￨2 =￨2 '_'￨2 ;￨2 public￨2 AutoWebApp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDir￨2 (￨2 String￨3 d￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setHost￨2 (￨2 String￨3 h￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFlat￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 void￨2 engineInit￨2 (￨2 ContextManager￨2 cm￨2 )￨2 throws￨2 TomcatException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addWebApp￨2 (￨2 ContextManager￨2 cm￨2 ,￨2 File￨2 dir￨2 ,￨2 String￨2 host￨2 ,￨2 String￨2 name￨2 )￨2 throws￨2 TomcatException￨2 (￨2 )￨2 {￨2 host￨3 =￨3 unEscapeHost￨3 (￨3 host￨3 )￨3 ;￨3 if￨3 (￨3 host￨4 ==￨4 null￨4 )￨3 {￨3 host￨4 =￨4 "DEFAULT"￨4 ;￨4 }￨3 String￨3 path￨3 =￨3 "/"￨3 +￨3 (￨3 unEscapePath￨3 (￨3 name￨3 )￨3 )￨3 ;￨3 log￨3 (￨3 (￨3 (￨3 (￨3 (￨3 (￨3 "Auto-Adding<seq2seq4repair_space>"￨3 +￨3 name￨3 )￨3 +￨3 "<seq2seq4repair_space>"￨3 )￨3 +￨3 host￨3 )￨3 +￨3 "<seq2seq4repair_space>"￨3 )￨3 +￨3 path￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 path￨4 .￨4 equals￨4 (￨4 "/ROOT"￨4 )￨4 )￨3 {￨3 path￨4 =￨4 ""￨4 ;￨4 }￨3 Hashtable￨3 loaded￨3 =￨3 (￨3 (￨3 Hashtable￨3 )￨3 (￨3 hosts￨3 .￨3 get￨3 (￨3 host￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 loaded￨3 .￨3 get￨3 (￨3 path￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 log￨3 (￨3 "Already<seq2seq4repair_space>loaded"￨3 )￨3 ;￨3 return￨3 ;￨3 if￨3 (￨3 dir￨4 .￨4 isDirectory￨4 (￨4 )￨4 )￨3 {￨3 Context￨4 ctx￨4 =￨4 new￨4 Context￨4 (￨4 )￨4 ;￨4 ctx￨4 .￨4 setContextManager￨4 (￨4 cm￨4 )￨4 ;￨4 ctx￨4 .￨4 setPath￨4 (￨4 path￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 "DEFAULT"￨5 .￨5 equals￨5 (￨5 host￨5 )￨5 )￨5 )￨4 {￨4 ctx￨5 .￨5 setHost￨5 (￨5 host￨5 )￨5 ;￨5 }￨4 try￨4 (￨4 )￨4 {￨4 ctx￨5 .￨5 setDocBase￨5 (￨5 dir￨5 .￨5 getCanonicalPath￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 ex￨5 )￨4 {￨4 ctx￨5 .￨5 setDocBase￨5 (￨5 dir￨5 .￨5 getAbsolutePath￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 debug￨5 )￨5 >￨5 0￨5 )￨4 {￨4 log￨5 (￨5 (￨5 (￨5 (￨5 (￨5 (￨5 "automatic<seq2seq4repair_space>add<seq2seq4repair_space>"￨5 +￨5 host￨5 )￨5 +￨5 ":"￨5 )￨5 +￨5 (￨5 ctx￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>"￨5 )￨5 +￨5 path￨5 )￨5 )￨5 ;￨5 }￨4 cm￨4 .￨4 addContext￨4 (￨4 ctx￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 log￨4 (￨4 (￨4 "Not<seq2seq4repair_space>a<seq2seq4repair_space>dir<seq2seq4repair_space>"￨4 +￨4 (￨4 dir￨4 .￨4 getAbsolutePath￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 addVHost￨2 (￨2 ContextManager￨2 cm￨2 ,￨2 File￨2 dir￨2 ,￨2 String￨2 host￨2 )￨2 throws￨2 TomcatException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 unEscapeHost￨2 (￨2 String￨3 hostName￨3 )￨2 {￨2 }￨2 private￨2 String￨2 unEscapePath￨2 (￨2 String￨3 pathDir￨3 )￨2 {￨2 }￨2 private￨2 String￨2 unEscapeString￨2 (￨2 String￨3 s￨3 ,￨3 char￨3 esc￨3 ,￨3 char￨3 repl￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LocalizerTest￨1 extends￨1 WicketTestCase￨1 {￨1 private￨2 IResourceSettings￨2 settings￨2 ;￨2 private￨2 Localizer￨2 localizer￨2 ;￨2 public￨2 LocalizerTest￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringValidString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringMissingStringReturnDefault￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringMissingStringNoDefault￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringMissingStringDoNotUseDefault￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringMissingStringExceptionThrown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetStringPropertySubstitution￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInComponentConstructor￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 new￨3 LocalizerTest￨3 .￨3 MyLabel￨3 (￨3 new￨3 EmptyPage￨3 (￨3 )￨3 ,￨3 "myLabel"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testTwoComponents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 MyLabel￨2 extends￨2 Label￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 MyLabel￨3 (￨3 MarkupContainer￨4 parent￨4 ,￨4 final￨4 String￨4 id￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 GammaTest￨1 extends￨1 TestCase￨1 {￨1 public￨2 GammaTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 void￨2 testRegularizedGamma￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 a￨3 ,￨3 double￨3 x￨3 )￨2 {￨2 }￨2 private￨2 void￨2 testLogGamma￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 x￨3 )￨2 {￨2 <START_BUG>￨3 double￨3 actual￨3 =￨3 Gamma￨3 .￨3 logGamma￨3 (￨3 x￨3 ,￨3 1.0E-4￨3 ,￨3 Integer￨3 .￨3 MAX_VALUE￨3 )￨3 ;￨3 <END_BUG>￨3 TestUtils￨3 .￨3 assertEquals￨3 (￨3 expected￨3 ,￨3 actual￨3 ,￨3 1.0E-4￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testRegularizedGammaNanPositive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaPositiveNan￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaNegativePositive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaPositiveNegative￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaZeroPositive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaPositiveZero￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegularizedGammaPositivePositive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLogGammaNan￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLogGammaNegative￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLogGammaZero￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLogGammaPositive￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 ParentNode￨1 extends￨1 NodeImpl￨1 {￨1 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 2815829867152120872L￨2 ;￨2 protected￨2 DocumentImpl￨2 ownerDocument￨2 ;￨2 protected￨2 ChildNode￨2 firstChild￨2 =￨2 null￨2 ;￨2 protected￨2 int￨2 changes￨2 =￨2 0￨2 ;￨2 protected￨2 transient￨2 int￨2 nodeListLength￨2 =￨2 -￨2 1￨2 ;￨2 protected￨2 transient￨2 ChildNode￨2 nodeListNode￨2 ;￨2 protected￨2 transient￨2 int￨2 nodeListIndex￨2 =￨2 -￨2 1￨2 ;￨2 protected￨2 ParentNode￨2 (￨2 DocumentImpl￨3 ownerDocument￨3 )￨2 {￨2 }￨2 public￨2 ParentNode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 cloneNode￨2 (￨2 boolean￨3 deep￨3 )￨2 {￨2 }￨2 public￨2 Document￨2 getOwnerDocument￨2 (￨2 )￨2 {￨2 }￨2 DocumentImpl￨2 ownerDocument￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setOwnerDocument￨2 (￨2 DocumentImpl￨3 doc￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasChildNodes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NodeList￨2 getChildNodes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 getFirstChild￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 getLastChild￨2 (￨2 )￨2 {￨2 }￨2 final￨2 ChildNode￨2 lastChild￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 lastChild￨2 (￨2 ChildNode￨3 node￨3 )￨2 {￨2 }￨2 public￨2 Node￨2 insertBefore￨2 (￨2 Node￨2 newChild￨2 ,￨2 Node￨2 refChild￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 Node￨2 internalInsertBefore￨2 (￨2 Node￨2 newChild￨2 ,￨2 Node￨2 refChild￨2 ,￨2 int￨2 mutationMask￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 removeChild￨2 (￨2 Node￨2 oldChild￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 Node￨2 internalRemoveChild￨2 (￨2 Node￨2 oldChild￨2 ,￨2 int￨2 mutationMask￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 replaceChild￨2 (￨2 Node￨2 newChild￨2 ,￨2 Node￨2 oldChild￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLength￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 item￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 normalize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setReadOnly￨2 (￨2 boolean￨3 readOnly￨3 ,￨3 boolean￨3 deep￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 changed￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 changes￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 synchronizeChildren￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 synchronizeChildren￨2 (￨2 int￨3 nodeIndex￨3 )￨2 {￨2 }￨2 private￨2 void￨2 writeObject￨2 (￨2 ObjectOutputStream￨2 out￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 syncChildren￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 synchronizeChildren￨3 (￨3 )￨3 ;￨3 }￨3 out￨3 .￨3 defaultWriteObject￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 readObject￨2 (￨2 ObjectInputStream￨2 ois￨2 )￨2 throws￨2 IOException￨2 ,￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 QueryNodeImpl￨1 implements￨1 Cloneable￨1 ,￨1 QueryNode￨1 {￨1 public￨2 static￨2 final￨2 String￨2 PLAINTEXT_FIELD_NAME￨2 =￨2 "_plain"￨2 ;￨2 private￨2 boolean￨2 isLeaf￨2 =￨2 true￨2 ;￨2 private￨2 Hashtable￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 tags￨2 =￨2 new￨2 Hashtable￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 List￨2 <￨2 QueryNode￨2 >￨2 clauses￨2 =￨2 null￨2 ;￨2 protected￨2 void￨2 allocate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 add￨2 (￨2 QueryNode￨3 child￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 add￨2 (￨2 List￨3 <￨3 QueryNode￨3 >￨3 children￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLeaf￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 set￨2 (￨2 List￨3 <￨3 QueryNode￨3 >￨3 children￨3 )￨2 {￨2 }￨2 public￨2 QueryNode￨2 cloneTree￨2 (￨2 )￨2 throws￨2 CloneNotSupportedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 throws￨2 CloneNotSupportedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setLeaf￨2 (￨2 boolean￨3 isLeaf￨3 )￨2 {￨2 }￨2 public￨2 final￨2 List￨2 <￨2 QueryNode￨2 >￨2 getChildren￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTag￨2 (￨2 String￨3 tagName￨3 ,￨3 Object￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 unsetTag￨2 (￨2 String￨3 tagName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 containsTag￨2 (￨2 String￨3 tagName￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 this￨3 .￨3 tags￨3 .￨3 containsKey￨3 (￨3 tagName￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Object￨2 getTag￨2 (￨2 String￨3 tagName￨3 )￨2 {￨2 }￨2 private￨2 QueryNode￨2 parent￨2 =￨2 null￨2 ;￨2 private￨2 void￨2 setParent￨2 (￨2 QueryNode￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 QueryNode￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isRoot￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 toQueryStringIgnoreFields￨2 =￨2 false￨2 ;￨2 protected￨2 boolean￨2 isDefaultField￨2 (￨2 CharSequence￨3 fld￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 Map￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 getTagMap￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 UMLAction￨1 extends￨1 AbstractAction￨1 {￨1 protected￨2 static￨2 Category￨2 cat￨2 =￨2 Category￨2 .￨2 getInstance￨2 (￨2 UMLAction￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 boolean￨2 HAS_ICON￨2 =￨2 true￨2 ;￨2 public￨2 static￨2 boolean￨2 NO_ICON￨2 =￨2 false￨2 ;￨2 public￨2 UMLAction￨2 (￨2 String￨2 name￨2 )￨2 {￨2 }￨2 public￨2 UMLAction￨2 (￨2 String￨3 name￨3 ,￨3 boolean￨3 hasIcon￨3 )￨2 {￨2 }￨2 public￨2 UMLAction￨2 (￨2 String￨3 name￨3 ,￨3 boolean￨3 global￨3 ,￨3 boolean￨3 hasIcon￨3 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 markNeedsSave￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 ProjectBrowser￨4 .￨4 TheInstance￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 Project￨4 p￨4 =￨4 TheInstance￨4 .￨4 getProject￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 p￨5 !=￨5 null￨5 )￨4 {￨4 p￨5 .￨5 setNeedsSave￨5 (￨5 true￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 updateEnabled￨2 (￨2 Object￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 shouldBeEnabled￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 static￨2 String￨2 stripJunk￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 KeyStroke￨2 getShortcut￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 String￨2 getMnemonic￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEnabled￨2 (￨2 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 Persistence￨1 {￨1 static￨2 final￨2 String￨2 PACKAGE_BASE￨2 =￨2 "activities"￨2 ;￨2 static￨2 final￨2 String￨2 PACKAGE_FULL￨2 =￨2 "org.eclipse.ui."￨2 +￨2 (￨2 Persistence￨2 .￨2 PACKAGE_BASE￨2 )￨2 ;￨2 static￨2 final￨2 String￨2 TAG_ACTIVITY_BINDING￨2 =￨2 "activityBinding"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_ACTIVITY_ID￨2 =￨2 "activityId"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_DESCRIPTION￨2 =￨2 "description"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_ID￨2 =￨2 "id"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_NAME￨2 =￨2 "name"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_PARENT_ID￨2 =￨2 "parentId"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_PATTERN￨2 =￨2 "pattern"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_PLUGIN_ID￨2 =￨2 "pluginId"￨2 ;￨2 static￨2 final￨2 String￨2 TAG_ACTIVITY￨2 =￨2 "activity"￨2 ;￨2 static￨2 IActivityPatternBindingDefinition￨2 readActivityBindingDefinition￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 pluginIdOverride￨3 )￨2 {￨2 if￨3 (￨3 memento￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 NullPointerException￨4 (￨4 )￨4 ;￨4 }￨3 String￨3 activityId￨3 =￨3 memento￨3 .￨3 getString￨3 (￨3 Persistence￨3 .￨3 TAG_ACTIVITY_ID￨3 )￨3 ;￨3 String￨3 pluginId￨3 =￨3 (￨3 pluginIdOverride￨3 !=￨3 null￨3 )￨3 ?￨3 pluginIdOverride￨3 :￨3 memento￨3 .￨3 getString￨3 (￨3 Persistence￨3 .￨3 TAG_PLUGIN_ID￨3 )￨3 ;￨3 String￨3 pattern￨3 =￨3 memento￨3 .￨3 getString￨3 (￨3 Persistence￨3 .￨3 TAG_PATTERN￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 new￨3 ActivityPatternBindingDefinition￨3 (￨3 activityId￨3 ,￨3 pluginId￨3 ,￨3 activityId￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 static￨2 List￨2 readActivityBindingDefinitions￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 pluginIdOverride￨3 )￨2 {￨2 }￨2 static￨2 IActivityDefinition￨2 readActivityDefinition￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 pluginIdOverride￨3 )￨2 {￨2 }￨2 static￨2 List￨2 readActivityDefinitions￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 pluginIdOverride￨3 )￨2 {￨2 }￨2 static￨2 void￨2 writeActivityBindingDefinition￨2 (￨2 IMemento￨3 memento￨3 ,￨3 IActivityPatternBindingDefinition￨3 activityBindingDefinition￨3 )￨2 {￨2 }￨2 static￨2 void￨2 writeActivityBindingDefinitions￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 name￨3 ,￨3 List￨3 activityBindingDefinitions￨3 )￨2 {￨2 }￨2 static￨2 void￨2 writeActivityDefinition￨2 (￨2 IMemento￨3 memento￨3 ,￨3 IActivityDefinition￨3 activityDefinition￨3 )￨2 {￨2 }￨2 static￨2 void￨2 writeActivityDefinitions￨2 (￨2 IMemento￨3 memento￨3 ,￨3 String￨3 name￨3 ,￨3 List￨3 activityDefinitions￨3 )￨2 {￨2 }￨2 private￨2 Persistence￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FileUploadFieldTest￨1 extends￨1 WicketTestCase￨1 {￨1 public￨2 FileUploadFieldTest￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInternalDetach￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 MockPageWithFormAndUploadField￨3 page￨3 =￨3 new￨3 MockPageWithFormAndUploadField￨3 (￨3 )￨3 ;￨3 FileUploadField￨3 field￨3 =￨3 new￨3 FileUploadField￨3 (￨3 page￨3 .￨3 getForm￨3 (￨3 )￨3 ,￨3 "upload"￨3 )￨3 ;￨3 tester￨3 .￨3 startPage￨3 (￨3 new￨3 ITestPageSource￨3 (￨3 )￨3 {￨3 private￨4 static￨4 final￨4 long￨4 serialVersionUID￨4 =￨4 1L￨4 ;￨4 public￨4 Page￨4 getTestPage￨4 (￨4 )￨4 {￨4 return￨5 page￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 RequestCycle￨3 requestCycle￨3 =￨3 tester￨3 .￨3 createRequestCycle￨3 (￨3 )￨3 ;￨3 MockHttpServletRequest￨3 servletRequest￨3 =￨3 tester￨3 .￨3 getServletRequest￨3 (￨3 )￨3 ;￨3 servletRequest￨3 .￨3 setMethod￨3 (￨3 "POST"￨3 )￨3 ;￨3 servletRequest￨3 .￨3 setParameter￨3 (￨3 "form2:hf:fs"￨3 ,￨3 ""￨3 )￨3 ;￨3 servletRequest￨3 .￨3 setParameter￨3 (￨3 "wicketState"￨3 ,￨3 ""￨3 )￨3 ;￨3 servletRequest￨3 .￨3 addFile￨3 (￨3 "upload"￨3 ,￨3 new￨3 File￨3 (￨3 "pom.xml"￨3 )￨3 ,￨3 "text/xml"￨3 )￨3 ;￨3 requestCycle￨3 .￨3 setRequest￨3 (￨3 new￨3 wicket￨3 .￨3 protocol￨3 .￨3 http￨3 .￨3 servlet￨3 .￨3 MultipartServletWebRequest￨3 (￨3 servletRequest￨3 ,￨3 Bytes￨3 .￨3 MAX￨3 )￨3 )￨3 ;￨3 FileUpload￨3 fileUpload￨3 =￨3 field￨3 .￨3 getFileUpload￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 fileUpload￨3 )￨3 ;￨3 InputStream￨3 is￨3 =￨3 fileUpload￨3 .￨3 getInputStream￨3 (￨3 )￨3 ;￨3 assertTrue￨3 (￨3 (￨3 (￨3 is￨3 .￨3 read￨3 (￨3 )￨3 )￨3 !=￨3 (￨3 -￨3 1￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 field￨3 .￨3 internalOnDetach￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 try￨3 (￨3 )￨3 {￨3 is￨4 .￨4 read￨4 (￨4 )￨4 ;￨4 fail￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 fail￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 CLIWrapper￨1 {￨1 private￨2 final￨2 CommandContext￨2 ctx￨2 ;￨2 private￨2 ByteArrayOutputStream￨2 consoleOut￨2 ;￨2 public￨2 CLIWrapper￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CLIWrapper￨2 (￨2 boolean￨2 connect￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CLIWrapper￨2 (￨2 boolean￨2 connect￨2 ,￨2 String￨2 cliAddress￨2 )￨2 throws￨2 CliInitializationException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 InputStream￨2 createConsoleInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isConnected￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 sendConnect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 sendConnect￨2 (￨2 String￨3 cliAddress￨3 )￨2 {￨2 String￨3 addr￨3 =￨3 (￨3 cliAddress￨3 !=￨3 null￨3 )￨3 ?￨3 cliAddress￨3 :￨3 TestSuiteEnvironment￨3 .￨3 getServerAddress￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 ctx￨4 .￨4 connectController￨4 (￨4 addr￨4 ,￨4 TestSuiteEnvironment￨4 .￨4 getServerPort￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 true￨4 ;￨4 }￨3 catch￨3 (￨3 CommandLineException￨4 e￨4 )￨3 {￨3 e￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 return￨4 false￨4 ;￨4 }￨3 }￨2 public￨2 boolean￨2 sendLine￨2 (￨2 String￨3 line￨3 ,￨3 boolean￨3 ignoreError￨3 )￨2 {￨2 }￨2 public￨2 void￨2 sendLine￨2 (￨2 String￨3 line￨3 )￨2 {￨2 }￨2 public￨2 String￨2 readOutput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CLIOpResult￨2 readAllAsOpResult￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 quit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasQuit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getUsername￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getPassword￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CharacterLiteral￨1 extends￨1 Expression￨1 {￨1 private￨2 String￨2 escapedValue￨2 =￨2 "\'X\'"￨2 ;￨2 CharacterLiteral￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getNodeType￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 subtreeMatch￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 <START_BUG>￨3 boolean￨3 visitChildren￨3 =￨3 visitor￨3 .￨3 visit￨3 (￨3 this￨3 )￨3 ;￨3 <END_BUG>￨3 visitor￨3 .￨3 endVisit￨3 (￨3 this￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 getEscapedValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setEscapedValue￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 char￨2 charValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCharValue￨2 (￨2 char￨3 value￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 XSDAttributeGroupTraverser￨1 extends￨1 XSDAbstractTraverser￨1 {￨1 XSDAttributeGroupTraverser￨2 (￨2 XSDHandler￨3 handler￨3 ,￨3 XSAttributeChecker￨3 gAttrCheck￨3 )￨2 {￨2 }￨2 XSAttributeGroupDecl￨2 traverseLocal￨2 (￨2 Element￨3 elmNode￨3 ,￨3 XSDocumentInfo￨3 schemaDoc￨3 ,￨3 SchemaGrammar￨3 grammar￨3 )￨2 {￨2 }￨2 XSAttributeGroupDecl￨2 traverseGlobal￨2 (￨2 Element￨3 elmNode￨3 ,￨3 XSDocumentInfo￨3 schemaDoc￨3 ,￨3 SchemaGrammar￨3 grammar￨3 )￨2 {￨2 XSAttributeGroupDecl￨3 attrGrp￨3 =￨3 new￨3 XSAttributeGroupDecl￨3 (￨3 )￨3 ;￨3 Object￨3 [￨3 ]￨3 attrValues￨3 =￨3 fAttrChecker￨3 .￨3 checkAttributes￨3 (￨3 elmNode￨3 ,￨3 true￨3 ,￨3 schemaDoc￨3 )￨3 ;￨3 String￨3 nameAttr￨3 =￨3 (￨3 (￨3 String￨3 )￨3 (￨3 attrValues￨3 [￨3 XSAttributeChecker￨3 .￨3 ATTIDX_NAME￨3 ]￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 nameAttr￨4 ==￨4 null￨4 )￨3 {￨3 reportSchemaError￨4 (￨4 "s4s-att-must-appear"￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 elmNode￨4 )￨4 ;￨4 nameAttr￨4 =￨4 "no<seq2seq4repair_space>name"￨4 ;￨4 }￨3 attrGrp￨3 .￨3 fName￨3 =￨3 nameAttr￨3 ;￨3 attrGrp￨3 .￨3 fTargetNamespace￨3 =￨3 schemaDoc￨3 .￨3 fTargetNamespace￨3 ;￨3 Element￨3 child￨3 =￨3 DOMUtil￨3 .￨3 getFirstChildElement￨3 (￨3 elmNode￨3 )￨3 ;￨3 XSAnnotationImpl￨3 annotation￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 child￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 DOMUtil￨4 .￨4 getLocalName￨4 (￨4 child￨4 )￨4 .￨4 equals￨4 (￨4 ELT_ANNOTATION￨4 )￨4 )￨4 )￨3 {￨3 annotation￨4 =￨4 traverseAnnotationDecl￨4 (￨4 child￨4 ,￨4 attrValues￨4 ,￨4 false￨4 ,￨4 schemaDoc￨4 )￨4 ;￨4 child￨4 =￨4 DOMUtil￨4 .￨4 getNextSiblingElement￨4 (￨4 child￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 String￨4 text￨4 =￨4 DOMUtil￨4 .￨4 getSyntheticAnnotation￨4 (￨4 elmNode￨4 )￨4 ;￨4 if￨4 (￨4 text￨5 !=￨5 null￨5 )￨4 {￨4 annotation￨5 =￨5 traverseSyntheticAnnotation￨5 (￨5 elmNode￨5 ,￨5 text￨5 ,￨5 attrValues￨5 ,￨5 false￨5 ,￨5 schemaDoc￨5 )￨5 ;￨5 }￨4 }￨3 Element￨3 nextNode￨3 =￨3 traverseAttrsAndAttrGrps￨3 (￨3 child￨3 ,￨3 attrGrp￨3 ,￨3 schemaDoc￨3 ,￨3 grammar￨3 ,￨3 null￨3 )￨3 ;￨3 if￨3 (￨3 nextNode￨4 !=￨4 null￨4 )￨3 {￨3 Object￨4 [￨4 ]￨4 args￨4 =￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ;￨4 reportSchemaError￨4 (￨4 "s4s-elt-must-match.1"￨4 ,￨4 args￨4 ,￨4 nextNode￨4 )￨4 ;￨4 }￨3 attrGrp￨3 .￨3 removeProhibitedAttrs￨3 (￨3 )￨3 ;￨3 XSAttributeGroupDecl￨3 redefinedAttrGrp￨3 =￨3 (￨3 (￨3 XSAttributeGroupDecl￨3 )￨3 (￨3 fSchemaHandler￨3 .￨3 getGrpOrAttrGrpRedefinedByRestriction￨3 (￨3 ATTRIBUTEGROUP_TYPE￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 xerces￨3 .￨3 xni￨3 .￨3 QName￨3 (￨3 XMLSymbols￨3 .￨3 EMPTY_STRING￨3 ,￨3 nameAttr￨3 ,￨3 nameAttr￨3 ,￨3 schemaDoc￨3 .￨3 fTargetNamespace￨3 )￨3 ,￨3 schemaDoc￨3 ,￨3 elmNode￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 redefinedAttrGrp￨4 !=￨4 null￨4 )￨3 {￨3 Object￨4 [￨4 ]￨4 errArgs￨4 =￨4 attrGrp￨4 .￨4 validRestrictionOf￨4 (￨4 nameAttr￨4 ,￨4 redefinedAttrGrp￨4 )￨4 ;￨4 if￨4 (￨4 errArgs￨5 !=￨5 null￨5 )￨4 {￨4 reportSchemaError￨5 (￨5 (￨5 (￨5 String￨5 )￨5 (￨5 errArgs￨5 [￨5 (￨5 (￨5 errArgs￨5 .￨5 length￨5 )￨5 -￨5 1￨5 )￨5 ]￨5 )￨5 )￨5 ,￨5 errArgs￨5 ,￨5 child￨5 )￨5 ;￨5 reportSchemaError￨5 (￨5 "src-redefine.7.2.2"￨5 ,￨5 new￨5 Object￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 ,￨5 child￨5 )￨5 ;￨5 }￨4 }￨3 XSObjectList￨3 annotations￨3 ;￨3 if￨3 (￨3 annotation￨4 !=￨4 null￨4 )￨3 {￨3 annotations￨4 =￨4 new￨4 XSObjectListImpl￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 (￨4 (￨4 XSObjectListImpl￨4 )￨4 (￨4 annotations￨4 )￨4 )￨4 .￨4 add￨4 (￨4 annotation￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 else￨3 {￨3 annotations￨4 =￨4 XSObjectListImpl￨4 .￨4 EMPTY_LIST￨4 ;￨4 }￨3 attrGrp￨3 .￨3 fAnnotations￨3 =￨3 annotations￨3 ;￨3 grammar￨3 .￨3 addGlobalAttributeGroupDecl￨3 (￨3 attrGrp￨3 )￨3 ;￨3 fAttrChecker￨3 .￨3 returnAttrArray￨3 (￨3 attrValues￨3 ,￨3 schemaDoc￨3 )￨3 ;￨3 return￨3 attrGrp￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 EvaluationTest￨1 {￨1 public￨2 LeastSquaresBuilder￨2 builder￨2 (￨2 StatisticalReferenceDataset￨3 dataset￨3 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeResiduals￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeCovariance￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeValueAndJacobian￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeCost￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeRMS￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testComputeSigma￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testEvaluateCopiesPoint￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testLazyEvaluation￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testLazyEvaluationPrecondition￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDirectEvaluation￨2 (￨2 )￨2 {￨2 final￨3 RealVector￨3 dummy￨3 =￨3 new￨3 ArrayRealVector￨3 (￨3 new￨3 double￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 )￨3 ;￨3 final￨3 LeastSquaresProblem￨3 p￨3 =￨3 LeastSquaresFactory￨3 .￨3 create￨3 (￨3 LeastSquaresFactory￨3 .￨3 model￨3 (￨3 dummyModel￨3 (￨3 )￨3 ,￨3 dummyJacobian￨3 (￨3 )￨3 )￨3 ,￨3 dummy￨3 ,￨3 dummy￨3 ,￨3 null￨3 ,￨3 0￨3 ,￨3 0￨3 ,￨3 false￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 final￨4 Evaluation￨4 eval￨4 =￨4 p￨4 .￨4 evaluate￨4 (￨4 dummy￨4 )￨4 ;￨4 <END_BUG>￨4 Assert￨4 .￨4 fail￨4 (￨4 "Exception<seq2seq4repair_space>expected"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 RuntimeException￨4 e￨4 )￨3 {￨3 final￨4 String￨4 msg￨4 =￨4 e￨4 .￨4 getMessage￨4 (￨4 )￨4 ;￨4 Assert￨4 .￨4 assertTrue￨4 (￨4 (￨4 (￨4 msg￨4 .￨4 equals￨4 (￨4 "dummyModel"￨4 )￨4 )￨4 ||￨4 (￨4 msg￨4 .￨4 equals￨4 (￨4 "dummyJacobian"￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 MultivariateVectorFunction￨2 dummyModel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 MultivariateMatrixFunction￨2 dummyJacobian￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AuthorizationInterceptor￨1 implements￨1 Interceptor￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 AuthorizationInterceptor￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 EJBMethodSecurityMetaData￨2 ejbMethodSecurityMetaData￨2 ;￨2 private￨2 final￨2 String￨2 viewClassName￨2 ;￨2 private￨2 final￨2 Method￨2 viewMethod￨2 ;￨2 public￨2 AuthorizationInterceptor￨2 (￨2 final￨2 EJBMethodSecurityMetaData￨2 ejbMethodSecurityMetaData￨2 ,￨2 final￨2 String￨2 viewClassName￨2 ,￨2 final￨2 Method￨2 viewMethod￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 processInvocation￨2 (￨2 InterceptorContext￨2 context￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 Component￨3 component￨3 =￨3 context￨3 .￨3 getPrivateData￨3 (￨3 Component￨3 .￨3 class￨3 )￨3 ;￨3 if￨3 (￨3 (￨3 component￨3 instanceof￨3 EJBComponent￨3 )￨3 ==￨3 false￨3 )￨3 {￨3 throw￨4 new￨4 IllegalStateException￨4 (￨4 (￨4 (￨4 (￨4 "Unexpected<seq2seq4repair_space>component<seq2seq4repair_space>type:<seq2seq4repair_space>"￨4 +￨4 (￨4 component￨4 .￨4 getClass￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>expected:<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 EJBComponent￨4 .￨4 class￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 final￨3 Method￨3 invokedMethod￨3 =￨3 context￨3 .￨3 getMethod￨3 (￨3 )￨3 ;￨3 final￨3 ComponentView￨3 componentView￨3 =￨3 context￨3 .￨3 getPrivateData￨3 (￨3 ComponentView￨3 .￨3 class￨3 )￨3 ;￨3 final￨3 String￨3 viewClassOfInvokedMethod￨3 =￨3 componentView￨3 .￨3 getViewClass￨3 (￨3 )￨3 .￨3 getName￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨3 !￨3 (￨3 this￨3 .￨3 viewClassName￨3 .￨3 equals￨3 (￨3 viewClassOfInvokedMethod￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 !￨3 (￨3 this￨3 .￨3 viewMethod￨3 .￨3 equals￨3 (￨3 invokedMethod￨3 )￨3 )￨3 )￨3 )￨3 {￨3 throw￨4 new￨4 IllegalStateException￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 this￨4 .￨4 getClass￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>cannot<seq2seq4repair_space>handle<seq2seq4repair_space>method<seq2seq4repair_space>"￨4 )￨4 +￨4 invokedMethod￨4 )￨4 +￨4 "<seq2seq4repair_space>of<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨4 )￨4 +￨4 viewClassOfInvokedMethod￨4 )￨4 +￨4 ".Expected<seq2seq4repair_space>view<seq2seq4repair_space>"￨4 )￨4 +￨4 "method<seq2seq4repair_space>to<seq2seq4repair_space>be<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 viewMethod￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>on<seq2seq4repair_space>view<seq2seq4repair_space>class<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 viewClassName￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 final￨3 EJBComponent￨3 ejbComponent￨3 =￨3 (￨3 (￨3 EJBComponent￨3 )￨3 (￨3 component￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 ejbMethodSecurityMetaData￨4 .￨4 isAccessDenied￨4 (￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 javax￨4 .￨4 ejb￨4 .￨4 EJBAccessException￨4 (￨4 (￨4 (￨4 (￨4 (￨4 "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨4 +￨4 invokedMethod￨4 )￨4 +￨4 "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 ejbComponent￨4 .￨4 getComponentName￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 ejbMethodSecurityMetaData￨4 .￨4 isPermitAll￨4 (￨4 )￨4 )￨4 )￨3 {￨3 final￨4 Collection￨4 <￨4 String￨4 >￨4 allowedRoles￨4 =￨4 ejbMethodSecurityMetaData￨4 .￨4 getRolesAllowed￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 allowedRoles￨5 .￨5 isEmpty￨5 (￨5 )￨5 )￨5 )￨4 {￨4 final￨5 SimpleSecurityManager￨5 securityManager￨5 =￨5 ejbComponent￨5 .￨5 getSecurityManager￨5 (￨5 )￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 !￨5 (￨5 securityManager￨5 .￨5 isCallerInRole￨5 (￨5 allowedRoles￨5 .￨5 toArray￨5 (￨5 new￨5 String￨5 [￨5 allowedRoles￨5 .￨5 size￨5 (￨5 )￨5 ]￨5 )￨5 )￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 throw￨5 new￨5 javax￨5 .￨5 ejb￨5 .￨5 EJBAccessException￨5 (￨5 (￨5 (￨5 (￨5 (￨5 "Invocation<seq2seq4repair_space>on<seq2seq4repair_space>method:<seq2seq4repair_space>"￨5 +￨5 invokedMethod￨5 )￨5 +￨5 "<seq2seq4repair_space>of<seq2seq4repair_space>bean:<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 ejbComponent￨5 .￨5 getComponentName￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>allowed"￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 context￨3 .￨3 proceed￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 WebMvcConfigurationSupportTests￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 requestMappingHandlerMapping￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 emptyViewControllerHandlerMapping￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 beanNameHandlerMapping￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 emptyResourceHandlerMapping￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 emptyDefaultServletHandlerMapping￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 requestMappingHandlerAdapter￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 ApplicationContext￨3 context￨3 =￨3 initContext￨3 (￨3 WebMvcConfigurationSupportTests￨3 .￨3 WebConfig￨3 .￨3 class￨3 )￨3 ;￨3 RequestMappingHandlerAdapter￨3 adapter￨3 =￨3 context￨3 .￨3 getBean￨3 (￨3 RequestMappingHandlerAdapter￨3 .￨3 class￨3 )￨3 ;￨3 List￨3 <￨3 HttpMessageConverter￨3 <￨3 ?￨3 >￨3 >￨3 converters￨3 =￨3 adapter￨3 .￨3 getMessageConverters￨3 (￨3 )￨3 ;￨3 assertEquals￨3 (￨3 9￨3 ,￨3 converters￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 HttpMessageConverter￨3 <￨3 ?￨3 >￨3 converter￨3 :￨3 converters￨3 )￨3 {￨3 if￨4 (￨4 converter￨5 instanceof￨5 AbstractJackson2HttpMessageConverter￨5 )￨4 {￨4 ObjectMapper￨5 objectMapper￨5 =￨5 (￨5 (￨5 AbstractJackson2HttpMessageConverter￨5 )￨5 (￨5 converter￨5 )￨5 )￨5 .￨5 getObjectMapper￨5 (￨5 )￨5 ;￨5 assertTrue￨5 (￨5 objectMapper￨5 .￨5 getDeserializationConfig￨5 (￨5 )￨5 .￨5 isEnabled￨5 (￨5 MapperFeature￨5 .￨5 DEFAULT_VIEW_INCLUSION￨5 )￨5 )￨5 ;￨5 assertTrue￨5 (￨5 objectMapper￨5 .￨5 getSerializationConfig￨5 (￨5 )￨5 .￨5 isEnabled￨5 (￨5 MapperFeature￨5 .￨5 DEFAULT_VIEW_INCLUSION￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 assertTrue￨5 (￨5 objectMapper￨5 .￨5 getDeserializationConfig￨5 (￨5 )￨5 .￨5 isEnabled￨5 (￨5 DeserializationFeature￨5 .￨5 FAIL_ON_UNKNOWN_PROPERTIES￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 if￨5 (￨5 converter￨6 instanceof￨6 MappingJackson2XmlHttpMessageConverter￨6 )￨5 {￨5 assertEquals￨6 (￨6 XmlMapper￨6 .￨6 class￨6 ,￨6 objectMapper￨6 .￨6 getClass￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 ConfigurableWebBindingInitializer￨3 initializer￨3 =￨3 (￨3 (￨3 ConfigurableWebBindingInitializer￨3 )￨3 (￨3 adapter￨3 .￨3 getWebBindingInitializer￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 initializer￨3 )￨3 ;￨3 ConversionService￨3 conversionService￨3 =￨3 initializer￨3 .￨3 getConversionService￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 conversionService￨3 )￨3 ;￨3 assertTrue￨3 (￨3 (￨3 conversionService￨3 instanceof￨3 FormattingConversionService￨3 )￨3 )￨3 ;￨3 Validator￨3 validator￨3 =￨3 initializer￨3 .￨3 getValidator￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 validator￨3 )￨3 ;￨3 assertTrue￨3 (￨3 (￨3 validator￨3 instanceof￨3 LocalValidatorFactoryBean￨3 )￨3 )￨3 ;￨3 DirectFieldAccessor￨3 fieldAccessor￨3 =￨3 new￨3 DirectFieldAccessor￨3 (￨3 adapter￨3 )￨3 ;￨3 List￨3 <￨3 Object￨3 >￨3 interceptors￨3 =￨3 (￨3 (￨3 List￨3 <￨3 Object￨3 >￨3 )￨3 (￨3 fieldAccessor￨3 .￨3 getPropertyValue￨3 (￨3 "responseBodyAdvice"￨3 )￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 interceptors￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 JsonViewResponseBodyAdvice￨3 .￨3 class￨3 ,￨3 interceptors￨3 .￨3 get￨3 (￨3 0￨3 )￨3 .￨3 getClass￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 uriComponentsContributor￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 handlerExceptionResolver￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 mvcViewResolver￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 mvcViewResolverWithExistingResolver￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 defaultPathMatchConfiguration￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ApplicationContext￨2 initContext￨2 (￨2 Class￨3 ...￨3 configClasses￨3 )￨2 {￨2 }￨2 @￨2 EnableWebMvc￨2 @￨2 Configuration￨2 public￨2 static￨2 class￨2 WebConfig￨2 {￨2 @￨3 Bean￨3 (￨3 name￨3 =￨3 "/testController"￨3 )￨3 public￨3 WebMvcConfigurationSupportTests￨3 .￨3 TestController￨3 testController￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Configuration￨2 public￨2 static￨2 class￨2 ViewResolverConfig￨2 {￨2 @￨3 Bean￨3 public￨3 ViewResolver￨3 beanNameViewResolver￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Controller￨2 public￨2 static￨2 class￨2 TestController￨2 {￨2 @￨3 RequestMapping￨3 (￨3 "/"￨3 )￨3 public￨3 void￨3 handle￨3 (￨3 )￨3 {￨3 }￨3 @￨3 RequestMapping￨3 (￨3 "/foo/{id}/bar/{date}"￨3 )￨3 public￨3 HttpEntity￨3 <￨3 Void￨3 >￨3 methodWithTwoPathVariables￨3 (￨3 @￨4 PathVariable￨4 Integer￨4 id￨4 ,￨4 @￨4 DateTimeFormat￨4 (￨4 iso￨4 =￨4 ISO￨4 .￨4 DATE￨4 )￨4 @￨4 PathVariable￨4 DateTime￨4 date￨4 )￨3 {￨3 }￨3 }￨2 @￨2 Controller￨2 @￨2 Scope￨2 (￨2 "prototype"￨2 )￨2 public￨2 static￨2 class￨2 ScopedController￨2 {￨2 @￨3 RequestMapping￨3 (￨3 "/scoped"￨3 )￨3 public￨3 void￨3 handle￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Controller￨2 @￨2 Scope￨2 (￨2 value￨2 =￨2 "prototype"￨2 ,￨2 proxyMode￨2 =￨2 ScopedProxyMode￨2 .￨2 TARGET_CLASS￨2 )￨2 public￨2 static￨2 class￨2 ScopedProxyController￨2 {￨2 @￨3 RequestMapping￨3 (￨3 "/scopedProxy"￨3 )￨3 public￨3 void￨3 handle￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 BasicModelP￨1 extends￨1 BasicModel￨1 {￨1 protected￨2 static￨2 double￨2 LOG2_E￨2 =￨2 SimilarityBase￨2 .￨2 log2￨2 (￨2 Math￨2 .￨2 E￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 final￨2 float￨2 score￨2 (￨2 BasicStats￨3 stats￨3 ,￨3 float￨3 tfn￨3 )￨2 {￨2 <START_BUG>￨3 float￨3 lambda￨3 =￨3 (￨3 (￨3 float￨3 )￨3 (￨3 stats￨3 .￨3 getTotalTermFreq￨3 (￨3 )￨3 )￨3 )￨3 /￨3 (￨3 stats￨3 .￨3 getNumberOfDocuments￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 (￨3 (￨3 float￨3 )￨3 (￨3 (￨3 (￨3 tfn￨3 *￨3 (￨3 SimilarityBase￨3 .￨3 log2￨3 (￨3 (￨3 tfn￨3 /￨3 lambda￨3 )￨3 )￨3 )￨3 )￨3 +￨3 (￨3 (￨3 (￨3 lambda￨3 +￨3 (￨3 1￨3 /￨3 (￨3 12￨3 *￨3 tfn￨3 )￨3 )￨3 )￨3 -￨3 tfn￨3 )￨3 *￨3 (￨3 BasicModelP￨3 .￨3 LOG2_E￨3 )￨3 )￨3 )￨3 +￨3 (￨3 0.5￨3 *￨3 (￨3 SimilarityBase￨3 .￨3 log2￨3 (￨3 (￨3 (￨3 2￨3 *￨3 (￨3 Math￨3 .￨3 PI￨3 )￨3 )￨3 *￨3 tfn￨3 )￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 Main￨1 {￨1 public￨2 static￨2 final￨2 void￨2 main￨2 (￨2 final￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 final￨4 File￨4 installDirectory￨4 =￨4 Main￨4 .￨4 findInstallDir￨4 (￨4 )￨4 ;￨4 System￨4 .￨4 setProperty￨4 (￨4 "ant.home"￨4 ,￨4 installDirectory￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 final￨4 File￨4 libDir￨4 =￨4 new￨4 File￨4 (￨4 installDirectory￨4 ,￨4 "lib"￨4 )￨4 ;￨4 final￨4 URL￨4 [￨4 ]￨4 urls￨4 =￨4 Main￨4 .￨4 buildURLList￨4 (￨4 libDir￨4 )￨4 ;￨4 final￨4 LauncherClassLoader￨4 classLoader￨4 =￨4 new￨4 LauncherClassLoader￨4 (￨4 urls￨4 )￨4 ;￨4 <START_BUG>￨4 final￨4 Class￨4 clazz￨4 =￨4 classLoader￨4 .￨4 loadClass￨4 (￨4 "org.apache.ant.Main"￨4 )￨4 ;￨4 <END_BUG>￨4 final￨4 Method￨4 method￨4 =￨4 clazz￨4 .￨4 getMethod￨4 (￨4 "main"￨4 ,￨4 new￨4 Class￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 method￨4 .￨4 invoke￨4 (￨4 null￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 final￨4 InvocationTargetException￨4 ite￨4 )￨3 {￨3 System￨4 .￨4 err￨4 .￨4 println￨4 (￨4 (￨4 "Error:<seq2seq4repair_space>"￨4 +￨4 (￨4 ite￨4 .￨4 getTargetException￨4 (￨4 )￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 ite￨4 .￨4 getTargetException￨4 (￨4 )￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 final￨4 Throwable￨4 throwable￨4 )￨3 {￨3 System￨4 .￨4 err￨4 .￨4 println￨4 (￨4 (￨4 "Error:<seq2seq4repair_space>"￨4 +￨4 (￨4 throwable￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 throwable￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 final￨2 URL￨2 [￨2 ]￨2 buildURLList￨2 (￨2 final￨2 File￨2 dir￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 File￨2 findInstallDir￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ClassUtils￨1 {￨1 public￨2 static￨2 final￨2 char￨2 PACKAGE_SEPARATOR_CHAR￨2 =￨2 '.'￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PACKAGE_SEPARATOR￨2 =￨2 String￨2 .￨2 valueOf￨2 (￨2 ClassUtils￨2 .￨2 PACKAGE_SEPARATOR_CHAR￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 INNER_CLASS_SEPARATOR_CHAR￨2 =￨2 '$'￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 INNER_CLASS_SEPARATOR￨2 =￨2 String￨2 .￨2 valueOf￨2 (￨2 ClassUtils￨2 .￨2 INNER_CLASS_SEPARATOR_CHAR￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 primitiveWrapperMap￨2 =￨2 new￨2 HashMap￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 wrapperPrimitiveMap￨2 =￨2 new￨2 HashMap￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 abbreviationMap￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 reverseAbbreviationMap￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 void￨2 addAbbreviation￨2 (￨2 String￨3 primitive￨3 ,￨3 String￨3 abbreviation￨3 )￨2 {￨2 }￨2 public￨2 ClassUtils￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortClassName￨2 (￨2 Object￨3 object￨3 ,￨3 String￨3 valueIfNull￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortClassName￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortClassName￨2 (￨2 String￨3 className￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPackageName￨2 (￨2 Object￨3 object￨3 ,￨3 String￨3 valueIfNull￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPackageName￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 if￨3 (￨3 cls￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 StringUtils￨4 .￨4 EMPTY￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 ClassUtils￨3 .￨3 getPackageName￨3 (￨3 cls￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 String￨2 getPackageName￨2 (￨2 String￨3 className￨3 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 getAllSuperclasses￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 getAllInterfaces￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 >￨2 convertClassNamesToClasses￨2 (￨2 List￨3 <￨3 String￨3 >￨3 classNames￨3 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 String￨2 >￨2 convertClassesToClassNames￨2 (￨2 List￨3 <￨3 Class￨3 <￨3 ?￨3 >￨3 >￨3 classes￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isAssignable￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 classArray￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 toClassArray￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isAssignable￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 classArray￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 toClassArray￨3 ,￨3 boolean￨3 autoboxing￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isAssignable￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 toClass￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isAssignable￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 toClass￨3 ,￨3 boolean￨3 autoboxing￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 primitiveToWrapper￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 primitivesToWrappers￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 classes￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 wrapperToPrimitive￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 wrappersToPrimitives￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 classes￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isInnerClass￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 getClass￨2 (￨2 ClassLoader￨2 classLoader￨2 ,￨2 String￨2 className￨2 ,￨2 boolean￨2 initialize￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 getClass￨2 (￨2 ClassLoader￨2 classLoader￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 getClass￨2 (￨2 String￨2 className￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 getClass￨2 (￨2 String￨2 className￨2 ,￨2 boolean￨2 initialize￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Method￨2 getPublicMethod￨2 (￨2 Class￨2 <￨2 ?￨2 >￨2 cls￨2 ,￨2 String￨2 methodName￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 parameterTypes￨2 )￨2 throws￨2 NoSuchMethodException￨2 ,￨2 SecurityException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 toCanonicalName￨2 (￨2 String￨3 className￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 toClass￨2 (￨2 Object￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortCanonicalName￨2 (￨2 Object￨3 object￨3 ,￨3 String￨3 valueIfNull￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortCanonicalName￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getShortCanonicalName￨2 (￨2 String￨3 canonicalName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPackageCanonicalName￨2 (￨2 Object￨3 object￨3 ,￨3 String￨3 valueIfNull￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPackageCanonicalName￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPackageCanonicalName￨2 (￨2 String￨3 canonicalName￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 getCanonicalName￨2 (￨2 String￨3 className￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CompilationUnitDeclaration￨1 extends￨1 ASTNode￨1 implements￨1 ReferenceContext￨1 ,￨1 ProblemSeverities￨1 {￨1 private￨2 static￨2 final￨2 Comparator￨2 STRING_LITERAL_COMPARATOR￨2 =￨2 new￨2 Comparator￨2 (￨2 )￨2 {￨2 public￨3 int￨3 compare￨3 (￨3 Object￨4 o1￨4 ,￨4 Object￨4 o2￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 STRING_LITERALS_INCREMENT￨2 =￨2 10￨2 ;￨2 public￨2 ImportReference￨2 currentPackage￨2 ;￨2 public￨2 ImportReference￨2 [￨2 ]￨2 imports￨2 ;￨2 public￨2 TypeDeclaration￨2 [￨2 ]￨2 types￨2 ;￨2 public￨2 int￨2 [￨2 ]￨2 [￨2 ]￨2 comments￨2 ;￨2 public￨2 boolean￨2 ignoreFurtherInvestigation￨2 =￨2 false￨2 ;￨2 public￨2 boolean￨2 ignoreMethodBodies￨2 =￨2 false￨2 ;￨2 public￨2 CompilationUnitScope￨2 scope￨2 ;￨2 public￨2 ProblemReporter￨2 problemReporter￨2 ;￨2 public￨2 CompilationResult￨2 compilationResult￨2 ;￨2 public￨2 LocalTypeBinding￨2 [￨2 ]￨2 localTypes￨2 ;￨2 public￨2 int￨2 localTypeCount￨2 =￨2 0￨2 ;￨2 public￨2 boolean￨2 isPropagatingInnerClassEmulation￨2 ;￨2 public￨2 Javadoc￨2 javadoc￨2 ;￨2 public￨2 NLSTag￨2 [￨2 ]￨2 nlsTags￨2 ;￨2 private￨2 StringLiteral￨2 [￨2 ]￨2 stringLiterals￨2 ;￨2 private￨2 int￨2 stringLiteralsPtr￨2 ;￨2 public￨2 CompilationUnitDeclaration￨2 (￨2 ProblemReporter￨3 problemReporter￨3 ,￨3 CompilationResult￨3 compilationResult￨3 ,￨3 int￨3 sourceLength￨3 )￨2 {￨2 }￨2 public￨2 void￨2 abort￨2 (￨2 int￨3 abortLevel￨3 ,￨3 CategorizedProblem￨3 problem￨3 )￨2 {￨2 }￨2 public￨2 void￨2 analyseCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 cleanUp￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 cleanUp￨2 (￨2 TypeDeclaration￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 checkUnusedImports￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 scope￨4 .￨4 imports￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 this￨5 .￨5 scope￨5 .￨5 imports￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 ImportBinding￨5 importBinding￨5 =￨5 this￨5 .￨5 scope￨5 .￨5 imports￨5 [￨5 i￨5 ]￨5 ;￨5 ImportReference￨5 importReference￨5 =￨5 importBinding￨5 .￨5 reference￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 (￨5 importReference￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 importReference￨5 .￨5 used￨5 )￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 unusedImport￨5 (￨5 importReference￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 CompilationResult￨2 compilationResult￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeDeclaration￨2 declarationOfType￨2 (￨2 char￨3 [￨3 ]￨3 [￨3 ]￨3 typeName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getFileName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getMainTypeName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEmpty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPackageInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasErrors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 propagateInnerEmulationForAllLocalTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 recordStringLiteral￨2 (￨2 StringLiteral￨3 literal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 record￨2 (￨2 LocalTypeBinding￨3 localType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 reportNLSProblems￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsHavingErrors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 CompilationUnitScope￨3 unitScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PageCreateKey￨1 extends￨1 WizardPage￨1 implements￨1 Listener￨1 {￨1 public￨2 static￨2 final￨2 String￨2 PAGE_NAME￨2 =￨2 "SignPageCreateKey"￨2 ;￨2 private￨2 String￨2 keystoreName￨2 ;￨2 private￨2 String￨2 project￨2 ;￨2 private￨2 boolean￨2 generated￨2 =￨2 false￨2 ;￨2 private￨2 Button￨2 bOpen￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 bGenerate￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 bEchoKeystorePassword￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 bEchoKeyPassword￨2 =￨2 null￨2 ;￨2 private￨2 Combo￨2 cAlgorithm￨2 =￨2 null￨2 ;￨2 private￨2 Label￨2 lPreview￨2 =￨2 null￨2 ;￨2 private￨2 Label￨2 lResult￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tCommonName￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tOrganizationalUnit￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tOrganization￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tLocation￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tState￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tCountry￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeyName￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeystore￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeystorePassword￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeyPassword￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 LABELWIDTH￨2 =￨2 160￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 TEXTHEIGHT￨2 =￨2 40￨2 ;￨2 private￨2 Signature￨2 signature￨2 =￨2 null￨2 ;￨2 private￨2 Keystore￨2 keystore￨2 =￨2 null￨2 ;￨2 public￨2 PageCreateKey￨2 (￨2 final￨3 Signature￨3 signature￨3 ,￨3 final￨3 String￨3 project￨3 )￨2 {￨2 }￨2 public￨2 void￨2 createControl￨2 (￨2 final￨3 Composite￨3 parent￨3 )￨2 {￨2 }￨2 private￨2 void￨2 createPageContent￨2 (￨2 final￨3 Composite￨3 parent￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addListeners￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 dialogChanged￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateStatus￨2 (￨2 final￨3 String￨3 message￨3 ,￨3 final￨3 int￨3 status￨3 )￨2 {￨2 }￨2 public￨2 void￨2 handleEvent￨2 (￨2 final￨3 Event￨3 e￨3 )￨2 {￨2 }￨2 private￨2 void￨2 echoPassword￨2 (￨2 final￨3 Event￨3 e￨3 )￨2 {￨2 }￨2 private￨2 void￨2 openKeystore￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 generateCertificate￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 onEnterPage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWizardPage￨2 getNextPage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 saveDataToModel￨2 (￨2 )￨2 {￨2 signature￨3 .￨3 setKeystore￨3 (￨3 keystore￨3 )￨3 ;￨3 signature￨3 .￨3 setKeystorePassword￨3 (￨3 tKeystorePassword￨3 .￨3 getText￨3 (￨3 )￨3 .￨3 toCharArray￨3 (￨3 )￨3 )￨3 ;￨3 signature￨3 .￨3 setKeyPassword￨3 (￨3 tKeyPassword￨3 .￨3 getText￨3 (￨3 )￨3 .￨3 toCharArray￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 signature￨3 .￨3 setKeyAlias￨3 (￨3 tKeyName￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 cAlgorithm￨4 .￨4 getText￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 "DSA"￨4 )￨4 )￨3 {￨3 signature￨4 .￨4 setKeyAlgorithm￨4 (￨4 "SHA1withDSA"￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 cAlgorithm￨4 .￨4 getText￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 "EC"￨4 )￨4 )￨3 {￨3 signature￨4 .￨4 setKeyAlgorithm￨4 (￨4 "SHA1withECDSA"￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 cAlgorithm￨4 .￨4 getText￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 "RSA"￨4 )￨4 )￨3 {￨3 signature￨4 .￨4 setKeyAlgorithm￨4 (￨4 "SHA1withRSA"￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ArgsAnnotationPointcut￨1 extends￨1 NameBindingPointcut￨1 {￨1 private￨2 AnnotationPatternList￨2 arguments￨2 ;￨2 private￨2 String￨2 declarationText￨2 ;￨2 public￨2 ArgsAnnotationPointcut￨2 (￨2 AnnotationPatternList￨3 arguments￨3 )￨2 {￨2 }￨2 public￨2 AnnotationPatternList￨2 getArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Set￨2 couldMatchKinds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Pointcut￨2 parameterizeWith￨2 (￨2 Map￨3 typeVariableMap￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 fastMatch￨2 (￨2 FastMatchInfo￨3 info￨3 )￨2 {￨2 }￨2 protected￨2 FuzzyBoolean￨2 matchInternal￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 )￨2 {￨2 }￨2 protected￨2 Pointcut￨2 concretize1￨2 (￨2 ResolvedType￨3 inAspect￨3 ,￨3 ResolvedType￨3 declaringType￨3 ,￨3 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 protected￨2 Test￨2 findResidueInternal￨2 (￨2 Shadow￨3 shadow￨3 ,￨3 ExposedState￨3 state￨3 )￨2 {￨2 int￨3 len￨3 =￨3 shadow￨3 .￨3 getArgCount￨3 (￨3 )￨3 ;￨3 int￨3 numArgsMatchedByEllipsis￨3 =￨3 (￨3 len￨3 +￨3 (￨3 arguments￨3 .￨3 ellipsisCount￨3 )￨3 )￨3 -￨3 (￨3 arguments￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 numArgsMatchedByEllipsis￨4 <￨4 0￨4 )￨3 {￨3 return￨4 Literal￨4 .￨4 FALSE￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 numArgsMatchedByEllipsis￨4 >￨4 0￨4 )￨4 &&￨4 (￨4 (￨4 arguments￨4 .￨4 ellipsisCount￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 Literal￨4 .￨4 FALSE￨4 ;￨4 }￨3 Test￨3 ret￨3 =￨3 Literal￨3 .￨3 TRUE￨3 ;￨3 int￨3 argsIndex￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 arguments￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 arguments￨5 .￨5 get￨5 (￨5 i￨5 )￨5 )￨5 ==￨5 (￨5 AnnotationTypePattern￨5 .￨5 ELLIPSIS￨5 )￨5 )￨4 {￨4 argsIndex￨5 +=￨5 numArgsMatchedByEllipsis￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 arguments￨5 .￨5 get￨5 (￨5 i￨5 )￨5 )￨5 ==￨5 (￨5 AnnotationTypePattern￨5 .￨5 ANY￨5 )￨5 )￨4 {￨4 argsIndex￨5 ++￨5 ;￨5 }￨4 else￨4 {￨4 ExactAnnotationTypePattern￨5 ap￨5 =￨5 (￨5 (￨5 ExactAnnotationTypePattern￨5 )￨5 (￨5 arguments￨5 .￨5 get￨5 (￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 UnresolvedType￨5 argType￨5 =￨5 shadow￨5 .￨5 getArgType￨5 (￨5 argsIndex￨5 )￨5 ;￨5 ResolvedType￨5 rArgType￨5 =￨5 argType￨5 .￨5 resolve￨5 (￨5 shadow￨5 .￨5 getIWorld￨5 (￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 rArgType￨5 ==￨5 (￨5 ResolvedType￨5 .￨5 MISSING￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 shadow￨5 .￨5 getIWorld￨5 (￨5 )￨5 .￨5 getLint￨5 (￨5 )￨5 .￨5 cantFindType￨5 .￨5 signal￨5 (￨5 new￨5 String￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 ,￨5 shadow￨5 .￨5 getSourceLocation￨5 (￨5 )￨5 ,￨5 new￨5 ISourceLocation￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 )￨5 ;￨5 }￨5 ResolvedType￨5 rAnnType￨5 =￨5 ap￨5 .￨5 getAnnotationType￨5 (￨5 )￨5 .￨5 resolve￨5 (￨5 shadow￨5 .￨5 getIWorld￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 ap￨6 instanceof￨6 BindingAnnotationTypePattern￨6 )￨5 {￨5 BindingAnnotationTypePattern￨6 btp￨6 =￨6 (￨6 (￨6 BindingAnnotationTypePattern￨6 )￨6 (￨6 ap￨6 )￨6 )￨6 ;￨6 Var￨6 annvar￨6 =￨6 shadow￨6 .￨6 getArgAnnotationVar￨6 (￨6 argsIndex￨6 ,￨6 rAnnType￨6 )￨6 ;￨6 state￨6 .￨6 set￨6 (￨6 btp￨6 .￨6 getFormalIndex￨6 (￨6 )￨6 ,￨6 annvar￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 (￨6 ap￨6 .￨6 matches￨6 (￨6 rArgType￨6 )￨6 .￨6 alwaysTrue￨6 (￨6 )￨6 )￨6 )￨5 {￨5 ret￨6 =￨6 Test￨6 .￨6 makeAnd￨6 (￨6 ret￨6 ,￨6 Test￨6 .￨6 makeHasAnnotation￨6 (￨6 shadow￨6 .￨6 getArgVar￨6 (￨6 argsIndex￨6 )￨6 ,￨6 rAnnType￨6 )￨6 )￨6 ;￨6 }￨5 argsIndex￨5 ++￨5 ;￨5 }￨4 }￨3 return￨3 ret￨3 ;￨3 }￨2 public￨2 List￨2 getBindingAnnotationTypePatterns￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getBindingTypePatterns￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Pointcut￨2 read￨2 (￨2 VersionedDataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildDeclarationText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 accept￨2 (￨2 PatternNodeVisitor￨3 visitor￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CorrelatedRandomVectorGeneratorTest￨1 {￨1 private￨2 double￨2 [￨2 ]￨2 mean￨2 ;￨2 private￨2 RealMatrix￨2 covariance￨2 ;￨2 private￨2 CorrelatedRandomVectorGenerator￨2 generator￨2 ;￨2 public￨2 CorrelatedRandomVectorGeneratorTest￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRank￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 3￨3 ,￨3 generator￨3 .￨3 getRank￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testMath226￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRootMatrix￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testMeanAndCovariance￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSampleWithZeroCovariance￨2 (￨2 )￨2 {￨2 }￨2 private￨2 CorrelatedRandomVectorGenerator￨2 createSampler￨2 (￨2 double￨3 [￨3 ]￨3 [￨3 ]￨3 cov￨3 )￨2 {￨2 }￨2 private￨2 void￨2 testSampler￨2 (￨2 final￨3 double￨3 [￨3 ]￨3 [￨3 ]￨3 covMatrix￨3 ,￨3 int￨3 samples￨3 ,￨3 double￨3 epsilon￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractDistributionTest￨1 extends￨1 ContainerAbstractTestCase￨1 implements￨1 RemoteServicePublication￨1 ,￨1 IDistributionConstants￨1 {￨1 protected￨2 IRemoteServiceContainerAdapter￨2 [￨2 ]￨2 adapters￨2 =￨2 null￨2 ;￨2 protected￨2 abstract￨2 String￨2 getClientContainerName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setClientCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setupRemoteServiceAdapters￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 BundleContext￨2 getContext￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRemoteServiceContainerAdapter￨2 [￨2 ]￨2 getRemoteServiceAdapters￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRemoteServiceListener￨2 createRemoteServiceListener￨2 (￨2 final￨3 boolean￨3 server￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addRemoteServiceListeners￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRemoteServiceRegistration￨2 registerRemoteService￨2 (￨2 IRemoteServiceContainerAdapter￨3 adapter￨3 ,￨3 String￨3 serviceInterface￨3 ,￨3 Object￨3 service￨3 ,￨3 Dictionary￨3 serviceProperties￨3 ,￨3 int￨3 sleepTime￨3 )￨2 {￨2 }￨2 protected￨2 IRemoteServiceReference￨2 [￨2 ]￨2 getRemoteServiceReferences￨2 (￨2 IRemoteServiceContainerAdapter￨3 adapter￨3 ,￨3 String￨3 clazz￨3 ,￨3 String￨3 filter￨3 )￨2 {￨2 }￨2 protected￨2 IRemoteService￨2 getRemoteService￨2 (￨2 IRemoteServiceContainerAdapter￨3 adapter￨3 ,￨3 String￨3 clazz￨3 ,￨3 String￨3 filter￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getFilterFromServiceProperties￨2 (￨2 Dictionary￨3 serviceProperties￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 [￨2 ]￨2 getDefaultServiceClasses￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 getDefaultService￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ServiceRegistration￨2 registerService￨2 (￨2 String￨2 [￨2 ]￨2 clazzes￨2 ,￨2 Object￨2 service￨2 ,￨2 Properties￨2 props￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ServiceRegistration￨2 registerService￨2 (￨2 String￨2 clazz￨2 ,￨2 Object￨2 service￨2 ,￨2 Properties￨2 props￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ServiceRegistration￨2 registerDefaultService￨2 (￨2 Properties￨2 props￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServiceReference￨2 getReference￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 assertReferenceHasCorrectType￨2 (￨2 ServiceReference￨3 sr￨3 ,￨3 String￨3 classname￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 assertReferencesValidAndFirstHasCorrectType￨2 (￨2 ServiceReference￨3 [￨3 ]￨3 references￨3 ,￨3 String￨3 classname￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 assertReferencesValid￨2 (￨2 ServiceReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 assertStringResultValid￨2 (￨2 Object￨3 result￨3 ,￨3 String￨3 compare￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 assertProxyValid￨2 (￨2 Object￨3 proxy￨3 )￨2 {￨2 }￨2 protected￨2 ServiceTracker￨2 createProxyServiceTracker￨2 (￨2 String￨2 clazz￨2 )￨2 throws￨2 InvalidSyntaxException￨2 (￨2 )￨2 {￨2 ServiceTracker￨3 st￨3 =￨3 new￨3 ServiceTracker￨3 (￨3 getContext￨3 (￨3 )￨3 ,￨3 getContext￨3 (￨3 )￨3 .￨3 createFilter￨3 (￨3 (￨3 (￨3 (￨3 (￨3 (￨3 (￨3 "(&("￨3 +￨3 (￨3 Constants￨3 .￨3 OBJECTCLASS￨3 )￨3 )￨3 +￨3 "="￨3 )￨3 +￨3 clazz￨3 )￨3 +￨3 ")("￨3 )￨3 +￨3 (￨3 SERVICE_IMPORTED￨3 )￨3 )￨3 +￨3 "=*))"￨3 )￨3 )￨3 ,￨3 new￨3 ServiceTrackerCustomizer￨3 (￨3 )￨3 {￨3 public￨4 Object￨4 addingService￨4 (￨4 ServiceReference￨5 reference￨5 )￨4 {￨4 Trace￨5 .￨5 trace￨5 (￨5 PLUGIN_ID￨5 ,￨5 (￨5 "addingService="￨5 +￨5 reference￨5 )￨5 )￨5 ;￨5 return￨5 getContext￨5 (￨5 )￨5 .￨5 getService￨5 (￨5 reference￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 modifiedService￨4 (￨4 ServiceReference￨5 reference￨5 ,￨5 Object￨5 service￨5 )￨4 {￨4 Trace￨5 .￨5 trace￨5 (￨5 PLUGIN_ID￨5 ,￨5 (￨5 "modifiedService="￨5 +￨5 reference￨5 )￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 removedService￨4 (￨4 ServiceReference￨5 reference￨5 ,￨5 Object￨5 service￨5 )￨4 {￨4 Trace￨5 .￨5 trace￨5 (￨5 PLUGIN_ID￨5 ,￨5 (￨5 (￨5 (￨5 "removedService="￨5 +￨5 reference￨5 )￨5 +￨5 ",svc="￨5 )￨5 +￨5 service￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 <START_BUG>￨3 st￨3 .￨3 open￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 st￨3 ;￨3 }￨2 protected￨2 IRemoteService￨2 getRemoteServiceFromProxy￨2 (￨2 Object￨3 proxy￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MembershipCleanerVerbHandler￨1 implements￨1 IVerbHandler￨1 {￨1 private￨2 static￨2 Logger￨2 logger_￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 MembershipCleanerVerbHandler￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 void￨2 doVerb￨2 (￨2 Message￨2 message￨2 )￨2 {￨2 byte￨3 [￨3 ]￨3 body￨3 =￨3 message￨3 .￨3 getMessageBody￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 DataInputBuffer￨4 bufIn￨4 =￨4 new￨4 DataInputBuffer￨4 (￨4 )￨4 ;￨4 bufIn￨4 .￨4 reset￨4 (￨4 body￨4 ,￨4 body￨4 .￨4 length￨4 )￨4 ;￨4 MembershipCleaner￨4 .￨4 MembershipCleanerMessage￨4 mcMessage￨4 =￨4 MembershipCleanerMessage￨4 .￨4 serializer￨4 (￨4 )￨4 .￨4 deserialize￨4 (￨4 bufIn￨4 )￨4 ;￨4 String￨4 target￨4 =￨4 mcMessage￨4 .￨4 getTarget￨4 (￨4 )￨4 ;￨4 MembershipCleanerVerbHandler￨4 .￨4 logger_￨4 .￨4 info￨4 (￨4 (￨4 (￨4 "Removing<seq2seq4repair_space>the<seq2seq4repair_space>node<seq2seq4repair_space>["￨4 +￨4 target￨4 )￨4 +￨4 "]<seq2seq4repair_space>from<seq2seq4repair_space>membership"￨4 )￨4 )￨4 ;￨4 EndPoint￨4 targetEndPoint￨4 =￨4 new￨4 EndPoint￨4 (￨4 target￨4 ,￨4 DatabaseDescriptor￨4 .￨4 getControlPort￨4 (￨4 )￨4 )￨4 ;￨4 StorageService￨4 .￨4 instance￨4 (￨4 )￨4 .￨4 removeTokenState￨4 (￨4 targetEndPoint￨4 )￨4 ;￨4 Map￨4 <￨4 String￨4 ,￨4 byte￨4 [￨4 ]￨4 >￨4 headers￨4 =￨4 message￨4 .￨4 getHeaders￨4 (￨4 )￨4 ;￨4 headers￨4 .￨4 remove￨4 (￨4 StorageService￨4 .￨4 getLocalStorageEndPoint￨4 (￨4 )￨4 .￨4 getHost￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 MembershipCleanerVerbHandler￨5 .￨5 logger_￨5 .￨5 isDebugEnabled￨5 (￨5 )￨5 )￨4 {￨4 MembershipCleanerVerbHandler￨5 .￨5 logger_￨5 .￨5 debug￨5 (￨5 (￨5 "Number<seq2seq4repair_space>of<seq2seq4repair_space>nodes<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>header<seq2seq4repair_space>"￨5 +￨5 (￨5 headers￨5 .￨5 size￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 Set￨4 <￨4 String￨4 >￨4 nodes￨4 =￨4 headers￨4 .￨4 keySet￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 node￨5 :￨5 nodes￨5 )￨4 {￨4 if￨5 (￨5 MembershipCleanerVerbHandler￨6 .￨6 logger_￨6 .￨6 isDebugEnabled￨6 (￨6 )￨6 )￨5 {￨5 MembershipCleanerVerbHandler￨6 .￨6 logger_￨6 .￨6 debug￨6 (￨6 (￨6 "Processing<seq2seq4repair_space>node<seq2seq4repair_space>"￨6 +￨6 node￨6 )￨6 )￨6 ;￨6 }￨5 <START_BUG>￨5 byte￨5 [￨5 ]￨5 bytes￨5 =￨5 headers￨5 .￨5 remove￨5 (￨5 node￨5 )￨5 ;￨5 <END_BUG>￨5 EndPoint￨5 targetNode￨5 =￨5 new￨5 EndPoint￨5 (￨5 node￨5 ,￨5 DatabaseDescriptor￨5 .￨5 getStoragePort￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 MembershipCleanerVerbHandler￨6 .￨6 logger_￨6 .￨6 isDebugEnabled￨6 (￨6 )￨6 )￨5 {￨5 MembershipCleanerVerbHandler￨6 .￨6 logger_￨6 .￨6 debug￨6 (￨6 (￨6 "Sending<seq2seq4repair_space>a<seq2seq4repair_space>membership<seq2seq4repair_space>clean<seq2seq4repair_space>message<seq2seq4repair_space>to<seq2seq4repair_space>"￨6 +￨6 targetNode￨6 )￨6 )￨6 ;￨6 }￨5 MessagingService￨5 .￨5 getMessagingInstance￨5 (￨5 )￨5 .￨5 sendOneWay￨5 (￨5 message￨5 ,￨5 targetNode￨5 )￨5 ;￨5 break￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 ex￨4 )￨3 {￨3 if￨4 (￨4 MembershipCleanerVerbHandler￨5 .￨5 logger_￨5 .￨5 isDebugEnabled￨5 (￨5 )￨5 )￨4 {￨4 MembershipCleanerVerbHandler￨5 .￨5 logger_￨5 .￨5 debug￨5 (￨5 LogUtil￨5 .￨5 throwableToString￨5 (￨5 ex￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 Inserter￨1 extends￨1 Operation￨1 {￨1 public￨2 Inserter￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 Cassandra￨2 .￨2 Client￨2 client￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 List￨3 <￨3 ByteBuffer￨3 >￨3 values￨3 =￨3 generateValues￨3 (￨3 )￨3 ;￨3 List￨3 <￨3 Column￨3 >￨3 columns￨3 =￨3 new￨3 ArrayList￨3 <￨3 Column￨3 >￨3 (￨3 )￨3 ;￨3 List￨3 <￨3 SuperColumn￨3 >￨3 superColumns￨3 =￨3 new￨3 ArrayList￨3 <￨3 SuperColumn￨3 >￨3 (￨3 )￨3 ;￨3 String￨3 format￨3 =￨3 (￨3 "%0"￨3 +￨3 (￨3 session￨3 .￨3 getTotalKeysLength￨3 (￨3 )￨3 )￨3 )￨3 +￨3 "d"￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 session￨4 .￨4 getColumnsPerKey￨4 (￨4 )￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 String￨4 columnName￨4 =￨4 "C"￨4 +￨4 (￨4 Integer￨4 .￨4 toString￨4 (￨4 i￨4 )￨4 )￨4 ;￨4 ByteBuffer￨4 columnValue￨4 =￨4 values￨4 .￨4 get￨4 (￨4 (￨4 i￨4 %￨4 (￨4 values￨4 .￨4 size￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 columns￨4 .￨4 add￨4 (￨4 new￨4 Column￨4 (￨4 ByteBufferUtil￨4 .￨4 bytes￨4 (￨4 columnName￨4 )￨4 ,￨4 columnValue￨4 ,￨4 System￨4 .￨4 currentTimeMillis￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 session￨4 .￨4 getColumnFamilyType￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 ColumnFamilyType￨4 .￨4 Super￨4 )￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 session￨5 .￨5 getSuperColumns￨5 (￨5 )￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 superColumnName￨5 =￨5 "S"￨5 +￨5 (￨5 Integer￨5 .￨5 toString￨5 (￨5 i￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 superColumns￨5 .￨5 add￨5 (￨5 new￨5 SuperColumn￨5 (￨5 ByteBuffer￨5 .￨5 wrap￨5 (￨5 superColumnName￨5 .￨5 getBytes￨5 (￨5 )￨5 )￨5 ,￨5 columns￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 String￨3 rawKey￨3 =￨3 String￨3 .￨3 format￨3 (￨3 format￨3 ,￨3 index￨3 )￨3 ;￨3 Map￨3 <￨3 ByteBuffer￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 Mutation￨3 >￨3 >￨3 >￨3 record￨3 =￨3 new￨3 HashMap￨3 <￨3 ByteBuffer￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 Mutation￨3 >￨3 >￨3 >￨3 (￨3 )￨3 ;￨3 record￨3 .￨3 put￨3 (￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 rawKey￨3 )￨3 ,￨3 (￨3 (￨3 session￨3 .￨3 getColumnFamilyType￨3 (￨3 )￨3 )￨3 ==￨3 (￨3 ColumnFamilyType￨3 .￨3 Super￨3 )￨3 ?￨3 getSuperColumnsMutationMap￨3 (￨3 superColumns￨3 )￨3 :￨3 getColumnsMutationMap￨3 (￨3 columns￨3 )￨3 )￨3 )￨3 ;￨3 long￨3 start￨3 =￨3 System￨3 .￨3 currentTimeMillis￨3 (￨3 )￨3 ;￨3 boolean￨3 success￨3 =￨3 false￨3 ;￨3 String￨3 exceptionMessage￨3 =￨3 null￨3 ;￨3 for￨3 (￨3 int￨4 t￨4 =￨4 0￨4 ;￨4 t￨4 <￨4 (￨4 session￨4 .￨4 getRetryTimes￨4 (￨4 )￨4 )￨4 ;￨4 t￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 success￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 try￨4 (￨4 )￨4 {￨4 client￨5 .￨5 batch_mutate￨5 (￨5 record￨5 ,￨5 session￨5 .￨5 getConsistencyLevel￨5 (￨5 )￨5 )￨5 ;￨5 success￨5 =￨5 true￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 e￨5 )￨4 {￨4 exceptionMessage￨5 =￨5 getExceptionMessage￨5 (￨5 e￨5 )￨5 ;￨5 success￨5 =￨5 false￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 !￨4 success￨4 )￨3 {￨3 error￨4 (￨4 String￨4 .￨4 format￨4 (￨4 "Operation<seq2seq4repair_space>[%d]<seq2seq4repair_space>retried<seq2seq4repair_space>%d<seq2seq4repair_space>times<seq2seq4repair_space>-<seq2seq4repair_space>error<seq2seq4repair_space>inserting<seq2seq4repair_space>key<seq2seq4repair_space>%s<seq2seq4repair_space>%s%n"￨4 ,￨4 index￨4 ,￨4 session￨4 .￨4 getRetryTimes￨4 (￨4 )￨4 ,￨4 rawKey￨4 ,￨4 (￨4 exceptionMessage￨4 ==￨4 null￨4 ?￨4 ""￨4 :￨4 (￨4 "("￨4 +￨4 exceptionMessage￨4 )￨4 +￨4 ")"￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 operations￨3 .￨3 getAndIncrement￨3 (￨3 )￨3 ;￨3 keys￨3 .￨3 getAndIncrement￨3 (￨3 )￨3 ;￨3 latency￨3 .￨3 getAndAdd￨3 (￨3 (￨3 (￨3 System￨3 .￨3 currentTimeMillis￨3 (￨3 )￨3 )￨3 -￨3 start￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Mutation￨2 >￨2 >￨2 getSuperColumnsMutationMap￨2 (￨2 List￨3 <￨3 SuperColumn￨3 >￨3 superColumns￨3 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Mutation￨2 >￨2 >￨2 getColumnsMutationMap￨2 (￨2 List￨3 <￨3 Column￨3 >￨3 columns￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RequestLogger￨1 implements￨1 RequestLoggerMBean￨1 {￨1 private￨2 final￨2 Application￨2 application￨2 ;￨2 private￨2 final￨2 WebApplication￨2 webApplication￨2 ;￨2 public￨2 RequestLogger￨2 (￨2 org￨3 .￨3 apache￨3 .￨3 wicket￨3 .￨3 Application￨3 application￨3 )￨2 {￨2 }￨2 public￨2 Integer￨2 getNumberOfCreatedSessions￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Integer￨2 getNumberOfLiveSessions￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Integer￨2 getPeakNumberOfSessions￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 restart￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestLogger￨2 getRequestLogger￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 application￨4 )￨4 instanceof￨4 WebApplication￨4 )￨3 {￨3 <START_BUG>￨4 return￨4 (￨4 (￨4 WebApplication￨4 )￨4 (￨4 application￨4 )￨4 )￨4 .￨4 getRequestLogger￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 MapKey￨1 extends￨1 AbstractVal￨1 {￨1 private￨2 final￨2 Val￨2 _key￨2 ;￨2 private￨2 ClassMetaData￨2 _meta￨2 =￨2 null￨2 ;￨2 private￨2 Class￨2 _cast￨2 =￨2 null￨2 ;￨2 private￨2 Class￨2 _type￨2 =￨2 null￨2 ;￨2 public￨2 MapKey￨2 (￨2 Val￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 KeyExpState￨2 extends￨2 ExpState￨2 {￨2 public￨3 ExpState￨3 key￨3 ;￨3 public￨3 ExpState￨3 val￨3 ;￨3 KeyExpState￨3 (￨3 ExpState￨4 key￨4 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 appendTo￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 ,￨3 SQLBuffer￨3 sql￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 calculateValue￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 ,￨3 Val￨3 other￨3 ,￨3 ExpState￨3 otherState￨3 )￨2 {￨2 }￨2 public￨2 void￨2 groupBy￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 )￨2 {￨2 }￨2 public￨2 void￨2 orderBy￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 ,￨3 boolean￨3 asc￨3 )￨2 {￨2 }￨2 public￨2 ExpState￨2 initialize￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 int￨3 flags￨3 )￨2 {￨2 }￨2 public￨2 int￨2 length￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 load￨2 (￨2 ExpContext￨2 ctx￨2 ,￨2 ExpState￨2 state￨2 ,￨2 Result￨2 res￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 ,￨3 boolean￨3 pks￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectColumns￨2 (￨2 Select￨3 sel￨3 ,￨3 ExpContext￨3 ctx￨3 ,￨3 ExpState￨3 state￨3 ,￨3 boolean￨3 pks￨3 )￨2 {￨2 }￨2 public￨2 ClassMetaData￨2 getMetaData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 getType￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 Object￨3 .￨3 class￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 setImplicitType￨2 (￨2 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMetaData￨2 (￨2 ClassMetaData￨3 meta￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 UrlConfigGui￨1 extends￨1 JPanel￨1 implements￨1 ChangeListener￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 240L￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 TAB_PARAMETERS￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 TAB_RAW_BODY￨2 =￨2 1￨2 ;￨2 private￨2 HTTPArgumentsPanel￨2 argsPanel￨2 ;￨2 private￨2 JTextField￨2 domain￨2 ;￨2 private￨2 JTextField￨2 port￨2 ;￨2 private￨2 JTextField￨2 proxyHost￨2 ;￨2 private￨2 JTextField￨2 proxyPort￨2 ;￨2 private￨2 JTextField￨2 proxyUser￨2 ;￨2 private￨2 JPasswordField￨2 proxyPass￨2 ;￨2 private￨2 JTextField￨2 connectTimeOut￨2 ;￨2 private￨2 JTextField￨2 responseTimeOut￨2 ;￨2 private￨2 JTextField￨2 protocol￨2 ;￨2 private￨2 JTextField￨2 contentEncoding￨2 ;￨2 private￨2 JTextField￨2 path￨2 ;￨2 private￨2 JCheckBox￨2 followRedirects￨2 ;￨2 private￨2 JCheckBox￨2 autoRedirects￨2 ;￨2 private￨2 JCheckBox￨2 useKeepAlive￨2 ;￨2 private￨2 JCheckBox￨2 useMultipartForPost￨2 ;￨2 private￨2 JCheckBox￨2 useBrowserCompatibleMultipartMode￨2 ;￨2 private￨2 JLabeledChoice￨2 method￨2 ;￨2 private￨2 JLabeledChoice￨2 httpImplementation￨2 ;￨2 private￨2 final￨2 boolean￨2 notConfigOnly￨2 ;￨2 private￨2 final￨2 boolean￨2 showImplementation￨2 ;￨2 private￨2 JLabeledTextArea￨2 postBodyContent￨2 ;￨2 private￨2 UrlConfigGui￨2 .￨2 ValidationTabbedPane￨2 postContentTabbedPane￨2 ;￨2 private￨2 boolean￨2 showRawBodyPane￨2 ;￨2 public￨2 UrlConfigGui￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UrlConfigGui￨2 (￨2 boolean￨3 showSamplerFields￨3 )￨2 {￨2 }￨2 public￨2 UrlConfigGui￨2 (￨2 boolean￨3 showSamplerFields￨3 ,￨3 boolean￨3 showImplementation￨3 ,￨3 boolean￨3 showRawBodyPane￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyTestElement￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 boolean￨3 useRaw￨3 =￨3 (￨3 postContentTabbedPane￨3 .￨3 getSelectedIndex￨3 (￨3 )￨3 )￨3 ==￨3 (￨3 UrlConfigGui￨3 .￨3 TAB_RAW_BODY￨3 )￨3 ;￨3 Arguments￨3 args￨3 ;￨3 if￨3 (￨3 useRaw￨4 )￨3 {￨3 args￨4 =￨4 new￨4 Arguments￨4 (￨4 )￨4 ;￨4 String￨4 text￨4 =￨4 postBodyContent￨4 .￨4 getText￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 HTTPArgument￨4 arg￨4 =￨4 new￨4 HTTPArgument￨4 (￨4 ""￨4 ,￨4 text￨4 .￨4 replaceAll￨4 (￨4 "\n"￨4 ,￨4 "\r\n"￨4 )￨4 ,￨4 true￨4 )￨4 ;￨4 <END_BUG>￨4 arg￨4 .￨4 setAlwaysEncoded￨4 (￨4 false￨4 )￨4 ;￨4 args￨4 .￨4 addArgument￨4 (￨4 arg￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 args￨4 =￨4 (￨4 (￨4 Arguments￨4 )￨4 (￨4 argsPanel￨4 .￨4 createTestElement￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 HTTPArgument￨4 .￨4 convertArgumentsToHTTP￨4 (￨4 args￨4 )￨4 ;￨4 }￨3 element￨3 .￨3 setProperty￨3 (￨3 POST_BODY_RAW￨3 ,￨3 useRaw￨3 ,￨3 POST_BODY_RAW_DEFAULT￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 jmeter￨3 .￨3 testelement￨3 .￨3 property￨3 .￨3 TestElementProperty￨3 (￨3 HTTPSamplerBase￨3 .￨3 ARGUMENTS￨3 ,￨3 args￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 DOMAIN￨3 ,￨3 domain￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PORT￨3 ,￨3 port￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PROXYHOST￨3 ,￨3 proxyHost￨3 .￨3 getText￨3 (￨3 )￨3 ,￨3 ""￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PROXYPORT￨3 ,￨3 proxyPort￨3 .￨3 getText￨3 (￨3 )￨3 ,￨3 ""￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PROXYUSER￨3 ,￨3 proxyUser￨3 .￨3 getText￨3 (￨3 )￨3 ,￨3 ""￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PROXYPASS￨3 ,￨3 String￨3 .￨3 valueOf￨3 (￨3 proxyPass￨3 .￨3 getPassword￨3 (￨3 )￨3 )￨3 ,￨3 ""￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 CONNECT_TIMEOUT￨3 ,￨3 connectTimeOut￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 RESPONSE_TIMEOUT￨3 ,￨3 responseTimeOut￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PROTOCOL￨3 ,￨3 protocol￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 CONTENT_ENCODING￨3 ,￨3 contentEncoding￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 element￨3 .￨3 setProperty￨3 (￨3 PATH￨3 ,￨3 path￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 notConfigOnly￨4 )￨3 {￨3 element￨4 .￨4 setProperty￨4 (￨4 METHOD￨4 ,￨4 method￨4 .￨4 getText￨4 (￨4 )￨4 )￨4 ;￨4 element￨4 .￨4 setProperty￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 jmeter￨4 .￨4 testelement￨4 .￨4 property￨4 .￨4 BooleanProperty￨4 (￨4 HTTPSamplerBase￨4 .￨4 FOLLOW_REDIRECTS￨4 ,￨4 followRedirects￨4 .￨4 isSelected￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 element￨4 .￨4 setProperty￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 jmeter￨4 .￨4 testelement￨4 .￨4 property￨4 .￨4 BooleanProperty￨4 (￨4 HTTPSamplerBase￨4 .￨4 AUTO_REDIRECTS￨4 ,￨4 autoRedirects￨4 .￨4 isSelected￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 element￨4 .￨4 setProperty￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 jmeter￨4 .￨4 testelement￨4 .￨4 property￨4 .￨4 BooleanProperty￨4 (￨4 HTTPSamplerBase￨4 .￨4 USE_KEEPALIVE￨4 ,￨4 useKeepAlive￨4 .￨4 isSelected￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 element￨4 .￨4 setProperty￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 jmeter￨4 .￨4 testelement￨4 .￨4 property￨4 .￨4 BooleanProperty￨4 (￨4 HTTPSamplerBase￨4 .￨4 DO_MULTIPART_POST￨4 ,￨4 useMultipartForPost￨4 .￨4 isSelected￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 element￨4 .￨4 setProperty￨4 (￨4 BROWSER_COMPATIBLE_MULTIPART￨4 ,￨4 useBrowserCompatibleMultipartMode￨4 .￨4 isSelected￨4 (￨4 )￨4 ,￨4 BROWSER_COMPATIBLE_MULTIPART_MODE_DEFAULT￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 showImplementation￨4 )￨3 {￨3 element￨4 .￨4 setProperty￨4 (￨4 IMPLEMENTATION￨4 ,￨4 httpImplementation￨4 .￨4 getText￨4 (￨4 )￨4 ,￨4 ""￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 final￨2 String￨2 computePostBody￨2 (￨2 Arguments￨3 arguments￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 computePostBody￨2 (￨2 Arguments￨3 arguments￨3 ,￨3 boolean￨3 crlfToLF￨3 )￨2 {￨2 }￨2 public￨2 void￨2 configure￨2 (￨2 TestElement￨3 el￨3 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 JPanel￨2 getWebServerTimeoutPanel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 JPanel￨2 getProxyServerPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getPortPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getProxyPortPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getConnectTimeOutPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getResponseTimeOutPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getDomainPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getProxyHostPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getProxyUserPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 getProxyPassPanel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Component￨2 getPathPanel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JPanel￨2 getProtocolAndMethodPanel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JTabbedPane￨2 getParameterPanel￨2 (￨2 )￨2 {￨2 }￨2 class￨2 ValidationTabbedPane￨2 extends￨2 JTabbedPane￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 7014311238367882880L￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 setSelectedIndex￨3 (￨3 int￨4 index￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setSelectedIndex￨3 (￨3 int￨4 index￨4 ,￨4 boolean￨4 check￨4 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 stateChanged￨2 (￨2 ChangeEvent￨3 e￨3 )￨2 {￨2 }￨2 void￨2 convertParametersToRaw￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 canConvertParameters￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 noData￨2 (￨2 int￨3 oldSelectedIndex￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AllowedMethodsInformation￨1 {￨1 public￨2 static￨2 final￨2 AllowedMethodsInformation￨2 INSTANCE_BMT￨2 =￨2 new￨2 AllowedMethodsInformation￨2 (￨2 true￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 AllowedMethodsInformation￨2 INSTANCE_CMT￨2 =￨2 new￨2 AllowedMethodsInformation￨2 (￨2 false￨2 )￨2 ;￨2 private￨2 final￨2 Set￨2 <￨2 DeniedMethodKey￨2 >￨2 denied￨2 ;￨2 private￨2 final￨2 Set￨2 <￨2 AllowedMethodsInformation￨2 .￨2 DeniedSyncMethodKey￨2 >￨2 deniedSyncMethods￨2 ;￨2 private￨2 final￨2 boolean￨2 beanManagedTransaction￨2 ;￨2 protected￨2 AllowedMethodsInformation￨2 (￨2 boolean￨3 beanManagedTransaction￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setup￨2 (￨2 Set￨3 <￨3 DeniedMethodKey￨3 >￨3 denied￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 add￨2 (￨2 Set￨3 <￨3 DeniedMethodKey￨3 >￨3 otherDenied￨3 ,￨3 InvocationType￨3 setEntityContext￨3 ,￨3 MethodType￨3 timerServiceMethod￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 add￨2 (￨2 Set￨3 <￨3 AllowedMethodsInformation￨3 .￨3 DeniedSyncMethodKey￨3 >￨3 otherDenied￨3 ,￨3 CurrentSynchronizationCallback￨3 .￨3 CallbackType￨3 callbackType￨3 ,￨3 MethodType￨3 timerServiceMethod￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkAllowed￨2 (￨2 final￨3 MethodType￨3 methodType￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkTransactionSync￨2 (￨2 MethodType￨3 methodType￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 realCheckPermission￨2 (￨2 MethodType￨3 methodType￨3 ,￨3 InvocationType￨3 invocationType￨3 )￨2 {￨2 checkTransactionSync￨3 (￨3 methodType￨3 )￨3 ;￨3 if￨3 (￨3 invocationType￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 denied￨5 .￨5 contains￨5 (￨5 new￨5 DeniedMethodKey￨5 (￨5 invocationType￨5 ,￨5 methodType￨5 )￨5 )￨5 )￨4 {￨4 throwException￨5 (￨5 methodType￨5 ,￨5 invocationType￨5 )￨5 ;￨5 }￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 !￨3 (￨3 beanManagedTransaction￨3 )￨3 )￨3 &&￨3 (￨3 methodType￨3 ==￨3 (￨3 MethodType￨3 .￨3 GET_USER_TRANSACTION￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 throw￨3 MESSAGES￨3 .￨3 unauthorizedAccessToUserTransaction￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 throwException￨2 (￨2 MethodType￨3 methodType￨3 ,￨3 InvocationType￨3 invocationType￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 throwException￨2 (￨2 MethodType￨3 methodType￨3 ,￨3 CurrentSynchronizationCallback￨3 .￨3 CallbackType￨3 callback￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 DeniedSyncMethodKey￨2 {￨2 private￨3 final￨3 CallbackType￨3 callbackType￨3 ;￨3 private￨3 final￨3 MethodType￨3 methodType￨3 ;￨3 public￨3 DeniedSyncMethodKey￨3 (￨3 CurrentSynchronizationCallback￨4 .￨4 CallbackType￨4 callbackType￨4 ,￨4 MethodType￨4 methodType￨4 )￨3 {￨3 }￨3 public￨3 CallbackType￨3 getCallbackType￨3 (￨3 )￨3 {￨3 }￨3 public￨3 MethodType￨3 getMethodType￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 equals￨3 (￨3 Object￨4 o￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ChannelMetricsHandler￨1 extends￨1 AbstractRuntimeOnlyHandler￨1 {￨1 @￨2 Override￨2 protected￨2 void￨2 executeRuntimeStep￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 String￨3 channelName￨3 =￨3 context￨3 .￨3 getCurrentAddressValue￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 name￨3 =￨3 Operations￨3 .￨3 getAttributeName￨3 (￨3 operation￨3 )￨3 ;￨3 ChannelMetric￨3 metric￨3 =￨3 ChannelMetric￨3 .￨3 forName￨3 (￨3 name￨3 )￨3 ;￨3 if￨3 (￨3 metric￨4 ==￨4 null￨4 )￨3 {￨3 context￨4 .￨4 getFailureDescription￨4 (￨4 )￨4 .￨4 set￨4 (￨4 ROOT_LOGGER￨4 .￨4 unknownMetric￨4 (￨4 name￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 JChannel￨4 channel￨4 =￨4 ServiceContainerHelper￨4 .￨4 findValue￨4 (￨4 context￨4 .￨4 getServiceRegistry￨4 (￨4 false￨4 )￨4 ,￨4 CHANNEL￨4 .￨4 getServiceName￨4 (￨4 channelName￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 channel￨5 !=￨5 null￨5 )￨4 {￨4 context￨5 .￨5 getResult￨5 (￨5 )￨5 .￨5 set￨5 (￨5 metric￨5 .￨5 getValue￨5 (￨5 channel￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 context￨3 .￨3 completeStep￨3 (￨3 NOOP_RESULT_HANDLER￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 JavaScript￨1 extends￨1 AbstractFunction￨1 {￨1 private￨2 static￨2 final￨2 List￨2 <￨2 String￨2 >￨2 desc￨2 =￨2 new￨2 LinkedList￨2 <￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 KEY￨2 =￨2 "__javaScript"￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 Object￨2 [￨2 ]￨2 values￨2 ;￨2 public￨2 JavaScript￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 synchronized￨2 String￨2 execute￨2 (￨2 SampleResult￨2 previousResult￨2 ,￨2 Sampler￨2 currentSampler￨2 )￨2 throws￨2 InvalidVariableException￨2 (￨2 )￨2 {￨2 JMeterContext￨3 jmctx￨3 =￨3 JMeterContextService￨3 .￨3 getContext￨3 (￨3 )￨3 ;￨3 JMeterVariables￨3 vars￨3 =￨3 jmctx￨3 .￨3 getVariables￨3 (￨3 )￨3 ;￨3 String￨3 script￨3 =￨3 (￨3 (￨3 CompoundVariable￨3 )￨3 (￨3 values￨3 [￨3 0￨3 ]￨3 )￨3 )￨3 .￨3 execute￨3 (￨3 )￨3 ;￨3 String￨3 varName￨3 =￨3 (￨3 (￨3 values￨3 .￨3 length￨3 )￨3 <￨3 2￨3 )￨3 ?￨3 null￨3 :￨3 (￨3 (￨3 CompoundVariable￨3 )￨3 (￨3 values￨3 [￨3 1￨3 ]￨3 )￨3 )￨3 .￨3 execute￨3 (￨3 )￨3 .￨3 trim￨3 (￨3 )￨3 ;￨3 String￨3 resultStr￨3 =￨3 ""￨3 ;￨3 Context￨3 cx￨3 =￨3 Context￨3 .￨3 enter￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Scriptable￨4 scope￨4 =￨4 cx￨4 .￨4 initStandardObjects￨4 (￨4 null￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "log"￨4 ,￨4 scope￨4 ,￨4 JavaScript￨4 .￨4 log￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "ctx"￨4 ,￨4 scope￨4 ,￨4 jmctx￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "vars"￨4 ,￨4 scope￨4 ,￨4 vars￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "props"￨4 ,￨4 scope￨4 ,￨4 JMeterUtils￨4 .￨4 getJMeterProperties￨4 (￨4 )￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "threadName"￨4 ,￨4 scope￨4 ,￨4 Thread￨4 .￨4 currentThread￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "sampler"￨4 ,￨4 scope￨4 ,￨4 currentSampler￨4 )￨4 ;￨4 scope￨4 .￨4 put￨4 (￨4 "sampleResult"￨4 ,￨4 scope￨4 ,￨4 previousResult￨4 )￨4 ;￨4 Object￨4 result￨4 =￨4 cx￨4 .￨4 evaluateString￨4 (￨4 scope￨4 ,￨4 script￨4 ,￨4 "<cmd>"￨4 ,￨4 1￨4 ,￨4 null￨4 )￨4 ;￨4 resultStr￨4 =￨4 Context￨4 .￨4 toString￨4 (￨4 result￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 varName￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 vars￨5 !=￨5 null￨5 )￨5 )￨4 {￨4 vars￨5 .￨5 put￨5 (￨5 varName￨5 ,￨5 resultStr￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 RhinoException￨4 e￨4 )￨3 {￨3 JavaScript￨4 .￨4 log￨4 .￨4 error￨4 (￨4 (￨4 (￨4 "Error<seq2seq4repair_space>processing<seq2seq4repair_space>Javascript:<seq2seq4repair_space>["￨4 +￨4 script￨4 )￨4 +￨4 "]\n"￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 <START_BUG>￨4 throw￨4 new￨4 InvalidVariableException￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 Context￨4 .￨4 exit￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 resultStr￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 synchronized￨2 void￨2 setParameters￨2 (￨2 Collection￨2 <￨2 CompoundVariable￨2 >￨2 parameters￨2 )￨2 throws￨2 InvalidVariableException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getReferenceKey￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 String￨2 >￨2 getArgumentDesc￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ThisJoinPointVisitor￨1 extends￨1 ASTVisitor￨1 {￨1 boolean￨2 needsDynamic￨2 =￨2 false￨2 ;￨2 boolean￨2 needsStatic￨2 =￨2 false￨2 ;￨2 boolean￨2 needsStaticEnclosing￨2 =￨2 false￨2 ;￨2 boolean￨2 hasEffectivelyStaticRef￨2 =￨2 false￨2 ;￨2 LocalVariableBinding￨2 thisJoinPointDec￨2 ;￨2 LocalVariableBinding￨2 thisJoinPointStaticPartDec￨2 ;￨2 LocalVariableBinding￨2 thisEnclosingJoinPointStaticPartDec￨2 ;￨2 LocalVariableBinding￨2 thisJoinPointDecLocal￨2 ;￨2 LocalVariableBinding￨2 thisJoinPointStaticPartDecLocal￨2 ;￨2 LocalVariableBinding￨2 thisEnclosingJoinPointStaticPartDecLocal￨2 ;￨2 boolean￨2 replaceEffectivelyStaticRefs￨2 =￨2 false￨2 ;￨2 AbstractMethodDeclaration￨2 method￨2 ;￨2 ThisJoinPointVisitor￨2 (￨2 AbstractMethodDeclaration￨3 method￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeJoinPointParams￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isRef￨2 (￨2 NameReference￨3 ref￨3 ,￨3 Binding￨3 binding￨3 )￨2 {￨2 }￨2 boolean￨2 isRef￨2 (￨2 Expression￨3 expr￨3 ,￨3 Binding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 endVisit￨2 (￨2 SingleNameReference￨3 ref￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 boolean￨2 canTreatAsStatic￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 boolean￨2 inBlockThatCantRun￨2 =￨2 false￨2 ;￨2 public￨2 boolean￨2 visit￨2 (￨2 MessageSend￨3 call￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 private￨2 void￨2 replaceEffectivelyStaticRef￨2 (￨2 MessageSend￨3 call￨3 )￨2 {￨2 NameReference￨3 receiver￨3 =￨3 (￨3 (￨3 NameReference￨3 )￨3 (￨3 call￨3 .￨3 receiver￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 call￨4 .￨4 binding￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 receiver￨3 .￨3 binding￨3 =￨3 thisJoinPointStaticPartDecLocal￨3 ;￨3 receiver￨3 .￨3 codegenBinding￨3 =￨3 thisJoinPointStaticPartDecLocal￨3 ;￨3 ReferenceBinding￨3 thisJoinPointStaticPartType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 thisJoinPointStaticPartDec￨3 .￨3 type￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 receiver￨3 .￨3 receiverType￨3 =￨3 receiver￨3 .￨3 actualReceiverType￨3 =￨3 receiver￨3 .￨3 resolvedType￨3 =￨3 thisJoinPointStaticPartType￨3 ;￨3 <END_BUG>￨3 call￨3 .￨3 setActualReceiverType￨3 (￨3 thisJoinPointStaticPartType￨3 )￨3 ;￨3 AstUtil￨3 .￨3 replaceMethodBinding￨3 (￨3 call￨3 ,￨3 getEquivalentStaticBinding￨3 (￨3 call￨3 .￨3 binding￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 MethodBinding￨2 getEquivalentStaticBinding￨2 (￨2 MethodBinding￨3 template￨3 )￨2 {￨2 }￨2 public￨2 int￨2 removeUnusedExtraArguments￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 removeParameter￨2 (￨2 int￨3 indexToRemove￨3 )￨2 {￨2 }￨2 private￨2 static￨2 TypeBinding￨2 [￨2 ]￨2 removeParameter￨2 (￨2 int￨3 index￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 bindings￨3 )￨2 {￨2 }￨2 private￨2 static￨2 LocalVariableBinding￨2 [￨2 ]￨2 removeLocalBinding￨2 (￨2 int￨3 index￨3 ,￨3 LocalVariableBinding￨3 [￨3 ]￨3 bindings￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TableController￨1 implements￨1 TreeSelectionListener￨1 ,￨1 FolderListener￨1 ,￨1 FocusOwner￨1 {￨1 private￨2 TableView￨2 view￨2 ;￨2 private￨2 AddressbookFrameMediator￨2 mediator￨2 ;￨2 private￨2 AddressbookTableModel￨2 addressbookModel￨2 ;￨2 private￨2 SortDecorator￨2 sortDecorator￨2 ;￨2 private￨2 FilterDecorator￨2 filterDecorator￨2 ;￨2 private￨2 AddressbookTreeNode￨2 selectedFolder￨2 ;￨2 public￨2 TableController￨2 (￨2 AddressbookFrameMediator￨3 mediator￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addMouseListenerToHeaderInTable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AddressbookFrameMediator￨2 getMediator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TableView￨2 getView￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 valueChanged￨2 (￨2 TreeSelectionEvent￨3 e￨3 )￨2 {￨2 AddressbookTreeNode￨3 node￨3 =￨3 (￨3 (￨3 AddressbookTreeNode￨3 )￨3 (￨3 e￨3 .￨3 getPath￨3 (￨3 )￨3 .￨3 getLastPathComponent￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 node￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 node￨4 instanceof￨4 IContactStorage￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 (￨5 (￨5 org￨5 .￨5 columba￨5 .￨5 addressbook￨5 .￨5 folder￨5 .￨5 AbstractFolder￨5 )￨5 (￨5 node￨5 )￨5 )￨5 .￨5 removeFolderListener￨5 (￨5 this￨5 )￨5 ;￨5 selectedFolder￨5 =￨5 node￨5 ;￨5 (￨5 (￨5 org￨5 .￨5 columba￨5 .￨5 addressbook￨5 .￨5 folder￨5 .￨5 AbstractFolder￨5 )￨5 (￨5 node￨5 )￨5 )￨5 .￨5 addFolderListener￨5 (￨5 this￨5 )￨5 ;￨5 filterDecorator￨5 .￨5 setContactItemMap￨5 (￨5 (￨5 (￨5 org￨5 .￨5 columba￨5 .￨5 addressbook￨5 .￨5 folder￨5 .￨5 AbstractFolder￨5 )￨5 (￨5 selectedFolder￨5 )￨5 )￨5 .￨5 getContactItemMap￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 e1￨5 )￨4 {￨4 if￨5 (￨5 Logging￨6 .￨6 DEBUG￨6 )￨5 {￨5 e1￨6 .￨6 printStackTrace￨6 (￨6 )￨6 ;￨6 }￨5 <START_BUG>￨5 new￨5 ErrorDialog￨5 (￨5 e1￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 e1￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 else￨3 {￨3 filterDecorator￨4 .￨4 setContactItemMap￨4 (￨4 null￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Object￨2 [￨2 ]￨2 getUids￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AddressbookTableModel￨2 getAddressbookModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IContactItem￨2 getSelectedItem￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 itemAdded￨2 (￨2 IFolderEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 itemChanged￨2 (￨2 IFolderEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 itemRemoved￨2 (￨2 IFolderEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 cut￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 delete￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JComponent￨2 getComponent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCopyActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCutActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDeleteActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPasteActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRedoActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSelectAllActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isUndoActionEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 paste￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 redo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 selectAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 undo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SortDecorator￨2 getSortDecorator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FilterDecorator￨2 getFilterDecorator￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 PeriodicRotatingFileHandlerAdd￨1 implements￨1 ModelAddOperationHandler￨1 {￨1 static￨2 final￨2 PeriodicRotatingFileHandlerAdd￨2 INSTANCE￨2 =￨2 new￨2 PeriodicRotatingFileHandlerAdd￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 OperationResult￨2 execute￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 ResultHandler￨2 resultHandler￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 PathAddress￨3 address￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 ;￨3 final￨3 String￨3 name￨3 =￨3 address￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 ModelNode￨3 compensatingOperation￨3 =￨3 new￨3 ModelNode￨3 (￨3 )￨3 ;￨3 compensatingOperation￨3 .￨3 get￨3 (￨3 OP_ADDR￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 ;￨3 compensatingOperation￨3 .￨3 get￨3 (￨3 OP￨3 )￨3 .￨3 set￨3 (￨3 REMOVE￨3 )￨3 ;￨3 final￨3 ModelNode￨3 subModel￨3 =￨3 context￨3 .￨3 getSubModel￨3 (￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 AUTOFLUSH￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 AUTOFLUSH￨3 )￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 ENCODING￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 ENCODING￨3 )￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 FORMATTER￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 FORMATTER￨3 )￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 LEVEL￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 LEVEL￨3 )￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 FILE￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 FILE￨3 )￨3 )￨3 ;￨3 subModel￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 SUFFIX￨3 )￨3 .￨3 set￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 CommonAttributes￨3 .￨3 SUFFIX￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 context￨4 .￨4 getRuntimeContext￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 context￨4 .￨4 getRuntimeContext￨4 (￨4 )￨4 .￨4 setRuntimeTask￨4 (￨4 new￨4 RuntimeTask￨4 (￨4 )￨4 {￨4 public￨5 void￨5 execute￨5 (￨5 RuntimeTaskContext￨5 context￨5 )￨5 throws￨5 OperationFailedException￨5 (￨5 )￨5 {￨5 final￨6 ServiceTarget￨6 serviceTarget￨6 =￨6 context￨6 .￨6 getServiceTarget￨6 (￨6 )￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 final￨7 PeriodicRotatingFileHandlerService￨7 service￨7 =￨7 new￨7 PeriodicRotatingFileHandlerService￨7 (￨7 )￨7 ;￨7 final￨7 ServiceBuilder￨7 <￨7 Handler￨7 >￨7 serviceBuilder￨7 =￨7 serviceTarget￨7 .￨7 addService￨7 (￨7 LogServices￨7 .￨7 handlerName￨7 (￨7 name￨7 )￨7 ,￨7 service￨7 )￨7 ;￨7 if￨7 (￨7 operation￨8 .￨8 hasDefined￨8 (￨8 CommonAttributes￨8 .￨8 FILE￨8 )￨8 )￨7 {￨7 final￨8 HandlerFileService￨8 fileService￨8 =￨8 new￨8 HandlerFileService￨8 (￨8 operation￨8 .￨8 get￨8 (￨8 CommonAttributes￨8 .￨8 FILE￨8 ,￨8 CommonAttributes￨8 .￨8 PATH￨8 )￨8 .￨8 asString￨8 (￨8 )￨8 )￨8 ;￨8 final￨8 ServiceBuilder￨8 <￨8 ?￨8 >￨8 fileBuilder￨8 =￨8 serviceTarget￨8 .￨8 addService￨8 (￨8 LogServices￨8 .￨8 handlerFileName￨8 (￨8 name￨8 )￨8 ,￨8 fileService￨8 )￨8 ;￨8 <START_BUG>￨8 if￨8 (￨8 operation￨8 .￨8 hasDefined￨8 (￨8 RELATIVE_TO￨8 )￨8 )￨8 {￨8 <END_BUG>￨8 fileBuilder￨8 .￨8 addDependency￨8 (￨8 AbstractPathService￨8 .￨8 pathNameOf￨8 (￨8 operation￨8 .￨8 get￨8 (￨8 CommonAttributes￨8 .￨8 FILE￨8 ,￨8 CommonAttributes￨8 .￨8 RELATIVE_TO￨8 )￨8 .￨8 asString￨8 (￨8 )￨8 )￨8 ,￨8 String￨8 .￨8 class￨8 ,￨8 fileService￨8 .￨8 getRelativeToInjector￨8 (￨8 )￨8 )￨8 ;￨8 }￨8 fileBuilder￨8 .￨8 setInitialMode￨8 (￨8 ACTIVE￨8 )￨8 .￨8 install￨8 (￨8 )￨8 ;￨8 serviceBuilder￨8 .￨8 addDependency￨8 (￨8 LogServices￨8 .￨8 handlerFileName￨8 (￨8 name￨8 )￨8 ,￨8 String￨8 .￨8 class￨8 ,￨8 service￨8 .￨8 getFileNameInjector￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 service￨7 .￨7 setLevel￨7 (￨7 Level￨7 .￨7 parse￨7 (￨7 operation￨7 .￨7 get￨7 (￨7 CommonAttributes￨7 .￨7 LEVEL￨7 )￨7 .￨7 asString￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 final￨7 Boolean￨7 autoFlush￨7 =￨7 operation￨7 .￨7 get￨7 (￨7 CommonAttributes￨7 .￨7 AUTOFLUSH￨7 )￨7 .￨7 asBoolean￨7 (￨7 )￨7 ;￨7 if￨7 (￨7 autoFlush￨8 !=￨8 null￨8 )￨7 {￨7 service￨8 .￨8 setAutoflush￨8 (￨8 autoFlush￨8 .￨8 booleanValue￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 if￨7 (￨7 operation￨8 .￨8 hasDefined￨8 (￨8 CommonAttributes￨8 .￨8 SUFFIX￨8 )￨8 )￨7 {￨7 service￨8 .￨8 setSuffix￨8 (￨8 operation￨8 .￨8 get￨8 (￨8 CommonAttributes￨8 .￨8 SUFFIX￨8 )￨8 .￨8 asString￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 if￨7 (￨7 operation￨8 .￨8 hasDefined￨8 (￨8 CommonAttributes￨8 .￨8 ENCODING￨8 )￨8 )￨7 {￨7 service￨8 .￨8 setEncoding￨8 (￨8 operation￨8 .￨8 get￨8 (￨8 CommonAttributes￨8 .￨8 ENCODING￨8 )￨8 .￨8 asString￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 if￨7 (￨7 operation￨8 .￨8 hasDefined￨8 (￨8 CommonAttributes￨8 .￨8 FORMATTER￨8 )￨8 )￨7 {￨7 service￨8 .￨8 setFormatterSpec￨8 (￨8 PeriodicRotatingFileHandlerAdd￨8 .￨8 createFormatterSpec￨8 (￨8 operation￨8 )￨8 )￨8 ;￨8 }￨7 serviceBuilder￨7 .￨7 setInitialMode￨7 (￨7 ACTIVE￨7 )￨7 ;￨7 serviceBuilder￨7 .￨7 install￨7 (￨7 )￨7 ;￨7 resultHandler￨7 .￨7 handleResultComplete￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 Throwable￨7 t￨7 )￨6 {￨6 throw￨7 new￨7 OperationFailedException￨7 (￨7 new￨7 ModelNode￨7 (￨7 )￨7 .￨7 set￨7 (￨7 t￨7 .￨7 getLocalizedMessage￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 resultHandler￨4 .￨4 handleResultComplete￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 controller￨3 .￨3 BasicOperationResult￨3 (￨3 compensatingOperation￨3 )￨3 ;￨3 }￨2 static￨2 AbstractFormatterSpec￨2 createFormatterSpec￨2 (￨2 final￨3 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 PassivationStoreRemove￨1 extends￨1 AbstractRemoveStepHandler￨1 {￨1 private￨2 final￨2 PassivationStoreAdd￨2 add￨2 ;￨2 PassivationStoreRemove￨2 (￨2 PassivationStoreAdd￨3 add￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 recoverServices￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 context￨4 .￨4 isResourceServiceRestartAllowed￨4 (￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 this￨4 .￨4 add￨4 .￨4 installRuntimeService￨4 (￨4 context￨4 ,￨4 model￨4 ,￨4 null￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 else￨3 {￨3 context￨4 .￨4 revertReloadRequired￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 void￨2 removeRuntimeService￨2 (￨2 OperationContext￨3 context￨3 ,￨3 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 }￨1
class￨1 DefaultBindingResolver￨1 extends￨1 BindingResolver￨1 {￨1 Map￨2 compilerBindingsToASTBindings￨2 ;￨2 Map￨2 newAstToOldAst￨2 ;￨2 Map￨2 bindingsToAstNodes￨2 ;￨2 Map￨2 astNodesToBindings￨2 ;￨2 DefaultBindingResolver￨2 (￨2 )￨2 {￨2 }￨2 IBinding￨2 resolveName￨2 (￨2 Name￨3 name￨3 )￨2 {￨2 }￨2 private￨2 IBinding￨2 resolveNameForMessageSend￨2 (￨2 Name￨3 name￨3 ,￨3 AstNode￨3 node￨3 )￨2 {￨2 }￨2 private￨2 IBinding￨2 resolveNameForMessageSend￨2 (￨2 Name￨3 name￨3 ,￨3 AstNode￨3 node￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 private￨2 IBinding￨2 resolveNameForNameReference￨2 (￨2 Name￨3 name￨3 ,￨3 AstNode￨3 node￨3 )￨2 {￨2 }￨2 private￨2 IBinding￨2 resolveNameForPackageDeclaration￨2 (￨2 Name￨3 name￨3 )￨2 {￨2 }￨2 ITypeBinding￨2 resolveType￨2 (￨2 Type￨3 type￨3 )￨2 {￨2 }￨2 ITypeBinding￨2 resolveWellKnownType￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 ITypeBinding￨2 resolveType￨2 (￨2 TypeDeclaration￨3 type￨3 )￨2 {￨2 }￨2 IMethodBinding￨2 resolveMethod￨2 (￨2 MethodDeclaration￨3 method￨3 )￨2 {￨2 }￨2 IVariableBinding￨2 resolveVariable￨2 (￨2 VariableDeclaration￨3 variable￨3 )￨2 {￨2 AbstractVariableDeclaration￨3 abstractVariableDeclaration￨3 =￨3 (￨3 (￨3 AbstractVariableDeclaration￨3 )￨3 (￨3 this￨3 .￨3 newAstToOldAst￨3 .￨3 get￨3 (￨3 variable￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 abstractVariableDeclaration￨4 instanceof￨4 FieldDeclaration￨4 )￨3 {￨3 <START_BUG>￨4 FieldDeclaration￨4 fieldDeclaration￨4 =￨4 (￨4 (￨4 FieldDeclaration￨4 )￨4 (￨4 this￨4 .￨4 newAstToOldAst￨4 .￨4 get￨4 (￨4 variable￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 this￨4 .￨4 getVariableBinding￨4 (￨4 fieldDeclaration￨4 .￨4 binding￨4 )￨4 ;￨4 }￨3 return￨3 this￨3 .￨3 getVariableBinding￨3 (￨3 (￨3 (￨3 LocalDeclaration￨3 )￨3 (￨3 abstractVariableDeclaration￨3 )￨3 )￨3 .￨3 binding￨3 )￨3 ;￨3 }￨2 IVariableBinding￨2 resolveVariable￨2 (￨2 FieldDeclaration￨3 variable￨3 )￨2 {￨2 }￨2 ITypeBinding￨2 resolveExpressionType￨2 (￨2 Expression￨3 expression￨3 )￨2 {￨2 }￨2 public￨2 ASTNode￨2 findDeclaringNode￨2 (￨2 IBinding￨3 binding￨3 )￨2 {￨2 }￨2 void￨2 store￨2 (￨2 ASTNode￨3 node￨3 ,￨3 AstNode￨3 oldASTNode￨3 )￨2 {￨2 }￨2 protected￨2 ITypeBinding￨2 getTypeBinding￨2 (￨2 TypeBinding￨3 referenceBinding￨3 )￨2 {￨2 }￨2 protected￨2 IPackageBinding￨2 getPackageBinding￨2 (￨2 PackageBinding￨3 packageBinding￨3 )￨2 {￨2 }￨2 protected￨2 IVariableBinding￨2 getVariableBinding￨2 (￨2 VariableBinding￨3 variableBinding￨3 )￨2 {￨2 }￨2 protected￨2 IMethodBinding￨2 getMethodBinding￨2 (￨2 MethodBinding￨3 methodBinding￨3 )￨2 {￨2 }￨2 private￨2 BlockScope￨2 retrieveEnclosingScope￨2 (￨2 ASTNode￨3 node￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BlockScope￨1 extends￨1 Scope￨1 {￨1 public￨2 LocalVariableBinding￨2 [￨2 ]￨2 locals￨2 ;￨2 public￨2 int￨2 localIndex￨2 ;￨2 public￨2 int￨2 startIndex￨2 ;￨2 public￨2 int￨2 offset￨2 ;￨2 public￨2 int￨2 maxOffset￨2 ;￨2 public￨2 BlockScope￨2 [￨2 ]￨2 shiftScopes￨2 ;￨2 public￨2 static￨2 final￨2 VariableBinding￨2 [￨2 ]￨2 EmulationPathToImplicitThis￨2 =￨2 new￨2 VariableBinding￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 static￨2 final￨2 VariableBinding￨2 [￨2 ]￨2 NoEnclosingInstanceInConstructorCall￨2 =￨2 new￨2 VariableBinding￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 static￨2 final￨2 VariableBinding￨2 [￨2 ]￨2 NoEnclosingInstanceInStaticContext￨2 =￨2 new￨2 VariableBinding￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 Scope￨2 [￨2 ]￨2 subscopes￨2 =￨2 new￨2 Scope￨2 [￨2 1￨2 ]￨2 ;￨2 public￨2 int￨2 subscopeCount￨2 =￨2 0￨2 ;￨2 public￨2 CaseStatement￨2 enclosingCase￨2 ;￨2 protected￨2 BlockScope￨2 (￨2 int￨3 kind￨3 ,￨3 Scope￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 BlockScope￨2 (￨2 BlockScope￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 BlockScope￨2 (￨2 BlockScope￨3 parent￨3 ,￨3 boolean￨3 addToParentScope￨3 )￨2 {￨2 }￨2 public￨2 BlockScope￨2 (￨2 BlockScope￨3 parent￨3 ,￨3 int￨3 variableCount￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addAnonymousType￨2 (￨2 TypeDeclaration￨3 anonymousType￨3 ,￨3 ReferenceBinding￨3 superBinding￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addLocalType￨2 (￨2 TypeDeclaration￨3 localType￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addLocalVariable￨2 (￨2 LocalVariableBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSubscope￨2 (￨2 Scope￨3 childScope￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 allowBlankFinalFieldAssignment￨2 (￨2 FieldBinding￨3 binding￨3 )￨2 {￨2 }￨2 String￨2 basicToString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkAndSetModifiersForVariable￨2 (￨2 LocalVariableBinding￨3 varBinding￨3 )￨2 {￨2 }￨2 void￨2 computeLocalVariablePositions￨2 (￨2 int￨3 ilocal￨3 ,￨3 int￨3 initOffset￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 this￨3 .￨3 offset￨3 =￨3 initOffset￨3 ;￨3 this￨3 .￨3 maxOffset￨3 =￨3 initOffset￨3 ;￨3 int￨3 maxLocals￨3 =￨3 this￨3 .￨3 localIndex￨3 ;￨3 boolean￨3 hasMoreVariables￨3 =￨3 ilocal￨3 <￨3 maxLocals￨3 ;￨3 int￨3 iscope￨3 =￨3 0￨3 ;￨3 int￨3 maxScopes￨3 =￨3 this￨3 .￨3 subscopeCount￨3 ;￨3 boolean￨3 hasMoreScopes￨3 =￨3 maxScopes￨3 >￨3 0￨3 ;￨3 while￨3 (￨3 hasMoreVariables￨4 ||￨4 hasMoreScopes￨4 )￨3 {￨3 if￨4 (￨4 hasMoreScopes￨5 &&￨5 (￨5 (￨5 !￨5 hasMoreVariables￨5 )￨5 ||￨5 (￨5 (￨5 subscopes￨5 [￨5 iscope￨5 ]￨5 .￨5 startIndex￨5 (￨5 )￨5 )￨5 <=￨5 ilocal￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 subscopes￨6 [￨6 iscope￨6 ]￨6 )￨6 instanceof￨6 BlockScope￨6 )￨5 {￨5 BlockScope￨6 subscope￨6 =￨6 (￨6 (￨6 BlockScope￨6 )￨6 (￨6 subscopes￨6 [￨6 iscope￨6 ]￨6 )￨6 )￨6 ;￨6 int￨6 subOffset￨6 =￨6 (￨6 (￨6 subscope￨6 .￨6 shiftScopes￨6 )￨6 ==￨6 null￨6 )￨6 ?￨6 this￨6 .￨6 offset￨6 :￨6 subscope￨6 .￨6 maxShiftedOffset￨6 (￨6 )￨6 ;￨6 subscope￨6 .￨6 computeLocalVariablePositions￨6 (￨6 0￨6 ,￨6 subOffset￨6 ,￨6 codeStream￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 subscope￨7 .￨7 maxOffset￨7 )￨7 >￨7 (￨7 this￨7 .￨7 maxOffset￨7 )￨7 )￨6 {￨6 this￨7 .￨7 maxOffset￨7 =￨7 subscope￨7 .￨7 maxOffset￨7 ;￨7 }￨6 }￨5 hasMoreScopes￨5 =￨5 (￨5 ++￨5 iscope￨5 )￨5 <￨5 maxScopes￨5 ;￨5 }￨4 else￨4 {￨4 LocalVariableBinding￨5 local￨5 =￨5 locals￨5 [￨5 ilocal￨5 ]￨5 ;￨5 boolean￨5 generateCurrentLocalVar￨5 =￨5 (￨5 (￨5 local￨5 .￨5 useFlag￨5 )￨5 ==￨5 (￨5 LocalVariableBinding￨5 .￨5 USED￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 local￨5 .￨5 constant￨5 (￨5 )￨5 )￨5 ==￨5 (￨5 Constant￨5 .￨5 NotAConstant￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 (￨6 local￨6 .￨6 useFlag￨6 )￨6 ==￨6 (￨6 LocalVariableBinding￨6 .￨6 UNUSED￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 local￨6 .￨6 declaration￨6 )￨6 !=￨6 null￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 (￨6 local￨6 .￨6 declaration￨6 .￨6 bits￨6 )￨6 &￨6 (￨6 ASTNode￨6 .￨6 IsLocalDeclarationReachable￨6 )￨6 )￨6 !=￨6 0￨6 )￨6 )￨5 {￨5 if￨6 (￨6 !￨7 (￨7 (￨7 local￨7 .￨7 declaration￨7 )￨7 instanceof￨7 Argument￨7 )￨7 )￨6 {￨6 this￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 unusedLocalVariable￨7 (￨7 local￨7 .￨7 declaration￨7 )￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 !￨6 generateCurrentLocalVar￨6 )￨5 {￨5 if￨6 (￨6 (￨7 (￨7 local￨7 .￨7 declaration￨7 )￨7 !=￨7 null￨7 )￨7 &&￨7 (￨7 compilerOptions￨7 (￨7 )￨7 .￨7 preserveAllLocalVariables￨7 )￨7 )￨6 {￨6 generateCurrentLocalVar￨7 =￨7 true￨7 ;￨7 local￨7 .￨7 useFlag￨7 =￨7 LocalVariableBinding￨7 .￨7 USED￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 generateCurrentLocalVar￨6 )￨5 {￨5 if￨6 (￨6 (￨7 local￨7 .￨7 declaration￨7 )￨7 !=￨7 null￨7 )￨6 {￨6 codeStream￨7 .￨7 record￨7 (￨7 local￨7 )￨7 ;￨7 }￨6 local￨6 .￨6 resolvedPosition￨6 =￨6 this￨6 .￨6 offset￨6 ;￨6 <START_BUG>￨6 if￨6 (￨6 (￨6 (￨6 local￨6 .￨6 type￨6 )￨6 ==￨6 (￨6 LongBinding￨6 )￨6 )￨6 ||￨6 (￨6 (￨6 local￨6 .￨6 type￨6 )￨6 ==￨6 (￨6 DoubleBinding￨6 )￨6 )￨6 )￨6 {￨6 <END_BUG>￨6 this￨6 .￨6 offset￨6 +=￨6 2￨6 ;￨6 else￨6 {￨6 (￨7 this￨7 .￨7 offset￨7 )￨7 ++￨7 ;￨7 }￨6 if￨6 (￨6 (￨7 this￨7 .￨7 offset￨7 )￨7 >￨7 65535￨7 )￨6 {￨6 this￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 noMoreAvailableSpaceForLocal￨7 (￨7 local￨7 ,￨7 (￨7 (￨7 local￨7 .￨7 declaration￨7 )￨7 ==￨7 null￨7 ?￨7 (￨7 (￨7 ASTNode￨7 )￨7 (￨7 this￨7 .￨7 methodScope￨7 (￨7 )￨7 .￨7 referenceContext￨7 )￨7 )￨7 :￨7 local￨7 .￨7 declaration￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 local￨6 .￨6 resolvedPosition￨6 =￨6 -￨6 1￨6 ;￨6 }￨5 hasMoreVariables￨5 =￨5 (￨5 ++￨5 ilocal￨5 )￨5 <￨5 maxLocals￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 offset￨4 )￨4 >￨4 (￨4 this￨4 .￨4 maxOffset￨4 )￨4 )￨3 {￨3 this￨4 .￨4 maxOffset￨4 =￨4 this￨4 .￨4 offset￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 emulateOuterAccess￨2 (￨2 LocalVariableBinding￨3 outerLocalVariable￨3 )￨2 {￨2 }￨2 public￨2 LocalDeclaration￨2 [￨2 ]￨2 findLocalVariableDeclarations￨2 (￨2 int￨3 position￨3 )￨2 {￨2 }￨2 public￨2 final￨2 ReferenceBinding￨2 findLocalType￨2 (￨2 char￨3 [￨3 ]￨3 name￨3 )￨2 {￨2 }￨2 public￨2 LocalVariableBinding￨2 findVariable￨2 (￨2 char￨3 [￨3 ]￨3 variable￨3 )￨2 {￨2 }￨2 public￨2 Binding￨2 getBinding￨2 (￨2 char￨3 [￨3 ]￨3 [￨3 ]￨3 compoundName￨3 ,￨3 int￨3 mask￨3 ,￨3 InvocationSite￨3 invocationSite￨3 ,￨3 boolean￨3 needResolve￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Binding￨2 getBinding￨2 (￨2 char￨3 [￨3 ]￨3 [￨3 ]￨3 compoundName￨3 ,￨3 InvocationSite￨3 invocationSite￨3 )￨2 {￨2 }￨2 public￨2 VariableBinding￨2 [￨2 ]￨2 getEmulationPath￨2 (￨2 LocalVariableBinding￨3 outerLocalVariable￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 getEmulationPath￨2 (￨2 ReferenceBinding￨3 targetEnclosingType￨3 ,￨3 boolean￨3 onlyExactMatch￨3 ,￨3 boolean￨3 denyEnclosingArgInConstructorCall￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isDuplicateLocalVariable￨2 (￨2 char￨3 [￨3 ]￨3 name￨3 )￨2 {￨2 }￨2 public￨2 int￨2 maxShiftedOffset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ProblemReporter￨2 problemReporter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 propagateInnerEmulation￨2 (￨2 ReferenceBinding￨3 targetType￨3 ,￨3 boolean￨3 isEnclosingInstanceSupplied￨3 )￨2 {￨2 }￨2 public￨2 TypeDeclaration￨2 referenceType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 scopeIndex￨2 (￨2 )￨2 {￨2 }￨2 int￨2 startIndex￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PageInstanceMapper￨1 extends￨1 AbstractComponentMapper￨1 {￨1 public￨2 PageInstanceMapper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IRequestHandler￨2 mapRequest￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 public￨2 Url￨2 mapHandler￨2 (￨2 IRequestHandler￨3 requestHandler￨3 )￨2 {￨2 PageComponentInfo￨3 info￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 requestHandler￨4 instanceof￨4 RenderPageRequestHandler￨4 )￨3 {￨3 IRequestablePage￨4 page￨4 =￨4 (￨4 (￨4 RenderPageRequestHandler￨4 )￨4 (￨4 requestHandler￨4 )￨4 )￨4 .￨4 getPage￨4 (￨4 )￨4 ;￨4 PageInfo￨4 i￨4 =￨4 new￨4 PageInfo￨4 (￨4 page￨4 .￨4 getPageId￨4 (￨4 )￨4 )￨4 ;￨4 info￨4 =￨4 new￨4 PageComponentInfo￨4 (￨4 i￨4 ,￨4 null￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 requestHandler￨4 instanceof￨4 ListenerInterfaceRequestHandler￨4 )￨3 {￨3 ListenerInterfaceRequestHandler￨4 handler￨4 =￨4 (￨4 (￨4 ListenerInterfaceRequestHandler￨4 )￨4 (￨4 requestHandler￨4 )￨4 )￨4 ;￨4 IRequestablePage￨4 page￨4 =￨4 handler￨4 .￨4 getPage￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 String￨4 componentPath￨4 =￨4 handler￨4 .￨4 getComponent￨4 (￨4 )￨4 .￨4 getPageRelativePath￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 RequestListenerInterface￨4 listenerInterface￨4 =￨4 handler￨4 .￨4 getListenerInterface￨4 (￨4 )￨4 ;￨4 Integer￨4 renderCount￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 listenerInterface￨5 .￨5 isIncludeRenderCount￨5 (￨5 )￨5 )￨4 {￨4 renderCount￨5 =￨5 page￨5 .￨5 getRenderCount￨5 (￨5 )￨5 ;￨5 }￨4 PageInfo￨4 pageInfo￨4 =￨4 new￨4 PageInfo￨4 (￨4 page￨4 .￨4 getPageId￨4 (￨4 )￨4 )￨4 ;￨4 ComponentInfo￨4 componentInfo￨4 =￨4 new￨4 ComponentInfo￨4 (￨4 renderCount￨4 ,￨4 requestListenerInterfaceToString￨4 (￨4 listenerInterface￨4 )￨4 ,￨4 componentPath￨4 ,￨4 handler￨4 .￨4 getBehaviorIndex￨4 (￨4 )￨4 )￨4 ;￨4 info￨4 =￨4 new￨4 PageComponentInfo￨4 (￨4 pageInfo￨4 ,￨4 componentInfo￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 info￨4 !=￨4 null￨4 )￨3 {￨3 Url￨4 url￨4 =￨4 new￨4 Url￨4 (￨4 )￨4 ;￨4 url￨4 .￨4 getSegments￨4 (￨4 )￨4 .￨4 add￨4 (￨4 getContext￨4 (￨4 )￨4 .￨4 getNamespace￨4 (￨4 )￨4 )￨4 ;￨4 url￨4 .￨4 getSegments￨4 (￨4 )￨4 .￨4 add￨4 (￨4 getContext￨4 (￨4 )￨4 .￨4 getPageIdentifier￨4 (￨4 )￨4 )￨4 ;￨4 encodePageComponentInfo￨4 (￨4 url￨4 ,￨4 info￨4 )￨4 ;￨4 return￨4 url￨4 ;￨4 }￨3 else￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 }￨2 public￨2 int￨2 getCompatibilityScore￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 }￨1
public￨1 {￨2 }￨2 void￨2 createWidget￨2 (￨2 )￨2 {￨2 }￨2 Color￨2 defaultBackground￨2 (￨2 )￨2 {￨2 }￨2 NSFont￨2 defaultNSFont￨2 (￨2 )￨2 {￨2 }￨2 Color￨2 defaultForeground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deselectAll￨2 (￨2 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deselect￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 void￨2 destroyItem￨2 (￨2 TreeColumn￨3 column￨3 )￨2 {￨2 }￨2 void￨2 destroyItem￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 boolean￨2 dragDetect￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 boolean￨3 filter￨3 ,￨3 boolean￨3 [￨3 ]￨3 consume￨3 )￨2 {￨2 }￨2 void￨2 drawInteriorWithFrame_inView￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 cellFrame￨3 ,￨3 int￨3 view￨3 )￨2 {￨2 }￨2 int￨2 getCheckColumnWidth￨2 (￨2 )￨2 {￨2 }￨2 TreeColumn￨2 getColumn￨2 (￨2 id￨3 id￨3 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 getColumn￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getColumnCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 [￨2 ]￨2 getColumnOrder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 [￨2 ]￨2 getColumns￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getGridLineWidth￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getHeaderHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getHeaderVisible￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getItem￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getItem￨2 (￨2 Point￨3 point￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getItemCount￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getItemCount￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getItemHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 [￨2 ]￨2 getItems￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getLinesVisible￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getParentItem￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 [￨2 ]￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getSelectionCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 getSortColumn￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getSortDirection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TreeItem￨2 getTopItem￨2 (￨2 )￨2 {￨2 }￨2 void￨2 highlightSelectionInClipRect￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 rect￨3 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 TreeColumn￨3 column￨3 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 boolean￨2 isTrim￨2 (￨2 NSView￨3 view￨3 )￨2 {￨2 }￨2 int￨2 menuForEvent￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 int￨2 outlineView_child_ofItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 index￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 void￨2 outlineView_didClickTableColumn￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 tableColumn￨3 )￨2 {￨2 }￨2 int￨2 outlineView_objectValueForTableColumn_byItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 tableColumn￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 boolean￨2 outlineView_isItemExpandable￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 item￨3 )￨2 {￨2 }￨2 int￨2 outlineView_numberOfChildrenOfItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 item￨3 )￨2 {￨2 }￨2 void￨2 outlineView_willDisplayCell_forTableColumn_item￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 cell￨3 ,￨3 int￨3 tableColumn￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 void￨2 outlineViewColumnDidMove￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 aNotification￨3 )￨2 {￨2 }￨2 void￨2 outlineViewColumnDidResize￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 aNotification￨3 )￨2 {￨2 }￨2 void￨2 outlineViewItemDidExpand￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 outlineViewSelectionDidChange￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 boolean￨2 outlineView_shouldCollapseItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 boolean￨2 outlineView_shouldExpandItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 void￨2 outlineView_setObjectValue_forTableColumn_byItem￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 outlineView￨3 ,￨3 int￨3 object￨3 ,￨3 int￨3 tableColumn￨3 ,￨3 int￨3 itemID￨3 )￨2 {￨2 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 reloadItem￨2 (￨2 TreeItem￨3 item￨3 ,￨3 boolean￨3 recurse￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeTreeListener￨2 (￨2 TreeListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setInsertMark￨2 (￨2 TreeItem￨3 item￨3 ,￨3 boolean￨3 before￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 void￨2 sendDoubleSelection￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 sendKeyEvent￨2 (￨2 NSEvent￨3 nsEvent￨3 ,￨3 int￨3 type￨3 )￨2 {￨2 }￨2 void￨2 setBackground￨2 (￨2 float￨3 [￨3 ]￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setColumnOrder￨2 (￨2 int￨3 [￨3 ]￨3 order￨3 )￨2 {￨2 }￨2 void￨2 setFont￨2 (￨2 NSFont￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setHeaderVisible￨2 (￨2 boolean￨3 show￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setItemCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 void￨2 setItemCount￨2 (￨2 TreeItem￨3 parentItem￨3 ,￨3 int￨3 count￨3 )￨2 {￨2 }￨2 void￨2 setItemHeight￨2 (￨2 int￨3 itemHeight￨3 )￨2 {￨2 }￨2 void￨2 setItemHeight￨2 (￨2 Image￨3 image￨3 ,￨3 NSFont￨3 font￨3 ,￨3 boolean￨3 set￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLinesVisible￨2 (￨2 boolean￨3 show￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRedraw￨2 (￨2 boolean￨3 redraw￨3 )￨2 {￨2 }￨2 boolean￨2 setScrollWidth￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 setScrollWidth￨2 (￨2 boolean￨3 set￨3 ,￨3 TreeItem￨3 [￨3 ]￨3 items￨3 ,￨3 boolean￨3 recurse￨3 )￨2 {￨2 if￨3 (￨3 items￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 ignoreRedraw￨4 )￨4 ||￨4 (￨4 (￨4 drawCount￨4 )￨4 !=￨4 0￨4 )￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 columnCount￨3 )￨3 !=￨3 0￨3 )￨3 ||￨3 (￨3 items￨3 ==￨3 null￨3 )￨3 )￨3 <END_BUG>￨3 return￨3 false￨3 ;￨3 GC￨3 gc￨3 =￨3 new￨3 GC￨3 (￨3 this￨3 )￨3 ;￨3 int￨3 newWidth￨3 =￨3 calculateWidth￨3 (￨3 items￨3 ,￨3 0￨3 ,￨3 gc￨3 ,￨3 recurse￨3 )￨3 ;￨3 gc￨3 .￨3 dispose￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 set￨4 )￨3 {￨3 int￨4 oldWidth￨4 =￨4 (￨4 (￨4 int￨4 )￨4 (￨4 firstColumn￨4 .￨4 width￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 oldWidth￨5 >=￨5 newWidth￨5 )￨4 {￨4 return￨5 false￨5 ;￨5 }￨4 }￨3 firstColumn￨3 .￨3 setWidth￨3 (￨3 newWidth￨3 )￨3 ;￨3 return￨3 true￨3 ;￨3 }￨2 boolean￨2 setScrollWidth￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 TreeItem￨3 [￨3 ]￨3 items￨3 )￨2 {￨2 }￨2 void￨2 setSmallSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSortColumn￨2 (￨2 TreeColumn￨3 column￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSortDirection￨2 (￨2 int￨3 direction￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTopItem￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showColumn￨2 (￨2 TreeColumn￨3 column￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showItem￨2 (￨2 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 void￨2 showItem￨2 (￨2 TreeItem￨3 item￨3 ,￨3 boolean￨3 scroll￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showSelection￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HeaderManager￨1 extends￨1 ConfigTestElement￨1 implements￨1 Serializable￨1 {￨1 public￨2 static￨2 final￨2 String￨2 HEADERS￨2 =￨2 "HeaderManager.headers"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 columnCount￨2 =￨2 2￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 columnNames￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 Object￨2 SOAPHeader￨2 =￨2 null￨2 ;￨2 public￨2 HeaderManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CollectionProperty￨2 getHeaders￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getColumnCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getColumnName￨2 (￨2 int￨3 column￨3 )￨2 {￨2 }￨2 public￨2 Class￨2 getColumnClass￨2 (￨2 int￨3 column￨3 )￨2 {￨2 }￨2 public￨2 Header￨2 getHeader￨2 (￨2 int￨3 row￨3 )￨2 {￨2 }￨2 public￨2 void￨2 save￨2 (￨2 String￨2 headFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addFile￨2 (￨2 String￨2 headerFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 Header￨3 h￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Header￨2 get￨2 (￨2 int￨3 i￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeHeaderNamed￨2 (￨2 String￨3 name￨3 )￨2 {￨2 Vector￨3 removeIndices￨3 =￨3 new￨3 Vector￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 for￨3 (￨3 int￨3 i￨3 =￨3 (￨3 getHeaders￨3 (￨3 )￨3 .￨3 size￨3 (￨3 )￨3 )￨3 -￨3 1￨3 ;￨3 i￨3 >￨3 0￨3 ;￨3 i￨3 --￨3 )￨3 {￨3 <END_BUG>￨3 Header￨3 header￨3 =￨3 (￨3 (￨3 Header￨3 )￨3 (￨3 getHeaders￨3 (￨3 )￨3 .￨3 get￨3 (￨3 i￨3 )￨3 .￨3 getObjectValue￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 header￨4 ==￨4 null￨4 )￨3 {￨3 continue￨4 ;￨4 }￨3 if￨3 (￨3 header￨4 .￨4 getName￨4 (￨4 )￨4 .￨4 equalsIgnoreCase￨4 (￨4 name￨4 )￨4 )￨3 {￨3 removeIndices￨4 .￨4 addElement￨4 (￨4 new￨4 Integer￨4 (￨4 i￨4 )￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 Enumeration￨4 e￨4 =￨4 removeIndices￨4 .￨4 elements￨4 (￨4 )￨4 ;￨4 e￨4 .￨4 hasMoreElements￨4 (￨4 )￨4 ;￨4 )￨3 {￨3 getHeaders￨4 (￨4 )￨4 .￨4 remove￨4 (￨4 (￨4 (￨4 Integer￨4 )￨4 (￨4 e￨4 .￨4 nextElement￨4 (￨4 )￨4 )￨4 )￨4 .￨4 intValue￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 String￨2 [￨2 ]￨2 split￨2 (￨2 String￨3 splittee￨3 ,￨3 String￨3 splitChar￨3 ,￨3 String￨3 def￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getClassLabel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getSOAPHeader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSOAPHeader￨2 (￨2 Object￨3 header￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BuildArgParser￨1 extends￨1 Main￨1 {￨1 private￨2 static￨2 final￨2 String￨2 BUNDLE_NAME￨2 =￨2 "org.aspectj.ajdt.ajc.messages"￨2 ;￨2 private￨2 static￨2 boolean￨2 LOADED_BUNDLE￨2 =￨2 false￨2 ;￨2 private￨2 static￨2 class￨2 StringPrintWriter￨2 extends￨2 PrintWriter￨2 {￨2 public￨3 final￨3 StringWriter￨3 stringWriter￨3 ;￨3 StringPrintWriter￨3 (￨3 StringWriter￨4 sw￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 String￨2 getUsage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 StringBuffer￨2 errorSink￨2 ;￨2 public￨2 BuildArgParser￨2 (￨2 PrintWriter￨3 writer￨3 )￨2 {￨2 }￨2 public￨2 BuildArgParser￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AjBuildConfig￨2 genBuildConfig￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 ,￨3 IMessageHandler￨3 handler￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getOtherMessages￨2 (￨2 boolean￨3 flush￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setDebugOptions￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collection￨2 collectSourceRootFiles￨2 (￨2 File￨3 dir￨3 )￨2 {￨2 }￨2 public￨2 List￨2 getClasspath￨2 (￨2 BuildArgParser￨3 .￨3 AjcConfigParser￨3 parser￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addExtDirs￨2 (￨2 String￨3 extdirs￨3 ,￨3 List￨3 classpathCollector￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addClasspath￨2 (￨2 String￨3 classpath￨3 ,￨3 List￨3 classpathCollector￨3 )￨2 {￨2 }￨2 private￨2 class￨2 AjcConfigParser￨2 extends￨2 ConfigParser￨2 {￨2 private￨3 String￨3 bootclasspath￨3 =￨3 null￨3 ;￨3 private￨3 String￨3 classpath￨3 =￨3 null￨3 ;￨3 private￨3 String￨3 extdirs￨3 =￨3 null￨3 ;￨3 private￨3 List￨3 unparsedArgs￨3 =￨3 new￨3 ArrayList￨3 (￨3 )￨3 ;￨3 private￨3 AjBuildConfig￨3 buildConfig￨3 ;￨3 private￨3 IMessageHandler￨3 handler￨3 ;￨3 public￨3 AjcConfigParser￨3 (￨3 AjBuildConfig￨4 buildConfig￨4 ,￨4 IMessageHandler￨4 handler￨4 )￨3 {￨3 }￨3 public￨3 List￨3 getUnparsedArgs￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 parseOption￨3 (￨3 String￨4 arg￨4 ,￨4 LinkedList￨4 args￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 dirLookahead￨3 (￨3 String￨4 arg￨4 ,￨4 LinkedList￨4 argList￨4 ,￨4 int￨4 nextArgIndex￨4 )￨3 {￨3 }￨3 public￨3 void￨3 showError￨3 (￨3 String￨4 message￨4 )￨3 {￨3 <START_BUG>￨4 MessageUtil￨4 .￨4 error￨4 (￨4 handler￨4 ,￨4 message￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 protected￨3 void￨3 showWarning￨3 (￨3 String￨4 message￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 MultiPassIndexSplitter￨1 {￨1 public￨2 void￨2 split￨2 (￨2 Version￨2 version￨2 ,￨2 IndexReader￨2 in￨2 ,￨2 Directory￨2 [￨2 ]￨2 outputs￨2 ,￨2 boolean￨2 seq￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 outputs￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 outputs￨4 .￨4 length￨4 )￨4 <￨4 2￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 IOException￨4 (￨4 "Invalid<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>outputs."￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 in￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 in￨4 .￨4 numDocs￨4 (￨4 )￨4 )￨4 <￨4 2￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 IOException￨4 (￨4 "Not<seq2seq4repair_space>enough<seq2seq4repair_space>documents<seq2seq4repair_space>for<seq2seq4repair_space>splitting"￨4 )￨4 ;￨4 }￨3 int￨3 numParts￨3 =￨3 outputs￨3 .￨3 length￨3 ;￨3 MultiPassIndexSplitter￨3 .￨3 FakeDeleteIndexReader￨3 input￨3 =￨3 new￨3 MultiPassIndexSplitter￨3 .￨3 FakeDeleteIndexReader￨3 (￨3 in￨3 )￨3 ;￨3 int￨3 maxDoc￨3 =￨3 input￨3 .￨3 maxDoc￨3 (￨3 )￨3 ;￨3 int￨3 partLen￨3 =￨3 maxDoc￨3 /￨3 numParts￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 numParts￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 input￨4 .￨4 undeleteAll￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 seq￨5 )￨4 {￨4 int￨5 lo￨5 =￨5 partLen￨5 *￨5 i￨5 ;￨5 int￨5 hi￨5 =￨5 lo￨5 +￨5 partLen￨5 ;￨5 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 lo￨6 ;￨6 j￨6 ++￨6 )￨5 {￨5 input￨6 .￨6 deleteDocument￨6 (￨6 j￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 i￨6 <￨6 (￨6 numParts￨6 -￨6 1￨6 )￨6 )￨5 {￨5 for￨6 (￨6 int￨7 j￨7 =￨7 hi￨7 ;￨7 j￨7 <￨7 maxDoc￨7 ;￨7 j￨7 ++￨7 )￨6 {￨6 input￨7 .￨7 deleteDocument￨7 (￨7 j￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 else￨4 {￨4 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 maxDoc￨6 ;￨6 j￨6 ++￨6 )￨5 {￨5 if￨6 (￨6 (￨7 (￨7 (￨7 j￨7 +￨7 numParts￨7 )￨7 -￨7 i￨7 )￨7 %￨7 numParts￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 input￨7 .￨7 deleteDocument￨7 (￨7 j￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 IndexWriter￨4 w￨4 =￨4 new￨4 IndexWriter￨4 (￨4 outputs￨4 [￨4 i￨4 ]￨4 ,￨4 new￨4 IndexWriterConfig￨4 (￨4 version￨4 ,￨4 null￨4 )￨4 .￨4 setOpenMode￨4 (￨4 CREATE￨4 )￨4 )￨4 ;￨4 System￨4 .￨4 err￨4 .￨4 println￨4 (￨4 (￨4 (￨4 "Writing<seq2seq4repair_space>part<seq2seq4repair_space>"￨4 +￨4 (￨4 i￨4 +￨4 1￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>..."￨4 )￨4 )￨4 ;￨4 final￨4 List￨4 <￨4 ?￨4 extends￨4 MultiPassIndexSplitter￨4 .￨4 FakeDeleteAtomicIndexReader￨4 >￨4 sr￨4 =￨4 input￨4 .￨4 getSequentialSubReaders￨4 (￨4 )￨4 ;￨4 w￨4 .￨4 addIndexes￨4 (￨4 sr￨4 .￨4 toArray￨4 (￨4 new￨4 IndexReader￨4 [￨4 sr￨4 .￨4 size￨4 (￨4 )￨4 ]￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 w￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 System￨3 .￨3 err￨3 .￨3 println￨3 (￨3 "Done."￨3 )￨3 ;￨3 }￨2 @￨2 SuppressWarnings￨2 (￨2 "deprecation"￨2 )￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 class￨2 FakeDeleteIndexReader￨2 extends￨2 BaseCompositeReader￨2 <￨2 MultiPassIndexSplitter￨2 .￨2 FakeDeleteAtomicIndexReader￨2 >￨2 {￨2 public￨3 FakeDeleteIndexReader￨3 (￨3 IndexReader￨4 reader￨4 )￨3 {￨3 }￨3 private￨3 static￨3 MultiPassIndexSplitter￨3 .￨3 FakeDeleteAtomicIndexReader￨3 [￨3 ]￨3 initSubReaders￨3 (￨3 IndexReader￨4 reader￨4 )￨3 {￨3 }￨3 public￨3 void￨3 deleteDocument￨3 (￨3 int￨4 docID￨4 )￨3 {￨3 }￨3 public￨3 void￨3 undeleteAll￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 doClose￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 final￨2 class￨2 FakeDeleteAtomicIndexReader￨2 extends￨2 FilterAtomicReader￨2 {￨2 FixedBitSet￨3 liveDocs￨3 ;￨3 public￨3 FakeDeleteAtomicIndexReader￨3 (￨3 AtomicReader￨4 reader￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 numDocs￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 undeleteAll￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 deleteDocument￨3 (￨3 int￨4 n￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Bits￨3 getLiveDocs￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
@￨1 Entity￨1 @￨1 Table￨1 (￨1 name￨1 =￨1 "EMP_MBI"￨1 )￨1 @￨1 IdClass￨1 (￨1 EmpId￨1 .￨1 class￨1 )￨1 public￨1 class￨1 Employee￨1 {￨1 @￨2 Id￨2 int￨2 empId￨2 ;￨2 @￨2 Id￨2 @￨2 Enumerated￨2 Employee￨2 .￨2 EmpType￨2 empType￨2 ;￨2 @￨2 OneToOne￨2 PhoneNumber￨2 phoneNumber￨2 ;￨2 public￨2 PhoneNumber￨2 getPhoneNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setPhoneNumber￨2 (￨2 PhoneNumber￨3 phoneNumber￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getEmpId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setEmpId￨2 (￨2 int￨3 empId￨3 )￨2 {￨2 }￨2 public￨2 Employee￨2 .￨2 EmpType￨2 getEmpType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setEmpType￨2 (￨2 Employee￨3 .￨3 EmpType￨3 empType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 Employee￨3 e￨3 =￨3 (￨3 (￨3 Employee￨3 )￨3 (￨3 o￨3 )￨3 )￨3 ;￨3 PhoneNumber￨3 p￨3 =￨3 e￨3 .￨3 getPhoneNumber￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 p￨3 .￨3 getNumber￨3 (￨3 )￨3 )￨3 !=￨3 (￨3 phoneNumber￨3 .￨3 getNumber￨3 (￨3 )￨3 )￨3 )￨3 <END_BUG>￨3 return￨3 false￨3 ;￨3 return￨3 true￨3 ;￨3 }￨2 public￨2 enum￨2 EmpType￨2 (￨2 )￨2 {￨2 A1￨3 ,￨3 A2￨3 ,￨3 A3￨3 ,￨3 A4￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 DeferredAttrNSImpl￨1 extends￨1 AttrNSImpl￨1 implements￨1 DeferredNode￨1 {￨1 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 6074924934945957154L￨2 ;￨2 protected￨2 transient￨2 int￨2 fNodeIndex￨2 ;￨2 DeferredAttrNSImpl￨2 (￨2 DeferredDocumentImpl￨3 ownerDocument￨3 ,￨3 int￨3 nodeIndex￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getNodeIndex￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 synchronizeData￨2 (￨2 )￨2 {￨2 needsSyncData￨3 (￨3 false￨3 )￨3 ;￨3 DeferredDocumentImpl￨3 ownerDocument￨3 =￨3 (￨3 (￨3 DeferredDocumentImpl￨3 )￨3 (￨3 ownerDocument￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 name￨3 =￨3 ownerDocument￨3 .￨3 getNodeName￨3 (￨3 fNodeIndex￨3 )￨3 ;￨3 int￨3 index￨3 =￨3 name￨3 .￨3 indexOf￨3 (￨3 ':'￨3 )￨3 ;￨3 String￨3 prefix￨3 ;￨3 if￨3 (￨3 index￨4 <￨4 0￨4 )￨3 {￨3 prefix￨4 =￨4 null￨4 ;￨4 localName￨4 =￨4 name￨4 ;￨4 }￨3 else￨3 {￨3 prefix￨4 =￨4 name￨4 .￨4 substring￨4 (￨4 0￨4 ,￨4 index￨4 )￨4 ;￨4 localName￨4 =￨4 name￨4 .￨4 substring￨4 (￨4 (￨4 index￨4 +￨4 1￨4 )￨4 )￨4 ;￨4 }￨3 isSpecified￨3 (￨3 (￨3 (￨3 ownerDocument￨3 .￨3 getNodeExtra￨3 (￨3 fNodeIndex￨3 )￨3 )￨3 ==￨3 1￨3 )￨3 )￨3 ;￨3 namespaceURI￨3 =￨3 ownerDocument￨3 .￨3 getNodeURI￨3 (￨3 fNodeIndex￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 namespaceURI￨3 .￨3 length￨3 (￨3 )￨3 )￨3 ==￨3 0￨3 )￨3 {￨3 <END_BUG>￨3 namespaceURI￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 namespaceURI￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 prefix￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 prefix￨6 .￨6 equals￨6 (￨6 "xmlns"￨6 )￨6 )￨5 {￨5 namespaceURI￨6 =￨6 "http://www.w3.org/2000/xmlns/"￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equals￨5 (￨5 "xmlns"￨5 )￨5 )￨4 {￨4 namespaceURI￨5 =￨5 "http://www.w3.org/2000/xmlns/"￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 void￨2 synchronizeChildren￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 SuppressWarnings￨1 (￨1 "serial"￨1 )￨1 public￨1 class￨1 SessionConnectEvent￨1 extends￨1 ApplicationEvent￨1 {￨1 private￨2 final￨2 Message￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 message￨2 ;￨2 public￨2 SessionConnectEvent￨2 (￨2 Object￨3 source￨3 ,￨3 Message￨3 <￨3 byte￨3 [￨3 ]￨3 >￨3 message￨3 )￨2 {￨2 }￨2 public￨2 Message￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 getMessage￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "SessionConnectEvent:<seq2seq4repair_space>message="￨3 +￨3 (￨3 message￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 TableMouseListener￨1 extends￨1 DoubleClickListener￨1 {￨1 private￨2 TableController￨2 controller￨2 =￨2 null￨2 ;￨2 private￨2 AddressbookFrameMediator￨2 mediator￨2 =￨2 null￨2 ;￨2 public￨2 TableMouseListener￨2 (￨2 TableController￨3 tableController￨3 )￨2 {￨2 }￨2 public￨2 void￨2 doubleClick￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 if￨3 (￨3 (￨4 (￨4 e￨4 .￨4 getButton￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 MouseEvent￨4 .￨4 BUTTON1￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 e￨4 .￨4 getClickCount￨4 (￨4 )￨4 )￨4 >￨4 1￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 Object￨4 [￨4 ]￨4 uids￨4 =￨4 mediator￨4 .￨4 getTable￨4 (￨4 )￨4 .￨4 getUids￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 IContactStorage￨4 folder￨4 =￨4 (￨4 (￨4 IContactStorage￨4 )￨4 (￨4 mediator￨4 .￨4 getTree￨4 (￨4 )￨4 .￨4 getSelectedFolder￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 uids￨5 .￨5 length￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 IContactModel￨4 card￨4 =￨4 null￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 card￨5 =￨5 (￨5 (￨5 IContactModel￨5 )￨5 (￨5 folder￨5 .￨5 get￨5 (￨5 uids￨5 [￨5 0￨5 ]￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 ex￨5 )￨4 {￨4 if￨5 (￨5 Logging￨6 .￨6 DEBUG￨6 )￨5 {￨5 ex￨6 .￨6 printStackTrace￨6 (￨6 )￨6 ;￨6 }￨5 ErrorDialog￨5 .￨5 createDialog￨5 (￨5 ex￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 ex￨5 )￨5 ;￨5 }￨4 ContactEditorDialog￨4 dialog￨4 =￨4 new￨4 ContactEditorDialog￨4 (￨4 mediator￨4 .￨4 getView￨4 (￨4 )￨4 .￨4 getFrame￨4 (￨4 )￨4 ,￨4 (￨4 (￨4 ContactModel￨4 )￨4 (￨4 card￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 dialog￨5 .￨5 getResult￨5 (￨5 )￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 folder￨6 .￨6 modify￨6 (￨6 uids￨6 [￨6 0￨6 ]￨6 ,￨6 card￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 Exception￨6 e1￨6 )￨5 {￨5 if￨6 (￨6 Logging￨7 .￨7 DEBUG￨7 )￨6 {￨6 e1￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 ErrorDialog￨6 .￨6 createDialog￨6 (￨6 e1￨6 .￨6 getMessage￨6 (￨6 )￨6 ,￨6 e1￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 folder￨6 instanceof￨6 GroupFolder￨6 )￨5 {￨5 mediator￨6 .￨6 getTree￨6 (￨6 )￨6 .￨6 setSelectedFolder￨6 (￨6 (￨6 (￨6 AbstractFolder￨6 )￨6 (￨6 folder￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 DebugComponent￨1 extends￨1 SearchComponent￨1 {￨1 public￨2 static￨2 final￨2 String￨2 COMPONENT_NAME￨2 =￨2 "debug"￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 prepare￨2 (￨2 ResponseBuilder￨2 rb￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 @￨2 Override￨2 public￨2 void￨2 process￨2 (￨2 ResponseBuilder￨2 rb￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyRequest￨2 (￨2 ResponseBuilder￨3 rb￨3 ,￨3 SearchComponent￨3 who￨3 ,￨3 ShardRequest￨3 sreq￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 handleResponses￨2 (￨2 ResponseBuilder￨3 rb￨3 ,￨3 ShardRequest￨3 sreq￨3 )￨2 {￨2 }￨2 private￨2 Set￨2 <￨2 String￨2 >￨2 excludeSet￨2 =￨2 new￨2 HashSet￨2 <￨2 String￨2 >￨2 (￨2 Arrays￨2 .￨2 asList￨2 (￨2 "explain"￨2 )￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 finishStage￨2 (￨2 ResponseBuilder￨3 rb￨3 )￨2 {￨2 if￨3 (￨3 (￨4 rb￨4 .￨4 isDebug￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 rb￨4 .￨4 stage￨4 )￨4 ==￨4 (￨4 ResponseBuilder￨4 .￨4 STAGE_GET_FIELDS￨4 )￨4 )￨4 )￨3 {￨3 NamedList￨4 info￨4 =￨4 null￨4 ;￨4 NamedList￨4 explain￨4 =￨4 new￨4 SimpleOrderedMap￨4 (￨4 )￨4 ;￨4 Object￨4 [￨4 ]￨4 arr￨4 =￨4 new￨4 Object￨4 [￨4 (￨4 rb￨4 .￨4 resultIds￨4 .￨4 size￨4 (￨4 )￨4 )￨4 *￨4 2￨4 ]￨4 ;￨4 for￨4 (￨4 ShardRequest￨5 sreq￨5 :￨5 rb￨5 .￨5 finished￨5 )￨4 {￨4 if￨5 (￨5 (￨6 (￨6 sreq￨6 .￨6 purpose￨6 )￨6 &￨6 (￨6 ShardRequest￨6 .￨6 PURPOSE_GET_DEBUG￨6 )￨6 )￨6 ==￨6 0￨6 )￨5 {￨5 continue￨6 ;￨6 }￨5 for￨5 (￨5 ShardResponse￨6 srsp￨6 :￨6 sreq￨6 .￨6 responses￨6 )￨5 {￨5 <START_BUG>￨6 NamedList￨6 sdebug￨6 =￨6 (￨6 (￨6 NamedList￨6 )￨6 (￨6 srsp￨6 .￨6 rsp￨6 .￨6 getResponse￨6 (￨6 )￨6 .￨6 get￨6 (￨6 "debug"￨6 )￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 info￨6 =￨6 (￨6 (￨6 NamedList￨6 )￨6 (￨6 merge￨6 (￨6 sdebug￨6 ,￨6 info￨6 ,￨6 excludeSet￨6 )￨6 )￨6 )￨6 ;￨6 NamedList￨6 sexplain￨6 =￨6 (￨6 (￨6 NamedList￨6 )￨6 (￨6 sdebug￨6 .￨6 get￨6 (￨6 "explain"￨6 )￨6 )￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ;￨7 i￨7 <￨7 (￨7 sexplain￨7 .￨7 size￨7 (￨7 )￨7 )￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 String￨7 id￨7 =￨7 sexplain￨7 .￨7 getName￨7 (￨7 i￨7 )￨7 ;￨7 ShardDoc￨7 sdoc￨7 =￨7 rb￨7 .￨7 resultIds￨7 .￨7 get￨7 (￨7 id￨7 )￨7 ;￨7 int￨7 idx￨7 =￨7 sdoc￨7 .￨7 positionInResponse￨7 ;￨7 arr￨7 [￨7 (￨7 idx￨7 <<￨7 1￨7 )￨7 ]￨7 =￨7 id￨7 ;￨7 arr￨7 [￨7 (￨7 (￨7 idx￨7 <<￨7 1￨7 )￨7 +￨7 1￨7 )￨7 ]￨7 =￨7 sexplain￨7 .￨7 getVal￨7 (￨7 i￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 explain￨4 =￨4 HighlightComponent￨4 .￨4 removeNulls￨4 (￨4 new￨4 SimpleOrderedMap￨4 (￨4 Arrays￨4 .￨4 asList￨4 (￨4 arr￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 info￨5 ==￨5 null￨5 )￨4 {￨4 info￨5 =￨5 new￨5 SimpleOrderedMap￨5 (￨5 )￨5 ;￨5 }￨4 int￨4 idx￨4 =￨4 info￨4 .￨4 indexOf￨4 (￨4 "explain"￨4 ,￨4 0￨4 )￨4 ;￨4 if￨4 (￨4 idx￨5 >=￨5 0￨5 )￨4 {￨4 info￨5 .￨5 setVal￨5 (￨5 idx￨5 ,￨5 explain￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 info￨5 .￨5 add￨5 (￨5 "explain"￨5 ,￨5 explain￨5 )￨5 ;￨5 }￨4 rb￨4 .￨4 setDebugInfo￨4 (￨4 info￨4 )￨4 ;￨4 rb￨4 .￨4 rsp￨4 .￨4 add￨4 (￨4 "debug"￨4 ,￨4 rb￨4 .￨4 getDebugInfo￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 Object￨2 merge￨2 (￨2 Object￨3 source￨3 ,￨3 Object￨3 dest￨3 ,￨3 Set￨3 <￨3 String￨3 >￨3 exclude￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getDescription￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getVersion￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getSourceId￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getSource￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 URL￨2 [￨2 ]￨2 getDocs￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SingleSignOnEntry￨1 extends￨1 org￨1 .￨1 apache￨1 .￨1 catalina￨1 .￨1 authenticator￨1 .￨1 SingleSignOnEntry￨1 {￨1 public￨2 SingleSignOnEntry￨2 (￨2 Principal￨3 principal￨3 ,￨3 String￨3 authType￨3 ,￨3 String￨3 username￨3 ,￨3 String￨3 password￨3 )￨2 {￨2 }￨2 synchronized￨2 boolean￨2 addSession2￨2 (￨2 SingleSignOn￨3 sso￨3 ,￨3 Session￨3 session￨3 )￨2 {￨2 }￨2 synchronized￨2 boolean￨2 removeSession2￨2 (￨2 Session￨3 session￨3 )￨2 {￨2 }￨2 void￨2 setPrincipal￨2 (￨2 Principal￨3 principal￨3 )￨2 {￨2 }￨2 int￨2 getSessionCount￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 updateCredentials￨2 (￨2 Principal￨3 principal￨3 ,￨3 String￨3 authType￨3 ,￨3 String￨3 username￨3 ,￨3 String￨3 password￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 boolean￨2 updateCredentials2￨2 (￨2 Principal￨3 principal￨3 ,￨3 String￨3 authType￨3 ,￨3 String￨3 username￨3 ,￨3 String￨3 password￨3 )￨2 {￨2 boolean￨3 changed￨3 =￨3 (￨3 (￨3 (￨3 safeEquals￨3 (￨3 this￨3 .￨3 principal￨3 ,￨3 principal￨3 )￨3 )￨3 ||￨3 (￨3 safeEquals￨3 (￨3 this￨3 .￨3 authType￨3 ,￨3 authType￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 safeEquals￨3 (￨3 this￨3 .￨3 username￨3 ,￨3 username￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 safeEquals￨3 (￨3 this￨3 .￨3 password￨3 ,￨3 password￨3 )￨3 )￨3 ;￨3 this￨3 .￨3 principal￨3 =￨3 principal￨3 ;￨3 this￨3 .￨3 authType￨3 =￨3 authType￨3 ;￨3 this￨3 .￨3 username￨3 =￨3 username￨3 ;￨3 this￨3 .￨3 password￨3 =￨3 password￨3 ;￨3 <START_BUG>￨3 this￨3 .￨3 canReauthenticate￨3 =￨3 (￨3 BASIC_AUTH￨3 .￨3 equals￨3 (￨3 authType￨3 )￨3 )￨3 ||￨3 (￨3 FORM_AUTH￨3 .￨3 equals￨3 (￨3 authType￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 changed￨3 ;￨3 }￨2 private￨2 boolean￨2 safeEquals￨2 (￨2 Object￨3 a￨3 ,￨3 Object￨3 b￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 closed￨1 implements￨1 Runnable￨1 {￨1 private￨2 static￨2 boolean￨2 jsr169_test￨2 =￨2 false￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 static￨2 boolean￨2 shutdownTest￨2 (￨2 String￨2 databaseName￨2 ,￨2 String￨2 shutdownString￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Connection￨2 cc￨2 ;￨2 private￨2 String￨2 sql￨2 ;￨2 String￨2 result￨2 ;￨2 private￨2 closed￨2 (￨2 Connection￨3 cc￨3 ,￨3 String￨3 sql￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 cc￨4 .￨4 createStatement￨4 (￨4 )￨4 .￨4 execute￨4 (￨4 sql￨4 )￨4 ;￨4 result￨4 =￨4 "Sleep<seq2seq4repair_space>thread<seq2seq4repair_space>completed<seq2seq4repair_space>"￨4 +￨4 (￨4 sql￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 SQLException￨4 sqle￨4 )￨3 {￨3 StringBuffer￨4 sb￨4 =￨4 new￨4 StringBuffer￨4 (￨4 )￨4 ;￨4 sb￨4 .￨4 append￨4 (￨4 sql￨4 )￨4 ;￨4 sb￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>-<seq2seq4repair_space>"￨4 )￨4 ;￨4 sb￨4 .￨4 append￨4 (￨4 sqle￨4 .￨4 getSQLState￨4 (￨4 )￨4 )￨4 ;￨4 while￨4 (￨4 sqle￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 sqle￨6 !=￨6 null￨6 )￨5 {￨5 sb￨6 .￨6 append￨6 (￨6 ",<seq2seq4repair_space>"￨6 )￨6 ;￨6 sb￨6 .￨6 append￨6 (￨6 sqle￨6 .￨6 getSQLState￨6 (￨6 )￨6 )￨6 ;￨6 sb￨6 .￨6 append￨6 (￨6 "<seq2seq4repair_space>--<seq2seq4repair_space>"￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 sqle￨7 .￨7 getMessage￨7 (￨7 )￨7 .￨7 indexOf￨7 (￨7 "InterruptedException"￨7 )￨7 )￨7 !=￨7 (￨7 -￨7 1￨7 )￨7 )￨6 {￨6 sb￨7 .￨7 append￨7 (￨7 "InterruptedException"￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 sb￨7 .￨7 append￨7 (￨7 sqle￨7 .￨7 getMessage￨7 (￨7 )￨7 )￨7 ;￨7 <START_BUG>￨7 sqle￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 <END_BUG>￨7 }￨6 }￨5 else￨5 {￨5 sb￨6 .￨6 append￨6 (￨6 sqle￨6 .￨6 getMessage￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 sqle￨5 =￨5 sqle￨5 .￨5 getNextException￨5 (￨5 )￨5 ;￨5 }￨4 result￨4 =￨4 sb￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 static￨2 boolean￨2 testStatement￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 testPreparedStatement￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 testResultSet￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 testConnection￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 testDerby62￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JPADependencyProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 ModuleIdentifier￨2 JAVAX_PERSISTENCE_API_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javax.persistence.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JAVAEE_API_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javaee.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JBOSS_AS_JPA_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.as.jpa"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JBOSS_HIBERNATE_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.hibernate"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JAVASSIST_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.javassist"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 NAMING_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.as.naming"￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addDependency￨2 (￨2 ModuleSpecification￨3 moduleSpecification￨3 ,￨3 ModuleLoader￨3 moduleLoader￨3 ,￨3 ModuleIdentifier￨3 moduleIdentifier￨3 )￨2 {￨2 <START_BUG>￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 moduleIdentifier￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ClusterCompiler￨1 {￨1 private￨2 int￨2 nbClassArgs￨2 ;￨2 private￨2 Vector￨2 classes￨2 ;￨2 public￨2 ClusterCompiler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generate￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 ClusterConf￨3 cconf￨3 =￨3 new￨3 ClusterConf￨3 (￨3 )￨3 ;￨3 CompilerContext￨3 cmpCtx￨3 =￨3 new￨3 CompilerContext￨3 (￨3 )￨3 ;￨3 prepare￨3 (￨3 args￨3 ,￨3 cmpCtx￨3 ,￨3 cconf￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 cmpCtx￨4 .￨4 clusterCfgGen￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 FileWriter￨4 f￨4 =￨4 new￨4 FileWriter￨4 (￨4 cmpCtx￨4 .￨4 clusterCfgGen￨4 )￨4 ;￨4 f￨4 .￨4 write￨4 (￨4 "<!DOCTYPE<seq2seq4repair_space>cluster-config<seq2seq4repair_space>PUBLIC\n"￨4 )￨4 ;￨4 f￨4 .￨4 write￨4 (￨4 "\t\"\"\n"￨4 )￨4 ;￨4 <START_BUG>￨4 f￨4 .￨4 write￨4 (￨4 "\t\"cluster-config.dtd\">\n\n"￨4 )￨4 ;￨4 <END_BUG>￨4 f￨4 .￨4 write￨4 (￨4 "<cluster-config>\n\n"￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 nbClassArgs￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 className￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 classes￨5 .￨5 elementAt￨5 (￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 className￨6 ==￨6 null￨6 )￨6 ||￨6 (￨6 className￨6 ==￨6 ""￨6 )￨6 )￨5 {￨5 throw￨6 new￨6 Exception￨6 (￨6 "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨6 )￨6 ;￨6 }￨5 f￨5 .￨5 write￨5 (￨5 (￨5 (￨5 "<class>\n\t<name>"￨5 +￨5 className￨5 )￨5 +￨5 "</name>\n\n"￨5 )￨5 )￨5 ;￨5 ClassContext￨5 clCtx￨5 =￨5 new￨5 ClassContext￨5 (￨5 cmpCtx￨5 ,￨5 className￨5 )￨5 ;￨5 MethodContext￨5 [￨5 ]￨5 remMths￨5 =￨5 clCtx￨5 .￨5 getRemoteMethodContexts￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 (￨6 remMths￨6 .￨6 length￨6 )￨6 ;￨6 j￨6 ++￨6 )￨5 {￨5 f￨6 .￨6 write￨6 (￨6 "\t<method>\n\t\t<signature>"￨6 )￨6 ;￨6 f￨6 .￨6 write￨6 (￨6 remMths￨6 [￨6 j￨6 ]￨6 .￨6 mth￨6 .￨6 toString￨6 (￨6 )￨6 )￨6 ;￨6 f￨6 .￨6 write￨6 (￨6 "</signature>\n\t\t<one-choice/>\n\t</method>\n\n"￨6 )￨6 ;￨6 }￨5 f￨5 .￨5 write￨5 (￨5 "</class>\n\n"￨5 )￨5 ;￨5 }￨4 f￨4 .￨4 write￨4 (￨4 "</cluster-config>\n"￨4 )￨4 ;￨4 f￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 nbClassArgs￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 className￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 classes￨5 .￨5 elementAt￨5 (￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 className￨6 ==￨6 null￨6 )￨6 ||￨6 (￨6 className￨6 ==￨6 ""￨6 )￨6 )￨5 {￨5 throw￨6 new￨6 Exception￨6 (￨6 "Cluster<seq2seq4repair_space>stub<seq2seq4repair_space>compiler<seq2seq4repair_space>error:<seq2seq4repair_space>empty<seq2seq4repair_space>class<seq2seq4repair_space>name"￨6 )￨6 ;￨6 }￨5 ClusterConfigCompiler￨5 ccc￨5 =￨5 new￨5 ClusterConfigCompiler￨5 (￨5 cmpCtx￨5 )￨5 ;￨5 ccc￨5 .￨5 run￨5 (￨5 className￨5 ,￨5 cconf￨5 )￨5 ;￨5 ClusterStubCompiler￨5 csc￨5 =￨5 new￨5 ClusterStubCompiler￨5 (￨5 cmpCtx￨5 )￨5 ;￨5 csc￨5 .￨5 run￨5 (￨5 className￨5 ,￨5 cconf￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 void￨2 prepare￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 ,￨2 CompilerContext￨2 ctxt￨2 ,￨2 ClusterConf￨2 cconf￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 usage￨2 (￨2 CompilerContext￨3 ctxt￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 warning￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 }￨1
class￨1 ClasspathDirectory￨1 extends￨1 ClasspathLocation￨1 {￨1 String￨2 binaryPath￨2 ;￨2 LookupTable￨2 missingPackages￨2 ;￨2 LookupTable￨2 directoryCache￨2 ;￨2 ClasspathDirectory￨2 (￨2 String￨3 binaryPath￨3 )￨2 {￨2 }￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 directoryList￨2 (￨2 String￨3 pathPrefix￨3 ,￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 compoundName￨3 ,￨3 char￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 boolean￨2 exists￨2 (￨2 String￨3 pathPrefix￨3 ,￨3 String￨3 filename￨3 ,￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 NameEnvironmentAnswer￨2 findClass￨2 (￨2 char￨3 [￨3 ]￨3 className￨3 ,￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 boolean￨2 isPackage￨2 (￨2 char￨3 [￨3 ]￨3 [￨3 ]￨3 compoundName￨3 ,￨3 char￨3 [￨3 ]￨3 packageName￨3 )￨2 {￨2 }￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "ClasspathDirectory<seq2seq4repair_space>"￨3 +￨3 (￨3 binaryPath￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 JcaExtension￨1 implements￨1 Extension￨1 {￨1 public￨2 static￨2 String￨2 SUBSYSTEM_NAME￨2 =￨2 "jca"￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 initialize￨2 (￨2 final￨3 ExtensionContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 initializeParsers￨2 (￨2 final￨3 ExtensionParsingContext￨3 context￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ModelNode￨2 createEmptyAddOperation￨2 (￨2 )￨2 {￨2 }￨2 static￨2 final￨2 class￨2 ConnectorSubsystemParser￨2 implements￨2 XMLStreamConstants￨2 ,￨2 XMLElementReader￨2 <￨2 List￨2 <￨2 ModelNode￨2 >￨2 >￨2 ,￨2 XMLElementWriter￨2 <￨2 SubsystemMarshallingContext￨2 >￨2 {￨2 static￨3 final￨3 JcaExtension￨3 .￨3 ConnectorSubsystemParser￨3 INSTANCE￨3 =￨3 new￨3 JcaExtension￨3 .￨3 ConnectorSubsystemParser￨3 (￨3 )￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 writeContent￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 SubsystemMarshallingContext￨3 context￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeArchiveValidation￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeBeanValidation￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeCachedConnectionManager￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeWorkManagers￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 if￨4 (￨4 (￨5 parentNode￨5 .￨5 hasDefined￨5 (￨5 Constants￨5 .￨5 WORKMANAGER￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 parentNode￨5 .￨5 get￨5 (￨5 Constants￨5 .￨5 WORKMANAGER￨5 )￨5 .￨5 asList￨5 (￨5 )￨5 .￨5 size￨5 (￨5 )￨5 )￨5 !=￨5 0￨5 )￨5 )￨4 {￨4 for￨5 (￨5 Property￨6 property￨6 :￨6 parentNode￨6 .￨6 get￨6 (￨6 Constants￨6 .￨6 WORKMANAGER￨6 )￨6 .￨6 asPropertyList￨6 (￨6 )￨6 )￨5 {￨5 if￨6 (￨6 "default"￨7 .￨7 equals￨7 (￨7 property￨7 .￨7 getValue￨7 (￨7 )￨7 .￨7 get￨7 (￨7 NAME￨7 )￨7 .￨7 asString￨7 (￨7 )￨7 )￨7 )￨6 {￨6 writer￨7 .￨7 writeStartElement￨7 (￨7 DEFAULT_WORKMANAGER￨7 .￨7 getLocalName￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 writer￨7 .￨7 writeStartElement￨7 (￨7 WORKMANAGER￨7 .￨7 getLocalName￨7 (￨7 )￨7 )￨7 ;￨7 WorkManagerAdd￨7 .￨7 WmParameters￨7 .￨7 NAME￨7 .￨7 getAttribute￨7 (￨7 )￨7 .￨7 marshallAsAttribute￨7 (￨7 property￨7 .￨7 getValue￨7 (￨7 )￨7 ,￨7 writer￨7 )￨7 ;￨7 }￨6 for￨6 (￨6 Property￨7 prop￨7 :￨7 property￨7 .￨7 getValue￨7 (￨7 )￨7 .￨7 asPropertyList￨7 (￨7 )￨7 )￨6 {￨6 <START_BUG>￨7 if￨7 (￨7 Constants￨7 .￨7 WORKMANAGER_LONG_RUNNING￨7 .￨7 equals￨7 (￨7 prop￨7 .￨7 getName￨7 (￨7 )￨7 )￨7 )￨7 {￨7 <END_BUG>￨7 ThreadsParser￨7 .￨7 getInstance￨7 (￨7 )￨7 .￨7 writeBoundedQueueThreadPool￨7 (￨7 writer￨7 ,￨7 prop￨7 .￨7 getValue￨7 (￨7 )￨7 .￨7 asProperty￨7 (￨7 )￨7 .￨7 getValue￨7 (￨7 )￨7 ,￨7 LONG_RUNNING_THREADS￨7 .￨7 getLocalName￨7 (￨7 )￨7 ,￨7 false￨7 )￨7 ;￨7 if￨7 (￨7 Constants￨8 .￨8 WORKMANAGER_SHORT_RUNNING￨8 .￨8 equals￨8 (￨8 prop￨8 .￨8 getName￨8 (￨8 )￨8 )￨8 )￨7 {￨7 ThreadsParser￨8 .￨8 getInstance￨8 (￨8 )￨8 .￨8 writeBoundedQueueThreadPool￨8 (￨8 writer￨8 ,￨8 prop￨8 .￨8 getValue￨8 (￨8 )￨8 .￨8 asProperty￨8 (￨8 )￨8 .￨8 getValue￨8 (￨8 )￨8 ,￨8 SHORT_RUNNING_THREADS￨8 .￨8 getLocalName￨8 (￨8 )￨8 ,￨8 false￨8 )￨8 ;￨8 }￨7 }￨6 writer￨6 .￨6 writeEndElement￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 private￨3 void￨3 writeBootstrapContexts￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 boolean￨3 hasAnyOf￨3 (￨3 ModelNode￨4 node￨4 ,￨4 String￨4 ...￨4 names￨4 )￨3 {￨3 }￨3 private￨3 boolean￨3 has￨3 (￨3 ModelNode￨4 node￨4 ,￨4 String￨4 name￨4 )￨3 {￨3 }￨3 private￨3 void￨3 writeAttribute￨3 (￨3 final￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 final￨3 Attribute￨3 attr￨3 ,￨3 final￨3 ModelNode￨3 value￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 readElement￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseArchiveValidation￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 parseWorkManager￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentAddress￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 ,￨3 final￨3 ModelNode￨3 node￨3 ,￨3 boolean￨3 defaultWm￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseBeanValidation￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseCcm￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseBootstrapContexts￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentAddress￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 rawElementText￨3 (￨3 XMLStreamReader￨3 reader￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 rawAttributeText￨3 (￨3 XMLStreamReader￨4 reader￨4 ,￨4 String￨4 attributeName￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 public￨2 void￨2 registerCustomEditor￨2 (￨2 Class￨3 requiredType￨3 ,￨3 Class￨3 <￨3 ?￨3 extends￨3 PropertyEditor￨3 >￨3 propertyEditorClass￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copyRegisteredEditorsTo￨2 (￨2 PropertyEditorRegistry￨3 registry￨3 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 Class￨2 ,￨2 Class￨2 <￨2 ?￨2 extends￨2 PropertyEditor￨2 >￨2 >￨2 getCustomEditors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTypeConverter￨2 (￨2 TypeConverter￨3 typeConverter￨3 )￨2 {￨2 }￨2 protected￨2 TypeConverter￨2 getCustomTypeConverter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeConverter￨2 getTypeConverter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addEmbeddedValueResolver￨2 (￨2 StringValueResolver￨3 valueResolver￨3 )￨2 {￨2 }￨2 public￨2 String￨2 resolveEmbeddedValue￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addBeanPostProcessor￨2 (￨2 BeanPostProcessor￨3 beanPostProcessor￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getBeanPostProcessorCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 BeanPostProcessor￨2 >￨2 getBeanPostProcessors￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 hasInstantiationAwareBeanPostProcessors￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 hasDestructionAwareBeanPostProcessors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 registerScope￨2 (￨2 String￨3 scopeName￨3 ,￨3 Scope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getRegisteredScopeNames￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Scope￨2 getRegisteredScope￨2 (￨2 String￨3 scopeName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSecurityContextProvider￨2 (￨2 SecurityContextProvider￨3 securityProvider￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 AccessControlContext￨2 getAccessControlContext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyConfigurationFrom￨2 (￨2 ConfigurableBeanFactory￨3 otherFactory￨3 )￨2 {￨2 }￨2 public￨2 BeanDefinition￨2 getMergedBeanDefinition￨2 (￨2 String￨2 name￨2 )￨2 throws￨2 BeansException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFactoryBean￨2 (￨2 String￨2 name￨2 )￨2 throws￨2 NoSuchBeanDefinitionException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 void￨2 beforePrototypeCreation￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 void￨2 afterPrototypeCreation￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 boolean￨2 isPrototypeCurrentlyInCreation￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCurrentlyInCreation￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 destroyBean￨2 (￨2 String￨3 beanName￨3 ,￨3 Object￨3 beanInstance￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 destroyBean￨2 (￨2 String￨3 beanName￨3 ,￨3 Object￨3 beanInstance￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 public￨2 void￨2 destroyScopedBean￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 transformedBeanName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 originalBeanName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 initBeanWrapper￨2 (￨2 BeanWrapper￨3 bw￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 registerCustomEditors￨2 (￨2 PropertyEditorRegistry￨3 registry￨3 )￨2 {￨2 }￨2 protected￨2 RootBeanDefinition￨2 getMergedLocalBeanDefinition￨2 (￨2 String￨2 beanName￨2 )￨2 throws￨2 BeansException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 RootBeanDefinition￨2 getMergedBeanDefinition￨2 (￨2 String￨2 beanName￨2 ,￨2 BeanDefinition￨2 bd￨2 )￨2 throws￨2 BeanDefinitionStoreException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 RootBeanDefinition￨2 getMergedBeanDefinition￨2 (￨2 String￨2 beanName￨2 ,￨2 BeanDefinition￨2 bd￨2 ,￨2 BeanDefinition￨2 containingBd￨2 )￨2 throws￨2 BeanDefinitionStoreException￨2 (￨2 )￨2 {￨2 synchronized￨3 (￨3 this￨4 .￨4 mergedBeanDefinitions￨4 )￨3 {￨3 RootBeanDefinition￨4 mbd￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 containingBd￨5 ==￨5 null￨5 )￨4 {￨4 mbd￨5 =￨5 this￨5 .￨5 mergedBeanDefinitions￨5 .￨5 get￨5 (￨5 beanName￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 mbd￨5 ==￨5 null￨5 )￨4 {￨4 if￨5 (￨5 (￨6 bd￨6 .￨6 getParentName￨6 (￨6 )￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 if￨6 (￨6 bd￨7 instanceof￨7 RootBeanDefinition￨7 )￨6 {￨6 mbd￨7 =￨7 (￨7 (￨7 RootBeanDefinition￨7 )￨7 (￨7 bd￨7 )￨7 )￨7 .￨7 cloneBeanDefinition￨7 (￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 mbd￨7 =￨7 new￨7 RootBeanDefinition￨7 (￨7 bd￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 BeanDefinition￨6 pbd￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 String￨7 parentBeanName￨7 =￨7 transformedBeanName￨7 (￨7 bd￨7 .￨7 getParentName￨7 (￨7 )￨7 )￨7 ;￨7 if￨7 (￨7 !￨8 (￨8 beanName￨8 .￨8 equals￨8 (￨8 parentBeanName￨8 )￨8 )￨8 )￨7 {￨7 pbd￨8 =￨8 getMergedBeanDefinition￨8 (￨8 parentBeanName￨8 )￨8 ;￨8 }￨7 else￨7 {￨7 if￨8 (￨8 (￨9 getParentBeanFactory￨9 (￨9 )￨9 )￨9 instanceof￨9 ConfigurableBeanFactory￨9 )￨8 {￨8 pbd￨9 =￨9 (￨9 (￨9 ConfigurableBeanFactory￨9 )￨9 (￨9 getParentBeanFactory￨9 (￨9 )￨9 )￨9 )￨9 .￨9 getMergedBeanDefinition￨9 (￨9 parentBeanName￨9 )￨9 ;￨9 }￨8 else￨8 {￨8 throw￨9 new￨9 NoSuchBeanDefinitionException￨9 (￨9 bd￨9 .￨9 getParentName￨9 (￨9 )￨9 ,￨9 (￨9 (￨9 (￨9 (￨9 "Parent<seq2seq4repair_space>name<seq2seq4repair_space>'"￨9 +￨9 (￨9 bd￨9 .￨9 getParentName￨9 (￨9 )￨9 )￨9 )￨9 +￨9 "'<seq2seq4repair_space>is<seq2seq4repair_space>equal<seq2seq4repair_space>to<seq2seq4repair_space>bean<seq2seq4repair_space>name<seq2seq4repair_space>'"￨9 )￨9 +￨9 beanName￨9 )￨9 +￨9 "':<seq2seq4repair_space>cannot<seq2seq4repair_space>be<seq2seq4repair_space>resolved<seq2seq4repair_space>without<seq2seq4repair_space>an<seq2seq4repair_space>AbstractBeanFactory<seq2seq4repair_space>parent"￨9 )￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 catch￨6 (￨6 NoSuchBeanDefinitionException￨7 ex￨7 )￨6 {￨6 throw￨7 new￨7 BeanDefinitionStoreException￨7 (￨7 bd￨7 .￨7 getResourceDescription￨7 (￨7 )￨7 ,￨7 beanName￨7 ,￨7 (￨7 (￨7 "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>parent<seq2seq4repair_space>bean<seq2seq4repair_space>definition<seq2seq4repair_space>'"￨7 +￨7 (￨7 bd￨7 .￨7 getParentName￨7 (￨7 )￨7 )￨7 )￨7 +￨7 "'"￨7 )￨7 ,￨7 ex￨7 )￨7 ;￨7 }￨6 mbd￨6 =￨6 new￨6 RootBeanDefinition￨6 (￨6 pbd￨6 )￨6 ;￨6 mbd￨6 .￨6 overrideFrom￨6 (￨6 bd￨6 )￨6 ;￨6 }￨5 <START_BUG>￨5 if￨5 (￨5 (￨5 mbd￨5 .￨5 getScope￨5 (￨5 )￨5 )￨5 ==￨5 null￨5 )￨5 {￨5 <END_BUG>￨5 mbd￨5 .￨5 setScope￨5 (￨5 SCOPE_SINGLETON￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 containingBd￨6 !=￨6 null￨6 )￨6 &&￨6 (￨6 !￨6 (￨6 containingBd￨6 .￨6 isSingleton￨6 (￨6 )￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 mbd￨6 .￨6 isSingleton￨6 (￨6 )￨6 )￨6 )￨5 {￨5 mbd￨6 .￨6 setScope￨6 (￨6 containingBd￨6 .￨6 getScope￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 (￨6 containingBd￨6 ==￨6 null￨6 )￨6 &&￨6 (￨6 isCacheBeanMetadata￨6 (￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 isBeanEligibleForMetadataCaching￨6 (￨6 beanName￨6 )￨6 )￨6 )￨5 {￨5 this￨6 .￨6 mergedBeanDefinitions￨6 .￨6 put￨6 (￨6 beanName￨6 ,￨6 mbd￨6 )￨6 ;￨6 }￨5 }￨4 return￨4 mbd￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 checkMergedBeanDefinition￨2 (￨2 RootBeanDefinition￨2 mbd￨2 ,￨2 String￨2 beanName￨2 ,￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 BeanDefinitionStoreException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 clearMergedBeanDefinition￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 resolveBeanClass￨2 (￨2 RootBeanDefinition￨3 mbd￨3 ,￨3 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 resolveBeanClass￨2 (￨2 final￨2 RootBeanDefinition￨2 mbd￨2 ,￨2 String￨2 beanName￨2 ,￨2 final￨2 Class￨2 [￨2 ]￨2 typesToMatch￨2 )￨2 throws￨2 CannotLoadBeanClassException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Class￨2 doResolveBeanClass￨2 (￨2 final￨2 RootBeanDefinition￨2 mbd￨2 ,￨2 final￨2 Class￨2 [￨2 ]￨2 typesToMatch￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 evaluateBeanDefinitionString￨2 (￨2 String￨3 value￨3 ,￨3 BeanDefinition￨3 beanDefinition￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 predictBeanType￨2 (￨2 String￨3 beanName￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 ,￨3 Class￨3 [￨3 ]￨3 typesToMatch￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isFactoryBean￨2 (￨2 String￨3 beanName￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 getTypeForFactoryBean￨2 (￨2 String￨3 beanName￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 markBeanAsCreated￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isBeanEligibleForMetadataCaching￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 removeSingletonIfCreatedForTypeCheckOnly￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 getObjectForBeanInstance￨2 (￨2 Object￨3 beanInstance￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 beanName￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isBeanNameInUse￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 requiresDestruction￨2 (￨2 Object￨3 bean￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 registerDisposableBeanIfNecessary￨2 (￨2 String￨3 beanName￨3 ,￨3 Object￨3 bean￨3 ,￨3 RootBeanDefinition￨3 mbd￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 boolean￨2 containsBeanDefinition￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 BeanDefinition￨2 getBeanDefinition￨2 (￨2 String￨2 beanName￨2 )￨2 throws￨2 BeansException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 Object￨2 createBean￨2 (￨2 String￨2 beanName￨2 ,￨2 RootBeanDefinition￨2 mbd￨2 ,￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 BeanCreationException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractType￨1 implements￨1 Comparator￨1 <￨1 byte￨1 [￨1 ]￨1 >￨1 {￨1 public￨2 abstract￨2 String￨2 getString￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 validate￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 Comparator￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 getReverseComparator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getString￨2 (￨2 Collection￨3 <￨3 byte￨3 [￨3 ]￨3 >￨3 names￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getColumnsString￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 columns￨3 )￨2 {￨2 StringBuilder￨3 builder￨3 =￨3 new￨3 StringBuilder￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 IColumn￨4 column￨4 :￨4 columns￨4 )￨3 {￨3 <START_BUG>￨4 builder￨4 .￨4 append￨4 (￨4 getString￨4 (￨4 column￨4 .￨4 name￨4 (￨4 )￨4 )￨4 )￨4 .￨4 append￨4 (￨4 ","￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 builder￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ActionAddOperation￨1 extends￨1 UMLChangeAction￨1 {￨1 public￨2 static￨2 ActionAddOperation￨2 SINGLETON￨2 =￨2 new￨2 ActionAddOperation￨2 (￨2 )￨2 ;￨2 public￨2 ActionAddOperation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 ae￨3 )￨2 {￨2 ProjectBrowser￨3 pb￨3 =￨3 ProjectBrowser￨3 .￨3 getInstance￨3 (￨3 )￨3 ;￨3 Project￨3 p￨3 =￨3 ProjectManager￨3 .￨3 getManager￨3 (￨3 )￨3 .￨3 getCurrentProject￨3 (￨3 )￨3 ;￨3 Object￨3 target￨3 =￨3 TargetManager￨3 .￨3 getInstance￨3 (￨3 )￨3 .￨3 getModelTarget￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 target￨4 instanceof￨4 MClassifier￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 MClassifier￨3 cls￨3 =￨3 (￨3 (￨3 MClassifier￨3 )￨3 (￨3 target￨3 )￨3 )￨3 ;￨3 MOperation￨3 oper￨3 =￨3 UmlFactory￨3 .￨3 getFactory￨3 (￨3 )￨3 .￨3 getCore￨3 (￨3 )￨3 .￨3 buildOperation￨3 (￨3 cls￨3 )￨3 ;￨3 <START_BUG>￨3 pb￨3 .￨3 setTarget￨3 (￨3 oper￨3 )￨3 ;￨3 <END_BUG>￨3 Iterator￨3 it￨3 =￨3 pb￨3 .￨3 getEditorPane￨3 (￨3 )￨3 .￨3 findPresentationsFor￨3 (￨3 cls￨3 ,￨3 p￨3 .￨3 getDiagrams￨3 (￨3 )￨3 )￨3 .￨3 iterator￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 it￨4 .￨4 hasNext￨4 (￨4 )￨4 )￨3 {￨3 MElementListener￨4 listener￨4 =￨4 (￨4 (￨4 MElementListener￨4 )￨4 (￨4 it￨4 .￨4 next￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 UmlModelEventPump￨4 .￨4 getPump￨4 (￨4 )￨4 .￨4 removeModelEventListener￨4 (￨4 listener￨4 ,￨4 oper￨4 )￨4 ;￨4 UmlModelEventPump￨4 .￨4 getPump￨4 (￨4 )￨4 .￨4 addModelEventListener￨4 (￨4 listener￨4 ,￨4 oper￨4 )￨4 ;￨4 }￨3 super￨3 .￨3 actionPerformed￨3 (￨3 ae￨3 )￨3 ;￨3 }￨2 public￨2 boolean￨2 shouldBeEnabled￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractDefinition￨1 extends￨1 SyntaxElement￨1 implements￨1 XpandDefinition￨1 {￨1 private￨2 Template￨2 owner￨2 =￨2 null￨2 ;￨2 private￨2 DeclaredParameter￨2 [￨2 ]￨2 params￨2 ;￨2 private￨2 Identifier￨2 name￨2 ;￨2 private￨2 Identifier￨2 type￨2 ;￨2 private￨2 Statement￨2 [￨2 ]￨2 body￨2 ;￨2 protected￨2 String￨2 _stringRepresentation￨2 =￨2 null￨2 ;￨2 protected￨2 boolean￨2 wildParams￨2 =￨2 false￨2 ;￨2 public￨2 AbstractDefinition￨2 (￨2 final￨3 Identifier￨3 name￨3 ,￨3 final￨3 Identifier￨3 type￨3 ,￨3 final￨3 DeclaredParameter￨3 [￨3 ]￨3 params￨3 ,￨3 final￨3 Statement￨3 [￨3 ]￨3 body￨3 )￨2 {￨2 }￨2 public￨2 XpandResource￨2 getOwner￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setOwner￨2 (￨2 final￨3 Template￨3 owner￨3 )￨2 {￨2 }￨2 public￨2 DeclaredParameter￨2 [￨2 ]￨2 getParams￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 DeclaredParameter￨2 >￨2 getParamsAsList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Identifier￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getTargetType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Identifier￨2 getDefName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getQualifiedName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getParamString￨2 (￨2 boolean￨3 typesOnly￨3 )￨2 {￨2 if￨3 (￨3 (￨4 (￨4 params￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 params￨4 .￨4 length￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 wildParams￨4 ?￨4 "(*)"￨4 :￨4 ""￨4 ;￨4 }￨3 <START_BUG>￨3 final￨3 StringBuffer￨3 buff￨3 =￨3 new￨3 StringBuffer￨3 (￨3 "("￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 params￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 final￨4 DeclaredParameter￨4 p￨4 =￨4 params￨4 [￨4 i￨4 ]￨4 ;￨4 buff￨4 .￨4 append￨4 (￨4 p￨4 .￨4 getType￨4 (￨4 )￨4 .￨4 getValue￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 typesOnly￨5 )￨4 {￨4 buff￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>"￨5 )￨5 .￨5 append￨5 (￨5 p￨5 .￨5 getName￨5 (￨5 )￨5 .￨5 getValue￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 i￨5 +￨5 1￨5 )￨5 <￨5 (￨5 params￨5 .￨5 length￨5 )￨5 )￨4 {￨4 buff￨5 .￨5 append￨5 (￨5 ","￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 wildParams￨4 )￨3 {￨3 buff￨4 .￨4 append￨4 (￨4 ",*"￨4 )￨4 ;￨4 }￨3 return￨3 buff￨3 .￨3 append￨3 (￨3 ")"￨3 )￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 Statement￨2 [￨2 ]￨2 getBody￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 Statement￨2 >￨2 getBodyAsList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 analyze￨2 (￨2 XpandExecutionContext￨3 ctx￨3 ,￨3 final￨3 Set￨3 <￨3 AnalysationIssue￨3 >￨3 issues￨3 )￨2 {￨2 }￨2 public￨2 void￨2 evaluate￨2 (￨2 XpandExecutionContext￨3 ctx￨3 ,￨3 Object￨3 _this￨3 ,￨3 Object￨3 ...￨3 params￨3 )￨2 {￨2 }￨2 protected￨2 XpandExecutionContext￨2 prepareDeclaredParameters￨2 (￨2 Object￨3 _this￨3 ,￨3 XpandExecutionContext￨3 context￨3 ,￨3 Object￨3 ...￨3 params￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 obj￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConfigurationTest￨1 extends￨1 AbstractTasklet￨1 implements￨1 Configurable￨1 {￨1 protected￨2 String￨2 m_message￨2 ;￨2 public￨2 void￨2 configure￨2 (￨2 final￨2 Configuration￨2 configuration￨2 )￨2 throws￨2 ConfigurationException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 throws￨2 AntException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 getLogger￨3 (￨3 )￨3 .￨3 info￨3 (￨3 m_message￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 XSElementDecl￨1 {￨1 public￨2 static￨2 final￨2 short￨2 NO_CONSTRAINT￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 short￨2 DEFAULT_VALUE￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 final￨2 short￨2 FIXED_VALUE￨2 =￨2 2￨2 ;￨2 public￨2 String￨2 fName￨2 =￨2 null￨2 ;￨2 public￨2 String￨2 fTargetNamespace￨2 =￨2 null￨2 ;￨2 public￨2 XSTypeDecl￨2 fType￨2 =￨2 null￨2 ;￨2 short￨2 fMiscFlags￨2 =￨2 0￨2 ;￨2 public￨2 short￨2 fBlock￨2 =￨2 SchemaSymbols￨2 .￨2 EMPTY_SET￨2 ;￨2 public￨2 short￨2 fFinal￨2 =￨2 SchemaSymbols￨2 .￨2 EMPTY_SET￨2 ;￨2 public￨2 Object￨2 fDefault￨2 =￨2 null￨2 ;￨2 public￨2 XSElementDecl￨2 fSubGroup￨2 =￨2 null￨2 ;￨2 static￨2 final￨2 int￨2 INITIAL_SIZE￨2 =￨2 2￨2 ;￨2 int￨2 fIDCPos￨2 =￨2 0￨2 ;￨2 IdentityConstraint￨2 [￨2 ]￨2 fIDConstraints￨2 =￨2 new￨2 IdentityConstraint￨2 [￨2 XSElementDecl￨2 .￨2 INITIAL_SIZE￨2 ]￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 CONSTRAINT_MASK￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 NILLABLE￨2 =￨2 4￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 ABSTRACT￨2 =￨2 8￨2 ;￨2 public￨2 short￨2 getConstraintType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNillable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAbstract￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setConstraintType￨2 (￨2 short￨3 constraintType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIsNillable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIsAbstract￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addIDConstaint￨2 (￨2 IdentityConstraint￨3 idc￨3 )￨2 {￨2 }￨2 public￨2 IdentityConstraint￨2 [￨2 ]￨2 getIDConstraints￨2 (￨2 )￨2 {￨2 }￨2 static￨2 final￨2 IdentityConstraint￨2 [￨2 ]￨2 resize￨2 (￨2 IdentityConstraint￨3 [￨3 ]￨3 oldArray￨3 ,￨3 int￨3 newSize￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 (￨3 fTargetNamespace￨3 )￨3 +￨3 ","￨3 )￨3 +￨3 (￨3 fName￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 {￨2 }￨2 public￨2 abstract￨2 MemberValuePair￨2 [￨2 ]￨2 memberValuePairs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 this￨3 .￨3 constant￨3 =￨3 NotAConstant￨3 ;￨3 TypeBinding￨3 typeBinding￨3 =￨3 this￨3 .￨3 type￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 typeBinding￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 this￨3 .￨3 resolvedType￨3 =￨3 typeBinding￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 typeBinding￨4 .￨4 isAnnotationType￨4 (￨4 )￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 typeMismatchError￨4 (￨4 typeBinding￨4 ,￨4 scope￨4 .￨4 getJavaLangAnnotationAnnotation￨4 (￨4 )￨4 ,￨4 this￨4 .￨4 type￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 ReferenceBinding￨3 annotationType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 )￨3 ;￨3 MethodBinding￨3 [￨3 ]￨3 methods￨3 =￨3 annotationType￨3 .￨3 methods￨3 (￨3 )￨3 ;￨3 MemberValuePair￨3 [￨3 ]￨3 valuePairs￨3 =￨3 memberValuePairs￨3 (￨3 )￨3 ;￨3 MemberValuePair￨3 valueAttribute￨3 =￨3 null￨3 ;￨3 MemberValuePair￨3 [￨3 ]￨3 usedValuePairs￨3 ;￨3 int￨3 pairsLength￨3 =￨3 valuePairs￨3 .￨3 length￨3 ;￨3 System￨3 .￨3 arraycopy￨3 (￨3 valuePairs￨3 ,￨3 0￨3 ,￨3 (￨3 usedValuePairs￨3 =￨3 new￨3 MemberValuePair￨3 [￨3 pairsLength￨3 ]￨3 )￨3 ,￨3 0￨3 ,￨3 pairsLength￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 requiredLength￨4 =￨4 methods￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 requiredLength￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 MethodBinding￨4 method￨4 =￨4 methods￨4 [￨4 i￨4 ]￨4 ;￨4 char￨4 [￨4 ]￨4 selector￨4 =￨4 method￨4 .￨4 selector￨4 ;￨4 boolean￨4 foundValue￨4 =￨4 false￨4 ;￨4 for￨4 (￨4 int￨5 j￨5 =￨5 0￨5 ;￨5 j￨5 <￨5 pairsLength￨5 ;￨5 j￨5 ++￨5 )￨4 {￨4 MemberValuePair￨5 valuePair￨5 =￨5 usedValuePairs￨5 [￨5 j￨5 ]￨5 ;￨5 if￨5 (￨5 valuePair￨6 ==￨6 null￨6 )￨5 {￨5 continue￨6 nextPair￨6 ;￨6 }￨5 char￨5 [￨5 ]￨5 memberName￨5 =￨5 valuePair￨5 .￨5 name￨5 ;￨5 if￨5 (￨5 CharOperation￨6 .￨6 equals￨6 (￨6 memberName￨6 ,￨6 selector￨6 )￨6 )￨5 {￨5 if￨6 (￨6 (￨7 valueAttribute￨7 ==￨7 null￨7 )￨7 &&￨7 (￨7 CharOperation￨7 .￨7 equals￨7 (￨7 memberName￨7 ,￨7 TypeConstants￨7 .￨7 VALUE￨7 )￨7 )￨7 )￨6 {￨6 valueAttribute￨7 =￨7 valuePair￨7 ;￨7 }￨6 valuePair￨6 .￨6 binding￨6 =￨6 method￨6 ;￨6 usedValuePairs￨6 [￨6 j￨6 ]￨6 =￨6 null￨6 ;￨6 foundValue￨6 =￨6 true￨6 ;￨6 boolean￨6 foundDuplicate￨6 =￨6 false￨6 ;￨6 for￨6 (￨6 int￨7 k￨7 =￨7 j￨7 +￨7 1￨7 ;￨7 k￨7 <￨7 pairsLength￨7 ;￨7 k￨7 ++￨7 )￨6 {￨6 if￨7 (￨7 CharOperation￨8 .￨8 equals￨8 (￨8 usedValuePairs￨8 [￨8 k￨8 ]￨8 .￨8 name￨8 ,￨8 selector￨8 )￨8 )￨7 {￨7 foundDuplicate￨8 =￨8 true￨8 ;￨8 scope￨8 .￨8 problemReporter￨8 (￨8 )￨8 .￨8 duplicateAnnotationValue￨8 (￨8 annotationType￨8 ,￨8 usedValuePairs￨8 [￨8 k￨8 ]￨8 )￨8 ;￨8 usedValuePairs￨8 [￨8 k￨8 ]￨8 .￨8 binding￨8 =￨8 method￨8 ;￨8 usedValuePairs￨8 [￨8 k￨8 ]￨8 =￨8 null￨8 ;￨8 }￨7 }￨6 if￨6 (￨6 foundDuplicate￨7 )￨6 {￨6 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 duplicateAnnotationValue￨7 (￨7 annotationType￨7 ,￨7 valuePair￨7 )￨7 ;￨7 continue￨7 nextMember￨7 ;￨7 }￨6 valuePair￨6 .￨6 resolveTypeExpecting￨6 (￨6 scope￨6 ,￨6 method￨6 .￨6 returnType￨6 )￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 (￨5 !￨5 foundValue￨5 )￨5 &&￨5 (￨5 (￨5 (￨5 method￨5 .￨5 modifiers￨5 )￨5 &￨5 (￨5 AccAnnotationDefault￨5 )￨5 )￨5 ==￨5 0￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 missingValueForAnnotationMember￨5 (￨5 this￨5 ,￨5 method￨5 .￨5 selector￨5 )￨5 ;￨5 }￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 pairsLength￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 usedValuePairs￨5 [￨5 i￨5 ]￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 undefinedAnnotationValue￨5 (￨5 annotationType￨5 ,￨5 usedValuePairs￨5 [￨5 i￨5 ]￨5 )￨5 ;￨5 }￨4 }￨3 long￨3 tagBits￨3 =￨3 detectStandardAnnotation￨3 (￨3 scope￨3 ,￨3 annotationType￨3 ,￨3 valueAttribute￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 recipient￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 tagBits￨5 !=￨5 0￨5 )￨4 {￨4 switch￨5 (￨5 this￨5 .￨5 recipient￨5 .￨5 kind￨5 (￨5 )￨5 )￨5 {￨5 case￨6 Binding￨6 .￨6 PACKAGE￨6 :￨6 break￨7 ;￨7 case￨6 Binding￨6 .￨6 TYPE￨6 :￨6 case￨6 Binding￨6 .￨6 GENERIC_TYPE￨6 :￨6 case￨6 Binding￨6 .￨6 TYPE_PARAMETER￨6 :￨6 (￨7 (￨7 ReferenceBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 tagBits￨7 |=￨7 tagBits￨7 ;￨7 break￨7 ;￨7 case￨6 Binding￨6 .￨6 METHOD￨6 :￨6 (￨7 (￨7 MethodBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 tagBits￨7 |=￨7 tagBits￨7 ;￨7 break￨7 ;￨7 case￨6 Binding￨6 .￨6 FIELD￨6 :￨6 (￨7 (￨7 FieldBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 tagBits￨7 |=￨7 tagBits￨7 ;￨7 break￨7 ;￨7 case￨6 Binding￨6 .￨6 LOCAL￨6 :￨6 (￨7 (￨7 LocalVariableBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 tagBits￨7 |=￨7 tagBits￨7 ;￨7 break￨7 ;￨7 }￨5 }￨4 <START_BUG>￨4 long￨4 metaTagBits￨4 =￨4 annotationType￨4 .￨4 tagBits￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 metaTagBits￨5 &￨5 (￨5 TagBits￨5 .￨5 AnnotationTargetMASK￨5 )￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 break￨5 checkTargetCompatibility￨5 ;￨5 }￨4 switch￨4 (￨4 recipient￨4 .￨4 kind￨4 (￨4 )￨4 )￨4 {￨4 case￨5 Binding￨5 .￨5 PACKAGE￨5 :￨5 if￨6 (￨6 (￨7 metaTagBits￨7 &￨7 (￨7 TagBits￨7 .￨7 AnnotationForPackage￨7 )￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 break￨7 checkTargetCompatibility￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 TYPE￨5 :￨5 case￨5 Binding￨5 .￨5 GENERIC_TYPE￨5 :￨5 if￨6 (￨6 (￨7 (￨7 ReferenceBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 isAnnotationType￨7 (￨7 )￨7 )￨6 {￨6 if￨7 (￨7 (￨8 metaTagBits￨8 &￨8 (￨8 (￨8 TagBits￨8 .￨8 AnnotationForAnnotationType￨8 )￨8 |￨8 (￨8 TagBits￨8 .￨8 AnnotationForType￨8 )￨8 )￨8 )￨8 !=￨8 0￨8 )￨7 {￨7 break￨8 checkTargetCompatibility￨8 ;￨8 }￨7 }￨6 else￨6 if￨6 (￨6 (￨7 metaTagBits￨7 &￨7 (￨7 TagBits￨7 .￨7 AnnotationForType￨7 )￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 break￨7 checkTargetCompatibility￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 METHOD￨5 :￨5 if￨6 (￨6 (￨7 (￨7 MethodBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 isConstructor￨7 (￨7 )￨7 )￨6 {￨6 if￨7 (￨7 (￨8 metaTagBits￨8 &￨8 (￨8 TagBits￨8 .￨8 AnnotationForConstructor￨8 )￨8 )￨8 !=￨8 0￨8 )￨7 {￨7 break￨8 checkTargetCompatibility￨8 ;￨8 }￨7 }￨6 else￨6 if￨6 (￨6 (￨7 metaTagBits￨7 &￨7 (￨7 TagBits￨7 .￨7 AnnotationForMethod￨7 )￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 break￨7 checkTargetCompatibility￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 FIELD￨5 :￨5 if￨6 (￨6 (￨7 metaTagBits￨7 &￨7 (￨7 TagBits￨7 .￨7 AnnotationForField￨7 )￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 break￨7 checkTargetCompatibility￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 LOCAL￨5 :￨5 if￨6 (￨6 (￨7 (￨7 LocalVariableBinding￨7 )￨7 (￨7 this￨7 .￨7 recipient￨7 )￨7 )￨7 .￨7 isArgument￨7 )￨6 {￨6 if￨7 (￨7 (￨8 metaTagBits￨8 &￨8 (￨8 TagBits￨8 .￨8 AnnotationForParameter￨8 )￨8 )￨8 !=￨8 0￨8 )￨7 {￨7 break￨8 checkTargetCompatibility￨8 ;￨8 }￨7 }￨6 else￨6 if￨6 (￨6 (￨7 (￨7 annotationType￨7 .￨7 tagBits￨7 )￨7 &￨7 (￨7 TagBits￨7 .￨7 AnnotationForLocalVariable￨7 )￨7 )￨7 !=￨7 0￨7 )￨6 {￨6 break￨7 checkTargetCompatibility￨7 ;￨7 }￨6 break￨6 ;￨6 }￨4 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 disallowedTargetForAnnotation￨4 (￨4 this￨4 )￨4 ;￨4 }￨3 return￨3 this￨3 .￨3 resolvedType￨3 ;￨3 }￨2 public￨2 abstract￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 CompilationUnitScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CheckForNewMessagesCommand￨1 extends￨1 FolderCommand￨1 {￨1 FolderCommandAdapter￨2 adapter￨2 ;￨2 IMAPFolder￨2 inboxFolder￨2 ;￨2 boolean￨2 needGUIUpdate￨2 ;￨2 public￨2 CheckForNewMessagesCommand￨2 (￨2 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 public￨2 CheckForNewMessagesCommand￨2 (￨2 AbstractFrameController￨3 frame￨3 ,￨3 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 Worker￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 FolderCommandReference￨3 [￨3 ]￨3 references￨3 =￨3 (￨3 (￨3 FolderCommandReference￨3 [￨3 ]￨3 )￨3 (￨3 getReferences￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 adapter￨3 =￨3 new￨3 FolderCommandAdapter￨3 (￨3 references￨3 )￨3 ;￨3 FolderCommandReference￨3 [￨3 ]￨3 r￨3 =￨3 adapter￨3 .￨3 getSourceFolderReferences￨3 (￨3 )￨3 ;￨3 IMAPRootFolder￨3 srcFolder￨3 =￨3 (￨3 (￨3 IMAPRootFolder￨3 )￨3 (￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getFolder￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 (￨3 (￨3 StatusObservableImpl￨3 )￨3 (￨3 srcFolder￨3 .￨3 getObservable￨3 (￨3 )￨3 )￨3 )￨3 .￨3 setWorker￨3 (￨3 worker￨3 )￨3 ;￨3 <START_BUG>￨3 inboxFolder￨3 =￨3 (￨3 (￨3 IMAPFolder￨3 )￨3 (￨3 srcFolder￨3 .￨3 getChild￨3 (￨3 "Inbox"￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 int￨3 total￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getExists￨3 (￨3 )￨3 ;￨3 int￨3 recent￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getRecent￨3 (￨3 )￨3 ;￨3 int￨3 unseen￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getUnseen￨3 (￨3 )￨3 ;￨3 inboxFolder￨3 .￨3 getHeaderList￨3 (￨3 )￨3 ;￨3 int￨3 newTotal￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getExists￨3 (￨3 )￨3 ;￨3 int￨3 newRecent￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getRecent￨3 (￨3 )￨3 ;￨3 int￨3 newUnseen￨3 =￨3 inboxFolder￨3 .￨3 getMessageFolderInfo￨3 (￨3 )￨3 .￨3 getUnseen￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 newRecent￨4 !=￨4 recent￨4 )￨4 ||￨4 (￨4 newTotal￨4 !=￨4 total￨4 )￨4 )￨4 ||￨4 (￨4 newUnseen￨4 !=￨4 unseen￨4 )￨4 )￨3 {￨3 needGUIUpdate￨4 =￨4 true￨4 ;￨4 ImapItem￨4 item￨4 =￨4 srcFolder￨4 .￨4 getAccountItem￨4 (￨4 )￨4 .￨4 getImapItem￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 newRecent￨5 !=￨5 recent￨5 )￨5 &&￨5 (￨5 item￨5 .￨5 getBoolean￨5 (￨5 "enable_sound"￨5 )￨5 )￨5 )￨4 {￨4 String￨5 file￨5 =￨5 item￨5 .￨5 get￨5 (￨5 "sound_file"￨5 )￨5 ;￨5 log￨5 .￨5 info￨5 (￨5 (￨5 "playing<seq2seq4repair_space>sound<seq2seq4repair_space>file="￨5 +￨5 file￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 file￨6 .￨6 equalsIgnoreCase￨6 (￨6 "default"￨6 )￨6 )￨5 {￨5 PlaySound￨6 .￨6 play￨6 (￨6 "newmail.wav"￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 try￨6 (￨6 )￨6 {￨6 PlaySound￨7 .￨7 play￨7 (￨7 new￨7 URL￨7 (￨7 file￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 Exception￨7 ex￨7 )￨6 {￨6 ex￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 }￨2 public￨2 void￨2 updateGUI￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Scrollable￨1 extends￨1 Control￨1 {￨1 ScrollBar￨2 horizontalBar￨2 ;￨2 ScrollBar￨2 verticalBar￨2 ;￨2 int￨2 scrolledHandle￨2 ;￨2 Scrollable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Scrollable￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 int￨2 clientHandle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 ScrollBar￨2 createScrollBar￨2 (￨2 int￨3 type￨3 )￨2 {￨2 }￨2 void￨2 createWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 int￨2 findScrollViewer￨2 (￨2 int￨3 current￨3 ,￨3 int￨3 scrollViewerType￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getClientArea￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ScrollBar￨2 getHorizontalBar￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getScrollBarHandle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 ScrollBar￨2 getVerticalBar￨2 (￨2 )￨2 {￨2 }￨2 void￨2 HandlePreviewMouseWheel￨2 (￨2 int￨3 sender￨3 ,￨3 int￨3 e￨3 )￨2 {￨2 super￨3 .￨3 HandlePreviewMouseWheel￨3 (￨3 sender￨3 ,￨3 e￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 checkEvent￨4 (￨4 e￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 state￨4 )￨4 &￨4 (￨4 CANVAS￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 if￨4 (￨4 (￨5 verticalBar￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 int￨5 vHandle￨5 =￨5 verticalBar￨5 .￨5 handle￨5 ;￨5 int￨5 delta￨5 =￨5 OS￨5 .￨5 MouseWheelEventArgs_Delta￨5 (￨5 e￨5 )￨5 ;￨5 int￨5 lines￨5 =￨5 OS￨5 .￨5 SystemParameters_WheelScrollLines￨5 (￨5 )￨5 ;￨5 double￨5 value￨5 =￨5 OS￨5 .￨5 RangeBase_Value￨5 (￨5 vHandle￨5 )￨5 ;￨5 double￨5 newValue￨5 =￨5 value￨5 ;￨5 Event￨5 event￨5 =￨5 new￨5 Event￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 lines￨6 !=￨6 (￨6 -￨6 1￨6 )￨6 )￨5 {￨5 double￨6 smallIncrement￨6 =￨6 OS￨6 .￨6 RangeBase_SmallChange￨6 (￨6 vHandle￨6 )￨6 ;￨6 newValue￨6 +=￨6 (￨6 smallIncrement￨6 *￨6 (￨6 (￨6 -￨6 delta￨6 )￨6 /￨6 120￨6 )￨6 )￨6 *￨6 lines￨6 ;￨6 event￨6 .￨6 detail￨6 =￨6 (￨6 delta￨6 <￨6 0￨6 )￨6 ?￨6 SWT￨6 .￨6 ARROW_DOWN￨6 :￨6 SWT￨6 .￨6 ARROW_UP￨6 ;￨6 }￨5 else￨5 {￨5 double￨6 largeIncrement￨6 =￨6 OS￨6 .￨6 RangeBase_LargeChange￨6 (￨6 vHandle￨6 )￨6 ;￨6 newValue￨6 +=￨6 largeIncrement￨6 *￨6 (￨6 (￨6 -￨6 delta￨6 )￨6 /￨6 120￨6 )￨6 ;￨6 event￨6 .￨6 detail￨6 =￨6 (￨6 delta￨6 <￨6 0￨6 )￨6 ?￨6 SWT￨6 .￨6 PAGE_DOWN￨6 :￨6 SWT￨6 .￨6 PAGE_UP￨6 ;￨6 }￨5 OS￨5 .￨5 RangeBase_Value￨5 (￨5 vHandle￨5 ,￨5 newValue￨5 )￨5 ;￨5 newValue￨5 =￨5 OS￨5 .￨5 RangeBase_Value￨5 (￨5 vHandle￨5 )￨5 ;￨5 if￨5 (￨5 value￨6 !=￨6 newValue￨6 )￨5 {￨5 <START_BUG>￨6 verticalBar￨6 .￨6 sendEvent￨6 (￨6 Selection￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 }￨3 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 int￨2 topHandle￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestTimeLimitingCollector￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 final￨2 int￨2 SLOW_DOWN￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 TIME_ALLOWED￨2 =￨2 17￨2 *￨2 (￨2 TestTimeLimitingCollector￨2 .￨2 SLOW_DOWN￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 double￨2 MULTI_THREAD_SLACK￨2 =￨2 7￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_DOCS￨2 =￨2 3000￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_THREADS￨2 =￨2 50￨2 ;￨2 private￨2 IndexSearcher￨2 searcher￨2 ;￨2 private￨2 Directory￨2 directory￨2 ;￨2 private￨2 IndexReader￨2 reader￨2 ;￨2 private￨2 final￨2 String￨2 FIELD_NAME￨2 =￨2 "body"￨2 ;￨2 private￨2 Query￨2 query￨2 ;￨2 private￨2 Counter￨2 counter￨2 ;￨2 private￨2 TimerThread￨2 counterThread￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 counter￨3 =￨3 Counter￨3 .￨3 newCounter￨3 (￨3 true￨3 )￨3 ;￨3 counterThread￨3 =￨3 new￨3 TimerThread￨3 (￨3 counter￨3 )￨3 ;￨3 counterThread￨3 .￨3 start￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 [￨3 ]￨3 docText￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 directory￨3 =￨3 newDirectory￨3 (￨3 )￨3 ;￨3 RandomIndexWriter￨3 iw￨3 =￨3 new￨3 RandomIndexWriter￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 directory￨3 ,￨3 newIndexWriterConfig￨3 (￨3 TEST_VERSION_CURRENT￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 analysis￨3 .￨3 MockAnalyzer￨3 (￨3 random￨3 (￨3 )￨3 )￨3 )￨3 .￨3 setMergePolicy￨3 (￨3 newLogMergePolicy￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 TestTimeLimitingCollector￨4 .￨4 N_DOCS￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 add￨4 (￨4 docText￨4 [￨4 (￨4 i￨4 %￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 )￨4 ]￨4 ,￨4 iw￨4 )￨4 ;￨4 }￨3 reader￨3 =￨3 iw￨3 .￨3 getReader￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 iw￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 searcher￨3 =￨3 newSearcher￨3 (￨3 reader￨3 )￨3 ;￨3 BooleanQuery￨3 booleanQuery￨3 =￨3 new￨3 BooleanQuery￨3 (￨3 )￨3 ;￨3 booleanQuery￨3 .￨3 add￨3 (￨3 new￨3 TermQuery￨3 (￨3 new￨3 Term￨3 (￨3 FIELD_NAME￨3 ,￨3 "one"￨3 )￨3 )￨3 ,￨3 SHOULD￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 1￨4 ;￨4 i￨4 <￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 String￨4 [￨4 ]￨4 docTextParts￨4 =￨4 docText￨4 [￨4 i￨4 ]￨4 .￨4 split￨4 (￨4 "\\s+"￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 docTextPart￨5 :￨5 docTextParts￨5 )￨4 {￨4 booleanQuery￨5 .￨5 add￨5 (￨5 new￨5 TermQuery￨5 (￨5 new￨5 Term￨5 (￨5 FIELD_NAME￨5 ,￨5 docTextPart￨5 )￨5 )￨5 ,￨5 SHOULD￨5 )￨5 ;￨5 }￨4 }￨3 query￨3 =￨3 booleanQuery￨3 ;￨3 searcher￨3 .￨3 search￨3 (￨3 query￨3 ,￨3 null￨3 ,￨3 1000￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 add￨2 (￨2 String￨2 value￨2 ,￨2 RandomIndexWriter￨2 iw￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 search￨2 (￨2 Collector￨2 collector￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collector￨2 createTimedCollector￨2 (￨2 TestTimeLimitingCollector￨3 .￨3 MyHitCollector￨3 hc￨3 ,￨3 long￨3 timeAllowed￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutGreedy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutNotGreedy￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestTimeout￨2 (￨2 boolean￨3 multiThreaded￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 private￨2 long￨2 maxTime￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 private￨2 String￨2 maxTimeStr￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testModifyResolution￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearchMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestMultiThreads￨2 (￨2 final￨2 boolean￨2 withTimeout￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 MyHitCollector￨2 extends￨2 SimpleCollector￨2 {￨2 private￨3 final￨3 BitSet￨3 bits￨3 =￨3 new￨3 BitSet￨3 (￨3 )￨3 ;￨3 private￨3 int￨3 slowdown￨3 =￨3 0￨3 ;￨3 private￨3 int￨3 lastDocCollected￨3 =￨3 -￨3 1￨3 ;￨3 private￨3 int￨3 docBase￨3 =￨3 0￨3 ;￨3 public￨3 void￨3 setSlowDown￨3 (￨3 int￨4 milliseconds￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hitCount￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 getLastDocCollected￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setScorer￨3 (￨3 Scorer￨3 scorer￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 collect￨3 (￨3 final￨3 int￨3 doc￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 doSetNextReader￨3 (￨3 AtomicReaderContext￨3 context￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 acceptsDocsOutOfOrder￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TypeDeclaration￨1 extends￨1 BodyDeclaration￨1 {￨1 private￨2 static￨2 final￨2 int￨2 LEGAL_MODIFIERS￨2 =￨2 (￨2 (￨2 (￨2 (￨2 (￨2 (￨2 Modifier￨2 .￨2 PUBLIC￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PRIVATE￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PROTECTED￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STATIC￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 FINAL￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 ABSTRACT￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STRICTFP￨2 )￨2 ;￨2 private￨2 boolean￨2 isInterface￨2 =￨2 false￨2 ;￨2 private￨2 int￨2 modifiers￨2 =￨2 Modifier￨2 .￨2 NONE￨2 ;￨2 private￨2 SimpleName￨2 typeName￨2 =￨2 null￨2 ;￨2 private￨2 Name￨2 optionalSuperclassName￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 superInterfaceNames￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 false￨2 ,￨2 Name￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 bodyDeclarations￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 true￨2 ,￨2 BodyDeclaration￨2 .￨2 class￨2 )￨2 ;￨2 TypeDeclaration￨2 (￨2 AST￨2 ast￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 boolean￨2 equalSubtrees￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInterface￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInterface￨2 (￨2 boolean￨3 isInterface￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setModifiers￨2 (￨2 int￨3 modifiers￨3 )￨2 {￨2 <START_BUG>￨3 modifiers￨3 &=￨3 ~￨3 (￨3 IConstants￨3 .￨3 AccDeprecated￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 modifiers￨4 &￨4 (￨4 ~￨4 (￨4 TypeDeclaration￨4 .￨4 LEGAL_MODIFIERS￨4 )￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 )￨4 ;￨4 }￨3 modifying￨3 (￨3 )￨3 ;￨3 this￨3 .￨3 modifiers￨3 =￨3 modifiers￨3 ;￨3 }￨2 public￨2 SimpleName￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setName￨2 (￨2 SimpleName￨3 typeName￨3 )￨2 {￨2 }￨2 public￨2 Name￨2 getSuperclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSuperclass￨2 (￨2 Name￨3 superclassName￨3 )￨2 {￨2 }￨2 public￨2 List￨2 superInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 bodyDeclarations￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SingleVariableDeclaration￨2 [￨2 ]￨2 getFields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodDeclaration￨2 [￨2 ]￨2 getMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeDeclaration￨2 [￨2 ]￨2 getTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPackageMemberTypeDeclaration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMemberTypeDeclaration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLocalTypeDeclaration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ITypeBinding￨2 resolveBinding￨2 (￨2 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LogFactoryImpl￨1 implements￨1 Configurable￨1 ,￨1 GenericConfigurable￨1 ,￨1 LogFactory￨1 {￨1 private￨2 static￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 LogFactoryImpl￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 TRACE_STR￨2 =￨2 LogFactoryImpl￨2 .￨2 _loc￨2 .￨2 get￨2 (￨2 "log-trace"￨2 )￨2 .￨2 getMessage￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 INFO_STR￨2 =￨2 LogFactoryImpl￨2 .￨2 _loc￨2 .￨2 get￨2 (￨2 "log-info"￨2 )￨2 .￨2 getMessage￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 WARN_STR￨2 =￨2 LogFactoryImpl￨2 .￨2 _loc￨2 .￨2 get￨2 (￨2 "log-warn"￨2 )￨2 .￨2 getMessage￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ERROR_STR￨2 =￨2 LogFactoryImpl￨2 .￨2 _loc￨2 .￨2 get￨2 (￨2 "log-error"￨2 )￨2 .￨2 getMessage￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FATAL_STR￨2 =￨2 LogFactoryImpl￨2 .￨2 _loc￨2 .￨2 get￨2 (￨2 "log-fatal"￨2 )￨2 .￨2 getMessage￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 STDOUT￨2 =￨2 "stdout"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 STDERR￨2 =￨2 "stderr"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NEWLINE￨2 =￨2 System￨2 .￨2 getProperty￨2 (￨2 "line.separator"￨2 )￨2 ;￨2 protected￨2 final￨2 long￨2 initializationMillis￨2 ;￨2 private￨2 Map￨2 _logs￨2 =￨2 new￨2 ConcurrentHashMap￨2 (￨2 )￨2 ;￨2 private￨2 short￨2 _defaultLogLevel￨2 =￨2 Log￨2 .￨2 INFO￨2 ;￨2 private￨2 Map￨2 _configuredLevels￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 PrintStream￨2 _out￨2 =￨2 System￨2 .￨2 err￨2 ;￨2 private￨2 String￨2 _diagContext￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 _diagContextComputed￨2 =￨2 false￨2 ;￨2 private￨2 Configuration￨2 _conf￨2 ;￨2 public￨2 LogFactoryImpl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Log￨2 getLog￨2 (￨2 String￨3 channel￨3 )￨2 {￨2 }￨2 protected￨2 LogFactoryImpl￨2 .￨2 LogImpl￨2 newLogImpl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDefaultLevel￨2 (￨2 String￨3 level￨3 )￨2 {￨2 }￨2 public￨2 short￨2 getDefaultLevel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDefaultLevel￨2 (￨2 short￨3 level￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDiagnosticContext￨2 (￨2 String￨3 val￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getDiagnosticContext￨2 (￨2 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 _diagContextComputed￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 _diagContext￨4 )￨4 ==￨4 null￨4 )￨4 {￨4 <END_BUG>￨4 _diagContext￨4 =￨4 _conf￨4 .￨4 getId￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 ""￨5 .￨5 equals￨5 (￨5 _diagContext￨5 )￨5 )￨4 {￨4 _diagContext￨5 =￨5 null￨5 ;￨5 }￨4 _diagContextComputed￨4 =￨4 true￨4 ;￨4 }￨3 return￨3 _diagContext￨3 ;￨3 }￨2 public￨2 void￨2 setFile￨2 (￨2 String￨3 file￨3 )￨2 {￨2 }￨2 public￨2 PrintStream￨2 getStream￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setStream￨2 (￨2 PrintStream￨3 stream￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getLevelName￨2 (￨2 short￨3 level￨3 )￨2 {￨2 }￨2 public￨2 static￨2 short￨2 getLevel￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setConfiguration￨2 (￨2 Configuration￨3 conf￨3 )￨2 {￨2 }￨2 public￨2 void￨2 startConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 endConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInto￨2 (￨2 Options￨3 opts￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 shorten￨2 (￨2 String￨3 channel￨3 )￨2 {￨2 }￨2 public￨2 class￨2 LogImpl￨2 extends￨2 AbstractLog￨2 {￨2 private￨3 short￨3 _level￨3 =￨3 INFO￨3 ;￨3 private￨3 String￨3 _channel￨3 ;￨3 protected￨3 boolean￨3 isEnabled￨3 (￨3 short￨4 level￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 log￨3 (￨3 short￨4 level￨4 ,￨4 String￨4 message￨4 ,￨4 Throwable￨4 t￨4 )￨3 {￨3 }￨3 protected￨3 String￨3 formatMessage￨3 (￨3 short￨4 level￨4 ,￨4 String￨4 message￨4 ,￨4 Throwable￨4 t￨4 )￨3 {￨3 }￨3 private￨3 long￨3 getOffset￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setChannel￨3 (￨3 String￨4 val￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getChannel￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setLevel￨3 (￨3 short￨4 val￨4 )￨3 {￨3 }￨3 public￨3 short￨3 getLevel￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 PoolOperations￨1 implements￨1 OperationStepHandler￨1 {￨1 private￨2 final￨2 PoolOperations￨2 .￨2 PoolMatcher￨2 matcher￨2 ;￨2 protected￨2 PoolOperations￨2 (￨2 PoolOperations￨3 .￨3 PoolMatcher￨3 matcher￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 PathAddress￨3 address￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 ;￨3 final￨3 String￨3 jndiName￨3 ;￨3 if￨3 (￨3 address￨4 .￨4 getElement￨4 (￨4 0￨4 )￨4 .￨4 getKey￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 DEPLOYMENT￨4 )￨4 )￨3 {￨3 jndiName￨4 =￨4 address￨4 .￨4 getLastElement￨4 (￨4 )￨4 .￨4 getValue￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 jndiName￨4 =￨4 Util￨4 .￨4 getJndiName￨4 (￨4 context￨4 .￨4 readModel￨4 (￨4 EMPTY_ADDRESS￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 context￨3 .￨3 getType￨3 (￨3 )￨3 )￨3 ==￨3 (￨3 Type￨3 .￨3 SERVER￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 OperationStepHandler￨3 (￨3 )￨3 {￨3 public￨4 void￨4 execute￨4 (￨4 OperationContext￨4 context￨4 ,￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 final￨5 ServiceController￨5 <￨5 ?￨5 >￨5 managementRepoService￨5 =￨5 context￨5 .￨5 getServiceRegistry￨5 (￨5 false￨5 )￨5 .￨5 getService￨5 (￨5 MANAGEMENT_REPOSITORY_SERVICE￨5 )￨5 ;￨5 if￨5 (￨5 managementRepoService￨6 !=￨6 null￨6 )￨5 {￨5 ModelNode￨6 operationResult￨6 =￨6 null￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 final￨7 ManagementRepository￨7 repository￨7 =￨7 (￨7 (￨7 ManagementRepository￨7 )￨7 (￨7 managementRepoService￨7 .￨7 getValue￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 final￨7 List￨7 <￨7 Pool￨7 >￨7 pools￨7 =￨7 matcher￨7 .￨7 match￨7 (￨7 jndiName￨7 ,￨7 repository￨7 )￨7 ;￨7 if￨7 (￨7 pools￨8 .￨8 isEmpty￨8 (￨8 )￨8 )￨7 {￨7 throw￨8 ConnectorMessages￨8 .￨8 MESSAGES￨8 .￨8 failedToMatchPool￨8 (￨8 jndiName￨8 )￨8 ;￨8 }￨7 for￨7 (￨7 Pool￨8 pool￨8 :￨8 pools￨8 )￨7 {￨7 operationResult￨8 =￨8 invokeCommandOn￨8 (￨8 pool￨8 )￨8 ;￨8 }￨7 }￨6 catch￨6 (￨6 Exception￨7 e￨7 )￨6 {￨6 throw￨7 new￨7 OperationFailedException￨7 (￨7 new￨7 ModelNode￨7 (￨7 )￨7 .￨7 set￨7 (￨7 ConnectorMessages￨7 .￨7 MESSAGES￨7 .￨7 failedToInvokeOperation￨7 (￨7 e￨7 .￨7 getLocalizedMessage￨7 (￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 if￨6 (￨6 operationResult￨7 !=￨7 null￨7 )￨6 {￨6 context￨7 .￨7 getResult￨7 (￨7 )￨7 .￨7 set￨7 (￨7 operationResult￨7 )￨7 ;￨7 }￨6 }￨5 context￨5 .￨5 completeStep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 }￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 abstract￨2 ModelNode￨2 invokeCommandOn￨2 (￨2 Pool￨2 pool￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 FlushIdleConnectionInPool￨2 extends￨2 PoolOperations￨2 {￨2 public￨3 static￨3 PoolOperations￨3 .￨3 FlushIdleConnectionInPool￨3 DS_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 FlushIdleConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 DsPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 public￨3 static￨3 PoolOperations￨3 .￨3 FlushIdleConnectionInPool￨3 RA_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 FlushIdleConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 RaPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 protected￨3 FlushIdleConnectionInPool￨3 (￨3 PoolOperations￨4 .￨4 PoolMatcher￨4 matcher￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModelNode￨3 invokeCommandOn￨3 (￨3 Pool￨4 pool￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 FlushAllConnectionInPool￨2 extends￨2 PoolOperations￨2 {￨2 public￨3 static￨3 PoolOperations￨3 .￨3 FlushAllConnectionInPool￨3 DS_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 FlushAllConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 DsPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 public￨3 static￨3 PoolOperations￨3 .￨3 FlushAllConnectionInPool￨3 RA_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 FlushAllConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 RaPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 protected￨3 FlushAllConnectionInPool￨3 (￨3 PoolOperations￨4 .￨4 PoolMatcher￨4 matcher￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModelNode￨3 invokeCommandOn￨3 (￨3 Pool￨4 pool￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 TestConnectionInPool￨2 extends￨2 PoolOperations￨2 {￨2 public￨3 static￨3 PoolOperations￨3 .￨3 TestConnectionInPool￨3 DS_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 TestConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 DsPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 public￨3 static￨3 PoolOperations￨3 .￨3 TestConnectionInPool￨3 RA_INSTANCE￨3 =￨3 new￨3 PoolOperations￨3 .￨3 TestConnectionInPool￨3 (￨3 new￨3 PoolOperations￨3 .￨3 RaPoolMatcher￨3 (￨3 )￨3 )￨3 ;￨3 protected￨3 TestConnectionInPool￨3 (￨3 PoolOperations￨4 .￨4 PoolMatcher￨4 matcher￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModelNode￨3 invokeCommandOn￨3 (￨3 Pool￨3 pool￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 interface￨2 PoolMatcher￨2 (￨2 )￨2 {￨2 List￨3 <￨3 Pool￨3 >￨3 match￨3 (￨3 String￨4 jndiName￨4 ,￨4 ManagementRepository￨4 repository￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 DsPoolMatcher￨2 implements￨2 PoolOperations￨2 .￨2 PoolMatcher￨2 {￨2 public￨3 List￨3 <￨3 Pool￨3 >￨3 match￨3 (￨3 String￨4 jndiName￨4 ,￨4 ManagementRepository￨4 repository￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 RaPoolMatcher￨2 implements￨2 PoolOperations￨2 .￨2 PoolMatcher￨2 {￨2 public￨3 List￨3 <￨3 Pool￨3 >￨3 match￨3 (￨3 String￨4 jndiName￨4 ,￨4 ManagementRepository￨4 repository￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TransactionalTopologyBuilder￨1 {￨1 String￨2 _id￨2 ;￨2 String￨2 _spoutId￨2 ;￨2 ITransactionalSpout￨2 _spout￨2 ;￨2 Map￨2 <￨2 String￨2 ,￨2 TransactionalTopologyBuilder￨2 .￨2 Component￨2 >￨2 _bolts￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 TransactionalTopologyBuilder￨2 .￨2 Component￨2 >￨2 (￨2 )￨2 ;￨2 Integer￨2 _spoutParallelism￨2 ;￨2 List￨2 <￨2 Map￨2 >￨2 _spoutConfs￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 public￨2 TransactionalTopologyBuilder￨2 (￨2 String￨3 id￨3 ,￨3 String￨3 spoutId￨3 ,￨3 ITransactionalSpout￨3 spout￨3 ,￨3 Integer￨3 spoutParallelism￨3 )￨2 {￨2 }￨2 public￨2 TransactionalTopologyBuilder￨2 (￨2 String￨3 id￨3 ,￨3 String￨3 spoutId￨3 ,￨3 IPartitionedTransactionalSpout￨3 spout￨3 ,￨3 Integer￨3 spoutParallelism￨3 )￨2 {￨2 }￨2 public￨2 SpoutDeclarer￨2 getSpoutDeclarer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 IBatchBolt￨3 bolt￨3 )￨2 {￨2 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 IBatchBolt￨3 bolt￨3 ,￨3 Integer￨3 parallelism￨3 )￨2 {￨2 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 ICommitterBolt￨3 bolt￨3 )￨2 {￨2 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 ICommitterBolt￨3 bolt￨3 ,￨3 Integer￨3 parallelism￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 setBolt￨3 (￨3 id￨3 ,￨3 new￨3 CommitterBoltExecutor￨3 (￨3 bolt￨3 )￨3 ,￨3 parallelism￨3 ,￨3 true￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 IBasicBolt￨3 bolt￨3 )￨2 {￨2 }￨2 public￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 IBasicBolt￨3 bolt￨3 ,￨3 Integer￨3 parallelism￨3 )￨2 {￨2 }￨2 private￨2 BoltDeclarer￨2 setBolt￨2 (￨2 String￨3 id￨3 ,￨3 IRichBolt￨3 bolt￨3 ,￨3 Integer￨3 parallelism￨3 ,￨3 boolean￨3 committer￨3 )￨2 {￨2 }￨2 public￨2 StormTopology￨2 buildTopology￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Set￨2 <￨2 String￨2 >￨2 componentBoltSubscriptions￨2 (￨2 TransactionalTopologyBuilder￨3 .￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 Component￨2 {￨2 public￨3 IRichBolt￨3 bolt￨3 ;￨3 public￨3 int￨3 parallelism￨3 ;￨3 public￨3 List￨3 <￨3 TransactionalTopologyBuilder￨3 .￨3 InputDeclaration￨3 >￨3 declarations￨3 =￨3 new￨3 ArrayList￨3 <￨3 TransactionalTopologyBuilder￨3 .￨3 InputDeclaration￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 List￨3 <￨3 Map￨3 >￨3 componentConfs￨3 =￨3 new￨3 ArrayList￨3 <￨3 Map￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 boolean￨3 committer￨3 ;￨3 public￨3 Component￨3 (￨3 IRichBolt￨4 bolt￨4 ,￨4 int￨4 parallelism￨4 ,￨4 boolean￨4 committer￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 interface￨2 InputDeclaration￨2 (￨2 )￨2 {￨2 void￨3 declare￨3 (￨3 InputDeclarer￨4 declarer￨4 )￨3 {￨3 }￨3 String￨3 getComponent￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 SpoutDeclarerImpl￨2 extends￨2 BaseConfigurationDeclarer￨2 <￨2 SpoutDeclarer￨2 >￨2 implements￨2 SpoutDeclarer￨2 {￨2 @￨3 Override￨3 public￨3 SpoutDeclarer￨3 addConfigurations￨3 (￨3 Map￨4 conf￨4 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 BoltDeclarerImpl￨2 extends￨2 BaseConfigurationDeclarer￨2 <￨2 BoltDeclarer￨2 >￨2 implements￨2 BoltDeclarer￨2 {￨2 TransactionalTopologyBuilder￨3 .￨3 Component￨3 _component￨3 ;￨3 public￨3 BoltDeclarerImpl￨3 (￨3 TransactionalTopologyBuilder￨4 .￨4 Component￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 fieldsGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 Fields￨4 fields￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 fieldsGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 ,￨4 final￨4 Fields￨4 fields￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 globalGrouping￨3 (￨3 final￨4 String￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 globalGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 shuffleGrouping￨3 (￨3 final￨4 String￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 shuffleGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 noneGrouping￨3 (￨3 final￨4 String￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 noneGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 allGrouping￨3 (￨3 final￨4 String￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 allGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 directGrouping￨3 (￨3 final￨4 String￨4 component￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 directGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 customGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 CustomStreamGrouping￨4 grouping￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 customGrouping￨3 (￨3 final￨4 String￨4 component￨4 ,￨4 final￨4 String￨4 streamId￨4 ,￨4 final￨4 CustomStreamGrouping￨4 grouping￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 grouping￨3 (￨3 final￨4 GlobalStreamId￨4 stream￨4 ,￨4 final￨4 Grouping￨4 grouping￨4 )￨3 {￨3 }￨3 private￨3 void￨3 addDeclaration￨3 (￨3 TransactionalTopologyBuilder￨4 .￨4 InputDeclaration￨4 declaration￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BoltDeclarer￨3 addConfigurations￨3 (￨3 Map￨4 conf￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 CloseAllPerspectivesAction￨1 extends￨1 Action￨1 implements￨1 ActionFactory￨1 .￨1 IWorkbenchAction￨1 {￨1 private￨2 IWorkbenchWindow￨2 workbenchWindow￨2 ;￨2 public￨2 CloseAllPerspectivesAction￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 workbenchWindow￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 IWorkbenchPage￨3 page￨3 =￨3 workbenchWindow￨3 .￨3 getActivePage￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 page￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 (￨4 (￨4 WorkbenchPage￨4 )￨4 (￨4 page￨4 )￨4 )￨4 .￨4 closeAllPerspectives￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SignaturePatternTestCase￨1 extends￨1 TestCase￨1 {￨1 public￨2 SignaturePatternTestCase￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 BcelWorld￨2 world￨2 =￨2 new￨2 BcelWorld￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 testThrowsMatch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testInstanceMethodMatch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStaticMethodMatch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldMatch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testConstructorMatch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 checkMatch￨2 (￨2 SignaturePattern￨2 p￨2 ,￨2 Member￨2 [￨2 ]￨2 yes￨2 ,￨2 Member￨2 [￨2 ]￨2 no￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkMatch￨2 (￨2 SignaturePattern￨3 p￨3 ,￨3 Member￨3 member￨3 ,￨3 boolean￨3 b￨3 )￨2 {￨2 <START_BUG>￨3 boolean￨3 matches￨3 =￨3 p￨3 .￨3 matches￨3 (￨3 member￨3 ,￨3 world￨3 )￨3 ;￨3 <END_BUG>￨3 assertEquals￨3 (￨3 (￨3 (￨3 (￨3 p￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 +￨3 "<seq2seq4repair_space>matches<seq2seq4repair_space>"￨3 )￨3 +￨3 (￨3 member￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 ,￨3 b￨3 ,￨3 matches￨3 )￨3 ;￨3 }￨2 private￨2 SignaturePattern￨2 makeMethodPat￨2 (￨2 String￨3 pattern￨3 )￨2 {￨2 }￨2 private￨2 SignaturePattern￨2 makeFieldPat￨2 (￨2 String￨3 pattern￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkSerialization￨2 (￨2 SignaturePattern￨2 p￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 StubFileGenerator￨1 {￨1 static￨2 Hashtable￨2 declIDTable￨2 =￨2 null￨2 ;￨2 static￨2 void￨2 doFiles￨2 (￨2 Hashtable￨2 table￨2 ,￨2 SymbolManager￨2 symbolManager￨2 ,￨2 File￨2 [￨2 ]￨2 inputFiles￨2 ,￨2 File￨2 [￨2 ]￨2 signatureFiles￨2 )￨2 throws￨2 DocException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 processFile￨2 (￨2 SymbolManager￨2 symbolManager￨2 ,￨2 File￨2 inputFile￨2 ,￨2 File￨2 signatureFile￨2 )￨2 throws￨2 DocException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 processImportDeclaration￨2 (￨2 IProgramElement￨2 node￨2 ,￨2 PrintWriter￨2 writer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 processTypeDeclaration￨2 (￨2 IProgramElement￨2 classNode￨2 ,￨2 PrintWriter￨2 writer￨2 )￨2 throws￨2 DocException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 processMembers￨2 (￨2 List￨2 members￨2 ,￨2 PrintWriter￨2 writer￨2 ,￨2 boolean￨2 declaringTypeIsInterface￨2 )￨2 throws￨2 DocException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 genSourceSignature￨2 (￨2 IProgramElement￨3 classNode￨3 )￨2 {￨2 String￨3 signature￨3 =￨3 classNode￨3 .￨3 getSourceSignature￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 signature￨4 !=￨4 null￨4 )￨3 {￨3 int￨4 index￨4 =￨4 signature￨4 .￨4 indexOf￨4 (￨4 "aspect"￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 index￨4 !=￨4 (￨4 -￨4 1￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 signature￨4 .￨4 charAt￨4 (￨4 (￨4 index￨4 -￨4 1￨4 )￨4 )￨4 )￨4 !=￨4 '.'￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 signature￨4 =￨4 (￨4 (￨4 signature￨4 .￨4 substring￨4 (￨4 0￨4 ,￨4 index￨4 )￨4 )￨4 +￨4 "class<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 signature￨4 .￨4 substring￨4 (￨4 (￨4 index￨4 +￨4 6￨4 )￨4 ,￨4 signature￨4 .￨4 length￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 signature￨3 ;￨3 }￨2 static￨2 int￨2 nextDeclID￨2 =￨2 0￨2 ;￨2 static￨2 String￨2 addDeclID￨2 (￨2 IProgramElement￨3 decl￨3 ,￨3 String￨3 formalComment￨3 )￨2 {￨2 }￨2 static￨2 String￨2 addToFormal￨2 (￨2 String￨3 formalComment￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WeldBootstrapService￨1 implements￨1 Service￨1 <￨1 WeldBootstrapService￨1 >￨1 {￨1 public￨2 static￨2 final￨2 ServiceName￨2 SERVICE_NAME￨2 =￨2 ServiceName￨2 .￨2 of￨2 (￨2 "WeldBootstrapService"￨2 )￨2 ;￨2 private￨2 final￨2 WeldBootstrap￨2 bootstrap￨2 ;￨2 private￨2 final￨2 WeldDeployment￨2 deployment￨2 ;￨2 private￨2 final￨2 Environment￨2 environment￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 BeanDeploymentArchive￨2 >￨2 beanDeploymentArchives￨2 ;￨2 private￨2 final￨2 BeanDeploymentArchiveImpl￨2 rootBeanDeploymentArchive￨2 ;￨2 private￨2 final￨2 String￨2 deploymentName￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 WeldSecurityServices￨2 >￨2 securityServices￨2 =￨2 new￨2 InjectedValue￨2 <￨2 WeldSecurityServices￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 WeldTransactionServices￨2 >￨2 weldTransactionServices￨2 =￨2 new￨2 InjectedValue￨2 <￨2 WeldTransactionServices￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 volatile￨2 boolean￨2 started￨2 ;￨2 public￨2 WeldBootstrapService￨2 (￨2 WeldDeployment￨3 deployment￨3 ,￨3 Environment￨3 environment￨3 ,￨3 final￨3 String￨3 deploymentName￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 start￨2 (￨2 final￨3 StartContext￨3 context￨3 )￨2 {￨2 if￨3 (￨3 started￨4 )￨3 {￨3 throw￨4 MESSAGES￨4 .￨4 alreadyRunning￨4 (￨4 "WeldContainer"￨4 )￨4 ;￨4 }￨3 started￨3 =￨3 true￨3 ;￨3 DEPLOYMENT_LOGGER￨3 .￨3 startingWeldService￨3 (￨3 deploymentName￨3 )￨3 ;￨3 addWeldService￨3 (￨3 SecurityServices￨3 .￨3 class￨3 ,￨3 securityServices￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 ;￨3 addWeldService￨3 (￨3 TransactionServices￨3 .￨3 class￨3 ,￨3 weldTransactionServices￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 ;￨3 ModuleGroupSingletonProvider￨3 .￨3 addClassLoaders￨3 (￨3 deployment￨3 .￨3 getModule￨3 (￨3 )￨3 .￨3 getClassLoader￨3 (￨3 )￨3 ,￨3 deployment￨3 .￨3 getSubDeploymentClassLoaders￨3 (￨3 )￨3 )￨3 ;￨3 ClassLoader￨3 oldTccl￨3 =￨3 WildFlySecurityManager￨3 .￨3 getCurrentContextClassLoaderPrivileged￨3 (￨3 )￨3 ;￨3 try￨3 {￨3 WildFlySecurityManager￨4 .￨4 setCurrentContextClassLoaderPrivileged￨4 (￨4 deployment￨4 .￨4 getModule￨4 (￨4 )￨4 .￨4 getClassLoader￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 bootstrap￨4 .￨4 startContainer￨4 (￨4 environment￨4 ,￨4 deployment￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 WildFlySecurityManager￨4 .￨4 setCurrentContextClassLoaderPrivileged￨4 (￨4 oldTccl￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 synchronized￨2 void￨2 stop￨2 (￨2 final￨3 StopContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 BeanManagerImpl￨2 getBeanManager￨2 (￨2 String￨3 beanArchiveId￨3 )￨2 {￨2 }￨2 public￨2 <￨2 T￨2 extends￨2 Service￨2 >￨2 void￨2 addWeldService￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 type￨3 ,￨3 T￨3 service￨3 )￨2 {￨2 }￨2 public￨2 BeanManager￨2 getBeanManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 BeanDeploymentArchive￨2 >￨2 getBeanDeploymentArchives￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStarted￨2 (￨2 )￨2 {￨2 }￨2 WeldBootstrap￨2 getBootstrap￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 WeldBootstrapService￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalArgumentException￨2 ,￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InjectedValue￨2 <￨2 WeldSecurityServices￨2 >￨2 getSecurityServices￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InjectedValue￨2 <￨2 WeldTransactionServices￨2 >￨2 getWeldTransactionServices￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConfigFrame￨1 implements￨1 ActionListener￨1 ,￨1 ListSelectionListener￨1 {￨1 private￨2 JDialog￨2 dialog￨2 ;￨2 private￨2 AccountListTable￨2 listView￨2 ;￨2 private￨2 AccountList￨2 accountList￨2 ;￨2 private￨2 AccountItem￨2 accountItem￨2 ;￨2 JTextField￨2 nameTextField￨2 =￨2 new￨2 JTextField￨2 (￨2 )￨2 ;￨2 JButton￨2 addButton￨2 ;￨2 JButton￨2 removeButton￨2 ;￨2 JButton￨2 editButton￨2 ;￨2 private￨2 int￨2 index￨2 ;￨2 public￨2 ConfigFrame￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AccountItem￨2 getSelected￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSelected￨2 (￨2 AccountItem￨3 item￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initComponents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 valueChanged￨2 (￨2 ListSelectionEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showAccountDialog￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 e￨3 )￨2 {￨2 String￨3 action￨3 =￨3 e￨3 .￨3 getActionCommand￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 action￨4 .￨4 equals￨4 (￨4 "CLOSE"￨4 )￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 config￨5 .￨5 save￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 ex￨5 )￨4 {￨4 ex￨5 .￨5 printStackTrace￨5 (￨5 )￨5 ;￨5 }￨4 dialog￨4 .￨4 setVisible￨4 (￨4 false￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 action￨4 .￨4 equals￨4 (￨4 "ADD"￨4 )￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 new￨5 AccountWizardLauncher￨5 (￨5 )￨5 .￨5 launchWizard￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 listView￨5 .￨5 update￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 ex￨5 )￨4 {￨4 ex￨5 .￨5 printStackTrace￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 action￨4 .￨4 equals￨4 (￨4 "REMOVE"￨4 )￨4 )￨3 {￨3 Object￨4 [￨4 ]￨4 options￨4 =￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ;￨4 int￨4 n￨4 =￨4 JOptionPane￨4 .￨4 showOptionDialog￨4 (￨4 null￨4 ,￨4 "Would<seq2seq4repair_space>you<seq2seq4repair_space>really<seq2seq4repair_space>like<seq2seq4repair_space>to<seq2seq4repair_space>delete<seq2seq4repair_space>this<seq2seq4repair_space>account?"￨4 ,￨4 "Question"￨4 ,￨4 JOptionPane￨4 .￨4 YES_NO_OPTION￨4 ,￨4 JOptionPane￨4 .￨4 QUESTION_MESSAGE￨4 ,￨4 null￨4 ,￨4 options￨4 ,￨4 options￨4 [￨4 1￨4 ]￨4 )￨4 ;￨4 if￨4 (￨4 n￨5 ==￨5 (￨5 JOptionPane￨5 .￨5 NO_OPTION￨5 )￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 AccountItem￨4 item￨4 =￨4 accountList￨4 .￨4 remove￨4 (￨4 index￨4 )￨4 ;￨4 if￨4 (￨4 item￨5 .￨5 isPopAccount￨5 (￨5 )￨5 )￨4 {￨4 popServerCollection￨5 .￨5 removePopServer￨5 (￨5 item￨5 .￨5 getUid￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 FolderTreeNode￨5 folder￨5 =￨5 (￨5 (￨5 FolderTreeNode￨5 )￨5 (￨5 treeModel￨5 .￨5 getImapFolder￨5 (￨5 item￨5 .￨5 getUid￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 FolderTreeNode￨6 parentFolder￨6 =￨6 (￨6 (￨6 FolderTreeNode￨6 )￨6 (￨6 folder￨6 .￨6 getParent￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 folder￨6 .￨6 removeFolder￨6 (￨6 )￨6 ;￨6 treeModel￨6 .￨6 nodeStructureChanged￨6 (￨6 parentFolder￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 Exception￨6 ex￨6 )￨5 {￨5 ex￨6 .￨6 printStackTrace￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 mailCheckingManager￨4 .￨4 remove￨4 (￨4 item￨4 .￨4 getUid￨4 (￨4 )￨4 )￨4 ;￨4 removeButton￨4 .￨4 setEnabled￨4 (￨4 false￨4 )￨4 ;￨4 editButton￨4 .￨4 setEnabled￨4 (￨4 false￨4 )￨4 ;￨4 listView￨4 .￨4 update￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 action￨4 .￨4 equals￨4 (￨4 "EDIT"￨4 )￨4 )￨3 {￨3 showAccountDialog￨4 (￨4 )￨4 ;￨4 listView￨4 .￨4 update￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 MappingJackson2MessageConverter￨1 implements￨1 MessageConverter￨1 <￨1 Object￨1 >￨1 {￨1 private￨2 ObjectMapper￨2 objectMapper￨2 =￨2 new￨2 ObjectMapper￨2 (￨2 )￨2 ;￨2 private￨2 Type￨2 defaultObjectType￨2 =￨2 Map￨2 .￨2 class￨2 ;￨2 private￨2 Class￨2 <￨2 ?￨2 >￨2 defaultMessagePayloadClass￨2 =￨2 byte￨2 [￨2 ]￨2 .￨2 class￨2 ;￨2 public￨2 void￨2 setDefaultObjectClass￨2 (￨2 Type￨2 defaultObjectType￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDefaultTargetPayloadClass￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 payloadClass￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 fromMessage￨2 (￨2 Message￨3 <￨3 ?￨3 >￨3 message￨3 ,￨3 Type￨3 objectType￨3 )￨2 {￨2 JavaType￨3 javaType￨3 =￨3 (￨3 objectType￨3 !=￨3 null￨3 )￨3 ?￨3 this￨3 .￨3 objectMapper￨3 .￨3 constructType￨3 (￨3 objectType￨3 )￨3 :￨3 this￨3 .￨3 objectMapper￨3 .￨3 constructType￨3 (￨3 this￨3 .￨3 defaultObjectType￨3 )￨3 ;￨3 Object￨3 payload￨3 =￨3 message￨3 .￨3 getPayload￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 payload￨5 instanceof￨5 byte￨5 [￨5 ]￨5 )￨4 {￨4 return￨5 this￨5 .￨5 objectMapper￨5 .￨5 readValue￨5 (￨5 (￨5 (￨5 byte￨5 [￨5 ]￨5 )￨5 (￨5 payload￨5 )￨5 )￨5 ,￨5 javaType￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 payload￨5 instanceof￨5 String￨5 )￨4 {￨4 return￨5 this￨5 .￨5 objectMapper￨5 .￨5 readValue￨5 (￨5 (￨5 (￨5 String￨5 )￨5 (￨5 payload￨5 )￨5 )￨5 ,￨5 javaType￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 IllegalArgumentException￨5 (￨5 (￨5 "Unexpected<seq2seq4repair_space>message<seq2seq4repair_space>payload<seq2seq4repair_space>type:<seq2seq4repair_space>"￨5 +￨5 payload￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 ex￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 MessageConversionException￨4 (￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>JSON:<seq2seq4repair_space>"￨4 +￨4 (￨4 ex￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 ex￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 @￨2 Override￨2 public￨2 <￨2 P￨2 >￨2 Message￨2 <￨2 P￨2 >￨2 toMessage￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SubqueryImpl￨1 <￨1 T￨1 >￨1 extends￨1 ExpressionImpl￨1 <￨1 T￨1 >￨1 implements￨1 Subquery￨1 <￨1 T￨1 >￨1 {￨1 private￨2 final￨2 AbstractQuery￨2 <￨2 ?￨2 >￨2 _parent￨2 ;￨2 private￨2 final￨2 CriteriaQueryImpl￨2 <￨2 T￨2 >￨2 _delegate￨2 ;￨2 private￨2 final￨2 MetamodelImpl￨2 _model￨2 ;￨2 private￨2 Set￨2 <￨2 Join￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 >￨2 _joins￨2 ;￨2 private￨2 Expression￨2 <￨2 T￨2 >￨2 _select￨2 ;￨2 private￨2 Subquery￨2 _subq￨2 ;￨2 public￨2 SubqueryImpl￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 cls￨3 ,￨3 AbstractQuery￨3 <￨3 ?￨3 >￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 AbstractQuery￨2 <￨2 ?￨2 >￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CriteriaQueryImpl￨2 <￨2 T￨2 >￨2 getDelegate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MetamodelImpl￨2 getMetamodel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CriteriaQueryImpl￨2 <￨2 ?￨2 >￨2 getInnermostParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 select￨2 (￨2 Expression￨3 <￨3 T￨3 >￨3 expression￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 <￨2 T￨2 >￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 >￨2 Root￨2 <￨2 X￨2 >￨2 from￨2 (￨2 EntityType￨3 <￨3 X￨3 >￨3 entity￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 >￨2 Root￨2 <￨2 X￨2 >￨2 from￨2 (￨2 Class￨3 <￨3 X￨3 >￨3 entityClass￨3 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 Root￨2 <￨2 ?￨2 >￨2 >￨2 getRoots￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Root￨2 <￨2 ?￨2 >￨2 getRoot￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 where￨2 (￨2 Expression￨3 <￨3 Boolean￨3 >￨3 restriction￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 where￨2 (￨2 Predicate￨3 ...￨3 restrictions￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 groupBy￨2 (￨2 Expression￨3 <￨3 ?￨3 >￨3 ...￨3 grouping￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 having￨2 (￨2 Expression￨3 <￨3 Boolean￨3 >￨3 restriction￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 having￨2 (￨2 Predicate￨3 ...￨3 restrictions￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 <￨2 T￨2 >￨2 distinct￨2 (￨2 boolean￨3 distinct￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 Expression￨2 <￨2 ?￨2 >￨2 >￨2 getGroupList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Predicate￨2 getRestriction￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Predicate￨2 getGroupRestriction￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDistinct￨2 (￨2 )￨2 {￨2 }￨2 public￨2 <￨2 U￨2 >￨2 Subquery￨2 <￨2 U￨2 >￨2 subquery￨2 (￨2 Class￨3 <￨3 U￨3 >￨3 type￨3 )￨2 {￨2 }￨2 public￨2 <￨2 Y￨2 >￨2 Root￨2 <￨2 Y￨2 >￨2 correlate￨2 (￨2 Root￨3 <￨3 Y￨3 >￨3 root￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 Join￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 correlate￨2 (￨2 Join￨3 <￨3 X￨3 ,￨3 Y￨3 >￨3 join￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 CollectionJoin￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 correlate￨2 (￨2 CollectionJoin￨3 <￨3 X￨3 ,￨3 Y￨3 >￨3 join￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 SetJoin￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 correlate￨2 (￨2 SetJoin￨3 <￨3 X￨3 ,￨3 Y￨3 >￨3 join￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 ListJoin￨2 <￨2 X￨2 ,￨2 Y￨2 >￨2 correlate￨2 (￨2 ListJoin￨3 <￨3 X￨3 ,￨3 Y￨3 >￨3 join￨3 )￨2 {￨2 }￨2 public￨2 <￨2 X￨2 ,￨2 K￨2 ,￨2 V￨2 >￨2 MapJoin￨2 <￨2 X￨2 ,￨2 K￨2 ,￨2 V￨2 >￨2 correlate￨2 (￨2 MapJoin￨3 <￨3 X￨3 ,￨3 K￨3 ,￨3 V￨3 >￨3 join￨3 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 Join￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 >￨2 getJoins￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Subquery￨2 getSubQ￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Value￨2 toValue￨2 (￨2 ExpressionFactory￨3 factory￨3 ,￨3 MetamodelImpl￨3 model￨3 ,￨3 CriteriaQueryImpl￨3 <￨3 ?￨3 >￨3 q￨3 )￨2 {￨2 }￨2 private￨2 ClassMetaData￨2 getCandidate￨2 (￨2 )￨2 {￨2 RootImpl￨3 <￨3 ?￨3 >￨3 root￨3 =￨3 (￨3 (￨3 RootImpl￨3 <￨3 ?￨3 >￨3 )￨3 (￨3 getRoot￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 RootImpl￨3 <￨3 ?￨3 >￨3 correlatedRoot￨3 =￨3 (￨3 (￨3 RootImpl￨3 <￨3 ?￨3 >￨3 )￨3 (￨3 root￨3 .￨3 getCorrelatedParent￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 correlatedRoot￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 root￨4 .￨4 getJoins￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 Join￨4 <￨4 ?￨4 ,￨4 ?￨4 >￨4 join￨4 =￨4 root￨4 .￨4 getJoins￨4 (￨4 )￨4 .￨4 iterator￨4 (￨4 )￨4 .￨4 next￨4 (￨4 )￨4 ;￨4 FieldMetaData￨4 fmd￨4 =￨4 (￨4 (￨4 Members￨4 .￨4 Member￨4 <￨4 ?￨4 ,￨4 ?￨4 >￨4 )￨4 (￨4 join￨4 .￨4 getAttribute￨4 (￨4 )￨4 )￨4 )￨4 .￨4 fmd￨4 ;￨4 if￨4 (￨4 join￨5 .￨5 getAttribute￨5 (￨5 )￨5 .￨5 isCollection￨5 (￨5 )￨5 )￨4 {￨4 return￨5 fmd￨5 .￨5 isElementCollection￨5 (￨5 )￨5 ?￨5 fmd￨5 .￨5 getEmbeddedMetaData￨5 (￨5 )￨5 :￨5 fmd￨5 .￨5 getElement￨5 (￨5 )￨5 .￨5 getDeclaredTypeMetaData￨5 (￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 return￨5 fmd￨5 .￨5 getDeclaredTypeMetaData￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 (￨3 (￨3 AbstractManagedType￨3 <￨3 ?￨3 >￨3 )￨3 (￨3 root￨3 .￨3 getModel￨3 (￨3 )￨3 )￨3 )￨3 .￨3 meta￨3 ;￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 Border￨1 <￨1 T￨1 >￨1 extends￨1 WebMarkupContainerWithAssociatedMarkup￨1 <￨1 T￨1 >￨1 implements￨1 IComponentResolver￨1 {￨1 private￨2 static￨2 final￨2 String￨2 BODY￨2 =￨2 "body"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 BORDER￨2 =￨2 "border"￨2 ;￨2 private￨2 boolean￨2 bodyVisible￨2 =￨2 true￨2 ;￨2 private￨2 MarkupContainer￨2 body￨2 ;￨2 public￨2 Border￨2 (￨2 MarkupContainer￨3 parent￨3 ,￨3 final￨3 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Border￨2 (￨2 MarkupContainer￨3 parent￨3 ,￨3 final￨3 String￨3 id￨3 ,￨3 final￨3 IModel￨3 <￨3 T￨3 >￨3 model￨3 )￨2 {￨2 }￨2 protected￨2 MarkupContainer￨2 getBodyContainer￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 MarkupContainer￨2 newBorderBodyContainer￨2 (￨2 final￨3 MarkupContainer￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 Border￨2 setBorderBodyVisible￨2 (￨2 boolean￨3 bodyVisible￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 MarkupFragment￨2 getMarkupFragment￨2 (￨2 String￨3 path￨3 )￨2 {￨2 <START_BUG>￨3 MarkupFragment￨3 fragment￨3 =￨3 Border￨3 .￨3 getAssociatedMarkupFragment￨3 (￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 fragment￨4 !=￨4 null￨4 )￨3 {￨3 fragment￨4 =￨4 fragment￨4 .￨4 getChildFragment￨4 (￨4 path￨4 ,￨4 false￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 fragment￨4 ==￨4 null￨4 )￨3 {￨3 fragment￨4 =￨4 super￨4 .￨4 getMarkupFragment￨4 (￨4 path￨4 )￨4 ;￨4 }￨3 return￨3 fragment￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 final￨2 void￨2 onComponentTagBody￨2 (￨2 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 openTag￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 resolve￨2 (￨2 final￨3 MarkupContainer￨3 container￨3 ,￨3 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 renderHead￨2 (￨2 HeaderContainer￨3 container￨3 )￨2 {￨2 }￨2 private￨2 class￨2 BorderBody￨2 extends￨2 WebMarkupContainer￨2 implements￨2 IComponentResolver￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 transient￨3 boolean￨3 wasOpenClose￨3 =￨3 false￨3 ;￨3 public￨3 BorderBody￨3 (￨3 final￨4 MarkupContainer￨4 parent￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 MarkupFragment￨3 getMarkupFragment￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentTag￨3 (￨3 final￨4 ComponentTag￨4 tag￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentTagBody￨3 (￨3 final￨4 MarkupStream￨4 markupStream￨4 ,￨4 final￨4 ComponentTag￨4 openTag￨4 )￨3 {￨3 }￨3 public￨3 boolean￨3 resolve￨3 (￨3 final￨4 MarkupContainer￨4 container￨4 ,￨4 final￨4 MarkupStream￨4 markupStream￨4 ,￨4 final￨4 ComponentTag￨4 tag￨4 )￨3 {￨3 }￨3 }￨2 }￨1
class￨1 StressCategory￨1 {￨1 static￨2 Priority￨2 [￨2 ]￨2 priority￨2 =￨2 new￨2 Priority￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 static￨2 Priority￨2 defaultPriority￨2 =￨2 Category￨2 .￨2 getRoot￨2 (￨2 )￨2 .￨2 getPriority￨2 (￨2 )￨2 ;￨2 static￨2 int￨2 LENGTH￨2 ;￨2 static￨2 String￨2 [￨2 ]￨2 names￨2 ;￨2 static￨2 Category￨2 [￨2 ]￨2 cat￨2 ;￨2 static￨2 StressCategory￨2 .￨2 CT￨2 [￨2 ]￨2 ct￨2 ;￨2 static￨2 Random￨2 random￨2 =￨2 new￨2 Random￨2 (￨2 10￨2 )￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 static￨2 void￨2 permute￨2 (￨2 int￨3 n￨3 )￨2 {￨2 }￨2 static￨2 void￨2 swap￨2 (￨2 String￨3 [￨3 ]￨3 names￨3 ,￨3 int￨3 i￨3 ,￨3 int￨3 j￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 permutationDump￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 createLoop￨2 (￨2 int￨3 n￨3 )￨2 {￨2 if￨3 (￨3 n￨4 ==￨4 (￨4 StressCategory￨4 .￨4 LENGTH￨4 )￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 StressCategory￨5 .￨5 LENGTH￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 StressCategory￨6 .￨6 ct￨6 [￨6 i￨6 ]￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 StressCategory￨6 .￨6 cat￨6 [￨6 i￨6 ]￨6 =￨6 null￨6 ;￨6 }￨5 else￨5 {￨5 StressCategory￨6 .￨6 cat￨6 [￨6 i￨6 ]￨6 =￨6 Category￨6 .￨6 getInstance￨6 (￨6 StressCategory￨6 .￨6 ct￨6 [￨6 i￨6 ]￨6 .￨6 catstr￨6 )￨6 ;￨6 StressCategory￨6 .￨6 cat￨6 [￨6 i￨6 ]￨6 .￨6 setPriority￨6 (￨6 StressCategory￨6 .￨6 ct￨6 [￨6 i￨6 ]￨6 .￨6 priority￨6 )￨6 ;￨6 }￨5 }￨4 StressCategory￨4 .￨4 test￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 _default￨4 .￨4 clear￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 else￨3 {￨3 StressCategory￨4 .￨4 ct￨4 [￨4 n￨4 ]￨4 =￨4 null￨4 ;￨4 StressCategory￨4 .￨4 createLoop￨4 (￨4 (￨4 n￨4 +￨4 1￨4 )￨4 )￨4 ;￨4 StressCategory￨4 .￨4 ct￨4 [￨4 n￨4 ]￨4 =￨4 new￨4 StressCategory￨4 .￨4 CT￨4 (￨4 StressCategory￨4 .￨4 names￨4 [￨4 n￨4 ]￨4 ,￨4 null￨4 )￨4 ;￨4 StressCategory￨4 .￨4 createLoop￨4 (￨4 (￨4 n￨4 +￨4 1￨4 )￨4 )￨4 ;￨4 int￨4 r￨4 =￨4 StressCategory￨4 .￨4 random￨4 .￨4 nextInt￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 r￨5 <￨5 0￨5 )￨4 {￨4 r￨5 =￨5 -￨5 r￨5 ;￨5 }￨4 StressCategory￨4 .￨4 ct￨4 [￨4 n￨4 ]￨4 =￨4 new￨4 StressCategory￨4 .￨4 CT￨4 (￨4 StressCategory￨4 .￨4 names￨4 [￨4 n￨4 ]￨4 ,￨4 StressCategory￨4 .￨4 priority￨4 [￨4 (￨4 r￨4 %￨4 5￨4 )￨4 ]￨4 )￨4 ;￨4 StressCategory￨4 .￨4 createLoop￨4 (￨4 (￨4 n￨4 +￨4 1￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 static￨2 void￨2 test￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 ctDump￨2 (￨2 )￨2 {￨2 }￨2 static￨2 void￨2 catDump￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 checkCorrectness￨2 (￨2 int￨3 i￨3 )￨2 {￨2 }￨2 static￨2 Priority￨2 getExpectedPrioriy￨2 (￨2 StressCategory￨3 .￨3 CT￨3 ctParam￨3 )￨2 {￨2 }￨2 static￨2 class￨2 CT￨2 {￨2 public￨3 String￨3 catstr￨3 ;￨3 public￨3 Priority￨3 priority￨3 ;￨3 CT￨3 (￨3 String￨4 catstr￨4 ,￨4 Priority￨4 priority￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractRemoteService￨1 implements￨1 InvocationHandler￨1 ,￨1 IRemoteService￨1 {￨1 protected￨2 static￨2 final￨2 Object￨2 [￨2 ]￨2 EMPTY_ARGS￨2 =￨2 new￨2 Object￨2 [￨2 0￨2 ]￨2 ;￨2 protected￨2 abstract￨2 String￨2 [￨2 ]￨2 getInterfaceClassNames￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 IRemoteServiceID￨2 getRemoteServiceID￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 IRemoteServiceReference￨2 getRemoteServiceReference￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Class￨2 loadInterfaceClass￨2 (￨2 String￨2 className￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRemoteService￨2 getRemoteService￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 long￨2 getDefaultTimeout￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IFuture￨2 callAsync￨2 (￨2 final￨3 IRemoteCall￨3 call￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 Object￨2 getProxy￨2 (￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 final￨4 String￨4 [￨4 ]￨4 clazzes￨4 =￨4 getInterfaceClassNames￨4 (￨4 )￨4 ;￨4 List￨4 classes￨4 =￨4 new￨4 ArrayList￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 clazzes￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 Class￨5 c￨5 =￨5 loadInterfaceClass￨5 (￨5 clazzes￨5 [￨5 i￨5 ]￨5 )￨5 ;￨5 classes￨5 .￨5 add￨5 (￨5 c￨5 )￨5 ;￨5 Class￨5 asyncRemoteServiceProxyClass￨5 =￨5 findAsyncRemoteServiceProxyClass￨5 (￨5 c￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 asyncRemoteServiceProxyClass￨6 !=￨6 null￨6 )￨6 &&￨6 (￨6 asyncRemoteServiceProxyClass￨6 .￨6 isInterface￨6 (￨6 )￨6 )￨6 )￨5 {￨5 classes￨6 .￨6 add￨6 (￨6 asyncRemoteServiceProxyClass￨6 )￨6 ;￨6 }￨5 }￨4 classes￨4 .￨4 add￨4 (￨4 IRemoteServiceProxy￨4 .￨4 class￨4 )￨4 ;￨4 return￨4 createProxy￨4 (￨4 (￨4 (￨4 Class￨4 [￨4 ]￨4 )￨4 (￨4 classes￨4 .￨4 toArray￨4 (￨4 new￨4 Class￨4 [￨4 ]￨4 {￨4 }￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 final￨4 Exception￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 ECFException￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>proxy"￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 final￨4 NoClassDefFoundError￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 ECFException￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>load<seq2seq4repair_space>proxy<seq2seq4repair_space>interface"￨4 ,￨4 e￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 protected￨2 Object￨2 createProxy￨2 (￨2 Class￨3 [￨3 ]￨3 classes￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 findAsyncRemoteServiceProxyClass￨2 (￨2 Class￨3 c￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 convertInterfaceNameToAsyncInterfaceName￨2 (￨2 String￨3 interfaceName￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 [￨2 ]￨2 getCallParametersForProxyInvoke￨2 (￨2 String￨3 callMethod￨3 ,￨3 Method￨3 proxyMethod￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 long￨2 getCallTimeoutForProxyInvoke￨2 (￨2 String￨3 callMethod￨3 ,￨3 Method￨3 proxyMethod￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getCallMethodNameForProxyInvoke￨2 (￨2 Method￨3 method￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 invokeObject￨2 (￨2 Object￨2 proxy￨2 ,￨2 final￨2 Method￨2 method￨2 ,￨2 final￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 invokeSync￨2 (￨2 IRemoteCall￨2 call￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 invoke￨2 (￨2 Object￨2 proxy￨2 ,￨2 final￨2 Method￨2 method￨2 ,￨2 final￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 class￨2 AsyncArgs￨2 {￨2 private￨3 IRemoteCallListener￨3 listener￨3 ;￨3 private￨3 Object￨3 [￨3 ]￨3 args￨3 ;￨3 public￨3 AsyncArgs￨3 (￨3 IRemoteCallListener￨4 listener￨4 ,￨4 Object￨4 [￨4 ]￨4 originalArgs￨4 )￨3 {￨3 }￨3 public￨3 IRemoteCallListener￨3 getListener￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Object￨3 [￨3 ]￨3 getArgs￨3 (￨3 )￨3 {￨3 }￨3 }￨2 protected￨2 Object￨2 invokeAsync￨2 (￨2 final￨2 Method￨2 method￨2 ,￨2 final￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 AbstractRemoteService￨2 .￨2 AsyncArgs￨2 getAsyncArgs￨2 (￨2 Method￨3 method￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getAsyncInvokeMethodName￨2 (￨2 Method￨3 method￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 Java2WSWidgetFactory￨1 {￨1 private￨2 Java2WSWidgetFactory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createSOAPBindingLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Combo￨2 createSOAPBingCombo￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createXSDImportsButton￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createFrontendLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Combo￨2 createFrontendCombo￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createDatabindingLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Combo￨2 createDatabindingCombo￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createGenerateClientButton￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createGenerateServerButton￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createGenerateWrapperFaultBeanButton￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createGenerateWSDLButton￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createWSDLFileNameLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Text￨2 createWSDLFileNameText￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSDataModel￨3 model￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createUseSEIButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createInformationLabel￨2 (￨2 Composite￨3 parent￨3 ,￨3 IType￨3 startingPointType￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createPaddingLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createSelectSEIButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createSelectSEILabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Combo￨2 createSelectSEICombo￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSDataModel￨3 model￨3 ,￨3 IType￨3 javaStartingPointType￨3 )￨2 {￨2 <START_BUG>￨3 final￨3 Combo￨3 seiCombo￨3 =￨3 new￨3 Combo￨3 (￨3 parent￨3 ,￨3 SWT￨3 .￨3 READ_ONLY￨3 )￨3 ;￨3 <END_BUG>￨3 seiCombo￨3 .￨3 setToolTipText￨3 (￨3 JAVA2WS_SELECT_SEI_TOOLTIP￨3 )￨3 ;￨3 IJavaProject￨3 javaProject￨3 =￨3 JDTUtils￨3 .￨3 getJavaProject￨3 (￨3 model￨3 .￨3 getProjectName￨3 (￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 ITypeHierarchy￨4 typeHierarchy￨4 =￨4 javaStartingPointType￨4 .￨4 newTypeHierarchy￨4 (￨4 javaProject￨4 ,￨4 null￨4 )￨4 ;￨4 IType￨4 [￨4 ]￨4 allInterfaces￨4 =￨4 typeHierarchy￨4 .￨4 getAllInterfaces￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 allInterfaces￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 IType￨5 itype￨5 =￨5 allInterfaces￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 (￨6 !￨6 (￨6 itype￨6 .￨6 isBinary￨6 (￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 itype￨6 .￨6 getResource￨6 (￨6 )￨6 .￨6 getProject￨6 (￨6 )￨6 .￨6 equals￨6 (￨6 javaProject￨6 .￨6 getProject￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 seiCombo￨6 .￨6 add￨6 (￨6 itype￨6 .￨6 getFullyQualifiedName￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 catch￨3 (￨3 JavaModelException￨4 jme￨4 )￨3 {￨3 CXFUIPlugin￨4 .￨4 log￨4 (￨4 jme￨4 .￨4 getStatus￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 seiCombo￨3 .￨3 addSelectionListener￨3 (￨3 new￨3 SelectionAdapter￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 widgetSelected￨4 (￨4 SelectionEvent￨5 event￨5 )￨4 {￨4 String￨5 seiInterfaceName￨5 =￨5 seiCombo￨5 .￨5 getText￨5 (￨5 )￨5 ;￨5 model￨5 .￨5 setFullyQualifiedJavaInterfaceName￨5 (￨5 seiInterfaceName￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 seiCombo￨3 .￨3 select￨3 (￨3 (￨3 -￨3 1￨3 )￨3 )￨3 ;￨3 return￨3 seiCombo￨3 ;￨3 }￨2 public￨2 static￨2 Button￨2 createExtractSEIButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createExtractSEILabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Text￨2 createSEIInterfaceNameText￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createMemebersToExtractLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 CheckboxTableViewer￨2 createSEIMembersToExtractTableViewer￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createSelectAllButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Button￨2 createDeselectAllButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Label￨2 createSelectImplementationLabel￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Combo￨2 createSelectImplementationCombo￨2 (￨2 Composite￨3 parent￨3 ,￨3 final￨3 Java2WSDataModel￨3 model￨3 ,￨3 IType￨3 javaStartingPointType￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BindingKeyResolver￨1 extends￨1 BindingKeyParser￨1 {￨1 Compiler￨2 compiler￨2 ;￨2 Binding￨2 compilerBinding￨2 ;￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 compoundName￨2 ;￨2 int￨2 dimension￨2 ;￨2 LookupEnvironment￨2 environment￨2 ;￨2 ReferenceBinding￨2 genericType￨2 ;￨2 MethodBinding￨2 methodBinding￨2 ;￨2 CompilationUnitDeclaration￨2 parsedUnit￨2 ;￨2 BlockScope￨2 scope￨2 ;￨2 TypeBinding￨2 typeBinding￨2 ;￨2 TypeDeclaration￨2 typeDeclaration￨2 ;￨2 ArrayList￨2 types￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 private￨2 BindingKeyResolver￨2 (￨2 BindingKeyParser￨3 parser￨3 ,￨3 Compiler￨3 compiler￨3 ,￨3 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 public￨2 BindingKeyResolver￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 BindingKeyResolver￨2 (￨2 String￨3 key￨3 ,￨3 Compiler￨3 compiler￨3 ,￨3 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 compoundName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 consumeArrayDimension￨2 (￨2 char￨3 [￨3 ]￨3 brakets￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeField￨2 (￨2 char￨3 [￨3 ]￨3 fieldName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeParameterizedMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 consumeLocalType￨2 (￨2 char￨3 [￨3 ]￨3 uniqueKey￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeLocalVar￨2 (￨2 char￨3 [￨3 ]￨3 varName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeMethod￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 ,￨3 char￨3 [￨3 ]￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeMemberType￨2 (￨2 char￨3 [￨3 ]￨3 simpleTypeName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumePackage￨2 (￨2 char￨3 [￨3 ]￨3 pkgName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeParameterizedType￨2 (￨2 char￨3 [￨3 ]￨3 simpleTypeName￨3 ,￨3 boolean￨3 isRaw￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeParser￨2 (￨2 BindingKeyParser￨3 parser￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeScope￨2 (￨2 int￨3 scopeNumber￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeRawType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 consumeSecondaryType￨2 (￨2 char￨3 [￨3 ]￨3 simpleTypeName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeFullyQualifiedName￨2 (￨2 char￨3 [￨3 ]￨3 fullyQualifiedName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 consumeTopLevelType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 consumeType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 consumeTypeVariable￨2 (￨2 char￨3 [￨3 ]￨3 typeVariableName￨3 )￨2 {￨2 <START_BUG>￨3 TypeVariableBinding￨3 [￨3 ]￨3 typeVariableBindings￨3 =￨3 this￨3 .￨3 typeBinding￨3 .￨3 typeVariables￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 length￨4 =￨4 typeVariableBindings￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 length￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 TypeVariableBinding￨4 typeVariableBinding￨4 =￨4 typeVariableBindings￨4 [￨4 i￨4 ]￨4 ;￨4 if￨4 (￨4 CharOperation￨5 .￨5 equals￨5 (￨5 typeVariableName￨5 ,￨5 typeVariableBinding￨5 .￨5 sourceName￨5 (￨5 )￨5 )￨5 )￨4 {￨4 this￨5 .￨5 compilerBinding￨5 =￨5 typeVariableBinding￨5 ;￨5 return￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 consumeWildCard￨2 (￨2 int￨3 kind￨3 ,￨3 int￨3 rank￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 getArrayBinding￨2 (￨2 int￨3 dim￨3 ,￨3 TypeBinding￨3 binding￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 getBaseTypeBinding￨2 (￨2 char￨3 [￨3 ]￨3 signature￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 getBinaryBinding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CompilationUnitDeclaration￨2 getCompilationUnitDeclaration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Binding￨2 getCompilerBinding￨2 (￨2 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 getTypeBinding￨2 (￨2 char￨3 [￨3 ]￨3 simpleTypeName￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 [￨2 ]￨2 getTypeBindingArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 malformedKey￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BindingKeyParser￨2 newParser￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 UpToDate￨1 extends￨1 MatchingTask￨1 implements￨1 Condition￨1 {￨1 private￨2 ArrayList￨2 sourceFileSets￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 protected￨2 Mapper￨2 mapperElement￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 _property￨2 ;￨2 private￨2 File￨2 _targetFile￨2 ;￨2 private￨2 String￨2 _value￨2 ;￨2 public￨2 void￨2 setProperty￨2 (￨2 String￨3 property￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTargetFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setValue￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSrcfiles￨2 (￨2 FileSet￨3 fs￨3 )￨2 {￨2 }￨2 public￨2 Mapper￨2 createMapper￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 mapperElement￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 TaskException￨4 (￨4 "Cannot<seq2seq4repair_space>define<seq2seq4repair_space>more<seq2seq4repair_space>than<seq2seq4repair_space>one<seq2seq4repair_space>mapper"￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 mapperElement￨3 =￨3 new￨3 Mapper￨3 (￨3 getProject￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 mapperElement￨3 ;￨3 }￨2 public￨2 boolean￨2 eval￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 scanDir￨2 (￨2 File￨2 srcDir￨2 ,￨2 String￨2 [￨2 ]￨2 files￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TwoPhaseCommitEventProcessor￨1 implements￨1 IEventProcessor￨1 ,￨1 ISharedObjectContainerTransaction￨1 {￨1 BaseSharedObject￨2 sharedObject￨2 =￨2 null￨2 ;￨2 byte￨2 transactionState￨2 =￨2 ISharedObjectContainerTransaction￨2 .￨2 ACTIVE￨2 ;￨2 Object￨2 lock￨2 =￨2 new￨2 Object￨2 (￨2 )￨2 ;￨2 List￨2 participants￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 Map￨2 failed￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 int￨2 timeout￨2 =￨2 ISharedObjectTransactionConfig￨2 .￨2 DEFAULT_TIMEOUT￨2 ;￨2 int￨2 minFailedToAbort￨2 =￨2 0￨2 ;￨2 long￨2 identifier￨2 =￨2 0￨2 ;￨2 ISharedObjectTransactionParticipantsFilter￨2 participantsFilter￨2 =￨2 null￨2 ;￨2 public￨2 TwoPhaseCommitEventProcessor￨2 (￨2 BaseSharedObject￨3 bse￨3 ,￨3 ISharedObjectTransactionConfig￨3 config￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 trace￨2 (￨2 String￨3 msg￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 traceStack￨2 (￨2 String￨3 msg￨3 ,￨3 Throwable￨3 t￨3 )￨2 {￨2 }￨2 protected￨2 int￨2 getTimeout￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 getMinFailedToAbort￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isPrimary￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 BaseSharedObject￨2 getSharedObject￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ID￨2 getHomeID￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 addParticipants￨2 (￨2 ID￨3 [￨3 ]￨3 ids￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 removeParticipant￨2 (￨2 ID￨3 id￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addFailed￨2 (￨2 ID￨3 remote￨3 ,￨3 Throwable￨3 failure￨3 )￨2 {￨2 }￨2 protected￨2 ISharedObjectContext￨2 getContext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 processEvent￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleActivated￨2 (￨2 ISharedObjectActivatedEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 replicateTo￨2 (￨2 ID￨3 [￨3 ]￨3 remotes￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handlePrimaryActivated￨2 (￨2 ISharedObjectActivatedEvent￨3 event￨3 )￨2 {￨2 }￨2 private￨2 long￨2 getNextIdentifier￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 handleReplicaActivated￨2 (￨2 ISharedObjectActivatedEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleJoined￨2 (￨2 IContainerConnectedEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleCreateResponse￨2 (￨2 ISharedObjectCreateResponseEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleDeparted￨2 (￨2 IContainerDisconnectedEvent￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleVotingCompletedCreateResponse￨2 (￨2 ID￨3 fromID￨3 ,￨3 Throwable￨3 e￨3 ,￨3 long￨3 identifier1￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handlePostCommitFailure￨2 (￨2 ID￨3 fromID￨3 ,￨3 Throwable￨3 e￨3 ,￨3 long￨3 identifier1￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 sendCommit￨2 (￨2 )￨2 throws￨2 SharedObjectAddAbortException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 getTransactionState￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setTransactionState￨2 (￨2 byte￨3 state￨3 )￨2 {￨2 }￨2 public￨2 void￨2 waitToCommit￨2 (￨2 )￨2 throws￨2 SharedObjectAddAbortException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 doTMAbort￨2 (￨2 Throwable￨2 except￨2 )￨2 throws￨2 SharedObjectAddAbortException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 doTMCommit￨2 (￨2 )￨2 throws￨2 SharedObjectAddAbortException￨2 (￨2 )￨2 {￨2 trace￨3 (￨3 "doTMCommit"￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 getSharedObject￨3 (￨3 )￨3 .￨3 getGroupID￨3 (￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 sendCommit￨3 (￨3 )￨3 ;￨3 }￨3 localCommitted￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 localCommitted￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isVotingCompleted￨2 (￨2 )￨2 throws￨2 SharedObjectAddAbortException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CustomLoadMetricDefinition￨1 extends￨1 SimpleResourceDefinition￨1 {￨1 static￨2 final￨2 PathElement￨2 PATH￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 CUSTOM_LOAD_METRIC￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 CustomLoadMetricDefinition￨2 INSTANCE￨2 =￨2 new￨2 CustomLoadMetricDefinition￨2 (￨2 )￨2 ;￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 CLASS￨2 =￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 CommonAttributes￨2 .￨2 CLASS￨2 ,￨2 STRING￨2 ,￨2 false￨2 )￨2 .￨2 setAllowExpression￨2 (￨2 false￨2 )￨2 .￨2 setRestartAllServices￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 static￨2 final￨2 AttributeDefinition￨2 [￨2 ]￨2 ATTRIBUTES￨2 =￨2 new￨2 AttributeDefinition￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 static￨2 void￨2 buildTransformation￨2 (￨2 ModelVersion￨3 version￨3 ,￨3 ResourceTransformationDescriptionBuilder￨3 builder￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 VERSION_1_2_0￨3 .￨3 requiresTransformation￨3 (￨3 version￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 builder￨3 .￨3 addChildResource￨3 (￨3 CustomLoadMetricDefinition￨3 .￨3 PATH￨3 )￨3 .￨3 getAttributeBuilder￨3 (￨3 )￨3 .￨3 addRejectCheck￨3 (￨3 SIMPLE_EXPRESSIONS￨3 ,￨3 CustomLoadMetricDefinition￨3 .￨3 CLASS￨3 ,￨3 LoadMetricDefinition￨3 .￨3 WEIGHT￨3 )￨3 .￨3 addRejectCheck￨3 (￨3 CapacityCheckerAndConverter￨3 .￨3 INSTANCE￨3 ,￨3 LoadMetricDefinition￨3 .￨3 CAPACITY￨3 )￨3 .￨3 setValueConverter￨3 (￨3 CapacityCheckerAndConverter￨3 .￨3 INSTANCE￨3 ,￨3 LoadMetricDefinition￨3 .￨3 CAPACITY￨3 )￨3 .￨3 end￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 CustomLoadMetricDefinition￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registerAttributes￨2 (￨2 ManagementResourceRegistration￨3 resourceRegistration￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LineBreakHandler￨1 implements￨1 CharacterHandler￨1 {￨1 private￨2 final￨2 boolean￨2 fallbackToEscape￨2 ;￨2 private￨2 final￨2 boolean￨2 leaveOnLnBreak￨2 ;￨2 public￨2 LineBreakHandler￨2 (￨2 boolean￨3 leaveOnLnBreak￨3 ,￨3 boolean￨3 fallbackToEscape￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 handle￨2 (￨2 ParsingContext￨2 ctx￨2 )￨2 throws￨2 CommandFormatException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 ctx￨4 .￨4 getCharacter￨4 (￨4 )￨4 )￨4 ==￨4 '\\'￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 ctx￨5 .￨5 getInput￨5 (￨5 )￨5 .￨5 length￨5 (￨5 )￨5 )￨5 >￨5 (￨5 (￨5 ctx￨5 .￨5 getLocation￨5 (￨5 )￨5 )￨5 +￨5 (￨5 LINE_SEPARATOR￨5 .￨5 length￨5 (￨5 )￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 ctx￨5 .￨5 getInput￨5 (￨5 )￨5 .￨5 startsWith￨5 (￨5 LINE_SEPARATOR￨5 ,￨5 (￨5 (￨5 ctx￨5 .￨5 getLocation￨5 (￨5 )￨5 )￨5 +￨5 1￨5 )￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 leaveOnLnBreak￨6 )￨5 {￨5 ctx￨6 .￨6 leaveState￨6 (￨6 )￨6 ;￨6 ctx￨6 .￨6 advanceLocation￨6 (￨6 LINE_SEPARATOR￨6 .￨6 length￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 fallbackToEscape￨5 )￨4 {￨4 ctx￨5 .￨5 enterState￨5 (￨5 INSTANCE￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 <START_BUG>￨5 doHandle￨5 (￨5 ctx￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 else￨3 {￨3 doHandle￨4 (￨4 ctx￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 doHandle￨2 (￨2 ParsingContext￨2 ctx￨2 )￨2 throws￨2 CommandFormatException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestElementSaver￨1 implements￨1 TestElementTraverser￨1 {￨1 private￨2 String￨2 name￨2 ;￨2 private￨2 LinkedList￨2 stack￨2 =￨2 new￨2 LinkedList￨2 (￨2 )￨2 ;￨2 private￨2 DefaultConfiguration￨2 rootConfig￨2 =￨2 null￨2 ;￨2 public￨2 TestElementSaver￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 Configuration￨2 getConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 startTestElement￨2 (￨2 TestElement￨3 el￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setConfigName￨2 (￨2 DefaultConfiguration￨3 config￨3 )￨2 {￨2 }￨2 public￨2 void￨2 endTestElement￨2 (￨2 TestElement￨3 el￨3 )￨2 {￨2 }￨2 public￨2 void￨2 simplePropertyValue￨2 (￨2 JMeterProperty￨3 value￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 Object￨4 parent￨4 =￨4 stack￨4 .￨4 getLast￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 parent￨5 instanceof￨5 Configuration￨5 )￨5 )￨4 {￨4 DefaultConfiguration￨5 config￨5 =￨5 new￨5 DefaultConfiguration￨5 (￨5 "property"￨5 ,￨5 "property"￨5 )￨5 ;￨5 config￨5 .￨5 setValue￨5 (￨5 (￨5 value￨5 !=￨5 null￨5 ?￨5 value￨5 .￨5 toString￨5 (￨5 )￨5 :￨5 ""￨5 )￨5 )￨5 ;￨5 config￨5 .￨5 setAttribute￨5 (￨5 "name"￨5 ,￨5 parent￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 config￨5 .￨5 setAttribute￨5 (￨5 XML_SPACE￨5 ,￨5 PRESERVE￨5 )￨5 ;￨5 stack￨5 .￨5 removeLast￨5 (￨5 )￨5 ;￨5 stack￨5 .￨5 add￨5 (￨5 config￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 parent￨5 instanceof￨5 DefaultConfiguration￨5 )￨5 &&￨5 (￨5 value￨5 instanceof￨5 Configuration￨5 )￨5 )￨4 {￨4 (￨5 (￨5 DefaultConfiguration￨5 )￨5 (￨5 parent￨5 )￨5 )￨5 .￨5 addChild￨5 (￨5 (￨5 (￨5 Configuration￨5 )￨5 (￨5 value￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 parent￨5 instanceof￨5 DefaultConfiguration￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 value￨5 instanceof￨5 Configuration￨5 )￨5 )￨5 )￨4 {￨4 DefaultConfiguration￨5 config￨5 =￨5 new￨5 DefaultConfiguration￨5 (￨5 "string"￨5 ,￨5 "string"￨5 )￨5 ;￨5 <START_BUG>￨5 config￨5 .￨5 setValue￨5 (￨5 value￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 config￨5 .￨5 setAttribute￨5 (￨5 XML_SPACE￨5 ,￨5 PRESERVE￨5 )￨5 ;￨5 (￨5 (￨5 DefaultConfiguration￨5 )￨5 (￨5 parent￨5 )￨5 )￨5 .￨5 addChild￨5 (￨5 config￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 NoSuchElementException￨4 e￨4 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 startMap￨2 (￨2 MapProperty￨3 map￨3 )￨2 {￨2 }￨2 public￨2 void￨2 startCollection￨2 (￨2 CollectionProperty￨3 col￨3 )￨2 {￨2 }￨2 public￨2 void￨2 endProperty￨2 (￨2 JMeterProperty￨3 key￨3 )￨2 {￨2 }￨2 private￨2 void￨2 finishConfig￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 startProperty￨2 (￨2 JMeterProperty￨3 key￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CrosscuttingMembers￨1 {￨1 private￨2 ResolvedTypeX￨2 inAspect￨2 ;￨2 private￨2 World￨2 world￨2 ;￨2 private￨2 PerClause￨2 perClause￨2 ;￨2 private￨2 List￨2 shadowMungers￨2 =￨2 new￨2 ArrayList￨2 (￨2 4￨2 )￨2 ;￨2 private￨2 List￨2 typeMungers￨2 =￨2 new￨2 ArrayList￨2 (￨2 4￨2 )￨2 ;￨2 private￨2 List￨2 declareParents￨2 =￨2 new￨2 ArrayList￨2 (￨2 4￨2 )￨2 ;￨2 private￨2 List￨2 declareSofts￨2 =￨2 new￨2 ArrayList￨2 (￨2 0￨2 )￨2 ;￨2 private￨2 List￨2 declareDominates￨2 =￨2 new￨2 ArrayList￨2 (￨2 4￨2 )￨2 ;￨2 public￨2 CrosscuttingMembers￨2 (￨2 ResolvedTypeX￨3 inAspect￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConcreteShadowMunger￨2 (￨2 ShadowMunger￨3 m￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addShadowMungers￨2 (￨2 Collection￨3 c￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addShadowMunger￨2 (￨2 ShadowMunger￨3 m￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTypeMungers￨2 (￨2 Collection￨3 c￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTypeMunger￨2 (￨2 ConcreteTypeMunger￨3 m￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addDeclares￨2 (￨2 Collection￨3 c￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addDeclare￨2 (￨2 Declare￨3 declare￨3 )￨2 {￨2 if￨3 (￨3 declare￨4 instanceof￨4 DeclareErrorOrWarning￨4 )￨3 {￨3 ShadowMunger￨4 m￨4 =￨4 new￨4 Checker￨4 (￨4 (￨4 (￨4 DeclareErrorOrWarning￨4 )￨4 (￨4 declare￨4 )￨4 )￨4 )￨4 ;￨4 addShadowMunger￨4 (￨4 m￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 declare￨4 instanceof￨4 DeclarePrecedence￨4 )￨3 {￨3 declareDominates￨4 .￨4 add￨4 (￨4 declare￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 declare￨4 instanceof￨4 DeclareParents￨4 )￨3 {￨3 DeclareParents￨4 dp￨4 =￨4 (￨4 (￨4 DeclareParents￨4 )￨4 (￨4 declare￨4 )￨4 )￨4 ;￨4 exposeTypes￨4 (￨4 dp￨4 .￨4 getParents￨4 (￨4 )￨4 .￨4 getExactTypes￨4 (￨4 )￨4 )￨4 ;￨4 declareParents￨4 .￨4 add￨4 (￨4 dp￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 declare￨4 instanceof￨4 DeclareSoft￨4 )￨3 {￨3 DeclareSoft￨4 d￨4 =￨4 (￨4 (￨4 DeclareSoft￨4 )￨4 (￨4 declare￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 ShadowMunger￨4 m￨4 =￨4 Advice￨4 .￨4 makeSoftener￨4 (￨4 world￨4 ,￨4 d￨4 .￨4 getPointcut￨4 (￨4 )￨4 ,￨4 d￨4 .￨4 getException￨4 (￨4 )￨4 ,￨4 inAspect￨4 )￨4 ;￨4 <END_BUG>￨4 Pointcut￨4 concretePointcut￨4 =￨4 d￨4 .￨4 getPointcut￨4 (￨4 )￨4 .￨4 concretize￨4 (￨4 inAspect￨4 ,￨4 0￨4 ,￨4 m￨4 )￨4 ;￨4 m￨4 .￨4 pointcut￨4 =￨4 concretePointcut￨4 ;￨4 declareSofts￨4 .￨4 add￨4 (￨4 new￨4 DeclareSoft￨4 (￨4 d￨4 .￨4 getException￨4 (￨4 )￨4 ,￨4 concretePointcut￨4 )￨4 )￨4 ;￨4 addConcreteShadowMunger￨4 (￨4 m￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 "unimplemented"￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 exposeTypes￨2 (￨2 Collection￨3 typesToExpose￨3 )￨2 {￨2 }￨2 public￨2 void￨2 exposeType￨2 (￨2 TypeX￨3 typeToExpose￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addPrivilegedAccesses￨2 (￨2 Collection￨3 accessedMembers￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addPrivilegedAccess￨2 (￨2 ResolvedMember￨3 member￨3 )￨2 {￨2 }￨2 public￨2 Collection￨2 getCflowEntries￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 replaceWith￨2 (￨2 CrosscuttingMembers￨3 other￨3 )￨2 {￨2 }￨2 public￨2 PerClause￨2 getPerClause￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setPerClause￨2 (￨2 PerClause￨3 perClause￨3 )￨2 {￨2 }￨2 public￨2 List￨2 getDeclareDominates￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getDeclareParents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getDeclareSofts￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getShadowMungers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getTypeMungers￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 RunUpdateProcessor￨1 extends￨1 UpdateRequestProcessor￨1 {￨1 private￨2 final￨2 SolrQueryRequest￨2 req￨2 ;￨2 private￨2 final￨2 UpdateHandler￨2 updateHandler￨2 ;￨2 private￨2 boolean￨2 changesSinceCommit￨2 =￨2 false￨2 ;￨2 public￨2 RunUpdateProcessor￨2 (￨2 SolrQueryRequest￨3 req￨3 ,￨3 UpdateRequestProcessor￨3 next￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 processAdd￨2 (￨2 AddUpdateCommand￨2 cmd￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 processDelete￨2 (￨2 DeleteUpdateCommand￨2 cmd￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 cmd￨3 .￨3 id￨3 )￨3 !=￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 updateHandler￨3 .￨3 delete￨3 (￨3 cmd￨3 )￨3 ;￨3 else￨3 {￨3 updateHandler￨4 .￨4 deleteByQuery￨4 (￨4 cmd￨4 )￨4 ;￨4 }￨3 super￨3 .￨3 processDelete￨3 (￨3 cmd￨3 )￨3 ;￨3 changesSinceCommit￨3 =￨3 true￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 processMergeIndexes￨2 (￨2 MergeIndexesCommand￨2 cmd￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 processCommit￨2 (￨2 CommitUpdateCommand￨2 cmd￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 processRollback￨2 (￨2 RollbackUpdateCommand￨2 cmd￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 finish￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MemberImpl￨1 implements￨1 Comparable￨1 ,￨1 AnnotatedElement￨1 ,￨1 Member￨1 {￨1 protected￨2 Kind￨2 kind￨2 ;￨2 protected￨2 UnresolvedType￨2 declaringType￨2 ;￨2 protected￨2 int￨2 modifiers￨2 ;￨2 protected￨2 UnresolvedType￨2 returnType￨2 ;￨2 protected￨2 String￨2 name￨2 ;￨2 protected￨2 UnresolvedType￨2 [￨2 ]￨2 parameterTypes￨2 ;￨2 private￨2 final￨2 String￨2 signature￨2 ;￨2 private￨2 String￨2 paramSignature￨2 ;￨2 private￨2 JoinPointSignatureIterator￨2 joinPointSignatures￨2 =￨2 null￨2 ;￨2 public￨2 MemberImpl￨2 (￨2 Kind￨3 kind￨3 ,￨3 UnresolvedType￨3 declaringType￨3 ,￨3 int￨3 modifiers￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 MemberImpl￨2 (￨2 Kind￨3 kind￨3 ,￨3 UnresolvedType￨3 declaringType￨3 ,￨3 int￨3 modifiers￨3 ,￨3 UnresolvedType￨3 returnType￨3 ,￨3 String￨3 name￨3 ,￨3 UnresolvedType￨3 [￨3 ]￨3 parameterTypes￨3 )￨2 {￨2 }￨2 public￨2 ResolvedMember￨2 resolve￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 typesToSignature￨2 (￨2 UnresolvedType￨3 returnType￨3 ,￨3 UnresolvedType￨3 [￨3 ]￨3 paramTypes￨3 ,￨3 boolean￨3 useRawTypes￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 typesToSignature￨2 (￨2 UnresolvedType￨3 [￨3 ]￨3 paramTypes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Object￨2 [￨2 ]￨2 signatureToTypes￨2 (￨2 String￨3 sig￨3 ,￨3 boolean￨3 keepParameterizationInfo￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 field￨2 (￨2 String￨3 declaring￨3 ,￨3 int￨3 mods￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Member￨2 field￨2 (￨2 UnresolvedType￨3 declaring￨3 ,￨3 int￨3 mods￨3 ,￨3 String￨3 name￨3 ,￨3 UnresolvedType￨3 type￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 method￨2 (￨2 UnresolvedType￨3 declaring￨3 ,￨3 int￨3 mods￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 monitorEnter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 monitorExit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Member￨2 pointcut￨2 (￨2 UnresolvedType￨3 declaring￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 signature￨3 )￨2 {￨2 }￨2 private￨2 static￨2 MemberImpl￨2 field￨2 (￨2 String￨3 declaring￨3 ,￨3 int￨3 mods￨3 ,￨3 UnresolvedType￨3 ty￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 method￨2 (￨2 UnresolvedType￨3 declTy￨3 ,￨3 int￨3 mods￨3 ,￨3 UnresolvedType￨3 rTy￨3 ,￨3 String￨3 name￨3 ,￨3 UnresolvedType￨3 [￨3 ]￨3 paramTys￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Member￨2 pointcut￨2 (￨2 UnresolvedType￨3 declTy￨3 ,￨3 int￨3 mods￨3 ,￨3 UnresolvedType￨3 rTy￨3 ,￨3 String￨3 name￨3 ,￨3 UnresolvedType￨3 [￨3 ]￨3 paramTys￨3 )￨2 {￨2 }￨2 public￨2 static￨2 ResolvedMemberImpl￨2 makeExceptionHandlerSignature￨2 (￨2 UnresolvedType￨3 inType￨3 ,￨3 UnresolvedType￨3 catchType￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MemberImpl￨2 fieldFromString￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Member￨2 methodFromString￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 [￨2 ]￨2 parseIds￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 ZERO_STRINGS￨2 =￨2 new￨2 String￨2 [￨2 0￨2 ]￨2 ;￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 private￨2 volatile￨2 int￨2 hashCode￨2 =￨2 0￨2 ;￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 compareTo￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toLongString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Kind￨2 getKind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 getDeclaringType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 getReturnType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 getGenericReturnType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 [￨2 ]￨2 getParameterTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getArity￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getParameterSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCompatibleWith￨2 (￨2 Member￨3 am￨3 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 equalTypes￨2 (￨2 UnresolvedType￨3 [￨3 ]￨3 a￨3 ,￨3 UnresolvedType￨3 [￨3 ]￨3 b￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 [￨2 ]￨2 getExceptions￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isProtected￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isStatic￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isStrict￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isStatic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isInterface￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isPrivate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 canBeParameterized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 getCallsiteModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getExtractableName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasAnnotation￨2 (￨2 UnresolvedType￨3 ofType￨3 )￨2 {￨2 }￨2 public￨2 ResolvedType￨2 [￨2 ]￨2 getAnnotationTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AnnotationX￨2 [￨2 ]￨2 getAnnotations￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 throw￨3 new￨3 UnsupportedOperationException￨3 (￨3 "You<seq2seq4repair_space>should<seq2seq4repair_space>resolve<seq2seq4repair_space>this<seq2seq4repair_space>member<seq2seq4repair_space>and<seq2seq4repair_space>call<seq2seq4repair_space>getAnnotations()<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>result..."￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Collection￨2 getDeclaringTypes￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 walkUp￨2 (￨2 Collection￨3 acc￨3 ,￨3 ResolvedType￨3 curr￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 walkUpStatic￨2 (￨2 Collection￨3 acc￨3 ,￨3 ResolvedType￨3 curr￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getSignatureMakerName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSignatureType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getHandlerSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getStaticInitializationSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getAdviceSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMethodSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMonitorSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getConstructorSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getFieldSignatureString￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 makeString￨2 (￨2 int￨3 i￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 makeString￨2 (￨2 UnresolvedType￨3 t￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 makeString￨2 (￨2 UnresolvedType￨3 [￨3 ]￨3 types￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 makeString￨2 (￨2 String￨3 [￨3 ]￨3 names￨3 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getParameterNames￨2 (￨2 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 Iterator￨2 getJoinPointSignatures￨2 (￨2 World￨3 inAWorld￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SourceTypeBinding￨1 extends￨1 ReferenceBinding￨1 {￨1 public￨2 ReferenceBinding￨2 superclass￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 ;￨2 private￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 ;￨2 private￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 ;￨2 public￨2 TypeVariableBinding￨2 [￨2 ]￨2 typeVariables￨2 ;￨2 public￨2 ClassScope￨2 scope￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 METHOD_EMUL￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 FIELD_EMUL￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 CLASS_LITERAL_EMUL￨2 =￨2 2￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 RECEIVER_TYPE_EMUL￨2 =￨2 3￨2 ;￨2 HashMap￨2 [￨2 ]￨2 synthetics￨2 ;￨2 char￨2 [￨2 ]￨2 genericReferenceTypeSignature￨2 ;￨2 private￨2 SimpleLookupTable￨2 storedAnnotations￨2 =￨2 null￨2 ;￨2 public￨2 SourceTypeBinding￨2 (￨2 char￨3 [￨3 ]￨3 [￨3 ]￨3 compoundName￨3 ,￨3 PackageBinding￨3 fPackage￨3 ,￨3 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addDefaultAbstractMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 addSyntheticFieldForInnerclass￨2 (￨2 LocalVariableBinding￨3 actualOuterLocalVariable￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 addSyntheticFieldForInnerclass￨2 (￨2 ReferenceBinding￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 addSyntheticFieldForClassLiteral￨2 (￨2 TypeBinding￨3 targetType￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 addSyntheticFieldForAssert￨2 (￨2 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 addSyntheticFieldForEnumValues￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 addSyntheticMethod￨2 (￨2 FieldBinding￨3 targetField￨3 ,￨3 boolean￨3 isReadAccess￨3 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 addSyntheticEnumMethod￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 )￨2 {￨2 }￨2 public￨2 SyntheticFieldBinding￨2 addSyntheticFieldForSwitchEnum￨2 (￨2 char￨3 [￨3 ]￨3 fieldName￨3 ,￨3 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 addSyntheticMethodForSwitchEnum￨2 (￨2 TypeBinding￨3 enumBinding￨3 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 addSyntheticMethod￨2 (￨2 MethodBinding￨3 targetMethod￨3 ,￨3 boolean￨3 isSuperAccess￨3 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 addSyntheticBridgeMethod￨2 (￨2 MethodBinding￨3 inheritedMethodToBridge￨3 ,￨3 MethodBinding￨3 targetMethod￨3 )￨2 {￨2 }￨2 public￨2 int￨2 kind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 computeUniqueKey￨2 (￨2 boolean￨3 isLeaf￨3 )￨2 {￨2 }￨2 void￨2 faultInTypesForFieldsAndMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 genericTypeSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 genericSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 getAnnotationTagBits￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 getDefaultAbstractMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactConstructor￨2 (￨2 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactMethod￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 ,￨3 CompilationUnitScope￨3 refScope￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getField￨2 (￨2 char￨3 [￨3 ]￨3 fieldName￨3 ,￨3 boolean￨3 needResolve￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 getMethods￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getSyntheticField￨2 (￨2 LocalVariableBinding￨3 actualOuterLocalVariable￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getSyntheticField￨2 (￨2 ReferenceBinding￨3 targetEnclosingType￨3 ,￨3 boolean￨3 onlyExactMatch￨3 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 getSyntheticBridgeMethod￨2 (￨2 MethodBinding￨3 inheritedMethodToBridge￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initializeDeprecatedAnnotationTagBits￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEquivalentTo￨2 (￨2 TypeBinding￨3 otherType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isGenericType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getUpdatedFieldBinding￨2 (￨2 FieldBinding￨3 targetField￨3 ,￨3 ReferenceBinding￨3 newDeclaringClass￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getUpdatedMethodBinding￨2 (￨2 MethodBinding￨3 targetMethod￨3 ,￨3 ReferenceBinding￨3 newDeclaringClass￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasMemberTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 (￨2 )￨2 {￨2 }￨2 private￨2 FieldBinding￨2 resolveTypeFor￨2 (￨2 FieldBinding￨3 field￨3 )￨2 {￨2 }￨2 private￨2 MethodBinding￨2 resolveTypesFor￨2 (￨2 MethodBinding￨3 method￨3 )￨2 {￨2 }￨2 AnnotationHolder￨2 retrieveAnnotationHolder￨2 (￨2 Binding￨3 binding￨3 ,￨3 boolean￨3 forceInitialization￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFields￨2 (￨2 FieldBinding￨3 [￨3 ]￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMethods￨2 (￨2 MethodBinding￨3 [￨3 ]￨3 methods￨3 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 sourceEnd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 sourceStart￨2 (￨2 )￨2 {￨2 }￨2 SimpleLookupTable￨2 storedAnnotations￨2 (￨2 boolean￨3 forceInitialize￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 forceInitialize￨3 &&￨3 (￨3 (￨3 this￨3 .￨3 storedAnnotations￨3 )￨3 ==￨3 null￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 this￨3 .￨3 scope￨3 .￨3 referenceCompilationUnit￨3 (￨3 )￨3 .￨3 compilationResult￨3 .￨3 hasAnnotations￨3 =￨3 true￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 this￨4 .￨4 scope￨4 .￨4 environment￨4 (￨4 )￨4 .￨4 globalOptions￨4 .￨4 storeAnnotations￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 this￨3 .￨3 storedAnnotations￨3 =￨3 new￨3 SimpleLookupTable￨3 (￨3 3￨3 )￨3 ;￨3 }￨3 return￨3 this￨3 .￨3 storedAnnotations￨3 ;￨3 }￨2 public￨2 ReferenceBinding￨2 superclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SyntheticMethodBinding￨2 [￨2 ]￨2 syntheticMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 syntheticFields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeVariableBinding￨2 [￨2 ]￨2 typeVariables￨2 (￨2 )￨2 {￨2 }￨2 void￨2 verifyMethods￨2 (￨2 MethodVerifier￨3 verifier￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestUtils￨1 {￨1 private￨2 TestUtils￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 msg￨3 ,￨3 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertSame￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertSame￨2 (￨2 Complex￨3 expected￨3 ,￨3 Complex￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 Complex￨3 expected￨3 ,￨3 Complex￨3 actual￨3 ,￨3 double￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 double￨3 [￨3 ]￨3 expected￨3 ,￨3 double￨3 [￨3 ]￨3 observed￨3 ,￨3 double￨3 tolerance￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 serializeAndRecover￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkSerializedEquality￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertRelativelyEquals￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 relativeError￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertRelativelyEquals￨2 (￨2 String￨3 msg￨3 ,￨3 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 relativeError￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertContains￨2 (￨2 String￨3 msg￨3 ,￨3 Complex￨3 [￨3 ]￨3 values￨3 ,￨3 Complex￨3 z￨3 ,￨3 double￨3 epsilon￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertContains￨2 (￨2 Complex￨3 [￨3 ]￨3 values￨3 ,￨3 Complex￨3 z￨3 ,￨3 double￨3 epsilon￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertContains￨2 (￨2 String￨3 msg￨3 ,￨3 double￨3 [￨3 ]￨3 values￨3 ,￨3 double￨3 x￨3 ,￨3 double￨3 epsilon￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertContains￨2 (￨2 double￨3 [￨3 ]￨3 values￨3 ,￨3 double￨3 x￨3 ,￨3 double￨3 epsilon￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 msg￨3 ,￨3 RealMatrix￨3 expected￨3 ,￨3 RealMatrix￨3 observed￨3 ,￨3 double￨3 tolerance￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 FieldMatrix￨3 <￨3 ?￨3 extends￨3 FieldElement￨3 <￨3 ?￨3 >￨3 >￨3 expected￨3 ,￨3 FieldMatrix￨3 <￨3 ?￨3 extends￨3 FieldElement￨3 <￨3 ?￨3 >￨3 >￨3 observed￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 msg￨3 ,￨3 double￨3 [￨3 ]￨3 expected￨3 ,￨3 double￨3 [￨3 ]￨3 observed￨3 ,￨3 double￨3 tolerance￨3 )￨2 {￨2 StringBuffer￨3 out￨3 =￨3 new￨3 StringBuffer￨3 (￨3 msg￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 expected￨4 .￨4 length￨4 )￨4 !=￨4 (￨4 observed￨4 .￨4 length￨4 )￨4 )￨3 {￨3 out￨4 .￨4 append￨4 (￨4 "\n<seq2seq4repair_space>Arrays<seq2seq4repair_space>not<seq2seq4repair_space>same<seq2seq4repair_space>length.<seq2seq4repair_space>\n"￨4 )￨4 ;￨4 out￨4 .￨4 append￨4 (￨4 "expected<seq2seq4repair_space>has<seq2seq4repair_space>length<seq2seq4repair_space>"￨4 )￨4 ;￨4 out￨4 .￨4 append￨4 (￨4 expected￨4 .￨4 length￨4 )￨4 ;￨4 out￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>observed<seq2seq4repair_space>length<seq2seq4repair_space>=<seq2seq4repair_space>"￨4 )￨4 ;￨4 out￨4 .￨4 append￨4 (￨4 observed￨4 .￨4 length￨4 )￨4 ;￨4 Assert￨4 .￨4 fail￨4 (￨4 out￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 boolean￨3 failure￨3 =￨3 false￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 expected￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 Assert￨5 .￨5 assertEquals￨5 (￨5 expected￨5 [￨5 i￨5 ]￨5 ,￨5 observed￨5 [￨5 i￨5 ]￨5 ,￨5 tolerance￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 AssertionFailedError￨5 ex￨5 )￨4 {￨4 failure￨5 =￨5 true￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 "\n<seq2seq4repair_space>Elements<seq2seq4repair_space>at<seq2seq4repair_space>index<seq2seq4repair_space>"￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 i￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>differ.<seq2seq4repair_space>"￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>expected<seq2seq4repair_space>=<seq2seq4repair_space>"￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 expected￨5 [￨5 i￨5 ]￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 "<seq2seq4repair_space>observed<seq2seq4repair_space>=<seq2seq4repair_space>"￨5 )￨5 ;￨5 out￨5 .￨5 append￨5 (￨5 observed￨5 [￨5 i￨5 ]￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 failure￨4 )￨3 {￨3 Assert￨4 .￨4 fail￨4 (￨4 out￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 <￨2 T￨2 extends￨2 FieldElement￨2 <￨2 T￨2 >￨2 >￨2 void￨2 assertEquals￨2 (￨2 T￨3 [￨3 ]￨3 m￨3 ,￨3 T￨3 [￨3 ]￨3 n￨3 )￨2 {￨2 }￨2 }￨1
class￨1 SearchableEnvironmentRequestor￨1 extends￨1 JavaElementRequestor￨1 {￨1 protected￨2 ISearchRequestor￨2 requestor￨2 ;￨2 protected￨2 ICompilationUnit￨2 unitToSkip￨2 ;￨2 protected￨2 IJavaProject￨2 project￨2 ;￨2 protected￨2 NameLookup￨2 nameLookup￨2 ;￨2 protected￨2 boolean￨2 checkAccessRestrictions￨2 ;￨2 public￨2 SearchableEnvironmentRequestor￨2 (￨2 ISearchRequestor￨3 requestor￨3 )￨2 {￨2 }￨2 public￨2 SearchableEnvironmentRequestor￨2 (￨2 ISearchRequestor￨3 requestor￨3 ,￨3 ICompilationUnit￨3 unitToSkip￨3 ,￨3 IJavaProject￨3 project￨3 ,￨3 NameLookup￨3 nameLookup￨3 )￨2 {￨2 }￨2 public￨2 void￨2 acceptInitializer￨2 (￨2 IInitializer￨3 initializer￨3 )￨2 {￨2 }￨2 public￨2 void￨2 acceptPackageFragment￨2 (￨2 IPackageFragment￨3 packageFragment￨3 )￨2 {￨2 }￨2 public￨2 void￨2 acceptType￨2 (￨2 IType￨3 type￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 this￨5 .￨5 unitToSkip￨5 )￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 this￨5 .￨5 unitToSkip￨5 .￨5 equals￨5 (￨5 type￨5 .￨5 getCompilationUnit￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 char￨4 [￨4 ]￨4 packageName￨4 =￨4 type￨4 .￨4 getPackageFragment￨4 (￨4 )￨4 .￨4 getElementName￨4 (￨4 )￨4 .￨4 toCharArray￨4 (￨4 )￨4 ;￨4 boolean￨4 isBinary￨4 =￨4 type￨4 instanceof￨4 BinaryType￨4 ;￨4 AccessRestriction￨4 accessRestriction￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 this￨5 .￨5 checkAccessRestrictions￨5 )￨5 &&￨5 (￨5 isBinary￨5 ||￨5 (￨5 !￨5 (￨5 type￨5 .￨5 getJavaProject￨5 (￨5 )￨5 .￨5 equals￨5 (￨5 this￨5 .￨5 project￨5 )￨5 )￨5 )￨5 )￨5 )￨4 {￨4 PackageFragmentRoot￨5 root￨5 =￨5 (￨5 (￨5 PackageFragmentRoot￨5 )￨5 (￨5 type￨5 .￨5 getAncestor￨5 (￨5 IJavaElement￨5 .￨5 PACKAGE_FRAGMENT_ROOT￨5 )￨5 )￨5 )￨5 ;￨5 ClasspathEntry￨5 entry￨5 =￨5 (￨5 (￨5 ClasspathEntry￨5 )￨5 (￨5 this￨5 .￨5 nameLookup￨5 .￨5 rootToResolvedEntries￨5 .￨5 get￨5 (￨5 root￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 entry￨6 !=￨6 null￨6 )￨5 {￨5 AccessRuleSet￨6 accessRuleSet￨6 =￨6 entry￨6 .￨6 getAccessRuleSet￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 accessRuleSet￨7 !=￨7 null￨7 )￨6 {￨6 char￨7 [￨7 ]￨7 [￨7 ]￨7 packageChars￨7 =￨7 CharOperation￨7 .￨7 splitOn￨7 (￨7 '.'￨7 ,￨7 packageName￨7 )￨7 ;￨7 char￨7 [￨7 ]￨7 fileChars￨7 =￨7 type￨7 .￨7 getParent￨7 (￨7 )￨7 .￨7 getElementName￨7 (￨7 )￨7 .￨7 toCharArray￨7 (￨7 )￨7 ;￨7 accessRestriction￨7 =￨7 accessRuleSet￨7 .￨7 getViolatedRestriction￨7 (￨7 CharOperation￨7 .￨7 concatWith￨7 (￨7 packageChars￨7 ,￨7 fileChars￨7 ,￨7 '/'￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 <START_BUG>￨4 this￨4 .￨4 requestor￨4 .￨4 acceptType￨4 (￨4 packageName￨4 ,￨4 type￨4 .￨4 getElementName￨4 (￨4 )￨4 .￨4 toCharArray￨4 (￨4 )￨4 ,￨4 type￨4 .￨4 getFlags￨4 (￨4 )￨4 ,￨4 accessRestriction￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 JavaModelException￨4 jme￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ParenthesizedExpression￨1 extends￨1 Expression￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 EXPRESSION_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 ParenthesizedExpression￨2 .￨2 class￨2 ,￨2 "expression"￨2 ,￨2 Expression￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 private￨2 Expression￨2 expression￨2 =￨2 null￨2 ;￨2 ParenthesizedExpression￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 ParenthesizedExpression￨3 result￨3 =￨3 new￨3 ParenthesizedExpression￨3 (￨3 target￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 setExpression￨3 (￨3 (￨3 (￨3 Expression￨3 )￨3 (￨3 getExpression￨3 (￨3 )￨3 .￨3 clone￨3 (￨3 target￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 getExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExpression￨2 (￨2 Expression￨3 expression￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TrecContentSourceTest￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 class￨2 StringableTrecSource￨2 extends￨2 TrecContentSource￨2 {￨2 private￨3 String￨3 docs￨3 =￨3 null￨3 ;￨3 public￨3 StringableTrecSource￨3 (￨3 String￨4 docs￨4 ,￨4 boolean￨4 forever￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 void￨3 openNextFile￨3 (￨3 )￨3 throws￨3 IOException￨3 ,￨3 NoMoreDataException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setConfig￨3 (￨3 Config￨4 config￨4 )￨3 {￨3 }￨3 }￨2 private￨2 void￨2 assertDocData￨2 (￨2 DocData￨2 dd￨2 ,￨2 String￨2 expName￨2 ,￨2 String￨2 expTitle￨2 ,￨2 String￨2 expBody￨2 ,￨2 Date￨2 expDate￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertNoMoreDataException￨2 (￨2 TrecContentSourceTest￨2 .￨2 StringableTrecSource￨2 stdm￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testOneDocument￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTwoDocuments￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMissingDate￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testBadDate￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testForever￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTrecFeedDirAllTypes￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 File￨3 dataDir￨3 =￨3 _TestUtil￨3 .￨3 getTempDir￨3 (￨3 "trecFeedAllTypes"￨3 )￨3 ;￨3 _TestUtil￨3 .￨3 unzip￨3 (￨3 getDataFile￨3 (￨3 "trecdocs.zip"￨3 )￨3 ,￨3 dataDir￨3 )￨3 ;￨3 TrecContentSource￨3 tcs￨3 =￨3 new￨3 TrecContentSource￨3 (￨3 )￨3 ;￨3 Properties￨3 props￨3 =￨3 new￨3 Properties￨3 (￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "print.props"￨3 ,￨3 "false"￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "content.source.verbose"￨3 ,￨3 "false"￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "content.source.excludeIteration"￨3 ,￨3 "true"￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "doc.maker.forever"￨3 ,￨3 "false"￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "docs.dir"￨3 ,￨3 dataDir￨3 .￨3 getCanonicalPath￨3 (￨3 )￨3 .￨3 replace￨3 (￨3 '\\'￨3 ,￨3 '/'￨3 )￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "trec.doc.parser"￨3 ,￨3 TrecParserByPath￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 props￨3 .￨3 setProperty￨3 (￨3 "content.source.forever"￨3 ,￨3 "false"￨3 )￨3 ;￨3 tcs￨3 .￨3 setConfig￨3 (￨3 new￨3 Config￨3 (￨3 props￨3 )￨3 )￨3 ;￨3 tcs￨3 .￨3 resetInputs￨3 (￨3 )￨3 ;￨3 DocData￨3 dd￨3 =￨3 new￨3 DocData￨3 (￨3 )￨3 ;￨3 int￨3 n￨3 =￨3 0￨3 ;￨3 boolean￨3 gotExpectedException￨3 =￨3 false￨3 ;￨3 HashSet￨3 <￨3 ParsePathType￨3 >￨3 unseenTypes￨3 =￨3 new￨3 HashSet￨3 <￨3 ParsePathType￨3 >￨3 (￨3 Arrays￨3 .￨3 asList￨3 (￨3 ParsePathType￨3 .￨3 values￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 try￨3 {￨3 while￨4 (￨4 n￨5 <￨5 100￨5 )￨4 {￨4 dd￨5 =￨5 tcs￨5 .￨5 getNextDocData￨5 (￨5 dd￨5 )￨5 ;￨5 ++￨5 n￨5 ;￨5 assertNotNull￨5 (￨5 (￨5 (￨5 "doc<seq2seq4repair_space>data<seq2seq4repair_space>"￨5 +￨5 n￨5 )￨5 +￨5 "<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null!"￨5 )￨5 ,￨5 dd￨5 )￨5 ;￨5 unseenTypes￨5 .￨5 remove￨5 (￨5 tcs￨5 .￨5 currPathType￨5 )￨5 ;￨5 switch￨5 (￨5 tcs￨5 .￨5 currPathType￨5 )￨5 {￨5 case￨6 GOV2￨6 :￨6 assertDocData￨7 (￨7 dd￨7 ,￨7 "TEST-000"￨7 ,￨7 "TEST-000<seq2seq4repair_space>title"￨7 ,￨7 "TEST-000<seq2seq4repair_space>text"￨7 ,￨7 tcs￨7 .￨7 parseDate￨7 (￨7 "Sun,<seq2seq4repair_space>11<seq2seq4repair_space>Jan<seq2seq4repair_space>2009<seq2seq4repair_space>08:00:00<seq2seq4repair_space>GMT"￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 FBIS￨6 :￨6 assertDocData￨7 (￨7 dd￨7 ,￨7 "TEST-001"￨7 ,￨7 "TEST-001<seq2seq4repair_space>Title"￨7 ,￨7 "TEST-001<seq2seq4repair_space>text"￨7 ,￨7 tcs￨7 .￨7 parseDate￨7 (￨7 "1<seq2seq4repair_space>January<seq2seq4repair_space>1991"￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 FR94￨6 :￨6 assertDocData￨7 (￨7 dd￨7 ,￨7 "TEST-002"￨7 ,￨7 null￨7 ,￨7 "DEPARTMENT<seq2seq4repair_space>OF<seq2seq4repair_space>SOMETHING"￨7 ,￨7 tcs￨7 .￨7 parseDate￨7 (￨7 "February<seq2seq4repair_space>3,<seq2seq4repair_space>1994"￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 FT￨6 :￨6 assertDocData￨7 (￨7 dd￨7 ,￨7 "TEST-003"￨7 ,￨7 "Test-003<seq2seq4repair_space>title"￨7 ,￨7 "Some<seq2seq4repair_space>pub<seq2seq4repair_space>text"￨7 ,￨7 tcs￨7 .￨7 parseDate￨7 (￨7 "980424"￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 LATIMES￨6 :￨6 assertDocData￨7 (￨7 dd￨7 ,￨7 "TEST-004"￨7 ,￨7 "Test-004<seq2seq4repair_space>Title"￨7 ,￨7 "Some<seq2seq4repair_space>paragraph"￨7 ,￨7 tcs￨7 .￨7 parseDate￨7 (￨7 "January<seq2seq4repair_space>17,<seq2seq4repair_space>1997,<seq2seq4repair_space>Sunday"￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 default￨6 :￨6 assertTrue￨7 (￨7 "Should<seq2seq4repair_space>never<seq2seq4repair_space>get<seq2seq4repair_space>here!"￨7 ,￨7 false￨7 )￨7 ;￨7 }￨5 }￨4 }￨3 catch￨3 (￨3 NoMoreDataException￨4 e￨4 )￨3 {￨3 gotExpectedException￨4 =￨4 true￨4 ;￨4 }￨3 assertTrue￨3 (￨3 "Should<seq2seq4repair_space>have<seq2seq4repair_space>gotten<seq2seq4repair_space>NoMoreDataException!"￨3 ,￨3 gotExpectedException￨3 )￨3 ;￨3 <START_BUG>￨3 assertEquals￨3 (￨3 "Wrong<seq2seq4repair_space>numbre<seq2seq4repair_space>of<seq2seq4repair_space>documents<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>osurce!"￨3 ,￨3 5￨3 ,￨3 n￨3 )￨3 ;￨3 <END_BUG>￨3 assertTrue￨3 (￨3 "Did<seq2seq4repair_space>not<seq2seq4repair_space>see<seq2seq4repair_space>all<seq2seq4repair_space>types!"￨3 ,￨3 unseenTypes￨3 .￨3 isEmpty￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 TreeSelectionManager￨1 extends￨1 SelectionManager￨1 {￨1 protected￨2 FolderTreeNode￨2 folder￨2 ;￨2 protected￨2 Vector￨2 treeListenerList￨2 ;￨2 public￨2 TreeSelectionManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FolderTreeNode￨2 getFolder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addFolderSelectionListener￨2 (￨2 FolderSelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 fireFolderSelectionEvent￨2 (￨2 FolderTreeNode￨3 oldFolder￨3 ,￨3 FolderTreeNode￨3 newFolder￨3 )￨2 {￨2 }￨2 public￨2 DefaultCommandReference￨2 [￨2 ]￨2 getSelection￨2 (￨2 )￨2 {￨2 log￨3 .￨3 info￨3 (￨3 (￨3 "folder="￨3 +￨3 (￨3 folder￨3 )￨3 )￨3 )￨3 ;￨3 FolderCommandReference￨3 [￨3 ]￨3 references￨3 =￨3 new￨3 FolderCommandReference￨3 [￨3 1￨3 ]￨3 ;￨3 <START_BUG>￨3 references￨3 [￨3 0￨3 ]￨3 =￨3 new￨3 FolderCommandReference￨3 (￨3 (￨3 (￨3 Folder￨3 )￨3 (￨3 folder￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 references￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 Snippet83￨1 extends￨1 ByteArrayTransfer￨1 {￨1 private￨2 static￨2 Snippet83￨2 _instance￨2 =￨2 new￨2 Snippet83￨2 (￨2 )￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 ids￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 names￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 Display￨3 display￨3 =￨3 new￨3 Display￨3 (￨3 )￨3 ;￨3 Shell￨3 shell￨3 =￨3 new￨3 Shell￨3 (￨3 display￨3 )￨3 ;￨3 shell￨3 .￨3 setLayout￨3 (￨3 new￨3 FillLayout￨3 (￨3 )￨3 )￨3 ;￨3 Canvas￨3 canvas￨3 =￨3 new￨3 Canvas￨3 (￨3 shell￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 DropTarget￨3 target￨3 =￨3 new￨3 DropTarget￨3 (￨3 canvas￨3 ,￨3 (￨3 (￨3 DND￨3 .￨3 DROP_DEFAULT￨3 )￨3 |￨3 (￨3 DND￨3 .￨3 DROP_LINK￨3 )￨3 )￨3 )￨3 ;￨3 target￨3 .￨3 setTransfer￨3 (￨3 new￨3 Transfer￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 )￨3 ;￨3 target￨3 .￨3 addDropListener￨3 (￨3 new￨3 DropTargetAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 dragEnter￨4 (￨4 DropTargetEvent￨5 event￨5 )￨4 {￨4 <START_BUG>￨5 String￨5 ops￨5 =￨5 null￨5 ;￨5 <END_BUG>￨5 if￨5 (￨5 (￨6 (￨6 event￨6 .￨6 operations￨6 )￨6 &￨6 (￨6 DND￨6 .￨6 DROP_COPY￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 ops￨6 +=￨6 "Copy;"￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 (￨6 event￨6 .￨6 operations￨6 )￨6 &￨6 (￨6 DND￨6 .￨6 DROP_MOVE￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 ops￨6 +=￨6 "Move;"￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 (￨6 event￨6 .￨6 operations￨6 )￨6 &￨6 (￨6 DND￨6 .￨6 DROP_LINK￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 ops￨6 +=￨6 "Link;"￨6 ;￨6 }￨5 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 (￨5 "Allowed<seq2seq4repair_space>Operations<seq2seq4repair_space>are<seq2seq4repair_space>"￨5 +￨5 ops￨5 )￨5 )￨5 ;￨5 TransferData￨5 [￨5 ]￨5 data￨5 =￨5 event￨5 .￨5 dataTypes￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 data￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 int￨6 id￨6 =￨6 data￨6 [￨6 i￨6 ]￨6 .￨6 type￨6 ;￨6 String￨6 name￨6 =￨6 Snippet83￨6 .￨6 getNameFromId￨6 (￨6 id￨6 )￨6 ;￨6 System￨6 .￨6 out￨6 .￨6 println￨6 (￨6 (￨6 (￨6 (￨6 "Data<seq2seq4repair_space>type<seq2seq4repair_space>is<seq2seq4repair_space>"￨6 +￨6 id￨6 )￨6 +￨6 "<seq2seq4repair_space>"￨6 )￨6 +￨6 name￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 shell￨3 .￨3 setSize￨3 (￨3 400￨3 ,￨3 400￨3 )￨3 ;￨3 shell￨3 .￨3 open￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 !￨4 (￨4 shell￨4 .￨4 isDisposed￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 display￨5 .￨5 readAndDispatch￨5 (￨5 )￨5 )￨5 )￨4 {￨4 display￨5 .￨5 sleep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 display￨3 .￨3 dispose￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 Snippet83￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 Snippet83￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 javaToNative￨2 (￨2 Object￨3 object￨3 ,￨3 TransferData￨3 transferData￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 nativeToJava￨2 (￨2 TransferData￨3 transferData￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 [￨2 ]￨2 getTypeNames￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 [￨2 ]￨2 getTypeIds￨2 (￨2 )￨2 {￨2 }￨2 static￨2 String￨2 getNameFromId￨2 (￨2 int￨3 id￨3 )￨2 {￨2 }￨2 }￨1
class￨1 CTabFolderTab￨1 extends￨1 Tab￨1 {￨1 int￨2 lastSelectedTab￨2 =￨2 0￨2 ;￨2 CTabFolder￨2 tabFolder1￨2 ;￨2 Group￨2 tabFolderGroup￨2 ;￨2 Group￨2 itemGroup￨2 ;￨2 Button￨2 topButton￨2 ;￨2 Button￨2 bottomButton￨2 ;￨2 Button￨2 flatButton￨2 ;￨2 Button￨2 closeButton￨2 ;￨2 static￨2 String￨2 [￨2 ]￨2 CTabItems1￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 Button￨2 foregroundSelectionButton￨2 ;￨2 Button￨2 backgroundSelectionButton￨2 ;￨2 Button￨2 itemFontButton￨2 ;￨2 Image￨2 foregroundSelectionImage￨2 ;￨2 Image￨2 backgroundSelectionImage￨2 ;￨2 Color￨2 foregroundSelectionColor￨2 ;￨2 Color￨2 backgroundSelectionColor￨2 ;￨2 Font￨2 itemFont￨2 ;￨2 Button￨2 simpleTabButton￨2 ;￨2 Button￨2 singleTabButton￨2 ;￨2 Button￨2 imageButton￨2 ;￨2 Button￨2 showMinButton￨2 ;￨2 Button￨2 showMaxButton￨2 ;￨2 Button￨2 unselectedCloseButton￨2 ;￨2 Button￨2 unselectedImageButton￨2 ;￨2 CTabFolderTab￨2 (￨2 ControlExample￨3 instance￨3 )￨2 {￨2 }￨2 void￨2 createColorGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createOtherGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createStyleGroup￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 getCustomEventNames￨2 (￨2 )￨2 {￨2 }￨2 Item￨2 [￨2 ]￨2 getExampleWidgetItems￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 getExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getTabText￨2 (￨2 )￨2 {￨2 }￨2 void￨2 hookCustomListener￨2 (￨2 final￨3 String￨3 eventName￨3 )￨2 {￨2 if￨3 (￨3 eventName￨4 ==￨4 "CTabFolderEvent"￨4 )￨3 {￨3 tabFolder1￨4 .￨4 addCTabFolder2Listener￨4 (￨4 new￨4 CTabFolder2Adapter￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 public￨5 void￨5 itemClosed￨5 (￨5 CTabFolderEvent￨5 event￨5 )￨5 {￨5 <END_BUG>￨5 log￨5 (￨5 eventName￨5 ,￨5 event￨5 )￨5 ;￨5 }￨4 )￨4 ;￨4 }￨3 }￨2 void￨2 resetColorsAndFonts￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetForeground￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetBackground￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetFont￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetState￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setSimpleTabs￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setSingleTabs￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setImages￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setMinimizeVisible￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setMaximizeVisible￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setUnselectedCloseVisible￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setUnselectedImageVisible￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setItemFont￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ContextAdmin￨1 {￨1 private￨2 ContextManager￨2 cm￨2 ;￨2 private￨2 Request￨2 realRequest￨2 ;￨2 private￨2 String￨2 submit￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 addContextPath￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 addContextDocBase￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 removeContextName￨2 =￨2 null￨2 ;￨2 public￨2 void￨2 setSubmit￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAddContextPath￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAddContextDocBase￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRemoveContextName￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 HttpServletRequest￨3 request￨3 )￨2 {￨2 }￨2 public￨2 Enumeration￨2 getContextNames￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getContextInfo￨2 (￨2 String￨3 contextName￨3 )￨2 {￨2 (￨3 Enumeration￨3 )￨3 ++￨3 ;￨3 String￨3 key￨3 ;￨3 Context￨3 context￨3 ;￨3 Vector￨3 v￨3 =￨3 new￨3 Vector￨3 (￨3 )￨3 ;￨3 context￨3 =￨3 cm￨3 .￨3 getContext￨3 (￨3 contextName￨3 )￨3 ;￨3 v￨3 .￨3 addElement￨3 (￨3 (￨3 "DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨3 +￨3 (￨3 context￨3 .￨3 getDocBase￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 v￨3 .￨3 addElement￨3 (￨3 (￨3 "FULL<seq2seq4repair_space>DOC<seq2seq4repair_space>BASE:<seq2seq4repair_space>"￨3 +￨3 (￨3 context￨3 .￨3 getDocumentBase￨3 (￨3 )￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 v￨3 .￨3 addElement￨3 (￨3 (￨3 "PATH:<seq2seq4repair_space>"￨3 +￨3 (￨3 context￨3 .￨3 getPath￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 context￨4 .￨4 getWorkDir￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 v￨4 .￨4 addElement￨4 (￨4 (￨4 "WORK<seq2seq4repair_space>DIR:<seq2seq4repair_space>"￨4 +￨4 (￨4 RequestUtil￨4 .￨4 URLDecode￨4 (￨4 context￨4 .￨4 getWorkDir￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 v￨3 .￨3 addElement￨3 (￨3 (￨3 "DESCRIPTION:<seq2seq4repair_space>"￨3 +￨3 (￨3 context￨3 .￨3 getDescription￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 v￨3 .￨3 addElement￨3 (￨3 (￨3 "SESSION<seq2seq4repair_space>TIMEOUT:<seq2seq4repair_space>"￨3 +￨3 (￨3 new￨3 Integer￨3 (￨3 context￨3 .￨3 getSessionTimeOut￨3 (￨3 )￨3 )￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 addContext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 removeContext￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FileUtils￨1 {￨1 private￨2 static￨2 Random￨2 rand￨2 =￨2 new￨2 Random￨2 (￨2 System￨2 .￨2 currentTimeMillis￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 Object￨2 lockReflection￨2 =￨2 new￨2 Object￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 Method￨2 setLastModified￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 onNetWare￨2 =￨2 Os￨2 .￨2 isFamily￨2 (￨2 "netware"￨2 )￨2 ;￨2 private￨2 static￨2 boolean￨2 [￨2 ]￨2 isSpecial￨2 =￨2 new￨2 boolean￨2 [￨2 256￨2 ]￨2 ;￨2 private￨2 static￨2 char￨2 [￨2 ]￨2 escapedChar1￨2 =￨2 new￨2 char￨2 [￨2 256￨2 ]￨2 ;￨2 private￨2 static￨2 char￨2 [￨2 ]￨2 escapedChar2￨2 =￨2 new￨2 char￨2 [￨2 256￨2 ]￨2 ;￨2 public￨2 static￨2 FileUtils￨2 newFileUtils￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 FileUtils￨2 (￨2 )￨2 {￨2 }￨2 public￨2 URL￨2 getFileURL￨2 (￨2 File￨2 file￨2 )￨2 throws￨2 MalformedURLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 Vector￨2 filterChains￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 encoding￨2 ,￨2 Project￨2 project￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 String￨2 sourceFile￨2 ,￨2 String￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 Vector￨2 filterChains￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 inputEncoding￨2 ,￨2 String￨2 outputEncoding￨2 ,￨2 Project￨2 project￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 Vector￨2 filterChains￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 encoding￨2 ,￨2 Project￨2 project￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copyFile￨2 (￨2 File￨2 sourceFile￨2 ,￨2 File￨2 destFile￨2 ,￨2 FilterSetCollection￨2 filters￨2 ,￨2 Vector￨2 filterChains￨2 ,￨2 boolean￨2 overwrite￨2 ,￨2 boolean￨2 preserveLastModified￨2 ,￨2 String￨2 inputEncoding￨2 ,￨2 String￨2 outputEncoding￨2 ,￨2 Project￨2 project￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 Method￨2 getSetLastModified￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFileLastModified￨2 (￨2 File￨2 file￨2 ,￨2 long￨2 time￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 File￨2 resolveFile￨2 (￨2 File￨3 file￨3 ,￨3 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 File￨2 normalize￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 File￨2 createTempFile￨2 (￨2 String￨3 prefix￨3 ,￨3 String￨3 suffix￨3 ,￨3 File￨3 parentDir￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 contentEquals￨2 (￨2 File￨2 f1￨2 ,￨2 File￨2 f2￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 File￨2 getParentFile￨2 (￨2 File￨3 f￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 String￨2 readFully￨2 (￨2 Reader￨2 rdr￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 String￨2 readFully￨2 (￨2 Reader￨2 rdr￨2 ,￨2 int￨2 bufferSize￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 createNewFile￨2 (￨2 File￨2 f￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSymbolicLink￨2 (￨2 File￨2 parent￨2 ,￨2 String￨2 name￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 removeLeadingPath￨2 (￨2 File￨3 leading￨3 ,￨3 File￨3 path￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toURI￨2 (￨2 String￨3 path￨3 )￨2 {￨2 boolean￨3 isDir￨3 =￨3 new￨3 File￨3 (￨3 path￨3 )￨3 .￨3 isDirectory￨3 (￨3 )￨3 ;￨3 StringBuffer￨3 sb￨3 =￨3 new￨3 StringBuffer￨3 (￨3 "file:"￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 path￨4 =￨4 normalize￨4 (￨4 path￨4 )￨4 .￨4 getAbsolutePath￨4 (￨4 )￨4 ;￨4 sb￨4 .￨4 append￨4 (￨4 "//"￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 !￨4 (￨4 path￨4 .￨4 startsWith￨4 (￨4 "/"￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 sb￨4 .￨4 append￨4 (￨4 "/"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 BuildException￨4 e￨4 )￨3 {￨3 }￨3 path￨3 =￨3 path￨3 .￨3 replace￨3 (￨3 '\\'￨3 ,￨3 '/'￨3 )￨3 ;￨3 CharacterIterator￨3 iter￨3 =￨3 new￨3 StringCharacterIterator￨3 (￨3 path￨3 )￨3 ;￨3 for￨3 (￨3 char￨4 c￨4 =￨4 iter￨4 .￨4 first￨4 (￨4 )￨4 ;￨4 c￨4 !=￨4 (￨4 CharacterIterator￨4 .￨4 DONE￨4 )￨4 ;￨4 c￨4 =￨4 iter￨4 .￨4 next￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 FileUtils￨5 .￨5 isSpecial￨5 [￨5 c￨5 ]￨5 )￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 '%'￨5 )￨5 ;￨5 sb￨5 .￨5 append￨5 (￨5 FileUtils￨5 .￨5 escapedChar1￨5 [￨5 c￨5 ]￨5 )￨5 ;￨5 sb￨5 .￨5 append￨5 (￨5 FileUtils￨5 .￨5 escapedChar2￨5 [￨5 c￨5 ]￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 c￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 isDir￨4 &&￨4 (￨4 !￨4 (￨4 path￨4 .￨4 endsWith￨4 (￨4 "/"￨4 )￨4 )￨4 )￨4 )￨3 {￨3 sb￨4 .￨4 append￨4 (￨4 '/'￨4 )￨4 ;￨4 }￨3 return￨3 sb￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 fromURI￨2 (￨2 String￨3 uri￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 fileNameEquals￨2 (￨2 File￨3 f1￨3 ,￨3 File￨3 f2￨3 )￨2 {￨2 }￨2 public￨2 void￨2 rename￨2 (￨2 File￨2 from￨2 ,￨2 File￨2 to￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestThreadedForceMerge￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 Analyzer￨2 ANALYZER￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 NUM_THREADS￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 NUM_ITER￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 NUM_ITER2￨2 =￨2 1￨2 ;￨2 private￨2 volatile￨2 boolean￨2 failed￨2 ;￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 setup￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 setFailed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 runTest￨2 (￨2 Random￨2 random￨2 ,￨2 Directory￨2 directory￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 IndexWriter￨3 writer￨3 =￨3 new￨3 IndexWriter￨3 (￨3 directory￨3 ,￨3 newIndexWriterConfig￨3 (￨3 TEST_VERSION_CURRENT￨3 ,￨3 TestThreadedForceMerge￨3 .￨3 ANALYZER￨3 )￨3 .￨3 setOpenMode￨3 (￨3 CREATE￨3 )￨3 .￨3 setMaxBufferedDocs￨3 (￨3 2￨3 )￨3 .￨3 setMergePolicy￨3 (￨3 newLogMergePolicy￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 iter￨4 =￨4 0￨4 ;￨4 iter￨4 <￨4 (￨4 TestThreadedForceMerge￨4 .￨4 NUM_ITER￨4 )￨4 ;￨4 iter￨4 ++￨4 )￨3 {￨3 final￨4 int￨4 iterFinal￨4 =￨4 iter￨4 ;￨4 (￨4 (￨4 LogMergePolicy￨4 )￨4 (￨4 writer￨4 .￨4 getConfig￨4 (￨4 )￨4 .￨4 getMergePolicy￨4 (￨4 )￨4 )￨4 )￨4 .￨4 setMergeFactor￨4 (￨4 1000￨4 )￨4 ;￨4 final￨4 FieldType￨4 customType￨4 =￨4 new￨4 FieldType￨4 (￨4 StringField￨4 .￨4 TYPE_STORED￨4 )￨4 ;￨4 customType￨4 .￨4 setOmitNorms￨4 (￨4 true￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 200￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 Document￨5 d￨5 =￨5 new￨5 Document￨5 (￨5 )￨5 ;￨5 d￨5 .￨5 add￨5 (￨5 newField￨5 (￨5 "id"￨5 ,￨5 Integer￨5 .￨5 toString￨5 (￨5 i￨5 )￨5 ,￨5 customType￨5 )￨5 )￨5 ;￨5 d￨5 .￨5 add￨5 (￨5 newField￨5 (￨5 "contents"￨5 ,￨5 English￨5 .￨5 intToEnglish￨5 (￨5 i￨5 )￨5 ,￨5 customType￨5 )￨5 )￨5 ;￨5 writer￨5 .￨5 addDocument￨5 (￨5 d￨5 )￨5 ;￨5 }￨4 (￨4 (￨4 LogMergePolicy￨4 )￨4 (￨4 writer￨4 .￨4 getConfig￨4 (￨4 )￨4 .￨4 getMergePolicy￨4 (￨4 )￨4 )￨4 )￨4 .￨4 setMergeFactor￨4 (￨4 4￨4 )￨4 ;￨4 Thread￨4 [￨4 ]￨4 threads￨4 =￨4 new￨4 Thread￨4 [￨4 TestThreadedForceMerge￨4 .￨4 NUM_THREADS￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 TestThreadedForceMerge￨5 .￨5 NUM_THREADS￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 final￨5 int￨5 iFinal￨5 =￨5 i￨5 ;￨5 final￨5 IndexWriter￨5 writerFinal￨5 =￨5 writer￨5 ;￨5 threads￨5 [￨5 i￨5 ]￨5 =￨5 new￨5 Thread￨5 (￨5 )￨5 {￨5 @￨6 Override￨6 public￨6 void￨6 run￨6 (￨6 )￨6 {￨6 try￨7 (￨7 )￨7 {￨7 for￨8 (￨8 int￨9 j￨9 =￨9 0￨9 ;￨9 j￨9 <￨9 (￨9 TestThreadedForceMerge￨9 .￨9 NUM_ITER2￨9 )￨9 ;￨9 j￨9 ++￨9 )￨8 {￨8 writerFinal￨9 .￨9 forceMerge￨9 (￨9 1￨9 ,￨9 false￨9 )￨9 ;￨9 for￨9 (￨9 int￨10 k￨10 =￨10 0￨10 ;￨10 k￨10 <￨10 (￨10 17￨10 *￨10 (￨10 1￨10 +￨10 iFinal￨10 )￨10 )￨10 ;￨10 k￨10 ++￨10 )￨9 {￨9 Document￨10 d￨10 =￨10 new￨10 Document￨10 (￨10 )￨10 ;￨10 d￨10 .￨10 add￨10 (￨10 newField￨10 (￨10 "id"￨10 ,￨10 (￨10 (￨10 (￨10 (￨10 (￨10 (￨10 iterFinal￨10 +￨10 "_"￨10 )￨10 +￨10 iFinal￨10 )￨10 +￨10 "_"￨10 )￨10 +￨10 j￨10 )￨10 +￨10 "_"￨10 )￨10 +￨10 k￨10 )￨10 ,￨10 customType￨10 )￨10 )￨10 ;￨10 d￨10 .￨10 add￨10 (￨10 newField￨10 (￨10 "contents"￨10 ,￨10 English￨10 .￨10 intToEnglish￨10 (￨10 (￨10 iFinal￨10 +￨10 k￨10 )￨10 )￨10 ,￨10 customType￨10 )￨10 )￨10 ;￨10 writerFinal￨10 .￨10 addDocument￨10 (￨10 d￨10 )￨10 ;￨10 }￨9 for￨9 (￨9 int￨10 k￨10 =￨10 0￨10 ;￨10 k￨10 <￨10 (￨10 9￨10 *￨10 (￨10 1￨10 +￨10 iFinal￨10 )￨10 )￨10 ;￨10 k￨10 ++￨10 )￨9 {￨9 writerFinal￨10 .￨10 deleteDocuments￨10 (￨10 new￨10 Term￨10 (￨10 "id"￨10 ,￨10 (￨10 (￨10 (￨10 (￨10 (￨10 (￨10 iterFinal￨10 +￨10 "_"￨10 )￨10 +￨10 iFinal￨10 )￨10 +￨10 "_"￨10 )￨10 +￨10 j￨10 )￨10 +￨10 "_"￨10 )￨10 +￨10 k￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 writerFinal￨9 .￨9 forceMerge￨9 (￨9 1￨9 )￨9 ;￨9 }￨8 }￨7 catch￨7 (￨7 Throwable￨8 t￨8 )￨7 {￨7 setFailed￨8 (￨8 )￨8 ;￨8 System￨8 .￨8 out￨8 .￨8 println￨8 (￨8 (￨8 (￨8 Thread￨8 .￨8 currentThread￨8 (￨8 )￨8 .￨8 getName￨8 (￨8 )￨8 )￨8 +￨8 ":<seq2seq4repair_space>hit<seq2seq4repair_space>exception"￨8 )￨8 )￨8 ;￨8 t￨8 .￨8 printStackTrace￨8 (￨8 System￨8 .￨8 out￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 ;￨5 }￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 TestThreadedForceMerge￨5 .￨5 NUM_THREADS￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 threads￨5 [￨5 i￨5 ]￨5 .￨5 start￨5 (￨5 )￨5 ;￨5 }￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 TestThreadedForceMerge￨5 .￨5 NUM_THREADS￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 threads￨5 [￨5 i￨5 ]￨5 .￨5 join￨5 (￨5 )￨5 ;￨5 }￨4 assertTrue￨4 (￨4 (￨4 !￨4 (￨4 failed￨4 )￨4 )￨4 )￨4 ;￨4 final￨4 int￨4 expectedDocCount￨4 =￨4 (￨4 (￨4 int￨4 )￨4 (￨4 (￨4 1￨4 +￨4 iter￨4 )￨4 *￨4 (￨4 200￨4 +￨4 (￨4 (￨4 (￨4 8￨4 *￨4 (￨4 TestThreadedForceMerge￨4 .￨4 NUM_ITER2￨4 )￨4 )￨4 *￨4 (￨4 (￨4 TestThreadedForceMerge￨4 .￨4 NUM_THREADS￨4 )￨4 /￨4 2.0￨4 )￨4 )￨4 *￨4 (￨4 1￨4 +￨4 (￨4 TestThreadedForceMerge￨4 .￨4 NUM_THREADS￨4 )￨4 )￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 assertEquals￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 "index="￨4 +￨4 (￨4 writer￨4 .￨4 segString￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>numDocs="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 numDocs￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>maxDoc="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 maxDoc￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>config="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 getConfig￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 expectedDocCount￨4 ,￨4 writer￨4 .￨4 numDocs￨4 (￨4 )￨4 )￨4 ;￨4 assertEquals￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 "index="￨4 +￨4 (￨4 writer￨4 .￨4 segString￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>numDocs="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 numDocs￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>maxDoc="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 maxDoc￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>config="￨4 )￨4 +￨4 (￨4 writer￨4 .￨4 getConfig￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 expectedDocCount￨4 ,￨4 writer￨4 .￨4 maxDoc￨4 (￨4 )￨4 )￨4 ;￨4 writer￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 writer￨4 =￨4 new￨4 IndexWriter￨4 (￨4 directory￨4 ,￨4 newIndexWriterConfig￨4 (￨4 TEST_VERSION_CURRENT￨4 ,￨4 TestThreadedForceMerge￨4 .￨4 ANALYZER￨4 )￨4 .￨4 setOpenMode￨4 (￨4 APPEND￨4 )￨4 .￨4 setMaxBufferedDocs￨4 (￨4 2￨4 )￨4 )￨4 ;￨4 DirectoryReader￨4 reader￨4 =￨4 DirectoryReader￨4 .￨4 open￨4 (￨4 directory￨4 )￨4 ;￨4 <START_BUG>￨4 assertEquals￨4 (￨4 (￨4 "reader="￨4 +￨4 reader￨4 )￨4 ,￨4 1￨4 ,￨4 reader￨4 .￨4 getSequentialSubReaders￨4 (￨4 )￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 assertEquals￨4 (￨4 expectedDocCount￨4 ,￨4 reader￨4 .￨4 numDocs￨4 (￨4 )￨4 )￨4 ;￨4 reader￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 writer￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testThreadedForceMerge￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 KohonenUpdateActionTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testUpdate￨2 (￨2 )￨2 {￨2 final￨3 FeatureInitializer￨3 init￨3 =￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 commons￨3 .￨3 math3￨3 .￨3 ml￨3 .￨3 neuralnet￨3 .￨3 OffsetFeatureInitializer￨3 (￨3 FeatureInitializerFactory￨3 .￨3 uniform￨3 (￨3 0￨3 ,￨3 0.1￨3 )￨3 )￨3 ;￨3 final￨3 FeatureInitializer￨3 [￨3 ]￨3 initArray￨3 =￨3 new￨3 FeatureInitializer￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 final￨3 int￨3 netSize￨3 =￨3 3￨3 ;￨3 final￨3 Network￨3 net￨3 =￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 commons￨3 .￨3 math3￨3 .￨3 ml￨3 .￨3 neuralnet￨3 .￨3 oned￨3 .￨3 NeuronString￨3 (￨3 netSize￨3 ,￨3 false￨3 ,￨3 initArray￨3 )￨3 .￨3 getNetwork￨3 (￨3 )￨3 ;￨3 final￨3 DistanceMeasure￨3 dist￨3 =￨3 new￨3 EuclideanDistance￨3 (￨3 )￨3 ;￨3 final￨3 LearningFactorFunction￨3 learning￨3 =￨3 LearningFactorFunctionFactory￨3 .￨3 exponentialDecay￨3 (￨3 1￨3 ,￨3 0.1￨3 ,￨3 100￨3 )￨3 ;￨3 final￨3 NeighbourhoodSizeFunction￨3 neighbourhood￨3 =￨3 NeighbourhoodSizeFunctionFactory￨3 .￨3 exponentialDecay￨3 (￨3 3￨3 ,￨3 1￨3 ,￨3 100￨3 )￨3 ;￨3 final￨3 UpdateAction￨3 update￨3 =￨3 new￨3 KohonenUpdateAction￨3 (￨3 dist￨3 ,￨3 learning￨3 ,￨3 neighbourhood￨3 )￨3 ;￨3 final￨3 double￨3 [￨3 ]￨3 features￨3 =￨3 new￨3 double￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 final￨3 double￨3 [￨3 ]￨3 distancesBefore￨3 =￨3 new￨3 double￨3 [￨3 netSize￨3 ]￨3 ;￨3 int￨3 count￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 Neuron￨4 n￨4 :￨4 net￨4 )￨3 {￨3 distancesBefore￨4 [￨4 (￨4 count￨4 ++￨4 )￨4 ]￨4 =￨4 dist￨4 .￨4 compute￨4 (￨4 n￨4 .￨4 getFeatures￨4 (￨4 )￨4 ,￨4 features￨4 )￨4 ;￨4 }￨3 final￨3 Neuron￨3 bestBefore￨3 =￨3 MapUtils￨3 .￨3 findBest￨3 (￨3 features￨3 ,￨3 net￨3 ,￨3 dist￨3 )￨3 ;￨3 <START_BUG>￨3 Assert￨3 .￨3 assertTrue￨3 (￨3 (￨3 (￨3 dist￨3 .￨3 compute￨3 (￨3 bestBefore￨3 .￨3 getFeatures￨3 (￨3 )￨3 ,￨3 features￨3 )￨3 )￨3 >=￨3 (￨3 0.2￨3 *￨3 0.2￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 update￨3 .￨3 update￨3 (￨3 net￨3 ,￨3 features￨3 )￨3 ;￨3 final￨3 double￨3 [￨3 ]￨3 distancesAfter￨3 =￨3 new￨3 double￨3 [￨3 netSize￨3 ]￨3 ;￨3 count￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 Neuron￨4 n￨4 :￨4 net￨4 )￨3 {￨3 distancesAfter￨4 [￨4 (￨4 count￨4 ++￨4 )￨4 ]￨4 =￨4 dist￨4 .￨4 compute￨4 (￨4 n￨4 .￨4 getFeatures￨4 (￨4 )￨4 ,￨4 features￨4 )￨4 ;￨4 }￨3 final￨3 Neuron￨3 bestAfter￨3 =￨3 MapUtils￨3 .￨3 findBest￨3 (￨3 features￨3 ,￨3 net￨3 ,￨3 dist￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 bestBefore￨3 ,￨3 bestAfter￨3 )￨3 ;￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 0￨3 ,￨3 dist￨3 .￨3 compute￨3 (￨3 bestAfter￨3 .￨3 getFeatures￨3 (￨3 )￨3 ,￨3 features￨3 )￨3 ,￨3 0.0￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 netSize￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 Assert￨4 .￨4 assertTrue￨4 (￨4 (￨4 (￨4 distancesAfter￨4 [￨4 i￨4 ]￨4 )￨4 <￨4 (￨4 distancesBefore￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 BooleanLiteral￨1 extends￨1 Expression￨1 {￨1 private￨2 boolean￨2 value￨2 =￨2 false￨2 ;￨2 BooleanLiteral￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getNodeType￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 subtreeMatch￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 <START_BUG>￨3 boolean￨3 visitChildren￨3 =￨3 visitor￨3 .￨3 visit￨3 (￨3 this￨3 )￨3 ;￨3 <END_BUG>￨3 visitor￨3 .￨3 endVisit￨3 (￨3 this￨3 )￨3 ;￨3 }￨2 public￨2 boolean￨2 booleanValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBooleanValue￨2 (￨2 boolean￨3 value￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TryStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Block￨2 tryBlock￨2 ;￨2 public￨2 Block￨2 [￨2 ]￨2 catchBlocks￨2 ;￨2 public￨2 Argument￨2 [￨2 ]￨2 catchArguments￨2 ;￨2 public￨2 Block￨2 finallyBlock￨2 ;￨2 BlockScope￨2 scope￨2 ;￨2 public￨2 boolean￨2 subRoutineCannotReturn￨2 =￨2 true￨2 ;￨2 ReferenceBinding￨2 [￨2 ]￨2 caughtExceptionTypes￨2 ;￨2 boolean￨2 tryBlockExit￨2 ;￨2 boolean￨2 [￨2 ]￨2 catchExits￨2 ;￨2 public￨2 int￨2 [￨2 ]￨2 preserveExceptionHandler￨2 ;￨2 Label￨2 subRoutineStartLabel￨2 ;￨2 public￨2 LocalVariableBinding￨2 anyExceptionVariable￨2 ;￨2 public￨2 LocalVariableBinding￨2 returnAddressVariable￨2 ;￨2 public￨2 LocalVariableBinding￨2 secretReturnValue￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 SecretReturnName￨2 =￨2 "<seq2seq4repair_space>returnAddress"￨2 .￨2 toCharArray￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 SecretAnyHandlerName￨2 =￨2 "<seq2seq4repair_space>anyExceptionHandler"￨2 .￨2 toCharArray￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 SecretLocalDeclarationName￨2 =￨2 "<seq2seq4repair_space>returnValue"￨2 .￨2 toCharArray￨2 (￨2 )￨2 ;￨2 int￨2 preTryInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 mergedInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 cannotReturn￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 upperScope￨3 )￨2 {￨2 this￨3 .￨3 scope￨3 =￨3 new￨3 BlockScope￨3 (￨3 upperScope￨3 )￨3 ;￨3 BlockScope￨3 tryScope￨3 =￨3 new￨3 BlockScope￨3 (￨3 scope￨3 )￨3 ;￨3 BlockScope￨3 finallyScope￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 finallyBlock￨4 )￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 finallyBlock￨4 .￨4 statements￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 finallyScope￨4 =￨4 new￨4 BlockScope￨4 (￨4 scope￨4 ,￨4 false￨4 )￨4 ;￨4 MethodScope￨4 methodScope￨4 =￨4 scope￨4 .￨4 methodScope￨4 (￨4 )￨4 ;￨4 this￨4 .￨4 returnAddressVariable￨4 =￨4 new￨4 LocalVariableBinding￨4 (￨4 TryStatement￨4 .￨4 SecretReturnName￨4 ,￨4 upperScope￨4 .￨4 getJavaLangObject￨4 (￨4 )￨4 ,￨4 AccDefault￨4 ,￨4 false￨4 )￨4 ;￨4 finallyScope￨4 .￨4 addLocalVariable￨4 (￨4 returnAddressVariable￨4 )￨4 ;￨4 this￨4 .￨4 returnAddressVariable￨4 .￨4 constant￨4 =￨4 NotAConstant￨4 ;￨4 this￨4 .￨4 subRoutineStartLabel￨4 =￨4 new￨4 Label￨4 (￨4 )￨4 ;￨4 this￨4 .￨4 anyExceptionVariable￨4 =￨4 new￨4 LocalVariableBinding￨4 (￨4 TryStatement￨4 .￨4 SecretAnyHandlerName￨4 ,￨4 scope￨4 .￨4 getJavaLangThrowable￨4 (￨4 )￨4 ,￨4 AccDefault￨4 ,￨4 false￨4 )￨4 ;￨4 finallyScope￨4 .￨4 addLocalVariable￨4 (￨4 this￨4 .￨4 anyExceptionVariable￨4 )￨4 ;￨4 this￨4 .￨4 anyExceptionVariable￨4 .￨4 constant￨4 =￨4 NotAConstant￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 methodScope￨5 .￨5 isInsideInitializer￨5 (￨5 )￨5 )￨5 )￨4 {￨4 MethodBinding￨5 methodBinding￨5 =￨5 (￨5 (￨5 AbstractMethodDeclaration￨5 )￨5 (￨5 methodScope￨5 .￨5 referenceContext￨5 )￨5 )￨5 .￨5 binding￨5 ;￨5 if￨5 (￨5 methodBinding￨6 !=￨6 null￨6 )￨5 {￨5 TypeBinding￨6 methodReturnType￨6 =￨6 methodBinding￨6 .￨6 returnType￨6 ;￨6 if￨6 (￨6 (￨7 methodReturnType￨7 .￨7 id￨7 )￨7 !=￨7 (￨7 TypeIds￨7 .￨7 T_void￨7 )￨7 )￨6 {￨6 this￨7 .￨7 secretReturnValue￨7 =￨7 new￨7 LocalVariableBinding￨7 (￨7 TryStatement￨7 .￨7 SecretLocalDeclarationName￨7 ,￨7 methodReturnType￨7 ,￨7 AccDefault￨7 ,￨7 false￨7 )￨7 ;￨7 finallyScope￨7 .￨7 addLocalVariable￨7 (￨7 this￨7 .￨7 secretReturnValue￨7 )￨7 ;￨7 this￨7 .￨7 secretReturnValue￨7 .￨7 constant￨7 =￨7 NotAConstant￨7 ;￨7 }￨6 }￨5 }￨4 finallyBlock￨4 .￨4 resolveUsing￨4 (￨4 finallyScope￨4 )￨4 ;￨4 finallyScope￨4 .￨4 shiftScopes￨4 =￨4 new￨4 BlockScope￨4 [￨4 (￨4 catchArguments￨4 )￨4 ==￨4 null￨4 ?￨4 1￨4 :￨4 (￨4 catchArguments￨4 .￨4 length￨4 )￨4 +￨4 1￨4 ]￨4 ;￨4 finallyScope￨4 .￨4 shiftScopes￨4 [￨4 0￨4 ]￨4 =￨4 tryScope￨4 ;￨4 }￨3 this￨3 .￨3 tryBlock￨3 .￨3 resolveUsing￨3 (￨3 tryScope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 catchBlocks￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 int￨4 length￨4 =￨4 this￨4 .￨4 catchArguments￨4 .￨4 length￨4 ;￨4 TypeBinding￨4 [￨4 ]￨4 argumentTypes￨4 =￨4 new￨4 TypeBinding￨4 [￨4 length￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 BlockScope￨5 catchScope￨5 =￨5 new￨5 BlockScope￨5 (￨5 scope￨5 )￨5 ;￨5 if￨5 (￨5 finallyScope￨6 !=￨6 null￨6 )￨5 {￨5 finallyScope￨6 .￨6 shiftScopes￨6 [￨6 (￨6 i￨6 +￨6 1￨6 )￨6 ]￨6 =￨6 catchScope￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 argumentTypes￨6 [￨6 i￨6 ]￨6 =￨6 catchArguments￨6 [￨6 i￨6 ]￨6 .￨6 resolveForCatch￨6 (￨6 catchScope￨6 )￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 catchBlocks￨5 [￨5 i￨5 ]￨5 .￨5 resolveUsing￨5 (￨5 catchScope￨5 )￨5 ;￨5 }￨4 this￨4 .￨4 caughtExceptionTypes￨4 =￨4 new￨4 ReferenceBinding￨4 [￨4 length￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 caughtExceptionTypes￨5 [￨5 i￨5 ]￨5 =￨5 (￨5 (￨5 ReferenceBinding￨5 )￨5 (￨5 argumentTypes￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 i￨6 ;￨6 j￨6 ++￨6 )￨5 {￨5 <START_BUG>￨6 if￨6 (￨6 scope￨6 .￨6 areTypesCompatible￨6 (￨6 caughtExceptionTypes￨6 [￨6 i￨6 ]￨6 ,￨6 argumentTypes￨6 [￨6 j￨6 ]￨6 )￨6 )￨6 {￨6 <END_BUG>￨6 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 wrongSequenceOfExceptionTypesError￨6 (￨6 this￨6 ,￨6 i￨6 ,￨6 j￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 else￨3 {￨3 caughtExceptionTypes￨4 =￨4 new￨4 ReferenceBinding￨4 [￨4 0￨4 ]￨4 ;￨4 }￨3 if￨3 (￨3 finallyScope￨4 !=￨4 null￨4 )￨3 {￨3 this￨4 .￨4 scope￨4 .￨4 addSubscope￨4 (￨4 finallyScope￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 SimilarityQueries￨1 {￨1 private￨2 SimilarityQueries￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Query￨2 formSimilarQuery￨2 (￨2 String￨2 body￨2 ,￨2 Analyzer￨2 a￨2 ,￨2 String￨2 field￨2 ,￨2 Set￨2 stop￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 TokenStream￨3 ts￨3 =￨3 a￨3 .￨3 tokenStream￨3 (￨3 field￨3 ,￨3 new￨3 StringReader￨3 (￨3 body￨3 )￨3 )￨3 ;￨3 Token￨3 t￨3 ;￨3 BooleanQuery￨3 tmp￨3 =￨3 new￨3 BooleanQuery￨3 (￨3 )￨3 ;￨3 Set￨3 already￨3 =￨3 new￨3 HashSet￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 (￨4 t￨4 =￨4 ts￨4 .￨4 next￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 String￨4 word￨4 =￨4 t￨4 .￨4 termText￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 stop￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 stop￨5 .￨5 contains￨5 (￨5 word￨5 )￨5 )￨5 )￨4 {￨4 continue￨5 ;￨5 }￨4 if￨4 (￨4 !￨5 (￨5 already￨5 .￨5 add￨5 (￨5 word￨5 )￨5 )￨5 )￨4 {￨4 continue￨5 ;￨5 }￨4 TermQuery￨4 tq￨4 =￨4 new￨4 TermQuery￨4 (￨4 new￨4 Term￨4 (￨4 field￨4 ,￨4 word￨4 )￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 tmp￨5 .￨5 add￨5 (￨5 tq￨5 ,￨5 false￨5 ,￨5 false￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 BooleanQuery￨5 too￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 }￨3 return￨3 tmp￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CompletionJavadoc￨1 extends￨1 Javadoc￨1 {￨1 Expression￨2 completionNode￨2 ;￨2 public￨2 CompletionJavadoc￨2 (￨2 int￨3 sourceStart￨3 ,￨3 int￨3 sourceEnd￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 getCompletionNode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 internalResolve￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 completionNode￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 (￨5 this￨5 .￨5 completionNode￨5 )￨5 instanceof￨5 CompletionOnJavadocTag￨5 )￨4 {￨4 (￨5 (￨5 CompletionOnJavadocTag￨5 )￨5 (￨5 this￨5 .￨5 completionNode￨5 )￨5 )￨5 .￨5 filterPossibleTags￨5 (￨5 scope￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 boolean￨5 resolve￨5 =￨5 true￨5 ;￨5 if￨5 (￨5 (￨6 this￨6 .￨6 completionNode￨6 )￨6 instanceof￨6 CompletionOnJavadocParamNameReference￨6 )￨5 {￨5 resolve￨6 =￨6 (￨6 (￨6 (￨6 CompletionOnJavadocParamNameReference￨6 )￨6 (￨6 this￨6 .￨6 completionNode￨6 )￨6 )￨6 .￨6 token￨6 )￨6 !=￨6 null￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 this￨6 .￨6 completionNode￨6 )￨6 instanceof￨6 CompletionOnJavadocTypeParamReference￨6 )￨5 {￨5 resolve￨6 =￨6 (￨6 (￨6 (￨6 CompletionOnJavadocTypeParamReference￨6 )￨6 (￨6 this￨6 .￨6 completionNode￨6 )￨6 )￨6 .￨6 token￨6 )￨6 !=￨6 null￨6 ;￨6 }￨5 if￨5 (￨5 resolve￨6 )￨5 {￨5 switch￨6 (￨6 scope￨6 .￨6 kind￨6 )￨6 {￨6 case￨7 Scope￨7 .￨7 CLASS_SCOPE￨7 :￨7 this￨8 .￨8 completionNode￨8 .￨8 resolveType￨8 (￨8 (￨8 (￨8 ClassScope￨8 )￨8 (￨8 scope￨8 )￨8 )￨8 )￨8 ;￨8 break￨8 ;￨8 case￨7 Scope￨7 .￨7 METHOD_SCOPE￨7 :￨7 this￨8 .￨8 completionNode￨8 .￨8 resolveType￨8 (￨8 (￨8 (￨8 MethodScope￨8 )￨8 (￨8 scope￨8 )￨8 )￨8 )￨8 ;￨8 break￨8 ;￨8 }￨6 }￨5 if￨5 (￨5 (￨6 this￨6 .￨6 completionNode￨6 )￨6 instanceof￨6 CompletionOnJavadocParamNameReference￨6 )￨5 {￨5 CompletionOnJavadocParamNameReference￨6 paramNameReference￨6 =￨6 (￨6 (￨6 CompletionOnJavadocParamNameReference￨6 )￨6 (￨6 this￨6 .￨6 completionNode￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 scope￨7 .￨7 kind￨7 )￨7 ==￨7 (￨7 Scope￨7 .￨7 METHOD_SCOPE￨7 )￨7 )￨6 {￨6 paramNameReference￨7 .￨7 missingParams￨7 =￨7 missingParamTags￨7 (￨7 paramNameReference￨7 .￨7 binding￨7 ,￨7 (￨7 (￨7 MethodScope￨7 )￨7 (￨7 scope￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 <START_BUG>￨6 if￨6 (￨6 (￨6 paramNameReference￨6 .￨6 token￨6 )￨6 ==￨6 null￨6 )￨6 {￨6 <END_BUG>￨6 paramNameReference￨6 .￨6 missingTypeParams￨6 =￨6 missingTypeParameterTags￨6 (￨6 paramNameReference￨6 .￨6 binding￨6 ,￨6 scope￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 this￨6 .￨6 completionNode￨6 )￨6 instanceof￨6 CompletionOnJavadocTypeParamReference￨6 )￨5 {￨5 CompletionOnJavadocTypeParamReference￨6 typeParamReference￨6 =￨6 (￨6 (￨6 CompletionOnJavadocTypeParamReference￨6 )￨6 (￨6 this￨6 .￨6 completionNode￨6 )￨6 )￨6 ;￨6 typeParamReference￨6 .￨6 missingParams￨6 =￨6 missingTypeParameterTags￨6 (￨6 typeParamReference￨6 .￨6 resolvedType￨6 ,￨6 scope￨6 )￨6 ;￨6 }￨5 }￨4 Binding￨4 qualifiedBinding￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 this￨5 .￨5 completionNode￨5 )￨5 instanceof￨5 CompletionOnJavadocQualifiedTypeReference￨5 )￨4 {￨4 CompletionOnJavadocQualifiedTypeReference￨5 typeRef￨5 =￨5 (￨5 (￨5 CompletionOnJavadocQualifiedTypeReference￨5 )￨5 (￨5 this￨5 .￨5 completionNode￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 typeRef￨6 .￨6 packageBinding￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 qualifiedBinding￨6 =￨6 typeRef￨6 .￨6 resolvedType￨6 ;￨6 }￨5 else￨5 {￨5 qualifiedBinding￨6 =￨6 typeRef￨6 .￨6 packageBinding￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 (￨5 this￨5 .￨5 completionNode￨5 )￨5 instanceof￨5 CompletionOnJavadocMessageSend￨5 )￨4 {￨4 CompletionOnJavadocMessageSend￨5 msg￨5 =￨5 (￨5 (￨5 CompletionOnJavadocMessageSend￨5 )￨5 (￨5 this￨5 .￨5 completionNode￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 !￨6 (￨6 msg￨6 .￨6 receiver￨6 .￨6 isThis￨6 (￨6 )￨6 )￨6 )￨5 {￨5 qualifiedBinding￨6 =￨6 msg￨6 .￨6 receiver￨6 .￨6 resolvedType￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 (￨5 this￨5 .￨5 completionNode￨5 )￨5 instanceof￨5 CompletionOnJavadocAllocationExpression￨5 )￨4 {￨4 CompletionOnJavadocAllocationExpression￨5 alloc￨5 =￨5 (￨5 (￨5 CompletionOnJavadocAllocationExpression￨5 )￨5 (￨5 this￨5 .￨5 completionNode￨5 )￨5 )￨5 ;￨5 qualifiedBinding￨5 =￨5 alloc￨5 .￨5 type￨5 .￨5 resolvedType￨5 ;￨5 }￨4 throw￨4 new￨4 CompletionNodeFound￨4 (￨4 this￨4 .￨4 completionNode￨4 ,￨4 qualifiedBinding￨4 ,￨4 scope￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 CompilationUnitScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 MethodScope￨3 scope￨3 )￨2 {￨2 }￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 missingParamTags￨2 (￨2 Binding￨3 paramNameRefBinding￨3 ,￨3 MethodScope￨3 methScope￨3 )￨2 {￨2 }￨2 private￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 missingTypeParameterTags￨2 (￨2 Binding￨3 paramNameRefBinding￨3 ,￨3 Scope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 EmbedBlob￨1 extends￨1 ConnectionChild￨1 implements￨1 Blob￨1 ,￨1 EngineLOB￨1 {￨1 private￨2 boolean￨2 materialized￨2 ;￨2 private￨2 PositionedStoreStream￨2 myStream￨2 ;￨2 private￨2 int￨2 locator￨2 =￨2 0￨2 ;￨2 private￨2 long￨2 streamLength￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 final￨2 int￨2 streamPositionOffset￨2 ;￨2 private￨2 boolean￨2 isValid￨2 =￨2 true￨2 ;￨2 private￨2 LOBStreamControl￨2 control￨2 ;￨2 EmbedBlob￨2 (￨2 byte￨2 [￨2 ]￨2 blobBytes￨2 ,￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 EmbedBlob￨2 (￨2 DataValueDescriptor￨2 dvd￨2 ,￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 long￨2 setBlobPosition￨2 (￨2 long￨2 logicalPos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 read￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 length￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 getBytes￨2 (￨2 long￨2 startPos￨2 ,￨2 int￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getBinaryStream￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 byte￨2 [￨2 ]￨2 pattern￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkMatch￨2 (￨2 byte￨2 [￨2 ]￨2 pattern￨2 ,￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 Blob￨2 pattern￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkMatch￨2 (￨2 Blob￨2 pattern￨2 ,￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SQLException￨2 handleMyExceptions￨2 (￨2 Throwable￨2 t￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 finalize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setBytes￨2 (￨2 long￨2 pos￨2 ,￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setBytes￨2 (￨2 long￨2 pos￨2 ,￨2 byte￨2 [￨2 ]￨2 bytes￨2 ,￨2 int￨2 offset￨2 ,￨2 int￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 OutputStream￨2 setBinaryStream￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 truncate￨2 (￨2 long￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 free￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getBinaryStream￨2 (￨2 long￨2 pos￨2 ,￨2 long￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 checkValidity￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 pos￨4 <=￨4 0￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_BAD_POSITION￨4 ,￨4 new￨4 Long￨4 (￨4 pos￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 length￨4 <￨4 0￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_NONPOSITIVE_LENGTH￨4 ,￨4 new￨4 Long￨4 (￨4 length￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 length￨3 >￨3 (￨3 (￨3 this￨3 .￨3 length￨3 (￨3 )￨3 )￨3 -￨3 pos￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 throw￨3 Util￨3 .￨3 generateCsSQLException￨3 (￨3 POS_AND_LENGTH_GREATER_THAN_LOB￨3 ,￨3 new￨3 Long￨3 (￨3 pos￨3 )￨3 ,￨3 new￨3 Long￨3 (￨3 length￨3 )￨3 )￨3 ;￨3 }￨3 try￨3 (￨3 )￨3 {￨3 return￨4 new￨4 UpdatableBlobStream￨4 (￨4 this￨4 ,￨4 getBinaryStream￨4 (￨4 )￨4 ,￨4 (￨4 pos￨4 -￨4 1￨4 )￨4 ,￨4 length￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 ioe￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 setStreamFailure￨4 (￨4 ioe￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 checkValidity￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isMaterialized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLocator￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 RelationToManyTableFieldStrategy￨1 extends￨1 StoreCollectionFieldStrategy￨1 {￨1 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 RelationToManyTableFieldStrategy￨2 .￨2 class￨2 )￨2 ;￨2 protected￨2 ClassMapping￨2 [￨2 ]￨2 getIndependentElementMappings￨2 (￨2 boolean￨2 traverse￨2 )￨2 {￨2 }￨2 protected￨2 ForeignKey￨2 getJoinForeignKey￨2 (￨2 ClassMapping￨3 elem￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 selectElement￨2 (￨2 Select￨3 sel￨3 ,￨3 ClassMapping￨3 elem￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 ,￨3 int￨3 eagerMode￨3 ,￨3 Joins￨3 joins￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 loadElement￨2 (￨2 OpenJPAStateManager￨2 sm￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 JDBCFetchConfiguration￨2 fetch￨2 ,￨2 Result￨2 res￨2 ,￨2 Joins￨2 joins￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Joins￨2 join￨2 (￨2 Joins￨3 joins￨3 ,￨3 ClassMapping￨3 elem￨3 )￨2 {￨2 }￨2 protected￨2 Joins￨2 joinElementRelation￨2 (￨2 Joins￨3 joins￨3 ,￨3 ClassMapping￨3 elem￨3 )￨2 {￨2 }￨2 public￨2 void￨2 map￨2 (￨2 boolean￨3 adapt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 insert￨2 (￨2 OpenJPAStateManager￨2 sm￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 RowManager￨2 rm￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 insert￨2 (￨2 OpenJPAStateManager￨2 sm￨2 ,￨2 RowManager￨2 rm￨2 ,￨2 Object￨2 vals￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 Collection￨3 coll￨3 =￨3 toCollection￨3 (￨3 vals￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 coll￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 coll￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 Row￨3 row￨3 =￨3 rm￨3 .￨3 getSecondaryRow￨3 (￨3 field￨3 .￨3 getTable￨3 (￨3 )￨3 ,￨3 ACTION_INSERT￨3 )￨3 ;￨3 row￨3 .￨3 setForeignKey￨3 (￨3 field￨3 .￨3 getJoinForeignKey￨3 (￨3 )￨3 ,￨3 field￨3 .￨3 getJoinColumnIO￨3 (￨3 )￨3 ,￨3 sm￨3 )￨3 ;￨3 ValueMapping￨3 elem￨3 =￨3 field￨3 .￨3 getElementMapping￨3 (￨3 )￨3 ;￨3 StoreContext￨3 ctx￨3 =￨3 sm￨3 .￨3 getContext￨3 (￨3 )￨3 ;￨3 Column￨3 order￨3 =￨3 field￨3 .￨3 getOrderColumn￨3 (￨3 )￨3 ;￨3 boolean￨3 setOrder￨3 =￨3 field￨3 .￨3 getOrderColumnIO￨3 (￨3 )￨3 .￨3 isInsertable￨3 (￨3 order￨3 ,￨3 false￨3 )￨3 ;￨3 <START_BUG>￨3 int￨3 idx￨3 =￨3 (￨3 setOrder￨3 &&￨3 (￨3 order￨3 !=￨3 null￨3 )￨3 )￨3 ?￨3 order￨3 .￨3 getBase￨3 (￨3 )￨3 :￨3 0￨3 ;￨3 <END_BUG>￨3 OpenJPAStateManager￨3 esm￨3 ;￨3 for￨3 (￨3 Iterator￨4 itr￨4 =￨4 coll￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 itr￨4 .￨4 hasNext￨4 (￨4 )￨4 ;￨4 idx￨4 ++￨4 )￨3 {￨3 esm￨4 =￨4 RelationStrategies￨4 .￨4 getStateManager￨4 (￨4 itr￨4 .￨4 next￨4 (￨4 )￨4 ,￨4 ctx￨4 )￨4 ;￨4 elem￨4 .￨4 setForeignKey￨4 (￨4 row￨4 ,￨4 esm￨4 )￨4 ;￨4 if￨4 (￨4 setOrder￨5 )￨4 {￨4 row￨5 .￨5 setInt￨5 (￨5 order￨5 ,￨5 idx￨5 )￨5 ;￨5 }￨4 rm￨4 .￨4 flushSecondaryRow￨4 (￨4 row￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 update￨2 (￨2 OpenJPAStateManager￨2 sm￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 RowManager￨2 rm￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 delete￨2 (￨2 OpenJPAStateManager￨2 sm￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 RowManager￨2 rm￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 toDataStoreValue￨2 (￨2 Object￨3 val￨3 ,￨3 JDBCStore￨3 store￨3 )￨2 {￨2 }￨2 public￨2 Joins￨2 join￨2 (￨2 Joins￨3 joins￨3 ,￨3 boolean￨3 forceOuter￨3 )￨2 {￨2 }￨2 public￨2 Joins￨2 joinRelation￨2 (￨2 Joins￨3 joins￨3 ,￨3 boolean￨3 forceOuter￨3 ,￨3 boolean￨3 traverse￨3 )￨2 {￨2 }￨2 }￨1
public￨1 }￨2 public￨2 void￨2 update￨2 (￨2 )￨2 {￨2 }￨2 void￨2 update￨2 (￨2 boolean￨3 all￨3 )￨2 {￨2 }￨2 void￨2 updateFont￨2 (￨2 Font￨3 oldFont￨3 ,￨3 Font￨3 newFont￨3 )￨2 {￨2 }￨2 CREATESTRUCT￨2 widgetCreateStruct￨2 (￨2 )￨2 {￨2 }￨2 int￨2 widgetExtStyle￨2 (￨2 )￨2 {￨2 }￨2 int￨2 widgetParent￨2 (￨2 )￨2 {￨2 }￨2 int￨2 widgetStyle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 setParent￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 abstract￨2 TCHAR￨2 windowClass￨2 (￨2 )￨2 {￨2 }￨2 abstract￨2 int￨2 windowProc￨2 (￨2 )￨2 {￨2 }￨2 int￨2 windowProc￨2 (￨2 int￨3 hwnd￨3 ,￨3 int￨3 msg￨3 ,￨3 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_ACTIVATE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CHAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CLEAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CLOSE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_COMMAND￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CONTEXTMENU￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CTLCOLOR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_CUT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_DESTROY￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_DRAWITEM￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_ENDSESSION￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_ENTERIDLE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_ERASEBKGND￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_GETDLGCODE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_GETFONT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_GETOBJECT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_GETMINMAXINFO￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_HOTKEY￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_HELP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_HSCROLL￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_IME_CHAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_IME_COMPOSITION￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_INITMENUPOPUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_INPUTLANGCHANGE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_KEYDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_KEYUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_KILLFOCUS￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONDBLCLK￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_LBUTTONUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MBUTTONDBLCLK￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MBUTTONUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MEASUREITEM￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MENUCHAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MENUSELECT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSEACTIVATE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSEHOVER￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSELEAVE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSEMOVE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOUSEWHEEL￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_MOVE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NCACTIVATE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NCCALCSIZE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NCHITTEST￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NCLBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_NOTIFY￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PAINT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PALETTECHANGED￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PARENTNOTIFY￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PASTE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_PRINTCLIENT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_QUERYENDSESSION￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_QUERYNEWPALETTE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_QUERYOPEN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_RBUTTONDBLCLK￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_RBUTTONDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_RBUTTONUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETCURSOR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETFOCUS￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETTINGCHANGE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETFONT￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SETREDRAW￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SHOWWINDOW￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SIZE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SYSCHAR￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 wmSysChar￨3 (￨3 windowProc￨3 (￨3 )￨3 ,￨3 handle￨3 ,￨3 wParam￨3 ,￨3 lParam￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 LRESULT￨2 WM_SYSCOLORCHANGE￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SYSCOMMAND￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SYSKEYDOWN￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_SYSKEYUP￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_TIMER￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_UNDO￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_VSCROLL￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_WINDOWPOSCHANGED￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 WM_WINDOWPOSCHANGING￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmColorChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmCommandChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmDrawChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmMeasureChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmNotifyChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 LRESULT￨2 wmScrollChild￨2 (￨2 int￨3 wParam￨3 ,￨3 int￨3 lParam￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RowTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testDiffColumnFamily￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDiffSuperColumn￨2 (￨2 )￨2 {￨2 SuperColumn￨3 sc1￨3 =￨3 new￨3 SuperColumn￨3 (￨3 "one"￨3 )￨3 ;￨3 <START_BUG>￨3 sc1￨3 .￨3 addColumn￨3 (￨3 "subcolumn"￨3 ,￨3 new￨3 Column￨3 (￨3 "subcolumn"￨3 ,￨3 "A"￨3 .￨3 getBytes￨3 (￨3 )￨3 ,￨3 0￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 SuperColumn￨3 sc2￨3 =￨3 new￨3 SuperColumn￨3 (￨3 "one"￨3 )￨3 ;￨3 sc2￨3 .￨3 markForDeleteAt￨3 (￨3 0￨3 ,￨3 0￨3 )￨3 ;￨3 SuperColumn￨3 scDiff￨3 =￨3 (￨3 (￨3 SuperColumn￨3 )￨3 (￨3 sc1￨3 .￨3 diff￨3 (￨3 sc2￨3 )￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 scDiff￨3 .￨3 getSubColumns￨3 (￨3 )￨3 .￨3 size￨3 (￨3 )￨3 ,￨3 0￨3 )￨3 ;￨3 assertEquals￨3 (￨3 scDiff￨3 .￨3 getMarkedForDeleteAt￨3 (￨3 )￨3 ,￨3 0￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testRepair￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestBlockJoinSorter￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 class￨2 FixedBitSetCachingWrapperFilter￨2 extends￨2 CachingWrapperFilter￨2 {￨2 public￨3 FixedBitSetCachingWrapperFilter￨3 (￨3 Filter￨4 filter￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 DocIdSet￨3 cacheImpl￨3 (￨3 DocIdSetIterator￨3 iterator￨3 ,￨3 AtomicReader￨3 reader￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 test￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 final￨3 int￨3 numParents￨3 =￨3 atLeast￨3 (￨3 200￨3 )￨3 ;￨3 IndexWriterConfig￨3 cfg￨3 =￨3 newIndexWriterConfig￨3 (￨3 TEST_VERSION_CURRENT￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 analysis￨3 .￨3 MockAnalyzer￨3 (￨3 random￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 cfg￨3 .￨3 setMergePolicy￨3 (￨3 newLogMergePolicy￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 RandomIndexWriter￨3 writer￨3 =￨3 new￨3 RandomIndexWriter￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 newDirectory￨3 (￨3 )￨3 ,￨3 cfg￨3 )￨3 ;￨3 final￨3 Document￨3 parentDoc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 final￨3 NumericDocValuesField￨3 parentVal￨3 =￨3 new￨3 NumericDocValuesField￨3 (￨3 "parent_val"￨3 ,￨3 0L￨3 )￨3 ;￨3 parentDoc￨3 .￨3 add￨3 (￨3 parentVal￨3 )￨3 ;￨3 final￨3 StringField￨3 parent￨3 =￨3 new￨3 StringField￨3 (￨3 "parent"￨3 ,￨3 "true"￨3 ,￨3 Store￨3 .￨3 YES￨3 )￨3 ;￨3 parentDoc￨3 .￨3 add￨3 (￨3 parent￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 numParents￨4 ;￨4 ++￨4 i￨4 )￨3 {￨3 List￨4 <￨4 Document￨4 >￨4 documents￨4 =￨4 new￨4 ArrayList￨4 <￨4 >￨4 (￨4 )￨4 ;￨4 final￨4 int￨4 numChildren￨4 =￨4 random￨4 (￨4 )￨4 .￨4 nextInt￨4 (￨4 10￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 j￨5 =￨5 0￨5 ;￨5 j￨5 <￨5 numChildren￨5 ;￨5 ++￨5 j￨5 )￨4 {￨4 final￨5 Document￨5 childDoc￨5 =￨5 new￨5 Document￨5 (￨5 )￨5 ;￨5 childDoc￨5 .￨5 add￨5 (￨5 new￨5 NumericDocValuesField￨5 (￨5 "child_val"￨5 ,￨5 random￨5 (￨5 )￨5 .￨5 nextInt￨5 (￨5 5￨5 )￨5 )￨5 )￨5 ;￨5 documents￨5 .￨5 add￨5 (￨5 childDoc￨5 )￨5 ;￨5 }￨4 parentVal￨4 .￨4 setLongValue￨4 (￨4 random￨4 (￨4 )￨4 .￨4 nextInt￨4 (￨4 50￨4 )￨4 )￨4 ;￨4 documents￨4 .￨4 add￨4 (￨4 parentDoc￨4 )￨4 ;￨4 writer￨4 .￨4 addDocuments￨4 (￨4 documents￨4 )￨4 ;￨4 }￨3 writer￨3 .￨3 forceMerge￨3 (￨3 1￨3 )￨3 ;￨3 final￨3 DirectoryReader￨3 indexReader￨3 =￨3 writer￨3 .￨3 getReader￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 writer￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 AtomicReader￨3 reader￨3 =￨3 getOnlySegmentReader￨3 (￨3 indexReader￨3 )￨3 ;￨3 final￨3 Filter￨3 parentsFilter￨3 =￨3 new￨3 TestBlockJoinSorter￨3 .￨3 FixedBitSetCachingWrapperFilter￨3 (￨3 new￨3 QueryWrapperFilter￨3 (￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 search￨3 .￨3 TermQuery￨3 (￨3 new￨3 Term￨3 (￨3 "parent"￨3 ,￨3 "true"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 FixedBitSet￨3 parentBits￨3 =￨3 (￨3 (￨3 FixedBitSet￨3 )￨3 (￨3 parentsFilter￨3 .￨3 getDocIdSet￨3 (￨3 reader￨3 .￨3 getContext￨3 (￨3 )￨3 ,￨3 null￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 NumericDocValues￨3 parentValues￨3 =￨3 reader￨3 .￨3 getNumericDocValues￨3 (￨3 "parent_val"￨3 )￨3 ;￨3 final￨3 NumericDocValues￨3 childValues￨3 =￨3 reader￨3 .￨3 getNumericDocValues￨3 (￨3 "child_val"￨3 )￨3 ;￨3 final￨3 Sort￨3 parentSort￨3 =￨3 new￨3 Sort￨3 (￨3 new￨3 SortField￨3 (￨3 "parent_val"￨3 ,￨3 Type￨3 .￨3 LONG￨3 )￨3 )￨3 ;￨3 final￨3 Sort￨3 childSort￨3 =￨3 new￨3 Sort￨3 (￨3 new￨3 SortField￨3 (￨3 "child_val"￨3 ,￨3 Type￨3 .￨3 LONG￨3 )￨3 )￨3 ;￨3 final￨3 Sort￨3 sort￨3 =￨3 new￨3 Sort￨3 (￨3 new￨3 SortField￨3 (￨3 "custom"￨3 ,￨3 new￨3 BlockJoinComparatorSource￨3 (￨3 parentsFilter￨3 ,￨3 parentSort￨3 ,￨3 childSort￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 Sorter￨3 sorter￨3 =￨3 new￨3 Sorter￨3 (￨3 sort￨3 )￨3 ;￨3 final￨3 Sorter￨3 .￨3 DocMap￨3 docMap￨3 =￨3 sorter￨3 .￨3 sort￨3 (￨3 reader￨3 )￨3 ;￨3 assertEquals￨3 (￨3 reader￨3 .￨3 maxDoc￨3 (￨3 )￨3 ,￨3 docMap￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 int￨3 [￨3 ]￨3 children￨3 =￨3 new￨3 int￨3 [￨3 1￨3 ]￨3 ;￨3 int￨3 numChildren￨3 =￨3 0￨3 ;￨3 int￨3 previousParent￨3 =￨3 -￨3 1￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 docMap￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 ++￨4 i￨4 )￨3 {￨3 final￨4 int￨4 oldID￨4 =￨4 docMap￨4 .￨4 newToOld￨4 (￨4 i￨4 )￨4 ;￨4 if￨4 (￨4 parentBits￨5 .￨5 get￨5 (￨5 oldID￨5 )￨5 )￨4 {￨4 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 numChildren￨6 ;￨6 ++￨6 j￨6 )￨5 {￨5 assertEquals￨6 (￨6 oldID￨6 ,￨6 parentBits￨6 .￨6 nextSetBit￨6 (￨6 children￨6 [￨6 j￨6 ]￨6 )￨6 )￨6 ;￨6 }￨5 for￨5 (￨5 int￨6 j￨6 =￨6 1￨6 ;￨6 j￨6 <￨6 numChildren￨6 ;￨6 ++￨6 j￨6 )￨5 {￨5 final￨6 int￨6 doc1￨6 =￨6 children￨6 [￨6 (￨6 j￨6 -￨6 1￨6 )￨6 ]￨6 ;￨6 final￨6 int￨6 doc2￨6 =￨6 children￨6 [￨6 j￨6 ]￨6 ;￨6 if￨6 (￨6 (￨7 childValues￨7 .￨7 get￨7 (￨7 doc1￨7 )￨7 )￨7 ==￨7 (￨7 childValues￨7 .￨7 get￨7 (￨7 doc2￨7 )￨7 )￨7 )￨6 {￨6 assertTrue￨7 (￨7 (￨7 doc1￨7 <￨7 doc2￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 assertTrue￨7 (￨7 (￨7 (￨7 childValues￨7 .￨7 get￨7 (￨7 doc1￨7 )￨7 )￨7 <￨7 (￨7 childValues￨7 .￨7 get￨7 (￨7 doc2￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 previousParent￨6 !=￨6 (￨6 -￨6 1￨6 )￨6 )￨5 {￨5 if￨6 (￨6 (￨7 parentValues￨7 .￨7 get￨7 (￨7 previousParent￨7 )￨7 )￨7 ==￨7 (￨7 parentValues￨7 .￨7 get￨7 (￨7 oldID￨7 )￨7 )￨7 )￨6 {￨6 assertTrue￨7 (￨7 (￨7 previousParent￨7 <￨7 oldID￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 assertTrue￨7 (￨7 (￨7 (￨7 parentValues￨7 .￨7 get￨7 (￨7 previousParent￨7 )￨7 )￨7 <￨7 (￨7 parentValues￨7 .￨7 get￨7 (￨7 oldID￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 previousParent￨5 =￨5 oldID￨5 ;￨5 numChildren￨5 =￨5 0￨5 ;￨5 }￨4 else￨4 {￨4 children￨5 =￨5 ArrayUtil￨5 .￨5 grow￨5 (￨5 children￨5 ,￨5 (￨5 numChildren￨5 +￨5 1￨5 )￨5 )￨5 ;￨5 children￨5 [￨5 (￨5 numChildren￨5 ++￨5 )￨5 ]￨5 =￨5 oldID￨5 ;￨5 }￨4 }￨3 indexReader￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 writer￨3 .￨3 w￨3 .￨3 getDirectory￨3 (￨3 )￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 TestSameScoresWithThreads￨1 extends￨1 LuceneTestCase￨1 {￨1 public￨2 void￨2 test￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 Directory￨3 dir￨3 =￨3 newDirectory￨3 (￨3 )￨3 ;￨3 MockAnalyzer￨3 analyzer￨3 =￨3 new￨3 MockAnalyzer￨3 (￨3 random￨3 (￨3 )￨3 )￨3 ;￨3 analyzer￨3 .￨3 setMaxTokenLength￨3 (￨3 TestUtil￨3 .￨3 nextInt￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 1￨3 ,￨3 MAX_TERM_LENGTH￨3 )￨3 )￨3 ;￨3 final￨3 RandomIndexWriter￨3 w￨3 =￨3 new￨3 RandomIndexWriter￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 dir￨3 ,￨3 analyzer￨3 )￨3 ;￨3 LineFileDocs￨3 docs￨3 =￨3 new￨3 LineFileDocs￨3 (￨3 random￨3 (￨3 )￨3 )￨3 ;￨3 int￨3 charsToIndex￨3 =￨3 atLeast￨3 (￨3 100000￨3 )￨3 ;￨3 int￨3 charsIndexed￨3 =￨3 0￨3 ;￨3 while￨3 (￨3 charsIndexed￨4 <￨4 charsToIndex￨4 )￨3 {￨3 Document￨4 doc￨4 =￨4 docs￨4 .￨4 nextDoc￨4 (￨4 )￨4 ;￨4 charsIndexed￨4 +=￨4 doc￨4 .￨4 get￨4 (￨4 "body"￨4 )￨4 .￨4 length￨4 (￨4 )￨4 ;￨4 w￨4 .￨4 addDocument￨4 (￨4 doc￨4 )￨4 ;￨4 }￨3 IndexReader￨3 r￨3 =￨3 w￨3 .￨3 getReader￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 w￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 IndexSearcher￨3 s￨3 =￨3 newSearcher￨3 (￨3 r￨3 )￨3 ;￨3 Terms￨3 terms￨3 =￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 index￨3 .￨3 MultiFields￨3 .￨3 getFields￨3 (￨3 r￨3 )￨3 .￨3 terms￨3 (￨3 "body"￨3 )￨3 ;￨3 int￨3 termCount￨3 =￨3 0￨3 ;￨3 TermsEnum￨3 termsEnum￨3 =￨3 terms￨3 .￨3 iterator￨3 (￨3 null￨3 )￨3 ;￨3 while￨3 (￨3 (￨4 termsEnum￨4 .￨4 next￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 termCount￨4 ++￨4 ;￨4 }￨3 assertTrue￨3 (￨3 (￨3 termCount￨3 >￨3 0￨3 )￨3 )￨3 ;￨3 double￨3 chance￨3 =￨3 10.0￨3 /￨3 termCount￨3 ;￨3 termsEnum￨3 =￨3 terms￨3 .￨3 iterator￨3 (￨3 termsEnum￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 BytesRef￨3 ,￨3 TopDocs￨3 >￨3 answers￨3 =￨3 new￨3 HashMap￨3 <￨3 >￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 (￨4 termsEnum￨4 .￨4 next￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 (￨5 random￨5 (￨5 )￨5 .￨5 nextDouble￨5 (￨5 )￨5 )￨5 <=￨5 chance￨5 )￨4 {￨4 BytesRef￨5 term￨5 =￨5 BytesRef￨5 .￨5 deepCopyOf￨5 (￨5 termsEnum￨5 .￨5 term￨5 (￨5 )￨5 )￨5 ;￨5 answers￨5 .￨5 put￨5 (￨5 term￨5 ,￨5 s￨5 .￨5 search￨5 (￨5 new￨5 TermQuery￨5 (￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 lucene￨5 .￨5 index￨5 .￨5 Term￨5 (￨5 "body"￨5 ,￨5 term￨5 )￨5 )￨5 ,￨5 100￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 !￨4 (￨4 answers￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 final￨4 CountDownLatch￨4 startingGun￨4 =￨4 new￨4 CountDownLatch￨4 (￨4 1￨4 )￨4 ;￨4 int￨4 numThreads￨4 =￨4 TestUtil￨4 .￨4 nextInt￨4 (￨4 random￨4 (￨4 )￨4 ,￨4 2￨4 ,￨4 5￨4 )￨4 ;￨4 Thread￨4 [￨4 ]￨4 threads￨4 =￨4 new￨4 Thread￨4 [￨4 numThreads￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 threadID￨5 =￨5 0￨5 ;￨5 threadID￨5 <￨5 numThreads￨5 ;￨5 threadID￨5 ++￨5 )￨4 {￨4 Thread￨5 thread￨5 =￨5 new￨5 Thread￨5 (￨5 )￨5 {￨5 @￨6 Override￨6 public￨6 void￨6 run￨6 (￨6 )￨6 {￨6 try￨7 (￨7 )￨7 {￨7 startingGun￨8 .￨8 await￨8 (￨8 )￨8 ;￨8 for￨8 (￨8 int￨9 i￨9 =￨9 0￨9 ;￨9 i￨9 <￨9 20￨9 ;￨9 i￨9 ++￨9 )￨8 {￨8 List￨9 <￨9 Map￨9 .￨9 Entry￨9 <￨9 BytesRef￨9 ,￨9 TopDocs￨9 >￨9 >￨9 shuffled￨9 =￨9 new￨9 java￨9 .￨9 util￨9 .￨9 ArrayList￨9 (￨9 answers￨9 .￨9 entrySet￨9 (￨9 )￨9 )￨9 ;￨9 Collections￨9 .￨9 shuffle￨9 (￨9 shuffled￨9 )￨9 ;￨9 for￨9 (￨9 Map￨10 .￨10 Entry￨10 <￨10 BytesRef￨10 ,￨10 TopDocs￨10 >￨10 ent￨10 :￨10 shuffled￨10 )￨9 {￨9 TopDocs￨10 actual￨10 =￨10 s￨10 .￨10 search￨10 (￨10 new￨10 TermQuery￨10 (￨10 new￨10 org￨10 .￨10 apache￨10 .￨10 lucene￨10 .￨10 index￨10 .￨10 Term￨10 (￨10 "body"￨10 ,￨10 ent￨10 .￨10 getKey￨10 (￨10 )￨10 )￨10 )￨10 ,￨10 100￨10 )￨10 ;￨10 TopDocs￨10 expected￨10 =￨10 ent￨10 .￨10 getValue￨10 (￨10 )￨10 ;￨10 assertEquals￨10 (￨10 expected￨10 .￨10 totalHits￨10 ,￨10 actual￨10 .￨10 totalHits￨10 )￨10 ;￨10 assertEquals￨10 (￨10 (￨10 "query="￨10 +￨10 (￨10 ent￨10 .￨10 getKey￨10 (￨10 )￨10 .￨10 utf8ToString￨10 (￨10 )￨10 )￨10 )￨10 ,￨10 expected￨10 .￨10 scoreDocs￨10 .￨10 length￨10 ,￨10 actual￨10 .￨10 scoreDocs￨10 .￨10 length￨10 )￨10 ;￨10 for￨10 (￨10 int￨11 hit￨11 =￨11 0￨11 ;￨11 hit￨11 <￨11 (￨11 expected￨11 .￨11 scoreDocs￨11 .￨11 length￨11 )￨11 ;￨11 hit￨11 ++￨11 )￨10 {￨10 assertEquals￨11 (￨11 expected￨11 .￨11 scoreDocs￨11 [￨11 hit￨11 ]￨11 .￨11 doc￨11 ,￨11 actual￨11 .￨11 scoreDocs￨11 [￨11 hit￨11 ]￨11 .￨11 doc￨11 )￨11 ;￨11 assertTrue￨11 (￨11 (￨11 (￨11 expected￨11 .￨11 scoreDocs￨11 [￨11 hit￨11 ]￨11 .￨11 score￨11 )￨11 ==￨11 (￨11 actual￨11 .￨11 scoreDocs￨11 [￨11 hit￨11 ]￨11 .￨11 score￨11 )￨11 )￨11 )￨11 ;￨11 }￨10 }￨9 }￨8 }￨7 catch￨7 (￨7 Exception￨8 e￨8 )￨7 {￨7 throw￨8 new￨8 RuntimeException￨8 (￨8 e￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 ;￨5 threads￨5 [￨5 threadID￨5 ]￨5 =￨5 thread￨5 ;￨5 thread￨5 .￨5 start￨5 (￨5 )￨5 ;￨5 }￨4 startingGun￨4 .￨4 countDown￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 Thread￨5 thread￨5 :￨5 threads￨5 )￨4 {￨4 thread￨5 .￨5 join￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 r￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 dir￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
class￨1 ClipboardProxy￨1 {￨1 Display￨2 display￨2 ;￨2 int￨2 shellHandle￨2 ;￨2 int￨2 atomAtom￨2 ;￨2 int￨2 clipboardAtom￨2 ;￨2 int￨2 motifClipboardAtom￨2 ;￨2 int￨2 primaryAtom￨2 ;￨2 int￨2 targetsAtom￨2 ;￨2 int￨2 [￨2 ]￨2 [￨2 ]￨2 convertData￨2 =￨2 new￨2 int￨2 [￨2 10￨2 ]￨2 [￨2 3￨2 ]￨2 ;￨2 Clipboard￨2 activeClipboard￨2 =￨2 null￨2 ;￨2 Clipboard￨2 activePrimaryClipboard￨2 =￨2 null￨2 ;￨2 Object￨2 [￨2 ]￨2 clipboardData￨2 ;￨2 Transfer￨2 [￨2 ]￨2 clipboardDataTypes￨2 ;￨2 Object￨2 [￨2 ]￨2 primaryClipboardData￨2 ;￨2 Transfer￨2 [￨2 ]￨2 primaryClipboardDataTypes￨2 ;￨2 boolean￨2 done￨2 =￨2 false￨2 ;￨2 Object￨2 selectionValue￨2 ;￨2 Transfer￨2 selectionTransfer￨2 ;￨2 Callback￨2 XtConvertSelectionCallback￨2 ;￨2 Callback￨2 XtLoseSelectionCallback￨2 ;￨2 Callback￨2 XtSelectionDoneCallback￨2 ;￨2 Callback￨2 XtSelectionCallbackCallback￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 ATOM￨2 =￨2 Converter￨2 .￨2 wcsToMbcs￨2 (￨2 null￨2 ,￨2 "ATOM"￨2 ,￨2 true￨2 )￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 CLIPBOARD￨2 =￨2 Converter￨2 .￨2 wcsToMbcs￨2 (￨2 null￨2 ,￨2 "CLIPBOARD"￨2 ,￨2 true￨2 )￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 PRIMARY￨2 =￨2 Converter￨2 .￨2 wcsToMbcs￨2 (￨2 null￨2 ,￨2 "PRIMARY"￨2 ,￨2 true￨2 )￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 TARGETS￨2 =￨2 Converter￨2 .￨2 wcsToMbcs￨2 (￨2 null￨2 ,￨2 "TARGETS"￨2 ,￨2 true￨2 )￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 _MOTIF_CLIPBOARD_TARGETS￨2 =￨2 Converter￨2 .￨2 wcsToMbcs￨2 (￨2 null￨2 ,￨2 "_MOTIF_CLIPBOARD_TARGETS"￨2 ,￨2 true￨2 )￨2 ;￨2 static￨2 String￨2 ID￨2 =￨2 "CLIPBOARD<seq2seq4repair_space>PROXY<seq2seq4repair_space>OBJECT"￨2 ;￨2 static￨2 ClipboardProxy￨2 _getInstance￨2 (￨2 final￨3 Display￨3 display￨3 )￨2 {￨2 }￨2 ClipboardProxy￨2 (￨2 Display￨3 display￨3 )￨2 {￨2 }￨2 void￨2 clear￨2 (￨2 Clipboard￨3 owner￨3 ,￨3 int￨3 clipboards￨3 )￨2 {￨2 }￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 Object￨2 getContents￨2 (￨2 Transfer￨3 transfer￨3 ,￨3 int￨3 clipboardType￨3 )￨2 {￨2 }￨2 int￨2 [￨2 ]￨2 getAvailableTypes￨2 (￨2 int￨3 clipboardType￨3 )￨2 {￨2 }￨2 void￨2 setContents￨2 (￨2 Clipboard￨3 owner￨3 ,￨3 Object￨3 [￨3 ]￨3 data￨3 ,￨3 Transfer￨3 [￨3 ]￨3 dataTypes￨3 ,￨3 int￨3 clipboards￨3 )￨2 {￨2 }￨2 void￨2 storePtr￨2 (￨2 int￨3 ptr￨3 ,￨3 int￨3 selection￨3 ,￨3 int￨3 target￨3 )￨2 {￨2 int￨3 index￨3 =￨3 -￨3 1￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 convertData￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 convertData￨5 [￨5 i￨5 ]￨5 [￨5 0￨5 ]￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 index￨5 =￨5 i￨5 ;￨5 break￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 index￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 int￨4 [￨4 ]￨4 [￨4 ]￨4 newConvertData￨4 =￨4 new￨4 int￨4 [￨4 convertData￨4 .￨4 length￨4 ]￨4 [￨4 3￨4 ]￨4 ;￨4 <END_BUG>￨4 System￨4 .￨4 arraycopy￨4 (￨4 convertData￨4 ,￨4 0￨4 ,￨4 newConvertData￨4 ,￨4 0￨4 ,￨4 convertData￨4 .￨4 length￨4 )￨4 ;￨4 index￨4 =￨4 convertData￨4 .￨4 length￨4 ;￨4 convertData￨4 =￨4 newConvertData￨4 ;￨4 }￨3 convertData￨3 [￨3 index￨3 ]￨3 [￨3 0￨3 ]￨3 =￨3 selection￨3 ;￨3 convertData￨3 [￨3 index￨3 ]￨3 [￨3 1￨3 ]￨3 =￨3 target￨3 ;￨3 convertData￨3 [￨3 index￨3 ]￨3 [￨3 2￨3 ]￨3 =￨3 ptr￨3 ;￨3 }￨2 void￨2 wait￨2 (￨2 int￨3 timeout￨3 )￨2 {￨2 }￨2 int￨2 checkEvent￨2 (￨2 int￨3 display￨3 ,￨3 int￨3 event￨3 ,￨3 int￨3 arg￨3 )￨2 {￨2 }￨2 int￨2 XtConvertSelection￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 selection￨3 ,￨3 int￨3 target￨3 ,￨3 int￨3 type￨3 ,￨3 int￨3 value￨3 ,￨3 int￨3 length￨3 ,￨3 int￨3 format￨3 )￨2 {￨2 }￨2 int￨2 XtLoseSelection￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 selection￨3 )￨2 {￨2 }￨2 int￨2 XtSelectionCallback￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 client_data￨3 ,￨3 int￨3 selection￨3 ,￨3 int￨3 type￨3 ,￨3 int￨3 value￨3 ,￨3 int￨3 length￨3 ,￨3 int￨3 format￨3 )￨2 {￨2 }￨2 int￨2 XtSelectionDone￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 selection￨3 ,￨3 int￨3 target￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AjaxTimerBehaviorTest￨1 extends￨1 WicketTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 AjaxTimerBehaviorTest￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 void￨2 testAddToAjaxUpdate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddToWebPage￨2 (￨2 )￨2 {￨2 Duration￨3 dur￨3 =￨3 Duration￨3 .￨3 seconds￨3 (￨3 20￨3 )￨3 ;￨3 final￨3 AjaxTimerBehaviorTest￨3 .￨3 MyAjaxSelfUpdatingTimerBehavior￨3 timer￨3 =￨3 new￨3 AjaxTimerBehaviorTest￨3 .￨3 MyAjaxSelfUpdatingTimerBehavior￨3 (￨3 dur￨3 )￨3 ;￨3 final￨3 MockPageWithLinkAndComponent￨3 page￨3 =￨3 new￨3 MockPageWithLinkAndComponent￨3 (￨3 )￨3 ;￨3 Label￨3 label￨3 =￨3 new￨3 Label￨3 (￨3 MockPageWithLinkAndComponent￨3 .￨3 COMPONENT_ID￨3 ,￨3 "Hello"￨3 )￨3 ;￨3 page￨3 .￨3 add￨3 (￨3 label￨3 )￨3 ;￨3 <START_BUG>￨3 page￨3 .￨3 add￨3 (￨3 new￨3 Link￨3 (￨3 MockPageWithLinkAndComponent￨3 .￨3 LINK_ID￨3 )￨3 {￨3 <END_BUG>￨3 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 onClick￨3 (￨3 )￨3 {￨3 }￨3 }￨3 )￨3 ;￨3 label￨3 .￨3 setOutputMarkupId￨3 (￨3 true￨3 )￨3 ;￨3 label￨3 .￨3 add￨3 (￨3 timer￨3 )￨3 ;￨3 tester￨3 .￨3 startPage￨3 (￨3 page￨3 )￨3 ;￨3 validate￨3 (￨3 timer￨3 ,￨3 true￨3 )￨3 ;￨3 tester￨3 .￨3 clickLink￨3 (￨3 LINK_ID￨3 )￨3 ;￨3 validate￨3 (￨3 timer￨3 ,￨3 true￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 validate￨2 (￨2 AjaxTimerBehaviorTest￨3 .￨3 MyAjaxSelfUpdatingTimerBehavior￨3 timer￨3 ,￨3 boolean￨3 inBodyOnLoad￨3 )￨2 {￨2 }￨2 private￨2 void￨2 validateTimerScript￨2 (￨2 String￨3 document￨3 ,￨3 String￨3 updateScript￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 quote￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 static￨2 class￨2 MyAjaxSelfUpdatingTimerBehavior￨2 extends￨2 AjaxSelfUpdatingTimerBehavior￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 final￨3 Duration￨3 duration￨3 ;￨3 String￨3 updateScript￨3 ;￨3 public￨3 MyAjaxSelfUpdatingTimerBehavior￨3 (￨3 Duration￨4 updateInterval￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentRendered￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getUpdateScript￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 ScheduledThreadPoolAdd￨1 extends￨1 AbstractExecutorAdd￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 5597662601486525937L￨2 ;￨2 public￨2 ScheduledThreadPoolAdd￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 ScaledCount￨3 maxThreads￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 <￨2 P￨2 >￨2 void￨2 applyUpdate￨2 (￨2 final￨3 UpdateContext￨3 updateContext￨3 ,￨3 final￨3 UpdateResultHandler￨3 <￨3 ?￨3 super￨3 Void￨3 ,￨3 P￨3 >￨3 handler￨3 ,￨3 final￨3 P￨3 param￨3 )￨2 {￨2 <START_BUG>￨3 final￨3 BatchBuilder￨3 builder￨3 =￨3 updateContext￨3 .￨3 getBatchBuilder￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ScaledCount￨3 maxThreadsCount￨3 =￨3 getMaxThreads￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 maxThreads￨3 =￨3 maxThreadsCount￨3 .￨3 getScaledCount￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 name￨3 =￨3 getName￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 serviceName￨3 =￨3 ThreadsServices￨3 .￨3 executorName￨3 (￨3 name￨3 )￨3 ;￨3 final￨3 UnboundedQueueThreadPoolService￨3 service￨3 =￨3 new￨3 UnboundedQueueThreadPoolService￨3 (￨3 maxThreads￨3 ,￨3 getKeepaliveTime￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 ServiceBuilder￨3 <￨3 ExecutorService￨3 >￨3 serviceBuilder￨3 =￨3 builder￨3 .￨3 addService￨3 (￨3 serviceName￨3 ,￨3 service￨3 )￨3 ;￨3 addThreadFactoryDependency￨3 (￨3 serviceName￨3 ,￨3 serviceBuilder￨3 ,￨3 service￨3 .￨3 getThreadFactoryInjector￨3 (￨3 )￨3 ,￨3 builder￨3 )￨3 ;￨3 serviceBuilder￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 applyUpdate￨2 (￨2 final￨2 ThreadsSubsystemElement￨2 element￨2 )￨2 throws￨2 UpdateFailedException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 GeneralTopologyContext￨1 implements￨1 JSONAware￨1 {￨1 private￨2 StormTopology￨2 _topology￨2 ;￨2 private￨2 Map￨2 <￨2 Integer￨2 ,￨2 String￨2 >￨2 _taskToComponent￨2 ;￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Integer￨2 >￨2 >￨2 _componentToTasks￨2 ;￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 Fields￨2 >￨2 >￨2 _componentToStreamToFields￨2 ;￨2 private￨2 String￨2 _stormId￨2 ;￨2 protected￨2 Map￨2 _stormConf￨2 ;￨2 public￨2 GeneralTopologyContext￨2 (￨2 StormTopology￨3 topology￨3 ,￨3 Map￨3 stormConf￨3 ,￨3 Map￨3 <￨3 Integer￨3 ,￨3 String￨3 >￨3 taskToComponent￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 Integer￨3 >￨3 >￨3 componentToSortedTasks￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Fields￨3 >￨3 >￨3 componentToStreamToFields￨3 ,￨3 String￨3 stormId￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getStormId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StormTopology￨2 getRawTopology￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getComponentId￨2 (￨2 int￨3 taskId￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 taskId￨3 ==￨3 (￨3 Constants￨3 .￨3 SYSTEM_TASK_ID￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 Constants￨3 .￨3 SYSTEM_COMPONENT_ID￨3 ;￨3 else￨3 {￨3 return￨4 _taskToComponent￨4 .￨4 get￨4 (￨4 taskId￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Set￨2 <￨2 String￨2 >￨2 getComponentStreams￨2 (￨2 String￨3 componentId￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 Integer￨2 >￨2 getComponentTasks￨2 (￨2 String￨3 componentId￨3 )￨2 {￨2 }￨2 public￨2 Fields￨2 getComponentOutputFields￨2 (￨2 String￨3 componentId￨3 ,￨3 String￨3 streamId￨3 )￨2 {￨2 }￨2 public￨2 Fields￨2 getComponentOutputFields￨2 (￨2 GlobalStreamId￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 GlobalStreamId￨2 ,￨2 Grouping￨2 >￨2 getSources￨2 (￨2 String￨3 componentId￨3 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 String￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 Grouping￨2 >￨2 >￨2 getTargets￨2 (￨2 String￨3 componentId￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toJSONString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 Integer￨2 ,￨2 String￨2 >￨2 getTaskToComponent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 String￨2 >￨2 getComponentIds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ComponentCommon￨2 getComponentCommon￨2 (￨2 String￨3 componentId￨3 )￨2 {￨2 }￨2 public￨2 int￨2 maxTopologyMessageTimeout￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ResourceLink￨1 extends￨1 Link￨1 implements￨1 IResourceListener￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 final￨2 ResourceReference￨2 resourceReference￨2 ;￨2 private￨2 final￨2 Resource￨2 resource￨2 ;￨2 public￨2 ResourceLink￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 final￨3 ResourceReference￨3 resourceReference￨3 )￨2 {￨2 }￨2 public￨2 ResourceLink￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 final￨3 Resource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onClick￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 String￨2 getURL￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 resourceReference￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 resourceReference￨4 .￨4 setLocale￨4 (￨4 getLocale￨4 (￨4 )￨4 )￨4 ;￨4 resourceReference￨4 .￨4 setStyle￨4 (￨4 getStyle￨4 (￨4 )￨4 )￨4 ;￨4 resourceReference￨4 .￨4 bind￨4 (￨4 getApplication￨4 (￨4 )￨4 )￨4 ;￨4 return￨4 getRequestCycle￨4 (￨4 )￨4 .￨4 urlFor￨4 (￨4 resourceReference￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 urlFor￨3 (￨3 IResourceListener￨3 .￨3 class￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 final￨2 void￨2 onResourceRequested￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PersistenceProviderImpl￨1 implements￨1 PersistenceProvider￨1 ,￨1 ProviderUtil￨1 {￨1 static￨2 final￨2 String￨2 CLASS_TRANSFORMER_OPTIONS￨2 =￨2 "ClassTransformerOptions"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 EMF_POOL￨2 =￨2 "EntityManagerFactoryPool"￨2 ;￨2 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 PersistenceProviderImpl￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 Log￨2 _log￨2 ;￨2 public￨2 OpenJPAEntityManagerFactory￨2 createEntityManagerFactory￨2 (￨2 String￨2 name￨2 ,￨2 String￨2 resource￨2 ,￨2 Map￨2 m￨2 )￨2 {￨2 }￨2 private￨2 BrokerFactory￨2 getBrokerFactory￨2 (￨2 ConfigurationProvider￨3 cp￨3 ,￨3 Object￨3 poolValue￨3 ,￨3 ClassLoader￨3 loader￨3 )￨2 {￨2 }￨2 public￨2 OpenJPAEntityManagerFactory￨2 createEntityManagerFactory￨2 (￨2 String￨3 name￨3 ,￨3 Map￨3 m￨3 )￨2 {￨2 }￨2 public￨2 OpenJPAEntityManagerFactory￨2 createContainerEntityManagerFactory￨2 (￨2 PersistenceUnitInfo￨3 pui￨3 ,￨3 Map￨3 m￨3 )￨2 {￨2 PersistenceProductDerivation￨3 pd￨3 =￨3 new￨3 PersistenceProductDerivation￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Object￨4 poolValue￨4 =￨4 Configurations￨4 .￨4 removeProperty￨4 (￨4 PersistenceProviderImpl￨4 .￨4 EMF_POOL￨4 ,￨4 m￨4 )￨4 ;￨4 ConfigurationProvider￨4 cp￨4 =￨4 pd￨4 .￨4 load￨4 (￨4 pui￨4 ,￨4 m￨4 )￨4 ;￨4 if￨4 (￨4 cp￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 Exception￨4 transformerException￨4 =￨4 null￨4 ;￨4 String￨4 ctOpts￨4 =￨4 (￨4 (￨4 String￨4 )￨4 (￨4 Configurations￨4 .￨4 getProperty￨4 (￨4 PersistenceProviderImpl￨4 .￨4 CLASS_TRANSFORMER_OPTIONS￨4 ,￨4 pui￨4 .￨4 getProperties￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 pui￨5 .￨5 addTransformer￨5 (￨5 new￨5 PersistenceProviderImpl￨5 .￨5 ClassTransformerImpl￨5 (￨5 cp￨5 ,￨5 ctOpts￨5 ,￨5 pui￨5 .￨5 getNewTempClassLoader￨5 (￨5 )￨5 ,￨5 newConfigurationImpl￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 e￨5 )￨4 {￨4 transformerException￨5 =￨5 e￨5 ;￨5 }￨4 if￨4 (￨4 !￨5 (￨5 Configurations￨5 .￨5 containsProperty￨5 (￨5 KEY￨5 ,￨5 cp￨5 .￨5 getProperties￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 cp￨5 .￨5 addProperty￨5 (￨5 (￨5 "openjpa."￨5 +￨5 (￨5 BrokerValue￨5 .￨5 KEY￨5 )￨5 )￨5 ,￨5 getDefaultBrokerAlias￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 BrokerFactory￨4 factory￨4 =￨4 getBrokerFactory￨4 (￨4 cp￨4 ,￨4 poolValue￨4 ,￨4 pui￨4 .￨4 getClassLoader￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 transformerException￨5 !=￨5 null￨5 )￨4 {￨4 Log￨5 log￨5 =￨5 factory￨5 .￨5 getConfiguration￨5 (￨5 )￨5 .￨5 getLog￨5 (￨5 LOG_RUNTIME￨5 )￨5 ;￨5 if￨5 (￨5 log￨6 .￨6 isTraceEnabled￨6 (￨6 )￨6 )￨5 {￨5 log￨6 .￨6 warn￨6 (￨6 PersistenceProviderImpl￨6 .￨6 _loc￨6 .￨6 get￨6 (￨6 "transformer-registration-error-ex"￨6 ,￨6 pui￨6 )￨6 ,￨6 transformerException￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 log￨6 .￨6 warn￨6 (￨6 PersistenceProviderImpl￨6 .￨6 _loc￨6 .￨6 get￨6 (￨6 "transformer-registration-error"￨6 ,￨6 pui￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 OpenJPAConfiguration￨4 conf￨4 =￨4 factory￨4 .￨4 getConfiguration￨4 (￨4 )￨4 ;￨4 _log￨4 =￨4 conf￨4 .￨4 getLog￨4 (￨4 LOG_RUNTIME￨4 )￨4 ;￨4 loadValidator￨4 (￨4 _log￨4 ,￨4 conf￨4 )￨4 ;￨4 Options￨4 o￨4 =￨4 Configurations￨4 .￨4 parseProperties￨4 (￨4 Configurations￨4 .￨4 getProperties￨4 (￨4 "openjpa.MetaDataRepository"￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 o￨5 .￨5 getBooleanProperty￨5 (￨5 "Preload"￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 conf￨5 .￨5 getAbstractBrokerFactoryInstance￨5 (￨5 )￨5 .￨5 preload￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 return￨4 JPAFacadeHelper￨4 .￨4 toEntityManagerFactory￨4 (￨4 factory￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 throw￨4 PersistenceExceptions￨4 .￨4 toPersistenceException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 ProviderUtil￨2 getProviderUtil￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getDefaultBrokerAlias￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 OpenJPAConfiguration￨2 newConfigurationImpl￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 ClassTransformerImpl￨2 implements￨2 ClassTransformer￨2 {￨2 private￨3 final￨3 ClassFileTransformer￨3 _trans￨3 ;￨3 private￨3 ClassTransformerImpl￨3 (￨3 ConfigurationProvider￨4 cp￨4 ,￨4 String￨4 props￨4 ,￨4 final￨4 ClassLoader￨4 tmpLoader￨4 ,￨4 OpenJPAConfiguration￨4 conf￨4 )￨3 {￨3 }￨3 public￨3 byte￨3 [￨3 ]￨3 transform￨3 (￨3 ClassLoader￨3 cl￨3 ,￨3 String￨3 name￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 previousVersion￨3 ,￨3 ProtectionDomain￨3 pd￨3 ,￨3 byte￨3 [￨3 ]￨3 bytes￨3 )￨3 throws￨3 IllegalClassFormatException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 void￨2 loadAgent￨2 (￨2 Log￨3 log￨3 ,￨3 OpenJPAConfiguration￨3 conf￨3 )￨2 {￨2 }￨2 private￨2 void￨2 loadValidator￨2 (￨2 Log￨3 log￨3 ,￨3 OpenJPAConfiguration￨3 conf￨3 )￨2 {￨2 }￨2 public￨2 LoadState￨2 isLoaded￨2 (￨2 Object￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 LoadState￨2 isLoadedWithReference￨2 (￨2 Object￨3 obj￨3 ,￨3 String￨3 attr￨3 )￨2 {￨2 }￨2 public￨2 LoadState￨2 isLoadedWithoutReference￨2 (￨2 Object￨3 obj￨3 ,￨3 String￨3 attr￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 EudoraMailImportFilter￨1 extends￨1 AbstractMailboxImporter￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.columba.mail"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TIME_ZONE￨2 =￨2 new￨2 SimpleDateFormat￨2 (￨2 "Z"￨2 )￨2 .￨2 format￨2 (￨2 new￨2 Date￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULT_CHARSET￨2 =￨2 System￨2 .￨2 getProperty￨2 (￨2 "file.encoding"￨2 )￨2 ;￨2 public￨2 EudoraMailImportFilter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EudoraMailImportFilter￨2 (￨2 IMailbox￨3 destinationFolder￨3 ,￨3 File￨3 [￨3 ]￨3 sourceFiles￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDescription￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 importMailboxFile￨2 (￨2 File￨2 file￨2 ,￨2 IWorkerStatusController￨2 worker￨2 ,￨2 IMailbox￨2 destFolder￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getNewDateHeader￨2 (￨2 String￨3 dateStr￨3 ,￨3 String￨3 timeZone￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 convertAndSaveMessage￨2 (￨2 String￨3 msg￨3 ,￨3 String￨3 replacementDate￨3 ,￨3 IWorkerStatusController￨3 worker￨3 ,￨3 IMailbox￨3 destFolder￨3 )￨2 {￨2 String￨3 [￨3 ]￨3 divided￨3 =￨3 divideMessage￨3 (￨3 msg￨3 )￨3 ;￨3 if￨3 (￨3 divided￨4 ==￨4 null￨4 )￨3 {￨3 EudoraMailImportFilter￨4 .￨4 LOG￨4 .￨4 severe￨4 (￨4 "Error<seq2seq4repair_space>splitting<seq2seq4repair_space>message<seq2seq4repair_space>into<seq2seq4repair_space>headers<seq2seq4repair_space>and<seq2seq4repair_space>body"￨4 )￨4 ;￨4 return￨4 false￨4 ;￨4 }￨3 String￨3 headers￨3 =￨3 divided￨3 [￨3 0￨3 ]￨3 ;￨3 String￨3 body￨3 =￨3 divided￨3 [￨3 1￨3 ]￨3 ;￨3 HeaderTokenizer￨3 tokenizer￨3 =￨3 new￨3 HeaderTokenizer￨3 (￨3 headers￨3 )￨3 ;￨3 EncodedWord￨3 decoder￨3 =￨3 new￨3 EncodedWord￨3 (￨3 )￨3 ;￨3 StringBuffer￨3 headerBuf￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 boolean￨3 dateFound￨3 =￨3 false￨3 ;￨3 boolean￨3 contentTypeFound￨3 =￨3 false￨3 ;￨3 String￨3 line￨3 =￨3 tokenizer￨3 .￨3 nextLine￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 line￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 (￨5 line￨5 .￨5 indexOf￨5 (￨5 ':'￨5 )￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 String￨5 key￨5 =￨5 line￨5 .￨5 substring￨5 (￨5 0￨5 ,￨5 line￨5 .￨5 indexOf￨5 (￨5 ':'￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 String￨5 header￨5 =￨5 decoder￨5 .￨5 decode￨5 (￨5 (￨5 (￨5 CharSequence￨5 )￨5 (￨5 line￨5 .￨5 substring￨5 (￨5 (￨5 (￨5 line￨5 .￨5 indexOf￨5 (￨5 ':'￨5 )￨5 )￨5 +￨5 1￨5 )￨5 )￨5 .￨5 trim￨5 (￨5 )￨5 )￨5 )￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 if￨5 (￨5 key￨6 .￨6 equalsIgnoreCase￨6 (￨6 "Date"￨6 )￨6 )￨5 {￨5 dateFound￨6 =￨6 true￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 key￨6 .￨6 equalsIgnoreCase￨6 (￨6 "Content-Type"￨6 )￨6 )￨5 {￨5 contentTypeFound￨6 =￨6 true￨6 ;￨6 ContentType￨6 conType￨6 =￨6 new￨6 ContentType￨6 (￨6 header￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 conType￨7 .￨7 getType￨7 (￨7 )￨7 .￨7 equalsIgnoreCase￨7 (￨7 "multipart"￨7 )￨7 )￨7 &&￨7 (￨7 (￨7 body￨7 .￨7 indexOf￨7 (￨7 (￨7 "--"￨7 +￨7 (￨7 conType￨7 .￨7 getBoundary￨7 (￨7 )￨7 )￨7 )￨7 )￨7 )￨7 ==￨7 (￨7 -￨7 1￨7 )￨7 )￨7 )￨6 {￨6 if￨7 (￨7 conType￨8 .￨8 getSubType￨8 (￨8 )￨8 .￨8 equalsIgnoreCase￨8 (￨8 "alternative"￨8 )￨8 )￨7 {￨7 header￨8 =￨8 guessBodyContentType￨8 (￨8 body￨8 )￨8 ;￨8 EudoraMailImportFilter￨8 .￨8 LOG￨8 .￨8 fine￨8 (￨8 (￨8 "Content-Type:<seq2seq4repair_space>multipart/alternative<seq2seq4repair_space>replaced<seq2seq4repair_space>with<seq2seq4repair_space>"￨8 +￨8 header￨8 )￨8 )￨8 ;￨8 }￨7 else￨7 {￨7 String￨8 [￨8 ]￨8 split￨8 =￨8 createAttachmentListFromAttachmentConverted￨8 (￨8 body￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 split￨9 ==￨9 null￨9 )￨9 ||￨9 (￨9 (￨9 split￨9 .￨9 length￨9 )￨9 ==￨9 1￨9 )￨9 )￨8 {￨8 header￨9 =￨9 guessBodyContentType￨9 (￨9 body￨9 )￨9 ;￨9 EudoraMailImportFilter￨9 .￨9 LOG￨9 .￨9 fine￨9 (￨9 (￨9 (￨9 (￨9 "Content-Type:<seq2seq4repair_space>multipart/"￨9 +￨9 (￨9 conType￨9 .￨9 getSubType￨9 (￨9 )￨9 )￨9 )￨9 +￨9 "<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>"￨9 )￨9 +￨9 header￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 {￨8 header￨9 =￨9 "multipart/mixed;\n\tboundary="￨9 +￨9 (￨9 conType￨9 .￨9 getBoundary￨9 (￨9 )￨9 )￨9 ;￨9 body￨9 =￨9 createBodyFromParts￨9 (￨9 split￨9 ,￨9 conType￨9 .￨9 getBoundary￨9 (￨9 )￨9 )￨9 ;￨9 EudoraMailImportFilter￨9 .￨9 LOG￨9 .￨9 fine￨9 (￨9 "Content-Type:<seq2seq4repair_space>multipart/mixed.<seq2seq4repair_space>Boundaries<seq2seq4repair_space>added<seq2seq4repair_space>to<seq2seq4repair_space>msg<seq2seq4repair_space>body"￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 }￨5 else￨5 if￨5 (￨5 key￨6 .￨6 equalsIgnoreCase￨6 (￨6 "X-Attachments"￨6 )￨6 )￨5 {￨5 if￨6 (￨6 (￨7 header￨7 .￨7 length￨7 (￨7 )￨7 )￨7 >￨7 0￨7 )￨6 {￨6 String￨7 [￨7 ]￨7 split￨7 =￨7 createAttachmentListFromHeader￨7 (￨7 body￨7 ,￨7 header￨7 )￨7 ;￨7 if￨7 (￨7 (￨8 split￨8 ==￨8 null￨8 )￨8 ||￨8 (￨8 (￨8 split￨8 .￨8 length￨8 )￨8 ==￨8 1￨8 )￨8 )￨7 {￨7 headerBuf￨8 .￨8 append￨8 (￨8 "MIME-Version:<seq2seq4repair_space>1.0\n"￨8 )￨8 ;￨8 key￨8 =￨8 "Content-Type"￨8 ;￨8 header￨8 =￨8 guessBodyContentType￨8 (￨8 body￨8 )￨8 ;￨8 contentTypeFound￨8 =￨8 true￨8 ;￨8 EudoraMailImportFilter￨8 .￨8 LOG￨8 .￨8 fine￨8 (￨8 (￨8 "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>"￨8 +￨8 header￨8 )￨8 )￨8 ;￨8 }￨7 else￨7 {￨7 String￨8 unique￨8 =￨8 getUniqueBoundary￨8 (￨8 body￨8 )￨8 ;￨8 headerBuf￨8 .￨8 append￨8 (￨8 "MIME-Version:<seq2seq4repair_space>1.0\n"￨8 )￨8 ;￨8 key￨8 =￨8 "Content-Type"￨8 ;￨8 header￨8 =￨8 "multipart/mixed;\n\tboundary="￨8 +￨8 unique￨8 ;￨8 contentTypeFound￨8 =￨8 true￨8 ;￨8 body￨8 =￨8 createBodyFromParts￨8 (￨8 split￨8 ,￨8 unique￨8 )￨8 ;￨8 EudoraMailImportFilter￨8 .￨8 LOG￨8 .￨8 fine￨8 (￨8 "X-Attachments<seq2seq4repair_space>header<seq2seq4repair_space>replaced<seq2seq4repair_space>by<seq2seq4repair_space>Content-Type:<seq2seq4repair_space>multipart/mixed"￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 headerBuf￨5 .￨5 append￨5 (￨5 (￨5 (￨5 (￨5 key￨5 +￨5 ":<seq2seq4repair_space>"￨5 )￨5 +￨5 header￨5 )￨5 +￨5 "\n"￨5 )￨5 )￨5 ;￨5 }￨4 line￨4 =￨4 tokenizer￨4 .￨4 nextLine￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 dateFound￨4 )￨3 {￨3 EudoraMailImportFilter￨4 .￨4 LOG￨4 .￨4 fine￨4 (￨4 "Date<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨4 )￨4 ;￨4 String￨4 dateHeader￨4 =￨4 getNewDateHeader￨4 (￨4 replacementDate￨4 ,￨4 EudoraMailImportFilter￨4 .￨4 TIME_ZONE￨4 )￨4 ;￨4 if￨4 (￨4 dateHeader￨5 !=￨5 null￨5 )￨4 {￨4 headerBuf￨5 .￨5 append￨5 (￨5 (￨5 dateHeader￨5 +￨5 "\n"￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 !￨4 contentTypeFound￨4 )￨3 {￨3 EudoraMailImportFilter￨4 .￨4 LOG￨4 .￨4 fine￨4 (￨4 "Content-Type<seq2seq4repair_space>header<seq2seq4repair_space>missing<seq2seq4repair_space>-<seq2seq4repair_space>constructing<seq2seq4repair_space>new<seq2seq4repair_space>one"￨4 )￨4 ;￨4 String￨4 contHeader￨4 =￨4 "Content-Type:<seq2seq4repair_space>"￨4 +￨4 (￨4 guessBodyContentType￨4 (￨4 body￨4 )￨4 )￨4 ;￨4 headerBuf￨4 .￨4 append￨4 (￨4 "MIME-Version:<seq2seq4repair_space>1.0\n"￨4 )￨4 ;￨4 headerBuf￨4 .￨4 append￨4 (￨4 (￨4 contHeader￨4 +￨4 "\n"￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 saveMessage￨3 (￨3 headerBuf￨3 .￨3 toString￨3 (￨3 )￨3 ,￨3 body￨3 ,￨3 worker￨3 ,￨3 destFolder￨3 )￨3 ;￨3 }￨2 private￨2 boolean￨2 saveMessage￨2 (￨2 String￨3 headers￨3 ,￨3 String￨3 body￨3 ,￨3 IWorkerStatusController￨3 worker￨3 ,￨3 IMailbox￨3 destFolder￨3 )￨2 {￨2 }￨2 private￨2 String￨2 createBodyFromParts￨2 (￨2 String￨3 [￨3 ]￨3 parts￨3 ,￨3 String￨3 boundary￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getUniqueBoundary￨2 (￨2 String￨3 body￨3 )￨2 {￨2 }￨2 private￨2 String￨2 [￨2 ]￨2 divideMessage￨2 (￨2 String￨3 input￨3 )￨2 {￨2 }￨2 private￨2 String￨2 guessBodyContentType￨2 (￨2 String￨3 body￨3 )￨2 {￨2 }￨2 private￨2 String￨2 [￨2 ]￨2 createAttachmentListFromHeader￨2 (￨2 String￨3 body￨3 ,￨3 String￨3 xAttachments￨3 )￨2 {￨2 }￨2 private￨2 String￨2 [￨2 ]￨2 createAttachmentListFromAttachmentConverted￨2 (￨2 String￨3 body￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 NSText￨1 extends￨1 NSView￨1 {￨1 public￨2 NSText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSText￨2 (￨2 int￨3 id￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 static_class￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSData￨2 RTFDFromRange￨2 (￨2 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 NSData￨2 RTFFromRange￨2 (￨2 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 void￨2 alignCenter￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 alignLeft￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 alignRight￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 int￨2 alignment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSColor￨2 backgroundColor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 baseWritingDirection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 changeFont￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 checkSpelling￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copy￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copyFont￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copyRuler￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 cut￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 id￨2 delegate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 delete￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 drawsBackground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSFont￨2 font￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 importsGraphics￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEditable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFieldEditor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isHorizontallyResizable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRichText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRulerVisible￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSelectable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVerticallyResizable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSSize￨2 maxSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSSize￨2 minSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 paste￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 pasteFont￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 pasteRuler￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 readRTFDFromFile￨2 (￨2 NSString￨3 path￨3 )￨2 {￨2 }￨2 public￨2 void￨2 replaceCharactersInRange_withRTF_￨2 (￨2 NSRange￨3 range￨3 ,￨3 NSData￨3 rtfData￨3 )￨2 {￨2 }￨2 public￨2 void￨2 replaceCharactersInRange_withRTFD_￨2 (￨2 NSRange￨3 range￨3 ,￨3 NSData￨3 rtfdData￨3 )￨2 {￨2 }￨2 public￨2 void￨2 replaceCharactersInRange_withString_￨2 (￨2 NSRange￨3 range￨3 ,￨3 NSString￨3 aString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 scrollRangeToVisible￨2 (￨2 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectAll￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 NSRange￨2 selectedRange￨2 (￨2 )￨2 {￨2 NSRange￨3 result￨3 =￨3 new￨3 NSRange￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 OS￨3 .￨3 objc_msgSend_struct￨3 (￨3 result￨3 ,￨3 this￨3 .￨3 id￨3 ,￨3 sel_selectedRange￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 void￨2 setAlignment￨2 (￨2 int￨3 mode￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBackgroundColor￨2 (￨2 NSColor￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBaseWritingDirection￨2 (￨2 int￨3 writingDirection￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDelegate￨2 (￨2 id￨3 anObject￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDrawsBackground￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEditable￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFieldEditor￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont_￨2 (￨2 NSFont￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont_range_￨2 (￨2 NSFont￨3 font￨3 ,￨3 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setHorizontallyResizable￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImportsGraphics￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaxSize￨2 (￨2 NSSize￨3 newMaxSize￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinSize￨2 (￨2 NSSize￨3 newMinSize￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRichText￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelectable￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelectedRange￨2 (￨2 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setString￨2 (￨2 NSString￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTextColor_￨2 (￨2 NSColor￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTextColor_range_￨2 (￨2 NSColor￨3 color￨3 ,￨3 NSRange￨3 range￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUsesFontPanel￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVerticallyResizable￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showGuessPanel￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 sizeToFit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NSString￨2 string￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 subscript￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 superscript￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 NSColor￨2 textColor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 toggleRuler￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 underline￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 void￨2 unscript￨2 (￨2 id￨3 sender￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 usesFontPanel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 writeRTFDToFile￨2 (￨2 NSString￨3 path￨3 ,￨3 boolean￨3 flag￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JoinDocFreqValueSource￨1 extends￨1 FieldCacheSource￨1 {￨1 public￨2 static￨2 final￨2 String￨2 NAME￨2 =￨2 "joindf"￨2 ;￨2 protected￨2 final￨2 String￨2 qfield￨2 ;￨2 public￨2 JoinDocFreqValueSource￨2 (￨2 String￨3 field￨3 ,￨3 String￨3 qfield￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 description￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 FunctionValues￨2 getValues￨2 (￨2 Map￨2 context￨2 ,￨2 AtomicReaderContext￨2 readerContext￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 BinaryDocValues￨3 terms￨3 =￨3 cache￨3 .￨3 getTerms￨3 (￨3 readerContext￨3 .￨3 reader￨3 (￨3 )￨3 ,￨3 field￨3 ,￨3 FAST￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 IndexReader￨3 top￨3 =￨3 ReaderUtil￨3 .￨3 getTopLevelContext￨3 (￨3 readerContext￨3 )￨3 .￨3 reader￨3 (￨3 )￨3 ;￨3 Terms￨3 t￨3 =￨3 MultiFields￨3 .￨3 getTerms￨3 (￨3 top￨3 ,￨3 qfield￨3 )￨3 ;￨3 final￨3 TermsEnum￨3 termsEnum￨3 =￨3 (￨3 t￨3 ==￨3 null￨3 )￨3 ?￨3 TermsEnum￨3 .￨3 EMPTY￨3 :￨3 t￨3 .￨3 iterator￨3 (￨3 null￨3 )￨3 ;￨3 return￨3 new￨3 IntDocValues￨3 (￨3 this￨4 )￨3 {￨3 final￨4 BytesRef￨4 ref￨4 =￨4 new￨4 BytesRef￨4 (￨4 )￨4 ;￨4 @￨4 Override￨4 public￨4 int￨4 intVal￨4 (￨4 int￨5 doc￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 terms￨6 .￨6 get￨6 (￨6 doc￨6 ,￨6 ref￨6 )￨6 ;￨6 if￨6 (￨6 termsEnum￨7 .￨7 seekExact￨7 (￨7 ref￨7 )￨7 )￨6 {￨6 return￨7 termsEnum￨7 .￨7 docFreq￨7 (￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 return￨7 0￨7 ;￨7 }￨6 }￨5 catch￨5 (￨5 IOException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 RuntimeException￨6 (￨6 (￨6 (￨6 (￨6 "caught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>function<seq2seq4repair_space>"￨6 +￨6 (￨6 description￨6 (￨6 )￨6 )￨6 )￨6 +￨6 "<seq2seq4repair_space>:<seq2seq4repair_space>doc="￨6 )￨6 +￨6 doc￨6 )￨6 ,￨6 e￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ExceptionHandlerExceptionResolver￨1 extends￨1 AbstractHandlerMethodExceptionResolver￨1 implements￨1 InitializingBean￨1 {￨1 private￨2 List￨2 <￨2 HandlerMethodArgumentResolver￨2 >￨2 customArgumentResolvers￨2 ;￨2 private￨2 List￨2 <￨2 HandlerMethodReturnValueHandler￨2 >￨2 customReturnValueHandlers￨2 ;￨2 private￨2 List￨2 <￨2 HttpMessageConverter￨2 <￨2 ?￨2 >￨2 >￨2 messageConverters￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 ExceptionHandlerMethodResolver￨2 >￨2 exceptionHandlerMethodResolvers￨2 =￨2 new￨2 ConcurrentHashMap￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 ExceptionHandlerMethodResolver￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 HandlerMethodArgumentResolverComposite￨2 argumentResolvers￨2 ;￨2 private￨2 HandlerMethodReturnValueHandlerComposite￨2 returnValueHandlers￨2 ;￨2 public￨2 ExceptionHandlerExceptionResolver￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCustomArgumentResolvers￨2 (￨2 List￨3 <￨3 HandlerMethodArgumentResolver￨3 >￨3 argumentResolvers￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setArgumentResolvers￨2 (￨2 List￨3 <￨3 HandlerMethodArgumentResolver￨3 >￨3 argumentResolvers￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCustomReturnValueHandlers￨2 (￨2 List￨3 <￨3 HandlerMethodReturnValueHandler￨3 >￨3 returnValueHandlers￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setReturnValueHandlers￨2 (￨2 List￨3 <￨3 HandlerMethodReturnValueHandler￨3 >￨3 returnValueHandlers￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMessageConverters￨2 (￨2 List￨3 <￨3 HttpMessageConverter￨3 <￨3 ?￨3 >￨3 >￨3 messageConverters￨3 )￨2 {￨2 }￨2 public￨2 void￨2 afterPropertiesSet￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 HandlerMethodArgumentResolver￨2 >￨2 getDefaultArgumentResolvers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 HandlerMethodReturnValueHandler￨2 >￨2 getDefaultReturnValueHandlers￨2 (￨2 List￨3 <￨3 HttpMessageConverter￨3 <￨3 ?￨3 >￨3 >￨3 messageConverters￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 ModelAndView￨2 doResolveHandlerMethodException￨2 (￨2 HttpServletRequest￨3 request￨3 ,￨3 HttpServletResponse￨3 response￨3 ,￨3 HandlerMethod￨3 handlerMethod￨3 ,￨3 Exception￨3 exception￨3 )￨2 {￨2 if￨3 (￨3 handlerMethod￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 ServletInvocableHandlerMethod￨3 exceptionHandlerMethod￨3 =￨3 getExceptionHandlerMethod￨3 (￨3 handlerMethod￨3 ,￨3 exception￨3 )￨3 ;￨3 if￨3 (￨3 exceptionHandlerMethod￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 exceptionHandlerMethod￨3 .￨3 setHandlerMethodArgumentResolvers￨3 (￨3 this￨3 .￨3 argumentResolvers￨3 )￨3 ;￨3 exceptionHandlerMethod￨3 .￨3 setHandlerMethodReturnValueHandlers￨3 (￨3 this￨3 .￨3 returnValueHandlers￨3 )￨3 ;￨3 ServletWebRequest￨3 webRequest￨3 =￨3 new￨3 ServletWebRequest￨3 (￨3 request￨3 ,￨3 response￨3 )￨3 ;￨3 ModelAndViewContainer￨3 mavContainer￨3 =￨3 new￨3 ModelAndViewContainer￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 logger￨5 .￨5 isDebugEnabled￨5 (￨5 )￨5 )￨4 {￨4 logger￨5 .￨5 debug￨5 (￨5 (￨5 "Invoking<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨5 +￨5 exceptionHandlerMethod￨5 )￨5 )￨5 ;￨5 }￨4 exceptionHandlerMethod￨4 .￨4 invokeAndHandle￨4 (￨4 webRequest￨4 ,￨4 mavContainer￨4 ,￨4 exception￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 invocationEx￨4 )￨3 {￨3 logger￨4 .￨4 error￨4 (￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>invoke<seq2seq4repair_space>@ExceptionHandler<seq2seq4repair_space>method:<seq2seq4repair_space>"￨4 +￨4 exceptionHandlerMethod￨4 )￨4 ,￨4 invocationEx￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 mavContainer￨3 .￨3 isResolveView￨3 (￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 new￨3 ModelAndView￨3 (￨3 )￨3 ;￨3 else￨3 {￨3 ModelAndView￨4 mav￨4 =￨4 new￨4 ModelAndView￨4 (￨4 )￨4 .￨4 addAllObjects￨4 (￨4 mavContainer￨4 .￨4 getModel￨4 (￨4 )￨4 )￨4 ;￨4 mav￨4 .￨4 setViewName￨4 (￨4 mavContainer￨4 .￨4 getViewName￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 mavContainer￨5 .￨5 isViewReference￨5 (￨5 )￨5 )￨5 )￨4 {￨4 mav￨5 .￨5 setView￨5 (￨5 (￨5 (￨5 View￨5 )￨5 (￨5 mavContainer￨5 .￨5 getView￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 mav￨4 ;￨4 }￨3 }￨2 protected￨2 ServletInvocableHandlerMethod￨2 getExceptionHandlerMethod￨2 (￨2 HandlerMethod￨3 handlerMethod￨3 ,￨3 Exception￨3 exception￨3 )￨2 {￨2 }￨2 private￨2 ExceptionHandlerMethodResolver￨2 getExceptionHandlerMethodResolver￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 handlerType￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ProjectBrowser￨1 extends￨1 JFrame￨1 implements￨1 IStatusBar￨1 {￨1 public￨2 static￨2 ProjectBrowser￨2 TheInstance￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionNew￨2 =￨2 Actions￨2 .￨2 New￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionOpen￨2 =￨2 Actions￨2 .￨2 Open￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionSave￨2 =￨2 Actions￨2 .￨2 Save￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionSaveAs￨2 =￨2 Actions￨2 .￨2 SaveAs￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionAddToProj￨2 =￨2 Actions￨2 .￨2 AddToProj￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionPrint￨2 =￨2 Actions￨2 .￨2 Print￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionExit￨2 =￨2 Actions￨2 .￨2 Exit￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionUndo￨2 =￨2 Actions￨2 .￨2 Undo￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionRedo￨2 =￨2 Actions￨2 .￨2 Redo￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionCut￨2 =￨2 Actions￨2 .￨2 Cut￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionCopy￨2 =￨2 Actions￨2 .￨2 Copy￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionPaste￨2 =￨2 Actions￨2 .￨2 Paste￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionDelete￨2 =￨2 new￨2 CmdDelete￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionDispose￨2 =￨2 new￨2 CmdDispose￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionNavUp￨2 =￨2 Actions￨2 .￨2 NavUp￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionNavDown￨2 =￨2 Actions￨2 .￨2 NavDown￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionNextTab￨2 =￨2 Actions￨2 .￨2 NextTab￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionPrevTab￨2 =￨2 Actions￨2 .￨2 PrevTab￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionShowDiagramTab￨2 =￨2 Actions￨2 .￨2 ShowDiagramTab￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionShowTableTab￨2 =￨2 Actions￨2 .￨2 ShowTableTab￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionShowTextTab￨2 =￨2 Actions￨2 .￨2 ShowTextTab￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionAddToFavs￨2 =￨2 Actions￨2 .￨2 AddToFavs￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionCreateMultiple￨2 =￨2 Actions￨2 .￨2 CreateMultiple￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionClassDiagram￨2 =￨2 Actions￨2 .￨2 ClassDiagram￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionUseCaseDiagram￨2 =￨2 Actions￨2 .￨2 UseCaseDiagram￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionStateDiagram￨2 =￨2 Actions￨2 .￨2 StateDiagram￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionModel￨2 =￨2 Actions￨2 .￨2 Model￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionClass￨2 =￨2 Actions￨2 .￨2 Class￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionInterface￨2 =￨2 Actions￨2 .￨2 Interface￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionActor￨2 =￨2 Actions￨2 .￨2 Actor￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionUseCase￨2 =￨2 Actions￨2 .￨2 UseCase￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionState￨2 =￨2 Actions￨2 .￨2 State￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionPseudostate￨2 =￨2 Actions￨2 .￨2 Pseudostate￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionAttr￨2 =￨2 Actions￨2 .￨2 Attr￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionOper￨2 =￨2 Actions￨2 .￨2 Oper￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionRectangle￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigRect￨2 .￨2 class￨2 ,￨2 "Rectangle"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionRRectangle￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigRRect￨2 .￨2 class￨2 ,￨2 "RRect"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionCircle￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigCircle￨2 .￨2 class￨2 ,￨2 "Circle"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionLine￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigLine￨2 .￨2 class￨2 ,￨2 "Line"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionText￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigText￨2 .￨2 class￨2 ,￨2 "Text"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionPoly￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigPoly￨2 .￨2 class￨2 ,￨2 "Polygon"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionInk￨2 =￨2 new￨2 CmdSetMode￨2 (￨2 ModeCreateFigInk￨2 .￨2 class￨2 ,￨2 "Ink"￨2 )￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionAutoCritique￨2 =￨2 Actions￨2 .￨2 AutoCritique￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionOpenDecisions￨2 =￨2 Actions￨2 .￨2 OpenDecisions￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionOpenGoals￨2 =￨2 Actions￨2 .￨2 OpenGoals￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionOpenCritics￨2 =￨2 Actions￨2 .￨2 OpenCritics￨2 ;￨2 protected￨2 static￨2 Action￨2 _actionAboutArgoUML￨2 =￨2 Actions￨2 .￨2 AboutArgoUML￨2 ;￨2 protected￨2 String￨2 _appName￨2 =￨2 "ProjectBrowser"￨2 ;￨2 protected￨2 Project￨2 _project￨2 =￨2 null￨2 ;￨2 protected￨2 NavigatorPane￨2 _navPane￨2 =￨2 new￨2 NavigatorPane￨2 (￨2 )￨2 ;￨2 public￨2 ToDoPane￨2 _toDoPane￨2 =￨2 new￨2 ToDoPane￨2 (￨2 )￨2 ;￨2 protected￨2 MultiEditorPane￨2 _multiPane￨2 =￨2 new￨2 MultiEditorPane￨2 (￨2 )￨2 ;￨2 protected￨2 DetailsPane￨2 _detailsPane￨2 =￨2 new￨2 DetailsPane￨2 (￨2 )￨2 ;￨2 protected￨2 JMenuBar￨2 _menuBar￨2 =￨2 new￨2 JMenuBar￨2 (￨2 )￨2 ;￨2 protected￨2 StatusBar￨2 _statusBar￨2 =￨2 new￨2 StatusBar￨2 (￨2 )￨2 ;￨2 public￨2 Font￨2 defaultFont￨2 =￨2 new￨2 Font￨2 (￨2 "Dialog"￨2 ,￨2 Font￨2 .￨2 PLAIN￨2 ,￨2 10￨2 )￨2 ;￨2 protected￨2 JSplitPane￨2 _mainSplit￨2 ;￨2 protected￨2 JSplitPane￨2 _topSplit￨2 ;￨2 protected￨2 JSplitPane￨2 _botSplit￨2 ;￨2 public￨2 ProjectBrowser￨2 (￨2 String￨2 appName￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 initMenus￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Component￨2 createPanels￨2 (￨2 )￨2 {￨2 _topSplit￨3 =￨3 new￨3 JSplitPane￨3 (￨3 JSplitPane￨3 .￨3 HORIZONTAL_SPLIT￨3 ,￨3 _navPane￨3 ,￨3 _multiPane￨3 )￨3 ;￨3 _botSplit￨3 =￨3 new￨3 JSplitPane￨3 (￨3 JSplitPane￨3 .￨3 HORIZONTAL_SPLIT￨3 ,￨3 _toDoPane￨3 ,￨3 _detailsPane￨3 )￨3 ;￨3 _mainSplit￨3 =￨3 new￨3 JSplitPane￨3 (￨3 JSplitPane￨3 .￨3 VERTICAL_SPLIT￨3 ,￨3 _topSplit￨3 ,￨3 _botSplit￨3 )￨3 ;￨3 _topSplit￨3 .￨3 setDividerSize￨3 (￨3 2￨3 )￨3 ;￨3 <START_BUG>￨3 _topSplit￨3 .￨3 setDividerLocation￨3 (￨3 250￨3 )￨3 ;￨3 <END_BUG>￨3 _botSplit￨3 .￨3 setDividerSize￨3 (￨3 2￨3 )￨3 ;￨3 _mainSplit￨3 .￨3 setDividerSize￨3 (￨3 2￨3 )￨3 ;￨3 return￨3 _mainSplit￨3 ;￨3 }￨2 public￨2 void￨2 setProject￨2 (￨2 Project￨3 p￨3 )￨2 {￨2 }￨2 public￨2 Project￨2 getProject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getAppName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setAppName￨2 (￨2 String￨3 n￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setPerspectives￨2 (￨2 Vector￨3 v￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getPerspectives￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCurPerspective￨2 (￨2 NavPerspective￨3 tm￨3 )￨2 {￨2 }￨2 public￨2 NavPerspective￨2 getCurPerspective￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setToDoPerspectives￨2 (￨2 Vector￨3 v￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getToDoPerspectives￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setToDoCurPerspective￨2 (￨2 TreeModel￨3 tm￨3 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTarget￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getTarget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setToDoItem￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDetalsTarget￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 StatusBar￨2 getStatusBar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ToDoPane￨2 getToDoPane￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NavigatorPane￨2 getNavPane￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setVisible￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showStatus￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SingularValueDecompositionImpl￨1 implements￨1 SingularValueDecomposition￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 -￨2 3532767302235568872L￨2 ;￨2 private￨2 int￨2 m￨2 ;￨2 private￨2 int￨2 n￨2 ;￨2 private￨2 BiDiagonalTransformer￨2 transformer￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 mainBidiagonal￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 secondaryBidiagonal￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 mainTridiagonal￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 secondaryTridiagonal￨2 ;￨2 private￨2 EigenDecomposition￨2 eigenDecomposition￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 singularValues￨2 ;￨2 private￨2 RealMatrix￨2 cachedU￨2 ;￨2 private￨2 RealMatrix￨2 cachedUt￨2 ;￨2 private￨2 RealMatrix￨2 cachedS￨2 ;￨2 private￨2 RealMatrix￨2 cachedV￨2 ;￨2 private￨2 RealMatrix￨2 cachedVt￨2 ;￨2 public￨2 SingularValueDecompositionImpl￨2 (￨2 RealMatrix￨2 matrix￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getU￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getUT￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getS￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 [￨2 ]￨2 getSingularValues￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getV￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getVT￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getNorm￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getConditionNumber￨2 (￨2 )￨2 throws￨2 InvalidMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getRank￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DecompositionSolver￨2 getSolver￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 Solver￨2 implements￨2 DecompositionSolver￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 -￨3 1959408026708904378L￨3 ;￨3 private￨3 final￨3 double￨3 [￨3 ]￨3 singularValues￨3 ;￨3 private￨3 final￨3 RealMatrix￨3 uT￨3 ;￨3 private￨3 final￨3 RealMatrix￨3 v￨3 ;￨3 private￨3 boolean￨3 nonSingular￨3 ;￨3 private￨3 Solver￨3 (￨3 final￨4 double￨4 [￨4 ]￨4 singularValues￨4 ,￨4 final￨4 RealMatrix￨4 uT￨4 ,￨4 final￨4 RealMatrix￨4 v￨4 ,￨4 final￨4 boolean￨4 nonSingular￨4 )￨3 {￨3 }￨3 public￨3 double￨3 [￨3 ]￨3 solve￨3 (￨3 final￨3 double￨3 [￨3 ]￨3 b￨3 )￨3 throws￨3 IllegalArgumentException￨3 ,￨3 InvalidMatrixException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 RealVector￨3 solve￨3 (￨3 final￨3 RealVector￨3 b￨3 )￨3 throws￨3 IllegalArgumentException￨3 ,￨3 InvalidMatrixException￨3 (￨3 )￨3 {￨3 if￨4 (￨4 (￨5 b￨5 .￨5 getDimension￨5 (￨5 )￨5 )￨5 !=￨5 (￨5 singularValues￨5 .￨5 length￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 IllegalArgumentException￨5 (￨5 "constant<seq2seq4repair_space>vector<seq2seq4repair_space>has<seq2seq4repair_space>wrong<seq2seq4repair_space>length"￨5 )￨5 ;￨5 }￨4 final￨4 RealVector￨4 w￨4 =￨4 uT￨4 .￨4 operate￨4 (￨4 b￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 singularValues￨5 .￨5 length￨5 )￨5 ;￨5 ++￨5 i￨5 )￨4 {￨4 final￨5 double￨5 si￨5 =￨5 singularValues￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 si￨6 ==￨6 0￨6 )￨5 {￨5 throw￨6 new￨6 SingularMatrixException￨6 (￨6 )￨6 ;￨6 }￨5 <START_BUG>￨5 w￨5 .￨5 set￨5 (￨5 i￨5 ,￨5 (￨5 (￨5 w￨5 .￨5 getEntry￨5 (￨5 i￨5 )￨5 )￨5 /￨5 si￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 return￨4 v￨4 .￨4 operate￨4 (￨4 w￨4 )￨4 ;￨4 }￨3 public￨3 RealMatrix￨3 solve￨3 (￨3 final￨3 RealMatrix￨3 b￨3 )￨3 throws￨3 IllegalArgumentException￨3 ,￨3 InvalidMatrixException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isNonSingular￨3 (￨3 )￨3 {￨3 }￨3 public￨3 RealMatrix￨3 getInverse￨3 (￨3 )￨3 throws￨3 InvalidMatrixException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 DefinitionMetadataEqualsHashCodeTests￨1 extends￨1 TestCase￨1 {￨1 public￨2 void￨2 testRootBeanDefinitionEqualsAndHashCode￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testChildBeanDefinitionEqualsAndHashCode￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRuntimeBeanReference￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 setBaseProperties￨2 (￨2 AbstractBeanDefinition￨3 definition￨3 )￨2 {￨2 definition￨3 .￨3 setAbstract￨3 (￨3 true￨3 )￨3 ;￨3 definition￨3 .￨3 setAttribute￨3 (￨3 "foo"￨3 ,￨3 "bar"￨3 )￨3 ;￨3 definition￨3 .￨3 setAutowireCandidate￨3 (￨3 false￨3 )￨3 ;￨3 definition￨3 .￨3 setAutowireMode￨3 (￨3 AUTOWIRE_BY_TYPE￨3 )￨3 ;￨3 definition￨3 .￨3 setDependencyCheck￨3 (￨3 DEPENDENCY_CHECK_OBJECTS￨3 )￨3 ;￨3 definition￨3 .￨3 setDependsOn￨3 (￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 )￨3 ;￨3 definition￨3 .￨3 setDestroyMethodName￨3 (￨3 "destroy"￨3 )￨3 ;￨3 definition￨3 .￨3 setEnforceDestroyMethod￨3 (￨3 false￨3 )￨3 ;￨3 definition￨3 .￨3 setEnforceInitMethod￨3 (￨3 true￨3 )￨3 ;￨3 definition￨3 .￨3 setFactoryBeanName￨3 (￨3 "factoryBean"￨3 )￨3 ;￨3 definition￨3 .￨3 setFactoryMethodName￨3 (￨3 "factoryMethod"￨3 )￨3 ;￨3 definition￨3 .￨3 setInitMethodName￨3 (￨3 "init"￨3 )￨3 ;￨3 definition￨3 .￨3 setLazyInit￨3 (￨3 true￨3 )￨3 ;￨3 definition￨3 .￨3 getMethodOverrides￨3 (￨3 )￨3 .￨3 addOverride￨3 (￨3 new￨3 LookupOverride￨3 (￨3 "foo"￨3 ,￨3 "bar"￨3 )￨3 )￨3 ;￨3 definition￨3 .￨3 getMethodOverrides￨3 (￨3 )￨3 .￨3 addOverride￨3 (￨3 new￨3 ReplaceOverride￨3 (￨3 "foo"￨3 ,￨3 "bar"￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 definition￨3 .￨3 getPropertyValues￨3 (￨3 )￨3 .￨3 addPropertyValue￨3 (￨3 "foo"￨3 ,￨3 "bar"￨3 )￨3 ;￨3 <END_BUG>￨3 definition￨3 .￨3 setResourceDescription￨3 (￨3 "desc"￨3 )￨3 ;￨3 definition￨3 .￨3 setRole￨3 (￨3 ROLE_APPLICATION￨3 )￨3 ;￨3 definition￨3 .￨3 setScope￨3 (￨3 SCOPE_PROTOTYPE￨3 )￨3 ;￨3 definition￨3 .￨3 setSource￨3 (￨3 "foo"￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 assertEqualsContract￨2 (￨2 Object￨3 master￨3 ,￨3 Object￨3 equal￨3 ,￨3 Object￨3 notEqual￨3 ,￨3 Object￨3 subclass￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestJapaneseKatakanaStemFilter￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 private￨2 Analyzer￨2 analyzer￨2 =￨2 new￨2 Analyzer￨2 (￨2 )￨2 {￨2 @￨3 Override￨3 protected￨3 TokenStreamComponents￨3 createComponents￨3 (￨3 String￨4 fieldName￨4 ,￨4 Reader￨4 reader￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 void￨2 testStemVariants￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnsupportedHalfWidthVariants￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomData￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 analyzer￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testEmptyTerm￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DomainModelUtil￨1 {￨1 public￨2 static￨2 void￨2 updateCoreModel￨2 (￨2 final￨3 Resource￨3 rootResource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 ExtensionContext￨2 initializeMasterDomainRegistry￨2 (￨2 final￨3 ManagementResourceRegistration￨3 root￨3 ,￨3 final￨3 ExtensibleConfigurationPersister￨3 configurationPersister￨3 ,￨3 final￨3 ContentRepository￨3 contentRepository￨3 ,￨3 final￨3 FileRepository￨3 fileRepository￨3 ,￨3 final￨3 DomainController￨3 domainController￨3 ,￨3 final￨3 UnregisteredHostChannelRegistry￨3 registry￨3 )￨2 {￨2 }￨2 public￨2 static￨2 ExtensionContext￨2 initializeSlaveDomainRegistry￨2 (￨2 final￨3 ManagementResourceRegistration￨3 root￨3 ,￨3 final￨3 ExtensibleConfigurationPersister￨3 configurationPersister￨3 ,￨3 final￨3 ContentRepository￨3 contentRepository￨3 ,￨3 final￨3 FileRepository￨3 fileRepository￨3 ,￨3 final￨3 LocalHostControllerInfo￨3 hostControllerInfo￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ExtensionContext￨2 initializeDomainRegistry￨2 (￨2 final￨3 ManagementResourceRegistration￨3 root￨3 ,￨3 final￨3 ExtensibleConfigurationPersister￨3 configurationPersister￨3 ,￨3 final￨3 ContentRepository￨3 contentRepo￨3 ,￨3 final￨3 FileRepository￨3 fileRepository￨3 ,￨3 final￨3 boolean￨3 isMaster￨3 ,￨3 final￨3 DomainController￨3 domainController￨3 ,￨3 final￨3 UnregisteredHostChannelRegistry￨3 registry￨3 ,￨3 final￨3 LocalHostControllerInfo￨3 hostControllerInfo￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 validateRolloutPlanStructure￨2 (￨2 ModelNode￨2 plan￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 plan￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 OperationFailedException￨4 (￨4 "rolloutPlan<seq2seq4repair_space>argument<seq2seq4repair_space>is<seq2seq4repair_space>null."￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 if￨3 (￨3 !￨4 (￨4 plan￨4 .￨4 hasDefined￨4 (￨4 ROLLOUT_PLAN￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 requiredChildIsMissing￨4 (￨4 ROLLOUT_PLAN￨4 ,￨4 ROLLOUT_PLAN￨4 ,￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 ModelNode￨3 rolloutPlan1￨3 =￨3 plan￨3 .￨3 get￨3 (￨3 ROLLOUT_PLAN￨3 )￨3 ;￨3 final￨3 Set￨3 <￨3 String￨3 >￨3 keys￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 keys￨4 =￨4 rolloutPlan1￨4 .￨4 keys￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IllegalArgumentException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 requiredChildIsMissing￨4 (￨4 ROLLOUT_PLAN￨4 ,￨4 IN_SERIES￨4 ,￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 keys￨4 .￨4 contains￨4 (￨4 IN_SERIES￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 requiredChildIsMissing￨4 (￨4 ROLLOUT_PLAN￨4 ,￨4 IN_SERIES￨4 ,￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 keys￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 2￨4 )￨4 ||￨4 (￨4 (￨4 (￨4 keys￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ==￨4 2￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 keys￨4 .￨4 contains￨4 (￨4 ROLLBACK_ACROSS_GROUPS￨4 )￨4 )￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 unrecognizedChildren￨4 (￨4 ROLLOUT_PLAN￨4 ,￨4 (￨4 (￨4 (￨4 IN_SERIES￨4 )￨4 +￨4 ",<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 ROLLBACK_ACROSS_GROUPS￨4 )￨4 )￨4 ,￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 final￨3 ModelNode￨3 inSeries￨3 =￨3 rolloutPlan1￨3 .￨3 get￨3 (￨3 IN_SERIES￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 inSeries￨4 .￨4 isDefined￨4 (￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 requiredChildIsMissing￨4 (￨4 ROLLOUT_PLAN￨4 ,￨4 IN_SERIES￨4 ,￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 groups￨3 =￨3 inSeries￨3 .￨3 asList￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 groups￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OperationFailedException￨4 (￨4 DomainControllerMessages￨4 .￨4 MESSAGES￨4 .￨4 inSeriesIsMissingGroups￨4 (￨4 plan￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 ModelNode￨4 group￨4 :￨4 groups￨4 )￨3 {￨3 if￨4 (￨4 group￨5 .￨5 hasDefined￨5 (￨5 SERVER_GROUP￨5 )￨5 )￨4 {￨4 final￨5 ModelNode￨5 serverGroup￨5 =￨5 group￨5 .￨5 get￨5 (￨5 SERVER_GROUP￨5 )￨5 ;￨5 final￨5 Set￨5 <￨5 String￨5 >￨5 groupKeys￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 groupKeys￨6 =￨6 serverGroup￨6 .￨6 keys￨6 (￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 IllegalArgumentException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 OperationFailedException￨6 (￨6 DomainControllerMessages￨6 .￨6 MESSAGES￨6 .￨6 serverGroupExpectsSingleChild￨6 (￨6 plan￨6 .￨6 toString￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 groupKeys￨6 .￨6 size￨6 (￨6 )￨6 )￨6 !=￨6 1￨6 )￨5 {￨5 throw￨6 new￨6 OperationFailedException￨6 (￨6 DomainControllerMessages￨6 .￨6 MESSAGES￨6 .￨6 serverGroupExpectsSingleChild￨6 (￨6 plan￨6 .￨6 toString￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 DomainModelUtil￨5 .￨5 validateInSeriesServerGroup￨5 (￨5 serverGroup￨5 .￨5 asProperty￨5 (￨5 )￨5 .￨5 getValue￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 group￨5 .￨5 hasDefined￨5 (￨5 CONCURRENT_GROUPS￨5 )￨5 )￨4 {￨4 final￨5 ModelNode￨5 concurrent￨5 =￨5 group￨5 .￨5 get￨5 (￨5 CONCURRENT_GROUPS￨5 )￨5 ;￨5 for￨5 (￨5 ModelNode￨6 child￨6 :￨6 concurrent￨6 .￨6 asList￨6 (￨6 )￨6 )￨5 {￨5 DomainModelUtil￨6 .￨6 validateInSeriesServerGroup￨6 (￨6 child￨6 .￨6 asProperty￨6 (￨6 )￨6 .￨6 getValue￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 OperationFailedException￨5 (￨5 DomainControllerMessages￨5 .￨5 MESSAGES￨5 .￨5 unexpectedInSeriesGroup￨5 (￨5 plan￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 static￨2 final￨2 List￨2 <￨2 String￨2 >￨2 ALLOWED_SERVER_GROUP_CHILDREN￨2 =￨2 Arrays￨2 .￨2 asList￨2 (￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 )￨2 ;￨2 private￨2 static￨2 void￨2 validateInSeriesServerGroup￨2 (￨2 ModelNode￨2 serverGroup￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 =￨6 new￨6 VerificationTypeInfo￨6 (￨6 TypeIds￨6 .￨6 T_JavaLangObject￨6 ,￨6 constantPoolName￨6 )￨6 ;￨6 pc￨6 +=￨6 2￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_anewarray￨5 :￨5 index￨6 =￨6 u2At￨6 (￨6 bytecodes￨6 ,￨6 1￨6 ,￨6 pc￨6 )￨6 ;￨6 utf8index￨6 =￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 index￨6 ]￨6 )￨6 ;￨6 className￨6 =￨6 utf8At￨6 (￨6 poolContents￨6 ,￨6 (￨6 (￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 +￨6 3￨6 )￨6 ,￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 )￨6 ;￨6 int￨6 classNameLength￨6 =￨6 className￨6 .￨6 length￨6 ;￨6 if￨6 (￨6 (￨7 className￨7 [￨7 0￨7 ]￨7 )￨7 !=￨7 '['￨7 )￨6 {￨6 System￨7 .￨7 arraycopy￨7 (￨7 className￨7 ,￨7 0￨7 ,￨7 (￨7 constantPoolName￨7 =￨7 new￨7 char￨7 [￨7 classNameLength￨7 +￨7 3￨7 ]￨7 )￨7 ,￨7 2￨7 ,￨7 classNameLength￨7 )￨7 ;￨7 constantPoolName￨7 [￨7 0￨7 ]￨7 =￨7 '['￨7 ;￨7 constantPoolName￨7 [￨7 1￨7 ]￨7 =￨7 'L'￨7 ;￨7 constantPoolName￨7 [￨7 (￨7 classNameLength￨7 +￨7 2￨7 )￨7 ]￨7 =￨7 ';'￨7 ;￨7 }￨6 else￨6 {￨6 System￨7 .￨7 arraycopy￨7 (￨7 className￨7 ,￨7 0￨7 ,￨7 (￨7 constantPoolName￨7 =￨7 new￨7 char￨7 [￨7 classNameLength￨7 +￨7 1￨7 ]￨7 )￨7 ,￨7 1￨7 ,￨7 classNameLength￨7 )￨7 ;￨7 constantPoolName￨7 [￨7 0￨7 ]￨7 =￨7 '['￨7 ;￨7 }￨6 frame￨6 .￨6 stackItems￨6 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 =￨6 new￨6 VerificationTypeInfo￨6 (￨6 0￨6 ,￨6 constantPoolName￨6 )￨6 ;￨6 pc￨6 +=￨6 3￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_arraylength￨5 :￨5 frame￨6 .￨6 stackItems￨6 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 =￨6 new￨6 VerificationTypeInfo￨6 (￨6 TypeBinding￨6 .￨6 INT￨6 )￨6 ;￨6 pc￨6 ++￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_athrow￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 pc￨6 ++￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_checkcast￨5 :￨5 index￨6 =￨6 u2At￨6 (￨6 bytecodes￨6 ,￨6 1￨6 ,￨6 pc￨6 )￨6 ;￨6 utf8index￨6 =￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 index￨6 ]￨6 )￨6 ;￨6 className￨6 =￨6 utf8At￨6 (￨6 poolContents￨6 ,￨6 (￨6 (￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 +￨6 3￨6 )￨6 ,￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 )￨6 ;￨6 frame￨6 .￨6 stackItems￨6 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 =￨6 new￨6 VerificationTypeInfo￨6 (￨6 0￨6 ,￨6 className￨6 )￨6 ;￨6 pc￨6 +=￨6 3￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_instanceof￨5 :￨5 frame￨6 .￨6 stackItems￨6 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 =￨6 new￨6 VerificationTypeInfo￨6 (￨6 TypeBinding￨6 .￨6 INT￨6 )￨6 ;￨6 pc￨6 +=￨6 3￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_monitorenter￨5 :￨5 case￨5 Opcodes￨5 .￨5 OPC_monitorexit￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 pc￨6 ++￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_wide￨5 :￨5 opcode￨6 =￨6 (￨6 (￨6 byte￨6 )￨6 (￨6 u1At￨6 (￨6 bytecodes￨6 ,￨6 1￨6 ,￨6 pc￨6 )￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 opcode￨7 ==￨7 (￨7 Opcodes￨7 .￨7 OPC_iinc￨7 )￨7 )￨6 {￨6 pc￨7 +=￨7 6￨7 ;￨7 }￨6 else￨6 {￨6 index￨7 =￨7 u2At￨7 (￨7 bytecodes￨7 ,￨7 2￨7 ,￨7 pc￨7 )￨7 ;￨7 switch￨7 (￨7 opcode￨7 )￨7 {￨7 }￨7 }￨6 case￨5 Opcodes￨5 .￨5 OPC_iload￨5 :￨5 frame￨6 .￨6 addStackItem￨6 (￨6 TypeBinding￨6 .￨6 INT￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_fload￨5 :￨5 frame￨6 .￨6 addStackItem￨6 (￨6 TypeBinding￨6 .￨6 FLOAT￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_aload￨5 :￨5 localsN￨6 =￨6 frame￨6 .￨6 locals￨6 [￨6 index￨6 ]￨6 ;￨6 if￨6 (￨6 localsN￨7 ==￨7 null￨7 )￨6 {￨6 localsN￨7 =￨7 retrieveLocal￨7 (￨7 currentPC￨7 ,￨7 index￨7 )￨7 ;￨7 }￨6 frame￨6 .￨6 addStackItem￨6 (￨6 localsN￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_lload￨5 :￨5 frame￨6 .￨6 addStackItem￨6 (￨6 TypeBinding￨6 .￨6 LONG￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_dload￨5 :￨5 frame￨6 .￨6 addStackItem￨6 (￨6 TypeBinding￨6 .￨6 DOUBLE￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_istore￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_fstore￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_astore￨5 :￨5 frame￨6 .￨6 locals￨6 [￨6 index￨6 ]￨6 =￨6 frame￨6 .￨6 stackItems￨6 [￨6 (￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 ;￨6 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_lstore￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_dstore￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 break￨6 ;￨6 }￨6 pc￨6 +=￨6 4￨6 ;￨6 }￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_multianewarray￨5 :￨5 index￨6 =￨6 u2At￨6 (￨6 bytecodes￨6 ,￨6 1￨6 ,￨6 pc￨6 )￨6 ;￨6 utf8index￨6 =￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 index￨6 ]￨6 )￨6 ;￨6 className￨6 =￨6 utf8At￨6 (￨6 poolContents￨6 ,￨6 (￨6 (￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 +￨6 3￨6 )￨6 ,￨6 u2At￨6 (￨6 poolContents￨6 ,￨6 1￨6 ,￨6 constantPoolOffsets￨6 [￨6 utf8index￨6 ]￨6 )￨6 )￨6 ;￨6 int￨6 dimensions￨6 =￨6 u1At￨6 (￨6 bytecodes￨6 ,￨6 3￨6 ,￨6 pc￨6 )￨6 ;￨6 frame￨6 .￨6 numberOfStackItems￨6 -=￨6 dimensions￨6 ;￨6 classNameLength￨6 =￨6 className￨6 .￨6 length￨6 ;￨6 constantPoolName￨6 =￨6 new￨6 char￨6 [￨6 classNameLength￨6 +￨6 dimensions￨6 ]￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ;￨7 i￨7 <￨7 dimensions￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 constantPoolName￨7 [￨7 i￨7 ]￨7 =￨7 '['￨7 ;￨7 }￨6 System￨6 .￨6 arraycopy￨6 (￨6 className￨6 ,￨6 0￨6 ,￨6 constantPoolName￨6 ,￨6 dimensions￨6 ,￨6 classNameLength￨6 )￨6 ;￨6 frame￨6 .￨6 addStackItem￨6 (￨6 new￨6 VerificationTypeInfo￨6 (￨6 0￨6 ,￨6 constantPoolName￨6 )￨6 )￨6 ;￨6 pc￨6 +=￨6 4￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_ifnull￨5 :￨5 case￨5 Opcodes￨5 .￨5 OPC_ifnonnull￨5 :￨5 (￨6 frame￨6 .￨6 numberOfStackItems￨6 )￨6 --￨6 ;￨6 pc￨6 +=￨6 3￨6 ;￨6 break￨6 ;￨6 case￨5 Opcodes￨5 .￨5 OPC_goto_w￨5 :￨5 pc￨6 +=￨6 5￨6 ;￨6 break￨6 ;￨6 default￨5 :￨5 this￨6 .￨6 codeStream￨6 .￨6 methodDeclaration￨6 .￨6 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 abortDueToInternalError￨6 (￨6 Messages￨6 .￨6 bind￨6 (￨6 Messages￨6 .￨6 abort_invalidOpcode￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ,￨6 this￨6 .￨6 codeStream￨6 .￨6 methodDeclaration￨6 )￨6 ;￨6 break￨6 ;￨6 }￨4 if￨4 (￨4 pc￨5 >=￨5 (￨5 codeLength￨5 +￨5 codeOffset￨5 )￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 final￨2 int￨2 u1At￨2 (￨2 byte￨3 [￨3 ]￨3 reference￨3 ,￨3 int￨3 relativeOffset￨3 ,￨3 int￨3 structOffset￨3 )￨2 {￨2 }￨2 private￨2 final￨2 int￨2 u2At￨2 (￨2 byte￨3 [￨3 ]￨3 reference￨3 ,￨3 int￨3 relativeOffset￨3 ,￨3 int￨3 structOffset￨3 )￨2 {￨2 }￨2 private￨2 final￨2 long￨2 u4At￨2 (￨2 byte￨3 [￨3 ]￨3 reference￨3 ,￨3 int￨3 relativeOffset￨3 ,￨3 int￨3 structOffset￨3 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 utf8At￨2 (￨2 byte￨3 [￨3 ]￨3 reference￨3 ,￨3 int￨3 absoluteOffset￨3 ,￨3 int￨3 bytesAvailable￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Validator￨1 {￨1 private￨2 final￨2 Stack￨2 handlers￨2 ;￨2 private￨2 final￨2 ArrayList￨2 tempFiles￨2 ;￨2 private￨2 final￨2 ArrayList￨2 sandboxes￨2 ;￨2 boolean￨2 abortOnFailure￨2 ;￨2 private￨2 Object￨2 locker￨2 ;￨2 public￨2 Validator￨2 (￨2 IMessageHandler￨3 handler￨3 )￨2 {￨2 }￨2 public￨2 void￨2 pushHandler￨2 (￨2 IMessageHandler￨3 handler￨3 )￨2 {￨2 }￨2 public￨2 void￨2 popHandler￨2 (￨2 IMessageHandler￨3 handler￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 lock￨2 (￨2 Object￨3 requestor￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 unlock￨2 (￨2 Object￨3 requestor￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAbortOnFailure￨2 (￨2 boolean￨3 abortOnFailure￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 nullcheck￨2 (￨2 Object￨3 [￨3 ]￨3 ra￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 nullcheck￨2 (￨2 Collection￨3 list￨3 ,￨3 int￨3 atLeast￨3 ,￨3 int￨3 atMost￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 nullcheck￨2 (￨2 Collection￨3 list￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 nulldefault￨2 (￨2 Object￨3 o￨3 ,￨3 String￨3 message￨3 ,￨3 Object￨3 def￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 nullcheck￨2 (￨2 Object￨3 o￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canRead￨2 (￨2 File￨3 baseDir￨3 ,￨3 String￨3 [￨3 ]￨3 paths￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canRead￨2 (￨2 File￨3 [￨3 ]￨3 files￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canRead￨2 (￨2 File￨3 file￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWrite￨2 (￨2 File￨3 file￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canReadDir￨2 (￨2 File￨3 file￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWriteDir￨2 (￨2 File￨3 file￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canReadFiles￨2 (￨2 Object￨3 [￨3 ]￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canReadFiles￨2 (￨2 Collection￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canReadDirs￨2 (￨2 Object￨3 [￨3 ]￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canReadDirs￨2 (￨2 Collection￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWriteFiles￨2 (￨2 Object￨3 [￨3 ]￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWriteFiles￨2 (￨2 Collection￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWriteDirs￨2 (￨2 Object￨3 [￨3 ]￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 canWriteDirs￨2 (￨2 Collection￨3 dirs￨3 ,￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 void￨2 info￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 void￨2 fail￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 void￨2 fail￨2 (￨2 String￨3 message￨3 ,￨3 Throwable￨3 thrown￨3 )￨2 {￨2 }￨2 public￨2 void￨2 registerTempFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 File￨2 getWritableDir￨2 (￨2 File￨3 dir￨3 ,￨3 String￨3 name￨3 ,￨3 boolean￨3 deleteContents￨3 ,￨3 boolean￨3 register￨3 ,￨3 String￨3 failMessage￨3 )￨2 {￨2 if￨3 (￨3 null￨4 ==￨4 dir￨4 )￨3 {￨3 if￨4 (￨4 null￨5 ==￨5 name￨5 )￨4 {￨4 name￨5 =￨5 "Validator"￨5 ;￨5 }￨4 dir￨4 =￨4 FileUtil￨4 .￨4 getTempDir￨4 (￨4 name￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 if￨4 (￨4 !￨5 (￨5 dir￨5 .￨5 exists￨5 (￨5 )￨5 )￨5 )￨4 {￨4 dir￨5 .￨5 mkdirs￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 null￨4 ==￨4 dir￨4 )￨4 ||￨4 (￨4 !￨4 (￨4 dir￨4 .￨4 exists￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 null￨5 !=￨5 failMessage￨5 )￨4 {￨4 fail￨5 (￨5 (￨5 (￨5 failMessage￨5 +￨5 ":<seq2seq4repair_space>unable<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>parent<seq2seq4repair_space>"￨5 )￨5 +￨5 dir￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 File￨4 result￨4 =￨4 FileUtil￨4 .￨4 makeNewChildDir￨4 (￨4 dir￨4 ,￨4 name￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 deleteContents￨5 )￨4 {￨4 FileUtil￨5 .￨5 deleteContents￨5 (￨5 dir￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 register￨5 )￨4 {￨4 tempFiles￨5 .￨5 add￨5 (￨5 dir￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 dir￨3 ;￨3 }￨2 public￨2 void￨2 deleteTempFiles￨2 (￨2 boolean￨3 reportFailures￨3 )￨2 {￨2 }￨2 public￨2 void￨2 registerSandbox￨2 (￨2 Sandbox￨3 sandbox￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 deleteFile￨2 (￨2 File￨3 file￨3 ,￨3 boolean￨3 reportFailures￨3 )￨2 {￨2 }￨2 private￨2 IMessageHandler￨2 getHandler￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 MSVSS￨1 extends￨1 Task￨1 {￨1 private￨2 static￨2 final￨2 String￨2 SS_EXE￨2 =￨2 "ss"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PROJECT_PREFIX￨2 =￨2 "$"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 COMMAND_GET￨2 =￨2 "Get"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 COMMAND_CHECKOUT￨2 =￨2 "Checkout"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 COMMAND_CHECKIN￨2 =￨2 "Checkin"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 COMMAND_LABEL￨2 =￨2 "Label"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 COMMAND_HISTORY￨2 =￨2 "History"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_LOGIN￨2 =￨2 "-Y"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_OVERRIDE_WORKING_DIR￨2 =￨2 "-GL"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_AUTORESPONSE_DEF￨2 =￨2 "-I-"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_AUTORESPONSE_YES￨2 =￨2 "-I-Y"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_AUTORESPONSE_NO￨2 =￨2 "-I-N"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_RECURSION￨2 =￨2 "-R"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_VERSION￨2 =￨2 "-V"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_VERSION_DATE￨2 =￨2 "-Vd"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_VERSION_LABEL￨2 =￨2 "-VL"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_WRITABLE￨2 =￨2 "-W"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VALUE_NO￨2 =￨2 "-N"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VALUE_YES￨2 =￨2 "-Y"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_QUIET￨2 =￨2 "-O-"￨2 ;￨2 private￨2 String￨2 m_SSDir￨2 =￨2 ""￨2 ;￨2 private￨2 String￨2 m_vssLogin￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 m_vssPath￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 m_serverPath￨2 =￨2 null￨2 ;￨2 public￨2 final￨2 void￨2 setLogin￨2 (￨2 String￨3 login￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setServerpath￨2 (￨2 String￨3 serverPath￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setSsdir￨2 (￨2 final￨3 File￨3 dir￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setVsspath￨2 (￨2 String￨3 vssPath￨3 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getSSCommand￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 getLoginCommand￨2 (￨2 Commandline￨3 cmd￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getVsspath￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 run￨2 (￨2 Commandline￨2 cmd￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 final￨4 Execute2￨4 exe￨4 =￨4 new￨4 Execute2￨4 (￨4 )￨4 ;￨4 setupLogger￨4 (￨4 exe￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 m_serverPath￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 final￨5 Properties￨5 env￨5 =￨5 new￨5 Properties￨5 (￨5 )￨5 ;￨5 env￨5 .￨5 setProperty￨5 (￨5 "SSDIR"￨5 ,￨5 m_serverPath￨5 )￨5 ;￨5 exe￨5 .￨5 setEnvironment￨5 (￨5 env￨5 )￨5 ;￨5 }￨4 exe￨4 .￨4 setWorkingDirectory￨4 (￨4 getBaseDirectory￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 exe￨4 .￨4 setCommandline￨4 (￨4 cmd￨4 .￨4 getCommandline￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 exe￨4 .￨4 execute￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 TaskException￨4 (￨4 "Error"￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 LuceneSegmentInputFormatTest￨1 extends￨1 AbstractLuceneStorageTest￨1 {￨1 private￨2 LuceneSegmentInputFormat￨2 inputFormat￨2 ;￨2 private￨2 JobContext￨2 jobContext￨2 ;￨2 private￨2 Configuration￨2 conf￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 before￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 After￨2 public￨2 void￨2 after￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testGetSplits￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JobContext￨2 getJobContext￨2 (￨2 Configuration￨2 conf￨2 ,￨2 JobID￨2 jobID￨2 )￨2 throws￨2 ClassNotFoundException￨2 ,￨2 IllegalAccessException￨2 ,￨2 InstantiationException￨2 ,￨2 NoSuchMethodException￨2 ,￨2 InvocationTargetException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 Class￨3 <￨3 ?￨3 extends￨3 JobContext￨3 >￨3 clazz￨3 =￨3 null￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 !￨4 (￨4 JobContext￨4 .￨4 class￨4 .￨4 isInterface￨4 (￨4 )￨4 )￨4 )￨3 {￨3 clazz￨4 =￨4 JobContext￨4 .￨4 class￨4 ;￨4 }￨3 else￨3 {￨3 clazz￨4 =￨4 (￨4 (￨4 Class￨4 <￨4 ?￨4 extends￨4 JobContext￨4 >￨4 )￨4 (￨4 Class￨4 .￨4 forName￨4 (￨4 "org.apache.hadoop.mapreduce.task.JobContextImpl"￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 clazz￨3 .￨3 getConstructor￨3 (￨3 Configuration￨3 .￨3 class￨3 ,￨3 JobID￨3 .￨3 class￨3 )￨3 .￨3 newInstance￨3 (￨3 conf￨3 ,￨3 jobID￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 RackAwareStrategy￨1 extends￨1 AbstractReplicationStrategy￨1 {￨1 public￨2 RackAwareStrategy￨2 (￨2 TokenMetadata￨3 tokenMetadata￨3 ,￨3 int￨3 replicas￨3 )￨2 {￨2 }￨2 public￨2 ArrayList￨2 <￨2 InetAddress￨2 >￨2 getNaturalEndpoints￨2 (￨2 Token￨3 token￨3 ,￨3 TokenMetadata￨3 metadata￨3 )￨2 {￨2 int￨3 startIndex￨3 ;￨3 ArrayList￨3 <￨3 InetAddress￨3 >￨3 endpoints￨3 =￨3 new￨3 ArrayList￨3 <￨3 InetAddress￨3 >￨3 (￨3 )￨3 ;￨3 boolean￨3 bDataCenter￨3 =￨3 false￨3 ;￨3 boolean￨3 bOtherRack￨3 =￨3 false￨3 ;￨3 int￨3 foundCount￨3 =￨3 0￨3 ;￨3 List￨3 tokens￨3 =￨3 metadata￨3 .￨3 sortedTokens￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 tokens￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨3 {￨3 return￨4 endpoints￨4 ;￨4 }￨3 int￨3 index￨3 =￨3 Collections￨3 .￨3 binarySearch￨3 (￨3 tokens￨3 ,￨3 token￨3 )￨3 ;￨3 if￨3 (￨3 index￨4 <￨4 0￨4 )￨3 {￨3 index￨4 =￨4 (￨4 index￨4 +￨4 1￨4 )￨4 *￨4 (￨4 -￨4 1￨4 )￨4 ;￨4 if￨4 (￨4 index￨5 >=￨5 (￨5 tokens￨5 .￨5 size￨5 (￨5 )￨5 )￨5 )￨4 {￨4 index￨5 =￨5 0￨5 ;￨5 }￨4 }￨3 int￨3 totalNodes￨3 =￨3 tokens￨3 .￨3 size￨3 (￨3 )￨3 ;￨3 Token￨3 primaryToken￨3 =￨3 (￨3 (￨3 Token￨3 )￨3 (￨3 tokens￨3 .￨3 get￨3 (￨3 index￨3 )￨3 )￨3 )￨3 ;￨3 endpoints￨3 .￨3 add￨3 (￨3 metadata￨3 .￨3 getEndPoint￨3 (￨3 primaryToken￨3 )￨3 )￨3 ;￨3 foundCount￨3 ++￨3 ;￨3 if￨3 (￨3 (￨4 replicas_￨4 )￨4 ==￨4 1￨4 )￨3 {￨3 return￨4 endpoints￨4 ;￨4 }￨3 startIndex￨3 =￨3 (￨3 index￨3 +￨3 1￨3 )￨3 %￨3 totalNodes￨3 ;￨3 <START_BUG>￨3 EndPointSnitch￨3 endPointSnitch￨3 =￨3 (￨3 (￨3 EndPointSnitch￨3 )￨3 (￨3 StorageService￨3 .￨3 instance￨3 (￨3 )￨3 .￨3 getEndPointSnitch￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 int￨4 i￨4 =￨4 startIndex￨4 ,￨4 count￨4 =￨4 1￨4 ;￨4 (￨4 count￨4 <￨4 totalNodes￨4 )￨4 &&￨4 (￨4 foundCount￨4 <￨4 (￨4 replicas_￨4 )￨4 )￨4 ;￨4 ++￨4 count￨4 ,￨4 i￨4 =￨4 (￨4 i￨4 +￨4 1￨4 )￨4 %￨4 totalNodes￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 Token￨5 t￨5 =￨5 (￨5 (￨5 Token￨5 )￨5 (￨5 tokens￨5 .￨5 get￨5 (￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 !￨6 (￨6 endPointSnitch￨6 .￨6 isInSameDataCenter￨6 (￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 primaryToken￨6 )￨6 ,￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 t￨6 )￨6 )￨6 )￨6 )￨5 {￨5 if￨6 (￨6 !￨7 bDataCenter￨7 )￨6 {￨6 endpoints￨7 .￨7 add￨7 (￨7 metadata￨7 .￨7 getEndPoint￨7 (￨7 t￨7 )￨7 )￨7 ;￨7 bDataCenter￨7 =￨7 true￨7 ;￨7 foundCount￨7 ++￨7 ;￨7 }￨6 continue￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 !￨6 (￨6 endPointSnitch￨6 .￨6 isOnSameRack￨6 (￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 primaryToken￨6 )￨6 ,￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 t￨6 )￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 endPointSnitch￨6 .￨6 isInSameDataCenter￨6 (￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 primaryToken￨6 )￨6 ,￨6 metadata￨6 .￨6 getEndPoint￨6 (￨6 t￨6 )￨6 )￨6 )￨6 )￨5 {￨5 if￨6 (￨6 !￨7 bOtherRack￨7 )￨6 {￨6 endpoints￨7 .￨7 add￨7 (￨7 metadata￨7 .￨7 getEndPoint￨7 (￨7 t￨7 )￨7 )￨7 ;￨7 bOtherRack￨7 =￨7 true￨7 ;￨7 foundCount￨7 ++￨7 ;￨7 }￨6 }￨5 }￨4 catch￨4 (￨4 UnknownHostException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 RuntimeException￨5 (￨5 e￨5 )￨5 ;￨5 }￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 startIndex￨4 ,￨4 count￨4 =￨4 1￨4 ;￨4 (￨4 count￨4 <￨4 totalNodes￨4 )￨4 &&￨4 (￨4 foundCount￨4 <￨4 (￨4 replicas_￨4 )￨4 )￨4 ;￨4 ++￨4 count￨4 ,￨4 i￨4 =￨4 (￨4 i￨4 +￨4 1￨4 )￨4 %￨4 totalNodes￨4 )￨3 {￨3 Token￨4 t￨4 =￨4 (￨4 (￨4 Token￨4 )￨4 (￨4 tokens￨4 .￨4 get￨4 (￨4 i￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 endpoints￨5 .￨5 contains￨5 (￨5 metadata￨5 .￨5 getEndPoint￨5 (￨5 t￨5 )￨5 )￨5 )￨5 )￨4 {￨4 endpoints￨5 .￨5 add￨5 (￨5 metadata￨5 .￨5 getEndPoint￨5 (￨5 t￨5 )￨5 )￨5 ;￨5 foundCount￨5 ++￨5 ;￨5 }￨4 }￨3 return￨3 endpoints￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 RecoveredStatement￨1 extends￨1 RecoveredElement￨1 {￨1 public￨2 Statement￨2 statement￨2 ;￨2 public￨2 RecoveredStatement￨2 (￨2 Statement￨3 statement￨3 ,￨3 RecoveredElement￨3 parent￨3 ,￨3 int￨3 bracketBalance￨3 )￨2 {￨2 }￨2 public￨2 AstNode￨2 parseTree￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 sourceEnd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 (￨3 tabString￨3 (￨3 tab￨3 )￨3 )￨3 +￨3 "Recovered<seq2seq4repair_space>statement:\n"￨3 )￨3 +￨3 (￨3 statement￨3 .￨3 toString￨3 (￨3 (￨3 tab￨3 +￨3 1￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Statement￨2 updatedStatement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 updateParseTree￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 updateSourceEndIfNecessary￨2 (￨2 int￨3 sourceEnd￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MockWebRequest￨1 extends￨1 WebRequest￨1 {￨1 private￨2 Url￨2 url￨2 ;￨2 private￨2 List￨2 <￨2 Cookie￨2 >￨2 cookies￨2 =￨2 new￨2 ArrayList￨2 <￨2 Cookie￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Object￨2 >￨2 >￨2 headers￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Object￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 MockRequestParameters￨2 postRequestParameters￨2 =￨2 new￨2 MockRequestParameters￨2 (￨2 )￨2 ;￨2 private￨2 Locale￨2 locale￨2 =￨2 Locale￨2 .￨2 getDefault￨2 (￨2 )￨2 ;￨2 public￨2 MockWebRequest￨2 (￨2 Url￨3 url￨3 )￨2 {￨2 }￨2 MockWebRequest￨2 (￨2 Url￨3 url￨3 ,￨3 List￨3 <￨3 Cookie￨3 >￨3 cookies￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 Object￨3 >￨3 >￨3 headers￨3 ,￨3 MockRequestParameters￨3 postRequestParameters￨3 ,￨3 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 MockWebRequest￨2 requestWithUrl￨2 (￨2 Url￨3 url￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUrl￨2 (￨2 Url￨3 url￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Url￨2 getUrl￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCookies￨2 (￨2 List￨3 <￨3 Cookie￨3 >￨3 cookies￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addCookie￨2 (￨2 Cookie￨3 cookie￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 Cookie￨2 >￨2 getCookies￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 long￨2 getDateHeader￨2 (￨2 String￨3 name￨3 )￨2 {￨2 List￨3 <￨3 Object￨3 >￨3 dates￨3 =￨3 headers￨3 .￨3 get￨3 (￨3 name￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 dates￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 dates￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 WicketRuntimeException￨4 (￨4 (￨4 (￨4 "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨4 +￨4 name￨4 )￨4 +￨4 "'<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist."￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 Object￨3 date￨3 =￨3 dates￨3 .￨3 get￨3 (￨3 0￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 date￨4 instanceof￨4 Long￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 throw￨4 new￨4 WicketRuntimeException￨4 (￨4 (￨4 (￨4 "Date<seq2seq4repair_space>header<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>'"￨4 +￨4 name￨4 )￨4 +￨4 "'<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>long."￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 (￨3 (￨3 Long￨3 )￨3 (￨3 date￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 addHeaderObject￨2 (￨2 String￨3 name￨3 ,￨3 Object￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDateHeader￨2 (￨2 String￨3 name￨3 ,￨3 long￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addDateHeader￨2 (￨2 String￨3 name￨3 ,￨3 long￨3 value￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getHeader￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setHeader￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addHeader￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLocale￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Locale￨2 getLocale￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 String￨2 >￨2 getHeaders￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeHeader￨2 (￨2 String￨3 header￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 MockRequestParameters￨2 getPostParameters￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CompoundPropertyModel￨1 extends￨1 AbstractPropertyModel￨1 implements￨1 ICompoundModel￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 public￨2 CompoundPropertyModel￨2 (￨2 final￨3 Object￨3 model￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 propertyExpression￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 propertyType￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 if￨3 (￨3 component￨4 instanceof￨4 FormComponent￨4 )￨3 {￨3 <START_BUG>￨4 return￨4 (￨4 (￨4 FormComponent￨4 )￨4 (￨4 component￨4 )￨4 )￨4 .￨4 getValidationType￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 VelocityContributor￨1 extends￨1 AbstractBehavior￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 String￨2 encoding￨2 =￨2 "ISO-8859-1"￨2 ;￨2 private￨2 final￨2 IModel￨2 <￨2 ?￨2 extends￨2 Map￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 >￨2 model￨2 ;￨2 private￨2 final￨2 String￨2 templateName￨2 ;￨2 public￨2 VelocityContributor￨2 (￨2 String￨3 templateName￨3 ,￨3 final￨3 IModel￨3 <￨3 ?￨3 extends￨3 Map￨3 <￨3 ?￨3 ,￨3 ?￨3 >￨3 >￨3 model￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 detach￨2 (￨2 Component￨3 c￨3 )￨2 {￨2 if￨3 (￨3 (￨4 model￨4 )￨4 instanceof￨4 IDetachable￨4 )￨3 {￨3 <START_BUG>￨4 (￨4 (￨4 IDetachable￨4 )￨4 (￨4 model￨4 )￨4 )￨4 .￨4 detach￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 String￨2 getEncoding￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 renderHead￨2 (￨2 Component￨3 component￨3 ,￨3 final￨3 IHeaderResponse￨3 response￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEncoding￨2 (￨2 String￨3 encoding￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 escapeHtml￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 CharSequence￨2 evaluate￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Assignment￨1 extends￨1 Expression￨1 {￨1 public￨2 Reference￨2 lhs￨2 ;￨2 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 Assignment￨2 (￨2 Expression￨3 lhs￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 sourceEnd￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 void￨2 checkAssignmentEffect￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 Binding￨2 getDirectBinding￨2 (￨2 Expression￨3 someExpression￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 constant￨3 =￨3 NotAConstant￨3 ;￨3 this￨3 .￨3 resolvedType￨3 =￨3 lhs￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 TypeBinding￨3 rhsType￨3 =￨3 expression￨3 .￨3 resolveType￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 this￨4 .￨4 resolvedType￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 rhsType￨4 ==￨4 null￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 checkAssignmentEffect￨3 (￨3 scope￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 expression￨4 .￨4 isConstantValueOfTypeAssignableToType￨4 (￨4 rhsType￨4 ,￨4 this￨4 .￨4 resolvedType￨4 )￨4 )￨4 ||￨4 (￨4 (￨4 this￨4 .￨4 resolvedType￨4 .￨4 isBaseType￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 BaseTypeBinding￨4 .￨4 isWidening￨4 (￨4 this￨4 .￨4 resolvedType￨4 .￨4 id￨4 ,￨4 rhsType￨4 .￨4 id￨4 )￨4 )￨4 )￨4 )￨4 ||￨4 (￨4 rhsType￨4 .￨4 isCompatibleWith￨4 (￨4 this￨4 .￨4 resolvedType￨4 )￨4 )￨4 )￨3 {￨3 expression￨4 .￨4 implicitWidening￨4 (￨4 this￨4 .￨4 resolvedType￨4 ,￨4 rhsType￨4 )￨4 ;￨4 return￨4 this￨4 .￨4 resolvedType￨4 ;￨4 }￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 typeMismatchErrorActualTypeExpectedType￨3 (￨3 expression￨3 ,￨3 rhsType￨3 ,￨3 this￨3 .￨3 resolvedType￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 null￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toStringExpressionNoParenthesis￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestActionGui￨1 extends￨1 AbstractSamplerGui￨1 {￨1 private￨2 JComboBox￨2 targetBox￨2 ;￨2 private￨2 JRadioButton￨2 pauseButton￨2 ;￨2 private￨2 JRadioButton￨2 stopButton￨2 ;￨2 private￨2 JTextField￨2 durationField￨2 ;￨2 private￨2 int￨2 target￨2 ;￨2 private￨2 int￨2 action￨2 ;￨2 private￨2 int￨2 duration￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 targetLabel￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_target"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 threadTarget￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_target_thread"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 testTarget￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_target_test"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 actionLabel￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_action"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 pauseAction￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_pause"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 stopAction￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_stop"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 durationLabel￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "test_action_duration"￨2 )￨2 ;￨2 public￨2 TestActionGui￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getLabelResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 configure￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyTestElement￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 setLayout￨3 (￨3 new￨3 VerticalLayout￨3 (￨3 5￨3 ,￨3 VerticalLayout￨3 .￨3 LEFT￨3 ,￨3 VerticalLayout￨3 .￨3 TOP￨3 )￨3 )￨3 ;￨3 setBorder￨3 (￨3 makeBorder￨3 (￨3 )￨3 )￨3 ;￨3 add￨3 (￨3 makeTitlePanel￨3 (￨3 )￨3 )￨3 ;￨3 HorizontalPanel￨3 targetPanel￨3 =￨3 new￨3 HorizontalPanel￨3 (￨3 )￨3 ;￨3 targetPanel￨3 .￨3 add￨3 (￨3 new￨3 JLabel￨3 (￨3 TestActionGui￨3 .￨3 targetLabel￨3 )￨3 )￨3 ;￨3 DefaultComboBoxModel￨3 targetModel￨3 =￨3 new￨3 DefaultComboBoxModel￨3 (￨3 )￨3 ;￨3 targetModel￨3 .￨3 addElement￨3 (￨3 TestActionGui￨3 .￨3 threadTarget￨3 )￨3 ;￨3 targetModel￨3 .￨3 addElement￨3 (￨3 TestActionGui￨3 .￨3 testTarget￨3 )￨3 ;￨3 targetBox￨3 =￨3 new￨3 JComboBox￨3 (￨3 targetModel￨3 )￨3 ;￨3 targetBox￨3 .￨3 addActionListener￨3 (￨3 new￨3 ActionListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 actionPerformed￨4 (￨4 ActionEvent￨5 e￨5 )￨4 {￨4 if￨5 (￨5 (￨6 (￨6 String￨6 )￨6 (￨6 targetBox￨6 .￨6 getSelectedItem￨6 (￨6 )￨6 )￨6 )￨6 .￨6 equals￨6 (￨6 TestActionGui￨6 .￨6 threadTarget￨6 )￨6 )￨5 {￨5 target￨6 =￨6 TestAction￨6 .￨6 THREAD￨6 ;￨6 }￨5 else￨5 {￨5 target￨6 =￨6 TestAction￨6 .￨6 TEST￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 targetPanel￨3 .￨3 add￨3 (￨3 targetBox￨3 )￨3 ;￨3 add￨3 (￨3 targetPanel￨3 )￨3 ;￨3 HorizontalPanel￨3 actionPanel￨3 =￨3 new￨3 HorizontalPanel￨3 (￨3 )￨3 ;￨3 ButtonGroup￨3 actionButtons￨3 =￨3 new￨3 ButtonGroup￨3 (￨3 )￨3 ;￨3 pauseButton￨3 =￨3 new￨3 JRadioButton￨3 (￨3 TestActionGui￨3 .￨3 pauseAction￨3 ,￨3 true￨3 )￨3 ;￨3 pauseButton￨3 .￨3 addChangeListener￨3 (￨3 new￨3 ChangeListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 stateChanged￨4 (￨4 ChangeEvent￨5 e￨5 )￨4 {￨4 if￨5 (￨5 pauseButton￨6 .￨6 isSelected￨6 (￨6 )￨6 )￨5 {￨5 action￨6 =￨6 TestAction￨6 .￨6 PAUSE￨6 ;￨6 durationField￨6 .￨6 setEnabled￨6 (￨6 true￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 stopButton￨3 =￨3 new￨3 JRadioButton￨3 (￨3 TestActionGui￨3 .￨3 stopAction￨3 ,￨3 false￨3 )￨3 ;￨3 stopButton￨3 .￨3 addChangeListener￨3 (￨3 new￨3 ChangeListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 stateChanged￨4 (￨4 ChangeEvent￨5 e￨5 )￨4 {￨4 if￨5 (￨5 stopButton￨6 .￨6 isSelected￨6 (￨6 )￨6 )￨5 {￨5 action￨6 =￨6 TestAction￨6 .￨6 STOP￨6 ;￨6 durationField￨6 .￨6 setEnabled￨6 (￨6 false￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 actionButtons￨3 .￨3 add￨3 (￨3 pauseButton￨3 )￨3 ;￨3 actionButtons￨3 .￨3 add￨3 (￨3 stopButton￨3 )￨3 ;￨3 actionPanel￨3 .￨3 add￨3 (￨3 new￨3 JLabel￨3 (￨3 TestActionGui￨3 .￨3 actionLabel￨3 )￨3 )￨3 ;￨3 actionPanel￨3 .￨3 add￨3 (￨3 pauseButton￨3 )￨3 ;￨3 actionPanel￨3 .￨3 add￨3 (￨3 stopButton￨3 )￨3 ;￨3 add￨3 (￨3 actionPanel￨3 )￨3 ;￨3 HorizontalPanel￨3 durationPanel￨3 =￨3 new￨3 HorizontalPanel￨3 (￨3 )￨3 ;￨3 durationField￨3 =￨3 new￨3 JTextField￨3 (￨3 5￨3 )￨3 ;￨3 durationField￨3 .￨3 setText￨3 (￨3 Integer￨3 .￨3 toString￨3 (￨3 duration￨3 )￨3 )￨3 ;￨3 durationField￨3 .￨3 addFocusListener￨3 (￨3 new￨3 FocusListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 focusLost￨4 (￨4 FocusEvent￨5 e￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 duration￨6 =￨6 Integer￨6 .￨6 parseInt￨6 (￨6 durationField￨6 .￨6 getText￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 NumberFormatException￨6 nfe￨6 )￨5 {￨5 duration￨6 =￨6 0￨6 ;￨6 }￨5 }￨4 public￨4 void￨4 focusGained￨4 (￨4 FocusEvent￨5 e￨5 )￨4 {￨4 }￨4 }￨3 )￨3 ;￨3 <START_BUG>￨3 durationPanel￨3 .￨3 add￨3 (￨3 new￨3 JLabel￨3 (￨3 "Duration"￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 durationPanel￨3 .￨3 add￨3 (￨3 durationField￨3 )￨3 ;￨3 add￨3 (￨3 durationPanel￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 Border￨1 extends￨1 WebMarkupContainerWithAssociatedMarkup￨1 implements￨1 IComponentResolver￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 static￨2 final￨2 String￨2 BODY￨2 =￨2 "body"￨2 ;￨2 static￨2 final￨2 String￨2 BORDER￨2 =￨2 "border"￨2 ;￨2 static￨2 final￨2 String￨2 BODY_ID￨2 =￨2 "_body"￨2 ;￨2 private￨2 final￨2 Border￨2 .￨2 BorderBodyContainer￨2 body￨2 ;￨2 private￨2 transient￨2 MarkupStream￨2 originalMarkupStream￨2 ;￨2 private￨2 transient￨2 ComponentTag￨2 openTag￨2 ;￨2 private￨2 int￨2 beginOfBodyIndex￨2 ;￨2 private￨2 transient￨2 boolean￨2 rendering￨2 ;￨2 public￨2 Border￨2 (￨2 final￨3 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Border￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 final￨3 IModel￨3 <￨3 ?￨3 >￨3 model￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Border￨2 .￨2 BorderBodyContainer￨2 getBodyContainer￨2 (￨2 )￨2 {￨2 }￨2 Border￨2 .￨2 BorderBodyContainer￨2 newBorderBodyContainer￨2 (￨2 final￨3 String￨3 id￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 MarkupContainer￨2 add￨2 (￨2 final￨3 Component￨3 ...￨3 children￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Component￨2 add￨2 (￨2 final￨3 IBehavior￨3 ...￨3 behaviors￨3 )￨2 {￨2 }￨2 public￨2 MarkupContainer￨2 addToBorder￨2 (￨2 final￨3 Component￨3 ...￨3 children￨3 )￨2 {￨2 }￨2 public￨2 Component￨2 addToBorder￨2 (￨2 final￨3 IBehavior￨3 ...￨3 behaviors￨3 )￨2 {￨2 }￨2 public￨2 Border￨2 addToBorderBody￨2 (￨2 final￨3 Component￨3 ...￨3 child￨3 )￨2 {￨2 }￨2 public￨2 Component￨2 addToBorderBody￨2 (￨2 final￨3 IBehavior￨3 ...￨3 behaviors￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Component￨2 getFromBorderBody￨2 (￨2 final￨3 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 resolve￨2 (￨2 final￨3 MarkupContainer￨3 container￨3 ,￨3 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 if￨3 (￨3 (￨4 rendering￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 if￨4 (￨4 tag￨5 instanceof￨5 WicketTag￨5 )￨4 {￨4 WicketTag￨5 wtag￨5 =￨5 (￨5 (￨5 WicketTag￨5 )￨5 (￨5 tag￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 wtag￨6 .￨6 isBodyTag￨6 (￨6 )￨6 )￨5 {￨5 rendering￨6 =￨6 true￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 <START_BUG>￨7 body￨7 .￨7 render￨7 (￨7 markupStream￨7 )￨7 ;￨7 <END_BUG>￨7 }￨6 finally￨6 (￨6 )￨6 {￨6 rendering￨7 =￨7 false￨7 ;￨7 }￨6 return￨6 true￨6 ;￨6 }￨5 }￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 final￨2 void￨2 onComponentTagBody￨2 (￨2 final￨3 MarkupStream￨3 markupStream￨3 ,￨3 final￨3 ComponentTag￨3 openTag￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 renderHead￨2 (￨2 HtmlHeaderContainer￨3 container￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 IMarkupFragment￨2 getMarkup￨2 (￨2 final￨3 Component￨3 child￨3 )￨2 {￨2 }￨2 public￨2 class￨2 BorderBodyContainer￨2 extends￨2 WebMarkupContainer￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 transient￨3 boolean￨3 wasOpenCloseTag￨3 =￨3 false￨3 ;￨3 private￨3 boolean￨3 transparentResolver￨3 ;￨3 public￨3 BorderBodyContainer￨3 (￨3 final￨4 String￨4 id￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 final￨3 boolean￨3 isTransparentResolver￨3 (￨3 )￨3 {￨3 }￨3 public￨3 final￨3 void￨3 setTransparentResolver￨3 (￨3 final￨4 boolean￨4 value￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentTag￨3 (￨3 final￨4 ComponentTag￨4 tag￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentTagBody￨3 (￨3 final￨4 MarkupStream￨4 markupStream￨4 ,￨4 final￨4 ComponentTag￨4 openTag￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 IMarkupFragment￨3 getMarkup￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 IMarkupFragment￨3 getMarkup￨3 (￨3 final￨4 Component￨4 child￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 BlogAuthorManagerImpl￨1 implements￨1 BlogAuthorManager￨1 {￨1 private￨2 BlogPersistenceService￨2 persistenceService￨2 ;￨2 public￨2 void￨2 setPersistenceService￨2 (￨2 BlogPersistenceService￨3 persistenceService￨3 )￨2 {￨2 }￨2 public￨2 void￨2 createAuthor￨2 (￨2 String￨2 email￨2 ,￨2 String￨2 dob￨2 ,￨2 String￨2 name￨2 ,￨2 String￨2 displayName￨2 ,￨2 String￨2 bio￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 email￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 "Email<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4 )￨4 ;￨4 }￨3 Date￨3 dateOfBirth￨3 ;￨3 <START_BUG>￨3 dateOfBirth￨3 =￨3 (￨3 (￨3 dob￨3 ==￨3 null￨3 )￨3 ||￨3 (￨3 ""￨3 .￨3 equals￨3 (￨3 dob￨3 )￨3 )￨3 )￨3 ?￨3 null￨3 :￨3 new￨3 SimpleDateFormat￨3 (￨3 "dd-mm-yyyy"￨3 )￨3 .￨3 parse￨3 (￨3 dob￨3 )￨3 ;￨3 <END_BUG>￨3 persistenceService￨3 .￨3 createAuthor￨3 (￨3 email￨3 ,￨3 dateOfBirth￨3 ,￨3 name￨3 ,￨3 displayName￨3 ,￨3 bio￨3 )￨3 ;￨3 }￨2 public￨2 List￨2 <￨2 ?￨2 extends￨2 BlogAuthor￨2 >￨2 getAllAuthors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BlogAuthor￨2 getAuthor￨2 (￨2 String￨3 emailAddress￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeAuthor￨2 (￨2 String￨3 emailAddress￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateAuthor￨2 (￨2 String￨2 email￨2 ,￨2 String￨2 dob￨2 ,￨2 String￨2 name￨2 ,￨2 String￨2 displayName￨2 ,￨2 String￨2 bio￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 ?￨2 extends￨2 BlogAuthor￨2 >￨2 adaptAuthor￨2 (￨2 List￨3 <￨3 ?￨3 extends￨3 Author￨3 >￨3 authors￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PresentSelectorTest￨1 extends￨1 BaseSelectorTest￨1 {￨1 private￨2 Project￨2 project￨2 ;￨2 public￨2 PresentSelectorTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 BaseSelector￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testValidate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSelectionBehaviour￨2 (￨2 )￨2 {￨2 PresentSelector￨3 s￨3 ;￨3 String￨3 results￨3 ;￨3 Mapper￨3 m￨3 ;￨3 Mapper￨3 .￨3 MapperType￨3 identity￨3 =￨3 new￨3 Mapper￨3 .￨3 MapperType￨3 (￨3 )￨3 ;￨3 identity￨3 .￨3 setValue￨3 (￨3 "identity"￨3 )￨3 ;￨3 Mapper￨3 .￨3 MapperType￨3 glob￨3 =￨3 new￨3 Mapper￨3 .￨3 MapperType￨3 (￨3 )￨3 ;￨3 glob￨3 .￨3 setValue￨3 (￨3 "glob"￨3 )￨3 ;￨3 Mapper￨3 .￨3 MapperType￨3 merge￨3 =￨3 new￨3 Mapper￨3 .￨3 MapperType￨3 (￨3 )￨3 ;￨3 merge￨3 .￨3 setValue￨3 (￨3 "merge"￨3 )￨3 ;￨3 Mapper￨3 .￨3 MapperType￨3 flatten￨3 =￨3 new￨3 Mapper￨3 .￨3 MapperType￨3 (￨3 )￨3 ;￨3 flatten￨3 .￨3 setValue￨3 (￨3 "flatten"￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 makeBed￨4 (￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 PresentSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setTargetdir￨4 (￨4 beddir￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TTTTTTTTTTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 PresentSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setTargetdir￨4 (￨4 beddir￨4 )￨4 ;￨4 m￨4 =￨4 s￨4 .￨4 createMapper￨4 (￨4 )￨4 ;￨4 m￨4 .￨4 setType￨4 (￨4 identity￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TTTTTTTTTTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 PresentSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 File￨4 subdir￨4 =￨4 new￨4 File￨4 (￨4 "src/etc/testcases/taskdefs/expected"￨4 )￨4 ;￨4 <END_BUG>￨4 s￨4 .￨4 setTargetdir￨4 (￨4 subdir￨4 )￨4 ;￨4 m￨4 =￨4 s￨4 .￨4 createMapper￨4 (￨4 )￨4 ;￨4 m￨4 .￨4 setType￨4 (￨4 flatten￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 if￨4 (￨4 JavaEnvUtils￨5 .￨5 isJavaVersion￨5 (￨5 JAVA_1_1￨5 )￨5 )￨4 {￨4 assertEquals￨5 (￨5 "TTTTTFFFFFFF"￨5 ,￨5 results￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 assertEquals￨5 (￨5 "TTTTTTTTTTTF"￨5 ,￨5 results￨5 )￨5 ;￨5 }￨4 s￨4 =￨4 (￨4 (￨4 PresentSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setTargetdir￨4 (￨4 beddir￨4 )￨4 ;￨4 m￨4 =￨4 s￨4 .￨4 createMapper￨4 (￨4 )￨4 ;￨4 m￨4 .￨4 setType￨4 (￨4 merge￨4 )￨4 ;￨4 m￨4 .￨4 setTo￨4 (￨4 "asf-logo.gif.gz"￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TTTTTTTTTTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 PresentSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 subdir￨4 =￨4 new￨4 File￨4 (￨4 beddir￨4 ,￨4 "tar/bz2"￨4 )￨4 ;￨4 s￨4 .￨4 setTargetdir￨4 (￨4 subdir￨4 )￨4 ;￨4 m￨4 =￨4 s￨4 .￨4 createMapper￨4 (￨4 )￨4 ;￨4 m￨4 .￨4 setType￨4 (￨4 glob￨4 )￨4 ;￨4 m￨4 .￨4 setFrom￨4 (￨4 "*.bz2"￨4 )￨4 ;￨4 m￨4 .￨4 setTo￨4 (￨4 "*.tar.bz2"￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "FFTFFFFFFFFF"￨4 ,￨4 results￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 makeMirror￨5 (￨5 )￨5 ;￨5 s￨5 =￨5 (￨5 (￨5 PresentSelector￨5 )￨5 (￨5 getInstance￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 subdir￨5 =￨5 getProject￨5 (￨5 )￨5 .￨5 resolveFile￨5 (￨5 "selectortest2"￨5 )￨5 ;￨5 s￨5 .￨5 setTargetdir￨5 (￨5 subdir￨5 )￨5 ;￨5 results￨5 =￨5 mirrorSelectionString￨5 (￨5 s￨5 )￨5 ;￨5 assertEquals￨5 (￨5 "TTTFFTTTTTTT"￨5 ,￨5 results￨5 )￨5 ;￨5 results￨5 =￨5 selectionString￨5 (￨5 s￨5 )￨5 ;￨5 assertEquals￨5 (￨5 "TTTFFTTTTTTT"￨5 ,￨5 results￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 cleanupMirror￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 cleanupBed￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 Table￨1 {￨1 public￨2 static￨2 final￨2 String￨2 SYSTEM_TABLE￨2 =￨2 "system"￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 Table￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 SNAPSHOT_SUBDIR_NAME￨2 =￨2 "snapshots"￨2 ;￨2 static￨2 final￨2 ReentrantReadWriteLock￨2 flusherLock￨2 =￨2 new￨2 ReentrantReadWriteLock￨2 (￨2 true￨2 )￨2 ;￨2 private￨2 static￨2 Timer￨2 flushTimer￨2 =￨2 new￨2 Timer￨2 (￨2 "FLUSH-TIMER"￨2 )￨2 ;￨2 private￨2 final￨2 boolean￨2 waitForCommitLog￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 Table￨2 >￨2 instances￨2 =￨2 new￨2 org￨2 .￨2 cliffc￨2 .￨2 high_scale_lib￨2 .￨2 NonBlockingHashMap￨2 <￨2 String￨2 ,￨2 Table￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 final￨2 String￨2 name￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 Integer￨2 ,￨2 ColumnFamilyStore￨2 >￨2 columnFamilyStores￨2 =￨2 new￨2 HashMap￨2 <￨2 Integer￨2 ,￨2 ColumnFamilyStore￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 SortedSet￨2 <￨2 String￨2 >￨2 applicationColumnFamilies￨2 ;￨2 private￨2 final￨2 TimerTask￨2 flushTask￨2 ;￨2 public￨2 static￨2 Table￨2 open￨2 (￨2 String￨2 table￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Table￨2 clear￨2 (￨2 String￨2 table￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 ColumnFamilyStore￨2 >￨2 getColumnFamilyStores￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumnFamilyStore￨2 getColumnFamilyStore￨2 (￨2 int￨3 cfId￨3 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 public￨2 ColumnFamilyStore￨2 getColumnFamilyStore￨2 (￨2 String￨3 cfName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 forceCleanup￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 snapshot￨2 (￨2 String￨3 clientSuppliedName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getTimestampedSnapshotName￨2 (￨2 String￨3 clientSuppliedName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clearSnapshot￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 SSTableReader￨2 >￨2 forceAntiCompaction￨2 (￨2 Collection￨3 <￨3 Range￨3 >￨3 ranges￨3 ,￨3 InetAddress￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 forceCompaction￨2 (￨2 )￨2 {￨2 }￨2 List￨2 <￨2 SSTableReader￨2 >￨2 getAllSSTablesOnDisk￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Table￨2 (￨2 String￨3 table￨3 )￨2 {￨2 }￨2 public￨2 void￨2 dropCf￨2 (￨2 int￨2 cfId￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 initCf￨2 (￨2 int￨3 cfId￨3 ,￨3 String￨3 cfName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 renameCf￨2 (￨2 int￨2 cfId￨2 ,￨2 String￨2 newName￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Row￨2 getRow￨2 (￨2 QueryFilter￨2 filter￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 apply￨2 (￨2 RowMutation￨2 mutation￨2 ,￨2 Object￨2 serializedMutation￨2 ,￨2 boolean￨2 writeCommitLog￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 HashMap￨3 <￨3 ColumnFamilyStore￨3 ,￨3 Memtable￨3 >￨3 memtablesToFlush￨3 =￨3 new￨3 HashMap￨3 <￨3 ColumnFamilyStore￨3 ,￨3 Memtable￨3 >￨3 (￨3 2￨3 )￨3 ;￨3 Table￨3 .￨3 flusherLock￨3 .￨3 readLock￨3 (￨3 )￨3 .￨3 lock￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 writeCommitLog￨5 )￨4 {￨4 CommitLog￨5 .￨5 instance￨5 (￨5 )￨5 .￨5 add￨5 (￨5 mutation￨5 ,￨5 serializedMutation￨5 )￨5 ;￨5 }￨4 DecoratedKey￨4 key￨4 =￨4 StorageService￨4 .￨4 getPartitioner￨4 (￨4 )￨4 .￨4 decorateKey￨4 (￨4 mutation￨4 .￨4 key￨4 (￨4 )￨4 )￨4 ;￨4 for￨4 (￨4 ColumnFamily￨5 columnFamily￨5 :￨5 mutation￨5 .￨5 getColumnFamilies￨5 (￨5 )￨5 )￨4 {￨4 Memtable￨5 memtableToFlush￨5 ;￨5 ColumnFamilyStore￨5 cfs￨5 =￨5 columnFamilyStores￨5 .￨5 get￨5 (￨5 columnFamily￨5 .￨5 id￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 cfs￨6 ==￨6 null￨6 )￨5 {￨5 <START_BUG>￨6 Table￨6 .￨6 logger￨6 .￨6 error￨6 (￨6 (￨6 "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>mutate<seq2seq4repair_space>non-existant<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>"￨6 +￨6 (￨6 columnFamily￨6 .￨6 name￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 else￨5 {￨5 if￨6 (￨6 (￨7 memtableToFlush￨7 =￨7 cfs￨7 .￨7 apply￨7 (￨7 key￨7 ,￨7 columnFamily￨7 )￨7 )￨7 !=￨7 null￨7 )￨6 {￨6 memtablesToFlush￨7 .￨7 put￨7 (￨7 cfs￨7 ,￨7 memtableToFlush￨7 )￨7 ;￨7 }￨6 ColumnFamily￨6 cachedRow￨6 =￨6 cfs￨6 .￨6 getRawCachedRow￨6 (￨6 key￨6 )￨6 ;￨6 if￨6 (￨6 cachedRow￨7 !=￨7 null￨7 )￨6 {￨6 cachedRow￨7 .￨7 addAll￨7 (￨7 columnFamily￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 Table￨4 .￨4 flusherLock￨4 .￨4 readLock￨4 (￨4 )￨4 .￨4 unlock￨4 (￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 Map￨4 .￨4 Entry￨4 <￨4 ColumnFamilyStore￨4 ,￨4 Memtable￨4 >￨4 entry￨4 :￨4 memtablesToFlush￨4 .￨4 entrySet￨4 (￨4 )￨4 )￨3 {￨3 entry￨4 .￨4 getKey￨4 (￨4 )￨4 .￨4 maybeSwitchMemtable￨4 (￨4 entry￨4 .￨4 getValue￨4 (￨4 )￨4 ,￨4 writeCommitLog￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 List￨2 <￨2 Future￨2 <￨2 ?￨2 >￨2 >￨2 flush￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 load￨2 (￨2 RowMutation￨2 rowMutation￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDataFileLocation￨2 (￨2 long￨3 expectedCompactedFileSize￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getSnapshotPath￨2 (￨2 String￨3 dataDirPath￨3 ,￨3 String￨3 tableName￨3 ,￨3 String￨3 snapshotName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Iterable￨2 <￨2 Table￨2 >￨2 all￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 truncate￨2 (￨2 String￨2 cfname￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SizeAssertion￨1 extends￨1 AbstractScopedAssertion￨1 implements￨1 Serializable￨1 ,￨1 Assertion￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 233L￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 EQUAL￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 NOTEQUAL￨2 =￨2 2￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 GREATERTHAN￨2 =￨2 3￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 LESSTHAN￨2 =￨2 4￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 GREATERTHANEQUAL￨2 =￨2 5￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 LESSTHANEQUAL￨2 =￨2 6￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 SIZE_KEY￨2 =￨2 "SizeAssertion.size"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 OPERATOR_KEY￨2 =￨2 "SizeAssertion.operator"￨2 ;￨2 public￨2 AssertionResult￨2 getResult￨2 (￨2 SampleResult￨3 response￨3 )￨2 {￨2 AssertionResult￨3 result￨3 =￨3 new￨3 AssertionResult￨3 (￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 setFailure￨3 (￨3 false￨3 )￨3 ;￨3 long￨3 resultSize￨3 =￨3 0￨3 ;￨3 if￨3 (￨3 isScopeVariable￨4 (￨4 )￨4 )￨3 {￨3 String￨4 variableName￨4 =￨4 getVariableName￨4 (￨4 )￨4 ;￨4 String￨4 value￨4 =￨4 getThreadContext￨4 (￨4 )￨4 .￨4 getVariables￨4 (￨4 )￨4 .￨4 get￨4 (￨4 variableName￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 resultSize￨5 =￨5 Integer￨5 .￨5 parseInt￨5 (￨5 value￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 NumberFormatException￨5 e￨5 )￨4 {￨4 result￨5 .￨5 setFailure￨5 (￨5 true￨5 )￨5 ;￨5 result￨5 .￨5 setFailureMessage￨5 (￨5 (￨5 (￨5 (￨5 "Error<seq2seq4repair_space>parsing<seq2seq4repair_space>variable<seq2seq4repair_space>name:<seq2seq4repair_space>"￨5 +￨5 variableName￨5 )￨5 +￨5 "<seq2seq4repair_space>value:<seq2seq4repair_space>"￨5 )￨5 +￨5 value￨5 )￨5 )￨5 ;￨5 return￨5 result￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 resultSize￨4 =￨4 response￨4 .￨4 getBytes￨4 (￨4 )￨4 ;￨4 }￨3 final￨3 String￨3 msg￨3 =￨3 compareSize￨3 (￨3 resultSize￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 msg￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 result￨4 .￨4 setFailure￨4 (￨4 true￨4 )￨4 ;￨4 <START_BUG>￨4 Object￨4 [￨4 ]￨4 arguments￨4 =￨4 new￨4 Object￨4 [￨4 ]￨4 {￨4 new￨4 Long￨4 (￨4 resultSize￨4 )￨4 ,￨4 msg￨4 ,￨4 new￨4 Long￨4 (￨4 getAllowedSize￨4 (￨4 )￨4 )￨4 }￨4 ;￨4 <END_BUG>￨4 String￨4 message￨4 =￨4 MessageFormat￨4 .￨4 format￨4 (￨4 JMeterUtils￨4 .￨4 getResString￨4 (￨4 "size_assertion_failure"￨4 )￨4 ,￨4 arguments￨4 )￨4 ;￨4 result￨4 .￨4 setFailureMessage￨4 (￨4 message￨4 )￨4 ;￨4 }￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 long￨2 getAllowedSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCompOper￨2 (￨2 int￨3 operator￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getCompOper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setAllowedSize￨2 (￨2 long￨2 size￨2 )￨2 throws￨2 IllegalArgumentException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 compareSize￨2 (￨2 long￨3 resultSize￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BecomeWorkingCopyOperation￨1 extends￨1 JavaModelOperation￨1 {￨1 IPath￨2 path￨2 ;￨2 IProblemRequestor￨2 problemRequestor￨2 ;￨2 public￨2 BecomeWorkingCopyOperation￨2 (￨2 CompilationUnit￨3 workingCopy￨3 ,￨3 IPath￨3 path￨3 ,￨3 IProblemRequestor￨3 problemRequestor￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 executeOperation￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 CompilationUnit￨3 workingCopy￨3 =￨3 getWorkingCopy￨3 (￨3 )￨3 ;￨3 JavaModelManager￨3 .￨3 getJavaModelManager￨3 (￨3 )￨3 .￨3 getPerWorkingCopyInfo￨3 (￨3 workingCopy￨3 ,￨3 this￨3 .￨3 path￨3 ,￨3 true￨3 ,￨3 true￨3 ,￨3 this￨3 .￨3 problemRequestor￨3 )￨3 ;￨3 workingCopy￨3 .￨3 openWhenClosed￨3 (￨3 workingCopy￨3 .￨3 createElementInfo￨3 (￨3 )￨3 ,￨3 fMonitor￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 workingCopy￨3 .￨3 owner￨3 )￨3 !=￨3 (￨3 DefaultWorkingCopyOwner￨3 .￨3 PRIMARY￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 JavaElementDelta￨3 delta￨3 =￨3 new￨3 JavaElementDelta￨3 (￨3 this￨3 .￨3 getJavaModel￨3 (￨3 )￨3 )￨3 ;￨3 delta￨3 .￨3 added￨3 (￨3 workingCopy￨3 )￨3 ;￨3 addDelta￨3 (￨3 delta￨3 )￨3 ;￨3 else￨3 {￨3 JavaElementDelta￨4 delta￨4 =￨4 new￨4 JavaElementDelta￨4 (￨4 this￨4 .￨4 getJavaModel￨4 (￨4 )￨4 )￨4 ;￨4 delta￨4 .￨4 changed￨4 (￨4 workingCopy￨4 ,￨4 IJavaElementDelta￨4 .￨4 F_PRIMARY_WORKING_COPY￨4 )￨4 ;￨4 addDelta￨4 (￨4 delta￨4 )￨4 ;￨4 }￨3 fResultElements￨3 =￨3 new￨3 IJavaElement￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 }￨2 protected￨2 CompilationUnit￨2 getWorkingCopy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isReadOnly￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Receiver￨1 implements￨1 Runnable￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 volatile￨2 boolean￨2 active￨2 ;￨2 private￨2 final￨2 Session￨2 session￨2 ;￨2 private￨2 final￨2 MessageConsumer￨2 consumer￨2 ;￨2 private￨2 final￨2 Connection￨2 conn￨2 ;￨2 private￨2 final￨2 boolean￨2 useResMsgIdAsCorrelId￨2 ;￨2 private￨2 Receiver￨2 (￨2 ConnectionFactory￨2 factory￨2 ,￨2 Destination￨2 receiveQueue￨2 ,￨2 String￨2 principal￨2 ,￨2 String￨2 credentials￨2 ,￨2 boolean￨2 useResMsgIdAsCorrelId￨2 )￨2 throws￨2 JMSException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Receiver￨2 createReceiver￨2 (￨2 ConnectionFactory￨2 factory￨2 ,￨2 Destination￨2 receiveQueue￨2 ,￨2 String￨2 principal￨2 ,￨2 String￨2 credentials￨2 ,￨2 boolean￨2 useResMsgIdAsCorrelId￨2 )￨2 throws￨2 JMSException￨2 (￨2 )￨2 {￨2 Receiver￨3 receiver￨3 =￨3 new￨3 Receiver￨3 (￨3 factory￨3 ,￨3 receiveQueue￨3 ,￨3 principal￨3 ,￨3 credentials￨3 ,￨3 useResMsgIdAsCorrelId￨3 )￨3 ;￨3 <START_BUG>￨3 Thread￨3 thread￨3 =￨3 new￨3 Thread￨3 (￨3 receiver￨3 ,￨3 "JMS<seq2seq4repair_space>Receiever"￨3 )￨3 ;￨3 <END_BUG>￨3 thread￨3 .￨3 start￨3 (￨3 )￨3 ;￨3 return￨3 receiver￨3 ;￨3 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deactivate￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TypePatternList￨1 extends￨1 PatternNode￨1 {￨1 private￨2 TypePattern￨2 [￨2 ]￨2 typePatterns￨2 ;￨2 int￨2 ellipsisCount￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 TypePatternList￨2 EMPTY￨2 =￨2 new￨2 TypePatternList￨2 (￨2 new￨2 TypePattern￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 TypePatternList￨2 ANY￨2 =￨2 new￨2 TypePatternList￨2 (￨2 new￨2 TypePattern￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 )￨2 ;￨2 public￨2 TypePatternList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypePatternList￨2 (￨2 TypePattern￨3 [￨3 ]￨3 arguments￨3 )￨2 {￨2 }￨2 public￨2 TypePatternList￨2 (￨2 List￨3 l￨3 )￨2 {￨2 }￨2 public￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypePattern￨2 get￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 canMatchSignatureWithNParameters￨2 (￨2 int￨3 numParams￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 matches￨2 (￨2 ResolvedType￨3 [￨3 ]￨3 types￨3 ,￨3 TypePattern￨3 .￨3 MatchKind￨3 kind￨3 )￨2 {￨2 }￨2 private￨2 static￨2 FuzzyBoolean￨2 outOfStar￨2 (￨2 final￨3 TypePattern￨3 [￨3 ]￨3 pattern￨3 ,￨3 final￨3 ResolvedType￨3 [￨3 ]￨3 target￨3 ,￨3 int￨3 pi￨3 ,￨3 int￨3 ti￨3 ,￨3 int￨3 pLeft￨3 ,￨3 int￨3 tLeft￨3 ,￨3 final￨3 int￨3 starsLeft￨3 ,￨3 TypePattern￨3 .￨3 MatchKind￨3 kind￨3 )￨2 {￨2 }￨2 private￨2 static￨2 FuzzyBoolean￨2 inStar￨2 (￨2 final￨3 TypePattern￨3 [￨3 ]￨3 pattern￨3 ,￨3 final￨3 ResolvedType￨3 [￨3 ]￨3 target￨3 ,￨3 int￨3 pi￨3 ,￨3 int￨3 ti￨3 ,￨3 final￨3 int￨3 pLeft￨3 ,￨3 int￨3 tLeft￨3 ,￨3 int￨3 starsLeft￨3 ,￨3 TypePattern￨3 .￨3 MatchKind￨3 kind￨3 )￨2 {￨2 }￨2 public￨2 TypePatternList￨2 parameterizeWith￨2 (￨2 Map￨3 typeVariableMap￨3 )￨2 {￨2 }￨2 public￨2 TypePatternList￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 ,￨3 boolean￨3 allowBinding￨3 ,￨3 boolean￨3 requireExactType￨3 )￨2 {￨2 }￨2 public￨2 TypePatternList￨2 resolveReferences￨2 (￨2 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 postRead￨2 (￨2 ResolvedType￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 TypePatternList￨2 read￨2 (￨2 VersionedDataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypePattern￨2 [￨2 ]￨2 getTypePatterns￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 getExactTypes￨2 (￨2 )￨2 {￨2 ArrayList￨3 ret￨3 =￨3 new￨3 ArrayList￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 typePatterns￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 UnresolvedType￨4 t￨4 =￨4 typePatterns￨4 [￨4 i￨4 ]￨4 .￨4 getExactType￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 t￨4 !=￨4 (￨4 ResolvedType￨4 .￨4 MISSING￨4 )￨4 )￨4 <END_BUG>￨4 ret￨4 .￨4 add￨4 (￨4 t￨4 )￨4 ;￨4 }￨3 return￨3 ret￨3 ;￨3 }￨2 public￨2 Object￨2 accept￨2 (￨2 PatternNodeVisitor￨3 visitor￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 traverse￨2 (￨2 PatternNodeVisitor￨3 visitor￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 areAllExactWithNoSubtypesAllowed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 maybeGetCleanNames￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CacheFactoryAdd￨1 extends￨1 AbstractAddStepHandler￨1 {￨1 private￨2 final￨2 AttributeDefinition￨2 [￨2 ]￨2 attributes￨2 ;￨2 CacheFactoryAdd￨2 (￨2 AttributeDefinition￨3 ...￨3 attributes￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 populateModel￨2 (￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 ,￨2 ServiceVerificationHandler￨2 verificationHandler￨2 ,￨2 List￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 serviceControllers￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 Collection￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 installRuntimeServices￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 ,￨2 ServiceVerificationHandler￨2 verificationHandler￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 String￨3 name￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 ADDRESS￨3 )￨3 )￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 ModelNode￨3 passivationStoreModel￨3 =￨3 PASSIVATION_STORE￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 ;￨3 String￨3 passivationStore￨3 =￨3 (￨3 passivationStoreModel￨3 .￨3 isDefined￨3 (￨3 )￨3 )￨3 ?￨3 passivationStoreModel￨3 .￨3 asString￨3 (￨3 )￨3 :￨3 null￨3 ;￨3 final￨3 Collection￨3 <￨3 String￨3 >￨3 unwrappedAliasValues￨3 =￨3 ALIASES￨3 .￨3 unwrap￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 ;￨3 <START_BUG>￨3 final￨3 Set￨3 <￨3 String￨3 >￨3 aliases￨3 =￨3 (￨3 unwrappedAliasValues￨3 !=￨3 null￨3 )￨3 ?￨3 new￨3 HashSet￨3 <￨3 >￨3 (￨3 unwrappedAliasValues￨3 )￨3 :￨3 Collections￨3 .￨3 <￨3 String￨3 >￨3 emptySet￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 ServiceTarget￨3 target￨3 =￨3 context￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 ServiceBuilder￨3 <￨3 ?￨3 >￨3 builder￨3 =￨3 CacheFactoryAdd￨3 .￨3 buildCacheFactoryBuilder￨3 (￨3 target￨3 ,￨3 name￨3 ,￨3 passivationStore￨3 )￨3 ;￨3 for￨3 (￨3 String￨4 alias￨4 :￨4 aliases￨4 )￨3 {￨3 builder￨4 .￨4 addAliases￨4 (￨4 CacheFactoryBuilderService￨4 .￨4 getServiceName￨4 (￨4 alias￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 verificationHandler￨4 !=￨4 null￨4 )￨3 {￨3 builder￨4 .￨4 addListener￨4 (￨4 verificationHandler￨4 )￨4 ;￨4 }￨3 return￨3 Collections￨3 .￨3 <￨3 ServiceController￨3 <￨3 ?￨3 >￨3 >￨3 singleton￨3 (￨3 builder￨3 .￨3 install￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 ServiceBuilder￨2 <￨2 ?￨2 >￨2 buildCacheFactoryBuilder￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 String￨3 name￨3 ,￨3 String￨3 passivationStore￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 QueuelessThreadPoolAdd￨1 extends￨1 AbstractExecutorAdd￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 5597662601486525937L￨2 ;￨2 private￨2 String￨2 handoffExecutor￨2 ;￨2 private￨2 boolean￨2 blocking￨2 ;￨2 public￨2 QueuelessThreadPoolAdd￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 ScaledCount￨3 maxThreads￨3 )￨2 {￨2 }￨2 protected￨2 <￨2 P￨2 >￨2 void￨2 applyUpdate￨2 (￨2 final￨3 UpdateContext￨3 updateContext￨3 ,￨3 final￨3 UpdateResultHandler￨3 <￨3 ?￨3 super￨3 Void￨3 ,￨3 P￨3 >￨3 handler￨3 ,￨3 final￨3 P￨3 param￨3 )￨2 {￨2 <START_BUG>￨3 final￨3 BatchBuilder￨3 builder￨3 =￨3 updateContext￨3 .￨3 getBatchBuilder￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ScaledCount￨3 maxThreadsCount￨3 =￨3 getMaxThreads￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 maxThreads￨3 =￨3 maxThreadsCount￨3 .￨3 getScaledCount￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 name￨3 =￨3 getName￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 serviceName￨3 =￨3 ThreadsServices￨3 .￨3 executorName￨3 (￨3 name￨3 )￨3 ;￨3 final￨3 QueuelessThreadPoolService￨3 service￨3 =￨3 new￨3 QueuelessThreadPoolService￨3 (￨3 maxThreads￨3 ,￨3 blocking￨3 ,￨3 getKeepaliveTime￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 ServiceBuilder￨3 <￨3 ExecutorService￨3 >￨3 serviceBuilder￨3 =￨3 builder￨3 .￨3 addService￨3 (￨3 serviceName￨3 ,￨3 service￨3 )￨3 ;￨3 addThreadFactoryDependency￨3 (￨3 serviceName￨3 ,￨3 serviceBuilder￨3 ,￨3 service￨3 .￨3 getThreadFactoryInjector￨3 (￨3 )￨3 ,￨3 builder￨3 )￨3 ;￨3 serviceBuilder￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 applyUpdate￨2 (￨2 final￨2 ThreadsSubsystemElement￨2 element￨2 )￨2 throws￨2 UpdateFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getHandoffExecutor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setHandoffExecutor￨2 (￨2 final￨3 String￨3 handoffExecutor￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isBlocking￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBlocking￨2 (￨2 final￨3 boolean￨3 blocking￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Snippet77￨1 {￨1 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 Display￨3 display￨3 =￨3 new￨3 Display￨3 (￨3 )￨3 ;￨3 Shell￨3 shell￨3 =￨3 new￨3 Shell￨3 (￨3 display￨3 )￨3 ;￨3 shell￨3 .￨3 setLayout￨3 (￨3 new￨3 FillLayout￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 Composite￨3 comp￨3 =￨3 new￨3 Composite￨3 (￨3 shell￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 final￨3 Table￨3 table￨3 =￨3 new￨3 Table￨3 (￨3 comp￨3 ,￨3 (￨3 (￨3 SWT￨3 .￨3 BORDER￨3 )￨3 |￨3 (￨3 SWT￨3 .￨3 V_SCROLL￨3 )￨3 )￨3 )￨3 ;￨3 table￨3 .￨3 setHeaderVisible￨3 (￨3 true￨3 )￨3 ;￨3 table￨3 .￨3 setLinesVisible￨3 (￨3 true￨3 )￨3 ;￨3 final￨3 TableColumn￨3 column1￨3 =￨3 new￨3 TableColumn￨3 (￨3 table￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 column1￨3 .￨3 setText￨3 (￨3 "Column<seq2seq4repair_space>1"￨3 )￨3 ;￨3 final￨3 TableColumn￨3 column2￨3 =￨3 new￨3 TableColumn￨3 (￨3 table￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 column2￨3 .￨3 setText￨3 (￨3 "Column<seq2seq4repair_space>2"￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 10￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 TableItem￨4 item￨4 =￨4 new￨4 TableItem￨4 (￨4 table￨4 ,￨4 SWT￨4 .￨4 NONE￨4 )￨4 ;￨4 item￨4 .￨4 setText￨4 (￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 comp￨3 .￨3 addControlListener￨3 (￨3 new￨3 ControlAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 controlResized￨4 (￨4 ControlEvent￨5 e￨5 )￨4 {￨4 Rectangle￨5 area￨5 =￨5 comp￨5 .￨5 getClientArea￨5 (￨5 )￨5 ;￨5 Point￨5 preferredSize￨5 =￨5 table￨5 .￨5 computeSize￨5 (￨5 DEFAULT￨5 ,￨5 DEFAULT￨5 )￨5 ;￨5 int￨5 width￨5 =￨5 (￨5 area￨5 .￨5 width￨5 )￨5 -￨5 (￨5 2￨5 *￨5 (￨5 table￨5 .￨5 getBorderWidth￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 (￨5 preferredSize￨5 .￨5 y￨5 )￨5 >￨5 (￨5 area￨5 .￨5 height￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 Point￨5 vBarSize￨5 =￨5 table￨5 .￨5 getVerticalBar￨5 (￨5 )￨5 .￨5 getSize￨5 (￨5 )￨5 ;￨5 width￨5 -=￨5 vBarSize￨5 .￨5 x￨5 ;￨5 }￨5 Point￨5 oldSize￨5 =￨5 table￨5 .￨5 getSize￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 oldSize￨6 .￨6 x￨6 )￨6 >￨6 (￨6 area￨6 .￨6 width￨6 )￨6 )￨5 {￨5 column1￨6 .￨6 setWidth￨6 (￨6 (￨6 width￨6 /￨6 3￨6 )￨6 )￨6 ;￨6 column2￨6 .￨6 setWidth￨6 (￨6 (￨6 width￨6 -￨6 (￨6 column1￨6 .￨6 getWidth￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 table￨6 .￨6 setSize￨6 (￨6 area￨6 .￨6 width￨6 ,￨6 area￨6 .￨6 height￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 table￨6 .￨6 setSize￨6 (￨6 area￨6 .￨6 width￨6 ,￨6 area￨6 .￨6 height￨6 )￨6 ;￨6 column1￨6 .￨6 setWidth￨6 (￨6 (￨6 width￨6 /￨6 3￨6 )￨6 )￨6 ;￨6 column2￨6 .￨6 setWidth￨6 (￨6 (￨6 width￨6 -￨6 (￨6 column1￨6 .￨6 getWidth￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 shell￨3 .￨3 open￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 !￨4 (￨4 shell￨4 .￨4 isDisposed￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 display￨5 .￨5 readAndDispatch￨5 (￨5 )￨5 )￨5 )￨4 {￨4 display￨5 .￨5 sleep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 display￨3 .￨3 dispose￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 TypeSystemImpl￨1 extends￨1 AbstractTypeSystemImpl￨1 implements￨1 TypeSystem￨1 {￨1 private￨2 DeclarationsContributor￨2 contr￨2 =￨2 null￨2 ;￨2 public￨2 TypeSystemImpl￨2 (￨2 DeclarationsContributor￨3 contributor￨3 )￨2 {￨2 }￨2 public￨2 Type￨2 typeForName￨2 (￨2 String￨3 name￨3 ,￨3 AbstractTypeReference￨3 ...￨3 typeArguments￨3 )￨2 {￨2 DeclaredType￨3 dt￨3 =￨3 contr￨3 .￨3 typeForName￨3 (￨3 name￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 dt￨3 ==￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 Type￨3 t￨3 =￨3 FACTORY￨3 .￨3 createType￨3 (￨3 )￨3 ;￨3 t￨3 .￨3 setDeclaredType￨3 (￨3 dt￨3 )￨3 ;￨3 t￨3 .￨3 getActualTypeArguments￨3 (￨3 )￨3 .￨3 addAll￨3 (￨3 Arrays￨3 .￨3 asList￨3 (￨3 typeArguments￨3 )￨3 )￨3 ;￨3 return￨3 t￨3 ;￨3 }￨3 return￨3 null￨3 ;￨3 }￨2 public￨2 FunctionType￨2 functionForName￨2 (￨2 String￨3 name￨3 ,￨3 List￨3 <￨3 AbstractTypeReference￨3 >￨3 parameterTypes￨3 ,￨3 AbstractTypeReference￨3 ...￨3 typeArguments￨3 )￨2 {￨2 }￨2 public￨2 FunctionType￨2 functionForNameAndParameterTypes￨2 (￨2 String￨3 name￨3 ,￨3 AbstractTypeReference￨3 ...￨3 parameterTypes￨3 )￨2 {￨2 }￨2 }￨1
public￨1 interface￨1 Console￨1 (￨1 )￨1 {￨1 void￨2 addCompleter￨2 (￨2 CommandLineCompleter￨3 completer￨3 )￨2 {￨2 }￨2 boolean￨2 isUseHistory￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setUseHistory￨2 (￨2 boolean￨3 useHistory￨3 )￨2 {￨2 }￨2 CommandHistory￨2 getHistory￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setHistoryFile￨2 (￨2 File￨3 f￨3 )￨2 {￨2 }￨2 void￨2 clearScreen￨2 (￨2 )￨2 {￨2 }￨2 void￨2 printColumns￨2 (￨2 Collection￨3 <￨3 String￨3 >￨3 list￨3 )￨2 {￨2 }￨2 void￨2 print￨2 (￨2 String￨3 line￨3 )￨2 {￨2 }￨2 void￨2 printNewLine￨2 (￨2 )￨2 {￨2 }￨2 String￨2 readLine￨2 (￨2 String￨3 prompt￨3 )￨2 {￨2 }￨2 String￨2 readLine￨2 (￨2 String￨3 prompt￨3 ,￨3 Character￨3 mask￨3 )￨2 {￨2 }￨2 int￨2 getTerminalWidth￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getTerminalHeight￨2 (￨2 )￨2 {￨2 }￨2 static￨2 final￨2 class￨2 Factory￨2 {￨2 public￨3 static￨3 Console￨3 getConsole￨3 (￨3 CommandContext￨3 ctx￨3 )￨3 throws￨3 CliInitializationException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 static￨3 Console￨3 getConsole￨3 (￨3 final￨3 CommandContext￨3 ctx￨3 ,￨3 InputStream￨3 is￨3 ,￨3 OutputStream￨3 os￨3 )￨3 throws￨3 CliInitializationException￨3 (￨3 )￨3 {￨3 org￨4 .￨4 jboss￨4 .￨4 aesh￨4 .￨4 console￨4 .￨4 Console￨4 aeshConsole￨4 =￨4 null￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 aeshConsole￨5 =￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 aesh￨5 .￨5 console￨5 .￨5 Console￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 <START_BUG>￨5 e￨5 .￨5 printStackTrace￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 final￨4 org￨4 .￨4 jboss￨4 .￨4 aesh￨4 .￨4 console￨4 .￨4 Console￨4 finalAeshConsole￨4 =￨4 aeshConsole￨4 ;￨4 return￨4 new￨4 Console￨4 (￨4 )￨4 {￨4 private￨5 CommandContext￨5 cmdCtx￨5 =￨5 ctx￨5 ;￨5 private￨5 org￨5 .￨5 jboss￨5 .￨5 aesh￨5 .￨5 console￨5 .￨5 Console￨5 console￨5 =￨5 finalAeshConsole￨5 ;￨5 private￨5 CommandHistory￨5 history￨5 =￨5 new￨5 HistoryImpl￨5 (￨5 )￨5 ;￨5 @￨5 Override￨5 public￨5 void￨5 addCompleter￨5 (￨5 final￨6 CommandLineCompleter￨6 completer￨6 )￨5 {￨5 console￨6 .￨6 addCompletion￨6 (￨6 new￨6 Completion￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 complete￨7 (￨7 CompleteOperation￨8 co￨8 )￨7 {￨7 int￨8 offset￨8 =￨8 completer￨8 .￨8 complete￨8 (￨8 cmdCtx￨8 ,￨8 co￨8 .￨8 getBuffer￨8 (￨8 )￨8 ,￨8 co￨8 .￨8 getCursor￨8 (￨8 )￨8 ,￨8 co￨8 .￨8 getCompletionCandidates￨8 (￨8 )￨8 )￨8 ;￨8 co￨8 .￨8 setOffset￨8 (￨8 offset￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 (￨9 co￨9 .￨9 getCompletionCandidates￨9 (￨9 )￨9 .￨9 size￨9 (￨9 )￨9 )￨9 ==￨9 1￨9 )￨9 &&￨9 (￨9 co￨9 .￨9 getCompletionCandidates￨9 (￨9 )￨9 .￨9 get￨9 (￨9 0￨9 )￨9 .￨9 startsWith￨9 (￨9 co￨9 .￨9 getBuffer￨9 (￨9 )￨9 )￨9 )￨9 )￨8 {￨8 co￨9 .￨9 doAppendSeparator￨9 (￨9 true￨9 )￨9 ;￨9 }￨8 else￨8 {￨8 co￨9 .￨9 doAppendSeparator￨9 (￨9 false￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 )￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 boolean￨5 isUseHistory￨5 (￨5 )￨5 {￨5 return￨6 !￨6 (￨6 Settings￨6 .￨6 getInstance￨6 (￨6 )￨6 .￨6 isHistoryDisabled￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 setUseHistory￨5 (￨5 boolean￨6 useHistory￨6 )￨5 {￨5 Settings￨6 .￨6 getInstance￨6 (￨6 )￨6 .￨6 setHistoryDisabled￨6 (￨6 (￨6 !￨6 useHistory￨6 )￨6 )￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 CommandHistory￨5 getHistory￨5 (￨5 )￨5 {￨5 return￨6 history￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 setHistoryFile￨5 (￨5 File￨6 f￨6 )￨5 {￨5 Settings￨6 .￨6 getInstance￨6 (￨6 )￨6 .￨6 setHistoryFile￨6 (￨6 f￨6 )￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 clearScreen￨5 (￨5 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 console￨7 .￨7 clear￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 printColumns￨5 (￨5 Collection￨6 <￨6 String￨6 >￨6 list￨6 )￨5 {￨5 String￨6 [￨6 ]￨6 newList￨6 =￨6 new￨6 String￨6 [￨6 list￨6 .￨6 size￨6 (￨6 )￨6 ]￨6 ;￨6 list￨6 .￨6 toArray￨6 (￨6 newList￨6 )￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 console￨7 .￨7 pushToStdOut￨7 (￨7 Parser￨7 .￨7 formatDisplayList￨7 (￨7 newList￨7 ,￨7 console￨7 .￨7 getTerminalSize￨7 (￨7 )￨7 .￨7 getHeight￨7 (￨7 )￨7 ,￨7 console￨7 .￨7 getTerminalSize￨7 (￨7 )￨7 .￨7 getWidth￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 print￨5 (￨5 String￨6 line￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 console￨7 .￨7 pushToStdOut￨7 (￨7 line￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 void￨5 printNewLine￨5 (￨5 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 console￨7 .￨7 pushToStdOut￨7 (￨7 Config￨7 .￨7 getLineSeparator￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 String￨5 readLine￨5 (￨5 String￨6 prompt￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 ConsoleOutput￨7 output￨7 =￨7 console￨7 .￨7 read￨7 (￨7 prompt￨7 )￨7 ;￨7 return￨7 output￨7 !=￨7 null￨7 ?￨7 output￨7 .￨7 getBuffer￨7 (￨7 )￨7 :￨7 null￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 return￨7 null￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 String￨5 readLine￨5 (￨5 String￨6 prompt￨6 ,￨6 Character￨6 mask￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 return￨7 console￨7 .￨7 read￨7 (￨7 new￨7 Prompt￨7 (￨7 prompt￨7 )￨7 ,￨7 mask￨7 )￨7 .￨7 getBuffer￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 e￨7 .￨7 printStackTrace￨7 (￨7 )￨7 ;￨7 return￨7 null￨7 ;￨7 }￨6 }￨5 @￨5 Override￨5 public￨5 int￨5 getTerminalWidth￨5 (￨5 )￨5 {￨5 return￨6 console￨6 .￨6 getTerminalSize￨6 (￨6 )￨6 .￨6 getWidth￨6 (￨6 )￨6 ;￨6 }￨5 @￨5 Override￨5 public￨5 int￨5 getTerminalHeight￨5 (￨5 )￨5 {￨5 return￨6 console￨6 .￨6 getTerminalSize￨6 (￨6 )￨6 .￨6 getHeight￨6 (￨6 )￨6 ;￨6 }￨5 class￨5 HistoryImpl￨5 implements￨5 CommandHistory￨5 {￨5 @￨6 SuppressWarnings￨6 (￨6 "unchecked"￨6 )￨6 @￨6 Override￨6 public￨6 List￨6 <￨6 String￨6 >￨6 asList￨6 (￨6 )￨6 {￨6 return￨7 console￨7 .￨7 getHistory￨7 (￨7 )￨7 .￨7 getAll￨7 (￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 boolean￨6 isUseHistory￨6 (￨6 )￨6 {￨6 return￨7 !￨7 (￨7 Settings￨7 .￨7 getInstance￨7 (￨7 )￨7 .￨7 isHistoryDisabled￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 void￨6 setUseHistory￨6 (￨6 boolean￨7 useHistory￨7 )￨6 {￨6 Settings￨7 .￨7 getInstance￨7 (￨7 )￨7 .￨7 setHistoryDisabled￨7 (￨7 (￨7 !￨7 useHistory￨7 )￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 void￨6 clear￨6 (￨6 )￨6 {￨6 console￨7 .￨7 getHistory￨7 (￨7 )￨7 .￨7 clear￨7 (￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 void￨6 setMaxSize￨6 (￨6 int￨7 maxSize￨7 )￨6 {￨6 Settings￨7 .￨7 getInstance￨7 (￨7 )￨7 .￨7 setHistorySize￨7 (￨7 maxSize￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 int￨6 getMaxSize￨6 (￨6 )￨6 {￨6 return￨7 Settings￨7 .￨7 getInstance￨7 (￨7 )￨7 .￨7 getHistorySize￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 Translate￨1 extends￨1 MatchingTask￨1 {￨1 private￨2 String￨2 bundle￨2 ;￨2 private￨2 String￨2 bundleLanguage￨2 ;￨2 private￨2 String￨2 bundleCountry￨2 ;￨2 private￨2 String￨2 bundleVariant￨2 ;￨2 private￨2 File￨2 toDir￨2 ;￨2 private￨2 String￨2 srcEncoding￨2 ;￨2 private￨2 String￨2 destEncoding￨2 ;￨2 private￨2 String￨2 bundleEncoding￨2 ;￨2 private￨2 String￨2 startToken￨2 ;￨2 private￨2 String￨2 endToken￨2 ;￨2 private￨2 boolean￨2 forceOverwrite￨2 ;￨2 private￨2 Vector￨2 filesets￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 resourceMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 FileUtils￨2 fileUtils￨2 =￨2 FileUtils￨2 .￨2 newFileUtils￨2 (￨2 )￨2 ;￨2 private￨2 long￨2 [￨2 ]￨2 bundleLastModified￨2 =￨2 new￨2 long￨2 [￨2 7￨2 ]￨2 ;￨2 private￨2 long￨2 srcLastModified￨2 ;￨2 private￨2 long￨2 destLastModified￨2 ;￨2 private￨2 boolean￨2 loaded￨2 =￨2 false￨2 ;￨2 public￨2 void￨2 setBundle￨2 (￨2 String￨3 bundle￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBundleLanguage￨2 (￨2 String￨3 bundleLanguage￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBundleCountry￨2 (￨2 String￨3 bundleCountry￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBundleVariant￨2 (￨2 String￨3 bundleVariant￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setToDir￨2 (￨2 File￨3 toDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setStartToken￨2 (￨2 String￨3 startToken￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEndToken￨2 (￨2 String￨3 endToken￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSrcEncoding￨2 (￨2 String￨3 srcEncoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDestEncoding￨2 (￨2 String￨3 destEncoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBundleEncoding￨2 (￨2 String￨3 bundleEncoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForceOverwrite￨2 (￨2 boolean￨3 forceOverwrite￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addFileset￨2 (￨2 FileSet￨3 set￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 loadResourceMaps￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 Locale￨3 locale￨3 =￨3 new￨3 Locale￨3 (￨3 bundleLanguage￨3 ,￨3 bundleCountry￨3 ,￨3 bundleVariant￨3 )￨3 ;￨3 String￨3 language￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getLanguage￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getLanguage￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 String￨3 country￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getCountry￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getCountry￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 String￨3 variant￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getVariant￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getVariant￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 String￨3 bundleFile￨3 =￨3 (￨3 (￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 )￨3 +￨3 country￨3 )￨3 +￨3 variant￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 0￨3 ,￨3 false￨3 )￨3 ;￨3 bundleFile￨3 =￨3 (￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 )￨3 +￨3 country￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 1￨3 ,￨3 false￨3 )￨3 ;￨3 bundleFile￨3 =￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 2￨3 ,￨3 false￨3 )￨3 ;￨3 bundleFile￨3 =￨3 bundle￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 3￨3 ,￨3 false￨3 )￨3 ;￨3 locale￨3 =￨3 Locale￨3 .￨3 getDefault￨3 (￨3 )￨3 ;￨3 language￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getLanguage￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getLanguage￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 country￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getCountry￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getCountry￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 variant￨3 =￨3 (￨3 (￨3 locale￨3 .￨3 getVariant￨3 (￨3 )￨3 .￨3 length￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 ?￨3 "_"￨3 +￨3 (￨3 locale￨3 .￨3 getVariant￨3 (￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 bundleEncoding￨3 =￨3 System￨3 .￨3 getProperty￨3 (￨3 "file.encoding"￨3 )￨3 ;￨3 bundleFile￨3 =￨3 (￨3 (￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 )￨3 +￨3 country￨3 )￨3 +￨3 variant￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 4￨3 ,￨3 false￨3 )￨3 ;￨3 bundleFile￨3 =￨3 (￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 )￨3 +￨3 country￨3 ;￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 5￨3 ,￨3 false￨3 )￨3 ;￨3 bundleFile￨3 =￨3 (￨3 bundle￨3 )￨3 +￨3 language￨3 ;￨3 <START_BUG>￨3 processBundle￨3 (￨3 bundleFile￨3 ,￨3 6￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 void￨2 processBundle￨2 (￨2 final￨2 String￨2 bundleFile￨2 ,￨2 final￨2 int￨2 i￨2 ,￨2 final￨2 boolean￨2 checkLoaded￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 loadResourceMap￨2 (￨2 FileInputStream￨2 ins￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 translate￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Rmic￨1 extends￨1 MatchingTask￨1 {￨1 private￨2 static￨2 final￨2 String￨2 FAIL_MSG￨2 =￨2 "Rmic<seq2seq4repair_space>failed,<seq2seq4repair_space>messages<seq2seq4repair_space>should<seq2seq4repair_space>have<seq2seq4repair_space>been<seq2seq4repair_space>provided."￨2 ;￨2 private￨2 boolean￨2 verify￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 filtering￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 iiop￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 idl￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 debug￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 includeAntRuntime￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 includeJavaRuntime￨2 =￨2 false￨2 ;￨2 private￨2 Vector￨2 compileList￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 ClassLoader￨2 loader￨2 =￨2 null￨2 ;￨2 private￨2 File￨2 baseDir￨2 ;￨2 private￨2 String￨2 classname￨2 ;￨2 private￨2 Path￨2 compileClasspath￨2 ;￨2 private￨2 Path￨2 extdirs￨2 ;￨2 private￨2 String￨2 idlopts￨2 ;￨2 private￨2 String￨2 iiopopts￨2 ;￨2 private￨2 File￨2 sourceBase￨2 ;￨2 private￨2 String￨2 stubVersion￨2 ;￨2 public￨2 void￨2 setBase￨2 (￨2 File￨3 base￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setClassname￨2 (￨2 String￨3 classname￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setClasspath￨2 (￨2 Path￨2 classpath￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setClasspathRef￨2 (￨2 Reference￨2 r￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDebug￨2 (￨2 boolean￨3 debug￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExtdirs￨2 (￨2 Path￨2 extdirs￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFiltering￨2 (￨2 boolean￨3 filter￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIdl￨2 (￨2 boolean￨3 idl￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIdlopts￨2 (￨2 String￨3 idlopts￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIiop￨2 (￨2 boolean￨3 iiop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIiopopts￨2 (￨2 String￨3 iiopopts￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludeantruntime￨2 (￨2 boolean￨3 include￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludejavaruntime￨2 (￨2 boolean￨3 include￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSourceBase￨2 (￨2 File￨3 sourceBase￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setStubVersion￨2 (￨2 String￨3 stubVersion￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVerify￨2 (￨2 boolean￨3 verify￨3 )￨2 {￨2 }￨2 public￨2 File￨2 getBase￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getClassname￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 getClasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getCompileList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getDebug￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 getExtdirs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getFileList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getFiltering￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getIdl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getIdlopts￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getIiop￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getIiopopts￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getIncludeantruntime￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getIncludejavaruntime￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ClassLoader￨2 getLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 getRemoteInterface￨2 (￨2 Class￨3 testClass￨3 )￨2 {￨2 }￨2 public￨2 File￨2 getSourceBase￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStubVersion￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getVerify￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isValidRmiRemote￨2 (￨2 String￨3 classname￨3 )￨2 {￨2 }￨2 public￨2 Path￨2 createClasspath￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 createExtdirs￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 scanDir￨2 (￨2 File￨2 baseDir￨2 ,￨2 String￨2 [￨2 ]￨2 files￨2 ,￨2 FileNameMapper￨2 mapper￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 isValidRmiRemote￨2 (￨2 Class￨3 testClass￨3 )￨2 {￨2 }￨2 private￨2 void￨2 moveGeneratedFile￨2 (￨2 File￨2 baseDir￨2 ,￨2 File￨2 sourceBaseFile￨2 ,￨2 String￨2 classname￨2 ,￨2 RmicAdapter￨2 adapter￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 String￨3 classFileName￨3 =￨3 (￨3 classname￨3 .￨3 replace￨3 (￨3 '.'￨3 ,￨3 File￨3 .￨3 separatorChar￨3 )￨3 )￨3 +￨3 ".class"￨3 ;￨3 String￨3 [￨3 ]￨3 generatedFiles￨3 =￨3 adapter￨3 .￨3 getMapper￨3 (￨3 )￨3 .￨3 mapFileName￨3 (￨3 classFileName￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 generatedFiles￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 String￨4 sourceFileName￨4 =￨4 (￨4 classFileName￨4 .￨4 substring￨4 (￨4 0￨4 ,￨4 (￨4 (￨4 classFileName￨4 .￨4 length￨4 (￨4 )￨4 )￨4 -￨4 6￨4 )￨4 )￨4 )￨4 +￨4 ".java"￨4 ;￨4 File￨4 oldFile￨4 =￨4 new￨4 File￨4 (￨4 baseDir￨4 ,￨4 sourceFileName￨4 )￨4 ;￨4 File￨4 newFile￨4 =￨4 new￨4 File￨4 (￨4 sourceBaseFile￨4 ,￨4 sourceFileName￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 if￨5 (￨5 filtering￨6 )￨5 {￨5 final￨6 FilterSetCollection￨6 filters￨6 =￨6 new￨6 FilterSetCollection￨6 (￨6 project￨6 .￨6 getGlobalFilterSet￨6 (￨6 )￨6 )￨6 ;￨6 <START_BUG>￨6 FileUtils￨6 .￨6 newFileUtils￨6 (￨6 )￨6 .￨6 copyFile￨6 (￨6 oldFile￨6 ,￨6 newFile￨6 ,￨6 filters￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 else￨5 {￨5 FileUtil￨6 .￨6 copyFile￨6 (￨6 oldFile￨6 ,￨6 newFile￨6 )￨6 ;￨6 }￨5 oldFile￨5 .￨5 delete￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 ioe￨5 )￨4 {￨4 String￨5 msg￨5 =￨5 (￨5 (￨5 (￨5 (￨5 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>copy<seq2seq4repair_space>"￨5 +￨5 oldFile￨5 )￨5 +￨5 "<seq2seq4repair_space>to<seq2seq4repair_space>"￨5 )￨5 +￨5 newFile￨5 )￨5 +￨5 "<seq2seq4repair_space>due<seq2seq4repair_space>to<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 ioe￨5 .￨5 getMessage￨5 (￨5 )￨5 )￨5 ;￨5 throw￨5 new￨5 TaskException￨5 (￨5 msg￨5 ,￨5 ioe￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 }￨1
public￨1 (￨2 CacheAdd￨2 .￨2 class￨2 .￨2 getPackage￨2 (￨2 )￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULTS￨2 =￨2 "infinispan-defaults.xml"￨2 ;￨2 private￨2 static￨2 volatile￨2 Map￨2 <￨2 CacheMode￨2 ,￨2 Configuration￨2 >￨2 defaults￨2 =￨2 null￨2 ;￨2 public￨2 static￨2 synchronized￨2 Configuration￨2 getDefaultConfiguration￨2 (￨2 CacheMode￨2 cacheMode￨2 )￨2 {￨2 }￨2 private￨2 static￨2 ConfigurationBuilderHolder￨2 load￨2 (￨2 String￨3 resource￨3 )￨2 {￨2 URL￨3 url￨3 =￨3 CacheAdd￨3 .￨3 find￨3 (￨3 resource￨3 ,￨3 CacheAdd￨3 .￨3 class￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 ;￨3 CacheAdd￨3 .￨3 log￨3 .￨3 debugf￨3 (￨3 "Loading<seq2seq4repair_space>Infinispan<seq2seq4repair_space>defaults<seq2seq4repair_space>from<seq2seq4repair_space>%s"￨3 ,￨3 url￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 ParserRegistry￨3 parser￨3 =￨3 new￨3 ParserRegistry￨3 (￨3 ParserRegistry￨3 .￨3 class￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 InputStream￨3 input￨3 =￨3 url￨3 .￨3 openStream￨3 (￨3 )￨3 )￨3 {￨3 return￨4 parser￨4 .￨4 parse￨4 (￨4 input￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 IllegalStateException￨4 (￨4 String￨4 .￨4 format￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>parse<seq2seq4repair_space>%s"￨4 ,￨4 url￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 private￨2 static￨2 URL￨2 find￨2 (￨2 String￨3 resource￨3 ,￨3 ClassLoader￨3 ...￨3 loaders￨3 )￨2 {￨2 }￨2 final￨2 CacheMode￨2 mode￨2 ;￨2 CacheAdd￨2 (￨2 CacheMode￨3 mode￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 populateModel￨2 (￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 ,￨2 ServiceVerificationHandler￨2 verificationHandler￨2 ,￨2 List￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 newControllers￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 Collection￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 installRuntimeServices￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 containerModel￨2 ,￨2 ModelNode￨2 cacheModel￨2 ,￨2 ServiceVerificationHandler￨2 verificationHandler￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 removeRuntimeServices￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 containerModel￨2 ,￨2 ModelNode￨2 cacheModel￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 PathAddress￨2 getCacheAddressFromOperation￨2 (￨2 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 protected￨2 PathAddress￨2 getCacheContainerAddressFromOperation￨2 (￨2 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 ServiceController￨2 <￨2 ?￨2 >￨2 installCacheConfigurationService￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 String￨3 containerName￨3 ,￨3 String￨3 cacheName￨3 ,￨3 boolean￨3 defaultCache￨3 ,￨3 ModuleIdentifier￨3 moduleId￨3 ,￨3 ConfigurationBuilder￨3 builder￨3 ,￨3 Configuration￨3 config￨3 ,￨3 List￨3 <￨3 CacheAdd￨3 .￨3 Dependency￨3 <￨3 ?￨3 >￨3 >￨3 dependencies￨3 ,￨3 ServiceVerificationHandler￨3 verificationHandler￨3 )￨2 {￨2 }￨2 ServiceController￨2 <￨2 ?￨2 >￨2 installCacheService￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 String￨3 containerName￨3 ,￨3 String￨3 cacheName￨3 ,￨3 boolean￨3 defaultCache￨3 ,￨3 ServiceController￨3 .￨3 Mode￨3 initialMode￨3 ,￨3 Configuration￨3 config￨3 ,￨3 ServiceVerificationHandler￨3 verificationHandler￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "rawtypes"￨2 )￨2 ServiceController￨2 <￨2 ?￨2 >￨2 installJndiService￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 String￨3 containerName￨3 ,￨3 String￨3 cacheName￨3 ,￨3 boolean￨3 defaultCache￨3 ,￨3 String￨3 jndiName￨3 ,￨3 ServiceVerificationHandler￨3 verificationHandler￨3 )￨2 {￨2 }￨2 private￨2 static￨2 JndiName￨2 createJndiName￨2 (￨2 String￨3 container￨3 ,￨3 String￨3 cache￨3 )￨2 {￨2 }￨2 private￨2 static￨2 BindInfo￨2 createCacheBinding￨2 (￨2 JndiName￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 <￨2 T￨2 >￨2 void￨2 addDependency￨2 (￨2 ServiceBuilder￨3 <￨3 ?￨3 >￨3 builder￨3 ,￨3 CacheAdd￨3 .￨3 Dependency￨3 <￨3 T￨3 >￨3 dependency￨3 )￨2 {￨2 }￨2 void￨2 populate￨2 (￨2 ModelNode￨2 fromModel￨2 ,￨2 ModelNode￨2 toModel￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 processModelNode￨2 (￨2 OperationContext￨2 context￨2 ,￨2 String￨2 containerName￨2 ,￨2 ModelNode￨2 cache￨2 ,￨2 ConfigurationBuilder￨2 builder￨2 ,￨2 List￨2 <￨2 CacheAdd￨2 .￨2 Dependency￨2 <￨2 ?￨2 >￨2 >￨2 dependencies￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 findStoreKey￨2 (￨2 ModelNode￨3 cache￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ModelNode￨2 getStoreModelNode￨2 (￨2 ModelNode￨3 cache￨3 )￨2 {￨2 }￨2 private￨2 StoreConfigurationBuilder￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 buildCacheStore￨2 (￨2 OperationContext￨2 context￨2 ,￨2 PersistenceConfigurationBuilder￨2 persistenceBuilder￨2 ,￨2 String￨2 containerName￨2 ,￨2 ModelNode￨2 store￨2 ,￨2 String￨2 storeKey￨2 ,￨2 List￨2 <￨2 CacheAdd￨2 .￨2 Dependency￨2 <￨2 ?￨2 >￨2 >￨2 dependencies￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 AbstractJdbcStoreConfigurationBuilder￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 buildJdbcStore￨2 (￨2 PersistenceConfigurationBuilder￨2 persistenceBuilder￨2 ,￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 store￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 buildBinaryKeyedTable￨2 (￨2 TableManipulationConfigurationBuilder￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 builder￨2 ,￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 table￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 buildStringKeyedTable￨2 (￨2 TableManipulationConfigurationBuilder￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 builder￨2 ,￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 table￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 buildTable￨2 (￨2 TableManipulationConfigurationBuilder￨2 <￨2 ?￨2 ,￨2 ?￨2 >￨2 builder￨2 ,￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 table￨2 ,￨2 String￨2 defaultTableNamePrefix￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 getColumnProperty￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 table￨2 ,￨2 String￨2 columnKey￨2 ,￨2 AttributeDefinition￨2 columnAttribute￨2 ,￨2 String￨2 defaultValue￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 class￨2 Dependency￨2 <￨2 I￨2 >￨2 {￨2 private￨3 final￨3 ServiceName￨3 name￨3 ;￨3 private￨3 final￨3 Class￨3 <￨3 I￨3 >￨3 type￨3 ;￨3 private￨3 final￨3 Injector￨3 <￨3 I￨3 >￨3 target￨3 ;￨3 Dependency￨3 (￨3 ServiceName￨4 name￨4 )￨3 {￨3 }￨3 Dependency￨3 (￨3 ServiceName￨4 name￨4 ,￨4 Class￨4 <￨4 I￨4 >￨4 type￨4 ,￨4 Injector￨4 <￨4 I￨4 >￨4 target￨4 )￨3 {￨3 }￨3 ServiceName￨3 getName￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Class￨3 <￨3 I￨3 >￨3 getType￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Injector￨3 <￨3 I￨3 >￨3 getInjector￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 abstract￨2 class￨2 SimpleInjector￨2 <￨2 I￨2 >￨2 implements￨2 Injector￨2 <￨2 I￨2 >￨2 {￨2 @￨3 Override￨3 public￨3 void￨3 uninject￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 CacheDependencies￨2 implements￨2 CacheService￨2 .￨2 Dependencies￨2 {￨2 private￨3 final￨3 Value￨3 <￨3 EmbeddedCacheManager￨3 >￨3 container￨3 ;￨3 private￨3 final￨3 InjectedValue￨3 <￨3 XAResourceRecoveryRegistry￨3 >￨3 recoveryRegistry￨3 =￨3 new￨3 InjectedValue￨3 <￨3 XAResourceRecoveryRegistry￨3 >￨3 (￨3 )￨3 ;￨3 CacheDependencies￨3 (￨3 Value￨4 <￨4 EmbeddedCacheManager￨4 >￨4 container￨4 )￨3 {￨3 }￨3 Injector￨3 <￨3 XAResourceRecoveryRegistry￨3 >￨3 getRecoveryRegistryInjector￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 EmbeddedCacheManager￨3 getCacheContainer￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 XAResourceRecoveryRegistry￨3 getRecoveryRegistry￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 CacheConfigurationDependencies￨2 implements￨2 CacheConfigurationService￨2 .￨2 Dependencies￨2 {￨2 private￨3 final￨3 Value￨3 <￨3 EmbeddedCacheManager￨3 >￨3 container￨3 ;￨3 private￨3 final￨3 InjectedValue￨3 <￨3 TransactionManager￨3 >￨3 tm￨3 =￨3 new￨3 InjectedValue￨3 <￨3 TransactionManager￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 final￨3 InjectedValue￨3 <￨3 TransactionSynchronizationRegistry￨3 >￨3 tsr￨3 =￨3 new￨3 InjectedValue￨3 <￨3 TransactionSynchronizationRegistry￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 final￨3 InjectedValue￨3 <￨3 ModuleLoader￨3 >￨3 moduleLoader￨3 =￨3 new￨3 InjectedValue￨3 <￨3 ModuleLoader￨3 >￨3 (￨3 )￨3 ;￨3 CacheConfigurationDependencies￨3 (￨3 Value￨4 <￨4 EmbeddedCacheManager￨4 >￨4 container￨4 )￨3 {￨3 }￨3 Injector￨3 <￨3 TransactionManager￨3 >￨3 getTransactionManagerInjector￨3 (￨3 )￨3 {￨3 }￨3 Injector￨3 <￨3 TransactionSynchronizationRegistry￨3 >￨3 getTransactionSynchronizationRegistryInjector￨3 (￨3 )￨3 {￨3 }￨3 Injector￨3 <￨3 ModuleLoader￨3 >￨3 getModuleLoaderInjector￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 EmbeddedCacheManager￨3 getCacheContainer￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 TransactionManager￨3 getTransactionManager￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 TransactionSynchronizationRegistry￨3 getTransactionSynchronizationRegistry￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 ModuleLoader￨3 getModuleLoader￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ReloadableResourceBundleMessageSource￨1 extends￨1 AbstractMessageSource￨1 implements￨1 ResourceLoaderAware￨1 {￨1 private￨2 static￨2 final￨2 String￨2 PROPERTIES_SUFFIX￨2 =￨2 ".properties"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 XML_SUFFIX￨2 =￨2 ".xml"￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 basenames￨2 =￨2 new￨2 String￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 String￨2 defaultEncoding￨2 ;￨2 private￨2 Properties￨2 fileEncodings￨2 ;￨2 private￨2 boolean￨2 fallbackToSystemLocale￨2 =￨2 true￨2 ;￨2 private￨2 long￨2 cacheMillis￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 PropertiesPersister￨2 propertiesPersister￨2 =￨2 new￨2 DefaultPropertiesPersister￨2 (￨2 )￨2 ;￨2 private￨2 ResourceLoader￨2 resourceLoader￨2 =￨2 new￨2 DefaultResourceLoader￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 Map￨2 cachedFilenames￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 Map￨2 cachedProperties￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 Map￨2 cachedMergedProperties￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 setBasename￨2 (￨2 String￨3 basename￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBasenames￨2 (￨2 String￨3 [￨3 ]￨3 basenames￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDefaultEncoding￨2 (￨2 String￨3 defaultEncoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFileEncodings￨2 (￨2 Properties￨3 fileEncodings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFallbackToSystemLocale￨2 (￨2 boolean￨3 fallbackToSystemLocale￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCacheSeconds￨2 (￨2 int￨3 cacheSeconds￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setPropertiesPersister￨2 (￨2 PropertiesPersister￨3 propertiesPersister￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setResourceLoader￨2 (￨2 ResourceLoader￨3 resourceLoader￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 String￨2 resolveCodeWithoutArguments￨2 (￨2 String￨3 code￨3 ,￨3 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 MessageFormat￨2 resolveCode￨2 (￨2 String￨3 code￨3 ,￨3 Locale￨3 locale￨3 )￨2 {￨2 }￨2 protected￨2 ReloadableResourceBundleMessageSource￨2 .￨2 PropertiesHolder￨2 getMergedProperties￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 protected￨2 List￨2 calculateAllFilenames￨2 (￨2 String￨3 basename￨3 ,￨3 Locale￨3 locale￨3 )￨2 {￨2 }￨2 protected￨2 List￨2 calculateFilenamesForLocale￨2 (￨2 String￨3 basename￨3 ,￨3 Locale￨3 locale￨3 )￨2 {￨2 List￨3 result￨3 =￨3 new￨3 ArrayList￨3 (￨3 3￨3 )￨3 ;￨3 String￨3 language￨3 =￨3 locale￨3 .￨3 getLanguage￨3 (￨3 )￨3 ;￨3 String￨3 country￨3 =￨3 locale￨3 .￨3 getCountry￨3 (￨3 )￨3 ;￨3 String￨3 variant￨3 =￨3 locale￨3 .￨3 getVariant￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 StringBuffer￨3 temp￨3 =￨3 new￨3 StringBuffer￨3 (￨3 basename￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 language￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 temp￨4 .￨4 append￨4 (￨4 '_'￨4 )￨4 .￨4 append￨4 (￨4 language￨4 )￨4 ;￨4 result￨4 .￨4 add￨4 (￨4 0￨4 ,￨4 temp￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 country￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 temp￨4 .￨4 append￨4 (￨4 '_'￨4 )￨4 .￨4 append￨4 (￨4 country￨4 )￨4 ;￨4 result￨4 .￨4 add￨4 (￨4 0￨4 ,￨4 temp￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 variant￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 temp￨4 .￨4 append￨4 (￨4 '_'￨4 )￨4 .￨4 append￨4 (￨4 variant￨4 )￨4 ;￨4 result￨4 .￨4 add￨4 (￨4 0￨4 ,￨4 temp￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 result￨3 ;￨3 }￨2 protected￨2 ReloadableResourceBundleMessageSource￨2 .￨2 PropertiesHolder￨2 getProperties￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 protected￨2 ReloadableResourceBundleMessageSource￨2 .￨2 PropertiesHolder￨2 refreshProperties￨2 (￨2 String￨3 filename￨3 ,￨3 ReloadableResourceBundleMessageSource￨3 .￨3 PropertiesHolder￨3 propHolder￨3 )￨2 {￨2 }￨2 protected￨2 Properties￨2 loadProperties￨2 (￨2 Resource￨2 resource￨2 ,￨2 String￨2 filename￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 clearCache￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 clearCacheIncludingAncestors￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 class￨2 PropertiesHolder￨2 {￨2 private￨3 Properties￨3 properties￨3 ;￨3 private￨3 long￨3 fileTimestamp￨3 =￨3 -￨3 1￨3 ;￨3 private￨3 long￨3 refreshTimestamp￨3 =￨3 -￨3 1￨3 ;￨3 private￨3 final￨3 Map￨3 cachedMessageFormats￨3 =￨3 new￨3 HashMap￨3 (￨3 )￨3 ;￨3 public￨3 PropertiesHolder￨3 (￨3 Properties￨4 properties￨4 ,￨4 long￨4 fileTimestamp￨4 )￨3 {￨3 }￨3 public￨3 PropertiesHolder￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Properties￨3 getProperties￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 getFileTimestamp￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setRefreshTimestamp￨3 (￨3 long￨4 refreshTimestamp￨4 )￨3 {￨3 }￨3 public￨3 long￨3 getRefreshTimestamp￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getProperty￨3 (￨3 String￨4 code￨4 )￨3 {￨3 }￨3 public￨3 MessageFormat￨3 getMessageFormat￨3 (￨3 String￨4 code￨4 ,￨4 Locale￨4 locale￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 QueryMetricsHandler￨1 extends￨1 AbstractRuntimeOnlyHandler￨1 {￨1 private￨2 final￨2 PersistenceUnitServiceRegistry￨2 persistenceUnitRegistry￨2 ;￨2 private￨2 QueryMetricsHandler￨2 (￨2 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeRuntimeStep￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 handleQueryStatistics￨3 (￨3 context￨3 ,￨3 operation￨3 )￨3 ;￨3 <START_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 abstract￨2 void￨2 handle￨2 (￨2 QueryStatistics￨3 statistics￨3 ,￨3 OperationContext￨3 context￨3 ,￨3 String￨3 attributeName￨3 ,￨3 String￨3 originalQueryName￨3 )￨2 {￨2 }￨2 private￨2 void￨2 handleQueryStatistics￨2 (￨2 OperationContext￨3 context￨3 ,￨3 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getExecutionCount￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getCacheHitCount￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getCachePutCount￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getCacheMissCount￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getExecutionRowCount￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getExecutionAvgTime￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getExecutionMaxTime￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 static￨2 final￨2 QueryMetricsHandler￨2 getExecutionMinTime￨2 (￨2 final￨3 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 public￨2 static￨2 OperationStepHandler￨2 getOriginalName￨2 (￨2 PersistenceUnitServiceRegistry￨3 persistenceUnitRegistry￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WeibullDistribution￨1 extends￨1 AbstractRealDistribution￨1 {￨1 public￨2 static￨2 final￨2 double￨2 DEFAULT_INVERSE_ABSOLUTE_ACCURACY￨2 =￨2 1.0E-9￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 8589540077390120676L￨2 ;￨2 private￨2 final￨2 double￨2 shape￨2 ;￨2 private￨2 final￨2 double￨2 scale￨2 ;￨2 private￨2 final￨2 double￨2 solverAbsoluteAccuracy￨2 ;￨2 private￨2 double￨2 numericalMean￨2 =￨2 Double￨2 .￨2 NaN￨2 ;￨2 private￨2 boolean￨2 numericalMeanIsCalculated￨2 =￨2 false￨2 ;￨2 private￨2 double￨2 numericalVariance￨2 =￨2 Double￨2 .￨2 NaN￨2 ;￨2 private￨2 boolean￨2 numericalVarianceIsCalculated￨2 =￨2 false￨2 ;￨2 public￨2 WeibullDistribution￨2 (￨2 double￨2 alpha￨2 ,￨2 double￨2 beta￨2 )￨2 throws￨2 NotStrictlyPositiveException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WeibullDistribution￨2 (￨2 double￨3 alpha￨3 ,￨3 double￨3 beta￨3 ,￨3 double￨3 inverseCumAccuracy￨3 )￨2 {￨2 }￨2 public￨2 WeibullDistribution￨2 (￨2 RandomGenerator￨2 rng￨2 ,￨2 double￨2 alpha￨2 ,￨2 double￨2 beta￨2 )￨2 throws￨2 NotStrictlyPositiveException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WeibullDistribution￨2 (￨2 RandomGenerator￨2 rng￨2 ,￨2 double￨2 alpha￨2 ,￨2 double￨2 beta￨2 ,￨2 double￨2 inverseCumAccuracy￨2 )￨2 throws￨2 NotStrictlyPositiveException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getShape￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getScale￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 density￨2 (￨2 double￨3 x￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 double￨2 logDensity￨2 (￨2 double￨3 x￨3 )￨2 {￨2 }￨2 public￨2 double￨2 cumulativeProbability￨2 (￨2 double￨3 x￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 double￨2 inverseCumulativeProbability￨2 (￨2 double￨3 p￨3 )￨2 {￨2 double￨3 ret￨3 ;￨3 if￨3 (￨3 (￨4 p￨4 <￨4 0.0￨4 )￨4 ||￨4 (￨4 p￨4 >￨4 1.0￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 OutOfRangeException￨4 (￨4 p￨4 ,￨4 0.0￨4 ,￨4 1.0￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 p￨4 ==￨4 0￨4 )￨3 {￨3 ret￨4 =￨4 0.0￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 p￨4 ==￨4 1￨4 )￨3 {￨3 ret￨4 =￨4 Double￨4 .￨4 POSITIVE_INFINITY￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 ret￨4 =￨4 (￨4 scale￨4 )￨4 *￨4 (￨4 FastMath￨4 .￨4 pow￨4 (￨4 (￨4 -￨4 (￨4 FastMath￨4 .￨4 log￨4 (￨4 (￨4 1.0￨4 -￨4 p￨4 )￨4 )￨4 )￨4 )￨4 ,￨4 (￨4 1.0￨4 /￨4 (￨4 shape￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 ret￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 double￨2 getSolverAbsoluteAccuracy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getNumericalMean￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 double￨2 calculateNumericalMean￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getNumericalVariance￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 double￨2 calculateNumericalVariance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getSupportLowerBound￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getSupportUpperBound￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSupportLowerBoundInclusive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSupportUpperBoundInclusive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSupportConnected￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TermsFilterTest￨1 extends￨1 LuceneTestCase￨1 {￨1 public￨2 void￨2 testCachability￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMissingTerms￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMissingField￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldNotPresent￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSkipField￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandom￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 TermsFilter￨2 termsFilter￨2 (￨2 boolean￨3 singleField￨3 ,￨3 Term￨3 ...￨3 terms￨3 )￨2 {￨2 }￨2 private￨2 TermsFilter￨2 termsFilter￨2 (￨2 boolean￨3 singleField￨3 ,￨3 Collection￨3 <￨3 Term￨3 >￨3 termList￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testHashCodeAndEquals￨2 (￨2 )￨2 {￨2 int￨3 num￨3 =￨3 atLeast￨3 (￨3 100￨3 )￨3 ;￨3 final￨3 boolean￨3 singleField￨3 =￨3 random￨3 (￨3 )￨3 .￨3 nextBoolean￨3 (￨3 )￨3 ;￨3 List￨3 <￨3 Term￨3 >￨3 terms￨3 =￨3 new￨3 ArrayList￨3 <￨3 Term￨3 >￨3 (￨3 )￨3 ;￨3 Set￨3 <￨3 Term￨3 >￨3 uniqueTerms￨3 =￨3 new￨3 HashSet￨3 <￨3 Term￨3 >￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 num￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 String￨4 field￨4 =￨4 "field"￨4 +￨4 (￨4 singleField￨4 ?￨4 "1"￨4 :￨4 random￨4 (￨4 )￨4 .￨4 nextInt￨4 (￨4 100￨4 )￨4 )￨4 ;￨4 String￨4 string￨4 =￨4 _TestUtil￨4 .￨4 randomRealisticUnicodeString￨4 (￨4 random￨4 (￨4 )￨4 )￨4 ;￨4 terms￨4 .￨4 add￨4 (￨4 new￨4 Term￨4 (￨4 field￨4 ,￨4 string￨4 )￨4 )￨4 ;￨4 uniqueTerms￨4 .￨4 add￨4 (￨4 new￨4 Term￨4 (￨4 field￨4 ,￨4 string￨4 )￨4 )￨4 ;￨4 TermsFilter￨4 left￨4 =￨4 termsFilter￨4 (￨4 (￨4 singleField￨4 ?￨4 random￨4 (￨4 )￨4 .￨4 nextBoolean￨4 (￨4 )￨4 :￨4 false￨4 )￨4 ,￨4 uniqueTerms￨4 )￨4 ;￨4 Collections￨4 .￨4 shuffle￨4 (￨4 terms￨4 ,￨4 random￨4 (￨4 )￨4 )￨4 ;￨4 TermsFilter￨4 right￨4 =￨4 termsFilter￨4 (￨4 (￨4 singleField￨4 ?￨4 random￨4 (￨4 )￨4 .￨4 nextBoolean￨4 (￨4 )￨4 :￨4 false￨4 )￨4 ,￨4 terms￨4 )￨4 ;￨4 assertEquals￨4 (￨4 right￨4 ,￨4 left￨4 )￨4 ;￨4 assertEquals￨4 (￨4 right￨4 .￨4 hashCode￨4 (￨4 )￨4 ,￨4 left￨4 .￨4 hashCode￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 i￨4 >￨4 0￨4 )￨4 {￨4 <END_BUG>￨4 List￨4 <￨4 Term￨4 >￨4 asList￨4 =￨4 new￨4 ArrayList￨4 <￨4 Term￨4 >￨4 (￨4 uniqueTerms￨4 )￨4 ;￨4 asList￨4 .￨4 remove￨4 (￨4 0￨4 )￨4 ;￨4 TermsFilter￨4 notEqual￨4 =￨4 termsFilter￨4 (￨4 (￨4 singleField￨4 ?￨4 random￨4 (￨4 )￨4 .￨4 nextBoolean￨4 (￨4 )￨4 :￨4 false￨4 )￨4 ,￨4 asList￨4 )￨4 ;￨4 assertFalse￨4 (￨4 left￨4 .￨4 equals￨4 (￨4 notEqual￨4 )￨4 )￨4 ;￨4 assertFalse￨4 (￨4 right￨4 .￨4 equals￨4 (￨4 notEqual￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 testNoTerms￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestDeletionPolicy￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 void￨2 verifyCommitOrder￨2 (￨2 List￨3 commits￨3 )￨2 {￨2 }￨2 class￨2 KeepAllDeletionPolicy￨2 implements￨2 IndexDeletionPolicy￨2 {￨2 int￨3 numOnInit￨3 ;￨3 int￨3 numOnCommit￨3 ;￨3 public￨3 void￨3 onInit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onCommit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 }￨2 class￨2 KeepNoneOnInitDeletionPolicy￨2 implements￨2 IndexDeletionPolicy￨2 {￨2 int￨3 numOnInit￨3 ;￨3 int￨3 numOnCommit￨3 ;￨3 public￨3 void￨3 onInit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onCommit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 }￨2 class￨2 KeepLastNDeletionPolicy￨2 implements￨2 IndexDeletionPolicy￨2 {￨2 int￨3 numOnInit￨3 ;￨3 int￨3 numOnCommit￨3 ;￨3 int￨3 numToKeep￨3 ;￨3 int￨3 numDelete￨3 ;￨3 Set￨3 seen￨3 =￨3 new￨3 HashSet￨3 (￨3 )￨3 ;￨3 public￨3 KeepLastNDeletionPolicy￨3 (￨3 int￨4 numToKeep￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onInit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onCommit￨3 (￨3 List￨4 commits￨4 )￨3 {￨3 }￨3 private￨3 void￨3 doDeletes￨3 (￨3 List￨4 commits￨4 ,￨4 boolean￨4 isCommit￨4 )￨3 {￨3 }￨3 }￨2 class￨2 ExpirationTimeDeletionPolicy￨2 implements￨2 IndexDeletionPolicy￨2 {￨2 Directory￨3 dir￨3 ;￨3 double￨3 expirationTimeSeconds￨3 ;￨3 int￨3 numDelete￨3 ;￨3 public￨3 ExpirationTimeDeletionPolicy￨3 (￨3 Directory￨4 dir￨4 ,￨4 double￨4 seconds￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onInit￨3 (￨3 List￨3 commits￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 onCommit￨3 (￨3 List￨3 commits￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 testExpirationTimeDeletionPolicy￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 (￨2 )￨2 {￨2 final￨3 double￨3 SECONDS￨3 =￨3 2.0￨3 ;￨3 boolean￨3 autoCommit￨3 =￨3 false￨3 ;￨3 boolean￨3 useCompoundFile￨3 =￨3 true￨3 ;￨3 Directory￨3 dir￨3 =￨3 new￨3 RAMDirectory￨3 (￨3 )￨3 ;￨3 TestDeletionPolicy￨3 .￨3 ExpirationTimeDeletionPolicy￨3 policy￨3 =￨3 new￨3 TestDeletionPolicy￨3 .￨3 ExpirationTimeDeletionPolicy￨3 (￨3 dir￨3 ,￨3 SECONDS￨3 )￨3 ;￨3 IndexWriter￨3 writer￨3 =￨3 new￨3 IndexWriter￨3 (￨3 dir￨3 ,￨3 autoCommit￨3 ,￨3 new￨3 WhitespaceAnalyzer￨3 (￨3 )￨3 ,￨3 true￨3 ,￨3 policy￨3 )￨3 ;￨3 writer￨3 .￨3 setUseCompoundFile￨3 (￨3 useCompoundFile￨3 )￨3 ;￨3 writer￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 long￨3 lastDeleteTime￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 7￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 lastDeleteTime￨4 =￨4 System￨4 .￨4 currentTimeMillis￨4 (￨4 )￨4 ;￨4 writer￨4 =￨4 new￨4 IndexWriter￨4 (￨4 dir￨4 ,￨4 autoCommit￨4 ,￨4 new￨4 WhitespaceAnalyzer￨4 (￨4 )￨4 ,￨4 false￨4 ,￨4 policy￨4 )￨4 ;￨4 writer￨4 .￨4 setUseCompoundFile￨4 (￨4 useCompoundFile￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 j￨5 =￨5 0￨5 ;￨5 j￨5 <￨5 17￨5 ;￨5 j￨5 ++￨5 )￨4 {￨4 addDoc￨5 (￨5 writer￨5 )￨5 ;￨5 }￨4 writer￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 Thread￨4 .￨4 sleep￨4 (￨4 (￨4 (￨4 int￨4 )￨4 (￨4 1000.0￨4 *￨4 (￨4 SECONDS￨4 /￨4 5.0￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 assertTrue￨3 (￨3 "no<seq2seq4repair_space>commits<seq2seq4repair_space>were<seq2seq4repair_space>deleted"￨3 ,￨3 (￨3 (￨3 policy￨3 .￨3 numDelete￨3 )￨3 >￨3 0￨3 )￨3 )￨3 ;￨3 long￨3 gen￨3 =￨3 SegmentInfos￨3 .￨3 getCurrentSegmentGeneration￨3 (￨3 dir￨3 )￨3 ;￨3 String￨3 fileName￨3 =￨3 IndexFileNames￨3 .￨3 fileNameFromGeneration￨3 (￨3 SEGMENTS￨3 ,￨3 ""￨3 ,￨3 gen￨3 )￨3 ;￨3 dir￨3 .￨3 deleteFile￨3 (￨3 SEGMENTS_GEN￨3 )￨3 ;￨3 while￨3 (￨3 gen￨4 >￨4 0￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 IndexReader￨5 reader￨5 =￨5 IndexReader￨5 .￨5 open￨5 (￨5 dir￨5 )￨5 ;￨5 reader￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 fileName￨5 =￨5 IndexFileNames￨5 .￨5 fileNameFromGeneration￨5 (￨5 SEGMENTS￨5 ,￨5 ""￨5 ,￨5 gen￨5 )￨5 ;￨5 long￨5 modTime￨5 =￨5 dir￨5 .￨5 fileModified￨5 (￨5 fileName￨5 )￨5 ;￨5 <START_BUG>￨5 assertTrue￨5 (￨5 (￨5 (￨5 "commit<seq2seq4repair_space>point<seq2seq4repair_space>was<seq2seq4repair_space>older<seq2seq4repair_space>than<seq2seq4repair_space>"￨5 +￨5 SECONDS￨5 )￨5 +￨5 "<seq2seq4repair_space>seconds<seq2seq4repair_space>but<seq2seq4repair_space>did<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>deleted"￨5 )￨5 ,￨5 (￨5 (￨5 lastDeleteTime￨5 -￨5 modTime￨5 )￨5 <￨5 (￨5 SECONDS￨5 *￨5 1000￨5 )￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 dir￨4 .￨4 deleteFile￨4 (￨4 IndexFileNames￨4 .￨4 fileNameFromGeneration￨4 (￨4 SEGMENTS￨4 ,￨4 ""￨4 ,￨4 gen￨4 )￨4 )￨4 ;￨4 gen￨4 --￨4 ;￨4 }￨3 dir￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testKeepAllDeletionPolicy￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testKeepNoneOnInitDeletionPolicy￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testKeepLastNDeletionPolicy￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testKeepLastNDeletionPolicyWithReader￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testKeepLastNDeletionPolicyWithCreates￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addDoc￨2 (￨2 IndexWriter￨2 writer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SolrWriter￨1 extends￨1 DIHWriterBase￨1 implements￨1 DIHWriter￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 SolrWriter￨2 .￨2 class￨2 )￨2 ;￨2 static￨2 final￨2 String￨2 LAST_INDEX_KEY￨2 =￨2 "last_index_time"￨2 ;￨2 private￨2 final￨2 UpdateRequestProcessor￨2 processor￨2 ;￨2 SolrQueryRequest￨2 req￨2 ;￨2 public￨2 SolrWriter￨2 (￨2 UpdateRequestProcessor￨2 processor￨2 ,￨2 SolrQueryRequest￨2 req￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 upload￨2 (￨2 SolrInputDocument￨3 d￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 deleteDoc￨2 (￨2 Object￨3 id￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 SolrWriter￨4 .￨4 log￨4 .￨4 info￨4 (￨4 (￨4 "Deleting<seq2seq4repair_space>document:<seq2seq4repair_space>"￨4 +￨4 id￨4 )￨4 )￨4 ;￨4 DeleteUpdateCommand￨4 delCmd￨4 =￨4 new￨4 DeleteUpdateCommand￨4 (￨4 req￨4 )￨4 ;￨4 <START_BUG>￨4 delCmd￨4 .￨4 id￨4 =￨4 id￨4 .￨4 toString￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 processor￨4 .￨4 processDelete￨4 (￨4 delCmd￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 SolrWriter￨4 .￨4 log￨4 .￨4 error￨4 (￨4 (￨4 "Exception<seq2seq4repair_space>while<seq2seq4repair_space>deleteing:<seq2seq4repair_space>"￨4 +￨4 id￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 deleteByQuery￨2 (￨2 String￨3 query￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 commit￨2 (￨2 boolean￨3 optimize￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 rollback￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 doDeleteAll￨2 (￨2 )￨2 {￨2 }￨2 static￨2 String￨2 getResourceAsString￨2 (￨2 InputStream￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 String￨2 getDocCount￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 init￨2 (￨2 Context￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 WebApplication￨1 extends￨1 Application￨1 {￨1 private￨2 Map￨2 bufferedResponses￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 IRequestCycleProcessor￨2 requestCycleProcessor￨2 ;￨2 private￨2 String￨2 sessionAttributePrefix￨2 ;￨2 private￨2 ISessionFactory￨2 sessionFactory￨2 =￨2 new￨2 ISessionFactory￨2 (￨2 )￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 Session￨3 newSession￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 WicketServlet￨2 wicketServlet￨2 ;￨2 public￨2 WebApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ApplicationSettings￨2 createApplicationSettings￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getSessionAttributePrefix￨2 (￨2 final￨3 WebRequest￨3 request￨3 )￨2 {￨2 if￨3 (￨3 (￨4 sessionAttributePrefix￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 String￨4 servletPath￨4 =￨4 request￨4 .￨4 getServletPath￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 servletPath￨5 ==￨5 null￨5 )￨4 {￨4 throw￨5 new￨5 WicketRuntimeException￨5 (￨5 "unable<seq2seq4repair_space>to<seq2seq4repair_space>retrieve<seq2seq4repair_space>servlet<seq2seq4repair_space>path"￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 sessionAttributePrefix￨4 =￨4 (￨4 "wicket-"￨4 +￨4 servletPath￨4 )￨4 +￨4 "-"￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 sessionAttributePrefix￨3 ;￨3 }￨2 public￨2 final￨2 WicketServlet￨2 getWicketServlet￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mount￨2 (￨2 String￨3 path￨3 ,￨3 IRequestTargetEncoderDecoder￨3 encoder￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mountBookmarkablePage￨2 (￨2 String￨3 path￨3 ,￨3 Class￨3 bookmarkablePageClass￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mountBookmarkablePage￨2 (￨2 String￨3 path￨3 ,￨3 Class￨3 bookmarkablePageClass￨3 ,￨3 String￨3 pageMapName￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mountPackage￨2 (￨2 String￨3 path￨3 ,￨3 Class￨3 classOfPackageToMount￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setSessionFactory￨2 (￨2 final￨3 ISessionFactory￨3 sessionFactory￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setWicketServlet￨2 (￨2 final￨3 WicketServlet￨3 wicketServlet￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 unmount￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 protected￨2 IRequestCycleFactory￨2 getDefaultRequestCycleFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestCycleProcessor￨2 getDefaultRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ISessionFactory￨2 getSessionFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalDestroy￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalInit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WebRequest￨2 newWebRequest￨2 (￨2 final￨3 HttpServletRequest￨3 servletRequest￨3 )￨2 {￨2 }￨2 protected￨2 WebResponse￨2 newWebResponse￨2 (￨2 final￨3 HttpServletResponse￨3 servletResponse￨3 )￨2 {￨2 }￨2 final￨2 void￨2 addBufferedResponse￨2 (￨2 String￨3 sessionId￨3 ,￨3 String￨3 bufferId￨3 ,￨3 BufferedResponse￨3 renderedResponse￨3 )￨2 {￨2 }￨2 final￨2 void￨2 clearBufferedResponses￨2 (￨2 String￨3 sessionId￨3 )￨2 {￨2 }￨2 final￨2 WebSession￨2 getSession￨2 (￨2 final￨3 WebRequest￨3 request￨3 )￨2 {￨2 }￨2 final￨2 BufferedResponse￨2 popBufferedResponse￨2 (￨2 String￨3 sessionId￨3 ,￨3 String￨3 bufferId￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkMountPath￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CCMCheck￨1 extends￨1 Continuus￨1 {￨1 private￨2 File￨2 file￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 comment￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 task￨2 =￨2 null￨2 ;￨2 protected￨2 Vector￨2 filesets￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 public￨2 CCMCheck￨2 (￨2 )￨2 {￨2 }￨2 public￨2 File￨2 getFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFile￨2 (￨2 File￨3 v￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getComment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setComment￨2 (￨2 String￨3 v￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getTask￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTask￨2 (￨2 String￨3 v￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addFileset￨2 (￨2 FileSet￨3 set￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doit￨2 (￨2 )￨2 {￨2 Commandline￨3 commandLine￨3 =￨3 new￨3 Commandline￨3 (￨3 )￨3 ;￨3 commandLine￨3 .￨3 setExecutable￨3 (￨3 getCcmCommand￨3 (￨3 )￨3 )￨3 ;￨3 commandLine￨3 .￨3 createArgument￨3 (￨3 )￨3 .￨3 setValue￨3 (￨3 getCcmAction￨3 (￨3 )￨3 )￨3 ;￨3 checkOptions￨3 (￨3 commandLine￨3 )￨3 ;￨3 int￨3 result￨3 =￨3 run￨3 (￨3 commandLine￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 Execute￨3 .￨3 isFailure￨3 (￨3 0￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 String￨3 msg￨3 =￨3 "Failed<seq2seq4repair_space>executing:<seq2seq4repair_space>"￨3 +￨3 (￨3 commandLine￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 throw￨3 new￨3 BuildException￨3 (￨3 msg￨3 ,￨3 getLocation￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 checkOptions￨2 (￨2 Commandline￨3 cmd￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 String￨2 FLAG_COMMENT￨2 =￨2 "/comment"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FLAG_TASK￨2 =￨2 "/task"￨2 ;￨2 }￨1
public￨1 class￨1 GoModelToElements￨1 implements￨1 TreeModelPrereqs￨1 {￨1 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 Localizer￨3 .￨3 localize￨3 (￨3 "Tree"￨3 ,￨3 "Namespace->Owned<seq2seq4repair_space>Element"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Object￨2 getRoot￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setRoot￨2 (￨2 Object￨3 r￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getChild￨2 (￨2 Object￨3 parent￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getChildCount￨2 (￨2 Object￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getIndexOfChild￨2 (￨2 Object￨3 parent￨3 ,￨3 Object￨3 child￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLeaf￨2 (￨2 Object￨3 node￨3 )￨2 {￨2 }￨2 public￨2 void￨2 valueForPathChanged￨2 (￨2 TreePath￨3 path￨3 ,￨3 Object￨3 newValue￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTreeModelListener￨2 (￨2 TreeModelListener￨3 l￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeTreeModelListener￨2 (￨2 TreeModelListener￨3 l￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getPrereqs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getProvidedTypes￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JoranConfigurator￨1 extends￨1 ConfiguratorBase￨1 {￨1 Interpreter￨2 joranInterpreter￨2 ;￨2 LoggerRepository￨2 repository￨2 ;￨2 boolean￨2 listAppnderAttached￨2 =￨2 false￨2 ;￨2 public￨2 JoranConfigurator￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 interface￨2 ParseAction￨2 (￨2 )￨2 {￨2 void￨3 parse￨3 (￨3 final￨3 SAXParser￨3 parser￨3 ,￨3 final￨3 DefaultHandler￨3 handler￨3 )￨3 throws￨3 IOException￨3 ,￨3 SAXException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 final￨2 void￨2 doConfigure￨2 (￨2 final￨3 URL￨3 url￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 doConfigure￨2 (￨2 final￨3 String￨3 filename￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 doConfigure￨2 (￨2 final￨3 File￨3 file￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 doConfigure￨2 (￨2 final￨3 InputSource￨3 source￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 doConfigure￨2 (￨2 final￨3 InputStream￨3 stream￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 doConfigure￨2 (￨2 final￨3 JoranConfigurator￨3 .￨3 ParseAction￨3 action￨3 ,￨3 final￨3 LoggerRepository￨3 repository￨3 )￨2 {￨2 this￨3 .￨3 repository￨3 =￨3 repository￨3 ;￨3 selfInitialize￨3 (￨3 this￨3 .￨3 repository￨3 )￨3 ;￨3 ExecutionContext￨3 ec￨3 =￨3 joranInterpreter￨3 .￨3 getExecutionContext￨3 (￨3 )￨3 ;￨3 List￨3 errorList￨3 =￨3 ec￨3 .￨3 getErrorList￨3 (￨3 )￨3 ;￨3 SAXParser￨3 saxParser￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 SAXParserFactory￨4 spf￨4 =￨4 SAXParserFactory￨4 .￨4 newInstance￨4 (￨4 )￨4 ;￨4 spf￨4 .￨4 setValidating￨4 (￨4 false￨4 )￨4 ;￨4 spf￨4 .￨4 setNamespaceAware￨4 (￨4 true￨4 )￨4 ;￨4 saxParser￨4 =￨4 spf￨4 .￨4 newSAXParser￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 pce￨4 )￨3 {￨3 final￨4 String￨4 errMsg￨4 =￨4 "Parser<seq2seq4repair_space>configuration<seq2seq4repair_space>error<seq2seq4repair_space>occured"￨4 ;￨4 getLogger￨4 (￨4 repository￨4 )￨4 .￨4 error￨4 (￨4 errMsg￨4 ,￨4 pce￨4 )￨4 ;￨4 ec￨4 .￨4 addError￨4 (￨4 new￨4 ErrorItem￨4 (￨4 errMsg￨4 ,￨4 pce￨4 )￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 <START_BUG>￨3 JoranDocument￨3 document￨3 =￨3 new￨3 JoranDocument￨3 (￨3 errorList￨3 )￨3 ;￨3 <END_BUG>￨3 try￨3 (￨3 )￨3 {￨3 action￨4 .￨4 parse￨4 (￨4 saxParser￨4 ,￨4 document￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 ie￨4 )￨3 {￨3 final￨4 String￨4 errMsg￨4 =￨4 "I/O<seq2seq4repair_space>error<seq2seq4repair_space>occured<seq2seq4repair_space>while<seq2seq4repair_space>parsing<seq2seq4repair_space>xml<seq2seq4repair_space>file"￨4 ;￨4 getLogger￨4 (￨4 repository￨4 )￨4 .￨4 error￨4 (￨4 errMsg￨4 ,￨4 ie￨4 )￨4 ;￨4 ec￨4 .￨4 addError￨4 (￨4 new￨4 ErrorItem￨4 (￨4 errMsg￨4 ,￨4 ie￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 final￨4 String￨4 errMsg￨4 =￨4 "Problem<seq2seq4repair_space>parsing<seq2seq4repair_space>XML<seq2seq4repair_space>document.<seq2seq4repair_space>See<seq2seq4repair_space>previously<seq2seq4repair_space>reported<seq2seq4repair_space>errors.<seq2seq4repair_space>Abandoning<seq2seq4repair_space>all<seq2seq4repair_space>further<seq2seq4repair_space>processing."￨4 ;￨4 getLogger￨4 (￨4 repository￨4 )￨4 .￨4 error￨4 (￨4 errMsg￨4 ,￨4 ex￨4 )￨4 ;￨4 errorList￨4 .￨4 add￨4 (￨4 new￨4 ErrorItem￨4 (￨4 errMsg￨4 )￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 ec￨3 .￨3 pushObject￨3 (￨3 repository￨3 )￨3 ;￨3 String￨3 errMsg￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 attachListAppender￨4 (￨4 repository￨4 )￨4 ;￨4 document￨4 .￨4 replay￨4 (￨4 joranInterpreter￨4 )￨4 ;￨4 getLogger￨4 (￨4 repository￨4 )￨4 .￨4 debug￨4 (￨4 "Finished<seq2seq4repair_space>parsing."￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 SAXException￨4 e￨4 )￨3 {￨3 }￨3 finally￨3 (￨3 )￨3 {￨3 detachListAppender￨4 (￨4 repository￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 List￨2 getErrorList￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 selfInitialize￨2 (￨2 LoggerRepository￨3 repository￨3 )￨2 {￨2 }￨2 public￨2 ExecutionContext￨2 getExecutionContext￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 OSGiSubsystemAdd￨1 extends￨1 AbstractBoottimeAddStepHandler￨1 {￨1 static￨2 final￨2 OSGiSubsystemAdd￨2 INSTANCE￨2 =￨2 new￨2 OSGiSubsystemAdd￨2 (￨2 )￨2 ;￨2 private￨2 OSGiRuntimeResource￨2 resource￨2 ;￨2 private￨2 OSGiSubsystemAdd￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Resource￨2 createResource￨2 (￨2 OperationContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 populateModel￨2 (￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performBoottime￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 ,￨2 final￨2 ModelNode￨2 model￨2 ,￨2 final￨2 ServiceVerificationHandler￨2 verificationHandler￨2 ,￨2 final￨2 List￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 newControllers￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 OSGiLogger￨3 .￨3 LOGGER￨3 .￨3 infoActivatingSubsystem￨3 (￨3 )￨3 ;￨3 final￨3 Activation￨3 activation￨3 =￨3 Activation￨3 .￨3 valueOf￨3 (￨3 ACTIVATION￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 .￨3 toUpperCase￨3 (￨3 Locale￨3 .￨3 ENGLISH￨3 )￨3 )￨3 ;￨3 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 context￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 final￨3 InitialDeploymentTracker￨3 deploymentTracker￨3 =￨3 new￨3 InitialDeploymentTracker￨3 (￨3 context￨3 ,￨3 verificationHandler￨3 )￨3 ;￨3 final￨3 ModuleRegistrationTracker￨3 registrationTracker￨3 =￨3 new￨3 ModuleRegistrationTracker￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 SubsystemExtension￨3 >￨3 extensions￨3 =￨3 new￨3 ArrayList￨3 <￨3 SubsystemExtension￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 Iterator￨3 <￨3 SubsystemExtension￨3 >￨3 services￨3 =￨3 ServiceLoader￨3 .￨3 load￨3 (￨3 SubsystemExtension￨3 .￨3 class￨3 ,￨3 getClass￨3 (￨3 )￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 .￨3 iterator￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 services￨3 .￨3 hasNext￨3 (￨3 )￨3 )￨3 {￨3 extensions￨4 .￨4 add￨4 (￨4 services￨4 .￨4 next￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 OperationStepHandler￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 execute￨4 (￨4 OperationContext￨4 context￨4 ,￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 newControllers￨5 .￨5 add￨5 (￨5 FrameworkBootstrapService￨5 .￨5 addService￨5 (￨5 serviceTarget￨5 ,￨5 resource￨5 ,￨5 extensions￨5 ,￨5 verificationHandler￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 newControllers￨5 .￨5 add￨5 (￨5 registrationTracker￨5 .￨5 install￨5 (￨5 serviceTarget￨5 ,￨5 verificationHandler￨5 )￨5 )￨5 ;￨5 context￨5 .￨5 completeStep￨5 (￨5 NOOP_ROLLBACK_HANDLER￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 AbstractDeploymentChainStep￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 protected￨4 void￨4 execute￨4 (￨4 DeploymentProcessorTarget￨5 processorTarget￨5 )￨4 {￨4 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 STRUCTURE￨5 ,￨5 STRUCTURE_OSGI_MANIFEST￨5 ,￨5 new￨5 OSGiManifestStructureProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 STRUCTURE￨5 ,￨5 STRUCTURE_BUNDLE_SUB_DEPLOYMENT￨5 ,￨5 new￨5 BundleSubDeploymentMarkingProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 PARSE￨5 ,￨5 PARSE_OSGI_BUNDLE_INFO￨5 ,￨5 new￨5 OSGiBundleInfoParseProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 PARSE￨5 ,￨5 PARSE_OSGI_PROPERTIES￨5 ,￨5 new￨5 OSGiXServiceParseProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 PARSE￨5 ,￨5 PARSE_OSGI_DEPLOYMENT￨5 ,￨5 new￨5 BundleDeploymentProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 PARSE￨5 ,￨5 PARSE_OSGI_COMPONENTS￨5 ,￨5 new￨5 OSGiComponentParseProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 PARSE￨5 ,￨5 PARSE_OSGI_SUBSYSTEM_ACTIVATOR￨5 ,￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 osgi￨5 .￨5 deployment￨5 .￨5 FrameworkActivateProcessor￨5 (￨5 deploymentTracker￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 REGISTER￨5 ,￨5 REGISTER_BUNDLE_INSTALL￨5 ,￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 osgi￨5 .￨5 deployment￨5 .￨5 BundleInstallProcessor￨5 (￨5 deploymentTracker￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 DEPENDENCIES￨5 ,￨5 DEPENDENCIES_BUNDLE￨5 ,￨5 new￨5 BundleDependenciesProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 CONFIGURE_MODULE￨5 ,￨5 CONFIGURE_RESOLVE_BUNDLE￨5 ,￨5 new￨5 BundleResolveProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 CONFIGURE_MODULE￨5 ,￨5 CONFIGURE_DEFERRED_PHASE￨5 ,￨5 new￨5 DeferredPhaseProcessor￨5 (￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 INSTALL￨5 ,￨5 INSTALL_RESOLVER_MODULE￨5 ,￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 osgi￨5 .￨5 deployment￨5 .￨5 ModuleRegisterProcessor￨5 (￨5 registrationTracker￨5 )￨5 )￨5 ;￨5 processorTarget￨5 .￨5 addDeploymentProcessor￨5 (￨5 SUBSYSTEM_NAME￨5 ,￨5 INSTALL￨5 ,￨5 INSTALL_BUNDLE_ACTIVATE￨5 ,￨5 new￨5 BundleActivateProcessor￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 for￨3 (￨3 SubsystemExtension￨4 extension￨4 :￨4 extensions￨4 )￨3 {￨3 extension￨4 .￨4 performBoottime￨4 (￨4 context￨4 ,￨4 operation￨4 ,￨4 model￨4 ,￨4 verificationHandler￨4 ,￨4 newControllers￨4 )￨4 ;￨4 }￨3 newControllers￨3 .￨3 add￨3 (￨3 SubsystemState￨3 .￨3 addService￨3 (￨3 serviceTarget￨3 ,￨3 activation￨3 )￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ErfTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testErf0￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErf1960￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErf2576￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErf2807￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErf3291￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testLargeValues￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfGnu￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfcGnu￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfcMaple￨2 (￨2 )￨2 {￨2 double￨3 [￨3 ]￨3 [￨3 ]￨3 ref￨3 =￨3 new￨3 double￨3 [￨3 ]￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 double￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 }￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 15￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 <START_BUG>￨4 final￨4 double￨4 result￨4 =￨4 0.5￨4 *￨4 (￨4 Erf￨4 .￨4 erfc￨4 (￨4 (￨4 (￨4 ref￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 )￨4 /￨4 (￨4 Math￨4 .￨4 sqrt￨4 (￨4 2￨4 )￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 Assert￨4 .￨4 assertEquals￨4 (￨4 ref￨4 [￨4 i￨4 ]￨4 [￨4 1￨4 ]￨4 ,￨4 result￨4 ,￨4 1.0E-15￨4 )￨4 ;￨4 TestUtils￨4 .￨4 assertRelativelyEquals￨4 (￨4 ref￨4 [￨4 i￨4 ]￨4 [￨4 1￨4 ]￨4 ,￨4 result￨4 ,￨4 1.0E-13￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testTwoArgumentErf￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfInvNaN￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfInvInfinite￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfInv￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfcInvNaN￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfcInvInfinite￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testErfcInv￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Rpm￨1 extends￨1 AbstractTask￨1 {￨1 private￨2 String￨2 m_command￨2 =￨2 "-bb"￨2 ;￨2 private￨2 boolean￨2 m_cleanBuildDir￨2 ;￨2 private￨2 boolean￨2 m_removeSpec￨2 ;￨2 private￨2 boolean￨2 m_removeSource￨2 ;￨2 private￨2 String￨2 m_specFile￨2 ;￨2 private￨2 File￨2 m_topDir￨2 ;￨2 public￨2 void￨2 setCleanBuildDir￨2 (￨2 boolean￨3 cleanBuildDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCommand￨2 (￨2 final￨3 String￨3 command￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRemoveSource￨2 (￨2 final￨3 boolean￨3 removeSource￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRemoveSpec￨2 (￨2 final￨3 boolean￨3 removeSpec￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSpecFile￨2 (￨2 final￨2 String￨2 specFile￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTopDir￨2 (￨2 final￨3 File￨3 topDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 final￨3 Commandline￨3 cmd￨3 =￨3 createCommand￨3 (￨3 )￨3 ;￨3 final￨3 Execute2￨3 exe￨3 =￨3 new￨3 Execute2￨3 (￨3 )￨3 ;￨3 setupLogger￨3 (￨3 exe￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 m_topDir￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 m_topDir￨4 =￨4 getBaseDirectory￨4 (￨4 )￨4 ;￨4 }￨3 exe￨3 .￨3 setWorkingDirectory￨3 (￨3 m_topDir￨3 )￨3 ;￨3 <START_BUG>￨3 exe￨3 .￨3 setCommandline￨3 (￨3 cmd￨3 .￨3 getCommandline￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 try￨3 (￨3 )￨3 {￨3 final￨4 String￨4 message￨4 =￨4 (￨4 "Building<seq2seq4repair_space>the<seq2seq4repair_space>RPM<seq2seq4repair_space>based<seq2seq4repair_space>on<seq2seq4repair_space>the<seq2seq4repair_space>"￨4 +￨4 (￨4 m_specFile￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>file"￨4 ;￨4 getLogger￨4 (￨4 )￨4 .￨4 info￨4 (￨4 message￨4 )￨4 ;￨4 if￨4 (￨4 0￨5 !=￨5 (￨5 exe￨5 .￨5 execute￨5 (￨5 )￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 TaskException￨5 (￨5 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>execute<seq2seq4repair_space>rpm"￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 TaskException￨4 (￨4 "Error"￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 Commandline￨2 createCommand￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DistributableSessionManagerFactoryBuilder￨1 implements￨1 org￨1 .￨1 wildfly￨1 .￨1 extension￨1 .￨1 undertow￨1 .￨1 session￨1 .￨1 DistributableSessionManagerFactoryBuilder￨1 {￨1 private￨2 final￨2 SessionManagerFactoryBuilder￨2 builder￨2 ;￨2 public￨2 DistributableSessionManagerFactoryBuilder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DistributableSessionManagerFactoryBuilder￨2 (￨2 SessionManagerFactoryBuilder￨3 builder￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServiceBuilder￨2 <￨2 SessionManagerFactory￨2 >￨2 build￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 ServiceName￨3 name￨3 ,￨3 ServiceName￨3 deploymentServiceName￨3 ,￨3 Module￨3 module￨3 ,￨3 JBossWebMetaData￨3 metaData￨3 )￨2 {￨2 <START_BUG>￨3 ServiceName￨3 clusteringServiceName￨3 =￨3 name￨3 .￨3 append￨3 (￨3 "distributable"￨3 )￨3 ;￨3 <END_BUG>￨3 this￨3 .￨3 builder￨3 .￨3 buildDeploymentDependency￨3 (￨3 target￨3 ,￨3 clusteringServiceName￨3 ,￨3 deploymentServiceName￨3 ,￨3 module￨3 ,￨3 metaData￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ON_DEMAND￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 return￨3 DistributableSessionManagerFactoryService￨3 .￨3 build￨3 (￨3 target￨3 ,￨3 name￨3 ,￨3 clusteringServiceName￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ProgressMonitorJobsDialog￨1 extends￨1 ProgressMonitorDialog￨1 {￨1 private￨2 NewProgressViewer￨2 viewer￨2 ;￨2 private￨2 int￨2 viewerHeight￨2 =￨2 -￨2 1￨2 ;￨2 Composite￨2 viewerComposite￨2 ;￨2 private￨2 Button￨2 detailsButton￨2 ;￨2 private￨2 long￨2 watchTime￨2 =￨2 -￨2 1￨2 ;￨2 protected￨2 boolean￨2 alreadyClosed￨2 =￨2 false￨2 ;￨2 private￨2 IProgressMonitor￨2 wrapperedMonitor￨2 ;￨2 protected￨2 boolean￨2 enableDetailsButton￨2 =￨2 false￨2 ;￨2 public￨2 ProgressMonitorJobsDialog￨2 (￨2 Shell￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createDialogArea￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 void￨2 handleDetailsButtonSelect￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 createButtonsForButtonBar￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createSpacer￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createDetailsButton￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createButtonBar￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 clearCursors￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateForSetBlocked￨2 (￨2 IStatus￨3 reason￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 boolean￨2 fork￨2 ,￨2 boolean￨2 cancelable￨2 ,￨2 IRunnableWithProgress￨2 runnable￨2 )￨2 throws￨2 InterruptedException￨2 ,￨2 InvocationTargetException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 enableDetails￨2 (￨2 boolean￨3 enableState￨3 )￨2 {￨2 }￨2 public￨2 void￨2 watchTicks￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 createWrapperedMonitor￨2 (￨2 )￨2 {￨2 wrapperedMonitor￨3 =￨3 new￨3 IProgressMonitorWithBlocking￨3 (￨3 )￨3 {￨3 IProgressMonitor￨4 superMonitor￨4 =￨4 ProgressMonitorJobsDialog￨4 .￨4 super￨4 .￨4 getProgressMonitor￨4 (￨4 )￨4 ;￨4 public￨4 void￨4 beginTask￨4 (￨4 String￨5 name￨5 ,￨5 int￨5 totalWork￨5 )￨4 {￨4 superMonitor￨5 .￨5 beginTask￨5 (￨5 name￨5 ,￨5 totalWork￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 private￨4 void￨4 checkTicking￨4 (￨4 )￨4 {￨4 if￨5 (￨5 (￨6 watchTime￨6 )￨6 <￨6 0￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 (￨6 System￨6 .￨6 currentTimeMillis￨6 (￨6 )￨6 )￨6 -￨6 (￨6 watchTime￨6 )￨6 )￨6 >￨6 (￨6 ProgressManager￨6 .￨6 getInstance￨6 (￨6 )￨6 .￨6 getLongOperationTime￨6 (￨6 )￨6 )￨6 )￨5 {￨5 watchTime￨6 =￨6 -￨6 1￨6 ;￨6 openDialog￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 private￨4 void￨4 openDialog￨4 (￨4 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 PlatformUI￨6 .￨6 isWorkbenchRunning￨6 (￨6 )￨6 )￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 PlatformUI￨5 .￨5 getWorkbench￨5 (￨5 )￨5 .￨5 getDisplay￨5 (￨5 )￨5 .￨5 syncExec￨5 (￨5 new￨5 Runnable￨5 (￨5 )￨5 {￨5 public￨6 void￨6 run￨6 (￨6 )￨6 {￨6 <START_BUG>￨7 if￨7 (￨7 !￨7 (￨7 ProgressManagerUtil￨7 .￨7 safeToOpen￨7 (￨7 ProgressMonitorJobsDialog￨7 .￨7 this￨7 )￨7 )￨7 )￨7 {￨7 <END_BUG>￨7 watchTicks￨7 (￨7 )￨7 ;￨7 return￨7 ;￨7 if￨7 (￨7 !￨8 (￨8 alreadyClosed￨8 )￨8 )￨7 {￨7 open￨8 (￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 done￨4 (￨4 )￨4 {￨4 superMonitor￨5 .￨5 done￨5 (￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 internalWorked￨4 (￨4 double￨5 work￨5 )￨4 {￨4 superMonitor￨5 .￨5 internalWorked￨5 (￨5 work￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 boolean￨4 isCanceled￨4 (￨4 )￨4 {￨4 return￨5 superMonitor￨5 .￨5 isCanceled￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 setCanceled￨4 (￨4 boolean￨5 value￨5 )￨4 {￨4 superMonitor￨5 .￨5 setCanceled￨5 (￨5 value￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 setTaskName￨4 (￨4 String￨5 name￨5 )￨4 {￨4 superMonitor￨5 .￨5 setTaskName￨5 (￨5 name￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 subTask￨4 (￨4 String￨5 name￨5 )￨4 {￨4 superMonitor￨5 .￨5 subTask￨5 (￨5 name￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 worked￨4 (￨4 int￨5 work￨5 )￨4 {￨4 superMonitor￨5 .￨5 worked￨5 (￨5 work￨5 )￨5 ;￨5 checkTicking￨5 (￨5 )￨5 ;￨5 }￨4 public￨4 void￨4 clearBlocked￨4 (￨4 )￨4 {￨4 if￨5 (￨5 (￨6 superMonitor￨6 )￨6 instanceof￨6 IProgressMonitorWithBlocking￨6 )￨5 {￨5 (￨6 (￨6 IProgressMonitorWithBlocking￨6 )￨6 (￨6 superMonitor￨6 )￨6 )￨6 .￨6 clearBlocked￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 public￨4 void￨4 setBlocked￨4 (￨4 IStatus￨5 reason￨5 )￨4 {￨4 openDialog￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 superMonitor￨6 )￨6 instanceof￨6 IProgressMonitorWithBlocking￨6 )￨5 {￨5 (￨6 (￨6 IProgressMonitorWithBlocking￨6 )￨6 (￨6 superMonitor￨6 )￨6 )￨6 .￨6 setBlocked￨6 (￨6 reason￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 ;￨3 }￨2 public￨2 IProgressMonitor￨2 getProgressMonitor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Tstamp￨1 extends￨1 Task￨1 {￨1 private￨2 Vector￨2 customFormats￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 prefix￨2 =￨2 ""￨2 ;￨2 public￨2 void￨2 setPrefix￨2 (￨2 String￨3 prefix￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 Date￨4 d￨4 =￨4 new￨4 Date￨4 (￨4 )￨4 ;￨4 Enumeration￨4 i￨4 =￨4 customFormats￨4 .￨4 elements￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 i￨5 .￨5 hasMoreElements￨5 (￨5 )￨5 )￨4 {￨4 Tstamp￨5 .￨5 CustomFormat￨5 cts￨5 =￨5 (￨5 (￨5 Tstamp￨5 .￨5 CustomFormat￨5 )￨5 (￨5 i￨5 .￨5 nextElement￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 <START_BUG>￨5 cts￨5 .￨5 execute￨5 (￨5 getProject￨5 (￨5 )￨5 ,￨5 d￨5 ,￨5 location￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 SimpleDateFormat￨4 dstamp￨4 =￨4 new￨4 SimpleDateFormat￨4 (￨4 "yyyyMMdd"￨4 )￨4 ;￨4 getProject￨4 (￨4 )￨4 .￨4 setNewProperty￨4 (￨4 (￨4 (￨4 prefix￨4 )￨4 +￨4 "DSTAMP"￨4 )￨4 ,￨4 dstamp￨4 .￨4 format￨4 (￨4 d￨4 )￨4 )￨4 ;￨4 SimpleDateFormat￨4 tstamp￨4 =￨4 new￨4 SimpleDateFormat￨4 (￨4 "HHmm"￨4 )￨4 ;￨4 getProject￨4 (￨4 )￨4 .￨4 setNewProperty￨4 (￨4 (￨4 (￨4 prefix￨4 )￨4 +￨4 "TSTAMP"￨4 )￨4 ,￨4 tstamp￨4 .￨4 format￨4 (￨4 d￨4 )￨4 )￨4 ;￨4 SimpleDateFormat￨4 today￨4 =￨4 new￨4 SimpleDateFormat￨4 (￨4 "MMMM<seq2seq4repair_space>d<seq2seq4repair_space>yyyy"￨4 ,￨4 Locale￨4 .￨4 US￨4 )￨4 ;￨4 getProject￨4 (￨4 )￨4 .￨4 setNewProperty￨4 (￨4 (￨4 (￨4 prefix￨4 )￨4 +￨4 "TODAY"￨4 )￨4 ,￨4 today￨4 .￨4 format￨4 (￨4 d￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 BuildException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Tstamp￨2 .￨2 CustomFormat￨2 createFormat￨2 (￨2 )￨2 {￨2 }￨2 public￨2 class￨2 CustomFormat￨2 {￨2 private￨3 TimeZone￨3 timeZone￨3 ;￨3 private￨3 String￨3 propertyName￨3 ;￨3 private￨3 String￨3 pattern￨3 ;￨3 private￨3 String￨3 language￨3 ;￨3 private￨3 String￨3 country￨3 ;￨3 private￨3 String￨3 variant￨3 ;￨3 private￨3 int￨3 offset￨3 =￨3 0￨3 ;￨3 private￨3 int￨3 field￨3 =￨3 Calendar￨3 .￨3 DATE￨3 ;￨3 private￨3 String￨3 prefix￨3 =￨3 ""￨3 ;￨3 public￨3 CustomFormat￨3 (￨3 String￨4 prefix￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setProperty￨3 (￨3 String￨4 propertyName￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setPattern￨3 (￨3 String￨4 pattern￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setLocale￨3 (￨3 String￨4 locale￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setTimezone￨3 (￨3 String￨4 id￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setOffset￨3 (￨3 int￨4 offset￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setUnit￨3 (￨3 String￨4 unit￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setUnit￨3 (￨3 Tstamp￨4 .￨4 Unit￨4 unit￨4 )￨3 {￨3 }￨3 public￨3 void￨3 execute￨3 (￨3 Project￨4 project￨4 ,￨4 Date￨4 date￨4 ,￨4 Location￨4 location￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 Unit￨2 extends￨2 EnumeratedAttribute￨2 {￨2 private￨3 static￨3 final￨3 String￨3 MILLISECOND￨3 =￨3 "millisecond"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 SECOND￨3 =￨3 "second"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 MINUTE￨3 =￨3 "minute"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 HOUR￨3 =￨3 "hour"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 DAY￨3 =￨3 "day"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 WEEK￨3 =￨3 "week"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 MONTH￨3 =￨3 "month"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 YEAR￨3 =￨3 "year"￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 [￨3 ]￨3 units￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 private￨3 Hashtable￨3 calendarFields￨3 =￨3 new￨3 Hashtable￨3 (￨3 )￨3 ;￨3 public￨3 Unit￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 getCalendarField￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 [￨3 ]￨3 getValues￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 AttachmentModel￨1 {￨1 private￨2 Folder￨2 folder￨2 ;￨2 private￨2 Object￨2 uid￨2 ;￨2 private￨2 List￨2 displayedMimeParts￨2 ;￨2 private￨2 MimePartTree￨2 collection￨2 ;￨2 public￨2 AttachmentModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setFolder￨2 (￨2 Folder￨3 folder￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setUid￨2 (￨2 Object￨3 uid￨3 )￨2 {￨2 }￨2 public￨2 Folder￨2 getFolder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getUid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MimePartTree￨2 getCollection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCollection￨2 (￨2 MimePartTree￨3 collection￨3 )￨2 {￨2 this￨3 .￨3 collection￨3 =￨3 collection￨3 ;￨3 displayedMimeParts￨3 =￨3 collection￨3 .￨3 getAllLeafs￨3 (￨3 )￨3 ;￨3 MimePart￨3 bodyPart￨3 =￨3 collection￨3 .￨3 getFirstTextPart￨3 (￨3 "plain"￨3 )￨3 ;￨3 if￨3 (￨3 bodyPart￨4 !=￨4 null￨4 )￨3 {￨3 MimePart￨4 bodyParent￨4 =￨4 (￨4 (￨4 MimePart￨4 )￨4 (￨4 bodyPart￨4 .￨4 getParent￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 bodyParent￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 bodyParent￨6 .￨6 getHeader￨6 (￨6 )￨6 .￨6 contentSubtype￨6 .￨6 equals￨6 (￨6 "alternative"￨6 )￨6 )￨5 {￨5 <START_BUG>￨6 Vector￨6 bodyParts￨6 =￨6 bodyParent￨6 .￨6 getChilds￨6 (￨6 )￨6 ;￨6 <END_BUG>￨6 displayedMimeParts￨6 .￨6 removeAll￨6 (￨6 bodyParts￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 displayedMimeParts￨6 .￨6 remove￨6 (￨6 bodyPart￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 public￨2 List￨2 getDisplayedMimeParts￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDisplayedMimeParts￨2 (￨2 List￨3 displayedMimeParts￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 PagedTableWithAlternatingRowStyle￨1 extends￨1 Table￨1 {￨1 public￨2 PagedTableWithAlternatingRowStyle￨2 (￨2 final￨3 String￨3 componentName￨3 ,￨3 final￨3 List￨3 data￨3 ,￨3 int￨3 pageSize￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 populateItem￨2 (￨2 final￨3 ListItem￨3 listItem￨3 )￨2 {￨2 <START_BUG>￨3 listItem￨3 .￨3 addAttributeModifier￨3 (￨3 new￨3 ComponentTagAttributeModifier￨3 (￨3 "class"￨3 ,￨3 new￨3 wicket￨3 .￨3 Model￨3 (￨3 (￨3 listItem￨3 .￨3 isEvenIndex￨3 (￨3 )￨3 ?￨3 "even"￨3 :￨3 "odd"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 FormatterElement￨1 {￨1 private￨2 OutputStream￨2 out￨2 =￨2 new￨2 KeepAliveOutputStream￨2 (￨2 System￨2 .￨2 out￨2 )￨2 ;￨2 private￨2 String￨2 classname￨2 ;￨2 private￨2 Vector￨2 filters￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 setType￨2 (￨2 FormatterElement￨3 .￨3 TypeAttribute￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setClassname￨2 (￨2 String￨3 classname￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFilters￨2 (￨2 String￨3 filters￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addFilter￨2 (￨2 FilterElement￨3 fe￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOutput￨2 (￨2 OutputAttribute￨3 output￨3 )￨2 {￨2 }￨2 protected￨2 Formatter￨2 createFormatter￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 TypeAttribute￨2 extends￨2 EnumeratedAttribute￨2 {￨2 private￨3 static￨3 final￨3 String￨3 [￨3 ]￨3 VALUES￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 private￨3 static￨3 final￨3 String￨3 [￨3 ]￨3 CLASSNAMES￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 public￨3 String￨3 [￨3 ]￨3 getValues￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getClassName￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 return￨4 FormatterElement￨4 .￨4 TypeAttribute￨4 .￨4 CLASSNAMES￨4 [￨4 index￨4 ]￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 }￨1
public￨1 class￨1 Decorations￨1 extends￨1 Canvas￨1 {￨1 Image￨2 image￨2 ;￨2 Image￨2 [￨2 ]￨2 images￨2 =￨2 new￨2 Image￨2 [￨2 0￨2 ]￨2 ;￨2 Menu￨2 menuBar￨2 ;￨2 String￨2 text￨2 =￨2 ""￨2 ;￨2 boolean￨2 minimized￨2 ;￨2 boolean￨2 maximized￨2 ;￨2 Control￨2 savedFocus￨2 ;￨2 Button￨2 defaultButton￨2 ;￨2 Decorations￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Decorations￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 void￨2 bringToTop￨2 (￨2 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 int￨2 compare￨2 (￨2 ImageData￨3 data1￨3 ,￨3 ImageData￨3 data2￨3 )￨2 {￨2 }￨2 Control￨2 computeTabGroup￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 computeTabRoot￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Button￨2 getDefaultButton￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 [￨2 ]￨2 getImages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMaximized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Menu￨2 getMenuBar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMinimized￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getNameText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isTabGroup￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isTabItem￨2 (￨2 )￨2 {￨2 }￨2 Decorations￨2 menuShell￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 restoreFocus￨2 (￨2 )￨2 {￨2 }￨2 void￨2 saveFocus￨2 (￨2 )￨2 {￨2 int￨3 window￨3 =￨3 OS￨3 .￨3 GetControlOwner￨3 (￨3 handle￨3 )￨3 ;￨3 <START_BUG>￨3 Control￨3 control￨3 =￨3 display￨3 .￨3 getFocusControl￨3 (￨3 window￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 (￨4 control￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 control￨4 !=￨4 (￨4 this￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 this￨4 )￨4 ==￨4 (￨4 control￨4 .￨4 menuShell￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 setSavedFocus￨4 (￨4 control￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 setDefaultButton￨2 (￨2 Button￨3 button￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImages￨2 (￨2 Image￨3 [￨3 ]￨3 images￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaximized￨2 (￨2 boolean￨3 maximized￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMenuBar￨2 (￨2 Menu￨3 menu￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimized￨2 (￨2 boolean￨3 minimized￨3 )￨2 {￨2 }￨2 void￨2 setSavedFocus￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 sort￨2 (￨2 Image￨3 [￨3 ]￨3 images￨3 )￨2 {￨2 }￨2 boolean￨2 traverseItem￨2 (￨2 boolean￨3 next￨3 )￨2 {￨2 }￨2 boolean￨2 traverseReturn￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 ConfigurationHandler￨1 {￨1 private￨2 File￨2 _loadedFromFile￨2 =￨2 null￨2 ;￨2 private￨2 URL￨2 _loadedFromURL￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 _changeable￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 _loaded￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 _changed￨2 =￨2 false￨2 ;￨2 private￨2 static￨2 PropertyChangeSupport￨2 _pcl￨2 =￨2 null￨2 ;￨2 public￨2 ConfigurationHandler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ConfigurationHandler￨2 (￨2 boolean￨3 changeable￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 String￨2 getDefaultPath￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 loadIfNecessary￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 loadDefault￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 saveDefault￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 saveDefault￨2 (￨2 boolean￨3 force￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isChangeable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isChanged￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isLoaded￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 load￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 load￨2 (￨2 URL￨3 url￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 save￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 save￨2 (￨2 URL￨3 url￨3 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getString￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 String￨3 defaultValue￨3 )￨2 {￨2 }￨2 public￨2 final￨2 int￨2 getInteger￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 int￨3 defaultValue￨3 )￨2 {￨2 }￨2 public￨2 final￨2 double￨2 getDouble￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 double￨3 defaultValue￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 getBoolean￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 boolean￨3 defaultValue￨3 )￨2 {￨2 loadIfNecessary￨3 (￨3 )￨3 ;￨3 Boolean￨3 dflt￨3 =￨3 new￨3 Boolean￨3 (￨3 defaultValue￨3 )￨3 ;￨3 <START_BUG>￨3 Boolean￨3 b￨3 =￨3 new￨3 Boolean￨3 (￨3 getValue￨3 (￨3 key￨3 .￨3 getKey￨3 (￨3 )￨3 ,￨3 dflt￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 b￨3 .￨3 booleanValue￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 final￨2 synchronized￨2 void￨2 workerSetValue￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 String￨3 newValue￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setString￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 String￨3 newValue￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setInteger￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setDouble￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 double￨3 value￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setBoolean￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 boolean￨3 value￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addListener￨2 (￨2 PropertyChangeListener￨3 pcl￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 removeListener￨2 (￨2 PropertyChangeListener￨3 pcl￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addListener￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 PropertyChangeListener￨3 pcl￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 removeListener￨2 (￨2 ConfigurationKey￨3 key￨3 ,￨3 PropertyChangeListener￨3 pcl￨3 )￨2 {￨2 }￨2 boolean￨2 loadUnspecified￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 saveUnspecified￨2 (￨2 )￨2 {￨2 }￨2 abstract￨2 boolean￨2 loadFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 abstract￨2 boolean￨2 loadURL￨2 (￨2 URL￨3 url￨3 )￨2 {￨2 }￨2 abstract￨2 boolean￨2 saveFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 abstract￨2 boolean￨2 saveURL￨2 (￨2 URL￨3 url￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasKey￨2 (￨2 ConfigurationKey￨3 key￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 String￨2 getValue￨2 (￨2 String￨3 key￨3 ,￨3 String￨3 defaultValue￨3 )￨2 {￨2 }￨2 abstract￨2 void￨2 setValue￨2 (￨2 String￨3 key￨3 ,￨3 String￨3 value￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TransactionalSpoutCoordinator￨1 extends￨1 BaseRichSpout￨1 {￨1 public￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 TransactionalSpoutCoordinator￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 BigInteger￨2 INIT_TXID￨2 =￨2 BigInteger￨2 .￨2 ONE￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 TRANSACTION_BATCH_STREAM_ID￨2 =￨2 (￨2 TransactionalSpoutCoordinator￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 +￨2 "/batch"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 TRANSACTION_COMMIT_STREAM_ID￨2 =￨2 (￨2 TransactionalSpoutCoordinator￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 +￨2 "/commit"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CURRENT_TX￨2 =￨2 "currtx"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 META_DIR￨2 =￨2 "meta"￨2 ;￨2 private￨2 ITransactionalSpout￨2 _spout￨2 ;￨2 private￨2 Coordinator￨2 _coordinator￨2 ;￨2 private￨2 TransactionalState￨2 _state￨2 ;￨2 private￨2 RotatingTransactionalState￨2 _coordinatorState￨2 ;￨2 TreeMap￨2 <￨2 BigInteger￨2 ,￨2 TransactionalSpoutCoordinator￨2 .￨2 TransactionStatus￨2 >￨2 _activeTx￨2 =￨2 new￨2 TreeMap￨2 <￨2 BigInteger￨2 ,￨2 TransactionalSpoutCoordinator￨2 .￨2 TransactionStatus￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 SpoutOutputCollector￨2 _collector￨2 ;￨2 BigInteger￨2 _currTransaction￨2 ;￨2 int￨2 _maxTransactionActive￨2 ;￨2 TransactionalSpoutCoordinator￨2 .￨2 StateInitializer￨2 _initializer￨2 ;￨2 public￨2 TransactionalSpoutCoordinator￨2 (￨2 ITransactionalSpout￨2 spout￨2 )￨2 {￨2 }￨2 public￨2 ITransactionalSpout￨2 getSpout￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 open￨2 (￨2 Map￨3 conf￨3 ,￨3 TopologyContext￨3 context￨3 ,￨3 SpoutOutputCollector￨3 collector￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 nextTuple￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 ack￨2 (￨2 Object￨3 msgId￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 fail￨2 (￨2 Object￨3 msgId￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 declareOutputFields￨2 (￨2 OutputFieldsDeclarer￨3 declarer￨3 )￨2 {￨2 }￨2 private￨2 void￨2 sync￨2 (￨2 )￨2 {￨2 TransactionalSpoutCoordinator￨3 .￨3 TransactionStatus￨3 maybeCommit￨3 =￨3 _activeTx￨3 .￨3 get￨3 (￨3 _currTransaction￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 maybeCommit￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 maybeCommit￨4 .￨4 status￨4 )￨4 ==￨4 (￨4 TransactionalSpoutCoordinator￨4 .￨4 AttemptStatus￨4 .￨4 PROCESSED￨4 )￨4 )￨4 )￨3 {￨3 maybeCommit￨4 .￨4 status￨4 =￨4 TransactionalSpoutCoordinator￨4 .￨4 AttemptStatus￨4 .￨4 COMMITTING￨4 ;￨4 _collector￨4 .￨4 emit￨4 (￨4 TransactionalSpoutCoordinator￨4 .￨4 TRANSACTION_COMMIT_STREAM_ID￨4 ,￨4 new￨4 backtype￨4 .￨4 storm￨4 .￨4 tuple￨4 .￨4 Values￨4 (￨4 maybeCommit￨4 .￨4 attempt￨4 )￨4 ,￨4 maybeCommit￨4 .￨4 attempt￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 _activeTx￨4 .￨4 size￨4 (￨4 )￨4 )￨4 <￨4 (￨4 _maxTransactionActive￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 BigInteger￨4 curr￨4 =￨4 _currTransaction￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 _maxTransactionActive￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 _activeTx￨6 .￨6 containsKey￨6 (￨6 curr￨6 )￨6 )￨6 )￨5 {￨5 TransactionAttempt￨6 attempt￨6 =￨6 new￨6 TransactionAttempt￨6 (￨6 curr￨6 ,￨6 Utils￨6 .￨6 randomLong￨6 (￨6 )￨6 )￨6 ;￨6 Object￨6 state￨6 =￨6 _coordinatorState￨6 .￨6 getState￨6 (￨6 curr￨6 ,￨6 _initializer￨6 )￨6 ;￨6 _activeTx￨6 .￨6 put￨6 (￨6 curr￨6 ,￨6 new￨6 TransactionalSpoutCoordinator￨6 .￨6 TransactionStatus￨6 (￨6 attempt￨6 )￨6 )￨6 ;￨6 _collector￨6 .￨6 emit￨6 (￨6 TransactionalSpoutCoordinator￨6 .￨6 TRANSACTION_BATCH_STREAM_ID￨6 ,￨6 new￨6 backtype￨6 .￨6 storm￨6 .￨6 tuple￨6 .￨6 Values￨6 (￨6 attempt￨6 ,￨6 state￨6 ,￨6 previousTransactionId￨6 (￨6 _currTransaction￨6 )￨6 )￨6 ,￨6 attempt￨6 )￨6 ;￨6 }￨5 curr￨5 =￨5 nextTransactionId￨5 (￨5 curr￨5 )￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 FailedException￨4 e￨4 )￨3 {￨3 TransactionalSpoutCoordinator￨4 .￨4 LOG￨4 .￨4 warn￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>get<seq2seq4repair_space>metadata<seq2seq4repair_space>for<seq2seq4repair_space>a<seq2seq4repair_space>transaction"￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 Map￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 getComponentConfiguration￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 enum￨2 AttemptStatus￨2 (￨2 )￨2 {￨2 PROCESSING￨3 ,￨3 PROCESSED￨3 ,￨3 COMMITTING￨3 ;￨3 }￨2 private￨2 static￨2 class￨2 TransactionStatus￨2 {￨2 TransactionAttempt￨3 attempt￨3 ;￨3 TransactionalSpoutCoordinator￨3 .￨3 AttemptStatus￨3 status￨3 ;￨3 public￨3 TransactionStatus￨3 (￨3 TransactionAttempt￨4 attempt￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 BigInteger￨2 nextTransactionId￨2 (￨2 BigInteger￨3 id￨3 )￨2 {￨2 }￨2 private￨2 BigInteger￨2 previousTransactionId￨2 (￨2 BigInteger￨3 id￨3 )￨2 {￨2 }￨2 private￨2 BigInteger￨2 getStoredCurrTransaction￨2 (￨2 TransactionalState￨3 state￨3 )￨2 {￨2 }￨2 private￨2 class￨2 StateInitializer￨2 implements￨2 RotatingTransactionalState￨2 .￨2 StateInitializer￨2 {￨2 @￨3 Override￨3 public￨3 Object￨3 init￨3 (￨3 BigInteger￨4 txid￨4 ,￨4 Object￨4 lastState￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ZipEntry￨1 extends￨1 java￨1 .￨1 util￨1 .￨1 zip￨1 .￨1 ZipEntry￨1 implements￨1 Cloneable￨1 {￨1 public￨2 static￨2 final￨2 int￨2 PLATFORM_UNIX￨2 =￨2 3￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 PLATFORM_FAT￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 SHORT_MASK￨2 =￨2 65535￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 SHORT_SHIFT￨2 =￨2 16￨2 ;￨2 private￨2 int￨2 internalAttributes￨2 =￨2 0￨2 ;￨2 private￨2 int￨2 platform￨2 =￨2 ZipEntry￨2 .￨2 PLATFORM_FAT￨2 ;￨2 private￨2 long￨2 externalAttributes￨2 =￨2 0￨2 ;￨2 private￨2 Vector￨2 extraFields￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 name￨2 =￨2 null￨2 ;￨2 public￨2 ZipEntry￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 ZipEntry￨2 (￨2 java￨2 .￨2 util￨2 .￨2 zip￨2 .￨2 ZipEntry￨2 entry￨2 )￨2 throws￨2 ZipException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ZipEntry￨2 (￨2 ZipEntry￨2 entry￨2 )￨2 throws￨2 ZipException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ZipEntry￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getInternalAttributes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInternalAttributes￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 long￨2 getExternalAttributes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExternalAttributes￨2 (￨2 long￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUnixMode￨2 (￨2 int￨3 mode￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getUnixMode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getPlatform￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setPlatform￨2 (￨2 int￨3 platform￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExtraFields￨2 (￨2 ZipExtraField￨3 [￨3 ]￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 ZipExtraField￨2 [￨2 ]￨2 getExtraFields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addExtraField￨2 (￨2 ZipExtraField￨3 ze￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeExtraField￨2 (￨2 ZipShort￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExtra￨2 (￨2 byte￨2 [￨2 ]￨2 extra￨2 )￨2 throws￨2 RuntimeException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 setExtraFields￨4 (￨4 ExtraFieldUtils￨4 .￨4 parse￨4 (￨4 extra￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 RuntimeException￨4 (￨4 e￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 protected￨2 void￨2 setExtra￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 getLocalFileDataExtra￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 getCentralDirectoryExtra￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setComprSize￨2 (￨2 long￨3 size￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDirectory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractLoggingSubsystemTest￨1 extends￨1 AbstractSubsystemBaseTest￨1 {￨1 static￨2 final￨2 String￨2 [￨2 ]￨2 HANDLER_RESOURCE_KEYS￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 static￨2 final￨2 PathElement￨2 SUBSYSTEM_PATH￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 SUBSYSTEM￨2 ,￨2 SUBSYSTEM_NAME￨2 )￨2 ;￨2 static￨2 PathAddress￨2 SUBSYSTEM_ADDRESS￨2 =￨2 PathAddress￨2 .￨2 pathAddress￨2 (￨2 AbstractLoggingSubsystemTest￨2 .￨2 SUBSYSTEM_PATH￨2 )￨2 ;￨2 public￨2 AbstractLoggingSubsystemTest￨2 (￨2 )￨2 {￨2 }￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 @￨2 After￨2 public￨2 void￨2 clearLogContext￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 clearLogContext￨2 (￨2 final￨3 LogContext￨3 logContext￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 AdditionalInitialization￨2 createAdditionalInitialization￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 compareXml￨2 (￨2 String￨2 configId￨2 ,￨2 String￨2 original￨2 ,￨2 String￨2 marshalled￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createAddress￨2 (￨2 final￨3 String￨3 resourceKey￨3 ,￨3 final￨3 String￨3 resourceName￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createAddress￨2 (￨2 final￨3 String￨3 profileName￨3 ,￨3 final￨3 String￨3 resourceKey￨3 ,￨3 final￨3 String￨3 resourceName￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createRootLoggerAddress￨2 (￨2 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createRootLoggerAddress￨2 (￨2 final￨3 String￨3 profileName￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createLoggerAddress￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createLoggerAddress￨2 (￨2 final￨3 String￨3 profileName￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createConsoleHandlerAddress￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createConsoleHandlerAddress￨2 (￨2 final￨3 String￨3 profileName￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createFileHandlerAddress￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 static￨2 PathAddress￨2 createFileHandlerAddress￨2 (￨2 final￨3 String￨3 profileName￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 KernelServices￨2 boot￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 KernelServices￨3 kernelServices￨3 =￨3 createKernelServicesBuilder￨3 (￨3 LoggingTestEnvironment￨3 .￨3 get￨3 (￨3 )￨3 )￨3 .￨3 setSubsystemXml￨3 (￨3 getSubsystemXml￨3 (￨3 )￨3 )￨3 .￨3 build￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 Throwable￨3 bootError￨3 =￨3 kernelServices￨3 .￨3 getBootError￨3 (￨3 )￨3 ;￨3 Assert￨3 .￨3 assertTrue￨3 (￨3 (￨3 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>boot:<seq2seq4repair_space>"￨3 +￨3 (￨3 String￨3 .￨3 valueOf￨3 (￨3 bootError￨3 )￨3 )￨3 )￨3 ,￨3 kernelServices￨3 .￨3 isSuccessfulBoot￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 kernelServices￨3 ;￨3 }￨2 protected￨2 void￨2 compare￨2 (￨2 final￨3 String￨3 profileName￨3 ,￨3 final￨3 ModelNode￨3 node1￨3 ,￨3 final￨3 ModelNode￨3 node2￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 compare￨2 (￨2 final￨2 ModelNode￨2 currentModel￨2 ,￨2 final￨2 ConfigurationPersistence￨2 config￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 compare￨2 (￨2 final￨2 String￨2 profileName￨2 ,￨2 final￨2 ModelNode￨2 currentModel￨2 ,￨2 final￨2 ConfigurationPersistence￨2 config￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 compareLoggers￨2 (￨2 final￨3 LogContextConfiguration￨3 logContextConfiguration￨3 ,￨3 final￨3 ModelNode￨3 model￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 compareHandlers￨2 (￨2 final￨2 LogContextConfiguration￨2 logContextConfig￨2 ,￨2 final￨2 Collection￨2 <￨2 String￨2 >￨2 handlerNames￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ModelNode￨2 findHandlerModel￨2 (￨2 final￨3 ModelNode￨3 model￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 List￨2 <￨2 String￨2 >￨2 getHandlerNames￨2 (￨2 final￨3 ModelNode￨3 currentModel￨3 )￨2 {￨2 }￨2 static￨2 List￨2 <￨2 String￨2 >￨2 modelNodeAsStringList￨2 (￨2 final￨3 ModelNode￨3 node￨3 )￨2 {￨2 }￨2 static￨2 ModelNode￨2 getSubsystemModel￨2 (￨2 final￨2 KernelServices￨2 kernelServices￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 String￨2 resolveRelativePath￨2 (￨2 final￨2 KernelServices￨2 kernelServices￨2 ,￨2 final￨2 String￨2 relativeTo￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 class￨2 RemoveOperationComparator￨2 implements￨2 Comparator￨2 <￨2 PathAddress￨2 >￨2 {￨2 static￨3 final￨3 AbstractLoggingSubsystemTest￨3 .￨3 RemoveOperationComparator￨3 INSTANCE￨3 =￨3 new￨3 AbstractLoggingSubsystemTest￨3 .￨3 RemoveOperationComparator￨3 (￨3 )￨3 ;￨3 static￨3 final￨3 int￨3 GREATER￨3 =￨3 1￨3 ;￨3 static￨3 final￨3 int￨3 EQUAL￨3 =￨3 0￨3 ;￨3 static￨3 final￨3 int￨3 LESS￨3 =￨3 -￨3 1￨3 ;￨3 @￨3 Override￨3 public￨3 int￨3 compare￨3 (￨3 final￨4 PathAddress￨4 o1￨4 ,￨4 final￨4 PathAddress￨4 o2￨4 )￨3 {￨3 }￨3 private￨3 int￨3 compare￨3 (￨3 final￨4 String￨4 key1￨4 ,￨4 final￨4 String￨4 key2￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 JavaBuilder￨1 extends￨1 IncrementalProjectBuilder￨1 {￨1 IProject￨2 currentProject￨2 ;￨2 JavaProject￨2 javaProject￨2 ;￨2 IWorkspaceRoot￨2 workspaceRoot￨2 ;￨2 CompilationParticipant￨2 [￨2 ]￨2 participants￨2 ;￨2 NameEnvironment￨2 nameEnvironment￨2 ;￨2 SimpleLookupTable￨2 binaryLocationsPerProject￨2 ;￨2 public￨2 State￨2 lastState￨2 ;￨2 BuildNotifier￨2 notifier￨2 ;￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 extraResourceFileFilters￨2 ;￨2 String￨2 [￨2 ]￨2 extraResourceFolderFilters￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SOURCE_ID￨2 =￨2 "JDT"￨2 ;￨2 public￨2 static￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 static￨2 ArrayList￨2 builtProjects￨2 =￨2 null￨2 ;￨2 public￨2 static￨2 IMarker￨2 [￨2 ]￨2 getProblemsFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 IMarker￨2 [￨2 ]￨2 getTasksFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 buildStarting￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 buildFinished￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 removeProblemsFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 removeTasksFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 removeProblemsAndTasksFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 State￨2 readState￨2 (￨2 IProject￨2 project￨2 ,￨2 DataInputStream￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 writeState￨2 (￨2 Object￨2 state￨2 ,￨2 DataOutputStream￨2 out￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IProject￨2 [￨2 ]￨2 build￨2 (￨2 int￨2 kind￨2 ,￨2 Map￨2 ignored￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildAll￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildDeltas￨2 (￨2 SimpleLookupTable￨3 deltas￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 clean￨2 (￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 cleanup￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 clearLastState￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 filterExtraResource￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 SimpleLookupTable￨2 findDeltas￨2 (￨2 )￨2 {￨2 }￨2 public￨2 State￨2 getLastState￨2 (￨2 IProject￨3 project￨3 )￨2 {￨2 }￨2 private￨2 IProject￨2 [￨2 ]￨2 getRequiredProjects￨2 (￨2 boolean￨3 includeBinaryPrerequisites￨3 )￨2 {￨2 }￨2 boolean￨2 hasBuildpathErrors￨2 (￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasClasspathChanged￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasJavaBuilder￨2 (￨2 IProject￨2 project￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasStructuralDelta￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 initializeBuilder￨2 (￨2 int￨2 kind￨2 ,￨2 boolean￨2 forBuild￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 this￨3 .￨3 javaProject￨3 =￨3 (￨3 (￨3 JavaProject￨3 )￨3 (￨3 JavaCore￨3 .￨3 create￨3 (￨3 currentProject￨3 )￨3 )￨3 )￨3 ;￨3 this￨3 .￨3 workspaceRoot￨3 =￨3 currentProject￨3 .￨3 getWorkspace￨3 (￨3 )￨3 .￨3 getRoot￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 forBuild￨4 )￨3 {￨3 this￨4 .￨4 participants￨4 =￨4 JavaModelManager￨4 .￨4 getJavaModelManager￨4 (￨4 )￨4 .￨4 compilationParticipants￨4 .￨4 getCompilationParticipants￨4 (￨4 this￨4 .￨4 javaProject￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 this￨5 .￨5 participants￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 for￨5 (￨5 int￨5 i￨5 =￨5 0￨5 ,￨5 l￨5 =￨5 this￨5 .￨5 participants￨5 .￨5 length￨5 ;￨5 }￨4 i￨4 <￨4 l￨4 ;￨4 if￨4 (￨4 (￨5 this￨5 .￨5 participants￨5 [￨5 i￨5 ]￨5 .￨5 aboutToBuild￨5 (￨5 this￨5 .￨5 javaProject￨5 )￨5 )￨5 ==￨5 (￨5 CompilationParticipant￨5 .￨5 NEEDS_FULL_BUILD￨5 )￨5 )￨4 {￨4 kind￨5 =￨5 IncrementalProjectBuilder￨5 .￨5 FULL_BUILD￨5 ;￨5 }￨4 String￨4 projectName￨4 =￨4 currentProject￨4 .￨4 getName￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 JavaBuilder￨5 .￨5 builtProjects￨5 )￨5 ==￨5 null￨5 )￨5 ||￨5 (￨5 JavaBuilder￨5 .￨5 builtProjects￨5 .￨5 contains￨5 (￨5 projectName￨5 )￨5 )￨5 )￨4 {￨4 org￨5 .￨5 eclipse￨5 .￨5 jdt￨5 .￨5 internal￨5 .￨5 core￨5 .￨5 JavaModel￨5 .￨5 flushExternalFileCache￨5 (￨5 )￨5 ;￨5 JavaBuilder￨5 .￨5 builtProjects￨5 =￨5 new￨5 ArrayList￨5 (￨5 )￨5 ;￨5 }￨4 JavaBuilder￨4 .￨4 builtProjects￨4 .￨4 add￨4 (￨4 projectName￨4 )￨4 ;￨4 }￨3 this￨3 .￨3 binaryLocationsPerProject￨3 =￨3 new￨3 SimpleLookupTable￨3 (￨3 3￨3 )￨3 ;￨3 <START_BUG>￨3 this￨3 .￨3 nameEnvironment￨3 =￨3 new￨3 NameEnvironment￨3 (￨3 workspaceRoot￨3 ,￨3 javaProject￨3 ,￨3 binaryLocationsPerProject￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 forBuild￨4 )￨3 {￨3 String￨4 filterSequence￨4 =￨4 javaProject￨4 .￨4 getOption￨4 (￨4 JavaCore￨4 .￨4 CORE_JAVA_BUILD_RESOURCE_COPY_FILTER￨4 ,￨4 true￨4 )￨4 ;￨4 char￨4 [￨4 ]￨4 [￨4 ]￨4 filters￨4 =￨4 (￨4 (￨4 filterSequence￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 filterSequence￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 )￨4 ?￨4 CharOperation￨4 .￨4 splitAndTrimOn￨4 (￨4 ','￨4 ,￨4 filterSequence￨4 .￨4 toCharArray￨4 (￨4 )￨4 )￨4 :￨4 null￨4 ;￨4 if￨4 (￨4 filters￨5 ==￨5 null￨5 )￨4 {￨4 this￨5 .￨5 extraResourceFileFilters￨5 =￨5 null￨5 ;￨5 this￨5 .￨5 extraResourceFolderFilters￨5 =￨5 null￨5 ;￨5 }￨4 else￨4 {￨4 int￨5 fileCount￨5 =￨5 0￨5 ;￨5 int￨5 folderCount￨5 =￨5 0￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 l￨6 =￨6 filters￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 l￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 char￨6 [￨6 ]￨6 f￨6 =￨6 filters￨6 [￨6 i￨6 ]￨6 ;￨6 if￨6 (￨6 (￨7 f￨7 .￨7 length￨7 )￨7 ==￨7 0￨7 )￨6 {￨6 continue￨7 ;￨7 }￨6 if￨6 (￨6 (￨7 f￨7 [￨7 (￨7 (￨7 f￨7 .￨7 length￨7 )￨7 -￨7 1￨7 )￨7 ]￨7 )￨7 ==￨7 '/'￨7 )￨6 {￨6 folderCount￨7 ++￨7 ;￨7 }￨6 else￨6 {￨6 fileCount￨7 ++￨7 ;￨7 }￨6 }￨5 this￨5 .￨5 extraResourceFileFilters￨5 =￨5 new￨5 char￨5 [￨5 fileCount￨5 ]￨5 [￨5 ]￨5 ;￨5 this￨5 .￨5 extraResourceFolderFilters￨5 =￨5 new￨5 String￨5 [￨5 folderCount￨5 ]￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 l￨6 =￨6 filters￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 l￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 char￨6 [￨6 ]￨6 f￨6 =￨6 filters￨6 [￨6 i￨6 ]￨6 ;￨6 if￨6 (￨6 (￨7 f￨7 .￨7 length￨7 )￨7 ==￨7 0￨7 )￨6 {￨6 continue￨7 ;￨7 }￨6 if￨6 (￨6 (￨7 f￨7 [￨7 (￨7 (￨7 f￨7 .￨7 length￨7 )￨7 -￨7 1￨7 )￨7 ]￨7 )￨7 ==￨7 '/'￨7 )￨6 {￨6 extraResourceFolderFilters￨7 [￨7 (￨7 --￨7 folderCount￨7 )￨7 ]￨7 =￨7 new￨7 String￨7 (￨7 f￨7 ,￨7 0￨7 ,￨7 (￨7 (￨7 f￨7 .￨7 length￨7 )￨7 -￨7 1￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 extraResourceFileFilters￨7 [￨7 (￨7 --￨7 fileCount￨7 )￨7 ]￨7 =￨7 f￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 return￨3 kind￨3 ;￨3 }￨2 private￨2 boolean￨2 isClasspathBroken￨2 (￨2 IClasspathEntry￨2 [￨2 ]￨2 classpath￨2 ,￨2 IProject￨2 p￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 isWorthBuilding￨2 (￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 mustPropagateStructuralChanges￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 printLocations￨2 (￨2 ClasspathLocation￨3 [￨3 ]￨3 newLocations￨3 ,￨3 ClasspathLocation￨3 [￨3 ]￨3 oldLocations￨3 )￨2 {￨2 }￨2 private￨2 void￨2 recordNewState￨2 (￨2 State￨3 state￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MemoryLeakFixesTest￨1 extends￨1 BaseJDBCTestCase￨1 {￨1 public￨2 MemoryLeakFixesTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 long￨2 HALFMB￨2 =￨2 500￨2 *￨2 1024￨2 ;￨2 private￨2 static￨2 int￨2 numRows￨2 =￨2 100￨2 ;￨2 private￨2 static￨2 int￨2 numPreparedStmts￨2 =￨2 2000￨2 ;￨2 public￨2 void￨2 testPrepStmtD210￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReExecuteD557￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testResultSetgcD3316￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRepeatedDatabaseCreationWithAutoStats￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 final￨3 String￨3 DB_NAME￨3 =￨3 "derby-memory-test"￨3 ;￨3 final￨3 File￨3 DB_DIR￨3 =￨3 new￨3 File￨3 (￨3 "system"￨3 ,￨3 DB_NAME￨3 )￨3 ;￨3 DataSource￨3 ds￨3 =￨3 JDBCDataSource￨3 .￨3 getDataSource￨3 (￨3 DB_NAME￨3 )￨3 ;￨3 int￨3 iter￨3 =￨3 0￨3 ;￨3 while￨3 (￨3 iter￨4 <￨4 50￨4 )￨3 {￨3 <START_BUG>￨4 traceit￨4 (￨4 (￨4 "--<seq2seq4repair_space>"￨4 +￨4 (￨4 iter￨4 ++￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 PrivilegedFileOpsForTests￨5 .￨5 exists￨5 (￨5 DB_DIR￨5 )￨5 )￨4 {￨4 assertDirectoryDeleted￨5 (￨5 DB_DIR￨5 )￨5 ;￨5 }￨4 JDBCDataSource￨4 .￨4 setBeanProperty￨4 (￨4 ds￨4 ,￨4 "createDatabase"￨4 ,￨4 "create"￨4 )￨4 ;￨4 Connection￨4 conn￨4 =￨4 ds￨4 .￨4 getConnection￨4 (￨4 )￨4 ;￨4 JDBCDataSource￨4 .￨4 clearStringBeanProperty￨4 (￨4 ds￨4 ,￨4 "createDatabase"￨4 )￨4 ;￨4 Statement￨4 s￨4 =￨4 conn￨4 .￨4 createStatement￨4 (￨4 )￨4 ;￨4 s￨4 .￨4 executeUpdate￨4 (￨4 "CREATE<seq2seq4repair_space>TABLE<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT<seq2seq4repair_space>INT)"￨4 )￨4 ;￨4 s￨4 .￨4 executeUpdate￨4 (￨4 "CREATE<seq2seq4repair_space>INDEX<seq2seq4repair_space>NDX<seq2seq4repair_space>ON<seq2seq4repair_space>TEST<seq2seq4repair_space>(CINT)"￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 500￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 s￨5 .￨5 executeUpdate￨5 (￨5 (￨5 (￨5 "INSERT<seq2seq4repair_space>INTO<seq2seq4repair_space>TEST<seq2seq4repair_space>VALUES("￨5 +￨5 i￨5 )￨5 +￨5 ")"￨5 )￨5 )￨5 ;￨5 s￨5 .￨5 executeQuery￨5 (￨5 (￨5 "SELECT<seq2seq4repair_space>*<seq2seq4repair_space>FROM<seq2seq4repair_space>TEST<seq2seq4repair_space>WHERE<seq2seq4repair_space>CINT="￨5 +￨5 i￨5 )￨5 )￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 }￨4 s￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 conn￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 JDBCDataSource￨4 .￨4 setBeanProperty￨4 (￨4 ds￨4 ,￨4 "shutdownDatabase"￨4 ,￨4 "shutdown"￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 ds￨5 .￨5 getConnection￨5 (￨5 )￨5 ;￨5 fail￨5 (￨5 "Expected<seq2seq4repair_space>shutdown<seq2seq4repair_space>exception"￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 SQLException￨5 e￨5 )￨4 {￨4 assertSQLState￨5 (￨5 "08006"￨5 ,￨5 e￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 JDBCDataSource￨5 .￨5 clearStringBeanProperty￨5 (￨5 ds￨5 ,￨5 "shutdownDatabase"￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 isPhoneME￨5 (￨5 )￨5 )￨4 {￨4 Runtime￨5 .￨5 getRuntime￨5 (￨5 )￨5 .￨5 gc￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 assertTrue￨3 (￨3 PrivilegedFileOpsForTests￨3 .￨3 exists￨3 (￨3 DB_DIR￨3 )￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 void￨2 runFinalizerIfNeeded￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 Client￨1 implements￨1 IConnection￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 Client￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 int￨2 max_retries￨2 ;￨2 private￨2 final￨2 int￨2 base_sleep_ms￨2 ;￨2 private￨2 final￨2 int￨2 max_sleep_ms￨2 ;￨2 private￨2 LinkedBlockingQueue￨2 <￨2 Object￨2 >￨2 message_queue￨2 ;￨2 private￨2 AtomicReference￨2 <￨2 Channel￨2 >￨2 channelRef￨2 ;￨2 private￨2 final￨2 ClientBootstrap￨2 bootstrap￨2 ;￨2 private￨2 InetSocketAddress￨2 remote_addr￨2 ;￨2 private￨2 AtomicInteger￨2 retries￨2 ;￨2 private￨2 final￨2 Random￨2 random￨2 =￨2 new￨2 Random￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 ChannelFactory￨2 factory￨2 ;￨2 private￨2 AtomicBoolean￨2 ready_to_release_resource￨2 ;￨2 private￨2 final￨2 int￨2 buffer_size￨2 ;￨2 private￨2 final￨2 AtomicBoolean￨2 being_closed￨2 ;￨2 @￨2 SuppressWarnings￨2 (￨2 "rawtypes"￨2 )￨2 Client￨2 (￨2 Map￨2 storm_conf￨2 ,￨2 String￨2 host￨2 ,￨2 int￨2 port￨2 )￨2 {￨2 }￨2 void￨2 reconnect￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 getSleepTimeMs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 send￨2 (￨2 int￨3 task￨3 ,￨3 byte￨3 [￨3 ]￨3 message￨3 )￨2 {￨2 }￨2 ArrayList￨2 <￨2 Object￨2 >￨2 takeMessages￨2 (￨2 )￨2 throws￨2 InterruptedException￨2 (￨2 )￨2 {￨2 int￨3 size￨3 =￨3 0￨3 ;￨3 ArrayList￨3 <￨3 Object￨3 >￨3 requests￨3 =￨3 new￨3 ArrayList￨3 <￨3 Object￨3 >￨3 (￨3 )￨3 ;￨3 requests￨3 .￨3 add￨3 (￨3 message_queue￨3 .￨3 take￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 Object￨4 msg￨4 =￨4 message_queue￨4 .￨4 poll￨4 (￨4 )￨4 ;￨4 msg￨4 !=￨4 null￨4 ;￨4 msg￨4 =￨4 message_queue￨4 .￨4 poll￨4 (￨4 )￨4 )￨3 {￨3 requests￨4 .￨4 add￨4 (￨4 msg￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 msg￨4 .￨4 equals￨4 (￨4 ControlMessage￨4 .￨4 closeMessage￨4 (￨4 )￨4 )￨4 )￨4 <END_BUG>￨4 break￨4 ;￨4 TaskMessage￨4 taskMsg￨4 =￨4 (￨4 (￨4 TaskMessage￨4 )￨4 (￨4 msg￨4 )￨4 )￨4 ;￨4 size￨4 +=￨4 (￨4 (￨4 taskMsg￨4 .￨4 message￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 ?￨4 taskMsg￨4 .￨4 message￨4 (￨4 )￨4 .￨4 length￨4 :￨4 0￨4 )￨4 +￨4 6￨4 ;￨4 if￨4 (￨4 size￨5 >￨5 (￨5 buffer_size￨5 )￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 }￨3 return￨3 requests￨3 ;￨3 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 void￨2 close_n_release￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TaskMessage￨2 recv￨2 (￨2 int￨3 flags￨3 )￨2 {￨2 }￨2 void￨2 setChannel￨2 (￨2 Channel￨3 channel￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestFrenchAnalyzer￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 public￨2 void￨2 testAnalyzer￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReusableTokenStream￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testExclusionTableViaCtor￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testElision￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStopwordsCasing￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomStrings￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 new￨3 FrenchAnalyzer￨3 (￨3 TEST_VERSION_CURRENT￨3 )￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testAccentInsensitive￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ToolBar￨1 extends￨1 Composite￨1 {￨1 ToolItem￨2 lastFocus￨2 ;￨2 ImageList￨2 imageList￨2 ;￨2 public￨2 ToolBar￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Point￨2 computeSize￨2 (￨2 int￨3 wHint￨3 ,￨3 int￨3 hHint￨3 ,￨3 boolean￨3 changed￨3 )￨2 {￨2 }￨2 int￨2 eventHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 fixChildren￨2 (￨2 Shell￨3 newShell￨3 ,￨3 Shell￨3 oldShell￨3 ,￨3 Decorations￨3 newDecorations￨3 ,￨3 Decorations￨3 oldDecorations￨3 ,￨3 Menu￨3 [￨3 ]￨3 menus￨3 )￨2 {￨2 }￨2 boolean￨2 forceFocus￨2 (￨2 int￨3 focusHandle￨3 )￨2 {￨2 }￨2 public￨2 ToolItem￨2 getItem￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 ToolItem￨2 getItem￨2 (￨2 Point￨3 point￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getItemCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ToolItem￨2 [￨2 ]￨2 getItems￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getRowCount￨2 (￨2 )￨2 {￨2 }￨2 int￨2 gtk_key_press_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 eventPtr￨3 )￨2 {￨2 }￨2 boolean￨2 hasFocus￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 ToolItem￨3 item￨3 )￨2 {￨2 }￨2 boolean￨2 mnemonicHit￨2 (￨2 char￨3 key￨3 )￨2 {￨2 }￨2 boolean￨2 mnemonicMatch￨2 (￨2 char￨3 key￨3 )￨2 {￨2 }￨2 void￨2 relayout￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 ToolItem￨3 [￨3 ]￨3 items￨3 =￨3 getItems￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 items￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 ToolItem￨4 item￨4 =￨4 items￨4 [￨4 i￨4 ]￨4 ;￨4 if￨4 (￨4 (￨5 item￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 item￨5 .￨5 isDisposed￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 item￨5 .￨5 releaseChildren￨5 (￨5 false￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 super￨3 .￨3 releaseChildren￨3 (￨3 destroy￨3 )￨3 ;￨3 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 removeControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 int￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 resize￨3 )￨2 {￨2 }￨2 void￨2 setFontDescription￨2 (￨2 int￨3 font￨3 )￨2 {￨2 }￨2 void￨2 setForegroundColor￨2 (￨2 GdkColor￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setToolTipText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Snippet6￨1 {￨1 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 Display￨3 display￨3 =￨3 new￨3 Display￨3 (￨3 )￨3 ;￨3 final￨3 Shell￨3 shell￨3 =￨3 new￨3 Shell￨3 (￨3 display￨3 )￨3 ;￨3 shell￨3 .￨3 setLayout￨3 (￨3 new￨3 GridLayout￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 Composite￨3 c￨3 =￨3 new￨3 Composite￨3 (￨3 shell￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 GridLayout￨3 layout￨3 =￨3 new￨3 GridLayout￨3 (￨3 )￨3 ;￨3 layout￨3 .￨3 numColumns￨3 =￨3 3￨3 ;￨3 c￨3 .￨3 setLayout￨3 (￨3 layout￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 10￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 Button￨4 b￨4 =￨4 new￨4 Button￨4 (￨4 c￨4 ,￨4 SWT￨4 .￨4 PUSH￨4 )￨4 ;￨4 b￨4 .￨4 setText￨4 (￨4 (￨4 "Button<seq2seq4repair_space>"￨4 +￨4 i￨4 )￨4 )￨4 ;￨4 }￨3 Button￨3 b￨3 =￨3 new￨3 Button￨3 (￨3 shell￨3 ,￨3 SWT￨3 .￨3 PUSH￨3 )￨3 ;￨3 b￨3 .￨3 setText￨3 (￨3 "add<seq2seq4repair_space>a<seq2seq4repair_space>new<seq2seq4repair_space>button<seq2seq4repair_space>at<seq2seq4repair_space>row<seq2seq4repair_space>2<seq2seq4repair_space>column<seq2seq4repair_space>1"￨3 )￨3 ;￨3 final￨3 int￨3 [￨3 ]￨3 index￨3 =￨3 new￨3 int￨3 [￨3 1￨3 ]￨3 ;￨3 b￨3 .￨3 addListener￨3 (￨3 Selection￨3 ,￨3 new￨3 Listener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 handleEvent￨4 (￨4 Event￨5 e￨5 )￨4 {￨4 Button￨5 b￨5 =￨5 new￨5 Button￨5 (￨5 c￨5 ,￨5 SWT￨5 .￨5 PUSH￨5 )￨5 ;￨5 b￨5 .￨5 setText￨5 (￨5 (￨5 "Special<seq2seq4repair_space>"￨5 +￨5 (￨5 index￨5 [￨5 0￨5 ]￨5 )￨5 )￨5 )￨5 ;￨5 (￨5 index￨5 [￨5 0￨5 ]￨5 )￨5 ++￨5 ;￨5 Control￨5 [￨5 ]￨5 children￨5 =￨5 c￨5 .￨5 getChildren￨5 (￨5 )￨5 ;￨5 b￨5 .￨5 moveAbove￨5 (￨5 children￨5 [￨5 3￨5 ]￨5 )￨5 ;￨5 <START_BUG>￨5 shell￨5 .￨5 layout￨5 (￨5 true￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 )￨3 ;￨3 shell￨3 .￨3 open￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 !￨4 (￨4 shell￨4 .￨4 isDisposed￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 display￨5 .￨5 readAndDispatch￨5 (￨5 )￨5 )￨5 )￨4 {￨4 display￨5 .￨5 sleep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 display￨3 .￨3 dispose￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
class￨1 CoolBarTab￨1 extends￨1 Tab￨1 {￨1 CoolBar￨2 coolBar￨2 ;￨2 CoolItem￨2 pushItem￨2 ;￨2 CoolItem￨2 dropDownItem￨2 ;￨2 CoolItem￨2 radioItem￨2 ;￨2 CoolItem￨2 checkItem￨2 ;￨2 CoolItem￨2 textItem￨2 ;￨2 Group￨2 coolBarGroup￨2 ;￨2 Button￨2 horizontalButton￨2 ;￨2 Button￨2 verticalButton￨2 ;￨2 Button￨2 dropDownButton￨2 ;￨2 Button￨2 flatButton￨2 ;￨2 Button￨2 lockedButton￨2 ;￨2 Point￨2 [￨2 ]￨2 sizes￨2 ;￨2 int￨2 [￨2 ]￨2 wrapIndices￨2 ;￨2 int￨2 [￨2 ]￨2 order￨2 ;￨2 CoolBarTab￨2 (￨2 ControlExample￨3 instance￨3 )￨2 {￨2 }￨2 void￨2 createOtherGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleGroup￨2 (￨2 )￨2 {￨2 super￨3 .￨3 createExampleGroup￨3 (￨3 )￨3 ;￨3 coolBarGroup￨3 =￨3 new￨3 Group￨3 (￨3 exampleGroup￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 coolBarGroup￨3 .￨3 setLayout￨3 (￨3 new￨3 GridLayout￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 coolBarGroup￨3 .￨3 setLayoutData￨3 (￨3 new￨3 GridData￨3 (￨3 (￨3 (￨3 (￨3 GridData￨3 .￨3 GRAB_HORIZONTAL￨3 )￨3 |￨3 (￨3 GridData￨3 .￨3 HORIZONTAL_ALIGN_FILL￨3 )￨3 )￨3 |￨3 (￨3 GridData￨3 .￨3 VERTICAL_ALIGN_FILL￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 coolBarGroup￨3 .￨3 setText￨3 (￨3 "CoolBar"￨3 )￨3 ;￨3 }￨2 void￨2 createExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createStyleGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 disposeExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 Item￨2 [￨2 ]￨2 getExampleWidgetItems￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 getExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 getMethodNames￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getTabText￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetState￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setWidgetLocked￨2 (￨2 )￨2 {￨2 }￨2 class￨2 DropDownSelectionListener￨2 extends￨2 SelectionAdapter￨2 {￨2 private￨3 Menu￨3 menu￨3 =￨3 null￨3 ;￨3 private￨3 boolean￨3 visible￨3 =￨3 false￨3 ;￨3 public￨3 void￨3 widgetSelected￨3 (￨3 SelectionEvent￨4 event￨4 )￨3 {￨3 }￨3 private￨3 void￨3 setMenuVisible￨3 (￨3 boolean￨4 visible￨4 )￨3 {￨3 }￨3 }￨2 class￨2 CoolItemSelectionListener￨2 extends￨2 SelectionAdapter￨2 {￨2 private￨3 Menu￨3 menu￨3 =￨3 null￨3 ;￨3 public￨3 void￨3 widgetSelected￨3 (￨3 SelectionEvent￨4 event￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 NewEditorAction￨1 extends￨1 ActiveEditorAction￨1 {￨1 public￨2 NewEditorAction￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 WorkbenchPage￨3 page￨3 =￨3 (￨3 (￨3 WorkbenchPage￨3 )￨3 (￨3 getActivePage￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 IEditorPart￨3 editor￨3 =￨3 getActiveEditor￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 page￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 editor￨4 ==￨4 null￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 String￨3 editorId￨3 =￨3 editor￨3 .￨3 getSite￨3 (￨3 )￨3 .￨3 getId￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 editorId￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 page￨4 .￨4 openEditor￨4 (￨4 editor￨4 .￨4 getEditorInput￨4 (￨4 )￨4 ,￨4 editorId￨4 ,￨4 true￨4 ,￨4 false￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 PartInitException￨4 e￨4 )￨3 {￨3 DialogUtil￨4 .￨4 openError￨4 (￨4 page￨4 .￨4 getWorkbenchWindow￨4 (￨4 )￨4 .￨4 getShell￨4 (￨4 )￨4 ,￨4 Error￨4 ,￨4 e￨4 .￨4 getMessage￨4 (￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ChatRoomBot￨1 implements￨1 IIMMessageListener￨1 {￨1 protected￨2 IChatRoomBotEntry￨2 bot￨2 ;￨2 protected￨2 IContainer￨2 container￨2 ;￨2 protected￨2 ID￨2 targetID￨2 ;￨2 protected￨2 IChatRoomContainer￨2 roomContainer￨2 ;￨2 protected￨2 ID￨2 roomID￨2 ;￨2 public￨2 ChatRoomBot￨2 (￨2 IChatRoomBotEntry￨3 bot￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireInitBot￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 firePreConnect￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 firePreRoomConnect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 connect￨2 (￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 fireInitBot￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Namespace￨4 namespace￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 container￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 container￨5 =￨5 ContainerFactory￨5 .￨5 getDefault￨5 (￨5 )￨5 .￨5 createContainer￨5 (￨5 bot￨5 .￨5 getContainerFactoryName￨5 (￨5 )￨5 )￨5 ;￨5 namespace￨5 =￨5 container￨5 .￨5 getConnectNamespace￨5 (￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 org￨5 .￨5 eclipse￨5 .￨5 ecf￨5 .￨5 core￨5 .￨5 ContainerConnectException￨5 (￨5 Messages￨5 .￨5 DefaultChatRoomBot_EXCEPTION_ALREADY_CONNECTED￨5 )￨5 ;￨5 }￨4 targetID￨4 =￨4 IDFactory￨4 .￨4 getDefault￨4 (￨4 )￨4 .￨4 createID￨4 (￨4 namespace￨4 ,￨4 bot￨4 .￨4 getConnectID￨4 (￨4 )￨4 )￨4 ;￨4 IChatRoomManager￨4 manager￨4 =￨4 (￨4 (￨4 IChatRoomManager￨4 )￨4 (￨4 container￨4 .￨4 getAdapter￨4 (￨4 IChatRoomManager￨4 .￨4 class￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 manager￨5 ==￨5 null￨5 )￨4 {￨4 throw￨5 new￨5 ECFException￨5 (￨5 Messages￨5 .￨5 DefaultChatRoomBot_EXCEPTION_NO_CHAT_ROOM￨5 )￨5 ;￨5 }￨4 firePreConnect￨4 (￨4 )￨4 ;￨4 String￨4 password￨4 =￨4 bot￨4 .￨4 getPassword￨4 (￨4 )￨4 ;￨4 IConnectContext￨4 context￨4 =￨4 (￨4 password￨4 ==￨4 null￨4 )￨4 ?￨4 null￨4 :￨4 ConnectContextFactory￨4 .￨4 createPasswordConnectContext￨4 (￨4 password￨4 )￨4 ;￨4 container￨4 .￨4 connect￨4 (￨4 targetID￨4 ,￨4 context￨4 )￨4 ;￨4 IChatRoomInfo￨4 room￨4 =￨4 manager￨4 .￨4 getChatRoomInfo￨4 (￨4 bot￨4 .￨4 getChatRoom￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 IChatRoomContainer￨4 roomContainer￨4 =￨4 room￨4 .￨4 createChatRoomContainer￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 roomID￨4 =￨4 room￨4 .￨4 getRoomID￨4 (￨4 )￨4 ;￨4 firePreRoomConnect￨4 (￨4 )￨4 ;￨4 roomContainer￨4 .￨4 addMessageListener￨4 (￨4 this￨4 )￨4 ;￨4 String￨4 roomPassword￨4 =￨4 bot￨4 .￨4 getChatRoomPassword￨4 (￨4 )￨4 ;￨4 IConnectContext￨4 roomContext￨4 =￨4 (￨4 roomPassword￨4 ==￨4 null￨4 )￨4 ?￨4 null￨4 :￨4 ConnectContextFactory￨4 .￨4 createPasswordConnectContext￨4 (￨4 roomPassword￨4 )￨4 ;￨4 roomContainer￨4 .￨4 connect￨4 (￨4 roomID￨4 ,￨4 roomContext￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 ECFException￨4 e￨4 )￨3 {￨3 if￨4 (￨4 (￨5 container￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 (￨6 container￨6 .￨6 getConnectedID￨6 (￨6 )￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 container￨6 .￨6 disconnect￨6 (￨6 )￨6 ;￨6 }￨5 container￨5 .￨5 dispose￨5 (￨5 )￨5 ;￨5 }￨4 container￨4 =￨4 null￨4 ;￨4 throw￨4 e￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 handleMessageEvent￨2 (￨2 IIMMessageEvent￨3 event￨3 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 JVMOptionAddHandler￨1 implements￨1 OperationStepHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 static￨2 final￨2 String￨2 OPERATION_NAME￨2 =￨2 "add-jvm-option"￨2 ;￨2 static￨2 final￨2 JVMOptionAddHandler￨2 INSTANCE￨2 =￨2 new￨2 JVMOptionAddHandler￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 ParameterValidator￨2 validator￨2 =￨2 new￨2 StringLengthValidator￨2 (￨2 1￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 validator￨3 .￨3 validateParameter￨3 (￨3 JVM_OPTION￨3 ,￨3 operation￨3 .￨3 get￨3 (￨3 JVM_OPTION￨3 )￨3 )￨3 ;￨3 final￨3 Resource￨3 resource￨3 =￨3 context￨3 .￨3 readResourceForUpdate￨3 (￨3 EMPTY_ADDRESS￨3 )￨3 ;￨3 final￨3 ModelNode￨3 model￨3 =￨3 resource￨3 .￨3 getModel￨3 (￨3 )￨3 ;￨3 final￨3 ModelNode￨3 option￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 JVM_OPTION￨3 )￨3 ;￨3 ModelNode￨3 jvmOptions￨3 =￨3 model￨3 .￨3 get￨3 (￨3 JVM_OPTIONS￨3 )￨3 ;￨3 if￨3 (￨3 jvmOptions￨4 .￨4 isDefined￨4 (￨4 )￨4 )￨3 {￨3 for￨4 (￨4 ModelNode￨5 optionNode￨5 :￨5 jvmOptions￨5 .￨5 asList￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 optionNode￨6 .￨6 equals￨6 (￨6 option￨6 )￨6 )￨5 {￨5 throw￨6 HostControllerMessages￨6 .￨6 MESSAGES￨6 .￨6 jvmOptionAlreadyExists￨6 (￨6 option￨6 .￨6 asString￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 model￨3 .￨3 get￨3 (￨3 JVM_OPTIONS￨3 )￨3 .￨3 add￨3 (￨3 option￨3 )￨3 ;￨3 <START_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TreeColumn￨1 extends￨1 Item￨1 {￨1 Tree￨2 parent￨2 ;￨2 boolean￨2 resizable￨2 ;￨2 boolean￨2 moveable￨2 ;￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getAlignment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMoveable￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getNameText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Tree￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getResizable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWidth￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 pack￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChild￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 super￨3 .￨3 releaseWidget￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 parent￨3 )￨3 !=￨3 null￨3 )￨3 &&￨3 (￨3 (￨3 parent￨3 .￨3 sortColumn￨3 )￨3 ==￨3 (￨3 this￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 parent￨3 .￨3 sortColumn￨3 =￨3 null￨3 ;￨3 }￨3 parent￨3 =￨3 null￨3 ;￨3 }￨2 public￨2 void￨2 removeControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAlignment￨2 (￨2 int￨3 alignment￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 ,￨3 boolean￨3 sort￨3 ,￨3 boolean￨3 right￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMoveable￨2 (￨2 boolean￨3 moveable￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setResizable￨2 (￨2 boolean￨3 resizable￨3 )￨2 {￨2 }￨2 void￨2 setSortDirection￨2 (￨2 int￨3 direction￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWidth￨2 (￨2 int￨3 width￨3 )￨2 {￨2 }￨2 }￨1
public￨1 {￨2 @￨3 Override￨3 protected￨3 AccessLevel￨3 initialValue￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 final￨2 StorageService￨2 storageService￨2 ;￨2 public￨2 CassandraServer￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 ColumnFamily￨2 >￨2 readColumnFamily￨2 (￨2 List￨2 <￨2 ReadCommand￨2 >￨2 commands￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 Column￨2 >￨2 thriftifySubColumns￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 columns￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 thriftifyColumns￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 columns￨3 ,￨3 boolean￨3 reverseOrder￨3 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 thriftifySuperColumns￨2 (￨2 Collection￨3 <￨3 IColumn￨3 >￨3 columns￨3 ,￨3 boolean￨3 reverseOrder￨3 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 >￨2 getSlice￨2 (￨2 List￨2 <￨2 ReadCommand￨2 >￨2 commands￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 thriftifyColumnFamily￨2 (￨2 ColumnFamily￨3 cf￨3 ,￨3 boolean￨3 subcolumnsOnly￨3 ,￨3 boolean￨3 reverseOrder￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 get_slice￨2 (￨2 String￨2 keyspace￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 >￨2 multiget_slice￨2 (￨2 String￨2 keyspace￨2 ,￨2 List￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 keys￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 >￨2 multigetSliceInternal￨2 (￨2 String￨2 keyspace￨2 ,￨2 List￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 keys￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumnOrSuperColumn￨2 get￨2 (￨2 String￨2 table￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 ColumnPath￨2 column_path￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 NotFoundException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 ColumnOrSuperColumn￨2 >￨2 multiget￨2 (￨2 String￨2 table￨2 ,￨2 List￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 keys￨2 ,￨2 ColumnPath￨2 column_path￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 ColumnOrSuperColumn￨2 >￨2 multigetInternal￨2 (￨2 String￨2 table￨2 ,￨2 List￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 keys￨2 ,￨2 ColumnPath￨2 column_path￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 get_count￨2 (￨2 String￨2 table￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 insert￨2 (￨2 String￨2 table￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 Column￨2 column￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 batch_insert￨2 (￨2 String￨2 keyspace￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 ColumnOrSuperColumn￨2 >￨2 >￨2 cfmap￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 batch_mutate￨2 (￨2 String￨2 keyspace￨2 ,￨2 Map￨2 <￨2 byte￨2 [￨2 ]￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 Mutation￨2 >￨2 >￨2 >￨2 mutation_map￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 String￨2 table￨2 ,￨2 byte￨2 [￨2 ]￨2 key￨2 ,￨2 ColumnPath￨2 column_path￨2 ,￨2 long￨2 timestamp￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doInsert￨2 (￨2 ConsistencyLevel￨2 consistency_level￨2 ,￨2 RowMutation￨2 rm￨2 )￨2 throws￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 String￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 >￨2 describe_keyspace￨2 (￨2 String￨2 table￨2 )￨2 throws￨2 NotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 KeySlice￨2 >￨2 get_range_slice￨2 (￨2 String￨2 keyspace￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 byte￨2 [￨2 ]￨2 start_key￨2 ,￨2 byte￨2 [￨2 ]￨2 finish_key￨2 ,￨2 int￨2 maxRows￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 KeySlice￨2 >￨2 get_range_slices￨2 (￨2 String￨2 keyspace￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 KeyRange￨2 range￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 KeySlice￨2 >￨2 getRangeSlicesInternal￨2 (￨2 String￨2 keyspace￨2 ,￨2 ColumnParent￨2 column_parent￨2 ,￨2 SlicePredicate￨2 predicate￨2 ,￨2 KeyRange￨2 range￨2 ,￨2 ConsistencyLevel￨2 consistency_level￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TimedOutException￨2 ,￨2 UnavailableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 String￨2 >￨2 describe_keyspaces￨2 (￨2 )￨2 throws￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 describe_cluster_name￨2 (￨2 )￨2 throws￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 describe_version￨2 (￨2 )￨2 throws￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 TokenRange￨2 >￨2 describe_ring￨2 (￨2 String￨3 keyspace￨3 )￨2 {￨2 List￨3 <￨3 TokenRange￨3 >￨3 ranges￨3 =￨3 new￨3 ArrayList￨3 <￨3 TokenRange￨3 >￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 for￨3 (￨3 Map￨3 .￨3 Entry￨3 <￨3 Range￨3 ,￨3 List￨3 <￨3 String￨3 >￨3 >￨3 entry￨3 :￨3 instance￨3 .￨3 getRangeToEndPointMap￨3 (￨3 keyspace￨3 )￨3 .￨3 entrySet￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 Range￨3 range￨3 =￨3 entry￨3 .￨3 getKey￨3 (￨3 )￨3 ;￨3 List￨3 <￨3 String￨3 >￨3 endpoints￨3 =￨3 entry￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 ranges￨3 .￨3 add￨3 (￨3 new￨3 TokenRange￨3 (￨3 range￨3 .￨3 left￨3 .￨3 toString￨3 (￨3 )￨3 ,￨3 range￨3 .￨3 right￨3 .￨3 toString￨3 (￨3 )￨3 ,￨3 endpoints￨3 )￨3 )￨3 ;￨3 }￨3 return￨3 ranges￨3 ;￨3 }￨2 public￨2 List￨2 <￨2 String￨2 >￨2 describe_splits￨2 (￨2 String￨2 start_token￨2 ,￨2 String￨2 end_token￨2 ,￨2 int￨2 keys_per_split￨2 )￨2 throws￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AccessLevel￨2 login￨2 (￨2 String￨2 keyspace￨2 ,￨2 AuthenticationRequest￨2 auth_request￨2 )￨2 throws￨2 AuthenticationException￨2 ,￨2 AuthorizationException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 checkLoginAuthorized￨2 (￨2 AccessLevel￨2 level￨2 )￨2 throws￨2 InvalidRequestException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_add_column_family￨2 (￨2 CfDef￨2 cf_def￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_drop_column_family￨2 (￨2 String￨2 keyspace￨2 ,￨2 String￨2 column_family￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_rename_column_family￨2 (￨2 String￨2 keyspace￨2 ,￨2 String￨2 old_name￨2 ,￨2 String￨2 new_name￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_add_keyspace￨2 (￨2 KsDef￨2 ks_def￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_drop_keyspace￨2 (￨2 String￨2 keyspace￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 system_rename_keyspace￨2 (￨2 String￨2 old_name￨2 ,￨2 String￨2 new_name￨2 )￨2 throws￨2 InvalidRequestException￨2 ,￨2 TException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SaveService￨1 {￨1 private￨2 static￨2 XStream￨2 saver￨2 =￨2 new￨2 XStream￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 static￨2 String￨2 version￨2 =￨2 "1.0"￨2 ;￨2 static￨2 String￨2 propertiesVersion￨2 =￨2 ""￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PROPVERSION￨2 =￨2 "1.3"￨2 ;￨2 private￨2 static￨2 void￨2 makeAlias￨2 (￨2 String￨3 alias￨3 ,￨3 String￨3 clazz￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 initProps￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 saveTree￨2 (￨2 HashTree￨2 tree￨2 ,￨2 Writer￨2 writer￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 versionsOK￨2 =￨2 true￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 REVPFX￨2 =￨2 "$Revision:<seq2seq4repair_space>"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 REVSFX￨2 =￨2 "<seq2seq4repair_space>$"￨2 ;￨2 private￨2 static￨2 String￨2 extractVersion￨2 (￨2 String￨3 rev￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 checkVersion￨2 (￨2 Class￨3 clazz￨3 ,￨3 String￨3 expected￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 checkVersions￨2 (￨2 )￨2 {￨2 SaveService￨3 .￨3 versionsOK￨3 =￨3 true￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 BooleanPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.4"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 HashTreeConverter￨3 .￨3 class￨3 ,￨3 "1.2"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 IntegerPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.3"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 LongPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.3"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 MultiPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.3"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 SampleResultConverter￨3 .￨3 class￨3 ,￨3 "1.2"￨3 )￨3 ;￨3 <START_BUG>￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 StringPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.5"￨3 )￨3 ;￨3 <END_BUG>￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 TestElementConverter￨3 .￨3 class￨3 ,￨3 "1.2"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 TestElementPropertyConverter￨3 .￨3 class￨3 ,￨3 "1.3"￨3 )￨3 ;￨3 SaveService￨3 .￨3 checkVersion￨3 (￨3 ScriptWrapperConverter￨3 .￨3 class￨3 ,￨3 "1.2"￨3 )￨3 ;￨3 if￨3 (￨3 !￨3 (￨3 SaveService￨3 .￨3 PROPVERSION￨3 .￨3 equalsIgnoreCase￨3 (￨3 SaveService￨3 .￨3 propertiesVersion￨3 )￨3 )￨3 )￨3 {￨3 SaveService￨4 .￨4 log￨4 .￨4 warn￨4 (￨4 (￨4 (￨4 (￨4 "Property<seq2seq4repair_space>file<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>"￨4 +￨4 (￨4 SaveService￨4 .￨4 PROPVERSION￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>found<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 SaveService￨4 .￨4 propertiesVersion￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 SaveService￨4 .￨4 versionsOK￨4 )￨3 {￨3 SaveService￨4 .￨4 log￨4 .￨4 info￨4 (￨4 "All<seq2seq4repair_space>converter<seq2seq4repair_space>versions<seq2seq4repair_space>present<seq2seq4repair_space>and<seq2seq4repair_space>correct"￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 HashTree￨2 loadTree￨2 (￨2 InputStream￨2 reader￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Test￨2 extends￨2 JMeterTestCase￨2 {￨2 public￨3 Test￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Test￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 public￨3 void￨3 testVersions￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 Logging￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.columba"￨2 )￨2 ;￨2 private￨2 static￨2 ConsoleHandler￨2 consoleHandler￨2 ;￨2 public￨2 static￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 private￨2 Logging￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 userHasDefinedLogging￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 createDefaultHandler￨2 (￨2 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 Logging￨4 .￨4 userHasDefinedLogging￨4 (￨4 )￨4 )￨4 )￨3 {￨3 Logging￨4 .￨4 LOG￨4 .￨4 setUseParentHandlers￨4 (￨4 false￨4 )￨4 ;￨4 Logging￨4 .￨4 consoleHandler￨4 =￨4 new￨4 ConsoleHandler￨4 (￨4 )￨4 ;￨4 Logging￨4 .￨4 consoleHandler￨4 .￨4 setFormatter￨4 (￨4 new￨4 OneLineFormatter￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 Logging￨4 .￨4 consoleHandler￨4 .￨4 setLevel￨4 (￨4 Level￨4 .￨4 ALL￨4 )￨4 ;￨4 <END_BUG>￨4 Logging￨4 .￨4 LOG￨4 .￨4 addHandler￨4 (￨4 Logging￨4 .￨4 consoleHandler￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 void￨2 setDebugging￨2 (￨2 boolean￨3 debug￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 createDefaultFileHandler￨2 (￨2 File￨3 configDirectory￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PersistenceExceptions￨1 extends￨1 Exceptions￨1 {￨1 public￨2 static￨2 final￨2 RuntimeExceptionTranslator￨2 TRANSLATOR￨2 =￨2 new￨2 RuntimeExceptionTranslator￨2 (￨2 )￨2 {￨2 public￨3 RuntimeException￨3 translate￨3 (￨3 RuntimeException￨4 re￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 static￨2 RuntimeExceptionTranslator￨2 getRollbackTranslator￨2 (￨2 final￨3 OpenJPAEntityManager￨3 em￨3 )￨2 {￨2 }￨2 public￨2 static￨2 RuntimeException￨2 toPersistenceException￨2 (￨2 Throwable￨3 t￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Throwable￨2 translateException￨2 (￨2 Throwable￨3 t￨3 ,￨3 boolean￨3 checked￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Throwable￨2 translateStoreException￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 Exception￨3 e￨3 ;￨3 Throwable￨3 cause￨3 =￨3 (￨3 (￨3 (￨3 ke￨3 .￨3 getNestedThrowables￨3 (￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 &&￨3 (￨3 (￨3 ke￨3 .￨3 getNestedThrowables￨3 (￨3 )￨3 .￨3 length￨3 )￨3 ==￨3 1￨3 )￨3 )￨3 ?￨3 ke￨3 .￨3 getNestedThrowables￨3 (￨3 )￨3 [￨3 0￨3 ]￨3 :￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 ke￨4 .￨4 getSubtype￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 StoreException￨4 .￨4 OBJECT_NOT_FOUND￨4 )￨4 )￨4 ||￨4 (￨4 cause￨4 instanceof￨4 ObjectNotFoundException￨4 )￨4 )￨3 {￨3 e￨4 =￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 openjpa￨4 .￨4 persistence￨4 .￨4 EntityNotFoundException￨4 (￨4 ke￨4 .￨4 getMessage￨4 (￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getNestedThrowables￨4 (￨4 ke￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getFailedObject￨4 (￨4 ke￨4 )￨4 ,￨4 ke￨4 .￨4 isFatal￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 (￨4 ke￨4 .￨4 getSubtype￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 StoreException￨4 .￨4 OPTIMISTIC￨4 )￨4 )￨4 ||￨4 (￨4 cause￨4 instanceof￨4 OptimisticException￨4 )￨4 )￨3 {￨3 e￨4 =￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 openjpa￨4 .￨4 persistence￨4 .￨4 OptimisticLockException￨4 (￨4 ke￨4 .￨4 getMessage￨4 (￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getNestedThrowables￨4 (￨4 ke￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getFailedObject￨4 (￨4 ke￨4 )￨4 ,￨4 ke￨4 .￨4 isFatal￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 (￨4 ke￨4 .￨4 getSubtype￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 StoreException￨4 .￨4 LOCK￨4 )￨4 )￨4 ||￨4 (￨4 cause￨4 instanceof￨4 LockException￨4 )￨4 )￨3 {￨3 LockException￨4 lockEx￨4 =￨4 (￨4 (￨4 LockException￨4 )￨4 (￨4 (￨4 ke￨4 instanceof￨4 LockException￨4 )￨4 ?￨4 ke￨4 :￨4 cause￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 lockEx￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 (￨5 lockEx￨5 .￨5 getLockLevel￨5 (￨5 )￨5 )￨5 >=￨5 (￨5 JPA2LockLevels￨5 .￨5 LOCK_PESSIMISTIC_READ￨5 )￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 if￨5 (￨5 lockEx￨5 .￨5 isRecoverable￨5 (￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 e￨5 =￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 openjpa￨5 .￨5 persistence￨5 .￨5 LockTimeoutException￨5 (￨5 ke￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 PersistenceExceptions￨5 .￨5 getNestedThrowables￨5 (￨5 ke￨5 )￨5 ,￨5 PersistenceExceptions￨5 .￨5 getFailedObject￨5 (￨5 ke￨5 )￨5 ,￨5 ke￨5 .￨5 isFatal￨5 (￨5 )￨5 )￨5 ;￨5 else￨5 {￨5 e￨6 =￨6 new￨6 org￨6 .￨6 apache￨6 .￨6 openjpa￨6 .￨6 persistence￨6 .￨6 PessimisticLockException￨6 (￨6 ke￨6 .￨6 getMessage￨6 (￨6 )￨6 ,￨6 PersistenceExceptions￨6 .￨6 getNestedThrowables￨6 (￨6 ke￨6 )￨6 ,￨6 PersistenceExceptions￨6 .￨6 getFailedObject￨6 (￨6 ke￨6 )￨6 ,￨6 ke￨6 .￨6 isFatal￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 e￨5 =￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 openjpa￨5 .￨5 persistence￨5 .￨5 OptimisticLockException￨5 (￨5 ke￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 PersistenceExceptions￨5 .￨5 getNestedThrowables￨5 (￨5 ke￨5 )￨5 ,￨5 PersistenceExceptions￨5 .￨5 getFailedObject￨5 (￨5 ke￨5 )￨5 ,￨5 ke￨5 .￨5 isFatal￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 (￨4 (￨4 ke￨4 .￨4 getSubtype￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 StoreException￨4 .￨4 OBJECT_EXISTS￨4 )￨4 )￨4 ||￨4 (￨4 cause￨4 instanceof￨4 ObjectExistsException￨4 )￨4 )￨3 {￨3 e￨4 =￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 openjpa￨4 .￨4 persistence￨4 .￨4 EntityExistsException￨4 (￨4 ke￨4 .￨4 getMessage￨4 (￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getNestedThrowables￨4 (￨4 ke￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getFailedObject￨4 (￨4 ke￨4 )￨4 ,￨4 ke￨4 .￨4 isFatal￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 e￨4 =￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 openjpa￨4 .￨4 persistence￨4 .￨4 PersistenceException￨4 (￨4 ke￨4 .￨4 getMessage￨4 (￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getNestedThrowables￨4 (￨4 ke￨4 )￨4 ,￨4 PersistenceExceptions￨4 .￨4 getFailedObject￨4 (￨4 ke￨4 )￨4 ,￨4 ke￨4 .￨4 isFatal￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 e￨3 .￨3 setStackTrace￨3 (￨3 ke￨3 .￨3 getStackTrace￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 e￨3 ;￨3 }￨2 private￨2 static￨2 Exception￨2 translateUserException￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Exception￨2 translateCause￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Throwable￨2 translateGeneralException￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 isPersistenceException￨2 (￨2 Throwable￨3 t￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Throwable￨2 [￨2 ]￨2 getNestedThrowables￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Object￨2 getFailedObject￨2 (￨2 OpenJPAException￨3 ke￨3 )￨2 {￨2 }￨2 static￨2 Throwable￨2 getCause￨2 (￨2 Throwable￨3 [￨3 ]￨3 nested￨3 )￨2 {￨2 }￨2 }￨1
abstract￨1 class￨1 RFC1522Codec￨1 {￨1 protected￨2 static￨2 final￨2 char￨2 SEP￨2 =￨2 '?'￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 POSTFIX￨2 =￨2 "?="￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 PREFIX￨2 =￨2 "=?"￨2 ;￨2 protected￨2 String￨2 encodeText￨2 (￨2 final￨2 String￨2 text￨2 ,￨2 final￨2 Charset￨2 charset￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 text￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 <START_BUG>￨3 StringBuffer￨3 buffer￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 buffer￨3 .￨3 append￨3 (￨3 RFC1522Codec￨3 .￨3 PREFIX￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 charset￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 RFC1522Codec￨3 .￨3 SEP￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 this￨3 .￨3 getEncoding￨3 (￨3 )￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 RFC1522Codec￨3 .￨3 SEP￨3 )￨3 ;￨3 byte￨3 [￨3 ]￨3 rawData￨3 =￨3 this￨3 .￨3 doEncoding￨3 (￨3 text￨3 .￨3 getBytes￨3 (￨3 charset￨3 )￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 StringUtils￨3 .￨3 newStringUsAscii￨3 (￨3 rawData￨3 )￨3 )￨3 ;￨3 buffer￨3 .￨3 append￨3 (￨3 RFC1522Codec￨3 .￨3 POSTFIX￨3 )￨3 ;￨3 return￨3 buffer￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 String￨2 encodeText￨2 (￨2 final￨2 String￨2 text￨2 ,￨2 final￨2 String￨2 charsetName￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 ,￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 decodeText￨2 (￨2 final￨2 String￨2 text￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 ,￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 String￨2 getEncoding￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 byte￨2 [￨2 ]￨2 doEncoding￨2 (￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 byte￨2 [￨2 ]￨2 doDecoding￨2 (￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Expression￨1 extends￨1 Statement￨1 {￨1 public￨2 static￨2 final￨2 boolean￨2 isConstantValueRepresentable￨2 (￨2 Constant￨3 constant￨3 ,￨3 int￨3 constantTypeID￨3 ,￨3 int￨3 targetTypeID￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 constant￨2 ;￨2 public￨2 int￨2 implicitConversion￨2 ;￨2 public￨2 TypeBinding￨2 resolvedType￨2 ;￨2 public￨2 Expression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 checkCastTypesCompatibility￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 Expression￨3 expression￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 checkNullStatus￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 int￨3 nullStatus￨3 )￨2 {￨2 }￨2 private￨2 MethodBinding￨2 [￨2 ]￨2 getAllInheritedMethods￨2 (￨2 ReferenceBinding￨3 binding￨3 )￨2 {￨2 }￨2 private￨2 void￨2 getAllInheritedMethods0￨2 (￨2 ReferenceBinding￨3 binding￨3 ,￨3 ArrayList￨3 collector￨3 )￨2 {￨2 }￨2 public￨2 void￨2 checkNullComparison￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 FlowInfo￨3 initsWhenTrue￨3 ,￨3 FlowInfo￨3 initsWhenFalse￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 checkUnsafeCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 TypeBinding￨3 match￨3 ,￨3 boolean￨3 isNarrowing￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeConversion￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 runtimeType￨3 ,￨3 TypeBinding￨3 compileTimeType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 bits￨3 )￨3 &￨3 (￨3 IsReachableMASK￨3 )￨3 )￨3 ==￨3 0￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 ;￨3 }￨3 generateCode￨3 (￨3 currentScope￨3 ,￨3 codeStream￨3 ,￨3 false￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedBoolean￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Label￨3 trueLabel￨3 ,￨3 Label￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedStringConcatenation￨2 (￨2 BlockScope￨3 blockScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 int￨3 typeID￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedStringConcatenationCreation￨2 (￨2 BlockScope￨3 blockScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 int￨3 typeID￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCompactableOperation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isConstantValueOfTypeAssignableToType￨2 (￨2 TypeBinding￨3 constantType￨3 ,￨3 TypeBinding￨3 targetType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTypeReference￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 nullStatus￨2 (￨2 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveTypeExpecting￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpectedType￨2 (￨2 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsUnnecessaryCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsNeedCheckCast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Expression￨2 toTypeReference￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 CompilationUnitScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 LocalVariableBinding￨2 localVariableBinding￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JobsExecutor￨1 extends￨1 AbstractExecutor￨1 {￨1 protected￨2 int￨2 fJobCounter￨2 =￨2 1￨2 ;￨2 protected￨2 String￨2 fExecutorName￨2 ;￨2 protected￨2 boolean￨2 fSystem￨2 ;￨2 protected￨2 ISchedulingRule￨2 fSchedulingRule￨2 ;￨2 protected￨2 long￨2 delay￨2 ;￨2 public￨2 JobsExecutor￨2 (￨2 String￨3 executorName￨3 )￨2 {￨2 }￨2 public￨2 JobsExecutor￨2 (￨2 String￨3 executorName￨3 ,￨3 boolean￨3 system￨3 )￨2 {￨2 }￨2 public￨2 JobsExecutor￨2 (￨2 String￨3 executorName￨3 ,￨3 boolean￨3 system￨3 ,￨3 ISchedulingRule￨3 schedulingRule￨3 )￨2 {￨2 }￨2 public￨2 JobsExecutor￨2 (￨2 String￨3 executorName￨3 ,￨3 boolean￨3 system￨3 ,￨3 ISchedulingRule￨3 schedulingRule￨3 ,￨3 long￨3 delay￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setChildProgressMonitor￨2 (￨2 IProgressMonitor￨3 parent￨3 ,￨3 IProgressMonitor￨3 child￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 safeRun￨2 (￨2 ISafeProgressRunner￨3 runner￨3 ,￨3 IProgressRunnable￨3 progressRunnable￨3 )￨2 {￨2 <START_BUG>￨3 runner￨3 .￨3 safeRun￨3 (￨3 progressRunnable￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 String￨2 createJobName￨2 (￨2 String￨3 executorName￨3 ,￨3 int￨3 jobCounter￨3 ,￨3 IProgressRunnable￨3 runnable￨3 )￨2 {￨2 }￨2 protected￨2 AbstractFuture￨2 createFuture￨2 (￨2 IProgressMonitor￨3 progressMonitor￨3 )￨2 {￨2 }￨2 public￨2 IFuture￨2 execute￨2 (￨2 final￨3 IProgressRunnable￨3 runnable￨3 ,￨3 final￨3 IProgressMonitor￨3 clientProgressMonitor￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 configureJobForExecution￨2 (￨2 Job￨3 job￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 InspectorDebugPanel￨1 extends￨1 StandardDebugPanel￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 public￨2 static￨2 final￨2 IDebugBarContributor￨2 DEBUG_BAR_CONTRIB￨2 =￨2 new￨2 IDebugBarContributor￨2 (￨2 )￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 Component￨3 createComponent￨3 (￨3 String￨4 id￨4 ,￨4 DebugBar￨4 debugBar￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 InspectorDebugPanel￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Class￨2 <￨2 ?￨2 extends￨2 Page￨2 >￨2 getLinkPageClass￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 ResourceReference￨2 getImageResourceReference￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 IModel￨2 <￨2 String￨2 >￨2 getDataModel￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 PageParameters￨2 getLinkPageParameters￨2 (￨2 )￨2 {￨2 PageParameters￨3 params￨3 =￨3 new￨3 PageParameters￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 params￨3 .￨3 addNamedParameter￨3 (￨3 "pageId"￨3 ,￨3 getPage￨3 (￨3 )￨3 .￨3 getId￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 params￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 ISAACTest￨1 extends￨1 RandomGeneratorAbstractTest￨1 {￨1 @￨2 Override￨2 protected￨2 RandomGenerator￨2 makeGenerator￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 ISAACRandom￨3 (￨3 1000￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 static￨2 final￨2 int￨2 [￨2 ]￨2 SEED_1￨2 =￨2 new￨2 int￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 [￨2 ]￨2 SEED_2￨2 =￨2 new￨2 int￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 [￨2 ]￨2 EXPECTED_SEQUENCE_1￨2 =￨2 new￨2 int￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 [￨2 ]￨2 EXPECTED_SEQUENCE_2￨2 =￨2 new￨2 int￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testReference￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 [￨2 ]￨2 getActualSequence￨2 (￨2 ISAACRandom￨3 isaacRandom￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 XmlTag￨1 extends￨1 MarkupElement￨1 {￨1 public￨2 static￨2 final￨2 XmlTag￨2 .￨2 Type￨2 CLOSE￨2 =￨2 new￨2 XmlTag￨2 .￨2 Type￨2 (￨2 "CLOSE"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 XmlTag￨2 .￨2 Type￨2 OPEN￨2 =￨2 new￨2 XmlTag￨2 .￨2 Type￨2 (￨2 "OPEN"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 XmlTag￨2 .￨2 Type￨2 OPEN_CLOSE￨2 =￨2 new￨2 XmlTag￨2 .￨2 Type￨2 (￨2 "OPEN_CLOSE"￨2 )￨2 ;￨2 private￨2 LowerCaseKeyValueMap￨2 attributes￨2 =￨2 new￨2 LowerCaseKeyValueMap￨2 (￨2 )￨2 ;￨2 int￨2 columnNumber￨2 ;￨2 int￨2 length￨2 ;￨2 int￨2 lineNumber￨2 ;￨2 String￨2 name￨2 ;￨2 String￨2 namespace￨2 ;￨2 int￨2 pos￨2 ;￨2 String￨2 text￨2 ;￨2 XmlTag￨2 .￨2 Type￨2 type￨2 ;￨2 private￨2 XmlTag￨2 closes￨2 ;￨2 private￨2 XmlTag￨2 copyOf￨2 =￨2 this￨2 ;￨2 private￨2 boolean￨2 isMutable￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 nameChanged￨2 =￨2 false￨2 ;￨2 public￨2 static￨2 final￨2 class￨2 Type￨2 extends￨2 EnumeratedType￨2 {￨2 Type￨3 (￨3 final￨4 String￨4 name￨4 )￨3 {￨3 }￨3 }￨2 public￨2 XmlTag￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 closes￨2 (￨2 final￨3 XmlTag￨3 open￨3 )￨2 {￨2 }￨2 public￨2 LowerCaseKeyValueMap￨2 getAttributes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getColumnNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLength￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLineNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getNameChanged￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getNamespace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 XmlTag￨2 getOpenTag￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getPos￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getString￨2 (￨2 final￨3 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 XmlTag￨2 .￨2 Type￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isClose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isMutable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isOpen￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isOpenClose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 makeImmutable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 XmlTag￨2 mutable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 put￨2 (￨2 final￨3 String￨3 key￨3 ,￨3 final￨3 boolean￨3 value￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 put￨2 (￨2 final￨3 String￨3 key￨3 ,￨3 final￨3 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 put￨2 (￨2 final￨3 String￨3 key￨3 ,￨3 final￨3 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 put￨2 (￨2 final￨3 String￨3 key￨3 ,￨3 final￨3 StringValue￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 putAll￨2 (￨2 final￨3 Map￨3 map￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 final￨3 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setName￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOpenTag￨2 (￨2 final￨3 XmlTag￨3 tag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setType￨2 (￨2 final￨3 XmlTag￨3 .￨3 Type￨3 type￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toDebugString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 isMutable￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 text￨3 ;￨3 }￨3 return￨3 toXmlString￨3 (￨3 null￨3 )￨3 ;￨3 }￨2 public￨2 String￨2 toUserDebugString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toXmlString￨2 (￨2 final￨3 String￨3 attributeToBeIgnored￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CollatingIterator￨1 <￨1 E￨1 >￨1 implements￨1 Iterator￨1 <￨1 E￨1 >￨1 {￨1 private￨2 Comparator￨2 <￨2 ?￨2 super￨2 E￨2 >￨2 comparator￨2 =￨2 null￨2 ;￨2 private￨2 ArrayList￨2 <￨2 Iterator￨2 <￨2 ?￨2 extends￨2 E￨2 >￨2 >￨2 iterators￨2 =￨2 null￨2 ;￨2 private￨2 ArrayList￨2 <￨2 E￨2 >￨2 values￨2 =￨2 null￨2 ;￨2 private￨2 BitSet￨2 valueSet￨2 =￨2 null￨2 ;￨2 private￨2 int￨2 lastReturned￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 CollatingIterator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CollatingIterator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 )￨2 {￨2 }￨2 public￨2 CollatingIterator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 ,￨3 final￨3 int￨3 initIterCapacity￨3 )￨2 {￨2 }￨2 public￨2 CollatingIterator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 ,￨3 final￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 a￨3 ,￨3 final￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 b￨3 )￨2 {￨2 }￨2 public￨2 CollatingIterator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 ,￨3 final￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 [￨3 ]￨3 iterators￨3 )￨2 {￨2 }￨2 public￨2 CollatingIterator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 ,￨3 final￨3 Collection￨3 <￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 >￨3 iterators￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addIterator￨2 (￨2 final￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 iterator￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIterator￨2 (￨2 final￨3 int￨3 index￨3 ,￨3 final￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 iterator￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 Iterator￨2 <￨2 ?￨2 extends￨2 E￨2 >￨2 >￨2 getIterators￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 UnmodifiableList￨3 .￨3 decorate￨3 (￨3 iterators￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Comparator￨2 <￨2 ?￨2 super￨2 E￨2 >￨2 getComparator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setComparator￨2 (￨2 final￨3 Comparator￨3 <￨3 ?￨3 super￨3 E￨3 >￨3 comp￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasNext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 E￨2 next￨2 (￨2 )￨2 throws￨2 NoSuchElementException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getIteratorIndex￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 start￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 set￨2 (￨2 int￨3 i￨3 )￨2 {￨2 }￨2 private￨2 void￨2 clear￨2 (￨2 int￨3 i￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkNotStarted￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 least￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 anyValueSet￨2 (￨2 BitSet￨3 set￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 anyHasNext￨2 (￨2 ArrayList￨3 <￨3 Iterator￨3 <￨3 ?￨3 extends￨3 E￨3 >￨3 >￨3 iters￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 AS1601TestCase￨1 {￨1 @￨2 Inject￨2 public￨2 BundleContext￨2 context￨2 ;￨2 @￨2 Inject￨2 public￨2 Bundle￨2 bundle￨2 ;￨2 @￨2 Deployment￨2 @￨2 StartLevelAware￨2 (￨2 startLevel￨2 =￨2 4￨2 )￨2 public￨2 static￨2 WebArchive￨2 createdeployment￨2 (￨2 )￨2 {￨2 final￨3 WebArchive￨3 archive￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 WebArchive￨3 .￨3 class￨3 ,￨3 "as1601.war"￨3 )￨3 ;￨3 <START_BUG>￨3 archive￨3 .￨3 addClasses￨3 (￨3 OSGiTestSupport￨3 .￨3 class￨3 ,￨3 EndpointServlet￨3 .￨3 class￨3 )￨3 ;￨3 <END_BUG>￨3 archive￨3 .￨3 addAsWebInfResource￨3 (￨3 "osgi/webapp/webA.xml"￨3 ,￨3 "web.xml"￨3 )￨3 ;￨3 archive￨3 .￨3 add￨3 (￨3 new￨3 Asset￨3 (￨3 )￨3 {￨3 public￨4 InputStream￨4 openStream￨4 (￨4 )￨4 {￨4 OSGiManifestBuilder￨5 builder￨5 =￨5 OSGiManifestBuilder￨5 .￨5 newInstance￨5 (￨5 )￨5 ;￨5 builder￨5 .￨5 addBundleSymbolicName￨5 (￨5 archive￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 ;￨5 builder￨5 .￨5 addBundleManifestVersion￨5 (￨5 2￨5 )￨5 ;￨5 builder￨5 .￨5 addManifestHeader￨5 (￨5 Constants￨5 .￨5 BUNDLE_CLASSPATH￨5 ,￨5 ".,WEB-INF/classes"￨5 )￨5 ;￨5 builder￨5 .￨5 addManifestHeader￨5 (￨5 "Web-ContextPath"￨5 ,￨5 "as1601"￨5 )￨5 ;￨5 builder￨5 .￨5 addImportPackages￨5 (￨5 StartLevel￨5 .￨5 class￨5 ,￨5 HttpServlet￨5 .￨5 class￨5 ,￨5 Servlet￨5 .￨5 class￨5 )￨5 ;￨5 return￨5 builder￨5 .￨5 openStream￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 JarFile￨3 .￨3 MANIFEST_NAME￨3 )￨3 ;￨3 return￨3 archive￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testServletAccess￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getHttpResponse￨2 (￨2 String￨2 reqPath￨2 ,￨2 int￨2 timeout￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Jar￨1 extends￨1 Zip￨1 {￨1 private￨2 static￨2 final￨2 String￨2 INDEX_NAME￨2 =￨2 "META-INF/INDEX.LIST"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 MANIFEST_NAME￨2 =￨2 "META-INF/MANIFEST.MF"￨2 ;￨2 private￨2 List￨2 serviceList￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 private￨2 Manifest￨2 configuredManifest￨2 ;￨2 private￨2 Manifest￨2 savedConfiguredManifest￨2 ;￨2 private￨2 Manifest￨2 filesetManifest￨2 ;￨2 private￨2 Manifest￨2 originalManifest￨2 ;￨2 private￨2 Jar￨2 .￨2 FilesetManifestConfig￨2 filesetManifestConfig￨2 ;￨2 private￨2 boolean￨2 mergeManifestsMain￨2 =￨2 true￨2 ;￨2 private￨2 Manifest￨2 manifest￨2 ;￨2 private￨2 String￨2 manifestEncoding￨2 ;￨2 private￨2 File￨2 manifestFile￨2 ;￨2 private￨2 boolean￨2 index￨2 =￨2 false￨2 ;￨2 private￨2 boolean￨2 createEmpty￨2 =￨2 false￨2 ;￨2 private￨2 Vector￨2 rootEntries￨2 ;￨2 private￨2 Path￨2 indexJars￨2 ;￨2 private￨2 ZipExtraField￨2 [￨2 ]￨2 JAR_MARKER￨2 =￨2 new￨2 ZipExtraField￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 protected￨2 String￨2 emptyBehavior￨2 =￨2 "create"￨2 ;￨2 public￨2 Jar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setWhenempty￨2 (￨2 WhenEmpty￨3 we￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWhenmanifestonly￨2 (￨2 WhenEmpty￨3 we￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setJarfile￨2 (￨2 File￨3 jarFile￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIndex￨2 (￨2 boolean￨3 flag￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setManifestEncoding￨2 (￨2 String￨3 manifestEncoding￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConfiguredManifest￨2 (￨2 Manifest￨2 newManifest￨2 )￨2 throws￨2 ManifestException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setManifest￨2 (￨2 File￨3 manifestFile￨3 )￨2 {￨2 }￨2 private￨2 Manifest￨2 getManifest￨2 (￨2 File￨3 manifestFile￨3 )￨2 {￨2 }￨2 private￨2 Manifest￨2 getManifestFromJar￨2 (￨2 File￨2 jarFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Manifest￨2 getManifest￨2 (￨2 Reader￨3 r￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFilesetmanifest￨2 (￨2 Jar￨3 .￨3 FilesetManifestConfig￨3 config￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addMetainf￨2 (￨2 ZipFileSet￨3 fs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConfiguredIndexJars￨2 (￨2 Path￨3 p￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConfiguredService￨2 (￨2 Service￨3 service￨3 )￨2 {￨2 }￨2 private￨2 void￨2 writeServices￨2 (￨2 ZipOutputStream￨2 zOut￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 initZipOutputStream￨2 (￨2 ZipOutputStream￨2 zOut￨2 )￨2 throws￨2 IOException￨2 ,￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Manifest￨2 createManifest￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeManifest￨2 (￨2 ZipOutputStream￨2 zOut￨2 ,￨2 Manifest￨2 manifest￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 finalizeZipOutputStream￨2 (￨2 ZipOutputStream￨2 zOut￨2 )￨2 throws￨2 IOException￨2 ,￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 createIndexList￨2 (￨2 ZipOutputStream￨2 zOut￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 ByteArrayOutputStream￨3 baos￨3 =￨3 new￨3 ByteArrayOutputStream￨3 (￨3 )￨3 ;￨3 PrintWriter￨3 writer￨3 =￨3 new￨3 PrintWriter￨3 (￨3 new￨3 OutputStreamWriter￨3 (￨3 baos￨3 ,￨3 "UTF8"￨3 )￨3 )￨3 ;￨3 writer￨3 .￨3 println￨3 (￨3 "JarIndex-Version:<seq2seq4repair_space>1.0"￨3 )￨3 ;￨3 writer￨3 .￨3 println￨3 (￨3 )￨3 ;￨3 writer￨3 .￨3 println￨3 (￨3 zipFile￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 writeIndexLikeList￨3 (￨3 new￨3 ArrayList￨3 (￨3 addedDirs￨3 .￨3 keySet￨3 (￨3 )￨3 )￨3 ,￨3 rootEntries￨3 ,￨3 writer￨3 )￨3 ;￨3 writer￨3 .￨3 println￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 indexJars￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 Manifest￨4 mf￨4 =￨4 createManifest￨4 (￨4 )￨4 ;￨4 Manifest￨4 .￨4 Attribute￨4 classpath￨4 =￨4 mf￨4 .￨4 getMainSection￨4 (￨4 )￨4 .￨4 getAttribute￨4 (￨4 ATTRIBUTE_CLASSPATH￨4 )￨4 ;￨4 String￨4 [￨4 ]￨4 cpEntries￨4 =￨4 null￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 classpath￨4 !=￨4 null￨4 )￨4 {￨4 <END_BUG>￨4 StringTokenizer￨4 tok￨4 =￨4 new￨4 StringTokenizer￨4 (￨4 classpath￨4 .￨4 getValue￨4 (￨4 )￨4 ,￨4 "<seq2seq4repair_space>"￨4 )￨4 ;￨4 cpEntries￨4 =￨4 new￨4 String￨4 [￨4 tok￨4 .￨4 countTokens￨4 (￨4 )￨4 ]￨4 ;￨4 int￨4 c￨4 =￨4 0￨4 ;￨4 while￨4 (￨4 tok￨5 .￨5 hasMoreTokens￨5 (￨5 )￨5 )￨4 {￨4 cpEntries￨5 [￨5 (￨5 c￨5 ++￨5 )￨5 ]￨5 =￨5 tok￨5 .￨5 nextToken￨5 (￨5 )￨5 ;￨5 }￨4 }￨4 String￨4 [￨4 ]￨4 indexJarEntries￨4 =￨4 indexJars￨4 .￨4 list￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 indexJarEntries￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 name￨5 =￨5 Jar￨5 .￨5 findJarName￨5 (￨5 indexJarEntries￨5 [￨5 i￨5 ]￨5 ,￨5 cpEntries￨5 )￨5 ;￨5 if￨5 (￨5 name￨6 !=￨6 null￨6 )￨5 {￨5 ArrayList￨6 dirs￨6 =￨6 new￨6 ArrayList￨6 (￨6 )￨6 ;￨6 ArrayList￨6 files￨6 =￨6 new￨6 ArrayList￨6 (￨6 )￨6 ;￨6 Jar￨6 .￨6 grabFilesAndDirs￨6 (￨6 indexJarEntries￨6 [￨6 i￨6 ]￨6 ,￨6 dirs￨6 ,￨6 files￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 (￨7 dirs￨7 .￨7 size￨7 (￨7 )￨7 )￨7 +￨7 (￨7 files￨7 .￨7 size￨7 (￨7 )￨7 )￨7 )￨7 >￨7 0￨7 )￨6 {￨6 writer￨7 .￨7 println￨7 (￨7 name￨7 )￨7 ;￨7 writeIndexLikeList￨7 (￨7 dirs￨7 ,￨7 files￨7 ,￨7 writer￨7 )￨7 ;￨7 writer￨7 .￨7 println￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 writer￨3 .￨3 flush￨3 (￨3 )￨3 ;￨3 ByteArrayInputStream￨3 bais￨3 =￨3 new￨3 ByteArrayInputStream￨3 (￨3 baos￨3 .￨3 toByteArray￨3 (￨3 )￨3 )￨3 ;￨3 super￨3 .￨3 zipFile￨3 (￨3 bais￨3 ,￨3 zOut￨3 ,￨3 Jar￨3 .￨3 INDEX_NAME￨3 ,￨3 System￨3 .￨3 currentTimeMillis￨3 (￨3 )￨3 ,￨3 null￨3 ,￨3 DEFAULT_FILE_MODE￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 zipFile￨2 (￨2 InputStream￨2 is￨2 ,￨2 ZipOutputStream￨2 zOut￨2 ,￨2 String￨2 vPath￨2 ,￨2 long￨2 lastModified￨2 ,￨2 File￨2 fromArchive￨2 ,￨2 int￨2 mode￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 filesetManifest￨2 (￨2 File￨2 file￨2 ,￨2 InputStream￨2 is￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ArchiveState￨2 getResourcesToAdd￨2 (￨2 ResourceCollection￨2 [￨2 ]￨2 rcs￨2 ,￨2 File￨2 zipFile￨2 ,￨2 boolean￨2 needsUpdate￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 createEmptyZip￨2 (￨2 File￨2 zipFile￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 cleanUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 FilesetManifestConfig￨2 extends￨2 EnumeratedAttribute￨2 {￨2 public￨3 String￨3 [￨3 ]￨3 getValues￨3 (￨3 )￨3 {￨3 }￨3 }￨2 protected￨2 final￨2 void￨2 writeIndexLikeList￨2 (￨2 List￨2 dirs￨2 ,￨2 List￨2 files￨2 ,￨2 PrintWriter￨2 writer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 static￨2 final￨2 String￨2 findJarName￨2 (￨2 String￨3 fileName￨3 ,￨3 String￨3 [￨3 ]￨3 classpath￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 final￨2 void￨2 grabFilesAndDirs￨2 (￨2 String￨2 file￨2 ,￨2 List￨2 dirs￨2 ,￨2 List￨2 files￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestCzechAnalyzer￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 @￨2 Deprecated￨2 public￨2 void￨2 testStopWordLegacy￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testStopWord￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 public￨2 void￨2 testReusableTokenStreamLegacy￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReusableTokenStream￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testWithStemExclusionSet￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomStrings￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 new￨3 CzechAnalyzer￨3 (￨3 TEST_VERSION_CURRENT￨3 )￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
final￨1 class￨1 CollectionToStringConverter￨1 implements￨1 GenericConverter￨1 {￨1 private￨2 static￨2 final￨2 String￨2 DELIMITER￨2 =￨2 ","￨2 ;￨2 private￨2 final￨2 ConversionService￨2 conversionService￨2 ;￨2 public￨2 CollectionToStringConverter￨2 (￨2 ConversionService￨3 conversionService￨3 )￨2 {￨2 }￨2 public￨2 Set￨2 <￨2 ConvertiblePair￨2 >￨2 getConvertibleTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 convert￨2 (￨2 Object￨3 source￨3 ,￨3 TypeDescriptor￨3 sourceType￨3 ,￨3 TypeDescriptor￨3 targetType￨3 )￨2 {￨2 if￨3 (￨3 source￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 Collection￨3 <￨3 ?￨3 >￨3 sourceCollection￨3 =￨3 (￨3 (￨3 Collection￨3 <￨3 ?￨3 >￨3 )￨3 (￨3 source￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 sourceCollection￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨3 {￨3 return￨4 ""￨4 ;￨4 }￨3 StringBuilder￨3 sb￨3 =￨3 new￨3 StringBuilder￨3 (￨3 )￨3 ;￨3 int￨3 i￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 Object￨4 sourceElement￨4 :￨4 sourceCollection￨4 )￨3 {￨3 if￨4 (￨4 i￨5 >￨5 0￨5 )￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 CollectionToStringConverter￨5 .￨5 DELIMITER￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 Object￨4 targetElement￨4 =￨4 this￨4 .￨4 conversionService￨4 .￨4 convert￨4 (￨4 sourceElement￨4 ,￨4 sourceType￨4 .￨4 elementType￨4 (￨4 sourceElement￨4 )￨4 ,￨4 targetType￨4 )￨4 ;￨4 <END_BUG>￨4 sb￨4 .￨4 append￨4 (￨4 targetElement￨4 )￨4 ;￨4 i￨4 ++￨4 ;￨4 }￨3 return￨3 sb￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 WeldExtension￨1 implements￨1 Extension￨1 {￨1 public￨2 static￨2 final￨2 String￨2 SUBSYSTEM_NAME￨2 =￨2 "weld"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 NAMESPACE￨2 =￨2 "urn:jboss:domain:weld:1.0"￨2 ;￨2 private￨2 static￨2 final￨2 WeldExtension￨2 .￨2 WeldSubsystemParser￨2 parser￨2 =￨2 new￨2 WeldExtension￨2 .￨2 WeldSubsystemParser￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 PathElement￨2 PATH_SUBSYSTEM￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 SUBSYSTEM￨2 ,￨2 WeldExtension￨2 .￨2 SUBSYSTEM_NAME￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 RESOURCE_NAME￨2 =￨2 (￨2 WeldExtension￨2 .￨2 class￨2 .￨2 getPackage￨2 (￨2 )￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 +￨2 ".LocalDescriptions"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MAJOR_VERSION￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MINOR_VERSION￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MICRO_VERSION￨2 =￨2 0￨2 ;￨2 static￨2 StandardResourceDescriptionResolver￨2 getResourceDescriptionResolver￨2 (￨2 final￨2 String￨2 ...￨2 keyPrefix￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 ResourceDefinition￨2 WELD_SUBSYSTEM_RESOURCE￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleResourceDefinition￨2 (￨2 WeldExtension￨2 .￨2 PATH_SUBSYSTEM￨2 ,￨2 WeldExtension￨2 .￨2 getResourceDescriptionResolver￨2 (￨2 )￨2 ,￨2 WeldSubsystemAdd￨2 .￨2 INSTANCE￨2 ,￨2 ReloadRequiredRemoveStepHandler￨2 .￨2 INSTANCE￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 initialize￨2 (￨2 final￨3 ExtensionContext￨3 context￨3 )￨2 {￨2 ROOT_LOGGER￨3 .￨3 debug￨3 (￨3 "Activating<seq2seq4repair_space>Weld<seq2seq4repair_space>Extension"￨3 )￨3 ;￨3 final￨3 SubsystemRegistration￨3 subsystem￨3 =￨3 context￨3 .￨3 registerSubsystem￨3 (￨3 WeldExtension￨3 .￨3 SUBSYSTEM_NAME￨3 ,￨3 WeldExtension￨3 .￨3 MANAGEMENT_API_MAJOR_VERSION￨3 ,￨3 WeldExtension￨3 .￨3 MANAGEMENT_API_MINOR_VERSION￨3 ,￨3 WeldExtension￨3 .￨3 MANAGEMENT_API_MICRO_VERSION￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 registration￨3 =￨3 subsystem￨3 .￨3 registerSubsystemModel￨3 (￨3 WeldExtension￨3 .￨3 WELD_SUBSYSTEM_RESOURCE￨3 )￨3 ;￨3 <START_BUG>￨3 registration￨3 .￨3 registerOperationHandler￨3 (￨3 DESCRIBE￨3 ,￨3 INSTANCE￨3 ,￨3 INSTANCE￨3 ,￨3 false￨3 ,￨3 PRIVATE￨3 )￨3 ;￨3 <END_BUG>￨3 subsystem￨3 .￨3 registerXMLElementWriter￨3 (￨3 WeldExtension￨3 .￨3 parser￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 initializeParsers￨2 (￨2 final￨3 ExtensionParsingContext￨3 context￨3 )￨2 {￨2 }￨2 static￨2 class￨2 WeldSubsystemParser￨2 implements￨2 XMLStreamConstants￨2 ,￨2 XMLElementReader￨2 <￨2 List￨2 <￨2 ModelNode￨2 >￨2 >￨2 ,￨2 XMLElementWriter￨2 <￨2 SubsystemMarshallingContext￨2 >￨2 {￨2 @￨3 Override￨3 public￨3 void￨3 readElement￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 writeContent￨3 (￨3 final￨3 XMLExtendedStreamWriter￨3 streamWriter￨3 ,￨3 final￨3 SubsystemMarshallingContext￨3 context￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 Expression￨1 extends￨1 Statement￨1 {￨1 public￨2 static￨2 final￨2 boolean￨2 isConstantValueRepresentable￨2 (￨2 Constant￨3 constant￨3 ,￨3 int￨3 constantTypeID￨3 ,￨3 int￨3 targetTypeID￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 constant￨2 ;￨2 public￨2 int￨2 implicitConversion￨2 ;￨2 public￨2 TypeBinding￨2 resolvedType￨2 ;￨2 public￨2 Expression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 checkCastTypesCompatibility￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 Expression￨3 expression￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 checkNullStatus￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 int￨3 nullStatus￨3 )￨2 {￨2 }￨2 private￨2 MethodBinding￨2 [￨2 ]￨2 getAllInheritedMethods￨2 (￨2 ReferenceBinding￨3 binding￨3 )￨2 {￨2 }￨2 private￨2 void￨2 getAllInheritedMethods0￨2 (￨2 ReferenceBinding￨3 binding￨3 ,￨3 ArrayList￨3 collector￨3 )￨2 {￨2 }￨2 public￨2 void￨2 checkNullComparison￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 FlowInfo￨3 initsWhenTrue￨3 ,￨3 FlowInfo￨3 initsWhenFalse￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 checkUnsafeCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 TypeBinding￨3 match￨3 ,￨3 boolean￨3 isNarrowing￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeConversion￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 runtimeTimeType￨3 ,￨3 TypeBinding￨3 compileTimeType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedBoolean￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Label￨3 trueLabel￨3 ,￨3 Label￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 if￨3 (￨3 (￨4 (￨4 constant￨4 )￨4 !=￨4 (￨4 Constant￨4 .￨4 NotAConstant￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 constant￨4 .￨4 typeID￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 TypeIds￨4 .￨4 T_boolean￨4 )￨4 )￨4 )￨3 {￨3 int￨4 pc￨4 =￨4 codeStream￨4 .￨4 position￨4 ;￨4 if￨4 (￨4 (￨5 constant￨5 .￨5 booleanValue￨5 (￨5 )￨5 )￨5 ==￨5 true￨5 )￨4 {￨4 if￨5 (￨5 valueRequired￨6 )￨5 {￨5 if￨6 (￨6 falseLabel￨7 ==￨7 null￨7 )￨6 {￨6 if￨7 (￨7 trueLabel￨8 !=￨8 null￨8 )￨7 {￨7 codeStream￨8 .￨8 goto_￨8 (￨8 trueLabel￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 }￨4 else￨4 {￨4 if￨5 (￨5 valueRequired￨6 )￨5 {￨5 if￨6 (￨6 falseLabel￨7 !=￨7 null￨7 )￨6 {￨6 if￨7 (￨7 trueLabel￨8 ==￨8 null￨8 )￨7 {￨7 codeStream￨8 .￨8 goto_￨8 (￨8 falseLabel￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 }￨4 codeStream￨4 .￨4 recordPositionsFrom￨4 (￨4 pc￨4 ,￨4 this￨4 .￨4 sourceStart￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 generateCode￨3 (￨3 currentScope￨3 ,￨3 codeStream￨3 ,￨3 valueRequired￨3 )￨3 ;￨3 int￨3 position￨3 =￨3 codeStream￨3 .￨3 position￨3 ;￨3 if￨3 (￨3 valueRequired￨4 )￨3 {￨3 if￨4 (￨4 falseLabel￨5 ==￨5 null￨5 )￨4 {￨4 if￨5 (￨5 trueLabel￨6 !=￨6 null￨6 )￨5 {￨5 codeStream￨6 .￨6 ifne￨6 (￨6 trueLabel￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 if￨5 (￨5 trueLabel￨6 ==￨6 null￨6 )￨5 {￨5 codeStream￨6 .￨6 ifeq￨6 (￨6 falseLabel￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 }￨5 }￨4 }￨3 <START_BUG>￨3 codeStream￨3 .￨3 updateLastRecordedEndPC￨3 (￨3 position￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 generateOptimizedStringConcatenation￨2 (￨2 BlockScope￨3 blockScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 int￨3 typeID￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateOptimizedStringConcatenationCreation￨2 (￨2 BlockScope￨3 blockScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 int￨3 typeID￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCompactableOperation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isConstantValueOfTypeAssignableToType￨2 (￨2 TypeBinding￨3 constantType￨3 ,￨3 TypeBinding￨3 targetType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isTypeReference￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 nullStatus￨2 (￨2 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 ClassScope￨3 classScope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveTypeExpecting￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpectedType￨2 (￨2 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsUnnecessaryCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsNeedCheckCast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Expression￨2 toTypeReference￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 CompilationUnitScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 LocalVariableBinding￨2 localVariableBinding￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LongLiteral￨1 extends￨1 NumberLiteral￨1 {￨1 long￨2 value￨2 ;￨2 static￨2 final￨2 Constant￨2 FORMAT_ERROR￨2 =￨2 new￨2 DoubleConstant￨2 (￨2 (￨2 1.0￨2 /￨2 0.0￨2 )￨2 )￨2 ;￨2 public￨2 LongLiteral￨2 (￨2 char￨3 [￨3 ]￨3 token￨3 ,￨3 int￨3 s￨3 ,￨3 int￨3 e￨3 )￨2 {￨2 }￨2 public￨2 LongLiteral￨2 (￨2 char￨3 [￨3 ]￨3 token￨3 ,￨3 int￨3 s￨3 ,￨3 int￨3 e￨3 ,￨3 long￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeConstant￨2 (￨2 )￨2 {￨2 int￨3 length￨3 =￨3 (￨3 source￨3 .￨3 length￨3 )￨3 -￨3 1￨3 ;￨3 long￨3 computedValue￨3 ;￨3 if￨3 (￨3 (￨4 source￨4 [￨4 0￨4 ]￨4 )￨4 ==￨4 '0'￨4 )￨3 {￨3 if￨4 (￨4 length￨5 ==￨5 1￨5 )￨4 {￨4 constant￨5 =￨5 Constant￨5 .￨5 fromValue￨5 (￨5 0L￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 final￨4 int￨4 shift￨4 ;￨4 final￨4 int￨4 radix￨4 ;￨4 int￨4 j￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 (￨4 source￨4 [￨4 1￨4 ]￨4 )￨4 ==￨4 'x'￨4 )￨4 |￨4 (￨4 (￨4 source￨4 [￨4 1￨4 ]￨4 )￨4 ==￨4 'X'￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 shift￨4 =￨4 4￨4 ;￨4 j￨4 =￨4 2￨4 ;￨4 radix￨4 =￨4 16￨4 ;￨4 else￨4 {￨4 shift￨5 =￨5 3￨5 ;￨5 j￨5 =￨5 1￨5 ;￨5 radix￨5 =￨5 8￨5 ;￨5 }￨4 int￨4 nbDigit￨4 =￨4 0￨4 ;￨4 while￨4 (￨4 (￨5 source￨5 [￨5 j￨5 ]￨5 )￨5 ==￨5 '0'￨5 )￨4 {￨4 j￨5 ++￨5 ;￨5 if￨5 (￨5 j￨6 ==￨6 length￨6 )￨5 {￨5 constant￨6 =￨6 Constant￨6 .￨6 fromValue￨6 (￨6 (￨6 value￨6 =￨6 0L￨6 )￨6 )￨6 ;￨6 return￨6 ;￨6 }￨5 }￨4 int￨4 digitValue￨4 ;￨4 if￨4 (￨4 (￨5 digitValue￨5 =￨5 Character￨5 .￨5 digit￨5 (￨5 source￨5 [￨5 (￨5 j￨5 ++￨5 )￨5 ]￨5 ,￨5 radix￨5 )￨5 )￨5 <￨5 0￨5 )￨4 {￨4 constant￨5 =￨5 LongLiteral￨5 .￨5 FORMAT_ERROR￨5 ;￨5 return￨5 ;￨5 }￨4 if￨4 (￨4 digitValue￨5 >=￨5 8￨5 )￨4 {￨4 nbDigit￨5 =￨5 4￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 digitValue￨5 >=￨5 4￨5 )￨4 {￨4 nbDigit￨5 =￨5 3￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 digitValue￨5 >=￨5 2￨5 )￨4 {￨4 nbDigit￨5 =￨5 2￨5 ;￨5 }￨4 else￨4 {￨4 nbDigit￨5 =￨5 1￨5 ;￨5 }￨4 computedValue￨4 =￨4 digitValue￨4 ;￨4 while￨4 (￨4 j￨5 <￨5 length￨5 )￨4 {￨4 if￨5 (￨5 (￨6 digitValue￨6 =￨6 Character￨6 .￨6 digit￨6 (￨6 source￨6 [￨6 (￨6 j￨6 ++￨6 )￨6 ]￨6 ,￨6 radix￨6 )￨6 )￨6 <￨6 0￨6 )￨5 {￨5 constant￨6 =￨6 LongLiteral￨6 .￨6 FORMAT_ERROR￨6 ;￨6 return￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 nbDigit￨6 +=￨6 shift￨6 )￨6 >￨6 64￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 computedValue￨5 =￨5 (￨5 computedValue￨5 <<￨5 shift￨5 )￨5 |￨5 digitValue￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 long￨4 previous￨4 =￨4 computedValue￨4 =￨4 0￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 int￨5 digitValue￨5 ;￨5 if￨5 (￨5 (￨6 digitValue￨6 =￨6 Character￨6 .￨6 digit￨6 (￨6 source￨6 [￨6 i￨6 ]￨6 ,￨6 10￨6 )￨6 )￨6 <￨6 0￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 previous￨5 =￨5 computedValue￨5 ;￨5 computedValue￨5 =￨5 (￨5 10￨5 *￨5 computedValue￨5 )￨5 +￨5 digitValue￨5 ;￨5 if￨5 (￨5 previous￨6 >￨6 computedValue￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 }￨4 }￨3 constant￨3 =￨3 Constant￨3 .￨3 fromValue￨3 (￨3 (￨3 value￨3 =￨3 computedValue￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 literalType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 mayRepresentMIN_VALUE￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CSVPrinterTest￨1 extends￨1 TestCase￨1 {￨1 String￨2 lineSeparator￨2 =￨2 "\n"￨2 ;￨2 public￨2 void￨2 testPrinter1￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter2￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter3￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter4￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter5￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter6￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPrinter7￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testExcelPrinter1￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testExcelPrinter2￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandom￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 int￨3 iter￨3 =￨3 10000￨3 ;￨3 format￨3 =￨3 CSVFormat￨3 .￨3 DEFAULT￨3 ;￨3 doRandom￨3 (￨3 iter￨3 )￨3 ;￨3 format￨3 =￨3 CSVFormat￨3 .￨3 EXCEL￨3 ;￨3 doRandom￨3 (￨3 iter￨3 )￨3 ;￨3 <START_BUG>￨3 format￨3 =￨3 new￨3 CSVFormat￨3 (￨3 '\t'￨3 ,￨3 CSVFormat￨3 .￨3 ENCAPSULATOR_DISABLED￨3 ,￨3 CSVFormat￨3 .￨3 COMMENTS_DISABLED￨3 ,￨3 '\\'￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 doRandom￨3 (￨3 iter￨3 )￨3 ;￨3 }￨2 Random￨2 r￨2 =￨2 new￨2 Random￨2 (￨2 )￨2 ;￨2 CSVFormat￨2 format￨2 ;￨2 public￨2 void￨2 doRandom￨2 (￨2 int￨2 iter￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 doOneRandom￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equals￨2 (￨2 String￨3 [￨3 ]￨3 [￨3 ]￨3 a￨3 ,￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 b￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 printable￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 String￨2 randStr￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 XmlLogger￨1 implements￨1 BuildListener￨1 {￨1 private￨2 static￨2 final￨2 DocumentBuilder￨2 builder￨2 =￨2 XmlLogger￨2 .￨2 getDocumentBuilder￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 DocumentBuilder￨2 getDocumentBuilder￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 BUILD_TAG￨2 =￨2 "build"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TARGET_TAG￨2 =￨2 "target"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TASK_TAG￨2 =￨2 "task"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 MESSAGE_TAG￨2 =￨2 "message"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NAME_ATTR￨2 =￨2 "name"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TIME_ATTR￨2 =￨2 "time"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PRIORITY_ATTR￨2 =￨2 "priority"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 LOCATION_ATTR￨2 =￨2 "location"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ERROR_ATTR￨2 =￨2 "error"￨2 ;￨2 private￨2 Document￨2 doc￨2 ;￨2 private￨2 Hashtable￨2 tasks￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 targets￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 threadStacks￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 XmlLogger￨2 .￨2 TimedElement￨2 buildElement￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 class￨2 TimedElement￨2 {￨2 long￨3 startTime￨3 ;￨3 Element￨3 element￨3 ;￨3 }￨2 public￨2 XmlLogger￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 buildStarted￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 buildFinished￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 long￨3 totalTime￨3 =￨3 (￨3 System￨3 .￨3 currentTimeMillis￨3 (￨3 )￨3 )￨3 -￨3 (￨3 buildElement￨3 .￨3 startTime￨3 )￨3 ;￨3 buildElement￨3 .￨3 element￨3 .￨3 setAttribute￨3 (￨3 XmlLogger￨3 .￨3 TIME_ATTR￨3 ,￨3 DefaultLogger￨3 .￨3 formatTime￨3 (￨3 totalTime￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 event￨4 .￨4 getException￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 buildElement￨4 .￨4 element￨4 .￨4 setAttribute￨4 (￨4 XmlLogger￨4 .￨4 ERROR_ATTR￨4 ,￨4 event￨4 .￨4 getException￨4 (￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 String￨4 outFilename￨4 =￨4 event￨4 .￨4 getProject￨4 (￨4 )￨4 .￨4 getProperty￨4 (￨4 "XmlLogger.file"￨4 )￨4 ;￨4 if￨4 (￨4 outFilename￨5 ==￨5 null￨5 )￨4 {￨4 outFilename￨5 =￨5 "log.xml"￨5 ;￨5 }￨4 Writer￨4 out￨4 =￨4 new￨4 OutputStreamWriter￨4 (￨4 new￨4 FileOutputStream￨4 (￨4 outFilename￨4 )￨4 ,￨4 "UTF8"￨4 )￨4 ;￨4 <START_BUG>￨4 out￨4 .￨4 write￨4 (￨4 "<?xml<seq2seq4repair_space>version=\"1.0\"?>\n"￨4 )￨4 ;￨4 <END_BUG>￨4 out￨4 .￨4 write￨4 (￨4 "<?xml:stylesheet<seq2seq4repair_space>type=\"text/xsl\"<seq2seq4repair_space>href=\"log.xsl\"?>\n\n"￨4 )￨4 ;￨4 new￨4 DOMElementWriter￨4 (￨4 )￨4 .￨4 write￨4 (￨4 buildElement￨4 .￨4 element￨4 ,￨4 out￨4 ,￨4 0￨4 ,￨4 "\t"￨4 )￨4 ;￨4 out￨4 .￨4 flush￨4 (￨4 )￨4 ;￨4 out￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 exc￨4 )￨3 {￨3 throw￨4 new￨4 BuildException￨4 (￨4 "Unable<seq2seq4repair_space>to<seq2seq4repair_space>close<seq2seq4repair_space>log<seq2seq4repair_space>file"￨4 ,￨4 exc￨4 )￨4 ;￨4 }￨3 buildElement￨3 =￨3 null￨3 ;￨3 }￨2 private￨2 Stack￨2 getStack￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 targetStarted￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 targetFinished￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 taskStarted￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 taskFinished￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 messageLogged￨2 (￨2 BuildEvent￨3 event￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LabeledStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Statement￨2 statement￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 label￨2 ;￨2 public￨2 Label￨2 targetLabel￨2 ;￨2 int￨2 mergedInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 LabeledStatement￨2 (￨2 char￨3 [￨3 ]￨3 label￨3 ,￨3 Statement￨3 statement￨3 ,￨3 int￨3 sourceStart￨3 ,￨3 int￨3 sourceEnd￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 ASTNode￨2 concreteStatement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 int￨3 pc￨3 =￨3 codeStream￨3 .￨3 position￨3 ;￨3 if￨3 (￨3 (￨4 targetLabel￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 targetLabel￨4 .￨4 codeStream￨4 =￨4 codeStream￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 statement￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 statement￨5 .￨5 generateCode￨5 (￨5 currentScope￨5 ,￨5 codeStream￨5 )￨5 ;￨5 }￨4 targetLabel￨4 .￨4 place￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 mergedInitStateIndex￨4 )￨4 !=￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 codeStream￨4 .￨4 removeNotDefinitelyAssignedVariables￨4 (￨4 currentScope￨4 ,￨4 mergedInitStateIndex￨4 )￨4 ;￨4 }￨3 codeStream￨3 .￨3 recordPositionsFrom￨3 (￨3 pc￨3 ,￨3 this￨3 .￨3 sourceStart￨3 )￨3 ;￨3 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resetStateForCodeGeneration￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StatefulComponentDescription￨1 extends￨1 SessionBeanComponentDescription￨1 {￨1 private￨2 Method￨2 afterBegin￨2 ;￨2 private￨2 Method￨2 afterCompletion￨2 ;￨2 private￨2 Method￨2 beforeCompletion￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 MethodIdentifier￨2 ,￨2 StatefulComponentDescription￨2 .￨2 StatefulRemoveMethod￨2 >￨2 removeMethods￨2 =￨2 new￨2 HashMap￨2 <￨2 MethodIdentifier￨2 ,￨2 StatefulComponentDescription￨2 .￨2 StatefulRemoveMethod￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 StatefulTimeoutInfo￨2 statefulTimeout￨2 ;￨2 private￨2 CacheInfo￨2 cache￨2 ;￨2 private￨2 Map￨2 <￨2 Method￨2 ,￨2 String￨2 >￨2 initMethods￨2 =￨2 new￨2 HashMap￨2 <￨2 Method￨2 ,￨2 String￨2 >￨2 (￨2 0￨2 )￨2 ;￨2 public￨2 class￨2 StatefulRemoveMethod￨2 {￨2 private￨3 final￨3 MethodIdentifier￨3 methodIdentifier￨3 ;￨3 private￨3 final￨3 boolean￨3 retainIfException￨3 ;￨3 StatefulRemoveMethod￨3 (￨3 final￨4 MethodIdentifier￨4 method￨4 ,￨4 final￨4 boolean￨4 retainIfException￨4 )￨3 {￨3 }￨3 public￨3 MethodIdentifier￨3 getMethodIdentifier￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isRetainIfException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 equals￨3 (￨3 Object￨4 o￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 StatefulComponentDescription￨2 (￨2 final￨3 String￨3 componentName￨3 ,￨3 final￨3 String￨3 componentClassName￨3 ,￨3 final￨3 EjbJarDescription￨3 ejbJarDescription￨3 ,￨3 final￨3 ServiceName￨3 deploymentUnitServiceName￨3 ,￨3 final￨3 SessionBeanMetaData￨3 descriptorData￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addInitMethodInvokingInterceptor￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addStatefulSessionSynchronizationInterceptor￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ComponentConfiguration￨2 createConfiguration￨2 (￨2 final￨3 ClassIndex￨3 classIndex￨3 ,￨3 final￨3 ClassLoader￨3 moduleClassLoder￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 allowsConcurrentAccess￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Method￨2 getAfterBegin￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Method￨2 getAfterCompletion￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Method￨2 getBeforeCompletion￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 SessionBeanType￨2 getSessionBeanType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setAfterBegin￨2 (￨2 final￨3 Method￨3 afterBegin￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAfterCompletion￨2 (￨2 final￨3 Method￨3 afterCompletion￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBeforeCompletion￨2 (￨2 final￨3 Method￨3 afterCompletion￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 setupViewInterceptors￨2 (￨2 EJBViewDescription￨3 view￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 ViewConfigurator￨2 getSessionBeanObjectViewConfigurator￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addViewSerializationInterceptor￨2 (￨2 final￨3 ViewDescription￨3 view￨3 )￨2 {￨2 view￨3 .￨3 setSerializable￨3 (￨3 true￨3 )￨3 ;￨3 view￨3 .￨3 setUseWriteReplace￨3 (￨3 true￨3 )￨3 ;￨3 view￨3 .￨3 getConfigurators￨3 (￨3 )￨3 .￨3 add￨3 (￨3 new￨3 ViewConfigurator￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 configure￨4 (￨4 final￨4 DeploymentPhaseContext￨4 context￨4 ,￨4 final￨4 ComponentConfiguration￨4 componentConfiguration￨4 ,￨4 final￨4 ViewDescription￨4 description￨4 ,￨4 final￨4 ViewConfiguration￨4 configuration￨4 )￨4 throws￨4 DeploymentUnitProcessingException￨4 (￨4 )￨4 {￨4 final￨5 DeploymentReflectionIndex￨5 index￨5 =￨5 context￨5 .￨5 getDeploymentUnit￨5 (￨5 )￨5 .￨5 getAttachment￨5 (￨5 REFLECTION_INDEX￨5 )￨5 ;￨5 ClassReflectionIndex￨5 <￨5 WriteReplaceInterface￨5 >￨5 classIndex￨5 =￨5 index￨5 .￨5 getClassIndex￨5 (￨5 WriteReplaceInterface￨5 .￨5 class￨5 )￨5 ;￨5 for￨5 (￨5 Method￨5 method￨5 :￨5 classIndex￨5 .￨5 getMethods￨5 (￨5 )￨5 )￨5 {￨5 <START_BUG>￨6 configuration￨6 .￨6 addClientInterceptor￨6 (￨6 method￨6 ,￨6 new￨6 WriteReplaceInterceptor￨6 .￨6 Factory￨6 (￨6 configuration￨6 .￨6 getViewServiceName￨6 (￨6 )￨6 .￨6 getCanonicalName￨6 (￨6 )￨6 )￨6 ,￨6 WRITE_REPLACE￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 addRemoveMethod￨2 (￨2 final￨3 MethodIdentifier￨3 removeMethod￨3 ,￨3 final￨3 boolean￨3 retainIfException￨3 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 StatefulComponentDescription￨2 .￨2 StatefulRemoveMethod￨2 >￨2 getRemoveMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StatefulTimeoutInfo￨2 getStatefulTimeout￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setStatefulTimeout￨2 (￨2 final￨3 StatefulTimeoutInfo￨3 statefulTimeout￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addStatefulInstanceAssociatingInterceptor￨2 (￨2 final￨3 EJBViewDescription￨3 view￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addRemoveMethodInterceptor￨2 (￨2 final￨3 ViewDescription￨3 view￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addInitMethod￨2 (￨2 final￨3 Method￨3 method￨3 ,￨3 final￨3 String￨3 createMethod￨3 )￨2 {￨2 }￨2 public￨2 Map￨2 <￨2 Method￨2 ,￨2 String￨2 >￨2 getInitMethods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CacheInfo￨2 getCache￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCache￨2 (￨2 CacheInfo￨3 cache￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 isPassivationApplicable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 StatefulBeanTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 StatefulBeanTestCase￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 @￨2 Deployment￨2 public￨2 static￨2 JavaArchive￨2 createDeployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 EJB￨2 (￨2 mappedName￨2 =￨2 "java:global/ejb3-sfsb-example/SimpleStatefulSessionBean!org.jboss.as.demos.ejb3.archive.SimpleStatefulSessionLocal"￨2 )￨2 private￨2 SimpleStatefulSessionLocal￨2 localSfsb￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testSFSB￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 String￨3 state￨3 =￨3 "not<seq2seq4repair_space>in<seq2seq4repair_space>a<seq2seq4repair_space>good<seq2seq4repair_space>mood!"￨3 ;￨3 localSfsb￨3 .￨3 setState￨3 (￨3 state￨3 )￨3 ;￨3 String￨3 storedState￨3 =￨3 localSfsb￨3 .￨3 getState￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 "Unexpected<seq2seq4repair_space>state<seq2seq4repair_space>returned<seq2seq4repair_space>from<seq2seq4repair_space>stateful<seq2seq4repair_space>session<seq2seq4repair_space>bean"￨3 ,￨3 (￨3 (￨3 (￨3 SimpleInterceptor￨3 .￨3 class￨3 .￨3 getSimpleName￨3 (￨3 )￨3 )￨3 +￨3 "#"￨3 )￨3 +￨3 state￨3 )￨3 ,￨3 storedState￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
final￨1 class￨1 EmbedClob￨1 extends￨1 ConnectionChild￨1 implements￨1 Clob￨1 ,￨1 EngineLOB￨1 {￨1 private￨2 InternalClob￨2 clob￨2 ;￨2 private￨2 boolean￨2 isValid￨2 =￨2 true￨2 ;￨2 private￨2 int￨2 locator￨2 ;￨2 EmbedClob￨2 (￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 EmbedClob￨2 (￨2 EmbedConnection￨2 con￨2 ,￨2 DataValueDescriptor￨2 dvd￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 length￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSubString￨2 (￨2 long￨2 pos￨2 ,￨2 int￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Reader￨2 getCharacterStream￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getAsciiStream￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 String￨2 searchStr￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 Clob￨2 searchClob￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setString￨2 (￨2 long￨2 pos￨2 ,￨2 String￨2 str￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setString￨2 (￨2 long￨2 pos￨2 ,￨2 String￨2 str￨2 ,￨2 int￨2 offset￨2 ,￨2 int￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 OutputStream￨2 setAsciiStream￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Writer￨2 setCharacterStream￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 truncate￨2 (￨2 long￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 free￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Reader￨2 getCharacterStream￨2 (￨2 long￨2 pos￨2 ,￨2 long￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 checkValidity￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 pos￨4 <=￨4 0￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_BAD_POSITION￨4 ,￨4 new￨4 Long￨4 (￨4 pos￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 length￨4 <￨4 0￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_NONPOSITIVE_LENGTH￨4 ,￨4 new￨4 Long￨4 (￨4 length￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 length￨3 >￨3 (￨3 (￨3 this￨3 .￨3 length￨3 (￨3 )￨3 )￨3 -￨3 pos￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 throw￨3 Util￨3 .￨3 generateCsSQLException￨3 (￨3 POS_AND_LENGTH_GREATER_THAN_LOB￨3 ,￨3 new￨3 Long￨3 (￨3 pos￨3 )￨3 ,￨3 new￨3 Long￨3 (￨3 length￨3 )￨3 )￨3 ;￨3 }￨3 try￨3 (￨3 )￨3 {￨3 return￨4 new￨4 ClobUpdatableReader￨4 (￨4 this￨4 ,￨4 (￨4 pos￨4 -￨4 1￨4 )￨4 ,￨4 length￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 ioe￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 setStreamFailure￨4 (￨4 ioe￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 checkValidity￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 makeWritableClobClone￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 makeWritableClobClone￨2 (￨2 long￨2 len￨2 )￨2 throws￨2 IOException￨2 ,￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 InternalClob￨2 getInternalClob￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLocator￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 KindedPointcut￨1 extends￨1 Pointcut￨1 {￨1 Kind￨2 kind￨2 ;￨2 private￨2 SignaturePattern￨2 signature￨2 ;￨2 private￨2 Set￨2 matchKinds￨2 ;￨2 private￨2 ShadowMunger￨2 munger￨2 =￨2 null￨2 ;￨2 public￨2 KindedPointcut￨2 (￨2 Shadow￨3 .￨3 Kind￨3 kind￨3 ,￨3 SignaturePattern￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 KindedPointcut￨2 (￨2 Shadow￨3 .￨3 Kind￨3 kind￨3 ,￨3 SignaturePattern￨3 signature￨3 ,￨3 ShadowMunger￨3 munger￨3 )￨2 {￨2 }￨2 public￨2 SignaturePattern￨2 getSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Set￨2 couldMatchKinds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 couldEverMatchSameJoinPointsAs￨2 (￨2 KindedPointcut￨3 other￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 fastMatch￨2 (￨2 FastMatchInfo￨3 info￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 fastMatch￨2 (￨2 Class￨3 targetType￨3 )￨2 {￨2 }￨2 protected￨2 FuzzyBoolean￨2 matchInternal￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 private￨2 void￨2 warnOnBridgeMethod￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 match￨2 (￨2 JoinPoint￨3 .￨3 StaticPart￨3 jpsp￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 matchesDynamically￨2 (￨2 Object￨3 thisObject￨3 ,￨3 Object￨3 targetObject￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 matchesStatically￨2 (￨2 String￨3 joinpointKind￨3 ,￨3 Member￨3 member￨3 ,￨3 Class￨3 thisClass￨3 ,￨3 Class￨3 targetClass￨3 ,￨3 Member￨3 withinCode￨3 )￨2 {￨2 }￨2 private￨2 void￨2 warnOnConfusingSig￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 postRead￨2 (￨2 ResolvedType￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Pointcut￨2 read￨2 (￨2 VersionedDataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 )￨2 {￨2 if￨3 (￨3 (￨4 kind￨4 )￨4 ==￨4 (￨4 Shadow￨4 .￨4 Initialization￨4 )￨4 )￨3 {￨3 }￨3 signature￨3 =￨3 signature￨3 .￨3 resolveBindings￨3 (￨3 scope￨3 ,￨3 bindings￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 kind￨4 )￨4 ==￨4 (￨4 Shadow￨4 .￨4 ConstructorExecution￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 signature￨5 .￨5 getDeclaringType￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 World￨5 world￨5 =￨5 scope￨5 .￨5 getWorld￨5 (￨5 )￨5 ;￨5 UnresolvedType￨5 exactType￨5 =￨5 signature￨5 .￨5 getDeclaringType￨5 (￨5 )￨5 .￨5 getExactType￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 (￨6 (￨6 signature￨6 .￨6 getKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 org￨6 .￨6 aspectj￨6 .￨6 weaver￨6 .￨6 Member￨6 .￨6 CONSTRUCTOR￨6 )￨6 )￨6 &&￨6 (￨6 !￨6 (￨6 exactType￨6 .￨6 equals￨6 (￨6 MISSING￨6 )￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 exactType￨6 .￨6 resolve￨6 (￨6 world￨6 )￨6 .￨6 isInterface￨6 (￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 !￨6 (￨6 signature￨6 .￨6 getDeclaringType￨6 (￨6 )￨6 .￨6 isIncludeSubtypes￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 world￨6 .￨6 getLint￨6 (￨6 )￨6 .￨6 noInterfaceCtorJoinpoint￨6 .￨6 signal￨6 (￨6 exactType￨6 .￨6 toString￨6 (￨6 )￨6 ,￨6 getSourceLocation￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 (￨4 kind￨4 )￨4 ==￨4 (￨4 Shadow￨4 .￨4 StaticInitialization￨4 )￨4 )￨3 {￨3 UnresolvedType￨4 exactType￨4 =￨4 signature￨4 .￨4 getDeclaringType￨4 (￨4 )￨4 .￨4 getExactType￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 exactType￨4 .￨4 isParameterizedType￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 signature￨4 .￨4 getDeclaringType￨4 (￨4 )￨4 .￨4 isIncludeSubtypes￨4 (￨4 )￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 scope￨4 .￨4 message￨4 (￨4 MessageUtil￨4 .￨4 error￨4 (￨4 WeaverMessages￨4 .￨4 format￨4 (￨4 NO_STATIC_INIT_JPS_FOR_PARAMETERIZED_TYPES￨4 )￨4 ,￨4 getSourceLocation￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 resolveBindingsFromRTTI￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Test￨2 findResidueInternal￨2 (￨2 Shadow￨3 shadow￨3 ,￨3 ExposedState￨3 state￨3 )￨2 {￨2 }￨2 public￨2 Pointcut￨2 concretize1￨2 (￨2 ResolvedType￨3 inAspect￨3 ,￨3 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 public￨2 Kind￨2 getKind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 accept￨2 (￨2 PatternNodeVisitor￨3 visitor￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 @￨1 Category￨1 (￨1 CommonCriteria￨1 .￨1 class￨1 )￨1 public￨1 class￨1 EJBSecurityTestCase￨1 {￨1 private￨2 static￨2 Context￨2 ctx￨2 ;￨2 @￨2 AfterClass￨2 public￨2 static￨2 void￨2 afterClass￨2 (￨2 )￨2 throws￨2 NamingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 beforeClass￨2 (￨2 )￨2 throws￨2 NamingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deployment￨2 public￨2 static￨2 JavaArchive￨2 createDeployment￨2 (￨2 )￨2 {￨2 final￨3 JavaArchive￨3 jar￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 JavaArchive￨3 .￨3 class￨3 ,￨3 "ejb-security-test.jar"￨3 )￨3 ;￨3 jar￨3 .￨3 addPackage￨3 (￨3 AnnotatedSLSB￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 jar￨3 .￨3 addAsManifestResource￨3 (￨3 "ejb/security/ejb-jar.xml"￨3 ,￨3 "ejb-jar.xml"￨3 )￨3 ;￨3 <END_BUG>￨3 jar￨3 .￨3 addAsManifestResource￨3 (￨3 EJBSecurityTestCase￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 ,￨3 "jboss-ejb3.xml"￨3 ,￨3 "jboss-ejb3.xml"￨3 )￨3 ;￨3 jar￨3 .￨3 addPackage￨3 (￨3 CommonCriteria￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 jar￨3 ;￨3 }￨2 private￨2 static￨2 <￨2 T￨2 >￨2 T￨2 lookup￨2 (￨2 final￨2 Class￨2 <￨2 ?￨2 >￨2 beanClass￨2 ,￨2 final￨2 Class￨2 <￨2 T￨2 >￨2 viewClass￨2 )￨2 throws￨2 NamingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDenyAllAnnotation￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testEJB2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testExcludeList￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSecurityOnBeanInAbsenceOfExplicitSecurityDomain￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testEmptyRolesAllowedAnnotationValue￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HttpMirrorServer￨1 extends￨1 Thread￨1 implements￨1 Stoppable￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 ACCEPT_TIMEOUT￨2 =￨2 1000￨2 ;￨2 private￨2 final￨2 int￨2 daemonPort￨2 ;￨2 private￨2 volatile￨2 boolean￨2 running￨2 ;￨2 private￨2 volatile￨2 Exception￨2 except￨2 ;￨2 public￨2 HttpMirrorServer￨2 (￨2 int￨3 port￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 run￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 stopServer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Exception￨2 getException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 <START_BUG>￨3 int￨3 port￨3 =￨3 8081￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 args￨4 .￨4 length￨4 )￨4 >￨4 0￨4 )￨3 {￨3 port￨4 =￨4 Integer￨4 .￨4 parseInt￨4 (￨4 args￨4 [￨4 0￨4 ]￨4 )￨4 ;￨4 }￨3 LoggingManager￨3 .￨3 setPriority￨3 (￨3 "INFO"￨3 )￨3 ;￨3 LoggingManager￨3 .￨3 setLoggingLevels￨3 (￨3 System￨3 .￨3 getProperties￨3 (￨3 )￨3 )￨3 ;￨3 HttpMirrorServer￨3 serv￨3 =￨3 new￨3 HttpMirrorServer￨3 (￨3 port￨3 )￨3 ;￨3 serv￨3 .￨3 start￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 TreeColumn￨1 extends￨1 Item￨1 {￨1 Tree￨2 parent￨2 ;￨2 boolean￨2 resizable￨2 ;￨2 boolean￨2 moveable￨2 ;￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getAlignment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMoveable￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getNameText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Tree￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getResizable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWidth￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 pack￨2 (￨2 )￨2 {￨2 checkWidget￨3 (￨3 )￨3 ;￨3 int￨3 index￨3 =￨3 parent￨3 .￨3 indexOf￨3 (￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 index￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 int￨3 columnWidth￨3 =￨3 0￨3 ;￨3 int￨3 hwnd￨3 =￨3 parent￨3 .￨3 handle￨3 ;￨3 int￨3 hDC￨3 =￨3 OS￨3 .￨3 GetDC￨3 (￨3 hwnd￨3 )￨3 ;￨3 int￨3 oldFont￨3 =￨3 0￨3 ;￨3 int￨3 newFont￨3 =￨3 OS￨3 .￨3 SendMessage￨3 (￨3 hwnd￨3 ,￨3 WM_GETFONT￨3 ,￨3 0￨3 ,￨3 0￨3 )￨3 ;￨3 if￨3 (￨3 newFont￨4 !=￨4 0￨4 )￨3 {￨3 oldFont￨4 =￨4 OS￨4 .￨4 SelectObject￨4 (￨4 hDC￨4 ,￨4 newFont￨4 )￨4 ;￨4 }￨3 int￨3 cp￨3 =￨3 parent￨3 .￨3 getCodePage￨3 (￨3 )￨3 ;￨3 RECT￨3 rect￨3 =￨3 new￨3 RECT￨3 (￨3 )￨3 ;￨3 int￨3 flags￨3 =￨3 (￨3 OS￨3 .￨3 DT_CALCRECT￨3 )￨3 |￨3 (￨3 OS￨3 .￨3 DT_NOPREFIX￨3 )￨3 ;￨3 TVITEM￨3 tvItem￨3 =￨3 new￨3 TVITEM￨3 (￨3 )￨3 ;￨3 tvItem￨3 .￨3 mask￨3 =￨3 OS￨3 .￨3 TVIF_PARAM￨3 ;￨3 int￨3 hItem￨3 =￨3 OS￨3 .￨3 SendMessage￨3 (￨3 hwnd￨3 ,￨3 TVM_GETNEXTITEM￨3 ,￨3 TVGN_ROOT￨3 ,￨3 0￨3 )￨3 ;￨3 while￨3 (￨3 hItem￨4 !=￨4 0￨4 )￨3 {￨3 hItem￨4 =￨4 OS￨4 .￨4 SendMessage￨4 (￨4 hwnd￨4 ,￨4 TVM_GETNEXTITEM￨4 ,￨4 TVGN_NEXTVISIBLE￨4 ,￨4 hItem￨4 )￨4 ;￨4 tvItem￨4 .￨4 hItem￨4 =￨4 hItem￨4 ;￨4 OS￨4 .￨4 SendMessage￨4 (￨4 hwnd￨4 ,￨4 TVM_GETITEM￨4 ,￨4 0￨4 ,￨4 tvItem￨4 )￨4 ;￨4 TreeItem￨4 item￨4 =￨4 parent￨4 .￨4 items￨4 [￨4 tvItem￨4 .￨4 lParam￨4 ]￨4 ;￨4 if￨4 (￨4 index￨5 ==￨5 0￨5 )￨4 {￨4 rect￨5 .￨5 left￨5 =￨5 item￨5 .￨5 handle￨5 ;￨5 if￨5 (￨5 (￨6 OS￨6 .￨6 SendMessage￨6 (￨6 hwnd￨6 ,￨6 TVM_GETITEMRECT￨6 ,￨6 1￨6 ,￨6 rect￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 columnWidth￨6 =￨6 Math￨6 .￨6 max￨6 (￨6 columnWidth￨6 ,￨6 rect￨6 .￨6 right￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 int￨5 imageWidth￨5 =￨5 0￨5 ;￨5 int￨5 textWidth￨5 =￨5 0￨5 ;￨5 Image￨5 image￨5 =￨5 (￨5 (￨5 item￨5 .￨5 images￨5 )￨5 !=￨5 null￨5 )￨5 ?￨5 item￨5 .￨5 images￨5 [￨5 index￨5 ]￨5 :￨5 null￨5 ;￨5 if￨5 (￨5 image￨6 !=￨6 null￨6 )￨5 {￨5 Rectangle￨6 bounds￨6 =￨6 image￨6 .￨6 getBounds￨6 (￨6 )￨6 ;￨6 imageWidth￨6 =￨6 bounds￨6 .￨6 width￨6 ;￨6 }￨5 String￨5 string￨5 =￨5 (￨5 (￨5 item￨5 .￨5 strings￨5 )￨5 !=￨5 null￨5 )￨5 ?￨5 item￨5 .￨5 strings￨5 [￨5 index￨5 ]￨5 :￨5 null￨5 ;￨5 if￨5 (￨5 string￨6 !=￨6 null￨6 )￨5 {￨5 TCHAR￨6 buffer￨6 =￨6 new￨6 TCHAR￨6 (￨6 cp￨6 ,￨6 string￨6 ,￨6 false￨6 )￨6 ;￨6 OS￨6 .￨6 DrawText￨6 (￨6 hDC￨6 ,￨6 buffer￨6 ,￨6 buffer￨6 .￨6 length￨6 (￨6 )￨6 ,￨6 rect￨6 ,￨6 flags￨6 )￨6 ;￨6 textWidth￨6 =￨6 (￨6 rect￨6 .￨6 right￨6 )￨6 -￨6 (￨6 rect￨6 .￨6 left￨6 )￨6 ;￨6 }￨5 columnWidth￨5 =￨5 Math￨5 .￨5 max￨5 (￨5 columnWidth￨5 ,￨5 (￨5 (￨5 imageWidth￨5 +￨5 textWidth￨5 )￨5 +￨5 (￨5 (￨5 Tree￨5 .￨5 INSET￨5 )￨5 *￨5 3￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 <START_BUG>￨3 TCHAR￨3 buffer￨3 =￨3 new￨3 TCHAR￨3 (￨3 cp￨3 ,￨3 text￨3 ,￨3 true￨3 )￨3 ;￨3 <END_BUG>￨3 OS￨3 .￨3 DrawText￨3 (￨3 hDC￨3 ,￨3 buffer￨3 ,￨3 buffer￨3 .￨3 length￨3 (￨3 )￨3 ,￨3 rect￨3 ,￨3 flags￨3 )￨3 ;￨3 int￨3 headerWidth￨3 =￨3 (￨3 (￨3 rect￨3 .￨3 right￨3 )￨3 -￨3 (￨3 rect￨3 .￨3 left￨3 )￨3 )￨3 +￨3 (￨3 Tree￨3 .￨3 HEADER_MARGIN￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 image￨4 )￨4 !=￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 parent￨4 .￨4 sortColumn￨4 )￨4 ==￨4 (￨4 this￨4 )￨4 )￨4 )￨3 {￨3 Image￨4 headerImage￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 parent￨5 .￨5 sortColumn￨5 )￨5 ==￨5 (￨5 this￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 parent￨5 .￨5 sortDirection￨5 )￨5 !=￨5 (￨5 SWT￨5 .￨5 NULL￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 OS￨6 .￨6 COMCTL32_MAJOR￨6 )￨6 <￨6 6￨6 )￨5 {￨5 headerImage￨6 =￨6 display￨6 .￨6 getSortImage￨6 (￨6 parent￨6 .￨6 sortDirection￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 headerWidth￨6 +=￨6 Tree￨6 .￨6 SORT_WIDTH￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 headerImage￨5 =￨5 image￨5 ;￨5 }￨4 if￨4 (￨4 headerImage￨5 !=￨5 null￨5 )￨4 {￨4 Rectangle￨5 bounds￨5 =￨5 headerImage￨5 .￨5 getBounds￨5 (￨5 )￨5 ;￨5 headerWidth￨5 +=￨5 bounds￨5 .￨5 width￨5 ;￨5 }￨4 int￨4 margin￨4 =￨4 0￨4 ;￨4 int￨4 hwndHeader￨4 =￨4 parent￨4 .￨4 hwndHeader￨4 ;￨4 if￨4 (￨4 (￨5 hwndHeader￨5 !=￨5 0￨5 )￨5 &&￨5 (￨5 (￨5 OS￨5 .￨5 COMCTL32_VERSION￨5 )￨5 >=￨5 (￨5 OS￨5 .￨5 VERSION￨5 (￨5 5￨5 ,￨5 80￨5 )￨5 )￨5 )￨5 )￨4 {￨4 margin￨5 =￨5 OS￨5 .￨5 SendMessage￨5 (￨5 hwndHeader￨5 ,￨5 HDM_GETBITMAPMARGIN￨5 ,￨5 0￨5 ,￨5 0￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 margin￨5 =￨5 (￨5 OS￨5 .￨5 GetSystemMetrics￨5 (￨5 SM_CXEDGE￨5 )￨5 )￨5 *￨5 3￨5 ;￨5 }￨4 headerWidth￨4 +=￨4 margin￨4 *￨4 2￨4 ;￨4 }￨3 if￨3 (￨3 newFont￨4 !=￨4 0￨4 )￨3 {￨3 OS￨4 .￨4 SelectObject￨4 (￨4 hDC￨4 ,￨4 oldFont￨4 )￨4 ;￨4 }￨3 OS￨3 .￨3 ReleaseDC￨3 (￨3 hwnd￨3 ,￨3 hDC￨3 )￨3 ;￨3 setWidth￨3 (￨3 Math￨3 .￨3 max￨3 (￨3 headerWidth￨3 ,￨3 columnWidth￨3 )￨3 )￨3 ;￨3 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAlignment￨2 (￨2 int￨3 alignment￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 ,￨3 boolean￨3 sort￨3 ,￨3 boolean￨3 right￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMoveable￨2 (￨2 boolean￨3 moveable￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setResizable￨2 (￨2 boolean￨3 resizable￨3 )￨2 {￨2 }￨2 void￨2 setSortDirection￨2 (￨2 int￨3 direction￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWidth￨2 (￨2 int￨3 width￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DrawApplication￨1 extends￨1 JFrame￨1 implements￨1 DrawingEditor￨1 ,￨1 PaletteListener￨1 ,￨1 VersionRequester￨1 {￨1 private￨2 Tool￨2 fTool￨2 ;￨2 private￨2 Iconkit￨2 fIconkit￨2 ;￨2 private￨2 JTextField￨2 fStatusLine￨2 ;￨2 private￨2 DrawingView￨2 fView￨2 ;￨2 private￨2 ToolButton￨2 fDefaultToolButton￨2 ;￨2 private￨2 ToolButton￨2 fSelectedToolButton￨2 ;￨2 private￨2 String￨2 fApplicationName￨2 ;￨2 private￨2 StorageFormatManager￨2 fStorageFormatManager￨2 ;￨2 private￨2 UndoManager￨2 myUndoManager￨2 ;￨2 protected￨2 static￨2 String￨2 fgUntitled￨2 =￨2 "untitled"￨2 ;￨2 private￨2 final￨2 EventListenerList￨2 listenerList￨2 =￨2 new￨2 EventListenerList￨2 (￨2 )￨2 ;￨2 private￨2 DesktopListener￨2 fDesktopListener￨2 ;￨2 private￨2 Desktop￨2 fDesktop￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 fgDrawPath￨2 =￨2 "/CH/ifa/draw/"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 IMAGES￨2 =￨2 (￨2 DrawApplication￨2 .￨2 fgDrawPath￨2 )￨2 +￨2 "images/"￨2 ;￨2 protected￨2 static￨2 int￨2 winCount￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 FILE_MENU￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 EDIT_MENU￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 ALIGNMENT_MENU￨2 =￨2 2￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 ATTRIBUTES_MENU￨2 =￨2 3￨2 ;￨2 public￨2 DrawApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DrawApplication￨2 (￨2 String￨3 title￨3 )￨2 {￨2 }￨2 protected￨2 DrawApplication￨2 createApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 newView￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 newWindow￨2 (￨2 Drawing￨3 initialDrawing￨3 )￨2 {￨2 }￨2 public￨2 void￨2 open￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 synchronized￨2 void￨2 open￨2 (￨2 DrawingView￨3 newDrawingView￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addListeners￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 createMenus￨2 (￨2 JMenuBar￨3 mb￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addMenuIfPossible￨2 (￨2 JMenuBar￨3 mb￨3 ,￨3 JMenu￨3 newMenu￨3 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createFileMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createEditMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createAlignmentMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createDebugMenu￨2 (￨2 )￨2 {￨2 CommandMenu￨3 menu￨3 =￨3 new￨3 CommandMenu￨3 (￨3 "Debug"￨3 )￨3 ;￨3 Command￨3 cmd￨3 =￨3 new￨3 AbstractCommand￨3 (￨3 "Simple<seq2seq4repair_space>Update"￨4 ,￨4 this￨4 )￨3 {￨3 <START_BUG>￨4 public￨4 void￨4 executable￨4 (￨4 )￨4 {￨4 <END_BUG>￨4 this￨4 .￨4 view￨4 (￨4 )￨4 .￨4 setDisplayUpdate￨4 (￨4 new￨4 SimpleUpdateStrategy￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 ;￨3 menu￨3 .￨3 add￨3 (￨3 cmd￨3 )￨3 ;￨3 cmd￨3 =￨3 new￨3 AbstractCommand￨3 (￨3 "Buffered<seq2seq4repair_space>Update"￨4 ,￨4 this￨4 )￨3 {￨3 public￨4 void￨4 executable￨4 (￨4 )￨4 {￨4 this￨5 .￨5 view￨5 (￨5 )￨5 .￨5 setDisplayUpdate￨5 (￨5 new￨5 BufferedUpdateStrategy￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 menu￨3 .￨3 add￨3 (￨3 cmd￨3 )￨3 ;￨3 return￨3 menu￨3 ;￨3 }￨2 protected￨2 JMenu￨2 createAttributesMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createColorMenu￨2 (￨2 String￨3 title￨3 ,￨3 FigureAttributeConstant￨3 attribute￨3 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createArrowMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createFontMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createFontStyleMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JMenu￨2 createFontSizeMenu￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JMenu￨2 createLookAndFeelMenu￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JToolBar￨2 createToolPalette￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 createTools￨2 (￨2 JToolBar￨3 palette￨3 )￨2 {￨2 }￨2 protected￨2 Tool￨2 createSelectionTool￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Tool￨2 createDefaultTool￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setDefaultTool￨2 (￨2 Tool￨3 newDefaultTool￨3 )￨2 {￨2 }￨2 public￨2 Tool￨2 getDefaultTool￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ToolButton￨2 createToolButton￨2 (￨2 String￨3 iconName￨3 ,￨3 String￨3 toolName￨3 ,￨3 Tool￨3 tool￨3 )￨2 {￨2 }￨2 protected￨2 DrawingView￨2 createDrawingView￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 DrawingView￨2 createDrawingView￨2 (￨2 Drawing￨3 newDrawing￨3 )￨2 {￨2 }￨2 protected￨2 DrawingView￨2 createInitialDrawingView￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Dimension￨2 getDrawingViewSize￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Drawing￨2 createDrawing￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Desktop￨2 createDesktop￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setDesktop￨2 (￨2 Desktop￨3 newDesktop￨3 )￨2 {￨2 }￨2 public￨2 Desktop￨2 getDesktop￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StorageFormatManager￨2 createStorageFormatManager￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 setStorageFormatManager￨2 (￨2 StorageFormatManager￨3 newStorageFormatManager￨3 )￨2 {￨2 }￨2 public￨2 StorageFormatManager￨2 getStorageFormatManager￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Dimension￨2 defaultSize￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JTextField￨2 createStatusLine￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 setStatusLine￨2 (￨2 JTextField￨3 newStatusLine￨3 )￨2 {￨2 }￨2 protected￨2 JTextField￨2 getStatusLine￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 paletteUserSelected￨2 (￨2 PaletteButton￨3 paletteButton￨3 )￨2 {￨2 }￨2 public￨2 void￨2 paletteUserOver￨2 (￨2 PaletteButton￨3 paletteButton￨3 ,￨3 boolean￨3 inside￨3 )￨2 {￨2 }￨2 public￨2 Tool￨2 tool￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DrawingView￨2 view￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setView￨2 (￨2 DrawingView￨3 newView￨3 )￨2 {￨2 }￨2 public￨2 DrawingView￨2 [￨2 ]￨2 views￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 toolDone￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 figureSelectionChanged￨2 (￨2 DrawingView￨3 view￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkCommandMenu￨2 (￨2 CommandMenu￨3 cm￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addViewChangeListener￨2 (￨2 ViewChangeListener￨3 vsl￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeViewChangeListener￨2 (￨2 ViewChangeListener￨3 vsl￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireViewSelectionChangedEvent￨2 (￨2 DrawingView￨3 oldView￨3 ,￨3 DrawingView￨3 newView￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireViewCreatedEvent￨2 (￨2 DrawingView￨3 view￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireViewDestroyingEvent￨2 (￨2 DrawingView￨3 view￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showStatus￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTool￨2 (￨2 Tool￨3 t￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setSelected￨2 (￨2 ToolButton￨3 button￨3 )￨2 {￨2 }￨2 public￨2 void￨2 exit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 destroy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 promptNew￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 promptOpen￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 promptSaveAs￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JFileChooser￨2 createOpenFileChooser￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 JFileChooser￨2 createSaveFileChooser￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 print￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 saveDrawing￨2 (￨2 StorageFormat￨3 storeFormat￨3 ,￨3 String￨3 file￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 loadDrawing￨2 (￨2 StorageFormat￨3 restoreFormat￨3 ,￨3 String￨3 file￨3 )￨2 {￨2 }￨2 private￨2 void￨2 newLookAndFeel￨2 (￨2 String￨3 landf￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setDrawingTitle￨2 (￨2 String￨3 drawingTitle￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getDrawingTitle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setApplicationName￨2 (￨2 String￨3 applicationName￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getApplicationName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setUndoManager￨2 (￨2 UndoManager￨3 newUndoManager￨3 )￨2 {￨2 }￨2 public￨2 UndoManager￨2 getUndoManager￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 VersionControlStrategy￨2 getVersionControlStrategy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getRequiredVersions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDefaultDrawingTitle￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 DesktopListener￨2 getDesktopListener￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setDesktopListener￨2 (￨2 DesktopListener￨3 desktopPaneListener￨3 )￨2 {￨2 }￨2 protected￨2 DesktopListener￨2 createDesktopListener￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Iconkit￨2 createIconkit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setIconkit￨2 (￨2 Iconkit￨3 newIconkit￨3 )￨2 {￨2 }￨2 protected￨2 Iconkit￨2 getIconkit￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MethodVerifier￨1 implements￨1 TagBits￨1 ,￨1 TypeConstants￨1 {￨1 SourceTypeBinding￨2 type￨2 ;￨2 HashtableOfObject￨2 inheritedMethods￨2 ;￨2 HashtableOfObject￨2 currentMethods￨2 ;￨2 ReferenceBinding￨2 runtimeException￨2 ;￨2 ReferenceBinding￨2 errorException￨2 ;￨2 LookupEnvironment￨2 environment￨2 ;￨2 MethodVerifier￨2 (￨2 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 boolean￨2 areMethodsEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 areParametersEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 areReturnTypesEqual￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 areTypesEqual￨2 (￨2 TypeBinding￨3 one￨3 ,￨3 TypeBinding￨3 two￨3 )￨2 {￨2 }￨2 boolean￨2 canSkipInheritedMethods￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 canSkipInheritedMethods￨2 (￨2 MethodBinding￨3 one￨3 ,￨3 MethodBinding￨3 two￨3 )￨2 {￨2 }￨2 void￨2 checkAbstractMethod￨2 (￨2 MethodBinding￨3 abstractMethod￨3 )￨2 {￨2 }￨2 void￨2 checkAgainstInheritedMethods￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 methods￨3 ,￨3 int￨3 length￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 otherInheritedMethods￨3 )￨2 {￨2 }￨2 void￨2 checkConcreteInheritedMethod￨2 (￨2 MethodBinding￨3 concreteMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 abstractMethods￨3 )￨2 {￨2 }￨2 void￨2 checkExceptions￨2 (￨2 MethodBinding￨3 newMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 void￨2 checkForBridgeMethod￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 [￨3 ]￨3 otherInheritedMethods￨3 )￨2 {￨2 }￨2 void￨2 checkForInheritedNameClash￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 otherInheritedMethod￨3 )￨2 {￨2 }￨2 void￨2 checkForNameClash￨2 (￨2 MethodBinding￨3 currentMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 void￨2 checkInheritedMethods￨2 (￨2 MethodBinding￨3 [￨3 ]￨3 methods￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 MethodBinding￨3 first￨3 =￨3 methods￨3 [￨3 0￨3 ]￨3 ;￨3 int￨3 index￨3 =￨3 length￨3 ;￨3 while￨3 (￨3 (￨4 (￨4 --￨4 index￨4 )￨4 >￨4 0￨4 )￨4 &&￨4 (￨4 areReturnTypesEqual￨4 (￨4 first￨4 ,￨4 methods￨4 [￨4 index￨4 ]￨4 )￨4 )￨4 )￨3 {￨3 }￨3 if￨3 (￨3 index￨4 >￨4 0￨4 )￨3 {￨3 problemReporter￨4 (￨4 )￨4 .￨4 inheritedMethodsHaveIncompatibleReturnTypes￨4 (￨4 this￨4 .￨4 type￨4 ,￨4 methods￨4 ,￨4 length￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 MethodBinding￨3 concreteMethod￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 type￨4 .￨4 isInterface￨4 (￨4 )￨4 )￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 length￨5 ;￨5 (￨5 --￨5 i￨5 )￨5 >=￨5 0￨5 ;￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 methods￨6 [￨6 i￨6 ]￨6 .￨6 isAbstract￨6 (￨6 )￨6 )￨6 )￨5 {￨5 concreteMethod￨6 =￨6 methods￨6 [￨6 i￨6 ]￨6 ;￨6 break￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 concreteMethod￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 this￨4 .￨4 type￨4 .￨4 isClass￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 this￨4 .￨4 type￨4 .￨4 isAbstract￨4 (￨4 )￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 for￨4 (￨4 int￨5 i￨5 =￨5 length￨5 ;￨5 (￨5 --￨5 i￨5 )￨5 >=￨5 0￨5 ;￨5 )￨4 {￨4 if￨5 (￨5 mustImplementAbstractMethod￨6 (￨6 methods￨6 [￨6 i￨6 ]￨6 .￨6 declaringClass￨6 )￨6 )￨5 {￨5 TypeDeclaration￨6 typeDeclaration￨6 =￨6 this￨6 .￨6 type￨6 .￨6 scope￨6 .￨6 referenceContext￨6 ;￨6 if￨6 (￨6 typeDeclaration￨7 !=￨7 null￨7 )￨6 {￨6 MethodDeclaration￨7 missingAbstractMethod￨7 =￨7 typeDeclaration￨7 .￨7 addMissingAbstractMethodFor￨7 (￨7 methods￨7 [￨7 0￨7 ]￨7 )￨7 ;￨7 missingAbstractMethod￨7 .￨7 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 abstractMethodMustBeImplemented￨7 (￨7 this￨7 .￨7 type￨7 ,￨7 methods￨7 [￨7 0￨7 ]￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 problemReporter￨7 (￨7 )￨7 .￨7 abstractMethodMustBeImplemented￨7 (￨7 this￨7 .￨7 type￨7 ,￨7 methods￨7 [￨7 0￨7 ]￨7 )￨7 ;￨7 }￨6 return￨6 ;￨6 }￨5 }￨4 }￨4 return￨4 ;￨4 }￨3 MethodBinding￨3 [￨3 ]￨3 abstractMethods￨3 =￨3 new￨3 MethodBinding￨3 [￨3 length￨3 -￨3 1￨3 ]￨3 ;￨3 index￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 length￨4 ;￨4 (￨4 --￨4 i￨4 )￨4 >=￨4 0￨4 ;￨4 )￨3 {￨3 if￨4 (￨4 (￨5 methods￨5 [￨5 i￨5 ]￨5 )￨5 !=￨5 concreteMethod￨5 )￨4 {￨4 abstractMethods￨5 [￨5 (￨5 index￨5 ++￨5 )￨5 ]￨5 =￨5 methods￨5 [￨5 i￨5 ]￨5 ;￨5 }￨4 }￨3 checkConcreteInheritedMethod￨3 (￨3 concreteMethod￨3 ,￨3 abstractMethods￨3 )￨3 ;￨3 }￨2 void￨2 checkMethods￨2 (￨2 )￨2 {￨2 }￨2 void￨2 checkPackagePrivateAbstractMethod￨2 (￨2 MethodBinding￨3 abstractMethod￨3 )￨2 {￨2 }￨2 void￨2 computeInheritedMethods￨2 (￨2 )￨2 {￨2 }￨2 void￨2 computeInheritedMethods￨2 (￨2 ReferenceBinding￨3 superclass￨3 ,￨3 ReferenceBinding￨3 [￨3 ]￨3 superInterfaces￨3 )￨2 {￨2 }￨2 void￨2 computeMethods￨2 (￨2 )￨2 {￨2 }￨2 MethodBinding￨2 computeSubstituteMethod￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 currentMethod￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 doesMethodOverride￨2 (￨2 MethodBinding￨3 method￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 doReturnTypesCollide￨2 (￨2 MethodBinding￨3 method￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 ReferenceBinding￨2 errorException￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isAsVisible￨2 (￨2 MethodBinding￨3 newMethod￨3 ,￨3 MethodBinding￨3 inheritedMethod￨3 )￨2 {￨2 }￨2 boolean￨2 isInterfaceMethodImplemented￨2 (￨2 MethodBinding￨3 inheritedMethod￨3 ,￨3 MethodBinding￨3 existingMethod￨3 ,￨3 ReferenceBinding￨3 superType￨3 )￨2 {￨2 }￨2 boolean￨2 isSameClassOrSubclassOf￨2 (￨2 ReferenceBinding￨3 testClass￨3 ,￨3 ReferenceBinding￨3 superclass￨3 )￨2 {￨2 }￨2 boolean￨2 mustImplementAbstractMethod￨2 (￨2 ReferenceBinding￨3 declaringClass￨3 )￨2 {￨2 }￨2 boolean￨2 mustImplementAbstractMethods￨2 (￨2 )￨2 {￨2 }￨2 ProblemReporter￨2 problemReporter￨2 (￨2 )￨2 {￨2 }￨2 ProblemReporter￨2 problemReporter￨2 (￨2 MethodBinding￨3 currentMethod￨3 )￨2 {￨2 }￨2 ReferenceBinding￨2 [￨2 ]￨2 resolvedExceptionTypesFor￨2 (￨2 MethodBinding￨3 method￨3 )￨2 {￨2 }￨2 ReferenceBinding￨2 runtimeException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 verify￨2 (￨2 SourceTypeBinding￨3 someType￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ExpressionLanguageScenarioTests￨1 extends￨1 ExpressionTestCase￨1 {￨1 public￨2 void￨2 testScenario_UsingStandardInfrastructure￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testScenario_DefiningVariablesThatWillBeAccessibleInExpressions￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 SpelAntlrExpressionParser￨3 parser￨3 =￨3 new￨3 SpelAntlrExpressionParser￨3 (￨3 )￨3 ;￨3 StandardEvaluationContext￨3 ctx￨3 =￨3 new￨3 StandardEvaluationContext￨3 (￨3 )￨3 ;￨3 ctx￨3 .￨3 setVariable￨3 (￨3 "favouriteColour"￨3 ,￨3 "blue"￨3 )￨3 ;￨3 List￨3 <￨3 Integer￨3 >￨3 primes￨3 =￨3 new￨3 ArrayList￨3 <￨3 Integer￨3 >￨3 (￨3 )￨3 ;￨3 primes￨3 .￨3 addAll￨3 (￨3 Arrays￨3 .￨3 asList￨3 (￨3 2￨3 ,￨3 3￨3 ,￨3 5￨3 ,￨3 7￨3 ,￨3 11￨3 ,￨3 13￨3 ,￨3 17￨3 )￨3 )￨3 ;￨3 ctx￨3 .￨3 setVariable￨3 (￨3 "primes"￨3 ,￨3 primes￨3 )￨3 ;￨3 Expression￨3 expr￨3 =￨3 parser￨3 .￨3 parseExpression￨3 (￨3 "#favouriteColour"￨3 )￨3 ;￨3 Object￨3 value￨3 =￨3 expr￨3 .￨3 getValue￨3 (￨3 ctx￨3 )￨3 ;￨3 assertEquals￨3 (￨3 "blue"￨3 ,￨3 value￨3 )￨3 ;￨3 expr￨3 =￨3 parser￨3 .￨3 parseExpression￨3 (￨3 "#primes.get(1)"￨3 )￨3 ;￨3 value￨3 =￨3 expr￨3 .￨3 getValue￨3 (￨3 ctx￨3 )￨3 ;￨3 assertEquals￨3 (￨3 3￨3 ,￨3 value￨3 )￨3 ;￨3 <START_BUG>￨3 expr￨3 =￨3 parser￨3 .￨3 parseExpression￨3 (￨3 "#primes.?{#this>10}"￨3 )￨3 ;￨3 <END_BUG>￨3 value￨3 =￨3 expr￨3 .￨3 getValue￨3 (￨3 ctx￨3 )￨3 ;￨3 assertEquals￨3 (￨3 "[11,<seq2seq4repair_space>13,<seq2seq4repair_space>17]"￨3 ,￨3 value￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 static￨2 class￨2 TestClass￨2 {￨2 public￨3 String￨3 str￨3 ;￨3 private￨3 int￨3 property￨3 ;￨3 public￨3 int￨3 getProperty￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setProperty￨3 (￨3 int￨4 i￨4 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 testScenario_UsingADifferentRootContextObject￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 repeat￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem￨2 (￨2 )￨2 throws￨2 NoSuchMethodException￨2 ,￨2 SecurityException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testScenario_AddingYourOwnPropertyResolvers_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testScenario_AddingYourOwnPropertyResolvers_2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 FruitColourAccessor￨2 implements￨2 PropertyAccessor￨2 {￨2 private￨3 static￨3 Map￨3 <￨3 String￨3 ,￨3 Color￨3 >￨3 propertyMap￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 Color￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 static￨3 TypeDescriptor￨3 mapElementTypeDescriptor￨3 =￨3 TypeDescriptor￨3 .￨3 valueOf￨3 (￨3 Color￨3 .￨3 class￨3 )￨3 ;￨3 public￨3 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 getSpecificTargetClasses￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 canRead￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 TypedValue￨3 read￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 canWrite￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 write￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 ,￨3 Object￨3 newValue￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 VegetableColourAccessor￨2 implements￨2 PropertyAccessor￨2 {￨2 private￨3 static￨3 Map￨3 <￨3 String￨3 ,￨3 Color￨3 >￨3 propertyMap￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 Color￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 Class￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 getSpecificTargetClasses￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 canRead￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 TypedValue￨3 read￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 canWrite￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 write￨3 (￨3 EvaluationContext￨3 context￨3 ,￨3 Object￨3 target￨3 ,￨3 String￨3 name￨3 ,￨3 Object￨3 newValue￨3 )￨3 throws￨3 AccessException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 LayoutAction￨1 extends￨1 Action￨1 {￨1 static￨2 final￨2 Logger￨2 logger￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 LayoutAction￨2 .￨2 class￨2 )￨2 ;￨2 Layout￨2 layout￨2 ;￨2 public￨2 void￨2 begin￨2 (￨2 ExecutionContext￨2 ec￨2 ,￨2 String￨2 name￨2 ,￨2 Attributes￨2 attributes￨2 )￨2 {￨2 inError￨3 =￨3 false￨3 ;￨3 String￨3 className￨3 =￨3 attributes￨3 .￨3 getValue￨3 (￨3 CLASS_ATTRIBUTE￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 LayoutAction￨4 .￨4 logger￨4 .￨4 debug￨4 (￨4 (￨4 (￨4 "About<seq2seq4repair_space>to<seq2seq4repair_space>instantiate<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>["￨4 +￨4 className￨4 )￨4 +￨4 "]"￨4 )￨4 )￨4 ;￨4 Object￨4 instance￨4 =￨4 OptionConverter￨4 .￨4 instantiateByClassName￨4 (￨4 className￨4 ,￨4 Layout￨4 .￨4 class￨4 ,￨4 null￨4 )￨4 ;￨4 layout￨4 =￨4 (￨4 (￨4 Layout￨4 )￨4 (￨4 instance￨4 )￨4 )￨4 ;￨4 LayoutAction￨4 .￨4 logger￨4 .￨4 debug￨4 (￨4 "Pushing<seq2seq4repair_space>layout<seq2seq4repair_space>on<seq2seq4repair_space>top<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>object<seq2seq4repair_space>stack."￨4 )￨4 ;￨4 ec￨4 .￨4 pushObject￨4 (￨4 layout￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 oops￨4 )￨3 {￨3 inError￨4 =￨4 true￨4 ;￨4 LayoutAction￨4 .￨4 logger￨4 .￨4 error￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>an<seq2seq4repair_space>Layout.<seq2seq4repair_space>Reported<seq2seq4repair_space>error<seq2seq4repair_space>follows."￨4 ,￨4 oops￨4 )￨4 ;￨4 <START_BUG>￨4 ec￨4 .￨4 addError￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 joran￨4 .￨4 ErrorItem￨4 (￨4 (￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>create<seq2seq4repair_space>layout<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>"￨4 +￨4 className￨4 )￨4 +￨4 "]."￨4 )￨4 ,￨4 ec￨4 .￨4 getLocator￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 void￨2 end￨2 (￨2 ExecutionContext￨3 ec￨3 ,￨3 String￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 finish￨2 (￨2 ExecutionContext￨3 ec￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConversionHelp￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CHAR_SET￨2 =￨2 "UTF-8"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATT_CLASS￨2 =￨2 "class"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATT_NAME￨2 =￨2 "name"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATT_ELEMENT_TYPE￨2 =￨2 "elementType"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ATT_TE_ENABLED￨2 =￨2 "enabled"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ATT_TE_TESTCLASS￨2 =￨2 "testclass"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ATT_TE_GUICLASS￨2 =￨2 "guiclass"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ATT_TE_NAME￨2 =￨2 "testname"￨2 ;￨2 private￨2 static￨2 String￨2 inVersion￨2 ;￨2 private￨2 static￨2 String￨2 outVersion￨2 =￨2 "1.1"￨2 ;￨2 public￨2 static￨2 void￨2 setInVersion￨2 (￨2 String￨3 v￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 setOutVersion￨2 (￨2 String￨3 v￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 encode￨2 (￨2 String￨3 p￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 decode￨2 (￨2 String￨3 p￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 cdata￨2 (￨2 byte￨2 [￨2 ]￨2 chars￨2 ,￨2 String￨2 encoding￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 StringBuffer￨3 buf￨3 =￨3 new￨3 StringBuffer￨3 (￨3 "<![CDATA["￨3 )￨3 ;￨3 <END_BUG>￨3 buf￨3 .￨3 append￨3 (￨3 new￨3 String￨3 (￨3 chars￨3 ,￨3 encoding￨3 )￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 "]]>"￨3 )￨3 ;￨3 return￨3 buf￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 propertyToAttribute￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 void￨2 mapentry￨2 (￨2 String￨3 prop￨3 ,￨3 String￨3 att￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 saveClass￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamWriter￨3 writer￨3 ,￨3 String￨3 prop￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 restoreClass￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamReader￨3 reader￨3 ,￨3 String￨3 prop￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 saveItem￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamWriter￨3 writer￨3 ,￨3 String￨3 prop￨3 ,￨3 boolean￨3 encode￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 restoreItem￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamReader￨3 reader￨3 ,￨3 String￨3 prop￨3 ,￨3 boolean￨3 decode￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isSpecialProperty￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 saveSpecialProperties￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamWriter￨3 writer￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 restoreSpecialProperties￨2 (￨2 TestElement￨3 el￨3 ,￨3 HierarchicalStreamReader￨3 reader￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CounterConfig￨1 extends￨1 AbstractTestElement￨1 implements￨1 Serializable￨1 ,￨1 LoopIterationListener￨1 ,￨1 NoThreadClone￨1 {￨1 private￨2 static￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerFor￨2 (￨2 ELEMENTS￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 START￨2 =￨2 "CounterConfig.start"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 END￨2 =￨2 "CounterConfig.end"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 INCREMENT￨2 =￨2 "CounterConfig.incr"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PER_USER￨2 =￨2 "CounterConfig.per_user"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 VAR_NAME￨2 =￨2 "CounterConfig.name"￨2 ;￨2 private￨2 boolean￨2 perUser￨2 =￨2 false￨2 ;￨2 private￨2 int￨2 globalCounter￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 int￨2 currentIterationCount￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 synchronized￨2 void￨2 iterationStart￨2 (￨2 LoopIterationEvent￨3 event￨3 )￨2 {￨2 JMeterVariables￨3 variables￨3 =￨3 JMeterContextService￨3 .￨3 getContext￨3 (￨3 )￨3 .￨3 getVariables￨3 (￨3 )￨3 ;￨3 int￨3 start￨3 =￨3 getStart￨3 (￨3 )￨3 ;￨3 int￨3 end￨3 =￨3 getEnd￨3 (￨3 )￨3 ;￨3 int￨3 increment￨3 =￨3 getIncrement￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 isPerUser￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 globalCounter￨5 )￨5 ==￨5 (￨5 -￨5 1￨5 )￨5 )￨5 ||￨5 (￨5 (￨5 globalCounter￨5 )￨5 >￨5 end￨5 )￨5 )￨4 {￨4 globalCounter￨5 =￨5 start￨5 ;￨5 }￨4 variables￨4 .￨4 put￨4 (￨4 getVarName￨4 (￨4 )￨4 ,￨4 Integer￨4 .￨4 toString￨4 (￨4 globalCounter￨4 )￨4 )￨4 ;￨4 globalCounter￨4 +=￨4 increment￨4 ;￨4 }￨3 else￨3 {￨3 String￨4 value￨4 =￨4 variables￨4 .￨4 get￨4 (￨4 getVarName￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 value￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 value￨4 .￨4 equals￨4 (￨4 ""￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 variables￨4 .￨4 put￨4 (￨4 getVarName￨4 (￨4 )￨4 ,￨4 Integer￨4 .￨4 toString￨4 (￨4 start￨4 )￨4 )￨4 ;￨4 value￨4 =￨4 variables￨4 .￨4 get￨4 (￨4 getVarName￨4 (￨4 )￨4 )￨4 ;￨4 else￨4 {￨4 try￨5 (￨5 )￨5 {￨5 int￨6 current￨6 =￨6 Integer￨6 .￨6 parseInt￨6 (￨6 value￨6 )￨6 ;￨6 current￨6 +=￨6 increment￨6 ;￨6 if￨6 (￨6 current￨7 >￨7 end￨7 )￨6 {￨6 current￨7 =￨7 start￨7 ;￨7 }￨6 variables￨6 .￨6 put￨6 (￨6 getVarName￨6 (￨6 )￨6 ,￨6 Integer￨6 .￨6 toString￨6 (￨6 current￨6 )￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 NumberFormatException￨6 e￨6 )￨5 {￨5 CounterConfig￨6 .￨6 log￨6 .￨6 info￨6 (￨6 "Bad<seq2seq4repair_space>number<seq2seq4repair_space>in<seq2seq4repair_space>Counter<seq2seq4repair_space>config"￨6 ,￨6 e￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 public￨2 void￨2 setStart￨2 (￨2 int￨3 start￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setStart￨2 (￨2 String￨3 start￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getStart￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setEnd￨2 (￨2 int￨3 end￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEnd￨2 (￨2 String￨3 end￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getEnd￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIncrement￨2 (￨2 int￨3 inc￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncrement￨2 (￨2 String￨3 incr￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getIncrement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIsPerUser￨2 (￨2 boolean￨3 isPer￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPerUser￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setVarName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getVarName￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 DefaultCategoryFactory￨1 implements￨1 LoggerFactory￨1 {￨1 DefaultCategoryFactory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Logger￨2 makeNewLoggerInstance￨2 (￨2 String￨3 name￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 Category￨3 (￨3 name￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 BaseHrefScanner￨1 extends￨1 TagScanner￨1 {￨1 private￨2 LinkProcessor￨2 processor￨2 ;￨2 public￨2 BaseHrefScanner￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BaseHrefScanner￨2 (￨2 String￨3 filter￨3 ,￨3 LinkProcessor￨3 processor￨3 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getID￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Tag￨2 createTag￨2 (￨2 TagData￨2 tagData￨2 ,￨2 Tag￨2 tag￨2 ,￨2 String￨2 url￨2 )￨2 throws￨2 ParserException￨2 (￨2 )￨2 {￨2 String￨3 baseUrl￨3 =￨3 (￨3 (￨3 String￨3 )￨3 (￨3 tag￨3 .￨3 getAttribute￨3 (￨3 "HREF"￨3 )￨3 )￨3 )￨3 ;￨3 String￨3 absoluteBaseUrl￨3 =￨3 ""￨3 ;￨3 if￨3 (￨3 (￨4 baseUrl￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 baseUrl￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 absoluteBaseUrl￨4 =￨4 baseUrl￨4 .￨4 trim￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 processor￨4 .￨4 setBaseUrl￨4 (￨4 absoluteBaseUrl￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 org￨3 .￨3 htmlparser￨3 .￨3 tags￨3 .￨3 BaseHrefTag￨3 (￨3 tagData￨3 ,￨3 absoluteBaseUrl￨3 )￨3 ;￨3 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 InflowTestCase￨1 extends￨1 ContainerResourceMgmtTestBase￨1 {￨1 @￨2 Deployment￨2 public￨2 static￨2 ResourceAdapterArchive￨2 createDeployment￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 ArquillianResource￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testRegistryConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 ServiceController￨3 <￨3 ?￨3 >￨3 controller￨3 =￨3 serviceContainer￨3 .￨3 getService￨3 (￨3 RA_REPOSITORY_SERVICE￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 controller￨3 )￨3 ;￨3 ResourceAdapterRepository￨3 repository￨3 =￨3 (￨3 (￨3 ResourceAdapterRepository￨3 )￨3 (￨3 controller￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 repository￨3 )￨3 ;￨3 Set￨3 <￨3 String￨3 >￨3 ids￨3 =￨3 repository￨3 .￨3 getResourceAdapters￨3 (￨3 MessageListener￨3 .￨3 class￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 ids￨3 )￨3 ;￨3 <START_BUG>￨3 assertEquals￨3 (￨3 2￨3 ,￨3 ids￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 piId￨3 =￨3 ids￨3 .￨3 iterator￨3 (￨3 )￨3 .￨3 next￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 piId￨3 )￨3 ;￨3 Endpoint￨3 endpoint￨3 =￨3 repository￨3 .￨3 getEndpoint￨3 (￨3 piId￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 endpoint￨3 )￨3 ;￨3 List￨3 <￨3 MessageListener￨3 >￨3 listeners￨3 =￨3 repository￨3 .￨3 getMessageListeners￨3 (￨3 piId￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 listeners￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 listeners￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 MessageListener￨3 listener￨3 =￨3 listeners￨3 .￨3 get￨3 (￨3 0￨3 )￨3 ;￨3 ActivationSpec￨3 as￨3 =￨3 listener￨3 .￨3 getActivation￨3 (￨3 )￨3 .￨3 createInstance￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 as￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 as￨3 .￨3 getResourceAdapter￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testMetadataConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ServletResourceManager￨1 implements￨1 ResourceManager￨1 {￨1 private￨2 final￨2 FileResourceManager￨2 deploymentResourceManager￨2 ;￨2 private￨2 final￨2 Collection￨2 <￨2 VirtualFile￨2 >￨2 overlays￨2 ;￨2 public￨2 ServletResourceManager￨2 (￨2 final￨2 VirtualFile￨2 resourcesRoot￨2 ,￨2 final￨2 Collection￨2 <￨2 VirtualFile￨2 >￨2 overlays￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Resource￨2 getResource￨2 (￨2 final￨2 String￨2 path￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 Resource￨3 res￨3 =￨3 deploymentResourceManager￨3 .￨3 getResource￨3 (￨3 path￨3 )￨3 ;￨3 if￨3 (￨3 res￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 res￨4 ;￨4 }￨3 String￨3 p￨3 =￨3 path￨3 ;￨3 if￨3 (￨3 p￨4 .￨4 startsWith￨4 (￨4 "/"￨4 )￨4 )￨3 {￨3 p￨4 =￨4 p￨4 .￨4 substring￨4 (￨4 1￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 overlays￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 for￨4 (￨4 VirtualFile￨5 overlay￨5 :￨5 overlays￨5 )￨4 {￨4 VirtualFile￨5 child￨5 =￨5 overlay￨5 .￨5 getChild￨5 (￨5 p￨5 )￨5 ;￨5 if￨5 (￨5 child￨6 .￨6 exists￨6 (￨6 )￨6 )￨5 {￨5 URL￨6 url￨6 =￨6 child￨6 .￨6 toURL￨6 (￨6 )￨6 ;￨6 <START_BUG>￨6 return￨6 new￨6 URLResource￨6 (￨6 url￨6 ,￨6 url￨6 .￨6 openConnection￨6 (￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 }￨1
final￨1 class￨1 RemoteServiceImpl￨1 implements￨1 InvocationHandler￨1 ,￨1 IRemoteService￨1 {￨1 static￨2 final￨2 Object￨2 [￨2 ]￨2 EMPTY_PARAMETERS￨2 =￨2 new￨2 Object￨2 [￨2 0￨2 ]￨2 ;￨2 RemoteServiceReferenceImpl￨2 refImpl￨2 ;￨2 Object￨2 service￨2 ;￨2 private￨2 long￨2 nextID￨2 ;￨2 public￨2 RemoteServiceImpl￨2 (￨2 final￨3 RemoteServiceReferenceImpl￨3 refImpl￨3 ,￨3 final￨3 Object￨3 service￨3 )￨2 {￨2 }￨2 public￨2 void￨2 callAsync￨2 (￨2 final￨3 IRemoteCall￨3 call￨3 ,￨3 final￨3 IRemoteCallListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 IFuture￨2 callAsync￨2 (￨2 final￨3 IRemoteCall￨3 call￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 callSync￨2 (￨2 final￨2 IRemoteCall￨2 call￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 fireAsync￨2 (￨2 final￨2 IRemoteCall￨2 call￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getProxy￨2 (￨2 )￨2 throws￨2 ECFException￨2 (￨2 )￨2 {￨2 }￨2 synchronized￨2 long￨2 getNextID￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 invoke￨2 (￨2 Object￨2 proxy￨2 ,￨2 final￨2 Method￨2 method￨2 ,￨2 final￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 Method￨2 getMethod￨2 (￨2 final￨2 Class￨2 aClass￨2 ,￨2 String￨2 aMethodName￨2 ,￨2 final￨2 Class￨2 [￨2 ]￨2 someParameterTypes￨2 )￨2 throws￨2 NoSuchMethodException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 someParameterTypes￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 someParameterTypes￨4 .￨4 length￨4 )￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 aClass￨4 .￨4 getMethod￨4 (￨4 aMethodName￨4 ,￨4 null￨4 )￨4 ;￨4 }￨3 final￨3 Method￨3 [￨3 ]￨3 methods￨3 =￨3 aClass￨3 .￨3 getMethods￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 parameterCount￨3 =￨3 someParameterTypes￨3 .￨3 length￨3 ;￨3 aMethodName￨3 =￨3 aMethodName￨3 .￨3 intern￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 methods￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 Method￨4 candidate￨4 =￨4 methods￨4 [￨4 i￨4 ]￨4 ;￨4 String￨4 candidateMethodName￨4 =￨4 candidate￨4 .￨4 getName￨4 (￨4 )￨4 .￨4 intern￨4 (￨4 )￨4 ;￨4 Class￨4 [￨4 ]￨4 candidateParameterTypes￨4 =￨4 candidate￨4 .￨4 getParameterTypes￨4 (￨4 )￨4 ;￨4 int￨4 candidateParameterCount￨4 =￨4 candidateParameterTypes￨4 .￨4 length￨4 ;￨4 if￨4 (￨4 (￨5 candidateParameterCount￨5 ==￨5 parameterCount￨5 )￨5 &&￨5 (￨5 aMethodName￨5 ==￨5 candidateMethodName￨5 )￨5 )￨4 {￨4 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 candidateParameterCount￨6 ;￨6 j￨6 ++￨6 )￨5 {￨5 Class￨6 clazzA￨6 =￨6 candidateParameterTypes￨6 [￨6 j￨6 ]￨6 ;￨6 Class￨6 clazzB￨6 =￨6 someParameterTypes￨6 [￨6 j￨6 ]￨6 ;￨6 if￨6 (￨6 !￨7 (￨7 clazzA￨7 .￨7 isAssignableFrom￨7 (￨7 clazzB￨7 )￨7 )￨7 )￨6 {￨6 continue￨7 OUTER￨7 ;￨7 }￨6 }￨5 return￨5 candidate￨5 ;￨5 }￨4 }￨3 <START_BUG>￨3 throw￨3 new￨3 NoSuchMethodException￨3 (￨3 (￨3 (￨3 (￨3 (￨3 "No<seq2seq4repair_space>such<seq2seq4repair_space>method:<seq2seq4repair_space>"￨3 +￨3 aMethodName￨3 )￨3 +￨3 "("￨3 )￨3 +￨3 (￨3 Arrays￨3 .￨3 toString￨3 (￨3 someParameterTypes￨3 )￨3 )￨3 )￨3 +￨3 ")"￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 class￨2 AsyncResult￨2 extends￨2 Thread￨2 {￨2 Object￨3 result￨3 ;￨3 Throwable￨3 exception￨3 ;￨3 IRemoteCall￨3 call￨3 ;￨3 private￨3 IRemoteCallListener￨3 listener￨3 ;￨3 AsyncResult￨3 (￨3 final￨4 IRemoteCall￨4 call￨4 ,￨4 final￨4 IRemoteCallListener￨4 listener￨4 )￨3 {￨3 }￨3 public￨3 void￨3 run￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 DeclareSoft￨1 extends￨1 Declare￨1 {￨1 private￨2 TypePattern￨2 exception￨2 ;￨2 private￨2 Pointcut￨2 pointcut￨2 ;￨2 public￨2 DeclareSoft￨2 (￨2 TypePattern￨3 exception￨3 ,￨3 Pointcut￨3 pointcut￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Declare￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Pointcut￨2 getPointcut￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypePattern￨2 getException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 IScope￨3 scope￨3 )￨2 {￨2 <START_BUG>￨3 exception￨3 =￨3 exception￨3 .￨3 resolveBindings￨3 (￨3 scope￨3 ,￨3 null￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 pointcut￨3 =￨3 pointcut￨3 .￨3 resolve￨3 (￨3 scope￨3 )￨3 ;￨3 }￨2 public￨2 boolean￨2 isAdviceLike￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FilterModel￨1 {￨1 private￨2 EventTypeEntryContainer￨2 eventContainer￨2 =￨2 new￨2 EventTypeEntryContainer￨2 (￨2 )￨2 ;￨2 private￨2 EventListenerList￨2 eventListenerList￨2 =￨2 new￨2 EventListenerList￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 processNewLoggingEvent￨2 (￨2 String￨3 eventType￨3 ,￨3 LoggingEvent￨3 event￨3 )￨2 {￨2 EventTypeEntryContainer￨3 container￨3 =￨3 getContainer￨3 (￨3 eventType￨3 )￨3 ;￨3 container￨3 .￨3 addLevel￨3 (￨3 event￨3 .￨3 getLevel￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addLogger￨3 (￨3 event￨3 .￨3 getLoggerName￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addThread￨3 (￨3 event￨3 .￨3 getThreadName￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addNDC￨3 (￨3 event￨3 .￨3 getNDC￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addMDCKeys￨3 (￨3 event￨3 .￨3 getMDCKeySet￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 event￨3 .￨3 getLocationInformation￨3 (￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 LocationInfo￨3 info￨3 =￨3 event￨3 .￨3 getLocationInformation￨3 (￨3 )￨3 ;￨3 container￨3 .￨3 addClass￨3 (￨3 info￨3 .￨3 getClassName￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addMethod￨3 (￨3 info￨3 .￨3 getMethodName￨3 (￨3 )￨3 )￨3 ;￨3 container￨3 .￨3 addFileName￨3 (￨3 info￨3 .￨3 getFileName￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 EventTypeEntryContainer￨2 getContainer￨2 (￨2 )￨2 {￨2 }￨2 EventTypeEntryContainer￨2 getContainer￨2 (￨2 String￨3 eventType￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TaskItem￨1 extends￨1 Item￨1 {￨1 TaskBar￨2 parent￨2 ;￨2 Shell￨2 shell￨2 ;￨2 NSImage￨2 defaultImage￨2 ;￨2 int￨2 progress￨2 ;￨2 int￨2 iProgress￨2 ;￨2 int￨2 progressState￨2 =￨2 SWT￨2 .￨2 DEFAULT￨2 ;￨2 Image￨2 overlayImage￨2 ;￨2 String￨2 overlayText￨2 =￨2 ""￨2 ;￨2 Menu￨2 menu￨2 ;￨2 static￨2 final￨2 int￨2 PROGRESS_MAX￨2 =￨2 100￨2 ;￨2 static￨2 final￨2 int￨2 PROGRESS_TIMER￨2 =￨2 350￨2 ;￨2 static￨2 final￨2 int￨2 PROGRESS_BARS￨2 =￨2 7￨2 ;￨2 TaskItem￨2 (￨2 TaskBar￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Menu￨2 getMenu￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getOverlayImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getOverlayText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TaskBar￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getProgress￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getProgressState￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setMenu￨2 (￨2 Menu￨3 menu￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOverlayImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOverlayText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setProgress￨2 (￨2 int￨3 progress￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setProgressState￨2 (￨2 int￨3 progressState￨3 )￨2 {￨2 }￨2 void￨2 setShell￨2 (￨2 Shell￨3 shell￨3 )￨2 {￨2 }￨2 void￨2 updateImage￨2 (￨2 )￨2 {￨2 boolean￨3 drawProgress￨3 =￨3 (￨3 (￨3 progress￨3 )￨3 !=￨3 0￨3 )￨3 &&￨3 (￨3 (￨3 progressState￨3 )￨3 !=￨3 (￨3 SWT￨3 .￨3 DEFAULT￨3 )￨3 )￨3 ;￨3 boolean￨3 drawIntermidiate￨3 =￨3 (￨3 progressState￨3 )￨3 ==￨3 (￨3 SWT￨3 .￨3 INDETERMINATE￨3 )￨3 ;￨3 NSApplication￨3 app￨3 =￨3 NSApplication￨3 .￨3 sharedApplication￨3 (￨3 )￨3 ;￨3 NSDockTile￨3 dock￨3 =￨3 app￨3 .￨3 dockTile￨3 (￨3 )￨3 ;￨3 boolean￨3 drawImage￨3 =￨3 (￨3 (￨3 overlayImage￨3 )￨3 !=￨3 null￨3 )￨3 &&￨3 (￨3 (￨3 dock￨3 .￨3 badgeLabel￨3 (￨3 )￨3 )￨3 ==￨3 null￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 !￨4 drawImage￨4 )￨4 &&￨4 (￨4 !￨4 drawProgress￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 drawIntermidiate￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 app￨4 .￨4 setApplicationIconImage￨4 (￨4 null￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 ;￨4 }￨3 NSSize￨3 size￨3 =￨3 defaultImage￨3 .￨3 size￨3 (￨3 )￨3 ;￨3 NSImage￨3 newImage￨3 =￨3 (￨3 (￨3 NSImage￨3 )￨3 (￨3 new￨3 NSImage￨3 (￨3 )￨3 .￨3 alloc￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 newImage￨3 =￨3 newImage￨3 .￨3 initWithSize￨3 (￨3 size￨3 )￨3 ;￨3 NSBitmapImageRep￨3 rep￨3 =￨3 (￨3 (￨3 NSBitmapImageRep￨3 )￨3 (￨3 new￨3 NSBitmapImageRep￨3 (￨3 )￨3 .￨3 alloc￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 rep￨3 =￨3 rep￨3 .￨3 initWithBitmapDataPlanes￨3 (￨3 0￨3 ,￨3 (￨3 (￨3 int￨3 )￨3 (￨3 size￨3 .￨3 width￨3 )￨3 )￨3 ,￨3 (￨3 (￨3 int￨3 )￨3 (￨3 size￨3 .￨3 height￨3 )￨3 )￨3 ,￨3 8￨3 ,￨3 4￨3 ,￨3 true￨3 ,￨3 false￨3 ,￨3 NSDeviceRGBColorSpace￨3 ,￨3 (￨3 (￨3 OS￨3 .￨3 NSAlphaFirstBitmapFormat￨3 )￨3 |￨3 (￨3 OS￨3 .￨3 NSAlphaNonpremultipliedBitmapFormat￨3 )￨3 )￨3 ,￨3 (￨3 (￨3 (￨3 int￨3 )￨3 (￨3 size￨3 .￨3 width￨3 )￨3 )￨3 *￨3 4￨3 )￨3 ,￨3 32￨3 )￨3 ;￨3 newImage￨3 .￨3 addRepresentation￨3 (￨3 rep￨3 )￨3 ;￨3 rep￨3 .￨3 release￨3 (￨3 )￨3 ;￨3 NSRect￨3 rect￨3 =￨3 new￨3 NSRect￨3 (￨3 )￨3 ;￨3 rect￨3 .￨3 height￨3 =￨3 size￨3 .￨3 height￨3 ;￨3 rect￨3 .￨3 width￨3 =￨3 size￨3 .￨3 width￨3 ;￨3 newImage￨3 .￨3 lockFocus￨3 (￨3 )￨3 ;￨3 defaultImage￨3 .￨3 drawInRect￨3 (￨3 rect￨3 ,￨3 rect￨3 ,￨3 NSCompositeSourceOver￨3 ,￨3 1￨3 )￨3 ;￨3 if￨3 (￨3 drawImage￨4 )￨3 {￨3 NSImage￨4 badgetImage￨4 =￨4 overlayImage￨4 .￨4 handle￨4 ;￨4 NSSize￨4 badgeSize￨4 =￨4 badgetImage￨4 .￨4 size￨4 (￨4 )￨4 ;￨4 NSRect￨4 srcRect￨4 =￨4 new￨4 NSRect￨4 (￨4 )￨4 ;￨4 srcRect￨4 .￨4 height￨4 =￨4 badgeSize￨4 .￨4 height￨4 ;￨4 srcRect￨4 .￨4 width￨4 =￨4 badgeSize￨4 .￨4 width￨4 ;￨4 NSRect￨4 dstRect￨4 =￨4 new￨4 NSRect￨4 (￨4 )￨4 ;￨4 dstRect￨4 .￨4 x￨4 =￨4 (￨4 size￨4 .￨4 width￨4 )￨4 /￨4 2￨4 ;￨4 dstRect￨4 .￨4 height￨4 =￨4 (￨4 size￨4 .￨4 height￨4 )￨4 /￨4 2￨4 ;￨4 dstRect￨4 .￨4 width￨4 =￨4 (￨4 size￨4 .￨4 width￨4 )￨4 /￨4 2￨4 ;￨4 badgetImage￨4 .￨4 drawInRect￨4 (￨4 dstRect￨4 ,￨4 srcRect￨4 ,￨4 NSCompositeSourceOver￨4 ,￨4 1￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 drawIntermidiate￨4 ||￨4 drawProgress￨4 )￨3 {￨3 switch￨4 (￨4 progressState￨4 )￨4 {￨4 case￨5 SWT￨5 .￨5 ERROR￨5 :￨5 NSColor￨6 .￨6 colorWithDeviceRed￨6 (￨6 1￨6 ,￨6 0￨6 ,￨6 0￨6 ,￨6 0.6F￨6 )￨6 .￨6 setFill￨6 (￨6 )￨6 ;￨6 break￨6 ;￨6 case￨5 SWT￨5 .￨5 PAUSED￨5 :￨5 NSColor￨6 .￨6 colorWithDeviceRed￨6 (￨6 1￨6 ,￨6 1￨6 ,￨6 0￨6 ,￨6 0.6F￨6 )￨6 .￨6 setFill￨6 (￨6 )￨6 ;￨6 break￨6 ;￨6 default￨5 :￨5 NSColor￨6 .￨6 colorWithDeviceRed￨6 (￨6 1￨6 ,￨6 1￨6 ,￨6 1￨6 ,￨6 0.6F￨6 )￨6 .￨6 setFill￨6 (￨6 )￨6 ;￨6 }￨4 rect￨4 .￨4 width￨4 =￨4 (￨4 size￨4 .￨4 width￨4 )￨4 /￨4 (￨4 (￨4 (￨4 TaskItem￨4 .￨4 PROGRESS_BARS￨4 )￨4 *￨4 2￨4 )￨4 -￨4 1￨4 )￨4 ;￨4 rect￨4 .￨4 height￨4 =￨4 (￨4 size￨4 .￨4 height￨4 )￨4 /￨4 3￨4 ;￨4 int￨4 count￨4 ;￨4 if￨4 (￨4 drawIntermidiate￨5 )￨4 {￨4 count￨5 =￨5 iProgress￨5 ;￨5 iProgress￨5 =￨5 (￨5 (￨5 iProgress￨5 )￨5 +￨5 1￨5 )￨5 %￨5 (￨5 (￨5 TaskItem￨5 .￨5 PROGRESS_BARS￨5 )￨5 +￨5 1￨5 )￨5 ;￨5 getDisplay￨5 (￨5 )￨5 .￨5 timerExec￨5 (￨5 TaskItem￨5 .￨5 PROGRESS_TIMER￨5 ,￨5 new￨5 Runnable￨5 (￨5 )￨5 {￨5 public￨6 void￨6 run￨6 (￨6 )￨6 {￨6 updateImage￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 count￨5 =￨5 (￨5 (￨5 progress￨5 )￨5 *￨5 (￨5 TaskItem￨5 .￨5 PROGRESS_BARS￨5 )￨5 )￨5 /￨5 (￨5 TaskItem￨5 .￨5 PROGRESS_MAX￨5 )￨5 ;￨5 }￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <=￨5 count￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 rect￨5 .￨5 x￨5 =￨5 (￨5 i￨5 *￨5 2￨5 )￨5 *￨5 (￨5 rect￨5 .￨5 width￨5 )￨5 ;￨5 NSBezierPath￨5 .￨5 fillRect￨5 (￨5 rect￨5 )￨5 ;￨5 }￨4 }￨3 newImage￨3 .￨3 unlockFocus￨3 (￨3 )￨3 ;￨3 app￨3 .￨3 setApplicationIconImage￨3 (￨3 newImage￨3 )￨3 ;￨3 newImage￨3 .￨3 release￨3 (￨3 )￨3 ;￨3 }￨2 void￨2 updateOverlayText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 false￨2 ;￨2 private￨2 Object￨2 returnCode￨2 ;￨2 private￨2 WorkbenchConfigurationInfo￨2 configurationInfo￨2 ;￨2 private￨2 ListenerList￨2 windowListeners￨2 =￨2 new￨2 ListenerList￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 commandLineArgs￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 VERSION_STRING￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULT_WORKBENCH_STATE_FILENAME￨2 =￨2 "workbench.xml"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 RESTORE_CODE_OK￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 RESTORE_CODE_RESET￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 RESTORE_CODE_EXIT￨2 =￨2 2￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 WELCOME_EDITOR_ID￨2 =￨2 "org.eclipse.ui.internal.dialogs.WelcomeEditor"￨2 ;￨2 public￨2 Workbench￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 TASK_LIST_ID￨2 =￨2 (￨2 WorkbenchPlugin￨2 .￨2 PI_WORKBENCH￨2 )￨2 +￨2 ".views.TaskList"￨2 ;￨2 private￨2 IResourceChangeListener￨2 getShowTasksChangeListener￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IMarker￨2 findProblemToShow￨2 (￨2 IResourceChangeEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addWindowListener￨2 (￨2 IWindowListener￨3 l￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeWindowListener￨2 (￨2 IWindowListener￨3 l￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireWindowOpened￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireWindowClosed￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireWindowActivated￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 fireWindowDeactivated￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addAdapters￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 busyClose￨2 (￨2 final￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 saveAllEditors￨2 (￨2 boolean￨3 confirm￨3 )￨2 {￨2 }￨2 private￨2 IWorkbenchWindow￨2 busyOpenWorkbenchWindow￨2 (￨2 String￨2 perspID￨2 ,￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkUpdates￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 Object￨3 returnCode￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 Object￨3 returnCode￨3 ,￨3 final￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 WorkbenchActionBuilder￨2 createActionBuilder￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 private￨2 void￨2 connectToWorkspace￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 disconnectFromWorkspace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 getActiveWorkbenchWindow￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getCommandLineArgs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EditorHistory￨2 getEditorHistory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PerspectiveHistory￨2 getPerspectiveHistory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorRegistry￨2 getEditorRegistry￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 getNewWindowNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPerspectiveRegistry￨2 getPerspectiveRegistry￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PreferenceManager￨2 getPreferenceManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPreferenceStore￨2 getPreferenceStore￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ISharedImages￨2 getSharedImages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IMarkerHelpRegistry￨2 getMarkerHelpRegistry￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WindowManager￨2 getWindowManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WorkbenchConfigurationInfo￨2 getConfigurationInfo￨2 (￨2 )￨2 {￨2 }￨2 private￨2 File￨2 getWorkbenchStateFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWorkbenchWindowCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 [￨2 ]￨2 getWorkbenchWindows￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkingSetManager￨2 getWorkingSetManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 updateKeys￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 init￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 Manager￨3 .￨3 getInstance￨3 (￨3 )￨3 ;￨3 this￨3 .￨3 commandLineArgs￨3 =￨3 commandLineArgs￨3 ;￨3 if￨3 (￨3 WorkbenchPlugin￨4 .￨4 getDefault￨4 (￨4 )￨4 .￨4 isDebugging￨4 (￨4 )￨4 )￨3 {￨3 WorkbenchPlugin￨4 .￨4 DEBUG￨4 =￨4 true￨4 ;￨4 ModalContext￨4 .￨4 setDebugMode￨4 (￨4 true￨4 )￨4 ;￨4 }￨3 initializeProductImage￨3 (￨3 )￨3 ;￨3 connectToWorkspace￨3 (￨3 )￨3 ;￨3 addAdapters￨3 (￨3 )￨3 ;￨3 windowManager￨3 =￨3 new￨3 WindowManager￨3 (￨3 )￨3 ;￨3 WorkbenchColors￨3 .￨3 startup￨3 (￨3 )￨3 ;￨3 boolean￨3 useColorIcons￨3 =￨3 getPreferenceStore￨3 (￨3 )￨3 .￨3 getBoolean￨3 (￨3 COLOR_ICONS￨3 )￨3 ;￨3 ActionContributionItem￨3 .￨3 setUseColorIconsInToolbars￨3 (￨3 useColorIcons￨3 )￨3 ;￨3 initializeFonts￨3 (￨3 )￨3 ;￨3 updateKeys￨3 (￨3 )￨3 ;￨3 initializeSingleClickOption￨3 (￨3 )￨3 ;￨3 boolean￨3 avoidDeadlock￨3 =￨3 true￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 commandLineArgs￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 commandLineArgs￨5 [￨5 i￨5 ]￨5 .￨5 equalsIgnoreCase￨5 (￨5 "-allowDeadlock"￨5 )￨5 )￨4 {￨4 avoidDeadlock￨5 =￨5 false￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 avoidDeadlock￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 Display￨5 display￨5 =￨5 Display￨5 .￨5 getCurrent￨5 (￨5 )￨5 ;￨5 UIWorkspaceLock￨5 uiLock￨5 =￨5 new￨5 UIWorkspaceLock￨5 (￨5 WorkbenchPlugin￨5 .￨5 getPluginWorkspace￨5 (￨5 )￨5 ,￨5 display￨5 )￨5 ;￨5 WorkbenchPlugin￨5 .￨5 getPluginWorkspace￨5 (￨5 )￨5 .￨5 setWorkspaceLock￨5 (￨5 uiLock￨5 )￨5 ;￨5 display￨5 .￨5 setSynchronizer￨5 (￨5 new￨5 UISynchronizer￨5 (￨5 display￨5 ,￨5 uiLock￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 CoreException￨5 e￨5 )￨4 {￨4 e￨5 .￨5 printStackTrace￨5 (￨5 System￨5 .￨5 out￨5 )￨5 ;￨5 }￨4 }￨3 try￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 start￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "Workbench"￨4 )￨4 ;￨4 int￨4 restoreCode￨4 =￨4 openPreviousWorkbenchState￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 restoreCode￨5 ==￨5 (￨5 Workbench￨5 .￨5 RESTORE_CODE_EXIT￨5 )￨5 )￨4 {￨4 return￨5 false￨5 ;￨5 }￨4 if￨4 (￨4 restoreCode￨5 ==￨5 (￨5 Workbench￨5 .￨5 RESTORE_CODE_RESET￨5 )￨5 )￨4 {￨4 openFirstTimeWindow￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 end￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "Workbench"￨4 )￨4 ;￨4 }￨3 forceOpenPerspective￨3 (￨3 commandLineArgs￨3 )￨3 ;￨3 <START_BUG>￨3 getConfigurationInfo￨3 (￨3 )￨3 .￨3 openWelcomeEditors￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 refreshFromLocal￨3 (￨3 commandLineArgs￨3 )￨3 ;￨3 isStarting￨3 =￨3 false￨3 ;￨3 return￨3 true￨3 ;￨3 }￨2 private￨2 void￨2 refreshFromLocal￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 forceOpenPerspective￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 initializeSingleClickOption￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeFonts￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeFont￨2 (￨2 String￨3 fontKey￨3 ,￨3 FontRegistry￨3 registry￨3 ,￨3 IPreferenceStore￨3 store￨3 )￨2 {￨2 }￨2 private￨2 void￨2 initializeProductImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isClosing￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStarting￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WorkbenchWindow￨2 newWorkbenchWindow￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 openFirstTimeWindow￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 openPreviousWorkbenchState￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 openWorkbenchWindow￨2 (￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 openWorkbenchWindow￨2 (￨2 final￨2 String￨2 perspID￨2 ,￨2 final￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 XMLMemento￨2 recordWorkbenchState￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 restart￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IStatus￨2 restoreState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 IPluginDescriptor￨2 [￨2 ]￨2 getEarlyActivatedPlugins￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 startPlugins￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 run￨2 (￨2 Object￨3 arg￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 runEventLoop￨2 (￨2 Window￨3 .￨3 IExceptionHandler￨3 handler￨3 )￨2 {￨2 }￨2 private￨2 IStatus￨2 saveState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 saveWorkbenchState￨2 (￨2 XMLMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setInitializationData￨2 (￨2 IConfigurationElement￨3 configElement￨3 ,￨3 String￨3 propertyName￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 public￨2 IWorkbenchPage￨2 showPerspective￨2 (￨2 String￨2 perspectiveId￨2 ,￨2 IWorkbenchWindow￨2 window￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchPage￨2 showPerspective￨2 (￨2 String￨2 perspectiveId￨2 ,￨2 IWorkbenchWindow￨2 window￨2 ,￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 refreshPluginActions￨2 (￨2 String￨3 pluginId￨3 )￨2 {￨2 }￨2 public￨2 IDecoratorManager￨2 getDecoratorManager￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WeaveMessage￨1 extends￨1 Message￨1 {￨1 public￨2 static￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 WEAVEMESSAGE_DECLAREPARENTSIMPLEMENTS￨2 =￨2 new￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 (￨2 1￨2 ,￨2 "Extending<seq2seq4repair_space>interface<seq2seq4repair_space>set<seq2seq4repair_space>for<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>include<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2 )￨2 ;￨2 public￨2 static￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 WEAVEMESSAGE_ITD￨2 =￨2 new￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 (￨2 2￨2 ,￨2 "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>has<seq2seq4repair_space>intertyped<seq2seq4repair_space>%3<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)"￨2 )￨2 ;￨2 public￨2 static￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 WEAVEMESSAGE_ADVISES￨2 =￨2 new￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 (￨2 3￨2 ,￨2 "Type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>advised<seq2seq4repair_space>by<seq2seq4repair_space>%3<seq2seq4repair_space>advice<seq2seq4repair_space>from<seq2seq4repair_space>'%4'<seq2seq4repair_space>(%5)%6"￨2 )￨2 ;￨2 public￨2 static￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 WEAVEMESSAGE_DECLAREPARENTSEXTENDS￨2 =￨2 new￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 (￨2 4￨2 ,￨2 "Setting<seq2seq4repair_space>superclass<seq2seq4repair_space>of<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>to<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2 )￨2 ;￨2 public￨2 static￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 WEAVEMESSAGE_SOFTENS￨2 =￨2 new￨2 WeaveMessage￨2 .￨2 WeaveMessageKind￨2 (￨2 5￨2 ,￨2 "Softening<seq2seq4repair_space>exceptions<seq2seq4repair_space>in<seq2seq4repair_space>type<seq2seq4repair_space>'%1'<seq2seq4repair_space>(%2)<seq2seq4repair_space>as<seq2seq4repair_space>defined<seq2seq4repair_space>by<seq2seq4repair_space>aspect<seq2seq4repair_space>'%3'<seq2seq4repair_space>(%4)"￨2 )￨2 ;￨2 private￨2 WeaveMessage￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 static￨2 WeaveMessage￨2 constructWeavingMessage￨2 (￨2 WeaveMessage￨3 .￨3 WeaveMessageKind￨3 kind￨3 ,￨3 String￨3 [￨3 ]￨3 inserts￨3 )￨2 {￨2 StringBuffer￨3 str￨3 =￨3 new￨3 StringBuffer￨3 (￨3 kind￨3 .￨3 getMessage￨3 (￨3 )￨3 )￨3 ;￨3 int￨3 pos￨3 =￨3 -￨3 1￨3 ;￨3 <START_BUG>￨3 while￨3 (￨3 (￨3 pos￨3 =￨3 str￨3 .￨3 indexOf￨3 (￨3 "%"￨3 )￨3 )￨3 !=￨3 (￨3 -￨3 1￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 int￨3 n￨3 =￨3 Character￨3 .￨3 getNumericValue￨3 (￨3 str￨3 .￨3 charAt￨3 (￨3 (￨3 pos￨3 +￨3 1￨3 )￨3 )￨3 )￨3 ;￨3 str￨3 .￨3 replace￨3 (￨3 pos￨3 ,￨3 (￨3 pos￨3 +￨3 2￨3 )￨3 ,￨3 inserts￨3 [￨3 (￨3 n￨3 -￨3 1￨3 )￨3 ]￨3 )￨3 ;￨3 }￨3 return￨3 new￨3 WeaveMessage￨3 (￨3 str￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 class￨2 WeaveMessageKind￨2 {￨2 private￨3 int￨3 id￨3 ;￨3 private￨3 String￨3 message￨3 ;￨3 public￨3 WeaveMessageKind￨3 (￨3 int￨4 id￨4 ,￨4 String￨4 message￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getMessage￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 SequenceFilesFromLuceneStorageMRJobTest￨1 extends￨1 AbstractLuceneStorageTest￨1 {￨1 private￨2 SequenceFilesFromLuceneStorageMRJob￨2 lucene2seq￨2 ;￨2 private￨2 LuceneStorageConfiguration￨2 lucene2SeqConf￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 before￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 lucene2seq￨3 =￨3 new￨3 SequenceFilesFromLuceneStorageMRJob￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 Configuration￨3 configuration￨3 =￨3 new￨3 Configuration￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 Path￨3 seqOutputPath￨3 =￨3 new￨3 Path￨3 (￨3 getTestTempDirPath￨3 (￨3 )￨3 ,￨3 "seqOutputPath"￨3 )￨3 ;￨3 lucene2SeqConf￨3 =￨3 new￨3 LuceneStorageConfiguration￨3 (￨3 configuration￨3 ,￨3 Arrays￨3 .￨3 asList￨3 (￨3 getIndexPath1￨3 (￨3 )￨3 ,￨3 getIndexPath2￨3 (￨3 )￨3 )￨3 ,￨3 seqOutputPath￨3 ,￨3 SingleFieldDocument￨3 .￨3 ID_FIELD￨3 ,￨3 Arrays￨3 .￨3 asList￨3 (￨3 FIELD￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 After￨2 public￨2 void￨2 after￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRun￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MultiplexAppenderTest￨1 extends￨1 TestCase￨1 {￨1 private￨2 Logger￨2 root￨2 ;￨2 private￨2 Logger￨2 logger￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 MultiplexAppenderTest￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testIllegalStates￨2 (￨2 )￨2 {￨2 MultiplexAppender￨3 appender￨3 =￨3 null￨3 ;￨3 appender￨3 =￨3 new￨3 MultiplexAppender￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 appender￨4 .￨4 activate￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 fail￨4 (￨4 "Should<seq2seq4repair_space>have<seq2seq4repair_space>thrown<seq2seq4repair_space>an<seq2seq4repair_space>IllegalStateException<seq2seq4repair_space>because<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>configured<seq2seq4repair_space>correctly"￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 }￨3 appender￨3 =￨3 null￨3 ;￨3 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMDCSelector￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testcreateMDCAndDailyRollingAppenderFactory￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "ejb3"￨2 ,￨2 "timer"￨2 )￨2 ;￨2 private￨2 final￨2 ServiceName￨2 timerServiceThreadPool￨2 ;￨2 private￨2 final￨2 String￨2 defaultTimerDataStore￨2 ;￨2 public￨2 TimerServiceDeploymentProcessor￨2 (￨2 final￨3 ServiceName￨3 timerServiceThreadPool￨3 ,￨3 final￨3 String￨3 defaultTimerDataStore￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 deploy￨2 (￨2 final￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 final￨3 EEModuleDescription￨3 moduleDescription￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 EE_MODULE_DESCRIPTION￨3 )￨3 ;￨3 final￨3 Module￨3 module￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 MODULE￨3 )￨3 ;￨3 final￨3 EjbJarMetaData￨3 ejbJarMetaData￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 EJB_JAR_METADATA￨3 )￨3 ;￨3 ServiceName￨3 defaultTimerPersistenceService￨3 =￨3 SERVICE_NAME￨3 .￨3 append￨3 (￨3 defaultTimerDataStore￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 String￨3 ,￨3 ServiceName￨3 >￨3 timerPersistenceServices￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 TimerServiceRegistry￨3 timerServiceRegistry￨3 =￨3 (￨3 EjbDeploymentMarker￨3 .￨3 isEjbDeployment￨3 (￨3 deploymentUnit￨3 )￨3 )￨3 ?￨3 new￨3 TimerServiceRegistry￨3 (￨3 )￨3 :￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 ejbJarMetaData￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 ejbJarMetaData￨4 .￨4 getAssemblyDescriptor￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 List￨4 <￨4 TimerServiceMetaData￨4 >￨4 timerService￨4 =￨4 ejbJarMetaData￨4 .￨4 getAssemblyDescriptor￨4 (￨4 )￨4 .￨4 getAny￨4 (￨4 TimerServiceMetaData￨4 .￨4 class￨4 )￨4 ;￨4 if￨4 (￨4 timerService￨4 !=￨4 null￨4 )￨4 {￨4 for￨5 (￨5 TimerServiceMetaData￨6 data￨6 :￨6 timerService￨6 )￨5 {￨5 if￨6 (￨6 data￨7 .￨7 getEjbName￨7 (￨7 )￨7 .￨7 equals￨7 (￨7 "*"￨7 )￨7 )￨6 {￨6 defaultTimerPersistenceService￨7 =￨7 SERVICE_NAME￨7 .￨7 append￨7 (￨7 data￨7 .￨7 getDataStoreName￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 timerPersistenceServices￨7 .￨7 put￨7 (￨7 data￨7 .￨7 getEjbName￨7 (￨7 )￨7 ,￨7 SERVICE_NAME￨7 .￨7 append￨7 (￨7 data￨7 .￨7 getDataStoreName￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 final￨3 ServiceName￨3 finalDefaultTimerPersistenceService￨3 =￨3 defaultTimerPersistenceService￨3 ;￨3 for￨3 (￨3 final￨4 ComponentDescription￨4 componentDescription￨4 :￨4 moduleDescription￨4 .￨4 getComponentDescriptions￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 componentDescription￨5 .￨5 isTimerServiceApplicable￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 componentDescription￨6 .￨6 isTimerServiceRequired￨6 (￨6 )￨6 )￨5 {￨5 final￨6 String￨6 deploymentName￨6 ;￨6 if￨6 (￨6 (￨7 (￨7 moduleDescription￨7 .￨7 getDistinctName￨7 (￨7 )￨7 )￨7 ==￨7 null￨7 )￨7 ||￨7 (￨7 (￨7 moduleDescription￨7 .￨7 getDistinctName￨7 (￨7 )￨7 .￨7 length￨7 (￨7 )￨7 )￨7 ==￨7 0￨7 )￨7 )￨6 {￨6 deploymentName￨7 =￨7 (￨7 (￨7 moduleDescription￨7 .￨7 getApplicationName￨7 (￨7 )￨7 )￨7 +￨7 "."￨7 )￨7 +￨7 (￨7 moduleDescription￨7 .￨7 getModuleName￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 deploymentName￨7 =￨7 (￨7 (￨7 (￨7 (￨7 moduleDescription￨7 .￨7 getApplicationName￨7 (￨7 )￨7 )￨7 +￨7 "."￨7 )￨7 +￨7 (￨7 moduleDescription￨7 .￨7 getModuleName￨7 (￨7 )￨7 )￨7 )￨7 +￨7 "."￨7 )￨7 +￨7 (￨7 moduleDescription￨7 .￨7 getDistinctName￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 <START_BUG>￨6 ROOT_LOGGER￨6 .￨6 debugf￨6 (￨6 "Installing<seq2seq4repair_space>timer<seq2seq4repair_space>service<seq2seq4repair_space>for<seq2seq4repair_space>component<seq2seq4repair_space>%s"￨6 ,￨6 componentDescription￨6 .￨6 getComponentName￨6 (￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 componentDescription￨6 .￨6 getConfigurators￨6 (￨6 )￨6 .￨6 add￨6 (￨6 new￨6 ComponentConfigurator￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 configure￨7 (￨7 final￨7 DeploymentPhaseContext￨7 context￨7 ,￨7 final￨7 ComponentDescription￨7 description￨7 ,￨7 final￨7 ComponentConfiguration￨7 configuration￨7 )￨7 throws￨7 DeploymentUnitProcessingException￨7 (￨7 )￨7 {￨7 final￨8 EJBComponentDescription￨8 ejbComponentDescription￨8 =￨8 (￨8 (￨8 EJBComponentDescription￨8 )￨8 (￨8 description￨8 )￨8 )￨8 ;￨8 final￨8 ServiceName￨8 invokerServiceName￨8 =￨8 ejbComponentDescription￨8 .￨8 getServiceName￨8 (￨8 )￨8 .￨8 append￨8 (￨8 TimedObjectInvokerImpl￨8 .￨8 SERVICE_NAME￨8 )￨8 ;￨8 final￨8 TimedObjectInvokerImpl￨8 invoker￨8 =￨8 new￨8 TimedObjectInvokerImpl￨8 (￨8 deploymentName￨8 ,￨8 module￨8 )￨8 ;￨8 context￨8 .￨8 getServiceTarget￨8 (￨8 )￨8 .￨8 addService￨8 (￨8 invokerServiceName￨8 ,￨8 invoker￨8 )￨8 .￨8 addDependency￨8 (￨8 componentDescription￨8 .￨8 getCreateServiceName￨8 (￨8 )￨8 ,￨8 EJBComponent￨8 .￨8 class￨8 ,￨8 invoker￨8 .￨8 getEjbComponent￨8 (￨8 )￨8 )￨8 .￨8 install￨8 (￨8 )￨8 ;￨8 final￨8 ServiceName￨8 serviceName￨8 =￨8 componentDescription￨8 .￨8 getServiceName￨8 (￨8 )￨8 .￨8 append￨8 (￨8 TimerServiceImpl￨8 .￨8 SERVICE_NAME￨8 )￨8 ;￨8 final￨8 TimerServiceImpl￨8 service￨8 =￨8 new￨8 TimerServiceImpl￨8 (￨8 ejbComponentDescription￨8 .￨8 getScheduleMethods￨8 (￨8 )￨8 ,￨8 serviceName￨8 ,￨8 timerServiceRegistry￨8 )￨8 ;￨8 final￨8 ServiceBuilder￨8 <￨8 TimerService￨8 >￨8 createBuilder￨8 =￨8 context￨8 .￨8 getServiceTarget￨8 (￨8 )￨8 .￨8 addService￨8 (￨8 serviceName￨8 ,￨8 service￨8 )￨8 ;￨8 createBuilder￨8 .￨8 addDependency￨8 (￨8 TimerServiceDeploymentProcessor￨8 .￨8 TIMER_SERVICE_NAME￨8 ,￨8 Timer￨8 .￨8 class￨8 ,￨8 service￨8 .￨8 getTimerInjectedValue￨8 (￨8 )￨8 )￨8 ;￨8 createBuilder￨8 .￨8 addDependency￨8 (￨8 componentDescription￨8 .￨8 getCreateServiceName￨8 (￨8 )￨8 ,￨8 EJBComponent￨8 .￨8 class￨8 ,￨8 service￨8 .￨8 getEjbComponentInjectedValue￨8 (￨8 )￨8 )￨8 ;￨8 createBuilder￨8 .￨8 addDependency￨8 (￨8 timerServiceThreadPool￨8 ,￨8 ExecutorService￨8 .￨8 class￨8 ,￨8 service￨8 .￨8 getExecutorServiceInjectedValue￨8 (￨8 )￨8 )￨8 ;￨8 if￨8 (￨8 timerPersistenceServices￨8 .￨8 containsKey￨8 (￨8 ejbComponentDescription￨8 .￨8 getEJBName￨8 (￨8 )￨8 )￨8 )￨8 {￨8 createBuilder￨9 .￨9 addDependency￨9 (￨9 timerPersistenceServices￨9 .￨9 get￨9 (￨9 ejbComponentDescription￨9 .￨9 getEJBName￨9 (￨9 )￨9 )￨9 ,￨9 TimerPersistence￨9 .￨9 class￨9 ,￨9 service￨9 .￨9 getTimerPersistence￨9 (￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 {￨8 createBuilder￨9 .￨9 addDependency￨9 (￨9 finalDefaultTimerPersistenceService￨9 ,￨9 TimerPersistence￨9 .￨9 class￨9 ,￨9 service￨9 .￨9 getTimerPersistence￨9 (￨9 )￨9 )￨9 ;￨9 }￨8 createBuilder￨8 .￨8 addDependency￨8 (￨8 invokerServiceName￨8 ,￨8 TimedObjectInvoker￨8 .￨8 class￨8 ,￨8 service￨8 .￨8 getTimedObjectInvoker￨8 (￨8 )￨8 )￨8 ;￨8 createBuilder￨8 .￨8 install￨8 (￨8 )￨8 ;￨8 ejbComponentDescription￨8 .￨8 setTimerService￨8 (￨8 service￨8 )￨8 ;￨8 configuration￨8 .￨8 getStartDependencies￨8 (￨8 )￨8 .￨8 add￨8 (￨8 new￨8 org￨8 .￨8 jboss￨8 .￨8 as￨8 .￨8 ee￨8 .￨8 component￨8 .￨8 DependencyConfigurator￨8 <￨8 ComponentStartService￨8 >￨8 (￨8 )￨8 {￨8 @￨9 Override￨9 public￨9 void￨9 configureDependency￨9 (￨9 final￨9 ServiceBuilder￨9 <￨9 ?￨9 >￨9 serviceBuilder￨9 ,￨9 final￨9 ComponentStartService￨9 service￨9 )￨9 throws￨9 DeploymentUnitProcessingException￨9 (￨9 )￨9 {￨9 serviceBuilder￨10 .￨10 addDependency￨10 (￨10 serviceName￨10 )￨10 ;￨10 }￨9 }￨8 )￨8 ;￨8 }￨7 }￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 componentDescription￨6 .￨6 getConfigurators￨6 (￨6 )￨6 .￨6 add￨6 (￨6 new￨6 ComponentConfigurator￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 configure￨7 (￨7 final￨7 DeploymentPhaseContext￨7 context￨7 ,￨7 final￨7 ComponentDescription￨7 description￨7 ,￨7 final￨7 ComponentConfiguration￨7 configuration￨7 )￨7 throws￨7 DeploymentUnitProcessingException￨7 (￨7 )￨7 {￨7 final￨8 EJBComponentDescription￨8 ejbComponentDescription￨8 =￨8 (￨8 (￨8 EJBComponentDescription￨8 )￨8 (￨8 description￨8 )￨8 )￨8 ;￨8 final￨8 ServiceName￨8 nonFunctionalTimerServiceName￨8 =￨8 NonFunctionalTimerService￨8 .￨8 serviceNameFor￨8 (￨8 ejbComponentDescription￨8 )￨8 ;￨8 final￨8 NonFunctionalTimerService￨8 nonFunctionalTimerService￨8 ;￨8 if￨8 (￨8 ejbComponentDescription￨9 instanceof￨9 StatefulComponentDescription￨9 )￨8 {￨8 nonFunctionalTimerService￨9 =￨9 new￨9 NonFunctionalTimerService￨9 (￨9 EjbLogger￨9 .￨9 ROOT_LOGGER￨9 .￨9 timerServiceMethodNotAllowedForSFSB￨9 (￨9 ejbComponentDescription￨9 .￨9 getComponentName￨9 (￨9 )￨9 )￨9 ,￨9 timerServiceRegistry￨9 )￨9 ;￨9 }￨8 else￨8 {￨8 nonFunctionalTimerService￨9 =￨9 new￨9 NonFunctionalTimerService￨9 (￨9 EjbLogger￨9 .￨9 ROOT_LOGGER￨9 .￨9 ejbHasNoTimerMethods￨9 (￨9 )￨9 ,￨9 timerServiceRegistry￨9 )￨9 ;￨9 }￨8 context￨8 .￨8 getServiceTarget￨8 (￨8 )￨8 .￨8 addService￨8 (￨8 nonFunctionalTimerServiceName￨8 ,￨8 nonFunctionalTimerService￨8 )￨8 .￨8 install￨8 (￨8 )￨8 ;￨8 ejbComponentDescription￨8 .￨8 setTimerService￨8 (￨8 nonFunctionalTimerService￨8 )￨8 ;￨8 configuration￨8 .￨8 getStartDependencies￨8 (￨8 )￨8 .￨8 add￨8 (￨8 new￨8 org￨8 .￨8 jboss￨8 .￨8 as￨8 .￨8 ee￨8 .￨8 component￨8 .￨8 DependencyConfigurator￨8 <￨8 ComponentStartService￨8 >￨8 (￨8 )￨8 (￨8 )￨8 {￨8 @￨9 Override￨9 public￨9 void￨9 configureDependency￨9 (￨9 ServiceBuilder￨9 <￨9 ?￨9 >￨9 serviceBuilder￨9 ,￨9 ComponentStartService￨9 service￨9 )￨9 throws￨9 DeploymentUnitProcessingException￨9 (￨9 )￨9 {￨9 serviceBuilder￨10 .￨10 addDependency￨10 (￨10 nonFunctionalTimerServiceName￨10 )￨10 ;￨10 }￨9 }￨8 )￨8 ;￨8 }￨7 }￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 undeploy￨2 (￨2 final￨3 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PopupMenuExtender￨1 implements￨1 IRegistryChangeListener￨1 ,￨1 IMenuListener2￨1 {￨1 private￨2 static￨2 final￨2 int￨2 STATIC_ACTION_READ￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INCLUDE_EDITOR_INPUT￨2 =￨2 1￨2 <<￨2 1￨2 ;￨2 private￨2 final￨2 MenuManager￨2 menu￨2 ;￨2 private￨2 SubMenuManager￨2 menuWrapper￨2 ;￨2 private￨2 final￨2 ISelectionProvider￨2 selProvider￨2 ;￨2 private￨2 final￨2 IWorkbenchPart￨2 part￨2 ;￨2 private￨2 Map￨2 staticActionBuilders￨2 =￨2 null￨2 ;￨2 private￨2 int￨2 bitSet￨2 =￨2 0￨2 ;￨2 private￨2 ArrayList￨2 contributionCache￨2 =￨2 new￨2 ArrayList￨2 (￨2 )￨2 ;￨2 public￨2 PopupMenuExtender￨2 (￨2 String￨3 id￨3 ,￨3 MenuManager￨3 menu￨3 ,￨3 ISelectionProvider￨3 prov￨3 ,￨3 IWorkbenchPart￨3 part￨3 )￨2 {￨2 }￨2 public￨2 PopupMenuExtender￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 final￨3 MenuManager￨3 menu￨3 ,￨3 final￨3 ISelectionProvider￨3 prov￨3 ,￨3 final￨3 IWorkbenchPart￨3 part￨3 ,￨3 final￨3 boolean￨3 includeEditorInput￨3 )￨2 {￨2 }￨2 public￨2 Set￨2 getMenuIds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 addMenuId￨2 (￨2 final￨3 String￨3 menuId￨3 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 matches￨2 (￨2 final￨3 MenuManager￨3 menuManager￨3 ,￨3 final￨3 ISelectionProvider￨3 selectionProvider￨3 ,￨3 final￨3 IWorkbenchPart￨3 part￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addEditorActions￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addObjectActions￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 clearStaticActions￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addStaticActions￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 public￨2 void￨2 menuAboutToShow￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 contributionsPopulated￨2 =￨2 false￨2 ;￨2 private￨2 void￨2 addMenuContributions￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 menuAboutToHide￨2 (￨2 final￨3 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 private￨2 void￨2 sweepContributions￨2 (￨2 IMenuManager￨3 mgr￨3 )￨2 {￨2 if￨3 (￨3 mgr￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 final￨3 IMenuService￨3 menuService￨3 =￨3 (￨3 (￨3 IMenuService￨3 )￨3 (￨3 part￨3 .￨3 getSite￨3 (￨3 )￨3 .￨3 getService￨3 (￨3 IMenuService￨3 .￨3 class￨3 )￨3 )￨3 )￨3 ;￨3 InternalMenuService￨3 realService￨3 =￨3 (￨3 (￨3 InternalMenuService￨3 )￨3 (￨3 menuService￨3 )￨3 )￨3 ;￨3 IContributionItem￨3 [￨3 ]￨3 items￨3 =￨3 mgr￨3 .￨3 getItems￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨3 i￨3 =￨3 0￨3 ;￨3 i￨3 <￨3 (￨3 items￨3 .￨3 length￨3 )￨3 ;￨3 i￨3 ++￨3 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 items￨4 [￨4 i￨4 ]￨4 )￨4 instanceof￨4 IMenuManager￨4 )￨4 {￨4 <END_BUG>￨4 sweepContributions￨4 (￨4 (￨4 (￨4 IMenuManager￨4 )￨4 (￨4 items￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 )￨4 ;￨4 realService￨4 .￨4 releaseContributions￨4 (￨4 (￨4 (￨4 ContributionManager￨4 )￨4 (￨4 items￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 )￨4 ;￨4 (￨4 (￨4 ContributionManager￨4 )￨4 (￨4 items￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 .￨4 removeAll￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 gatherContributions￨2 (￨2 final￨3 IMenuManager￨3 mgr￨3 )￨2 {￨2 }￨2 private￨2 void￨2 cleanUpContributionCache￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 readStaticActions￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readStaticActionsFor￨2 (￨2 final￨3 String￨3 menuId￨3 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 registryChanged￨2 (￨2 final￨3 IRegistryChangeEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 MenuManager￨2 getManager￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 KittenCaptchaPanel￨1 extends￨1 Panel￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 2711167040323855070L￨2 ;￨2 private￨2 static￨2 BufferedImage￨2 grass￨2 =￨2 KittenCaptchaPanel￨2 .￨2 load￨2 (￨2 "images/grass.png"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 <￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 >￨2 kittens￨2 =￨2 new￨2 ArrayList￨2 <￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 <￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 >￨2 nonKittens￨2 =￨2 new￨2 ArrayList￨2 <￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 Random￨2 random￨2 =￨2 new￨2 Random￨2 (￨2 (￨2 -￨2 1￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 BufferedImage￨2 load￨2 (￨2 final￨3 String￨3 filename￨3 )￨2 {￨2 }￨2 private￨2 final￨2 KittenCaptchaPanel￨2 .￨2 PlacedAnimalList￨2 animals￨2 ;￨2 private￨2 final￨2 Label￨2 animalSelectionLabel￨2 ;￨2 private￨2 final￨2 Image￨2 image￨2 ;￨2 private￨2 final￨2 KittenCaptchaPanel￨2 .￨2 CaptchaImageResource￨2 imageResource￨2 ;￨2 private￨2 final￨2 Dimension￨2 imageSize￨2 ;￨2 public￨2 KittenCaptchaPanel￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 final￨3 Dimension￨3 imageSize￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 allKittensSelected￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 private￨2 KittenCaptchaPanel￨2 .￨2 PlacedAnimal￨2 placeAnimal￨2 (￨2 final￨3 List￨3 <￨3 KittenCaptchaPanel￨3 .￨3 PlacedAnimal￨3 >￨3 animals￨3 ,￨3 final￨3 KittenCaptchaPanel￨3 .￨3 Animal￨3 newAnimal￨3 )￨2 {￨2 }￨2 private￨2 int￨2 random￨2 (￨2 final￨3 int￨3 max￨3 )￨2 {￨2 }￨2 private￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 randomKitten￨2 (￨2 )￨2 {￨2 }￨2 private￨2 KittenCaptchaPanel￨2 .￨2 Animal￨2 randomNonKitten￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 Animal￨2 {￨2 private￨3 final￨3 BufferedImage￨3 highlightedImage￨3 ;￨3 private￨3 final￨3 BufferedImage￨3 image￨3 ;￨3 private￨3 final￨3 boolean￨3 isKitten￨3 ;￨3 private￨3 final￨3 OpaqueRegion￨3 visibleRegion￨3 ;￨3 private￨3 Animal￨3 (￨3 final￨4 String￨4 filename￨4 ,￨4 final￨4 boolean￨4 isKitten￨4 )￨3 {￨3 }￨3 private￨3 BufferedImage￨3 load￨3 (￨3 final￨4 String￨4 filename￨4 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 CaptchaImageResource￨2 extends￨2 DynamicImageResource￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 -￨3 1560784998742404278L￨3 ;￨3 private￨3 final￨3 KittenCaptchaPanel￨3 .￨3 PlacedAnimalList￨3 animals￨3 ;￨3 private￨3 transient￨3 SoftReference￨3 <￨3 byte￨3 [￨3 ]￨3 >￨3 data￨3 =￨3 null￨3 ;￨3 @￨3 Override￨3 protected￨3 void￨3 configureResponse￨3 (￨3 ResourceResponse￨4 response￨4 ,￨4 Attributes￨4 attributes￨4 )￨3 {￨3 super￨4 .￨4 configureResponse￨4 (￨4 response￨4 ,￨4 attributes￨4 )￨4 ;￨4 <START_BUG>￨4 response￨4 .￨4 setCacheDuration￨4 (￨4 0￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 private￨3 CaptchaImageResource￨3 (￨3 final￨4 KittenCaptchaPanel￨4 .￨4 PlacedAnimalList￨4 animals￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 byte￨3 [￨3 ]￨3 getImageData￨3 (￨3 Attributes￨4 attributes￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 invalidate￨3 (￨3 )￨3 {￨3 }￨3 private￨3 boolean￨3 allKittensSelected￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 clearData￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 reset￨3 (￨3 )￨3 {￨3 }￨3 private￨3 String￨3 selectString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 PlacedAnimal￨2 implements￨2 Serializable￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 -￨3 6703909440564862486L￨3 ;￨3 private￨3 transient￨3 KittenCaptchaPanel￨3 .￨3 Animal￨3 animal￨3 ;￨3 private￨3 final￨3 int￨3 index￨3 ;￨3 private￨3 boolean￨3 isHighlighted￨3 ;￨3 private￨3 final￨3 boolean￨3 isKitten￨3 ;￨3 private￨3 final￨3 Point￨3 location￨3 ;￨3 private￨3 final￨3 float￨3 [￨3 ]￨3 scales￨3 =￨3 new￨3 float￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 public￨3 PlacedAnimal￨3 (￨3 final￨4 KittenCaptchaPanel￨4 .￨4 Animal￨4 animal￨4 ,￨4 final￨4 Point￨4 location￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 private￨3 boolean￨3 contains￨3 (￨3 final￨4 Point￨4 point￨4 )￨3 {￨3 }￨3 private￨3 void￨3 draw￨3 (￨3 final￨4 Graphics2D￨4 graphics￨4 )￨3 {￨3 }￨3 private￨3 KittenCaptchaPanel￨3 .￨3 Animal￨3 getAnimal￨3 (￨3 )￨3 {￨3 }￨3 private￨3 float￨3 random￨3 (￨3 float￨4 min￨4 ,￨4 float￨4 max￨4 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 PlacedAnimalList￨2 implements￨2 Serializable￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 6335852594326213439L￨3 ;￨3 private￨3 final￨3 List￨3 <￨3 KittenCaptchaPanel￨3 .￨3 PlacedAnimal￨3 >￨3 animals￨3 =￨3 new￨3 ArrayList￨3 <￨3 KittenCaptchaPanel￨3 .￨3 PlacedAnimal￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 PlacedAnimalList￨3 (￨3 )￨3 {￨3 }￨3 private￨3 boolean￨3 allKittensSelected￨3 (￨3 )￨3 {￨3 }￨3 private￨3 KittenCaptchaPanel￨3 .￨3 PlacedAnimal￨3 atLocation￨3 (￨3 final￨4 Point￨4 location￨4 )￨3 {￨3 }￨3 private￨3 BufferedImage￨3 createImage￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 reset￨3 (￨3 )￨3 {￨3 }￨3 private￨3 String￨3 selectString￨3 (￨3 )￨3 {￨3 }￨3 private￨3 OpaqueRegion￨3 visibleRegion￨3 (￨3 final￨4 KittenCaptchaPanel￨4 .￨4 PlacedAnimal￨4 animal￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 UMLLinkedList￨1 extends￨1 UMLList2￨1 implements￨1 MouseListener￨1 {￨1 public￨2 UMLLinkedList￨2 (￨2 UMLModelElementListModel2￨3 dataModel￨3 ,￨3 boolean￨3 showIcon￨3 )￨2 {￨2 }￨2 public￨2 UMLLinkedList￨2 (￨2 UMLModelElementListModel2￨3 dataModel￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 doIt￨2 (￨2 ListSelectionEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 mouseClicked￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 if￨3 (￨3 (￨4 e￨4 .￨4 getSource￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 this￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 e￨5 .￨5 getClickCount￨5 (￨5 )￨5 )￨5 >=￨5 2￨5 )￨5 &&￨5 (￨5 SwingUtilities￨5 .￨5 isLeftMouseButton￨5 (￨5 e￨5 )￨5 )￨5 )￨4 {￨4 Object￨5 o￨5 =￨5 getSelectedValue￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 o￨6 instanceof￨6 MModelElement￨6 )￨5 {￨5 <START_BUG>￨6 TheInstance￨6 .￨6 setTarget￨6 (￨6 o￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 e￨4 .￨4 consume￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 mouseEntered￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 mouseExited￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 mousePressed￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 mouseReleased￨2 (￨2 MouseEvent￨3 e￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 NewLoggingExtension￨1 implements￨1 NewExtension￨1 {￨1 public￨2 static￨2 final￨2 String￨2 SUBSYSTEM_NAME￨2 =￨2 "logging"￨2 ;￨2 private￨2 static￨2 final￨2 PathElement￨2 loggersPath￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 LOGGER￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 PathElement￨2 handlersPath￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 HANDLER￨2 )￨2 ;￨2 public￨2 void￨2 initialize￨2 (￨2 NewExtensionContext￨3 context￨3 )￨2 {￨2 final￨3 SubsystemRegistration￨3 subsystem￨3 =￨3 context￨3 .￨3 registerSubsystem￨3 (￨3 NewLoggingExtension￨3 .￨3 SUBSYSTEM_NAME￨3 )￨3 ;￨3 final￨3 ModelNodeRegistration￨3 registration￨3 =￨3 subsystem￨3 .￨3 registerSubsystemModel￨3 (￨3 SUBSYSTEM￨3 )￨3 ;￨3 registration￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 NewLoggingExtension￨3 .￨3 ADD_INSTANCE￨3 ,￨3 SUBSYSTEM_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 registration￨3 .￨3 registerOperationHandler￨3 (￨3 "set-root-logger"￨3 ,￨3 INSTANCE￨3 ,￨3 SET_ROOT_LOGGER￨3 ,￨3 false￨3 )￨3 ;￨3 registration￨3 .￨3 registerOperationHandler￨3 (￨3 "remove-root-logger"￨3 ,￨3 NewRootLoggerRemove￨3 .￨3 INSTANCE￨3 ,￨3 SET_ROOT_LOGGER￨3 ,￨3 false￨3 )￨3 ;￨3 final￨3 ModelNodeRegistration￨3 loggers￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 NewLoggingExtension￨3 .￨3 loggersPath￨3 ,￨3 NewLoggingSubsystemProviders￨3 .￨3 LOGGER￨3 )￨3 ;￨3 loggers￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 NewLoggerAdd￨3 .￨3 INSTANCE￨3 ,￨3 LOGGER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 loggers￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 NewLoggerRemove￨3 .￨3 INSTANCE￨3 ,￨3 LOGGER_REMOVE￨3 ,￨3 false￨3 )￨3 ;￨3 final￨3 ModelNodeRegistration￨3 handlers￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 NewLoggingExtension￨3 .￨3 handlersPath￨3 ,￨3 HANDLERS￨3 )￨3 ;￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 NewLoggerHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 NewLoggerHandlerRemove￨3 .￨3 INSTANCE￨3 ,￨3 HANDLER_REMOVE￨3 ,￨3 false￨3 )￨3 ;￨3 <START_BUG>￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 "add-async-handler"￨3 ,￨3 NewAsyncHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 ASYNC_HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 "add-console-handler"￨3 ,￨3 NewConsoleHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 CONSOLE_HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 "add-file-handler"￨3 ,￨3 NewFileHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 FILE_HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 "add-periodic-handler"￨3 ,￨3 NewPeriodicFileHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 PERIODIC_HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 handlers￨3 .￨3 registerOperationHandler￨3 (￨3 "add-size-periodic-handler"￨3 ,￨3 NewSizePeriodicFileHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 SIZE_PERIODIC_HANDLER_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 initializeParsers￨2 (￨2 ExtensionParsingContext￨3 context￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 NewLoggingExtension￨2 .￨2 NewLoggingSubsystemAdd￨2 ADD_INSTANCE￨2 =￨2 new￨2 NewLoggingExtension￨2 .￨2 NewLoggingSubsystemAdd￨2 (￨2 )￨2 ;￨2 static￨2 class￨2 NewLoggingSubsystemAdd￨2 implements￨2 ModelAddOperationHandler￨2 {￨2 public￨3 Cancellable￨3 execute￨3 (￨3 final￨4 NewOperationContext￨4 context￨4 ,￨4 final￨4 ModelNode￨4 operation￨4 ,￨4 final￨4 ResultHandler￨4 resultHandler￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TestTimeLimitingCollector￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 final￨2 int￨2 SLOW_DOWN￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 TIME_ALLOWED￨2 =￨2 17￨2 *￨2 (￨2 TestTimeLimitingCollector￨2 .￨2 SLOW_DOWN￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 double￨2 MULTI_THREAD_SLACK￨2 =￨2 7￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_DOCS￨2 =￨2 3000￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_THREADS￨2 =￨2 50￨2 ;￨2 private￨2 Searcher￨2 searcher￨2 ;￨2 private￨2 final￨2 String￨2 FIELD_NAME￨2 =￨2 "body"￨2 ;￨2 private￨2 Query￨2 query￨2 ;￨2 public￨2 TestTimeLimitingCollector￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 [￨3 ]￨3 docText￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 Directory￨3 directory￨3 =￨3 new￨3 RAMDirectory￨3 (￨3 )￨3 ;￨3 IndexWriter￨3 iw￨3 =￨3 new￨3 IndexWriter￨3 (￨3 directory￨3 ,￨3 new￨3 WhitespaceAnalyzer￨3 (￨3 )￨3 ,￨3 true￨3 ,￨3 MaxFieldLength￨3 .￨3 UNLIMITED￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 TestTimeLimitingCollector￨4 .￨4 N_DOCS￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 add￨4 (￨4 docText￨4 [￨4 (￨4 i￨4 %￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 )￨4 ]￨4 ,￨4 iw￨4 )￨4 ;￨4 }￨3 iw￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 searcher￨3 =￨3 new￨3 IndexSearcher￨3 (￨3 directory￨3 ,￨3 true￨3 )￨3 ;￨3 String￨3 qtxt￨3 =￨3 "one"￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 1￨4 ;￨4 i￨4 <￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 qtxt￨4 +=￨4 '<seq2seq4repair_space>'￨4 +￨4 (￨4 docText￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 QueryParser￨3 queryParser￨3 =￨3 new￨3 QueryParser￨3 (￨3 Version￨3 .￨3 LUCENE_CURRENT￨3 ,￨3 FIELD_NAME￨3 ,￨3 new￨3 WhitespaceAnalyzer￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 query￨3 =￨3 queryParser￨3 .￨3 parse￨3 (￨3 qtxt￨3 )￨3 ;￨3 searcher￨3 .￨3 search￨3 (￨3 query￨3 ,￨3 null￨3 ,￨3 1000￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 add￨2 (￨2 String￨2 value￨2 ,￨2 IndexWriter￨2 iw￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 search￨2 (￨2 Collector￨2 collector￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collector￨2 createTimedCollector￨2 (￨2 TestTimeLimitingCollector￨3 .￨3 MyHitCollector￨3 hc￨3 ,￨3 long￨3 timeAllowed￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutGreedy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutNotGreedy￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestTimeout￨2 (￨2 boolean￨3 multiThreaded￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 private￨2 long￨2 maxTime￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 private￨2 String￨2 maxTimeStr￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testModifyResolution￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearchMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestMultiThreads￨2 (￨2 final￨2 boolean￨2 withTimeout￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 MyHitCollector￨2 extends￨2 Collector￨2 {￨2 private￨3 final￨3 BitSet￨3 bits￨3 =￨3 new￨3 BitSet￨3 (￨3 )￨3 ;￨3 private￨3 int￨3 slowdown￨3 =￨3 0￨3 ;￨3 private￨3 int￨3 lastDocCollected￨3 =￨3 -￨3 1￨3 ;￨3 private￨3 int￨3 docBase￨3 =￨3 0￨3 ;￨3 public￨3 void￨3 setSlowDown￨3 (￨3 int￨4 milliseconds￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hitCount￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 getLastDocCollected￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setScorer￨3 (￨3 Scorer￨3 scorer￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 collect￨3 (￨3 final￨3 int￨3 doc￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setNextReader￨3 (￨3 IndexReader￨4 reader￨4 ,￨4 int￨4 base￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 acceptsDocsOutOfOrder￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TCPConfigGui￨1 extends￨1 AbstractConfigGui￨1 {￨1 private￨2 static￨2 final￨2 String￨2 SERVER￨2 =￨2 "server"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PORT￨2 =￨2 "port"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 FILENAME￨2 =￨2 "filename"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 TIMEOUT￨2 =￨2 "timeout"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NODELAY￨2 =￨2 "nodelay"￨2 ;￨2 private￨2 JTextField￨2 server￨2 ;￨2 private￨2 JTextField￨2 port￨2 ;￨2 private￨2 JTextField￨2 filename￨2 ;￨2 private￨2 JTextField￨2 timeout￨2 ;￨2 private￨2 JTextField￨2 nodelay￨2 ;￨2 private￨2 boolean￨2 displayName￨2 =￨2 true￨2 ;￨2 public￨2 TCPConfigGui￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TCPConfigGui￨2 (￨2 boolean￨3 displayName￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getStaticLabel￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 JMeterUtils￨3 .￨3 getResString￨3 (￨3 "tcp_sample_title"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 configure￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyTestElement￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createTimeoutPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createNoDelayPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createServerPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createPortPanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JPanel￨2 createFilenamePanel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 GoLinkStimuli￨1 implements￨1 TreeModelPrereqs￨1 {￨1 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 Localizer￨3 .￨3 localize￨3 (￨3 "Tree"￨3 ,￨3 "Link->Stimuli"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Object￨2 getRoot￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setRoot￨2 (￨2 Object￨3 r￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getChild￨2 (￨2 Object￨3 parent￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getChildCount￨2 (￨2 Object￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getIndexOfChild￨2 (￨2 Object￨3 parent￨3 ,￨3 Object￨3 child￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getChildren￨2 (￨2 Object￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLeaf￨2 (￨2 Object￨3 node￨3 )￨2 {￨2 }￨2 public￨2 void￨2 valueForPathChanged￨2 (￨2 TreePath￨3 path￨3 ,￨3 Object￨3 newValue￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTreeModelListener￨2 (￨2 TreeModelListener￨3 l￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeTreeModelListener￨2 (￨2 TreeModelListener￨3 l￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getPrereqs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getProvidedTypes￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConditionalExpression￨1 extends￨1 OperatorExpression￨1 {￨1 public￨2 Expression￨2 condition￨2 ;￨2 public￨2 Expression￨2 valueIfTrue￨2 ;￨2 public￨2 Expression￨2 valueIfFalse￨2 ;￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 ;￨2 public￨2 Constant￨2 optimizedIfTrueConstant￨2 ;￨2 public￨2 Constant￨2 optimizedIfFalseConstant￨2 ;￨2 int￨2 trueInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 falseInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 mergedInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 ConditionalExpression￨2 (￨2 Expression￨3 condition￨3 ,￨3 Expression￨3 valueIfTrue￨3 ,￨3 Expression￨3 valueIfFalse￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 int￨3 pc￨3 =￨3 codeStream￨3 .￨3 position￨3 ;￨3 BranchLabel￨3 endifLabel￨3 ;￨3 BranchLabel￨3 falseLabel￨3 ;￨3 if￨3 (￨3 (￨4 constant￨4 )￨4 !=￨4 (￨4 Constant￨4 .￨4 NotAConstant￨4 )￨4 )￨3 {￨3 if￨4 (￨4 valueRequired￨5 )￨4 {￨4 codeStream￨5 .￨5 generateConstant￨5 (￨5 constant￨5 ,￨5 implicitConversion￨5 )￨5 ;￨5 }￨4 codeStream￨4 .￨4 recordPositionsFrom￨4 (￨4 pc￨4 ,￨4 this￨4 .￨4 sourceStart￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 Constant￨3 cst￨3 =￨3 condition￨3 .￨3 constant￨3 ;￨3 Constant￨3 condCst￨3 =￨3 condition￨3 .￨3 optimizedBooleanConstant￨3 (￨3 )￨3 ;￨3 boolean￨3 needTruePart￨3 =￨3 !￨3 (￨3 (￨3 (￨3 cst￨3 !=￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 cst￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 false￨3 )￨3 )￨3 ||￨3 (￨3 (￨3 condCst￨3 !=￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 condCst￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 false￨3 )￨3 )￨3 )￨3 ;￨3 boolean￨3 needFalsePart￨3 =￨3 !￨3 (￨3 (￨3 (￨3 cst￨3 !=￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 cst￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 true￨3 )￨3 )￨3 ||￨3 (￨3 (￨3 condCst￨3 !=￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 condCst￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 true￨3 )￨3 )￨3 )￨3 ;￨3 endifLabel￨3 =￨3 new￨3 BranchLabel￨3 (￨3 codeStream￨3 )￨3 ;￨3 boolean￨3 needConditionValue￨3 =￨3 (￨3 cst￨3 ==￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 condCst￨3 ==￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 )￨3 ;￨3 falseLabel￨3 =￨3 new￨3 BranchLabel￨3 (￨3 codeStream￨3 )￨3 ;￨3 falseLabel￨3 .￨3 tagBits￨3 |=￨3 BranchLabel￨3 .￨3 USED￨3 ;￨3 condition￨3 .￨3 generateOptimizedBoolean￨3 (￨3 currentScope￨3 ,￨3 codeStream￨3 ,￨3 null￨3 ,￨3 falseLabel￨3 ,￨3 needConditionValue￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 trueInitStateIndex￨4 )￨4 !=￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 codeStream￨4 .￨4 removeNotDefinitelyAssignedVariables￨4 (￨4 currentScope￨4 ,￨4 trueInitStateIndex￨4 )￨4 ;￨4 codeStream￨4 .￨4 addDefinitelyAssignedVariables￨4 (￨4 currentScope￨4 ,￨4 trueInitStateIndex￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 needTruePart￨4 )￨3 {￨3 valueIfTrue￨4 .￨4 generateCode￨4 (￨4 currentScope￨4 ,￨4 codeStream￨4 ,￨4 valueRequired￨4 )￨4 ;￨4 if￨4 (￨4 needFalsePart￨5 )￨4 {￨4 int￨5 position￨5 =￨5 codeStream￨5 .￨5 position￨5 ;￨5 codeStream￨5 .￨5 goto_￨5 (￨5 endifLabel￨5 )￨5 ;￨5 codeStream￨5 .￨5 updateLastRecordedEndPC￨5 (￨5 currentScope￨5 ,￨5 position￨5 )￨5 ;￨5 if￨5 (￨5 valueRequired￨6 )￨5 {￨5 codeStream￨6 .￨6 decrStackSize￨6 (￨6 (￨6 (￨6 (￨6 this￨6 .￨6 resolvedType￨6 )￨6 ==￨6 (￨6 TypeBinding￨6 .￨6 LONG￨6 )￨6 )￨6 ||￨6 (￨6 (￨6 this￨6 .￨6 resolvedType￨6 )￨6 ==￨6 (￨6 TypeBinding￨6 .￨6 DOUBLE￨6 )￨6 )￨6 ?￨6 2￨6 :￨6 1￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 needFalsePart￨4 )￨3 {￨3 if￨4 (￨4 (￨5 falseInitStateIndex￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 codeStream￨5 .￨5 removeNotDefinitelyAssignedVariables￨5 (￨5 currentScope￨5 ,￨5 falseInitStateIndex￨5 )￨5 ;￨5 codeStream￨5 .￨5 addDefinitelyAssignedVariables￨5 (￨5 currentScope￨5 ,￨5 falseInitStateIndex￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 if￨4 (￨4 falseLabel￨4 .￨4 hasForwardReferences￨4 (￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 falseLabel￨4 .￨4 place￨4 (￨4 )￨4 ;￨4 }￨4 valueIfFalse￨4 .￨4 generateCode￨4 (￨4 currentScope￨4 ,￨4 codeStream￨4 ,￨4 valueRequired￨4 )￨4 ;￨4 if￨4 (￨4 valueRequired￨5 )￨4 {￨4 codeStream￨5 .￨5 recordExpressionType￨5 (￨5 this￨5 .￨5 resolvedType￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 needTruePart￨5 )￨4 {￨4 endifLabel￨5 .￨5 place￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 mergedInitStateIndex￨4 )￨4 !=￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 codeStream￨4 .￨4 removeNotDefinitelyAssignedVariables￨4 (￨4 currentScope￨4 ,￨4 mergedInitStateIndex￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 valueRequired￨4 )￨3 {￨3 codeStream￨4 .￨4 generateImplicitConversion￨4 (￨4 implicitConversion￨4 )￨4 ;￨4 }￨3 codeStream￨3 .￨3 recordPositionsFrom￨3 (￨3 pc￨3 ,￨3 this￨3 .￨3 sourceStart￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 generateOptimizedBoolean￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 BranchLabel￨3 trueLabel￨3 ,￨3 BranchLabel￨3 falseLabel￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 int￨2 nullStatus￨2 (￨2 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printExpressionNoParenthesis￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ResourceStreamResource￨1 extends￨1 AbstractResource￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 ResourceStreamResource￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 IResourceStream￨2 stream￨2 ;￨2 private￨2 String￨2 fileName￨2 ;￨2 private￨2 ContentDisposition￨2 contentDisposition￨2 =￨2 ContentDisposition￨2 .￨2 INLINE￨2 ;￨2 private￨2 String￨2 textEncoding￨2 ;￨2 private￨2 String￨2 mimeType￨2 ;￨2 public￨2 ResourceStreamResource￨2 (￨2 IResourceStream￨2 stream￨2 )￨2 {￨2 }￨2 public￨2 ResourceStreamResource￨2 setFileName￨2 (￨2 String￨3 fileName￨3 )￨2 {￨2 }￨2 public￨2 ResourceStreamResource￨2 setContentDisposition￨2 (￨2 ContentDisposition￨3 contentDisposition￨3 )￨2 {￨2 }￨2 public￨2 ResourceStreamResource￨2 setTextEncoding￨2 (￨2 String￨3 textEncoding￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 ResourceResponse￨2 newResourceResponse￨2 (￨2 Attributes￨3 attributes￨3 )￨2 {￨2 ResourceResponse￨3 data￨3 =￨3 new￨3 ResourceResponse￨3 (￨3 )￨3 ;￨3 Time￨3 lastModifiedTime￨3 =￨3 stream￨3 .￨3 lastModifiedTime￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 lastModifiedTime￨4 !=￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 data￨4 .￨4 setLastModified￨4 (￨4 lastModifiedTime￨4 .￨4 toDate￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 if￨3 (￨3 data￨4 .￨4 dataNeedsToBeWritten￨4 (￨4 attributes￨4 )￨4 )￨3 {￨3 InputStream￨4 inputStream￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 stream￨5 )￨5 instanceof￨5 IResourceStreamWriter￨5 )￨5 ==￨5 false￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 inputStream￨6 =￨6 stream￨6 .￨6 getInputStream￨6 (￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 ResourceStreamNotFoundException￨6 e￨6 )￨5 {￨5 data￨6 .￨6 setError￨6 (￨6 SC_NOT_FOUND￨6 )￨6 ;￨6 close￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 data￨4 .￨4 setContentDisposition￨4 (￨4 contentDisposition￨4 )￨4 ;￨4 Bytes￨4 length￨4 =￨4 stream￨4 .￨4 length￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 length￨5 !=￨5 null￨5 )￨4 {￨4 data￨5 .￨5 setContentLength￨5 (￨5 length￨5 .￨5 bytes￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 data￨4 .￨4 setFileName￨4 (￨4 fileName￨4 )￨4 ;￨4 data￨4 .￨4 setContentType￨4 (￨4 stream￨4 .￨4 getContentType￨4 (￨4 )￨4 )￨4 ;￨4 data￨4 .￨4 setTextEncoding￨4 (￨4 textEncoding￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 stream￨5 )￨5 instanceof￨5 IResourceStreamWriter￨5 )￨4 {￨4 data￨5 .￨5 setWriteCallback￨5 (￨5 new￨5 WriteCallback￨5 (￨5 )￨5 {￨5 @￨6 Override￨6 public￨6 void￨6 writeData￨6 (￨6 Attributes￨7 attributes￨7 )￨6 {￨6 (￨7 (￨7 IResourceStreamWriter￨7 )￨7 (￨7 stream￨7 )￨7 )￨7 .￨7 write￨7 (￨7 attributes￨7 .￨7 getResponse￨7 (￨7 )￨7 )￨7 ;￨7 close￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 final￨5 InputStream￨5 s￨5 =￨5 inputStream￨5 ;￨5 data￨5 .￨5 setWriteCallback￨5 (￨5 new￨5 WriteCallback￨5 (￨5 )￨5 {￨5 @￨6 Override￨6 public￨6 void￨6 writeData￨6 (￨6 Attributes￨7 attributes￨7 )￨6 {￨6 try￨7 (￨7 )￨7 {￨7 writeStream￨8 (￨8 attributes￨8 ,￨8 s￨8 )￨8 ;￨8 }￨7 finally￨7 (￨7 )￨7 {￨7 close￨8 (￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 data￨3 ;￨3 }￨2 private￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BeansXmlProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 String￨2 WEB_INF_BEANS_XML￨2 =￨2 "WEB-INF/beans.xml"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 META_INF_BEANS_XML￨2 =￨2 "META-INF/beans.xml"￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 BeansXmlParser￨3 parser￨3 =￨3 new￨3 BeansXmlParser￨3 (￨3 )￨3 ;￨3 Set￨3 <￨3 BeanArchiveMetadata￨3 >￨3 beanArchiveMetadata￨3 =￨3 new￨3 HashSet￨3 <￨3 BeanArchiveMetadata￨3 >￨3 (￨3 )￨3 ;￨3 ResourceRoot￨3 deploymentRoot￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 DEPLOYMENT_ROOT￨3 )￨3 ;￨3 if￨3 (￨3 deploymentRoot￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 ResourceRoot￨3 classesRoot￨3 =￨3 null￨3 ;￨3 List￨3 <￨3 ResourceRoot￨3 >￨3 structure￨3 =￨3 deploymentUnit￨3 .￨3 getAttachmentList￨3 (￨3 RESOURCE_ROOTS￨3 )￨3 ;￨3 for￨3 (￨3 ResourceRoot￨4 resourceRoot￨4 :￨4 structure￨4 )￨3 {￨3 if￨4 (￨4 (￨5 ModuleRootMarker￨5 .￨5 isModuleRoot￨5 (￨5 resourceRoot￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 SubDeploymentMarker￨5 .￨5 isSubDeployment￨5 (￨5 resourceRoot￨5 )￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 resourceRoot￨6 .￨6 getRootName￨6 (￨6 )￨6 .￨6 equals￨6 (￨6 "classes"￨6 )￨6 )￨5 {￨5 classesRoot￨6 =￨6 resourceRoot￨6 ;￨6 }￨5 else￨5 {￨5 VirtualFile￨6 beansXml￨6 =￨6 resourceRoot￨6 .￨6 getRoot￨6 (￨6 )￨6 .￨6 getChild￨6 (￨6 BeansXmlProcessor￨6 .￨6 META_INF_BEANS_XML￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 beansXml￨7 .￨7 exists￨7 (￨7 )￨7 )￨7 &&￨7 (￨7 beansXml￨7 .￨7 isFile￨7 (￨7 )￨7 )￨7 )￨6 {￨6 DEPLOYMENT_LOGGER￨7 .￨7 debugf￨7 (￨7 "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨7 ,￨7 beansXml￨7 .￨7 toString￨7 (￨7 )￨7 )￨7 ;￨7 beanArchiveMetadata￨7 .￨7 add￨7 (￨7 new￨7 BeanArchiveMetadata￨7 (￨7 beansXml￨7 ,￨7 resourceRoot￨7 ,￨7 parseBeansXml￨7 (￨7 beansXml￨7 ,￨7 parser￨7 ,￨7 deploymentUnit￨7 )￨7 ,￨7 false￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 if￨3 (￨3 DeploymentTypeMarker￨4 .￨4 isType￨4 (￨4 WAR￨4 ,￨4 deploymentUnit￨4 )￨4 )￨3 {￨3 final￨4 VirtualFile￨4 rootBeansXml￨4 =￨4 deploymentRoot￨4 .￨4 getRoot￨4 (￨4 )￨4 .￨4 getChild￨4 (￨4 BeansXmlProcessor￨4 .￨4 WEB_INF_BEANS_XML￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 rootBeansXml￨4 .￨4 exists￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 rootBeansXml￨4 .￨4 isFile￨4 (￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 DEPLOYMENT_LOGGER￨4 .￨4 debugf￨4 (￨4 "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨4 ,￨4 rootBeansXml￨4 )￨4 ;￨4 beanArchiveMetadata￨4 .￨4 add￨4 (￨4 new￨4 BeanArchiveMetadata￨4 (￨4 rootBeansXml￨4 ,￨4 classesRoot￨4 ,￨4 parseBeansXml￨4 (￨4 rootBeansXml￨4 ,￨4 parser￨4 ,￨4 deploymentUnit￨4 )￨4 ,￨4 true￨4 )￨4 )￨4 ;￨4 else￨4 if￨4 (￨4 classesRoot￨5 !=￨5 null￨5 )￨4 {￨4 VirtualFile￨5 beansXml￨5 =￨5 classesRoot￨5 .￨5 getRoot￨5 (￨5 )￨5 .￨5 getChild￨5 (￨5 BeansXmlProcessor￨5 .￨5 META_INF_BEANS_XML￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 beansXml￨6 .￨6 exists￨6 (￨6 )￨6 )￨6 &&￨6 (￨6 beansXml￨6 .￨6 isFile￨6 (￨6 )￨6 )￨6 )￨5 {￨5 DEPLOYMENT_LOGGER￨6 .￨6 beansXmlInNonStandardLocation￨6 (￨6 beansXml￨6 .￨6 toString￨6 (￨6 )￨6 )￨6 ;￨6 beanArchiveMetadata￨6 .￨6 add￨6 (￨6 new￨6 BeanArchiveMetadata￨6 (￨6 beansXml￨6 ,￨6 classesRoot￨6 ,￨6 parseBeansXml￨6 (￨6 beansXml￨6 ,￨6 parser￨6 ,￨6 deploymentUnit￨6 )￨6 ,￨6 true￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 else￨3 if￨3 (￨3 !￨4 (￨4 DeploymentTypeMarker￨4 .￨4 isType￨4 (￨4 EAR￨4 ,￨4 deploymentUnit￨4 )￨4 )￨4 )￨3 {￨3 final￨4 VirtualFile￨4 rootBeansXml￨4 =￨4 deploymentRoot￨4 .￨4 getRoot￨4 (￨4 )￨4 .￨4 getChild￨4 (￨4 BeansXmlProcessor￨4 .￨4 META_INF_BEANS_XML￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 rootBeansXml￨5 .￨5 exists￨5 (￨5 )￨5 )￨5 &&￨5 (￨5 rootBeansXml￨5 .￨5 isFile￨5 (￨5 )￨5 )￨5 )￨4 {￨4 DEPLOYMENT_LOGGER￨5 .￨5 debugf￨5 (￨5 "Found<seq2seq4repair_space>beans.xml:<seq2seq4repair_space>%s"￨5 ,￨5 rootBeansXml￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 beanArchiveMetadata￨5 .￨5 add￨5 (￨5 new￨5 BeanArchiveMetadata￨5 (￨5 rootBeansXml￨5 ,￨5 deploymentRoot￨5 ,￨5 parseBeansXml￨5 (￨5 rootBeansXml￨5 ,￨5 parser￨5 ,￨5 deploymentUnit￨5 )￨5 ,￨5 true￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 !￨4 (￨4 beanArchiveMetadata￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 WeldDeploymentMetadata￨4 deploymentMetadata￨4 =￨4 new￨4 WeldDeploymentMetadata￨4 (￨4 beanArchiveMetadata￨4 )￨4 ;￨4 deploymentUnit￨4 .￨4 putAttachment￨4 (￨4 ATTACHMENT_KEY￨4 ,￨4 deploymentMetadata￨4 )￨4 ;￨4 WeldDeploymentMarker￨4 .￨4 mark￨4 (￨4 deploymentUnit￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 deploymentUnit￨5 .￨5 getParent￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 WeldDeploymentMarker￨5 .￨5 mark￨5 (￨5 deploymentUnit￨5 .￨5 getParent￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 private￨2 BeansXml￨2 parseBeansXml￨2 (￨2 VirtualFile￨2 beansXmlFile￨2 ,￨2 BeansXmlParser￨2 parser￨2 ,￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 GrantNode￨1 extends￨1 MiscellaneousStatementNode￨1 {￨1 private￨2 PrivilegeNode￨2 privileges￨2 ;￨2 private￨2 List￨2 grantees￨2 ;￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 statementToString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 Object￨3 privileges￨3 ,￨3 Object￨3 grantees￨3 )￨2 {￨2 }￨2 public￨2 QueryTreeNode￨2 bind￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 privileges￨3 =￨3 (￨3 (￨3 PrivilegeNode￨3 )￨3 (￨3 privileges￨3 .￨3 bind￨3 (￨3 new￨3 HashMap￨3 (￨3 )￨3 ,￨3 grantees￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 this￨3 ;￨3 }￨2 public￨2 ConstantAction￨2 makeConstantAction￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 WorkingCopyOwner￨1 {￨1 public￨2 static￨2 void￨2 setPrimaryBufferProvider￨2 (￨2 WorkingCopyOwner￨3 primaryBufferProvider￨3 )￨2 {￨2 }￨2 public￨2 IBuffer￨2 createBuffer￨2 (￨2 ICompilationUnit￨3 workingCopy￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 BufferManager￨3 .￨3 getDefaultBufferManager￨3 (￨3 )￨3 .￨3 createBuffer￨3 (￨3 workingCopy￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 final￨2 ICompilationUnit￨2 newWorkingCopy￨2 (￨2 String￨2 name￨2 ,￨2 IClasspathEntry￨2 [￨2 ]￨2 classpath￨2 ,￨2 IProblemRequestor￨2 problemRequestor￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConcreteAspectCodeGen￨1 {￨1 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 EMPTY_STRINGS￨2 =￨2 new￨2 String￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 static￨2 final￨2 Type￨2 [￨2 ]￨2 EMPTY_TYPES￨2 =￨2 new￨2 Type￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 final￨2 ConcreteAspect￨2 m_concreteAspect￨2 ;￨2 private￨2 final￨2 World￨2 m_world￨2 ;￨2 private￨2 boolean￨2 m_isValid￨2 =￨2 false￨2 ;￨2 private￨2 ResolvedType￨2 m_parent￨2 ;￨2 private￨2 PerClause￨2 m_perClause￨2 ;￨2 ConcreteAspectCodeGen￨2 (￨2 Definition￨3 .￨3 ConcreteAspect￨3 concreteAspect￨3 ,￨3 World￨3 world￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 validate￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 stringify￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 getBytes￨2 (￨2 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 m_isValid￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 "Must<seq2seq4repair_space>validate<seq2seq4repair_space>first"￨4 )￨4 ;￨4 }￨3 LazyClassGen￨3 cg￨3 =￨3 new￨3 LazyClassGen￨3 (￨3 m_concreteAspect￨3 .￨3 name￨3 .￨3 replace￨3 (￨3 '.'￨3 ,￨3 '/'￨3 )￨3 ,￨3 m_parent￨3 .￨3 getName￨3 (￨3 )￨3 ,￨3 null￨3 ,￨3 (￨3 (￨3 Modifier￨3 .￨3 PUBLIC￨3 )￨3 +￨3 (￨3 Constants￨3 .￨3 ACC_SUPER￨3 )￨3 )￨3 ,￨3 ConcreteAspectCodeGen￨3 .￨3 EMPTY_STRINGS￨3 ,￨3 m_world￨3 )￨3 ;￨3 AnnotationGen￨3 ag￨3 =￨3 new￨3 AnnotationGen￨3 (￨3 new￨3 ObjectType￨3 (￨3 "org/aspectj/lang/annotation/Aspect"￨3 )￨3 ,￨3 Collections￨3 .￨3 EMPTY_LIST￨3 ,￨3 true￨3 ,￨3 cg￨3 .￨3 getConstantPoolGen￨3 (￨3 )￨3 )￨3 ;￨3 cg￨3 .￨3 addAnnotation￨3 (￨3 ag￨3 .￨3 getAnnotation￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 m_concreteAspect￨4 .￨4 precedence￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 SimpleElementValueGen￨4 svg￨4 =￨4 new￨4 SimpleElementValueGen￨4 (￨4 ElementValueGen￨4 .￨4 STRING￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 ,￨4 m_concreteAspect￨4 .￨4 precedence￨4 )￨4 ;￨4 List￨4 elems￨4 =￨4 new￨4 ArrayList￨4 (￨4 )￨4 ;￨4 elems￨4 .￨4 add￨4 (￨4 new￨4 org￨4 .￨4 aspectj￨4 .￨4 apache￨4 .￨4 bcel￨4 .￨4 generic￨4 .￨4 annotation￨4 .￨4 ElementNameValuePairGen￨4 (￨4 "value"￨4 ,￨4 svg￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 AnnotationGen￨4 agprec￨4 =￨4 new￨4 AnnotationGen￨4 (￨4 new￨4 ObjectType￨4 (￨4 "org/aspectj/lang/annotation/DeclarePrecedence"￨4 )￨4 ,￨4 elems￨4 ,￨4 true￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 )￨4 ;￨4 cg￨4 .￨4 addAnnotation￨4 (￨4 agprec￨4 .￨4 getAnnotation￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 LazyMethodGen￨3 init￨3 =￨3 new￨3 LazyMethodGen￨3 (￨3 Modifier￨3 .￨3 PUBLIC￨3 ,￨3 Type￨3 .￨3 VOID￨3 ,￨3 "<init>"￨3 ,￨3 ConcreteAspectCodeGen￨3 .￨3 EMPTY_TYPES￨3 ,￨3 ConcreteAspectCodeGen￨3 .￨3 EMPTY_STRINGS￨3 ,￨3 cg￨3 )￨3 ;￨3 InstructionList￨3 cbody￨3 =￨3 init￨3 .￨3 getBody￨3 (￨3 )￨3 ;￨3 cbody￨3 .￨3 append￨3 (￨3 ALOAD_0￨3 )￨3 ;￨3 cbody￨3 .￨3 append￨3 (￨3 cg￨3 .￨3 getFactory￨3 (￨3 )￨3 .￨3 createInvoke￨3 (￨3 m_parent￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 replace￨3 (￨3 '.'￨3 ,￨3 '/'￨3 )￨3 ,￨3 "<init>"￨3 ,￨3 VOID￨3 ,￨3 ConcreteAspectCodeGen￨3 .￨3 EMPTY_TYPES￨3 ,￨3 INVOKESPECIAL￨3 )￨3 )￨3 ;￨3 cbody￨3 .￨3 append￨3 (￨3 RETURN￨3 )￨3 ;￨3 cg￨3 .￨3 addMethodGen￨3 (￨3 init￨3 )￨3 ;￨3 for￨3 (￨3 Iterator￨4 it￨4 =￨4 m_concreteAspect￨4 .￨4 pointcuts￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 it￨4 .￨4 hasNext￨4 (￨4 )￨4 ;￨4 )￨3 {￨3 Definition￨4 .￨4 Pointcut￨4 abstractPc￨4 =￨4 (￨4 (￨4 Definition￨4 .￨4 Pointcut￨4 )￨4 (￨4 it￨4 .￨4 next￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 LazyMethodGen￨4 mg￨4 =￨4 new￨4 LazyMethodGen￨4 (￨4 Modifier￨4 .￨4 PUBLIC￨4 ,￨4 Type￨4 .￨4 VOID￨4 ,￨4 abstractPc￨4 .￨4 name￨4 ,￨4 ConcreteAspectCodeGen￨4 .￨4 EMPTY_TYPES￨4 ,￨4 ConcreteAspectCodeGen￨4 .￨4 EMPTY_STRINGS￨4 ,￨4 cg￨4 )￨4 ;￨4 SimpleElementValueGen￨4 svg￨4 =￨4 new￨4 SimpleElementValueGen￨4 (￨4 ElementValueGen￨4 .￨4 STRING￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 ,￨4 abstractPc￨4 .￨4 expression￨4 )￨4 ;￨4 List￨4 elems￨4 =￨4 new￨4 ArrayList￨4 (￨4 )￨4 ;￨4 elems￨4 .￨4 add￨4 (￨4 new￨4 org￨4 .￨4 aspectj￨4 .￨4 apache￨4 .￨4 bcel￨4 .￨4 generic￨4 .￨4 annotation￨4 .￨4 ElementNameValuePairGen￨4 (￨4 "value"￨4 ,￨4 svg￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 AnnotationGen￨4 mag￨4 =￨4 new￨4 AnnotationGen￨4 (￨4 new￨4 ObjectType￨4 (￨4 "org/aspectj/lang/annotation/Pointcut"￨4 )￨4 ,￨4 elems￨4 ,￨4 true￨4 ,￨4 cg￨4 .￨4 getConstantPoolGen￨4 (￨4 )￨4 )￨4 ;￨4 AnnotationX￨4 max￨4 =￨4 new￨4 AnnotationX￨4 (￨4 mag￨4 .￨4 getAnnotation￨4 (￨4 )￨4 ,￨4 m_world￨4 )￨4 ;￨4 mg￨4 .￨4 addAnnotation￨4 (￨4 max￨4 )￨4 ;￨4 InstructionList￨4 body￨4 =￨4 mg￨4 .￨4 getBody￨4 (￨4 )￨4 ;￨4 body￨4 .￨4 append￨4 (￨4 RETURN￨4 )￨4 ;￨4 cg￨4 .￨4 addMethodGen￨4 (￨4 mg￨4 )￨4 ;￨4 }￨3 BcelPerClauseAspectAdder￨3 perClauseMunger￨3 =￨3 new￨3 BcelPerClauseAspectAdder￨3 (￨3 ResolvedType￨3 .￨3 forName￨3 (￨3 m_concreteAspect￨3 .￨3 name￨3 )￨3 .￨3 resolve￨3 (￨3 m_world￨3 )￨3 ,￨3 m_perClause￨3 .￨3 getKind￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 perClauseMunger￨3 .￨3 forceMunge￨3 (￨3 cg￨3 )￨3 ;￨3 <END_BUG>￨3 JavaClass￨3 jc￨3 =￨3 cg￨3 .￨3 getJavaClass￨3 (￨3 (￨3 (￨3 BcelWorld￨3 )￨3 (￨3 m_world￨3 )￨3 )￨3 )￨3 ;￨3 (￨3 (￨3 BcelWorld￨3 )￨3 (￨3 m_world￨3 )￨3 )￨3 .￨3 addSourceObjectType￨3 (￨3 jc￨3 )￨3 ;￨3 return￨3 jc￨3 .￨3 getBytes￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 reportError￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 UnionNode￨1 extends￨1 SetOperatorNode￨1 {￨1 private￨2 boolean￨2 addNewNodesCalled￨2 ;￨2 boolean￨2 tableConstructor￨2 ;￨2 boolean￨2 topTableConstructor￨2 ;￨2 public￨2 void￨2 init￨2 (￨2 Object￨2 leftResult￨2 ,￨2 Object￨2 rightResult￨2 ,￨2 Object￨2 all￨2 ,￨2 Object￨2 tableConstructor￨2 ,￨2 Object￨2 tableProperties￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 markTopTableConstructor￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 tableConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 rejectParameters￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setTableConstructorTypes￨2 (￨2 ResultColumnList￨2 typeColumns￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CostEstimate￨2 optimizeIt￨2 (￨2 Optimizer￨2 optimizer￨2 ,￨2 OptimizablePredicateList￨2 predList￨2 ,￨2 CostEstimate￨2 outerCost￨2 ,￨2 RowOrdering￨2 rowOrdering￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 predList￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 getCurrentAccessPath￨4 (￨4 )￨4 .￨4 getJoinStrategy￨4 (￨4 )￨4 .￨4 isHashJoin￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 for￨4 (￨4 int￨5 i￨5 =￨5 (￨5 predList￨5 .￨5 size￨5 (￨5 )￨5 )￨5 -￨5 1￨5 ;￨5 i￨5 >=￨5 0￨5 ;￨5 i￨5 --￨5 )￨4 {￨4 if￨5 (￨5 pushOptPredicate￨6 (￨6 predList￨6 .￨6 getOptPredicate￨6 (￨6 i￨6 )￨6 )￨6 )￨5 {￨5 predList￨6 .￨6 removeOptPredicate￨6 (￨6 i￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 <START_BUG>￨3 addOrLoadBestPlanMapping￨3 (￨3 true￨3 ,￨3 this￨3 )￨3 ;￨3 <END_BUG>￨3 leftResultSet￨3 =￨3 optimizeSource￨3 (￨3 optimizer￨3 ,￨3 leftResultSet￨3 ,￨3 getLeftOptPredicateList￨3 (￨3 )￨3 ,￨3 outerCost￨3 )￨3 ;￨3 rightResultSet￨3 =￨3 optimizeSource￨3 (￨3 optimizer￨3 ,￨3 rightResultSet￨3 ,￨3 getRightOptPredicateList￨3 (￨3 )￨3 ,￨3 outerCost￨3 )￨3 ;￨3 CostEstimate￨3 costEstimate￨3 =￨3 getCostEstimate￨3 (￨3 optimizer￨3 )￨3 ;￨3 costEstimate￨3 .￨3 setCost￨3 (￨3 leftResultSet￨3 .￨3 getCostEstimate￨3 (￨3 )￨3 .￨3 getEstimatedCost￨3 (￨3 )￨3 ,￨3 leftResultSet￨3 .￨3 getCostEstimate￨3 (￨3 )￨3 .￨3 rowCount￨3 (￨3 )￨3 ,￨3 (￨3 (￨3 leftResultSet￨3 .￨3 getCostEstimate￨3 (￨3 )￨3 .￨3 singleScanRowCount￨3 (￨3 )￨3 )￨3 +￨3 (￨3 rightResultSet￨3 .￨3 getCostEstimate￨3 (￨3 )￨3 .￨3 singleScanRowCount￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 costEstimate￨3 .￨3 add￨3 (￨3 costEstimate￨3 ,￨3 costEstimate￨3 )￨3 ;￨3 getCurrentAccessPath￨3 (￨3 )￨3 .￨3 getJoinStrategy￨3 (￨3 )￨3 .￨3 estimateCost￨3 (￨3 this￨3 ,￨3 predList￨3 ,￨3 (￨3 (￨3 ConglomerateDescriptor￨3 )￨3 (￨3 null￨3 )￨3 )￨3 ,￨3 outerCost￨3 ,￨3 optimizer￨3 ,￨3 costEstimate￨3 )￨3 ;￨3 optimizer￨3 .￨3 considerCost￨3 (￨3 this￨3 ,￨3 predList￨3 ,￨3 costEstimate￨3 ,￨3 outerCost￨3 )￨3 ;￨3 return￨3 costEstimate￨3 ;￨3 }￨2 public￨2 void￨2 pushExpressions￨2 (￨2 PredicateList￨2 predicateList￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Optimizable￨2 modifyAccessPath￨2 (￨2 JBitSet￨2 outerTables￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ResultSetNode￨2 modifyAccessPaths￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ResultSetNode￨2 addNewNodes￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 bindExpressions￨2 (￨2 FromList￨2 fromListParam￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generate￨2 (￨2 ActivationClassBuilder￨2 acb￨2 ,￨2 MethodBuilder￨2 mb￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CostEstimate￨2 getFinalCostEstimate￨2 (￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getOperatorName￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CassandraBulkLoader￨1 {￨1 public￨2 static￨2 class￨2 Map￨2 extends￨2 MapReduceBase￨2 implements￨2 Mapper￨2 <￨2 Text￨2 ,￨2 Text￨2 ,￨2 Text￨2 ,￨2 Text￨2 >￨2 {￨2 public￨3 void￨3 map￨3 (￨3 Text￨3 key￨3 ,￨3 Text￨3 value￨3 ,￨3 OutputCollector￨3 <￨3 Text￨3 ,￨3 Text￨3 >￨3 output￨3 ,￨3 Reporter￨3 reporter￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 Reduce￨2 extends￨2 MapReduceBase￨2 implements￨2 Reducer￨2 <￨2 Text￨2 ,￨2 Text￨2 ,￨2 Text￨2 ,￨2 Text￨2 >￨2 {￨2 private￨3 Path￨3 [￨3 ]￨3 localFiles￨3 ;￨3 private￨3 JobConf￨3 jobconf￨3 ;￨3 public￨3 void￨3 configure￨3 (￨3 JobConf￨4 job￨4 )￨3 {￨3 }￨3 public￨3 void￨3 close￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 reduce￨3 (￨3 Text￨3 key￨3 ,￨3 Iterator￨3 <￨3 Text￨3 >￨3 values￨3 ,￨3 OutputCollector￨3 <￨3 Text￨3 ,￨3 Text￨3 >￨3 output￨3 ,￨3 Reporter￨3 reporter￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 void￨2 runJob￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Message￨2 createMessage￨2 (￨2 String￨3 keyspace￨3 ,￨3 byte￨3 [￨3 ]￨3 key￨3 ,￨3 String￨3 columnFamily￨3 ,￨3 List￨3 <￨3 ColumnFamily￨3 >￨3 columnFamilies￨3 )￨2 {￨2 ColumnFamily￨3 baseColumnFamily￨3 ;￨3 DataOutputBuffer￨3 bufOut￨3 =￨3 new￨3 DataOutputBuffer￨3 (￨3 )￨3 ;￨3 RowMutation￨3 rm￨3 ;￨3 Message￨3 message￨3 ;￨3 Column￨3 column￨3 ;￨3 baseColumnFamily￨3 =￨3 new￨3 ColumnFamily￨3 (￨3 ColumnFamilyType￨3 .￨3 Standard￨3 ,￨3 DatabaseDescriptor￨3 .￨3 getComparator￨3 (￨3 keyspace￨3 ,￨3 columnFamily￨3 )￨3 ,￨3 DatabaseDescriptor￨3 .￨3 getSubComparator￨3 (￨3 keyspace￨3 ,￨3 columnFamily￨3 )￨3 ,￨3 CFMetaData￨3 .￨3 getId￨3 (￨3 keyspace￨3 ,￨3 columnFamily￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 ColumnFamily￨4 cf￨4 :￨4 columnFamilies￨4 )￨3 {￨3 bufOut￨4 .￨4 reset￨4 (￨4 )￨4 ;￨4 ColumnFamily￨4 .￨4 serializer￨4 (￨4 )￨4 .￨4 serializeWithIndexes￨4 (￨4 cf￨4 ,￨4 bufOut￨4 )￨4 ;￨4 byte￨4 [￨4 ]￨4 data￨4 =￨4 new￨4 byte￨4 [￨4 bufOut￨4 .￨4 getLength￨4 (￨4 )￨4 ]￨4 ;￨4 System￨4 .￨4 arraycopy￨4 (￨4 bufOut￨4 .￨4 getData￨4 (￨4 )￨4 ,￨4 0￨4 ,￨4 data￨4 ,￨4 0￨4 ,￨4 bufOut￨4 .￨4 getLength￨4 (￨4 )￨4 )￨4 ;￨4 column￨4 =￨4 new￨4 Column￨4 (￨4 FBUtilities￨4 .￨4 toByteBuffer￨4 (￨4 cf￨4 .￨4 id￨4 (￨4 )￨4 )￨4 ,￨4 ByteBuffer￨4 .￨4 wrap￨4 (￨4 data￨4 )￨4 ,￨4 0￨4 )￨4 ;￨4 baseColumnFamily￨4 .￨4 addColumn￨4 (￨4 column￨4 )￨4 ;￨4 }￨3 rm￨3 =￨3 new￨3 RowMutation￨3 (￨3 keyspace￨3 ,￨3 ByteBuffer￨3 .￨3 wrap￨3 (￨3 key￨3 )￨3 )￨3 ;￨3 rm￨3 .￨3 add￨3 (￨3 baseColumnFamily￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 message￨4 =￨4 rm￨4 .￨4 makeRowMutationMessage￨4 (￨4 BINARY￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 return￨3 message￨3 ;￨3 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 War￨1 extends￨1 Jar￨1 {￨1 private￨2 File￨2 deploymentDescriptor￨2 ;￨2 private￨2 boolean￨2 descriptorAdded￨2 ;￨2 public￨2 War￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setWarfile￨2 (￨2 File￨3 warFile￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWebxml￨2 (￨2 File￨3 descr￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addLib￨2 (￨2 ZipFileSet￨3 fs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addClasses￨2 (￨2 ZipFileSet￨3 fs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addWebinf￨2 (￨2 ZipFileSet￨3 fs￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 initZipOutputStream￨2 (￨2 ZipOutputStream￨2 zOut￨2 )￨2 throws￨2 IOException￨2 ,￨2 BuildException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 (￨4 deploymentDescriptor￨4 )￨4 ==￨4 null￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 isInUpdateMode￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 BuildException￨4 (￨4 "webxml<seq2seq4repair_space>attribute<seq2seq4repair_space>is<seq2seq4repair_space>required"￨4 ,￨4 location￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 super￨3 .￨3 initZipOutputStream￨3 (￨3 zOut￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 zipFile￨2 (￨2 File￨2 file￨2 ,￨2 ZipOutputStream￨2 zOut￨2 ,￨2 String￨2 vPath￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 cleanUp￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MethodRef￨1 extends￨1 ASTNode￨1 implements￨1 IDocElement￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 QUALIFIER_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 MethodRef￨2 .￨2 class￨2 ,￨2 "qualifier"￨2 ,￨2 Name￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 OPTIONAL￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 NAME_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 MethodRef￨2 .￨2 class￨2 ,￨2 "name"￨2 ,￨2 SimpleName￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildListPropertyDescriptor￨2 PARAMETERS_PROPERTY￨2 =￨2 new￨2 ChildListPropertyDescriptor￨2 (￨2 MethodRef￨2 .￨2 class￨2 ,￨2 "parameters"￨2 ,￨2 MethodRefParameter￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 private￨2 Name￨2 optionalQualifier￨2 =￨2 null￨2 ;￨2 private￨2 SimpleName￨2 methodName￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 parameters￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 MethodRef￨2 .￨2 PARAMETERS_PROPERTY￨2 )￨2 ;￨2 MethodRef￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalGetChildListProperty￨2 (￨2 ChildListPropertyDescriptor￨3 property￨3 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 MethodRef￨3 result￨3 =￨3 new￨3 MethodRef￨3 (￨3 target￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 setQualifier￨3 (￨3 (￨3 (￨3 Name￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getQualifier￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 setName￨3 (￨3 (￨3 (￨3 SimpleName￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 parameters￨3 (￨3 )￨3 .￨3 addAll￨3 (￨3 ASTNode￨3 .￨3 copySubtrees￨3 (￨3 target￨3 ,￨3 parameters￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 Name￨2 getQualifier￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setQualifier￨2 (￨2 Name￨3 name￨3 )￨2 {￨2 }￨2 public￨2 SimpleName￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setName￨2 (￨2 SimpleName￨3 name￨3 )￨2 {￨2 }￨2 public￨2 List￨2 parameters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IBinding￨2 resolveBinding￨2 (￨2 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PluginLoader￨1 {￨1 public￨2 PluginLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 loadExternalPlugin￨2 (￨2 String￨2 className￨2 ,￨2 String￨2 type￨2 ,￨2 File￨2 file￨2 ,￨2 Object￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 log￨3 .￨3 debug￨3 (￨3 "loading.."￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 type￨4 .￨4 equals￨4 (￨4 "java"￨4 )￨4 )￨4 ||￨4 (￨4 type￨4 .￨4 equals￨4 (￨4 "jar"￨4 )￨4 )￨4 )￨3 {￨3 String￨4 path￨4 =￨4 file￨4 .￨4 getPath￨4 (￨4 )￨4 ;￨4 URL￨4 [￨4 ]￨4 url￨4 =￨4 new￨4 URL￨4 [￨4 1￨4 ]￨4 ;￨4 URL￨4 newURL￨4 =￨4 new￨4 File￨4 (￨4 path￨4 )￨4 .￨4 toURL￨4 (￨4 )￨4 ;￨4 url￨4 [￨4 0￨4 ]￨4 =￨4 newURL￨4 ;￨4 log￨4 .￨4 debug￨4 (￨4 (￨4 "url="￨4 +￨4 newURL￨4 )￨4 )￨4 ;￨4 return￨4 new￨4 ExternalClassLoader￨4 (￨4 url￨4 )￨4 .￨4 instanciate￨4 (￨4 className￨4 ,￨4 args￨4 )￨4 ;￨4 }￨3 InterpreterHandler￨3 handler￨3 =￨3 (￨3 (￨3 InterpreterHandler￨3 )￨3 (￨3 pluginManager￨3 .￨3 getHandler￨3 (￨3 "interpreter"￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 Object￨3 instance￨3 =￨3 handler￨3 .￨3 getPlugin￨3 (￨3 type￨3 ,￨3 "org.columba.core.scripting.PythonInterpreterPlugin"￨3 ,￨3 null￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 instance￨4 !=￨4 null￨4 )￨3 {￨3 AbstractInterpreter￨4 ip￨4 =￨4 (￨4 (￨4 AbstractInterpreter￨4 )￨4 (￨4 instance￨4 )￨4 )￨4 ;￨4 String￨4 pythonFile￨4 =￨4 (￨4 (￨4 file￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 +￨4 "/"￨4 )￨4 +￨4 (￨4 className￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 String￨4 pythonClass￨4 =￨4 className￨4 .￨4 toString￨4 (￨4 )￨4 .￨4 substring￨4 (￨4 0￨4 ,￨4 (￨4 (￨4 className￨4 .￨4 toString￨4 (￨4 )￨4 .￨4 length￨4 (￨4 )￨4 )￨4 -￨4 3￨4 )￨4 )￨4 ;￨4 Object￨4 i￨4 =￨4 ip￨4 .￨4 instanciate￨4 (￨4 pythonFile￨4 ,￨4 pythonClass￨4 ,￨4 args￨4 ,￨4 "test"￨4 )￨4 ;￨4 return￨4 i￨4 ;￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 PromptPasswordState￨1 implements￨1 State￨1 {￨1 private￨2 final￨2 ConsoleWrapper￨2 theConsole￨2 ;￨2 private￨2 final￨2 StateValues￨2 stateValues￨2 ;￨2 private￨2 final￨2 boolean￨2 rePrompt￨2 ;￨2 public￨2 PromptPasswordState￨2 (￨2 ConsoleWrapper￨3 theConsole￨3 ,￨3 StateValues￨3 stateValues￨3 ,￨3 boolean￨3 rePrompt￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 State￨2 execute￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 stateValues￨4 .￨4 isSilentOrNonInteractive￨4 (￨4 )￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 if￨4 (￨4 (￨5 rePrompt￨5 )￨5 ==￨5 false￨5 )￨4 {￨4 RestrictionLevel￨5 level￨5 =￨5 stateValues￨5 .￨5 getOptions￨5 (￨5 )￨5 .￨5 getCheckUtil￨5 (￨5 )￨5 .￨5 getRestrictionLevel￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 !￨6 (￨6 RELAX￨6 .￨6 equals￨6 (￨6 level￨6 )￨6 )￨6 )￨5 {￨5 final￨6 List￨6 <￨6 PasswordRestriction￨6 >￨6 passwordRestrictions￨6 =￨6 stateValues￨6 .￨6 getOptions￨6 (￨6 )￨6 .￨6 getCheckUtil￨6 (￨6 )￨6 .￨6 getPasswordRestrictions￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 passwordRestrictions￨7 .￨7 size￨7 (￨7 )￨7 )￨7 >￨7 0￨7 )￨6 {￨6 if￨7 (￨7 level￨8 ==￨8 (￨8 RestrictionLevel￨8 .￨8 REJECT￨8 )￨8 )￨7 {￨7 theConsole￨8 .￨8 printf￨8 (￨8 ROOT_LOGGER￨8 .￨8 passwordRequirements￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 else￨7 {￨7 theConsole￨8 .￨8 printf￨8 (￨8 ROOT_LOGGER￨8 .￨8 passwordRecommendations￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 theConsole￨7 .￨7 printf￨7 (￨7 AddUser￨7 .￨7 NEW_LINE￨7 )￨7 ;￨7 for￨7 (￨7 PasswordRestriction￨8 passwordRestriction￨8 :￨8 passwordRestrictions￨8 )￨7 {￨7 final￨8 String￨8 message￨8 =￨8 passwordRestriction￨8 .￨8 getRequirementMessage￨8 (￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 message￨9 !=￨9 null￨9 )￨9 &&￨9 (￨9 !￨9 (￨9 message￨9 .￨9 isEmpty￨9 (￨9 )￨9 )￨9 )￨9 )￨8 {￨8 theConsole￨9 .￨9 printf￨9 (￨9 "<seq2seq4repair_space>-<seq2seq4repair_space>"￨9 )￨9 ;￨9 theConsole￨9 .￨9 printf￨9 (￨9 message￨9 )￨9 ;￨9 theConsole￨9 .￨9 printf￨9 (￨9 AddUser￨9 .￨9 NEW_LINE￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 }￨5 theConsole￨5 .￨5 printf￨5 (￨5 ROOT_LOGGER￨5 .￨5 passwordPrompt￨5 (￨5 )￨5 )￨5 ;￨5 char￨5 [￨5 ]￨5 tempChar￨5 =￨5 theConsole￨5 .￨5 readPassword￨5 (￨5 "<seq2seq4repair_space>:<seq2seq4repair_space>"￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 tempChar￨6 ==￨6 null￨6 )￨6 ||￨6 (￨6 (￨6 tempChar￨6 .￨6 length￨6 )￨6 ==￨6 0￨6 )￨6 )￨5 {￨5 <START_BUG>￨6 return￨6 new￨6 ErrorState￨6 (￨6 theConsole￨6 ,￨6 ROOT_LOGGER￨6 .￨6 noPasswordExiting￨6 (￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 stateValues￨5 .￨5 setPassword￨5 (￨5 new￨5 String￨5 (￨5 tempChar￨5 )￨5 )￨5 ;￨5 return￨5 new￨5 ValidatePasswordState￨5 (￨5 theConsole￨5 ,￨5 stateValues￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 theConsole￨5 .￨5 printf￨5 (￨5 ROOT_LOGGER￨5 .￨5 passwordConfirmationPrompt￨5 (￨5 )￨5 )￨5 ;￨5 char￨5 [￨5 ]￨5 secondTempChar￨5 =￨5 theConsole￨5 .￨5 readPassword￨5 (￨5 "<seq2seq4repair_space>:<seq2seq4repair_space>"￨5 )￨5 ;￨5 if￨5 (￨5 secondTempChar￨6 ==￨6 null￨6 )￨5 {￨5 secondTempChar￨6 =￨6 new￨6 char￨6 [￨6 0￨6 ]￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 Arrays￨6 .￨6 equals￨6 (￨6 stateValues￨6 .￨6 getPassword￨6 (￨6 )￨6 .￨6 toCharArray￨6 (￨6 )￨6 ,￨6 secondTempChar￨6 )￨6 )￨6 ==￨6 false￨6 )￨5 {￨5 return￨6 new￨6 ErrorState￨6 (￨6 theConsole￨6 ,￨6 ROOT_LOGGER￨6 .￨6 passwordMisMatch￨6 (￨6 )￨6 ,￨6 new￨6 PromptPasswordState￨6 (￨6 theConsole￨6 ,￨6 stateValues￨6 ,￨6 false￨6 )￨6 )￨6 ;￨6 }￨5 return￨5 stateValues￨5 .￨5 groupPropertiesFound￨5 (￨5 )￨5 ?￨5 new￨5 PromptGroupsState￨5 (￨5 theConsole￨5 ,￨5 stateValues￨5 )￨5 :￨5 new￨5 PreModificationState￨5 (￨5 theConsole￨5 ,￨5 stateValues￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 new￨3 ValidatePasswordState￨3 (￨3 theConsole￨3 ,￨3 stateValues￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 Touch￨1 extends￨1 Task￨1 {￨1 private￨2 interface￨2 DateFormatFactory￨2 (￨2 )￨2 {￨2 DateFormat￨3 getPrimaryFormat￨3 (￨3 )￨3 {￨3 }￨3 DateFormat￨3 getFallbackFormat￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 final￨2 Touch￨2 .￨2 DateFormatFactory￨2 DEFAULT_DF_FACTORY￨2 =￨2 new￨2 Touch￨2 .￨2 DateFormatFactory￨2 (￨2 )￨2 {￨2 public￨3 DateFormat￨3 getPrimaryFormat￨3 (￨3 )￨3 {￨3 }￨3 public￨3 DateFormat￨3 getFallbackFormat￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 static￨2 final￨2 FileUtils￨2 FILE_UTILS￨2 =￨2 FileUtils￨2 .￨2 getFileUtils￨2 (￨2 )￨2 ;￨2 private￨2 File￨2 file￨2 ;￨2 private￨2 long￨2 millis￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 String￨2 dateTime￨2 ;￨2 private￨2 Vector￨2 filesets￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 Union￨2 resources￨2 =￨2 new￨2 Union￨2 (￨2 )￨2 ;￨2 private￨2 boolean￨2 dateTimeConfigured￨2 ;￨2 private￨2 boolean￨2 mkdirs￨2 ;￨2 private￨2 boolean￨2 verbose￨2 =￨2 true￨2 ;￨2 private￨2 FileNameMapper￨2 fileNameMapper￨2 =￨2 null￨2 ;￨2 private￨2 Touch￨2 .￨2 DateFormatFactory￨2 dfFactory￨2 =￨2 Touch￨2 .￨2 DEFAULT_DF_FACTORY￨2 ;￨2 public￨2 Touch￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMillis￨2 (￨2 long￨3 millis￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDatetime￨2 (￨2 String￨3 dateTime￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMkdirs￨2 (￨2 boolean￨3 mkdirs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVerbose￨2 (￨2 boolean￨3 verbose￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setPattern￨2 (￨2 final￨3 String￨3 pattern￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConfiguredMapper￨2 (￨2 Mapper￨3 mapper￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 FileNameMapper￨2 fileNameMapper￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addFileset￨2 (￨2 FileSet￨3 set￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addFilelist￨2 (￨2 FileList￨3 list￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 ResourceCollection￨3 rc￨3 )￨2 {￨2 }￨2 protected￨2 synchronized￨2 void￨2 checkConfiguration￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 touch￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 touch￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 private￨2 long￨2 getTimestamp￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 touch￨2 (￨2 Resource￨3 r￨3 ,￨3 long￨3 defaultTimestamp￨3 )￨2 {￨2 if￨3 (￨3 (￨4 fileNameMapper￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 r￨5 instanceof￨5 FileResource￨5 )￨4 {￨4 touch￨5 (￨5 (￨5 (￨5 FileResource￨5 )￨5 (￨5 r￨5 )￨5 )￨5 .￨5 getFile￨5 (￨5 )￨5 ,￨5 defaultTimestamp￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 (￨5 (￨5 org￨5 .￨5 apache￨5 .￨5 tools￨5 .￨5 ant￨5 .￨5 types￨5 .￨5 resources￨5 .￨5 Touchable￨5 )￨5 (￨5 r￨5 )￨5 )￨5 .￨5 touch￨5 (￨5 defaultTimestamp￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 String￨4 [￨4 ]￨4 mapped￨4 =￨4 fileNameMapper￨4 .￨4 mapFileName￨4 (￨4 r￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 mapped￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 (￨5 mapped￨5 .￨5 length￨5 )￨5 >￨5 0￨5 )￨5 )￨4 {￨4 long￨5 modTime￨5 =￨5 (￨5 r￨5 .￨5 isExists￨5 (￨5 )￨5 )￨5 ?￨5 r￨5 .￨5 getLastModified￨5 (￨5 )￨5 :￨5 defaultTimestamp￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 mapped￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 <START_BUG>￨6 touch￨6 (￨6 getProject￨6 (￨6 )￨6 .￨6 resolveFile￨6 (￨6 mapped￨6 [￨6 i￨6 ]￨6 )￨6 ,￨6 modTime￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 }￨3 }￨2 private￨2 void￨2 touch￨2 (￨2 File￨3 file￨3 ,￨3 long￨3 modTime￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 Server￨1 {￨1 private￨2 final￨2 ServerCommunicationHandler￨2 communicationHandler￨2 ;￨2 public￨2 Server￨2 (￨2 ServerCommunicationHandler￨3 communicationHandler￨3 )￨2 {￨2 }￨2 public￨2 void￨2 start￨2 (￨2 Standalone￨2 serverConf￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 sendCommand￨2 (￨2 ServerManagerProtocolCommand￨2 command￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 sendCommand￨2 (￨2 ServerManagerProtocolCommand￨2 command￨2 ,￨2 Object￨2 o￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 byte￨3 [￨3 ]￨3 cmd￨3 =￨3 ServerManagerProtocolUtils￨3 .￨3 createCommandBytes￨3 (￨3 command￨3 ,￨3 o￨3 )￨3 ;￨3 <START_BUG>￨3 communicationHandler￨3 .￨3 sendMessage￨3 (￨3 cmd￨3 ,￨3 StreamUtils￨3 .￨3 calculateChecksum￨3 (￨3 cmd￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 BeanShell￨1 extends￨1 AbstractFunction￨1 implements￨1 Serializable￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 desc￨2 =￨2 new￨2 LinkedList￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 KEY￨2 =￨2 "__BeanShell"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 INIT_FILE￨2 =￨2 "beanshell.function.init"￨2 ;￨2 private￨2 transient￨2 Object￨2 [￨2 ]￨2 values￨2 ;￨2 private￨2 transient￨2 BeanShellInterpreter￨2 bshInterpreter￨2 =￨2 null￨2 ;￨2 public￨2 BeanShell￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 throws￨2 CloneNotSupportedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 String￨2 execute￨2 (￨2 SampleResult￨2 previousResult￨2 ,￨2 Sampler￨2 currentSampler￨2 )￨2 throws￨2 InvalidVariableException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 log_info￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setParameters￨2 (￨2 Collection￨2 parameters￨2 )￨2 throws￨2 InvalidVariableException￨2 (￨2 )￨2 {￨2 values￨3 =￨3 parameters￨3 .￨3 toArray￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 values￨4 .￨4 length￨4 )￨4 <￨4 1￨4 )￨4 ||￨4 (￨4 (￨4 values￨4 .￨4 length￨4 )￨4 >￨4 2￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 InvalidVariableException￨4 (￨4 (￨4 "Expecting<seq2seq4repair_space>1<seq2seq4repair_space>or<seq2seq4repair_space>2<seq2seq4repair_space>parameters,<seq2seq4repair_space>but<seq2seq4repair_space>found<seq2seq4repair_space>"￨4 +￨4 (￨4 values￨4 .￨4 length￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 bshInterpreter￨4 =￨4 new￨4 BeanShellInterpreter￨4 (￨4 BeanShell￨4 .￨4 INIT_FILE￨4 ,￨4 BeanShell￨4 .￨4 log￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 ClassNotFoundException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 InvalidVariableException￨4 (￨4 "BeanShell<seq2seq4repair_space>not<seq2seq4repair_space>found"￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 String￨2 getReferenceKey￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 getArgumentDesc￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestPolishAnalyzer￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 public￨2 void￨2 testResourcesAvailable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testBasics￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testExclude￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomStrings￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 new￨3 PolishAnalyzer￨3 (￨3 TEST_VERSION_CURRENT￨3 )￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 SimpleName￨1 extends￨1 Name￨1 {￨1 private￨2 static￨2 final￨2 String￨2 MISSING_IDENTIFIER￨2 =￨2 "MISSING"￨2 ;￨2 private￨2 String￨2 identifier￨2 =￨2 SimpleName￨2 .￨2 MISSING_IDENTIFIER￨2 ;￨2 SimpleName￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 boolean￨2 equalSubtrees￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getIdentifier￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIdentifier￨2 (￨2 String￨3 identifier￨3 )￨2 {￨2 if￨3 (￨3 identifier￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 Scanner￨3 scanner￨3 =￨3 this￨3 .￨3 getAST￨3 (￨3 )￨3 .￨3 scanner￨3 ;￨3 <END_BUG>￨3 char￨3 [￨3 ]￨3 source￨3 =￨3 identifier￨3 .￨3 toCharArray￨3 (￨3 )￨3 ;￨3 scanner￨3 .￨3 setSourceBuffer￨3 (￨3 source￨3 )￨3 ;￨3 scanner￨3 .￨3 resetTo￨3 (￨3 0￨3 ,￨3 source￨3 .￨3 length￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 int￨4 tokenType￨4 =￨4 scanner￨4 .￨4 getNextToken￨4 (￨4 )￨4 ;￨4 switch￨4 (￨4 tokenType￨4 )￨4 {￨4 case￨5 Scanner￨5 .￨5 TokenNameIdentifier￨5 :￨5 break￨6 ;￨6 default￨5 :￨5 throw￨6 new￨6 IllegalArgumentException￨6 (￨6 )￨6 ;￨6 }￨4 }￨3 catch￨3 (￨3 InvalidInputException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 )￨4 ;￨4 }￨3 modifying￨3 (￨3 )￨3 ;￨3 this￨3 .￨3 identifier￨3 =￨3 identifier￨3 ;￨3 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TableItem￨1 extends￨1 Item￨1 {￨1 Table￨2 parent￨2 ;￨2 String￨2 [￨2 ]￨2 strings￨2 ;￨2 Image￨2 [￨2 ]￨2 images￨2 ;￨2 boolean￨2 checked￨2 ;￨2 boolean￨2 grayed￨2 ;￨2 boolean￨2 cached￨2 ;￨2 Color￨2 foreground￨2 ;￨2 Color￨2 background￨2 ;￨2 Color￨2 [￨2 ]￨2 cellForeground￨2 ;￨2 Color￨2 [￨2 ]￨2 cellBackground￨2 ;￨2 Font￨2 font￨2 ;￨2 Font￨2 [￨2 ]￨2 cellFont￨2 ;￨2 int￨2 width￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 TableItem￨2 (￨2 Table￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TableItem￨2 (￨2 Table￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 TableItem￨2 (￨2 Table￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 ,￨3 boolean￨3 create￨3 )￨2 {￨2 }￨2 static￨2 Table￨2 checkNull￨2 (￨2 Table￨3 control￨3 )￨2 {￨2 }￨2 int￨2 calculateWidth￨2 (￨2 int￨3 index￨3 ,￨3 GC￨3 gc￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getBackground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getBackground￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getChecked￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Font￨2 getFont￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Font￨2 getFont￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Color￨2 getForeground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Color￨2 getForeground￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getGrayed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Image￨2 getImage￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getImageBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getImageIndent￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getNameText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Table￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getTextBounds￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 void￨2 redraw￨2 (￨2 int￨3 propertyID￨3 )￨2 {￨2 if￨3 (￨3 (￨4 parent￨4 .￨4 currentItem￨4 )￨4 ==￨4 (￨4 this￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 parent￨3 .￨3 drawCount￨3 )￨3 !=￨3 0￨3 )￨3 &&￨3 (￨3 propertyID￨3 !=￨3 (￨3 Table￨3 .￨3 CHECK_COLUMN_ID￨3 )￨3 )￨3 )￨3 <END_BUG>￨3 return￨3 ;￨3 int￨3 itemIndex￨3 =￨3 parent￨3 .￨3 indexOf￨3 (￨3 this￨3 )￨3 ;￨3 if￨3 (￨3 itemIndex￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 int￨3 [￨3 ]￨3 id￨3 =￨3 new￨3 int￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 OS￨3 .￨3 UpdateDataBrowserItems￨3 (￨3 parent￨3 .￨3 handle￨3 ,￨3 kDataBrowserNoItem￨3 ,￨3 id￨3 .￨3 length￨3 ,￨3 id￨3 ,￨3 kDataBrowserItemNoProperty￨3 ,￨3 propertyID￨3 )￨3 ;￨3 if￨3 (￨3 propertyID￨4 ==￨4 (￨4 Table￨4 .￨4 CHECK_COLUMN_ID￨4 )￨4 )￨3 {￨3 Rect￨4 rect￨4 =￨4 new￨4 Rect￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 OS￨5 .￨5 GetDataBrowserItemPartBounds￨5 (￨5 parent￨5 .￨5 handle￨5 ,￨5 parent￨5 .￨5 getId￨5 (￨5 itemIndex￨5 )￨5 ,￨5 propertyID￨5 ,￨5 kDataBrowserPropertyEnclosingPart￨5 ,￨5 rect￨5 )￨5 )￨5 ==￨5 (￨5 OS￨5 .￨5 noErr￨5 )￨5 )￨4 {￨4 int￨5 x￨5 =￨5 rect￨5 .￨5 left￨5 ;￨5 int￨5 y￨5 =￨5 (￨5 rect￨5 .￨5 top￨5 )￨5 -￨5 1￨5 ;￨5 int￨5 width￨5 =￨5 (￨5 rect￨5 .￨5 right￨5 )￨5 -￨5 (￨5 rect￨5 .￨5 left￨5 )￨5 ;￨5 int￨5 height￨5 =￨5 1￨5 ;￨5 redrawWidget￨5 (￨5 parent￨5 .￨5 handle￨5 ,￨5 x￨5 ,￨5 y￨5 ,￨5 width￨5 ,￨5 height￨5 ,￨5 false￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseParent￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBackground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBackground￨2 (￨2 int￨3 index￨3 ,￨3 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setChecked￨2 (￨2 boolean￨3 checked￨3 )￨2 {￨2 }￨2 void￨2 setChecked￨2 (￨2 boolean￨3 checked￨3 ,￨3 boolean￨3 notify￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 int￨3 index￨3 ,￨3 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForeground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForeground￨2 (￨2 int￨3 index￨3 ,￨3 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setGrayed￨2 (￨2 boolean￨3 grayed￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 [￨3 ]￨3 images￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 int￨3 index￨3 ,￨3 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImageIndent￨2 (￨2 int￨3 indent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 [￨3 ]￨3 strings￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 int￨3 index￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DomainRolloutStepHandler￨1 implements￨1 OperationStepHandler￨1 {￨1 private￨2 final￨2 DomainOperationContext￨2 domainOperationContext￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 ProxyController￨2 >￨2 hostProxies￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 ProxyController￨2 >￨2 serverProxies￨2 ;￨2 private￨2 final￨2 ExecutorService￨2 executorService￨2 ;￨2 private￨2 final￨2 ModelNode￨2 providedRolloutPlan￨2 ;￨2 private￨2 final￨2 boolean￨2 trace￨2 =￨2 DomainControllerLogger￨2 .￨2 HOST_CONTROLLER_LOGGER￨2 .￨2 isTraceEnabled￨2 (￨2 )￨2 ;￨2 public￨2 DomainRolloutStepHandler￨2 (￨2 final￨3 Map￨3 <￨3 String￨3 ,￨3 ProxyController￨3 >￨3 hostProxies￨3 ,￨3 final￨3 Map￨3 <￨3 String￨3 ,￨3 ProxyController￨3 >￨3 serverProxies￨3 ,￨3 final￨3 DomainOperationContext￨3 domainOperationContext￨3 ,￨3 final￨3 ModelNode￨3 rolloutPlan￨3 ,￨3 final￨3 ExecutorService￨3 executorService￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 context￨4 .￨4 hasFailureDescription￨4 (￨4 )￨4 )￨3 {￨3 context￨4 .￨4 setRollbackOnly￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 context￨4 .￨4 completeStep￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 ;￨4 }￨3 boolean￨3 pushToServers￨3 =￨3 !￨3 (￨3 domainOperationContext￨3 .￨3 hasHostLevelFailures￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 pushToServers￨4 )￨3 {￨3 ModelNode￨4 ourResult￨4 =￨4 domainOperationContext￨4 .￨4 getCoordinatorResult￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 ourResult￨5 .￨5 has￨5 (￨5 FAILURE_DESCRIPTION￨5 )￨5 )￨4 {￨4 if￨5 (￨5 trace￨6 )￨5 {￨5 DomainControllerLogger￨6 .￨6 HOST_CONTROLLER_LOGGER￨6 .￨6 tracef￨6 (￨6 "coordinator<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨6 ,￨6 ourResult￨6 )￨6 ;￨6 }￨5 pushToServers￨5 =￨5 false￨5 ;￨5 domainOperationContext￨5 .￨5 setCompleteRollback￨5 (￨5 true￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 trace￨6 )￨5 {￨5 DomainControllerLogger￨6 .￨6 HOST_CONTROLLER_LOGGER￨6 .￨6 tracef￨6 (￨6 "coordinator<seq2seq4repair_space>succeeded:<seq2seq4repair_space>%s"￨6 ,￨6 ourResult￨6 )￨6 ;￨6 }￨5 for￨5 (￨5 ModelNode￨6 hostResult￨6 :￨6 domainOperationContext￨6 .￨6 getHostControllerResults￨6 (￨6 )￨6 .￨6 values￨6 (￨6 )￨6 )￨5 {￨5 if￨6 (￨6 hostResult￨7 .￨7 has￨7 (￨7 FAILURE_DESCRIPTION￨7 )￨7 )￨6 {￨6 if￨7 (￨7 trace￨8 )￨7 {￨7 DomainControllerLogger￨8 .￨8 HOST_CONTROLLER_LOGGER￨8 .￨8 tracef￨8 (￨8 "host<seq2seq4repair_space>failed:<seq2seq4repair_space>%s"￨8 ,￨8 hostResult￨8 )￨8 ;￨8 }￨7 pushToServers￨7 =￨7 false￨7 ;￨7 domainOperationContext￨7 .￨7 setCompleteRollback￨7 (￨7 true￨7 )￨7 ;￨7 break￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 if￨3 (￨3 pushToServers￨4 )￨3 {￨3 domainOperationContext￨4 .￨4 setCompleteRollback￨4 (￨4 false￨4 )￨4 ;￨4 final￨4 Map￨4 <￨4 ServerIdentity￨4 ,￨4 ServerTaskExecutor￨4 .￨4 ExecutedServerRequest￨4 >￨4 submittedTasks￨4 =￨4 new￨4 HashMap￨4 <￨4 ServerIdentity￨4 ,￨4 ServerTaskExecutor￨4 .￨4 ExecutedServerRequest￨4 >￨4 (￨4 )￨4 ;￨4 final￨4 List￨4 <￨4 ServerTaskExecutor￨4 .￨4 ServerPreparedResponse￨4 >￨4 preparedResults￨4 =￨4 new￨4 ArrayList￨4 <￨4 ServerTaskExecutor￨4 .￨4 ServerPreparedResponse￨4 >￨4 (￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 pushToServers￨5 (￨5 context￨5 ,￨5 submittedTasks￨5 ,￨5 preparedResults￨5 )￨5 ;￨5 context￨5 .￨5 completeStep￨5 (￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 boolean￨5 completeRollback￨5 =￨5 domainOperationContext￨5 .￨5 isCompleteRollback￨5 (￨5 )￨5 ;￨5 final￨5 String￨5 localHostName￨5 =￨5 domainOperationContext￨5 .￨5 getLocalHostInfo￨5 (￨5 )￨5 .￨5 getLocalHostName￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 final￨6 ServerTaskExecutor￨6 .￨6 ServerPreparedResponse￨6 preparedResult￨6 :￨6 preparedResults￨6 )￨5 {￨5 boolean￨6 rollback￨6 =￨6 completeRollback￨6 ||￨6 (￨6 domainOperationContext￨6 .￨6 isServerGroupRollback￨6 (￨6 preparedResult￨6 .￨6 getServerGroupName￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 !￨7 (￨7 preparedResult￨7 .￨7 finalizeTransaction￨7 (￨7 (￨7 !￨7 rollback￨7 )￨7 )￨7 )￨7 )￨6 {￨6 final￨7 ServerIdentity￨7 identity￨7 =￨7 preparedResult￨7 .￨7 getServerIdentity￨7 (￨7 )￨7 ;￨7 try￨7 (￨7 )￨7 {￨7 final￨8 ModelNode￨8 result￨8 =￨8 preparedResult￨8 .￨8 getPreparedOperation￨8 (￨8 )￨8 .￨8 getPreparedResult￨8 (￨8 )￨8 ;￨8 ProxyController￨8 proxy￨8 =￨8 hostProxies￨8 .￨8 get￨8 (￨8 identity￨8 .￨8 getHostName￨8 (￨8 )￨8 )￨8 ;￨8 if￨8 (￨8 proxy￨9 ==￨9 null￨9 )￨8 {￨8 if￨9 (￨9 localHostName￨10 .￨10 equals￨10 (￨10 identity￨10 .￨10 getHostName￨10 (￨10 )￨10 )￨10 )￨9 {￨9 proxy￨10 =￨10 serverProxies￨10 .￨10 get￨10 (￨10 identity￨10 .￨10 getServerName￨10 (￨10 )￨10 )￨10 ;￨10 if￨10 (￨10 proxy￨11 ==￨11 null￨11 )￨10 {￨10 if￨11 (￨11 trace￨12 )￨11 {￨11 DomainControllerLogger￨12 .￨12 HOST_CONTROLLER_LOGGER￨12 .￨12 tracef￨12 (￨12 "No<seq2seq4repair_space>proxy<seq2seq4repair_space>for<seq2seq4repair_space>%s"￨12 ,￨12 identity￨12 )￨12 ;￨12 }￨11 continue￨11 ;￨11 }￨10 }￨9 }￨8 final￨8 Future￨8 <￨8 ModelNode￨8 >￨8 future￨8 =￨8 executorService￨8 .￨8 submit￨8 (￨8 new￨8 ServerRequireRestartTask￨8 (￨8 identity￨8 ,￨8 proxy￨8 ,￨8 result￨8 )￨8 )￨8 ;￨8 submittedTasks￨8 .￨8 put￨8 (￨8 identity￨8 ,￨8 new￨8 ServerTaskExecutor￨8 .￨8 ExecutedServerRequest￨8 (￨8 identity￨8 ,￨8 future￨8 )￨8 )￨8 ;￨8 }￨7 catch￨7 (￨7 Exception￨8 ignore￨8 )￨7 {￨7 }￨7 }￨6 }￨5 boolean￨5 interrupted￨5 =￨5 false￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 for￨6 (￨6 Map￨7 .￨7 Entry￨7 <￨7 ServerIdentity￨7 ,￨7 ServerTaskExecutor￨7 .￨7 ExecutedServerRequest￨7 >￨7 entry￨7 :￨7 submittedTasks￨7 .￨7 entrySet￨7 (￨7 )￨7 )￨6 {￨6 final￨7 ServerTaskExecutor￨7 .￨7 ExecutedServerRequest￨7 request￨7 =￨7 entry￨7 .￨7 getValue￨7 (￨7 )￨7 ;￨7 final￨7 Future￨7 <￨7 ModelNode￨7 >￨7 future￨7 =￨7 request￨7 .￨7 getFinalResult￨7 (￨7 )￨7 ;￨7 try￨7 (￨7 )￨7 {￨7 final￨8 ModelNode￨8 finalResult￨8 =￨8 (￨8 future￨8 .￨8 isCancelled￨8 (￨8 )￨8 )￨8 ?￨8 getCancelledResult￨8 (￨8 )￨8 :￨8 future￨8 .￨8 get￨8 (￨8 )￨8 ;￨8 final￨8 ModelNode￨8 transformedResult￨8 =￨8 request￨8 .￨8 transformResult￨8 (￨8 finalResult￨8 )￨8 ;￨8 domainOperationContext￨8 .￨8 addServerResult￨8 (￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 ,￨8 transformedResult￨8 )￨8 ;￨8 }￨7 catch￨7 (￨7 InterruptedException￨8 e￨8 )￨7 {￨7 interrupted￨8 =￨8 true￨8 ;￨8 DomainControllerLogger￨8 .￨8 HOST_CONTROLLER_LOGGER￨8 .￨8 interruptedAwaitingFinalResponse￨8 (￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 .￨8 getServerName￨8 (￨8 )￨8 ,￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 .￨8 getHostName￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 catch￨7 (￨7 ExecutionException￨8 e￨8 )￨7 {￨7 DomainControllerLogger￨8 .￨8 HOST_CONTROLLER_LOGGER￨8 .￨8 caughtExceptionAwaitingFinalResponse￨8 (￨8 e￨8 .￨8 getCause￨8 (￨8 )￨8 ,￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 .￨8 getServerName￨8 (￨8 )￨8 ,￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 .￨8 getHostName￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 finally￨5 (￨5 )￨5 {￨5 if￨6 (￨6 interrupted￨7 )￨6 {￨6 Thread￨7 .￨7 currentThread￨7 (￨7 )￨7 .￨7 interrupt￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 else￨3 {￨3 reportHostFailures￨4 (￨4 context￨4 ,￨4 operation￨4 )￨4 ;￨4 context￨4 .￨4 completeStep￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 ModelNode￨2 getCancelledResult￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 pushToServers￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 Map￨2 <￨2 ServerIdentity￨2 ,￨2 ServerTaskExecutor￨2 .￨2 ExecutedServerRequest￨2 >￨2 submittedTasks￨2 ,￨2 final￨2 List￨2 <￨2 ServerTaskExecutor￨2 .￨2 ServerPreparedResponse￨2 >￨2 preparedResults￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 Map￨2 <￨2 ServerIdentity￨2 ,￨2 ModelNode￨2 >￨2 >￨2 getOpsByGroup￨2 (￨2 Map￨3 <￨3 String￨3 ,￨3 ModelNode￨3 >￨3 hostResults￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 translateDomainMappedOperation￨2 (￨2 final￨3 ModelNode￨3 domainMappedOperation￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getRolloutPlan￨2 (￨2 ModelNode￨2 rolloutPlan￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 Map￨2 <￨2 ServerIdentity￨2 ,￨2 ModelNode￨2 >￨2 >￨2 opsByGroup￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validateServerGroupPlan￨2 (￨2 Set￨2 <￨2 String￨2 >￨2 found￨2 ,￨2 Property￨2 prop￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getDefaultRolloutPlan￨2 (￨2 Map￨3 <￨3 String￨3 ,￨3 Map￨3 <￨3 ServerIdentity￨3 ,￨3 ModelNode￨3 >￨3 >￨3 opsByGroup￨3 )￨2 {￨2 }￨2 private￨2 void￨2 reportHostFailures￨2 (￨2 final￨3 OperationContext￨3 context￨3 ,￨3 final￨3 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 collectDomainFailure￨2 (￨2 OperationContext￨3 context￨3 ,￨3 final￨3 boolean￨3 isDomain￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 collectHostFailures￨2 (￨2 final￨3 OperationContext￨3 context￨3 ,￨3 final￨3 boolean￨3 isDomain￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isDomainOperation￨2 (￨2 final￨3 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 EditorStack￨1 extends￨1 PartStack￨1 {￨1 private￨2 EditorSashContainer￨2 editorArea￨2 ;￨2 private￨2 WorkbenchPage￨2 page￨2 ;￨2 private￨2 SystemMenuSize￨2 sizeItem￨2 =￨2 new￨2 SystemMenuSize￨2 (￨2 null￨2 )￨2 ;￨2 private￨2 SystemMenuPinEditor￨2 pinEditorItem￨2 =￨2 new￨2 SystemMenuPinEditor￨2 (￨2 null￨2 )￨2 ;￨2 public￨2 EditorStack￨2 (￨2 EditorSashContainer￨3 editorArea￨3 ,￨3 WorkbenchPage￨3 page￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSystemActions￨2 (￨2 IMenuManager￨3 menuManager￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMoveable￨2 (￨2 IPresentablePart￨3 part￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCloseable￨2 (￨2 IPresentablePart￨3 part￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsState￨2 (￨2 int￨3 state￨3 )￨2 {￨2 }￨2 public￨2 static￨2 EditorStack￨2 newEditorWorkbook￨2 (￨2 EditorSashContainer￨3 editorArea￨3 ,￨3 WorkbenchPage￨3 page￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 add￨2 (￨2 LayoutPart￨3 newChild￨3 ,￨3 IPresentablePart￨3 position￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 LayoutPart￨3 child￨3 )￨2 {￨2 }￨2 public￨2 void￨2 createControl￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateActions￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateContainerVisibleTab￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Control￨2 [￨2 ]￨2 getTabList￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isActiveWorkbook￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 becomeActiveWorkbook￨2 (￨2 boolean￨3 hasFocus￨3 )￨2 {￨2 }￨2 public￨2 void￨2 tabFocusHide￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tabFocusShow￨2 (￨2 boolean￨3 hasFocus￨3 )￨2 {￨2 }￨2 public￨2 EditorPane￨2 [￨2 ]￨2 getEditors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EditorSashContainer￨2 getEditorArea￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EditorPane￨2 getVisibleEditor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setVisibleEditor￨2 (￨2 EditorPane￨3 editorPane￨3 )￨2 {￨2 }￨2 public￨2 void￨2 showVisibleEditor￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 canMoveFolder￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 derefPart￨2 (￨2 LayoutPart￨3 toDeref￨3 )￨2 {￨2 <START_BUG>￨3 EditorPresentation￨3 .￨3 derefPart￨3 (￨3 toDeref￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 boolean￨2 allowsDrop￨2 (￨2 PartPane￨3 part￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setActive￨2 (￨2 boolean￨3 activeState￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFocus￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 close￨2 (￨2 IPresentablePart￨3 [￨3 ]￨3 parts￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LZMACompressorInputStream￨1 extends￨1 CompressorInputStream￨1 {￨1 private￨2 final￨2 InputStream￨2 in￨2 ;￨2 public￨2 LZMACompressorInputStream￨2 (￨2 InputStream￨2 inputStream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 read￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 int￨3 ret￨3 =￨3 in￨3 .￨3 read￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 count￨3 (￨3 (￨3 ret￨3 ==￨3 (￨3 -￨3 1￨3 )￨3 ?￨3 -￨3 1￨3 :￨3 1￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 ret￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 int￨2 read￨2 (￨2 byte￨2 [￨2 ]￨2 buf￨2 ,￨2 int￨2 off￨2 ,￨2 int￨2 len￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 long￨2 skip￨2 (￨2 long￨2 n￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 available￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 ButtonTab￨1 extends￨1 AlignableTab￨1 {￨1 Button￨2 button1￨2 ;￨2 Button￨2 button2￨2 ;￨2 Button￨2 button3￨2 ;￨2 Button￨2 button4￨2 ;￨2 Button￨2 button5￨2 ;￨2 Button￨2 button6￨2 ;￨2 Group￨2 textButtonGroup￨2 ;￨2 Group￨2 imageButtonGroup￨2 ;￨2 Button￨2 upButton￨2 ;￨2 Button￨2 downButton￨2 ;￨2 Button￨2 pushButton￨2 ;￨2 Button￨2 checkButton￨2 ;￨2 Button￨2 radioButton￨2 ;￨2 Button￨2 toggleButton￨2 ;￨2 Button￨2 arrowButton￨2 ;￨2 Button￨2 flatButton￨2 ;￨2 ButtonTab￨2 (￨2 ControlExample￨3 instance￨3 )￨2 {￨2 }￨2 void￨2 createControlGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createStyleGroup￨2 (￨2 )￨2 {￨2 }￨2 Control￨2 [￨2 ]￨2 getExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 getMethodNames￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 "Selection"￨3 ,￨3 "Text"￨3 }￨3 ;￨3 <END_BUG>￨3 }￨2 String￨2 getTabText￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetAlignment￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setExampleWidgetState￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CommandLineTest￨1 {￨1 private￨2 ByteArrayOutputStream￨2 results￨2 ;￨2 private￨2 PrintStream￨2 oldOut￨2 ;￨2 private￨2 static￨2 boolean￨2 testWasRun￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 before￨2 (￨2 )￨2 {￨2 }￨2 @￨2 After￨2 public￨2 void￨2 after￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Example￨2 {￨2 @￨3 Test￨3 public￨3 void￨3 test￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 runATest￨2 (￨2 )￨2 {￨2 CommandLineTest￨3 .￨3 testWasRun￨3 =￨3 false￨3 ;￨3 <START_BUG>￨3 new￨3 JUnitCore￨3 (￨3 )￨3 .￨3 runMain￨3 (￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 "org.junit.tests.CommandLineTest$Example"￨3 }￨3 )￨3 ;￨3 <END_BUG>￨3 Assert￨3 .￨3 assertTrue￨3 (￨3 CommandLineTest￨3 .￨3 testWasRun￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 runAClass￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 int￨2 fCount￨2 ;￨2 public￨2 static￨2 class￨2 Count￨2 {￨2 @￨3 Test￨3 public￨3 void￨3 increment￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 runTwoClassesAsArray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 runTwoClasses￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JPAAnnotationParseProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 DotName￨2 PERSISTENCE_CONTEXT_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 PersistenceContext￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 DotName￨2 PERSISTENCE_UNIT_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 PersistenceUnit￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ENTITY_MANAGER_CLASS￨2 =￨2 "javax.persistence.EntityManager"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 ENTITY_MANAGERFACTORY_CLASS￨2 =￨2 "javax.persistence.EntityManagerFactory"￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 private￨2 void￨2 processPersistenceAnnotations￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 EEModuleDescription￨2 eeModuleDescription￨2 ,￨2 List￨2 <￨2 AnnotationInstance￨2 >￨2 persistenceContexts￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processField￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 FieldInfo￨2 fieldInfo￨2 ,￨2 final￨2 EEModuleClassDescription￨2 eeModuleClassDescription￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processMethod￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 MethodInfo￨2 methodInfo￨2 ,￨2 final￨2 EEModuleClassDescription￨2 eeModuleClassDescription￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processClass￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 ClassInfo￨2 classInfo￨2 ,￨2 final￨2 EEModuleClassDescription￨2 eeModuleClassDescription￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 InjectionSource￨2 getBindingSource￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 String￨2 injectionTypeName￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 String￨3 scopedPuName￨3 =￨3 getScopedPuName￨3 (￨3 deploymentUnit￨3 ,￨3 annotation￨3 )￨3 ;￨3 ServiceName￨3 puServiceName￨3 =￨3 getPuServiceName￨3 (￨3 scopedPuName￨3 )￨3 ;￨3 if￨3 (￨3 isPersistenceContext￨4 (￨4 annotation￨4 )￨4 )￨3 {￨3 AnnotationValue￨4 pcType￨4 =￨4 annotation￨4 .￨4 value￨4 (￨4 "type"￨4 )￨4 ;￨4 PersistenceContextType￨4 type￨4 =￨4 (￨4 (￨4 pcType￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 TRANSACTION￨4 .￨4 name￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 pcType￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ?￨4 PersistenceContextType￨4 .￨4 TRANSACTION￨4 :￨4 PersistenceContextType￨4 .￨4 EXTENDED￨4 ;￨4 Map￨4 properties￨4 ;￨4 AnnotationValue￨4 value￨4 =￨4 annotation￨4 .￨4 value￨4 (￨4 "properties"￨4 )￨4 ;￨4 AnnotationInstance￨4 [￨4 ]￨4 props￨4 =￨4 (￨4 value￨4 !=￨4 null￨4 )￨4 ?￨4 value￨4 .￨4 asNestedArray￨4 (￨4 )￨4 :￨4 null￨4 ;￨4 if￨4 (￨4 props￨5 !=￨5 null￨5 )￨4 {￨4 properties￨5 =￨5 new￨5 HashMap￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 source￨6 =￨6 0￨6 ;￨6 source￨6 <￨6 (￨6 props￨6 .￨6 length￨6 )￨6 ;￨6 source￨6 ++￨6 )￨5 {￨5 properties￨6 .￨6 put￨6 (￨6 props￨6 [￨6 source￨6 ]￨6 .￨6 value￨6 (￨6 "name"￨6 )￨6 ,￨6 props￨6 [￨6 source￨6 ]￨6 .￨6 value￨6 (￨6 "value"￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 properties￨5 =￨5 null￨5 ;￨5 }￨4 return￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 as￨4 .￨4 jpa￨4 .￨4 injectors￨4 .￨4 PersistenceContextInjectionSource￨4 (￨4 type￨4 ,￨4 properties￨4 ,￨4 puServiceName￨4 ,￨4 deploymentUnit￨4 ,￨4 scopedPuName￨4 ,￨4 injectionTypeName￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 return￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 as￨4 .￨4 jpa￨4 .￨4 injectors￨4 .￨4 PersistenceUnitInjectionSource￨4 (￨4 puServiceName￨4 ,￨4 deploymentUnit￨4 ,￨4 scopedPuName￨4 ,￨4 injectionTypeName￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 private￨2 boolean￨2 isExtendedPersistenceContext￨2 (￨2 final￨3 AnnotationInstance￨3 annotation￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isPersistenceContext￨2 (￨2 final￨3 AnnotationInstance￨3 annotation￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getClassLevelInjectionType￨2 (￨2 final￨3 AnnotationInstance￨3 annotation￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getScopedPuName￨2 (￨2 final￨2 DeploymentUnit￨2 deploymentUnit￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ServiceName￨2 getPuServiceName￨2 (￨2 String￨2 scopedPuName￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 registerInterceptorsForExtendedPersistenceContext￨2 (￨2 SessionBeanComponentDescription￨3 componentDescription￨3 ,￨3 AnnotationInstance￨3 annotation￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ArrayCreation￨1 extends￨1 Expression￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 TYPE_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 ArrayCreation￨2 .￨2 class￨2 ,￨2 "type"￨2 ,￨2 ArrayType￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildListPropertyDescriptor￨2 DIMENSIONS_PROPERTY￨2 =￨2 new￨2 ChildListPropertyDescriptor￨2 (￨2 ArrayCreation￨2 .￨2 class￨2 ,￨2 "dimensions"￨2 ,￨2 Expression￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 INITIALIZER_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 ArrayCreation￨2 .￨2 class￨2 ,￨2 "initializer"￨2 ,￨2 ArrayInitializer￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 OPTIONAL￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 private￨2 ArrayType￨2 arrayType￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 dimensions￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 ArrayCreation￨2 .￨2 DIMENSIONS_PROPERTY￨2 )￨2 ;￨2 private￨2 ArrayInitializer￨2 optionalInitializer￨2 =￨2 null￨2 ;￨2 ArrayCreation￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalGetChildListProperty￨2 (￨2 ChildListPropertyDescriptor￨3 property￨3 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 ArrayType￨2 getType￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 arrayType￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 synchronized￨4 (￨4 this￨4 .￨4 ast￨4 )￨4 {￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 this￨5 .￨5 arrayType￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 preLazyInit￨5 (￨5 )￨5 ;￨5 this￨5 .￨5 arrayType￨5 =￨5 this￨5 .￨5 ast￨5 .￨5 newArrayType￨5 (￨5 this￨5 .￨5 ast￨5 .￨5 newPrimitiveType￨5 (￨5 PrimitiveType￨5 .￨5 INT￨5 )￨5 )￨5 ;￨5 postLazyInit￨5 (￨5 this￨5 .￨5 arrayType￨5 ,￨5 ArrayCreation￨5 .￨5 TYPE_PROPERTY￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 this￨3 .￨3 arrayType￨3 ;￨3 }￨2 public￨2 void￨2 setType￨2 (￨2 ArrayType￨3 type￨3 )￨2 {￨2 }￨2 public￨2 List￨2 dimensions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ArrayInitializer￨2 getInitializer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInitializer￨2 (￨2 ArrayInitializer￨3 initializer￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractMethodDeclaration￨1 extends￨1 ASTNode￨1 implements￨1 ReferenceContext￨1 ,￨1 ProblemSeverities￨1 {￨1 public￨2 MethodScope￨2 scope￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 selector￨2 ;￨2 public￨2 int￨2 declarationSourceStart￨2 ;￨2 public￨2 int￨2 declarationSourceEnd￨2 ;￨2 public￨2 int￨2 modifiers￨2 ;￨2 public￨2 int￨2 modifiersSourceStart￨2 ;￨2 public￨2 Annotation￨2 [￨2 ]￨2 annotations￨2 ;￨2 public￨2 Argument￨2 [￨2 ]￨2 arguments￨2 ;￨2 public￨2 TypeReference￨2 [￨2 ]￨2 thrownExceptions￨2 ;￨2 public￨2 Statement￨2 [￨2 ]￨2 statements￨2 ;￨2 public￨2 int￨2 explicitDeclarations￨2 ;￨2 public￨2 MethodBinding￨2 binding￨2 ;￨2 public￨2 boolean￨2 ignoreFurtherInvestigation￨2 =￨2 false￨2 ;￨2 public￨2 boolean￨2 needFreeReturn￨2 =￨2 false￨2 ;￨2 public￨2 Javadoc￨2 javadoc￨2 ;￨2 public￨2 int￨2 bodyStart￨2 ;￨2 public￨2 int￨2 bodyEnd￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 CompilationResult￨2 compilationResult￨2 ;￨2 public￨2 boolean￨2 errorInSignature￨2 =￨2 false￨2 ;￨2 AbstractMethodDeclaration￨2 (￨2 CompilationResult￨3 compilationResult￨3 )￨2 {￨2 }￨2 public￨2 void￨2 abort￨2 (￨2 int￨3 abortLevel￨3 ,￨3 IProblem￨3 problem￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 analyseCode￨2 (￨2 ClassScope￨3 classScope￨3 ,￨3 InitializationFlowContext￨3 initializationContext￨3 ,￨3 FlowInfo￨3 info￨3 )￨2 {￨2 }￨2 public￨2 void￨2 bindArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 bindThrownExceptions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CompilationResult￨2 compilationResult￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 ClassScope￨3 classScope￨3 ,￨3 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkArgumentsSize￨2 (￨2 )￨2 {￨2 TypeBinding￨3 [￨3 ]￨3 parameters￨3 =￨3 this￨3 .￨3 binding￨3 .￨3 parameters￨3 ;￨3 int￨3 size￨3 =￨3 1￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 max￨4 =￨4 parameters￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 max￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 TypeBinding￨4 parameter￨4 =￨4 parameters￨4 [￨4 i￨4 ]￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 parameter￨4 ==￨4 (￨4 LongBinding￨4 )￨4 )￨4 ||￨4 (￨4 parameter￨4 ==￨4 (￨4 DoubleBinding￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 size￨4 +=￨4 2￨4 ;￨4 else￨4 {￨4 size￨5 ++￨5 ;￨5 }￨4 if￨4 (￨4 size￨5 >￨5 255￨5 )￨4 {￨4 this￨5 .￨5 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 noMoreAvailableSpaceForArgument￨5 (￨5 this￨5 .￨5 scope￨5 .￨5 locals￨5 [￨5 i￨5 ]￨5 ,￨5 this￨5 .￨5 scope￨5 .￨5 locals￨5 [￨5 i￨5 ]￨5 .￨5 declaration￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 boolean￨2 hasErrors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAbstract￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAnnotationMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isClinit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDefaultConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInitializationMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isNative￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStatic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 parseStatements￨2 (￨2 Parser￨3 parser￨3 ,￨3 CompilationUnitDeclaration￨3 unit￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printBody￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printReturnType￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 ClassScope￨3 upperScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolveJavadoc￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolveStatements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsHavingErrors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 classScope￨3 )￨2 {￨2 }￨2 public￨2 TypeParameter￨2 [￨2 ]￨2 typeParameters￨2 (￨2 )￨2 {￨2 }￨2 }￨1
abstract￨1 class￨1 Const￨1 implements￨1 Val￨1 ,￨1 Constant￨1 {￨1 private￨2 ClassMetaData￨2 _meta￨2 =￨2 null￨2 ;￨2 private￨2 Column￨2 [￨2 ]￨2 _cols￨2 =￨2 null￨2 ;￨2 public￨2 ClassMetaData￨2 getMetaData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setMetaData￨2 (￨2 ClassMetaData￨3 meta￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVariable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Column￨2 getColumn￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 Object￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getValue￨2 (￨2 Object￨3 [￨3 ]￨3 parameters￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getSQLValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSQLValueNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 initialize￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 boolean￨3 nullTest￨3 )￨2 {￨2 }￨2 public￨2 Joins￨2 getJoins￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 calculateValue￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 Val￨3 other￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 toDataStoreValue￨2 (￨2 Object￨3 val￨3 ,￨3 JDBCStore￨3 store￨3 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 pks￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 private￨2 SQLBuffer￨2 newSQLBuffer￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 selectColumns￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 pks￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 groupBy￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 <START_BUG>￨3 sel￨3 .￨3 groupBy￨3 (￨3 newSQLBuffer￨3 (￨3 sel￨3 ,￨3 store￨3 ,￨3 params￨3 ,￨3 fetch￨3 )￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 orderBy￨2 (￨2 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 boolean￨3 asc￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 load￨2 (￨2 Result￨2 res￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 JDBCFetchConfiguration￨2 fetch￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasVariable￨2 (￨2 Variable￨3 var￨3 )￨2 {￨2 }￨2 public￨2 int￨2 length￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 appendIsEmpty￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 appendIsNotEmpty￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 appendSize￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 appendIsNull￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 public￨2 void￨2 appendIsNotNull￨2 (￨2 SQLBuffer￨3 sql￨3 ,￨3 Select￨3 sel￨3 ,￨3 JDBCStore￨3 store￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 JDBCFetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SendAllMessagesCommand￨1 extends￨1 FolderCommand￨1 {￨1 protected￨2 SendListManager￨2 sendListManager￨2 =￨2 new￨2 SendListManager￨2 (￨2 )￨2 ;￨2 protected￨2 OutboxFolder￨2 outboxFolder￨2 ;￨2 public￨2 SendAllMessagesCommand￨2 (￨2 AbstractFrameController￨3 frameController￨3 ,￨3 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 Worker￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 FolderCommandReference￨3 [￨3 ]￨3 r￨3 =￨3 (￨3 (￨3 FolderCommandReference￨3 [￨3 ]￨3 )￨3 (￨3 getReferences￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 worker￨3 .￨3 setDisplayText￨3 (￨3 MailResourceLoader￨3 .￨3 getString￨3 (￨3 "statusbar"￨3 ,￨3 "message"￨3 ,￨3 "send_message"￨3 )￨3 )￨3 ;￨3 outboxFolder￨3 =￨3 (￨3 (￨3 OutboxFolder￨3 )￨3 (￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getFolder￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 Object￨3 [￨3 ]￨3 uids￨3 =￨3 outboxFolder￨3 .￨3 getUids￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 uids￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 outboxFolder￨5 .￨5 exists￨5 (￨5 uids￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 ==￨5 true￨5 )￨4 {￨4 SendableMessage￨5 message￨5 =￨5 (￨5 (￨5 SendableMessage￨5 )￨5 (￨5 outboxFolder￨5 .￨5 getMessage￨5 (￨5 uids￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 )￨5 ;￨5 sendListManager￨5 .￨5 add￨5 (￨5 message￨5 )￨5 ;￨5 }￨4 }￨3 int￨3 actAccountUid￨3 =￨3 -￨3 1￨3 ;￨3 List￨3 sentList￨3 =￨3 new￨3 Vector￨3 (￨3 )￨3 ;￨3 boolean￨3 open￨3 =￨3 false￨3 ;￨3 SMTPServer￨3 smtpServer￨3 =￨3 null￨3 ;￨3 Folder￨3 sentFolder￨3 =￨3 null￨3 ;￨3 while￨3 (￨3 sendListManager￨4 .￨4 hasMoreMessages￨4 (￨4 )￨4 )￨3 {￨3 SendableMessage￨4 message￨4 =￨4 sendListManager￨4 .￨4 getNextMessage￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 message￨5 .￨5 getAccountUid￨5 (￨5 )￨5 )￨5 !=￨5 actAccountUid￨5 )￨4 {￨4 actAccountUid￨5 =￨5 message￨5 .￨5 getAccountUid￨5 (￨5 )￨5 ;￨5 AccountItem￨5 accountItem￨5 =￨5 MailConfig￨5 .￨5 getAccountList￨5 (￨5 )￨5 .￨5 uidGet￨5 (￨5 actAccountUid￨5 )￨5 ;￨5 sentFolder￨5 =￨5 (￨5 (￨5 Folder￨5 )￨5 (￨5 treeModel￨5 .￨5 getFolder￨5 (￨5 Integer￨5 .￨5 parseInt￨5 (￨5 accountItem￨5 .￨5 getSpecialFoldersItem￨5 (￨5 )￨5 .￨5 get￨5 (￨5 "sent"￨5 )￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 smtpServer￨5 =￨5 new￨5 SMTPServer￨5 (￨5 accountItem￨5 )￨5 ;￨5 open￨5 =￨5 smtpServer￨5 .￨5 openConnection￨5 (￨5 )￨5 ;￨5 (￨5 (￨5 StatusObservableImpl￨5 )￨5 (￨5 smtpServer￨5 .￨5 getObservable￨5 (￨5 )￨5 )￨5 )￨5 .￨5 setWorker￨5 (￨5 worker￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 open￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 smtpServer￨6 .￨6 sendMessage￨6 (￨6 message￨6 ,￨6 worker￨6 )￨6 ;￨6 <START_BUG>￨6 sentList￨6 .￨6 add￨6 (￨6 message￨6 .￨6 getHeaderInterface￨6 (￨6 )￨6 .￨6 get￨6 (￨6 "columba.uid"￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 catch￨5 (￨5 SMTPException￨6 e￨6 )￨5 {￨5 JOptionPane￨6 .￨6 showMessageDialog￨6 (￨6 null￨6 ,￨6 e￨6 .￨6 getMessage￨6 (￨6 )￨6 ,￨6 "Error<seq2seq4repair_space>while<seq2seq4repair_space>sending"￨6 ,￨6 JOptionPane￨6 .￨6 ERROR_MESSAGE￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 worker￨3 .￨3 clearDisplayTextWithDelay￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 sentList￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 moveToSentFolder￨4 (￨4 sentList￨4 ,￨4 sentFolder￨4 )￨4 ;￨4 sentList￨4 .￨4 clear￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 moveToSentFolder￨2 (￨2 List￨3 v￨3 ,￨3 Folder￨3 sentFolder￨3 )￨2 {￨2 }￨2 }￨1
@￨1 SuppressWarnings￨1 (￨1 "deprecation"￨1 )￨1 public￨1 class￨1 LegacyGlobalConfigurationAdapter￨1 {￨1 public￨2 static￨2 GlobalConfiguration￨2 adapt￨2 (￨2 GlobalConfiguration￨3 config￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 static￨2 GlobalConfiguration￨2 adapt￨2 (￨2 org￨3 .￨3 infinispan￨3 .￨3 config￨3 .￨3 GlobalConfiguration￨3 legacy￨3 )￨2 {￨2 if￨3 (￨3 legacy￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 GlobalConfigurationBuilder￨3 builder￨3 =￨3 new￨3 GlobalConfigurationBuilder￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 legacy￨4 .￨4 getTransportClass￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 builder￨4 .￨4 transport￨4 (￨4 )￨4 .￨4 clusterName￨4 (￨4 legacy￨4 .￨4 getClusterName￨4 (￨4 )￨4 )￨4 .￨4 machineId￨4 (￨4 legacy￨4 .￨4 getMachineId￨4 (￨4 )￨4 )￨4 .￨4 rackId￨4 (￨4 legacy￨4 .￨4 getRackId￨4 (￨4 )￨4 )￨4 .￨4 siteId￨4 (￨4 legacy￨4 .￨4 getSiteId￨4 (￨4 )￨4 )￨4 .￨4 strictPeerToPeer￨4 (￨4 legacy￨4 .￨4 isStrictPeerToPeer￨4 (￨4 )￨4 )￨4 .￨4 distributedSyncTimeout￨4 (￨4 legacy￨4 .￨4 getDistributedSyncTimeout￨4 (￨4 )￨4 )￨4 .￨4 transport￨4 (￨4 Util￨4 .￨4 <￨4 Transport￨4 >￨4 getInstance￨4 (￨4 legacy￨4 .￨4 getTransportClass￨4 (￨4 )￨4 ,￨4 legacy￨4 .￨4 getClassLoader￨4 (￨4 )￨4 )￨4 )￨4 .￨4 nodeName￨4 (￨4 legacy￨4 .￨4 getTransportNodeName￨4 (￨4 )￨4 )￨4 .￨4 withProperties￨4 (￨4 legacy￨4 .￨4 getTransportProperties￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 builder￨3 .￨3 globalJmxStatistics￨3 (￨3 )￨3 .￨3 enabled￨3 (￨3 legacy￨3 .￨3 isExposeGlobalJmxStatistics￨3 (￨3 )￨3 )￨3 .￨3 jmxDomain￨3 (￨3 legacy￨3 .￨3 getJmxDomain￨3 (￨3 )￨3 )￨3 .￨3 mBeanServerLookup￨3 (￨3 legacy￨3 .￨3 getMBeanServerLookupInstance￨3 (￨3 )￨3 )￨3 .￨3 allowDuplicateDomains￨3 (￨3 legacy￨3 .￨3 isAllowDuplicateDomains￨3 (￨3 )￨3 )￨3 .￨3 cacheManagerName￨3 (￨3 legacy￨3 .￨3 getCacheManagerName￨3 (￨3 )￨3 )￨3 .￨3 withProperties￨3 (￨3 legacy￨3 .￨3 getMBeanServerProperties￨3 (￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 serialization￨3 (￨3 )￨3 .￨3 marshallerClass￨3 (￨3 Util￨3 .￨3 <￨3 Marshaller￨3 >￨3 loadClass￨3 (￨3 legacy￨3 .￨3 getMarshallerClass￨3 (￨3 )￨3 ,￨3 legacy￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 )￨3 .￨3 version￨3 (￨3 legacy￨3 .￨3 getMarshallVersion￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 AdvancedExternalizerConfig￨4 externalizerConfig￨4 :￨4 legacy￨4 .￨4 getExternalizers￨4 (￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 builder￨4 .￨4 serialization￨4 (￨4 )￨4 .￨4 addAdvancedExternalizer￨4 (￨4 externalizerConfig￨4 .￨4 getAdvancedExternalizer￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 builder￨3 .￨3 asyncTransportExecutor￨3 (￨3 )￨3 .￨3 factory￨3 (￨3 Util￨3 .￨3 <￨3 ExecutorFactory￨3 >￨3 getInstance￨3 (￨3 legacy￨3 .￨3 getAsyncTransportExecutorFactoryClass￨3 (￨3 )￨3 ,￨3 legacy￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 )￨3 .￨3 withProperties￨3 (￨3 legacy￨3 .￨3 getAsyncTransportExecutorProperties￨3 (￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 asyncListenerExecutor￨3 (￨3 )￨3 .￨3 factory￨3 (￨3 Util￨3 .￨3 <￨3 ExecutorFactory￨3 >￨3 getInstance￨3 (￨3 legacy￨3 .￨3 getAsyncListenerExecutorFactoryClass￨3 (￨3 )￨3 ,￨3 legacy￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 )￨3 .￨3 withProperties￨3 (￨3 legacy￨3 .￨3 getAsyncListenerExecutorProperties￨3 (￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 evictionScheduledExecutor￨3 (￨3 )￨3 .￨3 factory￨3 (￨3 Util￨3 .￨3 <￨3 ScheduledExecutorFactory￨3 >￨3 getInstance￨3 (￨3 legacy￨3 .￨3 getEvictionScheduledExecutorFactoryClass￨3 (￨3 )￨3 ,￨3 legacy￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 )￨3 .￨3 withProperties￨3 (￨3 legacy￨3 .￨3 getAsyncListenerExecutorProperties￨3 (￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 replicationQueueScheduledExecutor￨3 (￨3 )￨3 .￨3 factory￨3 (￨3 Util￨3 .￨3 <￨3 ScheduledExecutorFactory￨3 >￨3 getInstance￨3 (￨3 legacy￨3 .￨3 getReplicationQueueScheduledExecutorFactoryClass￨3 (￨3 )￨3 ,￨3 legacy￨3 .￨3 getClassLoader￨3 (￨3 )￨3 )￨3 )￨3 .￨3 withProperties￨3 (￨3 legacy￨3 .￨3 getReplicationQueueScheduledExecutorProperties￨3 (￨3 )￨3 )￨3 ;￨3 builder￨3 .￨3 shutdown￨3 (￨3 )￨3 .￨3 hookBehavior￨3 (￨3 ShutdownHookBehavior￨3 .￨3 valueOf￨3 (￨3 legacy￨3 .￨3 getShutdownHookBehavior￨3 (￨3 )￨3 .￨3 name￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 builder￨3 .￨3 build￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CachingConnectionFactory￨1 extends￨1 SingleConnectionFactory￨1 {￨1 private￨2 int￨2 sessionCacheSize￨2 =￨2 1￨2 ;￨2 private￨2 boolean￨2 cacheProducers￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 cacheConsumers￨2 =￨2 true￨2 ;￨2 private￨2 volatile￨2 boolean￨2 active￨2 =￨2 true￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 Integer￨2 ,￨2 LinkedList￨2 <￨2 Session￨2 >￨2 >￨2 cachedSessions￨2 =￨2 new￨2 HashMap￨2 <￨2 Integer￨2 ,￨2 LinkedList￨2 <￨2 Session￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 CachingConnectionFactory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CachingConnectionFactory￨2 (￨2 ConnectionFactory￨3 targetConnectionFactory￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSessionCacheSize￨2 (￨2 int￨3 sessionCacheSize￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getSessionCacheSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCacheProducers￨2 (￨2 boolean￨3 cacheProducers￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCacheProducers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCacheConsumers￨2 (￨2 boolean￨3 cacheConsumers￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCacheConsumers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resetConnection￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Session￨2 getSession￨2 (￨2 Connection￨2 con￨2 ,￨2 Integer￨2 mode￨2 )￨2 throws￨2 JMSException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Session￨2 getCachedSessionProxy￨2 (￨2 Session￨3 target￨3 ,￨3 LinkedList￨3 <￨3 Session￨3 >￨3 sessionList￨3 )￨2 {￨2 }￨2 private￨2 class￨2 CachedSessionInvocationHandler￨2 implements￨2 InvocationHandler￨2 {￨2 private￨3 final￨3 Session￨3 target￨3 ;￨3 private￨3 final￨3 LinkedList￨3 <￨3 Session￨3 >￨3 sessionList￨3 ;￨3 private￨3 final￨3 Map￨3 <￨3 Destination￨3 ,￨3 MessageProducer￨3 >￨3 cachedProducers￨3 =￨3 new￨3 HashMap￨3 <￨3 Destination￨3 ,￨3 MessageProducer￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 final￨3 Map￨3 <￨3 CachingConnectionFactory￨3 .￨3 ConsumerCacheKey￨3 ,￨3 MessageConsumer￨3 >￨3 cachedConsumers￨3 =￨3 new￨3 HashMap￨3 <￨3 CachingConnectionFactory￨3 .￨3 ConsumerCacheKey￨3 ,￨3 MessageConsumer￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 boolean￨3 transactionOpen￨3 =￨3 false￨3 ;￨3 public￨3 CachedSessionInvocationHandler￨3 (￨3 Session￨4 target￨4 ,￨4 LinkedList￨4 <￨4 Session￨4 >￨4 sessionList￨4 )￨3 {￨3 }￨3 public￨3 Object￨3 invoke￨3 (￨3 Object￨3 proxy￨3 ,￨3 Method￨3 method￨3 ,￨3 Object￨3 [￨3 ]￨3 args￨3 )￨3 throws￨3 Throwable￨3 (￨3 )￨3 {￨3 String￨4 methodName￨4 =￨4 method￨4 .￨4 getName￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 methodName￨5 .￨5 equals￨5 (￨5 "equals"￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 return￨5 proxy￨5 ==￨5 (￨5 args￨5 [￨5 0￨5 ]￨5 )￨5 ?￨5 Boolean￨5 .￨5 TRUE￨5 :￨5 Boolean￨5 .￨5 FALSE￨5 ;￨5 <END_BUG>￨5 }￨4 else￨4 if￨4 (￨4 methodName￨5 .￨5 equals￨5 (￨5 "hashCode"￨5 )￨5 )￨4 {￨4 return￨5 System￨5 .￨5 identityHashCode￨5 (￨5 proxy￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 methodName￨5 .￨5 equals￨5 (￨5 "toString"￨5 )￨5 )￨4 {￨4 return￨5 "Cached<seq2seq4repair_space>JMS<seq2seq4repair_space>Session:<seq2seq4repair_space>"￨5 +￨5 (￨5 this￨5 .￨5 target￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 methodName￨5 .￨5 equals￨5 (￨5 "close"￨5 )￨5 )￨4 {￨4 if￨5 (￨5 active￨6 )￨5 {￨5 synchronized￨6 (￨6 this￨7 .￨7 sessionList￨7 )￨6 {￨6 if￨7 (￨7 (￨8 this￨8 .￨8 sessionList￨8 .￨8 size￨8 (￨8 )￨8 )￨8 <￨8 (￨8 getSessionCacheSize￨8 (￨8 )￨8 )￨8 )￨7 {￨7 logicalClose￨8 (￨8 (￨8 (￨8 Session￨8 )￨8 (￨8 proxy￨8 )￨8 )￨8 )￨8 ;￨8 return￨8 null￨8 ;￨8 }￨7 }￨6 }￨5 physicalClose￨5 (￨5 )￨5 ;￨5 return￨5 null￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 methodName￨5 .￨5 equals￨5 (￨5 "getTargetSession"￨5 )￨5 )￨4 {￨4 return￨5 this￨5 .￨5 target￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 methodName￨5 .￨5 equals￨5 (￨5 "commit"￨5 )￨5 )￨5 ||￨5 (￨5 methodName￨5 .￨5 equals￨5 (￨5 "rollback"￨5 )￨5 )￨5 )￨4 {￨4 this￨5 .￨5 transactionOpen￨5 =￨5 false￨5 ;￨5 }￨4 else￨4 {￨4 this￨5 .￨5 transactionOpen￨5 =￨5 true￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createProducer"￨6 )￨6 )￨6 ||￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createSender"￨6 )￨6 )￨6 )￨6 ||￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createPublisher"￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 isCacheProducers￨6 (￨6 )￨6 )￨6 )￨5 {￨5 return￨6 getCachedProducer￨6 (￨6 (￨6 (￨6 Destination￨6 )￨6 (￨6 args￨6 [￨6 0￨6 ]￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 (￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createConsumer"￨6 )￨6 )￨6 ||￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createReceiver"￨6 )￨6 )￨6 )￨6 ||￨6 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createSubscriber"￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 isCacheConsumers￨6 (￨6 )￨6 )￨6 )￨5 {￨5 return￨6 getCachedConsumer￨6 (￨6 (￨6 (￨6 Destination￨6 )￨6 (￨6 args￨6 [￨6 0￨6 ]￨6 )￨6 )￨6 ,￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 >￨6 1￨6 ?￨6 (￨6 (￨6 String￨6 )￨6 (￨6 args￨6 [￨6 1￨6 ]￨6 )￨6 )￨6 :￨6 null￨6 )￨6 ,￨6 (￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 >￨6 2￨6 )￨6 &&￨6 (￨6 (￨6 Boolean￨6 )￨6 (￨6 args￨6 [￨6 2￨6 ]￨6 )￨6 )￨6 )￨6 ,￨6 null￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 methodName￨6 .￨6 equals￨6 (￨6 "createDurableSubscriber"￨6 )￨6 )￨6 &&￨6 (￨6 isCacheConsumers￨6 (￨6 )￨6 )￨6 )￨5 {￨5 return￨6 getCachedConsumer￨6 (￨6 (￨6 (￨6 Destination￨6 )￨6 (￨6 args￨6 [￨6 0￨6 ]￨6 )￨6 )￨6 ,￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 >￨6 2￨6 ?￨6 (￨6 (￨6 String￨6 )￨6 (￨6 args￨6 [￨6 2￨6 ]￨6 )￨6 )￨6 :￨6 null￨6 )￨6 ,￨6 (￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 >￨6 3￨6 )￨6 &&￨6 (￨6 (￨6 Boolean￨6 )￨6 (￨6 args￨6 [￨6 3￨6 ]￨6 )￨6 )￨6 )￨6 ,￨6 (￨6 (￨6 String￨6 )￨6 (￨6 args￨6 [￨6 1￨6 ]￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 try￨4 (￨4 )￨4 {￨4 return￨5 method￨5 .￨5 invoke￨5 (￨5 this￨5 .￨5 target￨5 ,￨5 args￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 InvocationTargetException￨5 ex￨5 )￨4 {￨4 throw￨5 ex￨5 .￨5 getTargetException￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 private￨3 MessageProducer￨3 getCachedProducer￨3 (￨3 Destination￨3 dest￨3 )￨3 throws￨3 JMSException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 MessageConsumer￨3 getCachedConsumer￨3 (￨3 Destination￨3 dest￨3 ,￨3 String￨3 selector￨3 ,￨3 boolean￨3 noLocal￨3 ,￨3 String￨3 subscription￨3 )￨3 throws￨3 JMSException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 logicalClose￨3 (￨3 Session￨3 proxy￨3 )￨3 throws￨3 JMSException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 physicalClose￨3 (￨3 )￨3 throws￨3 JMSException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 ConsumerCacheKey￨2 {￨2 private￨3 final￨3 Destination￨3 destination￨3 ;￨3 private￨3 final￨3 String￨3 selector￨3 ;￨3 private￨3 final￨3 boolean￨3 noLocal￨3 ;￨3 private￨3 final￨3 String￨3 subscription￨3 ;￨3 private￨3 ConsumerCacheKey￨3 (￨3 Destination￨4 destination￨4 ,￨4 String￨4 selector￨4 ,￨4 boolean￨4 noLocal￨4 ,￨4 String￨4 subscription￨4 )￨3 {￨3 }￨3 public￨3 boolean￨3 equals￨3 (￨3 Object￨4 other￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 EditorManager￨1 implements￨1 IExtensionChangeHandler￨1 {￨1 EditorAreaHelper￨2 editorPresentation￨2 ;￨2 WorkbenchWindow￨2 window￨2 ;￨2 WorkbenchPage￨2 page￨2 ;￨2 private￨2 Map￨2 actionCache￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PIN_EDITOR_KEY￨2 =￨2 "PIN_EDITOR"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 PIN_EDITOR￨2 =￨2 "ovr16/pinned_ovr.gif"￨2 ;￨2 private￨2 IPropertyChangeListener￨2 editorPropChangeListnener￨2 =￨2 null￨2 ;￨2 private￨2 IHandlerActivation￨2 pinEditorHandlerActivation￨2 =￨2 null￨2 ;￨2 static￨2 final￨2 String￨2 RESOURCES_TO_SAVE_MESSAGE￨2 =￨2 WorkbenchMessages￨2 .￨2 EditorManager_saveResourcesMessage￨2 ;￨2 static￨2 final￨2 String￨2 SAVE_RESOURCES_TITLE￨2 =￨2 WorkbenchMessages￨2 .￨2 EditorManager_saveResourcesTitle￨2 ;￨2 public￨2 EditorManager￨2 (￨2 WorkbenchWindow￨3 window￨3 ,￨3 WorkbenchPage￨3 workbenchPage￨3 ,￨3 EditorAreaHelper￨3 pres￨3 )￨2 {￨2 }￨2 void￨2 checkDeleteEditorResources￨2 (￨2 )￨2 {￨2 }￨2 void￨2 checkCreateEditorPropListener￨2 (￨2 )￨2 {￨2 }￨2 void￨2 checkCreatePinEditorShortcutKeyHandler￨2 (￨2 )￨2 {￨2 }￨2 ImageDescriptor￨2 getEditorPinImageDesc￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 collectDirtyEditors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 containsEditor￨2 (￨2 IEditorReference￨3 ref￨3 )￨2 {￨2 }￨2 private￨2 EditorActionBars￨2 createEditorActionBars￨2 (￨2 EditorDescriptor￨3 desc￨3 ,￨3 final￨3 IEditorSite￨3 site￨3 )￨2 {￨2 }￨2 private￨2 EditorActionBars￨2 createEmptyEditorActionBars￨2 (￨2 final￨3 IEditorSite￨3 site￨3 )￨2 {￨2 }￨2 void￨2 disposeEditorActionBars￨2 (￨2 EditorActionBars￨3 actionBars￨3 )￨2 {￨2 }￨2 public￨2 IEditorPart￨2 findEditor￨2 (￨2 IEditorInput￨3 input￨3 )￨2 {￨2 }￨2 public￨2 IEditorPart￨2 findEditor￨2 (￨2 String￨3 editorId￨3 ,￨3 IEditorInput￨3 input￨3 ,￨3 int￨3 matchFlags￨3 )￨2 {￨2 }￨2 public￨2 IEditorReference￨2 [￨2 ]￨2 findEditors￨2 (￨2 IEditorInput￨3 input￨3 ,￨3 String￨3 editorId￨3 ,￨3 int￨3 matchFlags￨3 )￨2 {￨2 }￨2 private￨2 void￨2 findEditors￨2 (￨2 List￨3 editorList￨3 ,￨3 IEditorInput￨3 input￨3 ,￨3 String￨3 editorId￨3 ,￨3 int￨3 matchFlags￨3 ,￨3 List￨3 result￨3 )￨2 {￨2 }￨2 private￨2 Display￨2 getDisplay￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getEditorCount￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IEditorRegistry￨2 getEditorRegistry￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorPart￨2 [￨2 ]￨2 getDirtyEditors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorReference￨2 [￨2 ]￨2 getEditors￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorPart￨2 getVisibleEditor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSaveAllNeeded￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IEditorReference￨2 findReusableEditor￨2 (￨2 EditorDescriptor￨3 desc￨3 )￨2 {￨2 }￨2 public￨2 IEditorReference￨2 openEditor￨2 (￨2 String￨2 editorId￨2 ,￨2 IEditorInput￨2 input￨2 ,￨2 boolean￨2 setVisible￨2 ,￨2 IMemento￨2 editorState￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorReference￨2 openEditorFromDescriptor￨2 (￨2 EditorDescriptor￨2 desc￨2 ,￨2 IEditorInput￨2 input￨2 ,￨2 IMemento￨2 editorState￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IEditorReference￨2 openExternalEditor￨2 (￨2 final￨2 EditorDescriptor￨2 desc￨2 ,￨2 IEditorInput￨2 input￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 IEditorReference￨2 [￨2 ]￨2 openMultiEditor￨2 (￨2 final￨2 IEditorReference￨2 ref￨2 ,￨2 final￨2 AbstractMultiEditor￨2 part￨2 ,￨2 final￨2 MultiEditorInput￨2 input￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 createEditorTab￨2 (￨2 final￨2 EditorReference￨2 ref￨2 ,￨2 final￨2 String￨2 workbookId￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 editorPresentation￨3 .￨3 addEditor￨3 (￨3 ref￨3 ,￨3 workbookId￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 EditorSite￨2 createSite￨2 (￨2 final￨2 IEditorReference￨2 ref￨2 ,￨2 final￨2 IEditorPart￨2 part￨2 ,￨2 final￨2 EditorDescriptor￨2 desc￨2 ,￨2 final￨2 IEditorInput￨2 input￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IEditorReference￨2 reuseInternalEditor￨2 (￨2 EditorDescriptor￨2 desc￨2 ,￨2 IEditorInput￨2 input￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 IEditorPart￨2 createPart￨2 (￨2 final￨2 EditorDescriptor￨2 desc￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IEditorReference￨2 openSystemExternalEditor￨2 (￨2 final￨2 IPath￨2 location￨2 )￨2 throws￨2 PartInitException￨2 (￨2 )￨2 {￨2 }￨2 ImageDescriptor￨2 findImage￨2 (￨2 EditorDescriptor￨3 desc￨3 ,￨3 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 IStatus￨2 restoreState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 saveAll￨2 (￨2 boolean￨3 confirm￨3 ,￨3 boolean￨3 closing￨3 ,￨3 boolean￨3 addNonPartSources￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 saveAll￨2 (￨2 List￨3 dirtyParts￨3 ,￨3 boolean￨3 confirm￨3 ,￨3 boolean￨3 closing￨3 ,￨3 boolean￨3 addNonPartSources￨3 ,￨3 final￨3 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 saveAll￨2 (￨2 List￨3 dirtyParts￨3 ,￨3 final￨3 boolean￨3 confirm￨3 ,￨3 final￨3 boolean￨3 closing￨3 ,￨3 boolean￨3 addNonPartSources￨3 ,￨3 final￨3 IRunnableContext￨3 runnableContext￨3 ,￨3 final￨3 IShellProvider￨3 shellProvider￨3 )￨2 {￨2 }￨2 private￨2 static￨2 List￨2 convertToSaveables￨2 (￨2 List￨3 parts￨3 ,￨3 boolean￨3 closing￨3 ,￨3 boolean￨3 addNonPartSources￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Saveable￨2 [￨2 ]￨2 getSaveables￨2 (￨2 IWorkbenchPart￨3 part￨3 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 closingLastPartShowingModel￨2 (￨2 Saveable￨3 model￨3 ,￨3 List￨3 closingParts￨3 ,￨3 IWorkbenchPage￨3 page￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 savePart￨2 (￨2 final￨3 ISaveablePart￨3 saveable￨3 ,￨3 IWorkbenchPart￨3 part￨3 ,￨3 boolean￨3 confirm￨3 )￨2 {￨2 }￨2 public￨2 IStatus￨2 saveState￨2 (￨2 final￨3 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 setVisibleEditor￨2 (￨2 IEditorReference￨3 newEd￨3 ,￨3 boolean￨3 setFocus￨3 )￨2 {￨2 }￨2 private￨2 IPathEditorInput￨2 getPathEditorInput￨2 (￨2 IEditorInput￨3 input￨3 )￨2 {￨2 }￨2 private￨2 class￨2 InnerEditor￨2 extends￨2 EditorReference￨2 {￨2 private￨3 IEditorReference￨3 outerEditor￨3 ;￨3 private￨3 AbstractMultiEditor￨3 outerEditorPart￨3 ;￨3 public￨3 InnerEditor￨3 (￨3 IEditorReference￨4 outerEditor￨4 ,￨4 AbstractMultiEditor￨4 outerEditorPart￨4 ,￨4 IEditorInput￨4 input￨4 ,￨4 EditorDescriptor￨4 desc￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 doDisposePart￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 PartPane￨3 createPane￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 Composite￨3 getPaneControlContainer￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 restoreEditorState￨2 (￨2 IMemento￨3 editorMem￨3 ,￨3 ArrayList￨3 visibleEditors￨3 ,￨3 IEditorReference￨3 [￨3 ]￨3 activeEditor￨3 ,￨3 MultiStatus￨3 result￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 saveEditorState￨2 (￨2 IMemento￨3 mem￨3 ,￨3 IEditorReference￨3 ed￨3 ,￨3 MultiStatus￨3 res￨3 )￨2 {￨2 }￨2 public￨2 IMemento￨2 getMemento￨2 (￨2 IEditorReference￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeExtension￨2 (￨2 IExtension￨3 source￨3 ,￨3 Object￨3 [￨3 ]￨3 objects￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addExtension￨2 (￨2 IExtensionTracker￨3 tracker￨3 ,￨3 IExtension￨3 extension￨3 )￨2 {￨2 }￨2 IEditorReference￨2 openEmptyTab￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 useIPersistableEditor￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 ;￨2 private￨2 static￨2 final￨2 AtomicInteger￨2 archiveCount￨2 =￨2 new￨2 AtomicInteger￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 private￨2 OSGiSubsystemState￨2 subsystemState￨2 ;￨2 private￨2 DeploymentChain￨2 deploymentChain￨2 ;￨2 private￨2 Selector￨2 selector￨2 ;￨2 public￨2 OSGiSubsystemSupport￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 public￨2 OSGiSubsystemSupport￨2 (￨2 final￨2 OSGiSubsystemState￨2 subsystemState￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServiceContainer￨2 getServiceContainer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModuleLoader￨2 getClassifyingModuleLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 OSGiSubsystemSupport￨2 .￨2 TestModuleLoader￨2 getTestModuleLoader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DeploymentChain￨2 getDeploymentChain￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getUniqueName￨2 (￨2 String￨3 prefix￨3 )￨2 {￨2 }￨2 public￨2 void￨2 assertServiceUp￨2 (￨2 ServiceName￨3 serviceName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 assertServiceDown￨2 (￨2 ServiceName￨3 serviceName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeDeploymentChain￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setupServices￨2 (￨2 final￨2 BatchBuilder￨2 batchBuilder￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setupEnvironmentServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupModuleLoaderServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupDeploymentServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupFrameworkServices￨2 (￨2 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨2 {￨2 batchBuilder￨3 .￨3 addService￨3 (￨3 SERVICE_NAME￨3 ,￨3 new￨3 MBeanServerService￨3 (￨3 )￨3 )￨3 ;￨3 OSGiSubsystemSupport￨3 .￨3 TestBundleManagerService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 )￨3 ;￨3 <START_BUG>￨3 FrameworkService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 ,￨3 null￨3 )￨3 ;￨3 <END_BUG>￨3 PackageAdminService￨3 .￨3 addService￨3 (￨3 batchBuilder￨3 )￨3 ;￨3 }￨2 private￨2 Selector￨2 getDeploymentChainSelector￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BundleManager￨2 getBundleManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BundleContext￨2 getSystemContext￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Configuration￨2 getSubsystemConfig￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 ,￨2 ModuleIdentifier￨2 exporterId￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 assertLoadClassFails￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 <￨2 ?￨2 >￨2 loadClass￨2 (￨2 ModuleIdentifier￨2 identifier￨2 ,￨2 String￨2 className￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Module￨2 loadModule￨2 (￨2 ModuleIdentifier￨2 identifier￨2 )￨2 throws￨2 ModuleLoadException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Bundle￨2 executeDeploy￨2 (￨2 final￨2 JavaArchive￨2 archive￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 executeUndeploy￨2 (￨2 final￨2 JavaArchive￨2 archive￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 List￨2 <￨2 ServiceName￨2 >￨2 runWithLatchedBatch￨2 (￨2 final￨2 OSGiSubsystemSupport￨2 .￨2 BatchedWork￨2 work￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 interface￨2 BatchedWork￨2 (￨2 )￨2 {￨2 void￨3 execute￨3 (￨3 final￨3 BatchBuilder￨3 batchBuilder￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 TestServiceListener￨2 extends￨2 AbstractServiceListener￨2 <￨2 Object￨2 >￨2 {￨2 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 registeredServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 startedServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ServiceName￨3 >￨3 failedServices￨3 =￨3 new￨3 ArrayList￨3 <￨3 ServiceName￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 Mode￨3 ,￨3 List￨3 <￨3 ServiceName￨3 >￨3 >￨3 initialModes￨3 ;￨3 private￨3 final￨3 AtomicInteger￨3 count￨3 =￨3 new￨3 AtomicInteger￨3 (￨3 1￨3 )￨3 ;￨3 private￨3 final￨3 Runnable￨3 finishTask￨3 ;￨3 public￨3 TestServiceListener￨3 (￨3 Runnable￨4 finishTask￨4 ,￨4 Map￨4 <￨4 Mode￨4 ,￨4 List￨4 <￨4 ServiceName￨4 >￨4 >￨4 initialModes￨4 )￨3 {￨3 }￨3 public￨3 void￨3 listenerAdded￨3 (￨3 final￨4 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 serviceStarted￨3 (￨3 final￨4 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 serviceFailed￨3 (￨3 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 ,￨4 StartException￨4 reason￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 serviceRemoved￨3 (￨3 ServiceController￨4 <￨4 ?￨4 extends￨4 Object￨4 >￨4 controller￨4 )￨3 {￨3 }￨3 public￨3 void￨3 finishBatch￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 batchComplete￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 TestModuleLoader￨2 extends￨2 ModuleLoader￨2 implements￨2 Service￨2 <￨2 OSGiSubsystemSupport￨2 .￨2 TestModuleLoader￨2 >￨2 {￨2 public￨3 static￨3 final￨3 ServiceName￨3 SERVICE_NAME￨3 =￨3 JBOSS￨3 .￨3 append￨3 (￨3 "module"￨3 ,￨3 "loader"￨3 ,￨3 "support"￨3 )￨3 ;￨3 private￨3 String￨3 prefix￨3 ;￨3 private￨3 Map￨3 <￨3 ModuleIdentifier￨3 ,￨3 ModuleSpec￨3 >￨3 modules￨3 =￨3 new￨3 HashMap￨3 <￨3 ModuleIdentifier￨3 ,￨3 ModuleSpec￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 Injector￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 injector￨3 ;￨3 TestModuleLoader￨3 (￨3 String￨4 prefix￨4 )￨3 {￨3 }￨3 public￨3 void￨3 addModuleSpec￨3 (￨3 ModuleSpec￨4 moduleSpec￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 ModuleSpec￨3 findModule￨3 (￨3 ModuleIdentifier￨3 identifier￨3 )￨3 throws￨3 ModuleLoadException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 static￨3 OSGiSubsystemSupport￨3 .￨3 TestModuleLoader￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 OSGiSubsystemSupport￨3 .￨3 TestModuleLoader￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 TestBundleManagerService￨2 implements￨2 Service￨2 <￨2 BundleManager￨2 >￨2 {￨2 public￨3 static￨3 final￨3 ServiceName￨3 SERVICE_NAME￨3 =￨3 BundleManagerService￨3 .￨3 SERVICE_NAME￨3 ;￨3 private￨3 static￨3 final￨3 Logger￨3 log￨3 =￨3 Logger￨3 .￨3 getLogger￨3 (￨3 "org.jboss.as.osgi"￨3 )￨3 ;￨3 private￨3 InjectedValue￨3 <￨3 Configuration￨3 >￨3 injectedConfig￨3 =￨3 new￨3 InjectedValue￨3 <￨3 Configuration￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 InjectedValue￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 injectedModuleLoader￨3 =￨3 new￨3 InjectedValue￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 Injector￨3 <￨3 ClassifyingModuleLoaderService￨3 >￨3 moduleLoaderInjector￨3 ;￨3 private￨3 BundleManager￨3 bundleManager￨3 ;￨3 public￨3 static￨3 void￨3 addService￨3 (￨3 final￨4 BatchBuilder￨4 batchBuilder￨4 )￨3 {￨3 }￨3 public￨3 static￨3 BundleManager￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BundleManager￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 TestServerDeploymentRepository￨2 implements￨2 ServerDeploymentRepository￨2 ,￨2 Service￨2 <￨2 ServerDeploymentRepository￨2 >￨2 {￨2 private￨3 Map￨3 <￨3 String￨3 ,￨3 JavaArchive￨3 >￨3 repository￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 JavaArchive￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 static￨3 OSGiSubsystemSupport￨3 .￨3 TestServerDeploymentRepository￨3 getServiceValue￨3 (￨3 ServiceContainer￨4 container￨4 )￨3 {￨3 }￨3 public￨3 void￨3 registerDeploymentArchive￨3 (￨3 String￨4 name￨4 ,￨4 JavaArchive￨4 archive￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 start￨3 (￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 stop￨3 (￨3 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 ServerDeploymentRepository￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 byte￨3 [￨3 ]￨3 addDeploymentContent￨3 (￨3 String￨3 name￨3 ,￨3 String￨3 runtimeName￨3 ,￨3 InputStream￨3 stream￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Closeable￨3 mountDeploymentContent￨3 (￨3 String￨3 name￨3 ,￨3 String￨3 runtimeName￨3 ,￨3 byte￨3 [￨3 ]￨3 deploymentHash￨3 ,￨3 VirtualFile￨3 mountPoint￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 Version￨1 {￨1 private￨2 Version￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 id￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "4.5"￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ClassicalRungeKuttaIntegratorTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testMissedEndEvent￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSanityChecks￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDecreasingSteps￨2 (￨2 )￨2 {￨2 TestProblemAbstract￨3 [￨3 ]￨3 problems￨3 =￨3 TestProblemFactory￨3 .￨3 getProblems￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 k￨4 =￨4 0￨4 ;￨4 k￨4 <￨4 (￨4 problems￨4 .￨4 length￨4 )￨4 ;￨4 ++￨4 k￨4 )￨3 {￨3 double￨4 previousValueError￨4 =￨4 Double￨4 .￨4 NaN￨4 ;￨4 double￨4 previousTimeError￨4 =￨4 Double￨4 .￨4 NaN￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 4￨5 ;￨5 i￨5 <￨5 10￨5 ;￨5 ++￨5 i￨5 )￨4 {￨4 TestProblemAbstract￨5 pb￨5 =￨5 problems￨5 [￨5 k￨5 ]￨5 .￨5 copy￨5 (￨5 )￨5 ;￨5 double￨5 step￨5 =￨5 (￨5 (￨5 pb￨5 .￨5 getFinalTime￨5 (￨5 )￨5 )￨5 -￨5 (￨5 pb￨5 .￨5 getInitialTime￨5 (￨5 )￨5 )￨5 )￨5 *￨5 (￨5 FastMath￨5 .￨5 pow￨5 (￨5 2.0￨5 ,￨5 (￨5 -￨5 i￨5 )￨5 )￨5 )￨5 ;￨5 FirstOrderIntegrator￨5 integ￨5 =￨5 new￨5 ClassicalRungeKuttaIntegrator￨5 (￨5 step￨5 )￨5 ;￨5 TestProblemHandler￨5 handler￨5 =￨5 new￨5 TestProblemHandler￨5 (￨5 pb￨5 ,￨5 integ￨5 )￨5 ;￨5 integ￨5 .￨5 addStepHandler￨5 (￨5 handler￨5 )￨5 ;￨5 EventHandler￨5 [￨5 ]￨5 functions￨5 =￨5 pb￨5 .￨5 getEventsHandlers￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 l￨6 =￨6 0￨6 ;￨6 l￨6 <￨6 (￨6 functions￨6 .￨6 length￨6 )￨6 ;￨6 ++￨6 l￨6 )￨5 {￨5 integ￨6 .￨6 addEventHandler￨6 (￨6 functions￨6 [￨6 l￨6 ]￨6 ,￨6 Double￨6 .￨6 POSITIVE_INFINITY￨6 ,￨6 (￨6 1.0E-6￨6 *￨6 step￨6 )￨6 ,￨6 1000￨6 )￨6 ;￨6 }￨5 Assert￨5 .￨5 assertEquals￨5 (￨5 functions￨5 .￨5 length￨5 ,￨5 integ￨5 .￨5 getEventHandlers￨5 (￨5 )￨5 .￨5 size￨5 (￨5 )￨5 )￨5 ;￨5 double￨5 stopTime￨5 =￨5 integ￨5 .￨5 integrate￨5 (￨5 pb￨5 ,￨5 pb￨5 .￨5 getInitialTime￨5 (￨5 )￨5 ,￨5 pb￨5 .￨5 getInitialState￨5 (￨5 )￨5 ,￨5 pb￨5 .￨5 getFinalTime￨5 (￨5 )￨5 ,￨5 new￨5 double￨5 [￨5 pb￨5 .￨5 getDimension￨5 (￨5 )￨5 ]￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 functions￨6 .￨6 length￨6 )￨6 ==￨6 0￨6 )￨5 {￨5 Assert￨6 .￨6 assertEquals￨6 (￨6 pb￨6 .￨6 getFinalTime￨6 (￨6 )￨6 ,￨6 stopTime￨6 ,￨6 1.0E-10￨6 )￨6 ;￨6 }￨5 double￨5 error￨5 =￨5 handler￨5 .￨5 getMaximalValueError￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 i￨6 >￨6 4￨6 )￨5 {￨5 <START_BUG>￨6 Assert￨6 .￨6 assertTrue￨6 (￨6 (￨6 error￨6 <￨6 (￨6 FastMath￨6 .￨6 abs￨6 (￨6 previousValueError￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 previousValueError￨5 =￨5 error￨5 ;￨5 double￨5 timeError￨5 =￨5 handler￨5 .￨5 getMaximalTimeError￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 i￨6 >￨6 4￨6 )￨5 {￨5 Assert￨6 .￨6 assertTrue￨6 (￨6 (￨6 timeError￨6 <=￨6 (￨6 FastMath￨6 .￨6 abs￨6 (￨6 previousTimeError￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 previousTimeError￨5 =￨5 timeError￨5 ;￨5 integ￨5 .￨5 clearEventHandlers￨5 (￨5 )￨5 ;￨5 Assert￨5 .￨5 assertEquals￨5 (￨5 0￨5 ,￨5 integ￨5 .￨5 getEventHandlers￨5 (￨5 )￨5 .￨5 size￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testSmallStep￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testBigStep￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testBackward￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testKepler￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 KeplerHandler￨2 implements￨2 StepHandler￨2 {￨2 public￨3 KeplerHandler￨3 (￨3 TestProblem3￨4 pb￨4 )￨3 {￨3 }￨3 public￨3 void￨3 reset￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 handleStep￨3 (￨3 StepInterpolator￨4 interpolator￨4 ,￨4 boolean￨4 isLast￨4 )￨3 {￨3 }￨3 private￨3 double￨3 maxError￨3 =￨3 0￨3 ;￨3 private￨3 TestProblem3￨3 pb￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testStepSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ReferencesSearchGroup￨1 extends￨1 ActionGroup￨1 {￨1 private￨2 final￨2 IWorkbenchSite￨2 site￨2 ;￨2 private￨2 IActionBars￨2 actionBars￨2 ;￨2 private￨2 final￨2 String￨2 groupId￨2 ;￨2 private￨2 SelectionDispatchAction￨2 findReferencesAction￨2 ;￨2 public￨2 ReferencesSearchGroup￨2 (￨2 final￨3 IWorkbenchSite￨3 site￨3 )￨2 {￨2 }￨2 protected￨2 ReferencesSearchGroup￨2 (￨2 final￨3 AbstractXtendXpandEditor￨3 editor￨3 )￨2 {￨2 }￨2 private￨2 void￨2 registerAction￨2 (￨2 final￨3 SelectionDispatchAction￨3 action￨3 ,￨3 final￨3 ISelectionProvider￨3 provider￨3 ,￨3 final￨3 ISelection￨3 selection￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addAction￨2 (￨2 final￨3 IAction￨3 action￨3 ,￨3 final￨3 IMenuManager￨3 manager￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 fillActionBars￨2 (￨2 final￨3 IActionBars￨3 actionBars￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 fillContextMenu￨2 (￨2 final￨3 IMenuManager￨3 manager￨3 )￨2 {￨2 <START_BUG>￨3 final￨3 IMenuManager￨3 menuManager￨3 =￨3 new￨3 org￨3 .￨3 eclipse￨3 .￨3 jface￨3 .￨3 action￨3 .￨3 MenuManager￨3 (￨3 "Re&ferences"￨3 ,￨3 IContextMenuConstants￨3 .￨3 GROUP_SEARCH￨3 )￨3 ;￨3 <END_BUG>￨3 addAction￨3 (￨3 findReferencesAction￨3 ,￨3 menuManager￨3 )￨3 ;￨3 menuManager￨3 .￨3 add￨3 (￨3 new￨3 Separator￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 menuManager￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 manager￨4 .￨4 appendToGroup￨4 (￨4 groupId￨4 ,￨4 menuManager￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateGlobalActionHandlers￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 disposeAction￨2 (￨2 final￨3 ISelectionChangedListener￨3 action￨3 ,￨3 final￨3 ISelectionProvider￨3 provider￨3 )￨2 {￨2 }￨2 }￨1
class￨1 StyledTextTab￨1 extends￨1 ScrollableTab￨1 {￨1 StyledText￨2 styledText￨2 ;￨2 Group￨2 styledTextGroup￨2 ;￨2 Group￨2 styledTextStyleGroup￨2 ;￨2 Button￨2 wrapButton￨2 ;￨2 Button￨2 readOnlyButton￨2 ;￨2 Button￨2 fullSelectionButton￨2 ;￨2 Button￨2 boldButton￨2 ;￨2 Button￨2 italicButton￨2 ;￨2 Button￨2 redButton￨2 ;￨2 Button￨2 yellowButton￨2 ;￨2 Button￨2 underlineButton￨2 ;￨2 Button￨2 strikeoutButton￨2 ;￨2 Image￨2 boldImage￨2 ;￨2 Image￨2 italicImage￨2 ;￨2 Image￨2 redImage￨2 ;￨2 Image￨2 yellowImage￨2 ;￨2 Image￨2 underlineImage￨2 ;￨2 Image￨2 strikeoutImage￨2 ;￨2 String￨2 text￨2 ;￨2 StyleRange￨2 [￨2 ]￨2 styleRanges￨2 ;￨2 StyledTextTab￨2 (￨2 ControlExample￨3 instance￨3 )￨2 {￨2 }￨2 Image￨2 createBitmapImage￨2 (￨2 Display￨3 display￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 void￨2 createControlWidgets￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createStyleGroup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createStyledTextStyleGroup￨2 (￨2 )￨2 {￨2 }￨2 Composite￨2 createTabFolderPage￨2 (￨2 TabFolder￨3 tabFolder￨3 )￨2 {￨2 }￨2 void￨2 disposeExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 getCustomEventNames￨2 (￨2 )￨2 {￨2 }￨2 Widget￨2 [￨2 ]￨2 getExampleWidgets￨2 (￨2 )￨2 {￨2 }￨2 String￨2 [￨2 ]￨2 getMethodNames￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 "CaretOffset"￨3 ,￨3 "DoubleClickEnabled"￨3 ,￨3 "Editable"￨3 ,￨3 "HorizontalIndex"￨3 ,￨3 "HorizontalPixel"￨3 ,￨3 "Orientation"￨3 ,￨3 "Selection"￨3 ,￨3 "Tabs"￨3 ,￨3 "Text"￨3 ,￨3 "TextLimit"￨3 ,￨3 "ToolTipText"￨3 ,￨3 "TopIndex"￨3 ,￨3 "TopPixel"￨3 ,￨3 "WordWrap"￨3 }￨3 ;￨3 <END_BUG>￨3 }￨2 String￨2 getTabText￨2 (￨2 )￨2 {￨2 }￨2 void￨2 hookCustomListener￨2 (￨2 final￨3 String￨3 eventName￨3 )￨2 {￨2 }￨2 void￨2 setExampleWidgetState￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 CreateTypeMemberOperation￨1 extends￨1 CreateElementInCUOperation￨1 {￨1 protected￨2 String￨2 source￨2 =￨2 null￨2 ;￨2 protected￨2 String￨2 alteredName￨2 ;￨2 protected￨2 ASTNode￨2 createdNode￨2 ;￨2 public￨2 CreateTypeMemberOperation￨2 (￨2 IJavaElement￨3 parentElement￨3 ,￨3 String￨3 source￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 StructuralPropertyDescriptor￨2 getChildPropertyDescriptor￨2 (￨2 ASTNode￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 ASTNode￨2 generateElementAST￨2 (￨2 ASTRewrite￨2 rewriter￨2 ,￨2 ICompilationUnit￨2 cu￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 removeIndentAndNewLines￨2 (￨2 String￨2 code￨2 ,￨2 ICompilationUnit￨2 cu￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 SimpleName￨2 rename￨2 (￨2 ASTNode￨3 node￨3 ,￨3 SimpleName￨3 newName￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 generateSyntaxIncorrectAST￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IType￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setAlteredName￨2 (￨2 String￨3 newName￨3 )￨2 {￨2 }￨2 public￨2 IJavaModelStatus￨2 verify￨2 (￨2 )￨2 {￨2 IJavaModelStatus￨3 status￨3 =￨3 super￨3 .￨3 verify￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 status￨4 .￨4 isOK￨4 (￨4 )￨4 )￨4 )￨3 {￨3 return￨4 status￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 source￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 new￨4 JavaModelStatus￨4 (￨4 IJavaModelStatusConstants￨4 .￨4 INVALID_CONTENTS￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 force￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 try￨3 (￨3 )￨3 {￨3 ICompilationUnit￨4 cu￨4 =￨4 getCompilationUnit￨4 (￨4 )￨4 ;￨4 generateElementAST￨4 (￨4 null￨4 ,￨4 cu￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 JavaModelException￨4 jme￨4 )￨3 {￨3 return￨4 jme￨4 .￨4 getJavaModelStatus￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 verifyNameCollision￨3 (￨3 )￨3 ;￨3 }￨3 return￨3 JavaModelStatus￨3 .￨3 VERIFIED_OK￨3 ;￨3 }￨2 protected￨2 IJavaModelStatus￨2 verifyNameCollision￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AndAnnotationTypePattern￨1 extends￨1 AnnotationTypePattern￨1 {￨1 private￨2 AnnotationTypePattern￨2 left￨2 ;￨2 private￨2 AnnotationTypePattern￨2 right￨2 ;￨2 public￨2 AndAnnotationTypePattern￨2 (￨2 AnnotationTypePattern￨3 left￨3 ,￨3 AnnotationTypePattern￨3 right￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 matches￨2 (￨2 AnnotatedElement￨3 annotated￨3 )￨2 {￨2 }￨2 public￨2 AnnotationTypePattern￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 ,￨3 boolean￨3 allowBinding￨3 )￨2 {￨2 }￨2 public￨2 static￨2 AnnotationTypePattern￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 (￨3 (￨3 "("￨3 +￨3 (￨3 left￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 +￨3 "<seq2seq4repair_space>&&<seq2seq4repair_space>"￨3 )￨3 +￨3 (￨3 right￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 +￨3 ")"￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 AnnotationTypePattern￨2 getLeft￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AnnotationTypePattern￨2 getRight￨2 (￨2 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 EmbedBlob￨1 extends￨1 ConnectionChild￨1 implements￨1 Blob￨1 ,￨1 EngineLOB￨1 {￨1 private￨2 boolean￨2 materialized￨2 ;￨2 private￨2 PositionedStoreStream￨2 myStream￨2 ;￨2 private￨2 int￨2 locator￨2 =￨2 0￨2 ;￨2 private￨2 long￨2 streamLength￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 final￨2 int￨2 streamPositionOffset￨2 ;￨2 private￨2 boolean￨2 isValid￨2 =￨2 true￨2 ;￨2 private￨2 LOBStreamControl￨2 control￨2 ;￨2 EmbedBlob￨2 (￨2 byte￨2 [￨2 ]￨2 blobBytes￨2 ,￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 EmbedBlob￨2 (￨2 DataValueDescriptor￨2 dvd￨2 ,￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 handleStreamValue￨2 (￨2 InputStream￨2 dvdStream￨2 ,￨2 EmbedConnection￨2 con￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 long￨2 setBlobPosition￨2 (￨2 long￨2 logicalPos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 read￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 length￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 getBytes￨2 (￨2 long￨2 startPos￨2 ,￨2 int￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getBinaryStream￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 byte￨2 [￨2 ]￨2 pattern￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkMatch￨2 (￨2 byte￨2 [￨2 ]￨2 pattern￨2 ,￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 position￨2 (￨2 Blob￨2 pattern￨2 ,￨2 long￨2 start￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 checkMatch￨2 (￨2 Blob￨2 pattern￨2 ,￨2 long￨2 pos￨2 )￨2 throws￨2 IOException￨2 ,￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SQLException￨2 handleMyExceptions￨2 (￨2 Throwable￨2 t￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 finalize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setBytes￨2 (￨2 long￨2 pos￨2 ,￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 setBytes￨2 (￨2 long￨2 pos￨2 ,￨2 byte￨2 [￨2 ]￨2 bytes￨2 ,￨2 int￨2 offset￨2 ,￨2 int￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 checkValidity￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 pos￨4 -￨4 1￨4 )￨4 >￨4 (￨4 length￨4 (￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_POSITION_TOO_LARGE￨4 ,￨4 new￨4 Long￨4 (￨4 pos￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 pos￨4 <￨4 1￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_BAD_POSITION￨4 ,￨4 new￨4 Long￨4 (￨4 pos￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 offset￨4 <￨4 0￨4 )￨4 ||￨4 (￨4 offset￨4 >￨4 (￨4 bytes￨4 .￨4 length￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_INVALID_OFFSET￨4 ,￨4 new￨4 Long￨4 (￨4 offset￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 len￨4 <￨4 0￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 BLOB_NONPOSITIVE_LENGTH￨4 ,￨4 new￨4 Long￨4 (￨4 len￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 len￨4 ==￨4 0￨4 )￨3 {￨3 return￨4 0￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 len￨3 +￨3 offset￨3 )￨3 >￨3 (￨3 bytes￨3 .￨3 length￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 throw￨3 Util￨3 .￨3 generateCsSQLException￨3 (￨3 BLOB_LENGTH_TOO_LONG￨3 ,￨3 new￨3 Long￨3 (￨3 len￨3 )￨3 )￨3 ;￨3 }￨3 try￨3 (￨3 )￨3 {￨3 if￨4 (￨4 materialized￨5 )￨4 {￨4 control￨5 .￨5 write￨5 (￨5 bytes￨5 ,￨5 offset￨5 ,￨5 len￨5 ,￨5 (￨5 pos￨5 -￨5 1￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 control￨5 =￨5 new￨5 LOBStreamControl￨5 (￨5 getEmbedConnection￨5 (￨5 )￨5 )￨5 ;￨5 control￨5 .￨5 copyData￨5 (￨5 myStream￨5 ,￨5 length￨5 (￨5 )￨5 )￨5 ;￨5 control￨5 .￨5 write￨5 (￨5 bytes￨5 ,￨5 offset￨5 ,￨5 len￨5 ,￨5 (￨5 pos￨5 -￨5 1￨5 )￨5 )￨5 ;￨5 myStream￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 streamLength￨5 =￨5 -￨5 1￨5 ;￨5 materialized￨5 =￨5 true￨5 ;￨5 }￨4 return￨4 len￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 setStreamFailure￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 StandardException￨4 se￨4 )￨3 {￨3 throw￨4 Util￨4 .￨4 generateCsSQLException￨4 (￨4 se￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 OutputStream￨2 setBinaryStream￨2 (￨2 long￨2 pos￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 truncate￨2 (￨2 long￨2 len￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 free￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getBinaryStream￨2 (￨2 long￨2 pos￨2 ,￨2 long￨2 length￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkValidity￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isMaterialized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLocator￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DistributableSingleSignOnManagerFactoryBuilder￨1 implements￨1 org￨1 .￨1 wildfly￨1 .￨1 extension￨1 .￨1 undertow￨1 .￨1 security￨1 .￨1 sso￨1 .￨1 DistributableSingleSignOnManagerFactoryBuilder￨1 {￨1 private￨2 static￨2 SSOManagerFactoryBuilder￨2 load￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 SSOManagerFactoryBuilder￨2 builder￨2 ;￨2 public￨2 DistributableSingleSignOnManagerFactoryBuilder￨2 (￨2 )￨2 {￨2 }￨2 private￨2 DistributableSingleSignOnManagerFactoryBuilder￨2 (￨2 SSOManagerFactoryBuilder￨3 builder￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServiceBuilder￨2 <￨2 SingleSignOnManagerFactory￨2 >￨2 build￨2 (￨2 ServiceTarget￨3 target￨3 ,￨3 ServiceName￨3 name￨3 ,￨3 final￨3 ServiceName￨3 hostServiceName￨3 )￨2 {￨2 <START_BUG>￨3 ServiceName￨3 managerServiceName￨3 =￨3 name￨3 .￨3 append￨3 (￨3 "clustering"￨3 )￨3 ;￨3 <END_BUG>￨3 this￨3 .￨3 builder￨3 .￨3 build￨3 (￨3 target￨3 ,￨3 managerServiceName￨3 ,￨3 hostServiceName￨3 .￨3 getSimpleName￨3 (￨3 )￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ON_DEMAND￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 SessionManagerRegistryService￨3 .￨3 build￨3 (￨3 target￨3 ,￨3 hostServiceName￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ON_DEMAND￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 return￨3 DistributableSingleSignOnManagerFactoryService￨3 .￨3 build￨3 (￨3 target￨3 ,￨3 name￨3 ,￨3 hostServiceName￨3 ,￨3 managerServiceName￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 SimpleSortedSetFacetsExample￨1 {￨1 private￨2 final￨2 Directory￨2 indexDir￨2 =￨2 new￨2 RAMDirectory￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 FacetsConfig￨2 config￨2 =￨2 new￨2 FacetsConfig￨2 (￨2 )￨2 ;￨2 public￨2 SimpleSortedSetFacetsExample￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 index￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 IndexWriter￨3 indexWriter￨3 =￨3 new￨3 IndexWriter￨3 (￨3 indexDir￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 index￨3 .￨3 IndexWriterConfig￨3 (￨3 FacetExamples￨3 .￨3 EXAMPLES_VER￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 analysis￨3 .￨3 core￨3 .￨3 WhitespaceAnalyzer￨3 (￨3 FacetExamples￨3 .￨3 EXAMPLES_VER￨3 )￨3 )￨3 )￨3 ;￨3 Document￨3 doc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Author"￨3 ,￨3 "Bob"￨3 )￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Publish<seq2seq4repair_space>Year"￨3 ,￨3 "2010"￨3 )￨3 )￨3 ;￨3 indexWriter￨3 .￨3 addDocument￨3 (￨3 config￨3 .￨3 build￨3 (￨3 doc￨3 )￨3 )￨3 ;￨3 doc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Author"￨3 ,￨3 "Lisa"￨3 )￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Publish<seq2seq4repair_space>Year"￨3 ,￨3 "2010"￨3 )￨3 )￨3 ;￨3 indexWriter￨3 .￨3 addDocument￨3 (￨3 config￨3 .￨3 build￨3 (￨3 doc￨3 )￨3 )￨3 ;￨3 doc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Author"￨3 ,￨3 "Lisa"￨3 )￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Publish<seq2seq4repair_space>Year"￨3 ,￨3 "2012"￨3 )￨3 )￨3 ;￨3 indexWriter￨3 .￨3 addDocument￨3 (￨3 config￨3 .￨3 build￨3 (￨3 doc￨3 )￨3 )￨3 ;￨3 doc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Author"￨3 ,￨3 "Susan"￨3 )￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Publish<seq2seq4repair_space>Year"￨3 ,￨3 "2012"￨3 )￨3 )￨3 ;￨3 indexWriter￨3 .￨3 addDocument￨3 (￨3 config￨3 .￨3 build￨3 (￨3 doc￨3 )￨3 )￨3 ;￨3 doc￨3 =￨3 new￨3 Document￨3 (￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Author"￨3 ,￨3 "Frank"￨3 )￨3 )￨3 ;￨3 doc￨3 .￨3 add￨3 (￨3 new￨3 SortedSetDocValuesFacetField￨3 (￨3 "Publish<seq2seq4repair_space>Year"￨3 ,￨3 "1999"￨3 )￨3 )￨3 ;￨3 indexWriter￨3 .￨3 addDocument￨3 (￨3 config￨3 .￨3 build￨3 (￨3 doc￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 indexWriter￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 List￨2 <￨2 FacetResult￨2 >￨2 search￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 FacetResult￨2 drillDown￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 FacetResult￨2 >￨2 runSearch￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FacetResult￨2 runDrillDown￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ResolvedPointcutDefinition￨1 extends￨1 ResolvedMember￨1 {￨1 private￨2 Pointcut￨2 pointcut￨2 ;￨2 public￨2 ResolvedPointcutDefinition￨2 (￨2 TypeX￨3 declaringType￨3 ,￨3 int￨3 modifiers￨3 ,￨3 String￨3 name￨3 ,￨3 TypeX￨3 [￨3 ]￨3 parameterTypes￨3 ,￨3 Pointcut￨3 pointcut￨3 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 ResolvedPointcutDefinition￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 StringBuffer￨3 buf￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 buf￨3 .￨3 append￨3 (￨3 "poincut<seq2seq4repair_space>"￨3 )￨3 ;￨3 <END_BUG>￨3 buf￨3 .￨3 append￨3 (￨3 getDeclaringType￨3 (￨3 )￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 "."￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 "("￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 getParameterTypes￨4 (￨4 )￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 i￨5 >￨5 0￨5 )￨4 {￨4 buf￨5 .￨5 append￨5 (￨5 ",<seq2seq4repair_space>"￨5 )￨5 ;￨5 }￨4 buf￨4 .￨4 append￨4 (￨4 getParameterTypes￨4 (￨4 )￨4 [￨4 i￨4 ]￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 buf￨3 .￨3 append￨3 (￨3 ")"￨3 )￨3 ;￨3 return￨3 buf￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 Pointcut￨2 getPointcut￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAjSynthetic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 ResolvedPointcutDefinition￨2 DUMMY￨2 =￨2 new￨2 ResolvedPointcutDefinition￨2 (￨2 TypeX￨2 .￨2 OBJECT￨2 ,￨2 0￨2 ,￨2 "missing"￨2 ,￨2 TypeX￨2 .￨2 NONE￨2 ,￨2 Pointcut￨2 .￨2 makeMatchesNothing￨2 (￨2 RESOLVED￨2 )￨2 )￨2 ;￨2 }￨1
public￨1 class￨1 PackageFragment￨1 extends￨1 Openable￨1 implements￨1 IPackageFragment￨1 ,￨1 SuffixConstants￨1 {￨1 protected￨2 static￨2 final￨2 IClassFile￨2 [￨2 ]￨2 NO_CLASSFILES￨2 =￨2 new￨2 IClassFile￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 protected￨2 static￨2 final￨2 ICompilationUnit￨2 [￨2 ]￨2 NO_COMPILATION_UNITS￨2 =￨2 new￨2 ICompilationUnit￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 protected￨2 PackageFragment￨2 (￨2 PackageFragmentRoot￨3 root￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 buildStructure￨2 (￨2 OpenableElementInfo￨2 info￨2 ,￨2 IProgressMonitor￨2 pm￨2 ,￨2 Map￨2 newElements￨2 ,￨2 IResource￨2 underlyingResource￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 containsJavaResources￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 copy￨2 (￨2 IJavaElement￨2 container￨2 ,￨2 IJavaElement￨2 sibling￨2 ,￨2 String￨2 rename￨2 ,￨2 boolean￨2 force￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ICompilationUnit￨2 createCompilationUnit￨2 (￨2 String￨2 cuName￨2 ,￨2 String￨2 contents￨2 ,￨2 boolean￨2 force￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 CreateCompilationUnitOperation￨3 op￨3 =￨3 new￨3 CreateCompilationUnitOperation￨3 (￨3 this￨3 ,￨3 cuName￨3 ,￨3 contents￨3 ,￨3 force￨3 )￨3 ;￨3 <START_BUG>￨3 runOperation￨3 (￨3 op￨3 ,￨3 monitor￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 new￨3 CompilationUnit￨3 (￨3 this￨3 ,￨3 cuName￨3 ,￨3 DefaultWorkingCopyOwner￨3 .￨3 PRIMARY￨3 )￨3 ;￨3 }￨2 protected￨2 Object￨2 createElementInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 delete￨2 (￨2 boolean￨2 force￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 IClassFile￨2 getClassFile￨2 (￨2 String￨3 classFileName￨3 )￨2 {￨2 }￨2 public￨2 IClassFile￨2 [￨2 ]￨2 getClassFiles￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ICompilationUnit￨2 getCompilationUnit￨2 (￨2 String￨3 cuName￨3 )￨2 {￨2 }￨2 public￨2 ICompilationUnit￨2 [￨2 ]￨2 getCompilationUnits￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ICompilationUnit￨2 [￨2 ]￨2 getCompilationUnits￨2 (￨2 WorkingCopyOwner￨3 owner￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getElementType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getHandleFromMemento￨2 (￨2 String￨3 token￨3 ,￨3 StringTokenizer￨3 memento￨3 ,￨3 WorkingCopyOwner￨3 owner￨3 )￨2 {￨2 }￨2 protected￨2 char￨2 getHandleMementoDelimiter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getKind￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 getNonJavaResources￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPath￨2 getPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IResource￨2 getResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IResource￨2 getUnderlyingResource￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasSubpackages￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDefaultPackage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 move￨2 (￨2 IJavaElement￨2 container￨2 ,￨2 IJavaElement￨2 sibling￨2 ,￨2 String￨2 rename￨2 ,￨2 boolean￨2 force￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 rename￨2 (￨2 String￨2 newName￨2 ,￨2 boolean￨2 force￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringChildren￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 ,￨3 Object￨3 info￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringInfo￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 ,￨3 Object￨3 info￨3 )￨2 {￨2 }￨2 }￨1
class￨1 XSDHandler￨1 {￨1 static￨2 final￨2 int￨2 ATTRIBUTE_TYPE￨2 =￨2 1￨2 ;￨2 static￨2 final￨2 int￨2 ATTRIBUTEGROUP_TYPE￨2 =￨2 2￨2 ;￨2 static￨2 final￨2 int￨2 ELEMENT_TYPE￨2 =￨2 3￨2 ;￨2 static￨2 final￨2 int￨2 GROUP_TYPE￨2 =￨2 4￨2 ;￨2 static￨2 final￨2 int￨2 IDENTITYCONSTRAINT_TYPE￨2 =￨2 5￨2 ;￨2 static￨2 final￨2 int￨2 NOTATION_TYPE￨2 =￨2 6￨2 ;￨2 static￨2 final￨2 int￨2 TYPEDECL_TYPE￨2 =￨2 7￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 REDEF_IDENTIFIER￨2 =￨2 "_fn3dktizrknc9pi"￨2 ;￨2 public￨2 String￨2 EMPTY_STRING￨2 ;￨2 protected￨2 Hashtable￨2 fNotationRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedAttributeRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedAttributeGroupRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedElementRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedGroupRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedIdentityConstraintRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedNotationRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fUnparsedTypeRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fXSDocumentInfoRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fDependencyMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Vector￨2 fTraversed￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 XSDocumentInfo￨2 fRoot￨2 =￨2 null￨2 ;￨2 private￨2 Hashtable￨2 fDoc2XSDocumentMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fRedefine2XSDMap￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fRedefinedRestrictedAttributeGroupRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 fRedefinedRestrictedGroupRegistry￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 XMLErrorReporter￨2 fErrorReporter￨2 ;￨2 private￨2 XSAttributeChecker￨2 fAttributeChecker￨2 ;￨2 private￨2 SubstitutionGroupHandler￨2 fSubGroupHandler￨2 ;￨2 private￨2 XMLEntityResolver￨2 fEntityResolver￨2 ;￨2 private￨2 SymbolTable￨2 fSymbolTable￨2 ;￨2 private￨2 XSGrammarResolver￨2 fGrammarResolver￨2 ;￨2 XSDAttributeGroupTraverser￨2 fAttributeGroupTraverser￨2 ;￨2 XSDAttributeTraverser￨2 fAttributeTraverser￨2 ;￨2 XSDComplexTypeTraverser￨2 fComplexTypeTraverser￨2 ;￨2 XSDElementTraverser￨2 fElementTraverser￨2 ;￨2 XSDGroupTraverser￨2 fGroupTraverser￨2 ;￨2 XSDKeyrefTraverser￨2 fKeyrefTraverser￨2 ;￨2 XSDNotationTraverser￨2 fNotationTraverser￨2 ;￨2 XSDSimpleTypeTraverser￨2 fSimpleTypeTraverser￨2 ;￨2 XSDUniqueOrKeyTraverser￨2 fUniqueOrKeyTraverser￨2 ;￨2 XSDWildcardTraverser￨2 fWildCardTraverser￨2 ;￨2 DOMParser￨2 fSchemaParser￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INIT_STACK_SIZE￨2 =￨2 30￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 INC_STACK_SIZE￨2 =￨2 10￨2 ;￨2 private￨2 int￨2 fLocalElemStackPos￨2 ;￨2 private￨2 XSParticleDecl￨2 [￨2 ]￨2 fParticle￨2 ;￨2 private￨2 Element￨2 [￨2 ]￨2 fLocalElementDecl￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 fAllContext￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 [￨2 ]￨2 fLocalElemNamespaceContext￨2 ;￨2 XSDHandler￨2 (￨2 XSGrammarResolver￨3 gResolver￨3 )￨2 {￨2 }￨2 SchemaGrammar￨2 parseSchema￨2 (￨2 String￨3 schemaNamespace￨3 ,￨3 String￨3 schemaHint￨3 )￨2 {￨2 }￨2 protected￨2 XSDocumentInfo￨2 constructTrees￨2 (￨2 Document￨3 schemaRoot￨3 )￨2 {￨2 if￨3 (￨3 schemaRoot￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 XSDocumentInfo￨3 currSchemaInfo￨3 =￨3 new￨3 XSDocumentInfo￨3 (￨3 schemaRoot￨3 ,￨3 fAttributeChecker￨3 ,￨3 fSymbolTable￨3 )￨3 ;￨3 SchemaGrammar￨3 sg￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 sg￨4 =￨4 fGrammarResolver￨4 .￨4 getGrammar￨4 (￨4 currSchemaInfo￨4 .￨4 fTargetNamespace￨4 )￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 sg￨4 =￨4 new￨4 SchemaGrammar￨4 (￨4 fSymbolTable￨4 ,￨4 currSchemaInfo￨4 .￨4 fTargetNamespace￨4 )￨4 ;￨4 fGrammarResolver￨4 .￨4 putGrammar￨4 (￨4 sg￨4 )￨4 ;￨4 }￨3 Vector￨3 dependencies￨3 =￨3 new￨3 Vector￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 dependencies￨3 .￨3 add￨3 (￨3 currSchemaInfo￨3 )￨3 ;￨3 <END_BUG>￨3 Element￨3 rootNode￨3 =￨3 DOMUtil￨3 .￨3 getRoot￨3 (￨3 schemaRoot￨3 )￨3 ;￨3 String￨3 schemaNamespace￨3 =￨3 EMPTY_STRING￨3 ;￨3 String￨3 schemaHint￨3 =￨3 EMPTY_STRING￨3 ;￨3 Document￨3 newSchemaRoot￨3 =￨3 null￨3 ;￨3 for￨3 (￨3 Element￨4 child￨4 =￨4 DOMUtil￨4 .￨4 getFirstChildElement￨4 (￨4 rootNode￨4 )￨4 ;￨4 child￨4 !=￨4 null￨4 ;￨4 child￨4 =￨4 DOMUtil￨4 .￨4 getNextSiblingElement￨4 (￨4 child￨4 )￨4 )￨3 {￨3 String￨4 localName￨4 =￨4 DOMUtil￨4 .￨4 getLocalName￨4 (￨4 child￨4 )￨4 ;￨4 if￨4 (￨4 localName￨5 .￨5 equals￨5 (￨5 ELT_ANNOTATION￨5 )￨5 )￨4 {￨4 continue￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 localName￨5 .￨5 equals￨5 (￨5 ELT_IMPORT￨5 )￨5 )￨4 {￨4 Object￨5 [￨5 ]￨5 includeAttrs￨5 =￨5 fAttributeChecker￨5 .￨5 checkAttributes￨5 (￨5 child￨5 ,￨5 true￨5 ,￨5 currSchemaInfo￨5 )￨5 ;￨5 schemaHint￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 includeAttrs￨5 [￨5 XSAttributeChecker￨5 .￨5 ATTIDX_SCHEMALOCATION￨5 ]￨5 )￨5 )￨5 ;￨5 schemaNamespace￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 includeAttrs￨5 [￨5 XSAttributeChecker￨5 .￨5 ATTIDX_NAMESPACE￨5 ]￨5 )￨5 )￨5 ;￨5 fAttributeChecker￨5 .￨5 returnAttrArray￨5 (￨5 includeAttrs￨5 ,￨5 currSchemaInfo￨5 )￨5 ;￨5 newSchemaRoot￨5 =￨5 getSchema￨5 (￨5 schemaNamespace￨5 ,￨5 schemaHint￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 localName￨5 .￨5 equals￨5 (￨5 ELT_INCLUDE￨5 )￨5 )￨5 ||￨5 (￨5 localName￨5 .￨5 equals￨5 (￨5 ELT_REDEFINE￨5 )￨5 )￨5 )￨4 {￨4 Object￨5 [￨5 ]￨5 includeAttrs￨5 =￨5 fAttributeChecker￨5 .￨5 checkAttributes￨5 (￨5 child￨5 ,￨5 true￨5 ,￨5 currSchemaInfo￨5 )￨5 ;￨5 schemaHint￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 includeAttrs￨5 [￨5 XSAttributeChecker￨5 .￨5 ATTIDX_SCHEMALOCATION￨5 ]￨5 )￨5 )￨5 ;￨5 fAttributeChecker￨5 .￨5 returnAttrArray￨5 (￨5 includeAttrs￨5 ,￨5 currSchemaInfo￨5 )￨5 ;￨5 newSchemaRoot￨5 =￨5 getSchema￨5 (￨5 EMPTY_STRING￨5 ,￨5 schemaHint￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 break￨5 ;￨5 }￨4 XSDocumentInfo￨4 newSchemaInfo￨4 =￨4 constructTrees￨4 (￨4 newSchemaRoot￨4 )￨4 ;￨4 if￨4 (￨4 localName￨5 .￨5 equals￨5 (￨5 ELT_REDEFINE￨5 )￨5 )￨4 {￨4 fRedefine2XSDMap￨5 .￨5 put￨5 (￨5 child￨5 ,￨5 newSchemaInfo￨5 )￨5 ;￨5 }￨4 dependencies￨4 .￨4 addElement￨4 (￨4 newSchemaInfo￨4 )￨4 ;￨4 fDoc2XSDocumentMap￨4 .￨4 put￨4 (￨4 newSchemaRoot￨4 ,￨4 newSchemaInfo￨4 )￨4 ;￨4 newSchemaRoot￨4 =￨4 null￨4 ;￨4 }￨3 fDependencyMap￨3 .￨3 put￨3 (￨3 currSchemaInfo￨3 ,￨3 dependencies￨3 )￨3 ;￨3 return￨3 currSchemaInfo￨3 ;￨3 }￨2 protected￨2 void￨2 buildGlobalNameRegistries￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 traverseSchemas￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 getGlobalDecl￨2 (￨2 XSDocumentInfo￨3 currSchema￨3 ,￨3 int￨3 declType￨3 ,￨3 QName￨3 declToTraverse￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 resolveKeyRefs￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Document￨2 getSchema￨2 (￨2 String￨3 schemaNamespace￨3 ,￨3 String￨3 schemaHint￨3 )￨2 {￨2 }￨2 private￨2 void￨2 createTraversers￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 reset￨2 (￨2 XMLErrorReporter￨3 errorReporter￨3 ,￨3 XMLEntityResolver￨3 entityResolver￨3 ,￨3 SymbolTable￨3 symbolTable￨3 )￨2 {￨2 }￨2 void￨2 traverseLocalElements￨2 (￨2 )￨2 {￨2 }￨2 void￨2 fillInLocalElemInfo￨2 (￨2 Element￨3 elmDecl￨3 ,￨3 XSDocumentInfo￨3 schemaDoc￨3 ,￨3 int￨3 allContextFlags￨3 ,￨3 XSParticleDecl￨3 particle￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkForDuplicateNames￨2 (￨2 String￨3 qName￨3 ,￨3 Hashtable￨3 registry￨3 ,￨3 Element￨3 currComp￨3 ,￨3 XSDocumentInfo￨3 currSchema￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 resolvePrefixToURI￨2 (￨2 String￨3 prefix￨3 )￨2 {￨2 }￨2 private￨2 void￨2 renameRedefiningComponents￨2 (￨2 XSDocumentInfo￨3 currSchema￨3 ,￨3 Element￨3 child￨3 ,￨3 String￨3 componentType￨3 ,￨3 String￨3 oldName￨3 ,￨3 String￨3 newName￨3 )￨2 {￨2 }￨2 private￨2 String￨2 findQName￨2 (￨2 String￨3 name￨3 ,￨3 SchemaNamespaceSupport￨3 currNSMap￨3 )￨2 {￨2 }￨2 private￨2 int￨2 changeRedefineGroup￨2 (￨2 String￨3 originalQName￨3 ,￨3 String￨3 elementSought￨3 ,￨3 String￨3 newName￨3 ,￨3 Element￨3 curr￨3 ,￨3 SchemaNamespaceSupport￨3 currNSMap￨3 )￨2 {￨2 }￨2 private￨2 XSDocumentInfo￨2 findXSDocumentForDecl￨2 (￨2 XSDocumentInfo￨3 currSchema￨3 ,￨3 Element￨3 decl￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setSchemasVisible￨2 (￨2 XSDocumentInfo￨3 startSchema￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 DummyResolver￨2 implements￨2 EntityResolver￨2 {￨2 public￨3 InputSource￨3 resolveEntity￨3 (￨3 String￨3 pubId￨3 ,￨3 String￨3 sysId￨3 )￨3 throws￨3 IOException￨3 ,￨3 SAXException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 Util￨1 {￨1 static￨2 ThreadLocal￨2 <￨2 ClassLoader￨2 >￨2 storedClassLoaders￨2 =￨2 new￨2 ThreadLocal￨2 <￨2 ClassLoader￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 void￨2 storeContextClassloader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 restoreContextClassloader￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 fixContextClassloader￨2 (￨2 String￨3 cls￨3 ,￨3 String￨3 method￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 clsArg￨3 ,￨3 ClassLoader￨3 bundleLoader￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ClassLoader￨2 findContextClassloader￨2 (￨2 Bundle￨3 consumerBundle￨3 ,￨3 String￨3 className￨3 ,￨3 String￨3 methodName￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 clsArg￨3 )￨2 {￨2 Activator￨3 activator￨3 =￨3 Activator￨3 .￨3 activator￨3 ;￨3 String￨3 requestedClass￨3 ;￨3 if￨3 (￨3 (￨4 ServiceLoader￨4 .￨4 class￨4 .￨4 getName￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 className￨4 )￨4 )￨4 &&￨4 (￨4 "load"￨4 .￨4 equals￨4 (￨4 methodName￨4 )￨4 )￨4 )￨3 {￨3 requestedClass￨4 =￨4 clsArg￨4 .￨4 getName￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 requestedClass￨4 =￨4 className￨4 ;￨4 }￨3 Collection￨3 <￨3 Bundle￨3 >￨3 bundles￨3 =￨3 new￨3 ArrayList￨3 <￨3 Bundle￨3 >￨3 (￨3 activator￨3 .￨3 findProviderBundles￨3 (￨3 requestedClass￨3 )￨3 )￨3 ;￨3 activator￨3 .￨3 log￨3 (￨3 LogService￨3 .￨3 LOG_DEBUG￨3 ,￨3 (￨3 (￨3 (￨3 "Found<seq2seq4repair_space>bundles<seq2seq4repair_space>providing<seq2seq4repair_space>"￨3 +￨3 requestedClass￨3 )￨3 +￨3 ":<seq2seq4repair_space>"￨3 )￨3 +￨3 bundles￨3 )￨3 )￨3 ;￨3 Map￨3 <￨3 Pair￨3 <￨3 Integer￨3 ,￨3 String￨3 >￨3 ,￨3 String￨3 >￨3 args￨3 =￨3 new￨3 HashMap￨3 <￨3 Pair￨3 <￨3 Integer￨3 ,￨3 String￨3 >￨3 ,￨3 String￨3 >￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 args￨3 .￨3 put￨3 (￨3 new￨3 Pair￨3 <￨3 Integer￨3 ,￨3 String￨3 >￨3 (￨3 1￨3 ,￨3 Class￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ,￨3 clsArg￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 Collection￨3 <￨3 Bundle￨3 >￨3 allowedBundles￨3 =￨3 activator￨3 .￨3 findConsumerRestrictions￨3 (￨3 consumerBundle￨3 ,￨3 className￨3 ,￨3 methodName￨3 ,￨3 args￨3 )￨3 ;￨3 if￨3 (￨3 allowedBundles￨4 !=￨4 null￨4 )￨3 {￨3 for￨4 (￨4 Iterator￨5 <￨5 Bundle￨5 >￨5 it￨5 =￨5 bundles￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 it￨5 .￨5 hasNext￨5 (￨5 )￨5 ;￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 allowedBundles￨6 .￨6 contains￨6 (￨6 it￨6 .￨6 next￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 it￨6 .￨6 remove￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 switch￨3 (￨3 bundles￨3 .￨3 size￨3 (￨3 )￨3 )￨3 {￨3 case￨4 0￨4 :￨4 return￨5 null￨5 ;￨5 case￨4 1￨4 :￨4 Bundle￨5 bundle￨5 =￨5 bundles￨5 .￨5 iterator￨5 (￨5 )￨5 .￨5 next￨5 (￨5 )￨5 ;￨5 BundleWiring￨5 wiring￨5 =￨5 bundle￨5 .￨5 adapt￨5 (￨5 BundleWiring￨5 .￨5 class￨5 )￨5 ;￨5 return￨5 wiring￨5 .￨5 getClassLoader￨5 (￨5 )￨5 ;￨5 default￨4 :￨4 List￨5 <￨5 ClassLoader￨5 >￨5 loaders￨5 =￨5 new￨5 ArrayList￨5 <￨5 ClassLoader￨5 >￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 Bundle￨6 b￨6 :￨6 bundles￨6 )￨5 {￨5 BundleWiring￨6 bw￨6 =￨6 b￨6 .￨6 adapt￨6 (￨6 BundleWiring￨6 .￨6 class￨6 )￨6 ;￨6 loaders￨6 .￨6 add￨6 (￨6 bw￨6 .￨6 getClassLoader￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 return￨5 new￨5 MultiDelegationClassloader￨5 (￨5 loaders￨5 .￨5 toArray￨5 (￨5 new￨5 ClassLoader￨5 [￨5 loaders￨5 .￨5 size￨5 (￨5 )￨5 ]￨5 )￨5 )￨5 ;￨5 }￨3 }￨2 }￨1
public￨1 class￨1 CopyCommand￨1 extends￨1 FigureTransferCommand￨1 {￨1 public￨2 CopyCommand￨2 (￨2 String￨3 name￨3 ,￨3 DrawingView￨3 view￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isExecutable￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 fView￨3 .￨3 selectionCount￨3 (￨3 )￨3 )￨3 >￨3 0￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 FastViewManager￨1 {￨1 private￨2 Perspective￨2 perspective￨2 ;￨2 private￨2 WorkbenchPage￨2 page￨2 ;￨2 private￨2 WorkbenchWindow￨2 wbw￨2 ;￨2 private￨2 TrimLayout￨2 tbm￨2 ;￨2 private￨2 Map￨2 idToFastViewsMap￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 boolean￨2 deferringUpdates￨2 =￨2 false￨2 ;￨2 private￨2 AnimationEngine￨2 batchAnimation￨2 =￨2 null￨2 ;￨2 private￨2 AnimationEngine￨2 oneShotAnimation￨2 =￨2 null￨2 ;￨2 private￨2 IPerspectiveListener2￨2 perspListener￨2 =￨2 new￨2 IPerspectiveListener2￨2 (￨2 )￨2 {￨2 public￨3 void￨3 perspectiveActivated￨3 (￨3 IWorkbenchPage￨4 page￨4 ,￨4 IPerspectiveDescriptor￨4 perspective￨4 )￨3 {￨3 }￨3 public￨3 void￨3 perspectiveChanged￨3 (￨3 IWorkbenchPage￨4 changedPage￨4 ,￨4 IPerspectiveDescriptor￨4 perspective￨4 ,￨4 IWorkbenchPartReference￨4 partRef￨4 ,￨4 String￨4 changeId￨4 )￨3 {￨3 }￨3 public￨3 void￨3 perspectiveChanged￨3 (￨3 IWorkbenchPage￨4 changedPage￨4 ,￨4 IPerspectiveDescriptor￨4 perspective￨4 ,￨4 String￨4 changeId￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 FastViewManager￨2 (￨2 Perspective￨3 perspective￨3 ,￨3 WorkbenchPage￨3 page￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handlePerspectiveActivation￨2 (￨2 IWorkbenchPage￨3 activatingPage￨3 ,￨3 IPerspectiveDescriptor￨3 activatingPerspective￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handlePerspectiveChange￨2 (￨2 IWorkbenchPage￨3 changedPage￨3 ,￨3 IPerspectiveDescriptor￨3 changedPerspective￨3 ,￨3 IWorkbenchPartReference￨3 partRef￨3 ,￨3 String￨3 changeId￨3 )￨2 {￨2 if￨3 (￨3 (￨4 changedPage￨4 !=￨4 (￨4 page￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 perspective￨4 .￨4 getDesc￨4 (￨4 )￨4 )￨4 !=￨4 changedPerspective￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 changeId￨4 .￨4 equals￨4 (￨4 CHANGE_VIEW_HIDE￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 partRef￨4 instanceof￨4 IViewReference￨4 )￨4 {￨4 <END_BUG>￨4 ViewReference￨4 ref￨4 =￨4 (￨4 (￨4 ViewReference￨4 )￨4 (￨4 partRef￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 ref￨5 .￨5 getPane￨5 (￨5 )￨5 .￨5 getContainer￨5 (￨5 )￨5 )￨5 instanceof￨5 ViewStack￨5 )￨4 {￨4 int￨5 viewCount￨5 =￨5 0￨5 ;￨5 LayoutPart￨5 [￨5 ]￨5 children￨5 =￨5 ref￨5 .￨5 getPane￨5 (￨5 )￨5 .￨5 getContainer￨5 (￨5 )￨5 .￨5 getChildren￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 children￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 if￨6 (￨6 (￨7 (￨7 children￨7 [￨7 i￨7 ]￨7 )￨7 instanceof￨7 ViewPane￨7 )￨7 &&￨7 (￨7 (￨7 children￨7 [￨7 i￨7 ]￨7 )￨7 !=￨7 (￨7 ref￨7 .￨7 getPane￨7 (￨7 )￨7 )￨7 )￨7 )￨6 {￨6 viewCount￨7 ++￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 viewCount￨6 ==￨6 0￨6 )￨5 {￨5 ref￨6 .￨6 getPane￨6 (￨6 )￨6 .￨6 getStack￨6 (￨6 )￨6 .￨6 setState￨6 (￨6 STATE_RESTORED￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 changeId￨4 .￨4 equals￨4 (￨4 CHANGE_FAST_VIEW_REMOVE￨4 )￨4 )￨3 {￨3 removeViewReference￨4 (￨4 (￨4 (￨4 IViewReference￨4 )￨4 (￨4 partRef￨4 )￨4 )￨4 ,￨4 false￨4 ,￨4 true￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 handlePerspectiveChange￨2 (￨2 IWorkbenchPage￨3 changedPage￨3 ,￨3 IPerspectiveDescriptor￨3 changedPerspective￨3 ,￨3 String￨3 changeId￨3 )￨2 {￨2 }￨2 public￨2 List￨2 getFastViews￨2 (￨2 String￨3 forId￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addViewReference￨2 (￨2 String￨3 id￨3 ,￨3 int￨3 index￨3 ,￨3 IViewReference￨3 ref￨3 ,￨3 boolean￨3 update￨3 )￨2 {￨2 }￨2 private￨2 ViewStackTrimToolBar￨2 getTrimForViewStack￨2 (￨2 String￨3 id￨3 ,￨3 int￨3 suggestedSide￨3 ,￨3 int￨3 paneOrientation￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateTrim￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeViewReference￨2 (￨2 IViewReference￨3 ref￨3 ,￨3 boolean￨3 makeUnfast￨3 ,￨3 boolean￨3 update￨3 )￨2 {￨2 }￨2 private￨2 void￨2 makeFast￨2 (￨2 IViewReference￨3 ref￨3 ,￨3 boolean￨3 makeFast￨3 ,￨3 boolean￨3 activate￨3 )￨2 {￨2 }￨2 boolean￨2 isFastView￨2 (￨2 IViewReference￨3 ref￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getIdForRef￨2 (￨2 IViewReference￨3 ref￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getViewSide￨2 (￨2 IViewReference￨3 ref￨3 )￨2 {￨2 }￨2 private￨2 IWindowTrim￨2 getTrimForRef￨2 (￨2 IViewReference￨3 ref￨3 )￨2 {￨2 }￨2 private￨2 List￨2 getTrueViewOrder￨2 (￨2 ViewStack￨3 stack￨3 )￨2 {￨2 }￨2 public￨2 void￨2 moveToTrim￨2 (￨2 ViewStack￨3 vs￨3 ,￨3 boolean￨3 restoreOnUnzoom￨3 )￨2 {￨2 }￨2 public￨2 void￨2 restoreToPresentation￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 void￨2 restoreZoomedViewStacks￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFastViewIconSelection￨2 (￨2 IViewReference￨3 ref￨3 ,￨3 boolean￨3 selected￨3 )￨2 {￨2 }￨2 public￨2 void￨2 activate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deActivate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 restoreAllTrimStacks￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 setTrimStackVisibility￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 public￨2 void￨2 saveState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 void￨2 restoreState￨2 (￨2 IMemento￨3 memento￨3 ,￨3 MultiStatus￨3 result￨3 )￨2 {￨2 }￨2 public￨2 ViewStackTrimToolBar￨2 getViewStackTrimToolbar￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 void￨2 printFVModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deferUpdates￨2 (￨2 boolean￨3 defer￨3 )￨2 {￨2 }￨2 private￨2 void￨2 deferAnimations￨2 (￨2 boolean￨3 defer￨3 )￨2 {￨2 }￨2 private￨2 AnimationEngine￨2 getDeferrableAnimation￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 scheduleDeferrableAnimation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ViewStackTrimToolBar￨2 getBottomRightTrimStack￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AttributeDefinition￨1 {￨1 private￨2 final￨2 String￨2 name￨2 ;￨2 private￨2 final￨2 String￨2 xmlName￨2 ;￨2 private￨2 final￨2 ModelType￨2 type￨2 ;￨2 private￨2 final￨2 boolean￨2 allowNull￨2 ;￨2 private￨2 final￨2 boolean￨2 allowExpression￨2 ;￨2 private￨2 final￨2 ModelNode￨2 defaultValue￨2 ;￨2 private￨2 final￨2 MeasurementUnit￨2 measurementUnit￨2 ;￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 alternatives￨2 ;￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 requires￨2 ;￨2 private￨2 final￨2 ParameterCorrector￨2 valueCorrector￨2 ;￨2 private￨2 final￨2 ParameterValidator￨2 validator￨2 ;￨2 private￨2 final￨2 EnumSet￨2 <￨2 AttributeAccess￨2 .￨2 Flag￨2 >￨2 flags￨2 ;￨2 protected￨2 final￨2 AttributeMarshaller￨2 attributeMarshaller￨2 ;￨2 private￨2 final￨2 boolean￨2 resourceOnly￨2 ;￨2 private￨2 final￨2 DeprecationData￨2 deprecationData￨2 ;￨2 protected￨2 AttributeDefinition￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 xmlName￨3 ,￨3 final￨3 ModelNode￨3 defaultValue￨3 ,￨3 final￨3 ModelType￨3 type￨3 ,￨3 final￨3 boolean￨3 allowNull￨3 ,￨3 final￨3 boolean￨3 allowExpression￨3 ,￨3 final￨3 MeasurementUnit￨3 measurementUnit￨3 ,￨3 final￨3 ParameterValidator￨3 validator￨3 ,￨3 final￨3 String￨3 [￨3 ]￨3 alternatives￨3 ,￨3 final￨3 String￨3 [￨3 ]￨3 requires￨3 ,￨3 final￨3 AttributeAccess￨3 ...￨3 flags￨3 )￨2 {￨2 }￨2 protected￨2 AttributeDefinition￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 xmlName￨3 ,￨3 final￨3 ModelNode￨3 defaultValue￨3 ,￨3 final￨3 ModelType￨3 type￨3 ,￨3 final￨3 boolean￨3 allowNull￨3 ,￨3 final￨3 boolean￨3 allowExpression￨3 ,￨3 final￨3 MeasurementUnit￨3 measurementUnit￨3 ,￨3 final￨3 ParameterCorrector￨3 valueCorrector￨3 ,￨3 final￨3 ParameterValidator￨3 validator￨3 ,￨3 boolean￨3 validateNull￨3 ,￨3 final￨3 String￨3 [￨3 ]￨3 alternatives￨3 ,￨3 final￨3 String￨3 [￨3 ]￨3 requires￨3 ,￨3 AttributeMarshaller￨3 attributeMarshaller￨3 ,￨3 boolean￨3 resourceOnly￨3 ,￨3 DeprecationData￨3 deprecationData￨3 ,￨3 final￨3 AttributeAccess￨3 ...￨3 flags￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getXmlName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModelType￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAllowNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAllowExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 getDefaultValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MeasurementUnit￨2 getMeasurementUnit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ParameterValidator￨2 getValidator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getAlternatives￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getRequires￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EnumSet￨2 <￨2 AttributeAccess￨2 .￨2 Flag￨2 >￨2 getFlags￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMarshallable￨2 (￨2 final￨3 ModelNode￨3 resourceModel￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMarshallable￨2 (￨2 final￨3 ModelNode￨3 resourceModel￨3 ,￨3 final￨3 boolean￨3 marshallDefault￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 validateOperation￨2 (￨2 final￨2 ModelNode￨2 operationObject￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 validateAndSet￨2 (￨2 ModelNode￨2 operationObject￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 isDeprecated￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 DEPRECATED_LOGGER￨3 .￨3 attributeDeprecated￨3 (￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 }￨3 final￨3 ModelNode￨3 newValue￨3 =￨3 correctValue￨3 (￨3 operationObject￨3 .￨3 get￨3 (￨3 name￨3 )￨3 ,￨3 model￨3 .￨3 get￨3 (￨3 name￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 newValue￨4 .￨4 equals￨4 (￨4 operationObject￨4 .￨4 get￨4 (￨4 name￨4 )￨4 )￨4 )￨4 )￨3 {￨3 operationObject￨4 .￨4 get￨4 (￨4 name￨4 )￨4 .￨4 set￨4 (￨4 newValue￨4 )￨4 ;￨4 }￨3 ModelNode￨3 node￨3 =￨3 validateOperation￨3 (￨3 operationObject￨3 ,￨3 false￨3 )￨3 ;￨3 model￨3 .￨3 get￨3 (￨3 name￨3 )￨3 .￨3 set￨3 (￨3 node￨3 )￨3 ;￨3 }￨2 @￨2 Deprecated￨2 public￨2 ModelNode￨2 validateResolvedOperation￨2 (￨2 final￨2 ModelNode￨2 operationObject￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 resolveModelAttribute￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 resolveModelAttribute￨2 (￨2 final￨2 ExpressionResolver￨2 resolver￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAllowed￨2 (￨2 final￨3 ModelNode￨3 operationObject￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRequired￨2 (￨2 final￨3 ModelNode￨3 operationObject￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasAlternative￨2 (￨2 final￨3 ModelNode￨3 operationObject￨3 )￨2 {￨2 }￨2 public￨2 void￨2 marshallAsElement￨2 (￨2 final￨2 ModelNode￨2 resourceModel￨2 ,￨2 final￨2 XMLStreamWriter￨2 writer￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 marshallAsElement￨2 (￨2 final￨2 ModelNode￨2 resourceModel￨2 ,￨2 final￨2 boolean￨2 marshallDefault￨2 ,￨2 final￨2 XMLStreamWriter￨2 writer￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 addResourceAttributeDescription￨2 (￨2 final￨3 ResourceBundle￨3 bundle￨3 ,￨3 final￨3 String￨3 prefix￨3 ,￨3 final￨3 ModelNode￨3 resourceDescription￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 addResourceAttributeDescription￨2 (￨2 final￨3 ModelNode￨3 resourceDescription￨3 ,￨3 final￨3 ResourceDescriptionResolver￨3 resolver￨3 ,￨3 final￨3 Locale￨3 locale￨3 ,￨3 final￨3 ResourceBundle￨3 bundle￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 addOperationParameterDescription￨2 (￨2 final￨3 ResourceBundle￨3 bundle￨3 ,￨3 final￨3 String￨3 prefix￨3 ,￨3 final￨3 ModelNode￨3 operationDescription￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 addOperationParameterDescription￨2 (￨2 final￨3 ModelNode￨3 resourceDescription￨3 ,￨3 final￨3 String￨3 operationName￨3 ,￨3 final￨3 ResourceDescriptionResolver￨3 resolver￨3 ,￨3 final￨3 Locale￨3 locale￨3 ,￨3 final￨3 ResourceBundle￨3 bundle￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getAttributeTextDescription￨2 (￨2 final￨3 ResourceBundle￨3 bundle￨3 ,￨3 final￨3 String￨3 prefix￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getAttributeDeprecatedDescription￨2 (￨2 final￨3 ResourceBundle￨3 bundle￨3 ,￨3 final￨3 String￨3 prefix￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 addDeprecatedInfo￨2 (￨2 final￨3 ModelNode￨3 model￨3 )￨2 {￨2 }￨2 public￨2 ModelNode￨2 getNoTextDescription￨2 (￨2 boolean￨3 forOperation￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 ModelNode￨2 correctValue￨2 (￨2 final￨3 ModelNode￨3 newValue￨3 ,￨3 final￨3 ModelNode￨3 oldValue￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 validateOperation￨2 (￨2 final￨2 ModelNode￨2 operationObject￨2 ,￨2 final￨2 boolean￨2 correctValue￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AttributeMarshaller￨2 getAttributeMarshaller￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isResourceOnly￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDeprecated￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DeprecationData￨2 getDeprecationData￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 ExpressionResolver￨2 NO_OPERATION_CONTEXT_FOR_RESOLVING_MODEL_PARAMETERS￨2 =￨2 new￨2 ExpressionResolver￨2 (￨2 )￨2 {￨2 @￨3 Override￨3 public￨3 ModelNode￨3 resolveExpressions￨3 (￨3 ModelNode￨3 node￨3 )￨3 throws￨3 OperationFailedException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 }￨1
public￨1 class￨1 TestCJKWidthFilter￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 private￨2 Analyzer￨2 analyzer￨2 =￨2 new￨2 Analyzer￨2 (￨2 )￨2 {￨2 @￨3 Override￨3 protected￨3 TokenStreamComponents￨3 createComponents￨3 (￨3 String￨4 fieldName￨4 ,￨4 Reader￨4 reader￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 void￨2 testFullWidthASCII￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testHalfWidthKana￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomData￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 analyzer￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testEmptyTerm￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PageAndComponentProvider￨1 extends￨1 DefaultPageProvider￨1 {￨1 private￨2 IRequestableComponent￨2 component￨2 ;￨2 private￨2 String￨2 componentPath￨2 ;￨2 public￨2 PageAndComponentProvider￨2 (￨2 IRequestablePage￨3 page￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 IRequestablePage￨3 page￨3 ,￨3 IRequestableComponent￨3 component￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 Class￨3 <￨3 ?￨3 extends￨3 IRequestablePage￨3 >￨3 pageClass￨3 ,￨3 PageParameters￨3 pageParameters￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 Class￨3 <￨3 ?￨3 extends￨3 IRequestablePage￨3 >￨3 pageClass￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 int￨3 pageId￨3 ,￨3 Class￨3 <￨3 ?￨3 extends￨3 IRequestablePage￨3 >￨3 pageClass￨3 ,￨3 Integer￨3 renderCount￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 int￨3 pageId￨3 ,￨3 Class￨3 <￨3 ?￨3 extends￨3 IRequestablePage￨3 >￨3 pageClass￨3 ,￨3 PageParameters￨3 pageParameters￨3 ,￨3 Integer￨3 renderCount￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 public￨2 PageAndComponentProvider￨2 (￨2 int￨3 pageId￨3 ,￨3 Integer￨3 renderCount￨3 ,￨3 String￨3 componentPath￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 boolean￨2 prepareForRenderNewPage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IRequestableComponent￨2 getComponent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getComponentPath￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 componentPath￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 componentPath￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 return￨4 component￨4 .￨4 getPath￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 private￨2 void￨2 setComponentPath￨2 (￨2 String￨3 componentPath￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DateTimeDV￨1 extends￨1 AbstractDateTimeDV￨1 {￨1 public￨2 Object￨2 getActualValue￨2 (￨2 String￨2 content￨2 ,￨2 ValidationContext￨2 context￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 return￨4 parse￨4 (￨4 content￨4 ,￨4 null￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 InvalidDatatypeValueException￨4 (￨4 "not<seq2seq4repair_space>a<seq2seq4repair_space>valid<seq2seq4repair_space>dataTime"￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 protected￨2 int￨2 [￨2 ]￨2 parse￨2 (￨2 String￨2 str￨2 ,￨2 int￨2 [￨2 ]￨2 date￨2 )￨2 throws￨2 SchemaDateTimeException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 ConsoleHandlerAdd￨1 extends￨1 FlushingHandlerAddProperties￨1 <￨1 ConsoleHandlerService￨1 >￨1 {￨1 static￨2 final￨2 ConsoleHandlerAdd￨2 INSTANCE￨2 =￨2 new￨2 ConsoleHandlerAdd￨2 (￨2 )￨2 ;￨2 private￨2 ConsoleHandlerAdd￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 ConsoleHandlerService￨2 createHandlerService￨2 (￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 updateRuntime￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ServiceBuilder￨2 <￨2 Handler￨2 >￨2 serviceBuilder￨2 ,￨2 final￨2 String￨2 name￨2 ,￨2 final￨2 ConsoleHandlerService￨2 service￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 super￨3 .￨3 updateRuntime￨3 (￨3 context￨3 ,￨3 serviceBuilder￨3 ,￨3 name￨3 ,￨3 service￨3 ,￨3 model￨3 )￨3 ;￨3 final￨3 ModelNode￨3 target￨3 =￨3 CommonAttributes￨3 .￨3 TARGET￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 ;￨3 if￨3 (￨3 target￨4 .￨4 isDefined￨4 (￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 service￨4 .￨4 setTarget￨4 (￨4 Target￨4 .￨4 fromString￨4 (￨4 target￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 }￨1
public￨1 class￨1 CharSetUtilsTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testConstructor￨2 (￨2 )￨2 {￨2 assertNotNull￨3 (￨3 new￨3 CharSetUtils￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 Constructor￨3 <￨3 ?￨3 >￨3 [￨3 ]￨3 cons￨3 =￨3 CharSetUtils￨3 .￨3 class￨3 .￨3 getDeclaredConstructors￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 assertEquals￨3 (￨3 1￨3 ,￨3 cons￨3 .￨3 length￨3 )￨3 ;￨3 assertTrue￨3 (￨3 Modifier￨3 .￨3 isPublic￨3 (￨3 cons￨3 [￨3 0￨3 ]￨3 .￨3 getModifiers￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertTrue￨3 (￨3 Modifier￨3 .￨3 isPublic￨3 (￨3 CharSetUtils￨3 .￨3 class￨3 .￨3 getModifiers￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertFalse￨3 (￨3 Modifier￨3 .￨3 isFinal￨3 (￨3 CharSetUtils￨3 .￨3 class￨3 .￨3 getModifiers￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testSqueeze_StringString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSqueeze_StringStringarray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testCount_StringString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testCount_StringStringarray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testKeep_StringString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testKeep_StringStringarray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDelete_StringString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDelete_StringStringarray￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ContainsSelector￨1 extends￨1 BaseExtendSelector￨1 implements￨1 ResourceSelector￨1 {￨1 private￨2 String￨2 contains￨2 =￨2 null￨2 ;￨2 private￨2 boolean￨2 casesensitive￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 ignorewhitespace￨2 =￨2 false￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 EXPRESSION_KEY￨2 =￨2 "expression"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 CONTAINS_KEY￨2 =￨2 "text"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 CASE_KEY￨2 =￨2 "casesensitive"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 WHITESPACE_KEY￨2 =￨2 "ignorewhitespace"￨2 ;￨2 public￨2 ContainsSelector￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 contains￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCasesensitive￨2 (￨2 boolean￨3 casesensitive￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIgnorewhitespace￨2 (￨2 boolean￨3 ignorewhitespace￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setParameters￨2 (￨2 Parameter￨3 [￨3 ]￨3 parameters￨3 )￨2 {￨2 }￨2 public￨2 void￨2 verifySettings￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSelected￨2 (￨2 File￨3 basedir￨3 ,￨3 String￨3 filename￨3 ,￨3 File￨3 file￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSelected￨2 (￨2 Resource￨3 r￨3 )￨2 {￨2 validate￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 r￨3 .￨3 isDirectory￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 true￨3 ;￨3 }￨3 String￨3 userstr￨3 =￨3 contains￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 casesensitive￨4 )￨4 )￨3 {￨3 userstr￨4 =￨4 contains￨4 .￨4 toLowerCase￨4 (￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 ignorewhitespace￨4 )￨3 {￨3 userstr￨4 =￨4 SelectorUtils￨4 .￨4 removeWhitespace￨4 (￨4 userstr￨4 )￨4 ;￨4 }￨3 BufferedReader￨3 in￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 in￨4 =￨4 new￨4 BufferedReader￨4 (￨4 new￨4 InputStreamReader￨4 (￨4 r￨4 .￨4 getInputStream￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 tools￨4 .￨4 ant￨4 .￨4 BuildException￨4 (￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>InputStream<seq2seq4repair_space>from<seq2seq4repair_space>"￨4 +￨4 (￨4 r￨4 .￨4 toLongString￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 String￨4 teststr￨4 =￨4 in￨4 .￨4 readLine￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 teststr￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 casesensitive￨6 )￨6 )￨5 {￨5 teststr￨6 =￨6 teststr￨6 .￨6 toLowerCase￨6 (￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 ignorewhitespace￨6 )￨5 {￨5 teststr￨6 =￨6 SelectorUtils￨6 .￨6 removeWhitespace￨6 (￨6 teststr￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 teststr￨6 .￨6 indexOf￨6 (￨6 userstr￨6 )￨6 )￨6 >￨6 (￨6 -￨6 1￨6 )￨6 )￨5 {￨5 return￨6 true￨6 ;￨6 }￨5 teststr￨5 =￨5 in￨5 .￨5 readLine￨5 (￨5 )￨5 ;￨5 }￨4 return￨4 false￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 ioe￨4 )￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 tools￨4 .￨4 ant￨4 .￨4 BuildException￨4 (￨4 (￨4 "Could<seq2seq4repair_space>not<seq2seq4repair_space>read<seq2seq4repair_space>"￨4 +￨4 (￨4 r￨4 .￨4 toLongString￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 FileUtils￨4 .￨4 close￨4 (￨4 in￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ParameterizedTypeBinding￨1 extends￨1 ReferenceBinding￨1 implements￨1 Substitution￨1 {￨1 public￨2 ReferenceBinding￨2 type￨2 ;￨2 public￨2 TypeBinding￨2 [￨2 ]￨2 arguments￨2 ;￨2 public￨2 LookupEnvironment￨2 environment￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 genericTypeSignature￨2 ;￨2 public￨2 ReferenceBinding￨2 superclass￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 ;￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 ;￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 ;￨2 public￨2 ReferenceBinding￨2 enclosingType￨2 ;￨2 public￨2 ParameterizedTypeBinding￨2 (￨2 ReferenceBinding￨3 type￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 arguments￨3 ,￨3 ReferenceBinding￨3 enclosingType￨3 ,￨3 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 public￨2 void￨2 collectSubstitutes￨2 (￨2 TypeBinding￨3 otherType￨3 ,￨3 Map￨3 substitutes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 constantPoolName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 debugName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 enclosingType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 erasure￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 fieldCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 genericTypeSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactConstructor￨2 (￨2 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactMethod￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getField￨2 (￨2 char￨3 [￨3 ]￨3 fieldName￨3 ,￨3 boolean￨3 needResolve￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 getMemberType￨2 (￨2 char￨3 [￨3 ]￨3 typeName￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 getMethods￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 implementsMethod￨2 (￨2 MethodBinding￨3 method￨3 )￨2 {￨2 }￨2 void￨2 initialize￨2 (￨2 ReferenceBinding￨3 someType￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 someArguments￨3 )￨2 {￨2 this￨3 .￨3 type￨3 =￨3 someType￨3 ;￨3 this￨3 .￨3 sourceName￨3 =￨3 someType￨3 .￨3 sourceName￨3 ;￨3 this￨3 .￨3 compoundName￨3 =￨3 someType￨3 .￨3 compoundName￨3 ;￨3 this￨3 .￨3 fPackage￨3 =￨3 someType￨3 .￨3 fPackage￨3 ;￨3 this￨3 .￨3 fileName￨3 =￨3 someType￨3 .￨3 fileName￨3 ;￨3 this￨3 .￨3 modifiers￨3 =￨3 (￨3 (￨3 someType￨3 .￨3 modifiers￨3 )￨3 |￨3 (￨3 AccGenericSignature￨3 )￨3 )￨3 |￨3 (￨3 AccUnresolved￨3 )￨3 ;￨3 if￨3 (￨3 someArguments￨4 !=￨4 null￨4 )￨3 {￨3 this￨4 .￨4 arguments￨4 =￨4 someArguments￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 length￨5 =￨5 someArguments￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 TypeBinding￨5 someArgument￨5 =￨5 someArguments￨5 [￨5 i￨5 ]￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 (￨5 !￨5 (￨5 someArgument￨5 .￨5 isWildcard￨5 (￨5 )￨5 )￨5 )￨5 ||￨5 (￨5 !￨5 (￨5 (￨5 (￨5 WildcardBinding￨5 )￨5 (￨5 someArgument￨5 )￨5 )￨5 .￨5 isEquivalentToUnboundWildcard￨5 (￨5 )￨5 )￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 this￨5 .￨5 tagBits￨5 |=￨5 IsBoundParameterizedType￨5 ;￨5 }￨5 this￨5 .￨5 tagBits￨5 |=￨5 (￨5 someArgument￨5 .￨5 tagBits￨5 )￨5 &￨5 (￨5 (￨5 HasTypeVariable￨5 )￨5 |￨5 (￨5 HasWildcard￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 this￨3 .￨3 tagBits￨3 |=￨3 (￨3 someType￨3 .￨3 tagBits￨3 )￨3 &￨3 (￨3 (￨3 (￨3 IsLocalType￨3 )￨3 |￨3 (￨3 IsMemberType￨3 )￨3 )￨3 |￨3 (￨3 IsNestedType￨3 )￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 initializeArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEquivalentTo￨2 (￨2 TypeBinding￨3 otherType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isParameterizedType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 qualifiedSourceName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 readableName￨2 (￨2 )￨2 {￨2 }￨2 ReferenceBinding￨2 resolve￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 shortReadableName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 signature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 sourceName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 substitute￨2 (￨2 TypeBinding￨3 originalType￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 superclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 swapUnresolved￨2 (￨2 UnresolvedReferenceBinding￨3 unresolvedType￨3 ,￨3 ReferenceBinding￨3 resolvedType￨3 ,￨3 LookupEnvironment￨3 env￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 syntheticEnclosingInstanceTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SyntheticArgumentBinding￨2 [￨2 ]￨2 syntheticOuterLocalVariables￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 leafComponentType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 qualifiedPackageName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 XMLFormatter￨1 extends￨1 BaseStreamFormatter￨1 {￨1 public￨2 static￨2 final￨2 String￨2 TESTSUITES￨2 =￨2 "testsuites"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 TESTSUITE￨2 =￨2 "testsuite"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 TESTCASE￨2 =￨2 "testcase"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ERROR￨2 =￨2 "error"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FAILURE￨2 =￨2 "failure"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SYSTEM_ERR￨2 =￨2 "system-err"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SYSTEM_OUT￨2 =￨2 "system-out"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_PACKAGE￨2 =￨2 "package"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_NAME￨2 =￨2 "name"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_TIME￨2 =￨2 "time"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_ERRORS￨2 =￨2 "errors"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_FAILURES￨2 =￨2 "failures"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_TESTS￨2 =￨2 "tests"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_TYPE￨2 =￨2 "type"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_MESSAGE￨2 =￨2 "message"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PROPERTIES￨2 =￨2 "properties"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 PROPERTY￨2 =￨2 "property"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ATTR_VALUE￨2 =￨2 "value"￨2 ;￨2 private￨2 Document￨2 doc￨2 =￨2 XMLFormatter￨2 .￨2 getDocumentBuilder￨2 (￨2 )￨2 .￨2 newDocument￨2 (￨2 )￨2 ;￨2 private￨2 Element￨2 rootElement￨2 =￨2 doc￨2 .￨2 createElement￨2 (￨2 XMLFormatter￨2 .￨2 TESTSUITE￨2 )￨2 ;￨2 private￨2 Hashtable￨2 testElements￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 private￨2 Hashtable￨2 testStarts￨2 =￨2 new￨2 Hashtable￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 onTestStarted￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onTestEnded￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onTestFailure￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 <START_BUG>￨3 String￨3 type￨3 =￨3 (￨3 (￨3 evt￨3 ==￨3 (￨3 evt￨3 .￨3 getType￨3 (￨3 )￨3 )￨3 )￨3 ==￨3 (￨3 TestRunEvent￨3 .￨3 TEST_FAILURE￨3 )￨3 )￨3 ?￨3 XMLFormatter￨3 .￨3 FAILURE￨3 :￨3 XMLFormatter￨3 .￨3 ERROR￨3 ;￨3 <END_BUG>￨3 Element￨3 nested￨3 =￨3 doc￨3 .￨3 createElement￨3 (￨3 type￨3 )￨3 ;￨3 Element￨3 currentTest￨3 =￨3 (￨3 (￨3 Element￨3 )￨3 (￨3 testElements￨3 .￨3 get￨3 (￨3 evt￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 currentTest￨3 .￨3 appendChild￨3 (￨3 nested￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 args￨3 =￨3 XMLFormatter￨3 .￨3 parseFirstLine￨3 (￨3 evt￨3 .￨3 getStackTrace￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 args￨4 [￨4 1￨4 ]￨4 )￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 args￨4 [￨4 1￨4 ]￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 )￨3 {￨3 nested￨4 .￨4 setAttribute￨4 (￨4 XMLFormatter￨4 .￨4 ATTR_MESSAGE￨4 ,￨4 args￨4 [￨4 1￨4 ]￨4 )￨4 ;￨4 }￨3 nested￨3 .￨3 setAttribute￨3 (￨3 XMLFormatter￨3 .￨3 ATTR_TYPE￨3 ,￨3 args￨3 [￨3 0￨3 ]￨3 )￨3 ;￨3 Text￨3 text￨3 =￨3 doc￨3 .￨3 createTextNode￨3 (￨3 evt￨3 .￨3 getStackTrace￨3 (￨3 )￨3 )￨3 ;￨3 nested￨3 .￨3 appendChild￨3 (￨3 text￨3 )￨3 ;￨3 super￨3 .￨3 onTestFailure￨3 (￨3 evt￨3 )￨3 ;￨3 removeEvent￨3 (￨3 evt￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 removeEvent￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onRunStarted￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onRunEnded￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 public￨2 void￨2 onRunStopped￨2 (￨2 TestRunEvent￨3 evt￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 DocumentBuilder￨2 getDocumentBuilder￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 static￨2 String￨2 [￨2 ]￨2 parseFirstLine￨2 (￨2 String￨3 trace￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 PortletApplication￨1 extends￨1 Application￨1 implements￨1 ISessionFactory￨1 {￨1 private￨2 String￨2 applicationKey￨2 ;￨2 private￨2 IRequestCycleProcessor￨2 requestCycleProcessor￨2 ;￨2 private￨2 IRequestCycleProcessor￨2 actionRequestCycleProcessor￨2 ;￨2 private￨2 String￨2 sessionAttributePrefix￨2 ;￨2 private￨2 ISessionFactory￨2 sessionFactory￨2 =￨2 this￨2 ;￨2 private￨2 RequestLogger￨2 requestLogger￨2 ;￨2 WicketPortlet￨2 portlet￨2 ;￨2 public￨2 void￨2 setWicketPortlet￨2 (￨2 WicketPortlet￨3 portlet￨3 )￨2 {￨2 }￨2 public￨2 WicketPortletSession￨2 getSession￨2 (￨2 final￨3 WicketPortletRequest￨3 request￨3 )￨2 {￨2 ISessionStore￨3 sessionStore￨3 =￨3 getSessionStore￨3 (￨3 )￨3 ;￨3 Session￨3 session￨3 =￨3 sessionStore￨3 .￨3 lookup￨3 (￨3 request￨3 )￨3 ;￨3 if￨3 (￨3 session￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 session￨4 =￨4 getSessionFactory￨4 (￨4 )￨4 .￨4 newSession￨4 (￨4 request￨4 )￨4 ;￨4 <END_BUG>￨4 session￨4 .￨4 setLocale￨4 (￨4 request￨4 .￨4 getLocale￨4 (￨4 )￨4 )￨4 ;￨4 sessionStore￨4 .￨4 bind￨4 (￨4 request￨4 ,￨4 session￨4 )￨4 ;￨4 }￨3 WicketPortletSession￨3 webSession￨3 ;￨3 if￨3 (￨3 session￨4 instanceof￨4 WicketPortletSession￨4 )￨3 {￨3 webSession￨4 =￨4 (￨4 (￨4 WicketPortletSession￨4 )￨4 (￨4 session￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 new￨4 WicketRuntimeException￨4 (￨4 (￨4 "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>PortletApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>"￨4 +￨4 "must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>PortletSession"￨4 )￨4 )￨4 ;￨4 }￨3 session￨3 .￨3 setApplication￨3 (￨3 this￨3 )￨3 ;￨3 webSession￨3 .￨3 initForRequest￨3 (￨3 )￨3 ;￨3 return￨3 webSession￨3 ;￨3 }￨2 public￨2 WicketPortletResponse￨2 newPortletResponse￨2 (￨2 final￨3 PortletResponse￨3 res￨3 )￨2 {￨2 }￨2 public￨2 WicketPortletRequest￨2 newPortletRequest￨2 (￨2 PortletRequest￨3 req￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getApplicationKey￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ISessionFactory￨2 getSessionFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ISessionStore￨2 newSessionStore￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Session￨2 newSession￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 initPortlet￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalInit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 destroyPortlet￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestCycleFactory￨2 getDefaultRequestCycleFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestCycleProcessor￨2 newRenderRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestCycleProcessor￨2 newActionRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IRequestCycleProcessor￨2 getActionRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 IRequestCycleProcessor￨2 getRenderRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 RequestLogger￨2 getRequestLogger￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setRequestLogger￨2 (￨2 RequestLogger￨3 logger￨3 )￨2 {￨2 }￨2 void￨2 sessionDestroyed￨2 (￨2 String￨3 sessionId￨3 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getSessionAttributePrefix￨2 (￨2 final￨3 WicketPortletRequest￨3 request￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ModeOptionPane￨1 extends￨1 AbstractOptionPane￨1 {￨1 public￨2 ModeOptionPane￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 _init￨2 (￨2 )￨2 {￨2 Mode￨3 [￨3 ]￨3 modes￨3 =￨3 jEdit￨3 .￨3 getModes￨3 (￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 modeNames￨3 =￨3 new￨3 String￨3 [￨3 modes￨3 .￨3 length￨3 ]￨3 ;￨3 modeProps￨3 =￨3 new￨3 ModeOptionPane￨3 .￨3 ModeProperties￨3 [￨3 modes￨3 .￨3 length￨3 ]￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 modes￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 modeProps￨4 [￨4 i￨4 ]￨4 =￨4 new￨4 ModeOptionPane￨4 .￨4 ModeProperties￨4 (￨4 modes￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 modeNames￨4 [￨4 i￨4 ]￨4 =￨4 modes￨4 [￨4 i￨4 ]￨4 .￨4 getName￨4 (￨4 )￨4 ;￨4 }￨3 mode￨3 =￨3 new￨3 JComboBox￨3 (￨3 modeNames￨3 )￨3 ;￨3 mode￨3 .￨3 addActionListener￨3 (￨3 new￨3 ModeOptionPane￨3 .￨3 ActionHandler￨3 (￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.mode.mode"￨3 )￨3 ,￨3 mode￨3 )￨3 ;￨3 useDefaults￨3 =￨3 new￨3 JCheckBox￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.mode.useDefaults"￨3 )￨3 )￨3 ;￨3 useDefaults￨3 .￨3 addActionListener￨3 (￨3 new￨3 ModeOptionPane￨3 .￨3 ActionHandler￨3 (￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 useDefaults￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.mode.filenameGlob"￨3 )￨3 ,￨3 (￨3 filenameGlob￨3 =￨3 new￨3 JTextField￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.mode.firstlineGlob"￨3 )￨3 ,￨3 (￨3 firstlineGlob￨3 =￨3 new￨3 JTextField￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 tabSizes￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.tabSize"￨3 )￨3 ,￨3 (￨3 tabSize￨3 =￨3 new￨3 JComboBox￨3 (￨3 tabSizes￨3 )￨3 )￨3 )￨3 ;￨3 tabSize￨3 .￨3 setEditable￨3 (￨3 true￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.indentSize"￨3 )￨3 ,￨3 (￨3 indentSize￨3 =￨3 new￨3 JComboBox￨3 (￨3 tabSizes￨3 )￨3 )￨3 )￨3 ;￨3 indentSize￨3 .￨3 setEditable￨3 (￨3 true￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 lineLens￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.maxLineLen"￨3 )￨3 ,￨3 (￨3 maxLineLen￨3 =￨3 new￨3 JComboBox￨3 (￨3 lineLens￨3 )￨3 )￨3 )￨3 ;￨3 maxLineLen￨3 .￨3 setEditable￨3 (￨3 true￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.wordBreakChars"￨3 )￨3 ,￨3 (￨3 wordBreakChars￨3 =￨3 new￨3 JTextField￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.mode.noWordSep"￨3 )￨3 ,￨3 (￨3 noWordSep￨3 =￨3 new￨3 JTextField￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 [￨3 ]￨3 foldModes￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.folding"￨3 )￨3 ,￨3 (￨3 folding￨3 =￨3 new￨3 JComboBox￨3 (￨3 foldModes￨3 )￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.collapseFolds"￨3 )￨3 ,￨3 (￨3 collapseFolds￨3 =￨3 new￨3 JTextField￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 (￨3 indentOnTab￨3 =￨3 new￨3 JCheckBox￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.indentOnTab"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 (￨3 indentOnEnter￨3 =￨3 new￨3 JCheckBox￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.indentOnEnter"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 addComponent￨3 (￨3 (￨3 noTabs￨3 =￨3 new￨3 JCheckBox￨3 (￨3 jEdit￨3 .￨3 getProperty￨3 (￨3 "options.editing.noTabs"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 selectMode￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 _save￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ModeOptionPane￨2 .￨2 ModeProperties￨2 [￨2 ]￨2 modeProps￨2 ;￨2 private￨2 ModeOptionPane￨2 .￨2 ModeProperties￨2 current￨2 ;￨2 private￨2 JComboBox￨2 mode￨2 ;￨2 private￨2 JCheckBox￨2 useDefaults￨2 ;￨2 private￨2 JTextField￨2 filenameGlob￨2 ;￨2 private￨2 JTextField￨2 firstlineGlob￨2 ;￨2 private￨2 JComboBox￨2 tabSize￨2 ;￨2 private￨2 JComboBox￨2 indentSize￨2 ;￨2 private￨2 JComboBox￨2 maxLineLen￨2 ;￨2 private￨2 JTextField￨2 wordBreakChars￨2 ;￨2 private￨2 JTextField￨2 noWordSep￨2 ;￨2 private￨2 JComboBox￨2 folding￨2 ;￨2 private￨2 JTextField￨2 collapseFolds￨2 ;￨2 private￨2 JCheckBox￨2 noTabs￨2 ;￨2 private￨2 JCheckBox￨2 indentOnTab￨2 ;￨2 private￨2 JCheckBox￨2 indentOnEnter￨2 ;￨2 private￨2 void￨2 saveMode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 selectMode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateEnabled￨2 (￨2 )￨2 {￨2 }￨2 class￨2 ActionHandler￨2 implements￨2 ActionListener￨2 {￨2 public￨3 void￨3 actionPerformed￨3 (￨3 ActionEvent￨4 evt￨4 )￨3 {￨3 }￨3 }￨2 class￨2 ModeProperties￨2 {￨2 Mode￨3 mode￨3 ;￨3 boolean￨3 edited￨3 ;￨3 boolean￨3 loaded￨3 ;￨3 boolean￨3 useDefaults￨3 ;￨3 String￨3 filenameGlob￨3 ;￨3 String￨3 firstlineGlob￨3 ;￨3 String￨3 tabSize￨3 ;￨3 String￨3 indentSize￨3 ;￨3 String￨3 maxLineLen￨3 ;￨3 String￨3 wordBreakChars￨3 ;￨3 String￨3 noWordSep￨3 ;￨3 String￨3 folding￨3 ;￨3 String￨3 collapseFolds￨3 ;￨3 boolean￨3 noTabs￨3 ;￨3 boolean￨3 indentOnTab￨3 ;￨3 boolean￨3 indentOnEnter￨3 ;￨3 ModeProperties￨3 (￨3 Mode￨4 mode￨4 )￨3 {￨3 }￨3 void￨3 load￨3 (￨3 )￨3 {￨3 }￨3 void￨3 save￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 MethodAnnotationAggregator￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 MethodAnnotationAggregator￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 <￨2 A￨2 extends￨2 Annotation￨2 ,￨2 T￨2 >￨2 RuntimeAnnotationInformation￨2 <￨2 T￨2 >￨2 runtimeAnnotationInformation￨2 (￨2 final￨2 Class￨2 <￨2 ?￨2 >￨2 componentClass￨2 ,￨2 final￨2 EEApplicationClasses￨2 applicationClasses￨2 ,￨2 final￨2 DeploymentReflectionIndex￨2 index￨2 ,￨2 final￨2 Class￨2 <￨2 A￨2 >￨2 annotationType￨2 )￨2 {￨2 final￨3 HashSet￨3 <￨3 MethodIdentifier￨3 >￨3 methodIdentifiers￨3 =￨3 new￨3 HashSet￨3 <￨3 MethodIdentifier￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 Method￨3 ,￨3 List￨3 <￨3 T￨3 >￨3 >￨3 methods￨3 =￨3 new￨3 HashMap￨3 <￨3 Method￨3 ,￨3 List￨3 <￨3 T￨3 >￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 Map￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 T￨3 >￨3 >￨3 classAnnotations￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 T￨3 >￨3 >￨3 (￨3 )￨3 ;￨3 Class￨3 <￨3 ?￨3 >￨3 c￨3 =￨3 componentClass￨3 ;￨3 while￨3 (￨3 (￨4 c￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 c￨4 !=￨4 (￨4 Object￨4 .￨4 class￨4 )￨4 )￨4 )￨3 {￨3 final￨4 ClassReflectionIndex￨4 <￨4 ?￨4 >￨4 classIndex￨4 =￨4 index￨4 .￨4 getClassIndex￨4 (￨4 c￨4 )￨4 ;￨4 final￨4 EEModuleClassDescription￨4 description￨4 =￨4 applicationClasses￨4 .￨4 getClassByName￨4 (￨4 c￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 description￨5 !=￨5 null￨5 )￨4 {￨4 ClassAnnotationInformation￨5 <￨5 A￨5 ,￨5 T￨5 >￨5 annotationData￨5 =￨5 description￨5 .￨5 getAnnotationInformation￨5 (￨5 annotationType￨5 )￨5 ;￨5 if￨5 (￨5 annotationData￨6 !=￨6 null￨6 )￨5 {￨5 if￨6 (￨6 !￨7 (￨7 annotationData￨7 .￨7 getClassLevelAnnotations￨7 (￨7 )￨7 .￨7 isEmpty￨7 (￨7 )￨7 )￨7 )￨6 {￨6 classAnnotations￨7 .￨7 put￨7 (￨7 c￨7 .￨7 getName￨7 (￨7 )￨7 ,￨7 annotationData￨7 .￨7 getClassLevelAnnotations￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 for￨6 (￨6 Map￨7 .￨7 Entry￨7 <￨7 MethodIdentifier￨7 ,￨7 List￨7 <￨7 T￨7 >￨7 >￨7 entry￨7 :￨7 annotationData￨7 .￨7 getMethodLevelAnnotations￨7 (￨7 )￨7 .￨7 entrySet￨7 (￨7 )￨7 )￨6 {￨6 final￨7 Method￨7 method￨7 =￨7 classIndex￨7 .￨7 getMethod￨7 (￨7 entry￨7 .￨7 getKey￨7 (￨7 )￨7 )￨7 ;￨7 if￨7 (￨7 method￨8 !=￨8 null￨8 )￨7 {￨7 if￨8 (￨8 (￨9 Modifier￨9 .￨9 isPrivate￨9 (￨9 method￨9 .￨9 getModifiers￨9 (￨9 )￨9 )￨9 )￨9 ||￨9 (￨9 !￨9 (￨9 methodIdentifiers￨9 .￨9 contains￨9 (￨9 entry￨9 .￨9 getKey￨9 (￨9 )￨9 )￨9 )￨9 )￨9 )￨8 {￨8 methods￨9 .￨9 put￨9 (￨9 method￨9 ,￨9 entry￨9 .￨9 getValue￨9 (￨9 )￨9 )￨9 ;￨9 }￨8 }￨7 else￨7 {￨7 <START_BUG>￨8 MethodAnnotationAggregator￨8 .￨8 logger￨8 .￨8 error￨8 (￨8 (￨8 (￨8 (￨8 (￨8 (￨8 "Could<seq2seq4repair_space>not<seq2seq4repair_space>resolve<seq2seq4repair_space>method<seq2seq4repair_space>"￨8 +￨8 (￨8 entry￨8 .￨8 getKey￨8 (￨8 )￨8 )￨8 )￨8 +￨8 "<seq2seq4repair_space>on<seq2seq4repair_space>class<seq2seq4repair_space>"￨8 )￨8 +￨8 c￨8 )￨8 +￨8 "<seq2seq4repair_space>with<seq2seq4repair_space>annotations<seq2seq4repair_space>"￨8 )￨8 +￨8 (￨8 entry￨8 .￨8 getValue￨8 (￨8 )￨8 )￨8 )￨8 )￨8 ;￨8 <END_BUG>￨8 }￨7 }￨6 }￨5 }￨4 for￨4 (￨4 Method￨5 method￨5 :￨5 classIndex￨5 .￨5 getMethods￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 Modifier￨6 .￨6 isPrivate￨6 (￨6 method￨6 .￨6 getModifiers￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 methodIdentifiers￨6 .￨6 add￨6 (￨6 MethodIdentifier￨6 .￨6 getIdentifierForMethod￨6 (￨6 method￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 c￨4 =￨4 c￨4 .￨4 getSuperclass￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 RuntimeAnnotationInformation￨3 <￨3 T￨3 >￨3 (￨3 classAnnotations￨3 ,￨3 methods￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 <￨2 A￨2 extends￨2 Annotation￨2 ,￨2 T￨2 >￨2 Set￨2 <￨2 Method￨2 >￨2 runtimeAnnotationPresent￨2 (￨2 final￨3 Class￨3 <￨3 ?￨3 >￨3 componentClass￨3 ,￨3 final￨3 EEApplicationClasses￨3 applicationClasses￨3 ,￨3 final￨3 DeploymentReflectionIndex￨3 index￨3 ,￨3 final￨3 Class￨3 <￨3 A￨3 >￨3 annotationType￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StormSubmitter￨1 {￨1 public￨2 static￨2 Logger￨2 LOG￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 StormSubmitter￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 Iface￨2 localNimbus￨2 =￨2 null￨2 ;￨2 public￨2 static￨2 void￨2 setLocalNimbus￨2 (￨2 Nimbus￨2 .￨2 Iface￨2 localNimbusHandler￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 submitTopology￨2 (￨2 String￨2 name￨2 ,￨2 Map￨2 stormConf￨2 ,￨2 StormTopology￨2 topology￨2 )￨2 throws￨2 AlreadyAliveException￨2 ,￨2 InvalidTopologyException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 submitTopology￨2 (￨2 String￨2 name￨2 ,￨2 Map￨2 stormConf￨2 ,￨2 StormTopology￨2 topology￨2 ,￨2 SubmitOptions￨2 opts￨2 )￨2 throws￨2 AlreadyAliveException￨2 ,￨2 InvalidTopologyException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 Utils￨4 .￨4 isValidConf￨4 (￨4 stormConf￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 "Storm<seq2seq4repair_space>conf<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>valid.<seq2seq4repair_space>Must<seq2seq4repair_space>be<seq2seq4repair_space>json-serializable"￨4 )￨4 ;￨4 }￨3 stormConf￨3 =￨3 new￨3 HashMap￨3 (￨3 stormConf￨3 )￨3 ;￨3 stormConf￨3 .￨3 putAll￨3 (￨3 Utils￨3 .￨3 readCommandLineOpts￨3 (￨3 )￨3 )￨3 ;￨3 Map￨3 conf￨3 =￨3 Utils￨3 .￨3 readStormConfig￨3 (￨3 )￨3 ;￨3 conf￨3 .￨3 putAll￨3 (￨3 stormConf￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 String￨4 serConf￨4 =￨4 JSONValue￨4 .￨4 toJSONString￨4 (￨4 stormConf￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 StormSubmitter￨5 .￨5 localNimbus￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 StormSubmitter￨5 .￨5 LOG￨5 .￨5 info￨5 (￨5 (￨5 (￨5 "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨5 +￨5 name￨5 )￨5 +￨5 "<seq2seq4repair_space>in<seq2seq4repair_space>local<seq2seq4repair_space>mode"￨5 )￨5 )￨5 ;￨5 StormSubmitter￨5 .￨5 localNimbus￨5 .￨5 submitTopology￨5 (￨5 name￨5 ,￨5 null￨5 ,￨5 serConf￨5 ,￨5 topology￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 NimbusClient￨5 client￨5 =￨5 NimbusClient￨5 .￨5 getConfiguredClient￨5 (￨5 conf￨5 )￨5 ;￨5 if￨5 (￨5 StormSubmitter￨6 .￨6 topologyNameExists￨6 (￨6 conf￨6 ,￨6 name￨6 )￨6 )￨5 {￨5 throw￨6 new￨6 RuntimeException￨6 (￨6 (￨6 (￨6 "Topology<seq2seq4repair_space>with<seq2seq4repair_space>name<seq2seq4repair_space>`"￨6 +￨6 name￨6 )￨6 +￨6 "`<seq2seq4repair_space>already<seq2seq4repair_space>exists<seq2seq4repair_space>on<seq2seq4repair_space>cluster"￨6 )￨6 )￨6 ;￨6 }￨5 StormSubmitter￨5 .￨5 submitJar￨5 (￨5 conf￨5 )￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 StormSubmitter￨6 .￨6 LOG￨6 .￨6 info￨6 (￨6 (￨6 (￨6 (￨6 "Submitting<seq2seq4repair_space>topology<seq2seq4repair_space>"￨6 +￨6 name￨6 )￨6 +￨6 "<seq2seq4repair_space>in<seq2seq4repair_space>distributed<seq2seq4repair_space>mode<seq2seq4repair_space>with<seq2seq4repair_space>conf<seq2seq4repair_space>"￨6 )￨6 +￨6 serConf￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 opts￨7 !=￨7 null￨7 )￨6 {￨6 client￨7 .￨7 getClient￨7 (￨7 )￨7 .￨7 submitTopologyWithOpts￨7 (￨7 name￨7 ,￨7 StormSubmitter￨7 .￨7 submittedJar￨7 ,￨7 serConf￨7 ,￨7 topology￨7 ,￨7 opts￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 client￨7 .￨7 getClient￨7 (￨7 )￨7 .￨7 submitTopology￨7 (￨7 name￨7 ,￨7 StormSubmitter￨7 .￨7 submittedJar￨7 ,￨7 serConf￨7 ,￨7 topology￨7 )￨7 ;￨7 }￨6 }￨5 catch￨5 (￨5 InvalidTopologyException￨6 e￨6 )￨5 {￨5 <START_BUG>￨6 StormSubmitter￨6 .￨6 LOG￨6 .￨6 warn￨6 (￨6 "Topology<seq2seq4repair_space>submission<seq2seq4repair_space>exception"￨6 ,￨6 e￨6 )￨6 ;￨6 <END_BUG>￨6 throw￨6 e￨6 ;￨6 }￨5 catch￨5 (￨5 AlreadyAliveException￨6 e￨6 )￨5 {￨5 StormSubmitter￨6 .￨6 LOG￨6 .￨6 warn￨6 (￨6 "Topology<seq2seq4repair_space>already<seq2seq4repair_space>alive<seq2seq4repair_space>exception"￨6 ,￨6 e￨6 )￨6 ;￨6 throw￨6 e￨6 ;￨6 }￨5 finally￨5 (￨5 )￨5 {￨5 client￨6 .￨6 close￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 StormSubmitter￨4 .￨4 LOG￨4 .￨4 info￨4 (￨4 (￨4 "Finished<seq2seq4repair_space>submitting<seq2seq4repair_space>topology:<seq2seq4repair_space>"￨4 +￨4 name￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 TException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 boolean￨2 topologyNameExists￨2 (￨2 Map￨3 conf￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 submittedJar￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 void￨2 submitJar￨2 (￨2 Map￨3 conf￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 submitJar￨2 (￨2 Map￨3 conf￨3 ,￨3 String￨3 localJar￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 IOUtils￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 IOUtils￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 DEFAULT_BUFFER_SIZE￨2 =￨2 1024￨2 *￨2 4￨2 ;￨2 public￨2 IOUtils￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 close￨2 (￨2 final￨2 Closeable￨2 closeable￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 closeQuietly￨2 (￨2 final￨3 Closeable￨3 closeable￨3 )￨2 {￨2 }￨2 public￨2 static￨2 byte￨2 [￨2 ]￨2 toByteArray￨2 (￨2 final￨2 InputStream￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 byte￨2 [￨2 ]￨2 toByteArray￨2 (￨2 final￨2 Reader￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 byte￨2 [￨2 ]￨2 toByteArray￨2 (￨2 final￨2 Reader￨2 input￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 char￨2 [￨2 ]￨2 toCharArray￨2 (￨2 final￨2 InputStream￨2 is￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 char￨2 [￨2 ]￨2 toCharArray￨2 (￨2 final￨2 InputStream￨2 is￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 char￨2 [￨2 ]￨2 toCharArray￨2 (￨2 final￨2 Reader￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toString￨2 (￨2 final￨2 InputStream￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toString￨2 (￨2 final￨2 InputStream￨2 input￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 toString￨2 (￨2 final￨2 Reader￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 byte￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 byte￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 byte￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 Writer￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 char￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 char￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 char￨2 [￨2 ]￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 String￨2 data￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 String￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 String￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 StringBuilder￨2 data￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 StringBuilder￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 write￨2 (￨2 final￨2 StringBuilder￨2 data￨2 ,￨2 final￨2 OutputStream￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 copy￨2 (￨2 final￨2 InputStream￨2 input￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 copy￨2 (￨2 final￨2 InputStream￨2 input￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 copy￨2 (￨2 final￨2 InputStream￨2 input￨2 ,￨2 final￨2 Writer￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 copy￨2 (￨2 final￨2 Reader￨2 input￨2 ,￨2 final￨2 Writer￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 copy￨2 (￨2 final￨2 Reader￨2 input￨2 ,￨2 final￨2 OutputStream￨2 output￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 copy￨2 (￨2 final￨2 Reader￨2 input￨2 ,￨2 final￨2 OutputStream￨2 output￨2 ,￨2 final￨2 String￨2 encoding￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 contentEquals￨2 (￨2 InputStream￨2 input1￨2 ,￨2 InputStream￨2 input2￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 contentEquals￨2 (￨2 Reader￨2 input1￨2 ,￨2 Reader￨2 input2￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Time￨2 getLastModified￨2 (￨2 File￨3 file￨3 )￨2 {￨2 if￨3 (￨3 (￨4 file￨4 .￨4 exists￨4 (￨4 )￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 long￨3 millis￨3 =￨3 file￨3 .￨3 lastModified￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 millis￨4 ==￨4 0￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 Time￨3 .￨3 valueOf￨3 (￨3 millis￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 ParameterizedSingleTypeReference￨1 extends￨1 ArrayTypeReference￨1 {￨1 public￨2 TypeReference￨2 [￨2 ]￨2 typeArguments￨2 ;￨2 private￨2 boolean￨2 didResolve￨2 =￨2 false￨2 ;￨2 public￨2 ParameterizedSingleTypeReference￨2 (￨2 char￨3 [￨3 ]￨3 name￨3 ,￨3 TypeReference￨3 [￨3 ]￨3 typeArguments￨3 ,￨3 int￨3 dim￨3 ,￨3 long￨3 pos￨3 )￨2 {￨2 }￨2 public￨2 void￨2 checkBounds￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeReference￨2 copyDims￨2 (￨2 int￨3 dim￨3 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 getParameterizedTypeName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 TypeBinding￨2 getTypeBinding￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 internalResolveType￨2 (￨2 Scope￨3 scope￨3 ,￨3 ReferenceBinding￨3 enclosingType￨3 ,￨3 boolean￨3 checkBounds￨3 )￨2 {￨2 this￨3 .￨3 constant￨3 =￨3 Constant￨3 .￨3 NotAConstant￨3 ;￨3 if￨3 (￨3 this￨4 .￨4 didResolve￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 this￨5 .￨5 resolvedType￨5 )￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 this￨5 .￨5 resolvedType￨5 .￨5 isValidBinding￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 return￨4 this￨4 .￨4 resolvedType￨4 ;￨4 }￨3 this￨3 .￨3 didResolve￨3 =￨3 true￨3 ;￨3 if￨3 (￨3 enclosingType￨4 ==￨4 null￨4 )￨3 {￨3 this￨4 .￨4 resolvedType￨4 =￨4 scope￨4 .￨4 getType￨4 (￨4 token￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 this￨5 .￨5 resolvedType￨5 .￨5 isValidBinding￨5 (￨5 )￨5 )￨5 )￨4 {￨4 reportInvalidType￨5 (￨5 scope￨5 )￨5 ;￨5 return￨5 null￨5 ;￨5 }￨4 enclosingType￨4 =￨4 this￨4 .￨4 resolvedType￨4 .￨4 enclosingType￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 enclosingType￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 enclosingType￨5 .￨5 isGenericType￨5 (￨5 )￨5 )￨5 )￨4 {￨4 ReferenceBinding￨5 currentType￨5 =￨5 (￨5 (￨5 ReferenceBinding￨5 )￨5 (￨5 this￨5 .￨5 resolvedType￨5 )￨5 )￨5 ;￨5 enclosingType￨5 =￨5 (￨5 currentType￨5 .￨5 isStatic￨5 (￨5 )￨5 )￨5 ?￨5 (￨5 (￨5 ReferenceBinding￨5 )￨5 (￨5 scope￨5 .￨5 environment￨5 (￨5 )￨5 .￨5 convertToRawType￨5 (￨5 enclosingType￨5 )￨5 )￨5 )￨5 :￨5 scope￨5 .￨5 environment￨5 (￨5 )￨5 .￨5 convertToParameterizedType￨5 (￨5 enclosingType￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 this￨4 .￨4 resolvedType￨4 =￨4 scope￨4 .￨4 getMemberType￨4 (￨4 token￨4 ,￨4 (￨4 (￨4 ReferenceBinding￨4 )￨4 (￨4 enclosingType￨4 .￨4 erasure￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 this￨5 .￨5 resolvedType￨5 .￨5 isValidBinding￨5 (￨5 )￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 invalidEnclosingType￨5 (￨5 this￨5 ,￨5 this￨5 .￨5 resolvedType￨5 ,￨5 enclosingType￨5 )￨5 ;￨5 return￨5 null￨5 ;￨5 }￨4 if￨4 (￨4 isTypeUseDeprecated￨5 (￨5 this￨5 .￨5 resolvedType￨5 ,￨5 scope￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 deprecatedType￨5 (￨5 this￨5 .￨5 resolvedType￨5 ,￨5 this￨5 )￨5 ;￨5 }￨4 }￨3 boolean￨3 isClassScope￨3 =￨3 (￨3 scope￨3 .￨3 kind￨3 )￨3 ==￨3 (￨3 Scope￨3 .￨3 CLASS_SCOPE￨3 )￨3 ;￨3 TypeReference￨3 keep￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 isClassScope￨4 )￨3 {￨3 keep￨4 =￨4 (￨4 (￨4 ClassScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 .￨4 superTypeReference￨4 ;￨4 (￨4 (￨4 ClassScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 .￨4 superTypeReference￨4 =￨4 null￨4 ;￨4 }￨3 ReferenceBinding￨3 currentType￨3 =￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 )￨3 ;￨3 int￨3 argLength￨3 =￨3 this￨3 .￨3 typeArguments￨3 .￨3 length￨3 ;￨3 TypeBinding￨3 [￨3 ]￨3 argTypes￨3 =￨3 new￨3 TypeBinding￨3 [￨3 argLength￨3 ]￨3 ;￨3 boolean￨3 argHasError￨3 =￨3 false￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 argLength￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 TypeReference￨4 typeArgument￨4 =￨4 this￨4 .￨4 typeArguments￨4 [￨4 i￨4 ]￨4 ;￨4 TypeBinding￨4 argType￨4 =￨4 (￨4 isClassScope￨4 )￨4 ?￨4 typeArgument￨4 .￨4 resolveTypeArgument￨4 (￨4 (￨4 (￨4 ClassScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 ,￨4 currentType￨4 ,￨4 i￨4 )￨4 :￨4 typeArgument￨4 .￨4 resolveTypeArgument￨4 (￨4 (￨4 (￨4 BlockScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 ,￨4 currentType￨4 ,￨4 i￨4 )￨4 ;￨4 if￨4 (￨4 argType￨5 ==￨5 null￨5 )￨4 {￨4 argHasError￨5 =￨5 true￨5 ;￨5 }￨4 else￨4 {￨4 argTypes￨5 [￨5 i￨5 ]￨5 =￨5 argType￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 argHasError￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 if￨3 (￨3 isClassScope￨4 )￨3 {￨3 (￨4 (￨4 ClassScope￨4 )￨4 (￨4 scope￨4 )￨4 )￨4 .￨4 superTypeReference￨4 =￨4 keep￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 ClassScope￨5 )￨5 (￨5 scope￨5 )￨5 )￨5 .￨5 detectHierarchyCycle￨5 (￨5 currentType￨5 ,￨5 this￨5 ,￨5 argTypes￨5 )￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 }￨3 TypeVariableBinding￨3 [￨3 ]￨3 typeVariables￨3 =￨3 currentType￨3 .￨3 typeVariables￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 typeVariables￨3 ==￨3 (￨3 NoTypeVariables￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 scope￨3 .￨3 problemReporter￨3 (￨3 )￨3 .￨3 nonGenericTypeCannotBeParameterized￨3 (￨3 this￨3 ,￨3 currentType￨3 ,￨3 argTypes￨3 )￨3 ;￨3 return￨3 null￨3 ;￨3 else￨3 if￨3 (￨3 argLength￨4 !=￨4 (￨4 typeVariables￨4 .￨4 length￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 incorrectArityForParameterizedType￨4 (￨4 this￨4 ,￨4 currentType￨4 ,￨4 argTypes￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 (￨4 !￨4 (￨4 currentType￨4 .￨4 isStatic￨4 (￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 enclosingType￨4 !=￨4 null￨4 )￨4 )￨4 &&￨4 (￨4 enclosingType￨4 .￨4 isRawType￨4 (￨4 )￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 rawMemberTypeCannotBeParameterized￨4 (￨4 this￨4 ,￨4 scope￨4 .￨4 environment￨4 (￨4 )￨4 .￨4 createRawType￨4 (￨4 (￨4 (￨4 ReferenceBinding￨4 )￨4 (￨4 currentType￨4 .￨4 erasure￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 enclosingType￨4 )￨4 ,￨4 argTypes￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 ParameterizedTypeBinding￨3 parameterizedType￨3 =￨3 scope￨3 .￨3 environment￨3 (￨3 )￨3 .￨3 createParameterizedType￨3 (￨3 (￨3 (￨3 ReferenceBinding￨3 )￨3 (￨3 currentType￨3 .￨3 erasure￨3 (￨3 )￨3 )￨3 )￨3 ,￨3 argTypes￨3 ,￨3 enclosingType￨3 )￨3 ;￨3 if￨3 (￨3 checkBounds￨4 )￨3 {￨3 parameterizedType￨4 .￨4 boundCheck￨4 (￨4 scope￨4 ,￨4 this￨4 .￨4 typeArguments￨4 )￨4 ;￨4 }￨3 this￨3 .￨3 resolvedType￨3 =￨3 parameterizedType￨3 ;￨3 if￨3 (￨3 isTypeUseDeprecated￨4 (￨4 this￨4 .￨4 resolvedType￨4 ,￨4 scope￨4 )￨4 )￨3 {￨3 reportDeprecatedType￨4 (￨4 scope￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 dimensions￨4 )￨4 >￨4 0￨4 )￨3 {￨3 if￨4 (￨4 (￨5 dimensions￨5 )￨5 >￨5 255￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 tooManyDimensions￨5 (￨5 this￨5 )￨5 ;￨5 }￨4 this￨4 .￨4 resolvedType￨4 =￨4 scope￨4 .￨4 createArrayType￨4 (￨4 this￨4 .￨4 resolvedType￨4 ,￨4 dimensions￨4 )￨4 ;￨4 }￨3 return￨3 this￨3 .￨3 resolvedType￨3 ;￨3 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 boolean￨3 checkBounds￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveTypeEnclosing￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 ReferenceBinding￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SetClasspathOperation￨1 extends￨1 JavaModelOperation￨1 {￨1 IClasspathEntry￨2 [￨2 ]￨2 oldResolvedPath￨2 ;￨2 IClasspathEntry￨2 [￨2 ]￨2 newResolvedPath￨2 ;￨2 IClasspathEntry￨2 [￨2 ]￨2 newRawPath￨2 ;￨2 boolean￨2 canChangeResource￨2 ;￨2 boolean￨2 needCycleCheck￨2 ;￨2 boolean￨2 needValidation￨2 ;￨2 boolean￨2 needSave￨2 ;￨2 IPath￨2 newOutputLocation￨2 ;￨2 public￨2 static￨2 final￨2 IClasspathEntry￨2 [￨2 ]￨2 ReuseClasspath￨2 =￨2 new￨2 IClasspathEntry￨2 [￨2 0￨2 ]￨2 ;￨2 public￨2 static￨2 final￨2 IClasspathEntry￨2 [￨2 ]￨2 UpdateClasspath￨2 =￨2 new￨2 IClasspathEntry￨2 [￨2 0￨2 ]￨2 ;￨2 public￨2 static￨2 final￨2 IPath￨2 ReuseOutputLocation￨2 =￨2 new￨2 Path￨2 (￨2 "Reuse<seq2seq4repair_space>Existing<seq2seq4repair_space>Output<seq2seq4repair_space>Location"￨2 )￨2 ;￨2 public￨2 SetClasspathOperation￨2 (￨2 IJavaProject￨3 project￨3 ,￨3 IClasspathEntry￨3 [￨3 ]￨3 oldResolvedPath￨3 ,￨3 IClasspathEntry￨3 [￨3 ]￨3 newRawPath￨3 ,￨3 IPath￨3 newOutputLocation￨3 ,￨3 boolean￨3 canChangeResource￨3 ,￨3 boolean￨3 needValidation￨3 ,￨3 boolean￨3 needSave￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addClasspathDeltas￨2 (￨2 IPackageFragmentRoot￨3 [￨3 ]￨3 roots￨3 ,￨3 int￨3 flag￨3 ,￨3 JavaElementDelta￨3 delta￨3 )￨2 {￨2 }￨2 protected￨2 int￨2 classpathContains￨2 (￨2 IClasspathEntry￨3 [￨3 ]￨3 list￨3 ,￨3 IClasspathEntry￨3 entry￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 collectAllSubfolders￨2 (￨2 IFolder￨2 folder￨2 ,￨2 ArrayList￨2 collection￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ArrayList￨2 determineAffectedPackageFragments￨2 (￨2 IPath￨2 location￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 executeOperation￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 generateClasspathChangeDeltas￨2 (￨2 IClasspathEntry￨3 [￨3 ]￨3 oldResolvedPath￨3 ,￨3 IClasspathEntry￨3 [￨3 ]￨3 newResolvedPath￨3 ,￨3 JavaModelManager￨3 manager￨3 ,￨3 final￨3 JavaProject￨3 project￨3 )￨2 {￨2 }￨2 protected￨2 JavaProject￨2 getProject￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 getSourceAttachmentDeltaFlag￨2 (￨2 IPath￨3 oldPath￨3 ,￨3 IPath￨3 newPath￨3 ,￨3 IPath￨3 sourcePath￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isReadOnly￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 saveClasspathIfNecessary￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateClasspath￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateAffectedProjects￨2 (￨2 IPath￨3 prerequisiteProjectPath￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateCycleMarkersIfNecessary￨2 (￨2 IClasspathEntry￨3 [￨3 ]￨3 newResolvedPath￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateOutputLocation￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateProjectReferencesIfNecessary￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 this￨4 .￨4 canChangeResource￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 this￨4 .￨4 newRawPath￨4 )￨4 ==￨4 (￨4 SetClasspathOperation￨4 .￨4 ReuseClasspath￨4 )￨4 )￨4 ||￨4 (￨4 (￨4 this￨4 .￨4 newRawPath￨4 )￨4 ==￨4 (￨4 SetClasspathOperation￨4 .￨4 UpdateClasspath￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 JavaProject￨3 jproject￨3 =￨3 getProject￨3 (￨3 )￨3 ;￨3 String￨3 [￨3 ]￨3 oldRequired￨3 =￨3 jproject￨3 .￨3 projectPrerequisites￨3 (￨3 this￨3 .￨3 oldResolvedPath￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 this￨4 .￨4 newResolvedPath￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 this￨4 .￨4 newResolvedPath￨4 =￨4 jproject￨4 .￨4 getResolvedClasspath￨4 (￨4 this￨4 .￨4 newRawPath￨4 ,￨4 true￨4 ,￨4 this￨4 .￨4 needValidation￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 String￨3 [￨3 ]￨3 newRequired￨3 =￨3 jproject￨3 .￨3 projectPrerequisites￨3 (￨3 this￨3 .￨3 newResolvedPath￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 IProject￨4 project￨4 =￨4 jproject￨4 .￨4 getProject￨4 (￨4 )￨4 ;￨4 IProjectDescription￨4 description￨4 =￨4 project￨4 .￨4 getDescription￨4 (￨4 )￨4 ;￨4 IProject￨4 [￨4 ]￨4 projectReferences￨4 =￨4 description￨4 .￨4 getReferencedProjects￨4 (￨4 )￨4 ;￨4 HashSet￨4 oldReferences￨4 =￨4 new￨4 HashSet￨4 (￨4 projectReferences￨4 .￨4 length￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 projectReferences￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 projectName￨5 =￨5 projectReferences￨5 [￨5 i￨5 ]￨5 .￨5 getName￨5 (￨5 )￨5 ;￨5 oldReferences￨5 .￨5 add￨5 (￨5 projectName￨5 )￨5 ;￨5 }￨4 HashSet￨4 newReferences￨4 =￨4 (￨4 (￨4 HashSet￨4 )￨4 (￨4 oldReferences￨4 .￨4 clone￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 oldRequired￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 projectName￨5 =￨5 oldRequired￨5 [￨5 i￨5 ]￨5 ;￨5 newReferences￨5 .￨5 remove￨5 (￨5 projectName￨5 )￨5 ;￨5 }￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 newRequired￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 String￨5 projectName￨5 =￨5 newRequired￨5 [￨5 i￨5 ]￨5 ;￨5 newReferences￨5 .￨5 add￨5 (￨5 projectName￨5 )￨5 ;￨5 }￨4 Iterator￨4 iter￨4 ;￨4 int￨4 newSize￨4 =￨4 newReferences￨4 .￨4 size￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 oldReferences￨5 .￨5 size￨5 (￨5 )￨5 )￨5 ==￨5 newSize￨5 )￨4 {￨4 iter￨5 =￨5 newReferences￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 iter￨6 .￨6 hasNext￨6 (￨6 )￨6 )￨5 {￨5 if￨6 (￨6 !￨7 (￨7 oldReferences￨7 .￨7 contains￨7 (￨7 iter￨7 .￨7 next￨7 (￨7 )￨7 )￨7 )￨7 )￨6 {￨6 break￨7 checkIdentity￨7 ;￨7 }￨6 }￨5 return￨5 ;￨5 }￨4 }￨4 String￨4 [￨4 ]￨4 requiredProjectNames￨4 =￨4 new￨4 String￨4 [￨4 newSize￨4 ]￨4 ;￨4 int￨4 index￨4 =￨4 0￨4 ;￨4 iter￨4 =￨4 newReferences￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 iter￨5 .￨5 hasNext￨5 (￨5 )￨5 )￨4 {￨4 requiredProjectNames￨5 [￨5 (￨5 index￨5 ++￨5 )￨5 ]￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 iter￨5 .￨5 next￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 Util￨4 .￨4 sort￨4 (￨4 requiredProjectNames￨4 )￨4 ;￨4 IProject￨4 [￨4 ]￨4 requiredProjectArray￨4 =￨4 new￨4 IProject￨4 [￨4 newSize￨4 ]￨4 ;￨4 IWorkspaceRoot￨4 wksRoot￨4 =￨4 project￨4 .￨4 getWorkspace￨4 (￨4 )￨4 .￨4 getRoot￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 newSize￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 requiredProjectArray￨5 [￨5 i￨5 ]￨5 =￨5 wksRoot￨5 .￨5 getProject￨5 (￨5 requiredProjectNames￨5 [￨5 i￨5 ]￨5 )￨5 ;￨5 }￨4 description￨4 .￨4 setReferencedProjects￨4 (￨4 requiredProjectArray￨4 )￨4 ;￨4 project￨4 .￨4 setDescription￨4 (￨4 description￨4 ,￨4 this￨4 .￨4 fMonitor￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 CoreException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 JavaModelException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 IJavaModelStatus￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DoubleDatatypeValidator￨1 extends￨1 AbstractNumericFacetValidator￨1 {￨1 public￨2 DoubleDatatypeValidator￨2 (￨2 )￨2 throws￨2 InvalidDatatypeFacetException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DoubleDatatypeValidator￨2 (￨2 DatatypeValidator￨2 base￨2 ,￨2 Hashtable￨2 facets￨2 ,￨2 boolean￨2 derivedByList￨2 )￨2 throws￨2 InvalidDatatypeFacetException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 compare￨2 (￨2 String￨3 value1￨3 ,￨3 String￨3 value2￨3 )￨2 {￨2 }￨2 protected￨2 int￨2 compareValues￨2 (￨2 Object￨3 value1￨3 ,￨3 Object￨3 value2￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMaxInclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMinInclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMaxExclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setMinExclusive￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setEnumeration￨2 (￨2 Vector￨2 enumeration￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 enumeration￨4 !=￨4 null￨4 )￨3 {￨3 fEnumeration￨4 =￨4 new￨4 Double￨4 [￨4 enumeration￨4 .￨4 size￨4 (￨4 )￨4 ]￨4 ;￨4 Object￨4 baseEnum￨4 =￨4 null￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 enumeration￨6 .￨6 size￨6 (￨6 )￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 <START_BUG>￨6 fEnumeration￨6 [￨6 i￨6 ]￨6 =￨6 new￨6 Double￨6 (￨6 (￨6 (￨6 String￨6 )￨6 (￨6 enumeration￨6 .￨6 elementAt￨6 (￨6 i￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 (￨6 (￨6 DoubleDatatypeValidator￨6 )￨6 (￨6 fBaseValidator￨6 )￨6 )￨6 .￨6 validate￨6 (￨6 (￨6 (￨6 String￨6 )￨6 (￨6 enumeration￨6 .￨6 elementAt￨6 (￨6 i￨6 )￨6 )￨6 )￨6 ,￨6 null￨6 )￨6 ;￨6 }￨5 }￨4 catch￨4 (￨4 Exception￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 InvalidDatatypeValueException￨5 (￨5 e￨5 .￨5 getMessage￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 String￨2 getMaxInclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMinInclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMaxExclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMinExclusive￨2 (￨2 boolean￨3 isBase￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkContentEnum￨2 (￨2 String￨2 content￨2 ,￨2 Object￨2 state￨2 ,￨2 Vector￨2 enumeration￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 checkContent￨2 (￨2 String￨2 content￨2 ,￨2 Object￨2 state￨2 ,￨2 Vector￨2 enumeration￨2 ,￨2 boolean￨2 asBase￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Double￨2 dValueOf￨2 (￨2 String￨2 s￨2 )￨2 throws￨2 NumberFormatException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 enumCheck￨2 (￨2 double￨2 v￨2 ,￨2 Double￨2 [￨2 ]￨2 enumDoubles￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 compareDoubles￨2 (￨2 double￨3 d1￨3 ,￨3 double￨3 d2￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LocalizedFormatsTest￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testMessageNumber￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 309￨3 ,￨3 LocalizedFormats￨3 .￨3 values￨3 (￨3 )￨3 .￨3 length￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testAllKeysPresentInPropertiesFiles￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testAllPropertiesCorrespondToKeys￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testNoMissingFrenchTranslation￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testNoOpEnglishTranslation￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testVariablePartsConsistency￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 @￨1 RunAsClient￨1 public￨1 class￨1 SimpleStatelessWebserviceEndpointTestCase￨1 {￨1 @￨2 ArquillianResource￨2 URL￨2 baseUrl￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 SimpleStatelessWebserviceEndpointTestCase￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 @￨2 Deployment￨2 (￨2 testable￨2 =￨2 false￨2 )￨2 public￨2 static￨2 JavaArchive￨2 createDeployment￨2 (￨2 )￨2 {￨2 final￨3 JavaArchive￨3 jar￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 JavaArchive￨3 .￨3 class￨3 ,￨3 "stateless-ws-endpoint-example.jar"￨3 )￨3 ;￨3 <START_BUG>￨3 jar￨3 .￨3 addPackage￨3 (￨3 SimpleStatelessWebserviceEndpointImpl￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 SimpleStatelessWebserviceEndpointTestCase￨3 .￨3 log￨3 .￨3 info￨3 (￨3 jar￨3 .￨3 toString￨3 (￨3 true￨3 )￨3 )￨3 ;￨3 return￨3 jar￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testSimpleStatelessWebserviceEndpoint￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRemoteAccess￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StreamContextManager￨1 {￨1 private￨2 static￨2 Logger￨2 logger_￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 StreamContextManager￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 enum￨2 StreamCompletionAction￨2 {￨2 DELETE￨3 ,￨3 STREAM￨3 ;￨3 }￨2 public￨2 static￨2 class￨2 StreamContext￨2 implements￨2 Serializable￨2 {￨2 private￨3 static￨3 Logger￨3 logger_￨3 =￨3 Logger￨3 .￨3 getLogger￨3 (￨3 StreamContextManager￨3 .￨3 StreamContext￨3 .￨3 class￨3 )￨3 ;￨3 private￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamContext￨3 >￨3 serializer_￨3 ;￨3 public￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamContext￨3 >￨3 serializer￨3 (￨3 )￨3 {￨3 }￨3 private￨3 String￨3 targetFile_￨3 ;￨3 private￨3 long￨3 expectedBytes_￨3 ;￨3 public￨3 StreamContext￨3 (￨3 String￨4 targetFile￨4 ,￨4 long￨4 expectedBytes￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getTargetFile￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setTargetFile￨3 (￨3 String￨4 file￨4 )￨3 {￨3 }￨3 public￨3 long￨3 getExpectedBytes￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 equals￨3 (￨3 Object￨4 o￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StreamContextSerializer￨2 implements￨2 ICompactSerializer￨2 <￨2 StreamContextManager￨2 .￨2 StreamContext￨2 >￨2 {￨2 public￨3 void￨3 serialize￨3 (￨3 StreamContextManager￨3 .￨3 StreamContext￨3 sc￨3 ,￨3 DataOutputStream￨3 dos￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 StreamContextManager￨3 .￨3 StreamContext￨3 deserialize￨3 (￨3 DataInputStream￨3 dis￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StreamStatus￨2 {￨2 private￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 >￨3 serializer_￨3 ;￨3 public￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 >￨3 serializer￨3 (￨3 )￨3 {￨3 }￨3 private￨3 String￨3 file_￨3 ;￨3 private￨3 long￨3 expectedBytes_￨3 ;￨3 private￨3 StreamContextManager￨3 .￨3 StreamCompletionAction￨3 action_￨3 ;￨3 public￨3 StreamStatus￨3 (￨3 String￨4 file￨4 ,￨4 long￨4 expectedBytes￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getFile￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 getExpectedBytes￨3 (￨3 )￨3 {￨3 }￨3 void￨3 setAction￨3 (￨3 StreamContextManager￨4 .￨4 StreamCompletionAction￨4 action￨4 )￨3 {￨3 }￨3 public￨3 StreamContextManager￨3 .￨3 StreamCompletionAction￨3 getAction￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StreamStatusSerializer￨2 implements￨2 ICompactSerializer￨2 <￨2 StreamContextManager￨2 .￨2 StreamStatus￨2 >￨2 {￨2 public￨3 void￨3 serialize￨3 (￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 streamStatus￨3 ,￨3 DataOutputStream￨3 dos￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 deserialize￨3 (￨3 DataInputStream￨3 dis￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StreamStatusMessage￨2 implements￨2 Serializable￨2 {￨2 private￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamStatusMessage￨3 >￨3 serializer_￨3 ;￨3 public￨3 static￨3 ICompactSerializer￨3 <￨3 StreamContextManager￨3 .￨3 StreamStatusMessage￨3 >￨3 serializer￨3 (￨3 )￨3 {￨3 }￨3 public￨3 static￨3 Message￨3 makeStreamStatusMessage￨3 (￨3 StreamContextManager￨3 .￨3 StreamStatusMessage￨3 streamStatusMessage￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 ByteArrayOutputStream￨4 bos￨4 =￨4 new￨4 ByteArrayOutputStream￨4 (￨4 )￨4 ;￨4 DataOutputStream￨4 dos￨4 =￨4 new￨4 DataOutputStream￨4 (￨4 bos￨4 )￨4 ;￨4 StreamContextManager￨4 .￨4 StreamStatusMessage￨4 .￨4 serializer￨4 (￨4 )￨4 .￨4 serialize￨4 (￨4 streamStatusMessage￨4 ,￨4 dos￨4 )￨4 ;￨4 <START_BUG>￨4 return￨4 new￨4 Message￨4 (￨4 StorageService￨4 .￨4 getLocalStorageEndPoint￨4 (￨4 )￨4 ,￨4 ""￨4 ,￨4 StorageService￨4 .￨4 bootStrapTerminateVerbHandler_￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 {￨4 bos￨4 .￨4 toByteArray￨4 (￨4 )￨4 }￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 protected￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 streamStatus_￨3 ;￨3 public￨3 StreamStatusMessage￨3 (￨3 StreamContextManager￨4 .￨4 StreamStatus￨4 streamStatus￨4 )￨3 {￨3 }￨3 public￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 getStreamStatus￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StreamStatusMessageSerializer￨2 implements￨2 ICompactSerializer￨2 <￨2 StreamContextManager￨2 .￨2 StreamStatusMessage￨2 >￨2 {￨2 public￨3 void￨3 serialize￨3 (￨3 StreamContextManager￨3 .￨3 StreamStatusMessage￨3 streamStatusMessage￨3 ,￨3 DataOutputStream￨3 dos￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 StreamContextManager￨3 .￨3 StreamStatusMessage￨3 deserialize￨3 (￨3 DataInputStream￨3 dis￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StreamContextManager￨2 .￨2 StreamContext￨2 >￨2 >￨2 ctxBag_￨2 =￨2 new￨2 Hashtable￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StreamContextManager￨2 .￨2 StreamContext￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StreamContextManager￨2 .￨2 StreamStatus￨2 >￨2 >￨2 streamStatusBag_￨2 =￨2 new￨2 Hashtable￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StreamContextManager￨2 .￨2 StreamStatus￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 Map￨2 <￨2 String￨2 ,￨2 IStreamComplete￨2 >￨2 streamNotificationHandlers_￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 IStreamComplete￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 synchronized￨2 StreamContextManager￨2 .￨2 StreamContext￨2 getStreamContext￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 StreamContextManager￨2 .￨2 StreamStatus￨2 getStreamStatus￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 boolean￨2 isDone￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 IStreamComplete￨2 getStreamCompletionHandler￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 void￨2 removeStreamCompletionHandler￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 void￨2 registerStreamCompletionHandler￨2 (￨2 String￨3 key￨3 ,￨3 IStreamComplete￨3 streamComplete￨3 )￨2 {￨2 }￨2 public￨2 static￨2 synchronized￨2 void￨2 addStreamContext￨2 (￨2 String￨3 key￨3 ,￨3 StreamContextManager￨3 .￨3 StreamContext￨3 streamContext￨3 ,￨3 StreamContextManager￨3 .￨3 StreamStatus￨3 streamStatus￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CassandraDaemon￨1 extends￨1 AbstractCassandraDaemon￨1 {￨1 private￨2 static￨2 Logger￨2 logger￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 CassandraDaemon￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 TServer￨2 serverEngine￨2 ;￨2 protected￨2 void￨2 setup￨2 (￨2 )￨2 throws￨2 IOException￨2 {￨2 int￨3 listenPort￨3 =￨3 DatabaseDescriptor￨3 .￨3 getRpcPort￨3 (￨3 )￨3 ;￨3 InetAddress￨3 listenAddr￨3 =￨3 DatabaseDescriptor￨3 .￨3 getRpcAddress￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 listenAddr￨4 ==￨4 null￨4 )￨3 {￨3 listenAddr￨4 =￨4 FBUtilities￨4 .￨4 getLocalAddress￨4 (￨4 )￨4 ;￨4 }￨3 Thread￨3 .￨3 setDefaultUncaughtExceptionHandler￨3 (￨3 new￨3 Thread￨3 .￨3 UncaughtExceptionHandler￨3 (￨3 )￨3 {￨3 public￨4 void￨4 uncaughtException￨4 (￨4 Thread￨5 t￨5 ,￨5 Throwable￨5 e￨5 )￨4 {￨4 CassandraDaemon￨5 .￨5 logger￨5 .￨5 error￨5 (￨5 (￨5 "Uncaught<seq2seq4repair_space>exception<seq2seq4repair_space>in<seq2seq4repair_space>thread<seq2seq4repair_space>"￨5 +￨5 t￨5 )￨5 ,￨5 e￨5 )￨5 ;￨5 if￨5 (￨5 e￨6 instanceof￨6 OutOfMemoryError￨6 )￨5 {￨5 System￨6 .￨6 exit￨6 (￨6 100￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 SystemTable￨4 .￨4 checkHealth￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 ConfigurationException￨4 e￨4 )￨3 {￨3 CassandraDaemon￨4 .￨4 logger￨4 .￨4 error￨4 (￨4 "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨4 ,￨4 e￨4 )￨4 ;￨4 System￨4 .￨4 exit￨4 (￨4 100￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 DatabaseDescriptor￨4 .￨4 loadSchemas￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 CassandraDaemon￨4 .￨4 logger￨4 .￨4 error￨4 (￨4 "Fatal<seq2seq4repair_space>exception<seq2seq4repair_space>during<seq2seq4repair_space>initialization"￨4 ,￨4 e￨4 )￨4 ;￨4 System￨4 .￨4 exit￨4 (￨4 100￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 String￨4 table￨4 :￨4 DatabaseDescriptor￨4 .￨4 getTables￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 CassandraDaemon￨5 .￨5 logger￨5 .￨5 isDebugEnabled￨5 (￨5 )￨5 )￨4 {￨4 CassandraDaemon￨5 .￨5 logger￨5 .￨5 debug￨5 (￨5 (￨5 "opening<seq2seq4repair_space>keyspace<seq2seq4repair_space>"￨5 +￨5 table￨5 )￨5 )￨5 ;￨5 }￨4 Table￨4 .￨4 open￨4 (￨4 table￨4 )￨4 ;￨4 }￨3 CommitLog￨3 .￨3 recover￨3 (￨3 )￨3 ;￨3 instance￨3 .￨3 checkAllColumnFamilies￨3 (￨3 )￨3 ;￨3 UUID￨3 currentMigration￨3 =￨3 DatabaseDescriptor￨3 .￨3 getDefsVersion￨3 (￨3 )￨3 ;￨3 UUID￨3 lastMigration￨3 =￨3 Migration￨3 .￨3 getLastMigrationId￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 lastMigration￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 lastMigration￨4 .￨4 timestamp￨4 (￨4 )￨4 )￨4 >￨4 (￨4 currentMigration￨4 .￨4 timestamp￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 MigrationManager￨4 .￨4 applyMigrations￨4 (￨4 currentMigration￨4 ,￨4 lastMigration￨4 )￨4 ;￨4 }￨3 StorageService￨3 .￨3 instance￨3 .￨3 initServer￨3 (￨3 )￨3 ;￨3 final￨3 CassandraServer￨3 cassandraServer￨3 =￨3 new￨3 CassandraServer￨3 (￨3 )￨3 ;￨3 Cassandra￨3 .￨3 Processor￨3 processor￨3 =￨3 new￨3 Cassandra￨3 .￨3 Processor￨3 (￨3 cassandraServer￨3 )￨3 ;￨3 TServerSocket￨3 tServerSocket￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 tServerSocket￨4 =￨4 new￨4 TServerSocket￨4 (￨4 new￨4 InetSocketAddress￨4 (￨4 listenAddr￨4 ,￨4 listenPort￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 TTransportException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 IOException￨4 (￨4 String￨4 .￨4 format￨4 (￨4 "Unable<seq2seq4repair_space>to<seq2seq4repair_space>create<seq2seq4repair_space>thrift<seq2seq4repair_space>socket<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨4 ,￨4 listenAddr￨4 ,￨4 listenPort￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 CassandraDaemon￨3 .￨3 logger￨3 .￨3 info￨3 (￨3 String￨3 .￨3 format￨3 (￨3 "Binding<seq2seq4repair_space>thrift<seq2seq4repair_space>service<seq2seq4repair_space>to<seq2seq4repair_space>%s:%s"￨3 ,￨3 listenAddr￨3 ,￨3 listenPort￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 TProtocolFactory￨3 tProtocolFactory￨3 =￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 thrift￨3 .￨3 protocol￨3 .￨3 TBinaryProtocol￨3 .￨3 Factory￨3 (￨3 false￨3 ,￨3 true￨3 ,￨3 DatabaseDescriptor￨3 .￨3 getThriftMaxMessageLength￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 TTransportFactory￨3 inTransportFactory￨3 ;￨3 TTransportFactory￨3 outTransportFactory￨3 ;￨3 if￨3 (￨3 DatabaseDescriptor￨4 .￨4 isThriftFramed￨4 (￨4 )￨4 )￨3 {￨3 int￨4 tFramedTransportSize￨4 =￨4 DatabaseDescriptor￨4 .￨4 getThriftFramedTransportSize￨4 (￨4 )￨4 ;￨4 inTransportFactory￨4 =￨4 new￨4 TFramedTransport￨4 .￨4 Factory￨4 (￨4 tFramedTransportSize￨4 )￨4 ;￨4 outTransportFactory￨4 =￨4 new￨4 TFramedTransport￨4 .￨4 Factory￨4 (￨4 tFramedTransportSize￨4 )￨4 ;￨4 CassandraDaemon￨4 .￨4 logger￨4 .￨4 info￨4 (￨4 "Using<seq2seq4repair_space>TFramedTransport<seq2seq4repair_space>with<seq2seq4repair_space>a<seq2seq4repair_space>max<seq2seq4repair_space>frame<seq2seq4repair_space>size<seq2seq4repair_space>of<seq2seq4repair_space>{}<seq2seq4repair_space>bytes."￨4 ,￨4 tFramedTransportSize￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 inTransportFactory￨4 =￨4 new￨4 TTransportFactory￨4 (￨4 )￨4 ;￨4 outTransportFactory￨4 =￨4 new￨4 TTransportFactory￨4 (￨4 )￨4 ;￨4 }￨3 CustomTThreadPoolServer￨3 .￨3 Options￨3 options￨3 =￨3 new￨3 CustomTThreadPoolServer￨3 .￨3 Options￨3 (￨3 )￨3 ;￨3 options￨3 .￨3 minWorkerThreads￨3 =￨3 64￨3 ;￨3 SynchronousQueue￨3 <￨3 Runnable￨3 >￨3 executorQueue￨3 =￨3 new￨3 SynchronousQueue￨3 <￨3 Runnable￨3 >￨3 (￨3 )￨3 ;￨3 ExecutorService￨3 executorService￨3 =￨3 new￨3 ThreadPoolExecutor￨3 (￨3 options￨4 .￨4 minWorkerThreads￨4 ,￨4 options￨4 .￨4 maxWorkerThreads￨4 ,￨4 60￨4 ,￨4 TimeUnit￨4 .￨4 SECONDS￨4 ,￨4 executorQueue￨4 )￨3 {￨3 @￨4 Override￨4 protected￨4 void￨4 afterExecute￨4 (￨4 Runnable￨5 r￨5 ,￨5 Throwable￨5 t￨5 )￨4 {￨4 super￨5 .￨5 afterExecute￨5 (￨5 r￨5 ,￨5 t￨5 )￨5 ;￨5 cassandraServer￨5 .￨5 logout￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 serverEngine￨3 =￨3 new￨3 CustomTThreadPoolServer￨3 (￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 thrift￨3 .￨3 TProcessorFactory￨3 (￨3 processor￨3 )￨3 ,￨3 tServerSocket￨3 ,￨3 inTransportFactory￨3 ,￨3 outTransportFactory￨3 ,￨3 tProtocolFactory￨3 ,￨3 tProtocolFactory￨3 ,￨3 options￨3 ,￨3 executorService￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 start￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RootLoggerRemove￨1 extends￨1 AbstractLoggingSubsystemUpdate￨1 <￨1 Void￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 -￨2 9178350859833986971L￨2 ;￨2 public￨2 RootLoggerRemove￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 <￨2 P￨2 >￨2 void￨2 applyUpdate￨2 (￨2 UpdateContext￨3 updateContext￨3 ,￨3 UpdateResultHandler￨3 <￨3 ?￨3 super￨3 Void￨3 ,￨3 P￨3 >￨3 resultHandler￨3 ,￨3 P￨3 param￨3 )￨2 {￨2 final￨3 ServiceController￨3 <￨3 ?￨3 >￨3 service￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 service￨4 =￨4 updateContext￨4 .￨4 getServiceContainer￨4 (￨4 )￨4 .￨4 getRequiredService￨4 (￨4 ROOT_LOGGER￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 ServiceNotFoundException￨4 e￨4 )￨3 {￨3 resultHandler￨4 .￨4 handleFailure￨4 (￨4 e￨4 ,￨4 param￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 service￨3 .￨3 setMode￨3 (￨3 REMOVE￨3 )￨3 ;￨3 service￨3 .￨3 addListener￨3 (￨3 new￨3 UpdateResultHandler￨3 .￨3 ServiceRemoveListener￨3 <￨3 P￨3 >￨3 (￨3 resultHandler￨3 ,￨3 param￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 RootLoggerAdd￨2 getCompensatingUpdate￨2 (￨2 LoggingSubsystemElement￨3 original￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 applyUpdate￨2 (￨2 LoggingSubsystemElement￨2 element￨2 )￨2 throws￨2 UpdateFailedException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AttrImpl￨1 extends￨1 NodeContainer￨1 implements￨1 Attr￨1 {￨1 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 7277707688218972102L￨2 ;￨2 protected￨2 boolean￨2 owned￨2 ;￨2 protected￨2 boolean￨2 specified￨2 =￨2 true￨2 ;￨2 protected￨2 AttrImpl￨2 (￨2 DocumentImpl￨3 ownerDocument￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 AttrImpl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 short￨2 getNodeType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setNodeValue￨2 (￨2 String￨2 value￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getNodeValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 getParentNode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Node￨2 cloneNode￨2 (￨2 boolean￨3 deep￨3 )￨2 {￨2 AttrImpl￨3 newattr￨3 =￨3 (￨3 (￨3 AttrImpl￨3 )￨3 (￨3 super￨3 .￨3 cloneNode￨3 (￨3 deep￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 newattr￨3 .￨3 owned￨3 =￨3 owned￨3 ;￨3 <END_BUG>￨3 newattr￨3 .￨3 specified￨3 =￨3 specified￨3 ;￨3 return￨3 newattr￨3 ;￨3 }￨2 public￨2 String￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setValue￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getSpecified￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Element￨2 getElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Element￨2 getOwnerElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 normalize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSpecified￨2 (￨2 boolean￨3 arg￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestRecursiveRelationships￨1 extends￨1 SingleEMFTestCase￨1 {￨1 private￨2 int￨2 _l1Nodes￨2 =￨2 3￨2 ;￨2 private￨2 int￨2 _l2Nodes￨2 =￨2 3￨2 ;￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 setUp￨3 (￨3 Node￨3 .￨3 class￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testRecursiveNodes￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Version￨1 {￨1 private￨2 Version￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 id￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "4.5-SNAPSHOT-20080722-1051"￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SizeSelectorTest￨1 extends￨1 BaseSelectorTest￨1 {￨1 private￨2 Project￨2 project￨2 ;￨2 public￨2 SizeSelectorTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 BaseSelector￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testValidate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSelectionBehaviour￨2 (￨2 )￨2 {￨2 SizeSelector￨3 s￨3 ;￨3 String￨3 results￨3 ;￨3 SizeSelector￨3 .￨3 ByteUnits￨3 kilo￨3 =￨3 new￨3 SizeSelector￨3 .￨3 ByteUnits￨3 (￨3 )￨3 ;￨3 kilo￨3 .￨3 setValue￨3 (￨3 "K"￨3 )￨3 ;￨3 SizeSelector￨3 .￨3 ByteUnits￨3 kibi￨3 =￨3 new￨3 SizeSelector￨3 .￨3 ByteUnits￨3 (￨3 )￨3 ;￨3 kibi￨3 .￨3 setValue￨3 (￨3 "Ki"￨3 )￨3 ;￨3 SizeSelector￨3 .￨3 ByteUnits￨3 tibi￨3 =￨3 new￨3 SizeSelector￨3 .￨3 ByteUnits￨3 (￨3 )￨3 ;￨3 tibi￨3 .￨3 setValue￨3 (￨3 "Ti"￨3 )￨3 ;￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 less￨3 =￨3 new￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 (￨3 )￨3 ;￨3 less￨3 .￨3 setValue￨3 (￨3 "less"￨3 )￨3 ;￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 equal￨3 =￨3 new￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 (￨3 )￨3 ;￨3 equal￨3 .￨3 setValue￨3 (￨3 "equal"￨3 )￨3 ;￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 more￨3 =￨3 new￨3 SizeSelector￨3 .￨3 SizeComparisons￨3 (￨3 )￨3 ;￨3 more￨3 .￨3 setValue￨3 (￨3 "more"￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 makeBed￨4 (￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 10￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 less￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TFFFFFFFFFFT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 10￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 more￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TTTTTTTTTTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 32￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 equal￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 <START_BUG>￨4 assertEquals￨4 (￨4 "TTFFTFFFFFFT"￨4 ,￨4 results￨4 )￨4 ;￨4 <END_BUG>￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 7￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 more￨4 )￨4 ;￨4 s￨4 .￨4 setUnits￨4 (￨4 kilo￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TFTFFTTTTTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 7￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 more￨4 )￨4 ;￨4 s￨4 .￨4 setUnits￨4 (￨4 kibi￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TFTFFFTTFTTT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 s￨4 .￨4 setValue￨4 (￨4 99999￨4 )￨4 ;￨4 s￨4 .￨4 setWhen￨4 (￨4 more￨4 )￨4 ;￨4 s￨4 .￨4 setUnits￨4 (￨4 tibi￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TFFFFFFFFFFT"￨4 ,￨4 results￨4 )￨4 ;￨4 s￨4 =￨4 (￨4 (￨4 SizeSelector￨4 )￨4 (￨4 getInstance￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 Parameter￨4 param1￨4 =￨4 new￨4 Parameter￨4 (￨4 )￨4 ;￨4 Parameter￨4 param2￨4 =￨4 new￨4 Parameter￨4 (￨4 )￨4 ;￨4 Parameter￨4 param3￨4 =￨4 new￨4 Parameter￨4 (￨4 )￨4 ;￨4 param1￨4 .￨4 setName￨4 (￨4 "value"￨4 )￨4 ;￨4 param1￨4 .￨4 setValue￨4 (￨4 "20"￨4 )￨4 ;￨4 param2￨4 .￨4 setName￨4 (￨4 "units"￨4 )￨4 ;￨4 param2￨4 .￨4 setValue￨4 (￨4 "Ki"￨4 )￨4 ;￨4 param3￨4 .￨4 setName￨4 (￨4 "when"￨4 )￨4 ;￨4 param3￨4 .￨4 setValue￨4 (￨4 "more"￨4 )￨4 ;￨4 Parameter￨4 [￨4 ]￨4 params￨4 =￨4 new￨4 Parameter￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ;￨4 s￨4 .￨4 setParameters￨4 (￨4 params￨4 )￨4 ;￨4 results￨4 =￨4 selectionString￨4 (￨4 s￨4 )￨4 ;￨4 assertEquals￨4 (￨4 "TFFFFFFTFFTT"￨4 ,￨4 results￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 cleanupBed￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 JasperReportsUtilsTests￨1 extends￨1 TestCase￨1 {￨1 public￨2 void￨2 testRenderAsCsvWithDataSource￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsCsvWithCollection￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsCsvWithExporterParameters￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsHtmlWithDataSource￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsHtmlWithCollection￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsHtmlWithExporterParameters￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsPdfWithDataSource￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsPdfWithCollection￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsPdfWithExporterParameters￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsXlsWithDataSource￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsXlsWithCollection￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderAsXlsWithExporterParameters￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderWithWriter￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRenderWithOutputStream￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertCsvOutputCorrect￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertHtmlOutputCorrect￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertPdfOutputCorrect￨2 (￨2 byte￨2 [￨2 ]￨2 output￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertXlsOutputCorrect￨2 (￨2 byte￨2 [￨2 ]￨2 output￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 HSSFWorkbook￨3 workbook￨3 =￨3 new￨3 HSSFWorkbook￨3 (￨3 new￨3 ByteArrayInputStream￨3 (￨3 output￨3 )￨3 )￨3 ;￨3 HSSFSheet￨3 sheet￨3 =￨3 workbook￨3 .￨3 getSheetAt￨3 (￨3 0￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 "Sheet<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3 ,￨3 sheet￨3 )￨3 ;￨3 HSSFRow￨3 row￨3 =￨3 sheet￨3 .￨3 getRow￨3 (￨3 3￨3 )￨3 ;￨3 HSSFCell￨3 cell￨3 =￨3 row￨3 .￨3 getCell￨3 (￨3 (￨3 (￨3 short￨3 )￨3 (￨3 1￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 "Cell<seq2seq4repair_space>should<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨3 ,￨3 cell￨3 )￨3 ;￨3 <START_BUG>￨3 assertEquals￨3 (￨3 "Cell<seq2seq4repair_space>content<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>Dear<seq2seq4repair_space>Lord!"￨3 ,￨3 "Dear<seq2seq4repair_space>Lord!"￨3 ,￨3 cell￨3 .￨3 getRichStringCellValue￨3 (￨3 )￨3 .￨3 getString￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 JasperReport￨2 getReport￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 getParameters￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JRDataSource￨2 getDataSource￨2 (￨2 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 PersonBean￨2 >￨2 getData￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 SimpleProgressMonitor￨2 implements￨2 JRExportProgressMonitor￨2 {￨2 private￨3 boolean￨3 invoked￨3 =￨3 false￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 afterPageExport￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isInvoked￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 IIOPJndiBindingProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 @￨2 Override￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 final￨3 EEModuleDescription￨3 moduleDescription￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 EE_MODULE_DESCRIPTION￨3 )￨3 ;￨3 final￨3 Module￨3 module￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 MODULE￨3 )￨3 ;￨3 if￨3 (￨3 moduleDescription￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 JdkORBDeploymentMarker￨3 .￨3 isJacORBDeployment￨3 (￨3 deploymentUnit￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 ;￨3 }￨3 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 phaseContext￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 DeploymentTypeMarker￨4 .￨4 isType￨4 (￨4 WAR￨4 ,￨4 deploymentUnit￨4 )￨4 )￨4 ||￨4 (￨4 DeploymentTypeMarker￨4 .￨4 isType￨4 (￨4 APPLICATION_CLIENT￨4 ,￨4 deploymentUnit￨4 )￨4 )￨4 )￨3 {￨3 final￨4 ServiceName￨4 moduleContextServiceName￨4 =￨4 ContextNames￨4 .￨4 contextServiceNameOfModule￨4 (￨4 moduleDescription￨4 .￨4 getApplicationName￨4 (￨4 )￨4 ,￨4 moduleDescription￨4 .￨4 getModuleName￨4 (￨4 )￨4 )￨4 ;￨4 bindService￨4 (￨4 serviceTarget￨4 ,￨4 moduleContextServiceName￨4 ,￨4 module￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 ComponentDescription￨4 component￨4 :￨4 moduleDescription￨4 .￨4 getComponentDescriptions￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 component￨5 .￨5 getNamingMode￨5 (￨5 )￨5 )￨5 ==￨5 (￨5 ComponentNamingMode￨5 .￨5 CREATE￨5 )￨5 )￨4 {￨4 final￨5 ServiceName￨5 compContextServiceName￨5 =￨5 ContextNames￨5 .￨5 contextServiceNameOfComponent￨5 (￨5 moduleDescription￨5 .￨5 getApplicationName￨5 (￨5 )￨5 ,￨5 moduleDescription￨5 .￨5 getModuleName￨5 (￨5 )￨5 ,￨5 component￨5 .￨5 getComponentName￨5 (￨5 )￨5 )￨5 ;￨5 bindService￨5 (￨5 serviceTarget￨5 ,￨5 compContextServiceName￨5 ,￨5 module￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 void￨2 bindService￨2 (￨2 final￨3 ServiceTarget￨3 serviceTarget￨3 ,￨3 final￨3 ServiceName￨3 contextServiceName￨3 ,￨3 final￨3 Module￨3 module￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AspectDeclaration￨1 extends￨1 MemberTypeDeclaration￨1 {￨1 private￨2 Aspect￨2 aspectAttribute￨2 ;￨2 public￨2 PerClause￨2 perClause￨2 ;￨2 public￨2 ResolvedMember￨2 aspectOfMethod￨2 ;￨2 public￨2 ResolvedMember￨2 hasAspectMethod￨2 ;￨2 public￨2 boolean￨2 isPrivileged￨2 ;￨2 public￨2 EclipseObjectType￨2 typeX￨2 ;￨2 public￨2 EclipseWorld￨2 world￨2 ;￨2 public￨2 TypePattern￨2 dominatesPattern￨2 ;￨2 public￨2 AspectDeclaration￨2 (￨2 CompilationResult￨3 compilationResult￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAbstract￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 checkSpec￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 ClassFile￨3 enclosingClassFile￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 needClassInitMethod￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 generateAttributes￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerSupportMembers￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 static￨2 interface￨2 BodyGenerator￨2 (￨2 )￨2 {￨2 public￨3 void￨3 generate￨3 (￨3 CodeStream￨4 codeStream￨4 )￨3 {￨3 }￨3 }￨2 private￨2 void￨2 generateMethod￨2 (￨2 ClassFile￨3 classFile￨3 ,￨3 ResolvedMember￨3 member￨3 ,￨3 AspectDeclaration￨3 .￨3 BodyGenerator￨3 gen￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generateMethod￨2 (￨2 ClassFile￨3 classFile￨3 ,￨3 MethodBinding￨3 methodBinding￨3 ,￨3 AspectDeclaration￨3 .￨3 BodyGenerator￨3 gen￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerCflowAspectOfMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerCflowHasAspectMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerCflowPushMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerCflowAjcClinitMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 TypeBinding￨2 generatePerObjectInterface￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerObjectAspectOfMethod￨2 (￨2 ClassFile￨3 classFile￨3 ,￨3 final￨3 TypeBinding￨3 interfaceType￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerObjectHasAspectMethod￨2 (￨2 ClassFile￨3 classFile￨3 ,￨3 final￨3 TypeBinding￨3 interfaceType￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerObjectBindMethod￨2 (￨2 ClassFile￨3 classFile￨3 ,￨3 final￨3 TypeBinding￨3 interfaceType￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerSingletonAspectOfMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerSingletonHasAspectMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 void￨2 generatePerSingletonAjcClinitMethod￨2 (￨2 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 private￨2 Kind￨2 lookupPerClauseKind￨2 (￨2 ReferenceBinding￨3 binding￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 binding￨3 instanceof￨3 SourceTypeBinding￨3 )￨3 {￨3 <END_BUG>￨3 SourceTypeBinding￨3 sourceSc￨3 =￨3 (￨3 (￨3 SourceTypeBinding￨3 )￨3 (￨3 binding￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 sourceSc￨4 .￨4 scope￨4 .￨4 referenceContext￨4 )￨4 instanceof￨4 AspectDeclaration￨4 )￨3 {￨3 PerClause￨4 perClause￨4 =￨4 (￨4 (￨4 AspectDeclaration￨4 )￨4 (￨4 sourceSc￨4 .￨4 scope￨4 .￨4 referenceContext￨4 )￨4 )￨4 .￨4 perClause￨4 ;￨4 if￨4 (￨4 perClause￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 lookupPerClauseKind￨5 (￨5 binding￨5 .￨5 superclass￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 return￨5 perClause￨5 .￨5 getKind￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 else￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 buildPerClause￨2 (￨2 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 private￨2 PerClause￨2 resolvePerClause￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 buildInterTypeAndPerClause￨2 (￨2 ClassScope￨3 classScope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringBody￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringHeader￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 WebServlet￨1 (￨1 name￨1 =￨1 "CallEjbServlet"￨1 ,￨1 urlPatterns￨1 =￨1 {￨1 "/CallEjbServlet"￨1 }￨1 )￨1 public￨1 class￨1 CallEjbServlet￨1 extends￨1 HttpServlet￨1 {￨1 @￨2 EJB￨2 MyEjb￨2 ejb￨2 ;￨2 protected￨2 void￨2 doGet￨2 (￨2 HttpServletRequest￨2 req￨2 ,￨2 HttpServletResponse￨2 resp￨2 )￨2 throws￨2 IOException￨2 ,￨2 ServletException￨2 (￨2 )￨2 {￨2 Context￨3 ctx￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 Properties￨4 env￨4 =￨4 new￨4 Properties￨4 (￨4 )￨4 ;￨4 String￨4 address￨4 =￨4 System￨4 .￨4 getProperty￨4 (￨4 "node0"￨4 ,￨4 "localhost"￨4 )￨4 ;￨4 address￨4 =￨4 NetworkUtils￨4 .￨4 formatPossibleIpv6Address￨4 (￨4 address￨4 )￨4 ;￨4 <START_BUG>￨4 env￨4 .￨4 put￨4 (￨4 Context￨4 .￨4 PROVIDER_URL￨4 ,￨4 (￨4 (￨4 "http-remoting://"￨4 +￨4 address￨4 )￨4 +￨4 ":8080"￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 env￨4 .￨4 put￨4 (￨4 Context￨4 .￨4 INITIAL_CONTEXT_FACTORY￨4 ,￨4 "org.jboss.naming.remote.client.InitialContextFactory"￨4 )￨4 ;￨4 ctx￨4 =￨4 new￨4 InitialContext￨4 (￨4 env￨4 )￨4 ;￨4 MyObject￨4 obj￨4 =￨4 (￨4 (￨4 MyObject￨4 )￨4 (￨4 ctx￨4 .￨4 lookup￨4 (￨4 "loc/stub"￨4 )￨4 )￨4 )￨4 ;￨4 Writer￨4 writer￨4 =￨4 resp￨4 .￨4 getWriter￨4 (￨4 )￨4 ;￨4 writer￨4 .￨4 write￨4 (￨4 ejb￨4 .￨4 doIt￨4 (￨4 )￨4 )￨4 ;￨4 writer￨4 .￨4 write￨4 (￨4 obj￨4 .￨4 doIt￨4 (￨4 "Hello"￨4 )￨4 )￨4 ;￨4 writer￨4 .￨4 flush￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 NamingException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 RuntimeException￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 if￨4 (￨4 ctx￨5 !=￨5 null￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 ctx￨6 .￨6 close￨6 (￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 NamingException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 RuntimeException￨6 (￨6 e￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 EjbLookupInjectionSource￨1 extends￨1 InjectionSource￨1 {￨1 private￨2 final￨2 String￨2 lookup￨2 ;￨2 private￨2 final￨2 String￨2 targetTypeName￨2 ;￨2 private￨2 final￨2 Class￨2 <￨2 ?￨2 >￨2 targetType￨2 ;￨2 public￨2 EjbLookupInjectionSource￨2 (￨2 final￨3 String￨3 lookup￨3 ,￨3 final￨3 String￨3 targetType￨3 )￨2 {￨2 }￨2 public￨2 EjbLookupInjectionSource￨2 (￨2 final￨3 String￨3 lookup￨3 ,￨3 final￨3 Class￨3 <￨3 ?￨3 >￨3 targetType￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 getResourceValue￨2 (￨2 final￨2 ResolutionContext￨2 resolutionContext￨2 ,￨2 final￨2 ServiceBuilder￨2 <￨2 ?￨2 >￨2 serviceBuilder￨2 ,￨2 final￨2 DeploymentPhaseContext￨2 phaseContext￨2 ,￨2 final￨2 Injector￨2 <￨2 ManagedReferenceFactory￨2 >￨2 injector￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 Class￨3 <￨3 ?￨3 >￨3 type￨3 ;￨3 if￨3 (￨3 (￨4 targetType￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 type￨4 =￨4 targetType￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 targetTypeName￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 final￨4 DeploymentClassIndex￨4 index￨4 =￨4 phaseContext￨4 .￨4 getDeploymentUnit￨4 (￨4 )￨4 .￨4 getAttachment￨4 (￨4 CLASS_INDEX￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 type￨5 =￨5 index￨5 .￨5 classIndex￨5 (￨5 targetTypeName￨5 )￨5 .￨5 getModuleClass￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 ClassNotFoundException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 RuntimeException￨5 (￨5 (￨5 "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>EJB<seq2seq4repair_space>type<seq2seq4repair_space>"￨5 +￨5 (￨5 targetTypeName￨5 )￨5 )￨5 ,￨5 e￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 type￨4 =￨4 null￨4 ;￨4 }￨3 injector￨3 .￨3 inject￨3 (￨3 new￨3 ManagedReferenceFactory￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 ManagedReference￨4 getReference￨4 (￨4 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 final￨6 Object￨6 value￨6 =￨6 new￨6 InitialContext￨6 (￨6 )￨6 .￨6 lookup￨6 (￨6 lookup￨6 )￨6 ;￨6 return￨6 new￨6 ManagedReference￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 release￨7 (￨7 )￨7 {￨7 }￨7 @￨7 Override￨7 public￨7 Object￨7 getInstance￨7 (￨7 )￨7 {￨7 <START_BUG>￨8 if￨8 (￨8 type￨8 !=￨8 null￨8 )￨8 {￨8 <END_BUG>￨8 return￨8 PortableRemoteObject￨8 .￨8 narrow￨8 (￨8 value￨8 ,￨8 type￨8 )￨8 ;￨8 else￨8 {￨8 return￨9 value￨9 ;￨9 }￨8 }￨7 }￨6 ;￨6 }￨5 catch￨5 (￨5 NamingException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 RuntimeException￨6 (￨6 e￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 final￨3 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CopyfileTest￨1 extends￨1 TaskdefsTest￨1 {￨1 public￨2 CopyfileTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test1￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test2￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test3￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test4￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 expectLog￨3 (￨3 "test4"￨3 ,￨3 "Warning:<seq2seq4repair_space>src<seq2seq4repair_space>==<seq2seq4repair_space>dest"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 test5￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 DocCommentParser￨1 extends￨1 AbstractCommentParser￨1 {￨1 private￨2 Javadoc￨2 docComment￨2 ;￨2 private￨2 AST￨2 ast￨2 ;￨2 DocCommentParser￨2 (￨2 AST￨3 ast￨3 ,￨3 Scanner￨3 scanner￨3 ,￨3 boolean￨3 check￨3 )￨2 {￨2 }￨2 public￨2 Javadoc￨2 parse￨2 (￨2 int￨3 [￨3 ]￨3 positions￨3 )￨2 {￨2 }￨2 public￨2 Javadoc￨2 parse￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setComment￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 createArgumentReference￨2 (￨2 char￨2 [￨2 ]￨2 name￨2 ,￨2 int￨2 dim￨2 ,￨2 boolean￨2 isVarargs￨2 ,￨2 Object￨2 typeRef￨2 ,￨2 long￨2 [￨2 ]￨2 dimPositions￨2 ,￨2 long￨2 argNamePos￨2 )￨2 throws￨2 InvalidInputException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 MethodRefParameter￨4 argument￨4 =￨4 this￨4 .￨4 ast￨4 .￨4 newMethodRefParameter￨4 (￨4 )￨4 ;￨4 ASTNode￨4 node￨4 =￨4 (￨4 (￨4 ASTNode￨4 )￨4 (￨4 typeRef￨4 )￨4 )￨4 ;￨4 int￨4 argStart￨4 =￨4 node￨4 .￨4 getStartPosition￨4 (￨4 )￨4 ;￨4 int￨4 argEnd￨4 =￨4 (￨4 (￨4 node￨4 .￨4 getStartPosition￨4 (￨4 )￨4 )￨4 +￨4 (￨4 node￨4 .￨4 getLength￨4 (￨4 )￨4 )￨4 )￨4 -￨4 1￨4 ;￨4 if￨4 (￨4 dim￨5 >￨5 0￨5 )￨4 {￨4 argEnd￨5 =￨5 (￨5 (￨5 int￨5 )￨5 (￨5 dimPositions￨5 [￨5 (￨5 dim￨5 -￨5 1￨5 )￨5 ]￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 argNamePos￨5 >=￨5 0￨5 )￨4 {￨4 argEnd￨5 =￨5 (￨5 (￨5 int￨5 )￨5 (￨5 argNamePos￨5 )￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 name￨5 .￨5 length￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 SimpleName￨5 argName￨5 =￨5 this￨5 .￨5 ast￨5 .￨5 newSimpleName￨5 (￨5 new￨5 String￨5 (￨5 name￨5 )￨5 )￨5 ;￨5 argument￨5 .￨5 setName￨5 (￨5 argName￨5 )￨5 ;￨5 int￨5 argNameStart￨5 =￨5 (￨5 (￨5 int￨5 )￨5 (￨5 argNamePos￨5 >￨5 >￨5 >￨5 32￨5 )￨5 )￨5 ;￨5 argName￨5 .￨5 setSourceRange￨5 (￨5 argNameStart￨5 ,￨5 (￨5 (￨5 argEnd￨5 -￨5 argNameStart￨5 )￨5 +￨5 1￨5 )￨5 )￨5 ;￨5 }￨4 Type￨4 argType￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 node￨5 .￨5 getNodeType￨5 (￨5 )￨5 )￨5 ==￨5 (￨5 ASTNode￨5 .￨5 PRIMITIVE_TYPE￨5 )￨5 )￨4 {￨4 argType￨5 =￨5 (￨5 (￨5 PrimitiveType￨5 )￨5 (￨5 node￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 Name￨5 argTypeName￨5 =￨5 (￨5 (￨5 Name￨5 )￨5 (￨5 node￨5 )￨5 )￨5 ;￨5 argType￨5 =￨5 this￨5 .￨5 ast￨5 .￨5 newSimpleType￨5 (￨5 argTypeName￨5 )￨5 ;￨5 argType￨5 .￨5 setSourceRange￨5 (￨5 argStart￨5 ,￨5 node￨5 .￨5 getLength￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 if￨4 (￨4 dim￨4 >￨4 0￨4 )￨4 {￨4 <END_BUG>￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 dim￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 argType￨5 =￨5 this￨5 .￨5 ast￨5 .￨5 newArrayType￨5 (￨5 argType￨5 )￨5 ;￨5 argType￨5 .￨5 setSourceRange￨5 (￨5 argStart￨5 ,￨5 (￨5 (￨5 (￨5 (￨5 int￨5 )￨5 (￨5 dimPositions￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 -￨5 argStart￨5 )￨5 +￨5 1￨5 )￨5 )￨5 ;￨5 }￨4 }￨4 argument￨4 .￨4 setType￨4 (￨4 argType￨4 )￨4 ;￨4 argument￨4 .￨4 setSourceRange￨4 (￨4 argStart￨4 ,￨4 (￨4 (￨4 argEnd￨4 -￨4 argStart￨4 )￨4 +￨4 1￨4 )￨4 )￨4 ;￨4 return￨4 argument￨4 ;￨4 }￨3 catch￨3 (￨3 ClassCastException￨4 ex￨4 )￨3 {￨3 throw￨4 new￨4 InvalidInputException￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 Object￨2 createFieldReference￨2 (￨2 Object￨2 receiver￨2 )￨2 throws￨2 InvalidInputException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 createMethodReference￨2 (￨2 Object￨2 receiver￨2 ,￨2 List￨2 arguments￨2 )￨2 throws￨2 InvalidInputException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 createTag￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 createTypeReference￨2 (￨2 int￨3 primitiveToken￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 parseReturn￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 parseTag￨2 (￨2 int￨2 previousPosition￨2 )￨2 throws￨2 InvalidInputException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 pushParamName￨2 (￨2 boolean￨3 isTypeParam￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 pushSeeRef￨2 (￨2 Object￨3 statement￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 pushText￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 refreshInlineTagPosition￨2 (￨2 int￨3 previousPosition￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 pushThrowName￨2 (￨2 Object￨3 typeRef￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 updateDocComment￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 EditBook￨1 extends￨1 AuthenticatedHtmlPage￨1 {￨1 static￨2 final￨2 Book￨2 otherBook￨2 =￨2 new￨2 Book￨2 (￨2 "Frisbee<seq2seq4repair_space>Techniques"￨2 ,￨2 "Marty<seq2seq4repair_space>van<seq2seq4repair_space>Hoff"￨2 ,￨2 Book￨2 .￨2 FICTION￨2 )￨2 ;￨2 public￨2 EditBook￨2 (￨2 final￨3 Book￨3 book￨3 )￨2 {￨2 }￨2 public￨2 static￨2 PageLink￨2 link￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 long￨3 id￨3 )￨2 {￨2 return￨3 new￨3 PageLink￨3 (￨3 name￨3 ,￨3 new￨3 IPageLink￨3 (￨3 )￨3 {￨3 public￨4 Page￨4 getPage￨4 (￨4 )￨4 {￨4 return￨5 new￨5 EditBook￨5 (￨5 Book￨5 .￨5 get￨5 (￨5 id￨5 )￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 public￨4 Class￨4 getIdentity￨4 (￨4 )￨4 {￨4 <END_BUG>￨4 return￨4 EditBook￨4 .￨4 class￨4 ;￨4 }￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 final￨2 class￨2 EditBookForm￨2 extends￨2 Form￨2 {￨2 private￨3 Book￨3 book￨3 ;￨3 public￨3 EditBookForm￨3 (￨3 final￨4 String￨4 componentName￨4 ,￨4 final￨4 Book￨4 book￨4 ,￨4 final￨4 FeedbackPanel￨4 feedback￨4 )￨3 {￨3 }￨3 public￨3 final￨3 void￨3 handleSubmit￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 MarshallingHttpMessageConverterTests￨1 {￨1 private￨2 MarshallingHttpMessageConverter￨2 converter￨2 ;￨2 private￨2 Marshaller￨2 marshaller￨2 ;￨2 private￨2 Unmarshaller￨2 unmarshaller￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 read￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 write￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 String￨3 body￨3 =￨3 "<root>Hello<seq2seq4repair_space>World</root>"￨3 ;￨3 MockHttpOutputMessage￨3 outputMessage￨3 =￨3 new￨3 MockHttpOutputMessage￨3 (￨3 )￨3 ;￨3 marshaller￨3 .￨3 marshal￨3 (￨3 eq￨3 (￨3 body￨3 )￨3 ,￨3 isA￨3 (￨3 StreamResult￨3 .￨3 class￨3 )￨3 )￨3 ;￨3 replay￨3 (￨3 marshaller￨3 ,￨3 unmarshaller￨3 )￨3 ;￨3 <START_BUG>￨3 converter￨3 .￨3 write￨3 (￨3 body￨3 ,￨3 outputMessage￨3 )￨3 ;￨3 <END_BUG>￨3 assertEquals￨3 (￨3 "Invalid<seq2seq4repair_space>content-type"￨3 ,￨3 new￨3 MediaType￨3 (￨3 "application"￨3 ,￨3 "xml"￨3 )￨3 ,￨3 outputMessage￨3 .￨3 getHeaders￨3 (￨3 )￨3 .￨3 getContentType￨3 (￨3 )￨3 )￨3 ;￨3 verify￨3 (￨3 marshaller￨3 ,￨3 unmarshaller￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 RemoteDomainControllerTestCase￨1 {￨1 private￨2 ManagementCommunicationService￨2 communicationService￨2 ;￨2 private￨2 DomainControllerOperationHandler￨2 operationHandler￨2 ;￨2 private￨2 RemoteDomainControllerConnection￨2 domainControllerConnection￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 setup￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 ScheduledExecutorService￨3 executorService￨3 =￨3 Executors￨3 .￨3 newScheduledThreadPool￨3 (￨3 10￨3 )￨3 ;￨3 communicationService￨3 =￨3 new￨3 ManagementCommunicationService￨3 (￨3 )￨3 ;￨3 communicationService￨3 .￨3 getThreadFactoryInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 Executors￨3 .￨3 defaultThreadFactory￨3 (￨3 )￨3 )￨3 ;￨3 communicationService￨3 .￨3 getExecutorServiceInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 executorService￨3 )￨3 ;￨3 <START_BUG>￨3 final￨3 NetworkInterfaceService￨3 networkInterfaceService￨3 =￨3 new￨3 NetworkInterfaceService￨3 (￨3 "test"￨3 ,￨3 false￨3 ,￨3 false￨3 ,￨3 true￨3 ,￨3 null￨3 )￨3 ;￨3 <END_BUG>￨3 networkInterfaceService￨3 .￨3 start￨3 (￨3 null￨3 )￨3 ;￨3 communicationService￨3 .￨3 getInterfaceInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 networkInterfaceService￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 ;￨3 communicationService￨3 .￨3 getPortInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 12345￨3 )￨3 ;￨3 operationHandler￨3 =￨3 new￨3 DomainControllerOperationHandler￨3 (￨3 )￨3 ;￨3 operationHandler￨3 .￨3 getThreadFactoryInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 Executors￨3 .￨3 defaultThreadFactory￨3 (￨3 )￨3 )￨3 ;￨3 operationHandler￨3 .￨3 getExecutorServiceInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 executorService￨3 )￨3 ;￨3 operationHandler￨3 .￨3 getLocalFileRepositoryInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 manager￨3 .￨3 LocalFileRepository￨3 (￨3 new￨3 ServerManagerEnvironment￨3 (￨3 System￨3 .￨3 getProperties￨3 (￨3 )￨3 ,￨3 false￨3 ,￨3 System￨3 .￨3 in￨3 ,￨3 System￨3 .￨3 out￨3 ,￨3 System￨3 .￨3 err￨3 ,￨3 "test"￨3 ,￨3 InetAddress￨3 .￨3 getLocalHost￨3 (￨3 )￨3 ,￨3 3223￨3 ,￨3 InetAddress￨3 .￨3 getLocalHost￨3 (￨3 )￨3 ,￨3 3223￨3 ,￨3 "java"￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 DomainController￨3 domainController￨3 =￨3 new￨3 DomainController￨3 (￨3 )￨3 ;￨3 domainController￨3 .￨3 getDomainConfigDirInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 new￨3 File￨3 (￨3 getClass￨3 (￨3 )￨3 .￨3 getResource￨3 (￨3 "/test/configuration"￨3 )￨3 .￨3 toURI￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 File￨3 tmpDir￨3 =￨3 new￨3 File￨3 (￨3 System￨3 .￨3 getProperty￨3 (￨3 "java.io.tmpdir"￨3 )￨3 )￨3 ;￨3 File￨3 deploymentDir￨3 =￨3 new￨3 File￨3 (￨3 tmpDir￨3 ,￨3 (￨3 "domain-deployments-"￨3 +￨3 (￨3 (￨3 int￨3 )￨3 (￨3 Math￨3 .￨3 random￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 deploymentDir￨3 .￨3 deleteOnExit￨3 (￨3 )￨3 ;￨3 deploymentDir￨3 .￨3 mkdirs￨3 (￨3 )￨3 ;￨3 domainController￨3 .￨3 getDomainDeploymentsDirInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 deploymentDir￨3 )￨3 ;￨3 final￨3 XMLMapper￨3 mapper￨3 =￨3 Factory￨3 .￨3 create￨3 (￨3 )￨3 ;￨3 StandardElementReaderRegistrar￨3 .￨3 Factory￨3 .￨3 getRegistrar￨3 (￨3 )￨3 .￨3 registerStandardDomainReaders￨3 (￨3 mapper￨3 )￨3 ;￨3 domainController￨3 .￨3 getXmlMapperInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 mapper￨3 )￨3 ;￨3 domainController￨3 .￨3 getScheduledExecutorServiceInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 executorService￨3 )￨3 ;￨3 domainController￨3 .￨3 start￨3 (￨3 null￨3 )￨3 ;￨3 operationHandler￨3 .￨3 getDomainControllerInjector￨3 (￨3 )￨3 .￨3 inject￨3 (￨3 domainController￨3 )￨3 ;￨3 operationHandler￨3 .￨3 start￨3 (￨3 null￨3 )￨3 ;￨3 communicationService￨3 .￨3 addHandler￨3 (￨3 operationHandler￨3 )￨3 ;￨3 communicationService￨3 .￨3 start￨3 (￨3 null￨3 )￨3 ;￨3 domainControllerConnection￨3 =￨3 new￨3 RemoteDomainControllerConnection￨3 (￨3 "sm"￨3 ,￨3 InetAddress￨3 .￨3 getLocalHost￨3 (￨3 )￨3 ,￨3 12345￨3 ,￨3 InetAddress￨3 .￨3 getLocalHost￨3 (￨3 )￨3 ,￨3 11223￨3 ,￨3 null￨3 ,￨3 1000￨3 ,￨3 Executors￨3 .￨3 newScheduledThreadPool￨3 (￨3 2￨3 )￨3 ,￨3 Executors￨3 .￨3 defaultThreadFactory￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testRegister￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ValidatorImpl￨1 extends￨1 AbstractValidator￨1 {￨1 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 ValidatorImpl￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 ValidatorFactory￨2 _validatorFactory￨2 =￨2 null￨2 ;￨2 private￨2 Validator￨2 _validator￨2 =￨2 null￨2 ;￨2 private￨2 ValidationMode￨2 _mode￨2 =￨2 ValidationMode￨2 .￨2 AUTO￨2 ;￨2 private￨2 OpenJPAConfiguration￨2 _conf￨2 =￨2 null￨2 ;￨2 private￨2 Map￨2 <￨2 Integer￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 >￨2 _validationGroups￨2 =￨2 new￨2 HashMap￨2 <￨2 Integer￨2 ,￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 HashMap￨2 <￨2 String￨2 ,￨2 Integer￨2 >￨2 _vgMapping￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 Integer￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VG_PRE_PERSIST￨2 =￨2 "javax.persistence.validation.group.pre-persist"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VG_PRE_REMOVE￨2 =￨2 "javax.persistence.validation.group.pre-remove"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 VG_PRE_UPDATE￨2 =￨2 "javax.persistence.validation.group.pre-update"￨2 ;￨2 public￨2 ValidatorImpl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ValidatorImpl￨2 (￨2 Configuration￨3 conf￨3 )￨2 {￨2 }￨2 public￨2 ValidatorImpl￨2 (￨2 ValidatorFactory￨3 validatorFactory￨3 ,￨3 ValidationMode￨3 mode￨3 )￨2 {￨2 }￨2 private￨2 void￨2 initialize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addValidationGroup￨2 (￨2 String￨3 validationGroupName￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 ...￨3 vgs￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addValidationGroup￨2 (￨2 Integer￨3 event￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 ...￨3 validationGroup￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addValidationGroup￨2 (￨2 String￨3 validationGroupName￨3 ,￨3 String￨3 group￨3 )￨2 {￨2 }￨2 private￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 getValidationGroup￨2 (￨2 String￨3 vgName￨3 ,￨3 String￨3 group￨3 )￨2 {￨2 }￨2 public￨2 Class￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 getValidationGroup￨2 (￨2 Integer￨3 event￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isValidating￨2 (￨2 Integer￨3 event￨3 )￨2 {￨2 }￨2 public￨2 BeanDescriptor￨2 getConstraintsForClass￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 cls￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 <￨2 T￨2 >￨2 ValidationException￨2 validate￨2 (￨2 T￨3 arg0￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 <￨2 T￨2 >￨2 ValidationException￨2 validateProperty￨2 (￨2 T￨3 arg0￨3 ,￨3 String￨3 property￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 <￨2 T￨2 >￨2 ValidationException￨2 validateValue￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 arg0￨3 ,￨3 String￨3 arg1￨3 ,￨3 Object￨3 arg2￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 <￨2 T￨2 >￨2 boolean￨2 validating￨2 (￨2 T￨3 arg0￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 private￨2 Integer￨2 findEvent￨2 (￨2 String￨3 validationProperty￨3 )￨2 {￨2 }￨2 private￨2 ValidatorFactory￨2 getDefaultValidatorFactory￨2 (￨2 )￨2 {￨2 ValidatorFactory￨3 factory￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 factory￨4 =￨4 Validation￨4 .￨4 buildDefaultValidatorFactory￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 javax￨4 .￨4 validation￨4 e￨4 )￨3 {￨3 }￨3 return￨3 factory￨3 ;￨3 }￨2 private￨2 void￨2 addDefaultValidationGroups￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TreeColumn￨1 extends￨1 Item￨1 {￨1 int￨2 labelHandle￨2 ;￨2 int￨2 imageHandle￨2 ;￨2 int￨2 buttonHandle￨2 ;￨2 Tree￨2 parent￨2 ;￨2 int￨2 modelIndex￨2 ;￨2 int￨2 lastButton￨2 ;￨2 int￨2 lastTime￨2 ;￨2 int￨2 lastX￨2 ;￨2 int￨2 lastWidth￨2 ;￨2 boolean￨2 customDraw￨2 ;￨2 boolean￨2 useFixedWidth￨2 ;￨2 String￨2 toolTipText￨2 ;￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 TreeColumn￨2 (￨2 Tree￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createWidget￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getAlignment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMoveable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Tree￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getResizable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getToolTipText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWidth￨2 (￨2 )￨2 {￨2 }￨2 int￨2 gtk_clicked￨2 (￨2 int￨3 widget￨3 )￨2 {￨2 }￨2 int￨2 gtk_mnemonic_activate￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 arg1￨3 )￨2 {￨2 }￨2 int￨2 gtk_size_allocate￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 allocation￨3 )￨2 {￨2 }￨2 void￨2 hookEvents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 pack￨2 (￨2 )￨2 {￨2 checkWidget￨3 (￨3 )￨3 ;￨3 int￨3 width￨3 =￨3 0￨3 ;￨3 if￨3 (￨3 (￨4 buttonHandle￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 GtkRequisition￨4 requisition￨4 =￨4 new￨4 GtkRequisition￨4 (￨4 )￨4 ;￨4 OS￨4 .￨4 gtk_widget_size_request￨4 (￨4 buttonHandle￨4 ,￨4 requisition￨4 )￨4 ;￨4 width￨4 =￨4 requisition￨4 .￨4 width￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 (￨4 parent￨4 .￨4 style￨4 )￨4 &￨4 (￨4 SWT￨4 .￨4 VIRTUAL￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 }￨3 else￨3 {￨3 int￨4 iter￨4 =￨4 OS￨4 .￨4 g_malloc￨4 (￨4 OS￨4 .￨4 GtkTreeIter_sizeof￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 OS￨5 .￨5 gtk_tree_model_get_iter_first￨5 (￨5 parent￨5 .￨5 modelHandle￨5 ,￨5 iter￨5 )￨5 )￨4 {￨4 do￨5 {￨5 <START_BUG>￨6 width￨6 =￨6 Math￨6 .￨6 max￨6 (￨6 width￨6 ,￨6 parent￨6 .￨6 calculateWidth￨6 (￨6 handle￨6 ,￨6 iter￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 while￨5 (￨5 OS￨6 .￨6 gtk_tree_model_iter_next￨6 (￨6 parent￨6 .￨6 modelHandle￨6 ,￨6 iter￨6 )￨6 )￨5 ;￨5 }￨4 OS￨4 .￨4 g_free￨4 (￨4 iter￨4 )￨4 ;￨4 }￨3 setWidth￨3 (￨3 width￨3 )￨3 ;￨3 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeControlListener￨2 (￨2 ControlListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAlignment￨2 (￨2 int￨3 alignment￨3 )￨2 {￨2 }￨2 void￨2 setFontDescription￨2 (￨2 int￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMoveable￨2 (￨2 boolean￨3 moveable￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setResizable￨2 (￨2 boolean￨3 resizable￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setToolTipText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 setToolTipText￨2 (￨2 Shell￨3 shell￨3 ,￨3 String￨3 newString￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setWidth￨2 (￨2 int￨3 width￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StatGraphVisualizer￨1 extends￨1 AbstractVisualizer￨1 implements￨1 ActionListener￨1 ,￨1 Clearable￨1 {￨1 private￨2 static￨2 transient￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 COLUMNS￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 final￨2 String￨2 [￨2 ]￨2 GRAPH_COLUMNS￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 final￨2 String￨2 TOTAL_ROW_LABEL￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_report_total_label"￨2 )￨2 ;￨2 protected￨2 JTable￨2 myJTable￨2 ;￨2 protected￨2 JScrollPane￨2 myScrollPane￨2 ;￨2 private￨2 transient￨2 ObjectTableModel￨2 model￨2 ;￨2 Map￨2 tableRows￨2 =￨2 Collections￨2 .￨2 synchronizedMap￨2 (￨2 new￨2 HashMap￨2 (￨2 )￨2 )￨2 ;￨2 protected￨2 AxisGraph￨2 graphPanel￨2 =￨2 null￨2 ;￨2 protected￨2 VerticalPanel￨2 graph￨2 =￨2 null￨2 ;￨2 protected￨2 JScrollPane￨2 graphScroll￨2 =￨2 null￨2 ;￨2 protected￨2 JSplitPane￨2 spane￨2 =￨2 null￨2 ;￨2 protected￨2 JLabeledChoice￨2 columns￨2 =￨2 new￨2 JLabeledChoice￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_column"￨2 )￨2 ,￨2 GRAPH_COLUMNS￨2 )￨2 ;￨2 protected￨2 double￨2 [￨2 ]￨2 [￨2 ]￨2 data￨2 =￨2 null￨2 ;￨2 protected￨2 JButton￨2 displayButton￨2 =￨2 new￨2 JButton￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_display"￨2 )￨2 )￨2 ;￨2 protected￨2 JButton￨2 saveGraph￨2 =￨2 new￨2 JButton￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_save"￨2 )￨2 )￨2 ;￨2 protected￨2 JButton￨2 saveTable￨2 =￨2 new￨2 JButton￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_save_table"￨2 )￨2 )￨2 ;￨2 JLabeledTextField￨2 graphTitle￨2 =￨2 new￨2 JLabeledTextField￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_user_title"￨2 )￨2 )￨2 ;￨2 JLabeledTextField￨2 graphWidth￨2 =￨2 new￨2 JLabeledTextField￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_width"￨2 )￨2 )￨2 ;￨2 JLabeledTextField￨2 graphHeight￨2 =￨2 new￨2 JLabeledTextField￨2 (￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_height"￨2 )￨2 )￨2 ;￨2 protected￨2 String￨2 yAxisLabel￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_response_time"￨2 )￨2 ;￨2 protected￨2 String￨2 yAxisTitle￨2 =￨2 JMeterUtils￨2 .￨2 getResString￨2 (￨2 "aggregate_graph_ms"￨2 )￨2 ;￨2 protected￨2 boolean￨2 saveGraphToFile￨2 =￨2 false￨2 ;￨2 protected￨2 int￨2 defaultWidth￨2 =￨2 400￨2 ;￨2 protected￨2 int￨2 defaultHeight￨2 =￨2 300￨2 ;￨2 public￨2 StatGraphVisualizer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getLabelResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 SampleResult￨3 res￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 makeGraph￨2 (￨2 )￨2 {￨2 String￨3 wstr￨3 =￨3 graphWidth￨3 .￨3 getText￨3 (￨3 )￨3 ;￨3 String￨3 hstr￨3 =￨3 graphHeight￨3 .￨3 getText￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 wstr￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨3 {￨3 wstr￨4 =￨4 "450"￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 hstr￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨3 {￨3 hstr￨4 =￨4 "250"￨4 ;￨4 }￨3 int￨3 width￨3 =￨3 Integer￨3 .￨3 parseInt￨3 (￨3 wstr￨3 )￨3 ;￨3 int￨3 height￨3 =￨3 Integer￨3 .￨3 parseInt￨3 (￨3 hstr￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setData￨3 (￨3 this￨3 .￨3 getData￨3 (￨3 )￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setHeight￨3 (￨3 height￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setWidth￨3 (￨3 width￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setTitle￨3 (￨3 graphTitle￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setXAxisLabels￨3 (￨3 getAxisLabels￨3 (￨3 )￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setXAxisTitle￨3 (￨3 columns￨3 .￨3 getText￨3 (￨3 )￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setYAxisLabels￨3 (￨3 this￨3 .￨3 yAxisLabel￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setYAxisTitle￨3 (￨3 this￨3 .￨3 yAxisTitle￨3 )￨3 ;￨3 graphPanel￨3 .￨3 setPreferredSize￨3 (￨3 new￨3 Dimension￨3 (￨3 width￨3 ,￨3 height￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 graph￨3 .￨3 resize￨3 (￨3 new￨3 Dimension￨3 (￨3 graph￨3 .￨3 getWidth￨3 (￨3 )￨3 ,￨3 (￨3 height￨3 +￨3 120￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 spane￨3 .￨3 repaint￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 double￨2 [￨2 ]￨2 [￨2 ]￨2 getData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getAxisLabels￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getAllTableData￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 event￨3 )￨2 {￨2 }￨2 public￨2 JComponent￨2 getPrintableComponent￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 Listener￨1 public￨1 class￨1 CacheRegistry￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 implements￨1 Registry￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 {￨1 private￨2 final￨2 List￨2 <￨2 Registry￨2 .￨2 Listener￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 >￨2 listeners￨2 =￨2 new￨2 CopyOnWriteArrayList￨2 <￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 RegistryEntryProvider￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 provider￨2 ;￨2 private￨2 final￨2 Cache￨2 <￨2 Node￨2 ,￨2 Map￨2 .￨2 Entry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 >￨2 cache￨2 ;￨2 private￨2 final￨2 CacheInvoker￨2 invoker￨2 ;￨2 private￨2 final￨2 Group￨2 group￨2 ;￨2 private￨2 final￨2 NodeFactory￨2 <￨2 Address￨2 >￨2 factory￨2 ;￨2 public￨2 CacheRegistry￨2 (￨2 CacheRegistryFactoryConfiguration￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 config￨3 ,￨3 RegistryEntryProvider￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 provider￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 addListener￨2 (￨2 Registry￨3 .￨3 Listener￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 listener￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 removeListener￨2 (￨2 Registry￨3 .￨3 Listener￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 listener￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Group￨2 getGroup￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Map￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 getEntries￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Map￨2 .￨2 Entry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 getEntry￨2 (￨2 Node￨3 node￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Map￨2 .￨2 Entry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 getLocalEntry￨2 (￨2 )￨2 {￨2 }￨2 @￨2 TopologyChanged￨2 public￨2 void￨2 topologyChanged￨2 (￨2 TopologyChangedEvent￨3 <￨3 Address￨3 ,￨3 Node￨3 >￨3 event￨3 )￨2 {￨2 if￨3 (￨3 event￨4 .￨4 isPre￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 List￨3 <￨3 Address￨3 >￨3 newAddresses￨3 =￨3 event￨3 .￨3 getConsistentHashAtEnd￨3 (￨3 )￨3 .￨3 getMembers￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 newAddresses￨4 .￨4 get￨4 (￨4 0￨4 )￨4 .￨4 equals￨4 (￨4 event￨4 .￨4 getCache￨4 (￨4 )￨4 .￨4 getCacheManager￨4 (￨4 )￨4 .￨4 getAddress￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 Set￨3 <￨3 Address￨3 >￨3 addresses￨3 =￨3 new￨3 java￨3 .￨3 util￨3 .￨3 HashSet￨3 (￨3 event￨3 .￨3 getConsistentHashAtStart￨3 (￨3 )￨3 .￨3 getMembers￨3 (￨3 )￨3 )￨3 ;￨3 addresses￨3 .￨3 removeAll￨3 (￨3 newAddresses￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 Node￨3 >￨3 nodes￨3 =￨3 new￨3 java￨3 .￨3 util￨3 .￨3 ArrayList￨3 (￨3 addresses￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 Address￨4 address￨4 :￨4 addresses￨4 )￨3 {￨3 nodes￨4 .￨4 add￨4 (￨4 this￨4 .￨4 factory￨4 .￨4 createNode￨4 (￨4 address￨4 )￨4 )￨4 ;￨4 }￨3 CacheRegistry￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 .￨3 Operation￨3 <￨3 Map￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 >￨3 operation￨3 =￨3 new￨3 Operation￨3 <￨3 Map￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 >￨3 (￨3 )￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 Map￨4 <￨4 K￨4 ,￨4 V￨4 >￨4 invoke￨4 (￨4 Cache￨5 <￨5 Node￨5 ,￨5 Map￨5 .￨5 Entry￨5 <￨5 K￨5 ,￨5 V￨5 >￨5 >￨5 cache￨5 )￨4 {￨4 Map￨5 <￨5 K￨5 ,￨5 V￨5 >￨5 removed￨5 =￨5 new￨5 HashMap￨5 <￨5 >￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 Node￨6 node￨6 :￨6 nodes￨6 )￨5 {￨5 Map￨6 .￨6 Entry￨6 <￨6 K￨6 ,￨6 V￨6 >￨6 old￨6 =￨6 cache￨6 .￨6 remove￨6 (￨6 node￨6 )￨6 ;￨6 if￨6 (￨6 old￨7 !=￨7 null￨7 )￨6 {￨6 removed￨7 .￨7 put￨7 (￨7 old￨7 .￨7 getKey￨7 (￨7 )￨7 ,￨7 old￨7 .￨7 getValue￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 return￨5 removed￨5 ;￨5 }￨4 }￨3 ;￨3 <START_BUG>￨3 Map￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 removed￨3 =￨3 this￨3 .￨3 invoker￨3 .￨3 invoke￨3 (￨3 this￨3 .￨3 cache￨3 ,￨3 operation￨3 ,￨3 FORCE_SYNCHRONOUS￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 !￨4 (￨4 removed￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 for￨4 (￨4 Listener￨5 <￨5 K￨5 ,￨5 V￨5 >￨5 listener￨5 :￨5 this￨5 .￨5 listeners￨5 )￨4 {￨4 listener￨5 .￨5 removedEntries￨5 (￨5 removed￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 @￨2 CacheEntryModified￨2 public￨2 void￨2 modified￨2 (￨2 CacheEntryModifiedEvent￨3 <￨3 Node￨3 ,￨3 Map￨3 .￨3 Entry￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 >￨3 event￨3 )￨2 {￨2 }￨2 @￨2 CacheEntryRemoved￨2 public￨2 void￨2 removed￨2 (￨2 CacheEntryRemovedEvent￨3 <￨3 Node￨3 ,￨3 Map￨3 .￨3 Entry￨3 <￨3 K￨3 ,￨3 V￨3 >￨3 >￨3 event￨3 )￨2 {￨2 }￨2 abstract￨2 class￨2 Operation￨2 <￨2 R￨2 >￨2 implements￨2 CacheInvoker￨2 .￨2 Operation￨2 <￨2 Node￨2 ,￨2 Map￨2 .￨2 Entry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 ,￨2 R￨2 >￨2 {￨2 }￨2 }￨1
public￨1 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 RELEASE_VERSION￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 ,￨2 false￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 RELEASE_CODENAME￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 RELEASE_CODENAME￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 ,￨2 false￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 PRODUCT_NAME￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 PRODUCT_NAME￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 ,￨2 true￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 PRODUCT_VERSION￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 PRODUCT_VERSION￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 ,￨2 true￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 MANAGEMENT_MAJOR_VERSION￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 MANAGEMENT_MAJOR_VERSION￨2 ,￨2 ModelType￨2 .￨2 INT￨2 ,￨2 false￨2 )￨2 .￨2 setValidator￨2 (￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 operations￨2 .￨2 validation￨2 .￨2 IntRangeValidator￨2 (￨2 1￨2 )￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 MANAGEMENT_MINOR_VERSION￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 MANAGEMENT_MINOR_VERSION￨2 ,￨2 ModelType￨2 .￨2 INT￨2 ,￨2 false￨2 )￨2 .￨2 setValidator￨2 (￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 operations￨2 .￨2 validation￨2 .￨2 IntRangeValidator￨2 (￨2 0￨2 )￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 MANAGEMENT_MICRO_VERSION￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 MANAGEMENT_MICRO_VERSION￨2 ,￨2 ModelType￨2 .￨2 INT￨2 ,￨2 false￨2 )￨2 .￨2 setValidator￨2 (￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 operations￨2 .￨2 validation￨2 .￨2 IntRangeValidator￨2 (￨2 0￨2 )￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 PROCESS_TYPE￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ServerDescriptionConstants￨2 .￨2 PROCESS_TYPE￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 LAUNCH_TYPE￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ServerDescriptionConstants￨2 .￨2 LAUNCH_TYPE￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 )￨2 .￨2 setValidator￨2 (￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 operations￨2 .￨2 validation￨2 .￨2 EnumValidator￨2 <￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 server￨2 .￨2 ServerEnvironment￨2 .￨2 LaunchType￨2 >￨2 (￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 server￨2 .￨2 ServerEnvironment￨2 .￨2 LaunchType￨2 .￨2 class￨2 ,￨2 false￨2 ,￨2 false￨2 )￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 LOCAL_HOST_NAME￨2 =￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 .￨2 create￨2 (￨2 ModelDescriptionConstants￨2 .￨2 LOCAL_HOST_NAME￨2 ,￨2 ModelType￨2 .￨2 STRING￨2 ,￨2 true￨2 )￨2 .￨2 setValidator￨2 (￨2 DomainRootDefinition￨2 .￨2 NOT_NULL_STRING_LENGTH_ONE_VALIDATOR￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 DomainController￨2 domainController￨2 ;￨2 private￨2 final￨2 LocalHostControllerInfo￨2 hostControllerInfo￨2 ;￨2 private￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ;￨2 private￨2 final￨2 ExtensibleConfigurationPersister￨2 configurationPersister￨2 ;￨2 private￨2 final￨2 ContentRepository￨2 contentRepo￨2 ;￨2 private￨2 final￨2 HostFileRepository￨2 fileRepository￨2 ;￨2 private￨2 final￨2 boolean￨2 isMaster￨2 ;￨2 private￨2 final￨2 ExtensionRegistry￨2 extensionRegistry￨2 ;￨2 private￨2 final￨2 IgnoredDomainResourceRegistry￨2 ignoredDomainResourceRegistry￨2 ;￨2 private￨2 final￨2 PathManagerService￨2 pathManager￨2 ;￨2 private￨2 final￨2 DomainControllerRuntimeIgnoreTransformationRegistry￨2 runtimeIgnoreTransformationRegistry￨2 ;￨2 private￨2 final￨2 DelegatingConfigurableAuthorizer￨2 authorizer￨2 ;￨2 public￨2 DomainRootDefinition￨2 (￨2 final￨2 DomainController￨2 domainController￨2 ,￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ,￨2 final￨2 ExtensibleConfigurationPersister￨2 configurationPersister￨2 ,￨2 final￨2 ContentRepository￨2 contentRepo￨2 ,￨2 final￨2 HostFileRepository￨2 fileRepository￨2 ,￨2 final￨2 boolean￨2 isMaster￨2 ,￨2 final￨2 LocalHostControllerInfo￨2 hostControllerInfo￨2 ,￨2 final￨2 ExtensionRegistry￨2 extensionRegistry￨2 ,￨2 final￨2 IgnoredDomainResourceRegistry￨2 ignoredDomainResourceRegistry￨2 ,￨2 final￨2 PathManagerService￨2 pathManager￨2 ,￨2 final￨2 DomainControllerRuntimeIgnoreTransformationRegistry￨2 runtimeIgnoreTransformationRegistry￨2 ,￨2 final￨2 DelegatingConfigurableAuthorizer￨2 authorizer￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registerAttributes￨2 (￨2 ManagementResourceRegistration￨3 resourceRegistration￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registerOperations￨2 (￨2 ManagementResourceRegistration￨3 resourceRegistration￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registerChildren￨2 (￨2 ManagementResourceRegistration￨3 resourceRegistration￨3 )￨2 {￨2 super￨3 .￨3 registerChildren￨3 (￨3 resourceRegistration￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 SystemPropertyResourceDefinition￨3 .￨3 createForDomainOrHost￨3 (￨3 DOMAIN￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 controller￨3 .￨3 resource￨3 .￨3 InterfaceDefinition￨3 (￨3 InterfaceAddHandler￨3 .￨3 NAMED_INSTANCE￨3 ,￨3 InterfaceRemoveHandler￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 CoreManagementResourceDefinition￨3 .￨3 forDomain￨3 (￨3 authorizer￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 ProfileResourceDefinition￨3 (￨3 extensionRegistry￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 PathResourceDefinition￨3 .￨3 createNamed￨3 (￨3 pathManager￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 DomainDeploymentResourceDefinition￨3 .￨3 createForDomainRoot￨3 (￨3 isMaster￨3 ,￨3 contentRepo￨3 ,￨3 fileRepository￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deploymentoverlay￨3 .￨3 DeploymentOverlayDefinition￨3 (￨3 null￨3 ,￨3 contentRepo￨3 ,￨3 fileRepository￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 ServerGroupResourceDefinition￨3 (￨3 isMaster￨3 ,￨3 contentRepo￨3 ,￨3 fileRepository￨3 ,￨3 runtimeIgnoreTransformationRegistry￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 controller￨3 .￨3 resource￨3 .￨3 SocketBindingGroupResourceDefinition￨3 (￨3 SocketBindingGroupAddHandler￨3 .￨3 INSTANCE￨3 ,￨3 DomainSocketBindingGroupRemoveHandler￨3 .￨3 INSTANCE￨3 ,￨3 true￨3 ,￨3 SocketBindingResourceDefinition￨3 .￨3 INSTANCE￨3 ,￨3 RemoteDestinationOutboundSocketBindingResourceDefinition￨3 .￨3 INSTANCE￨3 ,￨3 LocalDestinationOutboundSocketBindingResourceDefinition￨3 .￨3 INSTANCE￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 management￨3 .￨3 client￨3 .￨3 content￨3 .￨3 ManagedDMRContentTypeResourceDefinition￨3 (￨3 contentRepo￨3 ,￨3 ModelDescriptionConstants￨3 .￨3 ROLLOUT_PLAN￨3 ,￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 ModelDescriptionConstants￨3 .￨3 MANAGEMENT_CLIENT_CONTENT￨3 ,￨3 ModelDescriptionConstants￨3 .￨3 ROLLOUT_PLANS￨3 )￨3 ,￨3 new￨3 DomainRootDefinition￨3 .￨3 RolloutPlanValidator￨3 (￨3 )￨3 ,￨3 DomainResolver￨3 .￨3 getResolver￨3 (￨3 ModelDescriptionConstants￨3 .￨3 ROLLOUT_PLANS￨3 )￨3 ,￨3 DomainResolver￨3 .￨3 getResolver￨3 (￨3 ModelDescriptionConstants￨3 .￨3 ROLLOUT_PLAN￨3 )￨3 )￨3 )￨3 ;￨3 resourceRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 controller￨3 .￨3 extension￨3 .￨3 ExtensionResourceDefinition￨3 (￨3 extensionRegistry￨3 ,￨3 true￨3 ,￨3 false￨3 ,￨3 (￨3 !￨3 (￨3 isMaster￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 DomainTransformers￨3 .￨3 initializeDomainRegistry￨3 (￨3 extensionRegistry￨3 .￨3 getTransformerRegistry￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 initialize￨2 (￨2 ManagementResourceRegistration￨3 resourceRegistration￨3 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 RolloutPlanValidator￨2 extends￨2 AbstractParameterValidator￨2 {￨2 private￨3 static￨3 final￨3 List￨3 <￨3 String￨3 >￨3 ALLOWED_SERVER_GROUP_CHILDREN￨3 =￨3 Arrays￨3 .￨3 asList￨3 (￨3 ModelDescriptionConstants￨3 .￨3 ROLLING_TO_SERVERS￨3 ,￨3 ModelDescriptionConstants￨3 .￨3 MAX_FAILURE_PERCENTAGE￨3 ,￨3 ModelDescriptionConstants￨3 .￨3 MAX_FAILED_SERVERS￨3 )￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 validateParameter￨3 (￨3 String￨3 parameterName￨3 ,￨3 ModelNode￨3 plan￨3 )￨3 throws￨3 OperationFailedException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 static￨3 void￨3 validateInSeriesServerGroup￨3 (￨3 ModelNode￨3 serverGroup￨3 )￨3 throws￨3 OperationFailedException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractServer￨1 {￨1 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.jboss.as.server"￨2 )￨2 ;￨2 private￨2 ServerModel￨2 config￨2 ;￨2 private￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 private￨2 final￨2 ServerEnvironment￨2 environment￨2 ;￨2 protected￨2 AbstractServer￨2 (￨2 final￨3 ServerEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 public￨2 ServerEnvironment￨2 getEnvironment￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServerModel￨2 getConfig￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 start￨2 (￨2 )￨2 throws￨2 ServerStartException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 start￨2 (￨2 final￨2 ServerModel￨2 config￨2 )￨2 throws￨2 ServerStartException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 config￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 "null<seq2seq4repair_space>standalone<seq2seq4repair_space>config"￨4 )￨4 ;￨4 }￨3 this￨3 .￨3 config￨3 =￨3 config￨3 ;￨3 <START_BUG>￨3 AbstractServer￨3 .￨3 log￨3 .￨3 infof￨3 (￨3 "Starting<seq2seq4repair_space>server<seq2seq4repair_space>'%s'"￨3 ,￨3 config￨3 .￨3 getServerName￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 serviceContainer￨3 =￨3 Factory￨3 .￨3 create￨3 (￨3 )￨3 ;￨3 final￨3 ServerStartupListener￨3 listener￨3 =￨3 new￨3 ServerStartupListener￨3 (￨3 createListenerCallback￨3 (￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 final￨4 ServerStartBatchBuilder￨4 subsystemBatchBuilder￨4 =￨4 new￨4 ServerStartBatchBuilder￨4 (￨4 serviceContainer￨4 .￨4 batchBuilder￨4 (￨4 )￨4 ,￨4 listener￨4 )￨4 ;￨4 subsystemBatchBuilder￨4 .￨4 addListener￨4 (￨4 listener￨4 )￨4 ;￨4 final￨4 ServiceActivatorContext￨4 subsystemActivatorContext￨4 =￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 msc￨4 .￨4 service￨4 .￨4 ServiceActivatorContextImpl￨4 (￨4 subsystemBatchBuilder￨4 )￨4 ;￨4 config￨4 .￨4 activateSubsystems￨4 (￨4 subsystemActivatorContext￨4 )￨4 ;￨4 listener￨4 .￨4 startBatch￨4 (￨4 new￨4 Runnable￨4 (￨4 )￨4 {￨4 @￨5 Override￨5 public￨5 void￨5 run￨5 (￨5 )￨5 {￨5 final￨6 ServerStartBatchBuilder￨6 deploymentBatchBuilder￨6 =￨6 new￨6 ServerStartBatchBuilder￨6 (￨6 serviceContainer￨6 .￨6 batchBuilder￨6 (￨6 )￨6 ,￨6 listener￨6 )￨6 ;￨6 deploymentBatchBuilder￨6 .￨6 addListener￨6 (￨6 listener￨6 )￨6 ;￨6 final￨6 ServiceActivatorContext￨6 deploymentActivatorContext￨6 =￨6 new￨6 org￨6 .￨6 jboss￨6 .￨6 msc￨6 .￨6 service￨6 .￨6 ServiceActivatorContextImpl￨6 (￨6 deploymentBatchBuilder￨6 )￨6 ;￨6 listener￨6 .￨6 startBatch￨6 (￨6 null￨6 )￨6 ;￨6 config￨6 .￨6 activateDeployments￨6 (￨6 deploymentActivatorContext￨6 )￨6 ;￨6 listener￨6 .￨6 finish￨6 (￨6 )￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 deploymentBatchBuilder￨7 .￨7 install￨7 (￨7 )￨7 ;￨7 listener￨7 .￨7 finishBatch￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 ServiceRegistryException￨7 e￨7 )￨6 {￨6 throw￨7 new￨7 RuntimeException￨7 (￨7 e￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 )￨4 ;￨4 subsystemBatchBuilder￨4 .￨4 install￨4 (￨4 )￨4 ;￨4 listener￨4 .￨4 finishBatch￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Throwable￨4 t￨4 )￨3 {￨3 throw￨4 new￨4 ServerStartException￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>start<seq2seq4repair_space>server"￨4 ,￨4 t￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 {￨2 }￨2 abstract￨2 Callback￨2 createListenerCallback￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 synchronized￨2 String￨2 getTempSSTablePath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getTempSSTableFileName￨2 (￨2 )￨2 {￨2 }￨2 Future￨2 <￨2 ?￨2 >￨2 switchMemtable￨2 (￨2 Memtable￨2 oldMemtable￨2 ,￨2 final￨2 boolean￨2 writeCommitLog￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 switchBinaryMemtable￨2 (￨2 String￨2 key￨2 ,￨2 byte￨2 [￨2 ]￨2 buffer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 forceFlushIfExpired￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Future￨2 <￨2 ?￨2 >￨2 forceFlush￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 forceBlockingFlush￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 forceFlushBinary￨2 (￨2 )￨2 {￨2 }￨2 Memtable￨2 apply￨2 (￨2 String￨2 key￨2 ,￨2 ColumnFamily￨2 columnFamily￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 applyBinary￨2 (￨2 String￨2 key￨2 ,￨2 byte￨2 [￨2 ]￨2 buffer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 ColumnFamily￨2 removeDeleted￨2 (￨2 ColumnFamily￨3 cf￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 getDefaultGCBefore￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 ColumnFamily￨2 removeDeleted￨2 (￨2 ColumnFamily￨3 cf￨3 ,￨3 int￨3 gcBefore￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 removeDeletedStandard￨2 (￨2 ColumnFamily￨3 cf￨3 ,￨3 int￨3 gcBefore￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 removeDeletedSuper￨2 (￨2 ColumnFamily￨3 cf￨3 ,￨3 int￨3 gcBefore￨3 )￨2 {￨2 }￨2 void￨2 onMemtableFlush￨2 (￨2 CommitLog￨2 .￨2 CommitLogContext￨2 cLogCtx￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addSSTable￨2 (￨2 SSTableReader￨3 sstable￨3 )￨2 {￨2 }￨2 static￨2 Set￨2 <￨2 List￨2 <￨2 SSTableReader￨2 >￨2 >￨2 getCompactionBuckets￨2 (￨2 Iterable￨3 <￨3 SSTableReader￨3 >￨3 files￨3 ,￨3 long￨3 min￨3 )￨2 {￨2 }￨2 int￨2 doCompaction￨2 (￨2 int￨2 minThreshold￨2 ,￨2 int￨2 maxThreshold￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 doMajorCompaction￨2 (￨2 long￨2 skip￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 doMajorCompactionInternal￨2 (￨2 long￨2 skip￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 long￨2 getExpectedCompactedFileSize￨2 (￨2 Iterable￨3 <￨3 SSTableReader￨3 >￨3 sstables￨3 )￨2 {￨2 }￨2 SSTableReader￨2 getMaxSizeFile￨2 (￨2 Iterable￨3 <￨3 SSTableReader￨3 >￨3 sstables￨3 )￨2 {￨2 }￨2 List￨2 <￨2 SSTableReader￨2 >￨2 doAntiCompaction￨2 (￨2 Collection￨2 <￨2 Range￨2 >￨2 ranges￨2 ,￨2 InetAddress￨2 target￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 forceCleanup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 doCleanupCompaction￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 doCleanup￨2 (￨2 SSTableReader￨2 sstable￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 List￨2 <￨2 SSTableReader￨2 >￨2 doFileAntiCompaction￨2 (￨2 Collection￨2 <￨2 SSTableReader￨2 >￨2 sstables￨2 ,￨2 final￨2 Collection￨2 <￨2 Range￨2 >￨2 ranges￨2 ,￨2 InetAddress￨2 target￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 doFileCompaction￨2 (￨2 Collection￨2 <￨2 SSTableReader￨2 >￨2 sstables￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 int￨2 doFileCompaction￨2 (￨2 Collection￨2 <￨2 SSTableReader￨2 >￨2 sstables￨2 ,￨2 int￨2 gcBefore￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 gcAfterRpcTimeout￨2 (￨2 )￨2 {￨2 }￨2 void￨2 doReadonlyCompaction￨2 (￨2 InetAddress￨2 initiator￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 long￨2 getTotalBytes￨2 (￨2 Iterable￨3 <￨3 SSTableReader￨3 >￨3 sstables￨3 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 Memtable￨2 >￨2 getUnflushedMemtables￨2 (￨2 String￨3 cfName￨3 )￨2 {￨2 }￨2 static￨2 Set￨2 <￨2 Memtable￨2 >￨2 getMemtablesPendingFlushNotNull￨2 (￨2 String￨3 columnFamilyName￨3 )￨2 {￨2 }￨2 Condition￨2 submitFlush￨2 (￨2 final￨3 IFlushable￨3 flushable￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSuper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getMemtableColumnsCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getMemtableDataSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getMemtableSwitchCount￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Memtable￨2 getMemtableThreadSafe￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Iterator￨2 <￨2 DecoratedKey￨2 >￨2 memtableKeyIterator￨2 (￨2 )￨2 throws￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 SSTableReader￨2 >￨2 getSSTables￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getReadCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getReadLatency￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getPendingTasks￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWriteCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 getWriteLatency￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumnFamily￨2 getColumnFamily￨2 (￨2 String￨2 key￨2 ,￨2 QueryPath￨2 path￨2 ,￨2 byte￨2 [￨2 ]￨2 start￨2 ,￨2 byte￨2 [￨2 ]￨2 finish￨2 ,￨2 boolean￨2 reversed￨2 ,￨2 int￨2 limit￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumnFamily￨2 getColumnFamily￨2 (￨2 QueryFilter￨2 filter￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumnFamily￨2 getColumnFamily￨2 (￨2 QueryFilter￨2 filter￨2 ,￨2 int￨2 gcBefore￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ColumnFamily￨2 getColumnFamilyInternal￨2 (￨2 QueryFilter￨2 filter￨2 ,￨2 int￨2 gcBefore￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RangeReply￨2 getKeyRange￨2 (￨2 final￨2 String￨2 startWith￨2 ,￨2 final￨2 String￨2 stopAt￨2 ,￨2 int￨2 maxResults￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RangeReply￨2 getKeyRangeRaw￨2 (￨2 final￨2 DecoratedKey￨2 startWith￨2 ,￨2 final￨2 DecoratedKey￨2 stopAt￨2 ,￨2 int￨2 maxResults￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RangeSliceReply￨2 getRangeSlice￨2 (￨2 byte￨2 [￨2 ]￨2 super_column￨2 ,￨2 final￨2 DecoratedKey￨2 startKey￨2 ,￨2 final￨2 DecoratedKey￨2 finishKey￨2 ,￨2 int￨2 keyMax￨2 ,￨2 SliceRange￨2 sliceRange￨2 ,￨2 List￨2 <￨2 byte￨2 [￨2 ]￨2 >￨2 columnNames￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 RangeReply￨3 rr￨3 =￨3 getKeyRangeRaw￨3 (￨3 startKey￨3 ,￨3 finishKey￨3 ,￨3 keyMax￨3 )￨3 ;￨3 List￨3 <￨3 Row￨3 >￨3 rows￨3 =￨3 new￨3 ArrayList￨3 <￨3 Row￨3 >￨3 (￨3 rr￨3 .￨3 keys￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 final￨3 QueryPath￨3 queryPath￨3 =￨3 new￨3 QueryPath￨3 (￨3 columnFamily_￨3 ,￨3 super_column￨3 ,￨3 null￨3 )￨3 ;￨3 final￨3 SortedSet￨3 <￨3 byte￨3 [￨3 ]￨3 >￨3 columnNameSet￨3 =￨3 new￨3 TreeSet￨3 <￨3 byte￨3 [￨3 ]￨3 >￨3 (￨3 getComparator￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 columnNames￨4 !=￨4 null￨4 )￨3 {￨3 columnNameSet￨4 .￨4 addAll￨4 (￨4 columnNames￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 String￨4 key￨4 :￨4 rr￨4 .￨4 keys￨4 )￨3 {￨3 QueryFilter￨4 filter￨4 =￨4 (￨4 sliceRange￨4 ==￨4 null￨4 )￨4 ?￨4 new￨4 NamesQueryFilter￨4 (￨4 key￨4 ,￨4 queryPath￨4 ,￨4 columnNameSet￨4 )￨4 :￨4 new￨4 SliceQueryFilter￨4 (￨4 key￨4 ,￨4 queryPath￨4 ,￨4 sliceRange￨4 .￨4 start￨4 ,￨4 sliceRange￨4 .￨4 finish￨4 ,￨4 sliceRange￨4 .￨4 reversed￨4 ,￨4 sliceRange￨4 .￨4 count￨4 )￨4 ;￨4 rows￨4 .￨4 add￨4 (￨4 new￨4 Row￨4 (￨4 key￨4 ,￨4 getColumnFamily￨4 (￨4 filter￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 new￨3 RangeSliceReply￨3 (￨3 rows￨3 ,￨3 rr￨3 .￨3 rangeCompletedLocally￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 AbstractType￨2 getComparator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 snapshot￨2 (￨2 String￨2 snapshotName￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 clearUnsafe￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 AntiCompactionIterator￨2 extends￨2 CompactionIterator￨2 {￨2 public￨3 AntiCompactionIterator￨3 (￨3 Collection￨3 <￨3 SSTableReader￨3 >￨3 sstables￨3 ,￨3 Collection￨3 <￨3 Range￨3 >￨3 ranges￨3 ,￨3 int￨3 gcBefore￨3 ,￨3 boolean￨3 isMajor￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 static￨3 Iterator￨3 getCollatedRangeIterator￨3 (￨3 Collection￨3 <￨3 SSTableReader￨3 >￨3 sstables￨3 ,￨3 final￨3 Collection￨3 <￨3 Range￨3 >￨3 ranges￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 close￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ServerManager￨1 extends￨1 AbstractMgmtTestBase￨1 {￨1 private￨2 int￨2 mgmtPort￨2 ;￨2 private￨2 String￨2 mgmtHostName￨2 ;￨2 public￨2 ServerManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServerManager￨2 (￨2 String￨3 mgmtHostName￨3 ,￨3 int￨3 mgmtPort￨3 )￨2 {￨2 }￨2 public￨2 ServerManager￨2 (￨2 String￨3 mgmtHostName￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getMgmtPort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addConnector￨2 (￨2 Connector￨2 conn￨2 ,￨2 int￨2 port￨2 ,￨2 String￨2 keyPEMFile￨2 ,￨2 String￨2 certPEMFile￨2 ,￨2 String￨2 keyStoreFile￨2 ,￨2 String￨2 password￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getAddSocketBindingOp￨2 (￨2 Connector￨3 conn￨3 ,￨3 int￨3 port￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getAddConnectorOp￨2 (￨2 Connector￨3 conn￨3 ,￨3 String￨3 keyPEMFile￨3 ,￨3 String￨3 certPEMFile￨3 ,￨3 String￨3 keyStoreFile￨3 ,￨3 String￨3 password￨3 )￨2 {￨2 ModelNode￨3 op￨3 =￨3 createOpNode￨3 (￨3 (￨3 (￨3 "subsystem=web/connector=test-"￨3 +￨3 (￨3 conn￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 +￨3 "-connector"￨3 )￨3 ,￨3 "add"￨3 )￨3 ;￨3 op￨3 .￨3 get￨3 (￨3 "socket-binding"￨3 )￨3 .￨3 set￨3 (￨3 (￨3 "test-"￨3 +￨3 (￨3 conn￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 op￨3 .￨3 get￨3 (￨3 "scheme"￨3 )￨3 .￨3 set￨3 (￨3 conn￨3 .￨3 getScheme￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 op￨3 .￨3 get￨3 (￨3 "protocol"￨3 )￨3 .￨3 set￨3 (￨3 conn￨3 .￨3 getProtrocol￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 op￨3 .￨3 get￨3 (￨3 "secure"￨3 )￨3 .￨3 set￨3 (￨3 conn￨3 .￨3 isSecure￨3 (￨3 )￨3 )￨3 ;￨3 op￨3 .￨3 get￨3 (￨3 "enabled"￨3 )￨3 .￨3 set￨3 (￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 conn￨4 .￨4 isSecure￨4 (￨4 )￨4 )￨3 {￨3 ModelNode￨4 ssl￨4 =￨4 new￨4 ModelNode￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 conn￨5 .￨5 equals￨5 (￨5 HTTPSNATIVE￨5 )￨5 )￨4 {￨4 ssl￨5 .￨5 get￨5 (￨5 "certificate-key-file"￨5 )￨5 .￨5 set￨5 (￨5 keyPEMFile￨5 )￨5 ;￨5 ssl￨5 .￨5 get￨5 (￨5 "certificate-file"￨5 )￨5 .￨5 set￨5 (￨5 certPEMFile￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 ssl￨5 .￨5 get￨5 (￨5 "certificate-key-file"￨5 )￨5 .￨5 set￨5 (￨5 keyStoreFile￨5 )￨5 ;￨5 }￨4 ssl￨4 .￨4 get￨4 (￨4 "password"￨4 )￨4 .￨4 set￨4 (￨4 password￨4 )￨4 ;￨4 op￨4 .￨4 get￨4 (￨4 "ssl"￨4 )￨4 .￨4 set￨4 (￨4 ssl￨4 )￨4 ;￨4 }￨3 return￨3 op￨3 ;￨3 }￨2 public￨2 void￨2 removeConnector￨2 (￨2 Connector￨2 conn￨2 ,￨2 String￨2 checkURL￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getRemoveSocketBindingOp￨2 (￨2 Connector￨3 conn￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 getRemoveConnectorOp￨2 (￨2 Connector￨3 conn￨3 )￨2 {￨2 }￨2 public￨2 HashSet￨2 <￨2 String￨2 >￨2 getConnectorList￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 initModelControllerClient￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SSOMutator￨1 <￨1 V￨1 >￨1 implements￨1 Mutator￨1 {￨1 private￨2 final￨2 Cache￨2 <￨2 String￨2 ,￨2 V￨2 >￨2 cache￨2 ;￨2 private￨2 final￨2 CacheInvoker￨2 invoker￨2 ;￨2 private￨2 final￨2 String￨2 id￨2 ;￨2 final￨2 V￨2 value￨2 ;￨2 public￨2 SSOMutator￨2 (￨2 Cache￨3 <￨3 String￨3 ,￨3 V￨3 >￨3 cache￨3 ,￨3 CacheInvoker￨3 invoker￨3 ,￨3 String￨3 id￨3 ,￨3 V￨3 value￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 mutate￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 this￨3 .￨3 invoker￨3 .￨3 invoke￨3 (￨3 this￨3 .￨3 cache￨3 ,￨3 new￨3 MutateOperation￨3 <￨3 String￨3 ,￨3 V￨3 >￨3 (￨3 this￨3 .￨3 id￨3 ,￨3 this￨3 .￨3 value￨3 )￨3 ,￨3 IGNORE_RETURN_VALUES￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 OrRule￨1 extends￨1 AbstractRule￨1 {￨1 private￨2 final￨2 Rule￨2 rule1￨2 ;￨2 private￨2 final￨2 Rule￨2 rule2￨2 ;￨2 private￨2 OrRule￨2 (￨2 Rule￨3 firstParam￨3 ,￨3 Rule￨3 secondParam￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Rule￨2 getRule￨2 (￨2 Rule￨3 firstParam￨3 ,￨3 Rule￨3 secondParam￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Rule￨2 getRule￨2 (￨2 Stack￨3 stack￨3 )￨2 {￨2 if￨3 (￨3 (￨4 stack￨4 .￨4 size￨4 (￨4 )￨4 )￨4 <￨4 2￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 (￨4 "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule<seq2seq4repair_space>-<seq2seq4repair_space>expected<seq2seq4repair_space>two<seq2seq4repair_space>rules<seq2seq4repair_space>but<seq2seq4repair_space>provided<seq2seq4repair_space>"￨4 +￨4 (￨4 stack￨4 .￨4 size￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 Object￨3 o2￨3 =￨3 stack￨3 .￨3 pop￨3 (￨3 )￨3 ;￨3 Object￨3 o1￨3 =￨3 stack￨3 .￨3 pop￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 o2￨4 instanceof￨4 Rule￨4 )￨4 &&￨4 (￨4 o1￨4 instanceof￨4 Rule￨4 )￨4 )￨3 {￨3 Rule￨4 p2￨4 =￨4 (￨4 (￨4 Rule￨4 )￨4 (￨4 o2￨4 )￨4 )￨4 ;￨4 Rule￨4 p1￨4 =￨4 (￨4 (￨4 Rule￨4 )￨4 (￨4 o1￨4 )￨4 )￨4 ;￨4 return￨4 new￨4 OrRule￨4 (￨4 p1￨4 ,￨4 p2￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 (￨4 (￨4 (￨4 "Invalid<seq2seq4repair_space>OR<seq2seq4repair_space>rule:<seq2seq4repair_space>"￨4 +￨4 o2￨4 )￨4 +￨4 "..."￨4 )￨4 +￨4 o1￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 boolean￨2 evaluate￨2 (￨2 LoggingEvent￨3 event￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ViewRegistry￨1 extends￨1 RegistryManager￨1 implements￨1 IRegistryChangeListener￨1 ,￨1 IViewRegistry￨1 {￨1 private￨2 List￨2 views￨2 ;￨2 private￨2 boolean￨2 dirtyViews￨2 ;￨2 private￨2 List￨2 categories￨2 ;￨2 private￨2 boolean￨2 dirtyCategories￨2 ;￨2 private￨2 Category￨2 miscCategory￨2 ;￨2 protected￨2 static￨2 final￨2 String￨2 TAG_DESCRIPTION￨2 =￨2 "description"￨2 ;￨2 private￨2 class￨2 ViewRegistryElement￨2 {￨2 private￨3 List￨3 viewDescriptors￨3 ;￨3 private￨3 List￨3 categoryDescriptors￨3 ;￨3 public￨3 ViewRegistryElement￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 addCategory￨3 (￨3 Category￨4 element￨4 )￨3 {￨3 }￨3 public￨3 void￨3 addViewDescriptor￨3 (￨3 IViewDescriptor￨4 element￨4 )￨3 {￨3 }￨3 public￨3 List￨3 getCategories￨3 (￨3 )￨3 {￨3 }￨3 public￨3 List￨3 getViewDescriptors￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 ViewRegistry￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 Category￨3 desc￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 IViewDescriptor￨3 desc￨3 )￨2 {￨2 dirtyViews￨3 =￨3 true￨3 ;￨3 ViewRegistry￨3 .￨3 ViewRegistryElement￨3 element￨3 =￨3 new￨3 ViewRegistry￨3 .￨3 ViewRegistryElement￨3 (￨3 )￨3 ;￨3 element￨3 .￨3 addViewDescriptor￨3 (￨3 desc￨3 )￨3 ;￨3 <START_BUG>￨3 add￨3 (￨3 element￨3 ,￨3 desc￨3 .￨3 getConfigurationElement￨3 (￨3 )￨3 .￨3 getDeclaringExtension￨3 (￨3 )￨3 .￨3 getDeclaringPluginDescriptor￨3 (￨3 )￨3 .￨3 getUniqueIdentifier￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 Object￨2 buildNewCacheObject￨2 (￨2 IExtensionDelta￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 IViewDescriptor￨2 find￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Category￨2 findCategory￨2 (￨2 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 Category￨2 [￨2 ]￨2 getCategories￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getCategoryCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Category￨2 getMiscCategory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getViewCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IViewDescriptor￨2 [￨2 ]￨2 getViews￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 mapViewsToCategories￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildViews￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildCategories￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 postChangeProcessing￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 IndexManager￨1 extends￨1 JobManager￨1 implements￨1 IIndexConstants￨1 {￨1 public￨2 IWorkspace￨2 workspace￨2 ;￨2 public￨2 SimpleLookupTable￨2 indexNames￨2 =￨2 new￨2 SimpleLookupTable￨2 (￨2 )￨2 ;￨2 private￨2 Map￨2 indexes￨2 =￨2 new￨2 HashMap￨2 (￨2 5￨2 )￨2 ;￨2 private￨2 boolean￨2 needToSave￨2 =￨2 false￨2 ;￨2 private￨2 static￨2 final￨2 CRC32￨2 checksumCalculator￨2 =￨2 new￨2 CRC32￨2 (￨2 )￨2 ;￨2 private￨2 IPath￨2 javaPluginLocation￨2 =￨2 null￨2 ;￨2 private￨2 SimpleLookupTable￨2 indexStates￨2 =￨2 null￨2 ;￨2 private￨2 File￨2 savedIndexNamesFile￨2 =￨2 new￨2 File￨2 (￨2 getJavaPluginWorkingLocation￨2 (￨2 )￨2 .￨2 append￨2 (￨2 "savedIndexNames.txt"￨2 )￨2 .￨2 toOSString￨2 (￨2 )￨2 )￨2 ;￨2 public￨2 static￨2 Integer￨2 SAVED_STATE￨2 =￨2 new￨2 Integer￨2 (￨2 0￨2 )￨2 ;￨2 public￨2 static￨2 Integer￨2 UPDATING_STATE￨2 =￨2 new￨2 Integer￨2 (￨2 1￨2 )￨2 ;￨2 public￨2 static￨2 Integer￨2 UNKNOWN_STATE￨2 =￨2 new￨2 Integer￨2 (￨2 2￨2 )￨2 ;￨2 public￨2 static￨2 Integer￨2 REBUILDING_STATE￨2 =￨2 new￨2 Integer￨2 (￨2 3￨2 )￨2 ;￨2 public￨2 synchronized￨2 void￨2 aboutToUpdateIndex￨2 (￨2 IPath￨3 path￨3 ,￨3 Integer￨3 newIndexState￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addBinary￨2 (￨2 IFile￨3 resource￨3 ,￨3 IPath￨3 indexPath￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSource￨2 (￨2 IFile￨3 resource￨3 ,￨3 IPath￨3 indexPath￨3 )￨2 {￨2 }￨2 String￨2 computeIndexName￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 Index￨2 getIndex￨2 (￨2 IPath￨3 path￨3 ,￨3 boolean￨3 reuseExistingFile￨3 ,￨3 boolean￨3 createIfMissing￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 Index￨2 getIndexForUpdate￨2 (￨2 IPath￨3 path￨3 ,￨3 boolean￨3 reuseExistingFile￨3 ,￨3 boolean￨3 createIfMissing￨3 )￨2 {￨2 }￨2 private￨2 SimpleLookupTable￨2 getIndexStates￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IPath￨2 getJavaPluginWorkingLocation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 indexDocument￨2 (￨2 SearchDocument￨2 searchDocument￨2 ,￨2 SearchParticipant￨2 searchParticipant￨2 ,￨2 Index￨2 index￨2 ,￨2 IPath￨2 indexPath￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 indexAll￨2 (￨2 IProject￨3 project￨3 )￨2 {￨2 }￨2 public￨2 void￨2 indexLibrary￨2 (￨2 IPath￨3 path￨3 ,￨3 IProject￨3 requestingProject￨3 )￨2 {￨2 }￨2 public￨2 void￨2 indexSourceFolder￨2 (￨2 JavaProject￨3 javaProject￨3 ,￨3 IPath￨3 sourceFolder￨3 ,￨3 final￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 exclusionPattern￨3 )￨2 {￨2 }￨2 public￨2 void￨2 jobWasCancelled￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 protected￨2 synchronized￨2 void￨2 moveToNextJob￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 notifyIdle￨2 (￨2 long￨3 idlingTime￨3 )￨2 {￨2 }￨2 public￨2 Index￨2 peekAtIndex￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 String￨2 processName￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 rebuildIndex￨2 (￨2 String￨3 indexName￨3 ,￨3 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 Index￨2 recreateIndex￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 Index￨4 index￨4 =￨4 (￨4 (￨4 Index￨4 )￨4 (￨4 this￨4 .￨4 indexes￨4 .￨4 get￨4 (￨4 path￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 ReadWriteMonitor￨4 monitor￨4 =￨4 index￨4 .￨4 monitor￨4 ;￨4 <END_BUG>￨4 String￨4 indexPath￨4 =￨4 computeIndexName￨4 (￨4 path￨4 )￨4 ;￨4 if￨4 (￨4 JobManager￨5 .￨5 VERBOSE￨5 )￨4 {￨4 JobManager￨5 .￨5 verbose￨5 (￨5 (￨5 (￨5 (￨5 "-><seq2seq4repair_space>recreating<seq2seq4repair_space>index:<seq2seq4repair_space>"￨5 +￨5 indexPath￨5 )￨5 +￨5 "<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 path￨5 .￨5 toOSString￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 index￨4 =￨4 new￨4 Index￨4 (￨4 indexPath￨4 ,￨4 (￨4 "Index<seq2seq4repair_space>for<seq2seq4repair_space>"￨4 +￨4 (￨4 path￨4 .￨4 toOSString￨4 (￨4 )￨4 )￨4 )￨4 ,￨4 false￨4 )￨4 ;￨4 indexes￨4 .￨4 put￨4 (￨4 path￨4 ,￨4 index￨4 )￨4 ;￨4 index￨4 .￨4 monitor￨4 =￨4 monitor￨4 ;￨4 return￨4 index￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 if￨4 (￨4 JobManager￨5 .￨5 VERBOSE￨5 )￨4 {￨4 JobManager￨5 .￨5 verbose￨5 (￨5 (￨5 "-><seq2seq4repair_space>failed<seq2seq4repair_space>to<seq2seq4repair_space>recreate<seq2seq4repair_space>index<seq2seq4repair_space>for<seq2seq4repair_space>path:<seq2seq4repair_space>"￨5 +￨5 (￨5 path￨5 .￨5 toOSString￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 e￨5 .￨5 printStackTrace￨5 (￨5 )￨5 ;￨5 }￨4 return￨4 null￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 remove￨2 (￨2 String￨3 resourceName￨3 ,￨3 IPath￨3 indexedContainer￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 removeIndex￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 removeIndexFamily￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSourceFolderFromIndex￨2 (￨2 JavaProject￨3 javaProject￨3 ,￨3 IPath￨3 sourceFolder￨3 ,￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 exclusionPatterns￨3 )￨2 {￨2 }￨2 public￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 saveIndex￨2 (￨2 Index￨2 index￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 saveIndexes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 scheduleDocumentIndexing￨2 (￨2 final￨3 SearchDocument￨3 searchDocument￨3 ,￨3 final￨3 IPath￨3 indexPath￨3 ,￨3 final￨3 SearchParticipant￨3 searchParticipant￨3 )￨2 {￨2 }￨2 public￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 private￨2 char￨2 [￨2 ]￨2 readIndexState￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateIndexState￨2 (￨2 String￨3 indexName￨3 ,￨3 Integer￨3 indexState￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CounterConfigGui￨1 extends￨1 AbstractPreProcessorGui￨1 {￨1 private￨2 JLabeledTextField￨2 startField￨2 ;￨2 private￨2 JLabeledTextField￨2 incrField￨2 ;￨2 private￨2 JLabeledTextField￨2 endField￨2 ;￨2 private￨2 JLabeledTextField￨2 varNameField￨2 ;￨2 private￨2 JCheckBox￨2 perUserField￨2 ;￨2 public￨2 CounterConfigGui￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getLabelResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TestElement￨2 createTestElement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 modifyTestElement￨2 (￨2 TestElement￨3 c￨3 )￨2 {￨2 if￨3 (￨3 c￨4 instanceof￨4 CounterConfig￨4 )￨3 {￨3 CounterConfig￨4 config￨4 =￨4 (￨4 (￨4 CounterConfig￨4 )￨4 (￨4 c￨4 )￨4 )￨4 ;￨4 config￨4 .￨4 setStart￨4 (￨4 startField￨4 .￨4 getText￨4 (￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 endField￨4 .￨4 getText￨4 (￨4 )￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 {￨4 <END_BUG>￨4 config￨4 .￨4 setEnd￨4 (￨4 endField￨4 .￨4 getText￨4 (￨4 )￨4 )￨4 ;￨4 }￨4 config￨4 .￨4 setIncrement￨4 (￨4 incrField￨4 .￨4 getText￨4 (￨4 )￨4 )￨4 ;￨4 config￨4 .￨4 setVarName￨4 (￨4 varNameField￨4 .￨4 getText￨4 (￨4 )￨4 )￨4 ;￨4 config￨4 .￨4 setIsPerUser￨4 (￨4 perUserField￨4 .￨4 isSelected￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 super￨3 .￨3 configureTestElement￨3 (￨3 c￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 configure￨2 (￨2 TestElement￨3 element￨3 )￨2 {￨2 }￨2 private￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RemoteProxyControllerProtocolTestCase￨1 {￨1 final￨2 RemoteProxyControllerProtocolTestCase￨2 .￨2 DelegatingChannelHandler￨2 handler￨2 =￨2 new￨2 RemoteProxyControllerProtocolTestCase￨2 .￨2 DelegatingChannelHandler￨2 (￨2 )￨2 ;￨2 RemoteChannelPairSetup￨2 channels￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 start￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 channels￨3 =￨3 new￨3 RemoteChannelPairSetup￨3 (￨3 )￨3 ;￨3 channels￨3 .￨3 setupRemoting￨3 (￨3 handler￨3 )￨3 ;￨3 <START_BUG>￨3 channels￨3 .￨3 startChannels￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 After￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 @￨2 Ignore￨2 (￨2 "OperationMessageHandlerProxy<seq2seq4repair_space>turned<seq2seq4repair_space>off<seq2seq4repair_space>temporarily"￨2 )￨2 public￨2 void￨2 testOperationMessageHandler￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testOperationControlFailed￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testOperationControlExceptionInController￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testTransactionCommit￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testTransactionRollback￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testAttachmentInputStreams￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testClosesBeforePrepare￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertArrays￨2 (￨2 byte￨3 [￨3 ]￨3 expected￨3 ,￨3 byte￨3 [￨3 ]￨3 actual￨3 )￨2 {￨2 }￨2 private￨2 RemoteProxyController￨2 setupProxyHandlers￨2 (￨2 RemoteProxyControllerProtocolTestCase￨3 .￨3 MockModelController￨3 controller￨3 )￨2 {￨2 }￨2 private￨2 abstract￨2 static￨2 class￨2 MockModelController￨2 implements￨2 ModelController￨2 {￨2 protected￨3 volatile￨3 ModelNode￨3 operation￨3 ;￨3 ModelNode￨3 getOperation￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 ModelControllerClient￨3 createClient￨3 (￨3 Executor￨4 executor￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 CommitProxyOperationControl￨2 implements￨2 ProxyOperationControl￨2 {￨2 final￨3 AtomicInteger￨3 txCompletionStatus￨3 =￨3 new￨3 AtomicInteger￨3 (￨3 (￨3 -￨3 1￨3 )￨3 )￨3 ;￨3 OperationTransaction￨3 tx￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 operationPrepared￨3 (￨3 OperationTransaction￨4 transaction￨4 ,￨4 ModelNode￨4 result￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 operationFailed￨3 (￨3 ModelNode￨4 response￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 operationCompleted￨3 (￨3 ModelNode￨4 response￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 TestFuture￨2 <￨2 T￨2 >￨2 extends￨2 AsyncFutureTask￨2 <￨2 T￨2 >￨2 {￨2 protected￨3 TestFuture￨3 (￨3 )￨3 {￨3 }￨3 void￨3 done￨3 (￨3 T￨4 result￨4 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 DelegatingChannelHandler￨2 implements￨2 ManagementMessageHandler￨2 {￨2 private￨3 ManagementMessageHandler￨3 delegate￨3 ;￨3 @￨3 Override￨3 public￨3 synchronized￨3 void￨3 handleMessage￨3 (￨3 Channel￨3 channel￨3 ,￨3 DataInput￨3 input￨3 ,￨3 ManagementProtocolHeader￨3 header￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 synchronized￨3 void￨3 setDelegate￨3 (￨3 ManagementMessageHandler￨4 delegate￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 shutdown￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 awaitCompletion￨3 (￨3 long￨3 timeout￨3 ,￨3 TimeUnit￨3 unit￨3 )￨3 throws￨3 InterruptedException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 shutdownNow￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
class￨1 InternalSpelExpressionParser￨1 extends￨1 TemplateAwareExpressionParser￨1 {￨1 private￨2 String￨2 expressionString￨2 ;￨2 private￨2 List￨2 <￨2 Token￨2 >￨2 tokenStream￨2 ;￨2 private￨2 int￨2 tokenStreamLength￨2 ;￨2 private￨2 int￨2 tokenStreamPointer￨2 ;￨2 private￨2 Stack￨2 <￨2 SpelNodeImpl￨2 >￨2 constructedNodes￨2 =￨2 new￨2 Stack￨2 <￨2 SpelNodeImpl￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 SpelParserConfiguration￨2 configuration￨2 ;￨2 public￨2 InternalSpelExpressionParser￨2 (￨2 SpelParserConfiguration￨3 configuration￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 SpelExpression￨2 doParseExpression￨2 (￨2 String￨2 expressionString￨2 ,￨2 ParserContext￨2 context￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatLogicalOrExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatLogicalAndExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatRelationalExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatSumExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatProductExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatPowerExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatUnaryExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatPrimaryExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatNode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 maybeEatNonDottedNode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatDottedNode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatFunctionOrVar￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 [￨2 ]￨2 maybeEatMethodArgs￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 eatConstructorArgs￨2 (￨2 List￨3 <￨3 SpelNodeImpl￨3 >￨3 accumulatedArguments￨3 )￨2 {￨2 }￨2 private￨2 void￨2 consumeArguments￨2 (￨2 List￨3 <￨3 SpelNodeImpl￨3 >￨3 accumulatedArguments￨3 )￨2 {￨2 }￨2 private￨2 int￨2 positionOf￨2 (￨2 Token￨3 t￨3 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatStartNode￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatBeanReference￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatTypeReference￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatNullReference￨2 (￨2 )￨2 {￨2 if￨3 (￨3 peekToken￨4 (￨4 IDENTIFIER￨4 )￨4 )￨3 {￨3 Token￨4 nullToken￨4 =￨4 peekToken￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 !￨4 (￨4 nullToken￨4 .￨4 stringValue￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 "null"￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 return￨4 false￨4 ;￨4 }￨4 nextToken￨4 (￨4 )￨4 ;￨4 constructedNodes￨4 .￨4 push￨4 (￨4 new￨4 org￨4 .￨4 springframework￨4 .￨4 expression￨4 .￨4 spel￨4 .￨4 ast￨4 .￨4 NullLiteral￨4 (￨4 toPos￨4 (￨4 nullToken￨4 )￨4 )￨4 )￨4 ;￨4 return￨4 true￨4 ;￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 private￨2 boolean￨2 maybeEatProjection￨2 (￨2 boolean￨3 nullSafeNavigation￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatInlineList￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatIndexer￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatSelection￨2 (￨2 boolean￨3 nullSafeNavigation￨3 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 eatPossiblyQualifiedId￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatMethodOrProperty￨2 (￨2 boolean￨3 nullSafeNavigation￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatConstructorReference￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 push￨2 (￨2 SpelNodeImpl￨3 newNode￨3 )￨2 {￨2 }￨2 private￨2 SpelNodeImpl￨2 pop￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatLiteral￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 maybeEatParenExpression￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Token￨2 maybeEatRelationalOperator￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Token￨2 eatToken￨2 (￨2 TokenKind￨3 expectedKind￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekToken￨2 (￨2 TokenKind￨3 desiredTokenKind￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekToken￨2 (￨2 TokenKind￨3 desiredTokenKind￨3 ,￨3 boolean￨3 consumeIfMatched￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekToken￨2 (￨2 TokenKind￨3 possible1￨3 ,￨3 TokenKind￨3 possible2￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekToken￨2 (￨2 TokenKind￨3 possible1￨3 ,￨3 TokenKind￨3 possible2￨3 ,￨3 TokenKind￨3 possible3￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekIdentifierToken￨2 (￨2 String￨3 identifierString￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 peekSelectToken￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 moreTokens￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Token￨2 nextToken￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Token￨2 peekToken￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 raiseInternalException￨2 (￨2 int￨3 pos￨3 ,￨3 SpelMessage￨3 message￨3 ,￨3 Object￨3 ...￨3 inserts￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 Token￨3 t￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkRightOperand￨2 (￨2 Token￨3 token￨3 ,￨3 SpelNodeImpl￨3 operandExpression￨3 )￨2 {￨2 }￨2 private￨2 int￨2 toPos￨2 (￨2 Token￨3 t￨3 )￨2 {￨2 }￨2 private￨2 int￨2 toPos￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RuntimeMXBeanAttributeHandler￨1 extends￨1 AbstractPlatformMBeanAttributeHandler￨1 {￨1 public￨2 static￨2 RuntimeMXBeanAttributeHandler￨2 INSTANCE￨2 =￨2 new￨2 RuntimeMXBeanAttributeHandler￨2 (￨2 )￨2 ;￨2 private￨2 RuntimeMXBeanAttributeHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeReadAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeWriteAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 register￨2 (￨2 ManagementResourceRegistration￨3 registration￨3 )￨2 {￨2 }￨2 static￨2 void￨2 storeResult￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 ModelNode￨3 store￨3 )￨2 {￨2 if￨3 (￨3 (￨4 (￨4 PlatformMBeanUtil￨4 .￨4 JVM_MAJOR_VERSION￨4 )￨4 >￨4 6￨4 )￨4 &&￨4 (￨4 OBJECT_NAME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 RUNTIME_MXBEAN_NAME￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 NAME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 VM_NAME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getVmName￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 VM_VENDOR￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getVmVendor￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 VM_VERSION￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getVmVersion￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 SPEC_NAME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getSpecName￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 SPEC_VENDOR￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getSpecVendor￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 SPEC_VERSION￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getSpecVersion￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 MANAGEMENT_SPEC_VERSION￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getManagementSpecVersion￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 CLASS_PATH￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getClassPath￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 LIBRARY_PATH￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getLibraryPath￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 BOOT_CLASS_PATH_SUPPORTED￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 isBootClassPathSupported￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 BOOT_CLASS_PATH￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getBootClassPath￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 INPUT_ARGUMENTS￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 setEmptyList￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 arg￨5 :￨5 ManagementFactory￨5 .￨5 getRuntimeMXBean￨5 (￨5 )￨5 .￨5 getInputArguments￨5 (￨5 )￨5 )￨4 {￨4 store￨5 .￨5 add￨5 (￨5 arg￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 UPTIME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getUptime￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 START_TIME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getStartTime￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 SYSTEM_PROPERTIES￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 store￨4 .￨4 setEmptyObject￨4 (￨4 )￨4 ;￨4 final￨4 TreeMap￨4 <￨4 String￨4 ,￨4 String￨4 >￨4 sorted￨4 =￨4 new￨4 TreeMap￨4 <￨4 String￨4 ,￨4 String￨4 >￨4 (￨4 ManagementFactory￨4 .￨4 getRuntimeMXBean￨4 (￨4 )￨4 .￨4 getSystemProperties￨4 (￨4 )￨4 )￨4 ;￨4 for￨4 (￨4 Map￨5 .￨5 Entry￨5 <￨5 String￨5 ,￨5 String￨5 >￨5 prop￨5 :￨5 sorted￨5 .￨5 entrySet￨5 (￨5 )￨5 )￨4 {￨4 final￨5 ModelNode￨5 propNode￨5 =￨5 store￨5 .￨5 get￨5 (￨5 prop￨5 .￨5 getKey￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 prop￨6 .￨6 getValue￨6 (￨6 )￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 propNode￨6 .￨6 set￨6 (￨6 prop￨6 .￨6 getValue￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 else￨3 if￨3 (￨3 (￨4 RUNTIME_READ_ATTRIBUTES￨4 .￨4 contains￨4 (￨4 name￨4 )￨4 )￨4 ||￨4 (￨4 RUNTIME_METRICS￨4 .￨4 contains￨4 (￨4 name￨4 )￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 IllegalStateException￨4 (￨4 String￨4 .￨4 format￨4 (￨4 "Read<seq2seq4repair_space>support<seq2seq4repair_space>for<seq2seq4repair_space>attribute<seq2seq4repair_space>%s<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>properly<seq2seq4repair_space>implemented"￨4 ,￨4 name￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractMoveFolderAction￨1 extends￨1 AbstractColumbaAction￨1 implements￨1 Observer￨1 ,￨1 ISelectionListener￨1 {￨1 private￨2 AbstractFolder￨2 lastSelectedFolder￨2 ;￨2 public￨2 AbstractMoveFolderAction￨2 (￨2 FrameMediator￨3 frameMediator￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 boolean￨2 isActionEnabledByIndex￨2 (￨2 int￨3 folderIndex￨3 )￨2 {￨2 }￨2 private￨2 void￨2 registerSortingObserver￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 update￨2 (￨2 Observable￨3 o￨3 ,￨3 Object￨3 arg￨3 )￨2 {￨2 }￨2 private￨2 void￨2 enableAction￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 reenableActionFromSelectedFolder￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 lastSelectedFolder￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 setEnabled￨4 (￨4 false￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 IFolderItem￨4 item￨4 =￨4 lastSelectedFolder￨4 .￨4 getConfiguration￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 item￨4 .￨4 get￨4 (￨4 "property"￨4 ,￨4 "accessrights"￨4 )￨4 .￨4 equals￨4 (￨4 "user"￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 int￨4 index￨4 =￨4 lastSelectedFolder￨4 .￨4 getParent￨4 (￨4 )￨4 .￨4 getIndex￨4 (￨4 lastSelectedFolder￨4 )￨4 ;￨4 setEnabled￨4 (￨4 isActionEnabledByIndex￨4 (￨4 index￨4 )￨4 )￨4 ;￨4 else￨4 {￨4 setEnabled￨5 (￨5 false￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 selectionChanged￨2 (￨2 SelectionChangedEvent￨3 e￨3 )￨2 {￨2 }￨2 protected￨2 AbstractFolder￨2 getLastSelectedFolder￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 IMAPMailCheckingAction￨1 extends￨1 AbstractMailCheckingAction￨1 {￨1 private￨2 int￨2 accountUid￨2 ;￨2 public￨2 IMAPMailCheckingAction￨2 (￨2 AccountItem￨3 accountItem￨3 )￨2 {￨2 }￨2 public￨2 void￨2 check￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isCheckAll￨2 (￨2 )￨2 {￨2 IMAPRootFolder￨3 imapRootFolder￨3 =￨3 (￨3 (￨3 IMAPRootFolder￨3 )￨3 (￨3 FolderTreeModel￨3 .￨3 getInstance￨3 (￨3 )￨3 .￨3 getImapFolder￨3 (￨3 accountUid￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 !￨3 (￨3 imapRootFolder￨3 .￨3 getAccountItem￨3 (￨3 )￨3 .￨3 getImapItem￨3 (￨3 )￨3 .￨3 getBoolean￨3 (￨3 "exclude_from_checkall"￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
class￨1 BufferedDeletes￨1 {￨1 static￨2 final￨2 int￨2 BYTES_PER_DEL_TERM￨2 =￨2 (￨2 (￨2 9￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_REF￨2 )￨2 )￨2 +￨2 (￨2 7￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_HEADER￨2 )￨2 )￨2 )￨2 +￨2 (￨2 10￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_INT￨2 )￨2 )￨2 ;￨2 static￨2 final￨2 int￨2 BYTES_PER_DEL_DOCID￨2 =￨2 (￨2 (￨2 2￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_REF￨2 )￨2 )￨2 +￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_HEADER￨2 )￨2 )￨2 +￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_INT￨2 )￨2 ;￨2 static￨2 final￨2 int￨2 BYTES_PER_DEL_QUERY￨2 =￨2 (￨2 (￨2 (￨2 5￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_REF￨2 )￨2 )￨2 +￨2 (￨2 2￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_OBJECT_HEADER￨2 )￨2 )￨2 )￨2 +￨2 (￨2 2￨2 *￨2 (￨2 RamUsageEstimator￨2 .￨2 NUM_BYTES_INT￨2 )￨2 )￨2 )￨2 +￨2 24￨2 ;￨2 final￨2 AtomicInteger￨2 numTermDeletes￨2 =￨2 new￨2 AtomicInteger￨2 (￨2 )￨2 ;￨2 final￨2 Map￨2 <￨2 Term￨2 ,￨2 Integer￨2 >￨2 terms￨2 =￨2 new￨2 HashMap￨2 <￨2 Term￨2 ,￨2 Integer￨2 >￨2 (￨2 )￨2 ;￨2 final￨2 Map￨2 <￨2 Query￨2 ,￨2 Integer￨2 >￨2 queries￨2 =￨2 new￨2 HashMap￨2 <￨2 Query￨2 ,￨2 Integer￨2 >￨2 (￨2 )￨2 ;￨2 final￨2 List￨2 <￨2 Integer￨2 >￨2 docIDs￨2 =￨2 new￨2 ArrayList￨2 <￨2 Integer￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 Integer￨2 MAX_INT￨2 =￨2 Integer￨2 .￨2 valueOf￨2 (￨2 Integer￨2 .￨2 MAX_VALUE￨2 )￨2 ;￨2 final￨2 AtomicLong￨2 bytesUsed￨2 ;￨2 private￨2 static￨2 final￨2 boolean￨2 VERBOSE_DELETES￨2 =￨2 false￨2 ;￨2 long￨2 gen￨2 ;￨2 public￨2 BufferedDeletes￨2 (￨2 )￨2 {￨2 }￨2 BufferedDeletes￨2 (￨2 AtomicLong￨3 bytesUsed￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 if￨3 (￨3 BufferedDeletes￨4 .￨4 VERBOSE_DELETES￨4 )￨3 {￨3 return￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 "gen="￨4 +￨4 (￨4 gen￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>numTerms="￨4 )￨4 +￨4 (￨4 numTermDeletes￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>terms="￨4 )￨4 +￨4 (￨4 terms￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>queries="￨4 )￨4 +￨4 (￨4 queries￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>docIDs="￨4 )￨4 +￨4 (￨4 docIDs￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>bytesUsed="￨4 )￨4 +￨4 (￨4 bytesUsed￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 String￨4 s￨4 =￨4 "gen="￨4 +￨4 (￨4 gen￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 numTermDeletes￨5 .￨5 get￨5 (￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 <START_BUG>￨5 s￨5 +=￨5 (￨5 (￨5 (￨5 (￨5 "<seq2seq4repair_space>"￨5 +￨5 (￨5 numTermDeletes￨5 .￨5 get￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>deleted<seq2seq4repair_space>terms<seq2seq4repair_space>(unique<seq2seq4repair_space>count="￨5 )￨5 +￨5 (￨5 terms￨5 .￨5 size￨5 (￨5 )￨5 )￨5 )￨5 +￨5 ")<seq2seq4repair_space>terms="￨5 )￨5 +￨5 (￨5 terms￨5 .￨5 keySet￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 if￨4 (￨4 (￨5 queries￨5 .￨5 size￨5 (￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 s￨5 +=￨5 (￨5 "<seq2seq4repair_space>"￨5 +￨5 (￨5 queries￨5 .￨5 size￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>deleted<seq2seq4repair_space>queries"￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 docIDs￨5 .￨5 size￨5 (￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 s￨5 +=￨5 (￨5 "<seq2seq4repair_space>"￨5 +￨5 (￨5 docIDs￨5 .￨5 size￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>deleted<seq2seq4repair_space>docIDs"￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 bytesUsed￨5 .￨5 get￨5 (￨5 )￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 s￨5 +=￨5 "<seq2seq4repair_space>bytesUsed="￨5 +￨5 (￨5 bytesUsed￨5 .￨5 get￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 s￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 addQuery￨2 (￨2 Query￨3 query￨3 ,￨3 int￨3 docIDUpto￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addDocID￨2 (￨2 int￨3 docID￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTerm￨2 (￨2 Term￨3 term￨3 ,￨3 int￨3 docIDUpto￨3 )￨2 {￨2 }￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 void￨2 clearDocIDs￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 any￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 NewHostControllerBootstrap￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.jboss.as.host.controller"￨2 )￨2 ;￨2 static￨2 final￨2 ServiceName￨2 SERVICE_NAME_BASE￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "host"￨2 ,￨2 "controller"￨2 )￨2 ;￨2 static￨2 final￨2 int￨2 DEFAULT_POOL_SIZE￨2 =￨2 20￨2 ;￨2 private￨2 final￨2 ServiceContainer￨2 serviceContainer￨2 =￨2 Factory￨2 .￨2 create￨2 (￨2 "host-controller"￨2 )￨2 ;￨2 private￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ;￨2 private￨2 final￨2 byte￨2 [￨2 ]￨2 authCode￨2 ;￨2 public￨2 NewHostControllerBootstrap￨2 (￨2 final￨3 HostControllerEnvironment￨3 environment￨3 ,￨3 final￨3 byte￨3 [￨3 ]￨3 authCode￨3 )￨2 {￨2 }￨2 public￨2 void￨2 start￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 serviceContainer￨3 ;￨3 <START_BUG>￨3 final￨3 ProcessControllerConnectionService￨3 processControllerClient￨3 =￨3 new￨3 ProcessControllerConnectionService￨3 (￨3 environment￨3 ,￨3 authCode￨3 )￨3 ;￨3 <END_BUG>￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 SERVICE_NAME￨3 ,￨3 processControllerClient￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 threadFactoryServiceName￨3 =￨3 NewHostControllerBootstrap￨3 .￨3 SERVICE_NAME_BASE￨3 .￨3 append￨3 (￨3 "thread-factory"￨3 )￨3 ;￨3 final￨3 ServiceName￨3 executorServiceName￨3 =￨3 NewHostControllerBootstrap￨3 .￨3 SERVICE_NAME_BASE￨3 .￨3 append￨3 (￨3 "executor"￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 threadFactoryServiceName￨3 ,￨3 new￨3 ThreadFactoryService￨3 (￨3 )￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 final￨3 NewHostControllerBootstrap￨3 .￨3 HostControllerExecutorService￨3 executorService￨3 =￨3 new￨3 NewHostControllerBootstrap￨3 .￨3 HostControllerExecutorService￨3 (￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 executorServiceName￨3 ,￨3 executorService￨3 )￨3 .￨3 addDependency￨3 (￨3 threadFactoryServiceName￨3 ,￨3 ThreadFactory￨3 .￨3 class￨3 ,￨3 executorService￨3 .￨3 threadFactoryValue￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 AbsolutePathService￨3 .￨3 addService￨3 (￨3 HOME_DIR￨3 ,￨3 environment￨3 .￨3 getHomeDir￨3 (￨3 )￨3 .￨3 getAbsolutePath￨3 (￨3 )￨3 ,￨3 serviceTarget￨3 )￨3 ;￨3 AbsolutePathService￨3 .￨3 addService￨3 (￨3 DOMAIN_CONFIG_DIR￨3 ,￨3 environment￨3 .￨3 getDomainConfigurationDir￨3 (￨3 )￨3 .￨3 getAbsolutePath￨3 (￨3 )￨3 ,￨3 serviceTarget￨3 )￨3 ;￨3 DomainModelControllerService￨3 .￨3 addService￨3 (￨3 serviceTarget￨3 ,￨3 environment￨3 ,￨3 new￨3 ControlledProcessState￨3 (￨3 false￨3 )￨3 )￨3 ;￨3 }￨2 static￨2 final￨2 class￨2 HostControllerExecutorService￨2 implements￨2 Service￨2 <￨2 Executor￨2 >￨2 {￨2 final￨3 InjectedValue￨3 <￨3 ThreadFactory￨3 >￨3 threadFactoryValue￨3 =￨3 new￨3 InjectedValue￨3 <￨3 ThreadFactory￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 ScheduledExecutorService￨3 executorService￨3 ;￨3 @￨3 Override￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 final￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 final￨4 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 synchronized￨3 ScheduledExecutorService￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
class￨1 AppClientServerConfiguration￨1 {￨1 private￨2 AppClientServerConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 List￨2 <￨2 ModelNode￨2 >￨2 serverConfiguration￨2 (￨2 final￨3 String￨3 filePath￨3 ,￨3 final￨3 String￨3 deploymentName￨3 ,￨3 final￨3 String￨3 globalModules￨3 ,￨3 final￨3 String￨3 hostUrl￨3 ,￨3 final￨3 List￨3 <￨3 String￨3 >￨3 parameters￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 webservices￨2 (￨2 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 appclient￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 ,￨3 final￨3 String￨3 filePath￨3 ,￨3 final￨3 String￨3 deploymentName￨3 ,￨3 final￨3 String￨3 hostUrl￨3 ,￨3 final￨3 List￨3 <￨3 String￨3 >￨3 parameters￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 naming￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 ee￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 ,￨3 final￨3 String￨3 globalModules￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 ejb3￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 security￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 jacorb￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 transactions￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 socketBindings￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 interfaces￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 )￨2 {￨2 ModelNode￨3 add￨3 =￨3 new￨3 ModelNode￨3 (￨3 )￨3 ;￨3 add￨3 .￨3 get￨3 (￨3 OP_ADDR￨3 )￨3 .￨3 set￨3 (￨3 new￨3 ModelNode￨3 (￨3 )￨3 .￨3 setEmptyList￨3 (￨3 )￨3 )￨3 .￨3 add￨3 (￨3 INTERFACE￨3 ,￨3 "public"￨3 )￨3 ;￨3 add￨3 .￨3 get￨3 (￨3 OP￨3 )￨3 .￨3 set￨3 (￨3 ADD￨3 )￨3 ;￨3 <START_BUG>￨3 add￨3 .￨3 get￨3 (￨3 CRITERIA￨3 )￨3 .￨3 add￨3 (￨3 )￨3 .￨3 set￨3 (￨3 "inet-address"￨3 ,￨3 "127.0.0.1"￨3 )￨3 ;￨3 <END_BUG>￨3 nodes￨3 .￨3 add￨3 (￨3 add￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 void￨2 loadExtension￨2 (￨2 List￨3 <￨3 ModelNode￨3 >￨3 nodes￨3 ,￨3 String￨3 moduleName￨3 )￨2 {￨2 }￨2 }￨1
@￨1 Deprecated￨1 public￨1 class￨1 LengthNormModifier￨1 {￨1 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Directory￨2 dir￨2 ;￨2 private￨2 Similarity￨2 sim￨2 ;￨2 public￨2 LengthNormModifier￨2 (￨2 Directory￨3 d￨3 ,￨3 Similarity￨3 s￨3 )￨2 {￨2 }￨2 public￨2 void￨2 reSetNorms￨2 (￨2 String￨2 field￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 String￨3 fieldName￨3 =￨3 StringHelper￨3 .￨3 intern￨3 (￨3 field￨3 )￨3 ;￨3 int￨3 [￨3 ]￨3 termCounts￨3 =￨3 new￨3 int￨3 [￨3 0￨3 ]￨3 ;￨3 IndexReader￨3 reader￨3 =￨3 IndexReader￨3 .￨3 open￨3 (￨3 dir￨3 ,￨3 false￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 termCounts￨4 =￨4 new￨4 int￨4 [￨4 reader￨4 .￨4 maxDoc￨4 (￨4 )￨4 ]￨4 ;￨4 Bits￨4 delDocs￨4 =￨4 MultiFields￨4 .￨4 getDeletedDocs￨4 (￨4 reader￨4 )￨4 ;￨4 DocsEnum￨4 docs￨4 =￨4 null￨4 ;￨4 Terms￨4 terms￨4 =￨4 MultiFields￨4 .￨4 getTerms￨4 (￨4 reader￨4 ,￨4 field￨4 )￨4 ;￨4 if￨4 (￨4 terms￨5 !=￨5 null￨5 )￨4 {￨4 TermsEnum￨5 termsEnum￨5 =￨5 terms￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 (￨6 termsEnum￨6 .￨6 next￨6 (￨6 )￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 docs￨6 =￨6 termsEnum￨6 .￨6 docs￨6 (￨6 delDocs￨6 ,￨6 docs￨6 )￨6 ;￨6 int￨6 doc￨6 ;￨6 while￨6 (￨6 (￨7 doc￨7 =￨7 docs￨7 .￨7 nextDoc￨7 (￨7 )￨7 )￨7 !=￨7 (￨7 DocsEnum￨7 .￨7 NO_MORE_DOCS￨7 )￨7 )￨6 {￨6 termCounts￨7 [￨7 doc￨7 ]￨7 +=￨7 docs￨7 .￨7 freq￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 for￨4 (￨4 int￨5 d￨5 =￨5 0￨5 ;￨5 d￨5 <￨5 (￨5 termCounts￨5 .￨5 length￨5 )￨5 ;￨5 d￨5 ++￨5 )￨4 {￨4 <START_BUG>￨5 if￨5 (￨5 !￨5 (￨5 reader￨5 .￨5 isDeleted￨5 (￨5 d￨5 )￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 byte￨5 norm￨5 =￨5 Similarity￨5 .￨5 encodeNorm￨5 (￨5 sim￨5 .￨5 lengthNorm￨5 (￨5 fieldName￨5 ,￨5 termCounts￨5 [￨5 d￨5 ]￨5 )￨5 )￨5 ;￨5 reader￨5 .￨5 setNorm￨5 (￨5 d￨5 ,￨5 fieldName￨5 ,￨5 norm￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 reader￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 PageResource￨1 extends￨1 WizardPage￨1 implements￨1 Listener￨1 {￨1 public￨2 static￨2 final￨2 String￨2 PAGE_NAME￨2 =￨2 "DecryptPageResource"￨2 ;￨2 private￨2 Button￨2 bOpen￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 bEchoKeyPassword￨2 =￨2 null￨2 ;￨2 private￨2 Button￨2 bEchoKeystorePassword￨2 =￨2 null￨2 ;￨2 private￨2 Combo￨2 cEncryptionId￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeystore￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeystorePassword￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeyName￨2 =￨2 null￨2 ;￨2 private￨2 Text￨2 tKeyPassword￨2 =￨2 null￨2 ;￨2 private￨2 IFile￨2 file￨2 ;￨2 private￨2 Decryption￨2 decryption￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 LABELWIDTH￨2 =￨2 120￨2 ;￨2 public￨2 PageResource￨2 (￨2 final￨3 Decryption￨3 decryption￨3 ,￨3 final￨3 IFile￨3 file￨3 )￨2 {￨2 }￨2 public￨2 void￨2 createControl￨2 (￨2 final￨3 Composite￨3 parent￨3 )￨2 {￨2 }￨2 private￨2 void￨2 createPageContent￨2 (￨2 final￨3 Composite￨3 parent￨3 )￨2 {￨2 }￨2 private￨2 void￨2 determineIds￨2 (￨2 )￨2 {￨2 String￨3 [￨3 ]￨3 ids￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 ids￨4 =￨4 Utils￨4 .￨4 getIds￨4 (￨4 file￨4 ,￨4 "encryption"￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 ids￨4 =￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ;￨4 }￨3 cEncryptionId￨3 .￨3 setItems￨3 (￨3 ids￨3 )￨3 ;￨3 cEncryptionId￨3 .￨3 select￨3 (￨3 0￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 addListeners￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateStatus￨2 (￨2 final￨3 String￨3 message￨3 ,￨3 final￨3 int￨3 status￨3 )￨2 {￨2 }￨2 private￨2 void￨2 dialogChanged￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 handleEvent￨2 (￨2 final￨3 Event￨3 e￨3 )￨2 {￨2 }￨2 private￨2 void￨2 echoPassword￨2 (￨2 final￨3 Event￨3 e￨3 )￨2 {￨2 }￨2 private￨2 void￨2 openKeystore￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPageComplete￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 saveDataToModel￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 loadSettings￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 storeSettings￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 .￨5 indexOf￨5 (￨5 "="￨5 )￨5 ;￨5 if￨5 (￨5 posEq￨6 >￨6 0￨6 )￨5 {￨5 value￨6 =￨6 name￨6 .￨6 substring￨6 (￨6 (￨6 posEq￨6 +￨6 1￨6 )￨6 )￨6 ;￨6 name￨6 =￨6 name￨6 .￨6 substring￨6 (￨6 0￨6 ,￨6 posEq￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 i￨6 <￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 -￨6 1￨6 )￨6 )￨5 {￨5 value￨6 =￨6 args￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 ;￨6 }￨5 else￨5 {￨5 throw￨6 new￨6 BuildException￨6 (￨6 (￨6 "Missing<seq2seq4repair_space>value<seq2seq4repair_space>for<seq2seq4repair_space>property<seq2seq4repair_space>"￨6 +￨6 name￨6 )￨6 )￨6 ;￨6 }￨5 definedProps￨5 .￨5 put￨5 (￨5 name￨5 ,￨5 value￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 equals￨5 (￨5 "-logger"￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 loggerClassname￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 throw￨6 new￨6 BuildException￨6 (￨6 (￨6 "Only<seq2seq4repair_space>one<seq2seq4repair_space>logger<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨6 +￨6 "<seq2seq4repair_space>be<seq2seq4repair_space>specified."￨6 )￨6 )￨6 ;￨6 }￨5 try￨5 (￨5 )￨5 {￨5 loggerClassname￨6 =￨6 args￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 ;￨6 }￨5 catch￨5 (￨5 ArrayIndexOutOfBoundsException￨6 aioobe￨6 )￨5 {￨5 throw￨6 new￨6 BuildException￨6 (￨6 (￨6 "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨6 +￨6 "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-logger<seq2seq4repair_space>argument"￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 equals￨5 (￨5 "-inputhandler"￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 inputHandlerClassname￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 throw￨6 new￨6 BuildException￨6 (￨6 (￨6 "Only<seq2seq4repair_space>one<seq2seq4repair_space>input<seq2seq4repair_space>handler<seq2seq4repair_space>class<seq2seq4repair_space>may<seq2seq4repair_space>"￨6 +￨6 "be<seq2seq4repair_space>specified."￨6 )￨6 )￨6 ;￨6 }￨5 try￨5 (￨5 )￨5 {￨5 inputHandlerClassname￨6 =￨6 args￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 ;￨6 }￨5 catch￨5 (￨5 ArrayIndexOutOfBoundsException￨6 aioobe￨6 )￨5 {￨5 throw￨6 new￨6 BuildException￨6 (￨6 (￨6 "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>classname<seq2seq4repair_space>when"￨6 +￨6 (￨6 "<seq2seq4repair_space>using<seq2seq4repair_space>the<seq2seq4repair_space>-inputhandler"￨6 +￨6 "<seq2seq4repair_space>argument"￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 equals￨5 (￨5 "-emacs"￨5 )￨5 )￨4 {￨4 emacsMode￨5 =￨5 true￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 equals￨5 (￨5 "-projecthelp"￨5 )￨5 )￨4 {￨4 projectHelp￨5 =￨5 true￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 equals￨5 (￨5 "-find"￨5 )￨5 )￨4 {￨4 if￨5 (￨5 i￨6 <￨6 (￨6 (￨6 args￨6 .￨6 length￨6 )￨6 -￨6 1￨6 )￨6 )￨5 {￨5 searchForThis￨6 =￨6 args￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 ;￨6 }￨5 else￨5 {￨5 searchForThis￨6 =￨6 Main￨6 .￨6 DEFAULT_BUILD_FILENAME￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 startsWith￨5 (￨5 "-propertyfile"￨5 )￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 propertyFiles￨6 .￨6 addElement￨6 (￨6 args￨6 [￨6 (￨6 i￨6 +￨6 1￨6 )￨6 ]￨6 )￨6 ;￨6 i￨6 ++￨6 ;￨6 }￨5 catch￨5 (￨5 ArrayIndexOutOfBoundsException￨6 aioobe￨6 )￨5 {￨5 String￨6 msg￨6 =￨6 "You<seq2seq4repair_space>must<seq2seq4repair_space>specify<seq2seq4repair_space>a<seq2seq4repair_space>property<seq2seq4repair_space>filename<seq2seq4repair_space>when<seq2seq4repair_space>"￨6 +￨6 "using<seq2seq4repair_space>the<seq2seq4repair_space>-propertyfile<seq2seq4repair_space>argument"￨6 ;￨6 throw￨6 new￨6 BuildException￨6 (￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 (￨5 arg￨5 .￨5 equals￨5 (￨5 "-k"￨5 )￨5 )￨5 ||￨5 (￨5 arg￨5 .￨5 equals￨5 (￨5 "-keep-going"￨5 )￨5 )￨5 )￨4 {￨4 keepGoingMode￨5 =￨5 true￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 arg￨5 .￨5 startsWith￨5 (￨5 "-"￨5 )￨5 )￨4 {￨4 String￨5 msg￨5 =￨5 "Unknown<seq2seq4repair_space>argument:<seq2seq4repair_space>"￨5 +￨5 arg￨5 ;￨5 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 msg￨5 )￨5 ;￨5 Main￨5 .￨5 printUsage￨5 (￨5 )￨5 ;￨5 throw￨5 new￨5 BuildException￨5 (￨5 ""￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 targets￨5 .￨5 addElement￨5 (￨5 arg￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 buildFile￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 searchForThis￨5 !=￨5 null￨5 )￨4 {￨4 buildFile￨5 =￨5 findBuildFile￨5 (￨5 System￨5 .￨5 getProperty￨5 (￨5 "user.dir"￨5 )￨5 ,￨5 searchForThis￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 buildFile￨5 =￨5 new￨5 File￨5 (￨5 Main￨5 .￨5 DEFAULT_BUILD_FILENAME￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 !￨4 (￨4 buildFile￨4 .￨4 exists￨4 (￨4 )￨4 )￨4 )￨3 {￨3 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 (￨4 "Buildfile:<seq2seq4repair_space>"￨4 +￨4 (￨4 buildFile￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>exist!"￨4 )￨4 )￨4 ;￨4 throw￨4 new￨4 BuildException￨4 (￨4 "Build<seq2seq4repair_space>failed"￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 buildFile￨4 .￨4 isDirectory￨4 (￨4 )￨4 )￨3 {￨3 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 (￨4 "What?<seq2seq4repair_space>Buildfile:<seq2seq4repair_space>"￨4 +￨4 (￨4 buildFile￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>is<seq2seq4repair_space>a<seq2seq4repair_space>dir!"￨4 )￨4 )￨4 ;￨4 throw￨4 new￨4 BuildException￨4 (￨4 "Build<seq2seq4repair_space>failed"￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 int￨4 propertyFileIndex￨4 =￨4 0￨4 ;￨4 propertyFileIndex￨4 <￨4 (￨4 propertyFiles￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 propertyFileIndex￨4 ++￨4 )￨3 {￨3 String￨4 filename￨4 =￨4 (￨4 (￨4 String￨4 )￨4 (￨4 propertyFiles￨4 .￨4 elementAt￨4 (￨4 propertyFileIndex￨4 )￨4 )￨4 )￨4 ;￨4 Properties￨4 props￨4 =￨4 new￨4 Properties￨4 (￨4 )￨4 ;￨4 FileInputStream￨4 fis￨4 =￨4 null￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 fis￨5 =￨5 new￨5 FileInputStream￨5 (￨5 filename￨5 )￨5 ;￨5 props￨5 .￨5 load￨5 (￨5 fis￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 (￨5 (￨5 (￨5 "Could<seq2seq4repair_space>not<seq2seq4repair_space>load<seq2seq4repair_space>property<seq2seq4repair_space>file<seq2seq4repair_space>"￨5 +￨5 filename￨5 )￨5 +￨5 ":<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 e￨5 .￨5 getMessage￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 if￨5 (￨5 fis￨6 !=￨6 null￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 fis￨7 .￨7 close￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IOException￨7 e￨7 )￨6 {￨6 }￨6 }￨5 }￨4 Enumeration￨4 propertyNames￨4 =￨4 props￨4 .￨4 propertyNames￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 propertyNames￨5 .￨5 hasMoreElements￨5 (￨5 )￨5 )￨4 {￨4 String￨5 name￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 propertyNames￨5 .￨5 nextElement￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 definedProps￨6 .￨6 getProperty￨6 (￨6 name￨6 )￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 definedProps￨6 .￨6 put￨6 (￨6 name￨6 ,￨6 props￨6 .￨6 getProperty￨6 (￨6 name￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 (￨4 msgOutputLevel￨4 )￨4 >=￨4 (￨4 Project￨4 .￨4 MSG_INFO￨4 )￨4 )￨3 {￨3 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 "Buildfile:<seq2seq4repair_space>"￨4 +￨4 (￨4 buildFile￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 logTo￨4 !=￨4 null￨4 )￨3 {￨3 Main￨4 .￨4 out￨4 =￨4 logTo￨4 ;￨4 Main￨4 .￨4 err￨4 =￨4 logTo￨4 ;￨4 System￨4 .￨4 setOut￨4 (￨4 Main￨4 .￨4 out￨4 )￨4 ;￨4 <START_BUG>￨4 System￨4 .￨4 setErr￨4 (￨4 Main￨4 .￨4 out￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 readyToRun￨3 =￨3 true￨3 ;￨3 }￨2 private￨2 File￨2 getParentFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 private￨2 File￨2 findBuildFile￨2 (￨2 String￨2 start￨2 ,￨2 String￨2 suffix￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 runBuild￨2 (￨2 ClassLoader￨2 coreLoader￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 addBuildListeners￨2 (￨2 Project￨3 project￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addInputHandler￨2 (￨2 Project￨2 project￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 BuildLogger￨2 createLogger￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printUsage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printVersion￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 antVersion￨2 =￨2 null￨2 ;￨2 public￨2 static￨2 synchronized￨2 String￨2 getAntVersion￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printDescription￨2 (￨2 Project￨3 project￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printTargets￨2 (￨2 Project￨3 project￨3 ,￨3 boolean￨3 printSubTargets￨3 )￨2 {￨2 }￨2 private￨2 static￨2 int￨2 findTargetPosition￨2 (￨2 Vector￨3 names￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printTargets￨2 (￨2 Project￨3 project￨3 ,￨3 Vector￨3 names￨3 ,￨3 Vector￨3 descriptions￨3 ,￨3 String￨3 heading￨3 ,￨3 int￨3 maxlen￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PlatformMBeanResourceUnitTestCase￨1 {￨1 private￨2 static￨2 ServiceContainer￨2 container￨2 ;￨2 private￨2 static￨2 ModelController￨2 controller￨2 ;￨2 private￨2 static￨2 ModelControllerClient￨2 client￨2 ;￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 setupController￨2 (￨2 )￨2 throws￨2 InterruptedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 AfterClass￨2 public￨2 static￨2 void￨2 shutdownServiceContainer￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRootResource￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testBufferPoolMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testClassLoadingMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testCompilationMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testGarbageCollectorMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testMemoryMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testMemoryManagerMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testMemoryPoolMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testOperatingSystemMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Ignore￨2 (￨2 "[AS7-2185]"￨2 )￨2 @￨2 Test￨2 public￨2 void￨2 testPlatformLoggingMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRuntimeMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testThreadingMXBean￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 long￨2 findMainThread￨2 (￨2 ModelNode￨3 result￨3 )￨2 {￨2 }￨2 private￨2 List￨2 <￨2 ModelNode￨2 >￨2 rootWithNamedChildResourceTest￨2 (￨2 final￨2 String￨2 childType￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 PlatformMBeanResourceUnitTestCase￨2 .￨2 DescribedResource￨2 basicResourceTest￨2 (￨2 final￨2 String￨2 type￨2 ,￨2 final￨2 String￨2 name￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validateResource￨2 (￨2 ModelNode￨3 description￨3 ,￨3 ModelNode￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 executeOp￨2 (￨2 ModelNode￨2 op￨2 ,￨2 boolean￨2 expectFailure￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 ModelNode￨3 response￨3 =￨3 PlatformMBeanResourceUnitTestCase￨3 .￨3 client￨3 .￨3 execute￨3 (￨3 op￨3 )￨3 ;￨3 if￨3 (￨3 expectFailure￨4 )￨3 {￨3 Assert￨4 .￨4 assertEquals￨4 (￨4 FAILED￨4 ,￨4 response￨4 .￨4 get￨4 (￨4 OUTCOME￨4 )￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 ;￨4 return￨4 response￨4 .￨4 get￨4 (￨4 FAILURE_DESCRIPTION￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 Assert￨4 .￨4 assertEquals￨4 (￨4 SUCCESS￨4 ,￨4 response￨4 .￨4 get￨4 (￨4 OUTCOME￨4 )￨4 .￨4 asString￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 response￨4 .￨4 get￨4 (￨4 RESULT￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 static￨2 ModelNode￨2 getOperation￨2 (￨2 final￨3 String￨3 opName￨3 ,￨3 final￨3 String￨3 type￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ModelNode￨2 getAddress￨2 (￨2 final￨3 String￨3 type￨3 ,￨3 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 DescribedResource￨2 {￨2 final￨3 ModelNode￨3 description￨3 ;￨3 final￨3 ModelNode￨3 resource￨3 ;￨3 public￨3 DescribedResource￨3 (￨3 ModelNode￨4 description￨4 ,￨4 ModelNode￨4 resource￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 equalsIgnoreCase￨5 (￨5 DOM_CHECK_CHAR_NORMALIZATION￨5 )￨5 )￨5 )￨4 {￨4 if￨5 (￨5 state￨6 )￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "FEATURE_NOT_SUPPORTED"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 NOT_SUPPORTED_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_ELEMENT_CONTENT_WHITESPACE￨5 )￨5 )￨4 {￨4 if￨5 (￨5 !￨6 state￨6 )￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "FEATURE_NOT_SUPPORTED"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 NOT_SUPPORTED_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOMConfigurationImpl￨5 .￨5 SEND_PSVI￨5 )￨5 )￨4 {￨4 if￨5 (￨5 !￨6 state￨6 )￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "FEATURE_NOT_SUPPORTED"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 NOT_SUPPORTED_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_PSVI￨5 )￨5 )￨4 {￨4 features￨5 =￨5 (￨5 (￨5 short￨5 )￨5 (￨5 (￨5 state￨5 )￨5 ?￨5 (￨5 features￨5 )￨5 |￨5 (￨5 DOMConfigurationImpl￨5 .￨5 PSVI￨5 )￨5 :￨5 (￨5 features￨5 )￨5 &￨5 (￨5 ~￨5 (￨5 DOMConfigurationImpl￨5 .￨5 PSVI￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 found￨5 =￨5 false￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 !￨4 found￨4 )￨4 ||￨4 (￨4 !￨4 (￨4 value￨4 instanceof￨4 Boolean￨4 )￨4 )￨4 )￨3 {￨3 found￨4 =￨4 true￨4 ;￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_ERROR_HANDLER￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 value￨6 instanceof￨6 DOMErrorHandler￨6 )￨6 ||￨6 (￨6 value￨6 ==￨6 null￨6 )￨6 )￨5 {￨5 fErrorHandlerWrapper￨6 .￨6 setErrorHandler￨6 (￨6 (￨6 (￨6 DOMErrorHandler￨6 )￨6 (￨6 value￨6 )￨6 )￨6 )￨6 ;￨6 setErrorHandler￨6 (￨6 fErrorHandlerWrapper￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_RESOURCE_RESOLVER￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 value￨6 instanceof￨6 LSResourceResolver￨6 )￨6 ||￨6 (￨6 value￨6 ==￨6 null￨6 )￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 setEntityResolver￨7 (￨7 new￨7 DOMEntityResolverWrapper￨7 (￨7 (￨7 (￨7 LSResourceResolver￨7 )￨7 (￨7 value￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 XMLConfigurationException￨7 e￨7 )￨6 {￨6 }￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_SCHEMA_LOCATION￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 value￨6 instanceof￨6 String￨6 )￨6 ||￨6 (￨6 value￨6 ==￨6 null￨6 )￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 setProperty￨7 (￨7 (￨7 (￨7 Constants￨7 .￨7 JAXP_PROPERTY_PREFIX￨7 )￨7 +￨7 (￨7 Constants￨7 .￨7 SCHEMA_SOURCE￨7 )￨7 )￨7 ,￨7 value￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 XMLConfigurationException￨7 e￨7 )￨6 {￨6 }￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOM_SCHEMA_TYPE￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 value￨6 instanceof￨6 String￨6 )￨6 ||￨6 (￨6 value￨6 ==￨6 null￨6 )￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 if￨7 (￨7 value￨8 ==￨8 null￨8 )￨7 {￨7 setProperty￨8 (￨8 (￨8 (￨8 Constants￨8 .￨8 JAXP_PROPERTY_PREFIX￨8 )￨8 +￨8 (￨8 Constants￨8 .￨8 SCHEMA_LANGUAGE￨8 )￨8 )￨8 ,￨8 null￨8 )￨8 ;￨8 }￨7 else￨7 if￨7 (￨7 value￨8 .￨8 equals￨8 (￨8 NS_XMLSCHEMA￨8 )￨8 )￨7 {￨7 setProperty￨8 (￨8 (￨8 (￨8 Constants￨8 .￨8 JAXP_PROPERTY_PREFIX￨8 )￨8 +￨8 (￨8 Constants￨8 .￨8 SCHEMA_LANGUAGE￨8 )￨8 )￨8 ,￨8 NS_XMLSCHEMA￨8 )￨8 ;￨8 }￨7 else￨7 if￨7 (￨7 value￨8 .￨8 equals￨8 (￨8 NS_DTD￨8 )￨8 )￨7 {￨7 setProperty￨8 (￨8 (￨8 (￨8 Constants￨8 .￨8 JAXP_PROPERTY_PREFIX￨8 )￨8 +￨8 (￨8 Constants￨8 .￨8 SCHEMA_LANGUAGE￨8 )￨8 )￨8 ,￨8 NS_DTD￨8 )￨8 ;￨8 }￨7 }￨6 catch￨6 (￨6 XMLConfigurationException￨7 e￨7 )￨6 {￨6 }￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOMConfigurationImpl￨5 .￨5 ENTITY_RESOLVER￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 value￨6 instanceof￨6 XMLEntityResolver￨6 )￨6 ||￨6 (￨6 value￨6 ==￨6 null￨6 )￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 setEntityResolver￨7 (￨7 (￨7 (￨7 XMLEntityResolver￨7 )￨7 (￨7 value￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 XMLConfigurationException￨7 e￨7 )￨6 {￨6 }￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOMConfigurationImpl￨5 .￨5 SYMBOL_TABLE￨5 )￨5 )￨4 {￨4 if￨5 (￨5 value￨6 instanceof￨6 SymbolTable￨6 )￨5 {￨5 setProperty￨6 (￨6 DOMConfigurationImpl￨6 .￨6 SYMBOL_TABLE￨6 ,￨6 value￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 name￨5 .￨5 equalsIgnoreCase￨5 (￨5 DOMConfigurationImpl￨5 .￨5 GRAMMAR_POOL￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 if￨5 (￨5 value￨5 instanceof￨5 XMLGrammarPool￨5 )￨5 {￨5 <END_BUG>￨5 setProperty￨5 (￨5 DOMConfigurationImpl￨5 .￨5 GRAMMAR_POOL￨5 ,￨5 value￨5 )￨5 ;￨5 else￨5 {￨5 String￨6 msg￨6 =￨6 DOMMessageFormatter￨6 .￨6 formatMessage￨6 (￨6 DOM_DOMAIN￨6 ,￨6 "TYPE_MISMATCH_ERR"￨6 ,￨6 new￨6 Object￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 throw￨6 new￨6 DOMException￨6 (￨6 DOMException￨6 .￨6 TYPE_MISMATCH_ERR￨6 ,￨6 msg￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 String￨5 msg￨5 =￨5 DOMMessageFormatter￨5 .￨5 formatMessage￨5 (￨5 DOM_DOMAIN￨5 ,￨5 "FEATURE_NOT_FOUND"￨5 ,￨5 new￨5 Object￨5 [￨5 ]￨5 (￨5 )￨5 {￨5 }￨5 )￨5 ;￨5 throw￨5 new￨5 DOMException￨5 (￨5 DOMException￨5 .￨5 NOT_FOUND_ERR￨5 ,￨5 msg￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 Object￨2 getParameter￨2 (￨2 String￨2 name￨2 )￨2 throws￨2 DOMException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 canSetParameter￨2 (￨2 String￨3 name￨3 ,￨3 Object￨3 value￨3 )￨2 {￨2 }￨2 public￨2 DOMStringList￨2 getParameterNames￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 reset￨2 (￨2 )￨2 throws￨2 XNIException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 checkProperty￨2 (￨2 String￨2 propertyId￨2 )￨2 throws￨2 XMLConfigurationException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 addComponent￨2 (￨2 XMLComponent￨3 component￨3 )￨2 {￨2 }￨2 protected￨2 ValidationManager￨2 createValidationManager￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 setDTDValidatorFactory￨2 (￨2 String￨3 version￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Driver20￨1 extends￨1 InternalDriver￨1 implements￨1 Driver￨1 {￨1 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 BOOLEAN_CHOICES￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 Class￨2 antiGCDriverManager￨2 ;￨2 public￨2 void￨2 boot￨2 (￨2 boolean￨2 create￨2 ,￨2 Properties￨2 properties￨2 )￨2 throws￨2 StandardException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EmbedResultSet￨2 newEmbedResultSet￨2 (￨2 EmbedConnection￨2 conn￨2 ,￨2 ResultSet￨2 results￨2 ,￨2 boolean￨2 forMetaData￨2 ,￨2 EmbedStatement￨2 statement￨2 ,￨2 boolean￨2 isAtomic￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 BrokeredConnection￨2 newBrokeredConnection￨2 (￨2 BrokeredConnectionControl￨3 control￨3 )￨2 {￨2 }￨2 public￨2 DriverPropertyInfo￨2 [￨2 ]￨2 getPropertyInfo￨2 (￨2 String￨2 url￨2 ,￨2 Properties￨2 info￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 info￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 Boolean￨5 .￨5 valueOf￨5 (￨5 info￨5 .￨5 getProperty￨5 (￨5 SHUTDOWN_ATTR￨5 )￨5 )￨5 .￨5 booleanValue￨5 (￨5 )￨5 )￨4 {￨4 return￨5 new￨5 DriverPropertyInfo￨5 [￨5 0￨5 ]￨5 ;￨5 }￨4 }￨3 String￨3 dbname￨3 =￨3 InternalDriver￨3 .￨3 getDatabaseName￨3 (￨3 url￨3 ,￨3 info￨3 )￨3 ;￨3 FormatableProperties￨3 finfo￨3 =￨3 getAttributes￨3 (￨3 url￨3 ,￨3 info￨3 )￨3 ;￨3 info￨3 =￨3 null￨3 ;￨3 boolean￨3 encryptDB￨3 =￨3 Boolean￨3 .￨3 valueOf￨3 (￨3 finfo￨3 .￨3 getProperty￨3 (￨3 DATA_ENCRYPTION￨3 )￨3 )￨3 .￨3 booleanValue￨3 (￨3 )￨3 ;￨3 String￨3 encryptpassword￨3 =￨3 finfo￨3 .￨3 getProperty￨3 (￨3 BOOT_PASSWORD￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 dbname￨3 .￨3 length￨3 (￨3 )￨3 )￨3 ==￨3 0￨3 )￨3 ||￨3 (￨3 encryptDB￨3 =￨3 true￨3 &&￨3 (￨3 encryptpassword￨3 ==￨3 null￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 connStringAttributes￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 }￨3 ;￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 connBooleanAttributes￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 }￨3 ;￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 connStringSecretAttributes￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 }￨3 ;￨3 DriverPropertyInfo￨3 [￨3 ]￨3 optionsNoDB￨3 =￨3 new￨3 DriverPropertyInfo￨3 [￨3 (￨3 (￨3 connStringAttributes￨3 .￨3 length￨3 )￨3 +￨3 (￨3 connBooleanAttributes￨3 .￨3 length￨3 )￨3 )￨3 +￨3 (￨3 connStringSecretAttributes￨3 .￨3 length￨3 )￨3 ]￨3 ;￨3 int￨3 attrIndex￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 connStringAttributes￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 ,￨4 attrIndex￨4 ++￨4 )￨3 {￨3 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 =￨4 new￨4 DriverPropertyInfo￨4 (￨4 connStringAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 ,￨4 finfo￨4 .￨4 getProperty￨4 (￨4 connStringAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 )￨4 )￨4 ;￨4 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 .￨4 description￨4 =￨4 MessageService￨4 .￨4 getTextMessage￨4 (￨4 connStringAttributes￨4 [￨4 i￨4 ]￨4 [￨4 1￨4 ]￨4 )￨4 ;￨4 }￨3 optionsNoDB￨3 [￨3 0￨3 ]￨3 .￨3 choices￨3 =￨3 Monitor￨3 .￨3 getMonitor￨3 (￨3 )￨3 .￨3 getServiceList￨3 (￨3 DATABASE_MODULE￨3 )￨3 ;￨3 optionsNoDB￨3 [￨3 0￨3 ]￨3 .￨3 value￨3 =￨3 dbname￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 connStringSecretAttributes￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 ,￨4 attrIndex￨4 ++￨4 )￨3 {￨3 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 =￨4 new￨4 DriverPropertyInfo￨4 (￨4 connStringSecretAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 ,￨4 (￨4 (￨4 finfo￨4 .￨4 getProperty￨4 (￨4 connStringSecretAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 )￨4 )￨4 ==￨4 null￨4 ?￨4 ""￨4 :￨4 "****"￨4 )￨4 )￨4 ;￨4 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 .￨4 description￨4 =￨4 MessageService￨4 .￨4 getTextMessage￨4 (￨4 connStringSecretAttributes￨4 [￨4 i￨4 ]￨4 [￨4 1￨4 ]￨4 )￨4 ;￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 connBooleanAttributes￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 ,￨4 attrIndex￨4 ++￨4 )￨3 {￨3 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 =￨4 new￨4 DriverPropertyInfo￨4 (￨4 connBooleanAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 ,￨4 Boolean￨4 .￨4 valueOf￨4 (￨4 (￨4 finfo￨4 ==￨4 null￨4 ?￨4 ""￨4 :￨4 finfo￨4 .￨4 getProperty￨4 (￨4 connBooleanAttributes￨4 [￨4 i￨4 ]￨4 [￨4 0￨4 ]￨4 )￨4 )￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 .￨4 description￨4 =￨4 MessageService￨4 .￨4 getTextMessage￨4 (￨4 connBooleanAttributes￨4 [￨4 i￨4 ]￨4 [￨4 1￨4 ]￨4 )￨4 ;￨4 optionsNoDB￨4 [￨4 attrIndex￨4 ]￨4 .￨4 choices￨4 =￨4 Driver20￨4 .￨4 BOOLEAN_CHOICES￨4 ;￨4 }￨3 return￨3 optionsNoDB￨3 ;￨3 }￨3 return￨3 new￨3 DriverPropertyInfo￨3 [￨3 0￨3 ]￨3 ;￨3 }￨2 public￨2 void￨2 checkSystemPrivileges￨2 (￨2 String￨2 user￨2 ,￨2 Permission￨2 perm￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
@￨1 RunAsClient￨1 @￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 DeploymentTestCase￨1 {￨1 private￨2 static￨2 final￨2 long￨2 TIMEOUT￨2 =￨2 10000￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 WAR_JBOSS_FILE￨2 =￨2 "jboss-web.xml"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JAR_JBOSS_FILE￨2 =￨2 "jboss.xml"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 EAR_JBOSS_FILE￨2 =￨2 "jboss-app.xml"￨2 ;￨2 @￨2 ArquillianResource￨2 private￨2 ManagementClient￨2 managementClient￨2 ;￨2 @￨2 Deployment￨2 public￨2 static￨2 Archive￨2 <￨2 ?￨2 >￨2 fakeDeployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDeployUndeployEAR￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 DeploymentManager￨2 getDeploymentManager￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ProgressObject￨2 jsr88Deploy￨2 (￨2 DeploymentManager￨2 manager￨2 ,￨2 Archive￨2 <￨2 ?￨2 >￨2 archive￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ProgressObject￨2 jsr88Undeploy￨2 (￨2 DeploymentManager￨2 manager￨2 ,￨2 TargetModuleID￨2 [￨2 ]￨2 resultTargetModuleIDs￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 StateType￨2 awaitCompletion￨2 (￨2 ProgressObject￨2 progress￨2 ,￨2 long￨2 timeout￨2 )￨2 throws￨2 InterruptedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertServletAccess￨2 (￨2 String￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 URL￨3 servletURL￨3 =￨3 new￨3 URL￨3 (￨3 (￨3 "http://localhost:8080/"￨3 +￨3 context￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 BufferedReader￨3 br￨3 =￨3 new￨3 BufferedReader￨3 (￨3 new￨3 InputStreamReader￨3 (￨3 servletURL￨3 .￨3 openStream￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 String￨3 message￨3 =￨3 br￨3 .￨3 readLine￨3 (￨3 )￨3 ;￨3 assertEquals￨3 (￨3 "Hello<seq2seq4repair_space>World!"￨3 ,￨3 message￨3 )￨3 ;￨3 }￨2 private￨2 InputStream￨2 createDeploymentPlan￨2 (￨2 String￨2 deploymentFile￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Archive￨2 <￨2 ?￨2 >￨2 getWebArchive￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Archive￨2 <￨2 ?￨2 >￨2 getEjbArchive￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Archive￨2 <￨2 ?￨2 >￨2 getEarArchive￨2 (￨2 )￨2 {￨2 }￨2 }￨1
abstract￨1 class￨1 AbstractTrie￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 extends￨1 AbstractMap￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 implements￨1 Serializable￨1 ,￨1 Trie￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 5826987063535505652L￨2 ;￨2 protected￨2 final￨2 KeyAnalyzer￨2 <￨2 ?￨2 super￨2 K￨2 >￨2 keyAnalyzer￨2 ;￨2 public￨2 AbstractTrie￨2 (￨2 final￨3 KeyAnalyzer￨3 <￨3 ?￨3 super￨3 K￨3 >￨3 keyAnalyzer￨3 )￨2 {￨2 }￨2 public￨2 KeyAnalyzer￨2 <￨2 ?￨2 super￨2 K￨2 >￨2 getKeyAnalyzer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 K￨2 selectKey￨2 (￨2 final￨3 K￨3 key￨3 )￨2 {￨2 }￨2 public￨2 V￨2 selectValue￨2 (￨2 final￨3 K￨3 key￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 final￨2 K￨2 castKey￨2 (￨2 final￨3 Object￨3 key￨3 )￨2 {￨2 }￨2 final￨2 int￨2 lengthInBits￨2 (￨2 final￨3 K￨3 key￨3 )￨2 {￨2 }￨2 final￨2 int￨2 bitsPerElement￨2 (￨2 )￨2 {￨2 }￨2 final￨2 boolean￨2 isBitSet￨2 (￨2 final￨3 K￨3 key￨3 ,￨3 final￨3 int￨3 bitIndex￨3 ,￨3 final￨3 int￨3 lengthInBits￨3 )￨2 {￨2 }￨2 final￨2 int￨2 bitIndex￨2 (￨2 final￨3 K￨3 key￨3 ,￨3 final￨3 K￨3 foundKey￨3 )￨2 {￨2 }￨2 final￨2 boolean￨2 compareKeys￨2 (￨2 final￨3 K￨3 key￨3 ,￨3 final￨3 K￨3 other￨3 )￨2 {￨2 if￨3 (￨3 key￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 other￨4 ==￨4 null￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 other￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 return￨4 key￨4 ==￨4 null￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 (￨3 keyAnalyzer￨3 .￨3 compare￨3 (￨3 key￨3 ,￨3 other￨3 )￨3 )￨3 ==￨3 0￨3 ;￨3 }￨2 static￨2 boolean￨2 compare￨2 (￨2 final￨3 Object￨3 a￨3 ,￨3 final￨3 Object￨3 b￨3 )￨2 {￨2 }￨2 abstract￨2 static￨2 class￨2 BasicEntry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 implements￨2 Serializable￨2 ,￨2 Map￨2 .￨2 Entry￨2 <￨2 K￨2 ,￨2 V￨2 >￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 -￨3 944364551314110330L￨3 ;￨3 protected￨3 K￨3 key￨3 ;￨3 protected￨3 V￨3 value￨3 ;￨3 private￨3 final￨3 int￨3 hashCode￨3 ;￨3 public￨3 BasicEntry￨3 (￨3 final￨4 K￨4 key￨4 )￨3 {￨3 }￨3 public￨3 BasicEntry￨3 (￨3 final￨4 K￨4 key￨4 ,￨4 final￨4 V￨4 value￨4 )￨3 {￨3 }￨3 public￨3 V￨3 setKeyValue￨3 (￨3 final￨4 K￨4 key￨4 ,￨4 final￨4 V￨4 value￨4 )￨3 {￨3 }￨3 public￨3 K￨3 getKey￨3 (￨3 )￨3 {￨3 }￨3 public￨3 V￨3 getValue￨3 (￨3 )￨3 {￨3 }￨3 public￨3 V￨3 setValue￨3 (￨3 final￨4 V￨4 value￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 equals￨3 (￨3 final￨4 Object￨4 o￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 String￨3 toString￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 Submitter￨1 {￨1 public￨2 static￨2 final￨2 int￨2 STOCK_LEVEL￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 ORDER_STATUS_BY_NAME￨2 =￨2 1￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 ORDER_STATUS_BY_ID￨2 =￨2 2￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 PAYMENT_BY_NAME￨2 =￨2 3￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 PAYMENT_BY_ID￨2 =￨2 4￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 DELIVERY_SCHEDULE￨2 =￨2 5￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 NEW_ORDER￨2 =￨2 6￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 NEW_ORDER_ROLLBACK￨2 =￨2 7￨2 ;￨2 private￨2 final￨2 Display￨2 display￨2 ;￨2 private￨2 final￨2 Operations￨2 ops￨2 ;￨2 private￨2 final￨2 OERandom￨2 rand￨2 ;￨2 private￨2 final￨2 short￨2 maxW￨2 ;￨2 private￨2 final￨2 int￨2 [￨2 ]￨2 transactionCount￨2 ;￨2 public￨2 static￨2 OERandom￨2 getRuntimeRandom￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 stockLevelOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 orderStatusByIdOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 orderStatusByNameOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 paymentByIdOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 paymentByNameOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Submitter￨2 newOrderOnly￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 Submitter￨2 (￨2 Display￨3 display￨3 ,￨3 Operations￨3 ops￨3 ,￨3 OERandom￨3 rand￨3 ,￨3 short￨3 maxW￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clearTransactionCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 runTransactions￨2 (￨2 final￨2 Object￨2 displayData￨2 ,￨2 final￨2 int￨2 count￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 runTransaction￨2 (￨2 final￨2 Object￨2 displayData￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 mixType￨2 (￨2 final￨3 int￨3 chooseType￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 runNewOrder￨2 (￨2 Object￨2 displayData￨2 ,￨2 boolean￨2 forRollback￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 short￨3 homeWarehouse￨3 =￨3 warehouse￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 orderItemCount￨3 =￨3 rand￨3 .￨3 randomInt￨3 (￨3 5￨3 ,￨3 15￨3 )￨3 ;￨3 int￨3 [￨3 ]￨3 items￨3 =￨3 new￨3 int￨3 [￨3 orderItemCount￨3 ]￨3 ;￨3 short￨3 [￨3 ]￨3 quantities￨3 =￨3 new￨3 short￨3 [￨3 orderItemCount￨3 ]￨3 ;￨3 short￨3 [￨3 ]￨3 supplyW￨3 =￨3 new￨3 short￨3 [￨3 orderItemCount￨3 ]￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 orderItemCount￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 items￨4 [￨4 i￨4 ]￨4 =￨4 rand￨4 .￨4 NURand8191￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 maxW￨5 )￨5 ==￨5 1￨5 )￨5 ||￨5 (￨5 (￨5 rand￨5 .￨5 randomInt￨5 (￨5 1￨5 ,￨5 100￨5 )￨5 )￨5 >￨5 1￨5 )￨5 )￨4 {￨4 supplyW￨5 [￨5 i￨5 ]￨5 =￨5 homeWarehouse￨5 ;￨5 }￨4 else￨4 {￨4 short￨5 sw￨5 =￨5 warehouse￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 sw￨6 ==￨6 homeWarehouse￨6 )￨5 {￨5 sw￨6 =￨6 warehouse￨6 (￨6 )￨6 ;￨6 }￨5 supplyW￨5 [￨5 i￨5 ]￨5 =￨5 sw￨5 ;￨5 }￨4 supplyW￨4 [￨4 i￨4 ]￨4 =￨4 (￨4 (￨4 rand￨4 .￨4 randomInt￨4 (￨4 1￨4 ,￨4 100￨4 )￨4 )￨4 >￨4 1￨4 )￨4 ?￨4 homeWarehouse￨4 :￨4 warehouse￨4 (￨4 )￨4 ;￨4 quantities￨4 [￨4 i￨4 ]￨4 =￨4 (￨4 (￨4 short￨4 )￨4 (￨4 rand￨4 .￨4 randomInt￨4 (￨4 1￨4 ,￨4 10￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 forRollback￨4 )￨3 {￨3 <START_BUG>￨4 items￨4 [￨4 orderItemCount￨4 ]￨4 =￨4 2334432￨4 ;￨4 <END_BUG>￨4 }￨3 ops￨3 .￨3 newOrder￨3 (￨3 display￨3 ,￨3 displayData￨3 ,￨3 homeWarehouse￨3 ,￨3 rand￨3 .￨3 district￨3 (￨3 )￨3 ,￨3 rand￨3 .￨3 NURand1023￨3 (￨3 )￨3 ,￨3 items￨3 ,￨3 quantities￨3 ,￨3 supplyW￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 runScheduleDelivery￨2 (￨2 Object￨3 displayData￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 runPayment￨2 (￨2 Object￨2 displayData￨2 ,￨2 boolean￨2 byName￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 short￨2 warehouse￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 runStockLevel￨2 (￨2 Object￨2 displayData￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 runOrderStatus￨2 (￨2 Object￨2 displayData￨2 ,￨2 boolean￨2 byName￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 printReport￨2 (￨2 PrintStream￨3 out￨3 )￨2 {￨2 }￨2 private￨2 String￨2 transactionCount￨2 (￨2 String￨3 name￨3 ,￨3 int￨3 count￨3 ,￨3 int￨3 total￨3 )￨2 {￨2 }￨2 private￨2 String￨2 percent￨2 (￨2 int￨3 count￨3 ,￨3 int￨3 total￨3 )￨2 {￨2 }￨2 public￨2 int￨2 [￨2 ]￨2 getTransactionCount￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestCalendarFields￨1 extends￨1 BaseKernelTest￨1 {￨1 public￨2 TestCalendarFields￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFieldDefaultTimeZone￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeZoneEquals￨2 (￨2 )￨2 {￨2 CalendarFields￨3 c1￨3 =￨3 new￨3 CalendarFields￨3 (￨3 )￨3 ;￨3 CalendarFields￨3 c2￨3 =￨3 new￨3 CalendarFields￨3 (￨3 )￨3 ;￨3 assertTimeZonesEquals￨3 (￨3 c1￨3 ,￨3 c2￨3 )￨3 ;￨3 OpenJPAEntityManager￨3 pm￨3 ;￨3 pm￨3 =￨3 getPM￨3 (￨3 )￨3 ;￨3 startTx￨3 (￨3 pm￨3 )￨3 ;￨3 pm￨3 .￨3 persist￨3 (￨3 c2￨3 )￨3 ;￨3 int￨3 id2￨3 =￨3 c2￨3 .￨3 getId￨3 (￨3 )￨3 ;￨3 assertTimeZonesEquals￨3 (￨3 c1￨3 ,￨3 c2￨3 )￨3 ;￨3 endTx￨3 (￨3 pm￨3 )￨3 ;￨3 assertTimeZonesEquals￨3 (￨3 c1￨3 ,￨3 c2￨3 )￨3 ;￨3 endEm￨3 (￨3 pm￨3 )￨3 ;￨3 pm￨3 =￨3 getPM￨3 (￨3 )￨3 ;￨3 c2￨3 =￨3 (￨3 (￨3 CalendarFields￨3 )￨3 (￨3 pm￨3 .￨3 find￨3 (￨3 CalendarFields￨3 .￨3 class￨3 ,￨3 id2￨3 )￨3 )￨3 )￨3 ;￨3 assertTimeZonesEquals￨3 (￨3 c1￨3 ,￨3 c2￨3 )￨3 ;￨3 <START_BUG>￨3 assertTimeZonesEquals￨3 (￨3 c1￨3 ,￨3 (￨3 (￨3 CalendarFields￨3 )￨3 (￨3 pm￨3 .￨3 detach￨3 (￨3 c2￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 endEm￨3 (￨3 pm￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 testCalendarQuery￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Calendar￨2 newCalendar￨2 (￨2 Date￨3 date￨3 ,￨3 String￨3 tz￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testMutateCalendarDirties￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 setTimeInMillis￨2 (￨2 Calendar￨3 cal￨3 ,￨3 long￨3 millis￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertTimeZonesEquals￨2 (￨2 CalendarFields￨3 c1￨3 ,￨3 CalendarFields￨3 c2￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Argument￨1 extends￨1 LocalDeclaration￨1 {￨1 private￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 SET￨2 =￨2 "set"￨2 .￨2 toCharArray￨2 (￨2 )￨2 ;￨2 public￨2 Argument￨2 (￨2 char￨3 [￨3 ]￨3 name￨3 ,￨3 long￨3 posNom￨3 ,￨3 TypeReference￨3 tr￨3 ,￨3 int￨3 modifiers￨3 )￨2 {￨2 }￨2 public￨2 void￨2 bind￨2 (￨2 MethodScope￨3 scope￨3 ,￨3 TypeBinding￨3 typeBinding￨3 ,￨3 boolean￨3 used￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getKind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVarArgs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 print￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveForCatch￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 TypeBinding￨3 exceptionType￨3 =￨3 this￨3 .￨3 type￨3 .￨3 resolveType￨3 (￨3 scope￨3 ,￨3 true￨3 )￨3 ;￨3 boolean￨3 hasError￨3 ;￨3 if￨3 (￨3 exceptionType￨4 ==￨4 null￨4 )￨3 {￨3 hasError￨4 =￨4 true￨4 ;￨4 }￨3 else￨3 {￨3 hasError￨4 =￨4 false￨4 ;￨4 switch￨4 (￨4 exceptionType￨4 .￨4 kind￨4 (￨4 )￨4 )￨4 {￨4 case￨5 Binding￨5 .￨5 PARAMETERIZED_TYPE￨5 :￨5 if￨6 (￨6 exceptionType￨7 .￨7 isBoundParameterizedType￨7 (￨7 )￨7 )￨6 {￨6 hasError￨7 =￨7 true￨7 ;￨7 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 invalidParameterizedExceptionType￨7 (￨7 exceptionType￨7 ,￨7 this￨7 )￨7 ;￨7 }￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 TYPE_PARAMETER￨5 :￨5 scope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 invalidTypeVariableAsException￨6 (￨6 exceptionType￨6 ,￨6 this￨6 )￨6 ;￨6 hasError￨6 =￨6 true￨6 ;￨6 break￨6 ;￨6 case￨5 Binding￨5 .￨5 ARRAY_TYPE￨5 :￨5 if￨6 (￨6 (￨7 (￨7 (￨7 ArrayBinding￨7 )￨7 (￨7 exceptionType￨7 )￨7 )￨7 .￨7 leafComponentType￨7 )￨7 ==￨7 (￨7 TypeBinding￨7 .￨7 VOID￨7 )￨7 )￨6 {￨6 scope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 variableTypeCannotBeVoidArray￨7 (￨7 this￨7 )￨7 ;￨7 hasError￨7 =￨7 true￨7 ;￨7 }￨6 break￨6 ;￨6 }￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 exceptionType￨4 .￨4 findSuperTypeOriginatingFrom￨4 (￨4 TypeIds￨4 .￨4 T_JavaLangThrowable￨4 ,￨4 true￨4 )￨4 )￨4 ==￨4 null￨4 )￨4 {￨4 <END_BUG>￨4 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 cannotThrowType￨4 (￨4 this￨4 .￨4 type￨4 ,￨4 exceptionType￨4 )￨4 ;￨4 hasError￨4 =￨4 true￨4 ;￨4 }￨3 Binding￨3 existingVariable￨3 =￨3 scope￨3 .￨3 getBinding￨3 (￨3 name￨3 ,￨3 Binding￨3 .￨3 VARIABLE￨3 ,￨3 this￨3 ,￨3 false￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 existingVariable￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 existingVariable￨4 .￨4 isValidBinding￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 existingVariable￨5 instanceof￨5 LocalVariableBinding￨5 )￨5 &&￨5 (￨5 (￨5 this￨5 .￨5 hiddenVariableDepth￨5 )￨5 ==￨5 0￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 redefineArgument￨5 (￨5 this￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 localVariableHiding￨5 (￨5 this￨5 ,￨5 existingVariable￨5 ,￨5 false￨5 )￨5 ;￨5 }￨4 }￨3 this￨3 .￨3 binding￨3 =￨3 new￨3 LocalVariableBinding￨3 (￨3 this￨3 ,￨3 exceptionType￨3 ,￨3 modifiers￨3 ,￨3 false￨3 )￨3 ;￨3 ASTNode￨3 .￨3 resolveAnnotations￨3 (￨3 scope￨3 ,￨3 this￨3 .￨3 annotations￨3 ,￨3 this￨3 .￨3 binding￨3 )￨3 ;￨3 scope￨3 .￨3 addLocalVariable￨3 (￨3 binding￨3 )￨3 ;￨3 binding￨3 .￨3 setConstant￨3 (￨3 Constant￨3 .￨3 NotAConstant￨3 )￨3 ;￨3 if￨3 (￨3 hasError￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 return￨3 exceptionType￨3 ;￨3 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
@￨1 ThreadLeakScope￨1 (￨1 Scope￨1 .￨1 NONE￨1 )￨1 public￨1 class￨1 HdfsLockFactoryTest￨1 extends￨1 SolrTestCaseJ4￨1 {￨1 private￨2 static￨2 MiniDFSCluster￨2 dfsCluster￨2 ;￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 beforeClass￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 AfterClass￨2 public￨2 static￨2 void￨2 afterClass￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Before￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 After￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testBasic￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 URI￨3 uri￨3 =￨3 HdfsLockFactoryTest￨3 .￨3 dfsCluster￨3 .￨3 getURI￨3 (￨3 )￨3 ;￨3 Path￨3 lockPath￨3 =￨3 new￨3 Path￨3 (￨3 uri￨3 .￨3 toString￨3 (￨3 )￨3 ,￨3 "/basedir/lock"￨3 )￨3 ;￨3 HdfsLockFactory￨3 lockFactory￨3 =￨3 new￨3 HdfsLockFactory￨3 (￨3 lockPath￨3 ,￨3 new￨3 Configuration￨3 (￨3 )￨3 )￨3 ;￨3 Lock￨3 lock￨3 =￨3 lockFactory￨3 .￨3 makeLock￨3 (￨3 "testlock"￨3 )￨3 ;￨3 boolean￨3 success￨3 =￨3 lock￨3 .￨3 obtain￨3 (￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨3 ,￨3 success￨3 )￨3 ;￨3 success￨3 =￨3 lock￨3 .￨3 obtain￨3 (￨3 )￨3 ;￨3 assertFalse￨3 (￨3 "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨3 ,￨3 success￨3 )￨3 ;￨3 <START_BUG>￨3 lock￨3 .￨3 release￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 success￨3 =￨3 lock￨3 .￨3 obtain￨3 (￨3 )￨3 ;￨3 assertTrue￨3 (￨3 "We<seq2seq4repair_space>could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>when<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>available"￨3 ,￨3 success￨3 )￨3 ;￨3 success￨3 =￨3 lock￨3 .￨3 obtain￨3 (￨3 )￨3 ;￨3 assertFalse￨3 (￨3 "We<seq2seq4repair_space>got<seq2seq4repair_space>the<seq2seq4repair_space>lock<seq2seq4repair_space>but<seq2seq4repair_space>it<seq2seq4repair_space>should<seq2seq4repair_space>be<seq2seq4repair_space>unavailble"￨3 ,￨3 success￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 RemotingExtension￨1 implements￨1 Extension￨1 {￨1 private￨2 static￨2 final￨2 SubsystemFactory￨2 <￨2 RemotingSubsystemElement￨2 >￨2 FACTORY￨2 =￨2 new￨2 SubsystemFactory￨2 <￨2 RemotingSubsystemElement￨2 >￨2 (￨2 )￨2 (￨2 )￨2 {￨2 public￨3 RemotingSubsystemElement￨3 createSubsystemElement￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 void￨2 initialize￨2 (￨2 ExtensionContext￨3 context￨3 )￨2 {￨2 <START_BUG>￨3 context￨3 .￨3 registerSubsystem￨3 (￨3 REMOTING_1_0￨3 .￨3 getUriString￨3 (￨3 )￨3 ,￨3 RemotingExtension￨3 .￨3 FACTORY￨3 ,￨3 RemotingSubsystemParser￨3 .￨3 getInstance￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 activate￨2 (￨2 final￨3 ServiceActivatorContext￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 URLCodec￨1 implements￨1 BinaryDecoder￨1 ,￨1 BinaryEncoder￨1 ,￨1 StringDecoder￨1 ,￨1 StringEncoder￨1 {￨1 private￨2 static￨2 final￨2 int￨2 RADIX￨2 =￨2 16￨2 ;￨2 protected￨2 String￨2 charset￨2 ;￨2 protected￨2 static￨2 byte￨2 ESCAPE_CHAR￨2 =￨2 '%'￨2 ;￨2 protected￨2 static￨2 final￨2 BitSet￨2 WWW_FORM_URL￨2 =￨2 new￨2 BitSet￨2 (￨2 256￨2 )￨2 ;￨2 public￨2 URLCodec￨2 (￨2 )￨2 {￨2 }￨2 public￨2 URLCodec￨2 (￨2 String￨3 charset￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 byte￨2 [￨2 ]￨2 encodeUrl￨2 (￨2 BitSet￨3 urlsafe￨3 ,￨3 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 byte￨2 [￨2 ]￨2 decodeUrl￨2 (￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 bytes￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 ByteArrayOutputStream￨3 buffer￨3 =￨3 new￨3 ByteArrayOutputStream￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 bytes￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 int￨4 b￨4 =￨4 bytes￨4 [￨4 i￨4 ]￨4 ;￨4 if￨4 (￨4 b￨5 ==￨5 '+'￨5 )￨4 {￨4 buffer￨5 .￨5 write￨5 (￨5 '<seq2seq4repair_space>'￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 b￨5 ==￨5 '%'￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 int￨6 u￨6 =￨6 URLCodec￨6 .￨6 toCharacterDigit￨6 (￨6 bytes￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 )￨6 ;￨6 int￨6 l￨6 =￨6 URLCodec￨6 .￨6 toCharacterDigit￨6 (￨6 bytes￨6 [￨6 (￨6 ++￨6 i￨6 )￨6 ]￨6 )￨6 ;￨6 buffer￨6 .￨6 write￨6 (￨6 (￨6 (￨6 char￨6 )￨6 (￨6 (￨6 u￨6 <<￨6 4￨6 )￨6 +￨6 l￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 ArrayIndexOutOfBoundsException￨6 e￨6 )￨5 {￨5 <START_BUG>￨6 throw￨6 new￨6 DecoderException￨6 (￨6 "Invalid<seq2seq4repair_space>URL<seq2seq4repair_space>encoding:<seq2seq4repair_space>"￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 else￨4 {￨4 buffer￨5 .￨5 write￨5 (￨5 b￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 buffer￨3 .￨3 toByteArray￨3 (￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 int￨2 toCharacterDigit￨2 (￨2 byte￨2 b￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 encode￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 decode￨2 (￨2 byte￨2 [￨2 ]￨2 bytes￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 encode￨2 (￨2 String￨2 pString￨2 ,￨2 String￨2 charset￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 encode￨2 (￨2 String￨2 pString￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 decode￨2 (￨2 String￨2 pString￨2 ,￨2 String￨2 charset￨2 )￨2 throws￨2 UnsupportedEncodingException￨2 ,￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 decode￨2 (￨2 String￨2 pString￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 encode￨2 (￨2 Object￨2 pObject￨2 )￨2 throws￨2 EncoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 decode￨2 (￨2 Object￨2 pObject￨2 )￨2 throws￨2 DecoderException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getEncoding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDefaultCharset￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 SingleSignOnAdd￨1 extends￨1 AbstractAddStepHandler￨1 {￨1 @￨2 Override￨2 protected￨2 void￨2 populateModel￨2 (￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 PathAddress￨3 address￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 ;￨3 final￨3 PathAddress￨3 hostAddress￨3 =￨3 address￨3 .￨3 subAddress￨3 (￨3 0￨3 ,￨3 (￨3 (￨3 address￨3 .￨3 size￨3 (￨3 )￨3 )￨3 -￨3 1￨3 )￨3 )￨3 ;￨3 final￨3 PathAddress￨3 serverAddress￨3 =￨3 hostAddress￨3 .￨3 subAddress￨3 (￨3 0￨3 ,￨3 (￨3 (￨3 hostAddress￨3 .￨3 size￨3 (￨3 )￨3 )￨3 -￨3 1￨3 )￨3 )￨3 ;￨3 final￨3 ModelNode￨3 domainModelNode￨3 =￨3 DOMAIN￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 ;￨3 final￨3 ModelNode￨3 pathNode￨3 =￨3 PATH￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 ;￨3 final￨3 String￨3 domain￨3 =￨3 (￨3 domainModelNode￨3 .￨3 isDefined￨3 (￨3 )￨3 )￨3 ?￨3 domainModelNode￨3 .￨3 asString￨3 (￨3 )￨3 :￨3 null￨3 ;￨3 final￨3 String￨3 path￨3 =￨3 (￨3 pathNode￨3 .￨3 isDefined￨3 (￨3 )￨3 )￨3 ?￨3 pathNode￨3 .￨3 asString￨3 (￨3 )￨3 :￨3 null￨3 ;￨3 final￨3 boolean￨3 secure￨3 =￨3 SECURE￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 .￨3 asBoolean￨3 (￨3 )￨3 ;￨3 final￨3 boolean￨3 httpOnly￨3 =￨3 HTTP_ONLY￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 .￨3 asBoolean￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 cookieName￨3 =￨3 COOKIE_NAME￨3 .￨3 resolveModelAttribute￨3 (￨3 context￨3 ,￨3 model￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 serverName￨3 =￨3 serverAddress￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 hostName￨3 =￨3 hostAddress￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 ServiceName￨3 serviceName￨3 =￨3 UndertowService￨3 .￨3 ssoServiceName￨3 (￨3 serverName￨3 ,￨3 hostName￨3 )￨3 ;￨3 final￨3 ServiceName￨3 virtualHostServiceName￨3 =￨3 UndertowService￨3 .￨3 virtualHostName￨3 (￨3 serverName￨3 ,￨3 hostName￨3 )￨3 ;￨3 final￨3 ServiceTarget￨3 target￨3 =￨3 context￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 ServiceName￨3 managerServiceName￨3 =￨3 serviceName￨3 .￨3 append￨3 (￨3 "manager"￨3 )￨3 ;￨3 <START_BUG>￨3 SingleSignOnManagerService￨3 .￨3 build￨3 (￨3 target￨3 ,￨3 managerServiceName￨3 ,￨3 virtualHostServiceName￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ON_DEMAND￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 SingleSignOnService￨3 service￨3 =￨3 new￨3 SingleSignOnService￨3 (￨3 domain￨3 ,￨3 path￨3 ,￨3 httpOnly￨3 ,￨3 secure￨3 ,￨3 cookieName￨3 )￨3 ;￨3 target￨3 .￨3 addService￨3 (￨3 serviceName￨3 ,￨3 service￨3 )￨3 .￨3 addDependency￨3 (￨3 virtualHostServiceName￨3 ,￨3 Host￨3 .￨3 class￨3 ,￨3 service￨3 .￨3 getHost￨3 (￨3 )￨3 )￨3 .￨3 addDependency￨3 (￨3 managerServiceName￨3 ,￨3 SingleSignOnManager￨3 .￨3 class￨3 ,￨3 service￨3 .￨3 getSingleSignOnSessionManager￨3 (￨3 )￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ACTIVE￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 FeedbackPanel￨1 extends￨1 Panel￨1 implements￨1 IValidationFeedback￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 -￨2 3385823935971399988L￨2 ;￨2 private￨2 final￨2 FeedbackPanel￨2 .￨2 MessageListView￨2 messageListView￨2 ;￨2 private￨2 static￨2 final￨2 class￨2 MessageListView￨2 extends￨2 ListView￨2 {￨2 public￨3 MessageListView￨3 (￨3 final￨4 String￨4 name￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 populateItem￨3 (￨3 final￨4 ListItem￨4 listItem￨4 )￨3 {￨3 }￨3 }￨2 public￨2 FeedbackPanel￨2 (￨2 final￨3 String￨3 componentName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaxMessages￨2 (￨2 int￨3 maxMessages￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateValidationFeedback￨2 (￨2 final￨3 Form￨3 form￨3 )￨2 {￨2 messageListView￨3 .￨3 setModel￨3 (￨3 getPage￨3 (￨3 )￨3 .￨3 getFeedbackMessages￨3 (￨3 )￨3 .￨3 model￨3 (￨3 form￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 messageListView￨3 .￨3 invalidateModel￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 DynamicFilterTest￨1 extends￨1 BuildFileTest￨1 {￨1 public￨2 DynamicFilterTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCustomFilter￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertStringContains￨2 (￨2 String￨3 string￨3 ,￨3 String￨3 contains￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertStringNotContains￨2 (￨2 String￨3 string￨3 ,￨3 String￨3 contains￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getFileString￨2 (￨2 String￨2 filename￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 Reader￨3 r￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 r￨4 =￨4 new￨4 FileReader￨4 (￨4 getProject￨4 (￨4 )￨4 .￨4 resolveFile￨4 (￨4 filename￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 return￨4 FileUtils￨4 .￨4 newFileUtils￨4 (￨4 )￨4 .￨4 readFully￨4 (￨4 r￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 r￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Throwable￨5 ignore￨5 )￨4 {￨4 }￨4 }￨3 }￨2 private￨2 String￨2 getFileString￨2 (￨2 String￨2 target￨2 ,￨2 String￨2 filename￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 expectFileContains￨2 (￨2 String￨2 name￨2 ,￨2 String￨2 contains￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 expectFileContains￨2 (￨2 String￨2 target￨2 ,￨2 String￨2 name￨2 ,￨2 String￨2 contains￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 CustomFilter￨2 implements￨2 ChainableReader￨2 {￨2 char￨3 replace￨3 =￨3 'x'￨3 ;￨3 char￨3 with￨3 =￨3 'y'￨3 ;￨3 public￨3 void￨3 setReplace￨3 (￨3 char￨4 replace￨4 )￨3 {￨3 }￨3 public￨3 void￨3 setWith￨3 (￨3 char￨4 with￨4 )￨3 {￨3 }￨3 public￨3 Reader￨3 chain￨3 (￨3 final￨4 Reader￨4 rdr￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 SecurityDependencyProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 public￨2 static￨2 final￨2 ModuleIdentifier￨2 PICKETBOX_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 PICKETBOX￨2 .￨2 getName￨2 (￨2 )￨2 ,￨2 PICKETBOX￨2 .￨2 getSlot￨2 (￨2 )￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 final￨3 ModuleLoader￨3 moduleLoader￨3 =￨3 Module￨3 .￨3 getBootModuleLoader￨3 (￨3 )￨3 ;￨3 final￨3 ModuleSpecification￨3 moduleSpecification￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 MODULE_SPECIFICATION￨3 )￨3 ;￨3 <START_BUG>￨3 moduleSpecification￨3 .￨3 addDependency￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 server￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 moduleLoader￨3 ,￨3 SecurityDependencyProcessor￨3 .￨3 PICKETBOX_ID￨3 ,￨3 false￨3 ,￨3 true￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BoundedQueueThreadPoolService￨1 implements￨1 Service￨1 <￨1 ManagedQueueExecutorService￨1 >￨1 {￨1 private￨2 final￨2 InjectedValue￨2 <￨2 ThreadFactory￨2 >￨2 threadFactoryValue￨2 =￨2 new￨2 InjectedValue￨2 <￨2 ThreadFactory￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 Executor￨2 >￨2 handoffExecutorValue￨2 =￨2 new￨2 InjectedValue￨2 <￨2 Executor￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 ManagedQueueExecutorService￨2 executor￨2 ;￨2 private￨2 int￨2 coreThreads￨2 ;￨2 private￨2 int￨2 maxThreads￨2 ;￨2 private￨2 int￨2 queueLength￨2 ;￨2 private￨2 boolean￨2 blocking￨2 ;￨2 private￨2 TimeSpec￨2 keepAlive￨2 ;￨2 private￨2 boolean￨2 allowCoreTimeout￨2 ;￨2 public￨2 BoundedQueueThreadPoolService￨2 (￨2 int￨3 coreThreads￨3 ,￨3 int￨3 maxThreads￨3 ,￨3 int￨3 queueLength￨3 ,￨3 boolean￨3 blocking￨3 ,￨3 TimeSpec￨3 keepAlive￨3 ,￨3 boolean￨3 allowCoreTimeout￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 start￨2 (￨2 final￨2 StartContext￨2 context￨2 )￨2 throws￨2 StartException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 stop￨2 (￨2 final￨3 StopContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 ManagedQueueExecutorService￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 final￨3 ManagedQueueExecutorService￨3 value￨3 =￨3 this￨3 .￨3 executor￨3 ;￨3 if￨3 (￨3 value￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 ROOT_LOGGER￨4 .￨4 boundedQueueThreadPoolExecutorUninitialized￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 return￨3 value￨3 ;￨3 }￨2 public￨2 Injector￨2 <￨2 ThreadFactory￨2 >￨2 getThreadFactoryInjector￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Injector￨2 <￨2 Executor￨2 >￨2 getHandoffExecutorInjector￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setCoreThreads￨2 (￨2 int￨3 coreThreads￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setMaxThreads￨2 (￨2 int￨3 maxThreads￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setKeepAlive￨2 (￨2 TimeSpec￨3 keepAlive￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 setAllowCoreTimeout￨2 (￨2 boolean￨3 allowCoreTimeout￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getCurrentThreadCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getLargestThreadCount￨2 (￨2 )￨2 {￨2 }￨2 TimeUnit￨2 getKeepAliveUnit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getRejectedCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getQueueSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 public￨2 void￨2 addSysproperty￨2 (￨2 Environment￨3 .￨3 Variable￨3 sysp￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addConfiguredSysproperty￨2 (￨2 Environment￨3 .￨3 Variable￨3 sysp￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSyspropertyset￨2 (￨2 PropertySet￨3 sysp￨3 )￨2 {￨2 }￨2 public￨2 Path￨2 createClasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 createBootclasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addEnv￨2 (￨2 Environment￨3 .￨3 Variable￨3 var￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setNewenvironment￨2 (￨2 boolean￨3 newenv￨3 )￨2 {￨2 }￨2 private￨2 void￨2 preConfigure￨2 (￨2 BaseTest￨3 test￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTest￨2 (￨2 JUnitTest￨3 test￨3 )￨2 {￨2 }￨2 public￨2 BatchTest￨2 createBatchTest￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addFormatter￨2 (￨2 FormatterElement￨3 fe￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludeantruntime￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setShowOutput￨2 (￨2 boolean￨3 showOutput￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setOutputToFormatters￨2 (￨2 boolean￨3 outputToFormatters￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLogFailedTests￨2 (￨2 boolean￨3 logFailedTests￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addAssertions￨2 (￨2 Assertions￨3 asserts￨3 )￨2 {￨2 }￨2 public￨2 Permissions￨2 createPermissions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCloneVm￨2 (￨2 boolean￨3 cloneVm￨3 )￨2 {￨2 }￨2 public￨2 JUnitTask￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTempdir￨2 (￨2 File￨3 tmpDir￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEnableTestListenerEvents￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getEnableTestListenerEvents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 JUnitTaskMirror￨2 createMirror￨2 (￨2 JUnitTask￨3 task￨3 ,￨3 ClassLoader￨3 loader￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setupJUnitDelegate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 execute￨2 (￨2 JUnitTest￨2 arg￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validateTestName￨2 (￨2 String￨2 testName￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 execute￨2 (￨2 List￨2 testList￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JUnitTask￨2 .￨2 TestResultHolder￨2 executeAsForked￨2 (￨2 JUnitTest￨2 test￨2 ,￨2 ExecuteWatchdog￨2 watchdog￨2 ,￨2 File￨2 casesFile￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkIncludeAntRuntime￨2 (￨2 CommandlineJava￨3 cmd￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 equalsWithOutAndErr￨2 (￨2 String￨3 summaryOption￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkIncludeSummary￨2 (￨2 CommandlineJava￨3 cmd￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkForkedPath￨2 (￨2 CommandlineJava￨3 cmd￨3 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 urlEquals￨2 (￨2 URL￨3 u1￨3 ,￨3 URL￨3 u2￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 maybeStripJarAndClass￨2 (￨2 URL￨3 u￨3 )￨2 {￨2 }￨2 private￨2 File￨2 createTempPropertiesFile￨2 (￨2 String￨3 prefix￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleOutput￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 protected￨2 int￨2 handleInput￨2 (￨2 byte￨2 [￨2 ]￨2 buffer￨2 ,￨2 int￨2 offset￨2 ,￨2 int￨2 length￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 handleFlush￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 handleErrorOutput￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 handleErrorFlush￨2 (￨2 String￨3 output￨3 )￨2 {￨2 }￨2 private￨2 JUnitTask￨2 .￨2 TestResultHolder￨2 executeInVM￨2 (￨2 JUnitTest￨2 arg￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ExecuteWatchdog￨2 createWatchdog￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 OutputStream￨2 getDefaultOutput￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Enumeration￨2 getIndividualTests￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkMethodLists￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Enumeration￨2 allTests￨2 (￨2 )￨2 {￨2 }￨2 private￨2 FormatterElement￨2 [￨2 ]￨2 mergeFormatters￨2 (￨2 JUnitTest￨3 test￨3 )￨2 {￨2 }￨2 protected￨2 File￨2 getOutput￨2 (￨2 FormatterElement￨3 fe￨3 ,￨3 JUnitTest￨3 test￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 addClasspathEntry￨2 (￨2 String￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 addClasspathResource￨2 (￨2 String￨3 resource￨3 )￨2 {￨2 }￨2 static￨2 final￨2 String￨2 TIMEOUT_MESSAGE￨2 =￨2 "Timeout<seq2seq4repair_space>occurred.<seq2seq4repair_space>Please<seq2seq4repair_space>note<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>in<seq2seq4repair_space>the<seq2seq4repair_space>report<seq2seq4repair_space>does"￨2 +￨2 "<seq2seq4repair_space>not<seq2seq4repair_space>reflect<seq2seq4repair_space>the<seq2seq4repair_space>time<seq2seq4repair_space>until<seq2seq4repair_space>the<seq2seq4repair_space>timeout."￨2 ;￨2 private￨2 void￨2 logTimeout￨2 (￨2 FormatterElement￨3 [￨3 ]￨3 feArray￨3 ,￨3 JUnitTest￨3 test￨3 ,￨3 String￨3 testCase￨3 )￨2 {￨2 }￨2 private￨2 void￨2 logVmCrash￨2 (￨2 FormatterElement￨3 [￨3 ]￨3 feArray￨3 ,￨3 JUnitTest￨3 test￨3 ,￨3 String￨3 testCase￨3 )￨2 {￨2 }￨2 private￨2 void￨2 logVmExit￨2 (￨2 FormatterElement￨3 [￨3 ]￨3 feArray￨3 ,￨3 JUnitTest￨3 test￨3 ,￨3 String￨3 message￨3 ,￨3 String￨3 testCase￨3 )￨2 {￨2 }￨2 private￨2 void￨2 createClassLoader￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 cleanup￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 deleteClassLoader￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 CommandlineJava￨2 getCommandline￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 class￨2 ForkedTestConfiguration￨2 {￨2 private￨3 boolean￨3 filterTrace￨3 ;￨3 private￨3 boolean￨3 haltOnError￨3 ;￨3 private￨3 boolean￨3 haltOnFailure￨3 ;￨3 private￨3 String￨3 errorProperty￨3 ;￨3 private￨3 String￨3 failureProperty￨3 ;￨3 ForkedTestConfiguration￨3 (￨3 boolean￨4 filterTrace￨4 ,￨4 boolean￨4 haltOnError￨4 ,￨4 boolean￨4 haltOnFailure￨4 ,￨4 String￨4 errorProperty￨4 ,￨4 String￨4 failureProperty￨4 )￨3 {￨3 }￨3 ForkedTestConfiguration￨3 (￨3 JUnitTest￨4 test￨4 )￨3 {￨3 }￨3 public￨3 boolean￨3 equals￨3 (￨3 Object￨4 other￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hashCode￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 final￨2 class￨2 ForkMode￨2 extends￨2 EnumeratedAttribute￨2 {￨2 public￨3 static￨3 final￨3 String￨3 ONCE￨3 =￨3 "once"￨3 ;￨3 public￨3 static￨3 final￨3 String￨3 PER_TEST￨3 =￨3 "perTest"￨3 ;￨3 public￨3 static￨3 final￨3 String￨3 PER_BATCH￨3 =￨3 "perBatch"￨3 ;￨3 public￨3 ForkMode￨3 (￨3 )￨3 {￨3 }￨3 public￨3 ForkMode￨3 (￨3 String￨4 value￨4 )￨3 {￨3 }￨3 public￨3 String￨3 [￨3 ]￨3 getValues￨3 (￨3 )￨3 {￨3 }￨3 }￨2 protected￨2 Collection￨2 executeOrQueue￨2 (￨2 Enumeration￨3 testList￨3 ,￨3 boolean￨3 runIndividual￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 actOnTestResult￨2 (￨2 int￨3 exitValue￨3 ,￨3 boolean￨3 wasKilled￨3 ,￨3 JUnitTest￨3 test￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 actOnTestResult￨2 (￨2 JUnitTask￨3 .￨3 TestResultHolder￨3 result￨3 ,￨3 JUnitTest￨3 test￨3 ,￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 static￨2 class￨2 TestResultHolder￨2 {￨2 public￨3 int￨3 exitCode￨3 =￨3 JUnitTestRunnerMirror￨3 .￨3 ERRORS￨3 ;￨3 public￨3 boolean￨3 timedOut￨3 =￨3 false￨3 ;￨3 public￨3 boolean￨3 crashed￨3 =￨3 false￨3 ;￨3 }￨2 protected￨2 static￨2 class￨2 JUnitLogOutputStream￨2 extends￨2 LogOutputStream￨2 {￨2 private￨3 Task￨3 task￨3 ;￨3 public￨3 JUnitLogOutputStream￨3 (￨3 Task￨4 task￨4 ,￨4 int￨4 level￨4 )￨3 {￨3 }￨3 protected￨3 void￨3 processLine￨3 (￨3 String￨4 line￨4 ,￨4 int￨4 level￨4 )￨3 {￨3 }￨3 }￨2 protected￨2 static￨2 class￨2 JUnitLogStreamHandler￨2 extends￨2 PumpStreamHandler￨2 {￨2 public￨3 JUnitLogStreamHandler￨3 (￨3 Task￨4 task￨4 ,￨4 int￨4 outlevel￨4 ,￨4 int￨4 errlevel￨4 )￨3 {￨3 }￨3 }￨2 static￨2 final￨2 String￨2 NAME_OF_DUMMY_TEST￨2 =￨2 "Batch-With-Multiple-Tests"￨2 ;￨2 private￨2 static￨2 JUnitTest￨2 createDummyTestForBatchTest￨2 (￨2 JUnitTest￨3 test￨3 )￨2 {￨2 JUnitTest￨3 t￨3 =￨3 (￨3 (￨3 JUnitTest￨3 )￨3 (￨3 test￨3 .￨3 clone￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 int￨3 index￨3 =￨3 test￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 indexOf￨3 (￨3 '.'￨3 )￨3 ;￨3 <END_BUG>￨3 String￨3 pack￨3 =￨3 (￨3 index￨3 >￨3 0￨3 )￨3 ?￨3 test￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 substring￨3 (￨3 0￨3 ,￨3 (￨3 index￨3 +￨3 1￨3 )￨3 )￨3 :￨3 ""￨3 ;￨3 t￨3 .￨3 setName￨3 (￨3 (￨3 pack￨3 +￨3 (￨3 JUnitTask￨3 .￨3 NAME_OF_DUMMY_TEST￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 t￨3 ;￨3 }￨2 private￨2 static￨2 void￨2 printDual￨2 (￨2 BufferedWriter￨2 w￨2 ,￨2 PrintStream￨2 s￨2 ,￨2 String￨2 text￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 printlnDual￨2 (￨2 BufferedWriter￨2 w￨2 ,￨2 PrintStream￨2 s￨2 ,￨2 String￨2 text￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 rtx￨8 =￨8 tx￨8 .￨8 resolve￨8 (￨8 (￨8 (￨8 AjLookupEnvironment￨8 )￨8 (￨8 declare￨8 .￨8 scope￨8 .￨8 environment￨8 (￨8 )￨8 )￨8 )￨8 .￨8 factory￨8 .￨8 getWorld￨8 (￨8 )￨8 )￨8 ;￨8 if￨8 (￨8 !￨9 (￨9 rtx￨9 .￨9 isInterface￨9 (￨9 )￨9 )￨9 )￨8 {￨8 kindOfDP￨9 =￨9 "extends<seq2seq4repair_space>"￨9 ;￨9 }￨8 }￨7 catch￨7 (￨7 Throwable￨8 t￨8 )￨7 {￨7 }￨7 }￨6 String￨6 typename￨6 =￨6 tp￨6 .￨6 toString￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 typename￨7 .￨7 lastIndexOf￨7 (￨7 "."￨7 )￨7 )￨7 !=￨7 (￨7 -￨7 1￨7 )￨7 )￨6 {￨6 typename￨7 =￨7 typename￨7 .￨7 substring￨7 (￨7 (￨7 (￨7 typename￨7 .￨7 lastIndexOf￨7 (￨7 "."￨7 )￨7 )￨7 +￨7 1￨7 )￨7 )￨7 ;￨7 }￨6 details￨6 .￨6 append￨6 (￨6 typename￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 i￨7 +￨7 1￨7 )￨7 <￨7 (￨7 newParents￨7 .￨7 length￨7 )￨7 )￨6 {￨6 details￨7 .￨7 append￨7 (￨7 ","￨7 )￨7 ;￨7 }￨6 }￨5 node￨5 .￨5 setDetails￨5 (￨5 (￨5 kindOfDP￨5 +￨5 (￨5 details￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 instanceof￨5 DeclareSoft￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 IProgramElement￨5 .￨5 Kind￨5 .￨5 DECLARE_SOFT￨5 )￨5 ;￨5 DeclareSoft￨5 ds￨5 =￨5 (￨5 (￨5 DeclareSoft￨5 )￨5 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 (￨5 name￨5 +￨5 (￨5 AsmElementFormatter￨5 .￨5 DECLARE_SOFT￨5 )￨5 )￨5 )￨5 ;￨5 node￨5 .￨5 setDetails￨5 (￨5 genTypePatternLabel￨5 (￨5 ds￨5 .￨5 getException￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 instanceof￨5 DeclarePrecedence￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 IProgramElement￨5 .￨5 Kind￨5 .￨5 DECLARE_PRECEDENCE￨5 )￨5 ;￨5 DeclarePrecedence￨5 ds￨5 =￨5 (￨5 (￨5 DeclarePrecedence￨5 )￨5 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 (￨5 name￨5 +￨5 (￨5 AsmElementFormatter￨5 .￨5 DECLARE_PRECEDENCE￨5 )￨5 )￨5 )￨5 ;￨5 node￨5 .￨5 setDetails￨5 (￨5 genPrecedenceListLabel￨5 (￨5 ds￨5 .￨5 getPatterns￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 instanceof￨5 DeclareAnnotation￨5 )￨4 {￨4 DeclareAnnotation￨5 deca￨5 =￨5 (￨5 (￨5 DeclareAnnotation￨5 )￨5 (￨5 declare￨5 .￨5 declareDecl￨5 )￨5 )￨5 ;￨5 String￨5 thekind￨5 =￨5 deca￨5 .￨5 getKind￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 (￨5 (￨5 name￨5 +￨5 "@"￨5 )￨5 +￨5 (￨5 thekind￨5 .￨5 substring￨5 (￨5 3￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 deca￨6 .￨6 getKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 DeclareAnnotation￨6 .￨6 AT_CONSTRUCTOR￨6 )￨6 )￨5 {￨5 node￨6 .￨6 setKind￨6 (￨6 DECLARE_ANNOTATION_AT_CONSTRUCTOR￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 deca￨6 .￨6 getKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 DeclareAnnotation￨6 .￨6 AT_FIELD￨6 )￨6 )￨5 {￨5 node￨6 .￨6 setKind￨6 (￨6 DECLARE_ANNOTATION_AT_FIELD￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 deca￨6 .￨6 getKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 DeclareAnnotation￨6 .￨6 AT_METHOD￨6 )￨6 )￨5 {￨5 node￨6 .￨6 setKind￨6 (￨6 DECLARE_ANNOTATION_AT_METHOD￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 (￨6 deca￨6 .￨6 getKind￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 DeclareAnnotation￨6 .￨6 AT_TYPE￨6 )￨6 )￨5 {￨5 node￨6 .￨6 setKind￨6 (￨6 DECLARE_ANNOTATION_AT_TYPE￨6 )￨6 ;￨6 }￨5 node￨5 .￨5 setDetails￨5 (￨5 genDecaLabel￨5 (￨5 deca￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 ERROR￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 AsmElementFormatter￨5 .￨5 DECLARE_UNKNONWN￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 methodDeclaration￨4 instanceof￨4 InterTypeDeclaration￨4 )￨3 {￨3 InterTypeDeclaration￨4 itd￨4 =￨4 (￨4 (￨4 InterTypeDeclaration￨4 )￨4 (￨4 methodDeclaration￨4 )￨4 )￨4 ;￨4 String￨4 name￨4 =￨4 (￨4 (￨4 itd￨4 .￨4 getOnType￨4 (￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 +￨4 "."￨4 )￨4 +￨4 (￨4 new￨4 String￨4 (￨4 itd￨4 .￨4 getDeclaredSelector￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 methodDeclaration￨5 instanceof￨5 InterTypeFieldDeclaration￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 INTER_TYPE_FIELD￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 name￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 methodDeclaration￨5 instanceof￨5 InterTypeMethodDeclaration￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 INTER_TYPE_METHOD￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 name￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 methodDeclaration￨5 instanceof￨5 InterTypeConstructorDeclaration￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 INTER_TYPE_CONSTRUCTOR￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 (￨5 (￨5 (￨5 itd￨5 .￨5 getOnType￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 +￨5 "."￨5 )￨5 +￨5 (￨5 itd￨5 .￨5 getOnType￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 ERROR￨5 )￨5 ;￨5 node￨5 .￨5 setName￨5 (￨5 name￨5 )￨5 ;￨5 }￨4 node￨4 .￨4 setCorrespondingType￨4 (￨4 itd￨4 .￨4 returnType￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 node￨5 .￨5 getKind￨5 (￨5 )￨5 )￨5 !=￨5 (￨5 Kind￨5 .￨5 INTER_TYPE_FIELD￨5 )￨5 )￨4 {￨4 setParameters￨5 (￨5 methodDeclaration￨5 ,￨5 node￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 if￨4 (￨4 methodDeclaration￨5 .￨5 isConstructor￨5 (￨5 )￨5 )￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 CONSTRUCTOR￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 node￨5 .￨5 setKind￨5 (￨5 METHOD￨5 )￨5 ;￨5 <START_BUG>￨5 if￨5 (￨5 (￨5 true￨5 &&￨5 (￨5 methodDeclaration￨5 !=￨5 null￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 methodDeclaration￨5 .￨5 annotations￨5 )￨5 !=￨5 null￨5 )￨5 )￨5 {￨5 <END_BUG>￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 methodDeclaration￨6 .￨6 annotations￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 Annotation￨6 annotation￨6 =￨6 methodDeclaration￨6 .￨6 annotations￨6 [￨6 i￨6 ]￨6 ;￨6 String￨6 annotationSig￨6 =￨6 new￨6 String￨6 (￨6 annotation￨6 .￨6 type￨6 .￨6 getTypeBindingPublic￨6 (￨6 methodDeclaration￨6 .￨6 scope￨6 )￨6 .￨6 signature￨6 (￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 annotationSig￨7 !=￨7 null￨7 )￨7 &&￨7 (￨7 (￨7 annotationSig￨7 .￨7 charAt￨7 (￨7 1￨7 )￨7 )￨7 ==￨7 'o'￨7 )￨7 )￨6 {￨6 if￨7 (￨7 "Lorg/aspectj/lang/annotation/Pointcut;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨7 {￨7 node￨8 .￨8 setKind￨8 (￨8 POINTCUT￨8 )￨8 ;￨8 break￨8 ;￨8 }￨7 else￨7 if￨7 (￨7 (￨8 (￨8 (￨8 (￨8 "Lorg/aspectj/lang/annotation/Before;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨8 ||￨8 (￨8 "Lorg/aspectj/lang/annotation/After;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨8 )￨8 ||￨8 (￨8 "Lorg/aspectj/lang/annotation/AfterReturning;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨8 )￨8 ||￨8 (￨8 "Lorg/aspectj/lang/annotation/AfterThrowing;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨8 )￨8 ||￨8 (￨8 "Lorg/aspectj/lang/annotation/Around;"￨8 .￨8 equals￨8 (￨8 annotationSig￨8 )￨8 )￨8 )￨7 {￨7 node￨8 .￨8 setKind￨8 (￨8 ADVICE￨8 )￨8 ;￨8 node￨8 .￨8 setDetails￨8 (￨8 AsmElementFormatter￨8 .￨8 POINTCUT_ANONYMOUS￨8 )￨8 ;￨8 break￨8 ;￨8 }￨7 }￨6 }￨5 }￨4 node￨4 .￨4 setName￨4 (￨4 new￨4 String￨4 (￨4 methodDeclaration￨4 .￨4 selector￨4 )￨4 )￨4 ;￨4 setParameters￨4 (￨4 methodDeclaration￨4 ,￨4 node￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 String￨2 genDecaLabel￨2 (￨2 DeclareAnnotation￨3 deca￨3 )￨2 {￨2 }￨2 private￨2 String￨2 genPrecedenceListLabel￨2 (￨2 TypePatternList￨3 list￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setParameters￨2 (￨2 MethodDeclaration￨3 md￨3 ,￨3 IProgramElement￨3 pe￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 acceptArgument￨2 (￨2 String￨3 name￨3 ,￨3 String￨3 type￨3 )￨2 {￨2 }￨2 public￨2 String￨2 genTypePatternLabel￨2 (￨2 TypePattern￨3 tp￨3 )￨2 {￨2 }￨2 public￨2 String￨2 genDeclareMessage￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 private￨2 String￨2 translatePointcutName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 WebApplication￨1 extends￨1 Application￨1 {￨1 private￨2 final￨2 Map￨2 bufferedResponses￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 private￨2 IRequestCycleProcessor￨2 requestCycleProcessor￨2 ;￨2 private￨2 String￨2 sessionAttributePrefix￨2 ;￨2 private￨2 ISessionFactory￨2 sessionFactory￨2 =￨2 new￨2 ISessionFactory￨2 (￨2 )￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 Session￨3 newSession￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 WicketServlet￨2 wicketServlet￨2 ;￨2 public￨2 WebApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getSessionAttributePrefix￨2 (￨2 final￨3 WebRequest￨3 request￨3 )￨2 {￨2 }￨2 public￨2 final￨2 WicketServlet￨2 getWicketServlet￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mount￨2 (￨2 String￨3 path￨3 ,￨3 IRequestTargetUrlCodingStrategy￨3 encoder￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mount￨2 (￨2 String￨3 path￨3 ,￨3 Package￨3 p￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mount￨2 (￨2 String￨3 path￨3 ,￨3 PackageName￨3 packageName￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mountBookmarkablePage￨2 (￨2 String￨3 path￨3 ,￨3 Class￨3 bookmarkablePageClass￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 mountBookmarkablePage￨2 (￨2 String￨3 path￨3 ,￨3 Class￨3 bookmarkablePageClass￨3 ,￨3 String￨3 pageMapName￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setSessionFactory￨2 (￨2 final￨3 ISessionFactory￨3 sessionFactory￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setWicketServlet￨2 (￨2 final￨3 WicketServlet￨3 wicketServlet￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 unmount￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 protected￨2 IRequestCycleFactory￨2 getDefaultRequestCycleFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IRequestCycleProcessor￨2 getDefaultRequestCycleProcessor￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ISessionFactory￨2 getSessionFactory￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalDestroy￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 internalInit￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WebRequest￨2 newWebRequest￨2 (￨2 final￨3 HttpServletRequest￨3 servletRequest￨3 )￨2 {￨2 }￨2 protected￨2 WebResponse￨2 newWebResponse￨2 (￨2 final￨3 HttpServletResponse￨3 servletResponse￨3 )￨2 {￨2 }￨2 final￨2 void￨2 addBufferedResponse￨2 (￨2 String￨3 sessionId￨3 ,￨3 String￨3 bufferId￨3 ,￨3 BufferedHttpServletResponse￨3 renderedResponse￨3 )￨2 {￨2 }￨2 final￨2 void￨2 clearBufferedResponses￨2 (￨2 String￨3 sessionId￨3 )￨2 {￨2 }￨2 final￨2 WebSession￨2 getSession￨2 (￨2 final￨3 WebRequest￨3 request￨3 )￨2 {￨2 final￨3 HttpSession￨3 httpSession￨3 =￨3 request￨3 .￨3 getHttpServletRequest￨3 (￨3 )￨3 .￨3 getSession￨3 (￨3 false￨3 )￨3 ;￨3 final￨3 String￨3 sessionAttribute￨3 =￨3 (￨3 getSessionAttributePrefix￨3 (￨3 request￨3 )￨3 )￨3 +￨3 (￨3 Session￨3 .￨3 SESSION_ATTRIBUTE_NAME￨3 )￨3 ;￨3 WebSession￨3 webSession￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 httpSession￨4 !=￨4 null￨4 )￨3 {￨3 webSession￨4 =￨4 (￨4 (￨4 WebSession￨4 )￨4 (￨4 httpSession￨4 .￨4 getAttribute￨4 (￨4 sessionAttribute￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 webSession￨4 ==￨4 null￨4 )￨3 {￨3 final￨4 Session￨4 session￨4 =￨4 getSessionFactory￨4 (￨4 )￨4 .￨4 newSession￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 session￨5 instanceof￨5 WebSession￨5 )￨4 {￨4 webSession￨5 =￨5 (￨5 (￨5 WebSession￨5 )￨5 (￨5 session￨5 )￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 WicketRuntimeException￨5 (￨5 "Session<seq2seq4repair_space>created<seq2seq4repair_space>by<seq2seq4repair_space>a<seq2seq4repair_space>WebApplication<seq2seq4repair_space>session<seq2seq4repair_space>factory<seq2seq4repair_space>must<seq2seq4repair_space>be<seq2seq4repair_space>a<seq2seq4repair_space>subclass<seq2seq4repair_space>of<seq2seq4repair_space>WebSession"￨5 )￨5 ;￨5 }￨4 webSession￨4 .￨4 setLocale￨4 (￨4 request￨4 .￨4 getLocale￨4 (￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 httpSession￨5 !=￨5 null￨5 )￨4 {￨4 httpSession￨5 .￨5 setAttribute￨5 (￨5 sessionAttribute￨5 ,￨5 webSession￨5 )￨5 ;￨5 }￨4 }￨3 webSession￨3 .￨3 setApplication￨3 (￨3 this￨3 )￨3 ;￨3 <START_BUG>￨3 webSession￨3 .￨3 init￨3 (￨3 getSessionAttributePrefix￨3 (￨3 request￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 webSession￨3 ;￨3 }￨2 final￨2 BufferedHttpServletResponse￨2 popBufferedResponse￨2 (￨2 String￨3 sessionId￨3 ,￨3 String￨3 bufferId￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkMountPath￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 OrderedIntDoubleMapping￨1 implements￨1 Serializable￨1 ,￨1 Cloneable￨1 {￨1 private￨2 static￨2 final￨2 double￨2 DEFAULT_VALUE￨2 =￨2 0.0￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 indices￨2 ;￨2 private￨2 double￨2 [￨2 ]￨2 values￨2 ;￨2 private￨2 int￨2 numMappings￨2 ;￨2 OrderedIntDoubleMapping￨2 (￨2 )￨2 {￨2 }￨2 OrderedIntDoubleMapping￨2 (￨2 int￨3 capacity￨3 )￨2 {￨2 }￨2 private￨2 OrderedIntDoubleMapping￨2 (￨2 int￨3 [￨3 ]￨3 indices￨3 ,￨3 double￨3 [￨3 ]￨3 values￨3 ,￨3 int￨3 numMappings￨3 )￨2 {￨2 }￨2 int￨2 [￨2 ]￨2 getIndices￨2 (￨2 )￨2 {￨2 }￨2 double￨2 [￨2 ]￨2 getValues￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getNumMappings￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 growTo￨2 (￨2 int￨3 newCapacity￨3 )￨2 {￨2 }￨2 private￨2 int￨2 find￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 double￨2 get￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 set￨2 (￨2 int￨3 index￨3 ,￨3 double￨3 value￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 OrderedIntDoubleMapping￨2 clone￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 OrderedIntDoubleMapping￨3 (￨3 indices￨3 ,￨3 values￨3 ,￨3 numMappings￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 TestReverseStringFilter￨1 extends￨1 BaseTokenStreamTestCase￨1 {￨1 public￨2 void￨2 testFilter￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testFilterWithMark￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReverseString￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReverseChar￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 public￨2 void￨2 testBackCompat￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReverseSupplementary￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReverseSupplementaryChar￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomStrings￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 Analyzer￨3 a￨3 =￨3 new￨3 Analyzer￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 protected￨4 TokenStreamComponents￨4 createComponents￨4 (￨4 String￨5 fieldName￨5 ,￨5 Reader￨5 reader￨5 )￨4 {￨4 Tokenizer￨5 tokenizer￨5 =￨5 new￨5 MockTokenizer￨5 (￨5 reader￨5 ,￨5 MockTokenizer￨5 .￨5 WHITESPACE￨5 ,￨5 false￨5 )￨5 ;￨5 return￨5 new￨5 TokenStreamComponents￨5 (￨5 tokenizer￨5 ,￨5 new￨5 ReverseStringFilter￨5 (￨5 TEST_VERSION_CURRENT￨5 ,￨5 tokenizer￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 <START_BUG>￨3 checkRandomData￨3 (￨3 random￨3 (￨3 )￨3 ,￨3 a￨3 ,￨3 (￨3 10000￨3 *￨3 (￨3 RANDOM_MULTIPLIER￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testEmptyTerm￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TermQueryPrefixTreeStrategy￨1 extends￨1 PrefixTreeStrategy￨1 {￨1 public￨2 TermQueryPrefixTreeStrategy￨2 (￨2 SpatialPrefixTree￨3 grid￨3 ,￨3 String￨3 fieldName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Filter￨2 makeFilter￨2 (￨2 SpatialArgs￨3 args￨3 )￨2 {￨2 final￨3 SpatialOperation￨3 op￨3 =￨3 args￨3 .￨3 getOperation￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 SpatialOperation￨3 .￨3 is￨3 (￨3 op￨3 ,￨3 IsWithin￨3 ,￨3 Intersects￨3 ,￨3 BBoxWithin￨3 ,￨3 BBoxIntersects￨3 )￨3 )￨3 )￨3 <END_BUG>￨3 throw￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 spatial￨3 .￨3 query￨3 .￨3 UnsupportedSpatialOperation￨3 (￨3 op￨3 )￨3 ;￨3 Shape￨3 shape￨3 =￨3 args￨3 .￨3 getShape￨3 (￨3 )￨3 ;￨3 int￨3 detailLevel￨3 =￨3 grid￨3 .￨3 getLevelForDistance￨3 (￨3 args￨3 .￨3 resolveDistErr￨3 (￨3 ctx￨3 ,￨3 distErrPct￨3 )￨3 )￨3 ;￨3 List￨3 <￨3 Node￨3 >￨3 cells￨3 =￨3 grid￨3 .￨3 getNodes￨3 (￨3 shape￨3 ,￨3 detailLevel￨3 ,￨3 false￨3 )￨3 ;￨3 TermsFilter￨3 filter￨3 =￨3 new￨3 TermsFilter￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 Node￨4 cell￨4 :￨4 cells￨4 )￨3 {￨3 filter￨4 .￨4 addTerm￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 index￨4 .￨4 Term￨4 (￨4 getFieldName￨4 (￨4 )￨4 ,￨4 cell￨4 .￨4 getTokenString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 filter￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CollectionProperty￨1 extends￨1 MultiProperty￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 221L￨2 ;￨2 private￨2 Collection￨2 <￨2 JMeterProperty￨2 >￨2 value￨2 ;￨2 private￨2 transient￨2 Collection￨2 <￨2 JMeterProperty￨2 >￨2 savedValue￨2 ;￨2 public￨2 CollectionProperty￨2 (￨2 String￨3 name￨3 ,￨3 Collection￨3 value￨3 )￨2 {￨2 }￨2 public￨2 CollectionProperty￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 String￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 set￨2 (￨2 int￨3 index￨3 ,￨3 String￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 set￨2 (￨2 int￨3 index￨3 ,￨3 JMeterProperty￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 JMeterProperty￨2 get￨2 (￨2 int￨3 row￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setObjectValue￨2 (￨2 Object￨3 v￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 PropertyIterator￨2 iterator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getStringValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getObjectValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collection￨2 <￨2 JMeterProperty￨2 >￨2 cloneCollection￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 @￨4 SuppressWarnings￨4 (￨4 "unchecked"￨4 )￨4 Collection￨4 <￨4 JMeterProperty￨4 >￨4 newCol￨4 =￨4 value￨4 .￨4 getClass￨4 (￨4 )￨4 .￨4 newInstance￨4 (￨4 )￨4 ;￨4 PropertyIterator￨4 iter￨4 =￨4 iterator￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 iter￨5 .￨5 hasNext￨5 (￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 newCol￨5 .￨5 add￨5 (￨5 iter￨5 .￨5 next￨5 (￨5 )￨5 .￨5 clone￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 return￨4 newCol￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 log￨4 .￨4 error￨4 (￨4 "Couldn't<seq2seq4repair_space>clone<seq2seq4repair_space>collection"￨4 ,￨4 e￨4 )￨4 ;￨4 return￨4 value￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 setCollection￨2 (￨2 Collection￨3 coll￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 addProperty￨2 (￨2 JMeterProperty￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addItem￨2 (￨2 Object￨3 item￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Class￨2 <￨2 ?￨2 extends￨2 JMeterProperty￨2 >￨2 getPropertyType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 recoverRunningVersion￨2 (￨2 TestElement￨3 owner￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 setRunningVersion￨2 (￨2 boolean￨3 running￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StandardToStringStyleTest￨1 extends￨1 TestCase￨1 {￨1 private￨2 final￨2 Integer￨2 base￨2 =￨2 new￨2 Integer￨2 (￨2 5￨2 )￨2 ;￨2 private￨2 final￨2 String￨2 baseStr￨2 =￨2 "Integer"￨2 ;￨2 private￨2 static￨2 final￨2 StandardToStringStyle￨2 STYLE￨2 =￨2 new￨2 StandardToStringStyle￨2 (￨2 )￨2 ;￨2 public￨2 StandardToStringStyleTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 tearDown￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 ToStringBuilder￨3 .￨3 setDefaultStyle￨3 (￨3 StandardToStringStyleTest￨3 .￨3 STYLE￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testBlank￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAppendSuper￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testPerson￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLong￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testObjectArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLongArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testLongArrayArray￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SMTPMin￨1 {￨1 static￨2 Category￨2 cat￨2 =￨2 Category￨2 .￨2 getInstance￨2 (￨2 SMTPMin￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 argv￨2 )￨2 {￨2 }￨2 static￨2 void￨2 usage￨2 (￨2 String￨3 msg￨3 )￨2 {￨2 }￨2 static￨2 void￨2 init￨2 (￨2 String￨3 configFile￨3 )￨2 {￨2 }￨2 static￨2 void￨2 test￨2 (￨2 )￨2 {￨2 int￨3 i￨3 =￨3 0￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 debug￨3 (￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 )￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 debug￨3 (￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 ,￨3 new￨3 Exception￨3 (￨3 "Just<seq2seq4repair_space>testing."￨3 )￨3 )￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 info￨3 (￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 )￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 warn￨3 (￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 )￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 error￨3 (￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 )￨3 ;￨3 SMTPMin￨3 .￨3 cat￨3 .￨3 log￨3 (￨3 Priority￨3 .￨3 FATAL￨3 ,￨3 (￨3 "Message<seq2seq4repair_space>"￨3 +￨3 (￨3 i￨3 ++￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 Category￨3 .￨3 shutdown￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 Thread￨3 .￨3 currentThread￨3 (￨3 )￨3 .￨3 getThreadGroup￨3 (￨3 )￨3 .￨3 list￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 EclipseWorld￨1 extends￨1 World￨1 {￨1 public￨2 static￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 public￨2 AjBuildManager￨2 buildManager￨2 ;￨2 private￨2 LookupEnvironment￨2 lookupEnvironment￨2 ;￨2 private￨2 Map￨2 addedTypeBindings￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 EclipseWorld￨2 forLookupEnvironment￨2 (￨2 LookupEnvironment￨3 env￨3 )￨2 {￨2 }￨2 public￨2 static￨2 EclipseWorld￨2 fromScopeLookupEnvironment￨2 (￨2 Scope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 EclipseWorld￨2 (￨2 LookupEnvironment￨3 lookupEnvironment￨3 ,￨3 IMessageHandler￨3 handler￨3 )￨2 {￨2 }￨2 public￨2 Advice￨2 concreteAdvice￨2 (￨2 AjAttribute￨3 .￨3 AdviceAttribute￨3 attribute￨3 ,￨3 Pointcut￨3 pointcut￨3 ,￨3 Member￨3 signature￨3 )￨2 {￨2 }￨2 public￨2 ConcreteTypeMunger￨2 concreteTypeMunger￨2 (￨2 ResolvedTypeMunger￨3 munger￨3 ,￨3 ResolvedTypeX￨3 aspectType￨3 )￨2 {￨2 }￨2 protected￨2 ResolvedTypeX￨2 resolveObjectType￨2 (￨2 TypeX￨3 ty￨3 )￨2 {￨2 }￨2 public￨2 ResolvedTypeX￨2 fromEclipse￨2 (￨2 ReferenceBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 ResolvedTypeX￨2 [￨2 ]￨2 fromEclipse￨2 (￨2 ReferenceBinding￨3 [￨3 ]￨3 bindings￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 getName￨2 (￨2 TypeBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 static￨2 TypeX￨2 fromBinding￨2 (￨2 TypeBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 static￨2 TypeX￨2 [￨2 ]￨2 fromBindings￨2 (￨2 TypeBinding￨3 [￨3 ]￨3 bindings￨3 )￨2 {￨2 }￨2 public￨2 static￨2 AstNode￨2 astForLocation￨2 (￨2 IHasPosition￨3 location￨3 )￨2 {￨2 }￨2 public￨2 Collection￨2 getTypeMungers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 ResolvedMember￨2 makeResolvedMember￨2 (￨2 MethodBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 static￨2 ResolvedMember￨2 makeResolvedMember￨2 (￨2 FieldBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 makeTypeBinding￨2 (￨2 TypeX￨3 typeX￨3 )￨2 {￨2 TypeBinding￨3 ret￨3 =￨3 (￨3 (￨3 TypeBinding￨3 )￨3 (￨3 addedTypeBindings￨3 .￨3 get￨3 (￨3 typeX￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 ret￨4 !=￨4 null￨4 )￨3 {￨3 return￨4 ret￨4 ;￨4 }￨3 if￨3 (￨3 typeX￨4 .￨4 isPrimitive￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 BOOLEAN￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 BooleanBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 BYTE￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 ByteBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 CHAR￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 CharBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 DOUBLE￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 DoubleBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 FLOAT￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 FloatBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 INT￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 IntBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 LONG￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 LongBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 SHORT￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 ShortBinding￨5 ;￨5 }￨4 if￨4 (￨4 typeX￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 VOID￨5 )￨5 )￨4 {￨4 return￨5 BaseTypes￨5 .￨5 VoidBinding￨5 ;￨5 }￨4 throw￨4 new￨4 RuntimeException￨4 (￨4 (￨4 "weird<seq2seq4repair_space>primitive<seq2seq4repair_space>type<seq2seq4repair_space>"￨4 +￨4 typeX￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 typeX￨4 .￨4 isArray￨4 (￨4 )￨4 )￨3 {￨3 int￨4 dim￨4 =￨4 0￨4 ;￨4 while￨4 (￨4 typeX￨5 .￨5 isArray￨5 (￨5 )￨5 )￨4 {￨4 dim￨5 ++￨5 ;￨5 typeX￨5 =￨5 typeX￨5 .￨5 getComponentType￨5 (￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 return￨4 new￨4 ArrayBinding￨4 (￨4 makeTypeBinding￨4 (￨4 typeX￨4 )￨4 ,￨4 dim￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 else￨3 {￨3 ResolvedTypeX￨4 rt￨4 =￨4 typeX￨4 .￨4 resolve￨4 (￨4 this￨4 )￨4 ;￨4 if￨4 (￨4 rt￨5 ==￨5 (￨5 ResolvedTypeX￨5 .￨5 MISSING￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 RuntimeException￨5 (￨5 (￨5 "shouldn't<seq2seq4repair_space>be<seq2seq4repair_space>missing:<seq2seq4repair_space>"￨5 +￨5 typeX￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 (￨4 (￨4 EclipseObjectType￨4 )￨4 (￨4 rt￨4 )￨4 )￨4 .￨4 getBinding￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 TypeBinding￨2 [￨2 ]￨2 makeTypeBindings￨2 (￨2 TypeX￨3 [￨3 ]￨3 types￨3 )￨2 {￨2 }￨2 private￨2 ReferenceBinding￨2 [￨2 ]￨2 makeReferenceBindings￨2 (￨2 TypeX￨3 [￨3 ]￨3 types￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 makeFieldBinding￨2 (￨2 ResolvedMember￨3 member￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 makeMethodBinding￨2 (￨2 ResolvedMember￨3 member￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 makeMethodBindingForCall￨2 (￨2 Member￨3 member￨3 )￨2 {￨2 }￨2 public￨2 void￨2 finishedCompilationUnit￨2 (￨2 CompilationUnitDeclaration￨3 unit￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addTypeBinding￨2 (￨2 TypeBinding￨3 binding￨3 )￨2 {￨2 }￨2 public￨2 Shadow￨2 makeShadow￨2 (￨2 AstNode￨3 location￨3 ,￨3 ReferenceContext￨3 context￨3 )￨2 {￨2 }￨2 public￨2 Shadow￨2 makeShadow￨2 (￨2 ReferenceContext￨3 context￨3 )￨2 {￨2 }￨2 }￨1
class￨1 WebConnectorMetrics￨1 implements￨1 OperationStepHandler￨1 {￨1 static￨2 WebConnectorMetrics￨2 INSTANCE￨2 =￨2 new￨2 WebConnectorMetrics￨2 (￨2 )￨2 ;￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 NO_LOCATION￨2 =￨2 new￨2 String￨2 [￨2 0￨2 ]￨2 ;￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 ATTRIBUTES￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 context￨3 .￨3 getType￨3 (￨3 )￨3 )￨3 ==￨3 (￨3 Type￨3 .￨3 SERVER￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 OperationStepHandler￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 execute￨4 (￨4 OperationContext￨4 context￨4 ,￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 final￨5 PathAddress￨5 address￨5 =￨5 PathAddress￨5 .￨5 pathAddress￨5 (￨5 operation￨5 .￨5 require￨5 (￨5 OP_ADDR￨5 )￨5 )￨5 ;￨5 final￨5 String￨5 name￨5 =￨5 address￨5 .￨5 getLastElement￨5 (￨5 )￨5 .￨5 getValue￨5 (￨5 )￨5 ;￨5 final￨5 String￨5 attributeName￨5 =￨5 operation￨5 .￨5 require￨5 (￨5 NAME￨5 )￨5 .￨5 asString￨5 (￨5 )￨5 ;￨5 final￨5 ServiceController￨5 <￨5 ?￨5 >￨5 controller￨5 =￨5 context￨5 .￨5 getServiceRegistry￨5 (￨5 false￨5 )￨5 .￨5 getService￨5 (￨5 JBOSS_WEB_CONNECTOR￨5 .￨5 append￨5 (￨5 name￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 controller￨6 !=￨6 null￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 final￨7 Connector￨7 connector￨7 =￨7 (￨7 (￨7 Connector￨7 )￨7 (￨7 controller￨7 .￨7 getValue￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 final￨7 ModelNode￨7 result￨7 =￨7 context￨7 .￨7 getResult￨7 (￨7 )￨7 ;￨7 if￨7 (￨7 (￨8 (￨8 connector￨8 .￨8 getProtocolHandler￨8 (￨8 )￨8 )￨8 !=￨8 null￨8 )￨8 &&￨8 (￨8 (￨8 connector￨8 .￨8 getProtocolHandler￨8 (￨8 )￨8 .￨8 getRequestGroupInfo￨8 (￨8 )￨8 )￨8 !=￨8 null￨8 )￨8 )￨7 {￨7 RequestGroupInfo￨8 info￨8 =￨8 connector￨8 .￨8 getProtocolHandler￨8 (￨8 )￨8 .￨8 getRequestGroupInfo￨8 (￨8 )￨8 ;￨8 if￨8 (￨8 BYTES_SENT￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getBytesSent￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 if￨8 (￨8 BYTES_RECEIVED￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getBytesReceived￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 if￨8 (￨8 PROCESSING_TIME￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getProcessingTime￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 if￨8 (￨8 ERROR_COUNT￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getErrorCount￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 if￨8 (￨8 MAX_TIME￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getMaxTime￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 else￨8 if￨8 (￨8 REQUEST_COUNT￨9 .￨9 equals￨9 (￨9 attributeName￨9 )￨9 )￨8 {￨8 result￨9 .￨9 set￨9 (￨9 (￨9 ""￨9 +￨9 (￨9 info￨9 .￨9 getRequestCount￨9 (￨9 )￨9 )￨9 )￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 catch￨6 (￨6 Exception￨7 e￨7 )￨6 {￨6 throw￨7 new￨7 OperationFailedException￨7 (￨7 new￨7 ModelNode￨7 (￨7 )￨7 .￨7 set￨7 (￨7 WebMessages￨7 .￨7 MESSAGES￨7 .￨7 failedToGetMetrics￨7 (￨7 e￨7 .￨7 getMessage￨7 (￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 context￨6 .￨6 getResult￨6 (￨6 )￨6 .￨6 set￨6 (￨6 WebMessages￨6 .￨6 MESSAGES￨6 .￨6 noMetricsAvailable￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 context￨5 .￨5 completeStep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 else￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 WebMessages￨4 .￨4 MESSAGES￨4 .￨4 noMetricsAvailable￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 EJBComponent￨1 extends￨1 AbstractComponent￨1 implements￨1 org￨1 .￨1 jboss￨1 .￨1 ejb3￨1 .￨1 context￨1 .￨1 spi￨1 .￨1 EJBComponent￨1 ,￨1 TransactionalComponent￨1 {￨1 private￨2 static￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 EJBComponent￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 ConcurrentMap￨2 <￨2 MethodIntf￨2 ,￨2 ConcurrentMap￨2 <￨2 String￨2 ,￨2 ConcurrentMap￨2 <￨2 ArrayKey￨2 ,￨2 TransactionAttributeType￨2 >￨2 >￨2 >￨2 txAttrs￨2 ;￨2 private￨2 final￨2 EJBUtilities￨2 utilities￨2 ;￨2 private￨2 final￨2 boolean￨2 isBeanManagedTransaction￨2 ;￨2 private￨2 static￨2 volatile￨2 boolean￨2 youHaveBeenWarnedEJBTHREE2120￨2 =￨2 false￨2 ;￨2 protected￨2 EJBComponent￨2 (￨2 final￨2 EJBComponentConfiguration￨2 configuration￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ApplicationException￨2 getApplicationException￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 exceptionClass￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 EJBHome￨2 getEJBHome￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 EJBLocalHome￨2 getEJBLocalHome￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 getRollbackOnly￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 TimerService￨2 getTimerService￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 public￨2 TransactionAttributeType￨2 getTransactionAttributeType￨2 (￨2 Method￨3 method￨3 )￨2 {￨2 }￨2 public￨2 TransactionAttributeType￨2 getTransactionAttributeType￨2 (￨2 MethodIntf￨3 methodIntf￨3 ,￨3 Method￨3 method￨3 )￨2 {￨2 ConcurrentMap￨3 <￨3 String￨3 ,￨3 ConcurrentMap￨3 <￨3 ArrayKey￨3 ,￨3 TransactionAttributeType￨3 >￨3 >￨3 perMethodIntf￨3 =￨3 txAttrs￨3 .￨3 get￨3 (￨3 methodIntf￨3 )￨3 ;￨3 if￨3 (￨3 perMethodIntf￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalStateException￨4 (￨4 (￨4 "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>"￨4 +￨4 methodIntf￨4 )￨4 )￨4 ;￨4 }￨3 ConcurrentMap￨3 <￨3 ArrayKey￨3 ,￨3 TransactionAttributeType￨3 >￨3 perMethod￨3 =￨3 perMethodIntf￨3 .￨3 get￨3 (￨3 method￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 perMethod￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalStateException￨4 (￨4 (￨4 (￨4 (￨4 "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attrs<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>name<seq2seq4repair_space>"￨4 +￨4 (￨4 method￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>via<seq2seq4repair_space>"￨4 )￨4 +￨4 methodIntf￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 TransactionAttributeType￨3 txAttr￨3 =￨3 perMethod￨3 .￨3 get￨3 (￨3 new￨3 ArrayKey￨3 (￨3 method￨3 .￨3 getParameterTypes￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 txAttr￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 IllegalStateException￨4 (￨4 (￨4 (￨4 (￨4 "Can't<seq2seq4repair_space>find<seq2seq4repair_space>tx<seq2seq4repair_space>attr<seq2seq4repair_space>for<seq2seq4repair_space>method<seq2seq4repair_space>"￨4 +￨4 method￨4 )￨4 +￨4 "<seq2seq4repair_space>via<seq2seq4repair_space>"￨4 )￨4 +￨4 methodIntf￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 txAttr￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 TransactionManager￨2 getTransactionManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TransactionSynchronizationRegistry￨2 getTransactionSynchronizationRegistry￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 getTransactionTimeout￨2 (￨2 Method￨3 method￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 UserTransaction￨2 getUserTransaction￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 isBeanManagedTransaction￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 isCallerInRole￨2 (￨2 Principal￨2 callerPrincipal￨2 ,￨2 String￨2 roleName￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 lookup￨2 (￨2 String￨2 name￨2 )￨2 throws￨2 IllegalArgumentException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 setRollbackOnly￨2 (￨2 )￨2 throws￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Evaluator￨1 {￨1 EvaluationContext￨2 context￨2 ;￨2 INameEnvironment￨2 environment￨2 ;￨2 Map￨2 options￨2 ;￨2 IRequestor￨2 requestor￨2 ;￨2 IProblemFactory￨2 problemFactory￨2 ;￨2 Evaluator￨2 (￨2 EvaluationContext￨3 context￨3 ,￨3 INameEnvironment￨3 environment￨3 ,￨3 Map￨3 options￨3 ,￨3 IRequestor￨3 requestor￨3 ,￨3 IProblemFactory￨3 problemFactory￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 void￨2 addEvaluationResultForCompilationProblem￨2 (￨2 Map￨3 resultsByIDs￨3 ,￨3 IProblem￨3 problem￨3 ,￨3 char￨3 [￨3 ]￨3 cuSource￨3 )￨2 {￨2 }￨2 protected￨2 EvaluationResult￨2 [￨2 ]￨2 evaluationResultsForCompilationProblems￨2 (￨2 CompilationResult￨3 result￨3 ,￨3 char￨3 [￨3 ]￨3 cuSource￨3 )￨2 {￨2 }￨2 ClassFile￨2 [￨2 ]￨2 getClasses￨2 (￨2 )￨2 {￨2 final￨3 char￨3 [￨3 ]￨3 source￨3 =￨3 getSource￨3 (￨3 )￨3 ;￨3 final￨3 ArrayList￨3 classDefinitions￨3 =￨3 new￨3 ArrayList￨3 (￨3 )￨3 ;￨3 class￨3 CompilerRequestor￨3 implements￨3 ICompilerRequestor￨3 {￨3 boolean￨4 hasErrors￨4 =￨4 false￨4 ;￨4 public￨4 void￨4 acceptResult￨4 (￨4 CompilationResult￨5 result￨5 )￨4 {￨4 if￨5 (￨5 result￨6 .￨6 hasProblems￨6 (￨6 )￨6 )￨5 {￨5 EvaluationResult￨6 [￨6 ]￨6 evalResults￨6 =￨6 evaluationResultsForCompilationProblems￨6 (￨6 result￨6 ,￨6 source￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ;￨7 i￨7 <￨7 (￨7 evalResults￨7 .￨7 length￨7 )￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 EvaluationResult￨7 evalResult￨7 =￨7 evalResults￨7 [￨7 i￨7 ]￨7 ;￨7 IProblem￨7 [￨7 ]￨7 problems￨7 =￨7 evalResult￨7 .￨7 getProblems￨7 (￨7 )￨7 ;￨7 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 (￨8 problems￨8 .￨8 length￨8 )￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 Evaluator￨8 .￨8 this￨8 .￨8 requestor￨8 .￨8 acceptProblem￨8 (￨8 problems￨8 [￨8 j￨8 ]￨8 ,￨8 evalResult￨8 .￨8 getEvaluationID￨8 (￨8 )￨8 ,￨8 evalResult￨8 .￨8 getEvaluationType￨8 (￨8 )￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 if￨5 (￨5 result￨6 .￨6 hasErrors￨6 (￨6 )￨6 )￨5 {￨5 <START_BUG>￨6 hasErrors￨6 =￨6 true￨6 ;￨6 <END_BUG>￨6 }￨5 else￨5 {￨5 ClassFile￨6 [￨6 ]￨6 classFiles￨6 =￨6 result￨6 .￨6 getClassFiles￨6 (￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ;￨7 i￨7 <￨7 (￨7 classFiles￨7 .￨7 length￨7 )￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 ClassFile￨7 classFile￨7 =￨7 classFiles￨7 [￨7 i￨7 ]￨7 ;￨7 classDefinitions￨7 .￨7 add￨7 (￨7 classFile￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 CompilerRequestor￨3 compilerRequestor￨3 =￨3 new￨3 CompilerRequestor￨3 (￨3 )￨3 ;￨3 Compiler￨3 compiler￨3 =￨3 getCompiler￨3 (￨3 compilerRequestor￨3 )￨3 ;￨3 compiler￨3 .￨3 compile￨3 (￨3 new￨3 ICompilationUnit￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 new￨4 ICompilationUnit￨4 (￨4 )￨4 {￨4 public￨5 char￨5 [￨5 ]￨5 getFileName￨5 (￨5 )￨5 {￨5 return￨6 CharOperation￨6 .￨6 concat￨6 (￨6 Evaluator￨6 .￨6 this￨6 .￨6 getClassName￨6 (￨6 )￨6 ,￨6 SuffixConstants￨6 .￨6 SUFFIX_java￨6 )￨6 ;￨6 }￨5 public￨5 char￨5 [￨5 ]￨5 getContents￨5 (￨5 )￨5 {￨5 return￨6 source￨6 ;￨6 }￨5 public￨5 char￨5 [￨5 ]￨5 getMainTypeName￨5 (￨5 )￨5 {￨5 return￨6 Evaluator￨6 .￨6 this￨6 .￨6 getClassName￨6 (￨6 )￨6 ;￨6 }￨5 public￨5 char￨5 [￨5 ]￨5 [￨5 ]￨5 getPackageName￨5 (￨5 )￨5 {￨5 return￨6 null￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 if￨3 (￨3 compilerRequestor￨4 .￨4 hasErrors￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 else￨3 {￨3 ClassFile￨4 [￨4 ]￨4 result￨4 =￨4 new￨4 ClassFile￨4 [￨4 classDefinitions￨4 .￨4 size￨4 (￨4 )￨4 ]￨4 ;￨4 classDefinitions￨4 .￨4 toArray￨4 (￨4 result￨4 )￨4 ;￨4 return￨4 result￨4 ;￨4 }￨3 }￨2 protected￨2 abstract￨2 char￨2 [￨2 ]￨2 getClassName￨2 (￨2 )￨2 {￨2 }￨2 Compiler￨2 getCompiler￨2 (￨2 ICompilerRequestor￨3 compilerRequestor￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 char￨2 [￨2 ]￨2 getSource￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 ;￨3 inVMConnector￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 TransportConfigOperationHandlers￨3 .￨3 REMOVE￨3 ,￨3 CONNECTOR_REMOVE￨3 )￨3 ;￨3 IN_VM_ATTR￨3 .￨3 registerAttributes￨3 (￨3 inVMConnector￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 MessagingExtension￨3 .￨3 createParamRegistration￨3 (￨3 inVMConnector￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 bridge￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 BRIDGE￨3 )￨3 ,￨3 BRIDGE_RESOURCE￨3 )￨3 ;￨3 bridge￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 BridgeAdd￨3 .￨3 INSTANCE￨3 ,￨3 BridgeAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 bridge￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 BridgeRemove￨3 .￨3 INSTANCE￨3 ,￨3 BridgeRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 BridgeWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 bridge￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 if￨3 (￨3 registerRuntimeOnly￨4 )￨3 {￨3 BridgeControlHandler￨4 .￨4 INSTANCE￨4 .￨4 register￨4 (￨4 bridge￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 cluster￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 CLUSTER_CONNECTION￨3 )￨3 ,￨3 CLUSTER_CONNECTION_RESOURCE￨3 )￨3 ;￨3 cluster￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 ClusterConnectionAdd￨3 .￨3 INSTANCE￨3 ,￨3 ClusterConnectionAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 cluster￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ClusterConnectionRemove￨3 .￨3 INSTANCE￨3 ,￨3 ClusterConnectionRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 ClusterConnectionWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 cluster￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 if￨3 (￨3 registerRuntimeOnly￨4 )￨3 {￨3 ClusterConnectionControlHandler￨4 .￨4 INSTANCE￨4 .￨4 register￨4 (￨4 cluster￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 groupingHandler￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 GROUPING_HANDLER_PATH￨3 ,￨3 GROUPING_HANDLER_RESOURCE￨3 )￨3 ;￨3 groupingHandler￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 GroupingHandlerAdd￨3 .￨3 INSTANCE￨3 ,￨3 GroupingHandlerAdd￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 groupingHandler￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 GroupingHandlerRemove￨3 .￨3 INSTANCE￨3 ,￨3 GroupingHandlerRemove￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 GroupingHandlerWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 groupingHandler￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 connectorService￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 CONNECTOR_SERVICE￨3 )￨3 ,￨3 CONNECTOR_SERVICE_RESOURCE￨3 )￨3 ;￨3 connectorService￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 ConnectorServiceAdd￨3 .￨3 INSTANCE￨3 ,￨3 ConnectorServiceAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 connectorService￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ConnectorServiceRemove￨3 .￨3 INSTANCE￨3 ,￨3 ConnectorServiceRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 ConnectorServiceWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 connectorService￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 connectorServiceParam￨3 =￨3 connectorService￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 CommonAttributes￨3 .￨3 PARAM￨3 )￨3 ,￨3 CONNECTOR_SERVICE_PARAM_RESOURCE￨3 )￨3 ;￨3 connectorServiceParam￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 ConnectorServiceParamAdd￨3 .￨3 INSTANCE￨3 ,￨3 ConnectorServiceParamAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 connectorServiceParam￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ConnectorServiceParamRemove￨3 .￨3 INSTANCE￨3 ,￨3 ConnectorServiceParamRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 connectorServiceParam￨3 .￨3 registerReadWriteAttribute￨3 (￨3 VALUE￨3 .￨3 getName￨3 (￨3 )￨3 ,￨3 null￨3 ,￨3 ConnectorServiceParamWriteAttributeHandler￨3 .￨3 INSTANCE￨3 ,￨3 CONFIGURATION￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 String￨4 path￨4 :￨4 CommonAttributes￨4 .￨4 PATHS￨4 )￨3 {￨3 ManagementResourceRegistration￨4 bindings￨4 =￨4 serverRegistration￨4 .￨4 registerSubModel￨4 (￨4 PathElement￨4 .￨4 pathElement￨4 (￨4 PATH￨4 ,￨4 path￨4 )￨4 ,￨4 new￨4 MessagingSubsystemProviders￨4 .￨4 PathProvider￨4 (￨4 path￨4 )￨4 )￨4 ;￨4 MessagingPathHandlers￨4 .￨4 register￨4 (￨4 bindings￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 cfs￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 CFS_PATH￨3 ,￨3 CF￨3 )￨3 ;￨3 cfs￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 ConnectionFactoryAdd￨3 .￨3 INSTANCE￨3 ,￨3 CF_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 cfs￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ConnectionFactoryRemove￨3 .￨3 INSTANCE￨3 ,￨3 CF_REMOVE￨3 ,￨3 false￨3 )￨3 ;￨3 ConnectionFactoryWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 cfs￨3 )￨3 ;￨3 if￨3 (￨3 registerRuntimeOnly￨4 )￨3 {￨3 ConnectionFactoryReadAttributeHandler￨4 .￨4 INSTANCE￨4 .￨4 registerAttributes￨4 (￨4 cfs￨4 )￨4 ;￨4 }￨3 ConnectionFactoryAddJndiHandler￨3 .￨3 INSTANCE￨3 .￨3 registerOperation￨3 (￨3 cfs￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 resourceAdapters￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 RA_PATH￨3 ,￨3 RA￨3 )￨3 ;￨3 resourceAdapters￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 PooledConnectionFactoryAdd￨3 .￨3 INSTANCE￨3 ,￨3 RA_ADD￨3 ,￨3 false￨3 )￨3 ;￨3 resourceAdapters￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 PooledConnectionFactoryRemove￨3 .￨3 INSTANCE￨3 ,￨3 RA_REMOVE￨3 )￨3 ;￨3 PooledConnectionFactoryWriteAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 resourceAdapters￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 queues￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 JMS_QUEUE_PATH￨3 ,￨3 JMS_QUEUE_RESOURCE￨3 )￨3 ;￨3 queues￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 JMSQueueAdd￨3 .￨3 INSTANCE￨3 ,￨3 JMSQueueAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 queues￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 JMSQueueRemove￨3 .￨3 INSTANCE￨3 ,￨3 JMSQueueRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 JmsQueueConfigurationWriteHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 queues￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 JMSQueueAddJndiHandler￨3 .￨3 INSTANCE￨3 .￨3 registerOperation￨3 (￨3 queues￨3 )￨3 ;￨3 if￨3 (￨3 registerRuntimeOnly￨4 )￨3 {￨3 JmsQueueReadAttributeHandler￨4 .￨4 INSTANCE￨4 .￨4 registerAttributes￨4 (￨4 queues￨4 )￨4 ;￨4 JMSQueueControlHandler￨4 .￨4 INSTANCE￨4 .￨4 registerOperations￨4 (￨4 queues￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 topics￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 TOPIC_PATH￨3 ,￨3 JMS_TOPIC_RESOURCE￨3 )￨3 ;￨3 topics￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 JMSTopicAdd￨3 .￨3 INSTANCE￨3 ,￨3 JMSTopicAdd￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 topics￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 JMSTopicRemove￨3 .￨3 INSTANCE￨3 ,￨3 JMSTopicRemove￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 )￨3 ;￨3 JMSTopicConfigurationWriteHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 topics￨3 )￨3 ;￨3 JMSTopicAddJndiHandler￨3 .￨3 INSTANCE￨3 .￨3 registerOperation￨3 (￨3 topics￨3 )￨3 ;￨3 if￨3 (￨3 registerRuntimeOnly￨4 )￨3 {￨3 JMSTopicReadAttributeHandler￨4 .￨4 INSTANCE￨4 .￨4 registerAttributes￨4 (￨4 topics￨4 )￨4 ;￨4 JMSTopicControlHandler￨4 .￨4 INSTANCE￨4 .￨4 registerOperations￨4 (￨4 topics￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 securitySettings￨3 =￨3 serverRegistration￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 SECURITY_SETTING￨3 ,￨3 MessagingSubsystemProviders￨3 .￨3 SECURITY_SETTING￨3 )￨3 ;￨3 securitySettings￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 SecuritySettingAdd￨3 .￨3 INSTANCE￨3 ,￨3 SecuritySettingAdd￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 securitySettings￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 SecuritySettingRemove￨3 .￨3 INSTANCE￨3 ,￨3 SecuritySettingRemove￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 securityRole￨3 =￨3 securitySettings￨3 .￨3 registerSubModel￨3 (￨3 MessagingExtension￨3 .￨3 SECURITY_ROLE￨3 ,￨3 MessagingSubsystemProviders￨3 .￨3 SECURITY_ROLE￨3 )￨3 ;￨3 securityRole￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 SecurityRoleAdd￨3 .￨3 INSTANCE￨3 ,￨3 SecurityRoleAdd￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 securityRole￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 SecurityRoleRemove￨3 .￨3 INSTANCE￨3 ,￨3 SecurityRoleRemove￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 SecurityRoleAttributeHandler￨3 .￨3 INSTANCE￨3 .￨3 registerAttributes￨3 (￨3 securityRole￨3 ,￨3 registerRuntimeOnly￨3 )￨3 ;￨3 if￨3 (￨3 context￨4 .￨4 isRuntimeOnlyRegistrationValid￨4 (￨4 )￨4 )￨3 {￨3 ResourceDefinition￨4 deploymentsDef￨4 =￨4 new￨4 org￨4 .￨4 jboss￨4 .￨4 as￨4 .￨4 controller￨4 .￨4 SimpleResourceDefinition￨4 (￨4 PathElement￨4 .￨4 pathElement￨4 (￨4 SUBSYSTEM￨4 ,￨4 MessagingExtension￨4 .￨4 SUBSYSTEM_NAME￨4 )￨4 ,￨4 MessagingExtension￨4 .￨4 getResourceDescriptionResolver￨4 (￨4 "deployed"￨4 )￨4 )￨4 ;￨4 final￨4 ManagementResourceRegistration￨4 deploymentsRegistration￨4 =￨4 subsystem￨4 .￨4 registerDeploymentModel￨4 (￨4 deploymentsDef￨4 )￨4 ;￨4 <START_BUG>￨4 final￨4 ManagementResourceRegistration￨4 serverModel￨4 =￨4 deploymentsRegistration￨4 .￨4 registerSubModel￨4 (￨4 DeploymentHornetQServerResourceDefinition￨4 .￨4 INSTANCE￨4 )￨4 ;￨4 <END_BUG>￨4 final￨4 ManagementResourceRegistration￨4 deploymentQueue￨4 =￨4 serverModel￨4 .￨4 registerSubModel￨4 (￨4 MessagingExtension￨4 .￨4 JMS_QUEUE_PATH￨4 ,￨4 JMS_QUEUE_RESOURCE￨4 )￨4 ;￨4 JmsQueueReadAttributeHandler￨4 .￨4 INSTANCE￨4 .￨4 registerAttributes￨4 (￨4 deploymentQueue￨4 )￨4 ;￨4 JMSQueueControlHandler￨4 .￨4 INSTANCE￨4 .￨4 registerOperations￨4 (￨4 deploymentQueue￨4 )￨4 ;￨4 final￨4 ManagementResourceRegistration￨4 deploymentTopics￨4 =￨4 serverModel￨4 .￨4 registerSubModel￨4 (￨4 MessagingExtension￨4 .￨4 TOPIC_PATH￨4 ,￨4 JMS_TOPIC_RESOURCE￨4 )￨4 ;￨4 JMSTopicReadAttributeHandler￨4 .￨4 INSTANCE￨4 .￨4 registerAttributes￨4 (￨4 deploymentTopics￨4 )￨4 ;￨4 JMSTopicControlHandler￨4 .￨4 INSTANCE￨4 .￨4 registerOperations￨4 (￨4 deploymentTopics￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 initializeParsers￨2 (￨2 ExtensionParsingContext￨3 context￨3 )￨2 {￨2 }￨2 static￨2 void￨2 createParamRegistration￨2 (￨2 final￨3 ManagementResourceRegistration￨3 parent￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LocalVariable￨1 extends￨1 JavaElement￨1 implements￨1 ILocalVariable￨1 ,￨1 ISourceReference￨1 {￨1 public￨2 int￨2 declarationSourceStart￨2 ;￨2 public￨2 int￨2 declarationEnd￨2 ;￨2 public￨2 int￨2 nameStart￨2 ;￨2 public￨2 int￨2 nameEnd￨2 ;￨2 public￨2 LocalVariable￨2 (￨2 JavaElement￨3 parent￨3 ,￨3 String￨3 name￨3 ,￨3 int￨3 declarationSourceStart￨3 ,￨3 int￨3 declarationEnd￨3 ,￨3 int￨3 nameStart￨3 ,￨3 int￨3 nameEnd￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 closing￨2 (￨2 Object￨2 info￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 createElementInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 generateInfos￨2 (￨2 Object￨2 info￨2 ,￨2 HashMap￨2 newElements￨2 ,￨2 IProgressMonitor￨2 pm￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getHandleFromMemento￨2 (￨2 String￨3 token￨3 ,￨3 StringTokenizer￨3 memento￨3 ,￨3 WorkingCopyOwner￨3 owner￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getHandleMemento￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 char￨2 getHandleMementoDelimiter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IResource￨2 getCorrespondingResource￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getElementType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ISourceRange￨2 getNameRange￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPath￨2 getPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IResource￨2 getResource￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getSource￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 IOpenable￨3 openable￨3 =￨3 getOpenableParent￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 IBuffer￨3 buffer￨3 =￨3 openable￨3 .￨3 getBuffer￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 buffer￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 ISourceRange￨3 range￨3 =￨3 getSourceRange￨3 (￨3 )￨3 ;￨3 int￨3 offset￨3 =￨3 range￨3 .￨3 getOffset￨3 (￨3 )￨3 ;￨3 int￨3 length￨3 =￨3 range￨3 .￨3 getLength￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 offset￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨4 ||￨4 (￨4 length￨4 ==￨4 0￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 return￨4 buffer￨4 .￨4 getText￨4 (￨4 offset￨4 ,￨4 length￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 RuntimeException￨4 e￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 }￨2 public￨2 ISourceRange￨2 getSourceRange￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IResource￨2 getUnderlyingResource￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ExpressionStatement￨1 extends￨1 Statement￨1 {￨1 private￨2 Expression￨2 expression￨2 =￨2 null￨2 ;￨2 ExpressionStatement￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getNodeType￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 ExpressionStatement￨3 result￨3 =￨3 new￨3 ExpressionStatement￨3 (￨3 target￨3 )￨3 ;￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setLeadingComment￨3 (￨3 getLeadingComment￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 setExpression￨3 (￨3 (￨3 (￨3 Expression￨3 )￨3 (￨3 getExpression￨3 (￨3 )￨3 .￨3 clone￨3 (￨3 target￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 boolean￨2 subtreeMatch￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 getExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExpression￨2 (￨2 Expression￨3 expression￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractAvailableCondition￨1 implements￨1 Condition￨1 {￨1 private￨2 Path￨2 m_classpath￨2 =￨2 new￨2 Path￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 addClasspath￨2 (￨2 final￨2 Path￨2 classpath￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 m_classpath￨3 .￨3 addPath￨3 (￨3 classpath￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 ClassLoader￨2 buildClassLoader￨2 (￨2 final￨2 TaskContext￨2 context￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DropTargetEffect￨1 extends￨1 DropTargetAdapter￨1 {￨1 Control￨2 control￨2 ;￨2 public￨2 DropTargetEffect￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 Control￨2 getControl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Widget￨2 getItem￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 )￨2 {￨2 }￨2 Widget￨2 getItem￨2 (￨2 Table￨3 table￨3 ,￨3 int￨3 x￨3 ,￨3 int￨3 y￨3 )￨2 {￨2 }￨2 Widget￨2 getItem￨2 (￨2 Tree￨3 tree￨3 ,￨3 int￨3 x￨3 ,￨3 int￨3 y￨3 )￨2 {￨2 Point￨3 point￨3 =￨3 new￨3 Point￨3 (￨3 x￨3 ,￨3 y￨3 )￨3 ;￨3 point￨3 =￨3 tree￨3 .￨3 toControl￨3 (￨3 point￨3 )￨3 ;￨3 TreeItem￨3 item￨3 =￨3 tree￨3 .￨3 getItem￨3 (￨3 point￨3 )￨3 ;￨3 if￨3 (￨3 item￨4 ==￨4 null￨4 )￨3 {￨3 Rectangle￨4 area￨4 =￨4 tree￨4 .￨4 getClientArea￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 area￨5 .￨5 contains￨5 (￨5 point￨5 )￨5 )￨4 {￨4 int￨5 treeBottom￨5 =￨5 (￨5 area￨5 .￨5 y￨5 )￨5 +￨5 (￨5 area￨5 .￨5 height￨5 )￨5 ;￨5 item￨5 =￨5 tree￨5 .￨5 getTopItem￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 item￨6 !=￨6 null￨6 )￨5 {￨5 Rectangle￨6 rect￨6 =￨6 item￨6 .￨6 getBounds￨6 (￨6 )￨6 ;￨6 int￨6 itemBottom￨6 =￨6 (￨6 rect￨6 .￨6 y￨6 )￨6 +￨6 (￨6 rect￨6 .￨6 height￨6 )￨6 ;￨6 <START_BUG>￨6 if￨6 (￨6 (￨6 (￨6 rect￨6 .￨6 y￨6 )￨6 <=￨6 (￨6 point￨6 .￨6 y￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 point￨6 .￨6 y￨6 )￨6 <=￨6 itemBottom￨6 )￨6 )￨6 <END_BUG>￨6 return￨6 item￨6 ;￨6 if￨6 (￨6 itemBottom￨7 >￨7 treeBottom￨7 )￨6 {￨6 break￨7 ;￨7 }￨6 item￨6 =￨6 nextItem￨6 (￨6 tree￨6 ,￨6 item￨6 )￨6 ;￨6 }￨5 return￨5 null￨5 ;￨5 }￨4 }￨3 return￨3 item￨3 ;￨3 }￨2 TreeItem￨2 nextItem￨2 (￨2 Tree￨3 tree￨3 ,￨3 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 TreeItem￨2 previousItem￨2 (￨2 Tree￨3 tree￨3 ,￨3 TreeItem￨3 item￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DivertRemove￨1 extends￨1 AbstractRemoveStepHandler￨1 implements￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 DivertRemove￨2 INSTANCE￨2 =￨2 new￨2 DivertRemove￨2 (￨2 )￨2 ;￨2 private￨2 DivertRemove￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRemove￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 recoverServices￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 ServiceRegistry￨3 registry￨3 =￨3 context￨3 .￨3 getServiceRegistry￨3 (￨3 true￨3 )￨3 ;￨3 final￨3 ServiceName￨3 hqServiceName￨3 =￨3 MessagingServices￨3 .￨3 getHornetQServiceName￨3 (￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 get￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 ServiceController￨3 <￨3 ?￨3 >￨3 hqService￨3 =￨3 registry￨3 .￨3 getService￨3 (￨3 hqServiceName￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 hqService￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 hqService￨4 .￨4 getState￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 State￨4 .￨4 UP￨4 )￨4 )￨4 )￨3 {￨3 final￨4 String￨4 name￨4 =￨4 PathAddress￨4 .￨4 pathAddress￨4 (￨4 operation￨4 .￨4 require￨4 (￨4 OP_ADDR￨4 )￨4 )￨4 .￨4 getLastElement￨4 (￨4 )￨4 .￨4 getValue￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 final￨4 DivertConfiguration￨4 divertConfiguration￨4 =￨4 DivertAdd￨4 .￨4 createDivertConfiguration￨4 (￨4 name￨4 ,￨4 model￨4 )￨4 ;￨4 <END_BUG>￨4 HornetQServer￨4 server￨4 =￨4 HornetQServer￨4 .￨4 class￨4 .￨4 cast￨4 (￨4 hqService￨4 .￨4 getValue￨4 (￨4 )￨4 )￨4 ;￨4 DivertAdd￨4 .￨4 createDivert￨4 (￨4 name￨4 ,￨4 divertConfiguration￨4 ,￨4 server￨4 .￨4 getHornetQServerControl￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LazilyCompactedRow￨1 extends￨1 AbstractCompactedRow￨1 implements￨1 IIterableColumns￨1 {￨1 private￨2 final￨2 List￨2 <￨2 SSTableIdentityIterator￨2 >￨2 rows￨2 ;￨2 private￨2 final￨2 boolean￨2 major￨2 ;￨2 private￨2 final￨2 int￨2 gcBefore￨2 ;￨2 private￨2 final￨2 DataOutputBuffer￨2 headerBuffer￨2 ;￨2 private￨2 ColumnFamily￨2 emptyColumnFamily￨2 ;￨2 private￨2 LazilyCompactedRow￨2 .￨2 LazyColumnIterator￨2 iter￨2 ;￨2 private￨2 int￨2 columnCount￨2 ;￨2 private￨2 long￨2 columnSerializedSize￨2 ;￨2 public￨2 LazilyCompactedRow￨2 (￨2 List￨3 <￨3 SSTableIdentityIterator￨3 >￨3 rows￨3 ,￨3 boolean￨3 major￨3 ,￨3 int￨3 gcBefore￨3 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutput￨2 out￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 update￨2 (￨2 MessageDigest￨3 digest￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEmpty￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 boolean￨3 cfIrrelevant￨3 =￨3 (￨3 ColumnFamilyStore￨3 .￨3 removeDeleted￨3 (￨3 emptyColumnFamily￨3 ,￨3 gcBefore￨3 )￨3 )￨3 ==￨3 null￨3 ;￨3 <END_BUG>￨3 return￨3 cfIrrelevant￨3 &&￨3 (￨3 (￨3 columnCount￨3 )￨3 ==￨3 0￨3 )￨3 ;￨3 }￨2 public￨2 int￨2 getEstimatedColumnCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AbstractType￨2 getComparator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Iterator￨2 <￨2 IColumn￨2 >￨2 iterator￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 LazyColumnIterator￨2 extends￨2 ReducingIterator￨2 <￨2 IColumn￨2 ,￨2 IColumn￨2 >￨2 {￨2 ColumnFamily￨3 container￨3 =￨3 emptyColumnFamily￨3 .￨3 cloneMeShallow￨3 (￨3 )￨3 ;￨3 long￨3 serializedSize￨3 =￨3 4￨3 ;￨3 int￨3 size￨3 =￨3 0￨3 ;￨3 public￨3 LazyColumnIterator￨3 (￨3 Iterator￨4 <￨4 IColumn￨4 >￨4 source￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 isEqual￨3 (￨3 IColumn￨4 o1￨4 ,￨4 IColumn￨4 o2￨4 )￨3 {￨3 }￨3 public￨3 void￨3 reduce￨3 (￨3 IColumn￨4 current￨4 )￨3 {￨3 }￨3 protected￨3 IColumn￨3 getReduced￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TextChatComposite￨1 extends￨1 Composite￨1 {￨1 public￨2 static￨2 final￨2 Trace￨2 trace￨2 =￨2 Trace￨2 .￨2 create￨2 (￨2 "textchatcomposite"￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 int￨2 DEFAULT_INPUT_HEIGHT￨2 =￨2 25￨2 ;￨2 protected￨2 static￨2 final￨2 int￨2 DEFAULT_INPUT_SEPARATOR￨2 =￨2 5￨2 ;￨2 protected￨2 String￨2 TEXT_INPUT_INIT￨2 =￨2 MessageLoader￨2 .￨2 getString￨2 (￨2 "TextChatComposite.textinputinit"￨2 )￨2 ;￨2 protected￨2 Color￨2 meColor￨2 =￨2 null￨2 ;￨2 protected￨2 Color￨2 otherColor￨2 =￨2 null￨2 ;￨2 protected￨2 Color￨2 systemColor￨2 =￨2 null￨2 ;￨2 protected￨2 StyledText￨2 styledText￨2 ;￨2 protected￨2 TextViewer￨2 textoutput￨2 ;￨2 protected￨2 Text￨2 textinput￨2 ;￨2 protected￨2 int￨2 [￨2 ]￨2 sashWeights￨2 =￨2 new￨2 int￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 protected￨2 ChatLayout￨2 cl￨2 =￨2 null￨2 ;￨2 protected￨2 boolean￨2 isTyping￨2 ;￨2 protected￨2 String￨2 initText￨2 ;￨2 protected￨2 ITextInputHandler￨2 inputHandler￨2 ;￨2 SimpleDateFormat￨2 df￨2 =￨2 new￨2 SimpleDateFormat￨2 (￨2 "hh:mm<seq2seq4repair_space>a"￨2 )￨2 ;￨2 protected￨2 IUser￨2 localUser￨2 ;￨2 protected￨2 IUser￨2 remoteUser￨2 ;￨2 protected￨2 boolean￨2 showTimestamp￨2 =￨2 true￨2 ;￨2 private￨2 Action￨2 outputClear￨2 =￨2 null￨2 ;￨2 private￨2 Action￨2 outputCopy￨2 =￨2 null￨2 ;￨2 private￨2 Action￨2 outputPaste￨2 =￨2 null￨2 ;￨2 private￨2 Action￨2 outputSelectAll￨2 =￨2 null￨2 ;￨2 public￨2 TextChatComposite￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 String￨3 initText￨3 ,￨3 ITextInputHandler￨3 handler￨3 ,￨3 IUser￨3 localUser￨3 ,￨3 IUser￨3 remoteUser￨3 )￨2 {￨2 }￨2 private￨2 void￨2 makeActions￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 outputClear￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 outputCopy￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 outputPaste￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 outputSelectAll￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 hookContextMenu￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 fillContextMenu￨2 (￨2 IMenuManager￨3 manager￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLocalUser￨2 (￨2 IUser￨3 newUser￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRemoteUser￨2 (￨2 IUser￨3 remoteUser￨3 )￨2 {￨2 }￨2 public￨2 IUser￨2 getRemoteUser￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getCurrentDateTime￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 makeLineWithTimestamp￨2 (￨2 String￨3 line￨3 )￨2 {￨2 }￨2 public￨2 IUser￨2 getLocalUser￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 appendText￨2 (￨2 ChatLine￨3 text￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 handleKeyPressed￨2 (￨2 KeyEvent￨3 evt￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 evt￨3 .￨3 keyCode￨3 )￨3 ==￨3 (￨3 SWT￨3 .￨3 CR￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 handleEnter￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 handleEnter￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 clearInput￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 sendTextLineInput￨2 (￨2 String￨3 text￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 sendStartedTyping￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getShellName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setDisposed￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 MemoryMXBeanAttributeHandler￨1 extends￨1 AbstractPlatformMBeanAttributeHandler￨1 {￨1 static￨2 final￨2 MemoryMXBeanAttributeHandler￨2 INSTANCE￨2 =￨2 new￨2 MemoryMXBeanAttributeHandler￨2 (￨2 )￨2 ;￨2 private￨2 MemoryMXBeanAttributeHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeReadAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 String￨3 name￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 NAME￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 OBJECT_NAME￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 equals￨3 (￨3 name￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 context￨3 .￨3 getResult￨3 (￨3 )￨3 .￨3 set￨3 (￨3 ManagementFactory￨3 .￨3 MEMORY_MXBEAN_NAME￨3 )￨3 ;￨3 else￨3 if￨3 (￨3 OBJECT_PENDING_FINALIZATION_COUNT￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getMemoryMXBean￨4 (￨4 )￨4 .￨4 getObjectPendingFinalizationCount￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 HEAP_MEMORY_USAGE￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 final￨4 ModelNode￨4 mu￨4 =￨4 PlatformMBeanUtil￨4 .￨4 getDetypedMemoryUsage￨4 (￨4 ManagementFactory￨4 .￨4 getMemoryMXBean￨4 (￨4 )￨4 .￨4 getHeapMemoryUsage￨4 (￨4 )￨4 )￨4 ;￨4 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 mu￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 NON_HEAP_MEMORY_USAGE￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 final￨4 ModelNode￨4 mu￨4 =￨4 PlatformMBeanUtil￨4 .￨4 getDetypedMemoryUsage￨4 (￨4 ManagementFactory￨4 .￨4 getMemoryMXBean￨4 (￨4 )￨4 .￨4 getNonHeapMemoryUsage￨4 (￨4 )￨4 )￨4 ;￨4 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 mu￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 VERBOSE￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 ManagementFactory￨4 .￨4 getMemoryMXBean￨4 (￨4 )￨4 .￨4 isVerbose￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 (￨4 MEMORY_METRICS￨4 .￨4 contains￨4 (￨4 name￨4 )￨4 )￨4 ||￨4 (￨4 MEMORY_READ_WRITE_ATTRIBUTES￨4 .￨4 contains￨4 (￨4 name￨4 )￨4 )￨4 )￨3 {￨3 throw￨4 ROOT_LOGGER￨4 .￨4 badReadAttributeImpl￨4 (￨4 name￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 unknownAttribute￨4 (￨4 operation￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeWriteAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RequestHandlerStackTest￨1 extends￨1 BaseRequestHandlerStackTest￨1 {￨1 public￨2 RequestHandlerStackTest￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 testFlag1￨2 ;￨2 private￨2 boolean￨2 testFlag2￨2 ;￨2 private￨2 boolean￨2 testFlag3￨2 ;￨2 private￨2 boolean￨2 testFlag4￨2 ;￨2 private￨2 boolean￨2 detachedFlag1￨2 ;￨2 private￨2 boolean￨2 detachedFlag2￨2 ;￨2 private￨2 boolean￨2 detachedFlag3￨2 ;￨2 private￨2 boolean￨2 detachedFlag4￨2 ;￨2 private￨2 void￨2 initFlags￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test1￨2 (￨2 )￨2 {￨2 initFlags￨3 (￨3 )￨3 ;￨3 final￨3 Response￨3 originalResponse￨3 =￨3 newResponse￨3 (￨3 )￨3 ;￨3 final￨3 RequestHandlerStack￨3 stack￨3 =￨3 newStack￨3 (￨3 originalResponse￨3 )￨3 ;￨3 final￨3 IRequestHandler￨3 handler3￨3 =￨3 new￨3 IRequestHandler￨3 (￨3 )￨3 {￨3 public￨4 void￨4 respond￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 testFlag3￨5 =￨5 false￨5 ;￨5 }￨4 public￨4 void￨4 detach￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 detachedFlag3￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 ;￨3 final￨3 IRequestHandler￨3 handler2￨3 =￨3 new￨3 IRequestHandler￨3 (￨3 )￨3 {￨3 public￨4 void￨4 respond￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 testFlag2￨5 =￨5 false￨5 ;￨5 stack￨5 .￨5 replaceAllRequestHandlers￨5 (￨5 handler3￨5 )￨5 ;￨5 testFlag2￨5 =￨5 true￨5 ;￨5 }￨4 public￨4 void￨4 detach￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 detachedFlag2￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 ;￨3 final￨3 IRequestHandler￨3 handler1￨3 =￨3 new￨3 IRequestHandler￨3 (￨3 )￨3 {￨3 public￨4 void￨4 respond￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 testFlag1￨5 =￨5 false￨5 ;￨5 Response￨5 resp￨5 =￨5 newResponse￨5 (￨5 )￨5 ;￨5 stack￨5 .￨5 setResponse￨5 (￨5 resp￨5 )￨5 ;￨5 stack￨5 .￨5 executeRequestHandler￨5 (￨5 handler2￨5 )￨5 ;￨5 assertEquals￨5 (￨5 stack￨5 .￨5 getResponse￨5 (￨5 )￨5 ,￨5 resp￨5 )￨5 ;￨5 testFlag1￨5 =￨5 true￨5 ;￨5 }￨4 public￨4 void￨4 detach￨4 (￨4 IRequestCycle￨5 requestCycle￨5 )￨4 {￨4 detachedFlag1￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 ;￨3 stack￨3 .￨3 executeRequestHandler￨3 (￨3 handler1￨3 )￨3 ;￨3 assertEquals￨3 (￨3 stack￨3 .￨3 getResponse￨3 (￨3 )￨3 ,￨3 originalResponse￨3 )￨3 ;￨3 stack￨3 .￨3 detach￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 assertTrue￨3 (￨3 testFlag1￨3 )￨3 ;￨3 <END_BUG>￨3 assertFalse￨3 (￨3 testFlag2￨3 )￨3 ;￨3 assertFalse￨3 (￨3 testFlag3￨3 )￨3 ;￨3 assertTrue￨3 (￨3 detachedFlag1￨3 )￨3 ;￨3 assertTrue￨3 (￨3 detachedFlag2￨3 )￨3 ;￨3 assertTrue￨3 (￨3 detachedFlag3￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 test2￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test3￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 }￨2 public￨2 void￨2 setNextUid￨2 (￨2 int￨3 next￨3 )￨2 {￨2 }￨2 public￨2 JDialog￨2 showFilterDialog￨2 (￨2 AbstractMailFrameController￨3 frameController￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 exists￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 HeaderList￨2 getHeaderList￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addSearchToHistory￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 VirtualFolder￨3 searchFolder￨3 =￨3 (￨3 (￨3 VirtualFolder￨3 )￨3 (￨3 treeModel￨3 .￨3 getFolder￨3 (￨3 106￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 searchFolder￨4 .￨4 equals￨4 (￨4 this￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 searchFolder￨4 .￨4 getChildCount￨4 (￨4 )￨4 )￨4 >=￨4 10￨4 )￨3 {￨3 MessageFolder￨4 child￨4 =￨4 (￨4 (￨4 MessageFolder￨4 )￨4 (￨4 searchFolder￨4 .￨4 getChildAt￨4 (￨4 0￨4 )￨4 )￨4 )￨4 ;￨4 child￨4 .￨4 removeFromParent￨4 (￨4 )￨4 ;￨4 }￨3 String￨3 name￨3 =￨3 "search<seq2seq4repair_space>result"￨3 ;￨3 VirtualFolder￨3 newFolder￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 newFolder￨4 =￨4 (￨4 (￨4 VirtualFolder￨4 )￨4 (￨4 FolderFactory￨4 .￨4 getInstance￨4 (￨4 )￨4 .￨4 createChild￨4 (￨4 searchFolder￨4 ,￨4 name￨4 ,￨4 "VirtualFolder"￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 ex￨4 .￨4 printStackTrace￨4 (￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 newFolder￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 int￨3 uid￨3 =￨3 getFolderItem￨3 (￨3 )￨3 .￨3 getInteger￨3 (￨3 "property"￨3 ,￨3 "source_uid"￨3 )￨3 ;￨3 boolean￨3 includes￨3 =￨3 getFolderItem￨3 (￨3 )￨3 .￨3 getBoolean￨3 (￨3 "property"￨3 ,￨3 "include_subfolders"￨3 )￨3 ;￨3 FolderItem￨3 newFolderItem￨3 =￨3 newFolder￨3 .￨3 getFolderItem￨3 (￨3 )￨3 ;￨3 newFolderItem￨3 .￨3 set￨3 (￨3 "property"￨3 ,￨3 "source_uid"￨3 ,￨3 uid￨3 )￨3 ;￨3 newFolderItem￨3 .￨3 set￨3 (￨3 "property"￨3 ,￨3 "include_subfolders"￨3 ,￨3 includes￨3 )￨3 ;￨3 newFolderItem￨3 .￨3 getElement￨3 (￨3 "filter"￨3 )￨3 .￨3 removeFromParent￨3 (￨3 )￨3 ;￨3 newFolderItem￨3 .￨3 getRoot￨3 (￨3 )￨3 .￨3 addElement￨3 (￨3 (￨3 (￨3 XmlElement￨3 )￨3 (￨3 getFolderItem￨3 (￨3 )￨3 .￨3 getElement￨3 (￨3 "filter"￨3 )￨3 .￨3 clone￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 FilterCriteria￨3 newc￨3 =￨3 new￨3 Filter￨3 (￨3 getFolderItem￨3 (￨3 )￨3 .￨3 getElement￨3 (￨3 "filter"￨3 )￨3 )￨3 .￨3 getFilterRule￨3 (￨3 )￨3 .￨3 get￨3 (￨3 0￨3 )￨3 ;￨3 StringBuffer￨3 buf￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 newc￨4 .￨4 getType￨4 (￨4 )￨4 .￨4 equalsIgnoreCase￨4 (￨4 "flags"￨4 )￨4 )￨3 {￨3 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 "flags<seq2seq4repair_space>found"￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getType￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>("￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getCriteriaString￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>"￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getPattern￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 ")"￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 newc￨4 .￨4 getType￨4 (￨4 )￨4 .￨4 equalsIgnoreCase￨4 (￨4 "custom<seq2seq4repair_space>headerfield"￨4 )￨4 )￨3 {￨3 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getHeaderItemString￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>("￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getCriteriaString￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>"￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getPattern￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 ")"￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getType￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>("￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getCriteriaString￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>"￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 newc￨4 .￨4 getPattern￨4 (￨4 )￨4 )￨4 ;￨4 buf￨4 .￨4 append￨4 (￨4 ")"￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 newFolder￨3 .￨3 renameFolder￨3 (￨3 buf￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 treeModel￨3 .￨3 nodeStructureChanged￨3 (￨3 searchFolder￨3 )￨3 ;￨3 treeModel￨3 .￨3 nodeChanged￨3 (￨3 newFolder￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 applySearch￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 applySearch￨2 (￨2 MessageFolder￨2 parent￨2 ,￨2 Filter￨2 filter￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 DefaultSearchEngine￨2 getSearchEngine￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Filter￨2 getFilter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getVirtualUid￨2 (￨2 MessageFolder￨2 parent￨2 ,￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 ColumbaHeader￨2 header￨2 ,￨2 MessageFolder￨2 f￨2 ,￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 markMessage￨2 (￨2 Object￨2 [￨2 ]￨2 uids￨2 ,￨2 int￨2 variant￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 removeMessage￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MimePart￨2 getMimePart￨2 (￨2 Object￨2 uid￨2 ,￨2 Integer￨2 [￨2 ]￨2 address￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MimeTree￨2 getMimePartTree￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumbaHeader￨2 getMessageHeader￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ColumbaMessage￨2 getMessage￨2 (￨2 Object￨2 uid￨2 ,￨2 WorkerStatusController￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 searchMessages￨2 (￨2 Filter￨2 filter￨2 ,￨2 Object￨2 [￨2 ]￨2 uids￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 searchMessages￨2 (￨2 Filter￨2 filter￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getDefaultChild￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 XmlElement￨2 getDefaultProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FolderCommandReference￨2 [￨2 ]￨2 getCommandReference￨2 (￨2 FolderCommandReference￨3 [￨3 ]￨3 r￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 tryToGetLock￨2 (￨2 Object￨3 locker￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 [￨2 ]￨2 getUids￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 addMessage￨2 (￨2 InputStream￨2 in￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getAttribute￨2 (￨2 Object￨2 uid￨2 ,￨2 String￨2 key￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Flags￨2 getFlags￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Header￨2 getHeaderFields￨2 (￨2 Object￨2 uid￨2 ,￨2 String￨2 [￨2 ]￨2 keys￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getMessageSourceStream￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getMimePartBodyStream￨2 (￨2 Object￨2 uid￨2 ,￨2 Integer￨2 [￨2 ]￨2 address￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InputStream￨2 getMimePartSourceStream￨2 (￨2 Object￨2 uid￨2 ,￨2 Integer￨2 [￨2 ]￨2 address￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsAddMessage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsAddFolder￨2 (￨2 AbstractFolder￨3 newFolder￨3 )￨2 {￨2 }￨2 public￨2 void￨2 innerCopy￨2 (￨2 MailboxInterface￨3 destFolder￨3 ,￨3 Object￨3 [￨3 ]￨3 uids￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAttribute￨2 (￨2 Object￨2 uid￨2 ,￨2 String￨2 key￨2 ,￨2 Object￨2 value￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Attributes￨2 getAttributes￨2 (￨2 Object￨2 uid￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 addMessage￨2 (￨2 InputStream￨2 in￨2 ,￨2 Attributes￨2 attributes￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 HeaderListStorage￨2 getHeaderListStorage￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 WebConnectorMetrics￨1 implements￨1 OperationStepHandler￨1 {￨1 static￨2 WebConnectorMetrics￨2 INSTANCE￨2 =￨2 new￨2 WebConnectorMetrics￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 BYTES_SENT￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 BYTES_SENT￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 BYTES_RECEIVED￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 BYTES_RECEIVED￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 PROCESSING_TIME￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 PROCESSING_TIME￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 ERROR_COUNT￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 ERROR_COUNT￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 MAX_TIME￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 MAX_TIME￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 REQUEST_COUNT￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 SimpleAttributeDefinitionBuilder￨2 (￨2 Constants￨2 .￨2 REQUEST_COUNT￨2 ,￨2 org￨2 .￨2 jboss￨2 .￨2 dmr￨2 .￨2 ModelType￨2 .￨2 INT￨2 ,￨2 true￨2 )￨2 .￨2 setStorageRuntime￨2 (￨2 )￨2 .￨2 build￨2 (￨2 )￨2 ;￨2 @￨2 Deprecated￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 ATTRIBUTES_OLD￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 static￨2 final￨2 SimpleAttributeDefinition￨2 [￨2 ]￨2 ATTRIBUTES￨2 =￨2 new￨2 SimpleAttributeDefinition￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 context￨4 .￨4 isNormalServer￨4 (￨4 )￨4 )￨3 {￨3 context￨4 .￨4 addStep￨4 (￨4 new￨4 OperationStepHandler￨4 (￨4 )￨4 {￨4 @￨5 Override￨5 public￨5 void￨5 execute￨5 (￨5 OperationContext￨5 context￨5 ,￨5 ModelNode￨5 operation￨5 )￨5 throws￨5 OperationFailedException￨5 (￨5 )￨5 {￨5 final￨6 PathAddress￨6 address￨6 =￨6 PathAddress￨6 .￨6 pathAddress￨6 (￨6 operation￨6 .￨6 require￨6 (￨6 OP_ADDR￨6 )￨6 )￨6 ;￨6 final￨6 String￨6 name￨6 =￨6 address￨6 .￨6 getLastElement￨6 (￨6 )￨6 .￨6 getValue￨6 (￨6 )￨6 ;￨6 final￨6 String￨6 attributeName￨6 =￨6 operation￨6 .￨6 require￨6 (￨6 NAME￨6 )￨6 .￨6 asString￨6 (￨6 )￨6 ;￨6 final￨6 ServiceController￨6 <￨6 ?￨6 >￨6 controller￨6 =￨6 context￨6 .￨6 getServiceRegistry￨6 (￨6 false￨6 )￨6 .￨6 getService￨6 (￨6 JBOSS_WEB_CONNECTOR￨6 .￨6 append￨6 (￨6 name￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 controller￨7 !=￨7 null￨7 )￨6 {￨6 try￨7 (￨7 )￨7 {￨7 final￨8 Connector￨8 connector￨8 =￨8 (￨8 (￨8 Connector￨8 )￨8 (￨8 controller￨8 .￨8 getValue￨8 (￨8 )￨8 )￨8 )￨8 ;￨8 final￨8 ModelNode￨8 result￨8 =￨8 context￨8 .￨8 getResult￨8 (￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 (￨9 connector￨9 .￨9 getProtocolHandler￨9 (￨9 )￨9 )￨9 !=￨9 null￨9 )￨9 &&￨9 (￨9 (￨9 connector￨9 .￨9 getProtocolHandler￨9 (￨9 )￨9 .￨9 getRequestGroupInfo￨9 (￨9 )￨9 )￨9 !=￨9 null￨9 )￨9 )￨8 {￨8 RequestGroupInfo￨9 info￨9 =￨9 connector￨9 .￨9 getProtocolHandler￨9 (￨9 )￨9 .￨9 getRequestGroupInfo￨9 (￨9 )￨9 ;￨9 if￨9 (￨9 Constants￨10 .￨10 BYTES_SENT￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getBytesSent￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 else￨9 if￨9 (￨9 Constants￨10 .￨10 BYTES_RECEIVED￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getBytesReceived￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 else￨9 if￨9 (￨9 Constants￨10 .￨10 PROCESSING_TIME￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getProcessingTime￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 else￨9 if￨9 (￨9 Constants￨10 .￨10 ERROR_COUNT￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getErrorCount￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 else￨9 if￨9 (￨9 Constants￨10 .￨10 MAX_TIME￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getMaxTime￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 else￨9 if￨9 (￨9 Constants￨10 .￨10 REQUEST_COUNT￨10 .￨10 equals￨10 (￨10 attributeName￨10 )￨10 )￨9 {￨9 result￨10 .￨10 set￨10 (￨10 (￨10 ""￨10 +￨10 (￨10 info￨10 .￨10 getRequestCount￨10 (￨10 )￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 }￨8 }￨7 catch￨7 (￨7 Exception￨8 e￨8 )￨7 {￨7 throw￨8 new￨8 OperationFailedException￨8 (￨8 new￨8 ModelNode￨8 (￨8 )￨8 .￨8 set￨8 (￨8 WebMessages￨8 .￨8 MESSAGES￨8 .￨8 failedToGetMetrics￨8 (￨8 e￨8 .￨8 getMessage￨8 (￨8 )￨8 )￨8 )￨8 )￨8 ;￨8 }￨7 }￨6 else￨6 {￨6 context￨7 .￨7 getResult￨7 (￨7 )￨7 .￨7 set￨7 (￨7 WebMessages￨7 .￨7 MESSAGES￨7 .￨7 noMetricsAvailable￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 context￨6 .￨6 completeStep￨6 (￨6 NOOP_ROLLBACK_HANDLER￨6 )￨6 ;￨6 }￨5 }￨4 ,￨4 RUNTIME￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 WebMessages￨4 .￨4 MESSAGES￨4 .￨4 noMetricsAvailable￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 NOOP_ROLLBACK_HANDLER￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 public￨2 void￨2 deselectAll￨2 (￨2 )￨2 {￨2 }￨2 void￨2 dropDown￨2 (￨2 boolean￨3 drop￨3 )￨2 {￨2 }￨2 Label￨2 getAssociatedLabel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Control￨2 [￨2 ]￨2 getChildren￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getEditable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getItem￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getItemCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getItemHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getItems￨2 (￨2 )￨2 {￨2 }￨2 char￨2 getMnemonic￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 Point￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getSelectionIndex￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getStyle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTextHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTextLimit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getVisibleItemCount￨2 (￨2 )￨2 {￨2 }￨2 void￨2 handleFocus￨2 (￨2 int￨3 type￨3 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 int￨2 indexOf￨2 (￨2 String￨3 string￨3 ,￨3 int￨3 start￨3 )￨2 {￨2 }￨2 void￨2 initAccessible￨2 (￨2 )￨2 {￨2 AccessibleAdapter￨3 accessibleAdapter￨3 =￨3 new￨3 AccessibleAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getName￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 String￨5 name￨5 =￨5 null￨5 ;￨5 Label￨5 label￨5 =￨5 getAssociatedLabel￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 label￨6 !=￨6 null￨6 )￨5 {￨5 name￨6 =￨6 stripMnemonic￨6 (￨6 label￨6 .￨6 getText￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 e￨5 .￨5 result￨5 =￨5 name￨5 ;￨5 }￨4 public￨4 void￨4 getKeyboardShortcut￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 String￨5 shortcut￨5 =￨5 null￨5 ;￨5 Label￨5 label￨5 =￨5 getAssociatedLabel￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 label￨6 !=￨6 null￨6 )￨5 {￨5 String￨6 text￨6 =￨6 label￨6 .￨6 getText￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 text￨7 !=￨7 null￨7 )￨6 {￨6 char￨7 mnemonic￨7 =￨7 getMnemonic￨7 (￨7 text￨7 )￨7 ;￨7 if￨7 (￨7 mnemonic￨8 !=￨8 ' '￨8 )￨7 {￨7 shortcut￨8 =￨8 "Alt+"￨8 +￨8 mnemonic￨8 ;￨8 }￨7 }￨6 }￨5 e￨5 .￨5 result￨5 =￨5 shortcut￨5 ;￨5 }￨4 public￨4 void￨4 getHelp￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 result￨5 =￨5 getToolTipText￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleListener￨3 (￨3 accessibleAdapter￨3 )￨3 ;￨3 text￨3 .￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleListener￨3 (￨3 accessibleAdapter￨3 )￨3 ;￨3 list￨3 .￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleListener￨3 (￨3 accessibleAdapter￨3 )￨3 ;￨3 arrow￨3 .￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleListener￨3 (￨3 new￨3 AccessibleAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getName￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 result￨5 =￨5 (￨5 isDropped￨5 (￨5 )￨5 )￨5 ?￨5 "Close"￨5 :￨5 "Open"￨5 ;￨5 }￨4 public￨4 void￨4 getKeyboardShortcut￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 result￨5 =￨5 "Alt+Down<seq2seq4repair_space>Arrow"￨5 ;￨5 }￨4 public￨4 void￨4 getHelp￨4 (￨4 AccessibleEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 result￨5 =￨5 getToolTipText￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleTextListener￨3 (￨3 new￨3 AccessibleTextAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getCaretOffset￨4 (￨4 AccessibleTextEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 offset￨5 =￨5 text￨5 .￨5 getCaretPosition￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleControlListener￨3 (￨3 new￨3 AccessibleControlAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getChildAtPoint￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 Point￨5 testPoint￨5 =￨5 toControl￨5 (￨5 e￨5 .￨5 x￨5 ,￨5 e￨5 .￨5 y￨5 )￨5 ;￨5 if￨5 (￨5 getBounds￨6 (￨6 )￨6 .￨6 contains￨6 (￨6 testPoint￨6 )￨6 )￨5 {￨5 e￨6 .￨6 childID￨6 =￨6 ACC￨6 .￨6 CHILDID_SELF￨6 ;￨6 }￨5 }￨4 public￨4 void￨4 getLocation￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 Rectangle￨5 location￨5 =￨5 getBounds￨5 (￨5 )￨5 ;￨5 Point￨5 pt￨5 =￨5 toDisplay￨5 (￨5 location￨5 .￨5 x￨5 ,￨5 location￨5 .￨5 y￨5 )￨5 ;￨5 e￨5 .￨5 x￨5 =￨5 pt￨5 .￨5 x￨5 ;￨5 e￨5 .￨5 y￨5 =￨5 pt￨5 .￨5 y￨5 ;￨5 e￨5 .￨5 width￨5 =￨5 location￨5 .￨5 width￨5 ;￨5 e￨5 .￨5 height￨5 =￨5 location￨5 .￨5 height￨5 ;￨5 }￨4 public￨4 void￨4 getChildCount￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 detail￨5 =￨5 0￨5 ;￨5 }￨4 public￨4 void￨4 getRole￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 detail￨5 =￨5 ACC￨5 .￨5 ROLE_COMBOBOX￨5 ;￨5 }￨4 public￨4 void￨4 getState￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 detail￨5 =￨5 ACC￨5 .￨5 STATE_NORMAL￨5 ;￨5 }￨4 public￨4 void￨4 getValue￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 result￨5 =￨5 getText￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 text￨3 .￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleControlListener￨3 (￨3 new￨3 AccessibleControlAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getRole￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 e￨5 .￨5 detail￨5 =￨5 (￨5 text￨5 .￨5 getEditable￨5 (￨5 )￨5 )￨5 ?￨5 ACC￨5 .￨5 ROLE_TEXT￨5 :￨5 ACC￨5 .￨5 ROLE_LABEL￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 arrow￨3 .￨3 getAccessible￨3 (￨3 )￨3 .￨3 addAccessibleControlListener￨3 (￨3 new￨3 AccessibleControlAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 getDefaultAction￨4 (￨4 AccessibleControlEvent￨5 e￨5 )￨4 {￨4 <START_BUG>￨5 e￨5 .￨5 result￨5 =￨5 (￨5 isDropped￨5 (￨5 )￨5 )￨5 ?￨5 "Close"￨5 :￨5 "Open"￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 )￨3 ;￨3 }￨2 boolean￨2 isDropped￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFocusControl￨2 (￨2 )￨2 {￨2 }￨2 void￨2 internalLayout￨2 (￨2 boolean￨3 changed￨3 )￨2 {￨2 }￨2 void￨2 listEvent￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 void￨2 popupEvent￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 redraw￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 redraw￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 all￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 int￨3 start￨3 ,￨3 int￨3 end￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeAll￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeModifyListener￨2 (￨2 ModifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 select￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBackground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEditable￨2 (￨2 boolean￨3 editable￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEnabled￨2 (￨2 boolean￨3 enabled￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 setFocus￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setFont￨2 (￨2 Font￨3 font￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setForeground￨2 (￨2 Color￨3 color￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setItem￨2 (￨2 int￨3 index￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setItems￨2 (￨2 String￨3 [￨3 ]￨3 items￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLayout￨2 (￨2 Layout￨3 layout￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 Point￨3 selection￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTextLimit￨2 (￨2 int￨3 limit￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setToolTipText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVisible￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVisibleItemCount￨2 (￨2 int￨3 count￨3 )￨2 {￨2 }￨2 String￨2 stripMnemonic￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 void￨2 textEvent￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AjaxTimerBehaviorTest￨1 extends￨1 WicketTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 AjaxTimerBehaviorTest￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 AjaxTimerBehaviorTest￨2 (￨2 String￨2 name￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddToAjaxUpdate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddToWebPage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 validate￨2 (￨2 AjaxTimerBehaviorTest￨3 .￨3 MyAjaxSelfUpdatingTimerBehavior￨3 timer￨3 ,￨3 boolean￨3 inBodyOnLoad￨3 )￨2 {￨2 String￨3 document￨3 =￨3 tester￨3 .￨3 getServletResponse￨3 (￨3 )￨3 .￨3 getDocument￨3 (￨3 )￨3 ;￨3 String￨3 updateScript￨3 =￨3 timer￨3 .￨3 getUpdateScript￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 inBodyOnLoad￨4 )￨3 {￨3 <START_BUG>￨4 String￨4 bodyOnLoadUpdateScript￨4 =￨4 (￨4 "Wicket.Event.add(window,<seq2seq4repair_space>\"load\",<seq2seq4repair_space>function()<seq2seq4repair_space>{<seq2seq4repair_space>"￨4 +￨4 updateScript￨4 )￨4 +￨4 ";});"￨4 ;￨4 <END_BUG>￨4 validateTimerScript￨4 (￨4 document￨4 ,￨4 bodyOnLoadUpdateScript￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 validateTimerScript￨4 (￨4 document￨4 ,￨4 updateScript￨4 )￨4 ;￨4 }￨3 tester￨3 .￨3 executeBehavior￨3 (￨3 timer￨3 )￨3 ;￨3 if￨3 (￨3 inBodyOnLoad￨4 )￨3 {￨3 updateScript￨4 =￨4 timer￨4 .￨4 getUpdateScript￨4 (￨4 )￨4 ;￨4 }￨3 document￨3 =￨3 tester￨3 .￨3 getServletResponse￨3 (￨3 )￨3 .￨3 getDocument￨3 (￨3 )￨3 ;￨3 validateTimerScript￨3 (￨3 document￨3 ,￨3 updateScript￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 validateTimerScript￨2 (￨2 String￨3 document￨3 ,￨3 String￨3 updateScript￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 quote￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 static￨2 class￨2 MyAjaxSelfUpdatingTimerBehavior￨2 extends￨2 AjaxSelfUpdatingTimerBehavior￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 final￨3 Duration￨3 duration￨3 ;￨3 String￨3 updateScript￨3 ;￨3 public￨3 MyAjaxSelfUpdatingTimerBehavior￨3 (￨3 Duration￨4 updateInterval￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 onComponentRendered￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getUpdateScript￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 GenericSubsystemDescribeHandler￨1 implements￨1 OperationStepHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 GenericSubsystemDescribeHandler￨2 INSTANCE￨2 =￨2 new￨2 GenericSubsystemDescribeHandler￨2 (￨2 )￨2 ;￨2 protected￨2 GenericSubsystemDescribeHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 final￨2 OperationContext￨2 context￨2 ,￨2 final￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 describe￨2 (￨2 final￨3 Resource￨3 resource￨3 ,￨3 final￨3 ModelNode￨3 address￨3 ,￨3 ModelNode￨3 result￨3 ,￨3 final￨3 ImmutableManagementResourceRegistration￨3 registration￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 (￨3 (￨3 registration￨3 .￨3 isRemote￨3 (￨3 )￨3 )￨3 ||￨3 (￨3 registration￨3 .￨3 isRuntimeOnly￨3 (￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 resource￨3 .￨3 isProxy￨3 (￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 resource￨3 .￨3 isRuntime￨3 (￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 ;￨3 }￨3 final￨3 Set￨3 <￨3 PathElement￨3 >￨3 children￨3 =￨3 registration￨3 .￨3 getChildAddresses￨3 (￨3 EMPTY_ADDRESS￨3 )￨3 ;￨3 result￨3 .￨3 add￨3 (￨3 createAddOperation￨3 (￨3 address￨3 ,￨3 resource￨3 .￨3 getModel￨3 (￨3 )￨3 ,￨3 children￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 PathElement￨4 element￨4 :￨4 children￨4 )￨3 {￨3 if￨4 (￨4 element￨5 .￨5 isMultiTarget￨5 (￨5 )￨5 )￨4 {￨4 final￨5 String￨5 childType￨5 =￨5 element￨5 .￨5 getKey￨5 (￨5 )￨5 ;￨5 for￨5 (￨5 final￨6 Resource￨6 .￨6 ResourceEntry￨6 entry￨6 :￨6 resource￨6 .￨6 getChildren￨6 (￨6 childType￨6 )￨6 )￨5 {￨5 final￨6 ImmutableManagementResourceRegistration￨6 childRegistration￨6 =￨6 registration￨6 .￨6 getSubModel￨6 (￨6 PathAddress￨6 .￨6 pathAddress￨6 (￨6 PathElement￨6 .￨6 pathElement￨6 (￨6 childType￨6 ,￨6 entry￨6 .￨6 getName￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 final￨6 ModelNode￨6 childAddress￨6 =￨6 address￨6 .￨6 clone￨6 (￨6 )￨6 ;￨6 childAddress￨6 .￨6 add￨6 (￨6 childType￨6 ,￨6 entry￨6 .￨6 getName￨6 (￨6 )￨6 )￨6 ;￨6 describe￨6 (￨6 entry￨6 ,￨6 childAddress￨6 ,￨6 result￨6 ,￨6 childRegistration￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 final￨5 Resource￨5 child￨5 =￨5 resource￨5 .￨5 getChild￨5 (￨5 element￨5 )￨5 ;￨5 final￨5 ImmutableManagementResourceRegistration￨5 childRegistration￨5 =￨5 registration￨5 .￨5 getSubModel￨5 (￨5 PathAddress￨5 .￨5 pathAddress￨5 (￨5 element￨5 )￨5 )￨5 ;￨5 final￨5 ModelNode￨5 childAddress￨5 =￨5 address￨5 .￨5 clone￨5 (￨5 )￨5 ;￨5 childAddress￨5 .￨5 add￨5 (￨5 element￨5 .￨5 getKey￨5 (￨5 )￨5 ,￨5 element￨5 .￨5 getValue￨5 (￨5 )￨5 )￨5 ;￨5 describe￨5 (￨5 child￨5 ,￨5 childAddress￨5 ,￨5 result￨5 ,￨5 childRegistration￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 ModelNode￨2 createAddOperation￨2 (￨2 final￨3 ModelNode￨3 address￨3 ,￨3 final￨3 ModelNode￨3 subModel￨3 ,￨3 final￨3 Set￨3 <￨3 PathElement￨3 >￨3 children￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RaActivate￨1 implements￨1 OperationStepHandler￨1 {￨1 static￨2 final￨2 RaActivate￨2 INSTANCE￨2 =￨2 new￨2 RaActivate￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 ModelNode￨3 address￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 ;￨3 final￨3 String￨3 idName￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 address￨3 )￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 raName￨3 =￨3 context￨3 .￨3 readResource￨3 (￨3 EMPTY_ADDRESS￨3 )￨3 .￨3 getModel￨3 (￨3 )￨3 .￨3 get￨3 (￨3 "archive"￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 context￨4 .￨4 isNormalServer￨4 (￨4 )￨4 )￨3 {￨3 context￨4 .￨4 addStep￨4 (￨4 new￨4 OperationStepHandler￨4 (￨4 )￨4 {￨4 public￨5 void￨5 execute￨5 (￨5 final￨5 OperationContext￨5 context￨5 ,￨5 ModelNode￨5 operation￨5 )￨5 throws￨5 OperationFailedException￨5 (￨5 )￨5 {￨5 final￨6 ServiceVerificationHandler￨6 svh￨6 =￨6 new￨6 ServiceVerificationHandler￨6 (￨6 )￨6 ;￨6 ServiceName￨6 restartedServiceName￨6 =￨6 RaOperationUtil￨6 .￨6 restartIfPresent￨6 (￨6 context￨6 ,￨6 raName￨6 ,￨6 idName￨6 ,￨6 svh￨6 )￨6 ;￨6 if￨6 (￨6 restartedServiceName￨7 ==￨7 null￨7 )￨6 {￨6 RaOperationUtil￨7 .￨7 activate￨7 (￨7 context￨7 ,￨7 idName￨7 ,￨7 svh￨7 )￨7 ;￨7 }￨6 context￨6 .￨6 addStep￨6 (￨6 svh￨6 ,￨6 VERIFY￨6 )￨6 ;￨6 context￨6 .￨6 completeStep￨6 (￨6 new￨6 OperationContext￨6 .￨6 RollbackHandler￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 handleRollback￨7 (￨7 OperationContext￨8 context￨8 ,￨8 ModelNode￨8 operation￨8 )￨7 {￨7 try￨8 (￨8 )￨8 {￨8 <START_BUG>￨9 RaOperationUtil￨9 .￨9 removeIfActive￨9 (￨9 context￨9 ,￨9 raName￨9 )￨9 ;￨9 <END_BUG>￨9 }￨8 catch￨8 (￨8 OperationFailedException￨9 e￨9 )￨8 {￨8 }￨8 }￨7 }￨6 )￨6 ;￨6 }￨5 }￨4 ,￨4 RUNTIME￨4 )￨4 ;￨4 }￨3 context￨3 .￨3 stepCompleted￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 ServerInModuleDeploymentTestCase￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testDeploymentStreamApi￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDeploymentFileApi￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testFilesystemScannerRegistration￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testFilesystemDeployment_Marker￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testFilesystemDeployment_Auto￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testExplodedFilesystemDeployment￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ModelNode￨2 addDeploymentScanner￨2 (￨2 final￨2 File￨2 deployDir￨2 ,￨2 final￨2 ModelControllerClient￨2 client￨2 ,￨2 final￨2 String￨2 scannerName￨2 ,￨2 final￨2 boolean￨2 autoDeployZipped￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 removeDeploymentScanner￨2 (￨2 final￨2 ModelControllerClient￨2 client￨2 ,￨2 final￨2 String￨2 scannerName￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 File￨2 createDeploymentDir￨2 (￨2 String￨3 dir￨3 )￨2 {￨2 }￨2 private￨2 void￨2 testDeployments￨2 (￨2 ModelControllerClient￨2 client￨2 ,￨2 ServerInModuleDeploymentTestCase￨2 .￨2 DeploymentExecutor￨2 deploymentExecutor￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 MBeanServerConnection￨3 mbeanServer￨3 =￨3 JMXConnectorFactory￨3 .￨3 connect￨3 (￨3 new￨3 JMXServiceURL￨3 (￨3 "service:jmx:remote://127.0.0.1:9999"￨3 )￨3 )￨3 .￨3 getMBeanServerConnection￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ObjectName￨3 name￨3 =￨3 new￨3 ObjectName￨3 (￨3 "jboss.test:service=testdeployments"￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 deploymentExecutor￨4 .￨4 initialDeploy￨4 (￨4 )￨4 ;￨4 PollingUtils￨4 .￨4 retryWithTimeout￨4 (￨4 10000￨4 ,￨4 new￨4 PollingUtils￨4 .￨4 WaitForMBeanTask￨4 (￨4 mbeanServer￨4 ,￨4 name￨4 )￨4 )￨4 ;￨4 Assert￨4 .￨4 assertNotNull￨4 (￨4 mbeanServer￨4 .￨4 getMBeanInfo￨4 (￨4 name￨4 )￨4 )￨4 ;￨4 deploymentExecutor￨4 .￨4 fullReplace￨4 (￨4 )￨4 ;￨4 PollingUtils￨4 .￨4 retryWithTimeout￨4 (￨4 10000￨4 ,￨4 new￨4 PollingUtils￨4 .￨4 WaitForMBeanTask￨4 (￨4 mbeanServer￨4 ,￨4 name￨4 )￨4 )￨4 ;￨4 Assert￨4 .￨4 assertNotNull￨4 (￨4 mbeanServer￨4 .￨4 getMBeanInfo￨4 (￨4 name￨4 )￨4 )￨4 ;￨4 deploymentExecutor￨4 .￨4 undeploy￨4 (￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 long￨5 start￨5 =￨5 System￨5 .￨5 currentTimeMillis￨5 (￨5 )￨5 ;￨5 while￨5 (￨5 (￨6 (￨6 System￨6 .￨6 currentTimeMillis￨6 (￨6 )￨6 )￨6 -￨6 start￨6 )￨6 <￨6 10000￨6 )￨5 {￨5 mbeanServer￨6 .￨6 getMBeanInfo￨6 (￨6 name￨6 )￨6 ;￨6 Thread￨6 .￨6 sleep￨6 (￨6 100￨6 )￨6 ;￨6 }￨5 Assert￨5 .￨5 fail￨5 (￨5 "Should<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>found<seq2seq4repair_space>MBean"￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 Exception￨5 expected￨5 )￨4 {￨4 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 void￨2 awaitDeploymentExecution￨2 (￨2 Future￨3 <￨3 ?￨3 >￨3 future￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 cleanFile￨2 (￨2 File￨3 toClean￨3 )￨2 {￨2 }￨2 private￨2 interface￨2 DeploymentExecutor￨2 (￨2 )￨2 {￨2 void￨3 initialDeploy￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 void￨3 fullReplace￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 void￨3 undeploy￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 TestNotificationListener￨2 implements￨2 NotificationListener￨2 {￨2 private￨3 final￨3 ObjectName￨3 name￨3 ;￨3 private￨3 volatile￨3 CountDownLatch￨3 latch￨3 =￨3 new￨3 CountDownLatch￨3 (￨3 1￨3 )￨3 ;￨3 private￨3 TestNotificationListener￨3 (￨3 ObjectName￨4 name￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 handleNotification￨3 (￨3 Notification￨4 notification￨4 ,￨4 Object￨4 handback￨4 )￨3 {￨3 }￨3 void￨3 reset￨3 (￨3 int￨4 i￨4 )￨3 {￨3 }￨3 void￨3 await￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ImportDeclaration￨1 extends￨1 SourceRefElement￨1 implements￨1 IImportDeclaration￨1 {￨1 protected￨2 String￨2 name￨2 ;￨2 protected￨2 boolean￨2 isOnDemand￨2 ;￨2 protected￨2 ImportDeclaration￨2 (￨2 ImportContainer￨3 parent￨3 ,￨3 String￨3 name￨3 ,￨3 boolean￨3 isOnDemand￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getElementName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getNameWithoutStar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getElementType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getFlags￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 getHandleMemento￨2 (￨2 StringBuffer￨3 buff￨3 )￨2 {￨2 }￨2 protected￨2 char￨2 getHandleMementoDelimiter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaElement￨2 getPrimaryElement￨2 (￨2 boolean￨3 checkOwner￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isOnDemand￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 readableName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 toStringInfo￨2 (￨2 int￨3 tab￨3 ,￨3 StringBuffer￨3 buffer￨3 ,￨3 Object￨3 info￨3 ,￨3 boolean￨3 showResolvedInfo￨3 )￨2 {￨2 <START_BUG>￨3 buffer￨3 .￨3 append￨3 (￨3 this￨3 .￨3 tabString￨3 (￨3 tab￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 buffer￨3 .￨3 append￨3 (￨3 "import<seq2seq4repair_space>"￨3 )￨3 ;￨3 toStringName￨3 (￨3 buffer￨3 )￨3 ;￨3 if￨3 (￨3 info￨4 ==￨4 null￨4 )￨3 {￨3 buffer￨4 .￨4 append￨4 (￨4 "<seq2seq4repair_space>(not<seq2seq4repair_space>open)"￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 MethodInvokingJobDetailFactoryBean￨1 extends￨1 ArgumentConvertingMethodInvoker￨1 implements￨1 BeanClassLoaderAware￨1 ,￨1 BeanFactoryAware￨1 ,￨1 BeanNameAware￨1 ,￨1 FactoryBean￨1 <￨1 Object￨1 >￨1 ,￨1 InitializingBean￨1 {￨1 private￨2 String￨2 name￨2 ;￨2 private￨2 String￨2 group￨2 =￨2 Scheduler￨2 .￨2 DEFAULT_GROUP￨2 ;￨2 private￨2 boolean￨2 concurrent￨2 =￨2 true￨2 ;￨2 private￨2 String￨2 targetBeanName￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 jobListenerNames￨2 ;￨2 private￨2 String￨2 beanName￨2 ;￨2 private￨2 ClassLoader￨2 beanClassLoader￨2 =￨2 ClassUtils￨2 .￨2 getDefaultClassLoader￨2 (￨2 )￨2 ;￨2 private￨2 BeanFactory￨2 beanFactory￨2 ;￨2 private￨2 JobDetail￨2 jobDetail￨2 ;￨2 public￨2 void￨2 setName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setGroup￨2 (￨2 String￨3 group￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setConcurrent￨2 (￨2 boolean￨3 concurrent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTargetBeanName￨2 (￨2 String￨3 targetBeanName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setJobListenerNames￨2 (￨2 String￨3 [￨3 ]￨3 names￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBeanName￨2 (￨2 String￨3 beanName￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBeanClassLoader￨2 (￨2 ClassLoader￨3 classLoader￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setBeanFactory￨2 (￨2 BeanFactory￨3 beanFactory￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Class￨2 resolveClassName￨2 (￨2 String￨2 className￨2 )￨2 throws￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 afterPropertiesSet￨2 (￨2 )￨2 throws￨2 ClassNotFoundException￨2 ,￨2 NoSuchMethodException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 postProcessJobDetail￨2 (￨2 JobDetail￨3 jobDetail￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Class￨2 getTargetClass￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Object￨2 getTargetObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 <￨2 ?￨2 >￨2 getObjectType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSingleton￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 MethodInvokingJob￨2 extends￨2 QuartzJobBean￨2 {￨2 protected￨3 static￨3 final￨3 Log￨3 logger￨3 =￨3 LogFactory￨3 .￨3 getLog￨3 (￨3 MethodInvokingJobDetailFactoryBean￨3 .￨3 MethodInvokingJob￨3 .￨3 class￨3 )￨3 ;￨3 private￨3 MethodInvoker￨3 methodInvoker￨3 ;￨3 public￨3 void￨3 setMethodInvoker￨3 (￨3 MethodInvoker￨3 methodInvoker￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 void￨3 executeInternal￨3 (￨3 JobExecutionContext￨3 context￨3 )￨3 throws￨3 JobExecutionException￨3 (￨3 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 this￨5 .￨5 methodInvoker￨5 .￨5 invoke￨5 (￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 InvocationTargetException￨5 ex￨5 )￨4 {￨4 if￨5 (￨5 (￨6 ex￨6 .￨6 getTargetException￨6 (￨6 )￨6 )￨6 instanceof￨6 JobExecutionException￨6 )￨5 {￨5 throw￨6 (￨6 (￨6 JobExecutionException￨6 )￨6 (￨6 ex￨6 .￨6 getTargetException￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 throw￨6 new￨6 JobMethodInvocationFailedException￨6 (￨6 this￨6 .￨6 methodInvoker￨6 ,￨6 ex￨6 .￨6 getTargetException￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 catch￨4 (￨4 Exception￨5 ex￨5 )￨4 {￨4 throw￨5 new￨5 JobMethodInvocationFailedException￨5 (￨5 this￨5 .￨5 methodInvoker￨5 ,￨5 ex￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 static￨2 class￨2 StatefulMethodInvokingJob￨2 extends￨2 MethodInvokingJobDetailFactoryBean￨2 .￨2 MethodInvokingJob￨2 implements￨2 StatefulJob￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WithinPointcut￨1 extends￨1 Pointcut￨1 {￨1 TypePattern￨2 type￨2 ;￨2 public￨2 WithinPointcut￨2 (￨2 TypePattern￨3 type￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 match￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Pointcut￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 )￨2 {￨2 <START_BUG>￨3 type￨3 =￨3 type￨3 .￨3 resolveBindings￨3 (￨3 scope￨3 ,￨3 bindings￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 postRead￨2 (￨2 ResolvedTypeX￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Test￨2 findResidue￨2 (￨2 Shadow￨3 shadow￨3 ,￨3 ExposedState￨3 state￨3 )￨2 {￨2 }￨2 public￨2 Pointcut￨2 concretize1￨2 (￨2 ResolvedTypeX￨3 inAspect￨3 ,￨3 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 VFSResourceLoader￨1 implements￨1 ResourceLoader￨1 {￨1 private￨2 final￨2 ModuleIdentifier￨2 moduleIdentifier￨2 ;￨2 private￨2 final￨2 VirtualFile￨2 root￨2 ;￨2 private￨2 final￨2 String￨2 rootName￨2 ;￨2 private￨2 final￨2 Manifest￨2 manifest￨2 ;￨2 private￨2 final￨2 MountHandle￨2 mountHandle￨2 ;￨2 public￨2 VFSResourceLoader￨2 (￨2 final￨2 ModuleIdentifier￨2 moduleIdentifier￨2 ,￨2 final￨2 String￨2 rootName￨2 ,￨2 final￨2 VirtualFile￨2 root￨2 ,￨2 final￨2 MountHandle￨2 mountHandle￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ClassSpec￨2 getClassSpec￨2 (￨2 final￨2 String￨2 name￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PackageSpec￨2 getPackageSpec￨2 (￨2 final￨2 String￨2 name￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 getDefinedAttribute￨2 (￨2 Attributes￨3 .￨3 Name￨3 name￨3 ,￨3 Attributes￨3 entryAttribute￨3 ,￨3 Attributes￨3 mainAttribute￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getLibrary￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getRootName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PathFilter￨2 getExportFilter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Resource￨2 getResource￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 final￨4 VirtualFile￨4 file￨4 =￨4 root￨4 .￨4 getChild￨4 (￨4 name￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 file￨5 .￨5 exists￨5 (￨5 )￨5 )￨5 )￨4 {￨4 return￨5 null￨5 ;￨5 }￨4 <START_BUG>￨4 return￨4 new￨4 VFSResourceLoader￨4 .￨4 VFSEntryResource￨4 (￨4 file￨4 ,￨4 root￨4 .￨4 toURL￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 MalformedURLException￨4 e￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 }￨2 public￨2 Collection￨2 <￨2 String￨2 >￨2 getPaths￨2 (￨2 )￨2 {￨2 }￨2 static￨2 class￨2 VFSEntryResource￨2 implements￨2 Resource￨2 {￨2 private￨3 final￨3 VirtualFile￨3 entry￨3 ;￨3 private￨3 final￨3 URL￨3 resourceURL￨3 ;￨3 VFSEntryResource￨3 (￨3 final￨4 VirtualFile￨4 entry￨4 ,￨4 final￨4 URL￨4 resourceURL￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getName￨3 (￨3 )￨3 {￨3 }￨3 public￨3 URL￨3 getURL￨3 (￨3 )￨3 {￨3 }￨3 public￨3 InputStream￨3 openStream￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 long￨3 getSize￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ConnectionPropertyAdd￨1 extends￨1 AbstractAddStepHandler￨1 implements￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 ConnectionPropertyAdd￨2 INSTANCE￨2 =￨2 new￨2 ConnectionPropertyAdd￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 populateModel￨2 (￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 modelNode￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 performRuntime￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 ,￨2 ModelNode￨2 recoveryEnvModel￨2 ,￨2 ServiceVerificationHandler￨2 verificationHandler￨2 ,￨2 List￨2 <￨2 ServiceController￨2 <￨2 ?￨2 >￨2 >￨2 serviceControllers￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 String￨3 configPropertyValue￨3 =￨3 Constants￨3 .￨3 CONNECTION_PROPERTY_VALUE￨3 .￨3 validateResolvedOperation￨3 (￨3 recoveryEnvModel￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ModelNode￨3 address￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 ;￨3 PathAddress￨3 path￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 address￨3 )￨3 ;￨3 final￨3 String￨3 jndiName￨3 =￨3 path￨3 .￨3 getElement￨3 (￨3 (￨3 (￨3 path￨3 .￨3 size￨3 (￨3 )￨3 )￨3 -￨3 2￨3 )￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 configPropertyName￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 address￨3 )￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 ServiceName￨3 serviceName￨3 =￨3 SERVICE_NAME_BASE￨3 .￨3 append￨3 (￨3 jndiName￨3 )￨3 .￨3 append￨3 (￨3 configPropertyName￨3 )￨3 ;￨3 ServiceName￨3 dsServiceName￨3 =￨3 SERVICE_NAME_BASE￨3 .￨3 append￨3 (￨3 jndiName￨3 )￨3 ;￨3 final￨3 ServiceRegistry￨3 registry￨3 =￨3 context￨3 .￨3 getServiceRegistry￨3 (￨3 true￨3 )￨3 ;￨3 final￨3 ServiceName￨3 dataSourceConfigServiceName￨3 =￨3 SERVICE_NAME_BASE￨3 .￨3 append￨3 (￨3 jndiName￨3 )￨3 ;￨3 final￨3 ServiceController￨3 <￨3 ?￨3 >￨3 dataSourceConfigController￨3 =￨3 registry￨3 .￨3 getService￨3 (￨3 dataSourceConfigServiceName￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 dataSourceConfigController￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 (￨4 (￨4 org￨4 .￨4 jboss￨4 .￨4 jca￨4 .￨4 common￨4 .￨4 api￨4 .￨4 metadata￨4 .￨4 ds￨4 .￨4 DataSource￨4 )￨4 (￨4 dataSourceConfigController￨4 .￨4 getValue￨4 (￨4 )￨4 )￨4 )￨4 .￨4 isEnabled￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 final￨4 ServiceTarget￨4 serviceTarget￨4 =￨4 context￨4 .￨4 getServiceTarget￨4 (￨4 )￨4 ;￨4 final￨4 ConnectionPropertiesService￨4 service￨4 =￨4 new￨4 ConnectionPropertiesService￨4 (￨4 configPropertyName￨4 ,￨4 configPropertyValue￨4 )￨4 ;￨4 serviceTarget￨4 .￨4 addService￨4 (￨4 serviceName￨4 ,￨4 service￨4 )￨4 .￨4 setInitialMode￨4 (￨4 ACTIVE￨4 )￨4 .￨4 addDependency￨4 (￨4 dsServiceName￨4 ,￨4 ModifiableDataSource￨4 .￨4 class￨4 ,￨4 service￨4 .￨4 getDSInjector￨4 (￨4 )￨4 )￨4 .￨4 addListener￨4 (￨4 verificationHandler￨4 )￨4 .￨4 install￨4 (￨4 )￨4 ;￨4 context￨4 .￨4 addStep￨4 (￨4 verificationHandler￨4 ,￨4 VERIFY￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 context￨4 .￨4 reloadRequired￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 InterceptorsAnnotationParsingProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 DotName￨2 INTERCEPTORS_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 Interceptors￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 DotName￨2 EXCLUDE_DEFAULT_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 ExcludeDefaultInterceptors￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 DotName￨2 EXCLUDE_CLASS_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 ExcludeClassInterceptors￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 {￨2 }￨2 private￨2 void￨2 processInterceptors￨2 (￨2 final￨2 EEModuleDescription￨2 eeModuleDescription￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 CompositeIndex￨2 index￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processMethodInterceptor￨2 (￨2 final￨3 EEModuleDescription￨3 eeModuleDescription￨3 ,￨3 final￨3 MethodInfo￨3 methodInfo￨3 ,￨3 final￨3 AnnotationInstance￨3 annotation￨3 ,￨3 final￨3 CompositeIndex￨3 index￨3 )￨2 {￨2 }￨2 private￨2 void￨2 processClassInterceptor￨2 (￨2 final￨3 EEModuleDescription￨3 eeModuleDescription￨3 ,￨3 final￨3 ClassInfo￨3 classInfo￨3 ,￨3 final￨3 AnnotationInstance￨3 annotation￨3 ,￨3 final￨3 CompositeIndex￨3 index￨3 )￨2 {￨2 }￨2 private￨2 void￨2 processExcludeDefault￨2 (￨2 final￨2 EEModuleDescription￨2 eeModuleDescription￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 CompositeIndex￨2 index￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 processClassExcludeDefault￨2 (￨2 EEModuleDescription￨3 eeModuleDescription￨3 ,￨3 final￨3 ClassInfo￨3 classInfo￨3 ,￨3 final￨3 CompositeIndex￨3 index￨3 )￨2 {￨2 }￨2 private￨2 void￨2 processMethodExcludeDefault￨2 (￨2 EEModuleDescription￨3 eeModuleDescription￨3 ,￨3 MethodInfo￨3 methodInfo￨3 ,￨3 final￨3 CompositeIndex￨3 index￨3 )￨2 {￨2 }￨2 private￨2 void￨2 processExcludeClass￨2 (￨2 final￨2 EEModuleDescription￨2 eeModuleDescription￨2 ,￨2 final￨2 AnnotationInstance￨2 annotation￨2 ,￨2 final￨2 CompositeIndex￨2 index￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 undeploy￨2 (￨2 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 private￨2 static￨2 MethodIdentifier￨2 methodIdentifierFromMethodInfo￨2 (￨2 MethodInfo￨3 methodInfo￨3 )￨2 {￨2 }￨2 private￨2 Collection￨2 <￨2 ComponentDescription￨2 >￨2 getApplicableComponents￨2 (￨2 final￨3 CompositeIndex￨3 index￨3 ,￨3 final￨3 ClassInfo￨3 klass￨3 ,￨3 final￨3 EEModuleDescription￨3 eeModuleDescription￨3 )￨2 {￨2 Set￨3 <￨3 ComponentDescription￨3 >￨3 componentDescriptions￨3 =￨3 new￨3 HashSet￨3 <￨3 ComponentDescription￨3 >￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ComponentDescription￨3 >￨3 descriptions￨3 =￨3 eeModuleDescription￨3 .￨3 getComponentsByClassName￨3 (￨3 klass￨3 .￨3 name￨3 (￨3 )￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 componentDescriptions￨3 .￨3 isEmpty￨3 (￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 componentDescriptions￨3 .￨3 addAll￨3 (￨3 descriptions￨3 )￨3 ;￨3 else￨3 {￨3 componentDescriptions￨4 .￨4 addAll￨4 (￨4 this￨4 .￨4 getKnownSubClassComponents￨4 (￨4 index￨4 ,￨4 klass￨4 ,￨4 eeModuleDescription￨4 )￨4 )￨4 ;￨4 }￨3 return￨3 componentDescriptions￨3 ;￨3 }￨2 private￨2 Collection￨2 <￨2 ComponentDescription￨2 >￨2 getKnownSubClassComponents￨2 (￨2 final￨3 CompositeIndex￨3 index￨3 ,￨3 final￨3 ClassInfo￨3 superClass￨3 ,￨3 final￨3 EEModuleDescription￨3 eeModuleDescription￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ProgressView￨1 extends￨1 ViewPart￨1 implements￨1 IViewPart￨1 {￨1 ProgressTreeViewer￨2 viewer￨2 ;￨2 Action￨2 cancelAction￨2 ;￨2 public￨2 void￨2 createPartControl￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFocus￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 initContentProvider￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initContextMenu￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initPulldownMenu￨2 (￨2 )￨2 {￨2 IMenuManager￨3 menuMgr￨3 =￨3 (￨3 (￨3 org￨3 .￨3 eclipse￨3 .￨3 ui￨3 .￨3 internal￨3 .￨3 ViewSite￨3 )￨3 (￨3 getSite￨3 (￨3 )￨3 )￨3 )￨3 .￨3 getActionBars￨3 (￨3 )￨3 .￨3 getMenuManager￨3 (￨3 )￨3 ;￨3 menuMgr￨3 .￨3 add￨3 (￨3 new￨3 Action￨3 (￨3 ProgressMessages￨4 .￨4 getString￨4 (￨4 "ProgressView.VerboseAction"￨4 )￨4 ,￨4 IAction￨4 .￨4 AS_CHECK_BOX￨4 )￨3 {￨3 public￨4 void￨4 run￨4 (￨4 )￨4 {￨4 ProgressViewUpdater￨5 updater￨5 =￨5 ProgressViewUpdater￨5 .￨5 getSingleton￨5 (￨5 )￨5 ;￨5 updater￨5 .￨5 debug￨5 =￨5 !￨5 (￨5 updater￨5 .￨5 debug￨5 )￨5 ;￨5 setChecked￨5 (￨5 updater￨5 .￨5 debug￨5 )￨5 ;￨5 updater￨5 .￨5 refreshAll￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 <START_BUG>￨3 menuMgr￨3 .￨3 add￨3 (￨3 new￨3 Action￨3 (￨3 "&Toggle<seq2seq4repair_space>Floating<seq2seq4repair_space>Window"￨3 )￨3 {￨3 <END_BUG>￨3 public￨3 void￨3 run￨3 (￨3 )￨3 {￨3 AnimationManager￨4 .￨4 getInstance￨4 (￨4 )￨4 .￨4 toggleFloatingWindow￨4 (￨4 )￨4 ;￨4 }￨3 }￨3 )￨3 ;￨3 }￨2 private￨2 IStructuredSelection￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 JobInfo￨2 getSelectedInfo￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 createCancelAction￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SwitchStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 Statement￨2 [￨2 ]￨2 statements￨2 ;￨2 public￨2 BlockScope￨2 scope￨2 ;￨2 public￨2 int￨2 explicitDeclarations￨2 ;￨2 public￨2 Label￨2 breakLabel￨2 ;￨2 public￨2 CaseStatement￨2 [￨2 ]￨2 cases￨2 ;￨2 public￨2 CaseStatement￨2 defaultCase￨2 ;￨2 public￨2 int￨2 blockStart￨2 ;￨2 public￨2 int￨2 caseCount￨2 ;￨2 int￨2 [￨2 ]￨2 constants￨2 ;￨2 public￨2 SyntheticMethodBinding￨2 synthetic￨2 ;￨2 int￨2 preSwitchInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 mergedInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printStatement￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 upperScope￨3 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 boolean￨4 isEnumSwitch￨4 =￨4 false￨4 ;￨4 TypeBinding￨4 expressionType￨4 =￨4 expression￨4 .￨4 resolveType￨4 (￨4 upperScope￨4 )￨4 ;￨4 if￨4 (￨4 expressionType￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 expression￨4 .￨4 computeConversion￨4 (￨4 upperScope￨4 ,￨4 expressionType￨4 ,￨4 expressionType￨4 )￨4 ;￨4 if￨4 (￨4 expressionType￨5 .￨5 isBaseType￨5 (￨5 )￨5 )￨4 {￨4 if￨5 (￨5 expression￨6 .￨6 isConstantValueOfTypeAssignableToType￨6 (￨6 expressionType￨6 ,￨6 IntBinding￨6 )￨6 )￨5 {￨5 break￨6 checkType￨6 ;￨6 }￨5 if￨5 (￨5 expressionType￨6 .￨6 isCompatibleWith￨6 (￨6 IntBinding￨6 )￨6 )￨5 {￨5 break￨6 checkType￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 expressionType￨5 .￨5 isEnum￨5 (￨5 )￨5 )￨4 {￨4 isEnumSwitch￨5 =￨5 true￨5 ;￨5 break￨5 checkType￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 upperScope￨5 .￨5 isBoxingCompatibleWith￨5 (￨5 expressionType￨5 ,￨5 IntBinding￨5 )￨5 )￨4 {￨4 expression￨5 .￨5 computeConversion￨5 (￨5 upperScope￨5 ,￨5 IntBinding￨5 ,￨5 expressionType￨5 )￨5 ;￨5 break￨5 checkType￨5 ;￨5 }￨4 upperScope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 incorrectSwitchType￨4 (￨4 expression￨4 ,￨4 expressionType￨4 )￨4 ;￨4 return￨4 ;￨4 if￨4 (￨4 (￨5 statements￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 =￨5 new￨5 BlockScope￨5 (￨5 upperScope￨5 )￨5 ;￨5 int￨5 length￨5 ;￨5 cases￨5 =￨5 new￨5 CaseStatement￨5 [￨5 length￨5 =￨5 statements￨5 .￨5 length￨5 ]￨5 ;￨5 this￨5 .￨5 constants￨5 =￨5 new￨5 int￨5 [￨5 length￨5 ]￨5 ;￨5 CaseStatement￨5 [￨5 ]￨5 duplicateCaseStatements￨5 =￨5 null￨5 ;￨5 int￨5 duplicateCaseStatementsCounter￨5 =￨5 0￨5 ;￨5 int￨5 counter￨5 =￨5 0￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 length￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 Constant￨6 constant￨6 ;￨6 final￨6 Statement￨6 statement￨6 =￨6 statements￨6 [￨6 i￨6 ]￨6 ;￨6 if￨6 (￨6 (￨7 constant￨7 =￨7 statement￨7 .￨7 resolveCase￨7 (￨7 scope￨7 ,￨7 expressionType￨7 ,￨7 this￨7 )￨7 )￨7 !=￨7 (￨7 Constant￨7 .￨7 NotAConstant￨7 )￨7 )￨6 {￨6 int￨7 key￨7 =￨7 constant￨7 .￨7 intValue￨7 (￨7 )￨7 ;￨7 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 counter￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 if￨8 (￨8 (￨9 this￨9 .￨9 constants￨9 [￨9 j￨9 ]￨9 )￨9 ==￨9 key￨9 )￨8 {￨8 final￨9 CaseStatement￨9 currentCaseStatement￨9 =￨9 (￨9 (￨9 CaseStatement￨9 )￨9 (￨9 statement￨9 )￨9 )￨9 ;￨9 if￨9 (￨9 duplicateCaseStatements￨10 ==￨10 null￨10 )￨9 {￨9 scope￨10 .￨10 problemReporter￨10 (￨10 )￨10 .￨10 duplicateCase￨10 (￨10 cases￨10 [￨10 j￨10 ]￨10 )￨10 ;￨10 scope￨10 .￨10 problemReporter￨10 (￨10 )￨10 .￨10 duplicateCase￨10 (￨10 currentCaseStatement￨10 )￨10 ;￨10 duplicateCaseStatements￨10 =￨10 new￨10 CaseStatement￨10 [￨10 length￨10 ]￨10 ;￨10 duplicateCaseStatements￨10 [￨10 (￨10 duplicateCaseStatementsCounter￨10 ++￨10 )￨10 ]￨10 =￨10 cases￨10 [￨10 j￨10 ]￨10 ;￨10 duplicateCaseStatements￨10 [￨10 (￨10 duplicateCaseStatementsCounter￨10 ++￨10 )￨10 ]￨10 =￨10 currentCaseStatement￨10 ;￨10 }￨9 else￨9 {￨9 boolean￨10 found￨10 =￨10 false￨10 ;￨10 for￨10 (￨10 int￨11 k￨11 =￨11 2￨11 ;￨11 k￨11 <￨11 duplicateCaseStatementsCounter￨11 ;￨11 k￨11 ++￨11 )￨10 {￨10 if￨11 (￨11 (￨12 duplicateCaseStatements￨12 [￨12 k￨12 ]￨12 )￨12 ==￨12 statement￨12 )￨11 {￨11 found￨12 =￨12 true￨12 ;￨12 break￨12 searchReportedDuplicate￨12 ;￨12 }￨11 }￨10 if￨10 (￨10 !￨11 found￨11 )￨10 {￨10 scope￨11 .￨11 problemReporter￨11 (￨11 )￨11 .￨11 duplicateCase￨11 (￨11 currentCaseStatement￨11 )￨11 ;￨11 duplicateCaseStatements￨11 [￨11 (￨11 duplicateCaseStatementsCounter￨11 ++￨11 )￨11 ]￨11 =￨11 currentCaseStatement￨11 ;￨11 }￨10 }￨9 }￨8 }￨7 this￨7 .￨7 constants￨7 [￨7 (￨7 counter￨7 ++￨7 )￨7 ]￨7 =￨7 key￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 length￨6 !=￨6 counter￨6 )￨5 {￨5 System￨6 .￨6 arraycopy￨6 (￨6 this￨6 .￨6 constants￨6 ,￨6 0￨6 ,￨6 (￨6 this￨6 .￨6 constants￨6 =￨6 new￨6 int￨6 [￨6 counter￨6 ]￨6 )￨6 ,￨6 0￨6 ,￨6 counter￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 if￨5 (￨5 (￨6 (￨6 this￨6 .￨6 bits￨6 )￨6 &￨6 (￨6 ASTNode￨6 .￨6 UndocumentedEmptyBlock￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 upperScope￨6 .￨6 problemReporter￨6 (￨6 )￨6 .￨6 undocumentedEmptyBlock￨6 (￨6 this￨6 .￨6 blockStart￨6 ,￨6 this￨6 .￨6 sourceEnd￨6 )￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 (￨5 isEnumSwitch￨5 &&￨5 (￨5 (￨5 defaultCase￨5 )￨5 ==￨5 null￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 upperScope￨5 .￨5 compilerOptions￨5 (￨5 )￨5 .￨5 getSeverity￨5 (￨5 IncompleteEnumSwitch￨5 )￨5 )￨5 !=￨5 (￨5 ProblemSeverities￨5 .￨5 Ignore￨5 )￨5 )￨5 )￨4 {￨4 int￨5 constantCount￨5 =￨5 (￨5 (￨5 this￨5 .￨5 constants￨5 )￨5 ==￨5 null￨5 )￨5 ?￨5 0￨5 :￨5 this￨5 .￨5 constants￨5 .￨5 length￨5 ;￨5 if￨5 (￨5 (￨6 constantCount￨6 ==￨6 (￨6 caseCount￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 caseCount￨6 )￨6 !=￨6 (￨6 (￨6 (￨6 ReferenceBinding￨6 )￨6 (￨6 expressionType￨6 )￨6 )￨6 .￨6 enumConstantCount￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 FieldBinding￨6 [￨6 ]￨6 enumFields￨6 =￨6 (￨6 (￨6 ReferenceBinding￨6 )￨6 (￨6 expressionType￨6 .￨6 erasure￨6 (￨6 )￨6 )￨6 )￨6 .￨6 fields￨6 (￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ,￨7 max￨7 =￨7 enumFields￨7 .￨7 length￨7 ;￨7 i￨7 <￨7 max￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 FieldBinding￨7 enumConstant￨7 =￨7 enumFields￨7 [￨7 i￨7 ]￨7 ;￨7 <START_BUG>￨7 if￨7 (￨7 (￨7 (￨7 enumConstant￨7 .￨7 modifiers￨7 )￨7 &￨7 (￨7 AccEnum￨7 )￨7 )￨7 ==￨7 0￨7 )￨7 <END_BUG>￨7 continue￨7 ;￨7 for￨7 (￨7 int￨8 j￨8 =￨8 0￨8 ;￨8 j￨8 <￨8 (￨8 caseCount￨8 )￨8 ;￨8 j￨8 ++￨8 )￨7 {￨7 if￨8 (￨8 (￨9 enumConstant￨9 .￨9 id￨9 )￨9 ==￨9 (￨9 this￨9 .￨9 constants￨9 [￨9 j￨9 ]￨9 )￨9 )￨8 {￨8 break￨9 findConstant￨9 ;￨9 }￨8 }￨7 upperScope￨7 .￨7 problemReporter￨7 (￨7 )￨7 .￨7 missingEnumConstantCase￨7 (￨7 this￨7 ,￨7 enumConstant￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 if￨4 (￨4 (￨5 this￨5 .￨5 scope￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 this￨5 .￨5 scope￨5 .￨5 enclosingCase￨5 =￨5 null￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 branchChainTo￨2 (￨2 Label￨3 label￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 EditorsPreferencePage￨1 extends￨1 PreferencePage￨1 implements￨1 IWorkbenchPreferencePage￨1 {￨1 private￨2 static￨2 final￨2 int￨2 REUSE_INDENT￨2 =￨2 10￨2 ;￨2 protected￨2 Composite￨2 editorReuseGroup￨2 ;￨2 private￨2 Button￨2 reuseEditors￨2 ;￨2 protected￨2 Button￨2 showMultipleEditorTabs￨2 ;￨2 protected￨2 Button￨2 useIPersistableEditor￨2 ;￨2 private￨2 Composite￨2 editorReuseIndentGroup￨2 ;￨2 private￨2 Composite￨2 editorReuseThresholdGroup￨2 ;￨2 private￨2 IntegerFieldEditor￨2 reuseEditorsThreshold￨2 ;￨2 private￨2 Group￨2 dirtyEditorReuseGroup￨2 ;￨2 private￨2 Button￨2 openNewEditor￨2 ;￨2 private￨2 Button￨2 promptToReuseEditor￨2 ;￨2 private￨2 IntegerFieldEditor￨2 recentFilesEditor￨2 ;￨2 private￨2 IPropertyChangeListener￨2 validityChangeListener￨2 =￨2 new￨2 IPropertyChangeListener￨2 (￨2 )￨2 {￨2 public￨3 void￨3 propertyChange￨3 (￨3 PropertyChangeEvent￨4 event￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 Button￨2 promptWhenStillOpenEditor￨2 ;￨2 protected￨2 Control￨2 createContents￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 Composite￨3 composite￨3 =￨3 createComposite￨3 (￨3 parent￨3 )￨3 ;￨3 createEditorHistoryGroup￨3 (￨3 composite￨3 )￨3 ;￨3 createSpace￨3 (￨3 composite￨3 )￨3 ;￨3 createShowMultipleEditorTabsPref￨3 (￨3 composite￨3 )￨3 ;￨3 createUseIPersistablePref￨3 (￨3 composite￨3 )￨3 ;￨3 createPromptWhenStillOpenPref￨3 (￨3 composite￨3 )￨3 ;￨3 createEditorReuseGroup￨3 (￨3 composite￨3 )￨3 ;￨3 <START_BUG>￨3 (￨3 (￨3 TabBehaviour￨3 )￨3 (￨3 Tweaklets￨3 .￨3 get￨3 (￨3 TabBehaviour￨3 .￨3 class￨3 )￨3 )￨3 )￨3 .￨3 setPreferenceVisibility￨3 (￨3 editorReuseGroup￨3 ,￨3 showMultipleEditorTabs￨3 )￨3 ;￨3 <END_BUG>￨3 updateValidState￨3 (￨3 )￨3 ;￨3 setHelpContext￨3 (￨3 parent￨3 )￨3 ;￨3 return￨3 composite￨3 ;￨3 }￨2 protected￨2 void￨2 setHelpContext￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createSpace￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createShowMultipleEditorTabsPref￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createUseIPersistablePref￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createPromptWhenStillOpenPref￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 }￨2 protected￨2 Composite￨2 createComposite￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 init￨2 (￨2 IWorkbench￨3 workbench￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 performDefaults￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 performOk￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IPreferenceStore￨2 doGetPreferenceStore￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IPreferenceStore￨2 getAPIPreferenceStore￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateValidState￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 createEditorReuseGroup￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createEditorHistoryGroup￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SevenZFile￨1 {￨1 static￨2 final￨2 int￨2 SIGNATURE_HEADER_SIZE￨2 =￨2 32￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 DRAIN_BUF_SIZE￨2 =￨2 64￨2 *￨2 1024￨2 ;￨2 private￨2 RandomAccessFile￨2 file￨2 ;￨2 private￨2 final￨2 Archive￨2 archive￨2 ;￨2 private￨2 int￨2 currentEntryIndex￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 int￨2 currentFolderIndex￨2 =￨2 -￨2 1￨2 ;￨2 private￨2 InputStream￨2 currentFolderInputStream￨2 =￨2 null￨2 ;￨2 private￨2 InputStream￨2 currentEntryInputStream￨2 =￨2 null￨2 ;￨2 private￨2 byte￨2 [￨2 ]￨2 password￨2 ;￨2 static￨2 final￨2 byte￨2 [￨2 ]￨2 sevenZSignature￨2 =￨2 new￨2 byte￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 SevenZFile￨2 (￨2 final￨2 File￨2 filename￨2 ,￨2 final￨2 byte￨2 [￨2 ]￨2 password￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SevenZFile￨2 (￨2 final￨2 File￨2 filename￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SevenZArchiveEntry￨2 getNextEntry￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Archive￨2 readHeaders￨2 (￨2 byte￨2 [￨2 ]￨2 password￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 StartHeader￨2 readStartHeader￨2 (￨2 final￨2 int￨2 startHeaderCrc￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readHeader￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readArchiveProperties￨2 (￨2 final￨2 DataInput￨2 input￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 DataInputStream￨2 readEncodedHeader￨2 (￨2 final￨2 DataInputStream￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 ,￨2 byte￨2 [￨2 ]￨2 password￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readStreamsInfo￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readPackInfo￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readUnpackInfo￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readSubStreamsInfo￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Folder￨2 readFolder￨2 (￨2 final￨2 DataInput￨2 header￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 BitSet￨2 readAllOrBits￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 int￨2 size￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 BitSet￨2 readBits￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 int￨2 size￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readFilesInfo￨2 (￨2 final￨2 DataInput￨2 header￨2 ,￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 calculateStreamMap￨2 (￨2 final￨2 Archive￨2 archive￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildDecodingStream￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 drainPreviousEntry￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 InputStream￨2 buildDecoderStack￨2 (￨2 final￨2 Folder￨2 folder￨2 ,￨2 final￨2 long￨2 folderOffset￨2 ,￨2 final￨2 int￨2 firstPackStreamIndex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 read￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 read￨2 (￨2 byte￨2 [￨2 ]￨2 b￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 read￨2 (￨2 byte￨2 [￨2 ]￨2 b￨2 ,￨2 int￨2 off￨2 ,￨2 int￨2 len￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 long￨2 readUint64￨2 (￨2 final￨2 DataInput￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 int￨3 firstByte￨3 =￨3 in￨3 .￨3 readUnsignedByte￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 int￨3 mask￨3 =￨3 128￨3 ;￨3 long￨3 value￨3 =￨3 0￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 8￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 if￨4 (￨4 (￨5 firstByte￨5 &￨5 mask￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 return￨5 value￨5 |￨5 (￨5 (￨5 firstByte￨5 &￨5 (￨5 mask￨5 -￨5 1￨5 )￨5 )￨5 <<￨5 (￨5 8￨5 *￨5 i￨5 )￨5 )￨5 ;￨5 }￨4 long￨4 nextByte￨4 =￨4 in￨4 .￨4 readUnsignedByte￨4 (￨4 )￨4 ;￨4 value￨4 |=￨4 nextByte￨4 <<￨4 (￨4 8￨4 *￨4 i￨4 )￨4 ;￨4 mask￨4 >>>=￨4 1￨4 ;￨4 }￨3 return￨3 value￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 MockRestServiceServer￨1 {￨1 private￨2 final￨2 List￨2 <￨2 RequestMatcherClientHttpRequest￨2 >￨2 expectedRequests￨2 =￨2 new￨2 LinkedList￨2 <￨2 RequestMatcherClientHttpRequest￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 List￨2 <￨2 RequestMatcherClientHttpRequest￨2 >￨2 actualRequests￨2 =￨2 new￨2 LinkedList￨2 <￨2 RequestMatcherClientHttpRequest￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 MockRestServiceServer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 MockRestServiceServer￨2 createServer￨2 (￨2 RestTemplate￨3 restTemplate￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MockRestServiceServer￨2 createServer￨2 (￨2 AsyncRestTemplate￨3 asyncRestTemplate￨3 )￨2 {￨2 }￨2 public￨2 static￨2 MockRestServiceServer￨2 createServer￨2 (￨2 RestGatewaySupport￨3 restGateway￨3 )￨2 {￨2 }￨2 public￨2 ResponseActions￨2 expect￨2 (￨2 RequestMatcher￨3 requestMatcher￨3 )￨2 {￨2 }￨2 public￨2 void￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getVerifyMessage￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 RequestMatcherClientHttpRequestFactory￨2 implements￨2 AsyncClientHttpRequestFactory￨2 ,￨2 ClientHttpRequestFactory￨2 {￨2 private￨3 Iterator￨3 <￨3 RequestMatcherClientHttpRequest￨3 >￨3 requestIterator￨3 ;￨3 @￨3 Override￨3 public￨3 ClientHttpRequest￨3 createRequest￨3 (￨3 URI￨3 uri￨3 ,￨3 HttpMethod￨3 httpMethod￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 AsyncClientHttpRequest￨3 createAsyncRequest￨3 (￨3 URI￨3 uri￨3 ,￨3 HttpMethod￨3 httpMethod￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 RequestMatcherClientHttpRequest￨3 createRequestInternal￨3 (￨3 URI￨4 uri￨4 ,￨4 HttpMethod￨4 httpMethod￨4 )￨3 {￨3 Assert￨4 .￨4 notNull￨4 (￨4 uri￨4 ,￨4 "'uri'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4 )￨4 ;￨4 Assert￨4 .￨4 notNull￨4 (￨4 httpMethod￨4 ,￨4 "'httpMethod'<seq2seq4repair_space>must<seq2seq4repair_space>not<seq2seq4repair_space>be<seq2seq4repair_space>null"￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 this￨5 .￨5 requestIterator￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 this￨5 .￨5 requestIterator￨5 =￨5 MockRestServiceServer￨5 .￨5 this￨5 .￨5 expectedRequests￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 !￨5 (￨5 this￨5 .￨5 requestIterator￨5 .￨5 hasNext￨5 (￨5 )￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 throw￨5 new￨5 AssertionError￨5 (￨5 "No<seq2seq4repair_space>further<seq2seq4repair_space>requests<seq2seq4repair_space>expected"￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 RequestMatcherClientHttpRequest￨4 request￨4 =￨4 this￨4 .￨4 requestIterator￨4 .￨4 next￨4 (￨4 )￨4 ;￨4 request￨4 .￨4 setURI￨4 (￨4 uri￨4 )￨4 ;￨4 request￨4 .￨4 setMethod￨4 (￨4 httpMethod￨4 )￨4 ;￨4 MockRestServiceServer￨4 .￨4 this￨4 .￨4 actualRequests￨4 .￨4 add￨4 (￨4 request￨4 )￨4 ;￨4 return￨4 request￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 {￨3 }￨3 private￨3 String￨3 getString￨3 (￨3 Localizer￨4 localizer￨4 ,￨4 String￨4 key￨4 ,￨4 Component￨4 component￨4 )￨3 {￨3 }￨3 public￨3 String￨3 substitute￨3 (￨3 String￨3 string￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 vars￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 addDefaultVars￨3 (￨3 Map￨4 <￨4 String￨4 ,￨4 Object￨4 >￨4 params￨4 )￨3 {￨3 }￨3 private￨3 String￨3 getLabel￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 final￨2 class￨2 RequiredStateChange￨2 extends￨2 Change￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 private￨3 final￨3 boolean￨3 required￨3 =￨3 isRequired￨3 (￨3 )￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 undo￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 ValidatableAdapter￨2 implements￨2 IValidatable￨2 <￨2 T￨2 >￨2 {￨2 public￨3 void￨3 error￨3 (￨3 IValidationError￨4 error￨4 )￨3 {￨3 }￨3 public￨3 T￨3 getValue￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isValid￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 String￨2 VALUE_SEPARATOR￨2 =￨2 ";"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 EMPTY_STRING_ARRAY￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 FLAG_PERSISTENT￨2 =￨2 FLAG_RESERVED2￨2 ;￨2 private￨2 static￨2 final￨2 short￨2 FLAG_REQUIRED￨2 =￨2 FLAG_RESERVED3￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 NO_RAW_INPUT￨2 =￨2 "[-NO-RAW-INPUT-]"￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 protected￨2 static￨2 final￨2 short￨2 FLAG_CONVERT_EMPTY_INPUT_STRING_TO_NULL￨2 =￨2 FLAG_RESERVED1￨2 ;￨2 public￨2 static￨2 final￨2 void￨2 visitFormComponentsPostOrder￨2 (￨2 Component￨3 component￨3 ,￨3 final￨3 FormComponent￨3 .￨3 IVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 Object￨2 visitFormComponentsPostOrderHelper￨2 (￨2 Component￨3 component￨3 ,￨3 final￨3 FormComponent￨3 .￨3 IVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 void￨2 visitComponentsPostOrder￨2 (￨2 Component￨3 component￨3 ,￨3 final￨3 Component￨3 .￨3 IVisitor￨3 <￨3 Component￨3 >￨3 visitor￨3 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 Object￨2 visitComponentsPostOrderHelper￨2 (￨2 Component￨3 component￨3 ,￨3 final￨3 Component￨3 .￨3 IVisitor￨3 <￨3 Component￨3 >￨3 visitor￨3 )￨2 {￨2 }￨2 private￨2 transient￨2 T￨2 convertedInput￨2 ;￨2 private￨2 String￨2 rawInput￨2 =￨2 FormComponent￨2 .￨2 NO_RAW_INPUT￨2 ;￨2 private￨2 String￨2 typeName￨2 ;￨2 private￨2 Object￨2 validators￨2 =￨2 null￨2 ;￨2 public￨2 FormComponent￨2 (￨2 final￨3 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 FormComponent￨2 (￨2 final￨3 String￨3 id￨3 ,￨3 IModel￨3 <￨3 T￨3 >￨3 model￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 <￨2 T￨2 >￨2 add￨2 (￨2 final￨3 IValidator￨3 <￨3 T￨3 >￨3 validator￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 <￨2 T￨2 >￨2 add￨2 (￨2 final￨3 IValidator￨3 <￨3 T￨3 >￨3 ...￨3 validators￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 checkRequired￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 clearInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 error￨2 (￨2 IValidationError￨3 error￨3 )￨2 {￨2 }￨2 public￨2 final￨2 T￨2 getConvertedInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setConvertedInput￨2 (￨2 T￨3 convertedInput￨3 )￨2 {￨2 }￨2 public￨2 Form￨2 <￨2 ?￨2 >￨2 getForm￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getInputAsArray￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getInputName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getRawInput￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 final￨2 Class￨2 <￨2 T￨2 >￨2 getType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getValidatorKeyPrefix￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 List￨2 <￨2 IValidator￨2 <￨2 T￨2 >￨2 >￨2 getValidators￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 hasRawInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 inputChanged￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 invalid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInputNullable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isMultiPart￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isPersistent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRequired￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isValid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 processChildren￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 processInput￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FormComponent￨2 <￨2 T￨2 >￨2 setLabel￨2 (￨2 IModel￨3 <￨3 String￨3 >￨3 labelModel￨3 )￨2 {￨2 }￨2 @￨2 Deprecated￨2 public￨2 void￨2 setModelValue￨2 (￨2 final￨3 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setModelValue￨2 (￨2 final￨3 String￨3 [￨3 ]￨3 value￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 <￨2 T￨2 >￨2 setPersistent￨2 (￨2 final￨3 boolean￨3 persistent￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 <￨2 T￨2 >￨2 setRequired￨2 (￨2 final￨3 boolean￨3 required￨3 )￨2 {￨2 }￨2 public￨2 final￨2 FormComponent￨2 <￨2 T￨2 >￨2 setType￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 updateModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 valid￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 validate￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 private￨2 void￨2 validators_add￨2 (￨2 final￨3 IValidator￨3 <￨3 T￨3 >￨3 validator￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 private￨2 IValidator￨2 <￨2 T￨2 >￨2 validators_get￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 private￨2 int￨2 validators_size￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 void￨2 convertInput￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 reportValidationError￨2 (￨2 ConversionException￨3 e￨3 ,￨3 ValidationError￨3 error￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 protected￨2 T￨2 convertValue￨2 (￨2 String￨2 [￨2 ]￨2 value￨2 )￨2 throws￨2 ConversionException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getModelValue￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 inputAsInt￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 inputAsInt￨2 (￨2 final￨3 int￨3 defaultValue￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 int￨2 [￨2 ]￨2 inputAsIntArray￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 internalOnModelChanged￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 tag￨3 .￨3 put￨3 (￨3 "name"￨3 ,￨3 getInputName￨3 (￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 !￨3 (￨3 FormComponent￨3 .￨3 isEnabled￨3 (￨3 )￨3 )￨3 )￨3 ||￨3 (￨3 !￨3 (￨3 FormComponent￨3 .￨3 isEnableAllowed￨3 (￨3 )￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 onDisabled￨3 (￨3 tag￨3 )￨3 ;￨3 }￨3 super￨3 .￨3 onComponentTag￨3 (￨3 tag￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 onDetach￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onDisabled￨2 (￨2 final￨3 ComponentTag￨3 tag￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 onInvalid￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onValid￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 shouldTrimInput￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 String￨2 trim￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 supportsPersistence￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateRequired￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 reportRequiredError￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 validateValidators￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IValidatable￨2 <￨2 T￨2 >￨2 newValidatable￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 final￨2 IModel￨2 <￨2 T￨2 >￨2 getModel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setModel￨2 (￨2 IModel￨3 <￨3 T￨3 >￨3 model￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 final￨2 T￨2 getModelObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setModelObject￨2 (￨2 T￨3 object￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MultivariateNormalDistribution￨1 extends￨1 AbstractMultivariateRealDistribution￨1 {￨1 private￨2 final￨2 double￨2 [￨2 ]￨2 means￨2 ;￨2 private￨2 final￨2 RealMatrix￨2 covarianceMatrix￨2 ;￨2 private￨2 final￨2 RealMatrix￨2 covarianceMatrixInverse￨2 ;￨2 private￨2 final￨2 double￨2 covarianceMatrixDeterminant￨2 ;￨2 private￨2 final￨2 RealMatrix￨2 samplingMatrix￨2 ;￨2 public￨2 MultivariateNormalDistribution￨2 (￨2 final￨2 double￨2 [￨2 ]￨2 means￨2 ,￨2 final￨2 double￨2 [￨2 ]￨2 [￨2 ]￨2 covariances￨2 )￨2 throws￨2 DimensionMismatchException￨2 ,￨2 NonPositiveDefiniteMatrixException￨2 ,￨2 SingularMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MultivariateNormalDistribution￨2 (￨2 RandomGenerator￨2 rng￨2 ,￨2 final￨2 double￨2 [￨2 ]￨2 means￨2 ,￨2 final￨2 double￨2 [￨2 ]￨2 [￨2 ]￨2 covariances￨2 )￨2 throws￨2 DimensionMismatchException￨2 ,￨2 NonPositiveDefiniteMatrixException￨2 ,￨2 SingularMatrixException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 [￨2 ]￨2 getMeans￨2 (￨2 )￨2 {￨2 }￨2 public￨2 RealMatrix￨2 getCovariances￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 density￨2 (￨2 final￨2 double￨2 [￨2 ]￨2 vals￨2 )￨2 throws￨2 DimensionMismatchException￨2 (￨2 )￨2 {￨2 final￨3 int￨3 dim￨3 =￨3 getDimension￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 vals￨4 .￨4 length￨4 )￨4 !=￨4 dim￨4 )￨3 {￨3 throw￨4 new￨4 DimensionMismatchException￨4 (￨4 vals￨4 .￨4 length￨4 ,￨4 dim￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 (￨3 (￨3 FastMath￨3 .￨3 pow￨3 (￨3 (￨3 2￨3 *￨3 (￨3 FastMath￨3 .￨3 PI￨3 )￨3 )￨3 ,￨3 (￨3 (￨3 -￨3 dim￨3 )￨3 /￨3 2￨3 )￨3 )￨3 )￨3 *￨3 (￨3 FastMath￨3 .￨3 pow￨3 (￨3 covarianceMatrixDeterminant￨3 ,￨3 (￨3 -￨3 0.5￨3 )￨3 )￨3 )￨3 )￨3 *￨3 (￨3 getExponentTerm￨3 (￨3 vals￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 double￨2 [￨2 ]￨2 getStandardDeviations￨2 (￨2 )￨2 {￨2 }￨2 public￨2 double￨2 [￨2 ]￨2 sample￨2 (￨2 )￨2 {￨2 }￨2 private￨2 double￨2 getExponentTerm￨2 (￨2 final￨3 double￨3 [￨3 ]￨3 values￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 DateTimeDV￨1 extends￨1 AbstractDateTimeDV￨1 {￨1 public￨2 Object￨2 getActualValue￨2 (￨2 String￨2 content￨2 ,￨2 ValidationContext￨2 context￨2 )￨2 throws￨2 InvalidDatatypeValueException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 return￨4 parse￨4 (￨4 content￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 Exception￨4 ex￨4 )￨3 {￨3 throw￨4 new￨4 InvalidDatatypeValueException￨4 (￨4 "cvc-datatype-valid.1.2.1"￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 int￨2 [￨2 ]￨2 parse￨2 (￨2 String￨2 str￨2 )￨2 throws￨2 SchemaDateTimeException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 EncodingTest￨1 extends￨1 TestCase￨1 {￨1 public￨2 void￨2 test_1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 WicketTester￨3 tester￨3 =￨3 new￨3 WicketTester￨3 (￨3 )￨3 ;￨3 tester￨3 .￨3 startPage￨3 (￨3 Home￨3 .￨3 class￨3 )￨3 ;￨3 tester￨3 .￨3 assertContains￨3 (￨3 "Wicket<seq2seq4repair_space>Examples<seq2seq4repair_space>-<seq2seq4repair_space>encodings"￨3 )￨3 ;￨3 <START_BUG>￨3 tester￨3 .￨3 assertContains￨3 (￨3 "Hello<seq2seq4repair_space>world!<seq2seq4repair_space>Test:<seq2seq4repair_space>���"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
class￨1 MozillaDelegate￨1 {￨1 Browser￨2 browser￨2 ;￨2 MozillaDelegate￨2 (￨2 Browser￨3 browser￨3 )￨2 {￨2 }￨2 static￨2 Browser￨2 findBrowser￨2 (￨2 int￨3 handle￨3 )￨2 {￨2 }￨2 static￨2 char￨2 [￨2 ]￨2 mbcsToWcs￨2 (￨2 String￨3 codePage￨3 ,￨3 byte￨3 [￨3 ]￨3 buffer￨3 )￨2 {￨2 }￨2 static￨2 byte￨2 [￨2 ]￨2 wcsToMbcs￨2 (￨2 String￨3 codePage￨3 ,￨3 String￨3 string￨3 ,￨3 boolean￨3 terminate￨3 )￨2 {￨2 }￨2 int￨2 getHandle￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getLibraryName￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getSWTInitLibraryName￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "swt-xpcominit"￨3 ;￨3 <END_BUG>￨3 }￨2 void￨2 handleFocus￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 hookEnterExit￨2 (￨2 )￨2 {￨2 }￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 needsSpinup￨2 (￨2 )￨2 {￨2 }￨2 void￨2 onDispose￨2 (￨2 int￨3 embedHandle￨3 )￨2 {￨2 }￨2 void￨2 setSize￨2 (￨2 int￨3 embedHandle￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ModClusterEnableContext￨1 implements￨1 OperationStepHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 static￨2 final￨2 ModClusterEnableContext￨2 INSTANCE￨2 =￨2 new￨2 ModClusterEnableContext￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 context￨3 .￨3 getType￨3 (￨3 )￨3 )￨3 ==￨3 (￨3 Type￨3 .￨3 SERVER￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 context￨3 .￨3 addStep￨3 (￨3 new￨3 OperationStepHandler￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 execute￨4 (￨4 OperationContext￨4 context￨4 ,￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 ServiceController￨5 <￨5 ?￨5 >￨5 controller￨5 =￨5 context￨5 .￨5 getServiceRegistry￨5 (￨5 false￨5 )￨5 .￨5 getService￨5 (￨5 NAME￨5 )￨5 ;￨5 ModCluster￨5 modcluster￨5 =￨5 (￨5 (￨5 ModCluster￨5 )￨5 (￨5 controller￨5 .￨5 getValue￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 ModClusterLogger￨5 .￨5 ROOT_LOGGER￨5 .￨5 debugf￨5 (￨5 "enable-context:<seq2seq4repair_space>%s"￨5 ,￨5 operation￨5 )￨5 ;￨5 ContextHost￨5 contexthost￨5 =￨5 new￨5 ContextHost￨5 (￨5 operation￨5 )￨5 ;￨5 modcluster￨5 .￨5 enableContext￨5 (￨5 contexthost￨5 .￨5 webhost￨5 ,￨5 contexthost￨5 .￨5 webcontext￨5 )￨5 ;￨5 context￨5 .￨5 completeStep￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 RUNTIME￨3 )￨3 ;￨3 }￨3 context￨3 .￨3 completeStep￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
final￨1 class￨1 BcelMethod￨1 extends￨1 ResolvedMember￨1 {￨1 private￨2 Method￨2 method￨2 ;￨2 private￨2 boolean￨2 isAjSynthetic￨2 ;￨2 private￨2 ShadowMunger￨2 associatedShadowMunger￨2 ;￨2 private￨2 ResolvedPointcutDefinition￨2 preResolvedPointcut￨2 ;￨2 private￨2 ResolvedType￨2 [￨2 ]￨2 annotationTypes￨2 =￨2 null￨2 ;￨2 private￨2 AnnotationX￨2 [￨2 ]￨2 annotations￨2 =￨2 null￨2 ;￨2 private￨2 EffectiveSignatureAttribute￨2 effectiveSignature￨2 ;￨2 private￨2 MethodDeclarationLineNumberAttribute￨2 declarationLineNumber￨2 ;￨2 private￨2 ResolvedType￨2 [￨2 ]￨2 resolvedAnnotations￨2 ;￨2 private￨2 World￨2 world￨2 ;￨2 private￨2 BcelObjectType￨2 bcelObjectType￨2 ;￨2 BcelMethod￨2 (￨2 BcelObjectType￨3 declaringType￨3 ,￨3 Method￨3 method￨3 )￨2 {￨2 }￨2 private￨2 void￨2 unpackJavaAttributes￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 unpackAjAttributes￨2 (￨2 World￨3 world￨3 )￨2 {￨2 associatedShadowMunger￨3 =￨3 null￨3 ;￨3 <START_BUG>￨3 List￨3 as￨3 =￨3 BcelAttributes￨3 .￨3 readAjAttributes￨3 (￨3 getDeclaringType￨3 (￨3 )￨3 .￨3 getClassName￨3 (￨3 )￨3 ,￨3 method￨3 .￨3 getAttributes￨3 (￨3 )￨3 ,￨3 getSourceContext￨3 (￨3 world￨3 )￨3 ,￨3 world￨3 .￨3 getMessageHandler￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 processAttributes￨3 (￨3 world￨3 ,￨3 as￨3 )￨3 ;￨3 as￨3 =￨3 AtAjAttributes￨3 .￨3 readAj5MethodAttributes￨3 (￨3 method￨3 ,￨3 this￨3 ,￨3 world￨3 .￨3 resolve￨3 (￨3 getDeclaringType￨3 (￨3 )￨3 )￨3 ,￨3 preResolvedPointcut￨3 ,￨3 getSourceContext￨3 (￨3 world￨3 )￨3 ,￨3 world￨3 .￨3 getMessageHandler￨3 (￨3 )￨3 )￨3 ;￨3 processAttributes￨3 (￨3 world￨3 ,￨3 as￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 processAttributes￨2 (￨2 World￨3 world￨3 ,￨3 List￨3 as￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isAjSynthetic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ShadowMunger￨2 getAssociatedShadowMunger￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EffectiveSignatureAttribute￨2 getEffectiveSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasDeclarationLineNumberInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getDeclarationLineNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getDeclarationOffset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ISourceLocation￨2 getSourceLocation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Kind￨2 getKind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasAnnotation￨2 (￨2 UnresolvedType￨3 ofType￨3 )￨2 {￨2 }￨2 public￨2 AnnotationX￨2 [￨2 ]￨2 getAnnotations￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ResolvedType￨2 [￨2 ]￨2 getAnnotationTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addAnnotation￨2 (￨2 AnnotationX￨3 annotation￨3 )￨2 {￨2 }￨2 private￨2 void￨2 ensureAnnotationTypesRetrieved￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 canBeParameterized￨2 =￨2 false￨2 ;￨2 public￨2 boolean￨2 canBeParameterized￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 unpackedGenericSignature￨2 =￨2 false￨2 ;￨2 private￨2 UnresolvedType￨2 genericReturnType￨2 =￨2 null￨2 ;￨2 private￨2 UnresolvedType￨2 [￨2 ]￨2 genericParameterTypes￨2 =￨2 null￨2 ;￨2 public￨2 UnresolvedType￨2 [￨2 ]￨2 getGenericParameterTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 UnresolvedType￨2 getGenericReturnType￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 unpackGenericSignature￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FilenameUtils￨1 {￨1 public￨2 static￨2 final￨2 char￨2 EXTENSION_SEPARATOR￨2 =￨2 '.'￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 EXTENSION_SEPARATOR_STR￨2 =￨2 Character￨2 .￨2 toString￨2 (￨2 FilenameUtils￨2 .￨2 EXTENSION_SEPARATOR￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 char￨2 UNIX_SEPARATOR￨2 =￨2 '/'￨2 ;￨2 private￨2 static￨2 final￨2 char￨2 WINDOWS_SEPARATOR￨2 =￨2 '\\'￨2 ;￨2 private￨2 static￨2 final￨2 char￨2 SYSTEM_SEPARATOR￨2 =￨2 File￨2 .￨2 separatorChar￨2 ;￨2 private￨2 static￨2 final￨2 char￨2 OTHER_SEPARATOR￨2 ;￨2 public￨2 FilenameUtils￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 isSystemWindows￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 isSeparator￨2 (￨2 char￨3 ch￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 normalize￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 normalize￨2 (￨2 String￨3 filename￨3 ,￨3 boolean￨3 unixSeparator￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 normalizeNoEndSeparator￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 normalizeNoEndSeparator￨2 (￨2 String￨3 filename￨3 ,￨3 boolean￨3 unixSeparator￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 doNormalize￨2 (￨2 String￨3 filename￨3 ,￨3 char￨3 separator￨3 ,￨3 boolean￨3 keepSeparator￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 concat￨2 (￨2 String￨3 basePath￨3 ,￨3 String￨3 fullFilenameToAdd￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 separatorsToUnix￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 separatorsToWindows￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 separatorsToSystem￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 getPrefixLength￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 indexOfLastSeparator￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 indexOfExtension￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPrefix￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPath￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getPathNoEndSeparator￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 doGetPath￨2 (￨2 String￨3 filename￨3 ,￨3 int￨3 separatorAdd￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getFullPath￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getFullPathNoEndSeparator￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 doGetFullPath￨2 (￨2 String￨3 filename￨3 ,￨3 boolean￨3 includeSeparator￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getName￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getBaseName￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 getExtension￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 removeExtension￨2 (￨2 String￨3 filename￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equals￨2 (￨2 String￨3 filename1￨3 ,￨3 String￨3 filename2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equalsOnSystem￨2 (￨2 String￨3 filename1￨3 ,￨3 String￨3 filename2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equalsNormalized￨2 (￨2 String￨3 filename1￨3 ,￨3 String￨3 filename2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equalsNormalizedOnSystem￨2 (￨2 String￨3 filename1￨3 ,￨3 String￨3 filename2￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 equals￨2 (￨2 String￨3 filename1￨3 ,￨3 String￨3 filename2￨3 ,￨3 boolean￨3 normalized￨3 ,￨3 IOCase￨3 caseSensitivity￨3 )￨2 {￨2 if￨3 (￨3 (￨4 filename1￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 filename2￨4 ==￨4 null￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 return￨4 filename1￨4 ==￨4 filename2￨4 ;￨4 <END_BUG>￨4 }￨3 if￨3 (￨3 normalized￨4 )￨3 {￨3 filename1￨4 =￨4 FilenameUtils￨4 .￨4 normalize￨4 (￨4 filename1￨4 )￨4 ;￨4 filename2￨4 =￨4 FilenameUtils￨4 .￨4 normalize￨4 (￨4 filename2￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 filename1￨5 ==￨5 null￨5 )￨5 ||￨5 (￨5 filename2￨5 ==￨5 null￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 NullPointerException￨5 (￨5 "Error<seq2seq4repair_space>normalizing<seq2seq4repair_space>one<seq2seq4repair_space>or<seq2seq4repair_space>both<seq2seq4repair_space>of<seq2seq4repair_space>the<seq2seq4repair_space>file<seq2seq4repair_space>names"￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 caseSensitivity￨4 ==￨4 null￨4 )￨3 {￨3 caseSensitivity￨4 =￨4 IOCase￨4 .￨4 SENSITIVE￨4 ;￨4 }￨3 return￨3 caseSensitivity￨3 .￨3 checkEquals￨3 (￨3 filename1￨3 ,￨3 filename2￨3 )￨3 ;￨3 }￨2 public￨2 static￨2 boolean￨2 isExtension￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 extension￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isExtension￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 [￨3 ]￨3 extensions￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isExtension￨2 (￨2 String￨3 filename￨3 ,￨3 Collection￨3 <￨3 String￨3 >￨3 extensions￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 wildcardMatch￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 wildcardMatcher￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 wildcardMatchOnSystem￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 wildcardMatcher￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 wildcardMatch￨2 (￨2 String￨3 filename￨3 ,￨3 String￨3 wildcardMatcher￨3 ,￨3 IOCase￨3 caseSensitivity￨3 )￨2 {￨2 }￨2 static￨2 String￨2 [￨2 ]￨2 splitOnTokens￨2 (￨2 String￨3 text￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JavaBuilder￨1 extends￨1 IncrementalProjectBuilder￨1 {￨1 IProject￨2 currentProject￨2 ;￨2 IJavaProject￨2 javaProject￨2 ;￨2 IWorkspaceRoot￨2 workspaceRoot￨2 ;￨2 ClasspathLocation￨2 [￨2 ]￨2 classpath￨2 ;￨2 IContainer￨2 outputFolder￨2 ;￨2 IContainer￨2 [￨2 ]￨2 sourceFolders￨2 ;￨2 SimpleLookupTable￨2 prereqOutputFolders￨2 ;￨2 State￨2 lastState￨2 ;￨2 BuildNotifier￨2 notifier￨2 ;￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 resourceFilters￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 JAVA_EXTENSION￨2 =￨2 "java"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 CLASS_EXTENSION￨2 =￨2 "class"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 JAR_EXTENSION￨2 =￨2 "jar"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ZIP_EXTENSION￨2 =￨2 "zip"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 OPTION_ResourceCopyFilter￨2 =￨2 "org.eclipse.jdt.core.builder.resourceCopyExclusionFilters"￨2 ;￨2 public￨2 static￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 static￨2 final￨2 String￨2 ProblemMarkerTag￨2 =￨2 IJavaModelMarker￨2 .￨2 JAVA_MODEL_PROBLEM_MARKER￨2 ;￨2 static￨2 ArrayList￨2 builtProjects￨2 =￨2 null￨2 ;￨2 public￨2 static￨2 IMarker￨2 [￨2 ]￨2 getProblemsFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 removeProblemsFor￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 static￨2 State￨2 readState￨2 (￨2 DataInputStream￨2 in￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 writeState￨2 (￨2 Object￨2 state￨2 ,￨2 DataOutputStream￨2 out￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 JavaBuilder￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IProject￨2 [￨2 ]￨2 build￨2 (￨2 int￨2 kind￨2 ,￨2 Map￨2 ignored￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildAll￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 buildDeltas￨2 (￨2 SimpleLookupTable￨3 deltas￨3 )￨2 {￨2 }￨2 private￨2 void￨2 cleanup￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 clearLastState￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 createFolder￨2 (￨2 IContainer￨2 folder￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 filterResource￨2 (￨2 IResource￨3 resource￨3 )￨2 {￨2 }￨2 private￨2 SimpleLookupTable￨2 findDeltas￨2 (￨2 )￨2 {￨2 notifier￨3 .￨3 subTask￨3 (￨3 Util￨3 .￨3 bind￨3 (￨3 "build.readingDelta"￨3 ,￨3 currentProject￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 IResourceDelta￨3 delta￨3 =￨3 getDelta￨3 (￨3 currentProject￨3 )￨3 ;￨3 <START_BUG>￨3 SimpleLookupTable￨3 deltas￨3 =￨3 new￨3 SimpleLookupTable￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 delta￨4 !=￨4 null￨4 )￨3 {￨3 deltas￨4 .￨4 put￨4 (￨4 currentProject￨4 ,￨4 delta￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 if￨4 (￨4 JavaBuilder￨5 .￨5 DEBUG￨5 )￨4 {￨4 System￨5 .￨5 out￨5 .￨5 println￨5 (￨5 (￨5 "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨5 +￨5 (￨5 currentProject￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 notifier￨4 .￨4 subTask￨4 (￨4 ""￨4 )￨4 ;￨4 return￨4 null￨4 ;￨4 }￨3 Object￨3 [￨3 ]￨3 keyTable￨3 =￨3 prereqOutputFolders￨3 .￨3 keyTable￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 l￨4 =￨4 keyTable￨4 .￨4 length￨4 ;￨4 i￨4 <￨4 l￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 IProject￨4 prereqProject￨4 =￨4 (￨4 (￨4 IProject￨4 )￨4 (￨4 keyTable￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 prereqProject￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 lastState￨5 .￨5 isStructurallyChanged￨5 (￨5 prereqProject￨5 ,￨5 getLastState￨5 (￨5 prereqProject￨5 )￨5 )￨5 )￨5 )￨4 {￨4 notifier￨5 .￨5 subTask￨5 (￨5 Util￨5 .￨5 bind￨5 (￨5 "build.readingDelta"￨5 ,￨5 prereqProject￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 delta￨5 =￨5 getDelta￨5 (￨5 prereqProject￨5 )￨5 ;￨5 if￨5 (￨5 delta￨6 !=￨6 null￨6 )￨5 {￨5 deltas￨6 .￨6 put￨6 (￨6 prereqProject￨6 ,￨6 delta￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 if￨6 (￨6 JavaBuilder￨7 .￨7 DEBUG￨7 )￨6 {￨6 System￨7 .￨7 out￨7 .￨7 println￨7 (￨7 (￨7 "Missing<seq2seq4repair_space>delta<seq2seq4repair_space>for:<seq2seq4repair_space>"￨7 +￨7 (￨7 prereqProject￨7 .￨7 getName￨7 (￨7 )￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 notifier￨6 .￨6 subTask￨6 (￨6 ""￨6 )￨6 ;￨6 return￨6 null￨6 ;￨6 }￨5 }￨4 }￨3 notifier￨3 .￨3 subTask￨3 (￨3 ""￨3 )￨3 ;￨3 return￨3 deltas￨3 ;￨3 }￨2 private￨2 State￨2 getLastState￨2 (￨2 IProject￨3 project￨3 )￨2 {￨2 }￨2 private￨2 IProject￨2 [￨2 ]￨2 getRequiredProjects￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasClasspathChanged￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 hasOutputLocationChanged￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeBuilder￨2 (￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 recordNewState￨2 (￨2 State￨3 state￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SimplePasswordStrengthCheckerTestCase￨1 {￨1 private￨2 Keyboard￨2 keyboard￨2 =￨2 new￨2 SimpleKeyboard￨2 (￨2 )￨2 ;￨2 private￨2 Dictionary￨2 dictionary￨2 =￨2 new￨2 SimpleDictionary￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 PasswordCheckUtil￨2 PCU￨2 =￨2 PasswordCheckUtil￨2 .￨2 create￨2 (￨2 null￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 PasswordRestriction￨2 ALPHA_RESTRICTION￨2 =￨2 SimplePasswordStrengthCheckerTestCase￨2 .￨2 PCU￨2 .￨2 createAlphaRestriction￨2 (￨2 1￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 PasswordRestriction￨2 SYMBOL_RESTRICTION￨2 =￨2 SimplePasswordStrengthCheckerTestCase￨2 .￨2 PCU￨2 .￨2 createSymbolRestriction￨2 (￨2 1￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 PasswordRestriction￨2 DIGIT_RESTRICTION￨2 =￨2 SimplePasswordStrengthCheckerTestCase￨2 .￨2 PCU￨2 .￨2 createDigitRestriction￨2 (￨2 1￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 LengthRestriction￨2 LENGTH_RESTRICTION￨2 =￨2 new￨2 LengthRestriction￨2 (￨2 8￨2 )￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testLengthRestriction￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDigitsRestriction￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSymbolsRestriction￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testAlphaRestriction￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testAdHocRestriction￨2 (￨2 )￨2 {￨2 List￨3 <￨3 PasswordRestriction￨3 >￨3 restrictions￨3 =￨3 new￨3 ArrayList￨3 <￨3 PasswordRestriction￨3 >￨3 (￨3 )￨3 ;￨3 restrictions￨3 .￨3 add￨3 (￨3 SimplePasswordStrengthCheckerTestCase￨3 .￨3 ALPHA_RESTRICTION￨3 )￨3 ;￨3 restrictions￨3 .￨3 add￨3 (￨3 SimplePasswordStrengthCheckerTestCase￨3 .￨3 SYMBOL_RESTRICTION￨3 )￨3 ;￨3 SimplePasswordStrengthChecker￨3 checker￨3 =￨3 new￨3 SimplePasswordStrengthChecker￨3 (￨3 restrictions￨3 ,￨3 this￨3 .￨3 dictionary￨3 ,￨3 this￨3 .￨3 keyboard￨3 )￨3 ;￨3 String￨3 pwd￨3 =￨3 "!#*_3x"￨3 ;￨3 List￨3 <￨3 PasswordRestriction￨3 >￨3 adHocRestrictions￨3 =￨3 new￨3 ArrayList￨3 <￨3 PasswordRestriction￨3 >￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 ValueRestriction￨3 restriction￨3 =￨3 new￨3 ValueRestriction￨3 (￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 pwd￨3 }￨3 ,￨3 true￨3 )￨3 ;￨3 <END_BUG>￨3 adHocRestrictions￨3 .￨3 add￨3 (￨3 restriction￨3 )￨3 ;￨3 PasswordStrengthCheckResult￨3 result￨3 =￨3 checker￨3 .￨3 check￨3 (￨3 ""￨3 ,￨3 pwd￨3 ,￨3 adHocRestrictions￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 result￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 result￨3 .￨3 getPassedRestrictions￨3 (￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 result￨3 .￨3 getRestrictionFailures￨3 (￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 2￨3 ,￨3 result￨3 .￨3 getPassedRestrictions￨3 (￨3 )￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 result￨3 .￨3 getRestrictionFailures￨3 (￨3 )￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 result￨3 .￨3 getStrength￨3 (￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 SimplePasswordStrengthCheckerTestCase￨3 .￨3 ALPHA_RESTRICTION￨3 ,￨3 result￨3 .￨3 getPassedRestrictions￨3 (￨3 )￨3 .￨3 get￨3 (￨3 0￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 SimplePasswordStrengthCheckerTestCase￨3 .￨3 SYMBOL_RESTRICTION￨3 ,￨3 result￨3 .￨3 getPassedRestrictions￨3 (￨3 )￨3 .￨3 get￨3 (￨3 1￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 DomainManagementMessages￨3 .￨3 MESSAGES￨3 .￨3 passwordMustNotBeEqual￨3 (￨3 pwd￨3 )￨3 .￨3 getMessage￨3 (￨3 )￨3 ,￨3 result￨3 .￨3 getRestrictionFailures￨3 (￨3 )￨3 .￨3 get￨3 (￨3 0￨3 )￨3 .￨3 getMessage￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 Main￨1 {￨1 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 private￨2 static￨2 StandaloneServer￨2 create￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 Properties￨2 props￨2 =￨2 new￨2 Properties￨2 (￨2 System￨2 .￨2 getProperties￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 Main￨2 (￨2 )￨2 {￨2 }￨2 private￨2 StandaloneServer￨2 boot￨2 (￨2 final￨3 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 StandaloneServer￨3 server￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 ServerEnvironment￨4 config￨4 =￨4 Main￨4 .￨4 determineEnvironment￨4 (￨4 args￨4 ,￨4 props￨4 )￨4 ;￨4 if￨4 (￨4 config￨5 ==￨5 null￨5 )￨4 {￨4 abort￨5 (￨5 null￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 config￨6 .￨6 isStandalone￨6 (￨6 )￨6 )￨5 {￨5 <START_BUG>￨6 server￨6 =￨6 new￨6 StandaloneServer￨6 (￨6 config￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 else￨5 {￨5 throw￨6 new￨6 IllegalStateException￨6 (￨6 )￨6 ;￨6 }￨5 server￨5 .￨5 start￨5 (￨5 )￨5 ;￨5 return￨5 server￨5 ;￨5 }￨4 }￨3 catch￨3 (￨3 Throwable￨4 t￨4 )￨3 {￨3 abort￨4 (￨4 t￨4 )￨4 ;￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 private￨2 void￨2 abort￨2 (￨2 Throwable￨3 t￨3 )￨2 {￨2 }￨2 public￨2 static￨2 ServerEnvironment￨2 determineEnvironment￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 ,￨3 Properties￨3 systemProperties￨3 )￨2 {￨2 }￨2 private￨2 static￨2 URL￨2 makeURL￨2 (￨2 String￨2 urlspec￨2 )￨2 throws￨2 MalformedURLException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 RungeKuttaIntegrator￨1 extends￨1 AbstractIntegrator￨1 {￨1 private￨2 final￨2 double￨2 [￨2 ]￨2 c￨2 ;￨2 private￨2 final￨2 double￨2 [￨2 ]￨2 [￨2 ]￨2 a￨2 ;￨2 private￨2 final￨2 double￨2 [￨2 ]￨2 b￨2 ;￨2 private￨2 final￨2 RungeKuttaStepInterpolator￨2 prototype￨2 ;￨2 private￨2 final￨2 double￨2 step￨2 ;￨2 protected￨2 RungeKuttaIntegrator￨2 (￨2 final￨3 String￨3 name￨3 ,￨3 final￨3 double￨3 [￨3 ]￨3 c￨3 ,￨3 final￨3 double￨3 [￨3 ]￨3 [￨3 ]￨3 a￨3 ,￨3 final￨3 double￨3 [￨3 ]￨3 b￨3 ,￨3 final￨3 RungeKuttaStepInterpolator￨3 prototype￨3 ,￨3 final￨3 double￨3 step￨3 )￨2 {￨2 }￨2 public￨2 double￨2 integrate￨2 (￨2 final￨2 FirstOrderDifferentialEquations￨2 equations￨2 ,￨2 final￨2 double￨2 t0￨2 ,￨2 final￨2 double￨2 [￨2 ]￨2 y0￨2 ,￨2 final￨2 double￨2 t￨2 ,￨2 final￨2 double￨2 [￨2 ]￨2 y￨2 )￨2 throws￨2 DerivativeException￨2 ,￨2 IntegratorException￨2 (￨2 )￨2 {￨2 sanityChecks￨3 (￨3 equations￨3 ,￨3 t0￨3 ,￨3 y0￨3 ,￨3 t￨3 ,￨3 y￨3 )￨3 ;￨3 setEquations￨3 (￨3 equations￨3 )￨3 ;￨3 resetEvaluations￨3 (￨3 )￨3 ;￨3 final￨3 boolean￨3 forward￨3 =￨3 t￨3 >￨3 t0￨3 ;￨3 final￨3 int￨3 stages￨3 =￨3 (￨3 c￨3 .￨3 length￨3 )￨3 +￨3 1￨3 ;￨3 if￨3 (￨3 y￨4 !=￨4 y0￨4 )￨3 {￨3 System￨4 .￨4 arraycopy￨4 (￨4 y0￨4 ,￨4 0￨4 ,￨4 y￨4 ,￨4 0￨4 ,￨4 y0￨4 .￨4 length￨4 )￨4 ;￨4 }￨3 final￨3 double￨3 [￨3 ]￨3 [￨3 ]￨3 yDotK￨3 =￨3 new￨3 double￨3 [￨3 stages￨3 ]￨3 [￨3 ]￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 stages￨4 ;￨4 ++￨4 i￨4 )￨3 {￨3 yDotK￨4 [￨4 i￨4 ]￨4 =￨4 new￨4 double￨4 [￨4 y0￨4 .￨4 length￨4 ]￨4 ;￨4 }￨3 final￨3 double￨3 [￨3 ]￨3 yTmp￨3 =￨3 new￨3 double￨3 [￨3 y0￨3 .￨3 length￨3 ]￨3 ;￨3 AbstractStepInterpolator￨3 interpolator￨3 ;￨3 if￨3 (￨3 (￨4 requiresDenseOutput￨4 (￨4 )￨4 )￨4 ||￨4 (￨4 !￨4 (￨4 eventsHandlersManager￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 final￨4 RungeKuttaStepInterpolator￨4 rki￨4 =￨4 (￨4 (￨4 RungeKuttaStepInterpolator￨4 )￨4 (￨4 prototype￨4 .￨4 copy￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 rki￨4 .￨4 reinitialize￨4 (￨4 this￨4 ,￨4 yTmp￨4 ,￨4 yDotK￨4 ,￨4 forward￨4 )￨4 ;￨4 interpolator￨4 =￨4 rki￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 interpolator￨4 =￨4 new￨4 DummyStepInterpolator￨4 (￨4 yTmp￨4 ,￨4 forward￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 interpolator￨3 .￨3 storeTime￨3 (￨3 t0￨3 )￨3 ;￨3 stepStart￨3 =￨3 t0￨3 ;￨3 stepSize￨3 =￨3 (￨3 forward￨3 )￨3 ?￨3 step￨3 :￨3 -￨3 (￨3 step￨3 )￨3 ;￨3 for￨3 (￨3 StepHandler￨4 handler￨4 :￨4 stepHandlers￨4 )￨3 {￨3 handler￨4 .￨4 reset￨4 (￨4 )￨4 ;￨4 }￨3 CombinedEventsManager￨3 manager￨3 =￨3 addEndTimeChecker￨3 (￨3 t0￨3 ,￨3 t￨3 ,￨3 eventsHandlersManager￨3 )￨3 ;￨3 boolean￨3 lastStep￨3 =￨3 false￨3 ;￨3 while￨3 (￨3 !￨4 lastStep￨4 )￨3 {￨3 interpolator￨4 .￨4 shift￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 boolean￨5 loop￨5 =￨5 true￨5 ;￨5 loop￨5 ;￨5 )￨4 {￨4 computeDerivatives￨5 (￨5 stepStart￨5 ,￨5 y￨5 ,￨5 yDotK￨5 [￨5 0￨5 ]￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 k￨6 =￨6 1￨6 ;￨6 k￨6 <￨6 stages￨6 ;￨6 ++￨6 k￨6 )￨5 {￨5 for￨6 (￨6 int￨7 j￨7 =￨7 0￨7 ;￨7 j￨7 <￨7 (￨7 y0￨7 .￨7 length￨7 )￨7 ;￨7 ++￨7 j￨7 )￨6 {￨6 double￨7 sum￨7 =￨7 (￨7 a￨7 [￨7 (￨7 k￨7 -￨7 1￨7 )￨7 ]￨7 [￨7 0￨7 ]￨7 )￨7 *￨7 (￨7 yDotK￨7 [￨7 0￨7 ]￨7 [￨7 j￨7 ]￨7 )￨7 ;￨7 for￨7 (￨7 int￨8 l￨8 =￨8 1￨8 ;￨8 l￨8 <￨8 k￨8 ;￨8 ++￨8 l￨8 )￨7 {￨7 sum￨8 +=￨8 (￨8 a￨8 [￨8 (￨8 k￨8 -￨8 1￨8 )￨8 ]￨8 [￨8 l￨8 ]￨8 )￨8 *￨8 (￨8 yDotK￨8 [￨8 l￨8 ]￨8 [￨8 j￨8 ]￨8 )￨8 ;￨8 }￨7 yTmp￨7 [￨7 j￨7 ]￨7 =￨7 (￨7 y￨7 [￨7 j￨7 ]￨7 )￨7 +￨7 (￨7 (￨7 stepSize￨7 )￨7 *￨7 sum￨7 )￨7 ;￨7 }￨6 computeDerivatives￨6 (￨6 (￨6 (￨6 stepStart￨6 )￨6 +￨6 (￨6 (￨6 c￨6 [￨6 (￨6 k￨6 -￨6 1￨6 )￨6 ]￨6 )￨6 *￨6 (￨6 stepSize￨6 )￨6 )￨6 )￨6 ,￨6 yTmp￨6 ,￨6 yDotK￨6 [￨6 k￨6 ]￨6 )￨6 ;￨6 }￨5 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 (￨6 y0￨6 .￨6 length￨6 )￨6 ;￨6 ++￨6 j￨6 )￨5 {￨5 double￨6 sum￨6 =￨6 (￨6 b￨6 [￨6 0￨6 ]￨6 )￨6 *￨6 (￨6 yDotK￨6 [￨6 0￨6 ]￨6 [￨6 j￨6 ]￨6 )￨6 ;￨6 for￨6 (￨6 int￨7 l￨7 =￨7 1￨7 ;￨7 l￨7 <￨7 stages￨7 ;￨7 ++￨7 l￨7 )￨6 {￨6 sum￨7 +=￨7 (￨7 b￨7 [￨7 l￨7 ]￨7 )￨7 *￨7 (￨7 yDotK￨7 [￨7 l￨7 ]￨7 [￨7 j￨7 ]￨7 )￨7 ;￨7 }￨6 yTmp￨6 [￨6 j￨6 ]￨6 =￨6 (￨6 y￨6 [￨6 j￨6 ]￨6 )￨6 +￨6 (￨6 (￨6 stepSize￨6 )￨6 *￨6 sum￨6 )￨6 ;￨6 }￨5 interpolator￨5 .￨5 storeTime￨5 (￨5 (￨5 (￨5 stepStart￨5 )￨5 +￨5 (￨5 stepSize￨5 )￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 manager￨6 .￨6 evaluateStep￨6 (￨6 interpolator￨6 )￨6 )￨5 {￨5 final￨6 double￨6 dt￨6 =￨6 (￨6 manager￨6 .￨6 getEventTime￨6 (￨6 )￨6 )￨6 -￨6 (￨6 stepStart￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 Math￨7 .￨7 abs￨7 (￨7 dt￨7 )￨7 )￨7 <=￨7 (￨7 Math￨7 .￨7 ulp￨7 (￨7 stepStart￨7 )￨7 )￨7 )￨6 {￨6 loop￨7 =￨7 false￨7 ;￨7 }￨6 else￨6 {￨6 stepSize￨7 =￨7 dt￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 loop￨6 =￨6 false￨6 ;￨6 }￨5 }￨4 final￨4 double￨4 nextStep￨4 =￨4 (￨4 stepStart￨4 )￨4 +￨4 (￨4 stepSize￨4 )￨4 ;￨4 System￨4 .￨4 arraycopy￨4 (￨4 yTmp￨4 ,￨4 0￨4 ,￨4 y￨4 ,￨4 0￨4 ,￨4 y0￨4 .￨4 length￨4 )￨4 ;￨4 manager￨4 .￨4 stepAccepted￨4 (￨4 nextStep￨4 ,￨4 y￨4 )￨4 ;￨4 lastStep￨4 =￨4 manager￨4 .￨4 stop￨4 (￨4 )￨4 ;￨4 interpolator￨4 .￨4 storeTime￨4 (￨4 nextStep￨4 )￨4 ;￨4 for￨4 (￨4 StepHandler￨5 handler￨5 :￨5 stepHandlers￨5 )￨4 {￨4 handler￨5 .￨5 handleStep￨5 (￨5 interpolator￨5 ,￨5 lastStep￨5 )￨5 ;￨5 }￨4 stepStart￨4 =￨4 nextStep￨4 ;￨4 if￨4 (￨4 (￨5 manager￨5 .￨5 reset￨5 (￨5 stepStart￨5 ,￨5 y￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 lastStep￨5 )￨5 )￨4 {￨4 computeDerivatives￨5 (￨5 stepStart￨5 ,￨5 y￨5 ,￨5 yDotK￨5 [￨5 0￨5 ]￨5 )￨5 ;￨5 }￨4 stepSize￨4 =￨4 (￨4 forward￨4 )￨4 ?￨4 step￨4 :￨4 -￨4 (￨4 step￨4 )￨4 ;￨4 }￨3 final￨3 double￨3 stopTime￨3 =￨3 stepStart￨3 ;￨3 stepStart￨3 =￨3 Double￨3 .￨3 NaN￨3 ;￨3 stepSize￨3 =￨3 Double￨3 .￨3 NaN￨3 ;￨3 return￨3 stopTime￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CleanDatabaseTestSetup￨1 extends￨1 BaseJDBCTestSetup￨1 {￨1 public￨2 CleanDatabaseTestSetup￨2 (￨2 Test￨3 test￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 decorateSQL￨2 (￨2 Statement￨2 s￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 cleanDatabase￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 CLEAR_DB_PROPERTIES￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 void￨2 clearProperties￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 removeObjects￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 DatabaseMetaData￨3 dmd￨3 =￨3 conn￨3 .￨3 getMetaData￨3 (￨3 )￨3 ;￨3 SQLException￨3 sqle￨3 =￨3 null￨3 ;￨3 for￨3 (￨3 int￨4 count￨4 =￨4 0￨4 ;￨4 count￨4 <￨4 5￨4 ;￨4 count￨4 ++￨4 )￨3 {￨3 List￨4 schemas￨4 =￨4 new￨4 ArrayList￨4 (￨4 )￨4 ;￨4 ResultSet￨4 rs￨4 =￨4 dmd￨4 .￨4 getSchemas￨4 (￨4 )￨4 ;￨4 while￨4 (￨4 rs￨5 .￨5 next￨5 (￨5 )￨5 )￨4 {￨4 String￨5 schema￨5 =￨5 rs￨5 .￨5 getString￨5 (￨5 "TABLE_SCHEM"￨5 )￨5 ;￨5 if￨5 (￨5 schema￨6 .￨6 startsWith￨6 (￨6 "SYS"￨6 )￨6 )￨5 {￨5 continue￨6 ;￨6 }￨5 if￨5 (￨5 schema￨6 .￨6 equals￨6 (￨6 "SQLJ"￨6 )￨6 )￨5 {￨5 continue￨6 ;￨6 }￨5 if￨5 (￨5 schema￨6 .￨6 equals￨6 (￨6 "NULLID"￨6 )￨6 )￨5 {￨5 continue￨6 ;￨6 }￨5 schemas￨5 .￨5 add￨5 (￨5 schema￨5 )￨5 ;￨5 }￨4 rs￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 sqle￨4 =￨4 null￨4 ;￨4 for￨4 (￨4 Iterator￨5 i￨5 =￨5 schemas￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 i￨5 .￨5 hasNext￨5 (￨5 )￨5 ;￨5 )￨4 {￨4 String￨5 schema￨5 =￨5 (￨5 (￨5 String￨5 )￨5 (￨5 i￨5 .￨5 next￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 JDBC￨6 .￨6 dropSchema￨6 (￨6 dmd￨6 ,￨6 schema￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 SQLException￨6 e￨6 )￨5 {￨5 <START_BUG>￨6 sqle￨6 =￨6 null￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 if￨4 (￨4 sqle￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 }￨3 throw￨3 sqle￨3 ;￨3 }￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 COMPRESS_DB_OBJECTS￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 static￨2 void￨2 compressObjects￨2 (￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Test_org_eclipse_swt_widgets_TableItem￨1 extends￨1 Test_org_eclipse_swt_widgets_Item￨1 {￨1 public￨2 Test_org_eclipse_swt_widgets_TableItem￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_ConstructorLorg_eclipse_swt_widgets_TableI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_ConstructorLorg_eclipse_swt_widgets_TableII￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getBackground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getBackgroundI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getBoundsI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getChecked￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getFont￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getFontI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getForeground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getForegroundI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getGrayed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getImageBoundsI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getImageI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getImageIndent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getParent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_getTextI￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setBackgroundILorg_eclipse_swt_graphics_Color￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setBackgroundLorg_eclipse_swt_graphics_Color￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setCheckedZ￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setFontLorg_eclipse_swt_graphics_Font￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setFontILorg_eclipse_swt_graphics_Font￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setForegroundILorg_eclipse_swt_graphics_Color￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setForegroundLorg_eclipse_swt_graphics_Color￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setGrayedZ￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setImage$Lorg_eclipse_swt_graphics_Image￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setImageILorg_eclipse_swt_graphics_Image￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setImageIndentI￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 SwtJunit￨3 .￨3 isCarbon￨3 )￨3 ||￨3 (￨3 SwtJunit￨3 .￨3 isGTK￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 tableItem￨3 .￨3 setImageIndent￨3 (￨3 1￨3 )￨3 ;￨3 return￨3 ;￨3 }￨3 assertEquals￨3 (￨3 0￨3 ,￨3 tableItem￨3 .￨3 getImageIndent￨3 (￨3 )￨3 )￨3 ;￨3 tableItem￨3 .￨3 setImageIndent￨3 (￨3 1￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 tableItem￨3 .￨3 getImageIndent￨3 (￨3 )￨3 )￨3 ;￨3 tableItem￨3 .￨3 setImageIndent￨3 (￨3 (￨3 -￨3 1￨3 )￨3 )￨3 ;￨3 assertEquals￨3 (￨3 1￨3 ,￨3 tableItem￨3 .￨3 getImageIndent￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 test_setText$Ljava_lang_String￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 test_setTextILjava_lang_String￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Vector￨2 methodNames￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 runTest￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 Table￨2 table￨2 ;￨2 TableItem￨2 tableItem￨2 ;￨2 private￨2 void￨2 makeCleanEnvironment￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 BehavioralFeature￨1 extends￨1 Feature￨1 {￨1 public￨2 boolean￨2 _isQuery￨2 ;￨2 public￨2 Vector￨2 _parameter￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 public￨2 Vector￨2 _raisedException￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 public￨2 BehavioralFeature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 BehavioralFeature￨2 (￨2 Name￨3 name￨3 )￨2 {￨2 }￨2 public￨2 BehavioralFeature￨2 (￨2 String￨3 nameStr￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 getIsQuery￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIsQuery￨2 (￨2 boolean￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Classifier￨2 getReturnType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setReturnType￨2 (￨2 Classifier￨2 rt￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 Parameter￨3 p￨3 =￨3 findParameter￨3 (￨3 RETURN_NAME￨3 )￨3 ;￨3 if￨3 (￨3 p￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 p￨4 =￨4 new￨4 Parameter￨4 (￨4 rt￨4 ,￨4 Parameter￨4 .￨4 RETURN_NAME￨4 )￨4 ;￨4 <END_BUG>￨4 addParameter￨4 (￨4 p￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 p￨4 .￨4 setType￨4 (￨4 rt￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Parameter￨2 findParameter￨2 (￨2 Name￨3 n￨3 )￨2 {￨2 }￨2 public￨2 Vector￨2 getParameter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setParameter￨2 (￨2 Vector￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addParameter￨2 (￨2 Parameter￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeParameter￨2 (￨2 Parameter￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Vector￨2 getRaisedException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setRaisedException￨2 (￨2 Vector￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addRaisedException￨2 (￨2 MMException￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeRaisedException￨2 (￨2 MMException￨2 x￨2 )￨2 throws￨2 PropertyVetoException￨2 (￨2 )￨2 {￨2 }￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 7697916359219415113L￨2 ;￨2 }￨1
public￨1 class￨1 ArgoFileFilter￨1 extends￨1 FileFilter￨1 {￨1 public￨2 boolean￨2 accept￨2 (￨2 File￨3 f￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getExtension￨2 (￨2 File￨3 f￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getDescription￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 "Argo<seq2seq4repair_space>v0.3.1<seq2seq4repair_space>native<seq2seq4repair_space>file<seq2seq4repair_space>type"￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 ExpandItem￨1 extends￨1 Item￨1 {￨1 ExpandBar￨2 parent￨2 ;￨2 Control￨2 control￨2 ;￨2 boolean￨2 expanded￨2 ;￨2 boolean￨2 hover￨2 ;￨2 int￨2 x￨2 ;￨2 int￨2 y￨2 ;￨2 int￨2 width￨2 ;￨2 int￨2 height￨2 ;￨2 int￨2 imageHeight￨2 ;￨2 int￨2 imageWidth￨2 ;￨2 static￨2 final￨2 int￨2 TEXT_INSET￨2 =￨2 6￨2 ;￨2 static￨2 final￨2 int￨2 BORDER￨2 =￨2 1￨2 ;￨2 static￨2 final￨2 int￨2 CHEVRON_SIZE￨2 =￨2 24￨2 ;￨2 public￨2 ExpandItem￨2 (￨2 ExpandBar￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 ExpandItem￨2 (￨2 ExpandBar￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 static￨2 ExpandBar￨2 checkNull￨2 (￨2 ExpandBar￨3 control￨3 )￨2 {￨2 }￨2 private￨2 void￨2 drawChevron￨2 (￨2 int￨3 hDC￨3 ,￨3 RECT￨3 rect￨3 )￨2 {￨2 }￨2 void￨2 drawItem￨2 (￨2 GC￨3 gc￨3 ,￨3 int￨3 hTheme￨3 ,￨3 RECT￨3 clipRect￨3 ,￨3 boolean￨3 drawFocus￨3 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Control￨2 getControl￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getExpanded￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getHeaderHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getHeight￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ExpandBar￨2 getParent￨2 (￨2 )￨2 {￨2 }￨2 int￨2 getPreferredWidth￨2 (￨2 int￨3 hTheme￨3 ,￨3 int￨3 hDC￨3 )￨2 {￨2 }￨2 void￨2 redraw￨2 (￨2 boolean￨3 all￨3 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 size￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpanded￨2 (￨2 boolean￨3 expanded￨3 )￨2 {￨2 checkWidget￨3 (￨3 )￨3 ;￨3 this￨3 .￨3 expanded￨3 =￨3 expanded￨3 ;￨3 <START_BUG>￨3 parent￨3 .￨3 showItem￨3 (￨3 parent￨3 .￨3 indexOf￨3 (￨3 this￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 setHeight￨2 (￨2 int￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImage￨2 (￨2 Image￨3 image￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 containsValue￨2 (￨2 Value￨3 map￨3 ,￨3 Value￨3 arg￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 isInstance￨2 (￨2 Value￨3 val￨3 ,￨3 Class￨3 c￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 and￨2 (￨2 Expression￨3 exp1￨3 ,￨3 Expression￨3 exp2￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 or￨2 (￨2 Expression￨3 exp1￨3 ,￨3 Expression￨3 exp2￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 not￨2 (￨2 Expression￨3 exp￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 bindVariable￨2 (￨2 Value￨3 var￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 bindKeyVariable￨2 (￨2 Value￨3 var￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 bindValueVariable￨2 (￨2 Value￨3 var￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 startsWith￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 endsWith￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 notMatches￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 ,￨3 String￨3 single￨3 ,￨3 String￨3 multi￨3 ,￨3 String￨3 esc￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 matches￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 ,￨3 String￨3 single￨3 ,￨3 String￨3 multi￨3 ,￨3 String￨3 esc￨3 )￨2 {￨2 }￨2 public￨2 Subquery￨2 newSubquery￨2 (￨2 ClassMetaData￨3 candidate￨3 ,￨3 boolean￨3 subs￨3 ,￨3 String￨3 alias￨3 )￨2 {￨2 }￨2 public￨2 Path￨2 newPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 newPath￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Literal￨2 newLiteral￨2 (￨2 Object￨3 val￨3 ,￨3 int￨3 ptype￨3 )￨2 {￨2 }￨2 public￨2 Literal￨2 newTypeLiteral￨2 (￨2 Object￨3 val￨3 ,￨3 int￨3 ptype￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 getThis￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Value￨2 getNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 <￨2 T￨2 extends￨2 Date￨2 >￨2 Value￨2 getCurrentDate￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 dateType￨3 )￨2 {￨2 }￨2 public￨2 <￨2 T￨2 extends￨2 Date￨2 >￨2 Value￨2 getCurrentTime￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 dateType￨3 )￨2 {￨2 }￨2 public￨2 <￨2 T￨2 extends￨2 Date￨2 >￨2 Value￨2 getCurrentTimestamp￨2 (￨2 Class￨3 <￨3 T￨3 >￨3 dateType￨3 )￨2 {￨2 }￨2 public￨2 Parameter￨2 newParameter￨2 (￨2 Object￨3 name￨3 ,￨3 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 Parameter￨2 newCollectionValuedParameter￨2 (￨2 Object￨3 key￨3 ,￨3 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 newExtension￨2 (￨2 FilterListener￨3 listener￨3 ,￨3 Value￨3 target￨3 ,￨3 Value￨3 arg￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 newAggregate￨2 (￨2 AggregateListener￨3 listener￨3 ,￨3 Value￨3 arg￨3 )￨2 {￨2 }￨2 public￨2 Arguments￨2 newArgumentList￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Arguments￨2 newArgumentList￨2 (￨2 Value￨3 ...￨3 vs￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 newUnboundVariable￨2 (￨2 String￨3 name￨3 ,￨3 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 newBoundVariable￨2 (￨2 String￨3 name￨3 ,￨3 Class￨3 type￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 cast￨2 (￨2 Value￨3 val￨3 ,￨3 Class￨3 cls￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 add￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 subtract￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 multiply￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 divide￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 mod￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 abs￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 indexOf￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 concat￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 stringLength￨2 (￨2 Value￨3 str￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 trim￨2 (￨2 Value￨3 str￨3 ,￨3 Value￨3 trimChar￨3 ,￨3 Boolean￨3 where￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 sqrt￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 substring￨2 (￨2 Value￨3 v1￨3 ,￨3 Value￨3 v2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 toUpperCase￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 toLowerCase￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 avg￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 count￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 distinct￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 max￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 min￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 sum￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 any￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 all￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 size￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 index￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 type￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 mapEntry￨2 (￨2 Value￨3 key￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 mapKey￨2 (￨2 Value￨3 key￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 getKey￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 getObjectId￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 getMapValue￨2 (￨2 Value￨3 map￨3 ,￨3 Value￨3 arg￨3 )￨2 {￨2 }￨2 private￨2 Value￨2 getLiteralRawString￨2 (￨2 Value￨3 val￨3 )￨2 {￨2 if￨3 (￨3 val￨4 instanceof￨4 Lit￨4 )￨3 {￨3 Lit￨4 lit￨4 =￨4 (￨4 (￨4 Lit￨4 )￨4 (￨4 val￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 StringBuffer￨4 value￨4 =￨4 new￨4 StringBuffer￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 int￨4 pType￨4 =￨4 lit￨4 .￨4 getParseType￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 pType￨5 ==￨5 (￨5 Literal￨5 .￨5 TYPE_SQ_STRING￨5 )￨5 )￨5 ||￨5 (￨5 pType￨5 ==￨5 (￨5 Literal￨5 .￨5 TYPE_STRING￨5 )￨5 )￨5 )￨4 {￨4 value￨5 .￨5 append￨5 (￨5 "'"￨5 )￨5 .￨5 append￨5 (￨5 lit￨5 .￨5 getValue￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 .￨5 append￨5 (￨5 "'"￨5 )￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 pType￨5 ==￨5 (￨5 Literal￨5 .￨5 TYPE_BOOLEAN￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 (￨6 Boolean￨6 )￨6 (￨6 lit￨6 .￨6 getValue￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 value￨6 .￨6 append￨6 (￨6 "1"￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 value￨6 .￨6 append￨6 (￨6 "0"￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 if￨4 (￨4 pType￨5 ==￨5 (￨5 Literal￨5 .￨5 TYPE_ENUM￨5 )￨5 )￨4 {￨4 lit￨5 .￨5 setRaw￨5 (￨5 true￨5 )￨5 ;￨5 return￨5 val￨5 ;￨5 }￨4 else￨4 {￨4 value￨5 .￨5 append￨5 (￨5 lit￨5 .￨5 getValue￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 lit￨4 .￨4 setValue￨4 (￨4 new￨4 Raw￨4 (￨4 value￨4 .￨4 toString￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 return￨4 lit￨4 ;￨4 }￨3 return￨3 val￨3 ;￨3 }￨2 public￨2 Value￨2 simpleCaseExpression￨2 (￨2 Value￨3 caseOperand￨3 ,￨3 Expression￨3 [￨3 ]￨3 exp￨3 ,￨3 Value￨3 val1￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 generalCaseExpression￨2 (￨2 Expression￨3 [￨3 ]￨3 exp￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 whenCondition￨2 (￨2 Expression￨3 exp￨3 ,￨3 Value￨3 val￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 whenScalar￨2 (￨2 Value￨3 val1￨3 ,￨3 Value￨3 val2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 coalesceExpression￨2 (￨2 Value￨3 [￨3 ]￨3 vals￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 nullIfExpression￨2 (￨2 Value￨3 val1￨3 ,￨3 Value￨3 val2￨3 )￨2 {￨2 }￨2 public￨2 Value￨2 newFunction￨2 (￨2 String￨3 functionName￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 resultType￨3 ,￨3 Value￨3 ...￨3 args￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 IncomingStreamReader￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 IncomingStreamReader￨2 .￨2 class￨2 )￨2 ;￨2 protected￨2 final￨2 PendingFile￨2 localFile￨2 ;￨2 protected￨2 final￨2 PendingFile￨2 remoteFile￨2 ;￨2 protected￨2 final￨2 StreamInSession￨2 session￨2 ;￨2 private￨2 final￨2 Socket￨2 socket￨2 ;￨2 public￨2 IncomingStreamReader￨2 (￨2 StreamHeader￨2 header￨2 ,￨2 Socket￨2 socket￨2 )￨2 throws￨2 IOException￨2 {￨2 }￨2 public￨2 void￨2 read￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 SSTableReader￨2 streamIn￨2 (￨2 DataInput￨2 input￨2 ,￨2 PendingFile￨2 localFile￨2 ,￨2 PendingFile￨2 remoteFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 ColumnFamilyStore￨3 cfs￨3 =￨3 Table￨3 .￨3 open￨3 (￨3 localFile￨3 .￨3 desc￨3 .￨3 ksname￨3 )￨3 .￨3 getColumnFamilyStore￨3 (￨3 localFile￨3 .￨3 desc￨3 .￨3 cfname￨3 )￨3 ;￨3 DecoratedKey￨3 key￨3 ;￨3 SSTableWriter￨3 writer￨3 =￨3 new￨3 SSTableWriter￨3 (￨3 localFile￨3 .￨3 getFilename￨3 (￨3 )￨3 ,￨3 remoteFile￨3 .￨3 estimatedKeys￨3 )￨3 ;￨3 CompactionController￨3 controller￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 BytesReadTracker￨4 in￨4 =￨4 new￨4 BytesReadTracker￨4 (￨4 input￨4 )￨4 ;￨4 for￨4 (￨4 Pair￨5 <￨5 Long￨5 ,￨5 Long￨5 >￨5 section￨5 :￨5 localFile￨5 .￨5 sections￨5 )￨4 {￨4 long￨5 length￨5 =￨5 (￨5 section￨5 .￨5 right￨5 )￨5 -￨5 (￨5 section￨5 .￨5 left￨5 )￨5 ;￨5 long￨5 bytesRead￨5 =￨5 0￨5 ;￨5 while￨5 (￨5 bytesRead￨6 <￨6 length￨6 )￨5 {￨5 <START_BUG>￨6 in￨6 .￨6 reset￨6 (￨6 )￨6 ;￨6 <END_BUG>￨6 key￨6 =￨6 SSTableReader￨6 .￨6 decodeKey￨6 (￨6 StorageService￨6 .￨6 getPartitioner￨6 (￨6 )￨6 ,￨6 localFile￨6 .￨6 desc￨6 ,￨6 ByteBufferUtil￨6 .￨6 readWithShortLength￨6 (￨6 in￨6 )￨6 )￨6 ;￨6 long￨6 dataSize￨6 =￨6 SSTableReader￨6 .￨6 readRowSize￨6 (￨6 in￨6 ,￨6 localFile￨6 .￨6 desc￨6 )￨6 ;￨6 ColumnFamily￨6 cf￨6 =￨6 null￨6 ;￨6 if￨6 (￨6 cfs￨7 .￨7 metadata￨7 .￨7 getDefaultValidator￨7 (￨7 )￨7 .￨7 isCommutative￨7 (￨7 )￨7 )￨6 {￨6 if￨7 (￨7 controller￨8 ==￨8 null￨8 )￨7 {￨7 controller￨8 =￨8 new￨8 CompactionController￨8 (￨8 cfs￨8 ,￨8 Collections￨8 .￨8 <￨8 SSTableReader￨8 >￨8 emptyList￨8 (￨8 )￨8 ,￨8 Integer￨8 .￨8 MAX_VALUE￨8 ,￨8 true￨8 )￨8 ;￨8 }￨7 SSTableIdentityIterator￨7 iter￨7 =￨7 new￨7 SSTableIdentityIterator￨7 (￨7 cfs￨7 .￨7 metadata￨7 ,￨7 in￨7 ,￨7 key￨7 ,￨7 0￨7 ,￨7 dataSize￨7 ,￨7 true￨7 )￨7 ;￨7 AbstractCompactedRow￨7 row￨7 =￨7 controller￨7 .￨7 getCompactedRow￨7 (￨7 iter￨7 )￨7 ;￨7 writer￨7 .￨7 append￨7 (￨7 row￨7 )￨7 ;￨7 writer￨7 .￨7 updateMaxTimestamp￨7 (￨7 row￨7 .￨7 maxTimestamp￨7 (￨7 )￨7 )￨7 ;￨7 if￨7 (￨7 row￨8 instanceof￨8 PrecompactedRow￨8 )￨7 {￨7 cf￨8 =￨8 (￨8 (￨8 PrecompactedRow￨8 )￨8 (￨8 row￨8 )￨8 )￨8 .￨8 getFullColumnFamily￨8 (￨8 )￨8 ;￨8 }￨7 }￨6 else￨6 {￨6 IndexHelper￨7 .￨7 skipBloomFilter￨7 (￨7 in￨7 )￨7 ;￨7 IndexHelper￨7 .￨7 skipIndex￨7 (￨7 in￨7 )￨7 ;￨7 cf￨7 =￨7 ColumnFamily￨7 .￨7 create￨7 (￨7 cfs￨7 .￨7 metadata￨7 )￨7 ;￨7 ColumnFamily￨7 .￨7 serializer￨7 (￨7 )￨7 .￨7 deserializeFromSSTableNoColumns￨7 (￨7 cf￨7 ,￨7 in￨7 )￨7 ;￨7 ColumnFamily￨7 .￨7 serializer￨7 (￨7 )￨7 .￨7 deserializeColumns￨7 (￨7 in￨7 ,￨7 cf￨7 ,￨7 true￨7 ,￨7 true￨7 )￨7 ;￨7 writer￨7 .￨7 append￨7 (￨7 key￨7 ,￨7 cf￨7 )￨7 ;￨7 }￨6 ColumnFamily￨6 cached￨6 =￨6 cfs￨6 .￨6 getRawCachedRow￨6 (￨6 key￨6 )￨6 ;￨6 if￨6 (￨6 cached￨7 !=￨7 null￨7 )￨6 {￨6 switch￨7 (￨7 remoteFile￨7 .￨7 type￨7 )￨7 {￨7 case￨8 AES￨8 :￨8 if￨9 (￨9 dataSize￨10 >￨10 (￨10 DatabaseDescriptor￨10 .￨10 getInMemoryCompactionLimit￨10 (￨10 )￨10 )￨10 )￨9 {￨9 IncomingStreamReader￨10 .￨10 logger￨10 .￨10 warn￨10 (￨10 "Found<seq2seq4repair_space>a<seq2seq4repair_space>cached<seq2seq4repair_space>row<seq2seq4repair_space>over<seq2seq4repair_space>the<seq2seq4repair_space>in<seq2seq4repair_space>memory<seq2seq4repair_space>compaction<seq2seq4repair_space>limit<seq2seq4repair_space>during<seq2seq4repair_space>post-streaming<seq2seq4repair_space>rebuilt;<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>highly<seq2seq4repair_space>recommended<seq2seq4repair_space>to<seq2seq4repair_space>avoid<seq2seq4repair_space>huge<seq2seq4repair_space>row<seq2seq4repair_space>on<seq2seq4repair_space>column<seq2seq4repair_space>family<seq2seq4repair_space>with<seq2seq4repair_space>row<seq2seq4repair_space>cache<seq2seq4repair_space>enabled."￨10 )￨10 ;￨10 cfs￨10 .￨10 invalidateCachedRow￨10 (￨10 key￨10 )￨10 ;￨10 }￨9 else￨9 {￨9 assert￨10 cf￨10 !=￨10 null￨10 ;￨10 cfs￨10 .￨10 updateRowCache￨10 (￨10 key￨10 ,￨10 cf￨10 )￨10 ;￨10 }￨9 break￨9 ;￨9 default￨8 :￨8 cfs￨9 .￨9 invalidateCachedRow￨9 (￨9 key￨9 )￨9 ;￨9 break￨9 ;￨9 }￨7 }￨6 bytesRead￨6 +=￨6 in￨6 .￨6 getBytesRead￨6 (￨6 )￨6 ;￨6 remoteFile￨6 .￨6 progress￨6 +=￨6 in￨6 .￨6 getBytesRead￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 return￨4 writer￨4 .￨4 closeAndOpenReader￨4 (￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 writer￨4 .￨4 cleanupIfNecessary￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 retry￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Label￨1 {￨1 public￨2 CodeStream￨2 codeStream￨2 ;￨2 static￨2 final￨2 int￨2 POS_NOT_SET￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 int￨2 position￨2 =￨2 Label￨2 .￨2 POS_NOT_SET￨2 ;￨2 int￨2 [￨2 ]￨2 forwardReferences￨2 =￨2 new￨2 int￨2 [￨2 10￨2 ]￨2 ;￨2 int￨2 forwardReferenceCount￨2 =￨2 0￨2 ;￨2 private￨2 boolean￨2 isWide￨2 =￨2 false￨2 ;￨2 public￨2 Label￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Label￨2 (￨2 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 void￨2 addForwardReference￨2 (￨2 int￨3 iPos￨3 )￨2 {￨2 }￨2 void￨2 appendForwardReferencesFrom￨2 (￨2 Label￨3 otherLabel￨3 )￨2 {￨2 }￨2 void￨2 branch￨2 (￨2 )￨2 {￨2 }￨2 void￨2 branchWide￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasForwardReferences￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 inlineForwardReferencesFromLabelsTargeting￨2 (￨2 int￨3 gotoLocation￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStandardLabel￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 place￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 position￨4 )￨4 ==￨4 (￨4 Label￨4 .￨4 POS_NOT_SET￨4 )￨4 )￨3 {￨3 position￨4 =￨4 codeStream￨4 .￨4 position￨4 ;￨4 codeStream￨4 .￨4 addLabel￨4 (￨4 this￨4 )￨4 ;￨4 int￨4 oldPosition￨4 =￨4 position￨4 ;￨4 boolean￨4 optimizedBranch￨4 =￨4 false￨4 ;￨4 if￨4 (￨4 (￨5 forwardReferenceCount￨5 )￨5 !=￨5 0￨5 )￨4 {￨4 if￨5 (￨5 optimizedBranch￨6 =￨6 (￨6 (￨6 (￨6 forwardReferences￨6 [￨6 (￨6 (￨6 forwardReferenceCount￨6 )￨6 -￨6 1￨6 )￨6 ]￨6 )￨6 +￨6 2￨6 )￨6 ==￨6 (￨6 position￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 codeStream￨6 .￨6 bCodeStream￨6 [￨6 (￨6 (￨6 codeStream￨6 .￨6 classFileOffset￨6 )￨6 -￨6 3￨6 )￨6 ]￨6 )￨6 ==￨6 (￨6 OPC_goto￨6 )￨6 )￨6 )￨5 {￨5 codeStream￨6 .￨6 position￨6 =￨6 position￨6 -=￨6 3￨6 ;￨6 codeStream￨6 .￨6 classFileOffset￨6 -=￨6 3￨6 ;￨6 (￨6 forwardReferenceCount￨6 )￨6 --￨6 ;￨6 int￨6 index￨6 =￨6 (￨6 codeStream￨6 .￨6 pcToSourceMapSize￨6 )￨6 -￨6 2￨6 ;￨6 if￨6 (￨6 (￨7 codeStream￨7 .￨7 lastEntryPC￨7 )￨7 ==￨7 oldPosition￨7 )￨6 {￨6 codeStream￨7 .￨7 lastEntryPC￨7 =￨7 position￨7 ;￨7 }￨6 if￨6 (￨6 (￨7 index￨7 >=￨7 0￨7 )￨7 &&￨7 (￨7 (￨7 codeStream￨7 .￨7 pcToSourceMap￨7 [￨7 index￨7 ]￨7 )￨7 ==￨7 (￨7 position￨7 )￨7 )￨7 )￨6 {￨6 codeStream￨7 .￨7 pcToSourceMapSize￨7 -=￨7 2￨7 ;￨7 }￨6 if￨6 (￨6 codeStream￨7 .￨7 generateLocalVariableTableAttributes￨7 )￨6 {￨6 LocalVariableBinding￨7 [￨7 ]￨7 locals￨7 =￨7 codeStream￨7 .￨7 locals￨7 ;￨7 for￨7 (￨7 int￨8 i￨8 =￨8 0￨8 ,￨8 max￨8 =￨8 locals￨8 .￨8 length￨8 ;￨8 i￨8 <￨8 max￨8 ;￨8 i￨8 ++￨8 )￨7 {￨7 LocalVariableBinding￨8 local￨8 =￨8 locals￨8 [￨8 i￨8 ]￨8 ;￨8 if￨8 (￨8 (￨9 local￨9 !=￨9 null￨9 )￨9 &&￨9 (￨9 (￨9 local￨9 .￨9 initializationCount￨9 )￨9 >￨9 0￨9 )￨9 )￨8 {￨8 if￨9 (￨9 (￨10 local￨10 .￨10 initializationPCs￨10 [￨10 (￨10 (￨10 (￨10 (￨10 local￨10 .￨10 initializationCount￨10 )￨10 -￨10 1￨10 )￨10 <<￨10 1￨10 )￨10 +￨10 1￨10 )￨10 ]￨10 )￨10 ==￨10 oldPosition￨10 )￨9 {￨9 if￨10 (￨10 (￨11 local￨11 .￨11 initializationPCs￨11 [￨11 (￨11 (￨11 (￨11 local￨11 .￨11 initializationCount￨11 )￨11 -￨11 1￨11 )￨11 <<￨11 1￨11 )￨11 ]￨11 )￨11 ==￨11 oldPosition￨11 )￨10 {￨10 local￨11 .￨11 initializationPCs￨11 [￨11 (￨11 (￨11 (￨11 local￨11 .￨11 initializationCount￨11 )￨11 -￨11 1￨11 )￨11 <<￨11 1￨11 )￨11 ]￨11 =￨11 position￨11 ;￨11 }￨10 local￨10 .￨10 initializationPCs￨10 [￨10 (￨10 (￨10 (￨10 (￨10 local￨10 .￨10 initializationCount￨10 )￨10 -￨10 1￨10 )￨10 <<￨10 1￨10 )￨10 +￨10 1￨10 )￨10 ]￨10 =￨10 position￨10 ;￨10 }￨9 }￨8 }￨7 }￨6 }￨5 }￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 forwardReferenceCount￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 int￨5 offset￨5 =￨5 (￨5 (￨5 position￨5 )￨5 -￨5 (￨5 forwardReferences￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 +￨5 1￨5 ;￨5 if￨5 (￨5 (￨6 offset￨6 >￨6 32767￨6 )￨6 &&￨6 (￨6 !￨6 (￨6 this￨6 .￨6 codeStream￨6 .￨6 wideMode￨6 )￨6 )￨6 )￨5 {￨5 <START_BUG>￨6 throw￨6 new￨6 AbortMethod￨6 (￨6 null￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 if￨5 (￨5 this￨6 .￨6 codeStream￨6 .￨6 wideMode￨6 )￨5 {￨5 if￨6 (￨6 this￨7 .￨7 isWide￨7 )￨6 {￨6 codeStream￨7 .￨7 writeSignedWord￨7 (￨7 forwardReferences￨7 [￨7 i￨7 ]￨7 ,￨7 offset￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 codeStream￨7 .￨7 writeSignedShort￨7 (￨7 forwardReferences￨7 [￨7 i￨7 ]￨7 ,￨7 (￨7 (￨7 short￨7 )￨7 (￨7 offset￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 codeStream￨6 .￨6 writeSignedShort￨6 (￨6 forwardReferences￨6 [￨6 i￨6 ]￨6 ,￨6 (￨6 (￨6 short￨6 )￨6 (￨6 offset￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 optimizedBranch￨5 )￨4 {￨4 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 codeStream￨6 .￨6 countLabels￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 Label￨6 label￨6 =￨6 codeStream￨6 .￨6 labels￨6 [￨6 i￨6 ]￨6 ;￨6 if￨6 (￨6 oldPosition￨7 ==￨7 (￨7 label￨7 .￨7 position￨7 )￨7 )￨6 {￨6 label￨7 .￨7 position￨7 =￨7 position￨7 ;￨7 if￨7 (￨7 label￨8 instanceof￨8 CaseLabel￨8 )￨7 {￨7 int￨8 offset￨8 =￨8 (￨8 position￨8 )￨8 -￨8 (￨8 (￨8 (￨8 CaseLabel￨8 )￨8 (￨8 label￨8 )￨8 )￨8 .￨8 instructionPosition￨8 )￨8 ;￨8 for￨8 (￨8 int￨9 j￨9 =￨9 0￨9 ;￨9 j￨9 <￨9 (￨9 label￨9 .￨9 forwardReferenceCount￨9 )￨9 ;￨9 j￨9 ++￨9 )￨8 {￨8 int￨9 forwardPosition￨9 =￨9 label￨9 .￨9 forwardReferences￨9 [￨9 j￨9 ]￨9 ;￨9 codeStream￨9 .￨9 writeSignedWord￨9 (￨9 forwardPosition￨9 ,￨9 offset￨9 )￨9 ;￨9 }￨8 }￨7 else￨7 {￨7 for￨8 (￨8 int￨9 j￨9 =￨9 0￨9 ;￨9 j￨9 <￨9 (￨9 label￨9 .￨9 forwardReferenceCount￨9 )￨9 ;￨9 j￨9 ++￨9 )￨8 {￨8 int￨9 forwardPosition￨9 =￨9 label￨9 .￨9 forwardReferences￨9 [￨9 j￨9 ]￨9 ;￨9 int￨9 offset￨9 =￨9 (￨9 (￨9 position￨9 )￨9 -￨9 forwardPosition￨9 )￨9 +￨9 1￨9 ;￨9 if￨9 (￨9 (￨10 offset￨10 >￨10 32767￨10 )￨10 &&￨10 (￨10 !￨10 (￨10 this￨10 .￨10 codeStream￨10 .￨10 wideMode￨10 )￨10 )￨10 )￨9 {￨9 throw￨10 new￨10 AbortMethod￨10 (￨10 CodeStream￨10 .￨10 RESTART_IN_WIDE_MODE￨10 )￨10 ;￨10 }￨9 if￨9 (￨9 this￨10 .￨10 codeStream￨10 .￨10 wideMode￨10 )￨9 {￨9 if￨10 (￨10 this￨11 .￨11 isWide￨11 )￨10 {￨10 codeStream￨11 .￨11 writeSignedWord￨11 (￨11 forwardPosition￨11 ,￨11 offset￨11 )￨11 ;￨11 }￨10 else￨10 {￨10 codeStream￨11 .￨11 writeSignedShort￨11 (￨11 forwardPosition￨11 ,￨11 (￨11 (￨11 short￨11 )￨11 (￨11 offset￨11 )￨11 )￨11 )￨11 ;￨11 }￨10 }￨9 else￨9 {￨9 codeStream￨10 .￨10 writeSignedShort￨10 (￨10 forwardPosition￨10 ,￨10 (￨10 (￨10 short￨10 )￨10 (￨10 offset￨10 )￨10 )￨10 )￨10 ;￨10 }￨9 }￨8 }￨7 }￨6 }￨5 }￨4 }￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resetStateForCodeGeneration￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Assert￨1 {￨1 protected￨2 Assert￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertTrue￨2 (￨2 String￨3 message￨3 ,￨3 boolean￨3 condition￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertTrue￨2 (￨2 boolean￨3 condition￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertFalse￨2 (￨2 String￨3 message￨3 ,￨3 boolean￨3 condition￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertFalse￨2 (￨2 boolean￨3 condition￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 fail￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 fail￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 String￨3 expected￨3 ,￨3 String￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 expected￨3 ,￨3 String￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 double￨3 expected￨3 ,￨3 double￨3 actual￨3 ,￨3 double￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 float￨3 expected￨3 ,￨3 float￨3 actual￨3 ,￨3 float￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 float￨3 expected￨3 ,￨3 float￨3 actual￨3 ,￨3 float￨3 delta￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 long￨3 expected￨3 ,￨3 long￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 long￨3 expected￨3 ,￨3 long￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 boolean￨3 expected￨3 ,￨3 boolean￨3 actual￨3 )￨2 {￨2 <START_BUG>￨3 Assert￨3 .￨3 assertEquals￨3 (￨3 message￨3 ,￨3 new￨3 Boolean￨3 (￨3 expected￨3 )￨3 ,￨3 new￨3 Boolean￨3 (￨3 actual￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 boolean￨3 expected￨3 ,￨3 boolean￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 byte￨3 expected￨3 ,￨3 byte￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 byte￨3 expected￨3 ,￨3 byte￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 char￨3 expected￨3 ,￨3 char￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 char￨3 expected￨3 ,￨3 char￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 short￨3 expected￨3 ,￨3 short￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 short￨3 expected￨3 ,￨3 short￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 String￨3 message￨3 ,￨3 int￨3 expected￨3 ,￨3 int￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertEquals￨2 (￨2 int￨3 expected￨3 ,￨3 int￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNotNull￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNotNull￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNull￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNull￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertSame￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertSame￨2 (￨2 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNotSame￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 assertNotSame￨2 (￨2 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 failSame￨2 (￨2 String￨3 message￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 failNotSame￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 failNotEquals￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 static￨2 String￨2 format￨2 (￨2 String￨3 message￨3 ,￨3 Object￨3 expected￨3 ,￨3 Object￨3 actual￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 InitBinderDataBinderFactory￨1 extends￨1 DefaultDataBinderFactory￨1 {￨1 private￨2 final￨2 List￨2 <￨2 InvocableHandlerMethod￨2 >￨2 binderMethods￨2 ;￨2 public￨2 InitBinderDataBinderFactory￨2 (￨2 List￨3 <￨3 InvocableHandlerMethod￨3 >￨3 binderMethods￨3 ,￨3 WebBindingInitializer￨3 initializer￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 initBinder￨2 (￨2 WebDataBinder￨2 binder￨2 ,￨2 NativeWebRequest￨2 request￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 for￨3 (￨3 InvocableHandlerMethod￨4 binderMethod￨4 :￨4 this￨4 .￨4 binderMethods￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 isBinderMethodApplicable￨5 (￨5 binderMethod￨5 ,￨5 binder￨5 )￨5 )￨5 )￨4 {￨4 continue￨5 ;￨5 }￨4 Object￨4 returnValue￨4 =￨4 binderMethod￨4 .￨4 invokeForRequest￨4 (￨4 request￨4 ,￨4 null￨4 ,￨4 binder￨4 )￨4 ;￨4 if￨4 (￨4 returnValue￨5 !=￨5 null￨5 )￨4 {￨4 <START_BUG>￨5 throw￨5 new￨5 IllegalStateException￨5 (￨5 (￨5 "This<seq2seq4repair_space>@InitBinder<seq2seq4repair_space>method<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>return<seq2seq4repair_space>void:<seq2seq4repair_space>"￨5 +￨5 binderMethod￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 }￨2 protected￨2 boolean￨2 isBinderMethodApplicable￨2 (￨2 HandlerMethod￨3 binderMethod￨3 ,￨3 WebDataBinder￨3 binder￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestSynchronizedCollection￨1 <￨1 E￨1 >￨1 extends￨1 AbstractTestCollection￨1 <￨1 E￨1 >￨1 {￨1 public￨2 TestSynchronizedCollection￨2 (￨2 String￨3 testName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 makeObject￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 SynchronizedCollection￨3 .￨3 decorate￨3 (￨3 new￨3 ArrayList￨3 <￨3 E￨3 >￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 makeConfirmedCollection￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Collection￨2 <￨2 E￨2 >￨2 makeConfirmedFullCollection￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getCompatibilityVersion￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Recorder￨1 <￨1 T￨1 >￨1 extends￨1 HiddenField￨1 <￨1 Object￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 [￨2 ]￨2 EMPTY_IDS￨2 =￨2 new￨2 String￨2 [￨2 0￨2 ]￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 ids￨2 ;￨2 private￨2 final￨2 Palette￨2 <￨2 T￨2 >￨2 palette￨2 ;￨2 private￨2 boolean￨2 attached￨2 =￨2 false￨2 ;￨2 public￨2 Palette￨2 <￨2 T￨2 >￨2 getPalette￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Recorder￨2 (￨2 String￨3 id￨3 ,￨3 Palette￨3 <￨3 T￨3 >￨3 palette￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onBeforeRender￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initIds￨2 (￨2 )￨2 {￨2 IChoiceRenderer￨3 <￨3 T￨3 >￨3 renderer￨3 =￨3 getPalette￨3 (￨3 )￨3 .￨3 getChoiceRenderer￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 StringBuffer￨3 modelStringBuffer￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 Collection￨3 <￨3 T￨3 >￨3 modelCollection￨3 =￨3 getPalette￨3 (￨3 )￨3 .￨3 getModelCollection￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 modelCollection￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 WicketRuntimeException￨4 (￨4 (￨4 "Expected<seq2seq4repair_space>getPalette().getModelCollection()<seq2seq4repair_space>to<seq2seq4repair_space>return<seq2seq4repair_space>a<seq2seq4repair_space>non-null<seq2seq4repair_space>value."￨4 +￨4 "<seq2seq4repair_space>Please<seq2seq4repair_space>make<seq2seq4repair_space>sure<seq2seq4repair_space>you<seq2seq4repair_space>have<seq2seq4repair_space>model<seq2seq4repair_space>object<seq2seq4repair_space>assigned<seq2seq4repair_space>to<seq2seq4repair_space>the<seq2seq4repair_space>palette"￨4 )￨4 )￨4 ;￨4 }￨3 Iterator￨3 <￨3 T￨3 >￨3 selection￨3 =￨3 modelCollection￨3 .￨3 iterator￨3 (￨3 )￨3 ;￨3 int￨3 i￨3 =￨3 0￨3 ;￨3 while￨3 (￨3 selection￨4 .￨4 hasNext￨4 (￨4 )￨4 )￨3 {￨3 modelStringBuffer￨4 .￨4 append￨4 (￨4 renderer￨4 .￨4 getIdValue￨4 (￨4 selection￨4 .￨4 next￨4 (￨4 )￨4 ,￨4 (￨4 i￨4 ++￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 selection￨5 .￨5 hasNext￨5 (￨5 )￨5 )￨4 {￨4 modelStringBuffer￨5 .￨5 append￨5 (￨5 ","￨5 )￨5 ;￨5 }￨4 }￨3 String￨3 modelString￨3 =￨3 modelStringBuffer￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 setDefaultModel￨3 (￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 wicket￨3 .￨3 model￨3 .￨3 Model￨3 <￨3 String￨3 >￨3 (￨3 modelString￨3 )￨3 )￨3 ;￨3 updateIds￨3 (￨3 modelString￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 onValid￨2 (￨2 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 Iterator￨2 <￨2 T￨2 >￨2 getSelectedChoices￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Iterator￨2 <￨2 T￨2 >￨2 getUnselectedChoices￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onInvalid￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateIds￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 updateIds￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BinaryMemtable￨1 implements￨1 IFlushable￨1 <￨1 DecoratedKey￨1 >￨1 {￨1 private￨2 static￨2 Logger￨2 logger_￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 BinaryMemtable￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 int￨2 threshold_￨2 =￨2 (￨2 (￨2 DatabaseDescriptor￨2 .￨2 getBMTThreshold￨2 (￨2 )￨2 )￨2 *￨2 1024￨2 )￨2 *￨2 1024￨2 ;￨2 private￨2 AtomicInteger￨2 currentSize_￨2 =￨2 new￨2 AtomicInteger￨2 (￨2 0￨2 )￨2 ;￨2 private￨2 String￨2 table_￨2 ;￨2 private￨2 String￨2 cfName_￨2 ;￨2 private￨2 boolean￨2 isFrozen_￨2 =￨2 false￨2 ;￨2 private￨2 Map￨2 <￨2 DecoratedKey￨2 ,￨2 byte￨2 [￨2 ]￨2 >￨2 columnFamilies_￨2 =￨2 new￨2 org￨2 .￨2 cliffc￨2 .￨2 high_scale_lib￨2 .￨2 NonBlockingHashMap￨2 <￨2 DecoratedKey￨2 ,￨2 byte￨2 [￨2 ]￨2 >￨2 (￨2 )￨2 ;￨2 Lock￨2 lock_￨2 =￨2 new￨2 ReentrantLock￨2 (￨2 )￨2 ;￨2 Condition￨2 condition_￨2 ;￨2 private￨2 final￨2 IPartitioner￨2 partitioner_￨2 =￨2 StorageService￨2 .￨2 getPartitioner￨2 (￨2 )￨2 ;￨2 BinaryMemtable￨2 (￨2 String￨2 table￨2 ,￨2 String￨2 cfName￨2 )￨2 throws￨2 IOException￨2 {￨2 }￨2 public￨2 int￨2 getMemtableThreshold￨2 (￨2 )￨2 {￨2 }￨2 void￨2 resolveSize￨2 (￨2 int￨3 oldSize￨3 ,￨3 int￨3 newSize￨3 )￨2 {￨2 }￨2 boolean￨2 isThresholdViolated￨2 (￨2 )￨2 {￨2 }￨2 String￨2 getColumnFamily￨2 (￨2 )￨2 {￨2 }￨2 void￨2 put￨2 (￨2 String￨2 key￨2 ,￨2 byte￨2 [￨2 ]￨2 buffer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 resolve￨2 (￨2 String￨3 key￨3 ,￨3 byte￨3 [￨3 ]￨3 buffer￨3 )￨2 {￨2 }￨2 public￨2 List￨2 <￨2 DecoratedKey￨2 >￨2 getSortedKeys￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SSTableReader￨2 writeSortedContents￨2 (￨2 List￨2 <￨2 DecoratedKey￨2 >￨2 sortedKeys￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 BinaryMemtable￨3 .￨3 logger_￨3 .￨3 info￨3 (￨3 (￨3 "Writing<seq2seq4repair_space>"￨3 +￨3 (￨3 this￨3 )￨3 )￨3 )￨3 ;￨3 ColumnFamilyStore￨3 cfStore￨3 =￨3 Table￨3 .￨3 open￨3 (￨3 table_￨3 )￨3 .￨3 getColumnFamilyStore￨3 (￨3 cfName_￨3 )￨3 ;￨3 String￨3 path￨3 =￨3 cfStore￨3 .￨3 getTempSSTablePath￨3 (￨3 )￨3 ;￨3 SSTableWriter￨3 writer￨3 =￨3 new￨3 SSTableWriter￨3 (￨3 path￨3 ,￨3 sortedKeys￨3 .￨3 size￨3 (￨3 )￨3 ,￨3 StorageService￨3 .￨3 getPartitioner￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 DecoratedKey￨4 key￨4 :￨4 sortedKeys￨4 )￨3 {￨3 byte￨4 [￨4 ]￨4 bytes￨4 =￨4 columnFamilies_￨4 .￨4 get￨4 (￨4 key￨4 )￨4 ;￨4 assert￨4 (￨4 bytes￨4 .￨4 length￨4 )￨4 >￨4 0￨4 ;￨4 writer￨4 .￨4 append￨4 (￨4 key￨4 ,￨4 bytes￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 SSTableReader￨3 sstable￨3 =￨3 writer￨3 .￨3 closeAndOpenReader￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 BinaryMemtable￨3 .￨3 logger_￨3 .￨3 info￨3 (￨3 (￨3 "Completed<seq2seq4repair_space>flushing<seq2seq4repair_space>"￨3 +￨3 (￨3 writer￨3 .￨3 getFilename￨3 (￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 sstable￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 HtmlHandler￨1 extends￨1 AbstractMarkupFilter￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 HtmlHandler￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 ArrayListStack￨2 <￨2 ComponentTag￨2 >￨2 stack￨2 =￨2 new￨2 ArrayListStack￨2 <￨2 ComponentTag￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 Boolean￨2 >￨2 doesNotRequireCloseTag￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 Boolean￨2 >￨2 (￨2 )￨2 ;￨2 public￨2 HtmlHandler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MarkupElement￨2 nextTag￨2 (￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 final￨3 ComponentTag￨3 tag￨3 =￨3 (￨3 (￨3 ComponentTag￨3 )￨3 (￨3 getParent￨3 (￨3 )￨3 .￨3 nextTag￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 tag￨4 ==￨4 null￨4 )￨3 {￨3 while￨4 (￨4 (￨5 stack￨5 .￨5 size￨5 (￨5 )￨5 )￨5 >￨5 0￨5 )￨4 {￨4 final￨5 ComponentTag￨5 top￨5 =￨5 stack￨5 .￨5 peek￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 !￨6 (￨6 HtmlHandler￨6 .￨6 requiresCloseTag￨6 (￨6 top￨6 .￨6 getName￨6 (￨6 )￨6 )￨6 )￨6 )￨5 {￨5 stack￨6 .￨6 pop￨6 (￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 throw￨6 new￨6 org￨6 .￨6 apache￨6 .￨6 wicket￨6 .￨6 markup￨6 .￨6 WicketParseException￨6 (￨6 "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>close<seq2seq4repair_space>tag:"￨6 ,￨6 top￨6 )￨6 ;￨6 }￨5 }￨4 return￨4 tag￨4 ;￨4 }￨3 if￨3 (￨3 HtmlHandler￨4 .￨4 log￨4 .￨4 isDebugEnabled￨4 (￨4 )￨4 )￨3 {￨3 HtmlHandler￨4 .￨4 log￨4 .￨4 debug￨4 (￨4 (￨4 (￨4 (￨4 "tag:<seq2seq4repair_space>"￨4 +￨4 (￨4 tag￨4 .￨4 toUserDebugString￨4 (￨4 )￨4 )￨4 )￨4 +￨4 ",<seq2seq4repair_space>stack:<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 stack￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 tag￨4 .￨4 isOpen￨4 (￨4 )￨4 )￨3 {￨3 stack￨4 .￨4 push￨4 (￨4 tag￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 tag￨4 .￨4 isClose￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 stack￨5 .￨5 size￨5 (￨5 )￨5 )￨5 >￨5 0￨5 )￨4 {￨4 ComponentTag￨5 top￨5 =￨5 stack￨5 .￨5 pop￨5 (￨5 )￨5 ;￨5 boolean￨5 mismatch￨5 =￨5 !￨5 (￨5 top￨5 .￨5 hasEqualTagName￨5 (￨5 tag￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 mismatch￨6 )￨5 {￨5 top￨6 .￨6 setHasNoCloseTag￨6 (￨6 true￨6 )￨6 ;￨6 while￨6 (￨6 mismatch￨7 &&￨7 (￨7 !￨7 (￨7 HtmlHandler￨7 .￨7 requiresCloseTag￨7 (￨7 top￨7 .￨7 getName￨7 (￨7 )￨7 )￨7 )￨7 )￨7 )￨6 {￨6 top￨7 .￨7 setHasNoCloseTag￨7 (￨7 true￨7 )￨7 ;￨7 if￨7 (￨7 stack￨8 .￨8 isEmpty￨8 (￨8 )￨8 )￨7 {￨7 break￨8 ;￨8 }￨7 top￨7 =￨7 stack￨7 .￨7 pop￨7 (￨7 )￨7 ;￨7 mismatch￨7 =￨7 !￨7 (￨7 top￨7 .￨7 hasEqualTagName￨7 (￨7 tag￨7 )￨7 )￨7 ;￨7 }￨6 if￨6 (￨6 mismatch￨7 )￨6 {￨6 throw￨7 new￨7 ParseException￨7 (￨7 (￨7 (￨7 (￨7 "Tag<seq2seq4repair_space>"￨7 +￨7 (￨7 top￨7 .￨7 toUserDebugString￨7 (￨7 )￨7 )￨7 )￨7 +￨7 "<seq2seq4repair_space>has<seq2seq4repair_space>a<seq2seq4repair_space>mismatched<seq2seq4repair_space>close<seq2seq4repair_space>tag<seq2seq4repair_space>at<seq2seq4repair_space>"￨7 )￨7 +￨7 (￨7 tag￨7 .￨7 toUserDebugString￨7 (￨7 )￨7 )￨7 )￨7 ,￨7 top￨7 .￨7 getPos￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 tag￨5 .￨5 setOpenTag￨5 (￨5 top￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 throw￨5 new￨5 org￨5 .￨5 apache￨5 .￨5 wicket￨5 .￨5 markup￨5 .￨5 WicketParseException￨5 (￨5 "Tag<seq2seq4repair_space>does<seq2seq4repair_space>not<seq2seq4repair_space>have<seq2seq4repair_space>a<seq2seq4repair_space>matching<seq2seq4repair_space>open<seq2seq4repair_space>tag:"￨5 ,￨5 tag￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 tag￨4 .￨4 isOpenClose￨4 (￨4 )￨4 )￨3 {￨3 tag￨4 .￨4 setOpenTag￨4 (￨4 tag￨4 )￨4 ;￨4 }￨3 return￨3 tag￨3 ;￨3 }￨2 public￨2 static￨2 boolean￨2 requiresCloseTag￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestIndexReaderReopen￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 File￨2 indexDir￨2 ;￨2 public￨2 void￨2 testReopen￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testParallelReaderReopen￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCommitReopenFS￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCommitRecreateFS￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCommitReopenRAM￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testCommitRecreateRAM￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestReopenWithCommit￨2 (￨2 Random￨2 random￨2 ,￨2 Directory￨2 dir￨2 ,￨2 boolean￨2 withReopen￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMultiReaderReopen￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testMixedReaders￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 performDefaultTests￨2 (￨2 TestIndexReaderReopen￨2 .￨2 TestReopen￨2 test￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReferenceCounting￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReferenceCountingMultiReader￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReferenceCountingParallelReader￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testNormsRefCounting￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 performTestsWithExceptionInReopen￨2 (￨2 TestIndexReaderReopen￨2 .￨2 TestReopen￨2 test￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testThreadSafety￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 ReaderCouple￨2 {￨2 ReaderCouple￨3 (￨3 IndexReader￨4 r1￨4 ,￨4 IndexReader￨4 r2￨4 )￨3 {￨3 }￨3 IndexReader￨3 newReader￨3 ;￨3 IndexReader￨3 refreshedReader￨3 ;￨3 }￨2 private￨2 abstract￨2 static￨2 class￨2 ReaderThreadTask￨2 {￨2 protected￨3 volatile￨3 boolean￨3 stopped￨3 ;￨3 public￨3 void￨3 stop￨3 (￨3 )￨3 {￨3 }￨3 public￨3 abstract￨3 void￨3 run￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 ReaderThread￨2 extends￨2 Thread￨2 {￨2 private￨3 TestIndexReaderReopen￨3 .￨3 ReaderThreadTask￨3 task￨3 ;￨3 private￨3 Throwable￨3 error￨3 ;￨3 ReaderThread￨3 (￨3 TestIndexReaderReopen￨4 .￨4 ReaderThreadTask￨4 task￨4 )￨3 {￨3 }￨3 public￨3 void￨3 stopThread￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 run￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 Object￨2 createReaderMutex￨2 =￨2 new￨2 Object￨2 (￨2 )￨2 ;￨2 private￨2 TestIndexReaderReopen￨2 .￨2 ReaderCouple￨2 refreshReader￨2 (￨2 IndexReader￨2 reader￨2 ,￨2 boolean￨2 hasChanges￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 TestIndexReaderReopen￨2 .￨2 ReaderCouple￨2 refreshReader￨2 (￨2 IndexReader￨2 reader￨2 ,￨2 TestIndexReaderReopen￨2 .￨2 TestReopen￨2 test￨2 ,￨2 int￨2 modify￨2 ,￨2 boolean￨2 hasChanges￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 createIndex￨2 (￨2 Random￨2 random￨2 ,￨2 Directory￨2 dir￨2 ,￨2 boolean￨2 multiSegment￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Document￨2 createDocument￨2 (￨2 int￨3 n￨3 ,￨3 int￨3 numFields￨3 )￨2 {￨2 }￨2 static￨2 void￨2 modifyIndex￨2 (￨2 int￨2 i￨2 ,￨2 Directory￨2 dir￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 assertReaderClosed￨2 (￨2 IndexReader￨3 reader￨3 ,￨3 boolean￨3 checkSubReaders￨3 ,￨3 boolean￨3 checkNormsClosed￨3 )￨2 {￨2 }￨2 private￨2 void￨2 assertRefCountEquals￨2 (￨2 int￨3 refCount￨3 ,￨3 IndexReader￨3 reader￨3 )￨2 {￨2 }￨2 private￨2 abstract￨2 static￨2 class￨2 TestReopen￨2 {￨2 protected￨3 abstract￨3 IndexReader￨3 openReader￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 abstract￨3 void￨3 modifyIndex￨3 (￨3 int￨3 i￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 indexDir￨3 =￨3 new￨3 File￨3 (￨3 TEMP_DIR￨3 ,￨3 "IndexReaderReopen"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testCloseOrig￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testDeletes￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testDeletes2￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 KeepAllCommits￨2 implements￨2 IndexDeletionPolicy￨2 {￨2 public￨3 void￨3 onInit￨3 (￨3 List￨4 <￨4 ?￨4 extends￨4 IndexCommit￨4 >￨4 commits￨4 )￨3 {￨3 }￨3 public￨3 void￨3 onCommit￨3 (￨3 List￨4 <￨4 ?￨4 extends￨4 IndexCommit￨4 >￨4 commits￨4 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 testReopenOnCommit￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 DiscoveryTest￨1 extends￨1 AbstractDiscoveryTest￨1 {￨1 protected￨2 IServiceInfo￨2 serviceInfo￨2 ;￨2 protected￨2 IServiceInfo￨2 serviceInfo2￨2 ;￨2 protected￨2 IServiceInfo￨2 serviceInfo3￨2 ;￨2 protected￨2 String￨2 containerUnderTest￨2 ;￨2 protected￨2 long￨2 waitTimeForProvider￨2 =￨2 1000￨2 ;￨2 protected￨2 Comparator￨2 comparator￨2 =￨2 new￨2 ServiceInfoComparator￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 protocol￨2 =￨2 PROTOCOL￨2 ;￨2 private￨2 String￨2 scope￨2 =￨2 SCOPE￨2 ;￨2 private￨2 String￨2 namingAuthority￨2 =￨2 NAMINGAUTHORITY￨2 ;￨2 protected￨2 IContainer￨2 container￨2 =￨2 null￨2 ;￨2 protected￨2 IDiscoveryContainerAdapter￨2 discoveryContainer￨2 =￨2 null￨2 ;￨2 public￨2 DiscoveryTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 IDiscoveryContainerAdapter￨2 getAdapter￨2 (￨2 Class￨3 clazz￨3 )￨2 {￨2 }￨2 protected￨2 IServiceID￨2 createServiceID￨2 (￨2 String￨2 serviceType￨2 ,￨2 String￨2 serviceName￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 registerService￨2 (￨2 IServiceInfo￨2 serviceInfo￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 unregisterService￨2 (￨2 IServiceInfo￨2 serviceInfo￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setWaitTimeForProvider￨2 (￨2 long￨3 aWaitTimeForProvider￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setComparator￨2 (￨2 Comparator￨3 comparator￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setProtocol￨2 (￨2 String￨3 protocol￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setScope￨2 (￨2 String￨3 scope￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 setNamingAuthority￨2 (￨2 String￨3 namingAuthority￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getServiceType￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 containerUnderTest￨3 )￨3 ;￨3 assertTrue￨3 (￨3 containerUnderTest￨3 .￨3 startsWith￨3 (￨3 "ecf.discovery."￨3 )￨3 )￨3 ;￨3 container￨3 =￨3 ContainerFactory￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 createContainer￨3 (￨3 containerUnderTest￨3 )￨3 ;￨3 discoveryContainer￨3 =￨3 getAdapter￨3 (￨3 IDiscoveryContainerAdapter￨3 .￨3 class￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 container￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 discoveryContainer￨3 )￨3 ;￨3 final￨3 Properties￨3 props￨3 =￨3 new￨3 Properties￨3 (￨3 )￨3 ;￨3 final￨3 URI￨3 uri￨3 =￨3 createDefaultURI￨3 (￨3 )￨3 ;￨3 IServiceID￨3 serviceID￨3 =￨3 (￨3 (￨3 IServiceID￨3 )￨3 (￨3 IDFactory￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 createID￨3 (￨3 discoveryContainer￨3 .￨3 getServicesNamespace￨3 (￨3 )￨3 ,￨3 new￨3 Object￨3 [￨3 ]￨3 {￨3 }￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceID￨3 )￨3 ;￨3 final￨3 ServiceProperties￨3 serviceProperties￨3 =￨3 new￨3 ServiceProperties￨3 (￨3 props￨3 )￨3 ;￨3 serviceProperties￨3 .￨3 setPropertyString￨3 (￨3 (￨3 (￨3 DiscoveryTest￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 +￨3 "servicePropertiesString"￨3 )￨3 ,￨3 "serviceProperties"￨3 )￨3 ;￨3 serviceProperties￨3 .￨3 setProperty￨3 (￨3 (￨3 (￨3 DiscoveryTest￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 +￨3 "servicePropertiesIntegerMax"￨3 )￨3 ,￨3 new￨3 Integer￨3 (￨3 Integer￨3 .￨3 MIN_VALUE￨3 )￨3 )￨3 ;￨3 serviceProperties￨3 .￨3 setProperty￨3 (￨3 (￨3 (￨3 DiscoveryTest￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 +￨3 "servicePropertiesIntegerMin"￨3 )￨3 ,￨3 new￨3 Integer￨3 (￨3 Integer￨3 .￨3 MAX_VALUE￨3 )￨3 )￨3 ;￨3 serviceProperties￨3 .￨3 setProperty￨3 (￨3 (￨3 (￨3 DiscoveryTest￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 +￨3 "servicePropertiesBoolean"￨3 )￨3 ,￨3 new￨3 Boolean￨3 (￨3 false￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 serviceProperties￨3 .￨3 setPropertyBytes￨3 (￨3 (￨3 (￨3 DiscoveryTest￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 +￨3 "servicePropertiesByte"￨3 )￨3 ,￨3 new￨3 byte￨3 [￨3 ]￨3 {￨3 }￨3 )￨3 ;￨3 <END_BUG>￨3 serviceInfo￨3 =￨3 new￨3 org￨3 .￨3 eclipse￨3 .￨3 ecf￨3 .￨3 discovery￨3 .￨3 ServiceInfo￨3 (￨3 uri￨3 ,￨3 serviceID￨3 ,￨3 1￨3 ,￨3 1￨3 ,￨3 serviceProperties￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceInfo￨3 )￨3 ;￨3 IServiceID￨3 serviceID2￨3 =￨3 (￨3 (￨3 IServiceID￨3 )￨3 (￨3 IDFactory￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 createID￨3 (￨3 discoveryContainer￨3 .￨3 getServicesNamespace￨3 (￨3 )￨3 ,￨3 new￨3 Object￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceID￨3 )￨3 ;￨3 final￨3 ServiceProperties￨3 serviceProperties2￨3 =￨3 new￨3 ServiceProperties￨3 (￨3 props￨3 )￨3 ;￨3 serviceProperties2￨3 .￨3 setPropertyString￨3 (￨3 "serviceProperties2"￨3 ,￨3 "serviceProperties2"￨3 )￨3 ;￨3 serviceInfo2￨3 =￨3 new￨3 org￨3 .￨3 eclipse￨3 .￨3 ecf￨3 .￨3 discovery￨3 .￨3 ServiceInfo￨3 (￨3 uri￨3 ,￨3 serviceID2￨3 ,￨3 2￨3 ,￨3 2￨3 ,￨3 serviceProperties2￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceInfo2￨3 )￨3 ;￨3 IServiceID￨3 serviceID3￨3 =￨3 (￨3 (￨3 IServiceID￨3 )￨3 (￨3 IDFactory￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 createID￨3 (￨3 discoveryContainer￨3 .￨3 getServicesNamespace￨3 (￨3 )￨3 ,￨3 new￨3 Object￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceID￨3 )￨3 ;￨3 final￨3 ServiceProperties￨3 serviceProperties3￨3 =￨3 new￨3 ServiceProperties￨3 (￨3 props￨3 )￨3 ;￨3 serviceProperties3￨3 .￨3 setPropertyString￨3 (￨3 "serviceProperties3"￨3 ,￨3 "serviceProperties3"￨3 )￨3 ;￨3 serviceInfo3￨3 =￨3 new￨3 org￨3 .￨3 eclipse￨3 .￨3 ecf￨3 .￨3 discovery￨3 .￨3 ServiceInfo￨3 (￨3 uri￨3 ,￨3 serviceID3￨3 ,￨3 3￨3 ,￨3 3￨3 ,￨3 serviceProperties3￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 serviceInfo3￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 registerService￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 unregisterService￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testConnect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testConnectTwoTimes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testDisconnect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReconnect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServiceInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServiceInfoWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServiceTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServices￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServicesIServiceTypeID￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServicesIServiceTypeIDWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegisterService￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRegisterServiceWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnregisterService￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnregisterServiceWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testDispose￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 addServiceListener￨2 (￨2 TestListener￨3 serviceListener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceListenerIServiceListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceListenerIServiceListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceListenerIServiceTypeIDIServiceListener￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 addListenerRegisterAndWait￨2 (￨2 TestListener￨3 testServiceListener￨3 ,￨3 IServiceInfo￨3 aServiceInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceListenerIServiceTypeIDIServiceListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceTypeListener￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IServiceTypeListener￨2 createServiceTypeListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testAddServiceTypeListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetConnectNamespace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetID￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testGetServicesNamespace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceListenerIServiceListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceListenerIServiceListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceListenerIServiceTypeIDIServiceListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceListenerIServiceTypeIDIServiceListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceTypeListener￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRemoveServiceTypeListenerWithNull￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Resources￨1 extends￨1 DataType￨1 implements￨1 ResourceCollection￨1 {￨1 public￨2 static￨2 final￨2 ResourceCollection￨2 NONE￨2 =￨2 new￨2 ResourceCollection￨2 (￨2 )￨2 {￨2 public￨3 boolean￨3 isFilesystemOnly￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Iterator￨3 iterator￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 size￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 public￨2 static￨2 final￨2 Iterator￨2 EMPTY_ITERATOR￨2 =￨2 new￨2 Iterator￨2 (￨2 )￨2 {￨2 public￨3 Object￨3 next￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 hasNext￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 remove￨3 (￨3 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 class￨2 MyCollection￨2 extends￨2 AbstractCollection￨2 {￨2 private￨3 int￨3 size￨3 ;￨3 MyCollection￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 size￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Iterator￨3 iterator￨3 (￨3 )￨3 {￨3 }￨3 private￨3 class￨3 MyIterator￨3 implements￨3 Iterator￨3 {￨3 private￨4 Iterator￨4 rci￨4 =￨4 getNested￨4 (￨4 )￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 private￨4 Iterator￨4 ri￨4 =￨4 null￨4 ;￨4 public￨4 boolean￨4 hasNext￨4 (￨4 )￨4 {￨4 }￨4 public￨4 Object￨4 next￨4 (￨4 )￨4 {￨4 }￨4 public￨4 void￨4 remove￨4 (￨4 )￨4 {￨4 }￨4 }￨3 }￨2 private￨2 Vector￨2 rc￨2 ;￨2 private￨2 Collection￨2 coll￨2 ;￨2 public￨2 synchronized￨2 void￨2 add￨2 (￨2 ResourceCollection￨3 c￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 Iterator￨2 iterator￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isFilesystemOnly￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 dieOnCircularReference￨2 (￨2 Stack￨2 stk￨2 ,￨2 Project￨2 p￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 isChecked￨4 (￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 isReference￨4 (￨4 )￨4 )￨3 {￨3 super￨4 .￨4 dieOnCircularReference￨4 (￨4 stk￨4 ,￨4 p￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 for￨4 (￨4 Iterator￨5 i￨5 =￨5 getNested￨5 (￨5 )￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 i￨5 .￨5 hasNext￨5 (￨5 )￨5 ;￨5 )￨4 {￨4 Object￨5 o￨5 =￨5 i￨5 .￨5 next￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 o￨6 instanceof￨6 DataType￨6 )￨5 {￨5 <START_BUG>￨6 invokeCircularReferenceCheck￨6 (￨6 (￨6 (￨6 DataType￨6 )￨6 (￨6 o￨6 )￨6 )￨6 ,￨6 stk￨6 ,￨6 p￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 setChecked￨4 (￨4 true￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 invalidateExistingIterators￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ResourceCollection￨2 getRef￨2 (￨2 )￨2 {￨2 }￨2 private￨2 synchronized￨2 void￨2 validate￨2 (￨2 )￨2 {￨2 }￨2 private￨2 synchronized￨2 List￨2 getNested￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestTimeLimitingCollector￨1 extends￨1 LuceneTestCase￨1 {￨1 private￨2 static￨2 final￨2 int￨2 SLOW_DOWN￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 TIME_ALLOWED￨2 =￨2 17￨2 *￨2 (￨2 TestTimeLimitingCollector￨2 .￨2 SLOW_DOWN￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 double￨2 MULTI_THREAD_SLACK￨2 =￨2 7￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_DOCS￨2 =￨2 3000￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 N_THREADS￨2 =￨2 50￨2 ;￨2 private￨2 Searcher￨2 searcher￨2 ;￨2 private￨2 Directory￨2 directory￨2 ;￨2 private￨2 IndexReader￨2 reader￨2 ;￨2 private￨2 final￨2 String￨2 FIELD_NAME￨2 =￨2 "body"￨2 ;￨2 private￨2 Query￨2 query￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 [￨3 ]￨3 docText￨3 =￨3 new￨3 String￨3 [￨3 ]￨3 (￨3 )￨3 {￨3 }￨3 ;￨3 directory￨3 =￨3 newDirectory￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 RandomIndexWriter￨3 iw￨3 =￨3 new￨3 RandomIndexWriter￨3 (￨3 random￨3 ,￨3 directory￨3 )￨3 ;￨3 <END_BUG>￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 TestTimeLimitingCollector￨4 .￨4 N_DOCS￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 add￨4 (￨4 docText￨4 [￨4 (￨4 i￨4 %￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 )￨4 ]￨4 ,￨4 iw￨4 )￨4 ;￨4 }￨3 reader￨3 =￨3 iw￨3 .￨3 getReader￨3 (￨3 )￨3 ;￨3 iw￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 searcher￨3 =￨3 newSearcher￨3 (￨3 reader￨3 )￨3 ;￨3 String￨3 qtxt￨3 =￨3 "one"￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 1￨4 ;￨4 i￨4 <￨4 (￨4 docText￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 qtxt￨4 +=￨4 '<seq2seq4repair_space>'￨4 +￨4 (￨4 docText￨4 [￨4 i￨4 ]￨4 )￨4 ;￨4 }￨3 QueryParser￨3 queryParser￨3 =￨3 new￨3 QueryParser￨3 (￨3 TEST_VERSION_CURRENT￨3 ,￨3 FIELD_NAME￨3 ,￨3 new￨3 org￨3 .￨3 apache￨3 .￨3 lucene￨3 .￨3 analysis￨3 .￨3 MockAnalyzer￨3 (￨3 random￨3 )￨3 )￨3 ;￨3 query￨3 =￨3 queryParser￨3 .￨3 parse￨3 (￨3 qtxt￨3 )￨3 ;￨3 searcher￨3 .￨3 search￨3 (￨3 query￨3 ,￨3 null￨3 ,￨3 1000￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 add￨2 (￨2 String￨2 value￨2 ,￨2 RandomIndexWriter￨2 iw￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 search￨2 (￨2 Collector￨2 collector￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestSearch￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collector￨2 createTimedCollector￨2 (￨2 TestTimeLimitingCollector￨3 .￨3 MyHitCollector￨3 hc￨3 ,￨3 long￨3 timeAllowed￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutGreedy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutNotGreedy￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestTimeout￨2 (￨2 boolean￨3 multiThreaded￨3 ,￨3 boolean￨3 greedy￨3 )￨2 {￨2 }￨2 private￨2 long￨2 maxTime￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 private￨2 String￨2 maxTimeStr￨2 (￨2 boolean￨3 multiThreaded￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testModifyResolution￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testSearchMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testTimeoutMultiThreaded￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 doTestMultiThreads￨2 (￨2 final￨2 boolean￨2 withTimeout￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 MyHitCollector￨2 extends￨2 Collector￨2 {￨2 private￨3 final￨3 BitSet￨3 bits￨3 =￨3 new￨3 BitSet￨3 (￨3 )￨3 ;￨3 private￨3 int￨3 slowdown￨3 =￨3 0￨3 ;￨3 private￨3 int￨3 lastDocCollected￨3 =￨3 -￨3 1￨3 ;￨3 private￨3 int￨3 docBase￨3 =￨3 0￨3 ;￨3 public￨3 void￨3 setSlowDown￨3 (￨3 int￨4 milliseconds￨4 )￨3 {￨3 }￨3 public￨3 int￨3 hitCount￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 getLastDocCollected￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setScorer￨3 (￨3 Scorer￨3 scorer￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 collect￨3 (￨3 final￨3 int￨3 doc￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 setNextReader￨3 (￨3 IndexReader￨4 reader￨4 ,￨4 int￨4 base￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 boolean￨3 acceptsDocsOutOfOrder￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 WizardNewFileCreationPage￨1 extends￨1 WizardPage￨1 implements￨1 Listener￨1 {￨1 private￨2 static￨2 final￨2 int￨2 SIZING_CONTAINER_GROUP_HEIGHT￨2 =￨2 250￨2 ;￨2 private￨2 IStructuredSelection￨2 currentSelection￨2 ;￨2 private￨2 IFile￨2 newFile￨2 ;￨2 private￨2 IPath￨2 linkTargetPath￨2 ;￨2 private￨2 String￨2 initialFileName￨2 ;￨2 private￨2 IPath￨2 initialContainerFullPath￨2 ;￨2 private￨2 Composite￨2 topLevel￨2 ;￨2 private￨2 ResourceAndContainerGroup￨2 resourceGroup￨2 ;￨2 private￨2 Button￨2 advancedButton￨2 ;￨2 private￨2 CreateLinkedResourceGroup￨2 linkedResourceGroup￨2 ;￨2 public￨2 WizardNewFileCreationPage￨2 (￨2 String￨3 pageName￨3 ,￨3 IStructuredSelection￨3 selection￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createAdvancedControls￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 void￨2 createControl￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createFile￨2 (￨2 IFile￨2 fileHandle￨2 ,￨2 InputStream￨2 contents￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IFile￨2 createFileHandle￨2 (￨2 IPath￨3 filePath￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 createLinkTarget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IFile￨2 createNewFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPath￨2 getContainerFullPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getFileName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 InputStream￨2 getInitialContents￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 String￨2 getNewFileLabel￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 handleAdvancedButtonSelect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 handleEvent￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 initialPopulateContainerNameField￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setContainerFullPath￨2 (￨2 IPath￨3 path￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFileName￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 protected￨2 IStatus￨2 validateLinkedResource￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 validatePage￨2 (￨2 )￨2 {￨2 boolean￨3 valid￨3 =￨3 true￨3 ;￨3 IWorkspace￨3 workspace￨3 =￨3 WorkbenchPlugin￨3 .￨3 getPluginWorkspace￨3 (￨3 )￨3 ;￨3 String￨3 fileName￨3 =￨3 getFileName￨3 (￨3 )￨3 ;￨3 IStatus￨3 nameStatus￨3 =￨3 workspace￨3 .￨3 validateName￨3 (￨3 fileName￨3 ,￨3 IResource￨3 .￨3 FILE￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 nameStatus￨4 .￨4 isOK￨4 (￨4 )￨4 )￨4 )￨3 {￨3 setErrorMessage￨4 (￨4 nameStatus￨4 .￨4 getMessage￨4 (￨4 )￨4 )￨4 ;￨4 return￨4 false￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 resourceGroup￨4 .￨4 areAllValuesValid￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 (￨5 resourceGroup￨5 .￨5 getProblemType￨5 (￨5 )￨5 )￨5 ==￨5 (￨5 ResourceAndContainerGroup￨5 .￨5 PROBLEM_RESOURCE_EMPTY￨5 )￨5 )￨5 ||￨5 (￨5 (￨5 resourceGroup￨5 .￨5 getProblemType￨5 (￨5 )￨5 )￨5 ==￨5 (￨5 ResourceAndContainerGroup￨5 .￨5 PROBLEM_CONTAINER_EMPTY￨5 )￨5 )￨5 )￨4 {￨4 setMessage￨5 (￨5 resourceGroup￨5 .￨5 getProblemMessage￨5 (￨5 )￨5 )￨5 ;￨5 setErrorMessage￨5 (￨5 null￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 setErrorMessage￨5 (￨5 resourceGroup￨5 .￨5 getProblemMessage￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 valid￨4 =￨4 false￨4 ;￨4 }￨3 IPath￨3 container￨3 =￨3 workspace￨3 .￨3 getRoot￨3 (￨3 )￨3 .￨3 getLocation￨3 (￨3 )￨3 .￨3 append￨3 (￨3 getContainerFullPath￨3 (￨3 )￨3 )￨3 ;￨3 File￨3 systemFile￨3 =￨3 new￨3 File￨3 (￨3 container￨3 .￨3 toOSString￨3 (￨3 )￨3 ,￨3 fileName￨3 )￨3 ;￨3 if￨3 (￨3 systemFile￨4 .￨4 exists￨4 (￨4 )￨4 )￨3 {￨3 setErrorMessage￨4 (￨4 WorkbenchMessages￨4 .￨4 format￨4 (￨4 "WizardNewFileCreationPage.fileExistsMessage"￨4 ,￨4 new￨4 String￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 )￨4 ;￨4 valid￨4 =￨4 false￨4 ;￨4 }￨3 IStatus￨3 linkedResourceStatus￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 valid￨4 &&￨4 (￨4 (￨4 linkedResourceGroup￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 linkedResourceStatus￨4 =￨4 validateLinkedResource￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 (￨4 linkedResourceStatus￨4 .￨4 getCode￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 IStatus￨4 .￨4 ERROR￨4 )￨4 )￨4 <END_BUG>￨4 valid￨4 =￨4 false￨4 ;￨4 }￨3 if￨3 (￨3 valid￨4 &&￨4 (￨4 (￨4 linkedResourceStatus￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 linkedResourceStatus￨4 .￨4 isOK￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 setMessage￨4 (￨4 null￨4 )￨4 ;￨4 setErrorMessage￨4 (￨4 null￨4 )￨4 ;￨4 }￨3 return￨3 valid￨3 ;￨3 }￨2 public￨2 void￨2 setVisible￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 MethodDeclaration￨1 extends￨1 BodyDeclaration￨1 {￨1 private￨2 static￨2 final￨2 int￨2 LEGAL_MODIFIERS￨2 =￨2 (￨2 (￨2 (￨2 (￨2 (￨2 (￨2 (￨2 (￨2 Modifier￨2 .￨2 PUBLIC￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PRIVATE￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 PROTECTED￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STATIC￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 FINAL￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 SYNCHRONIZED￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 NATIVE￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 ABSTRACT￨2 )￨2 )￨2 |￨2 (￨2 Modifier￨2 .￨2 STRICTFP￨2 )￨2 ;￨2 private￨2 boolean￨2 isConstructor￨2 =￨2 false￨2 ;￨2 private￨2 int￨2 modifiers￨2 =￨2 Modifier￨2 .￨2 NONE￨2 ;￨2 private￨2 SimpleName￨2 methodName￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 parameters￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 true￨2 ,￨2 SingleVariableDeclaration￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 Type￨2 returnType￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 thrownExceptions￨2 =￨2 new￨2 ASTNode￨2 .￨2 NodeList￨2 (￨2 false￨2 ,￨2 Name￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 Block￨2 optionalBody￨2 =￨2 null￨2 ;￨2 MethodDeclaration￨2 (￨2 AST￨2 ast￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 boolean￨2 equalSubtrees￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setConstructor￨2 (￨2 boolean￨3 isConstructor￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setModifiers￨2 (￨2 int￨3 modifiers￨3 )￨2 {￨2 <START_BUG>￨3 modifiers￨3 &=￨3 ~￨3 (￨3 IConstants￨3 .￨3 AccDeprecated￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 modifiers￨4 &￨4 (￨4 ~￨4 (￨4 MethodDeclaration￨4 .￨4 LEGAL_MODIFIERS￨4 )￨4 )￨4 )￨4 !=￨4 0￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 )￨4 ;￨4 }￨3 modifying￨3 (￨3 )￨3 ;￨3 this￨3 .￨3 modifiers￨3 =￨3 modifiers￨3 ;￨3 }￨2 public￨2 SimpleName￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setName￨2 (￨2 SimpleName￨3 methodName￨3 )￨2 {￨2 }￨2 public￨2 List￨2 parameters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 List￨2 thrownExceptions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Type￨2 getReturnType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setReturnType￨2 (￨2 Type￨3 type￨3 )￨2 {￨2 }￨2 public￨2 Block￨2 getBody￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setBody￨2 (￨2 Block￨3 body￨3 )￨2 {￨2 }￨2 public￨2 IMethodBinding￨2 resolveBinding￨2 (￨2 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 Display￨3 display￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 Shell￨2 (￨2 Display￨3 display￨3 ,￨3 Shell￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 handle￨3 ,￨3 boolean￨3 embedded￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Shell￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Shell￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Shell￨2 internal_new￨2 (￨2 Display￨3 display￨3 ,￨3 int￨3 handle￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Shell￨2 cocoa_new￨2 (￨2 Display￨3 display￨3 ,￨3 int￨3 handle￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 boolean￨2 accessibilityIsIgnored￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addShellListener￨2 (￨2 ShellListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 bringToTop￨2 (￨2 boolean￨3 force￨3 )￨2 {￨2 }￨2 boolean￨2 canBecomeKeyWindow￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 )￨2 {￨2 }￨2 void￨2 checkOpen￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 void￨2 closeWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 void￨2 destroyWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 drawBackground￨2 (￨2 int￨3 id￨3 ,￨3 NSGraphicsContext￨3 context￨3 ,￨3 NSRect￨3 rect￨3 )￨2 {￨2 }￨2 Control￨2 findBackgroundControl￨2 (￨2 )￨2 {￨2 }￨2 Composite￨2 findDeferredControl￨2 (￨2 )￨2 {￨2 }￨2 Cursor￨2 findCursor￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 fixResize￨2 (￨2 )￨2 {￨2 }￨2 void￨2 fixShell￨2 (￨2 Shell￨3 newShell￨3 ,￨3 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 void￨2 forceActive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getAlpha￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getClientArea￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getFullScreen￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getImeInputMode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getLocation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMaximized￨2 (￨2 )￨2 {￨2 }￨2 Shell￨2 getModalShell￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getModified￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getMinimized￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getMinimumSize￨2 (￨2 )￨2 {￨2 }￨2 float￨2 [￨2 ]￨2 getParentBackground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Region￨2 getRegion￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Shell￨2 getShell￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Shell￨2 [￨2 ]￨2 getShells￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getSize￨2 (￨2 )￨2 {￨2 }￨2 float￨2 getThemeAlpha￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 hasBorder￨2 (￨2 )￨2 {￨2 }￨2 void￨2 helpRequested￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 theEvent￨3 )￨2 {￨2 }￨2 void￨2 invalidateVisibleRegion￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isDrawing￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEnabled￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 isEnabledCursor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVisible￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 makeFirstResponder￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 noResponderFor￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 selector￨3 )￨2 {￨2 }￨2 public￨2 void￨2 open￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 print￨2 (￨2 GC￨3 gc￨3 )￨2 {￨2 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseParent￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeShellListener￨2 (￨2 ShellListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 sendToolTipEvent￨2 (￨2 boolean￨3 enter￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setActive￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setActiveControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAlpha￨2 (￨2 int￨3 alpha￨3 )￨2 {￨2 }￨2 void￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 resize￨3 )￨2 {￨2 if￨3 (￨3 (￨4 window￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 fullScreen￨4 )￨3 {￨3 setFullScreen￨4 (￨4 false￨4 )￨4 ;￨4 }￨3 int￨3 screenHeight￨3 =￨3 (￨3 (￨3 int￨3 )￨3 (￨3 display￨3 .￨3 getPrimaryFrame￨3 (￨3 )￨3 .￨3 height￨3 )￨3 )￨3 ;￨3 NSRect￨3 frame￨3 =￨3 window￨3 .￨3 frame￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 move￨4 )￨3 {￨3 x￨4 =￨4 (￨4 (￨4 int￨4 )￨4 (￨4 frame￨4 .￨4 x￨4 )￨4 )￨4 ;￨4 y￨4 =￨4 screenHeight￨4 -￨4 (￨4 (￨4 int￨4 )￨4 (￨4 (￨4 frame￨4 .￨4 y￨4 )￨4 +￨4 (￨4 frame￨4 .￨4 height￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 resize￨4 )￨3 {￨3 width￨4 =￨4 (￨4 (￨4 int￨4 )￨4 (￨4 frame￨4 .￨4 width￨4 )￨4 )￨4 ;￨4 height￨4 =￨4 (￨4 (￨4 int￨4 )￨4 (￨4 frame￨4 .￨4 height￨4 )￨4 )￨4 ;￨4 }￨3 frame￨3 .￨3 x￨3 =￨3 x￨3 ;￨3 frame￨3 .￨3 y￨3 =￨3 screenHeight￨3 -￨3 (￨3 (￨3 int￨3 )￨3 (￨3 y￨3 +￨3 height￨3 )￨3 )￨3 ;￨3 frame￨3 .￨3 width￨3 =￨3 width￨3 ;￨3 frame￨3 .￨3 height￨3 =￨3 height￨3 ;￨3 <START_BUG>￨3 window￨3 .￨3 setFrame￨3 (￨3 frame￨3 ,￨3 true￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 void￨2 setClipRegion￨2 (￨2 float￨3 x￨3 ,￨3 float￨3 y￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEnabled￨2 (￨2 boolean￨3 enabled￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setFullScreen￨2 (￨2 boolean￨3 fullScreen￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMenuBar￨2 (￨2 Menu￨3 menu￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImeInputMode￨2 (￨2 int￨3 mode￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaximized￨2 (￨2 boolean￨3 maximized￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimized￨2 (￨2 boolean￨3 minimized￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimumSize￨2 (￨2 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimumSize￨2 (￨2 Point￨3 size￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setModified￨2 (￨2 boolean￨3 modified￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRegion￨2 (￨2 Region￨3 region￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVisible￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 void￨2 setWindowVisible￨2 (￨2 boolean￨3 visible￨3 ,￨3 boolean￨3 key￨3 )￨2 {￨2 }￨2 void￨2 setZOrder￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setZOrder￨2 (￨2 Control￨3 control￨3 ,￨3 boolean￨3 above￨3 )￨2 {￨2 }￨2 boolean￨2 traverseEscape￨2 (￨2 )￨2 {￨2 }￨2 void￨2 updateModal￨2 (￨2 )￨2 {￨2 }￨2 void￨2 updateParent￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 void￨2 updateSystemUIMode￨2 (￨2 )￨2 {￨2 }￨2 int￨2 view_stringForToolTip_point_userData￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 view￨3 ,￨3 int￨3 tag￨3 ,￨3 int￨3 point￨3 ,￨3 int￨3 userData￨3 )￨2 {￨2 }￨2 void￨2 windowDidBecomeKey￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 windowDidMove￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 windowDidResize￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 windowDidResignKey￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 notification￨3 )￨2 {￨2 }￨2 void￨2 windowSendEvent￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 boolean￨2 windowShouldClose￨2 (￨2 int￨3 id￨3 ,￨3 int￨3 sel￨3 ,￨3 int￨3 window￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ColumnFamilyStoreTest￨1 extends￨1 CleanupHelper￨1 {￨1 static￨2 byte￨2 [￨2 ]￨2 bytes1￨2 ;￨2 static￨2 byte￨2 [￨2 ]￨2 bytes2￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testGetColumnWithWrongBF￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testEmptyRow￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testSkipStartKey￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testIndexScan￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testLargeScan￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testIndexDeletions￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testIndexUpdate￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testIndexCreate￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 ,￨2 ConfigurationException￨2 (￨2 )￨2 {￨2 Table￨3 table￨3 =￨3 Table￨3 .￨3 open￨3 (￨3 "Keyspace1"￨3 )￨3 ;￨3 RowMutation￨3 rm￨3 ;￨3 rm￨3 =￨3 new￨3 RowMutation￨3 (￨3 "Keyspace1"￨3 ,￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 "k1"￨3 )￨3 )￨3 ;￨3 rm￨3 .￨3 add￨3 (￨3 new￨3 QueryPath￨3 (￨3 "Indexed2"￨3 ,￨3 null￨3 ,￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 "birthdate"￨3 )￨3 )￨3 ,￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 1L￨3 )￨3 ,￨3 1￨3 )￨3 ;￨3 rm￨3 .￨3 apply￨3 (￨3 )￨3 ;￨3 ColumnFamilyStore￨3 cfs￨3 =￨3 table￨3 .￨3 getColumnFamilyStore￨3 (￨3 "Indexed2"￨3 )￨3 ;￨3 ColumnDefinition￨3 old￨3 =￨3 cfs￨3 .￨3 metadata￨3 .￨3 getColumn_metadata￨3 (￨3 )￨3 .￨3 get￨3 (￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 "birthdate"￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 ColumnDefinition￨3 cd￨3 =￨3 new￨3 ColumnDefinition￨3 (￨3 old￨3 .￨3 name￨3 ,￨3 old￨3 .￨3 validator￨3 ,￨3 IndexType￨3 .￨3 KEYS￨3 ,￨3 "birthdate_index"￨3 )￨3 ;￨3 <END_BUG>￨3 Future￨3 <￨3 ?￨3 >￨3 future￨3 =￨3 cfs￨3 .￨3 addIndex￨3 (￨3 cd￨3 )￨3 ;￨3 future￨3 .￨3 get￨3 (￨3 )￨3 ;￨3 assert￨3 (￨3 cfs￨3 .￨3 getIndexedColumnFamilyStore￨3 (￨3 cd￨3 .￨3 name￨3 )￨3 .￨3 getSSTables￨3 (￨3 )￨3 .￨3 size￨3 (￨3 )￨3 )￨3 >￨3 0￨3 ;￨3 queryBirthdate￨3 (￨3 table￨3 )￨3 ;￨3 ColumnFamilyStore￨3 indexedCfs￨3 =￨3 cfs￨3 .￨3 getIndexedColumnFamilyStore￨3 (￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 "birthdate"￨3 )￨3 )￨3 ;￨3 cfs￨3 .￨3 removeIndex￨3 (￨3 ByteBufferUtil￨3 .￨3 bytes￨3 (￨3 "birthdate"￨3 )￨3 )￨3 ;￨3 assert￨3 !￨3 (￨3 indexedCfs￨3 .￨3 isIndexBuilt￨3 (￨3 )￨3 )￨3 ;￨3 future￨3 =￨3 cfs￨3 .￨3 addIndex￨3 (￨3 cd￨3 )￨3 ;￨3 future￨3 .￨3 get￨3 (￨3 )￨3 ;￨3 queryBirthdate￨3 (￨3 table￨3 )￨3 ;￨3 }￨2 private￨2 void￨2 queryBirthdate￨2 (￨2 Table￨2 table￨2 )￨2 throws￨2 CharacterCodingException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDeleteSuperRowSticksAfterFlush￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 assertRowAndColCount￨2 (￨2 int￨3 rowCount￨3 ,￨3 int￨3 colCount￨3 ,￨3 ByteBuffer￨3 sc￨3 ,￨3 boolean￨3 isDeleted￨3 ,￨3 Collection￨3 <￨3 Row￨3 >￨3 rows￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 str￨2 (￨2 ColumnFamily￨3 cf￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 putColsSuper￨2 (￨2 ColumnFamilyStore￨2 cfs￨2 ,￨2 DecoratedKey￨2 key￨2 ,￨2 ByteBuffer￨2 scfName￨2 ,￨2 Column￨2 ...￨2 cols￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 putColsStandard￨2 (￨2 ColumnFamilyStore￨2 cfs￨2 ,￨2 DecoratedKey￨2 key￨2 ,￨2 Column￨2 ...￨2 cols￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testDeleteStandardRowSticksAfterFlush￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 ColumnFamilyStore￨2 insertKey1Key2￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 InterruptedException￨2 ,￨2 ExecutionException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testBackupAfterFlush￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Stream￨1 implements￨1 IAggregatableStream￨1 {￨1 Node￨2 _node￨2 ;￨2 TridentTopology￨2 _topology￨2 ;￨2 String￨2 _name￨2 ;￨2 protected￨2 Stream￨2 (￨2 TridentTopology￨3 topology￨3 ,￨3 String￨3 name￨3 ,￨3 Node￨3 node￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 name￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 parallelismHint￨2 (￨2 int￨3 hint￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 project￨2 (￨2 Fields￨3 keepFields￨3 )￨2 {￨2 }￨2 public￨2 GroupedStream￨2 groupBy￨2 (￨2 Fields￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionBy￨2 (￨2 Fields￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partition￨2 (￨2 CustomStreamGrouping￨3 partitioner￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 shuffle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 global￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 batchGlobal￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 broadcast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 identityPartition￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 partition￨2 (￨2 Grouping￨3 grouping￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 applyAssembly￨2 (￨2 Assembly￨3 assembly￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Stream￨2 each￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 Function￨3 function￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 Aggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 stateQuery￨2 (￨2 TridentState￨3 state￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 QueryFunction￨3 function￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 StateUpdater￨3 updater￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateSpec￨3 stateSpec￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 StateUpdater￨3 updater￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 StateUpdater￨3 updater￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateSpec￨3 stateSpec￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 StateUpdater￨3 updater￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 each￨2 (￨2 Function￨3 function￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 each￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 Filter￨3 filter￨3 )￨2 {￨2 }￨2 public￨2 ChainedAggregatorDeclarer￨2 chainedAgg￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 Aggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 partitionAggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 Aggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 Aggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 aggregate￨2 (￨2 Fields￨3 inputFields￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 StateUpdater￨3 updater￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateSpec￨3 stateSpec￨3 ,￨3 StateUpdater￨3 updater￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 StateUpdater￨3 updater￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 partitionPersist￨2 (￨2 StateSpec￨3 stateSpec￨3 ,￨3 StateUpdater￨3 updater￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateSpec￨3 spec￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateSpec￨3 spec￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 CombinerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateSpec￨3 spec￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateFactory￨3 stateFactory￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 TridentState￨2 persistentAggregate￨2 (￨2 StateSpec￨3 spec￨3 ,￨3 Fields￨3 inputFields￨3 ,￨3 ReducerAggregator￨3 agg￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 public￨2 Stream￨2 stateQuery￨2 (￨2 TridentState￨3 state￨3 ,￨3 QueryFunction￨3 function￨3 ,￨3 Fields￨3 functionFields￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Stream￨2 toStream￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Fields￨2 getOutputFields￨2 (￨2 )￨2 {￨2 }￨2 static￨2 class￨2 BatchGlobalAggScheme￨2 implements￨2 GlobalAggregationScheme￨2 <￨2 Stream￨2 >￨2 {￨2 @￨3 Override￨3 public￨3 IAggregatableStream￨3 aggPartition￨3 (￨3 Stream￨4 s￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BatchToPartition￨3 singleEmitPartitioner￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 GlobalAggScheme￨2 implements￨2 GlobalAggregationScheme￨2 <￨2 Stream￨2 >￨2 {￨2 @￨3 Override￨3 public￨3 IAggregatableStream￨3 aggPartition￨3 (￨3 Stream￨4 s￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BatchToPartition￨3 singleEmitPartitioner￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 void￨2 projectionValidation￨2 (￨2 Fields￨3 projFields￨3 )￨2 {￨2 if￨3 (￨3 projFields￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 Fields￨3 allFields￨3 =￨3 this￨3 .￨3 getOutputFields￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 String￨4 field￨4 :￨4 projFields￨4 )￨3 {￨3 if￨4 (￨4 !￨5 (￨5 allFields￨5 .￨5 contains￨5 (￨5 field￨5 )￨5 )￨5 )￨4 {￨4 <START_BUG>￨5 throw￨5 new￨5 IllegalArgumentException￨5 (￨5 (￨5 (￨5 (￨5 (￨5 "Trying<seq2seq4repair_space>to<seq2seq4repair_space>select<seq2seq4repair_space>non-existent<seq2seq4repair_space>field:<seq2seq4repair_space>'"￨5 +￨5 field￨5 )￨5 +￨5 "'<seq2seq4repair_space>from<seq2seq4repair_space>all<seq2seq4repair_space>fields:<seq2seq4repair_space>"￨5 )￨5 +￨5 allFields￨5 )￨5 +￨5 "!"￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ShowBugDatabaseAction￨1 extends￨1 FrameAction￨1 {￨1 public￨2 ShowBugDatabaseAction￨2 (￨2 AbstractFrameController￨3 frameController￨3 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 evt￨3 )￨2 {￨2 URLController￨3 c￨3 =￨3 new￨3 URLController￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 c￨4 .￨4 open￨4 (￨4 new￨4 URL￨4 (￨4 "http://www.sourceforge.net/projects/columba/bugs"￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 MalformedURLException￨4 mue￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 CheckableListEditor￨1 extends￨1 DefaultCellEditor￨1 implements￨1 ActionListener￨1 {￨1 private￨2 JCheckBox￨2 checkbox￨2 ;￨2 private￨2 Boolean￨2 selected￨2 ;￨2 public￨2 CheckableListEditor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Component￨2 getTableCellEditorComponent￨2 (￨2 JTable￨3 table￨3 ,￨3 Object￨3 value￨3 ,￨3 boolean￨3 isSelected￨3 ,￨3 int￨3 row￨3 ,￨3 int￨3 column￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 getCellEditorValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 e￨3 )￨2 {￨2 <START_BUG>￨3 selected￨3 =￨3 new￨3 Boolean￨3 (￨3 checkbox￨3 .￨3 isSelected￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 fireEditingStopped￨3 (￨3 )￨3 ;￨3 }￨2 public￨2 Component￨2 getComponent￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 NormValueSource￨1 extends￨1 ValueSource￨1 {￨1 protected￨2 final￨2 String￨2 field￨2 ;￨2 public￨2 NormValueSource￨2 (￨2 String￨3 field￨3 )￨2 {￨2 }￨2 public￨2 String￨2 name￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 description￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 createWeight￨2 (￨2 Map￨2 context￨2 ,￨2 IndexSearcher￨2 searcher￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 FunctionValues￨2 getValues￨2 (￨2 Map￨2 context￨2 ,￨2 AtomicReaderContext￨2 readerContext￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 IndexSearcher￨3 searcher￨3 =￨3 (￨3 (￨3 IndexSearcher￨3 )￨3 (￨3 context￨3 .￨3 get￨3 (￨3 "searcher"￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 TFIDFSimilarity￨3 similarity￨3 =￨3 IDFValueSource￨3 .￨3 asTFIDF￨3 (￨3 searcher￨3 .￨3 getSimilarity￨3 (￨3 )￨3 ,￨3 field￨3 )￨3 ;￨3 if￨3 (￨3 similarity￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 UnsupportedOperationException￨4 (￨4 "requires<seq2seq4repair_space>a<seq2seq4repair_space>TFIDFSimilarity<seq2seq4repair_space>(such<seq2seq4repair_space>as<seq2seq4repair_space>DefaultSimilarity)"￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 final￨3 NumericDocValues￨3 norms￨3 =￨3 readerContext￨3 .￨3 reader￨3 (￨3 )￨3 .￨3 simpleNormValues￨3 (￨3 field￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 norms￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 new￨4 ConstDoubleDocValues￨4 (￨4 0.0￨4 ,￨4 this￨4 )￨4 ;￨4 }￨3 return￨3 new￨3 FloatDocValues￨3 (￨3 this￨4 )￨3 {￨3 @￨4 Override￨4 public￨4 float￨4 floatVal￨4 (￨4 int￨5 doc￨5 )￨4 {￨4 return￨5 similarity￨5 .￨5 decodeNormValue￨5 (￨5 (￨5 (￨5 byte￨5 )￨5 (￨5 norms￨5 .￨5 get￨5 (￨5 doc￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ServletWebRequest￨1 extends￨1 WebRequest￨1 {￨1 private￨2 final￨2 HttpServletRequest￨2 httpServletRequest￨2 ;￨2 private￨2 final￨2 Url￨2 url￨2 ;￨2 private￨2 final￨2 String￨2 filterPrefix￨2 ;￨2 private￨2 final￨2 ErrorAttributes￨2 errorAttributes￨2 ;￨2 public￨2 ServletWebRequest￨2 (￨2 HttpServletRequest￨3 httpServletRequest￨3 ,￨3 String￨3 filterPrefix￨3 )￨2 {￨2 }￨2 public￨2 ServletWebRequest￨2 (￨2 HttpServletRequest￨3 httpServletRequest￨3 ,￨3 String￨3 filterPrefix￨3 ,￨3 Url￨3 url￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Url￨2 getClientUrl￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Url￨2 setParameters￨2 (￨2 Url￨3 url￨3 )￨2 {￨2 }￨2 private￨2 Url￨2 getUrl￨2 (￨2 HttpServletRequest￨3 request￨3 ,￨3 String￨3 filterPrefix￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getFilterPrefix￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 Cookie￨2 >￨2 getCookies￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Locale￨2 getLocale￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Time￨2 getDateHeader￨2 (￨2 String￨3 name￨3 )￨2 {￨2 long￨3 value￨3 =￨3 httpServletRequest￨3 .￨3 getDateHeader￨3 (￨3 name￨3 )￨3 ;￨3 if￨3 (￨3 value￨4 ==￨4 (￨4 -￨4 1￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 <START_BUG>￨3 return￨3 Time￨3 .￨3 valueOf￨3 (￨3 value￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 String￨2 getHeader￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 @￨2 Override￨2 public￨2 List￨2 <￨2 String￨2 >￨2 getHeaders￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StringValue￨2 >￨2 >￨2 postParameters￨2 =￨2 null￨2 ;￨2 private￨2 static￨2 boolean￨2 isMultiPart￨2 (￨2 ServletRequest￨3 request￨3 )￨2 {￨2 }￨2 protected￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StringValue￨2 >￨2 >￨2 generatePostParameters￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Map￨2 <￨2 String￨2 ,￨2 List￨2 <￨2 StringValue￨2 >￨2 >￨2 getPostRequestParameters￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 IRequestParameters￨2 postRequestParameters￨2 =￨2 new￨2 IWritableRequestParameters￨2 (￨2 )￨2 {￨2 public￨3 void￨3 reset￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setParameterValues￨3 (￨3 String￨4 key￨4 ,￨4 List￨4 <￨4 StringValue￨4 >￨4 values￨4 )￨3 {￨3 }￨3 public￨3 Set￨3 <￨3 String￨3 >￨3 getParameterNames￨3 (￨3 )￨3 {￨3 }￨3 public￨3 StringValue￨3 getParameterValue￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 public￨3 List￨3 <￨3 StringValue￨3 >￨3 getParameterValues￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 @￨2 Override￨2 public￨2 IRequestParameters￨2 getPostParameters￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Url￨2 getUrl￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ServletWebRequest￨2 cloneWithUrl￨2 (￨2 Url￨3 url￨3 )￨2 {￨2 }￨2 public￨2 MultipartServletWebRequest￨2 newMultipartWebRequest￨2 (￨2 Bytes￨2 maxSize￨2 )￨2 throws￨2 FileUploadException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MultipartServletWebRequest￨2 newMultipartWebRequest￨2 (￨2 Bytes￨2 maxSize￨2 ,￨2 FileItemFactory￨2 factory￨2 )￨2 throws￨2 FileUploadException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 ServletWebRequest￨2 .￨2 class￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 String￨2 getPrefixToContextPath￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Charset￨2 getCharset￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 HttpServletRequest￨2 getContainerRequest￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getContextPath￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 getFilterPath￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 shouldPreserveClientUrl￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 ,￨3 int￨3 field￨3 ,￨3 short￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 providedStringField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 ,￨3 String￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 replaceBooleanField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 byte￨2 replaceByteField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 char￨2 replaceCharField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 double￨2 replaceDoubleField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 float￨2 replaceFloatField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 int￨2 replaceIntField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 long￨2 replaceLongField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 replaceObjectField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 short￨2 replaceShortField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 String￨2 replaceStringField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 fetchBoolean￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 fetchBooleanField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 byte￨2 fetchByte￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 byte￨2 fetchByteField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 char￨2 fetchChar￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 char￨2 fetchCharField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 double￨2 fetchDouble￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 double￨2 fetchDoubleField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 float￨2 fetchFloat￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 float￨2 fetchFloatField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 int￨2 fetchInt￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 int￨2 fetchIntField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 long￨2 fetchLong￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 long￨2 fetchLongField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 fetchObject￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 fetchObjectField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 short￨2 fetchShort￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 short￨2 fetchShortField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 String￨2 fetchString￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 String￨2 fetchStringField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeBoolean￨2 (￨2 int￨3 field￨3 ,￨3 boolean￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeBooleanField￨2 (￨2 int￨3 field￨3 ,￨3 boolean￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeByte￨2 (￨2 int￨3 field￨3 ,￨3 byte￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeByteField￨2 (￨2 int￨3 field￨3 ,￨3 byte￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeChar￨2 (￨2 int￨3 field￨3 ,￨3 char￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeCharField￨2 (￨2 int￨3 field￨3 ,￨3 char￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeDouble￨2 (￨2 int￨3 field￨3 ,￨3 double￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeDoubleField￨2 (￨2 int￨3 field￨3 ,￨3 double￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeFloat￨2 (￨2 int￨3 field￨3 ,￨3 float￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeFloatField￨2 (￨2 int￨3 field￨3 ,￨3 float￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeInt￨2 (￨2 int￨3 field￨3 ,￨3 int￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeIntField￨2 (￨2 int￨3 field￨3 ,￨3 int￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeLong￨2 (￨2 int￨3 field￨3 ,￨3 long￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeLongField￨2 (￨2 int￨3 field￨3 ,￨3 long￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeObject￨2 (￨2 int￨3 field￨3 ,￨3 Object￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeObjectField￨2 (￨2 int￨3 field￨3 ,￨3 Object￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeShort￨2 (￨2 int￨3 field￨3 ,￨3 short￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeShortField￨2 (￨2 int￨3 field￨3 ,￨3 short￨3 curVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeString￨2 (￨2 int￨3 field￨3 ,￨3 String￨3 externalVal￨3 )￨2 {￨2 }￨2 public￨2 void￨2 storeStringField￨2 (￨2 int￨3 field￨3 ,￨3 String￨3 curVal￨3 )￨2 {￨2 }￨2 private￨2 void￨2 storeField￨2 (￨2 int￨3 field￨3 ,￨3 Object￨3 val￨3 ,￨3 FieldManager￨3 fm￨3 )￨2 {￨2 }￨2 void￨2 eraseFlush￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setLoaded￨2 (￨2 boolean￨3 val￨3 )￨2 {￨2 }￨2 void￨2 setDirty￨2 (￨2 boolean￨3 val￨3 )￨2 {￨2 }￨2 void￨2 clearFields￨2 (￨2 )￨2 {￨2 fireLifecycleEvent￨3 (￨3 BEFORE_CLEAR￨3 )￨3 ;￨3 unproxyFields￨3 (￨3 )￨3 ;￨3 lock￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 FieldMetaData￨4 [￨4 ]￨4 fmds￨4 =￨4 _meta￨4 .￨4 getFields￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 (￨5 fmds￨5 .￨5 length￨5 )￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 !￨6 (￨6 fmds￨6 [￨6 i￨6 ]￨6 .￨6 isPrimaryKey￨6 (￨6 )￨6 )￨6 )￨6 &&￨6 (￨6 (￨6 fmds￨6 [￨6 i￨6 ]￨6 .￨6 getManagement￨6 (￨6 )￨6 )￨6 ==￨6 (￨6 FieldMetaData￨6 .￨6 MANAGE_PERSISTENT￨6 )￨6 )￨6 )￨5 {￨5 replaceField￨6 (￨6 _pc￨6 ,￨6 ClearFieldManager￨6 .￨6 getInstance￨6 (￨6 )￨6 ,￨6 i￨6 )￨6 ;￨6 }￨5 }￨4 setLoaded￨4 (￨4 false￨4 )￨4 ;￨4 <START_BUG>￨4 assignVersionField￨4 (￨4 null￨4 )￨4 ;￨4 <END_BUG>￨4 _loadVersion￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 _fieldImpl￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 Arrays￨5 .￨5 fill￨5 (￨5 _fieldImpl￨5 ,￨5 null￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 unlock￨4 (￨4 )￨4 ;￨4 }￨3 fireLifecycleEvent￨3 (￨3 AFTER_CLEAR￨3 )￨3 ;￨3 }￨2 void￨2 saveFields￨2 (￨2 boolean￨3 immediate￨3 )￨2 {￨2 }￨2 private￨2 void￨2 saveField￨2 (￨2 int￨3 field￨3 )￨2 {￨2 }￨2 void￨2 clearSavedFields￨2 (￨2 )￨2 {￨2 }￨2 void￨2 restoreFields￨2 (￨2 )￨2 {￨2 }￨2 void￨2 proxyFields￨2 (￨2 boolean￨3 reset￨3 ,￨3 boolean￨3 replaceNull￨3 )￨2 {￨2 }￨2 void￨2 unproxyFields￨2 (￨2 )￨2 {￨2 }￨2 void￨2 preFlush￨2 (￨2 boolean￨3 logical￨3 ,￨3 OpCallbacks￨3 call￨3 )￨2 {￨2 }￨2 void￨2 preDelete￨2 (￨2 )￨2 {￨2 }￨2 void￨2 cascadeDelete￨2 (￨2 OpCallbacks￨3 call￨3 )￨2 {￨2 }￨2 void￨2 cascadePersist￨2 (￨2 OpCallbacks￨3 call￨3 )￨2 {￨2 }￨2 boolean￨2 loadFields￨2 (￨2 BitSet￨3 fields￨3 ,￨3 FetchConfiguration￨3 fetch￨3 ,￨3 int￨3 lockLevel￨3 ,￨3 Object￨3 sdata￨3 ,￨3 boolean￨3 forWrite￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 loadField￨2 (￨2 int￨3 field￨3 ,￨3 int￨3 lockLevel￨3 ,￨3 boolean￨3 forWrite￨3 ,￨3 boolean￨3 fgs￨3 )￨2 {￨2 }￨2 void￨2 provideField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 FieldManager￨3 store￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 void￨2 replaceField￨2 (￨2 PersistenceCapable￨3 pc￨3 ,￨3 FieldManager￨3 load￨3 ,￨3 int￨3 field￨3 )￨2 {￨2 }￨2 private￨2 void￨2 setLoaded￨2 (￨2 int￨3 field￨3 ,￨3 boolean￨3 isLoaded￨3 )￨2 {￨2 }￨2 private￨2 void￨2 postLoad￨2 (￨2 int￨3 field￨3 ,￨3 FetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 postLoad￨2 (￨2 String￨3 fgName￨3 ,￨3 FetchConfiguration￨3 fetch￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 syncVersion￨2 (￨2 Object￨3 sdata￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVersionCheckRequired￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setCheckVersion￨2 (￨2 boolean￨3 versionCheck￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVersionUpdateRequired￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setUpdateVersion￨2 (￨2 boolean￨3 versionUpdate￨3 )￨2 {￨2 }￨2 protected￨2 RuntimeException￨2 translate￨2 (￨2 RuntimeException￨3 re￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 lock￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 unlock￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractServicePublicationTest￨1 extends￨1 TestCase￨1 implements￨1 RemoteServicePublication￨1 ,￨1 IDistributionConstants￨1 {￨1 protected￨2 static￨2 void￨2 assertStringsEqual￨2 (￨2 final￨3 String￨3 [￨3 ]￨3 s1￨3 ,￨3 final￨3 String￨3 [￨3 ]￨3 s2￨3 )￨2 {￨2 }￨2 protected￨2 IContainer￨2 container￨2 ;￨2 protected￨2 String￨2 [￨2 ]￨2 ifaces￨2 ;￨2 protected￨2 ServiceRegistration￨2 registration￨2 ;￨2 protected￨2 abstract￨2 IContainer￨2 createContainer￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 abstract￨2 String￨2 [￨2 ]￨2 createInterfaces￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ServiceReference￨2 reference￨2 ;￨2 public￨2 ServiceReference￨2 getReference￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 void￨2 removeFromContainerManager￨2 (￨2 IContainer￨3 container￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IContainer￨2 getContainer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setContainer￨2 (￨2 IContainer￨3 container￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testServicePublication￨2 (￨2 )￨2 throws￨2 InterruptedException￨2 (￨2 )￨2 {￨2 final￨3 BundleContext￨3 context￨3 =￨3 Activator￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 getContext￨3 (￨3 )￨3 ;￨3 final￨3 Dictionary￨3 props￨3 =￨3 new￨3 Hashtable￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 props￨3 .￨3 put￨3 (￨3 REMOTE_INTERFACES￨3 ,￨3 getInterfaces￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ServiceTracker￨3 tracker￨3 =￨3 new￨3 ServiceTracker￨3 (￨3 context￨3 ,￨3 TestServiceInterface1￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 ,￨3 null￨3 )￨3 ;￨3 tracker￨3 .￨3 open￨3 (￨3 )￨3 ;￨3 registration￨3 =￨3 context￨3 .￨3 registerService￨3 (￨3 TestServiceInterface1￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 ,￨3 new￨3 TestService1￨3 (￨3 )￨3 ,￨3 props￨3 )￨3 ;￨3 tracker￨3 .￨3 waitForService￨3 (￨3 10000￨3 )￨3 ;￨3 final￨3 ServiceReference￨3 ref￨3 =￨3 context￨3 .￨3 getServiceReference￨3 (￨3 ServicePublication￨3 .￨3 class￨3 .￨3 getName￨3 (￨3 )￨3 )￨3 ;￨3 assertTrue￨3 (￨3 (￨3 ref￨3 !=￨3 null￨3 )￨3 )￨3 ;￨3 final￨3 Object￨3 o￨3 =￨3 ref￨3 .￨3 getProperty￨3 (￨3 SERVICE_INTERFACE_NAME￨3 )￨3 ;￨3 assertTrue￨3 (￨3 (￨3 o￨3 instanceof￨3 Collection￨3 )￨3 )￨3 ;￨3 final￨3 Collection￨3 refIfaces￨3 =￨3 (￨3 (￨3 Collection￨3 )￨3 (￨3 o￨3 )￨3 )￨3 ;￨3 AbstractServicePublicationTest￨3 .￨3 assertStringsEqual￨3 (￨3 getInterfaces￨3 (￨3 )￨3 ,￨3 (￨3 (￨3 String￨3 [￨3 ]￨3 )￨3 (￨3 refIfaces￨3 .￨3 toArray￨3 (￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 }￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 Thread￨3 .￨3 sleep￨3 (￨3 10000￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 setInterfaces￨2 (￨2 String￨3 [￨3 ]￨3 interfaces￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TestExplanations￨1 extends￨1 LuceneTestCase￨1 {￨1 protected￨2 IndexSearcher￨2 searcher￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 KEY￨2 =￨2 "KEY"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 FIELD￨2 =￨2 "field"￨2 ;￨2 public￨2 static￨2 final￨2 QueryParser￨2 qp￨2 =￨2 new￨2 QueryParser￨2 (￨2 TestExplanations￨2 .￨2 FIELD￨2 ,￨2 new￨2 WhitespaceAnalyzer￨2 (￨2 )￨2 )￨2 ;￨2 public￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 super￨3 .￨3 setUp￨3 (￨3 )￨3 ;￨3 RAMDirectory￨3 directory￨3 =￨3 new￨3 RAMDirectory￨3 (￨3 )￨3 ;￨3 IndexWriter￨3 writer￨3 =￨3 new￨3 IndexWriter￨3 (￨3 directory￨3 ,￨3 new￨3 WhitespaceAnalyzer￨3 (￨3 )￨3 ,￨3 true￨3 ,￨3 MaxFieldLength￨3 .￨3 LIMITED￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 docFields￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 Document￨4 doc￨4 =￨4 new￨4 Document￨4 (￨4 )￨4 ;￨4 doc￨4 .￨4 add￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 document￨4 .￨4 Field￨4 (￨4 TestExplanations￨4 .￨4 KEY￨4 ,￨4 (￨4 ""￨4 +￨4 i￨4 )￨4 ,￨4 Store￨4 .￨4 NO￨4 ,￨4 Index￨4 .￨4 NOT_ANALYZED￨4 )￨4 )￨4 ;￨4 doc￨4 .￨4 add￨4 (￨4 new￨4 org￨4 .￨4 apache￨4 .￨4 lucene￨4 .￨4 document￨4 .￨4 Field￨4 (￨4 TestExplanations￨4 .￨4 FIELD￨4 ,￨4 docFields￨4 [￨4 i￨4 ]￨4 ,￨4 Store￨4 .￨4 NO￨4 ,￨4 Index￨4 .￨4 ANALYZED￨4 )￨4 )￨4 ;￨4 writer￨4 .￨4 addDocument￨4 (￨4 doc￨4 )￨4 ;￨4 }￨3 writer￨3 .￨3 close￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 searcher￨3 =￨3 new￨3 IndexSearcher￨3 (￨3 directory￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 String￨2 [￨2 ]￨2 docFields￨2 =￨2 new￨2 String￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 public￨2 Query￨2 makeQuery￨2 (￨2 String￨2 queryText￨2 )￨2 throws￨2 ParseException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 qtest￨2 (￨2 String￨2 queryText￨2 ,￨2 int￨2 [￨2 ]￨2 expDocNrs￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 qtest￨2 (￨2 Query￨2 q￨2 ,￨2 int￨2 [￨2 ]￨2 expDocNrs￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 bqtest￨2 (￨2 Query￨2 q￨2 ,￨2 int￨2 [￨2 ]￨2 expDocNrs￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 bqtest￨2 (￨2 String￨2 queryText￨2 ,￨2 int￨2 [￨2 ]￨2 expDocNrs￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 ItemizedFilter￨2 extends￨2 FieldCacheTermsFilter￨2 {￨2 private￨3 static￨3 String￨3 [￨3 ]￨3 int2str￨3 (￨3 int￨4 [￨4 ]￨4 terms￨4 )￨3 {￨3 }￨3 public￨3 ItemizedFilter￨3 (￨3 String￨4 keyField￨4 ,￨4 int￨4 [￨4 ]￨4 keys￨4 )￨3 {￨3 }￨3 public￨3 ItemizedFilter￨3 (￨3 int￨4 [￨4 ]￨4 keys￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 Term￨2 [￨2 ]￨2 ta￨2 (￨2 String￨3 [￨3 ]￨3 s￨3 )￨2 {￨2 }￨2 public￨2 SpanTermQuery￨2 st￨2 (￨2 String￨3 s￨3 )￨2 {￨2 }￨2 public￨2 SpanNotQuery￨2 snot￨2 (￨2 SpanQuery￨3 i￨3 ,￨3 SpanQuery￨3 e￨3 )￨2 {￨2 }￨2 public￨2 SpanOrQuery￨2 sor￨2 (￨2 String￨3 s￨3 ,￨3 String￨3 e￨3 )￨2 {￨2 }￨2 public￨2 SpanOrQuery￨2 sor￨2 (￨2 SpanQuery￨3 s￨3 ,￨3 SpanQuery￨3 e￨3 )￨2 {￨2 }￨2 public￨2 SpanOrQuery￨2 sor￨2 (￨2 String￨3 s￨3 ,￨3 String￨3 m￨3 ,￨3 String￨3 e￨3 )￨2 {￨2 }￨2 public￨2 SpanOrQuery￨2 sor￨2 (￨2 SpanQuery￨3 s￨3 ,￨3 SpanQuery￨3 m￨3 ,￨3 SpanQuery￨3 e￨3 )￨2 {￨2 }￨2 public￨2 SpanNearQuery￨2 snear￨2 (￨2 String￨3 s￨3 ,￨3 String￨3 e￨3 ,￨3 int￨3 slop￨3 ,￨3 boolean￨3 inOrder￨3 )￨2 {￨2 }￨2 public￨2 SpanNearQuery￨2 snear￨2 (￨2 SpanQuery￨3 s￨3 ,￨3 SpanQuery￨3 e￨3 ,￨3 int￨3 slop￨3 ,￨3 boolean￨3 inOrder￨3 )￨2 {￨2 }￨2 public￨2 SpanNearQuery￨2 snear￨2 (￨2 String￨3 s￨3 ,￨3 String￨3 m￨3 ,￨3 String￨3 e￨3 ,￨3 int￨3 slop￨3 ,￨3 boolean￨3 inOrder￨3 )￨2 {￨2 }￨2 public￨2 SpanNearQuery￨2 snear￨2 (￨2 SpanQuery￨3 s￨3 ,￨3 SpanQuery￨3 m￨3 ,￨3 SpanQuery￨3 e￨3 ,￨3 int￨3 slop￨3 ,￨3 boolean￨3 inOrder￨3 )￨2 {￨2 }￨2 public￨2 SpanFirstQuery￨2 sf￨2 (￨2 String￨3 s￨3 ,￨3 int￨3 b￨3 )￨2 {￨2 }￨2 public￨2 Query￨2 optB￨2 (￨2 String￨2 q￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Query￨2 optB￨2 (￨2 Query￨2 q￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Query￨2 reqB￨2 (￨2 String￨2 q￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Query￨2 reqB￨2 (￨2 Query￨2 q￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testNoop￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ExternalFoldersManager￨1 {￨1 private￨2 static￨2 final￨2 boolean￨2 DEBUG￨2 =￨2 false￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 EXTERNAL_PROJECT_NAME￨2 =￨2 ".org.eclipse.jdt.core.external.folders"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 LINKED_FOLDER_NAME￨2 =￨2 ".link"￨2 ;￨2 private￨2 HashMap￨2 folders￨2 ;￨2 private￨2 int￨2 counter￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 HashSet￨2 getExternalFolders￨2 (￨2 IClasspathEntry￨3 [￨3 ]￨3 classpath￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isExternalFolderPath￨2 (￨2 IPath￨3 externalPath￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isInternalPathForExternalFolder￨2 (￨2 IPath￨3 resourcePath￨3 )￨2 {￨2 }￨2 public￨2 IFolder￨2 addFolder￨2 (￨2 IPath￨3 externalFolderPath￨3 )￨2 {￨2 }￨2 private￨2 synchronized￨2 IFolder￨2 addFolder￨2 (￨2 IPath￨3 externalFolderPath￨3 ,￨3 IProject￨3 externalFoldersProject￨3 )￨2 {￨2 }￨2 public￨2 IFolder￨2 createLinkFolder￨2 (￨2 IPath￨2 externalFolderPath￨2 ,￨2 boolean￨2 refreshIfExistAlready￨2 ,￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 void￨2 cleanUp￨2 (￨2 IProgressMonitor￨2 monitor￨2 )￨2 throws￨2 CoreException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IProject￨2 getExternalFoldersProject￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IProject￨2 createExternalFoldersProject￨2 (￨2 IProgressMonitor￨3 monitor￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 IFolder￨2 getFolder￨2 (￨2 IPath￨3 externalFolderPath￨3 )￨2 {￨2 }￨2 private￨2 HashMap￨2 getFolders￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 refreshReferences￨2 (￨2 IProject￨3 source￨3 ,￨3 IProgressMonitor￨3 monitor￨3 )￨2 {￨2 IProject￨3 externalProject￨3 =￨3 getExternalFoldersProject￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 source￨4 .￨4 equals￨4 (￨4 externalProject￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 JavaProject￨4 .￨4 hasJavaNature￨4 (￨4 source￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 HashSet￨4 externalFolders￨4 =￨4 ExternalFoldersManager￨4 .￨4 getExternalFolders￨4 (￨4 JavaCore￨4 .￨4 create￨4 (￨4 source￨4 )￨4 .￨4 getResolvedClasspath￨4 (￨4 true￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 externalFolders￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 final￨4 Iterator￨4 iterator￨4 =￨4 externalFolders￨4 .￨4 iterator￨4 (￨4 )￨4 ;￨4 Job￨4 refreshJob￨4 =￨4 new￨4 Job￨4 (￨4 Messages￨5 .￨5 refreshing_external_folders￨5 )￨4 {￨4 public￨5 boolean￨5 belongsTo￨5 (￨5 Object￨6 family￨6 )￨5 {￨5 return￨6 family￨6 ==￨6 (￨6 ResourcesPlugin￨6 .￨6 FAMILY_MANUAL_REFRESH￨6 )￨6 ;￨6 }￨5 protected￨5 IStatus￨5 run￨5 (￨5 IProgressMonitor￨6 pm￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 while￨7 (￨7 iterator￨8 .￨8 hasNext￨8 (￨8 )￨8 )￨7 {￨7 IPath￨8 externalPath￨8 =￨8 (￨8 (￨8 IPath￨8 )￨8 (￨8 iterator￨8 .￨8 next￨8 (￨8 )￨8 )￨8 )￨8 ;￨8 IFolder￨8 folder￨8 =￨8 getFolder￨8 (￨8 externalPath￨8 )￨8 ;￨8 if￨8 (￨8 folder￨9 !=￨9 null￨9 )￨8 {￨8 folder￨9 .￨9 refreshLocal￨9 (￨9 IResource￨9 .￨9 DEPTH_INFINITE￨9 ,￨9 pm￨9 )￨9 ;￨9 }￨8 }￨7 }￨6 catch￨6 (￨6 CoreException￨7 e￨7 )￨6 {￨6 return￨7 e￨7 .￨7 getStatus￨7 (￨7 )￨7 ;￨7 }￨6 return￨6 Status￨6 .￨6 OK_STATUS￨6 ;￨6 }￨5 }￨4 ;￨4 refreshJob￨4 .￨4 schedule￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 CoreException￨4 e￨4 )￨3 {￨3 Util￨4 .￨4 log￨4 (￨4 e￨4 ,￨4 "Exception<seq2seq4repair_space>while<seq2seq4repair_space>refreshing<seq2seq4repair_space>external<seq2seq4repair_space>project"￨4 )￨4 ;￨4 }￨3 return￨3 ;￨3 }￨2 public￨2 synchronized￨2 IFolder￨2 removeFolder￨2 (￨2 IPath￨3 externalFolderPath￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RequestResponseBodyMethodProcessor￨1 extends￨1 AbstractMessageConverterMethodProcessor￨1 {￨1 public￨2 RequestResponseBodyMethodProcessor￨2 (￨2 List￨3 <￨3 HttpMessageConverter￨3 <￨3 ?￨3 >￨3 >￨3 messageConverters￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsParameter￨2 (￨2 MethodParameter￨3 parameter￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsReturnType￨2 (￨2 MethodParameter￨3 returnType￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 resolveArgument￨2 (￨2 MethodParameter￨2 parameter￨2 ,￨2 ModelAndViewContainer￨2 mavContainer￨2 ,￨2 NativeWebRequest￨2 webRequest￨2 ,￨2 WebDataBinderFactory￨2 binderFactory￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 Object￨3 arg￨3 =￨3 readWithMessageConverters￨3 (￨3 webRequest￨3 ,￨3 parameter￨3 ,￨3 parameter￨3 .￨3 getParameterType￨3 (￨3 )￨3 )￨3 ;￨3 Annotation￨3 [￨3 ]￨3 annotations￨3 =￨3 parameter￨3 .￨3 getParameterAnnotations￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 Annotation￨4 annot￨4 :￨4 annotations￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 "Valid"￨4 .￨4 equals￨4 (￨4 annot￨4 .￨4 annotationType￨4 (￨4 )￨4 .￨4 getSimpleName￨4 (￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 String￨4 name￨4 =￨4 Conventions￨4 .￨4 getVariableNameForParameter￨4 (￨4 parameter￨4 )￨4 ;￨4 WebDataBinder￨4 binder￨4 =￨4 binderFactory￨4 .￨4 createBinder￨4 (￨4 webRequest￨4 ,￨4 arg￨4 ,￨4 name￨4 )￨4 ;￨4 Object￨4 hints￨4 =￨4 AnnotationUtils￨4 .￨4 getValue￨4 (￨4 annot￨4 )￨4 ;￨4 binder￨4 .￨4 validate￨4 (￨4 (￨4 hints￨4 instanceof￨4 Object￨4 [￨4 ]￨4 ?￨4 (￨4 (￨4 Object￨4 [￨4 ]￨4 )￨4 (￨4 hints￨4 )￨4 )￨4 :￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 )￨4 ;￨4 BindingResult￨4 bindingResult￨4 =￨4 binder￨4 .￨4 getBindingResult￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 bindingResult￨5 .￨5 hasErrors￨5 (￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 org￨5 .￨5 springframework￨5 .￨5 web￨5 .￨5 method￨5 .￨5 annotation￨5 .￨5 support￨5 .￨5 MethodArgumentNotValidException￨5 (￨5 parameter￨5 ,￨5 bindingResult￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 arg￨3 ;￨3 }￨2 public￨2 void￨2 handleReturnValue￨2 (￨2 Object￨2 returnValue￨2 ,￨2 MethodParameter￨2 returnType￨2 ,￨2 ModelAndViewContainer￨2 mavContainer￨2 ,￨2 NativeWebRequest￨2 webRequest￨2 )￨2 throws￨2 IOException￨2 ,￨2 HttpMediaTypeNotAcceptableException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ProgressFeedbackDialog￨1 extends￨1 Dialog￨1 {￨1 private￨2 IStructuredContentProvider￨2 provider￨2 ;￨2 ListViewer￨2 viewer￨2 ;￨2 public￨2 ProgressFeedbackDialog￨2 (￨2 IStructuredContentProvider￨3 contentProvider￨3 )￨2 {￨2 }￨2 private￨2 ILabelProvider￨2 getLabelProvider￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 refreshViewer￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 configureShell￨2 (￨2 Shell￨3 newShell￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createDialogArea￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 setBlockOnOpen￨3 (￨3 false￨3 )￨3 ;￨3 Composite￨3 mainArea￨3 =￨3 (￨3 (￨3 Composite￨3 )￨3 (￨3 super￨3 .￨3 createDialogArea￨3 (￨3 parent￨3 )￨3 )￨3 )￨3 ;￨3 viewer￨3 =￨3 new￨3 ListViewer￨3 (￨3 mainArea￨3 ,￨3 SWT￨3 .￨3 BORDER￨3 )￨3 ;￨3 GridData￨3 data￨3 =￨3 new￨3 GridData￨3 (￨3 (￨3 (￨3 (￨3 GridData￨3 .￨3 FILL_BOTH￨3 )￨3 |￨3 (￨3 GridData￨3 .￨3 GRAB_HORIZONTAL￨3 )￨3 )￨3 |￨3 (￨3 GridData￨3 .￨3 GRAB_VERTICAL￨3 )￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 data￨3 .￨3 widthHint￨3 =￨3 convertHorizontalDLUsToPixels￨3 (￨3 200￨3 )￨3 ;￨3 <END_BUG>￨3 data￨3 .￨3 heightHint￨3 =￨3 convertVerticalDLUsToPixels￨3 (￨3 100￨3 )￨3 ;￨3 viewer￨3 .￨3 getControl￨3 (￨3 )￨3 .￨3 setLayoutData￨3 (￨3 data￨3 )￨3 ;￨3 viewer￨3 .￨3 setContentProvider￨3 (￨3 provider￨3 )￨3 ;￨3 viewer￨3 .￨3 setLabelProvider￨3 (￨3 getLabelProvider￨3 (￨3 )￨3 )￨3 ;￨3 viewer￨3 .￨3 setInput￨3 (￨3 ProgressFeedbackManager￨3 .￨3 getFeedbackManager￨3 (￨3 )￨3 )￨3 ;￨3 viewer￨3 .￨3 addDoubleClickListener￨3 (￨3 new￨3 IDoubleClickListener￨3 (￨3 )￨3 {￨3 public￨4 void￨4 doubleClick￨4 (￨4 DoubleClickEvent￨5 event￨5 )￨4 {￨4 ISelection￨5 selection￨5 =￨5 event￨5 .￨5 getSelection￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 selection￨6 instanceof￨6 IStructuredSelection￨6 )￨5 {￨5 IStructuredSelection￨6 structured￨6 =￨6 (￨6 (￨6 IStructuredSelection￨6 )￨6 (￨6 selection￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 structured￨7 .￨7 size￨7 (￨7 )￨7 )￨7 >￨7 0￨7 )￨6 {￨6 AwaitingFeedbackInfo￨7 info￨7 =￨7 (￨7 (￨7 AwaitingFeedbackInfo￨7 )￨7 (￨7 structured￨7 .￨7 getFirstElement￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 info￨7 .￨7 getJob￨7 (￨7 )￨7 .￨7 schedule￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 return￨3 mainArea￨3 ;￨3 }￨2 protected￨2 void￨2 createButtonsForButtonBar￨2 (￨2 Composite￨3 parent￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ParameterizedTypeBinding￨1 extends￨1 ReferenceBinding￨1 implements￨1 Substitution￨1 {￨1 public￨2 ReferenceBinding￨2 type￨2 ;￨2 public￨2 TypeBinding￨2 [￨2 ]￨2 arguments￨2 ;￨2 public￨2 LookupEnvironment￨2 environment￨2 ;￨2 public￨2 char￨2 [￨2 ]￨2 genericTypeSignature￨2 ;￨2 public￨2 ReferenceBinding￨2 superclass￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 ;￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 ;￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 ;￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 ;￨2 public￨2 ReferenceBinding￨2 enclosingType￨2 ;￨2 public￨2 ParameterizedTypeBinding￨2 (￨2 ReferenceBinding￨3 type￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 arguments￨3 ,￨3 ReferenceBinding￨3 enclosingType￨3 ,￨3 LookupEnvironment￨3 environment￨3 )￨2 {￨2 }￨2 public￨2 void￨2 collectSubstitutes￨2 (￨2 TypeBinding￨3 otherType￨3 ,￨3 Map￨3 substitutes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 computeId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 constantPoolName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ParameterizedMethodBinding￨2 createParameterizedMethod￨2 (￨2 MethodBinding￨3 originalMethod￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 ParameterizedMethodBinding￨3 (￨3 this￨3 ,￨3 originalMethod￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 String￨2 debugName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 enclosingType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 erasure￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 fieldCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 [￨2 ]￨2 fields￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 genericTypeSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactConstructor￨2 (￨2 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 getExactMethod￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 ,￨3 CompilationUnitScope￨3 refScope￨3 )￨2 {￨2 }￨2 public￨2 FieldBinding￨2 getField￨2 (￨2 char￨3 [￨3 ]￨3 fieldName￨3 ,￨3 boolean￨3 needResolve￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 getMemberType￨2 (￨2 char￨3 [￨3 ]￨3 typeName￨3 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 getMethods￨2 (￨2 char￨3 [￨3 ]￨3 selector￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 hasMemberTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 implementsMethod￨2 (￨2 MethodBinding￨3 method￨3 )￨2 {￨2 }￨2 void￨2 initialize￨2 (￨2 ReferenceBinding￨3 someType￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 someArguments￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 initializeArguments￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEquivalentTo￨2 (￨2 TypeBinding￨3 otherType￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isParameterizedType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 memberTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 methods￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 qualifiedSourceName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 readableName￨2 (￨2 )￨2 {￨2 }￨2 ReferenceBinding￨2 resolve￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 shortReadableName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 signature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 sourceName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 substitute￨2 (￨2 TypeBinding￨3 originalType￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 superclass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 superInterfaces￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 swapUnresolved￨2 (￨2 UnresolvedReferenceBinding￨3 unresolvedType￨3 ,￨3 ReferenceBinding￨3 resolvedType￨3 ,￨3 LookupEnvironment￨3 env￨3 )￨2 {￨2 }￨2 public￨2 ReferenceBinding￨2 [￨2 ]￨2 syntheticEnclosingInstanceTypes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SyntheticArgumentBinding￨2 [￨2 ]￨2 syntheticOuterLocalVariables￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 qualifiedPackageName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypeVariableBinding￨2 [￨2 ]￨2 typeVariables￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Jaxb2MarshallerTests￨1 extends￨1 AbstractMarshallerTests￨1 {￨1 private￨2 static￨2 final￨2 String￨2 CONTEXT_PATH￨2 =￨2 "org.springframework.oxm.jaxb.test"￨2 ;￨2 private￨2 Jaxb2Marshaller￨2 marshaller￨2 ;￨2 private￨2 Flights￨2 flights￨2 ;￨2 @￨2 Override￨2 public￨2 Marshaller￨2 createMarshaller￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 Object￨2 createFlights￨2 (￨2 )￨2 {￨2 FlightType￨3 flight￨3 =￨3 new￨3 FlightType￨3 (￨3 )￨3 ;￨3 flight￨3 .￨3 setNumber￨3 (￨3 42L￨3 )￨3 ;￨3 flights￨3 =￨3 new￨3 Flights￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 flights￨3 .￨3 getFlight￨3 (￨3 )￨3 .￨3 configureBinding￨3 (￨3 flight￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 flights￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 marshalSAXResult￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 laxyInit￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 properties￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 (￨2 expected￨2 =￨2 IllegalArgumentException￨2 .￨2 class￨2 )￨2 public￨2 void￨2 noContextPathOrClassesToBeBound￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 @￨2 Test￨2 (￨2 expected￨2 =￨2 UncategorizedMappingException￨2 .￨2 class￨2 )￨2 public￨2 void￨2 testInvalidContextPath￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 @￨2 Test￨2 (￨2 expected￨2 =￨2 XmlMappingException￨2 .￨2 class￨2 )￨2 public￨2 void￨2 marshalInvalidClass￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 supportsContextPath￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 supportsClassesToBeBound￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 marshalAttachments￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Spinner￨1 extends￨1 Composite￨1 {￨1 public￨2 static￨2 final￨2 int￨2 LIMIT￨2 ;￨2 public￨2 Spinner￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 checkSubclass￨2 (￨2 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addModifyListener￨2 (￨2 ModifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 addVerifyListener￨2 (￨2 VerifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 Point￨2 computeSize￨2 (￨2 int￨3 wHint￨3 ,￨3 int￨3 hHint￨3 ,￨3 boolean￨3 changed￨3 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 copy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 cut￨2 (￨2 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 int￨2 defaultBackground￨2 (￨2 )￨2 {￨2 }￨2 int￨2 defaultForeground￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getDigits￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getIncrement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getMaximum￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getMinimum￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getPageIncrement￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getSelection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getText￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getTextLimit￨2 (￨2 )￨2 {￨2 checkWidget￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 0￨3 ;￨3 <END_BUG>￨3 }￨2 boolean￨2 hasFocus￨2 (￨2 )￨2 {￨2 }￨2 void￨2 hookEvents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 paste￨2 (￨2 )￨2 {￨2 }￨2 int￨2 Pt_CB_NUMERIC_CHANGED￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 info￨3 )￨2 {￨2 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeModifyListener￨2 (￨2 ModifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 removeSelectionListener￨2 (￨2 SelectionListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 removeVerifyListener￨2 (￨2 VerifyListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setDigits￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncrement￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMaximum￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimum￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setPageIncrement￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSelection￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTextLimit￨2 (￨2 int￨3 limit￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setValues￨2 (￨2 int￨3 selection￨3 ,￨3 int￨3 minimum￨3 ,￨3 int￨3 maximum￨3 ,￨3 int￨3 digits￨3 ,￨3 int￨3 increment￨3 ,￨3 int￨3 pageIncrement￨3 )￨2 {￨2 }￨2 boolean￨2 translateTraversal￨2 (￨2 int￨3 key_sym￨3 ,￨3 PhKeyEvent_t￨3 phEvent￨3 )￨2 {￨2 }￨2 int￨2 widgetClass￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FieldInfo￨1 extends￨1 ClassFileStruct￨1 implements￨1 Comparable￨1 ,￨1 AttributeNamesConstants￨1 ,￨1 IBinaryField￨1 ,￨1 TypeIds￨1 {￨1 private￨2 int￨2 accessFlags￨2 ;￨2 private￨2 int￨2 attributeBytes￨2 ;￨2 private￨2 Constant￨2 constant￨2 ;￨2 private￨2 int￨2 [￨2 ]￨2 constantPoolOffsets￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 descriptor￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 name￨2 ;￨2 private￨2 char￨2 [￨2 ]￨2 signature￨2 ;￨2 private￨2 int￨2 signatureUtf8Offset￨2 ;￨2 private￨2 long￨2 tagBits￨2 ;￨2 private￨2 Object￨2 wrappedConstantValue￨2 ;￨2 public￨2 FieldInfo￨2 (￨2 byte￨3 [￨3 ]￨3 classFileBytes￨3 ,￨3 int￨3 [￨3 ]￨3 offsets￨3 ,￨3 int￨3 offset￨3 )￨2 {￨2 }￨2 public￨2 int￨2 compareTo￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 private￨2 int￨2 decodeAnnotation￨2 (￨2 int￨3 offset￨3 )￨2 {￨2 }￨2 private￨2 int￨2 decodeElementValue￨2 (￨2 int￨3 offset￨3 )￨2 {￨2 }￨2 private￨2 void￨2 decodeStandardAnnotations￨2 (￨2 int￨3 offset￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 getConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getGenericSignature￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getModifiers￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 long￨2 getTagBits￨2 (￨2 )￨2 {￨2 }￨2 public￨2 char￨2 [￨2 ]￨2 getTypeName￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getWrappedConstantValue￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 wrappedConstantValue￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 if￨4 (￨4 hasConstant￨5 (￨5 )￨5 )￨4 {￨4 Constant￨5 fieldConstant￨5 =￨5 getConstant￨5 (￨5 )￨5 ;￨5 switch￨5 (￨5 fieldConstant￨5 .￨5 typeID￨5 (￨5 )￨5 )￨5 {￨5 case￨6 TypeIds￨6 .￨6 T_int￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Integer￨7 (￨7 fieldConstant￨7 .￨7 intValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_byte￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Byte￨7 (￨7 fieldConstant￨7 .￨7 byteValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_short￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Short￨7 (￨7 fieldConstant￨7 .￨7 shortValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_char￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Character￨7 (￨7 fieldConstant￨7 .￨7 charValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_float￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Float￨7 (￨7 fieldConstant￨7 .￨7 floatValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_double￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Double￨7 (￨7 fieldConstant￨7 .￨7 doubleValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_boolean￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 Util￨7 .￨7 toBoolean￨7 (￨7 fieldConstant￨7 .￨7 booleanValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 case￨6 TypeIds￨6 .￨6 T_long￨6 :￨6 this￨7 .￨7 wrappedConstantValue￨7 =￨7 new￨7 Long￨7 (￨7 fieldConstant￨7 .￨7 longValue￨7 (￨7 )￨7 )￨7 ;￨7 break￨7 ;￨7 <START_BUG>￨7 <END_BUG>￨7 case￨6 T_String￨6 :￨6 <END_BUG>￨7 this￨7 .￨7 wrappedConstantValue￨7 =￨7 fieldConstant￨7 .￨7 stringValue￨7 (￨7 )￨7 ;￨7 }￨5 }￨4 }￨3 return￨3 this￨3 .￨3 wrappedConstantValue￨3 ;￨3 }￨2 public￨2 boolean￨2 hasConstant￨2 (￨2 )￨2 {￨2 }￨2 void￨2 initialize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isSynthetic￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readConstantAttribute￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readModifierRelatedAttributes￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 sizeInBytes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 throwFormatException￨2 (￨2 )￨2 throws￨2 ClassFormatException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ModClusterEnableContext￨1 implements￨1 OperationStepHandler￨1 {￨1 static￨2 final￨2 ModClusterEnableContext￨2 INSTANCE￨2 =￨2 new￨2 ModClusterEnableContext￨2 (￨2 )￨2 ;￨2 static￨2 OperationDefinition￨2 getDefinition￨2 (￨2 ResourceDescriptionResolver￨3 descriptionResolver￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 context￨4 .￨4 isNormalServer￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 context￨4 .￨4 getServiceRegistry￨4 (￨4 false￨4 )￨4 .￨4 getService￨4 (￨4 SERVICE_NAME￨4 )￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 context￨4 .￨4 addStep￨4 (￨4 new￨4 OperationStepHandler￨4 (￨4 )￨4 {￨4 @￨5 Override￨5 public￨5 void￨5 execute￨5 (￨5 OperationContext￨5 context￨5 ,￨5 ModelNode￨5 operation￨5 )￨5 throws￨5 OperationFailedException￨5 (￨5 )￨5 {￨5 ServiceController￨6 <￨6 ?￨6 >￨6 controller￨6 =￨6 context￨6 .￨6 getServiceRegistry￨6 (￨6 false￨6 )￨6 .￨6 getService￨6 (￨6 SERVICE_NAME￨6 )￨6 ;￨6 final￨6 ModClusterServiceMBean￨6 service￨6 =￨6 (￨6 (￨6 ModClusterServiceMBean￨6 )￨6 (￨6 controller￨6 .￨6 getValue￨6 (￨6 )￨6 )￨6 )￨6 ;￨6 ModClusterLogger￨6 .￨6 ROOT_LOGGER￨6 .￨6 debugf￨6 (￨6 "enable-context:<seq2seq4repair_space>%s"￨6 ,￨6 operation￨6 )￨6 ;￨6 final￨6 String￨6 webHost￨6 =￨6 ModClusterSubsystemResourceDefinition￨6 .￨6 VIRTUAL_HOST￨6 .￨6 resolveModelAttribute￨6 (￨6 context￨6 ,￨6 operation￨6 )￨6 .￨6 asString￨6 (￨6 )￨6 ;￨6 final￨6 String￨6 webContext￨6 =￨6 ModClusterSubsystemResourceDefinition￨6 .￨6 CONTEXT￨6 .￨6 resolveModelAttribute￨6 (￨6 context￨6 ,￨6 operation￨6 )￨6 .￨6 asString￨6 (￨6 )￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 service￨7 .￨7 enableContext￨7 (￨7 webHost￨7 ,￨7 webContext￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 IllegalArgumentException￨7 e￨7 )￨6 {￨6 <START_BUG>￨7 throw￨7 new￨7 OperationFailedException￨7 (￨7 new￨7 ModelNode￨7 (￨7 )￨7 .￨7 set￨7 (￨7 ROOT_LOGGER￨7 .￨7 contextOrHostNotFound￨7 (￨7 webHost￨7 ,￨7 webContext￨7 )￨7 )￨7 )￨7 ;￨7 <END_BUG>￨7 }￨6 context￨6 .￨6 completeStep￨6 (￨6 new￨6 OperationContext￨6 .￨6 RollbackHandler￨6 (￨6 )￨6 {￨6 @￨7 Override￨7 public￨7 void￨7 handleRollback￨7 (￨7 OperationContext￨8 context￨8 ,￨8 ModelNode￨8 operation￨8 )￨7 {￨7 service￨8 .￨8 disableContext￨8 (￨8 webHost￨8 ,￨8 webContext￨8 )￨8 ;￨8 }￨7 }￨6 )￨6 ;￨6 }￨5 }￨4 ,￨4 RUNTIME￨4 )￨4 ;￨4 }￨3 context￨3 .￨3 stepCompleted￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ConstantInitializer￨1 <￨1 T￨1 >￨1 implements￨1 ConcurrentInitializer￨1 <￨1 T￨1 >￨1 {￨1 private￨2 static￨2 final￨2 String￨2 FMT_TO_STRING￨2 =￨2 "ConstantInitializer@%d<seq2seq4repair_space>[<seq2seq4repair_space>object<seq2seq4repair_space>=<seq2seq4repair_space>%s<seq2seq4repair_space>]"￨2 ;￨2 private￨2 final￨2 T￨2 object￨2 ;￨2 public￨2 ConstantInitializer￨2 (￨2 final￨3 T￨3 obj￨3 )￨2 {￨2 }￨2 public￨2 final￨2 T￨2 getObject￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 T￨2 get￨2 (￨2 )￨2 throws￨2 ConcurrentException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 final￨3 Object￨3 obj￨3 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 )￨4 ==￨4 obj￨4 )￨3 {￨3 return￨4 true￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 obj￨4 instanceof￨4 ConstantInitializer￨4 <￨4 ?￨4 >￨4 )￨4 )￨3 {￨3 return￨4 false￨4 ;￨4 }￨3 <START_BUG>￨3 ConstantInitializer￨3 <￨3 ?￨3 >￨3 c￨3 =￨3 (￨3 (￨3 ConstantInitializer￨3 <￨3 ?￨3 >￨3 )￨3 (￨3 obj￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 ObjectUtils￨3 .￨3 equals￨3 (￨3 getObject￨3 (￨3 )￨3 ,￨3 c￨3 .￨3 getObject￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 WriteAttributeHandlers￨1 {￨1 public￨2 static￨2 class￨2 WriteAttributeOperationHandler￨2 implements￨2 ModelUpdateOperationHandler￨2 {￨2 public￨3 static￨3 OperationHandler￨3 INSTANCE￨3 =￨3 new￨3 WriteAttributeHandlers￨3 .￨3 WriteAttributeOperationHandler￨3 (￨3 )￨3 ;￨3 final￨3 ParameterValidator￨3 validator￨3 ;￨3 private￨3 WriteAttributeOperationHandler￨3 (￨3 )￨3 {￨3 }￨3 protected￨3 WriteAttributeOperationHandler￨3 (￨3 ParameterValidator￨4 validator￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Cancellable￨3 execute￨3 (￨3 final￨4 NewOperationContext￨4 context￨4 ,￨4 final￨4 ModelNode￨4 operation￨4 ,￨4 final￨4 ResultHandler￨4 resultHandler￨4 )￨3 {￨3 Cancellable￨4 cancellable￨4 =￨4 Cancellable￨4 .￨4 NULL￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 final￨5 String￨5 name￨5 =￨5 operation￨5 .￨5 require￨5 (￨5 NAME￨5 )￨5 .￨5 asString￨5 (￨5 )￨5 ;￨5 final￨5 ModelNode￨5 value￨5 =￨5 operation￨5 .￨5 get￨5 (￨5 VALUE￨5 )￨5 ;￨5 String￨5 error￨5 =￨5 validateValue￨5 (￨5 name￨5 ,￨5 value￨5 )￨5 ;￨5 if￨5 (￨5 error￨6 !=￨6 null￨6 )￨5 {￨5 resultHandler￨6 .￨6 handleFailed￨6 (￨6 new￨6 ModelNode￨6 (￨6 )￨6 .￨6 set￨6 (￨6 error￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 <START_BUG>￨6 context￨6 .￨6 getSubModel￨6 (￨6 )￨6 .￨6 require￨6 (￨6 name￨6 )￨6 .￨6 set￨6 (￨6 value￨6 )￨6 ;￨6 <END_BUG>￨6 resultHandler￨6 .￨6 handleResultComplete￨6 (￨6 null￨6 )￨6 ;￨6 }￨5 }￨4 catch￨4 (￨4 final￨5 Exception￨5 e￨5 )￨4 {￨4 resultHandler￨5 .￨5 handleFailed￨5 (￨5 new￨5 ModelNode￨5 (￨5 )￨5 .￨5 set￨5 (￨5 e￨5 .￨5 getMessage￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 return￨4 cancellable￨4 ;￨4 }￨3 protected￨3 String￨3 validateValue￨3 (￨3 String￨4 name￨4 ,￨4 ModelNode￨4 value￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 ModelTypeValidatingHandler￨2 extends￨2 WriteAttributeHandlers￨2 .￨2 WriteAttributeOperationHandler￨2 {￨2 public￨3 ModelTypeValidatingHandler￨3 (￨3 final￨4 ModelType￨4 type￨4 )￨3 {￨3 }￨3 public￨3 ModelTypeValidatingHandler￨3 (￨3 final￨4 ModelType￨4 type￨4 ,￨4 final￨4 boolean￨4 nullable￨4 )￨3 {￨3 }￨3 public￨3 ModelTypeValidatingHandler￨3 (￨3 final￨4 ModelType￨4 type￨4 ,￨4 final￨4 boolean￨4 nullable￨4 ,￨4 final￨4 boolean￨4 allowExpressions￨4 )￨3 {￨3 }￨3 public￨3 ModelTypeValidatingHandler￨3 (￨3 final￨4 boolean￨4 nullable￨4 ,￨4 final￨4 boolean￨4 allowExpressions￨4 ,￨4 ModelType￨4 firstValidType￨4 ,￨4 ModelType￨4 ...￨4 otherValidTypes￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 StringLengthValidatingHandler￨2 extends￨2 WriteAttributeHandlers￨2 .￨2 WriteAttributeOperationHandler￨2 {￨2 public￨3 StringLengthValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 )￨3 {￨3 }￨3 public￨3 StringLengthValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 ,￨4 final￨4 boolean￨4 nullable￨4 )￨3 {￨3 }￨3 public￨3 StringLengthValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 ,￨4 final￨4 int￨4 max￨4 ,￨4 final￨4 boolean￨4 nullable￨4 ,￨4 final￨4 boolean￨4 allowExpressions￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 IntRangeValidatingHandler￨2 extends￨2 WriteAttributeHandlers￨2 .￨2 WriteAttributeOperationHandler￨2 {￨2 public￨3 IntRangeValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 )￨3 {￨3 }￨3 public￨3 IntRangeValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 ,￨4 final￨4 boolean￨4 nullable￨4 )￨3 {￨3 }￨3 public￨3 IntRangeValidatingHandler￨3 (￨3 final￨4 int￨4 min￨4 ,￨4 final￨4 int￨4 max￨4 ,￨4 final￨4 boolean￨4 nullable￨4 ,￨4 final￨4 boolean￨4 allowExpressions￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 InetAddressValidatingHandler￨2 extends￨2 WriteAttributeHandlers￨2 .￨2 WriteAttributeOperationHandler￨2 {￨2 public￨3 InetAddressValidatingHandler￨3 (￨3 final￨4 boolean￨4 nullable￨4 ,￨4 final￨4 boolean￨4 allowExpressions￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 class￨2 ListValidatatingHandler￨2 extends￨2 WriteAttributeHandlers￨2 .￨2 WriteAttributeOperationHandler￨2 {￨2 public￨3 ListValidatatingHandler￨3 (￨3 ParameterValidator￨4 elementValidator￨4 )￨3 {￨3 }￨3 public￨3 ListValidatatingHandler￨3 (￨3 ParameterValidator￨4 elementValidator￨4 ,￨4 boolean￨4 nullable￨4 )￨3 {￨3 }￨3 public￨3 ListValidatatingHandler￨3 (￨3 ParameterValidator￨4 elementValidator￨4 ,￨4 boolean￨4 nullable￨4 ,￨4 int￨4 minSize￨4 ,￨4 int￨4 maxSize￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 EJB3SubsystemXMLPersister￨1 implements￨1 XMLElementWriter￨1 <￨1 SubsystemMarshallingContext￨1 >￨1 {￨1 public￨2 static￨2 final￨2 EJB3SubsystemXMLPersister￨2 INSTANCE￨2 =￨2 new￨2 EJB3SubsystemXMLPersister￨2 (￨2 )￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 writeContent￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 SubsystemMarshallingContext￨2 context￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 context￨3 .￨3 startSubsystemElement￨3 (￨3 EJB3_1_5￨3 .￨3 getUriString￨3 (￨3 )￨3 ,￨3 false￨3 )￨3 ;￨3 <END_BUG>￨3 writeElements￨3 (￨3 writer￨3 ,￨3 context￨3 )￨3 ;￨3 writer￨3 .￨3 writeEndElement￨3 (￨3 )￨3 ;￨3 }￨2 protected￨2 void￨2 writeElements￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 SubsystemMarshallingContext￨2 context￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeIIOP￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeThreadPools￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 threadPoolsModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 writeRemote￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeAsync￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeMDB￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 mdbModelNode￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeEntityBean￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 entityModelNode￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeSingletonBean￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 singletonBeanModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeStatefulBean￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 statefulBeanModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeDefaultSLSBPool￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeBeanInstancePools￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 beanInstancePoolModelNode￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeStrictMaxPoolConfig￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 Property￨2 strictMaxPoolModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeCaches￨2 (￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeClusterPassivationStores￨2 (￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeFilePassivationStores￨2 (￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 ModelNode￨2 model￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeTimerService￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 timerServiceModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeDatabaseDataStores￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 timerServiceModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeFileDataStores￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 timerServiceModel￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeChannelCreationOptions￨2 (￨2 final￨2 XMLExtendedStreamWriter￨2 writer￨2 ,￨2 final￨2 ModelNode￨2 node￨2 )￨2 throws￨2 XMLStreamException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SingleNameReference￨1 extends￨1 NameReference￨1 implements￨1 OperatorIds￨1 {￨1 public￨2 char￨2 [￨2 ]￨2 token￨2 ;￨2 public￨2 MethodBinding￨2 [￨2 ]￨2 syntheticAccessors￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 READ￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 final￨2 int￨2 WRITE￨2 =￨2 1￨2 ;￨2 public￨2 SingleNameReference￨2 (￨2 char￨3 [￨3 ]￨3 source￨3 ,￨3 long￨3 pos￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 isCompound￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 checkFieldAccess￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 FieldBinding￨3 fieldBinding￨3 =￨3 (￨3 (￨3 FieldBinding￨3 )￨3 (￨3 binding￨3 )￨3 )￨3 ;￨3 bits￨3 &=￨3 ~￨3 (￨3 ASTNode￨3 .￨3 RestrictiveFlagMASK￨3 )￨3 ;￨3 bits￨3 |=￨3 FIELD￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 (￨4 (￨4 FieldBinding￨4 )￨4 (￨4 binding￨4 )￨4 )￨4 .￨4 isStatic￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 scope￨5 .￨5 methodScope￨5 (￨5 )￨5 .￨5 isStatic￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 staticFieldAccessToNonStaticVariable￨5 (￨5 this￨5 ,￨5 fieldBinding￨5 )￨5 ;￨5 constant￨5 =￨5 NotAConstant￨5 ;￨5 return￨5 null￨5 ;￨5 }￨4 }￨3 <START_BUG>￨3 constant￨3 =￨3 FieldReference￨3 .￨3 getConstantFor￨3 (￨3 fieldBinding￨3 ,￨3 true￨3 ,￨3 this￨3 ,￨3 0￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 isFieldUseDeprecated￨4 (￨4 fieldBinding￨4 ,￨4 scope￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 problemReporter￨4 (￨4 )￨4 .￨4 deprecatedField￨4 (￨4 fieldBinding￨4 ,￨4 this￨4 )￨4 ;￨4 }￨3 MethodScope￨3 ms￨3 =￨3 scope￨3 .￨3 methodScope￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 (￨4 ms￨4 .￨4 enclosingSourceType￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 fieldBinding￨4 .￨4 declaringClass￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 ms￨4 .￨4 fieldDeclarationIndex￨4 )￨4 !=￨4 (￨4 ms￨4 .￨4 NotInFieldDecl￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 (￨4 fieldBinding￨4 .￨4 id￨4 )￨4 >=￨4 (￨4 ms￨4 .￨4 fieldDeclarationIndex￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 !￨5 (￨5 fieldBinding￨5 .￨5 isStatic￨5 (￨5 )￨5 )￨5 )￨5 ||￨5 (￨5 ms￨5 .￨5 isStatic￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 problemReporter￨5 (￨5 )￨5 .￨5 forwardReference￨5 (￨5 this￨5 ,￨5 0￨5 ,￨5 scope￨5 .￨5 enclosingSourceType￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 fieldBinding￨3 .￨3 type￨3 ;￨3 }￨2 public￨2 void￨2 generateAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Assignment￨3 assignment￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCompoundAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 assignmentImplicitConversion￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCompoundAssignment￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 MethodBinding￨3 writeAccessor￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 assignmentImplicitConversion￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generatePostIncrement￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 CompoundAssignment￨3 postIncrement￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateReceiver￨2 (￨2 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 manageEnclosingInstanceAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticReadAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 manageSyntheticWriteAccessIfNecessary￨2 (￨2 BlockScope￨3 currentScope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 reportError￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toStringExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 unboundReferenceErrorName￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Session￨1 implements￨1 IClusterable￨1 ,￨1 IEventSink￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 Session￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 SESSION_ATTRIBUTE_NAME￨2 =￨2 "session"￨2 ;￨2 private￨2 int￨2 sequence￨2 =￨2 1￨2 ;￨2 private￨2 int￨2 pageId￨2 =￨2 0￨2 ;￨2 public￨2 static￨2 boolean￨2 exists￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Session￨2 get￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ClientInfo￨2 clientInfo￨2 ;￨2 private￨2 transient￨2 boolean￨2 dirty￨2 =￨2 false￨2 ;￨2 private￨2 final￨2 FeedbackMessages￨2 feedbackMessages￨2 =￨2 new￨2 FeedbackMessages￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 id￨2 =￨2 null￨2 ;￨2 private￨2 Locale￨2 locale￨2 ;￨2 private￨2 MetaDataEntry￨2 <￨2 ?￨2 >￨2 [￨2 ]￨2 metaData￨2 ;￨2 private￨2 transient￨2 boolean￨2 sessionInvalidated￨2 =￨2 false￨2 ;￨2 private￨2 transient￨2 ISessionStore￨2 sessionStore￨2 ;￨2 private￨2 String￨2 style￨2 ;￨2 private￨2 transient￨2 Map￨2 <￨2 String￨2 ,￨2 Serializable￨2 >￨2 temporarySessionAttributes￨2 ;￨2 public￨2 Session￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 bind￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 cleanupFeedbackMessages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 error￨2 (￨2 final￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Application￨2 getApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IAuthorizationStrategy￨2 getAuthorizationStrategy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IClassResolver￨2 getClassResolver￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 ClientInfo￨2 getClientInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 FeedbackMessages￨2 getFeedbackMessages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Locale￨2 getLocale￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 <￨2 M￨2 extends￨2 Serializable￨2 >￨2 M￨2 getMetaData￨2 (￨2 final￨3 MetaDataKey￨3 <￨3 M￨3 >￨3 key￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isCurrentRequestValid￨2 (￨2 RequestCycle￨3 lockedRequestCycle￨3 )￨2 {￨2 }￨2 public￨2 final￨2 IPageFactory￨2 getPageFactory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 long￨2 getSizeInBytes￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 String￨2 getStyle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 info￨2 (￨2 final￨3 String￨3 message￨3 )￨2 {￨2 }￨2 public￨2 void￨2 invalidate￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 sessionInvalidated￨4 )￨4 ==￨4 false￨4 )￨3 {￨3 RequestCycle￨4 .￨4 get￨4 (￨4 )￨4 .￨4 getListeners￨4 (￨4 )￨4 .￨4 add￨4 (￨4 new￨4 AbstractRequestCycleListener￨4 (￨4 )￨4 {￨4 @￨5 Override￨5 public￨5 void￨5 onDetach￨5 (￨5 final￨6 RequestCycle￨6 cycle￨6 )￨5 {￨5 <START_BUG>￨6 destroy￨6 (￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 )￨4 ;￨4 }￨3 sessionInvalidated￨3 =￨3 true￨3 ;￨3 }￨2 private￨2 void￨2 destroy￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 invalidateNow￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 replaceSession￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isSessionInvalidated￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 isTemporary￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setClientInfo￨2 (￨2 ClientInfo￨3 clientInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setLocale￨2 (￨2 final￨3 Locale￨3 locale￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setMetaData￨2 (￨2 final￨3 MetaDataKey￨3 <￨3 ?￨3 >￨3 key￨3 ,￨3 final￨3 Serializable￨3 object￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Session￨2 setStyle￨2 (￨2 final￨3 String￨3 style￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 warn￨2 (￨2 final￨3 String￨3 message￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addFeedbackMessage￨2 (￨2 String￨3 message￨3 ,￨3 int￨3 level￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 detach￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 dirty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Serializable￨2 getAttribute￨2 (￨2 final￨3 String￨3 name￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 List￨2 <￨2 String￨2 >￨2 getAttributeNames￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ISessionStore￨2 getSessionStore￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 removeAttribute￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setAttribute￨2 (￨2 String￨3 name￨3 ,￨3 Serializable￨3 value￨3 )￨2 {￨2 }￨2 public￨2 synchronized￨2 int￨2 nextSequenceValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 synchronized￨2 int￨2 nextPageId￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IPageManager￨2 getPageManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 onEvent￨2 (￨2 IEvent￨3 <￨3 ?￨3 >￨3 event￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CommitWorkingCopyOperation￨1 extends￨1 JavaModelOperation￨1 {￨1 public￨2 CommitWorkingCopyOperation￨2 (￨2 ICompilationUnit￨3 element￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 executeOperation￨2 (￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 beginTask￨4 (￨4 Util￨4 .￨4 bind￨4 (￨4 "workingCopy.commit"￨4 )￨4 ,￨4 2￨4 )￨4 ;￨4 CompilationUnit￨4 workingCopy￨4 =￨4 (￨4 (￨4 CompilationUnit￨4 )￨4 (￨4 getCompilationUnit￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 IFile￨4 resource￨4 =￨4 (￨4 (￨4 IFile￨4 )￨4 (￨4 workingCopy￨4 .￨4 getResource￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 ICompilationUnit￨4 primary￨4 =￨4 workingCopy￨4 .￨4 getPrimary￨4 (￨4 )￨4 ;￨4 boolean￨4 isPrimary￨4 =￨4 workingCopy￨4 .￨4 isPrimary￨4 (￨4 )￨4 ;￨4 JavaElementDeltaBuilder￨4 deltaBuilder￨4 =￨4 null￨4 ;￨4 PackageFragmentRoot￨4 root￨4 =￨4 (￨4 (￨4 PackageFragmentRoot￨4 )￨4 (￨4 workingCopy￨4 .￨4 getAncestor￨4 (￨4 IJavaElement￨4 .￨4 PACKAGE_FRAGMENT_ROOT￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 isPrimary￨4 ||￨4 (￨4 (￨4 root￨4 .￨4 isOnClasspath￨4 (￨4 )￨4 )￨4 &&￨4 (￨4 resource￨4 .￨4 isAccessible￨4 (￨4 )￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 !￨5 isPrimary￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 primary￨5 .￨5 isOpen￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 primary￨5 .￨5 open￨5 (￨5 null￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 !￨5 (￨5 Util￨5 .￨5 isExcluded￨5 (￨5 workingCopy￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 !￨5 isPrimary￨5 )￨5 ||￨5 (￨5 !￨5 (￨5 workingCopy￨5 .￨5 isConsistent￨5 (￨5 )￨5 )￨5 )￨5 )￨5 )￨4 {￨4 deltaBuilder￨5 =￨5 new￨5 JavaElementDeltaBuilder￨5 (￨5 primary￨5 )￨5 ;￨5 }￨4 IBuffer￨4 primaryBuffer￨4 =￨4 primary￨4 .￨4 getBuffer￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 isPrimary￨5 )￨4 {￨4 if￨5 (￨5 primaryBuffer￨6 ==￨6 null￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 char￨5 [￨5 ]￨5 primaryContents￨5 =￨5 primaryBuffer￨5 .￨5 getCharacters￨5 (￨5 )￨5 ;￨5 boolean￨5 hasSaved￨5 =￨5 false￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 IBuffer￨6 workingCopyBuffer￨6 =￨6 workingCopy￨6 .￨6 getBuffer￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 workingCopyBuffer￨7 ==￨7 null￨7 )￨6 {￨6 return￨7 ;￨7 }￨6 primaryBuffer￨6 .￨6 setContents￨6 (￨6 workingCopyBuffer￨6 .￨6 getCharacters￨6 (￨6 )￨6 )￨6 ;￨6 primaryBuffer￨6 .￨6 save￨6 (￨6 fMonitor￨6 ,￨6 fForce￨6 )￨6 ;￨6 primary￨6 .￨6 makeConsistent￨6 (￨6 this￨6 )￨6 ;￨6 hasSaved￨6 =￨6 true￨6 ;￨6 }￨5 finally￨5 (￨5 )￨5 {￨5 if￨6 (￨6 !￨7 hasSaved￨7 )￨6 {￨6 primaryBuffer￨7 .￨7 setContents￨7 (￨7 primaryContents￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 else￨4 {￨4 primaryBuffer￨5 .￨5 save￨5 (￨5 fMonitor￨5 ,￨5 fForce￨5 )￨5 ;￨5 primary￨5 .￨5 makeConsistent￨5 (￨5 this￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 String￨5 encoding￨5 =￨5 workingCopy￨5 .￨5 getJavaProject￨5 (￨5 )￨5 .￨5 getOption￨5 (￨5 JavaCore￨5 .￨5 CORE_ENCODING￨5 ,￨5 true￨5 )￨5 ;￨5 String￨5 contents￨5 =￨5 workingCopy￨5 .￨5 getSource￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 contents￨6 ==￨6 null￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 try￨5 (￨5 )￨5 {￨5 byte￨6 [￨6 ]￨6 bytes￨6 =￨6 (￨6 encoding￨6 ==￨6 null￨6 )￨6 ?￨6 contents￨6 .￨6 getBytes￨6 (￨6 )￨6 :￨6 contents￨6 .￨6 getBytes￨6 (￨6 encoding￨6 )￨6 ;￨6 ByteArrayInputStream￨6 stream￨6 =￨6 new￨6 ByteArrayInputStream￨6 (￨6 bytes￨6 )￨6 ;￨6 if￨6 (￨6 resource￨7 .￨7 exists￨7 (￨7 )￨7 )￨6 {￨6 resource￨7 .￨7 setContents￨7 (￨7 stream￨7 ,￨7 (￨7 fForce￨7 ?￨7 (￨7 IResource￨7 .￨7 FORCE￨7 )￨7 |￨7 (￨7 IResource￨7 .￨7 KEEP_HISTORY￨7 )￨7 :￨7 IResource￨7 .￨7 KEEP_HISTORY￨7 )￨7 ,￨7 null￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 resource￨7 .￨7 create￨7 (￨7 stream￨7 ,￨7 fForce￨7 ,￨7 fMonitor￨7 )￨7 ;￨7 }￨6 }￨5 catch￨5 (￨5 CoreException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 JavaModelException￨6 (￨6 e￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 UnsupportedEncodingException￨6 e￨6 )￨5 {￨5 throw￨6 new￨6 JavaModelException￨6 (￨6 e￨6 ,￨6 IJavaModelStatusConstants￨6 .￨6 IO_EXCEPTION￨6 )￨6 ;￨6 }￨5 }￨4 JavaModelOperation￨4 .￨4 setAttribute￨4 (￨4 JavaModelOperation￨4 .￨4 HAS_MODIFIED_RESOURCE_ATTR￨4 ,￨4 JavaModelOperation￨4 .￨4 TRUE￨4 )￨4 ;￨4 workingCopy￨4 .￨4 updateTimeStamp￨4 (￨4 (￨4 (￨4 CompilationUnit￨4 )￨4 (￨4 primary￨4 )￨4 )￨4 )￨4 ;￨4 workingCopy￨4 .￨4 makeConsistent￨4 (￨4 this￨4 )￨4 ;￨4 worked￨4 (￨4 1￨4 )￨4 ;￨4 if￨4 (￨4 deltaBuilder￨5 !=￨5 null￨5 )￨4 {￨4 deltaBuilder￨5 .￨5 buildDeltas￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 deltaBuilder￨6 .￨6 delta￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 addDelta￨6 (￨6 deltaBuilder￨6 .￨6 delta￨6 )￨6 ;￨6 }￨5 }￨4 worked￨4 (￨4 1￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 done￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 ICompilationUnit￨2 getCompilationUnit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IJavaModelStatus￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Shell￨1 extends￨1 Decorations￨1 {￨1 int￨2 shellHandle￨2 ;￨2 int￨2 tooltipsHandle￨2 ;￨2 boolean￨2 mapped￨2 ;￨2 boolean￨2 moved￨2 ;￨2 boolean￨2 resized￨2 ;￨2 boolean￨2 opened￨2 ;￨2 int￨2 oldX￨2 ;￨2 int￨2 oldY￨2 ;￨2 int￨2 oldWidth￨2 ;￨2 int￨2 oldHeight￨2 ;￨2 int￨2 minWidth￨2 ;￨2 int￨2 minHeight￨2 ;￨2 Control￨2 lastActive￨2 ;￨2 Region￨2 region￨2 ;￨2 public￨2 Shell￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Display￨3 display￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Display￨3 display￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 Shell￨2 (￨2 Display￨3 display￨3 ,￨3 Shell￨3 parent￨3 ,￨3 int￨3 style￨3 ,￨3 int￨3 handle￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Shell￨3 parent￨3 )￨2 {￨2 }￨2 public￨2 Shell￨2 (￨2 Shell￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Shell￨2 gtk_new￨2 (￨2 Display￨3 display￨3 ,￨3 int￨3 handle￨3 )￨2 {￨2 }￨2 static￨2 int￨2 checkStyle￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addShellListener￨2 (￨2 ShellListener￨3 listener￨3 )￨2 {￨2 }￨2 void￨2 adjustTrim￨2 (￨2 )￨2 {￨2 }￨2 void￨2 bringToTop￨2 (￨2 boolean￨3 force￨3 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 OS￨4 .￨4 GTK_WIDGET_VISIBLE￨4 (￨4 shellHandle￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 Display￨3 display￨3 =￨3 this￨3 .￨3 display￨3 ;￨3 Shell￨3 activeShell￨3 =￨3 display￨3 .￨3 activeShell￨3 ;￨3 if￨3 (￨3 activeShell￨4 ==￨4 (￨4 this￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 force￨4 )￨3 {￨3 if￨4 (￨4 activeShell￨5 ==￨5 null￨5 )￨4 {￨4 return￨5 ;￨5 }￨4 int￨4 focusHandle￨4 =￨4 OS￨4 .￨4 gtk_window_get_focus￨4 (￨4 activeShell￨4 .￨4 shellHandle￨4 )￨4 ;￨4 if￨4 (￨4 focusHandle￨5 !=￨5 0￨5 )￨4 {￨4 if￨5 (￨5 !￨6 (￨6 OS￨6 .￨6 GTK_WIDGET_HAS_FOCUS￨6 (￨6 focusHandle￨6 )￨6 )￨6 )￨5 {￨5 return￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 activeShell￨4 !=￨4 null￨4 )￨3 {￨3 display￨4 .￨4 activeShell￨4 =￨4 null￨4 ;￨4 }￨3 int￨3 window￨3 =￨3 OS￨3 .￨3 GTK_WIDGET_WINDOW￨3 (￨3 shellHandle￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 (￨4 style￨4 )￨4 &￨4 (￨4 SWT￨4 .￨4 ON_TOP￨4 )￨4 )￨4 !=￨4 0￨4 )￨4 &&￨4 (￨4 OS￨4 .￨4 GDK_WINDOWING_X11￨4 (￨4 )￨4 )￨4 )￨3 {￨3 int￨4 xDisplay￨4 =￨4 OS￨4 .￨4 gdk_x11_drawable_get_xdisplay￨4 (￨4 window￨4 )￨4 ;￨4 int￨4 xWindow￨4 =￨4 OS￨4 .￨4 gdk_x11_drawable_get_xid￨4 (￨4 window￨4 )￨4 ;￨4 OS￨4 .￨4 gdk_error_trap_push￨4 (￨4 )￨4 ;￨4 OS￨4 .￨4 XSetInputFocus￨4 (￨4 xDisplay￨4 ,￨4 xWindow￨4 ,￨4 RevertToParent￨4 ,￨4 CurrentTime￨4 )￨4 ;￨4 OS￨4 .￨4 gdk_error_trap_pop￨4 (￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 <START_BUG>￨4 OS￨4 .￨4 gdk_window_focus￨4 (￨4 window￨4 ,￨4 OS￨4 .￨4 gtk_get_current_event_time￨4 (￨4 )￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 display￨3 .￨3 activeShell￨3 =￨3 this￨3 ;￨3 }￨2 void￨2 checkBorder￨2 (￨2 )￨2 {￨2 }￨2 void￨2 checkOpen￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 close￨2 (￨2 )￨2 {￨2 }￨2 void￨2 closeWidget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 void￨2 createHandle￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 boolean￨2 hasBorder￨2 (￨2 )￨2 {￨2 }￨2 void￨2 hookEvents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isEnabled￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isLayoutDeferred￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isVisible￨2 (￨2 )￨2 {￨2 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChild￨2 (￨2 )￨2 {￨2 }￨2 int￨2 topHandle￨2 (￨2 )￨2 {￨2 }￨2 int￨2 filterProc￨2 (￨2 int￨3 xEvent￨3 ,￨3 int￨3 gdkEvent￨3 ,￨3 int￨3 data￨3 )￨2 {￨2 }￨2 void￨2 fixShell￨2 (￨2 Shell￨3 newShell￨3 ,￨3 Control￨3 control￨3 )￨2 {￨2 }￨2 void￨2 forceResize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getLocation￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getMinimumSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Point￨2 getSize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 getVisible￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Region￨2 getRegion￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getImeInputMode￨2 (￨2 )￨2 {￨2 }￨2 Shell￨2 _getShell￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Shell￨2 [￨2 ]￨2 getShells￨2 (￨2 )￨2 {￨2 }￨2 int￨2 gtk_configure_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_delete_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_enter_notify_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_focus￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 directionType￨3 )￨2 {￨2 }￨2 int￨2 gtk_move_focus￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 directionType￨3 )￨2 {￨2 }￨2 int￨2 gtk_focus_in_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_focus_out_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_map_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_size_allocate￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 allocation￨3 )￨2 {￨2 }￨2 int￨2 gtk_realize￨2 (￨2 int￨3 widget￨3 )￨2 {￨2 }￨2 int￨2 gtk_unmap_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 int￨2 gtk_window_state_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 event￨3 )￨2 {￨2 }￨2 public￨2 void￨2 open￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 removeShellListener￨2 (￨2 ShellListener￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setActive￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setActiveControl￨2 (￨2 Control￨3 control￨3 )￨2 {￨2 }￨2 void￨2 resizeBounds￨2 (￨2 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 notify￨3 )￨2 {￨2 }￨2 int￨2 setBounds￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 move￨3 ,￨3 boolean￨3 resize￨3 )￨2 {￨2 }￨2 void￨2 setCursor￨2 (￨2 int￨3 cursor￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setEnabled￨2 (￨2 boolean￨3 enabled￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setImeInputMode￨2 (￨2 int￨3 mode￨3 )￨2 {￨2 }￨2 void￨2 setInitialBounds￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setMaximized￨2 (￨2 boolean￨3 maximized￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMenuBar￨2 (￨2 Menu￨3 menu￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimized￨2 (￨2 boolean￨3 minimized￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimumSize￨2 (￨2 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setMinimumSize￨2 (￨2 Point￨3 size￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRegion￨2 (￨2 Region￨3 region￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setText￨2 (￨2 String￨3 string￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVisible￨2 (￨2 boolean￨3 visible￨3 )￨2 {￨2 }￨2 void￨2 setZOrder￨2 (￨2 Control￨3 sibling￨3 ,￨3 boolean￨3 above￨3 )￨2 {￨2 }￨2 int￨2 shellMapProc￨2 (￨2 int￨3 handle￨3 ,￨3 int￨3 arg0￨3 ,￨3 int￨3 user_data￨3 )￨2 {￨2 }￨2 void￨2 showWidget￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 traverseEscape￨2 (￨2 )￨2 {￨2 }￨2 int￨2 trimHeight￨2 (￨2 )￨2 {￨2 }￨2 int￨2 trimWidth￨2 (￨2 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 forceActive￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getBounds￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseShells￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseWidget￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setToolTipText￨2 (￨2 int￨3 widget￨3 ,￨3 String￨3 string￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HostControllerBootstrap￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 "org.jboss.as.host.controller"￨2 )￨2 ;￨2 static￨2 final￨2 ServiceName￨2 SERVICE_NAME_BASE￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "host"￨2 ,￨2 "controller"￨2 )￨2 ;￨2 static￨2 final￨2 int￨2 DEFAULT_POOL_SIZE￨2 =￨2 20￨2 ;￨2 private￨2 final￨2 ServiceContainer￨2 serviceContainer￨2 =￨2 Factory￨2 .￨2 create￨2 (￨2 "host-controller"￨2 )￨2 ;￨2 private￨2 final￨2 HostControllerEnvironment￨2 environment￨2 ;￨2 private￨2 final￨2 byte￨2 [￨2 ]￨2 authCode￨2 ;￨2 public￨2 HostControllerBootstrap￨2 (￨2 final￨3 HostControllerEnvironment￨3 environment￨3 ,￨3 final￨3 byte￨3 [￨3 ]￨3 authCode￨3 )￨2 {￨2 }￨2 public￨2 void￨2 start￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 File￨3 configDir￨3 =￨3 environment￨3 .￨3 getDomainConfigurationDir￨3 (￨3 )￨3 ;￨3 final￨3 ConfigurationFile￨3 configurationFile￨3 =￨3 environment￨3 .￨3 getHostConfigurationFile￨3 (￨3 )￨3 ;￨3 final￨3 ExtensibleConfigurationPersister￨3 configurationPersister￨3 =￨3 HostControllerBootstrap￨3 .￨3 createHostConfigurationPersister￨3 (￨3 configDir￨3 ,￨3 configurationFile￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 operations￨3 =￨3 configurationPersister￨3 .￨3 load￨3 (￨3 )￨3 ;￨3 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 serviceContainer￨3 ;￨3 serviceTarget￨3 .￨3 addListener￨3 (￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 msc￨3 .￨3 service￨3 .￨3 AbstractServiceListener￨3 <￨3 Object￨3 >￨3 (￨3 )￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 transition￨4 (￨4 final￨5 ServiceController￨5 <￨5 ?￨5 extends￨5 Object￨5 >￨5 controller￨5 ,￨5 final￨5 ServiceController￨5 .￨5 Transition￨5 transition￨5 )￨4 {￨4 if￨5 (￨5 transition￨6 ==￨6 (￨6 Transition￨6 .￨6 STARTING_to_START_FAILED￨6 )￨6 )￨5 {￨5 HostControllerBootstrap￨6 .￨6 log￨6 .￨6 errorf￨6 (￨6 controller￨6 .￨6 getStartException￨6 (￨6 )￨6 ,￨6 "Service<seq2seq4repair_space>[%s]<seq2seq4repair_space>failed."￨6 ,￨6 controller￨6 .￨6 getName￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 )￨3 ;￨3 registerBaseServices￨3 (￨3 serviceTarget￨3 )￨3 ;￨3 HostControllerBootstrap￨3 .￨3 DomainModelProxyImpl￨3 domainModelProxy￨3 =￨3 new￨3 HostControllerBootstrap￨3 .￨3 DomainModelProxyImpl￨3 (￨3 )￨3 ;￨3 final￨3 ModelNodeRegistration￨3 hostRegistry￨3 =￨3 HostModelUtil￨3 .￨3 createHostRegistry￨3 (￨3 configurationPersister￨3 ,￨3 environment￨3 ,￨3 domainModelProxy￨3 )￨3 ;￨3 final￨3 ModelNodeRegistration￨3 rootRegistration￨3 =￨3 HostModelUtil￨3 .￨3 createBootstrapHostRegistry￨3 (￨3 hostRegistry￨3 ,￨3 domainModelProxy￨3 )￨3 ;￨3 DomainModelImpl￨3 domainModel￨3 =￨3 new￨3 DomainModelImpl￨3 (￨3 rootRegistration￨3 ,￨3 serviceContainer￨3 ,￨3 configurationPersister￨3 )￨3 ;￨3 domainModelProxy￨3 .￨3 setDomainModel￨3 (￨3 domainModel￨3 )￨3 ;￨3 final￨3 AtomicInteger￨3 count￨3 =￨3 new￨3 AtomicInteger￨3 (￨3 1￨3 )￨3 ;￨3 final￨3 ResultHandler￨3 resultHandler￨3 =￨3 new￨3 ResultHandler￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 void￨4 handleResultFragment￨4 (￨4 final￨5 String￨5 [￨5 ]￨5 location￨5 ,￨5 final￨5 ModelNode￨5 result￨5 )￨4 {￨4 }￨4 @￨4 Override￨4 public￨4 void￨4 handleResultComplete￨4 (￨4 )￨4 {￨4 if￨5 (￨5 (￨6 count￨6 .￨6 decrementAndGet￨6 (￨6 )￨6 )￨6 ==￨6 0￨6 )￨5 {￨5 }￨5 }￨4 @￨4 Override￨4 public￨4 void￨4 handleFailed￨4 (￨4 final￨5 ModelNode￨5 failureDescription￨5 )￨4 {￨4 if￨5 (￨5 (￨6 count￨6 .￨6 decrementAndGet￨6 (￨6 )￨6 )￨6 ==￨6 0￨6 )￨5 {￨5 }￨5 }￨4 @￨4 Override￨4 public￨4 void￨4 handleCancellation￨4 (￨4 )￨4 {￨4 if￨5 (￨5 (￨6 count￨6 .￨6 decrementAndGet￨6 (￨6 )￨6 )￨6 ==￨6 0￨6 )￨5 {￨5 }￨5 }￨4 }￨3 ;￨3 for￨3 (￨3 final￨4 ModelNode￨4 operation￨4 :￨4 operations￨4 )￨3 {￨3 count￨4 .￨4 incrementAndGet￨4 (￨4 )￨4 ;￨4 operation￨4 .￨4 get￨4 (￨4 OPERATION_HEADERS￨4 ,￨4 ROLLBACK_ON_RUNTIME_FAILURE￨4 )￨4 .￨4 set￨4 (￨4 false￨4 )￨4 ;￨4 domainModel￨4 .￨4 execute￨4 (￨4 OperationBuilder￨4 .￨4 Factory￨4 .￨4 create￨4 (￨4 operation￨4 )￨4 .￨4 build￨4 (￨4 )￨4 ,￨4 resultHandler￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 count￨4 .￨4 decrementAndGet￨4 (￨4 )￨4 )￨4 ==￨4 0￨4 )￨3 {￨3 }￨3 final￨3 String￨3 hostName￨3 =￨3 domainModel￨3 .￨3 getLocalHostName￨3 (￨3 )￨3 ;￨3 final￨3 ModelNode￨3 hostModelNode￨3 =￨3 domainModel￨3 .￨3 getHostModel￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 mgmtNetwork￨3 =￨3 hostModelNode￨3 .￨3 get￨3 (￨3 MANAGEMENT_INTERFACE￨3 ,￨3 NATIVE_INTERFACE￨3 ,￨3 INTERFACE￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 mgmtPort￨3 =￨3 hostModelNode￨3 .￨3 get￨3 (￨3 MANAGEMENT_INTERFACE￨3 ,￨3 NATIVE_INTERFACE￨3 ,￨3 PORT￨3 )￨3 .￨3 asInt￨3 (￨3 )￨3 ;￨3 final￨3 ServerInventoryService￨3 inventory￨3 =￨3 new￨3 ServerInventoryService￨3 (￨3 environment￨3 ,￨3 mgmtPort￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 SERVICE_NAME￨3 ,￨3 inventory￨3 )￨3 .￨3 addDependency￨3 (￨3 ProcessControllerConnectionService￨3 .￨3 SERVICE_NAME￨3 ,￨3 ProcessControllerConnectionService￨3 .￨3 class￨3 ,￨3 inventory￨3 .￨3 getClient￨3 (￨3 )￨3 )￨3 .￨3 addDependency￨3 (￨3 JBOSS_NETWORK_INTERFACE￨3 .￨3 append￨3 (￨3 mgmtNetwork￨3 )￨3 ,￨3 NetworkInterfaceBinding￨3 .￨3 class￨3 ,￨3 inventory￨3 .￨3 getInterface￨3 (￨3 )￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 final￨3 HostControllerService￨3 hc￨3 =￨3 new￨3 HostControllerService￨3 (￨3 hostName￨3 ,￨3 hostModelNode￨3 ,￨3 configurationPersister￨3 ,￨3 hostRegistry￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 HostController￨3 .￨3 SERVICE_NAME￨3 ,￨3 hc￨3 )￨3 .￨3 addDependency￨3 (￨3 SERVICE_NAME￨3 ,￨3 ServerInventory￨3 .￨3 class￨3 ,￨3 hc￨3 .￨3 getServerInventory￨3 (￨3 )￨3 )￨3 .￨3 addDependency￨3 (￨3 ServerToHostOperationHandler￨3 .￨3 SERVICE_NAME￨3 )￨3 .￨3 setInitialMode￨3 (￨3 ACTIVE￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 final￨3 ServerToHostOperationHandler￨3 serverToHost￨3 =￨3 new￨3 ServerToHostOperationHandler￨3 (￨3 )￨3 ;￨3 serviceTarget￨3 .￨3 addService￨3 (￨3 ServerToHostOperationHandler￨3 .￨3 SERVICE_NAME￨3 ,￨3 serverToHost￨3 )￨3 .￨3 addDependency￨3 (￨3 SERVICE_NAME￨3 ,￨3 ManagedServerLifecycleCallback￨3 .￨3 class￨3 ,￨3 serverToHost￨3 .￨3 getCallbackInjector￨3 (￨3 )￨3 )￨3 .￨3 install￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 RemotingServices￨3 .￨3 installChannelOpenListenerService￨3 (￨3 serviceTarget￨3 ,￨3 "server"￨3 ,￨3 ServerToHostOperationHandler￨3 .￨3 SERVICE_NAME￨3 ,￨3 null￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 void￨2 registerBaseServices￨2 (￨2 final￨3 ServiceTarget￨3 serviceTarget￨3 )￨2 {￨2 }￨2 static￨2 ExtensibleConfigurationPersister￨2 createHostConfigurationPersister￨2 (￨2 final￨3 File￨3 configDir￨3 ,￨3 final￨3 ConfigurationFile￨3 configurationFile￨3 )￨2 {￨2 }￨2 static￨2 final￨2 class￨2 HostControllerExecutorService￨2 implements￨2 Service￨2 <￨2 Executor￨2 >￨2 {￨2 final￨3 InjectedValue￨3 <￨3 ThreadFactory￨3 >￨3 threadFactoryValue￨3 =￨3 new￨3 InjectedValue￨3 <￨3 ThreadFactory￨3 >￨3 (￨3 )￨3 ;￨3 private￨3 ScheduledExecutorService￨3 executorService￨3 ;￨3 @￨3 Override￨3 public￨3 synchronized￨3 void￨3 start￨3 (￨3 final￨3 StartContext￨3 context￨3 )￨3 throws￨3 StartException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 synchronized￨3 void￨3 stop￨3 (￨3 final￨4 StopContext￨4 context￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 synchronized￨3 ScheduledExecutorService￨3 getValue￨3 (￨3 )￨3 throws￨3 IllegalStateException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 final￨2 class￨2 DomainModelProxyImpl￨2 implements￨2 DomainModelProxy￨2 {￨2 private￨3 DomainModelImpl￨3 domainModel￨3 ;￨3 public￨3 void￨3 setDomainModel￨3 (￨3 final￨4 DomainModelImpl￨4 domainModel￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 DomainModelImpl￨3 getDomainModel￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 FilteredPreferenceDialog￨1 extends￨1 PreferenceDialog￨1 {￨1 protected￨2 TreeViewer￨2 filteredViewer￨2 ;￨2 protected￨2 TreeViewer￨2 unfilteredViewer￨2 ;￨2 private￨2 StackLayout￨2 stackLayout￨2 ;￨2 private￨2 Composite￨2 stackComposite￨2 ;￨2 private￨2 Button￨2 showAllCheck￨2 ;￨2 public￨2 FilteredPreferenceDialog￨2 (￨2 Shell￨3 parentShell￨3 ,￨3 PreferenceManager￨3 manager￨3 )￨2 {￨2 }￨2 protected￨2 Control￨2 createTreeAreaContents￨2 (￨2 Composite￨3 composite￨3 )￨2 {￨2 Composite￨3 treeArea￨3 =￨3 new￨3 Composite￨3 (￨3 composite￨3 ,￨3 SWT￨3 .￨3 None￨3 )￨3 ;￨3 GridLayout￨3 layout￨3 =￨3 new￨3 GridLayout￨3 (￨3 )￨3 ;￨3 layout￨3 .￨3 marginHeight￨3 =￨3 0￨3 ;￨3 layout￨3 .￨3 marginWidth￨3 =￨3 0￨3 ;￨3 treeArea￨3 .￨3 setLayout￨3 (￨3 layout￨3 )￨3 ;￨3 stackComposite￨3 =￨3 new￨3 Composite￨3 (￨3 treeArea￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 stackLayout￨3 =￨3 new￨3 StackLayout￨3 (￨3 )￨3 ;￨3 stackComposite￨3 .￨3 setLayout￨3 (￨3 stackLayout￨3 )￨3 ;￨3 stackComposite￨3 .￨3 setLayoutData￨3 (￨3 new￨3 GridData￨3 (￨3 GridData￨3 .￨3 FILL_BOTH￨3 )￨3 )￨3 ;￨3 stackComposite￨3 .￨3 setFont￨3 (￨3 composite￨3 .￨3 getFont￨3 (￨3 )￨3 )￨3 ;￨3 layoutTreeAreaControl￨3 (￨3 treeArea￨3 )￨3 ;￨3 filteredViewer￨3 =￨3 createTreeViewer￨3 (￨3 stackComposite￨3 ,￨3 true￨3 )￨3 ;￨3 if￨3 (￨3 WorkbenchActivityHelper￨4 .￨4 showAll￨4 (￨4 )￨4 )￨3 {￨3 unfilteredViewer￨4 =￨4 createTreeViewer￨4 (￨4 stackComposite￨4 ,￨4 false￨4 )￨4 ;￨4 showAllCheck￨4 =￨4 new￨4 Button￨4 (￨4 treeArea￨4 ,￨4 SWT￨4 .￨4 CHECK￨4 )￨4 ;￨4 showAllCheck￨4 .￨4 setLayoutData￨4 (￨4 new￨4 GridData￨4 (￨4 GridData￨4 .￨4 FILL_HORIZONTAL￨4 )￨4 )￨4 ;￨4 showAllCheck￨4 .￨4 setText￨4 (￨4 ActivityMessages￨4 .￨4 getString￨4 (￨4 "ActivityFiltering.showAll"￨4 )￨4 )￨4 ;￨4 showAllCheck￨4 .￨4 addSelectionListener￨4 (￨4 new￨4 SelectionAdapter￨4 (￨4 )￨4 {￨4 public￨5 void￨5 widgetSelected￨5 (￨5 SelectionEvent￨6 e￨6 )￨5 {￨5 if￨6 (￨6 !￨7 (￨7 showAllCheck￨7 .￨7 getSelection￨7 (￨7 )￨7 )￨7 )￨6 {￨6 filteredViewer￨7 .￨7 setExpandedElements￨7 (￨7 unfilteredViewer￨7 .￨7 getExpandedElements￨7 (￨7 )￨7 )￨7 ;￨7 filteredViewer￨7 .￨7 setSelection￨7 (￨7 unfilteredViewer￨7 .￨7 getSelection￨7 (￨7 )￨7 )￨7 ;￨7 stackLayout￨7 .￨7 topControl￨7 =￨7 filteredViewer￨7 .￨7 getControl￨7 (￨7 )￨7 ;￨7 stackComposite￨7 .￨7 layout￨7 (￨7 )￨7 ;￨7 showPage￨7 (￨7 getSingleSelection￨7 (￨7 filteredViewer￨7 .￨7 getSelection￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 unfilteredViewer￨7 .￨7 setExpandedElements￨7 (￨7 filteredViewer￨7 .￨7 getExpandedElements￨7 (￨7 )￨7 )￨7 ;￨7 unfilteredViewer￨7 .￨7 setSelection￨7 (￨7 filteredViewer￨7 .￨7 getSelection￨7 (￨7 )￨7 )￨7 ;￨7 stackLayout￨7 .￨7 topControl￨7 =￨7 unfilteredViewer￨7 .￨7 getControl￨7 (￨7 )￨7 ;￨7 stackComposite￨7 .￨7 layout￨7 (￨7 )￨7 ;￨7 showPage￨7 (￨7 getSingleSelection￨7 (￨7 unfilteredViewer￨7 .￨7 getSelection￨7 (￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨4 )￨4 ;￨4 }￨3 stackLayout￨3 .￨3 topControl￨3 =￨3 filteredViewer￨3 .￨3 getControl￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 stackComposite￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 TreeViewer￨2 createTreeViewer￨2 (￨2 Composite￨3 parent￨3 ,￨3 boolean￨3 filtering￨3 )￨2 {￨2 }￨2 protected￨2 IPreferenceNode￨2 findNodeMatching￨2 (￨2 String￨3 nodeId￨3 )￨2 {￨2 }￨2 protected￨2 TreeViewer￨2 getTreeViewer￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 updateTreeFont￨2 (￨2 Font￨3 dialogFont￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 HashCodeBuilder￨1 implements￨1 Builder￨1 <￨1 Integer￨1 >￨1 {￨1 private￨2 static￨2 final￨2 ThreadLocal￨2 <￨2 Set￨2 <￨2 IDKey￨2 >￨2 >￨2 REGISTRY￨2 =￨2 new￨2 ThreadLocal￨2 <￨2 Set￨2 <￨2 IDKey￨2 >￨2 >￨2 (￨2 )￨2 ;￨2 static￨2 Set￨2 <￨2 IDKey￨2 >￨2 getRegistry￨2 (￨2 )￨2 {￨2 }￨2 static￨2 boolean￨2 isRegistered￨2 (￨2 Object￨3 value￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 reflectionAppend￨2 (￨2 Object￨3 object￨3 ,￨3 Class￨3 <￨3 ?￨3 >￨3 clazz￨3 ,￨3 HashCodeBuilder￨3 builder￨3 ,￨3 boolean￨3 useTransients￨3 ,￨3 String￨3 [￨3 ]￨3 excludeFields￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 int￨3 initialNonZeroOddNumber￨3 ,￨3 int￨3 multiplierNonZeroOddNumber￨3 ,￨3 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 int￨3 initialNonZeroOddNumber￨3 ,￨3 int￨3 multiplierNonZeroOddNumber￨3 ,￨3 Object￨3 object￨3 ,￨3 boolean￨3 testTransients￨3 )￨2 {￨2 }￨2 public￨2 static￨2 <￨2 T￨2 >￨2 int￨2 reflectionHashCode￨2 (￨2 int￨3 initialNonZeroOddNumber￨3 ,￨3 int￨3 multiplierNonZeroOddNumber￨3 ,￨3 T￨3 object￨3 ,￨3 boolean￨3 testTransients￨3 ,￨3 Class￨3 <￨3 ?￨3 super￨3 T￨3 >￨3 reflectUpToClass￨3 )￨2 {￨2 }￨2 public￨2 static￨2 <￨2 T￨2 >￨2 int￨2 reflectionHashCode￨2 (￨2 int￨3 initialNonZeroOddNumber￨3 ,￨3 int￨3 multiplierNonZeroOddNumber￨3 ,￨3 T￨3 object￨3 ,￨3 boolean￨3 testTransients￨3 ,￨3 Class￨3 <￨3 ?￨3 super￨3 T￨3 >￨3 reflectUpToClass￨3 ,￨3 String￨3 [￨3 ]￨3 excludeFields￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 Object￨3 object￨3 ,￨3 boolean￨3 testTransients￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 Object￨3 object￨3 ,￨3 Collection￨3 <￨3 String￨3 >￨3 excludeFields￨3 )￨2 {￨2 }￨2 public￨2 static￨2 int￨2 reflectionHashCode￨2 (￨2 Object￨3 object￨3 ,￨3 String￨3 [￨3 ]￨3 excludeFields￨3 )￨2 {￨2 }￨2 static￨2 void￨2 register￨2 (￨2 Object￨3 value￨3 )￨2 {￨2 }￨2 static￨2 void￨2 unregister￨2 (￨2 Object￨3 value￨3 )￨2 {￨2 }￨2 private￨2 final￨2 int￨2 iConstant￨2 ;￨2 private￨2 int￨2 iTotal￨2 =￨2 0￨2 ;￨2 public￨2 HashCodeBuilder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 (￨2 int￨3 initialNonZeroOddNumber￨3 ,￨3 int￨3 multiplierNonZeroOddNumber￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 boolean￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 boolean￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 byte￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 byte￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 char￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 char￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 double￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 double￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 float￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 float￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 int￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 int￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 long￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 long￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 Object￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 short￨3 value￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 append￨2 (￨2 short￨3 [￨3 ]￨3 array￨3 )￨2 {￨2 }￨2 public￨2 HashCodeBuilder￨2 appendSuper￨2 (￨2 int￨3 superHashCode￨3 )￨2 {￨2 }￨2 public￨2 int￨2 toHashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Integer￨2 build￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 toHashCode￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ManagedBeanDependencyProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 DotName￨2 MANAGED_BEAN_ANNOTATION_NAME￨2 =￨2 DotName￨2 .￨2 createSimple￨2 (￨2 ManagedBean￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 ModuleIdentifier￨2 JAVASSIST_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.javassist"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JAVAEE_API_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "javaee.api"￨2 )￨2 ;￨2 private￨2 static￨2 ModuleIdentifier￨2 JBOSS_LOGGING_ID￨2 =￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.logging"￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 {￨2 final￨3 Index￨3 index￨3 =￨3 phaseContext￨3 .￨3 getAttachment￨3 (￨3 ANNOTATION_INDEX￨3 )￨3 ;￨3 if￨3 (￨3 index￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 index￨3 .￨3 getAnnotationTargets￨3 (￨3 ManagedBeanDependencyProcessor￨3 .￨3 MANAGED_BEAN_ANNOTATION_NAME￨3 )￨3 )￨3 ==￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 return￨3 ;￨3 }￨3 phaseContext￨3 .￨3 addToAttachmentList￨3 (￨3 MODULE_DEPENDENCIES￨3 ,￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 ManagedBeanDependencyProcessor￨3 .￨3 JAVAEE_API_ID￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addToAttachmentList￨3 (￨3 MODULE_DEPENDENCIES￨3 ,￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 ManagedBeanDependencyProcessor￨3 .￨3 JBOSS_LOGGING_ID￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 phaseContext￨3 .￨3 addToAttachmentList￨3 (￨3 MODULE_DEPENDENCIES￨3 ,￨3 new￨3 org￨3 .￨3 jboss￨3 .￨3 as￨3 .￨3 deployment￨3 .￨3 module￨3 .￨3 ModuleDependency￨3 (￨3 ManagedBeanDependencyProcessor￨3 .￨3 JAVASSIST_ID￨3 ,￨3 false￨3 ,￨3 false￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 undeploy￨2 (￨2 final￨3 DeploymentUnitContext￨3 context￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 @￨1 RunAsClient￨1 public￨1 class￨1 EJBClientClusterConfigurationTestCase￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 logger￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 EJBClientClusterConfigurationTestCase￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 MODULE_NAME￨2 =￨2 "server-to-server-clustered-ejb-invocation"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULT_JBOSSAS￨2 =￨2 "default-jbossas"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨2 =￨2 "jbossas-with-remote-outbound-connection"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULT_AS_DEPLOYMENT￨2 =￨2 "default-jbossas-deployment"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨2 =￨2 "other-deployment"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 DEFAULT_JBOSSAS_NODE_NAME￨2 =￨2 "default-jbossas"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JBOSSAS_WITH_OUTBOUND_CONNECTION_NODE_NAME￨2 =￨2 "jbossas-with-remote-outbound-connection"￨2 ;￨2 @￨2 ArquillianResource￨2 private￨2 ContainerController￨2 container￨2 ;￨2 @￨2 ArquillianResource￨2 private￨2 Deployer￨2 deployer￨2 ;￨2 private￨2 static￨2 Context￨2 context￨2 ;￨2 private￨2 static￨2 ContextSelector￨2 <￨2 EJBClientContext￨2 >￨2 previousClientContextSelector￨2 ;￨2 @￨2 BeforeClass￨2 public￨2 static￨2 void￨2 beforeClass￨2 (￨2 )￨2 throws￨2 Exception￨2 {￨2 }￨2 @￨2 AfterClass￨2 public￨2 static￨2 void￨2 afterClass￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deployment￨2 (￨2 name￨2 =￨2 EJBClientClusterConfigurationTestCase￨2 .￨2 DEFAULT_AS_DEPLOYMENT￨2 ,￨2 managed￨2 =￨2 false￨2 ,￨2 testable￨2 =￨2 false￨2 )￨2 @￨2 TargetsContainer￨2 (￨2 EJBClientClusterConfigurationTestCase￨2 .￨2 DEFAULT_JBOSSAS￨2 )￨2 public￨2 static￨2 Archive￨2 createContainer1Deployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deployment￨2 (￨2 name￨2 =￨2 EJBClientClusterConfigurationTestCase￨2 .￨2 DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML￨2 ,￨2 managed￨2 =￨2 false￨2 ,￨2 testable￨2 =￨2 false￨2 )￨2 @￨2 TargetsContainer￨2 (￨2 EJBClientClusterConfigurationTestCase￨2 .￨2 JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION￨2 )￨2 public￨2 static￨2 Archive￨2 createContainer2Deployment￨2 (￨2 )￨2 {￨2 final￨3 JavaArchive￨3 ejbJar￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 JavaArchive￨3 .￨3 class￨3 ,￨3 (￨3 (￨3 EJBClientClusterConfigurationTestCase￨3 .￨3 MODULE_NAME￨3 )￨3 +￨3 ".jar"￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 ejbJar￨3 .￨3 addClasses￨3 (￨3 ClusteredStatefulNodeNameEcho￨3 .￨3 class￨3 ,￨3 NonClusteredStatefulNodeNameEcho￨3 .￨3 class￨3 ,￨3 NodeNameEcho￨3 .￨3 class￨3 )￨3 ;￨3 <END_BUG>￨3 ejbJar￨3 .￨3 addAsManifestResource￨3 (￨3 NonClusteredStatefulNodeNameEcho￨3 .￨3 class￨3 .￨3 getPackage￨3 (￨3 )￨3 ,￨3 "jboss-ejb-client.xml"￨3 ,￨3 "jboss-ejb-client.xml"￨3 )￨3 ;￨3 return￨3 ejbJar￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testServerToServerClusterFormation￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 ContextSelector￨2 <￨2 EJBClientContext￨2 >￨2 setupEJBClientContextSelector￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 SingleMemberAnnotation￨1 extends￨1 Annotation￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 TYPE_NAME_PROPERTY￨2 =￨2 Annotation￨2 .￨2 internalTypeNamePropertyFactory￨2 (￨2 SingleMemberAnnotation￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 VALUE_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 SingleMemberAnnotation￨2 .￨2 class￨2 ,￨2 "value"￨2 ,￨2 Expression￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 private￨2 Expression￨2 value￨2 =￨2 null￨2 ;￨2 SingleMemberAnnotation￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 ChildPropertyDescriptor￨2 internalTypeNameProperty￨2 (￨2 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 SingleMemberAnnotation￨3 result￨3 =￨3 new￨3 SingleMemberAnnotation￨3 (￨3 target￨3 )￨3 ;￨3 <START_BUG>￨3 result￨3 .￨3 setSourceRange￨3 (￨3 this￨3 .￨3 getStartPosition￨3 (￨3 )￨3 ,￨3 this￨3 .￨3 getLength￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 result￨3 .￨3 setTypeName￨3 (￨3 (￨3 (￨3 Name￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getTypeName￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 result￨3 .￨3 setValue￨3 (￨3 (￨3 (￨3 Expression￨3 )￨3 (￨3 ASTNode￨3 .￨3 copySubtree￨3 (￨3 target￨3 ,￨3 getValue￨3 (￨3 )￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 Expression￨2 getValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setValue￨2 (￨2 Expression￨3 value￨3 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 BindingTypePattern￨1 extends￨1 ExactTypePattern￨1 implements￨1 BindingPattern￨1 {￨1 private￨2 int￨2 formalIndex￨2 ;￨2 public￨2 BindingTypePattern￨2 (￨2 TypeX￨3 type￨3 ,￨3 int￨3 index￨3 ,￨3 boolean￨3 isVarArgs￨3 )￨2 {￨2 }￨2 public￨2 BindingTypePattern￨2 (￨2 FormalBinding￨3 binding￨3 ,￨3 boolean￨3 isVarArgs￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getFormalIndex￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 out￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 TypePattern￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TypePattern￨2 remapAdviceFormals￨2 (￨2 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 (￨3 (￨3 (￨3 "BindingTypePattern("￨3 +￨3 (￨3 type￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 )￨3 +￨3 ",<seq2seq4repair_space>"￨3 )￨3 +￨3 (￨3 formalIndex￨3 )￨3 )￨3 +￨3 ")"￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 DeleteResourceElementsOperation￨1 extends￨1 MultiOperation￨1 {￨1 protected￨2 DeleteResourceElementsOperation￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elementsToProcess￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 private￨2 void￨2 deletePackageFragment￨2 (￨2 IPackageFragment￨2 frag￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 IResource￨3 res￨3 =￨3 frag￨3 .￨3 getResource￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 res￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 res￨4 .￨4 getType￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 IResource￨4 .￨4 FOLDER￨4 )￨4 )￨4 )￨3 {￨3 IJavaElement￨4 [￨4 ]￨4 childrenOfInterest￨4 =￨4 frag￨4 .￨4 getChildren￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 childrenOfInterest￨5 .￨5 length￨5 )￨5 >￨5 0￨5 )￨4 {￨4 IResource￨5 [￨5 ]￨5 resources￨5 =￨5 new￨5 IResource￨5 [￨5 childrenOfInterest￨5 .￨5 length￨5 ]￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 childrenOfInterest￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 <START_BUG>￨6 resources￨6 [￨6 i￨6 ]￨6 =￨6 childrenOfInterest￨6 [￨6 i￨6 ]￨6 .￨6 getCorrespondingResource￨6 (￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 deleteResources￨5 (￨5 resources￨5 ,￨5 fForce￨5 )￨5 ;￨5 }￨4 Object￨4 [￨4 ]￨4 nonJavaResources￨4 =￨4 frag￨4 .￨4 getNonJavaResources￨4 (￨4 )￨4 ;￨4 int￨4 actualResourceCount￨4 =￨4 0￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 nonJavaResources￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 instanceof￨6 IResource￨6 )￨5 {￨5 actualResourceCount￨6 ++￨6 ;￨6 }￨5 }￨4 IResource￨4 [￨4 ]￨4 actualNonJavaResources￨4 =￨4 new￨4 IResource￨4 [￨4 actualResourceCount￨4 ]￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 max￨5 =￨5 nonJavaResources￨5 .￨5 length￨5 ,￨5 index￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 max￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 instanceof￨6 IResource￨6 )￨5 {￨5 actualNonJavaResources￨6 [￨6 (￨6 index￨6 ++￨6 )￨6 ]￨6 =￨6 (￨6 (￨6 IResource￨6 )￨6 (￨6 nonJavaResources￨6 [￨6 i￨6 ]￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 deleteResources￨4 (￨4 actualNonJavaResources￨4 ,￨4 fForce￨4 )￨4 ;￨4 IResource￨4 [￨4 ]￨4 remainingFiles￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 remainingFiles￨5 =￨5 (￨5 (￨5 IFolder￨5 )￨5 (￨5 res￨5 )￨5 )￨5 .￨5 members￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 CoreException￨5 ce￨5 )￨4 {￨4 throw￨5 new￨5 JavaModelException￨5 (￨5 ce￨5 )￨5 ;￨5 }￨4 boolean￨4 isEmpty￨4 =￨4 true￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ,￨5 length￨5 =￨5 remainingFiles￨5 .￨5 length￨5 ;￨5 i￨5 <￨5 length￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 IResource￨5 file￨5 =￨5 remainingFiles￨5 [￨5 i￨5 ]￨5 ;￨5 if￨5 (￨5 file￨6 instanceof￨6 IFile￨6 )￨5 {￨5 this￨6 .￨6 deleteResource￨6 (￨6 file￨6 ,￨6 (￨6 (￨6 IResource￨6 .￨6 FORCE￨6 )￨6 |￨6 (￨6 IResource￨6 .￨6 KEEP_HISTORY￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 isEmpty￨6 =￨6 false￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 isEmpty￨5 )￨4 {￨4 deleteEmptyPackageFragment￨5 (￨5 frag￨5 ,￨5 false￨5 ,￨5 frag￨5 .￨5 getParent￨5 (￨5 )￨5 .￨5 getResource￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 String￨2 getMainTaskName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 processElement￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 verify￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 ,￨2 String￨2 p4￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 SplitFunction￨2 SplitParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 BeanShell￨2 BSHFParams￨2 (￨2 String￨2 p1￨2 ,￨2 String￨2 p2￨2 ,￨2 String￨2 p3￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 Collection￨2 MakeParams￨2 (￨2 String￨3 p1￨3 ,￨3 String￨3 p2￨3 ,￨3 String￨3 p3￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 TestSuite￨3 allsuites￨3 =￨3 new￨3 TestSuite￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 TestSuite￨3 bsh￨3 =￨3 new￨3 TestSuite￨3 (￨3 "BeanShell"￨3 )￨3 ;￨3 bsh￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "BSH1"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 bsh￨3 )￨3 ;￨3 TestSuite￨3 suite￨3 =￨3 new￨3 TestSuite￨3 (￨3 "SingleThreaded"￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVParams"￨3 )￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVNoFile"￨3 )￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVSetup"￨3 )￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVRun"￨3 )￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSValias"￨3 )￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVBlankLine"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 suite￨3 )￨3 ;￨3 suite￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVSetup"￨3 )￨3 )￨3 ;￨3 TestSuite￨3 par￨3 =￨3 new￨3 ActiveTestSuite￨3 (￨3 "Parallel"￨3 )￨3 ;￨3 par￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVThread1"￨3 )￨3 )￨3 ;￨3 par￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "CSVThread2"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 par￨3 )￨3 ;￨3 TestSuite￨3 sff￨3 =￨3 new￨3 TestSuite￨3 (￨3 "StringFromFile"￨3 )￨3 ;￨3 sff￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SFFTest1"￨3 )￨3 )￨3 ;￨3 sff￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SFFTest2"￨3 )￨3 )￨3 ;￨3 sff￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SFFTest3"￨3 )￨3 )￨3 ;￨3 sff￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SFFTest4"￨3 )￨3 )￨3 ;￨3 sff￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SFFTest5"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 sff￨3 )￨3 ;￨3 TestSuite￨3 split￨3 =￨3 new￨3 TestSuite￨3 (￨3 "SplitFunction"￨3 )￨3 ;￨3 split￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "SplitTest1"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 split￨3 )￨3 ;￨3 TestSuite￨3 xpath￨3 =￨3 new￨3 TestSuite￨3 (￨3 "XPath"￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathtestColumns"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathtestDefault"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathtestNull"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathtestrowNum"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathEmpty"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathFile1"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathFile2"￨3 )￨3 )￨3 ;￨3 xpath￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathNoFile"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 xpath￨3 )￨3 ;￨3 TestSuite￨3 random￨3 =￨3 new￨3 TestSuite￨3 (￨3 "Random"￨3 )￨3 ;￨3 random￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "RandomTest1"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 random￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathSetup1"￨3 )￨3 )￨3 ;￨3 TestSuite￨3 par2￨3 =￨3 new￨3 ActiveTestSuite￨3 (￨3 "ParallelXPath1"￨3 )￨3 ;￨3 par2￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathThread1"￨3 )￨3 )￨3 ;￨3 par2￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathThread2"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 par2￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathSetup2"￨3 )￨3 )￨3 ;￨3 TestSuite￨3 par3￨3 =￨3 new￨3 ActiveTestSuite￨3 (￨3 "ParallelXPath2"￨3 )￨3 ;￨3 par3￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathThread1"￨3 )￨3 )￨3 ;￨3 par3￨3 .￨3 addTest￨3 (￨3 new￨3 PackageTest￨3 (￨3 "XPathThread2"￨3 )￨3 )￨3 ;￨3 allsuites￨3 .￨3 addTest￨3 (￨3 par3￨3 )￨3 ;￨3 return￨3 allsuites￨3 ;￨3 }￨2 private￨2 JMeterContext￨2 jmctx￨2 =￨2 null￨2 ;￨2 private￨2 JMeterVariables￨2 vars￨2 =￨2 null￨2 ;￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 BSH1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SplitTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest3￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest4￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 SFFTest5￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 CSVRead￨2 cr1￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr2￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr3￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr4￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr5￨2 ;￨2 private￨2 static￨2 CSVRead￨2 cr6￨2 ;￨2 private￨2 static￨2 class￨2 Baton￨2 {￨2 void￨3 pass￨3 (￨3 )￨3 {￨3 }￨3 void￨3 done￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 PackageTest￨2 .￨2 Baton￨2 baton￨2 =￨2 new￨2 PackageTest￨2 .￨2 Baton￨2 (￨2 )￨2 ;￨2 public￨2 void￨2 CSVThread1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVThread2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVRun￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVParams￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVSetup￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSValias￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVNoFile￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 CSVBlankLine￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestNull￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestrowNum￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestColumns￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathtestDefault￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathEmpty￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathNoFile￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathFile1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathFile2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 XPath￨2 sxp1￨2 ;￨2 private￨2 static￨2 XPath￨2 sxp2￨2 ;￨2 public￨2 void￨2 XPathSetup1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathSetup2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathThread1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 XPathThread2￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 XPath￨2 setupXPath￨2 (￨2 String￨2 file￨2 ,￨2 String￨2 expr￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 RandomTest1￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 RequestCycle￨1 {￨1 private￨2 static￨2 final￨2 ThreadLocal￨2 current￨2 =￨2 new￨2 ThreadLocal￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 DETACH_REQUEST￨2 =￨2 6￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 DONE￨2 =￨2 7￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 HANDLE_EXCEPTION￨2 =￨2 5￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 RequestCycle￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 NOT_STARTED￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 PREPARE_REQUEST￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 PROCESS_EVENTS￨2 =￨2 3￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 RESOLVE_TARGET￨2 =￨2 2￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 RESPOND￨2 =￨2 4￨2 ;￨2 public￨2 static￨2 RequestCycle￨2 get￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 static￨2 void￨2 set￨2 (￨2 RequestCycle￨3 cycle￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 automaticallyClearFeedbackMessages￨2 =￨2 true￨2 ;￨2 private￨2 int￨2 currentStep￨2 =￨2 RequestCycle￨2 .￨2 NOT_STARTED￨2 ;￨2 private￨2 final￨2 Response￨2 originalResponse￨2 ;￨2 private￨2 boolean￨2 redirect￨2 ;￨2 private￨2 final￨2 transient￨2 ArrayListStack￨2 requestTargets￨2 =￨2 new￨2 ArrayListStack￨2 (￨2 3￨2 )￨2 ;￨2 private￨2 PageParameters￨2 pageParameters￨2 ;￨2 private￨2 Session￨2 session￨2 ;￨2 private￨2 final￨2 long￨2 startTime￨2 =￨2 System￨2 .￨2 currentTimeMillis￨2 (￨2 )￨2 ;￨2 protected￨2 final￨2 Application￨2 application￨2 ;￨2 protected￨2 final￨2 IRequestCycleProcessor￨2 processor￨2 ;￨2 protected￨2 Request￨2 request￨2 ;￨2 protected￨2 Response￨2 response￨2 ;￨2 protected￨2 RequestCycle￨2 (￨2 final￨3 Application￨3 application￨3 ,￨3 final￨3 Request￨3 request￨3 ,￨3 final￨3 Response￨3 response￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Application￨2 getApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 ClientInfo￨2 getClientInfo￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Response￨2 getOriginalResponse￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 PageParameters￨2 getPageParameters￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 IRequestCycleProcessor￨2 getProcessor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 boolean￨2 getRedirect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Request￨2 getRequest￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 IRequestTarget￨2 getRequestTarget￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Response￨2 getResponse￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Page￨2 getResponsePage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Class￨2 getResponsePageClass￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 Session￨2 getSession￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 long￨2 getStartTime￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRedirect￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Page￨2 onRuntimeException￨2 (￨2 Page￨3 page￨3 ,￨3 RuntimeException￨3 e￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 void￨2 redirectTo￨2 (￨2 final￨3 Page￨3 page￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 request￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 request￨2 (￨2 final￨3 Component￨3 component￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 request￨2 (￨2 IRequestTarget￨3 target￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAutomaticallyClearFeedbackMessages￨2 (￨2 boolean￨3 automaticallyClearFeedbackMessages￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setRedirect￨2 (￨2 final￨3 boolean￨3 redirect￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setRequest￨2 (￨2 Request￨3 request￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setRequestTarget￨2 (￨2 IRequestTarget￨3 requestTarget￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Response￨2 setResponse￨2 (￨2 final￨3 Response￨3 response￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setResponsePage￨2 (￨2 final￨3 Class￨3 pageClass￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setResponsePage￨2 (￨2 final￨3 Class￨3 pageClass￨3 ,￨3 final￨3 PageParameters￨3 pageParameters￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 setResponsePage￨2 (￨2 final￨3 Page￨3 page￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 Class￨3 pageClass￨3 ,￨3 final￨3 PageParameters￨3 parameters￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 Component￨3 component￨3 ,￨3 final￨3 IBehavior￨3 behaviour￨3 ,￨3 final￨3 RequestListenerInterface￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 Component￨3 component￨3 ,￨3 final￨3 RequestListenerInterface￨3 listener￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 IPageMap￨3 pageMap￨3 ,￨3 final￨3 Class￨3 pageClass￨3 ,￨3 final￨3 PageParameters￨3 parameters￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 IRequestTarget￨3 requestTarget￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 Page￨3 page￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 ResourceReference￨3 resourceReference￨3 )￨2 {￨2 }￨2 public￨2 final￨2 CharSequence￨2 urlFor￨2 (￨2 final￨3 ResourceReference￨3 resourceReference￨3 ,￨3 ValueMap￨3 parameters￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkReuse￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 detach￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 prepare￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 processEventsAndRespond￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 respond￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 IRequestCycleProcessor￨2 safeGetRequestProcessor￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 sessionExists￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 step￨2 (￨2 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 steps￨2 (￨2 )￨2 {￨2 try￨3 (￨3 )￨3 {￨3 IRequestCycleProcessor￨4 processor￨4 =￨4 safeGetRequestProcessor￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 final￨4 int￨4 maxSteps￨4 =￨4 Short￨4 .￨4 MAX_VALUE￨4 ;￨4 <END_BUG>￨4 for￨4 (￨4 int￨5 totalSteps￨5 =￨5 0￨5 ;￨5 (￨5 currentStep￨5 )￨5 <￨5 (￨5 RequestCycle￨5 .￨5 DONE￨5 )￨5 ;￨5 totalSteps￨5 ++￨5 )￨4 {￨4 if￨5 (￨5 totalSteps￨6 >=￨6 maxSteps￨6 )￨5 {￨5 throw￨6 new￨6 IllegalStateException￨6 (￨6 (￨6 (￨6 "Request<seq2seq4repair_space>processing<seq2seq4repair_space>executed<seq2seq4repair_space>"￨6 +￨6 maxSteps￨6 )￨6 +￨6 "<seq2seq4repair_space>steps,<seq2seq4repair_space>which<seq2seq4repair_space>means<seq2seq4repair_space>it<seq2seq4repair_space>is<seq2seq4repair_space>probably<seq2seq4repair_space>in<seq2seq4repair_space>an<seq2seq4repair_space>infinite<seq2seq4repair_space>loop."￨6 )￨6 )￨6 ;￨6 }￨5 try￨5 (￨5 )￨5 {￨5 step￨6 (￨6 )￨6 ;￨6 (￨6 currentStep￨6 )￨6 ++￨6 ;￨6 }￨5 catch￨5 (￨5 AbstractRestartResponseException￨6 e￨6 )￨5 {￨5 currentStep￨6 =￨6 RequestCycle￨6 .￨6 RESPOND￨6 ;￨6 }￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 currentStep￨4 =￨4 RequestCycle￨4 .￨4 DETACH_REQUEST￨4 ;￨4 detach￨4 (￨4 )￨4 ;￨4 currentStep￨4 =￨4 RequestCycle￨4 .￨4 DONE￨4 ;￨4 }￨3 }￨2 private￨2 final￨2 void￨2 threadDetach￨2 (￨2 )￨2 {￨2 }￨2 final￨2 void￨2 setPageParameters￨2 (￨2 PageParameters￨3 parameters￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 logRuntimeException￨2 (￨2 RuntimeException￨3 e￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 ClientInfo￨2 newClientInfo￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onBeginRequest￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 onEndRequest￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 LocalEjbReceiver￨1 extends￨1 EJBReceiver￨1 implements￨1 RegistryCollector￨1 .￨1 Listener￨1 <￨1 String￨1 ,￨1 List￨1 <￨1 ClientMapping￨1 >￨1 >￨1 ,￨1 Service￨1 <￨1 LocalEjbReceiver￨1 >￨1 {￨1 public￨2 static￨2 final￨2 ServiceName￨2 DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "ejb"￨2 )￨2 .￨2 append￨2 (￨2 "default-local-ejb-receiver-service"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ServiceName￨2 BY_VALUE_SERVICE_NAME￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "ejb3"￨2 ,￨2 "localEjbReceiver"￨2 ,￨2 "value"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ServiceName￨2 BY_REFERENCE_SERVICE_NAME￨2 =￨2 JBOSS￨2 .￨2 append￨2 (￨2 "ejb3"￨2 ,￨2 "localEjbReceiver"￨2 ,￨2 "reference"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 Object￨2 [￨2 ]￨2 EMPTY_OBJECT_ARRAY￨2 =￨2 new￨2 Object￨2 [￨2 ]￨2 (￨2 )￨2 {￨2 }￨2 ;￨2 private￨2 final￨2 List￨2 <￨2 EJBReceiverContext￨2 >￨2 contexts￨2 =￨2 new￨2 CopyOnWriteArrayList￨2 <￨2 EJBReceiverContext￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 InjectedValue￨2 <￨2 DeploymentRepository￨2 >￨2 deploymentRepository￨2 =￨2 new￨2 InjectedValue￨2 <￨2 DeploymentRepository￨2 >￨2 (￨2 )￨2 ;￨2 @￨2 SuppressWarnings￨2 (￨2 "rawtypes"￨2 )￨2 private￨2 final￨2 InjectedValue￨2 <￨2 RegistryCollector￨2 >￨2 clusterRegistryCollector￨2 =￨2 new￨2 InjectedValue￨2 <￨2 RegistryCollector￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 LocalEjbReceiver￨2 .￨2 Listener￨2 deploymentListener￨2 =￨2 new￨2 LocalEjbReceiver￨2 .￨2 Listener￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 boolean￨2 allowPassByReference￨2 ;￨2 public￨2 LocalEjbReceiver￨2 (￨2 final￨3 String￨3 nodeName￨3 ,￨3 final￨3 boolean￨3 allowPassByReference￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 associate￨2 (￨2 final￨3 EJBReceiverContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 processInvocation￨2 (￨2 final￨2 EJBClientInvocationContext￨2 invocation￨2 ,￨2 final￨2 EJBReceiverInvocationContext￨2 receiverContext￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 <￨2 T￨2 >￨2 StatefulEJBLocator￨2 <￨2 T￨2 >￨2 openSession￨2 (￨2 EJBReceiverContext￨2 context￨2 ,￨2 Class￨2 <￨2 T￨2 >￨2 viewType￨2 ,￨2 String￨2 appName￨2 ,￨2 String￨2 moduleName￨2 ,￨2 String￨2 distinctName￨2 ,￨2 String￨2 beanName￨2 )￨2 throws￨2 IllegalArgumentException￨2 (￨2 )￨2 {￨2 final￨3 EjbDeploymentInformation￨3 ejbInfo￨3 =￨3 findBean￨3 (￨3 appName￨3 ,￨3 moduleName￨3 ,￨3 distinctName￨3 ,￨3 beanName￨3 )￨3 ;￨3 final￨3 EJBComponent￨3 component￨3 =￨3 ejbInfo￨3 .￨3 getEjbComponent￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 component￨4 instanceof￨4 StatefulSessionComponent￨4 )￨4 )￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 (￨4 "EJB<seq2seq4repair_space>"￨4 +￨4 beanName￨4 )￨4 +￨4 "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>a<seq2seq4repair_space>Stateful<seq2seq4repair_space>Session<seq2seq4repair_space>bean<seq2seq4repair_space>in<seq2seq4repair_space>app:<seq2seq4repair_space>"￨4 )￨4 +￨4 appName￨4 )￨4 +￨4 "<seq2seq4repair_space>module:<seq2seq4repair_space>"￨4 )￨4 +￨4 moduleName￨4 )￨4 +￨4 "<seq2seq4repair_space>distinct<seq2seq4repair_space>name:"￨4 )￨4 +￨4 distinctName￨4 )￨4 )￨4 ;￨4 }￨3 final￨3 StatefulSessionComponent￨3 statefulComponent￨3 =￨3 (￨3 (￨3 StatefulSessionComponent￨3 )￨3 (￨3 component￨3 )￨3 )￨3 ;￨3 final￨3 SessionID￨3 sessionID￨3 =￨3 statefulComponent￨3 .￨3 createSession￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 return￨3 new￨3 StatefulEJBLocator￨3 <￨3 T￨3 >￨3 (￨3 viewType￨3 ,￨3 appName￨3 ,￨3 moduleName￨3 ,￨3 beanName￨3 ,￨3 distinctName￨3 ,￨3 sessionID￨3 ,￨3 statefulComponent￨3 .￨3 getCache￨3 (￨3 )￨3 .￨3 getStrictAffinity￨3 (￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 Object￨2 clone￨2 (￨2 final￨3 Class￨3 <￨3 ?￨3 >￨3 target￨3 ,￨3 final￨3 ObjectCloner￨3 cloner￨3 ,￨3 final￨3 Object￨3 object￨3 ,￨3 final￨3 boolean￨3 allowPassByReference￨3 )￨2 {￨2 }￨2 private￨2 Object￨2 clone￨2 (￨2 final￨3 ObjectCloner￨3 cloner￨3 ,￨3 final￨3 Object￨3 object￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 boolean￨2 exists￨2 (￨2 final￨3 String￨3 appName￨3 ,￨3 final￨3 String￨3 moduleName￨3 ,￨3 final￨3 String￨3 distinctName￨3 ,￨3 final￨3 String￨3 beanName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 int￨2 sendPrepare￨2 (￨2 EJBReceiverContext￨2 context￨2 ,￨2 TransactionID￨2 transactionID￨2 )￨2 throws￨2 XAException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 sendCommit￨2 (￨2 EJBReceiverContext￨2 context￨2 ,￨2 TransactionID￨2 transactionID￨2 ,￨2 boolean￨2 onePhase￨2 )￨2 throws￨2 XAException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 sendRollback￨2 (￨2 EJBReceiverContext￨2 context￨2 ,￨2 TransactionID￨2 transactionID￨2 )￨2 throws￨2 XAException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 sendForget￨2 (￨2 EJBReceiverContext￨2 context￨2 ,￨2 TransactionID￨2 transactionID￨2 )￨2 throws￨2 XAException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 beforeCompletion￨2 (￨2 EJBReceiverContext￨3 context￨3 ,￨3 TransactionID￨3 transactionID￨3 )￨2 {￨2 }￨2 private￨2 EjbDeploymentInformation￨2 findBean￨2 (￨2 final￨3 String￨3 appName￨3 ,￨3 final￨3 String￨3 moduleName￨3 ,￨3 final￨3 String￨3 distinctName￨3 ,￨3 final￨3 String￨3 beanName￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 start￨2 (￨2 final￨2 StartContext￨2 context￨2 )￨2 throws￨2 StartException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 stop￨2 (￨2 final￨3 StopContext￨3 context￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 LocalEjbReceiver￨2 getValue￨2 (￨2 )￨2 throws￨2 IllegalArgumentException￨2 ,￨2 IllegalStateException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 InjectedValue￨2 <￨2 DeploymentRepository￨2 >￨2 getDeploymentRepository￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registryAdded￨2 (￨2 Registry￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 ClientMapping￨3 >￨3 >￨3 registry￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registryRemoved￨2 (￨2 Registry￨3 <￨3 String￨3 ,￨3 List￨3 <￨3 ClientMapping￨3 >￨3 >￨3 registry￨3 )￨2 {￨2 }￨2 @￨2 SuppressWarnings￨2 (￨2 "rawtypes"￨2 )￨2 public￨2 Injector￨2 <￨2 RegistryCollector￨2 >￨2 getClusterRegistryCollectorInjector￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 ImmediateResultProducer￨2 implements￨2 EJBReceiverInvocationContext￨2 .￨2 ResultProducer￨2 {￨2 private￨3 final￨3 Object￨3 clonedResult￨3 ;￨3 public￨3 ImmediateResultProducer￨3 (￨3 final￨4 Object￨4 clonedResult￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Object￨3 getResult￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 discardResult￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 Listener￨2 implements￨2 DeploymentRepositoryListener￨2 {￨2 @￨3 Override￨3 public￨3 void￨3 listenerAdded￨3 (￨3 final￨4 DeploymentRepository￨4 repository￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 deploymentAvailable￨3 (￨3 final￨4 DeploymentModuleIdentifier￨4 deployment￨4 ,￨4 final￨4 ModuleDeployment￨4 moduleDeployment￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 deploymentRemoved￨3 (￨3 final￨4 DeploymentModuleIdentifier￨4 deployment￨4 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 LocalClusterNodeManager￨2 implements￨2 ClusterNodeManager￨2 {￨2 @￨3 Override￨3 public￨3 String￨3 getNodeName￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 EJBReceiver￨3 getEJBReceiver￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 SystemMenuSizeFastView￨1 extends￨1 ContributionItem￨1 {￨1 private￨2 FastViewPane￨2 fastViewPane￨2 ;￨2 public￨2 SystemMenuSizeFastView￨2 (￨2 FastViewPane￨3 fastViewPane￨3 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 fill￨2 (￨2 Menu￨3 menu￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 <START_BUG>￨3 MenuItem￨3 item￨3 =￨3 new￨3 MenuItem￨3 (￨3 menu￨3 ,￨3 SWT￨3 .￨3 NONE￨3 )￨3 ;￨3 <END_BUG>￨3 item￨3 .￨3 setText￨3 (￨3 WorkbenchMessages￨3 .￨3 getString￨3 (￨3 "PartPane.size"￨3 )￨3 )￨3 ;￨3 item￨3 .￨3 addSelectionListener￨3 (￨3 new￨3 SelectionAdapter￨3 (￨3 )￨3 {￨3 public￨4 void￨4 widgetSelected￨4 (￨4 SelectionEvent￨5 e￨5 )￨4 {￨4 fastViewPane￨5 .￨5 moveSash￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 item￨3 .￨3 setEnabled￨3 (￨3 (￨3 (￨3 fastViewPane￨3 .￨3 getCurrentPane￨3 (￨3 )￨3 )￨3 !=￨3 null￨3 )￨3 )￨3 ;￨3 }￨2 public￨2 boolean￨2 isDynamic￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ComplexPropertiesParseUtils￨1 {￨1 public￨2 static￨2 Properties￨2 commonDsProperties￨2 (￨2 String￨3 jndiName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Properties￨2 xaDsProperties￨2 (￨2 String￨3 jndiName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Properties￨2 nonXaDsProperties￨2 (￨2 String￨3 jndiName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Properties￨2 raCommonProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Properties￨2 raConnectionProperties￨2 (￨2 )￨2 {￨2 Properties￨3 params￨3 =￨3 new￨3 Properties￨3 (￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "use-java-context"￨3 ,￨3 "false"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "class-name"￨3 ,￨3 "Class1"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "use-ccm"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "jndi-name"￨3 ,￨3 "java:jboss/name1"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "enabled"￨3 ,￨3 "false"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "min-pool-size"￨3 ,￨3 "1"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "max-pool-size"￨3 ,￨3 "5"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "pool-prefill"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "pool-use-strict-min"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "flush-strategy"￨3 ,￨3 "IdleConnections"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "same-rm-override"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "interleaving"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "no-tx-separate-pool"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "pad-xid"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "wrap-xa-resource"￨3 ,￨3 "true"￨3 )￨3 ;￨3 <START_BUG>￨3 params￨3 .￨3 put￨3 (￨3 "application"￨3 ,￨3 "true"￨3 )￨3 ;￨3 <END_BUG>￨3 params￨3 .￨3 put￨3 (￨3 "background-validation"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "background-validation-millis"￨3 ,￨3 "5000"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "use-fast-fail"￨3 ,￨3 "true"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "blocking-timeout-wait-millis"￨3 ,￨3 "5000"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "idle-timeout-minutes"￨3 ,￨3 "4"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "allocation-retry"￨3 ,￨3 "2"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "allocation-retry-wait-millis"￨3 ,￨3 "3000"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "xa-resource-timeout"￨3 ,￨3 "300"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "no-recovery"￨3 ,￨3 "false"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "recovery-plugin-class-name"￨3 ,￨3 "someClass2"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "recovery-username"￨3 ,￨3 "sa"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "recovery-password"￨3 ,￨3 "sa-pass"￨3 )￨3 ;￨3 params￨3 .￨3 put￨3 (￨3 "recovery-security-domain"￨3 ,￨3 "HsqlDbRealm"￨3 )￨3 ;￨3 return￨3 params￨3 ;￨3 }￨2 public￨2 static￨2 Properties￨2 raAdminProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 setOperationParams￨2 (￨2 ModelNode￨3 operation￨3 ,￨3 Properties￨3 params￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 addExtensionProperties￨2 (￨2 ModelNode￨3 operation￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 checkModelParams￨2 (￨2 ModelNode￨3 node￨3 ,￨3 Properties￨3 params￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JmxMonitoredMap￨1 <￨1 K￨1 ,￨1 V￨1 >￨1 extends￨1 ConcurrentHashMap￨1 <￨1 String￨1 ,￨1 SolrInfoMBean￨1 >￨1 {￨1 private￨2 static￨2 final￨2 Logger￨2 LOG￨2 =￨2 LoggerFactory￨2 .￨2 getLogger￨2 (￨2 JmxMonitoredMap￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 MBeanServer￨2 server￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 jmxRootName￨2 ;￨2 private￨2 String￨2 coreHashCode￨2 ;￨2 public￨2 JmxMonitoredMap￨2 (￨2 String￨2 coreName￨2 ,￨2 String￨2 coreHashCode￨2 ,￨2 final￨2 JmxConfiguration￨2 jmxConfig￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 SolrInfoMBean￨2 put￨2 (￨2 String￨3 key￨3 ,￨3 SolrInfoMBean￨3 infoBean￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 SolrInfoMBean￨2 remove￨2 (￨2 Object￨3 key￨3 )￨2 {￨2 }￨2 private￨2 void￨2 unregister￨2 (￨2 String￨3 key￨3 ,￨3 SolrInfoMBean￨3 infoBean￨3 )￨2 {￨2 }￨2 private￨2 ObjectName￨2 getObjectName￨2 (￨2 String￨2 key￨2 ,￨2 SolrInfoMBean￨2 infoBean￨2 )￨2 throws￨2 MalformedObjectNameException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 MBeanServer￨2 getServer￨2 (￨2 )￨2 {￨2 }￨2 static￨2 class￨2 SolrDynamicMBean￨2 implements￨2 DynamicMBean￨2 {￨2 private￨3 SolrInfoMBean￨3 infoBean￨3 ;￨3 private￨3 HashSet￨3 <￨3 String￨3 >￨3 staticStats￨3 ;￨3 private￨3 String￨3 coreHashCode￨3 ;￨3 public￨3 SolrDynamicMBean￨3 (￨3 String￨4 coreHashCode￨4 ,￨4 SolrInfoMBean￨4 managedResource￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 MBeanInfo￨3 getMBeanInfo￨3 (￨3 )￨3 {￨3 }￨3 private￨3 OpenType￨3 determineType￨3 (￨3 Class￨4 type￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Object￨3 getAttribute￨3 (￨3 String￨3 attribute￨3 )￨3 throws￨3 AttributeNotFoundException￨3 ,￨3 MBeanException￨3 ,￨3 ReflectionException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 AttributeList￨3 getAttributes￨3 (￨3 String￨4 [￨4 ]￨4 attributes￨4 )￨3 {￨3 AttributeList￨4 list￨4 =￨4 new￨4 AttributeList￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 attribute￨5 :￨5 attributes￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 list￨6 .￨6 add￨6 (￨6 new￨6 Attribute￨6 (￨6 attribute￨6 ,￨6 getAttribute￨6 (￨6 attribute￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 Exception￨6 e￨6 )￨5 {￨5 <START_BUG>￨6 JmxMonitoredMap￨6 .￨6 LOG￨6 .￨6 warn￨6 (￨6 (￨6 "Could<seq2seq4repair_space>not<seq2seq4repair_space>get<seq2seq4repair_space>attibute<seq2seq4repair_space>"￨6 +￨6 attribute￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 }￨4 return￨4 list￨4 ;￨4 }￨3 @￨3 Override￨3 public￨3 void￨3 setAttribute￨3 (￨3 Attribute￨3 attribute￨3 )￨3 throws￨3 AttributeNotFoundException￨3 ,￨3 InvalidAttributeValueException￨3 ,￨3 MBeanException￨3 ,￨3 ReflectionException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 AttributeList￨3 setAttributes￨3 (￨3 AttributeList￨4 attributes￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Object￨3 invoke￨3 (￨3 String￨3 actionName￨3 ,￨3 Object￨3 [￨3 ]￨3 params￨3 ,￨3 String￨3 [￨3 ]￨3 signature￨3 )￨3 throws￨3 MBeanException￨3 ,￨3 ReflectionException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 TestExternalValues￨1 extends￨1 SingleEMFTestCase￨1 {￨1 public￨2 void￨2 setUp￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 super￨3 .￨3 setUp￨3 (￨3 CLEAR_TABLES￨3 ,￨3 EntityA￨3 .￨3 class￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 void￨2 testExternalValues￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testUnrecognizedExternalValue￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PropertyColumn￨1 extends￨1 AbstractColumn￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 final￨2 String￨2 propertyExpression￨2 ;￨2 public￨2 PropertyColumn￨2 (￨2 IModel￨3 displayModel￨3 ,￨3 String￨3 sortProperty￨3 ,￨3 String￨3 propertyExpression￨3 )￨2 {￨2 }￨2 public￨2 PropertyColumn￨2 (￨2 IModel￨3 displayModel￨3 ,￨3 String￨3 propertyExpressions￨3 )￨2 {￨2 }￨2 public￨2 void￨2 populateItem￨2 (￨2 Item￨3 item￨3 ,￨3 String￨3 componentId￨3 ,￨3 IModel￨3 model￨3 )￨2 {￨2 <START_BUG>￨3 item￨3 .￨3 add￨3 (￨3 new￨3 wicket￨3 .￨3 markup￨3 .￨3 html￨3 .￨3 basic￨3 .￨3 Label￨3 (￨3 item￨3 ,￨3 componentId￨3 ,￨3 createLabelModel￨3 (￨3 model￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 IModel￨2 createLabelModel￨2 (￨2 IModel￨3 embeddedModel￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getPropertyExpression￨2 (￨2 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 SortedBytesMergeUtils￨1 {￨1 private￨2 SortedBytesMergeUtils￨2 (￨2 )￨2 {￨2 }￨2 static￨2 SortedBytesMergeUtils￨2 .￨2 MergeContext￨2 init￨2 (￨2 ValueType￨3 type￨3 ,￨3 IndexDocValues￨3 [￨3 ]￨3 docValues￨3 ,￨3 Comparator￨3 <￨3 BytesRef￨3 >￨3 comp￨3 ,￨3 MergeState￨3 mergeState￨3 )￨2 {￨2 }￨2 public￨2 static￨2 final￨2 class￨2 MergeContext￨2 {￨2 private￨3 final￨3 Comparator￨3 <￨3 BytesRef￨3 >￨3 comp￨3 ;￨3 private￨3 final￨3 BytesRef￨3 missingValue￨3 =￨3 new￨3 BytesRef￨3 (￨3 )￨3 ;￨3 final￨3 int￨3 sizePerValues￨3 ;￨3 final￨3 ValueType￨3 type￨3 ;￨3 final￨3 int￨3 [￨3 ]￨3 docToEntry￨3 ;￨3 long￨3 [￨3 ]￨3 offsets￨3 ;￨3 public￨3 MergeContext￨3 (￨3 Comparator￨4 <￨4 BytesRef￨4 >￨4 comp￨4 ,￨4 MergeState￨4 mergeState￨4 ,￨4 int￨4 size￨4 ,￨4 ValueType￨4 type￨4 )￨3 {￨3 }￨3 }￨2 static￨2 List￨2 <￨2 SortedBytesMergeUtils￨2 .￨2 SortedSourceSlice￨2 >￨2 buildSlices￨2 (￨2 MergeState￨2 mergeState￨2 ,￨2 IndexDocValues￨2 [￨2 ]￨2 docValues￨2 ,￨2 SortedBytesMergeUtils￨2 .￨2 MergeContext￨2 ctx￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 createOrdMapping￨2 (￨2 MergeState￨3 mergeState￨3 ,￨3 SortedBytesMergeUtils￨3 .￨3 SortedSourceSlice￨3 currentSlice￨3 )￨2 {￨2 }￨2 static￨2 int￨2 mergeRecords￨2 (￨2 SortedBytesMergeUtils￨2 .￨2 MergeContext￨2 ctx￨2 ,￨2 IndexOutput￨2 datOut￨2 ,￨2 List￨2 <￨2 SortedBytesMergeUtils￨2 .￨2 SortedSourceSlice￨2 >￨2 slices￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 final￨2 class￨2 RecordMerger￨2 {￨2 private￨3 final￨3 SortedBytesMergeUtils￨3 .￨3 MergeQueue￨3 queue￨3 ;￨3 private￨3 final￨3 SortedBytesMergeUtils￨3 .￨3 SortedSourceSlice￨3 [￨3 ]￨3 top￨3 ;￨3 private￨3 int￨3 numTop￨3 ;￨3 BytesRef￨3 current￨3 ;￨3 int￨3 currentOrd￨3 =￨3 -￨3 1￨3 ;￨3 RecordMerger￨3 (￨3 SortedBytesMergeUtils￨4 .￨4 MergeQueue￨4 queue￨4 ,￨4 SortedBytesMergeUtils￨4 .￨4 SortedSourceSlice￨4 [￨4 ]￨4 top￨4 )￨3 {￨3 }￨3 private￨3 void￨3 pullTop￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 pushTop￨3 (￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 static￨2 class￨2 SortedSourceSlice￨2 {￨2 final￨3 SortedSource￨3 source￨3 ;￨3 final￨3 int￨3 readerIdx￨3 ;￨3 final￨3 int￨3 [￨3 ]￨3 docIDToRelativeOrd￨3 ;￨3 final￨3 int￨3 [￨3 ]￨3 ordMapping￨3 ;￨3 final￨3 int￨3 docToOrdStart￨3 ;￨3 final￨3 int￨3 docToOrdEnd￨3 ;￨3 BytesRef￨3 current￨3 =￨3 new￨3 BytesRef￨3 (￨3 )￨3 ;￨3 int￨3 relativeOrd￨3 =￨3 -￨3 1￨3 ;￨3 SortedSourceSlice￨3 (￨3 int￨4 readerIdx￨4 ,￨4 SortedSource￨4 source￨4 ,￨4 MergeState￨4 state￨4 ,￨4 int￨4 [￨4 ]￨4 docToOrd￨4 )￨3 {￨3 }￨3 private￨3 static￨3 int￨3 numDocs￨3 (￨3 MergeState￨4 state￨4 ,￨4 int￨4 readerIndex￨4 )￨3 {￨3 }￨3 BytesRef￨3 next￨3 (￨3 )￨3 {￨3 }￨3 void￨3 writeOrds￨3 (￨3 PackedInts￨3 .￨3 Writer￨3 writer￨3 )￨3 throws￨3 IOException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 final￨2 class￨2 MissingValueSource￨2 extends￨2 SortedSource￨2 {￨2 private￨3 BytesRef￨3 missingValue￨3 ;￨3 public￨3 MissingValueSource￨3 (￨3 SortedBytesMergeUtils￨4 .￨4 MergeContext￨4 ctx￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 ord￨3 (￨3 int￨4 docID￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 BytesRef￨3 getByOrd￨3 (￨3 int￨4 ord￨4 ,￨4 BytesRef￨4 bytesRef￨4 )￨3 {￨3 <START_BUG>￨4 bytesRef￨4 .￨4 copy￨4 (￨4 missingValue￨4 )￨4 ;￨4 <END_BUG>￨4 return￨4 bytesRef￨4 ;￨4 }￨3 @￨3 Override￨3 public￨3 Reader￨3 getDocToOrd￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 int￨3 getValueCount￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 final￨2 class￨2 MergeQueue￨2 extends￨2 PriorityQueue￨2 <￨2 SortedBytesMergeUtils￨2 .￨2 SortedSourceSlice￨2 >￨2 {￨2 final￨3 Comparator￨3 <￨3 BytesRef￨3 >￨3 comp￨3 ;￨3 public￨3 MergeQueue￨3 (￨3 int￨4 maxSize￨4 ,￨4 Comparator￨4 <￨4 BytesRef￨4 >￨4 comp￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 boolean￨3 lessThan￨3 (￨3 SortedBytesMergeUtils￨4 .￨4 SortedSourceSlice￨4 a￨4 ,￨4 SortedBytesMergeUtils￨4 .￨4 SortedSourceSlice￨4 b￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 OddEvenListItem￨1 <￨1 T￨1 >￨1 extends￨1 ListItem￨1 <￨1 T￨1 >￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CLASS_EVEN￨2 =￨2 "even"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 CLASS_ODD￨2 =￨2 "odd"￨2 ;￨2 public￨2 OddEvenListItem￨2 (￨2 int￨3 index￨3 ,￨3 IModel￨3 <￨3 T￨3 >￨3 model￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentTag￨2 (￨2 ComponentTag￨3 tag￨3 )￨2 {￨2 super￨3 .￨3 onComponentTag￨3 (￨3 tag￨3 )￨3 ;￨3 <START_BUG>￨3 tag￨3 .￨3 put￨3 (￨3 "class"￨3 ,￨3 (￨3 (￨3 (￨3 OddEvenListItem￨3 .￨3 getIndex￨3 (￨3 )￨3 )￨3 %￨3 2￨3 )￨3 ==￨3 0￨3 ?￨3 OddEvenListItem￨3 .￨3 CLASS_EVEN￨3 :￨3 OddEvenListItem￨3 .￨3 CLASS_ODD￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
public￨1 class￨1 CommandlineJava￨1 implements￨1 Cloneable￨1 {￨1 private￨2 Commandline￨2 vmCommand￨2 =￨2 new￨2 Commandline￨2 (￨2 )￨2 ;￨2 private￨2 Commandline￨2 javaCommand￨2 =￨2 new￨2 Commandline￨2 (￨2 )￨2 ;￨2 private￨2 CommandlineJava￨2 .￨2 SysProperties￨2 sysProperties￨2 =￨2 new￨2 CommandlineJava￨2 .￨2 SysProperties￨2 (￨2 )￨2 ;￨2 private￨2 Path￨2 classpath￨2 =￨2 null￨2 ;￨2 private￨2 String￨2 vmVersion￨2 ;￨2 public￨2 static￨2 class￨2 SysProperties￨2 extends￨2 Environment￨2 implements￨2 Cloneable￨2 {￨2 Properties￨3 sys￨3 =￨3 null￨3 ;￨3 public￨3 String￨3 [￨3 ]￨3 getVariables￨3 (￨3 )￨3 throws￨3 BuildException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 int￨3 size￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setSystem￨3 (￨3 )￨3 throws￨3 BuildException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 restoreSystem￨3 (￨3 )￨3 throws￨3 BuildException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Object￨3 clone￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 CommandlineJava￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Argument￨2 createArgument￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Argument￨2 createVmArgument￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addSysproperty￨2 (￨2 Environment￨3 .￨3 Variable￨3 sysp￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVm￨2 (￨2 String￨3 vm￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setVmversion￨2 (￨2 String￨3 value￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setClassname￨2 (￨2 String￨3 classname￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getClassname￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 createClasspath￨2 (￨2 Project￨3 p￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getVmversion￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getCommandline￨2 (￨2 )￨2 {￨2 Path￨3 fullClasspath￨3 =￨3 (￨3 (￨3 classpath￨3 )￨3 !=￨3 null￨3 )￨3 ?￨3 classpath￨3 .￨3 concatSystemClasspath￨3 (￨3 "ignore"￨3 )￨3 :￨3 null￨3 ;￨3 int￨3 size￨3 =￨3 (￨3 (￨3 vmCommand￨3 .￨3 size￨3 (￨3 )￨3 )￨3 +￨3 (￨3 javaCommand￨3 .￨3 size￨3 (￨3 )￨3 )￨3 )￨3 +￨3 (￨3 sysProperties￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 fullClasspath￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 fullClasspath￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨4 )￨3 {￨3 size￨4 +=￨4 2￨4 ;￨4 }￨3 String￨3 [￨3 ]￨3 result￨3 =￨3 new￨3 String￨3 [￨3 size￨3 ]￨3 ;￨3 System￨3 .￨3 arraycopy￨3 (￨3 vmCommand￨3 .￨3 getCommandline￨3 (￨3 )￨3 ,￨3 0￨3 ,￨3 result￨3 ,￨3 0￨3 ,￨3 vmCommand￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 int￨3 pos￨3 =￨3 vmCommand￨3 .￨3 size￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 sysProperties￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 System￨4 .￨4 arraycopy￨4 (￨4 sysProperties￨4 .￨4 getVariables￨4 (￨4 )￨4 ,￨4 0￨4 ,￨4 result￨4 ,￨4 pos￨4 ,￨4 sysProperties￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 pos￨4 +=￨4 sysProperties￨4 .￨4 size￨4 (￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 fullClasspath￨3 !=￨3 null￨3 )￨3 &&￨3 (￨3 (￨3 fullClasspath￨3 .￨3 size￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 result￨3 [￨3 (￨3 pos￨3 ++￨3 )￨3 ]￨3 =￨3 "-classpath"￨3 ;￨3 result￨3 [￨3 (￨3 pos￨3 ++￨3 )￨3 ]￨3 =￨3 fullClasspath￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨3 System￨3 .￨3 arraycopy￨3 (￨3 javaCommand￨3 .￨3 getCommandline￨3 (￨3 )￨3 ,￨3 0￨3 ,￨3 result￨3 ,￨3 pos￨3 ,￨3 javaCommand￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Commandline￨2 getJavaCommand￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Commandline￨2 getVmCommand￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Path￨2 getClasspath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSystemProperties￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 restoreSystemProperties￨2 (￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CommandlineJava￨2 .￨2 SysProperties￨2 getSystemProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 clearJavaArgs￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ConstructorDeclaration￨1 extends￨1 AbstractMethodDeclaration￨1 {￨1 public￨2 ExplicitConstructorCall￨2 constructorCall￨2 ;￨2 public￨2 static￨2 final￨2 char￨2 [￨2 ]￨2 ConstantPoolName￨2 =￨2 "<init>"￨2 .￨2 toCharArray￨2 (￨2 )￨2 ;￨2 public￨2 boolean￨2 isDefaultConstructor￨2 =￨2 false￨2 ;￨2 public￨2 ConstructorDeclaration￨2 (￨2 CompilationResult￨3 compilationResult￨3 )￨2 {￨2 }￨2 public￨2 void￨2 analyseCode￨2 (￨2 ClassScope￨3 classScope￨3 ,￨3 InitializationFlowContext￨3 initializerFlowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 ClassScope￨3 classScope￨3 ,￨3 ClassFile￨3 classFile￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateSyntheticFieldInitializationsIfNecessary￨2 (￨2 MethodScope￨3 methodScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 ReferenceBinding￨3 declaringClass￨3 )￨2 {￨2 }￨2 private￨2 void￨2 internalGenerateCode￨2 (￨2 ClassScope￨3 classScope￨3 ,￨3 ClassFile￨3 classFile￨3 )￨2 {￨2 classFile￨3 .￨3 generateMethodInfoHeader￨3 (￨3 binding￨3 )￨3 ;￨3 int￨3 methodAttributeOffset￨3 =￨3 classFile￨3 .￨3 contentsOffset￨3 ;￨3 int￨3 attributeNumber￨3 =￨3 classFile￨3 .￨3 generateMethodInfoAttribute￨3 (￨3 binding￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 !￨4 (￨4 binding￨4 .￨4 isNative￨4 (￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 binding￨4 .￨4 isAbstract￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 TypeDeclaration￨4 declaringType￨4 =￨4 classScope￨4 .￨4 referenceContext￨4 ;￨4 int￨4 codeAttributeOffset￨4 =￨4 classFile￨4 .￨4 contentsOffset￨4 ;￨4 classFile￨4 .￨4 generateCodeAttributeHeader￨4 (￨4 )￨4 ;￨4 CodeStream￨4 codeStream￨4 =￨4 classFile￨4 .￨4 codeStream￨4 ;￨4 codeStream￨4 .￨4 reset￨4 (￨4 this￨4 ,￨4 classFile￨4 )￨4 ;￨4 ReferenceBinding￨4 declaringClass￨4 =￨4 binding￨4 .￨4 declaringClass￨4 ;￨4 int￨4 argSlotSize￨4 =￨4 1￨4 ;￨4 if￨4 (￨4 declaringClass￨5 .￨5 isNestedType￨5 (￨5 )￨5 )￨4 {￨4 NestedTypeBinding￨5 nestedType￨5 =￨5 (￨5 (￨5 NestedTypeBinding￨5 )￨5 (￨5 declaringClass￨5 )￨5 )￨5 ;￨5 this￨5 .￨5 scope￨5 .￨5 extraSyntheticArguments￨5 =￨5 nestedType￨5 .￨5 syntheticOuterLocalVariables￨5 (￨5 )￨5 ;￨5 scope￨5 .￨5 computeLocalVariablePositions￨5 (￨5 (￨5 (￨5 nestedType￨5 .￨5 enclosingInstancesSlotSize￨5 )￨5 +￨5 1￨5 )￨5 ,￨5 codeStream￨5 )￨5 ;￨5 argSlotSize￨5 +=￨5 nestedType￨5 .￨5 enclosingInstancesSlotSize￨5 ;￨5 argSlotSize￨5 +=￨5 nestedType￨5 .￨5 outerLocalVariablesSlotSize￨5 ;￨5 }￨4 else￨4 {￨4 scope￨5 .￨5 computeLocalVariablePositions￨5 (￨5 1￨5 ,￨5 codeStream￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 arguments￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 max￨6 =￨6 arguments￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 max￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 LocalVariableBinding￨6 argBinding￨6 ;￨6 codeStream￨6 .￨6 addVisibleLocalVariable￨6 (￨6 (￨6 argBinding￨6 =￨6 arguments￨6 [￨6 i￨6 ]￨6 .￨6 binding￨6 )￨6 )￨6 ;￨6 argBinding￨6 .￨6 recordInitializationStartPC￨6 (￨6 0￨6 )￨6 ;￨6 TypeBinding￨6 argType￨6 ;￨6 if￨6 (￨6 (￨7 (￨7 argType￨7 =￨7 argBinding￨7 .￨7 type￨7 )￨7 ==￨7 (￨7 LongBinding￨7 )￨7 )￨7 ||￨7 (￨7 argType￨7 ==￨7 (￨7 DoubleBinding￨7 )￨7 )￨7 )￨6 {￨6 argSlotSize￨7 +=￨7 2￨7 ;￨7 }￨6 else￨6 {￨6 argSlotSize￨7 ++￨7 ;￨7 }￨6 }￨5 }￨4 MethodScope￨4 initializerScope￨4 =￨4 declaringType￨4 .￨4 initializerScope￨4 ;￨4 initializerScope￨4 .￨4 computeLocalVariablePositions￨4 (￨4 argSlotSize￨4 ,￨4 codeStream￨4 )￨4 ;￨4 boolean￨4 needFieldInitializations￨4 =￨4 (￨4 (￨4 constructorCall￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 (￨4 constructorCall￨4 .￨4 accessMode￨4 )￨4 !=￨4 (￨4 ExplicitConstructorCall￨4 .￨4 This￨4 )￨4 )￨4 ;￨4 boolean￨4 preInitSyntheticFields￨4 =￨4 (￨4 scope￨4 .￨4 environment￨4 (￨4 )￨4 .￨4 options￨4 .￨4 targetJDK￨4 )￨4 >=￨4 (￨4 ClassFileConstants￨4 .￨4 JDK1_4￨4 )￨4 ;￨4 if￨4 (￨4 needFieldInitializations￨5 &&￨5 preInitSyntheticFields￨5 )￨4 {￨4 generateSyntheticFieldInitializationsIfNecessary￨5 (￨5 scope￨5 ,￨5 codeStream￨5 ,￨5 declaringClass￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 constructorCall￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 constructorCall￨5 .￨5 generateCode￨5 (￨5 scope￨5 ,￨5 codeStream￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 needFieldInitializations￨5 )￨4 {￨4 if￨5 (￨5 !￨6 preInitSyntheticFields￨6 )￨5 {￨5 generateSyntheticFieldInitializationsIfNecessary￨6 (￨6 scope￨6 ,￨6 codeStream￨6 ,￨6 declaringClass￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 declaringType￨6 .￨6 fields￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ,￨7 max￨7 =￨7 declaringType￨7 .￨7 fields￨7 .￨7 length￨7 ;￨7 i￨7 <￨7 max￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 FieldDeclaration￨7 fieldDecl￨7 ;￨7 if￨7 (￨7 !￨8 (￨8 (￨8 fieldDecl￨8 =￨8 declaringType￨8 .￨8 fields￨8 [￨8 i￨8 ]￨8 )￨8 .￨8 isStatic￨8 (￨8 )￨8 )￨8 )￨7 {￨7 fieldDecl￨8 .￨8 generateCode￨8 (￨8 initializerScope￨8 ,￨8 codeStream￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 }￨4 if￨4 (￨4 (￨5 statements￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ,￨6 max￨6 =￨6 statements￨6 .￨6 length￨6 ;￨6 i￨6 <￨6 max￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 statements￨6 [￨6 i￨6 ]￨6 .￨6 generateCode￨6 (￨6 scope￨6 ,￨6 codeStream￨6 )￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 this￨5 .￨5 needFreeReturn￨5 )￨4 {￨4 codeStream￨5 .￨5 return_￨5 (￨5 )￨5 ;￨5 }￨4 codeStream￨4 .￨4 exitUserScope￨4 (￨4 scope￨4 )￨4 ;￨4 codeStream￨4 .￨4 recordPositionsFrom￨4 (￨4 0￨4 ,￨4 this￨4 .￨4 bodyEnd￨4 )￨4 ;￨4 classFile￨4 .￨4 completeCodeAttribute￨4 (￨4 codeAttributeOffset￨4 )￨4 ;￨4 attributeNumber￨4 ++￨4 ;￨4 }￨3 classFile￨3 .￨3 completeMethodInfo￨3 (￨3 methodAttributeOffset￨3 ,￨3 attributeNumber￨3 )￨3 ;￨3 if￨3 (￨3 ignoreFurtherInvestigation￨4 )￨3 {￨3 <START_BUG>￨4 throw￨4 new￨4 org￨4 .￨4 eclipse￨4 .￨4 jdt￨4 .￨4 internal￨4 .￨4 compiler￨4 .￨4 problem￨4 .￨4 AbortMethod￨4 (￨4 scope￨4 .￨4 referenceCompilationUnit￨4 (￨4 )￨4 .￨4 compilationResult￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 }￨2 public￨2 boolean￨2 isConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDefaultConstructor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInitializationMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isRecursive￨2 (￨2 ArrayList￨3 visited￨3 )￨2 {￨2 }￨2 public￨2 void￨2 parseStatements￨2 (￨2 Parser￨3 parser￨3 ,￨3 CompilationUnitDeclaration￨3 unit￨3 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printBody￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resolveJavadoc￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolveStatements￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 ClassScope￨3 classScope￨3 )￨2 {￨2 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 PureTestCase￨1 extends￨1 AbstractMgmtTestBase￨1 {￨1 public￨2 static￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 AfterClass￨2 public￨2 static￨2 void￨2 tearDown￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deployment￨2 public￨2 static￨2 ResourceAdapterArchive￨2 createDeployment￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Inject￨2 public￨2 ServiceContainer￨2 serviceContainer￨2 ;￨2 @￨2 Test￨2 public￨2 void￨2 testRegistryConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 ServiceController￨3 <￨3 ?￨3 >￨3 controller￨3 =￨3 serviceContainer￨3 .￨3 getService￨3 (￨3 RA_REPOSISTORY_SERVICE￨3 )￨3 ;￨3 <END_BUG>￨3 assertNotNull￨3 (￨3 controller￨3 )￨3 ;￨3 ResourceAdapterRepository￨3 repository￨3 =￨3 (￨3 (￨3 ResourceAdapterRepository￨3 )￨3 (￨3 controller￨3 .￨3 getValue￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 repository￨3 )￨3 ;￨3 Set￨3 <￨3 String￨3 >￨3 ids￨3 =￨3 repository￨3 .￨3 getResourceAdapters￨3 (￨3 )￨3 ;￨3 assertNotNull￨3 (￨3 ids￨3 )￨3 ;￨3 assertEquals￨3 (￨3 2￨3 ,￨3 ids￨3 .￨3 size￨3 (￨3 )￨3 )￨3 ;￨3 for￨3 (￨3 String￨4 piId￨4 :￨4 ids￨4 )￨3 {￨3 assertNotNull￨4 (￨4 piId￨4 )￨4 ;￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 (￨4 "PID:"￨4 +￨4 piId￨4 )￨4 )￨4 ;￨4 assertNotNull￨4 (￨4 repository￨4 .￨4 getResourceAdapter￨4 (￨4 piId￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testMetadataConfiguration￨2 (￨2 )￨2 throws￨2 Throwable￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 MemoryManagerMXBeanAttributeHandler￨1 extends￨1 AbstractPlatformMBeanAttributeHandler￨1 {￨1 static￨2 final￨2 MemoryManagerMXBeanAttributeHandler￨2 INSTANCE￨2 =￨2 new￨2 MemoryManagerMXBeanAttributeHandler￨2 (￨2 )￨2 ;￨2 private￨2 MemoryManagerMXBeanAttributeHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeReadAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 String￨3 mmName￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 operation￨3 .￨3 require￨3 (￨3 OP_ADDR￨3 )￨3 )￨3 .￨3 getLastElement￨3 (￨3 )￨3 .￨3 getValue￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 name￨3 =￨3 operation￨3 .￨3 require￨3 (￨3 NAME￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 MemoryManagerMXBean￨3 memoryManagerMXBean￨3 =￨3 null￨3 ;￨3 for￨3 (￨3 MemoryManagerMXBean￨4 mbean￨4 :￨4 ManagementFactory￨4 .￨4 getMemoryManagerMXBeans￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 mmName￨5 .￨5 equals￨5 (￨5 PlatformMBeanUtil￨5 .￨5 escapeMBeanName￨5 (￨5 mbean￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 memoryManagerMXBean￨5 =￨5 mbean￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 memoryManagerMXBean￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 ROOT_LOGGER￨4 .￨4 unknownMemoryManager￨4 (￨4 mmName￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 OBJECT_NAME￨3 .￨3 getName￨3 (￨3 )￨3 .￨3 equals￨3 (￨3 name￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 final￨3 String￨3 objName￨3 =￨3 PlatformMBeanUtil￨3 .￨3 getObjectNameStringWithNameKey￨3 (￨3 ManagementFactory￨3 .￨3 MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE￨3 ,￨3 mmName￨3 )￨3 ;￨3 context￨3 .￨3 getResult￨3 (￨3 )￨3 .￨3 set￨3 (￨3 objName￨3 )￨3 ;￨3 else￨3 if￨3 (￨3 NAME￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 PlatformMBeanUtil￨4 .￨4 escapeMBeanName￨4 (￨4 memoryManagerMXBean￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 VALID￨4 .￨4 getName￨4 (￨4 )￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 context￨4 .￨4 getResult￨4 (￨4 )￨4 .￨4 set￨4 (￨4 memoryManagerMXBean￨4 .￨4 isValid￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 MEMORY_POOL_NAMES￨4 .￨4 equals￨4 (￨4 name￨4 )￨4 )￨3 {￨3 final￨4 ModelNode￨4 result￨4 =￨4 context￨4 .￨4 getResult￨4 (￨4 )￨4 ;￨4 result￨4 .￨4 setEmptyList￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 pool￨5 :￨5 memoryManagerMXBean￨5 .￨5 getMemoryPoolNames￨5 (￨5 )￨5 )￨4 {￨4 result￨5 .￨5 add￨5 (￨5 PlatformMBeanUtil￨5 .￨5 escapeMBeanName￨5 (￨5 pool￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 if￨3 (￨3 MEMORY_MANAGER_READ_ATTRIBUTES￨4 .￨4 contains￨4 (￨4 name￨4 )￨4 )￨3 {￨3 throw￨4 ROOT_LOGGER￨4 .￨4 badReadAttributeImpl￨4 (￨4 name￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 unknownAttribute￨4 (￨4 operation￨4 )￨4 ;￨4 }￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 executeWriteAttribute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PathExtensionContentNegotiationStrategyTests￨1 {￨1 private￨2 NativeWebRequest￨2 webRequest￨2 ;￨2 private￨2 MockHttpServletRequest￨2 servletRequest￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 setup￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 resolveMediaTypesFromMapping￨2 (￨2 )￨2 {￨2 this￨3 .￨3 servletRequest￨3 .￨3 setRequestURI￨3 (￨3 "test.html"￨3 )￨3 ;￨3 PathExtensionContentNegotiationStrategy￨3 strategy￨3 =￨3 new￨3 PathExtensionContentNegotiationStrategy￨3 (￨3 )￨3 ;￨3 List￨3 <￨3 MediaType￨3 >￨3 mediaTypes￨3 =￨3 strategy￨3 .￨3 resolveMediaTypes￨3 (￨3 this￨3 .￨3 webRequest￨3 )￨3 ;￨3 assertEquals￨3 (￨3 Arrays￨3 .￨3 asList￨3 (￨3 new￨3 MediaType￨3 (￨3 "text"￨3 ,￨3 "html"￨3 )￨3 )￨3 ,￨3 mediaTypes￨3 )￨3 ;￨3 <START_BUG>￨3 strategy￨3 =￨3 new￨3 PathExtensionContentNegotiationStrategy￨3 (￨3 Collections￨3 .￨3 singletonMap￨3 (￨3 "HTML"￨3 ,￨3 "application/xhtml+xml"￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 mediaTypes￨3 =￨3 strategy￨3 .￨3 resolveMediaTypes￨3 (￨3 this￨3 .￨3 webRequest￨3 )￨3 ;￨3 assertEquals￨3 (￨3 Arrays￨3 .￨3 asList￨3 (￨3 new￨3 MediaType￨3 (￨3 "application"￨3 ,￨3 "xhtml+xml"￨3 )￨3 )￨3 ,￨3 mediaTypes￨3 )￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 resolveMediaTypesFromJaf￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getMediaTypeFromFilenameNoJaf￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getMediaTypeFilenameWithContextPath￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getMediaTypeFilenameWithEncodedURI￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 StatisticalSampleSender￨1 extends￨1 AbstractSampleSender￨1 implements￨1 Serializable￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 240L￨2 ;￨2 private￨2 static￨2 final￨2 Logger￨2 log￨2 =￨2 LoggingManager￨2 .￨2 getLoggerForClass￨2 (￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 DEFAULT_NUM_SAMPLE_THRESHOLD￨2 =￨2 100￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 DEFAULT_TIME_THRESHOLD￨2 =￨2 60000L￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 NUM_SAMPLES_THRESHOLD￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "num_sample_threshold"￨2 ,￨2 StatisticalSampleSender￨2 .￨2 DEFAULT_NUM_SAMPLE_THRESHOLD￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 TIME_THRESHOLD_MS￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "time_threshold"￨2 ,￨2 StatisticalSampleSender￨2 .￨2 DEFAULT_TIME_THRESHOLD￨2 )￨2 ;￨2 private￨2 static￨2 boolean￨2 KEY_ON_THREADNAME￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "key_on_threadname"￨2 ,￨2 false￨2 )￨2 ;￨2 private￨2 final￨2 int￨2 clientConfiguredNumSamplesThreshold￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "num_sample_threshold"￨2 ,￨2 StatisticalSampleSender￨2 .￨2 DEFAULT_NUM_SAMPLE_THRESHOLD￨2 )￨2 ;￨2 private￨2 final￨2 long￨2 clientConfiguredTimeThresholdMs￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "time_threshold"￨2 ,￨2 StatisticalSampleSender￨2 .￨2 DEFAULT_TIME_THRESHOLD￨2 )￨2 ;￨2 private￨2 final￨2 boolean￨2 clientConfiguredKeyOnThreadName￨2 =￨2 JMeterUtils￨2 .￨2 getPropDefault￨2 (￨2 "key_on_threadname"￨2 ,￨2 false￨2 )￨2 ;￨2 private￨2 final￨2 RemoteSampleListener￨2 listener￨2 ;￨2 private￨2 final￨2 List￨2 <￨2 SampleEvent￨2 >￨2 sampleStore￨2 =￨2 new￨2 ArrayList￨2 <￨2 SampleEvent￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 StatisticalSampleResult￨2 >￨2 sampleTable￨2 =￨2 new￨2 HashMap￨2 <￨2 String￨2 ,￨2 StatisticalSampleResult￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 volatile￨2 transient￨2 int￨2 numSamplesThreshold￨2 ;￨2 private￨2 volatile￨2 transient￨2 long￨2 timeThresholdMs￨2 ;￨2 private￨2 volatile￨2 transient￨2 boolean￨2 keyOnThreadName￨2 ;￨2 private￨2 transient￨2 int￨2 sampleCount￨2 ;￨2 private￨2 transient￨2 long￨2 batchSendTime￨2 =￨2 -￨2 1￨2 ;￨2 @￨2 Deprecated￨2 public￨2 StatisticalSampleSender￨2 (￨2 )￨2 {￨2 }￨2 StatisticalSampleSender￨2 (￨2 RemoteSampleListener￨3 listener￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 testEnded￨2 (￨2 String￨3 host￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 sampleOccurred￨2 (￨2 SampleEvent￨3 e￨3 )￨2 {￨2 synchronized￨3 (￨3 sampleStore￨4 )￨3 {￨3 String￨4 key￨4 =￨4 StatisticalSampleResult￨4 .￨4 getKey￨4 (￨4 e￨4 ,￨4 keyOnThreadName￨4 )￨4 ;￨4 StatisticalSampleResult￨4 statResult￨4 =￨4 sampleTable￨4 .￨4 get￨4 (￨4 key￨4 )￨4 ;￨4 if￨4 (￨4 statResult￨5 ==￨5 null￨5 )￨4 {￨4 <START_BUG>￨5 statResult￨5 =￨5 new￨5 StatisticalSampleResult￨5 (￨5 e￨5 .￨5 getResult￨5 (￨5 )￨5 ,￨5 keyOnThreadName￨5 )￨5 ;￨5 <END_BUG>￨5 sampleTable￨5 .￨5 put￨5 (￨5 key￨5 ,￨5 statResult￨5 )￨5 ;￨5 sampleStore￨5 .￨5 add￨5 (￨5 new￨5 SampleEvent￨5 (￨5 statResult￨5 ,￨5 e￨5 .￨5 getThreadGroup￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 statResult￨4 .￨4 add￨4 (￨4 e￨4 .￨4 getResult￨4 (￨4 )￨4 )￨4 ;￨4 (￨4 sampleCount￨4 )￨4 ++￨4 ;￨4 boolean￨4 sendNow￨4 =￨4 false￨4 ;￨4 if￨4 (￨4 (￨5 numSamplesThreshold￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 if￨5 (￨5 (￨6 sampleCount￨6 )￨6 >=￨6 (￨6 numSamplesThreshold￨6 )￨6 )￨5 {￨5 sendNow￨6 =￨6 true￨6 ;￨6 }￨5 }￨4 long￨4 now￨4 =￨4 0￨4 ;￨4 if￨4 (￨4 (￨5 timeThresholdMs￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 now￨5 =￨5 System￨5 .￨5 currentTimeMillis￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 batchSendTime￨6 )￨6 ==￨6 (￨6 -￨6 1￨6 )￨6 )￨5 {￨5 this￨6 .￨6 batchSendTime￨6 =￨6 now￨6 +￨6 (￨6 timeThresholdMs￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 (￨6 batchSendTime￨6 )￨6 <￨6 now￨6 )￨5 {￨5 sendNow￨6 =￨6 true￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 sendNow￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 if￨6 (￨6 StatisticalSampleSender￨7 .￨7 log￨7 .￨7 isDebugEnabled￨7 (￨7 )￨7 )￨6 {￨6 StatisticalSampleSender￨7 .￨7 log￨7 .￨7 debug￨7 (￨7 "Firing<seq2seq4repair_space>sample"￨7 )￨7 ;￨7 }￨6 sendBatch￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 timeThresholdMs￨7 )￨7 !=￨7 (￨7 -￨7 1￨7 )￨7 )￨6 {￨6 this￨7 .￨7 batchSendTime￨7 =￨7 now￨7 +￨7 (￨7 timeThresholdMs￨7 )￨7 ;￨7 }￨6 }￨5 catch￨5 (￨5 RemoteException￨6 err￨6 )￨5 {￨5 StatisticalSampleSender￨6 .￨6 log￨6 .￨6 warn￨6 (￨6 "sampleOccurred"￨6 ,￨6 err￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 }￨2 private￨2 void￨2 sendBatch￨2 (￨2 )￨2 throws￨2 RemoteException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Object￨2 readResolve￨2 (￨2 )￨2 throws￨2 ObjectStreamException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractTestComparator￨1 <￨1 T￨1 >￨1 extends￨1 AbstractTestObject￨1 {￨1 public￨2 AbstractTestComparator￨2 (￨2 String￨3 testName￨3 )￨2 {￨2 }￨2 public￨2 abstract￨2 List￨2 <￨2 T￨2 >￨2 getComparableObjectsOrdered￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 Comparator￨2 <￨2 T￨2 >￨2 makeObject￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsEmptyCollections￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 supportsFullCollections￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getCompatibilityVersion￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 reverseObjects￨2 (￨2 List￨3 <￨3 ?￨3 >￨3 list￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 randomizeObjects￨2 (￨2 List￨3 <￨3 ?￨3 >￨3 list￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 sortObjects￨2 (￨2 List￨3 <￨3 T￨3 >￨3 list￨3 ,￨3 Comparator￨3 <￨3 ?￨3 super￨3 T￨3 >￨3 comparator￨3 )￨2 {￨2 }￨2 public￨2 void￨2 testEmptyListSort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testReverseListSort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testRandomListSort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testComparatorIsSerializable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 getCanonicalComparatorName￨2 (￨2 Object￨3 object￨3 )￨2 {￨2 <START_BUG>￨3 StringBuffer￨3 retval￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 retval￨3 .￨3 append￨3 (￨3 "data/test/"￨3 )￨3 ;￨3 String￨3 colName￨3 =￨3 object￨3 .￨3 getClass￨3 (￨3 )￨3 .￨3 getName￨3 (￨3 )￨3 ;￨3 colName￨3 =￨3 colName￨3 .￨3 substring￨3 (￨3 (￨3 (￨3 colName￨3 .￨3 lastIndexOf￨3 (￨3 "."￨3 )￨3 )￨3 +￨3 1￨3 )￨3 ,￨3 colName￨3 .￨3 length￨3 (￨3 )￨3 )￨3 ;￨3 retval￨3 .￨3 append￨3 (￨3 colName￨3 )￨3 ;￨3 retval￨3 .￨3 append￨3 (￨3 ".version"￨3 )￨3 ;￨3 retval￨3 .￨3 append￨3 (￨3 getCompatibilityVersion￨3 (￨3 )￨3 )￨3 ;￨3 retval￨3 .￨3 append￨3 (￨3 ".obj"￨3 )￨3 ;￨3 return￨3 retval￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 void￨2 testComparatorCompatibility￨2 (￨2 )￨2 throws￨2 IOException￨2 ,￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 AbstractAutoCompleteBehavior￨1 extends￨1 AbstractDefaultAjaxBehavior￨1 {￨1 private￨2 static￨2 final￨2 CompressedResourceReference￨2 AUTOCOMPLETE_JS￨2 =￨2 new￨2 CompressedResourceReference￨2 (￨2 AutoCompleteBehavior￨2 .￨2 class￨2 ,￨2 "wicket-autocomplete.js"￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 @￨2 Override￨2 public￨2 void￨2 renderHead￨2 (￨2 IHeaderResponse￨2 response￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 onComponentRendered￨2 (￨2 )￨2 {￨2 Response￨3 response￨3 =￨3 getComponent￨3 (￨3 )￨3 .￨3 getResponse￨3 (￨3 )￨3 ;￨3 final￨3 String￨3 id￨3 =￨3 getComponent￨3 (￨3 )￨3 .￨3 getMarkupId￨3 (￨3 )￨3 ;￨3 response￨3 .￨3 write￨3 (￨3 SCRIPT_OPEN_TAG￨3 )￨3 ;￨3 <START_BUG>￨3 response￨3 .￨3 write￨3 (￨3 (￨3 (￨3 (￨3 (￨3 "new<seq2seq4repair_space>Wicket.Ajax.AutoComplete('"￨3 +￨3 id￨3 )￨3 +￨3 "','"￨3 )￨3 +￨3 (￨3 getCallbackUrl￨3 (￨3 )￨3 )￨3 )￨3 +￨3 "');"￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 response￨3 .￨3 write￨3 (￨3 SCRIPT_CLOSE_TAG￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 protected￨2 void￨2 respond￨2 (￨2 AjaxRequestTarget￨3 target￨3 )￨2 {￨2 }￨2 protected￨2 abstract￨2 void￨2 onRequest￨2 (￨2 String￨3 input￨3 ,￨3 RequestCycle￨3 requestCycle￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RAttributeAttributeGroup￨1 extends￨1 org￨1 .￨1 tigris￨1 .￨1 scarab￨1 .￨1 om￨1 .￨1 BaseRAttributeAttributeGroup￨1 implements￨1 UnsecurePersistent￨1 {￨1 public￨2 void￨2 delete￨2 (￨2 ScarabUser￨2 user￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 ModuleEntity￨3 module￨3 =￨3 getAttributeGroup￨3 (￨3 )￨3 .￨3 getScarabModule￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 ScarabSecurity￨3 security￨3 =￨3 SecurityFactory￨3 .￨3 getInstance￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 security￨4 .￨4 hasPermission￨4 (￨4 ITEM__APPROVE￨4 ,￨4 user￨4 ,￨4 module￨4 )￨4 )￨3 {￨3 Criteria￨4 c￨4 =￨4 new￨4 Criteria￨4 (￨4 )￨4 .￨4 add￨4 (￨4 GROUP_ID￨4 ,￨4 getGroupId￨4 (￨4 )￨4 )￨4 .￨4 add￨4 (￨4 ATTRIBUTE_ID￨4 ,￨4 getAttributeId￨4 (￨4 )￨4 )￨4 ;￨4 RAttributeAttributeGroupPeer￨4 .￨4 doDelete￨4 (￨4 c￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 new￨4 org￨4 .￨4 tigris￨4 .￨4 scarab￨4 .￨4 util￨4 .￨4 ScarabException￨4 (￨4 ScarabConstants￨4 .￨4 NO_PERMISSION_MESSAGE￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 ParsedRaDeploymentProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 public￨2 ParsedRaDeploymentProcessor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 final￨3 ConnectorXmlDescriptor￨3 connectorXmlDescriptor￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 .￨3 getAttachment￨3 (￨3 ATTACHMENT_KEY￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 registration￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 baseRegistration￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 .￨3 getAttachment￨3 (￨3 MUTABLE_REGISTRATION_ATTACHMENT￨3 )￨3 ;￨3 final￨3 Resource￨3 deploymentResource￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 .￨3 getAttachment￨3 (￨3 DEPLOYMENT_RESOURCE￨3 )￨3 ;￨3 if￨3 (￨3 connectorXmlDescriptor￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 final￨3 ServiceTarget￨3 serviceTarget￨3 =￨3 phaseContext￨3 .￨3 getServiceTarget￨3 (￨3 )￨3 ;￨3 final￨3 DeploymentUnit￨3 deploymentUnit￨3 =￨3 phaseContext￨3 .￨3 getDeploymentUnit￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 deploymentUnit￨4 .￨4 getParent￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 registration￨4 =￨4 baseRegistration￨4 .￨4 getSubModel￨4 (￨4 PathAddress￨4 .￨4 pathAddress￨4 (￨4 PathElement￨4 .￨4 pathElement￨4 (￨4 "subdeployment"￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 registration￨4 =￨4 baseRegistration￨4 ;￨4 }￨3 final￨3 IronJacamarXmlDescriptor￨3 ironJacamarXmlDescriptor￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 IronJacamarXmlDescriptor￨3 .￨3 ATTACHMENT_KEY￨3 )￨3 ;￨3 final￨3 Module￨3 module￨3 =￨3 deploymentUnit￨3 .￨3 getAttachment￨3 (￨3 MODULE￨3 )￨3 ;￨3 if￨3 (￨3 module￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 ROOT_LOGGER￨4 .￨4 failedToGetModuleAttachment￨4 (￨4 phaseContext￨4 .￨4 getDeploymentUnit￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 DEPLOYMENT_CONNECTOR_LOGGER￨3 .￨3 debugf￨3 (￨3 "ParsedRaDeploymentProcessor:<seq2seq4repair_space>Processing=%s"￨3 ,￨3 deploymentUnit￨3 )￨3 ;￨3 final￨3 ClassLoader￨3 classLoader￨3 =￨3 module￨3 .￨3 getClassLoader￨3 (￨3 )￨3 ;￨3 Map￨3 <￨3 ResourceRoot￨3 ,￨3 Index￨3 >￨3 annotationIndexes￨3 =￨3 AnnotationIndexUtils￨3 .￨3 getAnnotationIndexes￨3 (￨3 deploymentUnit￨3 )￨3 ;￨3 ServiceBuilder￨3 builder￨3 =￨3 ParsedRaDeploymentProcessor￨3 .￨3 process￨3 (￨3 connectorXmlDescriptor￨3 ,￨3 ironJacamarXmlDescriptor￨3 ,￨3 classLoader￨3 ,￨3 serviceTarget￨3 ,￨3 annotationIndexes￨3 ,￨3 deploymentUnit￨3 .￨3 getServiceName￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 builder￨4 !=￨4 null￨4 )￨3 {￨3 String￨4 bootstrapCtx￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 ironJacamarXmlDescriptor￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 (￨5 ironJacamarXmlDescriptor￨5 .￨5 getIronJacamar￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 ironJacamarXmlDescriptor￨5 .￨5 getIronJacamar￨5 (￨5 )￨5 .￨5 getBootstrapContext￨5 (￨5 )￨5 )￨5 !=￨5 null￨5 )￨5 )￨4 {￨4 bootstrapCtx￨5 =￨5 ironJacamarXmlDescriptor￨5 .￨5 getIronJacamar￨5 (￨5 )￨5 .￨5 getBootstrapContext￨5 (￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 bootstrapCtx￨5 ==￨5 null￨5 )￨4 {￨4 bootstrapCtx￨5 =￨5 "default"￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 registration￨5 .￨5 isAllowsOverride￨5 (￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 registration￨5 .￨5 getOverrideModel￨5 (￨5 deploymentUnit￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨5 ==￨5 null￨5 )￨5 )￨4 {￨4 registration￨5 .￨5 registerOverrideModel￨5 (￨5 deploymentUnit￨5 .￨5 getName￨5 (￨5 )￨5 ,￨5 new￨5 OverrideDescriptionProvider￨5 (￨5 )￨5 {￨5 @￨6 Override￨6 public￨6 Map￨6 <￨6 String￨6 ,￨6 ModelNode￨6 >￨6 getAttributeOverrideDescriptions￨6 (￨6 Locale￨7 locale￨7 )￨6 {￨6 return￨7 Collections￨7 .￨7 emptyMap￨7 (￨7 )￨7 ;￨7 }￨6 @￨6 Override￨6 public￨6 Map￨6 <￨6 String￨6 ,￨6 ModelNode￨6 >￨6 getChildTypeOverrideDescriptions￨6 (￨6 Locale￨7 locale￨7 )￨6 {￨6 return￨7 Collections￨7 .￨7 emptyMap￨7 (￨7 )￨7 ;￨7 }￨6 }￨5 )￨5 ;￨5 }￨4 <START_BUG>￨4 builder￨4 .￨4 addListener￨4 (￨4 new￨4 AbstractResourceAdapterDeploymentServiceListener￨4 (￨4 registration￨4 ,￨4 deploymentUnit￨4 .￨4 getName￨4 (￨4 )￨4 ,￨4 deploymentResource￨4 ,￨4 bootstrapCtx￨4 ,￨4 deploymentUnit￨4 .￨4 getName￨4 (￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 @￨4 Override￨4 protected￨4 void￨4 registerIronjacamar￨4 (￨4 final￨5 ServiceController￨5 <￨5 ?￨5 extends￨5 Object￨5 >￨5 controller￨5 ,￨5 final￨5 ManagementResourceRegistration￨5 subRegistration￨5 ,￨5 final￨5 Resource￨5 subsystemResource￨5 )￨4 {￨4 try￨5 (￨5 )￨5 {￨5 subRegistration￨6 .￨6 registerSubModel￨6 (￨6 new￨6 IronJacamarResourceDefinition￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 IllegalArgumentException￨6 iae￨6 )￨5 {￨5 }￨5 AS7MetadataRepository￨5 mdr￨5 =￨5 (￨5 (￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 connector￨5 .￨5 services￨5 .￨5 resourceadapters￨5 .￨5 deployment￨5 .￨5 ResourceAdapterDeploymentService￨5 )￨5 (￨5 controller￨5 .￨5 getService￨5 (￨5 )￨5 )￨5 )￨5 .￨5 getMdr￨5 (￨5 )￨5 ;￨5 INSTANCE￨5 .￨5 execute￨5 (￨5 subsystemResource￨5 ,￨5 mdr￨5 )￨5 ;￨5 }￨4 @￨4 Override￨4 protected￨4 CommonDeployment￨4 getDeploymentMetadata￨4 (￨4 final￨5 ServiceController￨5 <￨5 ?￨5 extends￨5 Object￨5 >￨5 controller￨5 )￨4 {￨4 return￨5 (￨5 (￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 connector￨5 .￨5 services￨5 .￨5 resourceadapters￨5 .￨5 deployment￨5 .￨5 ResourceAdapterDeploymentService￨5 )￨5 (￨5 controller￨5 .￨5 getService￨5 (￨5 )￨5 )￨5 )￨5 .￨5 getRaDeployment￨5 (￨5 )￨5 ;￨5 }￨4 }￨4 )￨4 ;￨4 builder￨4 .￨4 setInitialMode￨4 (￨4 ACTIVE￨4 )￨4 .￨4 install￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 ServiceBuilder￨2 process￨2 (￨2 final￨2 ConnectorXmlDescriptor￨2 connectorXmlDescriptor￨2 ,￨2 final￨2 IronJacamarXmlDescriptor￨2 ironJacamarXmlDescriptor￨2 ,￨2 final￨2 ClassLoader￨2 classLoader￨2 ,￨2 final￨2 ServiceTarget￨2 serviceTarget￨2 ,￨2 final￨2 Map￨2 <￨2 ResourceRoot￨2 ,￨2 Index￨2 >￨2 annotationIndexes￨2 ,￨2 final￨2 ServiceName￨2 duServiceName￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 undeploy￨2 (￨2 final￨3 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SendAllMessagesCommand￨1 extends￨1 FolderCommand￨1 {￨1 protected￨2 SendListManager￨2 sendListManager￨2 =￨2 new￨2 SendListManager￨2 (￨2 )￨2 ;￨2 protected￨2 OutboxFolder￨2 outboxFolder￨2 ;￨2 public￨2 SendAllMessagesCommand￨2 (￨2 FrameController￨3 frameController￨3 ,￨3 DefaultCommandReference￨3 [￨3 ]￨3 references￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 Worker￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 FolderCommandReference￨3 [￨3 ]￨3 r￨3 =￨3 (￨3 (￨3 FolderCommandReference￨3 [￨3 ]￨3 )￨3 (￨3 getReferences￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 outboxFolder￨3 =￨3 (￨3 (￨3 OutboxFolder￨3 )￨3 (￨3 r￨3 [￨3 0￨3 ]￨3 .￨3 getFolder￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 Object￨3 [￨3 ]￨3 uids￨3 =￨3 outboxFolder￨3 .￨3 getUids￨3 (￨3 worker￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 uids￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 outboxFolder￨4 .￨4 exists￨4 (￨4 uids￨4 [￨4 i￨4 ]￨4 )￨4 )￨4 ==￨4 true￨4 )￨4 {￨4 <END_BUG>￨4 SendableMessage￨4 message￨4 =￨4 (￨4 (￨4 SendableMessage￨4 )￨4 (￨4 outboxFolder￨4 .￨4 getMessage￨4 (￨4 uids￨4 [￨4 i￨4 ]￨4 ,￨4 worker￨4 )￨4 )￨4 )￨4 ;￨4 sendListManager￨4 .￨4 add￨4 (￨4 message￨4 )￨4 ;￨4 }￨3 int￨3 actAccountUid￨3 =￨3 -￨3 1￨3 ;￨3 Vector￨3 sentList￨3 =￨3 new￨3 Vector￨3 (￨3 )￨3 ;￨3 boolean￨3 open￨3 =￨3 false￨3 ;￨3 SMTPServer￨3 smtpServer￨3 =￨3 null￨3 ;￨3 Folder￨3 sentFolder￨3 =￨3 null￨3 ;￨3 while￨3 (￨3 sendListManager￨4 .￨4 hasMoreMessages￨4 (￨4 )￨4 )￨3 {￨3 SendableMessage￨4 message￨4 =￨4 sendListManager￨4 .￨4 getNextMessage￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 message￨5 .￨5 getAccountUid￨5 (￨5 )￨5 )￨5 !=￨5 actAccountUid￨5 )￨4 {￨4 if￨5 (￨5 (￨6 sentList￨6 .￨6 size￨6 (￨6 )￨6 )￨6 !=￨6 0￨6 )￨5 {￨5 sentList￨6 .￨6 clear￨6 (￨6 )￨6 ;￨6 }￨5 actAccountUid￨5 =￨5 message￨5 .￨5 getAccountUid￨5 (￨5 )￨5 ;￨5 AccountItem￨5 accountItem￨5 =￨5 MailConfig￨5 .￨5 getAccountList￨5 (￨5 )￨5 .￨5 uidGet￨5 (￨5 actAccountUid￨5 )￨5 ;￨5 sentFolder￨5 =￨5 (￨5 (￨5 Folder￨5 )￨5 (￨5 treeModel￨5 .￨5 getFolder￨5 (￨5 Integer￨5 .￨5 parseInt￨5 (￨5 accountItem￨5 .￨5 getSpecialFoldersItem￨5 (￨5 )￨5 .￨5 getSent￨5 (￨5 )￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 smtpServer￨5 =￨5 new￨5 SMTPServer￨5 (￨5 accountItem￨5 )￨5 ;￨5 open￨5 =￨5 smtpServer￨5 .￨5 openConnection￨5 (￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 open￨5 )￨4 {￨4 smtpServer￨5 .￨5 sendMessage￨5 (￨5 message￨5 )￨5 ;￨5 sentList￨5 .￨5 add￨5 (￨5 message￨5 .￨5 getHeader￨5 (￨5 )￨5 .￨5 get￨5 (￨5 "columba.uid"￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 sentList￨4 .￨4 size￨4 (￨4 )￨4 )￨4 >￨4 0￨4 )￨3 {￨3 moveToSentFolder￨4 (￨4 sentList￨4 ,￨4 sentFolder￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 void￨2 moveToSentFolder￨2 (￨2 Vector￨3 v￨3 ,￨3 Folder￨3 sentFolder￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ContentConflictsUnitTestCase￨1 extends￨1 AbstractTaskTestCase￨1 {￨1 @￨2 Test￨2 public￨2 void￨2 testApply￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 testRollback￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 assertConflicts￨2 (￨2 CommandLineException￨3 e￨3 ,￨3 String￨3 ...￨3 conflicts￨3 )￨2 {￨2 final￨3 StringBuilder￨3 buf￨3 =￨3 new￨3 StringBuilder￨3 (￨3 )￨3 ;￨3 buf￨3 .￨3 append￨3 (￨3 "Conflicts<seq2seq4repair_space>detected:<seq2seq4repair_space>"￨3 )￨3 ;￨3 int￨3 i￨3 =￨3 0￨3 ;￨3 while￨3 (￨3 i￨4 <￨4 (￨4 conflicts￨4 .￨4 length￨4 )￨4 )￨3 {￨3 <START_BUG>￨4 buf￨4 .￨4 append￨4 (￨4 conflicts￨4 [￨4 (￨4 i￨4 ++￨4 )￨4 ]￨4 )￨4 ;￨4 <END_BUG>￨4 if￨4 (￨4 i￨5 <￨5 (￨5 conflicts￨5 .￨5 length￨5 )￨5 )￨4 {￨4 buf￨5 .￨5 append￨5 (￨5 ",<seq2seq4repair_space>"￨5 )￨5 ;￨5 }￨4 }￨3 assertEquals￨3 (￨3 e￨3 .￨3 getMessage￨3 (￨3 )￨3 ,￨3 buf￨3 .￨3 toString￨3 (￨3 )￨3 )￨3 ;￨3 }￨2 }￨1
@￨1 RunWith￨1 (￨1 Arquillian￨1 .￨1 class￨1 )￨1 public￨1 class￨1 RestEasyIntegrationTestCase￨1 {￨1 static￨2 final￨2 String￨2 DEPLOYMENT_NAME￨2 =￨2 "resteasy-osgi-client.war"￨2 ;￨2 @￨2 ArquillianResource￨2 public￨2 Deployer￨2 deployer￨2 ;￨2 @￨2 Inject￨2 public￨2 Bundle￨2 bundle￨2 ;￨2 @￨2 Deployment￨2 public￨2 static￨2 JavaArchive￨2 createDeployment￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Deployment￨2 (￨2 name￨2 =￨2 RestEasyIntegrationTestCase￨2 .￨2 DEPLOYMENT_NAME￨2 ,￨2 managed￨2 =￨2 false￨2 ,￨2 testable￨2 =￨2 false￨2 )￨2 public￨2 static￨2 WebArchive￨2 endpointWar￨2 (￨2 )￨2 {￨2 final￨3 WebArchive￨3 archive￨3 =￨3 ShrinkWrap￨3 .￨3 create￨3 (￨3 WebArchive￨3 .￨3 class￨3 ,￨3 RestEasyIntegrationTestCase￨3 .￨3 DEPLOYMENT_NAME￨3 )￨3 ;￨3 archive￨3 .￨3 addClass￨3 (￨3 SimpleRestEndpoint￨3 .￨3 class￨3 )￨3 ;￨3 <START_BUG>￨3 archive￨3 .￨3 setWebXML￨3 (￨3 "osgi/jaxrs/web.xml"￨3 )￨3 ;￨3 <END_BUG>￨3 archive￨3 .￨3 add￨3 (￨3 new￨3 Asset￨3 (￨3 )￨3 {￨3 public￨4 InputStream￨4 openStream￨4 (￨4 )￨4 {￨4 ManifestBuilder￨5 builder￨5 =￨5 ManifestBuilder￨5 .￨5 newInstance￨5 (￨5 )￨5 ;￨5 builder￨5 .￨5 addManifestHeader￨5 (￨5 "Dependencies"￨5 ,￨5 "org.osgi.core,deployment.jaxrs-osgi-target:0.0.0"￨5 )￨5 ;￨5 return￨5 builder￨5 .￨5 openStream￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ,￨3 JarFile￨3 .￨3 MANIFEST_NAME￨3 )￨3 ;￨3 return￨3 archive￨3 ;￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 testServiceAccess￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getHttpResponse￨2 (￨2 String￨2 message￨2 )￨2 throws￨2 IOException￨2 ,￨2 ExecutionException￨2 ,￨2 TimeoutException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 formatPossibleIpv6Address￨2 (￨2 String￨3 address￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TreeView￨1 extends￨1 JTree￨1 {￨1 private￨2 TreePath￨2 selectedPathBeforeDrag￨2 ;￨2 private￨2 TreePath￨2 dropTargetPath￨2 ;￨2 private￨2 boolean￨2 isInDndMode￨2 =￨2 false￨2 ;￨2 private￨2 Timer￨2 dndAutoExpanderTimer￨2 ;￨2 public￨2 TreeView￨2 (￨2 TreeModel￨3 model￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 expand￨2 (￨2 AbstractFolder￨3 parent￨3 )￨2 {￨2 <START_BUG>￨3 FolderItem￨3 item￨3 =￨3 parent￨3 .￨3 getFolderItem￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 XmlElement￨3 property￨3 =￨3 item￨3 .￨3 getElement￨3 (￨3 "property"￨3 )￨3 ;￨3 if￨3 (￨3 property￨4 !=￨4 null￨4 )￨3 {￨3 String￨4 expanded￨4 =￨4 property￨4 .￨4 getAttribute￨4 (￨4 "expanded"￨4 )￨4 ;￨4 if￨4 (￨4 expanded￨5 ==￨5 null￨5 )￨4 {￨4 expanded￨5 =￨5 "true"￨5 ;￨5 }￨4 int￨4 row￨4 =￨4 getRowForPath￨4 (￨4 new￨4 TreePath￨4 (￨4 parent￨4 .￨4 getPath￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 expanded￨5 .￨5 equals￨5 (￨5 "true"￨5 )￨5 )￨4 {￨4 expandRow￨5 (￨5 row￨5 )￨5 ;￨5 }￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 parent￨4 .￨4 getChildCount￨4 (￨4 )￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 AbstractFolder￨4 child￨4 =￨4 (￨4 (￨4 AbstractFolder￨4 )￨4 (￨4 parent￨4 .￨4 getChildAt￨4 (￨4 i￨4 )￨4 )￨4 )￨4 ;￨4 expand￨4 (￨4 child￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 AbstractFolder￨2 getDropTargetFolder￨2 (￨2 )￨2 {￨2 }￨2 void￨2 resetDropTargetFolder￨2 (￨2 )￨2 {￨2 }￨2 public￨2 AbstractFolder￨2 getSelectedNodeBeforeDragAction￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isInDndAction￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 setUpDndAction￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 resetDndAction￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 DropHandler￨2 extends￨2 DropTarget￨2 {￨2 private￨3 boolean￨3 canImport￨3 ;￨3 private￨3 Point￨3 location￨3 ;￨3 public￨3 void￨3 dragOver￨3 (￨3 DropTargetDragEvent￨4 e￨4 )￨3 {￨3 }￨3 public￨3 void￨3 dragEnter￨3 (￨3 DropTargetDragEvent￨4 e￨4 )￨3 {￨3 }￨3 public￨3 void￨3 dragExit￨3 (￨3 DropTargetEvent￨4 e￨4 )￨3 {￨3 }￨3 public￨3 void￨3 drop￨3 (￨3 DropTargetDropEvent￨4 e￨4 )￨3 {￨3 }￨3 public￨3 void￨3 dropActionChanged￨3 (￨3 DropTargetDragEvent￨4 e￨4 )￨3 {￨3 }￨3 }￨2 private￨2 class￨2 TreeLeafActionListener￨2 implements￨2 ActionListener￨2 {￨2 private￨3 JTree￨3 treeParent￨3 ;￨3 public￨3 TreeLeafActionListener￨3 (￨3 JTree￨4 parent￨4 )￨3 {￨3 }￨3 public￨3 void￨3 actionPerformed￨3 (￨3 ActionEvent￨4 e￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ExampleRunner￨1 {￨1 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 final￨3 ModelControllerClient￨3 client￨3 =￨3 Factory￨3 .￨3 create￨3 (￨3 "localhost"￨3 ,￨3 9999￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 final￨4 ModelNode￨4 domainOp￨4 =￨4 new￨4 ModelNode￨4 (￨4 )￨4 ;￨4 domainOp￨4 .￨4 get￨4 (￨4 OP￨4 )￨4 .￨4 set￨4 (￨4 READ_RESOURCE_OPERATION￨4 )￨4 ;￨4 domainOp￨4 .￨4 get￨4 (￨4 OP_ADDR￨4 )￨4 .￨4 setEmptyList￨4 (￨4 )￨4 ;￨4 domainOp￨4 .￨4 get￨4 (￨4 RECURSIVE￨4 )￨4 .￨4 set￨4 (￨4 true￨4 )￨4 ;￨4 domainOp￨4 .￨4 get￨4 (￨4 "proxies"￨4 )￨4 .￨4 set￨4 (￨4 false￨4 )￨4 ;￨4 ModelNode￨4 result￨4 =￨4 client￨4 .￨4 execute￨4 (￨4 domainOp￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 SUCCESS￨5 .￨5 equals￨5 (￨5 result￨5 .￨5 get￨5 (￨5 OUTCOME￨5 )￨5 .￨5 asString￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 controller￨5 .￨5 OperationFailedException￨5 (￨5 result￨5 .￨5 get￨5 (￨5 FAILURE_DESCRIPTION￨5 )￨5 )￨5 ;￨5 }￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 "--<seq2seq4repair_space>domain<seq2seq4repair_space>configuration"￨4 )￨4 ;￨4 final￨4 ModelNode￨4 domainResult￨4 =￨4 result￨4 .￨4 get￨4 (￨4 RESULT￨4 )￨4 .￨4 clone￨4 (￨4 )￨4 ;￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 domainResult￨4 )￨4 ;￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 "--"￨4 )￨4 ;￨4 final￨4 ModelNode￨4 hostOp￨4 =￨4 new￨4 ModelNode￨4 (￨4 )￨4 ;￨4 hostOp￨4 .￨4 get￨4 (￨4 OP￨4 )￨4 .￨4 set￨4 (￨4 READ_RESOURCE_OPERATION￨4 )￨4 ;￨4 hostOp￨4 .￨4 get￨4 (￨4 OP_ADDR￨4 )￨4 .￨4 setEmptyList￨4 (￨4 )￨4 .￨4 add￨4 (￨4 HOST￨4 ,￨4 "local"￨4 )￨4 ;￨4 hostOp￨4 .￨4 get￨4 (￨4 RECURSIVE￨4 )￨4 .￨4 set￨4 (￨4 true￨4 )￨4 ;￨4 hostOp￨4 .￨4 get￨4 (￨4 "proxies"￨4 )￨4 .￨4 set￨4 (￨4 false￨4 )￨4 ;￨4 result￨4 =￨4 client￨4 .￨4 execute￨4 (￨4 hostOp￨4 )￨4 ;￨4 if￨4 (￨4 !￨5 (￨5 SUCCESS￨5 .￨5 equals￨5 (￨5 result￨5 .￨5 get￨5 (￨5 OUTCOME￨5 )￨5 .￨5 asString￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 throw￨5 new￨5 org￨5 .￨5 jboss￨5 .￨5 as￨5 .￨5 controller￨5 .￨5 OperationFailedException￨5 (￨5 result￨5 .￨5 get￨5 (￨5 FAILURE_DESCRIPTION￨5 )￨5 )￨5 ;￨5 }￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 "--<seq2seq4repair_space>host<seq2seq4repair_space>configuration"￨4 )￨4 ;￨4 final￨4 ModelNode￨4 hostResult￨4 =￨4 result￨4 .￨4 get￨4 (￨4 RESULT￨4 )￨4 .￨4 clone￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 System￨4 .￨4 out￨4 .￨4 println￨4 (￨4 "--"￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 StreamUtils￨4 .￨4 safeClose￨4 (￨4 client￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 TarArchiveInputStream￨1 extends￨1 ArchiveInputStream￨1 {￨1 private￨2 static￨2 final￨2 int￨2 SMALL_BUFFER_SIZE￨2 =￨2 256￨2 ;￨2 private￨2 final￨2 byte￨2 [￨2 ]￨2 SMALL_BUF￨2 =￨2 new￨2 byte￨2 [￨2 TarArchiveInputStream￨2 .￨2 SMALL_BUFFER_SIZE￨2 ]￨2 ;￨2 private￨2 final￨2 int￨2 recordSize￨2 ;￨2 private￨2 final￨2 int￨2 blockSize￨2 ;￨2 private￨2 boolean￨2 hasHitEOF￨2 ;￨2 private￨2 long￨2 entrySize￨2 ;￨2 private￨2 long￨2 entryOffset￨2 ;￨2 private￨2 final￨2 InputStream￨2 is￨2 ;￨2 private￨2 TarArchiveEntry￨2 currEntry￨2 ;￨2 private￨2 final￨2 ZipEncoding￨2 encoding￨2 ;￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 ,￨3 int￨3 blockSize￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 ,￨3 int￨3 blockSize￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 ,￨3 int￨3 blockSize￨3 ,￨3 int￨3 recordSize￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveInputStream￨2 (￨2 InputStream￨3 is￨3 ,￨3 int￨3 blockSize￨3 ,￨3 int￨3 recordSize￨3 ,￨3 String￨3 encoding￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 close￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getRecordSize￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 available￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 long￨2 skip￨2 (￨2 long￨2 numToSkip￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 synchronized￨2 void￨2 reset￨2 (￨2 )￨2 {￨2 }￨2 public￨2 TarArchiveEntry￨2 getNextTarEntry￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 skipRecordPadding￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 byte￨2 [￨2 ]￨2 getLongNameData￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 byte￨2 [￨2 ]￨2 getRecord￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isEOFRecord￨2 (￨2 byte￨3 [￨3 ]￨3 record￨3 )￨2 {￨2 }￨2 protected￨2 byte￨2 [￨2 ]￨2 readRecord￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 paxHeaders￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 Map￨2 <￨2 String￨2 ,￨2 String￨2 >￨2 parsePaxHeaders￨2 (￨2 InputStream￨2 i￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 Map￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 headers￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 (￨3 )￨3 ;￨3 while￨3 (￨3 true￨4 )￨3 {￨3 int￨4 ch￨4 ;￨4 int￨4 len￨4 =￨4 0￨4 ;￨4 int￨4 read￨4 =￨4 0￨4 ;￨4 while￨4 (￨4 (￨5 ch￨5 =￨5 i￨5 .￨5 read￨5 (￨5 )￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 read￨5 ++￨5 ;￨5 if￨5 (￨5 ch￨6 ==￨6 '<seq2seq4repair_space>'￨6 )￨5 {￨5 ByteArrayOutputStream￨6 coll￨6 =￨6 new￨6 ByteArrayOutputStream￨6 (￨6 )￨6 ;￨6 while￨6 (￨6 (￨7 ch￨7 =￨7 i￨7 .￨7 read￨7 (￨7 )￨7 )￨7 !=￨7 (￨7 -￨7 1￨7 )￨7 )￨6 {￨6 read￨7 ++￨7 ;￨7 if￨7 (￨7 ch￨8 ==￨8 '='￨8 )￨7 {￨7 String￨8 keyword￨8 =￨8 coll￨8 .￨8 toString￨8 (￨8 UTF_8￨8 )￨8 ;￨8 byte￨8 [￨8 ]￨8 rest￨8 =￨8 new￨8 byte￨8 [￨8 len￨8 -￨8 read￨8 ]￨8 ;￨8 <START_BUG>￨8 int￨8 got￨8 =￨8 i￨8 .￨8 read￨8 (￨8 rest￨8 )￨8 ;￨8 <END_BUG>￨8 if￨8 (￨8 got￨9 !=￨9 (￨9 len￨9 -￨9 read￨9 )￨9 )￨8 {￨8 throw￨9 new￨9 IOException￨9 (￨9 (￨9 (￨9 (￨9 (￨9 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>read<seq2seq4repair_space>"￨9 +￨9 "Paxheader.<seq2seq4repair_space>Expected<seq2seq4repair_space>"￨9 )￨9 +￨9 (￨9 len￨9 -￨9 read￨9 )￨9 )￨9 +￨9 "<seq2seq4repair_space>bytes,<seq2seq4repair_space>read<seq2seq4repair_space>"￨9 )￨9 +￨9 got￨9 )￨9 )￨9 ;￨9 }￨8 String￨8 value￨8 =￨8 new￨8 String￨8 (￨8 rest￨8 ,￨8 0￨8 ,￨8 (￨8 (￨8 len￨8 -￨8 read￨8 )￨8 -￨8 1￨8 )￨8 ,￨8 CharsetNames￨8 .￨8 UTF_8￨8 )￨8 ;￨8 headers￨8 .￨8 put￨8 (￨8 keyword￨8 ,￨8 value￨8 )￨8 ;￨8 break￨8 ;￨8 }￨7 coll￨7 .￨7 write￨7 (￨7 (￨7 (￨7 byte￨7 )￨7 (￨7 ch￨7 )￨7 )￨7 )￨7 ;￨7 }￨6 break￨6 ;￨6 }￨5 len￨5 *=￨5 10￨5 ;￨5 len￨5 +=￨5 ch￨5 -￨5 '0'￨5 ;￨5 }￨4 if￨4 (￨4 ch￨5 ==￨5 (￨5 -￨5 1￨5 )￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 }￨3 return￨3 headers￨3 ;￨3 }￨2 private￨2 void￨2 applyPaxHeadersToCurrentEntry￨2 (￨2 Map￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 headers￨3 )￨2 {￨2 }￨2 private￨2 void￨2 readGNUSparse￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ArchiveEntry￨2 getNextEntry￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 tryToConsumeSecondEOFRecord￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 read￨2 (￨2 byte￨2 [￨2 ]￨2 buf￨2 ,￨2 int￨2 offset￨2 ,￨2 int￨2 numToRead￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 canReadEntryData￨2 (￨2 ArchiveEntry￨3 ae￨3 )￨2 {￨2 }￨2 public￨2 TarArchiveEntry￨2 getCurrentEntry￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 setCurrentEntry￨2 (￨2 TarArchiveEntry￨3 e￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 boolean￨2 isAtEOF￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 setAtEOF￨2 (￨2 boolean￨3 b￨3 )￨2 {￨2 }￨2 private￨2 void￨2 consumeRemainderOfLastBlock￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 matches￨2 (￨2 byte￨3 [￨3 ]￨3 signature￨3 ,￨3 int￨3 length￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ChannelInstanceResourceDefinition￨1 extends￨1 SimpleResourceDefinition￨1 {￨1 static￨2 PathElement￨2 pathElement￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 private￨2 final￨2 boolean￨2 runtimeRegistration￨2 ;￨2 ChannelInstanceResourceDefinition￨2 (￨2 String￨3 channelName￨3 ,￨3 boolean￨3 runtimeRegistration￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 registerAttributes￨2 (￨2 ManagementResourceRegistration￨3 registration￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 addChannelProtocolMetricsRegistrationStep￨2 (￨2 OperationContext￨3 context￨3 ,￨3 String￨3 channelName￨3 ,￨3 String￨3 stackName￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 registerChannelProtocolMetrics￨2 (￨2 OperationContext￨2 context￨2 ,￨2 String￨2 channelName￨2 ,￨2 String￨2 stackName￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 stackName￨4 ==￨4 null￨4 )￨3 {￨3 stackName￨4 =￨4 ChannelInstanceResourceDefinition￨4 .￨4 getDefaultStack￨4 (￨4 context￨4 )￨4 ;￨4 }￨3 PathAddress￨3 address￨3 =￨3 PathAddress￨3 .￨3 pathAddress￨3 (￨3 PATH￨3 )￨3 ;￨3 PathAddress￨3 stackAddress￨3 =￨3 address￨3 .￨3 append￨3 (￨3 StackResourceDefinition￨3 .￨3 pathElement￨3 (￨3 stackName￨3 )￨3 )￨3 ;￨3 ModelNode￨3 stack￨3 =￨3 Tools￨3 .￨3 readModel￨3 (￨3 context￨3 .￨3 readResourceFromRoot￨3 (￨3 stackAddress￨3 ,￨3 true￨3 )￨3 )￨3 ;￨3 ModelNode￨3 transport￨3 =￨3 stack￨3 .￨3 get￨3 (￨3 TRANSPORT￨3 ,￨3 TRANSPORT_NAME￨3 )￨3 .￨3 clone￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 String￨3 transportName￨3 =￨3 transport￨3 .￨3 get￨3 (￨3 TYPE￨3 )￨3 .￨3 asString￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 ResourceDefinition￨3 transportDefinition￨3 =￨3 ChannelInstanceResourceDefinition￨3 .￨3 getProtocolMetricResourceDefinition￨3 (￨3 context￨3 ,￨3 channelName￨3 ,￨3 transportName￨3 )￨3 ;￨3 List￨3 <￨3 ModelNode￨3 >￨3 protocolOrdering￨3 =￨3 stack￨3 .￨3 get￨3 (￨3 PROTOCOLS￨3 )￨3 .￨3 clone￨3 (￨3 )￨3 .￨3 asList￨3 (￨3 )￨3 ;￨3 final￨3 List￨3 <￨3 ResourceDefinition￨3 >￨3 protocolDefinitions￨3 =￨3 new￨3 ArrayList￨3 <￨3 ResourceDefinition￨3 >￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 ModelNode￨4 protocolNameModelNode￨4 :￨4 protocolOrdering￨4 )￨3 {￨3 String￨4 protocolName￨4 =￨4 protocolNameModelNode￨4 .￨4 asString￨4 (￨4 )￨4 ;￨4 ResourceDefinition￨4 protocolDefinition￨4 =￨4 ChannelInstanceResourceDefinition￨4 .￨4 getProtocolMetricResourceDefinition￨4 (￨4 context￨4 ,￨4 channelName￨4 ,￨4 protocolName￨4 )￨4 ;￨4 protocolDefinitions￨4 .￨4 add￨4 (￨4 protocolDefinition￨4 )￨4 ;￨4 }￨3 ResourceDefinition￨3 relayDefinition￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 stack￨4 .￨4 hasDefined￨4 (￨4 RELAY￨4 )￨4 )￨3 {￨3 relayDefinition￨4 =￨4 ChannelInstanceResourceDefinition￨4 .￨4 getProtocolMetricResourceDefinition￨4 (￨4 context￨4 ,￨4 channelName￨4 ,￨4 "relay.RELAY2"￨4 )￨4 ;￨4 }￨3 ManagementResourceRegistration￨3 subsystemRootRegistration￨3 =￨3 context￨3 .￨3 getResourceRegistrationForUpdate￨3 (￨3 )￨3 ;￨3 ManagementResourceRegistration￨3 channelRegistration￨3 =￨3 subsystemRootRegistration￨3 .￨3 registerSubModel￨3 (￨3 new￨3 ChannelInstanceResourceDefinition￨3 (￨3 channelName￨3 ,￨3 true￨3 )￨3 )￨3 ;￨3 channelRegistration￨3 .￨3 registerSubModel￨3 (￨3 transportDefinition￨3 )￨3 ;￨3 for￨3 (￨3 ResourceDefinition￨4 protocolDefinition￨4 :￨4 protocolDefinitions￨4 )￨3 {￨3 channelRegistration￨4 .￨4 registerSubModel￨4 (￨4 protocolDefinition￨4 )￨4 ;￨4 }￨3 if￨3 (￨3 stack￨4 .￨4 hasDefined￨4 (￨4 RELAY￨4 )￨4 )￨3 {￨3 channelRegistration￨4 .￨4 registerSubModel￨4 (￨4 relayDefinition￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 static￨2 void￨2 addChannelProtocolMetricsDeregistrationStep￨2 (￨2 OperationContext￨3 context￨3 ,￨3 String￨3 channelName￨3 )￨2 {￨2 }￨2 private￨2 static￨2 String￨2 getDefaultStack￨2 (￨2 OperationContext￨2 context￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 ResourceDefinition￨2 getProtocolMetricResourceDefinition￨2 (￨2 OperationContext￨2 context￨2 ,￨2 String￨2 channelName￨2 ,￨2 String￨2 protocolName￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 addAttributeDefinition￨2 (￨2 List￨3 <￨3 AttributeDefinition￨3 >￨3 attributes￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 map￨3 ,￨3 String￨3 protocolName￨3 ,￨3 String￨3 name￨3 ,￨3 ModelType￨3 type￨3 ,￨3 String￨3 description￨3 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 isEquivalentModelTypeAvailable￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 type￨3 )￨2 {￨2 }￨2 private￨2 static￨2 ModelType￨2 getEquivalentModelType￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 typeClass￨3 )￨2 {￨2 }￨2 private￨2 static￨2 Field￨2 [￨2 ]￨2 getProtocolFields￨2 (￨2 Class￨3 <￨3 ?￨3 >￨3 clazz￨3 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 ProtocolResources￨2 extends￨2 ResourceBundle￨2 {￨2 private￨3 static￨3 Map￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 resources￨3 =￨3 new￨3 HashMap￨3 <￨3 String￨3 ,￨3 String￨3 >￨3 (￨3 )￨3 ;￨3 public￨3 static￨3 void￨3 addProtocolMapEntries￨3 (￨3 Map￨4 <￨4 String￨4 ,￨4 String￨4 >￨4 map￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Object￨3 handleGetObject￨3 (￨3 String￨4 key￨4 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 Enumeration￨3 <￨3 String￨3 >￨3 getKeys￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 protected￨3 Set￨3 <￨3 String￨3 >￨3 handleKeySet￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 {￨2 int￨3 size￨3 ;￨3 int￨3 [￨3 ]￨3 elements￨3 ;￨3 IntList￨3 (￨3 int￨4 [￨4 ]￨4 elements￨4 )￨3 {￨3 }￨3 void￨3 add￨3 (￨3 int￨4 newElement￨4 )￨3 {￨3 }￨3 int￨3 [￨3 ]￨3 asArray￨3 (￨3 )￨3 {￨3 }￨3 }￨2 DiskIndex￨2 (￨2 String￨3 fileName￨3 )￨2 {￨2 }￨2 SimpleSet￨2 addDocumentNames￨2 (￨2 String￨2 substring￨2 ,￨2 MemoryIndex￨2 memoryIndex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 HashtableOfObject￨2 addQueryResult￨2 (￨2 HashtableOfObject￨2 results￨2 ,￨2 char￨2 [￨2 ]￨2 word￨2 ,￨2 HashtableOfObject￨2 wordsToDocNumbers￨2 ,￨2 MemoryIndex￨2 memoryIndex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 HashtableOfObject￨2 addQueryResults￨2 (￨2 char￨2 [￨2 ]￨2 [￨2 ]￨2 categories￨2 ,￨2 char￨2 [￨2 ]￨2 key￨2 ,￨2 int￨2 matchRule￨2 ,￨2 MemoryIndex￨2 memoryIndex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 cacheDocumentNames￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 [￨2 ]￨2 computeDocumentNames￨2 (￨2 String￨3 [￨3 ]￨3 onDiskNames￨3 ,￨3 int￨3 [￨3 ]￨3 positions￨3 ,￨3 SimpleLookupTable￨3 indexedDocuments￨3 ,￨3 MemoryIndex￨3 memoryIndex￨3 )￨2 {￨2 }￨2 private￨2 void￨2 copyQueryResults￨2 (￨2 HashtableOfObject￨3 categoryToWords￨3 ,￨3 int￨3 newPosition￨3 )￨2 {￨2 }￨2 File￨2 getIndexFile￨2 (￨2 )￨2 {￨2 }￨2 void￨2 initialize￨2 (￨2 boolean￨2 reuseExistingFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeFrom￨2 (￨2 DiskIndex￨2 diskIndex￨2 ,￨2 File￨2 newIndexFile￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 mergeCategories￨2 (￨2 DiskIndex￨2 onDisk￨2 ,￨2 int￨2 [￨2 ]￨2 positions￨2 ,￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 mergeCategory￨2 (￨2 char￨2 [￨2 ]￨2 categoryName￨2 ,￨2 DiskIndex￨2 onDisk￨2 ,￨2 int￨2 [￨2 ]￨2 positions￨2 ,￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 DiskIndex￨2 mergeWith￨2 (￨2 MemoryIndex￨2 memoryIndex￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 synchronized￨2 String￨2 [￨2 ]￨2 readAllDocumentNames￨2 (￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 synchronized￨2 HashtableOfObject￨2 readCategoryTable￨2 (￨2 char￨2 [￨2 ]￨2 categoryName￨2 ,￨2 boolean￨2 readDocNumbers￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 int￨3 offset￨3 =￨3 this￨3 .￨3 categoryOffsets￨3 .￨3 get￨3 (￨3 categoryName￨3 )￨3 ;￨3 if￨3 (￨3 offset￨4 ==￨4 (￨4 HashtableOfIntValues￨4 .￨4 NO_VALUE￨4 )￨4 )￨3 {￨3 return￨4 null￨4 ;￨4 }￨3 if￨3 (￨3 (￨4 this￨4 .￨4 categoryTables￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 this￨4 .￨4 categoryTables￨4 =￨4 new￨4 HashtableOfObject￨4 (￨4 3￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 HashtableOfObject￨4 cachedTable￨4 =￨4 (￨4 (￨4 HashtableOfObject￨4 )￨4 (￨4 this￨4 .￨4 categoryTables￨4 .￨4 get￨4 (￨4 categoryName￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 cachedTable￨5 !=￨5 null￨5 )￨4 {￨4 if￨5 (￨5 readDocNumbers￨6 )￨5 {￨5 Object￨6 [￨6 ]￨6 arrayOffsets￨6 =￨6 cachedTable￨6 .￨6 valueTable￨6 ;￨6 for￨6 (￨6 int￨7 i￨7 =￨7 0￨7 ,￨7 l￨7 =￨7 arrayOffsets￨7 .￨7 length￨7 ;￨7 i￨7 <￨7 l￨7 ;￨7 i￨7 ++￨7 )￨6 {￨6 if￨7 (￨7 (￨8 arrayOffsets￨8 [￨8 i￨8 ]￨8 )￨8 instanceof￨8 Integer￨8 )￨7 {￨7 arrayOffsets￨8 [￨8 i￨8 ]￨8 =￨8 readDocumentNumbers￨8 (￨8 arrayOffsets￨8 [￨8 i￨8 ]￨8 )￨8 ;￨8 }￨7 }￨6 }￨5 return￨5 cachedTable￨5 ;￨5 }￨4 }￨3 DataInputStream￨3 stream￨3 =￨3 new￨3 DataInputStream￨3 (￨3 new￨3 BufferedInputStream￨3 (￨3 new￨3 FileInputStream￨3 (￨3 getIndexFile￨3 (￨3 )￨3 )￨3 ,￨3 2048￨3 )￨3 )￨3 ;￨3 HashtableOfObject￨3 categoryTable￨3 =￨3 null￨3 ;￨3 char￨3 [￨3 ]￨3 [￨3 ]￨3 matchingWords￨3 =￨3 null￨3 ;￨3 int￨3 count￨3 =￨3 0￨3 ;￨3 int￨3 firstOffset￨3 =￨3 -￨3 1￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 stream￨4 .￨4 skip￨4 (￨4 offset￨4 )￨4 ;￨4 int￨4 size￨4 =￨4 stream￨4 .￨4 readInt￨4 (￨4 )￨4 ;￨4 categoryTable￨4 =￨4 new￨4 HashtableOfObject￨4 (￨4 size￨4 )￨4 ;￨4 int￨4 largeArraySize￨4 =￨4 256￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 size￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 char￨5 [￨5 ]￨5 word￨5 =￨5 org￨5 .￨5 eclipse￨5 .￨5 jdt￨5 .￨5 internal￨5 .￨5 core￨5 .￨5 util￨5 .￨5 Util￨5 .￨5 readUTF￨5 (￨5 stream￨5 )￨5 ;￨5 int￨5 arrayOffset￨5 =￨5 stream￨5 .￨5 readInt￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 arrayOffset￨6 <=￨6 0￨6 )￨5 {￨5 categoryTable￨6 .￨6 put￨6 (￨6 word￨6 ,￨6 new￨6 int￨6 [￨6 ]￨6 (￨6 )￨6 {￨6 }￨6 )￨6 ;￨6 }￨5 else￨5 if￨5 (￨5 arrayOffset￨6 <￨6 largeArraySize￨6 )￨5 {￨5 categoryTable￨6 .￨6 put￨6 (￨6 word￨6 ,￨6 readDocumentArray￨6 (￨6 stream￨6 ,￨6 arrayOffset￨6 )￨6 )￨6 ;￨6 }￨5 else￨5 {￨5 arrayOffset￨6 =￨6 stream￨6 .￨6 readInt￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 readDocNumbers￨7 )￨6 {￨6 if￨7 (￨7 matchingWords￨8 ==￨8 null￨8 )￨7 {￨7 matchingWords￨8 =￨8 new￨8 char￨8 [￨8 size￨8 ]￨8 [￨8 ]￨8 ;￨8 }￨7 if￨7 (￨7 count￨8 ==￨8 0￨8 )￨7 {￨7 firstOffset￨8 =￨8 arrayOffset￨8 ;￨8 }￨7 matchingWords￨7 [￨7 (￨7 count￨7 ++￨7 )￨7 ]￨7 =￨7 word￨7 ;￨7 }￨6 categoryTable￨6 .￨6 put￨6 (￨6 word￨6 ,￨6 new￨6 Integer￨6 (￨6 arrayOffset￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 this￨4 .￨4 categoryTables￨4 .￨4 put￨4 (￨4 categoryName￨4 ,￨4 categoryTable￨4 )￨4 ;￨4 this￨4 .￨4 cachedCategoryName￨4 =￨4 (￨4 (￨4 categoryTable￨4 .￨4 elementSize￨4 )￨4 <￨4 10000￨4 )￨4 ?￨4 categoryName￨4 :￨4 null￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 stream￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 if￨3 (￨3 count￨3 >￨3 0￨3 )￨3 {￨3 <END_BUG>￨3 stream￨3 =￨3 new￨3 DataInputStream￨3 (￨3 new￨3 BufferedInputStream￨3 (￨3 new￨3 FileInputStream￨3 (￨3 getIndexFile￨3 (￨3 )￨3 )￨3 ,￨3 2048￨3 )￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 stream￨4 .￨4 skip￨4 (￨4 firstOffset￨4 )￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 count￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 categoryTable￨5 .￨5 put￨5 (￨5 matchingWords￨5 [￨5 i￨5 ]￨5 ,￨5 readDocumentArray￨5 (￨5 stream￨5 ,￨5 stream￨5 .￨5 readInt￨5 (￨5 )￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 stream￨4 .￨4 close￨4 (￨4 )￨4 ;￨4 }￨3 }￨3 return￨3 categoryTable￨3 ;￨3 }￨2 private￨2 void￨2 readChunk￨2 (￨2 String￨2 [￨2 ]￨2 docNames￨2 ,￨2 DataInputStream￨2 stream￨2 ,￨2 int￨2 index￨2 ,￨2 int￨2 size￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 [￨2 ]￨2 readDocumentArray￨2 (￨2 DataInputStream￨2 stream￨2 ,￨2 int￨2 arraySize￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 synchronized￨2 String￨2 readDocumentName￨2 (￨2 int￨2 docNumber￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 synchronized￨2 int￨2 [￨2 ]￨2 readDocumentNumbers￨2 (￨2 Object￨2 arrayOffset￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readHeaderInfo￨2 (￨2 RandomAccessFile￨2 file￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 synchronized￨2 void￨2 startQuery￨2 (￨2 )￨2 {￨2 }￨2 synchronized￨2 void￨2 stopQuery￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeAllDocumentNames￨2 (￨2 String￨2 [￨2 ]￨2 sortedDocNames￨2 ,￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeCategories￨2 (￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeCategoryTable￨2 (￨2 char￨2 [￨2 ]￨2 categoryName￨2 ,￨2 HashtableOfObject￨2 wordsToDocs￨2 ,￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeDocumentNumbers￨2 (￨2 int￨2 [￨2 ]￨2 documentNumbers￨2 ,￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeHeaderInfo￨2 (￨2 DataOutputStream￨2 stream￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeOffsetToHeader￨2 (￨2 int￨2 offsetToHeader￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
class￨1 OperationTransformationOverrideBuilderImpl￨1 extends￨1 AttributeTransformationDescriptionBuilderImpl￨1 implements￨1 OperationTransformationOverrideBuilder￨1 {￨1 private￨2 boolean￨2 inherit￨2 =￨2 false￨2 ;￨2 private￨2 DiscardPolicy￨2 discardPolicy￨2 =￨2 DiscardPolicy￨2 .￨2 NEVER￨2 ;￨2 private￨2 OperationTransformer￨2 transformer￨2 =￨2 OperationTransformer￨2 .￨2 DEFAULT￨2 ;￨2 private￨2 String￨2 newName￨2 ;￨2 protected￨2 OperationTransformationOverrideBuilderImpl￨2 (￨2 ResourceTransformationDescriptionBuilder￨3 builder￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 OperationTransformationOverrideBuilder￨2 inherit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 OperationTransformationOverrideBuilder￨2 setOperationTransformer￨2 (￨2 OperationTransformer￨3 transformer￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 OperationTransformationOverrideBuilder￨2 rename￨2 (￨2 String￨3 newName￨3 )￨2 {￨2 }￨2 protected￨2 OperationTransformer￨2 createTransformer￨2 (￨2 final￨3 AttributeTransformationDescriptionBuilderRegistry￨3 resourceRegistry￨3 )￨2 {￨2 final￨3 AttributeTransformationDescriptionBuilderRegistry￨3 registry￨3 =￨3 resultingRegistry￨3 (￨3 resourceRegistry￨3 )￨3 ;￨3 final￨3 AttributeTransformationRule￨3 first￨3 =￨3 new￨3 AttributeTransformationRule￨3 (￨3 registry￨3 .￨3 buildAttributes￨3 (￨3 )￨3 )￨3 ;￨3 return￨3 new￨3 OperationTransformer￨3 (￨3 )￨3 {￨3 @￨4 Override￨4 public￨4 TransformedOperation￨4 transformOperation￨4 (￨4 final￨4 TransformationContext￨4 ctx￨4 ,￨4 final￨4 PathAddress￨4 address￨4 ,￨4 final￨4 ModelNode￨4 operation￨4 )￨4 throws￨4 OperationFailedException￨4 (￨4 )￨4 {￨4 if￨5 (￨5 discardPolicy￨6 .￨6 discard￨6 (￨6 operation￨6 ,￨6 address￨6 ,￨6 ctx￨6 )￨6 )￨5 {￨5 return￨6 DISCARD￨6 .￨6 transformOperation￨6 (￨6 ctx￨6 ,￨6 address￨6 ,￨6 operation￨6 )￨6 ;￨6 }￨5 final￨5 Iterator￨5 <￨5 TransformationRule￨5 >￨5 iterator￨5 =￨5 Collections￨5 .￨5 <￨5 TransformationRule￨5 >￨5 emptyList￨5 (￨5 )￨5 .￨5 iterator￨5 (￨5 )￨5 ;￨5 final￨5 ModelNode￨5 originalModel￨5 =￨5 operation￨5 .￨5 clone￨5 (￨5 )￨5 ;￨5 originalModel￨5 .￨5 protect￨5 (￨5 )￨5 ;￨5 <START_BUG>￨5 final￨5 TransformationRule￨5 .￨5 OperationContext￨5 context￨5 =￨5 new￨5 TransformationRule￨5 .￨5 OperationContext￨5 (￨5 ctx￨5 )￨5 {￨5 <END_BUG>￨5 @￨5 Override￨5 void￨5 invokeNext￨5 (￨5 OperationTransformer￨5 .￨5 TransformedOperation￨5 transformedOperation￨5 )￨5 throws￨5 OperationFailedException￨5 (￨5 )￨5 {￨5 recordTransformedOperation￨6 (￨6 transformedOperation￨6 )￨6 ;￨6 if￨6 (￨6 iterator￨7 .￨7 hasNext￨7 (￨7 )￨7 )￨6 {￨6 final￨7 TransformationRule￨7 next￨7 =￨7 iterator￨7 .￨7 next￨7 (￨7 )￨7 ;￨7 next￨7 .￨7 transformOperation￨7 (￨7 transformedOperation￨7 .￨7 getTransformedOperation￨7 (￨7 )￨7 ,￨7 address￨7 ,￨7 this￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 if￨7 (￨7 (￨8 newName￨8 )￨8 !=￨8 null￨8 )￨7 {￨7 transformedOperation￨8 .￨8 getTransformedOperation￨8 (￨8 )￨8 .￨8 get￨8 (￨8 OP￨8 )￨8 .￨8 set￨8 (￨8 newName￨8 )￨8 ;￨8 }￨7 final￨7 TransformationContext￨7 ctx￨7 =￨7 getContext￨7 (￨7 )￨7 ;￨7 transformer￨7 .￨7 transformOperation￨7 (￨7 ctx￨7 ,￨7 address￨7 ,￨7 transformedOperation￨7 .￨7 getTransformedOperation￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 }￨5 ;￨5 operation￨5 .￨5 get￨5 (￨5 OP_ADDR￨5 )￨5 .￨5 set￨5 (￨5 address￨5 .￨5 toModelNode￨5 (￨5 )￨5 )￨5 ;￨5 first￨5 .￨5 transformOperation￨5 (￨5 operation￨5 ,￨5 address￨5 ,￨5 context￨5 )￨5 ;￨5 return￨5 context￨5 .￨5 createOp￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 ;￨3 }￨2 protected￨2 AttributeTransformationDescriptionBuilderRegistry￨2 resultingRegistry￨2 (￨2 final￨3 AttributeTransformationDescriptionBuilderRegistry￨3 resourceRegistry￨3 )￨2 {￨2 }￨2 }￨1
public￨1 final￨1 class￨1 ServerCommunicationHandlerFactory￨1 {￨1 private￨2 static￨2 final￨2 ServerCommunicationHandlerFactory￨2 INSTANCE￨2 =￨2 new￨2 ServerCommunicationHandlerFactory￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 ServerCommunicationHandlerFactory￨2 getInstance￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ServerCommunicationHandler￨2 getServerCommunicationHandler￨2 (￨2 ServerEnvironment￨3 environment￨3 ,￨3 MessageHandler￨3 handler￨3 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 ServerCommunicationHandler￨3 (￨3 environment￨3 .￨3 getProcessName￨3 (￨3 )￨3 ,￨3 environment￨3 .￨3 getProcessManagerAddress￨3 (￨3 )￨3 ,￨3 environment￨3 .￨3 getProcessManagerPort￨3 (￨3 )￨3 ,￨3 handler￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 private￨2 ServerCommunicationHandlerFactory￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 IndexReaderFactory￨1 implements￨1 NamedListInitializedPlugin￨1 {￨1 protected￨2 int￨2 termInfosIndexDivisor￨2 =￨2 1￨2 ;￨2 public￨2 void￨2 init￨2 (￨2 NamedList￨3 args￨3 )￨2 {￨2 <START_BUG>￨3 Integer￨3 v￨3 =￨3 (￨3 (￨3 Integer￨3 )￨3 (￨3 args￨3 .￨3 get￨3 (￨3 "setTermIndexInterval"￨3 )￨3 )￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 v￨4 !=￨4 null￨4 )￨3 {￨3 termInfosIndexDivisor￨4 =￨4 v￨4 .￨4 intValue￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 int￨2 getTermInfosIndexDivisor￨2 (￨2 )￨2 {￨2 }￨2 public￨2 abstract￨2 IndexReader￨2 newReader￨2 (￨2 Directory￨2 indexDir￨2 ,￨2 boolean￨2 readOnly￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CopyElementsOperation￨1 extends￨1 MultiOperation￨1 implements￨1 SuffixConstants￨1 {￨1 private￨2 Map￨2 sources￨2 =￨2 new￨2 HashMap￨2 (￨2 )￨2 ;￨2 public￨2 CopyElementsOperation￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elementsToCopy￨3 ,￨3 IJavaElement￨3 [￨3 ]￨3 destContainers￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 public￨2 CopyElementsOperation￨2 (￨2 IJavaElement￨3 [￨3 ]￨3 elementsToCopy￨3 ,￨3 IJavaElement￨3 destContainer￨3 ,￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 String￨2 getMainTaskName￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 org￨3 .￨3 eclipse￨3 .￨3 jdt￨3 .￨3 internal￨3 .￨3 compiler￨3 .￨3 util￨3 .￨3 Util￨3 .￨3 bind￨3 (￨3 "operation.copyElementProgress"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 protected￨2 JavaModelOperation￨2 getNestedOperation￨2 (￨2 IJavaElement￨3 element￨3 )￨2 {￨2 }￨2 private￨2 String￨2 getSourceFor￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 isRenamingMainType￨2 (￨2 IJavaElement￨2 element￨2 ,￨2 IJavaElement￨2 dest￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 processElement￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IJavaElement￨2 resolveRenameAnchor￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 IJavaModelStatus￨2 verify￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 verify￨2 (￨2 IJavaElement￨2 element￨2 )￨2 throws￨2 JavaModelException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ImageFigure￨1 extends￨1 AttributeFigure￨1 implements￨1 ImageObserver￨1 {￨1 private￨2 String￨2 fFileName￨2 ;￨2 private￨2 transient￨2 Image￨2 fImage￨2 ;￨2 private￨2 Rectangle￨2 fDisplayBox￨2 ;￨2 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 148012030121282439L￨2 ;￨2 private￨2 int￨2 imageFigureSerializedDataVersion￨2 =￨2 1￨2 ;￨2 public￨2 ImageFigure￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ImageFigure￨2 (￨2 Image￨3 image￨3 ,￨3 String￨3 fileName￨3 ,￨3 Point￨3 origin￨3 )￨2 {￨2 }￨2 public￨2 void￨2 basicDisplayBox￨2 (￨2 Point￨3 origin￨3 ,￨3 Point￨3 corner￨3 )￨2 {￨2 }￨2 public￨2 HandleEnumeration￨2 handles￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 displayBox￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 basicMoveBy￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 )￨2 {￨2 }￨2 public￨2 void￨2 draw￨2 (￨2 Graphics￨3 g￨3 )￨2 {￨2 if￨3 (￨3 (￨4 fImage￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 fImage￨4 =￨4 Iconkit￨4 .￨4 instance￨4 (￨4 )￨4 .￨4 getImage￨4 (￨4 fFileName￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 if￨3 (￨3 (￨4 fImage￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 g￨4 .￨4 drawImage￨4 (￨4 fImage￨4 ,￨4 fDisplayBox￨4 .￨4 x￨4 ,￨4 fDisplayBox￨4 .￨4 y￨4 ,￨4 fDisplayBox￨4 .￨4 width￨4 ,￨4 fDisplayBox￨4 .￨4 height￨4 ,￨4 this￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 drawGhost￨4 (￨4 g￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 drawGhost￨2 (￨2 Graphics￨3 g￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 imageUpdate￨2 (￨2 Image￨3 img￨3 ,￨3 int￨3 flags￨3 ,￨3 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 w￨3 ,￨3 int￨3 h￨3 )￨2 {￨2 }￨2 public￨2 void￨2 release￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 StorableOutput￨3 dw￨3 )￨2 {￨2 }￨2 public￨2 void￨2 read￨2 (￨2 StorableInput￨2 dr￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 readObject￨2 (￨2 ObjectInputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 ,￨2 ClassNotFoundException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 JcaExtension￨1 implements￨1 Extension￨1 {￨1 public￨2 static￨2 String￨2 SUBSYSTEM_NAME￨2 =￨2 "jca"￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MAJOR_VERSION￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MINOR_VERSION￨2 =￨2 1￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MANAGEMENT_API_MICRO_VERSION￨2 =￨2 0￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 RESOURCE_NAME￨2 =￨2 (￨2 JcaExtension￨2 .￨2 class￨2 .￨2 getPackage￨2 (￨2 )￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 +￨2 ".LocalDescriptions"￨2 ;￨2 protected￨2 static￨2 final￨2 PathElement￨2 PATH_SUBSYSTEM￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 SUBSYSTEM￨2 ,￨2 JcaExtension￨2 .￨2 SUBSYSTEM_NAME￨2 )￨2 ;￨2 protected￨2 static￨2 final￨2 PathElement￨2 PATH_ARCHIVE_VALIDATION￨2 =￨2 PathElement￨2 .￨2 pathElement￨2 (￨2 Constants￨2 .￨2 ARCHIVE_VALIDATION￨2 ,￨2 Constants￨2 .￨2 ARCHIVE_VALIDATION￨2 )￨2 ;￨2 static￨2 StandardResourceDescriptionResolver￨2 getResourceDescriptionResolver￨2 (￨2 final￨2 String￨2 ...￨2 keyPrefix￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 initialize￨2 (￨2 final￨3 ExtensionContext￨3 context￨3 )￨2 {￨2 ROOT_LOGGER￨3 .￨3 debugf￨3 (￨3 "Initializing<seq2seq4repair_space>Connector<seq2seq4repair_space>Extension"￨3 )￨3 ;￨3 final￨3 boolean￨3 registerRuntimeOnly￨3 =￨3 context￨3 .￨3 isRuntimeOnlyRegistrationValid￨3 (￨3 )￨3 ;￨3 final￨3 SubsystemRegistration￨3 subsystem￨3 =￨3 context￨3 .￨3 registerSubsystem￨3 (￨3 JcaExtension￨3 .￨3 SUBSYSTEM_NAME￨3 ,￨3 JcaExtension￨3 .￨3 MANAGEMENT_API_MAJOR_VERSION￨3 ,￨3 JcaExtension￨3 .￨3 MANAGEMENT_API_MINOR_VERSION￨3 ,￨3 JcaExtension￨3 .￨3 MANAGEMENT_API_MICRO_VERSION￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 registration￨3 =￨3 subsystem￨3 .￨3 registerSubsystemModel￨3 (￨3 INSTANCE￨3 )￨3 ;￨3 <START_BUG>￨3 registration￨3 .￨3 registerOperationHandler￨3 (￨3 DESCRIBE￨3 ,￨3 GenericSubsystemDescribeHandler￨3 .￨3 INSTANCE￨3 ,￨3 GenericSubsystemDescribeHandler￨3 .￨3 INSTANCE￨3 ,￨3 false￨3 ,￨3 PRIVATE￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 ManagementResourceRegistration￨3 archiveValidation￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 JcaArchiveValidationDefinition￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 beanValidation￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 Constants￨3 .￨3 BEAN_VALIDATION￨3 ,￨3 Constants￨3 .￨3 BEAN_VALIDATION￨3 )￨3 ,￨3 BEAN_VALIDATION_DESC￨3 )￨3 ;￨3 beanValidation￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 BeanValidationAdd￨3 .￨3 INSTANCE￨3 ,￨3 ADD_BEAN_VALIDATION_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 beanValidation￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ReloadRequiredRemoveStepHandler￨3 .￨3 INSTANCE￨3 ,￨3 REMOVE_BEAN_VALIDATION_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 BeanValidationAdd￨4 .￨4 BeanValidationParameters￨4 parameter￨4 :￨4 BeanValidationParameters￨4 .￨4 values￨4 (￨4 )￨4 )￨3 {￨3 beanValidation￨4 .￨4 registerReadWriteAttribute￨4 (￨4 parameter￨4 .￨4 getAttribute￨4 (￨4 )￨4 ,￨4 null￨4 ,￨4 JcaAttributeWriteHandler￨4 .￨4 INSTANCE￨4 )￨4 ;￨4 }￨3 final￨3 ManagementResourceRegistration￨3 cachedConnectionManager￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 Constants￨3 .￨3 CACHED_CONNECTION_MANAGER￨3 ,￨3 Constants￨3 .￨3 CACHED_CONNECTION_MANAGER￨3 )￨3 ,￨3 CACHED_CONNECTION_MANAGER_DESC￨3 )￨3 ;￨3 cachedConnectionManager￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 CachedConnectionManagerAdd￨3 .￨3 INSTANCE￨3 ,￨3 ADD_CACHED_CONNECTION_MANAGER_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 cachedConnectionManager￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ReloadRequiredRemoveStepHandler￨3 .￨3 INSTANCE￨3 ,￨3 REMOVE_CACHED_CONNECTION_MANAGER_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 CachedConnectionManagerAdd￨4 .￨4 CcmParameters￨4 parameter￨4 :￨4 CcmParameters￨4 .￨4 values￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 parameter￨5 !=￨5 (￨5 CcmParameters￨5 .￨5 INSTALL￨5 )￨5 )￨4 {￨4 cachedConnectionManager￨5 .￨5 registerReadWriteAttribute￨5 (￨5 parameter￨5 .￨5 getAttribute￨5 (￨5 )￨5 ,￨5 null￨5 ,￨5 JcaAttributeWriteHandler￨5 .￨5 INSTANCE￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 cachedConnectionManager￨5 .￨5 registerReadWriteAttribute￨5 (￨5 parameter￨5 .￨5 getAttribute￨5 (￨5 )￨5 ,￨5 null￨5 ,￨5 new￨5 ReloadRequiredWriteAttributeHandler￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 final￨3 ManagementResourceRegistration￨3 workManager￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 Constants￨3 .￨3 WORKMANAGER￨3 )￨3 ,￨3 WORKMANAGER_DESC￨3 )￨3 ;￨3 workManager￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 WorkManagerAdd￨3 .￨3 INSTANCE￨3 ,￨3 ADD_WORKMANAGER_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 workManager￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ReloadRequiredRemoveStepHandler￨3 .￨3 INSTANCE￨3 ,￨3 REMOVE_WORKMANAGER_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 WorkManagerAdd￨4 .￨4 WmParameters￨4 parameter￨4 :￨4 WmParameters￨4 .￨4 values￨4 (￨4 )￨4 )￨3 {￨3 workManager￨4 .￨4 registerReadWriteAttribute￨4 (￨4 parameter￨4 .￨4 getAttribute￨4 (￨4 )￨4 ,￨4 null￨4 ,￨4 new￨4 ReloadRequiredWriteAttributeHandler￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 workManager￨3 .￨3 registerSubModel￨3 (￨3 BoundedQueueThreadPoolResourceDefinition￨3 .￨3 create￨3 (￨3 Constants￨3 .￨3 WORKMANAGER_SHORT_RUNNING￨3 ,￨3 STANDARD_THREAD_FACTORY_RESOLVER￨3 ,￨3 STANDARD_HANDOFF_EXECUTOR_RESOLVER￨3 ,￨3 EXECUTOR￨3 .￨3 append￨3 (￨3 Constants￨3 .￨3 WORKMANAGER_SHORT_RUNNING￨3 )￨3 ,￨3 registerRuntimeOnly￨3 )￨3 )￨3 ;￨3 workManager￨3 .￨3 registerSubModel￨3 (￨3 BoundedQueueThreadPoolResourceDefinition￨3 .￨3 create￨3 (￨3 Constants￨3 .￨3 WORKMANAGER_LONG_RUNNING￨3 ,￨3 STANDARD_THREAD_FACTORY_RESOLVER￨3 ,￨3 STANDARD_HANDOFF_EXECUTOR_RESOLVER￨3 ,￨3 EXECUTOR￨3 .￨3 append￨3 (￨3 Constants￨3 .￨3 WORKMANAGER_LONG_RUNNING￨3 )￨3 ,￨3 registerRuntimeOnly￨3 )￨3 )￨3 ;￨3 final￨3 ManagementResourceRegistration￨3 bootstrapContext￨3 =￨3 registration￨3 .￨3 registerSubModel￨3 (￨3 PathElement￨3 .￨3 pathElement￨3 (￨3 Constants￨3 .￨3 BOOTSTRAP_CONTEXT￨3 )￨3 ,￨3 BOOTSTRAP_CONTEXT_DESC￨3 )￨3 ;￨3 bootstrapContext￨3 .￨3 registerOperationHandler￨3 (￨3 ADD￨3 ,￨3 BootstrapContextAdd￨3 .￨3 INSTANCE￨3 ,￨3 ADD_BOOTSTRAP_CONTEXT_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 bootstrapContext￨3 .￨3 registerOperationHandler￨3 (￨3 REMOVE￨3 ,￨3 ReloadRequiredRemoveStepHandler￨3 .￨3 INSTANCE￨3 ,￨3 REMOVE_BOOTSTRAP_CONTEXT_DESC￨3 ,￨3 false￨3 )￨3 ;￨3 for￨3 (￨3 final￨4 BootstrapContextAdd￨4 .￨4 BootstrapCtxParameters￨4 parameter￨4 :￨4 BootstrapCtxParameters￨4 .￨4 values￨4 (￨4 )￨4 )￨3 {￨3 bootstrapContext￨4 .￨4 registerReadWriteAttribute￨4 (￨4 parameter￨4 .￨4 getAttribute￨4 (￨4 )￨4 ,￨4 null￨4 ,￨4 new￨4 ReloadRequiredWriteAttributeHandler￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 subsystem￨3 .￨3 registerXMLElementWriter￨3 (￨3 JcaExtension￨3 .￨3 ConnectorSubsystemParser￨3 .￨3 INSTANCE￨3 )￨3 ;￨3 }￨2 @￨2 Override￨2 public￨2 void￨2 initializeParsers￨2 (￨2 final￨3 ExtensionParsingContext￨3 context￨3 )￨2 {￨2 }￨2 static￨2 final￨2 class￨2 ConnectorSubsystemParser￨2 implements￨2 XMLStreamConstants￨2 ,￨2 XMLElementReader￨2 <￨2 List￨2 <￨2 ModelNode￨2 >￨2 >￨2 ,￨2 XMLElementWriter￨2 <￨2 SubsystemMarshallingContext￨2 >￨2 {￨2 static￨3 final￨3 JcaExtension￨3 .￨3 ConnectorSubsystemParser￨3 INSTANCE￨3 =￨3 new￨3 JcaExtension￨3 .￨3 ConnectorSubsystemParser￨3 (￨3 )￨3 ;￨3 @￨3 Override￨3 public￨3 void￨3 writeContent￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 SubsystemMarshallingContext￨3 context￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeArchiveValidation￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeBeanValidation￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeCachedConnectionManager￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeWorkManagers￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 writeBootstrapContexts￨3 (￨3 XMLExtendedStreamWriter￨3 writer￨3 ,￨3 ModelNode￨3 parentNode￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 @￨3 Override￨3 public￨3 void￨3 readElement￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseArchiveValidation￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 parseWorkManager￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentAddress￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 ,￨3 final￨3 ModelNode￨3 node￨3 ,￨3 boolean￨3 defaultWm￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseBeanValidation￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 ModelNode￨3 parseCcm￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentOperation￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 private￨3 void￨3 parseBootstrapContexts￨3 (￨3 final￨3 XMLExtendedStreamReader￨3 reader￨3 ,￨3 final￨3 ModelNode￨3 parentAddress￨3 ,￨3 final￨3 List￨3 <￨3 ModelNode￨3 >￨3 list￨3 )￨3 throws￨3 XMLStreamException￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 rawAttributeText￨3 (￨3 XMLStreamReader￨4 reader￨4 ,￨4 String￨4 attributeName￨4 )￨3 {￨3 }￨3 }￨2 }￨1
class￨1 LRSProxyMap￨1 extends￨1 AbstractLRSProxyMap￨1 {￨1 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 LRSProxyMap￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 LRSMapFieldStrategy￨2 _strat￨2 ;￨2 public￨2 LRSProxyMap￨2 (￨2 LRSMapFieldStrategy￨2 strat￨2 )￨2 {￨2 }￨2 protected￨2 synchronized￨2 int￨2 count￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 hasKey￨2 (￨2 Object￨3 key￨3 )￨2 {￨2 }￨2 protected￨2 boolean￨2 hasValue￨2 (￨2 Object￨3 value￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 has￨2 (￨2 final￨3 Object￨3 obj￨3 ,￨3 final￨3 boolean￨3 key￨3 )￨2 {￨2 }￨2 protected￨2 Collection￨2 keys￨2 (￨2 final￨3 Object￨3 obj￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 value￨2 (￨2 final￨3 Object￨3 obj￨3 )￨2 {￨2 final￨3 OpenJPAStateManager￨3 sm￨3 =￨3 assertOwner￨3 (￨3 )￨3 ;￨3 final￨3 JDBCStore￨3 store￨3 =￨3 getStore￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 _strat￨4 .￨4 getFieldMapping￨4 (￨4 )￨4 .￨4 getElement￨4 (￨4 )￨4 .￨4 getValueMappedBy￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 Object￨4 val￨4 =￨4 _strat￨4 .￨4 deriveValue￨4 (￨4 store￨4 ,￨4 obj￨4 )￨4 ;￨4 if￨4 (￨4 hasValue￨5 (￨5 val￨5 )￨5 )￨4 {￨4 return￨5 val￨5 ;￨5 }￨4 return￨4 null￨4 ;￨4 }￨3 final￨3 JDBCFetchConfiguration￨3 fetch￨3 =￨3 store￨3 .￨3 getFetchConfiguration￨3 (￨3 )￨3 ;￨3 final￨3 ClassMapping￨3 [￨3 ]￨3 clss￨3 =￨3 _strat￨3 .￨3 getIndependentValueMappings￨3 (￨3 true￨3 )￨3 ;￨3 final￨3 Joins￨3 [￨3 ]￨3 resJoins￨3 =￨3 new￨3 Joins￨3 [￨3 Math￨3 .￨3 max￨3 (￨3 1￨3 ,￨3 clss￨3 .￨3 length￨3 )￨3 ]￨3 ;￨3 Union￨3 union￨3 =￨3 store￨3 .￨3 getSQLFactory￨3 (￨3 )￨3 .￨3 newUnion￨3 (￨3 Math￨3 .￨3 max￨3 (￨3 1￨3 ,￨3 clss￨3 .￨3 length￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 union￨3 .￨3 setSingleResult￨3 (￨3 true￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 fetch￨4 .￨4 getSubclassFetchMode￨4 (￨4 _strat￨4 .￨4 getFieldMapping￨4 (￨4 )￨4 .￨4 getElementMapping￨4 (￨4 )￨4 .￨4 getTypeMapping￨4 (￨4 )￨4 )￨4 )￨4 !=￨4 (￨4 JDBCFetchConfiguration￨4 .￨4 EAGER_JOIN￨4 )￨4 )￨3 {￨3 union￨4 .￨4 abortUnion￨4 (￨4 )￨4 ;￨4 }￨3 union￨3 .￨3 select￨3 (￨3 new￨3 Union￨3 .￨3 Selector￨3 (￨3 )￨3 {￨3 public￨4 void￨4 select￨4 (￨4 Select￨5 sel￨5 ,￨5 int￨5 idx￨5 )￨4 {￨4 ClassMapping￨5 cls￨5 =￨5 (￨5 (￨5 clss￨5 .￨5 length￨5 )￨5 ==￨5 0￨5 )￨5 ?￨5 null￨5 :￨5 clss￨5 [￨5 idx￨5 ]￨5 ;￨5 sel￨5 .￨5 whereForeignKey￨5 (￨5 _strat￨5 .￨5 getJoinForeignKey￨5 (￨5 cls￨5 )￨5 ,￨5 sm￨5 .￨5 getObjectId￨5 (￨5 )￨5 ,￨5 _strat￨5 .￨5 getFieldMapping￨5 (￨5 )￨5 .￨5 getDefiningMapping￨5 (￨5 )￨5 ,￨5 store￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 _strat￨6 .￨6 getFieldMapping￨6 (￨6 )￨6 .￨6 getKey￨6 (￨6 )￨6 .￨6 getValueMappedBy￨6 (￨6 )￨6 )￨6 !=￨6 null￨6 )￨5 {￨5 resJoins￨6 [￨6 idx￨6 ]￨6 =￨6 _strat￨6 .￨6 joinValueRelation￨6 (￨6 sel￨6 .￨6 newJoins￨6 (￨6 )￨6 ,￨6 cls￨6 )￨6 ;￨6 }￨5 Object￨5 key￨5 =￨5 _strat￨5 .￨5 toKeyDataStoreValue￨5 (￨5 obj￨5 ,￨5 store￨5 )￨5 ;￨5 Column￨5 [￨5 ]￨5 cols￨5 =￨5 _strat￨5 .￨5 getKeyColumns￨5 (￨5 cls￨5 )￨5 ;￨5 Object￨5 [￨5 ]￨5 vals￨5 =￨5 (￨5 (￨5 cols￨5 .￨5 length￨5 )￨5 ==￨5 1￨5 )￨5 ?￨5 null￨5 :￨5 (￨5 (￨5 Object￨5 [￨5 ]￨5 )￨5 (￨5 key￨5 )￨5 )￨5 ;￨5 SQLBuffer￨5 sql￨5 =￨5 new￨5 SQLBuffer￨5 (￨5 store￨5 .￨5 getDBDictionary￨5 (￨5 )￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 0￨6 ;￨6 i￨6 <￨6 (￨6 cols￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 if￨6 (￨6 i￨7 >￨7 0￨7 )￨6 {￨6 sql￨7 .￨7 append￨7 (￨7 "<seq2seq4repair_space>AND<seq2seq4repair_space>"￨7 )￨7 ;￨7 }￨6 sql￨6 .￨6 append￨6 (￨6 sel￨6 .￨6 getColumnAlias￨6 (￨6 cols￨6 [￨6 i￨6 ]￨6 ,￨6 resJoins￨6 [￨6 idx￨6 ]￨6 )￨6 )￨6 ;￨6 if￨6 (￨6 vals￨7 ==￨7 null￨7 )￨6 {￨6 sql￨7 .￨7 append￨7 (￨7 (￨7 key￨7 ==￨7 null￨7 ?￨7 "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨7 :￨7 "<seq2seq4repair_space>=<seq2seq4repair_space>"￨7 )￨7 )￨7 .￨7 appendValue￨7 (￨7 key￨7 ,￨7 cols￨7 [￨7 i￨7 ]￨7 )￨7 ;￨7 }￨6 else￨6 {￨6 sql￨7 .￨7 append￨7 (￨7 (￨7 (￨7 vals￨7 [￨7 i￨7 ]￨7 )￨7 ==￨7 null￨7 ?￨7 "<seq2seq4repair_space>IS<seq2seq4repair_space>"￨7 :￨7 "<seq2seq4repair_space>=<seq2seq4repair_space>"￨7 )￨7 )￨7 .￨7 appendValue￨7 (￨7 vals￨7 [￨7 i￨7 ]￨7 ,￨7 cols￨7 [￨7 i￨7 ]￨7 )￨7 ;￨7 }￨6 }￨5 sel￨5 .￨5 where￨5 (￨5 sql￨5 ,￨5 resJoins￨5 [￨5 idx￨5 ]￨5 )￨5 ;￨5 if￨5 (￨5 (￨6 resJoins￨6 [￨6 idx￨6 ]￨6 )￨6 ==￨6 null￨6 )￨5 {￨5 resJoins￨6 [￨6 idx￨6 ]￨6 =￨6 _strat￨6 .￨6 joinValueRelation￨6 (￨6 sel￨6 .￨6 newJoins￨6 (￨6 )￨6 ,￨6 cls￨6 )￨6 ;￨6 }￨5 _strat￨5 .￨5 selectValue￨5 (￨5 sel￨5 ,￨5 cls￨5 ,￨5 sm￨5 ,￨5 store￨5 ,￨5 fetch￨5 ,￨5 resJoins￨5 [￨5 idx￨5 ]￨5 )￨5 ;￨5 }￨4 }￨3 )￨3 ;￨3 Result￨3 res￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 res￨4 =￨4 union￨4 .￨4 execute￨4 (￨4 store￨4 ,￨4 fetch￨4 )￨4 ;￨4 if￨4 (￨4 res￨5 .￨5 next￨5 (￨5 )￨5 )￨4 {￨4 return￨5 _strat￨5 .￨5 loadValue￨5 (￨5 sm￨5 ,￨5 store￨5 ,￨5 fetch￨5 ,￨5 res￨5 ,￨5 resJoins￨5 [￨5 res￨5 .￨5 indexOf￨5 (￨5 )￨5 ]￨5 )￨5 ;￨5 }￨4 return￨4 null￨4 ;￨4 }￨3 catch￨3 (￨3 SQLException￨4 se￨4 )￨3 {￨3 throw￨4 SQLExceptions￨4 .￨4 getStore￨4 (￨4 se￨4 ,￨4 store￨4 .￨4 getDBDictionary￨4 (￨4 )￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 if￨4 (￨4 res￨5 !=￨5 null￨5 )￨4 {￨4 res￨5 .￨5 close￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 Iterator￨2 itr￨2 (￨2 )￨2 {￨2 }￨2 private￨2 OpenJPAStateManager￨2 assertOwner￨2 (￨2 )￨2 {￨2 }￨2 private￨2 JDBCStore￨2 getStore￨2 (￨2 )￨2 {￨2 }￨2 private￨2 class￨2 ResultIterator￨2 implements￨2 Iterator￨2 ,￨2 Closeable￨2 {￨2 private￨3 final￨3 OpenJPAStateManager￨3 _sm￨3 ;￨3 private￨3 final￨3 JDBCStore￨3 _store￨3 ;￨3 private￨3 final￨3 JDBCFetchConfiguration￨3 _fetch￨3 ;￨3 private￨3 final￨3 Result￨3 [￨3 ]￨3 _res￨3 ;￨3 private￨3 final￨3 Joins￨3 [￨3 ]￨3 _joins￨3 ;￨3 private￨3 Boolean￨3 _next￨3 =￨3 null￨3 ;￨3 public￨3 ResultIterator￨3 (￨3 OpenJPAStateManager￨4 sm￨4 ,￨4 JDBCStore￨4 store￨4 ,￨4 JDBCFetchConfiguration￨4 fetch￨4 ,￨4 Result￨4 [￨4 ]￨4 res￨4 ,￨4 Joins￨4 [￨4 ]￨4 joins￨4 )￨3 {￨3 }￨3 public￨3 boolean￨3 hasNext￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Object￨3 next￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 remove￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 close￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 Entry￨2 implements￨2 Map￨2 .￨2 Entry￨2 {￨2 public￨3 Object￨3 key￨3 ;￨3 public￨3 Object￨3 val￨3 ;￨3 public￨3 Object￨3 getKey￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Object￨3 getValue￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Object￨3 setValue￨3 (￨3 Object￨4 val￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 abstract￨1 class￨1 DefaultCompilerAdapter￨1 extends￨1 AbstractLogEnabled￨1 implements￨1 CompilerAdapter￨1 {￨1 protected￨2 boolean￨2 m_debug￨2 ;￨2 protected￨2 boolean￨2 m_optimize￨2 ;￨2 protected￨2 boolean￨2 m_deprecation￨2 ;￨2 protected￨2 boolean￨2 m_depend￨2 ;￨2 protected￨2 boolean￨2 m_verbose￨2 ;￨2 protected￨2 Javac￨2 m_attributes￨2 ;￨2 protected￨2 Path￨2 m_bootclasspath￨2 ;￨2 protected￨2 Path￨2 m_compileClasspath￨2 ;￨2 protected￨2 File￨2 [￨2 ]￨2 m_compileList￨2 ;￨2 protected￨2 File￨2 m_destDir￨2 ;￨2 protected￨2 String￨2 m_encoding￨2 ;￨2 protected￨2 Path￨2 m_extdirs￨2 ;￨2 protected￨2 boolean￨2 m_includeAntRuntime￨2 ;￨2 protected￨2 boolean￨2 m_includeJavaRuntime￨2 ;￨2 protected￨2 String￨2 m_memoryInitialSize￨2 ;￨2 protected￨2 String￨2 m_memoryMaximumSize￨2 ;￨2 protected￨2 File￨2 m_baseDir￨2 ;￨2 protected￨2 Path￨2 src￨2 ;￨2 protected￨2 String￨2 target￨2 ;￨2 public￨2 void￨2 setJavac￨2 (￨2 Javac￨3 attributes￨3 )￨2 {￨2 }￨2 public￨2 Javac￨2 getJavac￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupJavacCommand￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupJavacCommand￨2 (￨2 boolean￨2 debugLevelCheck￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupJavacCommandlineSwitches￨2 (￨2 Commandline￨2 cmd￨2 ,￨2 boolean￨2 useDebugLevel￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupModernJavacCommand￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Commandline￨2 setupModernJavacCommandlineSwitches￨2 (￨2 Commandline￨2 cmd￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Path￨2 getCompileClasspath￨2 (￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 addCurrentCompilerArgs￨2 (￨2 Commandline￨3 cmd￨3 )￨2 {￨2 }￨2 protected￨2 int￨2 executeExternalCompile￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 ,￨2 int￨2 firstFileName￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 String￨3 [￨3 ]￨3 commandArray￨3 =￨3 null￨3 ;￨3 File￨3 tmpFile￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 Commandline￨4 .￨4 toString￨4 (￨4 args￨4 )￨4 .￨4 length￨4 (￨4 )￨4 )￨4 >￨4 4096￨4 )￨4 {￨4 <END_BUG>￨4 PrintWriter￨4 out￨4 =￨4 null￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 tmpFile￨5 =￨5 File￨5 .￨5 createTempFile￨5 (￨5 "jikes"￨5 ,￨5 ""￨5 ,￨5 new￨5 File￨5 (￨5 "."￨5 )￨5 )￨5 ;￨5 out￨5 =￨5 new￨5 PrintWriter￨5 (￨5 new￨5 FileWriter￨5 (￨5 tmpFile￨5 )￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 i￨6 =￨6 firstFileName￨6 ;￨6 i￨6 <￨6 (￨6 args￨6 .￨6 length￨6 )￨6 ;￨6 i￨6 ++￨6 )￨5 {￨5 out￨6 .￨6 println￨6 (￨6 args￨6 [￨6 i￨6 ]￨6 )￨6 ;￨6 }￨5 out￨5 .￨5 flush￨5 (￨5 )￨5 ;￨5 commandArray￨5 =￨5 new￨5 String￨5 [￨5 firstFileName￨5 +￨5 1￨5 ]￨5 ;￨5 System￨5 .￨5 arraycopy￨5 (￨5 args￨5 ,￨5 0￨5 ,￨5 commandArray￨5 ,￨5 0￨5 ,￨5 firstFileName￨5 )￨5 ;￨5 commandArray￨5 [￨5 firstFileName￨5 ]￨5 =￨5 "@"￨5 +￨5 (￨5 tmpFile￨5 .￨5 getAbsolutePath￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 TaskException￨5 (￨5 "Error<seq2seq4repair_space>creating<seq2seq4repair_space>temporary<seq2seq4repair_space>file"￨5 ,￨5 e￨5 )￨5 ;￨5 }￨4 finally￨4 (￨4 )￨4 {￨4 if￨5 (￨5 out￨6 !=￨6 null￨6 )￨5 {￨5 try￨6 (￨6 )￨6 {￨6 out￨7 .￨7 close￨7 (￨7 )￨7 ;￨7 }￨6 catch￨6 (￨6 Throwable￨7 t￨7 )￨6 {￨6 }￨6 }￨5 }￨4 else￨4 {￨4 commandArray￨5 =￨5 args￨5 ;￨5 }￨4 try￨4 (￨4 )￨4 {￨4 final￨5 Execute2￨5 exe￨5 =￨5 new￨5 Execute2￨5 (￨5 )￨5 ;￨5 setupLogger￨5 (￨5 exe￨5 )￨5 ;￨5 exe￨5 .￨5 setWorkingDirectory￨5 (￨5 m_baseDir￨5 )￨5 ;￨5 exe￨5 .￨5 setCommandline￨5 (￨5 commandArray￨5 )￨5 ;￨5 return￨5 exe￨5 .￨5 execute￨5 (￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 IOException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 TaskException￨5 (￨5 (￨5 (￨5 "Error<seq2seq4repair_space>running<seq2seq4repair_space>"￨5 +￨5 (￨5 args￨5 [￨5 0￨5 ]￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>compiler"￨5 )￨5 ,￨5 e￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 if￨4 (￨4 tmpFile￨5 !=￨5 null￨5 )￨4 {￨4 tmpFile￨5 .￨5 delete￨5 (￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 protected￨2 void￨2 logAndAddFilesToCompile￨2 (￨2 Commandline￨3 cmd￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CastExpression￨1 extends￨1 Expression￨1 {￨1 public￨2 Expression￨2 expression￨2 ;￨2 public￨2 Expression￨2 type￨2 ;￨2 public￨2 TypeBinding￨2 expectedType￨2 ;￨2 public￨2 CastExpression￨2 (￨2 Expression￨3 expression￨3 ,￨3 Expression￨3 type￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForAssignedCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 expectedType￨3 ,￨3 CastExpression￨3 rhs￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForEnclosingInstanceCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 enclosingInstance￨3 ,￨3 TypeBinding￨3 enclosingInstanceType￨3 ,￨3 TypeBinding￨3 memberType￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCast￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 operatorSignature￨3 ,￨3 Expression￨3 expression￨3 ,￨3 int￨3 expressionTypeId￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCasts￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 receiver￨3 ,￨3 TypeBinding￨3 receiverType￨3 ,￨3 MethodBinding￨3 binding￨3 ,￨3 Expression￨3 [￨3 ]￨3 arguments￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 argumentTypes￨3 ,￨3 final￨3 InvocationSite￨3 invocationSite￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 checkNeedForArgumentCasts￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 int￨3 operator￨3 ,￨3 int￨3 operatorSignature￨3 ,￨3 Expression￨3 left￨3 ,￨3 int￨3 leftTypeId￨3 ,￨3 boolean￨3 leftIsCast￨3 ,￨3 Expression￨3 right￨3 ,￨3 int￨3 rightTypeId￨3 ,￨3 boolean￨3 rightIsCast￨3 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 checkAlternateBinding￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 Expression￨3 receiver￨3 ,￨3 TypeBinding￨3 receiverType￨3 ,￨3 MethodBinding￨3 binding￨3 ,￨3 Expression￨3 [￨3 ]￨3 arguments￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 originalArgumentTypes￨3 ,￨3 TypeBinding￨3 [￨3 ]￨3 alternateArgumentTypes￨3 ,￨3 final￨3 InvocationSite￨3 invocationSite￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 checkUnsafeCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 ,￨3 TypeBinding￨3 expressionType￨3 ,￨3 TypeBinding￨3 match￨3 ,￨3 boolean￨3 isNarrowing￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 int￨3 pc￨3 =￨3 codeStream￨3 .￨3 position￨3 ;￨3 boolean￨3 needRuntimeCheckcast￨3 =￨3 (￨3 (￨3 this￨3 .￨3 bits￨3 )￨3 &￨3 (￨3 ASTNode￨3 .￨3 GenerateCheckcast￨3 )￨3 )￨3 !=￨3 0￨3 ;￨3 if￨3 (￨3 (￨4 constant￨4 )￨4 !=￨4 (￨4 Constant￨4 .￨4 NotAConstant￨4 )￨4 )￨3 {￨3 if￨4 (￨4 valueRequired￨5 ||￨5 needRuntimeCheckcast￨5 )￨4 {￨4 codeStream￨5 .￨5 generateConstant￨5 (￨5 constant￨5 ,￨5 implicitConversion￨5 )￨5 ;￨5 if￨5 (￨5 needRuntimeCheckcast￨6 )￨5 {￨5 codeStream￨6 .￨6 checkcast￨6 (￨6 this￨6 .￨6 resolvedType￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 valueRequired￨6 )￨5 {￨5 codeStream￨6 .￨6 pop￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 codeStream￨4 .￨4 recordPositionsFrom￨4 (￨4 pc￨4 ,￨4 this￨4 .￨4 sourceStart￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 expression￨3 .￨3 generateCode￨3 (￨3 currentScope￨3 ,￨3 codeStream￨3 ,￨3 (￨3 valueRequired￨3 ||￨3 needRuntimeCheckcast￨3 )￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 needRuntimeCheckcast￨3 &&￨3 (￨3 (￨3 this￨3 .￨3 expression￨3 .￨3 postConversionType￨3 (￨3 currentScope￨3 )￨3 )￨3 !=￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 codeStream￨3 .￨3 checkcast￨3 (￨3 this￨3 .￨3 resolvedType￨3 )￨3 ;￨3 if￨3 (￨3 valueRequired￨4 )￨3 {￨3 codeStream￨4 .￨4 generateImplicitConversion￨4 (￨4 implicitConversion￨4 )￨4 ;￨4 }￨3 else￨3 if￨3 (￨3 needRuntimeCheckcast￨4 )￨3 {￨3 codeStream￨4 .￨4 pop￨4 (￨4 )￨4 ;￨4 }￨3 codeStream￨3 .￨3 recordPositionsFrom￨3 (￨3 pc￨3 ,￨3 this￨3 .￨3 sourceStart￨3 )￨3 ;￨3 }￨2 public￨2 Expression￨2 innermostCastedExpression￨2 (￨2 )￨2 {￨2 }￨2 public￨2 LocalVariableBinding￨2 localVariableBinding￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 nullStatus￨2 (￨2 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 Constant￨2 optimizedBooleanConstant￨2 (￨2 )￨2 {￨2 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveType￨2 (￨2 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExpectedType￨2 (￨2 TypeBinding￨3 expectedType￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isIndirectlyUsed￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsNeedCheckCast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 tagAsUnnecessaryCast￨2 (￨2 Scope￨3 scope￨3 ,￨3 TypeBinding￨3 castType￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ParameterData￨1 extends￨1 ItemData￨1 {￨1 Method￨2 method￨2 ;￨2 int￨2 parameter￨2 ;￨2 public￨2 ParameterData￨2 (￨2 Method￨3 method￨3 ,￨3 int￨3 parameter￨3 ,￨3 String￨3 str￨3 )￨2 {￨2 }￨2 public￨2 static￨2 String￨2 [￨2 ]￨2 getAllFlags￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 String￨3 [￨3 ]￨3 {￨3 FLAG_NO_IN￨3 ,￨3 FLAG_NO_OUT￨3 ,￨3 FLAG_CRITICAL￨3 ,￨3 FLAG_INIT￨3 ,￨3 FLAG_STRUCT￨3 ,￨3 FLAG_UNICODE￨3 ,￨3 FLAG_SENTINEL￨3 }￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 String￨2 getCast￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Method￨2 getMethod￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getParameter￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCast￨2 (￨2 String￨3 str￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Sort￨1 {￨1 public￨2 static￨2 final￨2 Sort￨2 RELEVANCE￨2 =￨2 new￨2 Sort￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 Sort￨2 INDEXORDER￨2 =￨2 new￨2 Sort￨2 (￨2 SortField￨2 .￨2 FIELD_DOC￨2 )￨2 ;￨2 SortField￨2 [￨2 ]￨2 fields￨2 ;￨2 public￨2 Sort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Sort￨2 (￨2 SortField￨3 field￨3 )￨2 {￨2 }￨2 public￨2 Sort￨2 (￨2 SortField￨3 ...￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSort￨2 (￨2 SortField￨3 field￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setSort￨2 (￨2 SortField￨3 ...￨3 fields￨3 )￨2 {￨2 }￨2 public￨2 SortField￨2 [￨2 ]￨2 getSort￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Sort￨2 rewrite￨2 (￨2 IndexSearcher￨2 searcher￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 needsScores￨2 (￨2 )￨2 {￨2 for￨3 (￨3 SortField￨4 sortField￨4 :￨4 fields￨4 )￨3 {￨3 <START_BUG>￨4 if￨4 (￨4 (￨4 sortField￨4 .￨4 getType￨4 (￨4 )￨4 )￨4 ==￨4 (￨4 Type￨4 .￨4 SCORE￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 return￨4 true￨4 ;￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 ServiceActivatorDependencyProcessor￨1 implements￨1 DeploymentUnitProcessor￨1 {￨1 private￨2 static￨2 final￨2 String￨2 SERVICE_ACTIVATOR_PATH￨2 =￨2 "META-INF/services/"￨2 +￨2 (￨2 ServiceActivator￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 ModuleDependency￨2 MSC_DEP￨2 =￨2 new￨2 ModuleDependency￨2 (￨2 null￨2 ,￨2 ModuleIdentifier￨2 .￨2 create￨2 (￨2 "org.jboss.msc"￨2 )￨2 ,￨2 false￨2 ,￨2 false￨2 ,￨2 false￨2 )￨2 ;￨2 public￨2 void￨2 deploy￨2 (￨2 DeploymentPhaseContext￨2 phaseContext￨2 )￨2 throws￨2 DeploymentUnitProcessingException￨2 {￨2 <START_BUG>￨3 final￨3 ResourceRoot￨3 deploymentRoot￨3 =￨3 phaseContext￨3 .￨3 getAttachment￨3 (￨3 DEPLOYMENT_ROOT￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 deploymentRoot￨4 ==￨4 null￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 if￨3 (￨3 deploymentRoot￨4 .￨4 getRoot￨4 (￨4 )￨4 .￨4 getChild￨4 (￨4 ServiceActivatorDependencyProcessor￨4 .￨4 SERVICE_ACTIVATOR_PATH￨4 )￨4 .￨4 exists￨4 (￨4 )￨4 )￨3 {￨3 phaseContext￨4 .￨4 putAttachment￨4 (￨4 ATTACHMENT_KEY￨4 ,￨4 new￨4 ServiceActivatorMarker￨4 (￨4 )￨4 )￨4 ;￨4 phaseContext￨4 .￨4 addToAttachmentList￨4 (￨4 MODULE_DEPENDENCIES￨4 ,￨4 ServiceActivatorDependencyProcessor￨4 .￨4 MSC_DEP￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 undeploy￨2 (￨2 final￨3 DeploymentUnit￨3 context￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SendMessageCommand￨1 extends￨1 Command￨1 {￨1 private￨2 SendMessageDialog￨2 sendMessageDialog￨2 ;￨2 private￨2 boolean￨2 showComposer￨2 =￨2 false￨2 ;￨2 private￨2 ComposerController￨2 composerController￨2 ;￨2 public￨2 SendMessageCommand￨2 (￨2 ICommandReference￨3 reference￨3 )￨2 {￨2 }￨2 private￨2 void￨2 showInvalidRecipientMessage￨2 (￨2 String￨3 recipient￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 validArguments￨2 (￨2 ComposerCommandReference￨3 reference￨3 )￨2 {￨2 }￨2 public￨2 void￨2 execute￨2 (￨2 IWorkerStatusController￨2 worker￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 ComposerCommandReference￨3 r￨3 =￨3 (￨3 (￨3 ComposerCommandReference￨3 )￨3 (￨3 getReference￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 validArguments￨4 (￨4 r￨4 )￨4 )￨4 )￨3 {￨3 return￨4 ;￨4 }￨3 worker￨3 .￨3 setDisplayText￨3 (￨3 MailResourceLoader￨3 .￨3 getString￨3 (￨3 "statusbar"￨3 ,￨3 "message"￨3 ,￨3 "send_message_compose"￨3 )￨3 )￨3 ;￨3 composerController￨3 =￨3 r￨3 .￨3 getComposerController￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 composerController￨4 .￨4 getView￨4 (￨4 )￨4 .￨4 getFrame￨4 (￨4 )￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 composerController￨4 .￨4 getView￨4 (￨4 )￨4 .￨4 getFrame￨4 (￨4 )￨4 .￨4 setVisible￨4 (￨4 false￨4 )￨4 ;￨4 }￨3 sendMessageDialog￨3 =￨3 new￨3 SendMessageDialog￨3 (￨3 worker￨3 )￨3 ;￨3 ComposerModel￨3 model￨3 =￨3 (￨3 (￨3 ComposerModel￨3 )￨3 (￨3 composerController￨3 .￨3 getModel￨3 (￨3 )￨3 )￨3 )￨3 ;￨3 AccountItem￨3 item￨3 =￨3 model￨3 .￨3 getAccountItem￨3 (￨3 )￨3 ;￨3 AbstractMessageFolder￨3 sentFolder￨3 =￨3 (￨3 (￨3 AbstractMessageFolder￨3 )￨3 (￨3 FolderTreeModel￨3 .￨3 getInstance￨3 (￨3 )￨3 .￨3 getFolder￨3 (￨3 item￨3 .￨3 getSpecialFoldersItem￨3 (￨3 )￨3 .￨3 getInteger￨3 (￨3 "sent"￨3 )￨3 )￨3 )￨3 )￨3 ;￨3 SendableMessage￨3 message￨3 =￨3 null￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 <START_BUG>￨4 message￨4 =￨4 new￨4 org￨4 .￨4 columba￨4 .￨4 mail￨4 .￨4 composer￨4 .￨4 MessageComposer￨4 (￨4 model￨4 )￨4 .￨4 compose￨4 (￨4 worker￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 JSCFException￨4 e1￨4 )￨3 {￨3 if￨4 (￨4 e1￨5 instanceof￨5 CancelledException￨5 )￨4 {￨4 showComposer￨5 =￨5 true￨5 ;￨5 return￨5 ;￨5 }￨4 else￨4 {￨4 JOptionPane￨5 .￨5 showMessageDialog￨5 (￨5 null￨5 ,￨5 e1￨5 .￨5 getMessage￨5 (￨5 )￨5 )￨5 ;￨5 showComposer￨5 =￨5 true￨5 ;￨5 return￨5 ;￨5 }￨4 }￨3 worker￨3 .￨3 setDisplayText￨3 (￨3 MailResourceLoader￨3 .￨3 getString￨3 (￨3 "statusbar"￨3 ,￨3 "message"￨3 ,￨3 "send_message_connect"￨3 )￨3 )￨3 ;￨3 final￨3 SMTPServer￨3 server￨3 =￨3 new￨3 SMTPServer￨3 (￨3 item￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 worker￨4 .￨4 setDisplayText￨4 (￨4 MailResourceLoader￨4 .￨4 getString￨4 (￨4 "statusbar"￨4 ,￨4 "message"￨4 ,￨4 "send_message"￨4 )￨4 )￨4 ;￨4 IWorkerStatusChangeListener￨4 listener￨4 =￨4 new￨4 IWorkerStatusChangeListener￨4 (￨4 )￨4 {￨4 public￨5 void￨5 workerStatusChanged￨5 (￨5 WorkerStatusChangedEvent￨6 e￨6 )￨5 {￨5 if￨6 (￨6 e￨7 .￨7 getSource￨7 (￨7 )￨7 .￨7 cancelled￨7 (￨7 )￨7 )￨6 {￨6 try￨7 (￨7 )￨7 {￨7 server￨8 .￨8 dropConnection￨8 (￨8 )￨8 ;￨8 }￨7 catch￨7 (￨7 IOException￨8 e1￨8 )￨7 {￨7 }￨7 }￨6 }￨5 }￨4 ;￨4 worker￨4 .￨4 addWorkerStatusChangeListener￨4 (￨4 listener￨4 )￨4 ;￨4 server￨4 .￨4 sendMessage￨4 (￨4 message￨4 ,￨4 worker￨4 )￨4 ;￨4 worker￨4 .￨4 removeWorkerStatusChangeListener￨4 (￨4 listener￨4 )￨4 ;￨4 if￨4 (￨4 worker￨5 .￨5 cancelled￨5 (￨5 )￨5 )￨4 {￨4 showComposer￨5 =￨5 true￨5 ;￨5 return￨5 ;￨5 }￨4 Flags￨4 flags￨4 =￨4 new￨4 Flags￨4 (￨4 )￨4 ;￨4 flags￨4 .￨4 setSeen￨4 (￨4 true￨4 )￨4 ;￨4 message￨4 .￨4 getHeader￨4 (￨4 )￨4 .￨4 setFlags￨4 (￨4 flags￨4 )￨4 ;￨4 ComposerCommandReference￨4 ref￨4 =￨4 new￨4 ComposerCommandReference￨4 (￨4 composerController￨4 ,￨4 sentFolder￨4 )￨4 ;￨4 ref￨4 .￨4 setMessage￨4 (￨4 message￨4 )￨4 ;￨4 SaveMessageCommand￨4 c￨4 =￨4 new￨4 SaveMessageCommand￨4 (￨4 ref￨4 )￨4 ;￨4 CommandProcessor￨4 .￨4 getInstance￨4 (￨4 )￨4 .￨4 addOp￨4 (￨4 c￨4 )￨4 ;￨4 MailFolderCommandReference￨4 ref2￨4 =￨4 model￨4 .￨4 getSourceReference￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 ref2￨5 !=￨5 null￨5 )￨5 &&￨5 (￨5 (￨5 (￨5 IMailbox￨5 )￨5 (￨5 ref2￨5 .￨5 getSourceFolder￨5 (￨5 )￨5 )￨5 )￨5 .￨5 exists￨5 (￨5 ref2￨5 .￨5 getUids￨5 (￨5 )￨5 [￨5 0￨5 ]￨5 )￨5 )￨5 )￨4 {￨4 ref2￨5 .￨5 setMarkVariant￨5 (￨5 MARK_AS_ANSWERED￨5 )￨5 ;￨5 MarkMessageCommand￨5 c1￨5 =￨5 new￨5 MarkMessageCommand￨5 (￨5 ref2￨5 )￨5 ;￨5 CommandProcessor￨5 .￨5 getInstance￨5 (￨5 )￨5 .￨5 addOp￨5 (￨5 c1￨5 )￨5 ;￨5 }￨4 worker￨4 .￨4 setDisplayText￨4 (￨4 MailResourceLoader￨4 .￨4 getString￨4 (￨4 "statusbar"￨4 ,￨4 "message"￨4 ,￨4 "send_message_closing"￨4 )￨4 )￨4 ;￨4 server￨4 .￨4 closeConnection￨4 (￨4 )￨4 ;￨4 worker￨4 .￨4 setDisplayText￨4 (￨4 MailResourceLoader￨4 .￨4 getString￨4 (￨4 "statusbar"￨4 ,￨4 "message"￨4 ,￨4 "send_message_success"￨4 )￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 Exception￨4 e￨4 )￨3 {￨3 showComposer￨4 =￨4 true￨4 ;￨4 throw￨4 e￨4 ;￨4 }￨3 }￨2 public￨2 void￨2 updateGUI￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 SendMessageDialog￨1 extends￨1 JDialog￨1 implements￨1 ActionListener￨1 ,￨1 WorkerStatusChangeListener￨1 {￨1 private￨2 JProgressBar￨2 progressBar￨2 ;￨2 private￨2 JButton￨2 cancelButton￨2 ;￨2 private￨2 JLabel￨2 label￨2 ;￨2 private￨2 WorkerStatusController￨2 worker￨2 ;￨2 public￨2 SendMessageDialog￨2 (￨2 WorkerStatusController￨2 worker￨2 )￨2 throws￨2 HeadlessException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 initComponents￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 layoutComponents￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 workerStatusChanged￨2 (￨2 WorkerStatusChangedEvent￨3 e￨3 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 arg0￨3 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 arg0￨3 .￨3 equals￨3 (￨3 "CANCEL"￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 worker￨3 .￨3 cancel￨3 (￨3 )￨3 ;￨3 setVisible￨3 (￨3 false￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 setWorker￨2 (￨2 WorkerStatusController￨3 worker￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ForStatement￨1 extends￨1 Statement￨1 {￨1 public￨2 Statement￨2 [￨2 ]￨2 initializations￨2 ;￨2 public￨2 Expression￨2 condition￨2 ;￨2 public￨2 Statement￨2 [￨2 ]￨2 increments￨2 ;￨2 public￨2 Statement￨2 action￨2 ;￨2 public￨2 boolean￨2 neededScope￨2 ;￨2 public￨2 BlockScope￨2 scope￨2 ;￨2 private￨2 Label￨2 breakLabel￨2 ;￨2 private￨2 Label￨2 continueLabel￨2 ;￨2 int￨2 preCondInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 condIfTrueInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 int￨2 mergedInitStateIndex￨2 =￨2 -￨2 1￨2 ;￨2 public￨2 ForStatement￨2 (￨2 Statement￨3 [￨3 ]￨3 initializations￨3 ,￨3 Expression￨3 condition￨3 ,￨3 Statement￨3 [￨3 ]￨3 increments￨3 ,￨3 Statement￨3 action￨3 ,￨3 boolean￨3 neededScope￨3 ,￨3 int￨3 s￨3 ,￨3 int￨3 e￨3 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 breakLabel￨3 =￨3 new￨3 Label￨3 (￨3 )￨3 ;￨3 continueLabel￨3 =￨3 new￨3 Label￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 initializations￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 int￨4 count￨4 =￨4 initializations￨4 .￨4 length￨4 ;￨4 int￨4 i￨4 =￨4 0￨4 ;￨4 while￨4 (￨4 i￨5 <￨5 count￨5 )￨4 {￨4 flowInfo￨5 =￨5 initializations￨5 [￨5 (￨5 i￨5 ++￨5 )￨5 ]￨5 .￨5 analyseCode￨5 (￨5 scope￨5 ,￨5 flowContext￨5 ,￨5 flowInfo￨5 )￨5 ;￨5 }￨4 }￨3 preCondInitStateIndex￨3 =￨3 currentScope￨3 .￨3 methodScope￨3 (￨3 )￨3 .￨3 recordInitializationStates￨3 (￨3 flowInfo￨3 )￨3 ;￨3 boolean￨3 conditionIsInlinedToTrue￨3 =￨3 (￨3 (￨3 condition￨3 )￨3 ==￨3 null￨3 )￨3 ||￨3 (￨3 (￨3 (￨3 condition￨3 .￨3 constant￨3 )￨3 !=￨3 (￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 condition￨3 .￨3 constant￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 true￨3 )￨3 )￨3 ;￨3 boolean￨3 conditionIsInlinedToFalse￨3 =￨3 (￨3 !￨3 conditionIsInlinedToTrue￨3 )￨3 &&￨3 (￨3 (￨3 (￨3 condition￨3 .￨3 constant￨3 )￨3 !=￨3 (￨3 NotAConstant￨3 )￨3 )￨3 &&￨3 (￨3 (￨3 condition￨3 .￨3 constant￨3 .￨3 booleanValue￨3 (￨3 )￨3 )￨3 ==￨3 false￨3 )￨3 )￨3 ;￨3 LoopingFlowContext￨3 condLoopContext￨3 =￨3 null￨3 ;￨3 if￨3 (￨3 (￨4 condition￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 if￨4 (￨4 !￨5 conditionIsInlinedToTrue￨5 )￨4 {￨4 flowInfo￨5 =￨5 condition￨5 .￨5 analyseCode￨5 (￨5 scope￨5 ,￨5 (￨5 condLoopContext￨5 =￨5 new￨5 LoopingFlowContext￨5 (￨5 flowContext￨5 ,￨5 this￨5 ,￨5 null￨5 ,￨5 null￨5 ,￨5 scope￨5 )￨5 )￨5 ,￨5 flowInfo￨5 )￨5 ;￨5 }￨4 }￨3 LoopingFlowContext￨3 loopingContext￨3 ;￨3 FlowInfo￨3 actionInfo￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 action￨4 )￨4 ==￨4 null￨4 )￨4 ||￨4 (￨4 action￨4 .￨4 isEmptyBlock￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 condLoopContext￨5 !=￨5 null￨5 )￨4 {￨4 condLoopContext￨5 .￨5 complainOnFinalAssignmentsInLoop￨5 (￨5 scope￨5 ,￨5 flowInfo￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 conditionIsInlinedToTrue￨5 )￨4 {￨4 return￨5 DeadEnd￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 conditionIsInlinedToFalse￨6 )￨5 {￨5 continueLabel￨6 =￨6 null￨6 ;￨6 }￨5 actionInfo￨5 =￨5 flowInfo￨5 .￨5 initsWhenTrue￨5 (￨5 )￨5 .￨5 copy￨5 (￨5 )￨5 ;￨5 loopingContext￨5 =￨5 new￨5 LoopingFlowContext￨5 (￨5 flowContext￨5 ,￨5 this￨5 ,￨5 breakLabel￨5 ,￨5 continueLabel￨5 ,￨5 scope￨5 )￨5 ;￨5 }￨4 }￨3 else￨3 {￨3 loopingContext￨4 =￨4 new￨4 LoopingFlowContext￨4 (￨4 flowContext￨4 ,￨4 this￨4 ,￨4 breakLabel￨4 ,￨4 continueLabel￨4 ,￨4 scope￨4 )￨4 ;￨4 FlowInfo￨4 initsWhenTrue￨4 =￨4 flowInfo￨4 .￨4 initsWhenTrue￨4 (￨4 )￨4 ;￨4 condIfTrueInitStateIndex￨4 =￨4 currentScope￨4 .￨4 methodScope￨4 (￨4 )￨4 .￨4 recordInitializationStates￨4 (￨4 initsWhenTrue￨4 )￨4 ;￨4 actionInfo￨4 =￨4 (￨4 conditionIsInlinedToFalse￨4 )￨4 ?￨4 DeadEnd￨4 :￨4 initsWhenTrue￨4 .￨4 copy￨4 (￨4 )￨4 ;￨4 <START_BUG>￨4 if￨4 (￨4 !￨4 (￨4 actionInfo￨4 .￨4 complainIfUnreachable￨4 (￨4 action￨4 ,￨4 scope￨4 )￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 actionInfo￨4 =￨4 action￨4 .￨4 analyseCode￨4 (￨4 scope￨4 ,￨4 loopingContext￨4 ,￨4 actionInfo￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 actionInfo￨5 ==￨5 (￨5 DeadEnd￨5 )￨5 )￨5 ||￨5 (￨5 actionInfo￨5 .￨5 isFakeReachable￨5 (￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 (￨5 (￨5 loopingContext￨5 .￨5 initsOnContinue￨5 )￨5 ==￨5 (￨5 DeadEnd￨5 )￨5 )￨5 ||￨5 (￨5 loopingContext￨5 .￨5 initsOnContinue￨5 .￨5 isFakeReachable￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 continueLabel￨5 =￨5 null￨5 ;￨5 }￨4 else￨4 {￨4 if￨5 (￨5 condLoopContext￨6 !=￨6 null￨6 )￨5 {￨5 condLoopContext￨6 .￨6 complainOnFinalAssignmentsInLoop￨6 (￨6 scope￨6 ,￨6 flowInfo￨6 )￨6 ;￨6 }￨5 loopingContext￨5 .￨5 complainOnFinalAssignmentsInLoop￨5 (￨5 scope￨5 ,￨5 actionInfo￨5 )￨5 ;￨5 actionInfo￨5 =￨5 actionInfo￨5 .￨5 mergedWith￨5 (￨5 loopingContext￨5 .￨5 initsOnContinue￨5 .￨5 unconditionalInits￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 (￨4 (￨4 continueLabel￨4 )￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 (￨4 increments￨4 )￨4 !=￨4 null￨4 )￨4 )￨3 {￨3 LoopingFlowContext￨4 loopContext￨4 =￨4 new￨4 LoopingFlowContext￨4 (￨4 flowContext￨4 ,￨4 this￨4 ,￨4 null￨4 ,￨4 null￨4 ,￨4 scope￨4 )￨4 ;￨4 int￨4 i￨4 =￨4 0￨4 ;￨4 int￨4 count￨4 =￨4 increments￨4 .￨4 length￨4 ;￨4 while￨4 (￨4 i￨5 <￨5 count￨5 )￨4 {￨4 actionInfo￨5 =￨5 increments￨5 [￨5 (￨5 i￨5 ++￨5 )￨5 ]￨5 .￨5 analyseCode￨5 (￨5 scope￨5 ,￨5 loopContext￨5 ,￨5 actionInfo￨5 )￨5 ;￨5 }￨4 loopContext￨4 .￨4 complainOnFinalAssignmentsInLoop￨4 (￨4 scope￨4 ,￨4 flowInfo￨4 )￨4 ;￨4 }￨3 FlowInfo￨3 mergedInfo￨3 ;￨3 if￨3 (￨3 conditionIsInlinedToTrue￨4 )￨3 {￨3 mergedInitStateIndex￨4 =￨4 currentScope￨4 .￨4 methodScope￨4 (￨4 )￨4 .￨4 recordInitializationStates￨4 (￨4 (￨4 mergedInfo￨4 =￨4 loopingContext￨4 .￨4 initsOnBreak￨4 )￨4 )￨4 ;￨4 return￨4 mergedInfo￨4 ;￨4 }￨3 mergedInfo￨3 =￨3 flowInfo￨3 .￨3 initsWhenFalse￨3 (￨3 )￨3 .￨3 unconditionalInits￨3 (￨3 )￨3 .￨3 mergedWith￨3 (￨3 loopingContext￨3 .￨3 initsOnBreak￨3 .￨3 unconditionalInits￨3 (￨3 )￨3 )￨3 ;￨3 mergedInitStateIndex￨3 =￨3 currentScope￨3 .￨3 methodScope￨3 (￨3 )￨3 .￨3 recordInitializationStates￨3 (￨3 mergedInfo￨3 )￨3 ;￨3 return￨3 mergedInfo￨3 ;￨3 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 )￨2 {￨2 }￨2 public￨2 void￨2 resetStateForCodeGeneration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolve￨2 (￨2 BlockScope￨3 upperScope￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 int￨3 tab￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 IAbstractSyntaxTreeVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 blockScope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CollectionProperty￨1 extends￨1 MultiProperty￨1 {￨1 protected￨2 Collection￨2 value￨2 ;￨2 private￨2 Collection￨2 savedValue￨2 ;￨2 public￨2 CollectionProperty￨2 (￨2 String￨3 name￨3 ,￨3 Collection￨3 value￨3 )￨2 {￨2 }￨2 public￨2 CollectionProperty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 o￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 String￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 set￨2 (￨2 int￨3 index￨3 ,￨3 String￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 set￨2 (￨2 int￨3 index￨3 ,￨3 JMeterProperty￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 JMeterProperty￨2 get￨2 (￨2 int￨3 row￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setObjectValue￨2 (￨2 Object￨3 v￨3 )￨2 {￨2 }￨2 public￨2 PropertyIterator￨2 iterator￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 return￨3 new￨3 PropertyIteratorImpl￨3 (￨3 value￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 String￨2 getStringValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 getObjectValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 size￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Collection￨2 cloneCollection￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setCollection￨2 (￨2 Collection￨3 coll￨3 )￨2 {￨2 }￨2 public￨2 void￨2 clear￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addProperty￨2 (￨2 JMeterProperty￨3 prop￨3 )￨2 {￨2 }￨2 public￨2 void￨2 addItem￨2 (￨2 Object￨3 item￨3 )￨2 {￨2 }￨2 protected￨2 Class￨2 getPropertyType￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 recoverRunningVersion￨2 (￨2 TestElement￨3 owner￨3 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Test￨2 extends￨2 JMeterTestCase￨2 {￨2 public￨3 Test￨3 (￨3 String￨4 name￨4 )￨3 {￨3 }￨3 public￨3 void￨3 testAddingProperties￨3 (￨3 )￨3 throws￨3 Exception￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 void￨2 setRunningVersion￨2 (￨2 boolean￨3 running￨3 )￨2 {￨2 }￨2 }￨1
final￨1 class￨1 Behaviors￨1 implements￨1 IDetachable￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 final￨2 Component￨2 component￨2 ;￨2 public￨2 Behaviors￨2 (￨2 Component￨3 component￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 Behavior￨3 ...￨3 behaviors￨3 )￨2 {￨2 }￨2 private￨2 void￨2 internalAdd￨2 (￨2 final￨3 Behavior￨3 behavior￨3 )￨2 {￨2 component￨3 .￨3 data_add￨3 (￨3 behavior￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 behavior￨3 .￨3 isStateless￨3 (￨3 component￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 getBehaviorId￨3 (￨3 behavior￨3 )￨3 ;￨3 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 <￨2 M￨2 extends￨2 Behavior￨2 >￨2 List￨2 <￨2 M￨2 >￨2 getBehaviors￨2 (￨2 Class￨3 <￨3 M￨3 >￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 detach￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 internalRemove￨2 (￨2 final￨3 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 private￨2 void￨2 removeBehaviorsIdList￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Behaviors￨2 .￨2 BehaviorIdList￨2 getBehaviorsIdList￨2 (￨2 boolean￨3 createIfNotFound￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 BehaviorIdList￨2 extends￨2 ArrayList￨2 <￨2 Behavior￨2 >￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 BehaviorIdList￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 final￨2 int￨2 getBehaviorId￨2 (￨2 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Behavior￨2 getBehaviorById￨2 (￨2 int￨3 id￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CoreContainer￨1 {￨1 protected￨2 static￨2 Logger￨2 log￨2 =￨2 Logger￨2 .￨2 getLogger￨2 (￨2 CoreContainer￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 protected￨2 final￨2 Map￨2 <￨2 String￨2 ,￨2 SolrCore￨2 >￨2 cores￨2 =￨2 new￨2 LinkedHashMap￨2 <￨2 String￨2 ,￨2 SolrCore￨2 >￨2 (￨2 )￨2 ;￨2 protected￨2 boolean￨2 persistent￨2 =￨2 false￨2 ;￨2 protected￨2 String￨2 adminPath￨2 =￨2 null￨2 ;￨2 protected￨2 String￨2 managementPath￨2 =￨2 null￨2 ;￨2 protected￨2 CoreAdminHandler￨2 coreAdminHandler￨2 =￨2 null￨2 ;￨2 protected￨2 File￨2 configFile￨2 =￨2 null￨2 ;￨2 protected￨2 String￨2 libDir￨2 =￨2 null￨2 ;￨2 protected￨2 ClassLoader￨2 libLoader￨2 =￨2 null￨2 ;￨2 protected￨2 SolrResourceLoader￨2 loader￨2 =￨2 null￨2 ;￨2 protected￨2 WeakReference￨2 <￨2 SolrCore￨2 >￨2 adminCore￨2 =￨2 null￨2 ;￨2 protected￨2 Properties￨2 containerProperties￨2 ;￨2 public￨2 CoreContainer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Properties￨2 getContainerProperties￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 class￨2 Initializer￨2 {￨2 protected￨3 String￨3 solrConfigFilename￨3 =￨3 null￨3 ;￨3 protected￨3 boolean￨3 abortOnConfigurationError￨3 =￨3 true￨3 ;￨3 public￨3 boolean￨3 isAbortOnConfigurationError￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setAbortOnConfigurationError￨3 (￨3 boolean￨4 abortOnConfigurationError￨4 )￨3 {￨3 }￨3 public￨3 String￨3 getSolrConfigFilename￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setSolrConfigFilename￨3 (￨3 String￨4 solrConfigFilename￨4 )￨3 {￨3 }￨3 public￨3 CoreContainer￨3 initialize￨3 (￨3 )￨3 throws￨3 IOException￨3 ,￨3 ParserConfigurationException￨3 ,￨3 SAXException￨3 (￨3 )￨3 {￨3 CoreContainer￨4 cores￨4 =￨4 null￨4 ;￨4 String￨4 instanceDir￨4 =￨4 SolrResourceLoader￨4 .￨4 locateInstanceDir￨4 (￨4 )￨4 ;￨4 File￨4 fconf￨4 =￨4 new￨4 File￨4 (￨4 instanceDir￨4 ,￨4 (￨4 (￨4 solrConfigFilename￨4 )￨4 ==￨4 null￨4 ?￨4 "solr.xml"￨4 :￨4 solrConfigFilename￨4 )￨4 )￨4 ;￨4 CoreContainer￨4 .￨4 log￨4 .￨4 info￨4 (￨4 (￨4 "looking<seq2seq4repair_space>for<seq2seq4repair_space>solr.xml:<seq2seq4repair_space>"￨4 +￨4 (￨4 fconf￨4 .￨4 getAbsolutePath￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 fconf￨5 .￨5 exists￨5 (￨5 )￨5 )￨4 {￨4 cores￨5 =￨5 new￨5 CoreContainer￨5 (￨5 )￨5 ;￨5 cores￨5 .￨5 load￨5 (￨5 instanceDir￨5 ,￨5 fconf￨5 )￨5 ;￨5 abortOnConfigurationError￨5 =￨5 false￨5 ;￨5 for￨5 (￨5 SolrCore￨6 c￨6 :￨6 cores￨6 .￨6 getCores￨6 (￨6 )￨6 )￨5 {￨5 if￨6 (￨6 c￨7 .￨7 getSolrConfig￨7 (￨7 )￨7 .￨7 getBool￨7 (￨7 "abortOnConfigurationError"￨7 ,￨7 false￨7 )￨7 )￨6 {￨6 abortOnConfigurationError￨7 =￨7 true￨7 ;￨7 break￨7 ;￨7 }￨6 }￨5 solrConfigFilename￨5 =￨5 cores￨5 .￨5 getConfigFile￨5 (￨5 )￨5 .￨5 getName￨5 (￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 cores￨5 =￨5 new￨5 CoreContainer￨5 (￨5 new￨5 SolrResourceLoader￨5 (￨5 instanceDir￨5 )￨5 )￨5 ;￨5 SolrConfig￨5 cfg￨5 =￨5 (￨5 (￨5 solrConfigFilename￨5 )￨5 ==￨5 null￨5 )￨5 ?￨5 new￨5 SolrConfig￨5 (￨5 )￨5 :￨5 new￨5 SolrConfig￨5 (￨5 solrConfigFilename￨5 )￨5 ;￨5 <START_BUG>￨5 CoreDescriptor￨5 dcore￨5 =￨5 new￨5 CoreDescriptor￨5 (￨5 cores￨5 ,￨5 ""￨5 ,￨5 cfg￨5 .￨5 getResourceLoader￨5 (￨5 )￨5 .￨5 getInstanceDir￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 SolrCore￨5 singlecore￨5 =￨5 new￨5 SolrCore￨5 (￨5 null￨5 ,￨5 null￨5 ,￨5 cfg￨5 ,￨5 null￨5 ,￨5 dcore￨5 )￨5 ;￨5 abortOnConfigurationError￨5 =￨5 cfg￨5 .￨5 getBool￨5 (￨5 "abortOnConfigurationError"￨5 ,￨5 abortOnConfigurationError￨5 )￨5 ;￨5 cores￨5 .￨5 register￨5 (￨5 ""￨5 ,￨5 singlecore￨5 ,￨5 false￨5 )￨5 ;￨5 cores￨5 .￨5 setPersistent￨5 (￨5 false￨5 )￨5 ;￨5 solrConfigFilename￨5 =￨5 cfg￨5 .￨5 getName￨5 (￨5 )￨5 ;￨5 }￨4 return￨4 cores￨4 ;￨4 }￨3 }￨2 public￨2 CoreContainer￨2 (￨2 String￨2 dir￨2 ,￨2 File￨2 configFile￨2 )￨2 throws￨2 IOException￨2 ,￨2 ParserConfigurationException￨2 ,￨2 SAXException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CoreContainer￨2 (￨2 SolrResourceLoader￨3 loader￨3 )￨2 {￨2 }￨2 public￨2 void￨2 load￨2 (￨2 String￨2 dir￨2 ,￨2 File￨2 configFile￨2 )￨2 throws￨2 IOException￨2 ,￨2 ParserConfigurationException￨2 ,￨2 SAXException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Properties￨2 readProperties￨2 (￨2 Config￨2 cfg￨2 ,￨2 Node￨2 node￨2 )￨2 throws￨2 XPathExpressionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 protected￨2 void￨2 finalize￨2 (￨2 )￨2 {￨2 }￨2 public￨2 SolrCore￨2 register￨2 (￨2 String￨3 name￨3 ,￨3 SolrCore￨3 core￨3 ,￨3 boolean￨3 returnPrev￨3 )￨2 {￨2 }￨2 public￨2 SolrCore￨2 create￨2 (￨2 CoreDescriptor￨2 dcore￨2 )￨2 throws￨2 IOException￨2 ,￨2 ParserConfigurationException￨2 ,￨2 SAXException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 SolrCore￨2 >￨2 getCores￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 String￨2 >￨2 getCoreNames￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 String￨2 >￨2 getCoreNames￨2 (￨2 SolrCore￨3 core￨3 )￨2 {￨2 }￨2 public￨2 void￨2 reload￨2 (￨2 String￨2 name￨2 )￨2 throws￨2 IOException￨2 ,￨2 ParserConfigurationException￨2 ,￨2 SAXException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 swap￨2 (￨2 String￨3 n0￨3 ,￨3 String￨3 n1￨3 )￨2 {￨2 }￨2 public￨2 SolrCore￨2 remove￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 SolrCore￨2 getCore￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setAdminCore￨2 (￨2 SolrCore￨3 core￨3 )￨2 {￨2 }￨2 public￨2 SolrCore￨2 getAdminCore￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 CoreAdminHandler￨2 createMultiCoreHandler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 CoreAdminHandler￨2 getMultiCoreHandler￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isPersistent￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setPersistent￨2 (￨2 boolean￨3 persistent￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getAdminPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setAdminPath￨2 (￨2 String￨3 adminPath￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getManagementPath￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setManagementPath￨2 (￨2 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 File￨2 getConfigFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 persist￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 persistFile￨2 (￨2 File￨3 file￨3 )￨2 {￨2 }￨2 void￨2 persist￨2 (￨2 Writer￨2 writer￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 persist￨2 (￨2 Writer￨2 writer￨2 ,￨2 List￨2 <￨2 String￨2 >￨2 aliases￨2 ,￨2 CoreDescriptor￨2 dcore￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 writeProperties￨2 (￨2 Writer￨2 writer￨2 ,￨2 Properties￨2 props￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 fileCopy￨2 (￨2 File￨2 src￨2 ,￨2 File￨2 dest￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ArrayInitializer￨1 extends￨1 Expression￨1 {￨1 public￨2 Expression￨2 [￨2 ]￨2 expressions￨2 ;￨2 public￨2 ArrayBinding￨2 binding￨2 ;￨2 public￨2 ArrayInitializer￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FlowInfo￨2 analyseCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 FlowContext￨3 flowContext￨3 ,￨3 FlowInfo￨3 flowInfo￨3 )￨2 {￨2 }￨2 public￨2 void￨2 generateCode￨2 (￨2 BlockScope￨3 currentScope￨3 ,￨3 CodeStream￨3 codeStream￨3 ,￨3 boolean￨3 valueRequired￨3 )￨2 {￨2 int￨3 pc￨3 =￨3 codeStream￨3 .￨3 position￨3 ;￨3 int￨3 expressionLength￨3 =￨3 (￨3 (￨3 expressions￨3 )￨3 ==￨3 null￨3 )￨3 ?￨3 0￨3 :￨3 expressions￨3 .￨3 length￨3 ;￨3 codeStream￨3 .￨3 generateInlinedValue￨3 (￨3 expressionLength￨3 )￨3 ;￨3 <START_BUG>￨3 codeStream￨3 .￨3 newArray￨3 (￨3 currentScope￨3 ,￨3 binding￨3 )￨3 ;￨3 <END_BUG>￨3 if￨3 (￨3 (￨4 expressions￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 int￨4 elementsTypeID￨4 =￨4 (￨4 (￨4 binding￨4 .￨4 dimensions￨4 )￨4 >￨4 1￨4 )￨4 ?￨4 -￨4 1￨4 :￨4 binding￨4 .￨4 leafComponentType￨4 .￨4 id￨4 ;￨4 for￨4 (￨4 int￨5 i￨5 =￨5 0￨5 ;￨5 i￨5 <￨5 expressionLength￨5 ;￨5 i￨5 ++￨5 )￨4 {￨4 Expression￨5 expr￨5 ;￨5 if￨5 (￨5 (￨6 (￨6 expr￨6 =￨6 expressions￨6 [￨6 i￨6 ]￨6 )￨6 .￨6 constant￨6 )￨6 !=￨6 (￨6 NotAConstant￨6 )￨6 )￨5 {￨5 switch￨6 (￨6 elementsTypeID￨6 )￨6 {￨6 case￨7 TypeIds￨7 .￨7 T_int￨7 :￨7 case￨7 TypeIds￨7 .￨7 T_short￨7 :￨7 case￨7 TypeIds￨7 .￨7 T_byte￨7 :￨7 case￨7 TypeIds￨7 .￨7 T_char￨7 :￨7 case￨7 TypeIds￨7 .￨7 T_long￨7 :￨7 if￨8 (￨8 (￨9 expr￨9 .￨9 constant￨9 .￨9 longValue￨9 (￨9 )￨9 )￨9 !=￨9 0￨9 )￨8 {￨8 codeStream￨9 .￨9 dup￨9 (￨9 )￨9 ;￨9 codeStream￨9 .￨9 generateInlinedValue￨9 (￨9 i￨9 )￨9 ;￨9 expr￨9 .￨9 generateCode￨9 (￨9 currentScope￨9 ,￨9 codeStream￨9 ,￨9 true￨9 )￨9 ;￨9 codeStream￨9 .￨9 arrayAtPut￨9 (￨9 elementsTypeID￨9 ,￨9 false￨9 )￨9 ;￨9 }￨8 break￨8 ;￨8 case￨7 TypeIds￨7 .￨7 T_float￨7 :￨7 case￨7 TypeIds￨7 .￨7 T_double￨7 :￨7 double￨8 constantValue￨8 =￨8 expr￨8 .￨8 constant￨8 .￨8 doubleValue￨8 (￨8 )￨8 ;￨8 if￨8 (￨8 (￨9 constantValue￨9 ==￨9 (￨9 -￨9 0.0￨9 )￨9 )￨9 ||￨9 (￨9 constantValue￨9 !=￨9 0￨9 )￨9 )￨8 {￨8 codeStream￨9 .￨9 dup￨9 (￨9 )￨9 ;￨9 codeStream￨9 .￨9 generateInlinedValue￨9 (￨9 i￨9 )￨9 ;￨9 expr￨9 .￨9 generateCode￨9 (￨9 currentScope￨9 ,￨9 codeStream￨9 ,￨9 true￨9 )￨9 ;￨9 codeStream￨9 .￨9 arrayAtPut￨9 (￨9 elementsTypeID￨9 ,￨9 false￨9 )￨9 ;￨9 }￨8 break￨8 ;￨8 case￨7 TypeIds￨7 .￨7 T_boolean￨7 :￨7 if￨8 (￨8 (￨9 expr￨9 .￨9 constant￨9 .￨9 booleanValue￨9 (￨9 )￨9 )￨9 !=￨9 false￨9 )￨8 {￨8 codeStream￨9 .￨9 dup￨9 (￨9 )￨9 ;￨9 codeStream￨9 .￨9 generateInlinedValue￨9 (￨9 i￨9 )￨9 ;￨9 expr￨9 .￨9 generateCode￨9 (￨9 currentScope￨9 ,￨9 codeStream￨9 ,￨9 true￨9 )￨9 ;￨9 codeStream￨9 .￨9 arrayAtPut￨9 (￨9 elementsTypeID￨9 ,￨9 false￨9 )￨9 ;￨9 }￨8 break￨8 ;￨8 default￨7 :￨7 if￨8 (￨8 !￨9 (￨9 expr￨9 instanceof￨9 NullLiteral￨9 )￨9 )￨8 {￨8 codeStream￨9 .￨9 dup￨9 (￨9 )￨9 ;￨9 codeStream￨9 .￨9 generateInlinedValue￨9 (￨9 i￨9 )￨9 ;￨9 expr￨9 .￨9 generateCode￨9 (￨9 currentScope￨9 ,￨9 codeStream￨9 ,￨9 true￨9 )￨9 ;￨9 codeStream￨9 .￨9 arrayAtPut￨9 (￨9 elementsTypeID￨9 ,￨9 false￨9 )￨9 ;￨9 }￨8 }￨6 }￨5 else￨5 if￨5 (￨5 !￨6 (￨6 expr￨6 instanceof￨6 NullLiteral￨6 )￨6 )￨5 {￨5 codeStream￨6 .￨6 dup￨6 (￨6 )￨6 ;￨6 codeStream￨6 .￨6 generateInlinedValue￨6 (￨6 i￨6 )￨6 ;￨6 expr￨6 .￨6 generateCode￨6 (￨6 currentScope￨6 ,￨6 codeStream￨6 ,￨6 true￨6 )￨6 ;￨6 codeStream￨6 .￨6 arrayAtPut￨6 (￨6 elementsTypeID￨6 ,￨6 false￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 if￨3 (￨3 !￨4 valueRequired￨4 )￨3 {￨3 codeStream￨4 .￨4 pop￨4 (￨4 )￨4 ;￨4 }￨3 codeStream￨3 .￨3 recordPositionsFrom￨3 (￨3 pc￨3 ,￨3 this￨3 .￨3 sourceStart￨3 )￨3 ;￨3 }￨2 public￨2 StringBuffer￨2 printExpression￨2 (￨2 int￨3 indent￨3 ,￨3 StringBuffer￨3 output￨3 )￨2 {￨2 }￨2 public￨2 TypeBinding￨2 resolveTypeExpecting￨2 (￨2 BlockScope￨3 scope￨3 ,￨3 TypeBinding￨3 expectedTb￨3 )￨2 {￨2 }￨2 public￨2 void￨2 traverse￨2 (￨2 ASTVisitor￨3 visitor￨3 ,￨3 BlockScope￨3 scope￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ReferencePointcut￨1 extends￨1 Pointcut￨1 {￨1 public￨2 TypeX￨2 onType￨2 ;￨2 public￨2 TypePattern￨2 onTypeSymbolic￨2 ;￨2 public￨2 String￨2 name￨2 ;￨2 public￨2 TypePatternList￨2 arguments￨2 ;￨2 public￨2 ReferencePointcut￨2 (￨2 TypePattern￨3 onTypeSymbolic￨3 ,￨3 String￨3 name￨3 ,￨3 TypePatternList￨3 arguments￨3 )￨2 {￨2 }￨2 public￨2 ReferencePointcut￨2 (￨2 TypeX￨3 onType￨3 ,￨3 String￨3 name￨3 ,￨3 TypePatternList￨3 arguments￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 fastMatch￨2 (￨2 JavaClass￨3 jc￨3 )￨2 {￨2 }￨2 public￨2 FuzzyBoolean￨2 match￨2 (￨2 Shadow￨3 shadow￨3 )￨2 {￨2 }￨2 public￨2 String￨2 toString￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 write￨2 (￨2 DataOutputStream￨2 s￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Pointcut￨2 read￨2 (￨2 DataInputStream￨2 s￨2 ,￨2 ISourceContext￨2 context￨2 )￨2 throws￨2 IOException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 resolveBindings￨2 (￨2 IScope￨3 scope￨3 ,￨3 Bindings￨3 bindings￨3 )￨2 {￨2 if￨3 (￨3 (￨4 onTypeSymbolic￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 onType￨4 =￨4 onTypeSymbolic￨4 .￨4 resolveExactType￨4 (￨4 scope￨4 ,￨4 bindings￨4 )￨4 ;￨4 }￨3 ResolvedTypeX￨3 searchType￨3 ;￨3 if￨3 (￨3 (￨4 onType￨4 )￨4 !=￨4 null￨4 )￨3 {￨3 searchType￨4 =￨4 scope￨4 .￨4 getWorld￨4 (￨4 )￨4 .￨4 resolve￨4 (￨4 onType￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 searchType￨4 =￨4 scope￨4 .￨4 getEnclosingType￨4 (￨4 )￨4 ;￨4 }￨3 arguments￨3 .￨3 resolveBindings￨3 (￨3 scope￨3 ,￨3 bindings￨3 ,￨3 true￨3 ,￨3 true￨3 )￨3 ;￨3 ResolvedPointcutDefinition￨3 pointcutDef￨3 =￨3 searchType￨3 .￨3 findPointcut￨3 (￨3 name￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 onType￨3 )￨3 ==￨3 null￨3 )￨3 {￨3 <END_BUG>￨3 while￨3 (￨3 true￨4 )￨3 {￨3 TypeX￨4 declaringType￨4 =￨4 searchType￨4 .￨4 getDeclaringType￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 declaringType￨5 ==￨5 null￨5 )￨4 {￨4 break￨5 ;￨5 }￨4 searchType￨4 =￨4 declaringType￨4 .￨4 resolve￨4 (￨4 scope￨4 .￨4 getWorld￨4 (￨4 )￨4 )￨4 ;￨4 pointcutDef￨4 =￨4 searchType￨4 .￨4 findPointcut￨4 (￨4 name￨4 )￨4 ;￨4 if￨4 (￨4 pointcutDef￨5 !=￨5 null￨5 )￨4 {￨4 onType￨5 =￨5 searchType￨5 ;￨5 break￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 pointcutDef￨4 ==￨4 null￨4 )￨3 {￨3 scope￨4 .￨4 message￨4 (￨4 ERROR￨4 ,￨4 this￨4 ,￨4 "can't<seq2seq4repair_space>find<seq2seq4repair_space>referenced<seq2seq4repair_space>pointcut"￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 pointcutDef￨4 .￨4 isVisible￨4 (￨4 scope￨4 .￨4 getEnclosingType￨4 (￨4 )￨4 )￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 message￨4 (￨4 ERROR￨4 ,￨4 this￨4 ,￨4 (￨4 (￨4 "pointcut<seq2seq4repair_space>declaration<seq2seq4repair_space>"￨4 +￨4 pointcutDef￨4 )￨4 +￨4 "<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>accessible"￨4 )￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 if￨3 (￨3 Modifier￨4 .￨4 isAbstract￨4 (￨4 pointcutDef￨4 .￨4 getModifiers￨4 (￨4 )￨4 )￨4 )￨3 {￨3 if￨4 (￨4 (￨5 onType￨5 )￨5 !=￨5 null￨5 )￨4 {￨4 scope￨5 .￨5 message￨5 (￨5 ERROR￨5 ,￨5 this￨5 ,￨5 "can't<seq2seq4repair_space>make<seq2seq4repair_space>static<seq2seq4repair_space>reference<seq2seq4repair_space>to<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut"￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 else￨4 if￨4 (￨4 !￨5 (￨5 searchType￨5 .￨5 isAbstract￨5 (￨5 )￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 message￨5 (￨5 ERROR￨5 ,￨5 this￨5 ,￨5 "can't<seq2seq4repair_space>use<seq2seq4repair_space>abstract<seq2seq4repair_space>pointcut<seq2seq4repair_space>in<seq2seq4repair_space>concrete<seq2seq4repair_space>context"￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 }￨3 ResolvedTypeX￨3 [￨3 ]￨3 parameterTypes￨3 =￨3 scope￨3 .￨3 getWorld￨3 (￨3 )￨3 .￨3 resolve￨3 (￨3 pointcutDef￨3 .￨3 getParameterTypes￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 parameterTypes￨4 .￨4 length￨4 )￨4 !=￨4 (￨4 arguments￨4 .￨4 size￨4 (￨4 )￨4 )￨4 )￨3 {￨3 scope￨4 .￨4 message￨4 (￨4 ERROR￨4 ,￨4 this￨4 ,￨4 (￨4 (￨4 (￨4 "incompatible<seq2seq4repair_space>number<seq2seq4repair_space>of<seq2seq4repair_space>arguments<seq2seq4repair_space>to<seq2seq4repair_space>pointcut,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨4 +￨4 (￨4 parameterTypes￨4 .￨4 length￨4 )￨4 )￨4 +￨4 "<seq2seq4repair_space>found<seq2seq4repair_space>"￨4 )￨4 +￨4 (￨4 arguments￨4 .￨4 size￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 return￨4 ;￨4 }￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ,￨4 len￨4 =￨4 arguments￨4 .￨4 size￨4 (￨4 )￨4 ;￨4 i￨4 <￨4 len￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 TypePattern￨4 p￨4 =￨4 arguments￨4 .￨4 get￨4 (￨4 i￨4 )￨4 ;￨4 if￨4 (￨4 p￨5 ==￨5 (￨5 TypePattern￨5 .￨5 NO￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 message￨5 (￨5 ERROR￨5 ,￨5 this￨5 ,￨5 "bad<seq2seq4repair_space>parameter<seq2seq4repair_space>to<seq2seq4repair_space>pointcut<seq2seq4repair_space>reference"￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 if￨4 (￨4 (￨5 !￨5 (￨5 p￨5 .￨5 matchesSubtypes￨5 (￨5 parameterTypes￨5 [￨5 i￨5 ]￨5 )￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 p￨5 .￨5 getExactType￨5 (￨5 )￨5 .￨5 equals￨5 (￨5 OBJECT￨5 )￨5 )￨5 )￨5 )￨4 {￨4 scope￨5 .￨5 message￨5 (￨5 ERROR￨5 ,￨5 p￨5 ,￨5 (￨5 (￨5 (￨5 "incompatible<seq2seq4repair_space>type,<seq2seq4repair_space>expected<seq2seq4repair_space>"￨5 +￨5 (￨5 parameterTypes￨5 [￨5 i￨5 ]￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨5 +￨5 "<seq2seq4repair_space>found<seq2seq4repair_space>"￨5 )￨5 +￨5 p￨5 )￨5 )￨5 ;￨5 return￨5 ;￨5 }￨4 }￨3 }￨2 public￨2 void￨2 postRead￨2 (￨2 ResolvedTypeX￨3 enclosingType￨3 )￨2 {￨2 }￨2 public￨2 Test￨2 findResidue￨2 (￨2 Shadow￨3 shadow￨3 ,￨3 ExposedState￨3 state￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 concretizing￨2 =￨2 false￨2 ;￨2 public￨2 Pointcut￨2 concretize1￨2 (￨2 ResolvedTypeX￨3 searchStart￨3 ,￨3 IntMap￨3 bindings￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 equals￨2 (￨2 Object￨3 other￨3 )￨2 {￨2 }￨2 public￨2 int￨2 hashCode￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PathFileList￨1 implements￨1 FileList￨1 {￨1 private￨2 String￨2 m_path￨2 ;￨2 public￨2 void￨2 setPath￨2 (￨2 final￨3 String￨3 path￨3 )￨2 {￨2 }￨2 public￨2 FileObject￨2 [￨2 ]￨2 listFiles￨2 (￨2 final￨2 TaskContext￨2 context￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 FileSystemManager￨3 fileSystemManager￨3 =￨3 (￨3 (￨3 FileSystemManager￨3 )￨3 (￨3 context￨3 .￨3 getService￨3 (￨3 FileSystemManager￨3 .￨3 class￨3 )￨3 )￨3 )￨3 ;￨3 final￨3 String￨3 [￨3 ]￨3 elements￨3 =￨3 FileUtils￨3 .￨3 parsePath￨3 (￨3 m_path￨3 )￨3 ;￨3 final￨3 FileObject￨3 [￨3 ]￨3 result￨3 =￨3 new￨3 FileObject￨3 [￨3 elements￨3 .￨3 length￨3 ]￨3 ;￨3 for￨3 (￨3 int￨3 i￨3 =￨3 0￨3 ;￨3 i￨3 <￨3 (￨3 elements￨3 .￨3 length￨3 )￨3 ;￨3 i￨3 ++￨3 )￨3 {￨3 String￨4 element￨4 =￨4 elements￨4 [￨4 i￨4 ]￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 result￨5 [￨5 i￨5 ]￨5 =￨5 fileSystemManager￨5 .￨5 resolveFile￨5 (￨5 element￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 FileSystemException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 TaskException￨5 (￨5 e￨5 .￨5 getMessage￨5 (￨5 )￨5 ,￨5 e￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 result￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 SessionManagerAdapterTestCase￨1 {￨1 private￨2 final￨2 SessionManager￨2 <￨2 LocalSessionContext￨2 >￨2 manager￨2 =￨2 mock￨2 (￨2 SessionManager￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 SessionListener￨2 listener￨2 =￨2 mock￨2 (￨2 SessionListener￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 SessionManagerAdapter￨2 adapter￨2 =￨2 new￨2 SessionManagerAdapter￨2 (￨2 this￨2 .￨2 manager￨2 )￨2 ;￨2 @￨2 Before￨2 public￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 parse￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 format￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 start￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 stop￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 setDefaultSessionTimeout￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 createSessionNoSessionId￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 createSessionSpecifiedSessionId￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 createSessionAlreadyExists￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getSession￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getSessionNoSessionId￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getSessionNotExists￨2 (￨2 )￨2 {￨2 HttpServerExchange￨3 exchange￨3 =￨3 new￨3 HttpServerExchange￨3 (￨3 null￨3 )￨3 ;￨3 Batcher￨3 batcher￨3 =￨3 mock￨3 (￨3 Batcher￨3 .￨3 class￨3 )￨3 ;￨3 Batch￨3 batch￨3 =￨3 mock￨3 (￨3 Batch￨3 .￨3 class￨3 )￨3 ;￨3 SessionConfig￨3 config￨3 =￨3 mock￨3 (￨3 SessionConfig￨3 .￨3 class￨3 )￨3 ;￨3 String￨3 requestedSessionId￨3 =￨3 "session.route1"￨3 ;￨3 String￨3 sessionId￨3 =￨3 "session"￨3 ;￨3 when￨3 (￨3 config￨3 .￨3 findSessionId￨3 (￨3 exchange￨3 )￨3 )￨3 .￨3 thenReturn￨3 (￨3 requestedSessionId￨3 )￨3 ;￨3 when￨3 (￨3 this￨3 .￨3 manager￨3 .￨3 findSession￨3 (￨3 sessionId￨3 )￨3 )￨3 .￨3 thenReturn￨3 (￨3 null￨3 )￨3 ;￨3 when￨3 (￨3 this￨3 .￨3 manager￨3 .￨3 getBatcher￨3 (￨3 )￨3 )￨3 .￨3 thenReturn￨3 (￨3 batcher￨3 )￨3 ;￨3 when￨3 (￨3 batcher￨3 .￨3 startBatch￨3 (￨3 )￨3 )￨3 .￨3 thenReturn￨3 (￨3 batch￨3 )￨3 ;￨3 Session￨3 sessionAdapter￨3 =￨3 this￨3 .￨3 adapter￨3 .￨3 getSession￨3 (￨3 exchange￨3 ,￨3 config￨3 )￨3 ;￨3 assertNull￨3 (￨3 sessionAdapter￨3 )￨3 ;￨3 <START_BUG>￨3 verify￨3 (￨3 batch￨3 )￨3 .￨3 discard￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 @￨2 Test￨2 public￨2 void￨2 activeSessions￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getTransientSessions￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getActiveSessions￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getAllSessions￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getSessionByIdentifier￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Test￨2 public￨2 void￨2 getSessionByIdentifierNotExists￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 RunTestNotifier￨1 extends￨1 Notifier￨1 {￨1 private￨2 final￨2 Statement￨2 fNext￨2 ;￨2 public￨2 RunTestNotifier￨2 (￨2 Statement￨3 next￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 run￨2 (￨2 EachTestNotifier￨3 context￨3 )￨2 {￨2 context￨3 .￨3 fireTestStarted￨3 (￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 fNext￨4 .￨4 evaluate￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 AssumptionViolatedException￨4 e￨4 )￨3 {￨3 <START_BUG>￨4 context￨4 .￨4 addIgnorance￨4 (￨4 e￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 catch￨3 (￨3 Throwable￨4 e￨4 )￨3 {￨3 context￨4 .￨4 addFailure￨4 (￨4 e￨4 )￨4 ;￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 context￨4 .￨4 fireTestFinished￨4 (￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 class￨1 FormInputTest￨1 extends￨1 WebTestCase￨1 {￨1 public￨2 FormInputTest￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUp￨2 (￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 testHelloWorld￨2 (￨2 )￨2 {￨2 beginAt￨3 (￨3 "/forminput"￨3 )￨3 ;￨3 <START_BUG>￨3 assertTitleEquals￨3 (￨3 "Wicket<seq2seq4repair_space>-<seq2seq4repair_space>Form<seq2seq4repair_space>Input<seq2seq4repair_space>Example"￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 public￨2 static￨2 Test￨2 suite￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 FileSet￨1 extends￨1 DataType￨1 implements￨1 Cloneable￨1 {￨1 private￨2 PatternSet￨2 defaultPatterns￨2 =￨2 new￨2 PatternSet￨2 (￨2 )￨2 ;￨2 private￨2 Vector￨2 additionalPatterns￨2 =￨2 new￨2 Vector￨2 (￨2 )￨2 ;￨2 private￨2 File￨2 dir￨2 ;￨2 private￨2 boolean￨2 useDefaultExcludes￨2 =￨2 true￨2 ;￨2 private￨2 boolean￨2 isCaseSensitive￨2 =￨2 true￨2 ;￨2 private￨2 String￨2 dataTypeName￨2 =￨2 "fileset"￨2 ;￨2 public￨2 FileSet￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 FileSet￨2 (￨2 FileSet￨3 fileset￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setRefid￨2 (￨2 Reference￨2 r￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDir￨2 (￨2 File￨2 dir￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 File￨2 getDir￨2 (￨2 Project￨3 p￨3 )￨2 {￨2 }￨2 public￨2 PatternSet￨2 createPatternSet￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NameEntry￨2 createInclude￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NameEntry￨2 createIncludesFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NameEntry￨2 createExclude￨2 (￨2 )￨2 {￨2 }￨2 public￨2 NameEntry￨2 createExcludesFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludes￨2 (￨2 String￨3 includes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setExcludes￨2 (￨2 String￨3 excludes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setIncludesfile￨2 (￨2 File￨2 incl￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setExcludesfile￨2 (￨2 File￨2 excl￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setDefaultexcludes￨2 (￨2 boolean￨3 useDefaultExcludes￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setCaseSensitive￨2 (￨2 boolean￨3 isCaseSensitive￨3 )￨2 {￨2 }￨2 protected￨2 final￨2 void￨2 setDataTypeName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 DirectoryScanner￨2 getDirectoryScanner￨2 (￨2 Project￨3 p￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setupDirectoryScanner￨2 (￨2 FileScanner￨3 ds￨3 ,￨3 Project￨3 p￨3 )￨2 {￨2 }￨2 protected￨2 FileSet￨2 getRef￨2 (￨2 Project￨3 p￨3 )￨2 {￨2 if￨3 (￨3 !￨4 (￨4 checked￨4 )￨4 )￨3 {￨3 Stack￨4 stk￨4 =￨4 new￨4 Stack￨4 (￨4 )￨4 ;￨4 stk￨4 .￨4 push￨4 (￨4 this￨4 )￨4 ;￨4 dieOnCircularReference￨4 (￨4 stk￨4 ,￨4 p￨4 )￨4 ;￨4 }￨3 Object￨3 o￨3 =￨3 ref￨3 .￨3 getReferencedObject￨3 (￨3 p￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 o￨3 .￨3 getClass￨3 (￨3 )￨3 .￨3 equals￨3 (￨3 getClass￨3 (￨3 )￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 String￨3 msg￨3 =￨3 (￨3 (￨3 ref￨3 .￨3 getRefId￨3 (￨3 )￨3 )￨3 +￨3 "<seq2seq4repair_space>doesn\'t<seq2seq4repair_space>denote<seq2seq4repair_space>a<seq2seq4repair_space>"￨3 )￨3 +￨3 (￨3 dataTypeName￨3 )￨3 ;￨3 throw￨3 new￨3 BuildException￨3 (￨3 msg￨3 )￨3 ;￨3 else￨3 {￨3 return￨4 (￨4 (￨4 FileSet￨4 )￨4 (￨4 o￨4 )￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 Object￨2 clone￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 CustomResourceLoadingApplication￨1 extends￨1 WicketExampleApplication￨1 {￨1 private￨2 static￨2 final￨2 Log￨2 log￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 CustomResourceLoadingApplication￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 final￨2 class￨2 CustomResourceStreamLocator￨2 extends￨2 AbstractResourceStreamLocator￨2 {￨2 private￨3 ClassLoaderResourceStreamLocator￨3 classLoaderLocator￨3 =￨3 new￨3 ClassLoaderResourceStreamLocator￨3 (￨3 )￨3 ;￨3 protected￨3 IResourceStream￨3 locate￨3 (￨3 Class￨4 clazz￨4 ,￨4 String￨4 path￨4 )￨3 {￨3 if￨4 (￨4 CustomResourceLoadingApplication￨5 .￨5 log￨5 .￨5 isDebugEnabled￨5 (￨5 )￨5 )￨4 {￨4 CustomResourceLoadingApplication￨5 .￨5 log￨5 .￨5 debug￨5 (￨5 (￨5 (￨5 "Attempting<seq2seq4repair_space>to<seq2seq4repair_space>locate<seq2seq4repair_space>resource<seq2seq4repair_space>'"￨5 +￨5 path￨5 )￨5 +￨5 "'<seq2seq4repair_space>using<seq2seq4repair_space>classloader<seq2seq4repair_space>the<seq2seq4repair_space>servlet<seq2seq4repair_space>context"￨5 )￨5 )￨5 ;￨5 }￨4 String￨4 location￨4 ;￨4 if￨4 (￨4 clazz￨5 ==￨5 (￨5 AlternativePageFromWebContext￨5 .￨5 class￨5 )￨5 )￨4 {￨4 String￨5 extension￨5 =￨5 path￨5 .￨5 substring￨5 (￨5 (￨5 (￨5 path￨5 .￨5 lastIndexOf￨5 (￨5 '.'￨5 )￨5 )￨5 +￨5 1￨5 )￨5 )￨5 ;￨5 String￨5 simpleFileName￨5 =￨5 Strings￨5 .￨5 lastPathComponent￨5 (￨5 clazz￨5 .￨5 getName￨5 (￨5 )￨5 ,￨5 '.'￨5 )￨5 ;￨5 location￨5 =￨5 (￨5 (￨5 "/WEB-INF/templates/"￨5 +￨5 simpleFileName￨5 )￨5 +￨5 "."￨5 )￨5 +￨5 extension￨5 ;￨5 }￨4 else￨4 {￨4 location￨5 =￨5 "/WEB-INF/templates/"￨5 +￨5 path￨5 ;￨5 }￨4 URL￨4 url￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 url￨5 =￨5 getWicketServlet￨5 (￨5 )￨5 .￨5 getServletContext￨5 (￨5 )￨5 .￨5 getResource￨5 (￨5 location￨5 )￨5 ;￨5 <END_BUG>￨5 if￨5 (￨5 url￨6 !=￨6 null￨6 )￨5 {￨5 return￨6 new￨6 UrlResourceStream￨6 (￨6 url￨6 )￨6 ;￨6 }￨5 }￨4 catch￨4 (￨4 MalformedURLException￨5 e￨5 )￨4 {￨4 throw￨5 new￨5 WicketRuntimeException￨5 (￨5 e￨5 )￨5 ;￨5 }￨4 return￨4 classLoaderLocator￨4 .￨4 locate￨4 (￨4 clazz￨4 ,￨4 path￨4 )￨4 ;￨4 }￨3 }￨2 public￨2 CustomResourceLoadingApplication￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Class￨2 getHomePage￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 init￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ResourceAvailableCondition￨1 extends￨1 AbstractAvailableCondition￨1 implements￨1 Condition￨1 {￨1 private￨2 String￨2 m_resource￨2 ;￨2 public￨2 void￨2 setResource￨2 (￨2 final￨3 String￨3 resource￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 evaluate￨2 (￨2 final￨2 TaskContext￨2 context￨2 )￨2 throws￨2 TaskException￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 m_resource￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 throw￨4 new￨4 TaskException￨4 (￨4 "Resource<seq2seq4repair_space>was<seq2seq4repair_space>not<seq2seq4repair_space>specified."￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 final￨3 ClassLoader￨3 classLoader￨3 =￨3 buildClassLoader￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 final￨3 InputStream￨3 instr￨3 =￨3 classLoader￨3 .￨3 getResourceAsStream￨3 (￨3 m_resource￨3 )￨3 ;￨3 if￨3 (￨3 instr￨4 !=￨4 null￨4 )￨3 {￨3 IOUtil￨4 .￨4 shutdownStream￨4 (￨4 instr￨4 )￨4 ;￨4 return￨4 true￨4 ;￨4 }￨3 return￨3 false￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 RuntimeMXBeanReadResourceHandler￨1 implements￨1 OperationStepHandler￨1 {￨1 public￨2 static￨2 final￨2 RuntimeMXBeanReadResourceHandler￨2 INSTANCE￨2 =￨2 new￨2 RuntimeMXBeanReadResourceHandler￨2 (￨2 )￨2 ;￨2 private￨2 RuntimeMXBeanReadResourceHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 void￨2 execute￨2 (￨2 OperationContext￨2 context￨2 ,￨2 ModelNode￨2 operation￨2 )￨2 throws￨2 OperationFailedException￨2 (￨2 )￨2 {￨2 final￨3 ModelNode￨3 result￨3 =￨3 context￨3 .￨3 getResult￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 String￨4 attribute￨4 :￨4 PlatformMBeanConstants￨4 .￨4 RUNTIME_READ_ATTRIBUTES￨4 )￨3 {￨3 final￨4 ModelNode￨4 store￨4 =￨4 result￨4 .￨4 get￨4 (￨4 attribute￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 RuntimeMXBeanAttributeHandler￨5 .￨5 storeResult￨5 (￨5 attribute￨5 ,￨5 store￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 SecurityException￨5 ignored￨5 )￨4 {￨4 }￨4 catch￨4 (￨4 UnsupportedOperationException￨5 ignored￨5 )￨4 {￨4 }￨4 }￨3 for￨3 (￨3 String￨4 attribute￨4 :￨4 PlatformMBeanConstants￨4 .￨4 RUNTIME_METRICS￨4 )￨3 {￨3 final￨4 ModelNode￨4 store￨4 =￨4 result￨4 .￨4 get￨4 (￨4 attribute￨4 )￨4 ;￨4 try￨4 (￨4 )￨4 {￨4 RuntimeMXBeanAttributeHandler￨5 .￨5 storeResult￨5 (￨5 attribute￨5 ,￨5 store￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 SecurityException￨5 ignored￨5 )￨4 {￨4 }￨4 catch￨4 (￨4 UnsupportedOperationException￨5 ignored￨5 )￨4 {￨4 }￨4 }￨3 if￨3 (￨3 (￨4 PlatformMBeanUtil￨4 .￨4 JVM_MAJOR_VERSION￨4 )￨4 >￨4 6￨4 )￨3 {￨3 final￨4 ModelNode￨4 store￨4 =￨4 result￨4 .￨4 get￨4 (￨4 OBJECT_NAME￨4 )￨4 ;￨4 RuntimeMXBeanAttributeHandler￨4 .￨4 storeResult￨4 (￨4 OBJECT_NAME￨4 ,￨4 store￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 context￨3 .￨3 completeStep￨3 (￨3 NOOP_ROLLBACK_HANDLER￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 }￨1
final￨1 class￨1 Behaviors￨1 implements￨1 IDetachable￨1 {￨1 private￨2 static￨2 final￨2 long￨2 serialVersionUID￨2 =￨2 1L￨2 ;￨2 private￨2 final￨2 Component￨2 component￨2 ;￨2 public￨2 Behaviors￨2 (￨2 Component￨3 component￨3 )￨2 {￨2 }￨2 public￨2 void￨2 add￨2 (￨2 Behavior￨3 ...￨3 behaviors￨3 )￨2 {￨2 }￨2 private￨2 void￨2 internalAdd￨2 (￨2 final￨3 Behavior￨3 behavior￨3 )￨2 {￨2 component￨3 .￨3 data_add￨3 (￨3 behavior￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 !￨3 (￨3 behavior￨3 .￨3 getStatelessHint￨3 (￨3 component￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 getBehaviorId￨3 (￨3 behavior￨3 )￨3 ;￨3 }￨2 @￨2 SuppressWarnings￨2 (￨2 "unchecked"￨2 )￨2 public￨2 <￨2 M￨2 extends￨2 Behavior￨2 >￨2 List￨2 <￨2 M￨2 >￨2 getBehaviors￨2 (￨2 Class￨3 <￨3 M￨3 >￨3 type￨3 )￨2 {￨2 }￨2 public￨2 void￨2 remove￨2 (￨2 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 public￨2 final￨2 void￨2 detach￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 internalRemove￨2 (￨2 final￨3 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 private￨2 void￨2 removeBehaviorsIdList￨2 (￨2 )￨2 {￨2 }￨2 private￨2 Behaviors￨2 .￨2 BehaviorIdList￨2 getBehaviorsIdList￨2 (￨2 boolean￨3 createIfNotFound￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 BehaviorIdList￨2 extends￨2 ArrayList￨2 <￨2 Behavior￨2 >￨2 {￨2 private￨3 static￨3 final￨3 long￨3 serialVersionUID￨3 =￨3 1L￨3 ;￨3 public￨3 BehaviorIdList￨3 (￨3 )￨3 {￨3 }￨3 }￨2 public￨2 final￨2 int￨2 getBehaviorId￨2 (￨2 Behavior￨3 behavior￨3 )￨2 {￨2 }￨2 public￨2 final￨2 Behavior￨2 getBehaviorById￨2 (￨2 int￨3 id￨3 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 PackageDeclaration￨1 extends￨1 ASTNode￨1 {￨1 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 JAVADOC_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 PackageDeclaration￨2 .￨2 class￨2 ,￨2 "javadoc"￨2 ,￨2 Javadoc￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 OPTIONAL￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildListPropertyDescriptor￨2 ANNOTATIONS_PROPERTY￨2 =￨2 new￨2 ChildListPropertyDescriptor￨2 (￨2 PackageDeclaration￨2 .￨2 class￨2 ,￨2 "annotations"￨2 ,￨2 Annotation￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 CYCLE_RISK￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 ChildPropertyDescriptor￨2 NAME_PROPERTY￨2 =￨2 new￨2 ChildPropertyDescriptor￨2 (￨2 PackageDeclaration￨2 .￨2 class￨2 ,￨2 "name"￨2 ,￨2 Name￨2 .￨2 class￨2 ,￨2 ASTNode￨2 .￨2 MANDATORY￨2 ,￨2 ASTNode￨2 .￨2 NO_CYCLE_RISK￨2 )￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS_2_0￨2 ;￨2 private￨2 static￨2 final￨2 List￨2 PROPERTY_DESCRIPTORS_3_0￨2 ;￨2 public￨2 static￨2 List￨2 propertyDescriptors￨2 (￨2 int￨2 apiLevel￨2 )￨2 {￨2 }￨2 Javadoc￨2 optionalDocComment￨2 =￨2 null￨2 ;￨2 private￨2 ASTNode￨2 .￨2 NodeList￨2 annotations￨2 =￨2 null￨2 ;￨2 private￨2 Name￨2 packageName￨2 =￨2 null￨2 ;￨2 PackageDeclaration￨2 (￨2 AST￨3 ast￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalStructuralPropertiesForType￨2 (￨2 int￨3 apiLevel￨3 )￨2 {￨2 }￨2 final￨2 ASTNode￨2 internalGetSetChildProperty￨2 (￨2 ChildPropertyDescriptor￨3 property￨3 ,￨3 boolean￨3 get￨3 ,￨3 ASTNode￨3 child￨3 )￨2 {￨2 }￨2 final￨2 List￨2 internalGetChildListProperty￨2 (￨2 ChildListPropertyDescriptor￨3 property￨3 )￨2 {￨2 }￨2 final￨2 int￨2 getNodeType0￨2 (￨2 )￨2 {￨2 }￨2 ASTNode￨2 clone0￨2 (￨2 AST￨3 target￨3 )￨2 {￨2 }￨2 final￨2 boolean￨2 subtreeMatch0￨2 (￨2 ASTMatcher￨3 matcher￨3 ,￨3 Object￨3 other￨3 )￨2 {￨2 }￨2 void￨2 accept0￨2 (￨2 ASTVisitor￨3 visitor￨3 )￨2 {￨2 }￨2 public￨2 List￨2 annotations￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Javadoc￨2 getJavadoc￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setJavadoc￨2 (￨2 Javadoc￨3 docComment￨3 )￨2 {￨2 }￨2 public￨2 Name￨2 getName￨2 (￨2 )￨2 {￨2 if￨3 (￨3 (￨4 this￨4 .￨4 packageName￨4 )￨4 ==￨4 null￨4 )￨3 {￨3 <START_BUG>￨4 synchronized￨4 (￨4 this￨4 .￨4 ast￨4 )￨4 {￨4 <END_BUG>￨4 if￨4 (￨4 (￨5 this￨5 .￨5 packageName￨5 )￨5 ==￨5 null￨5 )￨4 {￨4 preLazyInit￨5 (￨5 )￨5 ;￨5 this￨5 .￨5 packageName￨5 =￨5 new￨5 SimpleName￨5 (￨5 this￨5 .￨5 ast￨5 )￨5 ;￨5 postLazyInit￨5 (￨5 this￨5 .￨5 packageName￨5 ,￨5 PackageDeclaration￨5 .￨5 NAME_PROPERTY￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 this￨3 .￨3 packageName￨3 ;￨3 }￨2 public￨2 void￨2 setName￨2 (￨2 Name￨3 name￨3 )￨2 {￨2 }￨2 public￨2 IPackageBinding￨2 resolveBinding￨2 (￨2 )￨2 {￨2 }￨2 int￨2 memSize￨2 (￨2 )￨2 {￨2 }￨2 int￨2 treeSize￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 AddNamespaceHandler￨1 implements￨1 ModelUpdateOperationHandler￨1 ,￨1 DescriptionProvider￨1 {￨1 public￨2 static￨2 final￨2 String￨2 OPERATION_NAME￨2 =￨2 "add-namespace"￨2 ;￨2 public￨2 static￨2 final￨2 AddNamespaceHandler￨2 INSTANCE￨2 =￨2 new￨2 AddNamespaceHandler￨2 (￨2 )￨2 ;￨2 public￨2 static￨2 ModelNode￨2 getAddNamespaceOperation￨2 (￨2 ModelNode￨3 address￨3 ,￨3 ModelNode￨3 namespace￨3 )￨2 {￨2 }￨2 private￨2 final￨2 ParameterValidator￨2 typeValidator￨2 =￨2 new￨2 org￨2 .￨2 jboss￨2 .￨2 as￨2 .￨2 controller￨2 .￨2 operations￨2 .￨2 validation￨2 .￨2 ModelTypeValidator￨2 (￨2 ModelType￨2 .￨2 PROPERTY￨2 )￨2 ;￨2 private￨2 AddNamespaceHandler￨2 (￨2 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 Cancellable￨2 execute￨2 (￨2 NewOperationContext￨3 context￨3 ,￨3 ModelNode￨3 operation￨3 ,￨3 ResultHandler￨3 resultHandler￨3 )￨2 {￨2 }￨2 @￨2 Override￨2 public￨2 ModelNode￨2 getModelDescription￨2 (￨2 Locale￨3 locale￨3 )￨2 {￨2 }￨2 private￨2 String￨2 validate￨2 (￨2 ModelNode￨3 param￨3 ,￨3 ModelNode￨3 namespaces￨3 )￨2 {￨2 String￨3 failure￨3 =￨3 typeValidator￨3 .￨3 validateParameter￨3 (￨3 NAMESPACE￨3 ,￨3 param￨3 )￨3 ;￨3 String￨3 name￨3 =￨3 param￨3 .￨3 asProperty￨3 (￨3 )￨3 .￨3 getName￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 if￨3 (￨3 (￨3 failure￨3 ==￨3 null￨3 )￨3 &&￨3 (￨3 !￨3 (￨3 namespaces￨3 .￨3 isDefined￨3 (￨3 )￨3 )￨3 )￨3 )￨3 {￨3 <END_BUG>￨3 for￨3 (￨3 ModelNode￨4 node￨4 :￨4 namespaces￨4 .￨4 asList￨4 (￨4 )￨4 )￨3 {￨3 if￨4 (￨4 name￨5 .￨5 equals￨5 (￨5 node￨5 .￨5 asProperty￨5 (￨5 )￨5 .￨5 getName￨5 (￨5 )￨5 )￨5 )￨4 {￨4 failure￨5 =￨5 (￨5 (￨5 "Namespace<seq2seq4repair_space>with<seq2seq4repair_space>prefix<seq2seq4repair_space>"￨5 +￨5 name￨5 )￨5 +￨5 "<seq2seq4repair_space>already<seq2seq4repair_space>registered<seq2seq4repair_space>with<seq2seq4repair_space>schema<seq2seq4repair_space>URI<seq2seq4repair_space>"￨5 )￨5 +￨5 (￨5 node￨5 .￨5 asProperty￨5 (￨5 )￨5 .￨5 getValue￨5 (￨5 )￨5 .￨5 asString￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨3 return￨3 failure￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 XQDTUriResolver￨1 implements￨1 IXQDTUriResolver￨1 {￨1 public￨2 URI￨2 resolveModuleImport￨2 (￨2 URI￨3 baseUri￨3 ,￨3 String￨3 uri￨3 ,￨3 String￨3 [￨3 ]￨3 hints￨3 )￨2 {￨2 }￨2 public￨2 URI￨2 resolveUri￨2 (￨2 URI￨3 baseUri￨3 ,￨3 String￨3 uriString￨3 )￨2 {￨2 }￨2 public￨2 ISourceModule￨2 locateSourceModule￨2 (￨2 URI￨3 uri￨3 ,￨3 IScriptProject￨3 project￨3 )￨2 {￨2 IPath￨3 projectLoc￨3 =￨3 project￨3 .￨3 getProject￨3 (￨3 )￨3 .￨3 getLocation￨3 (￨3 )￨3 ;￨3 IPath￨3 path￨3 =￨3 new￨3 Path￨3 (￨3 uri￨3 .￨3 getPath￨3 (￨3 )￨3 )￨3 ;￨3 if￨3 (￨3 projectLoc￨4 .￨4 isPrefixOf￨4 (￨4 path￨4 )￨4 )￨3 {￨3 IPath￨4 packageAbolutePath￨4 =￨4 path￨4 .￨4 removeLastSegments￨4 (￨4 1￨4 )￨4 ;￨4 IPath￨4 packageRelativePath￨4 =￨4 packageAbolutePath￨4 .￨4 removeFirstSegments￨4 (￨4 projectLoc￨4 .￨4 segmentCount￨4 (￨4 )￨4 )￨4 .￨4 makeRelative￨4 (￨4 )￨4 .￨4 setDevice￨4 (￨4 null￨4 )￨4 ;￨4 IModelElement￨4 folder￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 (￨5 packageRelativePath￨5 .￨5 segmentCount￨5 (￨5 )￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 folder￨5 =￨5 project￨5 ;￨5 }￨4 else￨4 {￨4 try￨5 (￨5 )￨5 {￨5 <START_BUG>￨6 folder￨6 =￨6 project￨6 .￨6 findScriptFolder￨6 (￨6 packageRelativePath￨6 .￨6 makeAbsolute￨6 (￨6 )￨6 )￨6 ;￨6 <END_BUG>￨6 }￨5 catch￨5 (￨5 ModelException￨6 e￨6 )￨5 {￨5 e￨6 .￨6 printStackTrace￨6 (￨6 )￨6 ;￨6 }￨5 }￨4 if￨4 (￨4 folder￨5 !=￨5 null￨5 )￨4 {￨4 File￨5 f￨5 =￨5 new￨5 File￨5 (￨5 path￨5 .￨5 toOSString￨5 (￨5 )￨5 )￨5 ;￨5 if￨5 (￨5 f￨6 .￨6 exists￨6 (￨6 )￨6 )￨5 {￨5 return￨6 DLTKCore￨6 .￨6 createSourceModuleFrom￨6 (￨6 (￨6 (￨6 IContainer￨6 )￨6 (￨6 folder￨6 .￨6 getResource￨6 (￨6 )￨6 )￨6 )￨6 .￨6 getFile￨6 (￨6 new￨6 Path￨6 (￨6 path￨6 .￨6 lastSegment￨6 (￨6 )￨6 )￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 }￨3 return￨3 null￨3 ;￨3 }￨2 }￨1
public￨1 final￨1 class￨1 XpandBackendFacade￨1 {￨1 private￨2 final￨2 String￨2 _xpandFile￨2 ;￨2 private￨2 final￨2 MiddleEnd￨2 _middleEnd￨2 ;￨2 private￨2 final￨2 String￨2 _fileEncoding￨2 ;￨2 private￨2 final￨2 Collection￨2 <￨2 MetaModel￨2 >￨2 _mms￨2 ;￨2 private￨2 final￨2 Collection￨2 <￨2 Outlet￨2 >￨2 _outlets￨2 ;￨2 private￨2 static￨2 Log￨2 log￨2 =￨2 LogFactory￨2 .￨2 getLog￨2 (￨2 XpandBackendFacade￨2 .￨2 class￨2 )￨2 ;￨2 public￨2 static￨2 Object￨2 executeStatement￨2 (￨2 String￨2 code￨2 ,￨2 Collection￨2 <￨2 MetaModel￨2 >￨2 mms￨2 ,￨2 Map￨2 <￨2 String￨2 ,￨2 Object￨2 >￨2 variables￨2 ,￨2 Collection￨2 <￨2 Outlet￨2 >￨2 outlets￨2 ,￨2 XpandProtectedRegionResolver￨2 resolver￨2 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 executeStatement￨2 (￨2 String￨3 code￨3 ,￨3 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 variables￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 ,￨3 XpandProtectedRegionResolver￨3 resolver￨3 )￨2 {￨2 }￨2 public￨2 static￨2 Object￨2 executeStatement￨2 (￨2 String￨3 code￨3 ,￨3 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 variables￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 ,￨3 List￨3 <￨3 String￨3 >￨3 advice￨3 ,￨3 XpandProtectedRegionResolver￨3 resolver￨3 )￨2 {￨2 }￨2 public￨2 Object￨2 executeStatement￨2 (￨2 String￨3 code￨3 ,￨3 Map￨3 <￨3 String￨3 ,￨3 Object￨3 >￨3 variables￨3 ,￨3 List￨3 <￨3 String￨3 >￨3 advice￨3 ,￨3 XpandProtectedRegionResolver￨3 resolver￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 registerOutlets￨2 (￨2 ExecutionContext￨3 ctx￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 registerProtectedRegionResolver￨2 (￨2 ExecutionContext￨3 ctx￨3 ,￨3 XpandProtectedRegionResolver￨3 resolver￨3 )￨2 {￨2 }￨2 private￨2 static￨2 class￨2 InMemoryPpAdapter￨2 implements￨2 InMemoryPostprocessor￨2 {￨2 private￨3 final￨3 PostProcessor￨3 _oldPp￨3 ;￨3 private￨3 final￨3 Outlet￨3 _outlet￨3 ;￨3 public￨3 InMemoryPpAdapter￨3 (￨3 PostProcessor￨4 oldPp￨4 ,￨4 Outlet￨4 outlet￨4 )￨3 {￨3 }￨3 public￨3 CharSequence￨3 process￨3 (￨3 CharSequence￨4 unprocessed￨4 ,￨4 String￨4 uri￨4 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 FileHandleImpl￨2 implements￨2 FileHandle￨2 {￨2 private￨3 CharSequence￨3 _buffer￨3 ;￨3 private￨3 final￨3 Outlet￨3 _outlet￨3 ;￨3 private￨3 final￨3 File￨3 _file￨3 ;￨3 public￨3 FileHandleImpl￨3 (￨3 CharSequence￨4 buffer￨4 ,￨4 Outlet￨4 outlet￨4 ,￨4 File￨4 file￨4 )￨3 {￨3 }￨3 public￨3 CharSequence￨3 getBuffer￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 getFileEncoding￨3 (￨3 )￨3 {￨3 }￨3 public￨3 Outlet￨3 getOutlet￨3 (￨3 )￨3 {￨3 }￨3 public￨3 File￨3 getTargetFile￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isAppend￨3 (￨3 )￨3 {￨3 }￨3 public￨3 boolean￨3 isOverwrite￨3 (￨3 )￨3 {￨3 }￨3 public￨3 void￨3 setBuffer￨3 (￨3 CharSequence￨4 buffer￨4 )￨3 {￨3 }￨3 public￨3 void￨3 writeAndClose￨3 (￨3 )￨3 {￨3 }￨3 }￨2 private￨2 static￨2 class￨2 UriBasedPpAdapter￨2 implements￨2 UriBasedPostprocessor￨2 {￨2 private￨3 final￨3 PostProcessor￨3 _oldPp￨3 ;￨3 private￨3 final￨3 Outlet￨3 _outlet￨3 ;￨3 public￨3 UriBasedPpAdapter￨3 (￨3 PostProcessor￨4 oldPp￨4 ,￨4 Outlet￨4 outlet￨4 )￨3 {￨3 }￨3 public￨3 void￨3 process￨3 (￨3 String￨4 uri￨4 )￨3 {￨3 }￨3 }￨2 public￨2 static￨2 XpandBackendFacade￨2 createForFile￨2 (￨2 String￨3 xpandFilename￨3 ,￨3 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 )￨2 {￨2 }￨2 private￨2 XpandExecutionContext￨2 createXpandExecutionContext￨2 (￨2 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 )￨2 {￨2 fileEncoding￨3 =￨3 OldHelper￨3 .￨3 normalizedFileEncoding￨3 (￨3 fileEncoding￨3 )￨3 ;￨3 final￨3 Output￨3 output￨3 =￨3 new￨3 OutputImpl￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 Outlet￨4 outlet￨4 :￨4 outlets￨4 )￨3 {￨3 output￨4 .￨4 addOutlet￨4 (￨4 outlet￨4 )￨4 ;￨4 }￨3 final￨3 XpandExecutionContextImpl￨3 ctx￨3 =￨3 new￨3 XpandExecutionContextImpl￨3 (￨3 output￨3 ,￨3 null￨3 )￨3 ;￨3 for￨3 (￨3 MetaModel￨4 mm￨4 :￨4 mms￨4 )￨3 {￨3 ctx￨4 .￨4 registerMetaModel￨4 (￨4 mm￨4 )￨4 ;￨4 }￨3 <START_BUG>￨3 ctx￨3 .￨3 setFileEncoding￨3 (￨3 fileEncoding￨3 )￨3 ;￨3 <END_BUG>￨3 return￨3 ctx￨3 ;￨3 }￨2 private￨2 Map￨2 <￨2 Class￨2 <￨2 ?￨2 >￨2 ,￨2 Object￨2 >￨2 createSpecificParameters￨2 (￨2 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 )￨2 {￨2 }￨2 private￨2 XpandBackendFacade￨2 (￨2 String￨3 xpandFilename￨3 ,￨3 String￨3 fileEncoding￨3 ,￨3 Collection￨3 <￨3 MetaModel￨3 >￨3 mms￨3 ,￨3 Collection￨3 <￨3 Outlet￨3 >￨3 outlets￨3 )￨2 {￨2 }￨2 public￨2 Collection￨2 <￨2 NamedFunction￨2 >￨2 getContributedFunctions￨2 (￨2 )￨2 {￨2 }￨2 public￨2 FunctionDefContext￨2 getFunctionDefContext￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ActionExit￨1 extends￨1 UMLAction￨1 {￨1 public￨2 static￨2 ActionExit￨2 SINGLETON￨2 =￨2 new￨2 ActionExit￨2 (￨2 )￨2 ;￨2 private￨2 boolean￨2 active￨2 =￨2 false￨2 ;￨2 protected￨2 ActionExit￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 ae￨3 )￨2 {￨2 <START_BUG>￨3 ProjectBrowser￨3 pb￨3 =￨3 ProjectBrowser￨3 .￨3 TheInstance￨3 ;￨3 <END_BUG>￨3 Project￨3 p￨3 =￨3 ProjectManager￨3 .￨3 getManager￨3 (￨3 )￨3 .￨3 getCurrentProject￨3 (￨3 )￨3 ;￨3 if￨3 (￨3 (￨4 (￨4 p￨4 !=￨4 null￨4 )￨4 &&￨4 (￨4 p￨4 .￨4 needsSave￨4 (￨4 )￨4 )￨4 )￨4 &&￨4 (￨4 !￨4 (￨4 active￨4 )￨4 )￨4 )￨3 {￨3 active￨4 =￨4 true￨4 ;￨4 String￨4 t￨4 =￨4 MessageFormat￨4 .￨4 format￨4 (￨4 Argo￨4 .￨4 localize￨4 (￨4 "Actions"￨4 ,￨4 "template.exit.save_changes_to"￨4 )￨4 ,￨4 new￨4 Object￨4 [￨4 ]￨4 (￨4 )￨4 {￨4 }￨4 )￨4 ;￨4 int￨4 response￨4 =￨4 JOptionPane￨4 .￨4 showConfirmDialog￨4 (￨4 pb￨4 ,￨4 t￨4 ,￨4 t￨4 ,￨4 JOptionPane￨4 .￨4 YES_NO_CANCEL_OPTION￨4 )￨4 ;￨4 if￨4 (￨4 response￨5 ==￨5 (￨5 JOptionPane￨5 .￨5 CANCEL_OPTION￨5 )￨5 )￨4 {￨4 active￨5 =￨5 false￨5 ;￨5 return￨5 ;￨5 }￨4 if￨4 (￨4 response￨5 ==￨5 (￨5 JOptionPane￨5 .￨5 YES_OPTION￨5 )￨5 )￨4 {￨4 boolean￨5 safe￨5 =￨5 false￨5 ;￨5 if￨5 (￨5 ActionSaveProject￨6 .￨6 SINGLETON￨6 .￨6 shouldBeEnabled￨6 (￨6 )￨6 )￨5 {￨5 safe￨6 =￨6 ActionSaveProject￨6 .￨6 SINGLETON￨6 .￨6 trySave￨6 (￨6 true￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 safe￨6 )￨5 {￨5 safe￨6 =￨6 ActionSaveProjectAs￨6 .￨6 SINGLETON￨6 .￨6 trySave￨6 (￨6 false￨6 )￨6 ;￨6 }￨5 if￨5 (￨5 !￨6 safe￨6 )￨5 {￨5 active￨6 =￨6 false￨6 ;￨6 return￨6 ;￨6 }￨5 }￨4 active￨4 =￨4 false￨4 ;￨4 }￨3 if￨3 (￨3 !￨4 (￨4 active￨4 )￨4 )￨3 {￨3 Configuration￨4 .￨4 save￨4 (￨4 )￨4 ;￨4 ArgoSecurityManager￨4 .￨4 getInstance￨4 (￨4 )￨4 .￨4 setAllowExit￨4 (￨4 true￨4 )￨4 ;￨4 System￨4 .￨4 exit￨4 (￨4 0￨4 )￨4 ;￨4 }￨3 }￨2 }￨1
public￨1 final￨1 class￨1 WorkbenchKeyboard￨1 {￨1 private￨2 static￨2 final￨2 boolean￨2 DEBUG￨2 =￨2 Policy￨2 .￨2 DEBUG_KEY_BINDINGS￨2 ;￨2 private￨2 static￨2 final￨2 boolean￨2 DEBUG_VERBOSE￨2 =￨2 Policy￨2 .￨2 DEBUG_KEY_BINDINGS_VERBOSE￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MULTI_KEY_ASSIST_SHELL_MAX_HEIGHT￨2 =￨2 175￨2 ;￨2 private￨2 static￨2 final￨2 int￨2 MULTI_KEY_ASSIST_SHELL_MAX_WIDTH￨2 =￨2 300￨2 ;￨2 static￨2 final￨2 String￨2 OUT_OF_ORDER_KEYS￨2 =￨2 "OutOfOrderKeys"￨2 ;￨2 static￨2 KeySequence￨2 outOfOrderKeys￨2 ;￨2 private￨2 static￨2 final￨2 ResourceBundle￨2 RESOURCE_BUNDLE￨2 =￨2 ResourceBundle￨2 .￨2 getBundle￨2 (￨2 WorkbenchKeyboard￨2 .￨2 class￨2 .￨2 getName￨2 (￨2 )￨2 )￨2 ;￨2 public￨2 static￨2 List￨2 generatePossibleKeyStrokes￨2 (￨2 Event￨2 event￨2 )￨2 {￨2 }￨2 private￨2 static￨2 void￨2 initializeOutOfOrderKeys￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 isOutOfOrderKey￨2 (￨2 List￨3 keyStrokes￨3 )￨2 {￨2 }￨2 private￨2 final￨2 IActivityManager￨2 activityManager￨2 ;￨2 private￨2 final￨2 ICommandManager￨2 commandManager￨2 ;￨2 private￨2 final￨2 Listener￨2 keyDownFilter￨2 =￨2 new￨2 Listener￨2 (￨2 )￨2 {￨2 public￨3 void￨3 handleEvent￨3 (￨3 Event￨4 event￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 Shell￨2 multiKeyAssistShell￨2 =￨2 null￨2 ;￨2 private￨2 long￨2 startTime￨2 =￨2 Long￨2 .￨2 MAX_VALUE￨2 ;￨2 private￨2 final￨2 KeyBindingState￨2 state￨2 ;￨2 private￨2 final￨2 IWindowListener￨2 windowListener￨2 =￨2 new￨2 IWindowListener￨2 (￨2 )￨2 {￨2 public￨3 void￨3 windowActivated￨3 (￨3 IWorkbenchWindow￨4 window￨4 )￨3 {￨3 }￨3 public￨3 void￨3 windowClosed￨3 (￨3 IWorkbenchWindow￨4 window￨4 )￨3 {￨3 }￨3 public￨3 void￨3 windowDeactivated￨3 (￨3 IWorkbenchWindow￨4 window￨4 )￨3 {￨3 }￨3 public￨3 void￨3 windowOpened￨3 (￨3 IWorkbenchWindow￨4 window￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 final￨2 IWorkbench￨2 workbench￨2 ;￨2 public￨2 WorkbenchKeyboard￨2 (￨2 Workbench￨3 associatedWorkbench￨3 ,￨3 IActivityManager￨3 associatedActivityManager￨3 ,￨3 ICommandManager￨3 associatedCommandManager￨3 )￨2 {￨2 }￨2 private￨2 void￨2 checkActiveWindow￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 private￨2 void￨2 closeMultiKeyAssistShell￨2 (￨2 )￨2 {￨2 }￨2 private￨2 static￨2 boolean￨2 isEnabled￨2 (￨2 ICommand￨3 command￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 executeCommand￨2 (￨2 String￨2 commandId￨2 )￨2 throws￨2 CommandException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 filterKeySequenceBindings￨2 (￨2 Event￨3 event￨3 )￨2 {￨2 }￨2 public￨2 Listener￨2 getKeyDownFilter￨2 (￨2 )￨2 {￨2 }￨2 private￨2 String￨2 getPerfectMatch￨2 (￨2 KeySequence￨3 keySequence￨3 )￨2 {￨2 }￨2 private￨2 void￨2 incrementState￨2 (￨2 KeySequence￨3 sequence￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isPartialMatch￨2 (￨2 KeySequence￨3 keySequence￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 isPerfectMatch￨2 (￨2 KeySequence￨3 keySequence￨3 )￨2 {￨2 }￨2 private￨2 final￨2 void￨2 logException￨2 (￨2 CommandException￨3 e￨3 )￨2 {￨2 }￨2 private￨2 void￨2 openMultiKeyAssistShell￨2 (￨2 final￨3 Display￨3 display￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 press￨2 (￨2 List￨2 potentialKeyStrokes￨2 ,￨2 Event￨2 event￨2 )￨2 throws￨2 CommandException￨2 (￨2 )￨2 {￨2 }￨2 void￨2 processKeyEvent￨2 (￨2 List￨3 keyStrokes￨3 ,￨3 Event￨3 event￨3 )￨2 {￨2 boolean￨3 eatKey￨3 =￨3 false￨3 ;￨3 if￨3 (￨3 !￨4 (￨4 keyStrokes￨4 .￨4 isEmpty￨4 (￨4 )￨4 )￨4 )￨3 {￨3 try￨4 (￨4 )￨4 {￨4 eatKey￨5 =￨5 press￨5 (￨5 keyStrokes￨5 ,￨5 event￨5 )￨5 ;￨5 }￨4 catch￨4 (￨4 CommandException￨5 e￨5 )￨4 {￨4 logException￨5 (￨5 e￨5 )￨5 ;￨5 eatKey￨5 =￨5 true￨5 ;￨5 }￨4 }￨3 if￨3 (￨3 eatKey￨4 )￨3 {￨3 switch￨4 (￨4 event￨4 .￨4 type￨4 )￨4 {￨4 case￨5 SWT￨5 .￨5 KeyDown￨5 :￨5 event￨6 .￨6 doit￨6 =￨6 false￨6 ;￨6 break￨6 ;￨6 case￨5 SWT￨5 .￨5 Traverse￨5 :￨5 event￨6 .￨6 detail￨6 =￨6 SWT￨6 .￨6 TRAVERSE_NONE￨6 ;￨6 <START_BUG>￨6 event￨6 .￨6 doit￨6 =￨6 true￨6 ;￨6 <END_BUG>￨6 break￨6 ;￨6 default￨5 :￨5 }￨4 event￨4 .￨4 type￨4 =￨4 SWT￨4 .￨4 NONE￨4 ;￨4 }￨3 }￨2 private￨2 void￨2 resetState￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 TableJDBCSeq￨1 extends￨1 AbstractJDBCSeq￨1 implements￨1 Configurable￨1 {￨1 public￨2 static￨2 final￨2 String￨2 ACTION_DROP￨2 =￨2 "drop"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ACTION_ADD￨2 =￨2 "add"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ACTION_GET￨2 =￨2 "get"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ACTION_SET￨2 =￨2 "set"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 DEFAULT_TABLE￨2 =￨2 "OPENJPA_SEQUENCE_TABLE"￨2 ;￨2 private￨2 static￨2 final￨2 Localizer￨2 _loc￨2 =￨2 Localizer￨2 .￨2 forPackage￨2 (￨2 TableJDBCSeq￨2 .￨2 class￨2 )￨2 ;￨2 private￨2 transient￨2 JDBCConfiguration￨2 _conf￨2 =￨2 null￨2 ;￨2 private￨2 transient￨2 Log￨2 _log￨2 =￨2 null￨2 ;￨2 private￨2 int￨2 _alloc￨2 =￨2 50￨2 ;￨2 private￨2 int￨2 _intValue￨2 =￨2 1￨2 ;￨2 private￨2 final￨2 HashMap￨2 <￨2 ClassMapping￨2 ,￨2 TableJDBCSeq￨2 .￨2 Status￨2 >￨2 _stat￨2 =￨2 new￨2 HashMap￨2 <￨2 ClassMapping￨2 ,￨2 TableJDBCSeq￨2 .￨2 Status￨2 >￨2 (￨2 )￨2 ;￨2 private￨2 String￨2 _table￨2 =￨2 TableJDBCSeq￨2 .￨2 DEFAULT_TABLE￨2 ;￨2 private￨2 String￨2 _seqColumnName￨2 =￨2 "SEQUENCE_VALUE"￨2 ;￨2 private￨2 String￨2 _pkColumnName￨2 =￨2 "ID"￨2 ;￨2 private￨2 String￨2 [￨2 ]￨2 _uniqueColumnNames￨2 ;￨2 private￨2 String￨2 _uniqueConstraintName￨2 ;￨2 private￨2 Column￨2 _seqColumn￨2 =￨2 null￨2 ;￨2 private￨2 Column￨2 _pkColumn￨2 =￨2 null￨2 ;￨2 public￨2 String￨2 getTable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setTable￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setTableName￨2 (￨2 String￨3 name￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getSequenceColumn￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setSequenceColumn￨2 (￨2 String￨3 sequenceColumn￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getPrimaryKeyColumn￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setPrimaryKeyColumn￨2 (￨2 String￨3 primaryKeyColumn￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getAllocate￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setAllocate￨2 (￨2 int￨3 alloc￨3 )￨2 {￨2 }￨2 public￨2 int￨2 getInitialValue￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setInitialValue￨2 (￨2 int￨3 intValue￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setUniqueColumns￨2 (￨2 String￨3 columnNames￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getUniqueColumns￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setIncrement￨2 (￨2 int￨3 inc￨3 )￨2 {￨2 }￨2 public￨2 JDBCConfiguration￨2 getConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setConfiguration￨2 (￨2 Configuration￨3 conf￨3 )￨2 {￨2 }￨2 public￨2 void￨2 startConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 endConfiguration￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 addSchema￨2 (￨2 ClassMapping￨3 mapping￨3 ,￨3 SchemaGroup￨3 group￨3 )￨2 {￨2 Schema￨3 [￨3 ]￨3 schemas￨3 =￨3 group￨3 .￨3 getSchemas￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 schemas￨4 .￨4 length￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 String￨4 schemaName￨4 =￨4 Strings￨4 .￨4 getPackageName￨4 (￨4 _table￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 schemaName￨5 .￨5 length￨5 (￨5 )￨5 )￨5 ==￨5 0￨5 )￨4 {￨4 schemaName￨5 =￨5 Schemas￨5 .￨5 getNewTableSchema￨5 (￨5 _conf￨5 )￨5 ;￨5 }￨4 if￨4 (￨4 schemaName￨5 ==￨5 null￨5 )￨4 {￨4 schemaName￨5 =￨5 schemas￨5 [￨5 i￨5 ]￨5 .￨5 getName￨5 (￨5 )￨5 ;￨5 }￨4 Schema￨4 schema￨4 =￨4 group￨4 .￨4 getSchema￨4 (￨4 schemaName￨4 )￨4 ;￨4 if￨4 (￨4 schema￨5 ==￨5 null￨5 )￨4 {￨4 schema￨5 =￨5 group￨5 .￨5 addSchema￨5 (￨5 schemaName￨5 )￨5 ;￨5 }￨4 Table￨4 copy￨4 =￨4 schema￨4 .￨4 importTable￨4 (￨4 _pkColumn￨4 .￨4 getTable￨4 (￨4 )￨4 )￨4 ;￨4 Unique￨4 [￨4 ]￨4 uniques￨4 =￨4 _pkColumn￨4 .￨4 getTable￨4 (￨4 )￨4 .￨4 getUniques￨4 (￨4 )￨4 ;￨4 for￨4 (￨4 Unique￨5 u￨5 :￨5 uniques￨5 )￨4 {￨4 <START_BUG>￨5 copy￨5 .￨5 importUnique￨5 (￨5 u￨5 ,￨5 _conf￨5 .￨5 getDBDictionaryInstance￨5 (￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 _pkColumn￨4 .￨4 resetTableName￨4 (￨4 (￨4 (￨4 schemaName￨4 +￨4 "."￨4 )￨4 +￨4 (￨4 _pkColumn￨4 .￨4 getTableName￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 _conf￨4 .￨4 getDBDictionaryInstance￨4 (￨4 )￨4 .￨4 createIndexIfNecessary￨4 (￨4 schema￨4 ,￨4 _table￨4 ,￨4 _pkColumn￨4 )￨4 ;￨4 }￨3 }￨2 protected￨2 Object￨2 nextInternal￨2 (￨2 JDBCStore￨2 store￨2 ,￨2 ClassMapping￨2 mapping￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 Object￨2 currentInternal￨2 (￨2 JDBCStore￨2 store￨2 ,￨2 ClassMapping￨2 mapping￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 allocateInternal￨2 (￨2 int￨2 count￨2 ,￨2 JDBCStore￨2 store￨2 ,￨2 ClassMapping￨2 mapping￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 TableJDBCSeq￨2 .￨2 Status￨2 getStatus￨2 (￨2 ClassMapping￨3 mapping￨3 )￨2 {￨2 }￨2 protected￨2 Column￨2 addPrimaryKeyColumn￨2 (￨2 Table￨3 table￨3 )￨2 {￨2 }￨2 protected￨2 Object￨2 getPrimaryKey￨2 (￨2 ClassMapping￨3 mapping￨3 )￨2 {￨2 }￨2 private￨2 void￨2 buildTable￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 allocateSequence￨2 (￨2 JDBCStore￨2 store￨2 ,￨2 ClassMapping￨2 mapping￨2 ,￨2 TableJDBCSeq￨2 .￨2 Status￨2 stat￨2 ,￨2 int￨2 alloc￨2 ,￨2 boolean￨2 updateStatSeq￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 insertSequence￨2 (￨2 ClassMapping￨2 mapping￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 long￨2 getSequence￨2 (￨2 ClassMapping￨2 mapping￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 boolean￨2 setSequence￨2 (￨2 ClassMapping￨2 mapping￨2 ,￨2 TableJDBCSeq￨2 .￨2 Status￨2 stat￨2 ,￨2 int￨2 inc￨2 ,￨2 boolean￨2 updateStatSeq￨2 ,￨2 Connection￨2 conn￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 resolveTableName￨2 (￨2 ClassMapping￨3 mapping￨3 ,￨3 Table￨3 table￨3 )￨2 {￨2 }￨2 public￨2 void￨2 refreshTable￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 dropTable￨2 (￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 run￨2 (￨2 JDBCConfiguration￨2 conf￨2 ,￨2 String￨2 [￨2 ]￨2 args￨2 ,￨2 Options￨2 opts￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 boolean￨2 run￨2 (￨2 JDBCConfiguration￨2 conf￨2 ,￨2 String￨2 [￨2 ]￨2 args￨2 ,￨2 String￨2 action￨2 )￨2 throws￨2 Exception￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 static￨2 class￨2 Status￨2 implements￨2 Serializable￨2 {￨2 public￨3 long￨3 seq￨3 =￨3 1L￨3 ;￨3 public￨3 long￨3 max￨3 =￨3 0L￨3 ;￨3 }￨2 protected￨2 PreparedStatement￨2 prepareStatement￨2 (￨2 Connection￨2 conn￨2 ,￨2 SQLBuffer￨2 buf￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 executeUpdate￨2 (￨2 JDBCConfiguration￨2 conf￨2 ,￨2 Connection￨2 conn￨2 ,￨2 PreparedStatement￨2 stmnt￨2 ,￨2 SQLBuffer￨2 buf￨2 ,￨2 int￨2 opcode￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 ResultSet￨2 executeQuery￨2 (￨2 JDBCConfiguration￨2 conf￨2 ,￨2 Connection￨2 conn￨2 ,￨2 PreparedStatement￨2 stmnt￨2 ,￨2 SQLBuffer￨2 buf￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 long￨2 getSequence￨2 (￨2 ResultSet￨2 rs￨2 ,￨2 DBDictionary￨2 dict￨2 )￨2 throws￨2 SQLException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 setUniqueConstraintName￨2 (￨2 String￨3 _uniqueConstraintName￨3 )￨2 {￨2 }￨2 public￨2 String￨2 getUniqueConstraintName￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 class￨2 AllocateSequenceRunnable￨2 implements￨2 Runnable￨2 {￨2 JDBCStore￨3 store￨3 =￨3 null￨3 ;￨3 ClassMapping￨3 mapping￨3 =￨3 null￨3 ;￨3 TableJDBCSeq￨3 .￨3 Status￨3 stat￨3 =￨3 null￨3 ;￨3 int￨3 alloc￨3 ;￨3 boolean￨3 updateStatSeq￨3 ;￨3 AllocateSequenceRunnable￨3 (￨3 JDBCStore￨4 store￨4 ,￨4 ClassMapping￨4 mapping￨4 ,￨4 TableJDBCSeq￨4 .￨4 Status￨4 stat￨4 ,￨4 int￨4 alloc￨4 ,￨4 boolean￨4 updateStatSeq￨4 )￨3 {￨3 }￨3 public￨3 void￨3 run￨3 (￨3 )￨3 throws￨3 RuntimeException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 protected￨2 class￨2 CurrentSequenceRunnable￨2 implements￨2 Runnable￨2 {￨2 private￨3 JDBCStore￨3 _store￨3 ;￨3 private￨3 ClassMapping￨3 _mapping￨3 ;￨3 CurrentSequenceRunnable￨3 (￨3 JDBCStore￨4 store￨4 ,￨4 ClassMapping￨4 mapping￨4 )￨3 {￨3 }￨3 public￨3 void￨3 run￨3 (￨3 )￨3 throws￨3 RuntimeException￨3 (￨3 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ShowInMenu￨1 extends￨1 ContributionItem￨1 implements￨1 IWorkbenchContribution￨1 {￨1 private￨2 static￨2 final￨2 String￨2 NO_TARGETS_MSG￨2 =￨2 WorkbenchMessages￨2 .￨2 Workbench_showInNoTargets￨2 ;￨2 private￨2 IWorkbenchWindow￨2 window￨2 ;￨2 private￨2 Map￨2 actions￨2 =￨2 new￨2 HashMap￨2 (￨2 21￨2 )￨2 ;￨2 private￨2 boolean￨2 dirty￨2 =￨2 true￨2 ;￨2 private￨2 IMenuListener￨2 menuListener￨2 =￨2 new￨2 IMenuListener￨2 (￨2 )￨2 {￨2 public￨3 void￨3 menuAboutToShow￨3 (￨3 IMenuManager￨4 manager￨4 )￨3 {￨3 }￨3 }￨2 ;￨2 private￨2 IServiceLocator￨2 locator￨2 ;￨2 private￨2 MenuManager￨2 currentManager￨2 ;￨2 public￨2 ShowInMenu￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ShowInMenu￨2 (￨2 IWorkbenchWindow￨3 window￨3 ,￨3 String￨3 id￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDirty￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isDynamic￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 fill￨2 (￨2 Menu￨3 menu￨3 ,￨3 int￨3 index￨3 )￨2 {￨2 }￨2 private￨2 void￨2 fillMenu￨2 (￨2 IMenuManager￨3 innerMgr￨3 )￨2 {￨2 }￨2 private￨2 IAction￨2 getAction￨2 (￨2 IViewDescriptor￨3 desc￨3 )￨2 {￨2 }￨2 private￨2 ArrayList￨2 getShowInPartIds￨2 (￨2 IWorkbenchPart￨3 sourcePart￨3 )￨2 {￨2 }￨2 private￨2 IWorkbenchPart￨2 getSourcePart￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IShowInSource￨2 getShowInSource￨2 (￨2 IWorkbenchPart￨3 sourcePart￨3 )￨2 {￨2 }￨2 private￨2 IShowInTargetList￨2 getShowInTargetList￨2 (￨2 IWorkbenchPart￨3 sourcePart￨3 )￨2 {￨2 }￨2 private￨2 ShowInContext￨2 getContext￨2 (￨2 IWorkbenchPart￨3 sourcePart￨3 )￨2 {￨2 }￨2 private￨2 IViewDescriptor￨2 [￨2 ]￨2 getViewDescriptors￨2 (￨2 IWorkbenchPart￨3 sourcePart￨3 )￨2 {￨2 }￨2 public￨2 void￨2 initialize￨2 (￨2 IServiceLocator￨3 serviceLocator￨3 )￨2 {￨2 }￨2 protected￨2 IWorkbenchWindow￨2 getWindow￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 dispose￨2 (￨2 )￨2 {￨2 <START_BUG>￨3 if￨3 (￨3 (￨3 currentManager￨3 .￨3 getSize￨3 (￨3 )￨3 )￨3 >￨3 0￨3 )￨3 {￨3 <END_BUG>￨3 IMenuService￨3 service￨3 =￨3 (￨3 (￨3 IMenuService￨3 )￨3 (￨3 locator￨3 .￨3 getService￨3 (￨3 IMenuService￨3 .￨3 class￨3 )￨3 )￨3 )￨3 ;￨3 service￨3 .￨3 releaseContributions￨3 (￨3 currentManager￨3 )￨3 ;￨3 currentManager￨3 .￨3 removeAll￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 CreateFilterOnToAction￨1 extends￨1 AbstractColumbaAction￨1 implements￨1 SelectionListener￨1 {￨1 public￨2 CreateFilterOnToAction￨2 (￨2 FrameMediator￨3 frameMediator￨3 )￨2 {￨2 }￨2 public￨2 void￨2 actionPerformed￨2 (￨2 ActionEvent￨3 evt￨3 )￨2 {￨2 FolderCommandReference￨3 [￨3 ]￨3 r￨3 =￨3 (￨3 (￨3 org￨3 .￨3 columba￨3 .￨3 mail￨3 .￨3 gui￨3 .￨3 frame￨3 .￨3 MailFrameMediator￨3 )￨3 (￨3 getFrameMediator￨3 (￨3 )￨3 )￨3 )￨3 .￨3 getTableSelection￨3 (￨3 )￨3 ;￨3 <START_BUG>￨3 CreateFilterOnMessageCommand￨3 c￨3 =￨3 new￨3 CreateFilterOnMessageCommand￨3 (￨3 r￨3 ,￨3 CreateFilterOnMessageCommand￨3 .￨3 FILTER_ON_TO￨3 )￨3 ;￨3 <END_BUG>￨3 processor￨3 .￨3 addOp￨3 (￨3 c￨3 )￨3 ;￨3 }￨2 public￨2 void￨2 selectionChanged￨2 (￨2 SelectionChangedEvent￨3 e￨3 )￨2 {￨2 }￨2 }￨1
public￨1 abstract￨1 class￨1 Scrollable￨1 extends￨1 Control￨1 {￨1 int￨2 scrolledHandle￨2 ;￨2 ScrollBar￨2 horizontalBar￨2 ;￨2 ScrollBar￨2 verticalBar￨2 ;￨2 Scrollable￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Scrollable￨2 (￨2 Composite￨3 parent￨3 ,￨3 int￨3 style￨3 )￨2 {￨2 }￨2 int￨2 clientHandle￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 computeTrim￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 ScrollBar￨2 createScrollBar￨2 (￨2 int￨3 style￨3 )￨2 {￨2 }￨2 void￨2 createWidget￨2 (￨2 int￨3 index￨3 )￨2 {￨2 }￨2 void￨2 deregister￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getBorderWidth￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Rectangle￨2 getClientArea￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ScrollBar￨2 getHorizontalBar￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ScrollBar￨2 getVerticalBar￨2 (￨2 )￨2 {￨2 }￨2 int￨2 gtk_scroll_event￨2 (￨2 int￨3 widget￨3 ,￨3 int￨3 eventPtr￨3 )￨2 {￨2 }￨2 int￨2 hScrollBarWidth￨2 (￨2 )￨2 {￨2 }￨2 void￨2 setOrientation￨2 (￨2 )￨2 {￨2 }￨2 boolean￨2 setScrollBarVisible￨2 (￨2 ScrollBar￨3 bar￨3 ,￨3 boolean￨3 visible￨3 )￨2 {￨2 }￨2 void￨2 redrawBackgroundImage￨2 (￨2 )￨2 {￨2 }￨2 void￨2 redrawWidget￨2 (￨2 int￨3 x￨3 ,￨3 int￨3 y￨3 ,￨3 int￨3 width￨3 ,￨3 int￨3 height￨3 ,￨3 boolean￨3 redrawAll￨3 ,￨3 boolean￨3 all￨3 ,￨3 boolean￨3 trim￨3 )￨2 {￨2 }￨2 void￨2 register￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 releaseChildren￨2 (￨2 boolean￨3 destroy￨3 )￨2 {￨2 }￨2 void￨2 resizeHandle￨2 (￨2 int￨3 width￨3 ,￨3 int￨3 height￨3 )￨2 {￨2 }￨2 void￨2 showWidget￨2 (￨2 )￨2 {￨2 }￨2 int￨2 topHandle￨2 (￨2 )￨2 {￨2 }￨2 void￨2 updateScrollBarValue￨2 (￨2 ScrollBar￨3 bar￨3 )￨2 {￨2 <START_BUG>￨3 parent￨3 .￨3 redrawBackgroundImage￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 }￨2 int￨2 vScrollBarWidth￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Launcher￨1 {￨1 public￨2 static￨2 final￨2 String￨2 ANTHOME_PROPERTY￨2 =￨2 MagicNames￨2 .￨2 ANT_HOME￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ANTLIBDIR_PROPERTY￨2 =￨2 "ant.library.dir"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ANT_PRIVATEDIR￨2 =￨2 ".ant"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 ANT_PRIVATELIB￨2 =￨2 "lib"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 USER_LIBDIR￨2 =￨2 (￨2 (￨2 Launcher￨2 .￨2 ANT_PRIVATEDIR￨2 )￨2 +￨2 (￨2 File￨2 .￨2 separatorChar￨2 )￨2 )￨2 +￨2 (￨2 Launcher￨2 .￨2 ANT_PRIVATELIB￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 MAIN_CLASS￨2 =￨2 "org.apache.tools.ant.Main"￨2 ;￨2 public￨2 static￨2 final￨2 String￨2 USER_HOMEDIR￨2 =￨2 "user.home"￨2 ;￨2 private￨2 static￨2 final￨2 String￨2 JAVA_CLASS_PATH￨2 =￨2 "java.class.path"￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨3 [￨3 ]￨3 args￨3 )￨2 {￨2 }￨2 private￨2 void￨2 addPath￨2 (￨2 String￨2 path￨2 ,￨2 boolean￨2 getJars￨2 ,￨2 List￨2 libPathURLs￨2 )￨2 throws￨2 MalformedURLException￨2 (￨2 )￨2 {￨2 StringTokenizer￨3 tokenizer￨3 =￨3 new￨3 StringTokenizer￨3 (￨3 path￨3 ,￨3 File￨3 .￨3 pathSeparator￨3 )￨3 ;￨3 while￨3 (￨3 tokenizer￨4 .￨4 hasMoreElements￨4 (￨4 )￨4 )￨3 {￨3 String￨4 elementName￨4 =￨4 tokenizer￨4 .￨4 nextToken￨4 (￨4 )￨4 ;￨4 File￨4 element￨4 =￨4 new￨4 File￨4 (￨4 elementName￨4 )￨4 ;￨4 if￨4 (￨4 (￨5 (￨5 elementName￨5 .￨5 indexOf￨5 (￨5 "%"￨5 )￨5 )￨5 !=￨5 (￨5 -￨5 1￨5 )￨5 )￨5 &&￨5 (￨5 !￨5 (￨5 element￨5 .￨5 exists￨5 (￨5 )￨5 )￨5 )￨5 )￨4 {￨4 continue￨5 ;￨5 }￨4 if￨4 (￨4 getJars￨5 &&￨5 (￨5 element￨5 .￨5 isDirectory￨5 (￨5 )￨5 )￨5 )￨4 {￨4 URL￨5 [￨5 ]￨5 dirURLs￨5 =￨5 Locator￨5 .￨5 getLocationURLs￨5 (￨5 element￨5 )￨5 ;￨5 for￨5 (￨5 int￨6 j￨6 =￨6 0￨6 ;￨6 j￨6 <￨6 (￨6 dirURLs￨6 .￨6 length￨6 )￨6 ;￨6 ++￨6 j￨6 )￨5 {￨5 libPathURLs￨6 .￨6 add￨6 (￨6 dirURLs￨6 [￨6 j￨6 ]￨6 )￨6 ;￨6 }￨5 }￨4 try￨4 (￨4 )￨4 {￨4 <START_BUG>￨5 libPathURLs￨5 .￨5 add￨5 (￨5 new￨5 URL￨5 (￨5 Locator￨5 .￨5 encodeUri￨5 (￨5 element￨5 .￨5 toURL￨5 (￨5 )￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 )￨5 )￨5 ;￨5 <END_BUG>￨5 }￨4 catch￨4 (￨4 UnsupportedEncodingException￨5 ex￨5 )￨4 {￨4 throw￨5 new￨5 MalformedURLException￨5 (￨5 ex￨5 .￨5 toString￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 }￨2 private￨2 void￨2 run￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 MalformedURLException￨2 ,￨2 LaunchException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 {￨2 }￨2 public￨2 boolean￨2 saveAllEditors￨2 (￨2 boolean￨3 confirm￨3 )￨2 {￨2 }￨2 private￨2 IWorkbenchWindow￨2 busyOpenWorkbenchWindow￨2 (￨2 String￨2 perspID￨2 ,￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 checkUpdates￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 Object￨3 returnCode￨3 )￨2 {￨2 }￨2 public￨2 boolean￨2 close￨2 (￨2 Object￨3 returnCode￨3 ,￨3 final￨3 boolean￨3 force￨3 )￨2 {￨2 }￨2 protected￨2 WorkbenchActionBuilder￨2 createActionBuilder￨2 (￨2 IWorkbenchWindow￨3 window￨3 )￨2 {￨2 }￨2 private￨2 void￨2 connectToWorkspace￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 disconnectFromWorkspace￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 getActiveWorkbenchWindow￨2 (￨2 )￨2 {￨2 }￨2 public￨2 String￨2 [￨2 ]￨2 getCommandLineArgs￨2 (￨2 )￨2 {￨2 }￨2 public￨2 EditorHistory￨2 getEditorHistory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PerspectiveHistory￨2 getPerspectiveHistory￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IEditorRegistry￨2 getEditorRegistry￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 getNewWindowNumber￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPerspectiveRegistry￨2 getPerspectiveRegistry￨2 (￨2 )￨2 {￨2 }￨2 public￨2 PreferenceManager￨2 getPreferenceManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IPreferenceStore￨2 getPreferenceStore￨2 (￨2 )￨2 {￨2 }￨2 public￨2 ISharedImages￨2 getSharedImages￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IMarkerHelpRegistry￨2 getMarkerHelpRegistry￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WindowManager￨2 getWindowManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 WorkbenchConfigurationInfo￨2 getConfigurationInfo￨2 (￨2 )￨2 {￨2 }￨2 private￨2 File￨2 getWorkbenchStateFile￨2 (￨2 )￨2 {￨2 }￨2 public￨2 int￨2 getWorkbenchWindowCount￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 [￨2 ]￨2 getWorkbenchWindows￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkingSetManager￨2 getWorkingSetManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 updateKeys￨2 (￨2 )￨2 {￨2 }￨2 private￨2 boolean￨2 init￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 refreshFromLocal￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 forceOpenPerspective￨2 (￨2 String￨3 [￨3 ]￨3 commandLineArgs￨3 )￨2 {￨2 }￨2 private￨2 void￨2 initializeSingleClickOption￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeFonts￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 initializeFont￨2 (￨2 String￨3 fontKey￨3 ,￨3 FontRegistry￨3 registry￨3 ,￨3 IPreferenceStore￨3 store￨3 )￨2 {￨2 }￨2 private￨2 void￨2 initializeProductImage￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isClosing￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 isStarting￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 WorkbenchWindow￨2 newWorkbenchWindow￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 openFirstTimeWindow￨2 (￨2 )￨2 {￨2 }￨2 private￨2 int￨2 openPreviousWorkbenchState￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 openWorkbenchWindow￨2 (￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchWindow￨2 openWorkbenchWindow￨2 (￨2 final￨2 String￨2 perspID￨2 ,￨2 final￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 XMLMemento￨2 recordWorkbenchState￨2 (￨2 )￨2 {￨2 }￨2 public￨2 boolean￨2 restart￨2 (￨2 )￨2 {￨2 }￨2 private￨2 IStatus￨2 restoreState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 MultiStatus￨3 result￨3 =￨3 new￨3 MultiStatus￨3 (￨3 PlatformUI￨3 .￨3 PLUGIN_ID￨3 ,￨3 IStatus￨3 .￨3 OK￨3 ,￨3 WorkbenchMessages￨3 .￨3 getString￨3 (￨3 "Workbench.problemsRestoring"￨3 )￨3 ,￨3 null￨3 )￨3 ;￨3 IMemento￨3 childMem￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 start￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "PerspectiveHistory"￨4 )￨4 ;￨4 childMem￨4 =￨4 memento￨4 .￨4 getChild￨4 (￨4 TAG_PERSPECTIVE_HISTORY￨4 )￨4 ;￨4 if￨4 (￨4 childMem￨5 !=￨5 null￨5 )￨4 {￨4 result￨5 .￨5 add￨5 (￨5 getPerspectiveHistory￨5 (￨5 )￨5 .￨5 restoreState￨5 (￨5 childMem￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 end￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "PerspectiveHistory"￨4 )￨4 ;￨4 }￨3 try￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 start￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "MRUList"￨4 )￨4 ;￨4 IMemento￨4 mruMemento￨4 =￨4 memento￨4 .￨4 getChild￨4 (￨4 TAG_MRU_LIST￨4 )￨4 ;￨4 if￨4 (￨4 mruMemento￨5 !=￨5 null￨5 )￨4 {￨4 result￨5 .￨5 add￨5 (￨5 getEditorHistory￨5 (￨5 )￨5 .￨5 restoreState￨5 (￨5 mruMemento￨5 )￨5 )￨5 ;￨5 }￨4 }￨3 finally￨3 (￨3 )￨3 {￨3 UIStats￨4 .￨4 end￨4 (￨4 RESTORE_WORKBENCH￨4 ,￨4 "MRUList"￨4 )￨4 ;￨4 }￨3 IMemento￨3 [￨3 ]￨3 children￨3 =￨3 memento￨3 .￨3 getChildren￨3 (￨3 TAG_WINDOW￨3 )￨3 ;￨3 IPerspectiveRegistry￨3 reg￨3 =￨3 WorkbenchPlugin￨3 .￨3 getDefault￨3 (￨3 )￨3 .￨3 getPerspectiveRegistry￨3 (￨3 )￨3 ;￨3 AboutInfo￨3 [￨3 ]￨3 newFeaturesWithPerspectives￨3 =￨3 getConfigurationInfo￨3 (￨3 )￨3 .￨3 collectNewFeaturesWithPerspectives￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 x￨4 =￨4 0￨4 ;￨4 x￨4 <￨4 (￨4 children￨4 .￨4 length￨4 )￨4 ;￨4 x￨4 ++￨4 )￨3 {￨3 childMem￨4 =￨4 children￨4 [￨4 x￨4 ]￨4 ;￨4 WorkbenchWindow￨4 newWindow￨4 =￨4 newWorkbenchWindow￨4 (￨4 )￨4 ;￨4 newWindow￨4 .￨4 create￨4 (￨4 )￨4 ;￨4 IPerspectiveDescriptor￨4 desc￨4 =￨4 null￨4 ;￨4 if￨4 (￨4 x￨5 <￨5 (￨5 newFeaturesWithPerspectives￨5 .￨5 length￨5 )￨5 )￨4 {￨4 desc￨5 =￨5 reg￨5 .￨5 findPerspectiveWithId￨5 (￨5 newFeaturesWithPerspectives￨5 [￨5 x￨5 ]￨5 .￨5 getWelcomePerspective￨5 (￨5 )￨5 )￨5 ;￨5 }￨4 result￨4 .￨4 merge￨4 (￨4 newWindow￨4 .￨4 restoreState￨4 (￨4 childMem￨4 ,￨4 desc￨4 )￨4 )￨4 ;￨4 if￨4 (￨4 desc￨5 !=￨5 null￨5 )￨4 {￨4 IWorkbenchPage￨5 page￨5 =￨5 newWindow￨5 .￨5 getActivePage￨5 (￨5 )￨5 ;￨5 if￨5 (￨5 page￨6 ==￨6 null￨6 )￨5 {￨5 IWorkbenchPage￨6 [￨6 ]￨6 pages￨6 =￨6 newWindow￨6 .￨6 getPages￨6 (￨6 )￨6 ;￨6 if￨6 (￨6 (￨7 pages￨7 !=￨7 null￨7 )￨7 &&￨7 (￨7 (￨7 pages￨7 .￨7 length￨7 )￨7 >￨7 0￨7 )￨7 )￨6 {￨6 page￨7 =￨7 pages￨7 [￨7 0￨7 ]￨7 ;￨7 }￨6 }￨5 if￨5 (￨5 page￨6 ==￨6 null￨6 )￨5 {￨5 IContainer￨6 root￨6 =￨6 WorkbenchPlugin￨6 .￨6 getPluginWorkspace￨6 (￨6 )￨6 .￨6 getRoot￨6 (￨6 )￨6 ;￨6 try￨6 (￨6 )￨6 {￨6 <START_BUG>￨7 page￨7 =￨7 (￨7 (￨7 WorkbenchPage￨7 )￨7 (￨7 getActiveWorkbenchWindow￨7 (￨7 )￨7 .￨7 openPage￨7 (￨7 newFeaturesWithPerspectives￨7 [￨7 x￨7 ]￨7 .￨7 getWelcomePerspective￨7 (￨7 )￨7 ,￨7 root￨7 )￨7 )￨7 )￨7 ;￨7 <END_BUG>￨7 }￨6 catch￨6 (￨6 WorkbenchException￨7 e￨7 )￨6 {￨6 result￨7 .￨7 add￨7 (￨7 e￨7 .￨7 getStatus￨7 (￨7 )￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 page￨6 .￨6 setPerspective￨6 (￨6 desc￨6 )￨6 ;￨6 }￨5 newWindow￨5 .￨5 setActivePage￨5 (￨5 page￨5 )￨5 ;￨5 try￨5 (￨5 )￨5 {￨5 page￨6 .￨6 openEditor￨6 (￨6 new￨6 org￨6 .￨6 eclipse￨6 .￨6 ui￨6 .￨6 internal￨6 .￨6 dialogs￨6 .￨6 WelcomeEditorInput￨6 (￨6 newFeaturesWithPerspectives￨6 [￨6 x￨6 ]￨6 )￨6 ,￨6 Workbench￨6 .￨6 WELCOME_EDITOR_ID￨6 ,￨6 true￨6 )￨6 ;￨6 }￨5 catch￨5 (￨5 PartInitException￨6 e￨6 )￨5 {￨5 result￨6 .￨6 add￨6 (￨6 e￨6 .￨6 getStatus￨6 (￨6 )￨6 )￨6 ;￨6 }￨5 }￨4 windowManager￨4 .￨4 add￨4 (￨4 newWindow￨4 )￨4 ;￨4 newWindow￨4 .￨4 open￨4 (￨4 )￨4 ;￨4 }￨3 return￨3 result￨3 ;￨3 }￨2 public￨2 IPluginDescriptor￨2 [￨2 ]￨2 getEarlyActivatedPlugins￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 void￨2 startPlugins￨2 (￨2 )￨2 {￨2 }￨2 public￨2 Object￨2 run￨2 (￨2 Object￨3 arg￨3 )￨2 {￨2 }￨2 protected￨2 void￨2 runEventLoop￨2 (￨2 Window￨3 .￨3 IExceptionHandler￨3 handler￨3 )￨2 {￨2 }￨2 private￨2 IStatus￨2 saveState￨2 (￨2 IMemento￨3 memento￨3 )￨2 {￨2 }￨2 private￨2 boolean￨2 saveWorkbenchState￨2 (￨2 XMLMemento￨3 memento￨3 )￨2 {￨2 }￨2 public￨2 void￨2 setInitializationData￨2 (￨2 IConfigurationElement￨3 configElement￨3 ,￨3 String￨3 propertyName￨3 ,￨3 Object￨3 data￨3 )￨2 {￨2 }￨2 public￨2 IWorkbenchPage￨2 showPerspective￨2 (￨2 String￨2 perspectiveId￨2 ,￨2 IWorkbenchWindow￨2 window￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 IWorkbenchPage￨2 showPerspective￨2 (￨2 String￨2 perspectiveId￨2 ,￨2 IWorkbenchWindow￨2 window￨2 ,￨2 IAdaptable￨2 input￨2 )￨2 throws￨2 WorkbenchException￨2 (￨2 )￨2 {￨2 }￨2 private￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 refreshPluginActions￨2 (￨2 String￨3 pluginId￨3 )￨2 {￨2 }￨2 public￨2 IDecoratorManager￨2 getDecoratorManager￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 ShutdownManager￨1 {￨1 Vector￨2 list￨2 ;￨2 public￨2 ShutdownManager￨2 (￨2 )￨2 {￨2 }￨2 public￨2 void￨2 register￨2 (￨2 ShutdownPluginInterface￨3 plugin￨3 )￨2 {￨2 }￨2 public￨2 void￨2 shutdown￨2 (￨2 )￨2 {￨2 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 list￨4 .￨4 size￨4 (￨4 )￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 ShutdownPluginInterface￨4 plugin￨4 =￨4 (￨4 (￨4 ShutdownPluginInterface￨4 )￨4 (￨4 list￨4 .￨4 get￨4 (￨4 i￨4 )￨4 )￨4 )￨4 ;￨4 <START_BUG>￨4 plugin￨4 .￨4 run￨4 (￨4 )￨4 ;￨4 <END_BUG>￨4 }￨3 System￨3 .￨3 exit￨3 (￨3 1￨3 )￨3 ;￨3 }￨2 }￨1
public￨1 class￨1 StompMessageConverter￨1 {￨1 private￨2 static￨2 final￨2 Charset￨2 STOMP_CHARSET￨2 =￨2 Charset￨2 .￨2 forName￨2 (￨2 "UTF-8"￨2 )￨2 ;￨2 public￨2 static￨2 final￨2 byte￨2 LF￨2 =￨2 10￨2 ;￨2 public￨2 static￨2 final￨2 byte￨2 CR￨2 =￨2 13￨2 ;￨2 private￨2 static￨2 final￨2 byte￨2 COLON￨2 =￨2 ':'￨2 ;￨2 public￨2 Message￨2 <￨2 ?￨2 >￨2 toMessage￨2 (￨2 Object￨3 stompContent￨3 )￨2 {￨2 }￨2 private￨2 int￨2 findIndexOfPayload￨2 (￨2 byte￨3 [￨3 ]￨3 bytes￨3 )￨2 {￨2 }￨2 public￨2 byte￨2 [￨2 ]￨2 fromMessage￨2 (￨2 Message￨3 <￨3 ?￨3 >￨3 message￨3 )￨2 {￨2 byte￨3 [￨3 ]￨3 payload￨3 ;￨3 if￨3 (￨3 (￨4 message￨4 .￨4 getPayload￨4 (￨4 )￨4 )￨4 instanceof￨4 byte￨4 [￨4 ]￨4 )￨3 {￨3 payload￨4 =￨4 (￨4 (￨4 byte￨4 [￨4 ]￨4 )￨4 (￨4 message￨4 .￨4 getPayload￨4 (￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 throw￨4 new￨4 IllegalArgumentException￨4 (￨4 (￨4 "stompContent<seq2seq4repair_space>is<seq2seq4repair_space>not<seq2seq4repair_space>byte[]:<seq2seq4repair_space>"￨4 +￨4 (￨4 message￨4 .￨4 getPayload￨4 (￨4 )￨4 .￨4 getClass￨4 (￨4 )￨4 )￨4 )￨4 )￨4 ;￨4 }￨3 ByteArrayOutputStream￨3 out￨3 =￨3 new￨3 ByteArrayOutputStream￨3 (￨3 )￨3 ;￨3 StompHeaderAccessor￨3 stompHeaders￨3 =￨3 StompHeaderAccessor￨3 .￨3 wrap￨3 (￨3 message￨3 )￨3 ;￨3 try￨3 (￨3 )￨3 {￨3 out￨4 .￨4 write￨4 (￨4 stompHeaders￨4 .￨4 getCommand￨4 (￨4 )￨4 .￨4 toString￨4 (￨4 )￨4 .￨4 getBytes￨4 (￨4 "UTF-8"￨4 )￨4 )￨4 ;￨4 out￨4 .￨4 write￨4 (￨4 StompMessageConverter￨4 .￨4 LF￨4 )￨4 ;￨4 <START_BUG>￨4 for￨4 (￨4 Map￨4 .￨4 Entry￨4 <￨4 String￨4 ,￨4 List￨4 <￨4 String￨4 >￨4 >￨4 entry￨4 :￨4 stompHeaders￨4 .￨4 toNativeHeaderMap￨4 (￨4 )￨4 .￨4 entrySet￨4 (￨4 )￨4 )￨4 {￨4 <END_BUG>￨4 String￨4 key￨4 =￨4 entry￨4 .￨4 getKey￨4 (￨4 )￨4 ;￨4 key￨4 =￨4 replaceAllOutbound￨4 (￨4 key￨4 )￨4 ;￨4 for￨4 (￨4 String￨5 value￨5 :￨5 entry￨5 .￨5 getValue￨5 (￨5 )￨5 )￨4 {￨4 out￨5 .￨5 write￨5 (￨5 key￨5 .￨5 getBytes￨5 (￨5 "UTF-8"￨5 )￨5 )￨5 ;￨5 out￨5 .￨5 write￨5 (￨5 StompMessageConverter￨5 .￨5 COLON￨5 )￨5 ;￨5 value￨5 =￨5 replaceAllOutbound￨5 (￨5 value￨5 )￨5 ;￨5 out￨5 .￨5 write￨5 (￨5 value￨5 .￨5 getBytes￨5 (￨5 "UTF-8"￨5 )￨5 )￨5 ;￨5 out￨5 .￨5 write￨5 (￨5 StompMessageConverter￨5 .￨5 LF￨5 )￨5 ;￨5 }￨4 }￨4 out￨4 .￨4 write￨4 (￨4 StompMessageConverter￨4 .￨4 LF￨4 )￨4 ;￨4 out￨4 .￨4 write￨4 (￨4 payload￨4 )￨4 ;￨4 out￨4 .￨4 write￨4 (￨4 0￨4 )￨4 ;￨4 return￨4 out￨4 .￨4 toByteArray￨4 (￨4 )￨4 ;￨4 }￨3 catch￨3 (￨3 IOException￨4 e￨4 )￨3 {￨3 throw￨4 new￨4 StompConversionException￨4 (￨4 (￨4 "Failed<seq2seq4repair_space>to<seq2seq4repair_space>serialize<seq2seq4repair_space>"￨4 +￨4 message￨4 )￨4 ,￨4 e￨4 )￨4 ;￨4 }￨3 }￨2 private￨2 String￨2 replaceAllOutbound￨2 (￨2 String￨3 key￨3 )￨2 {￨2 }￨2 private￨2 class￨2 Parser￨2 {￨2 private￨3 final￨3 String￨3 content￨3 ;￨3 private￨3 int￨3 offset￨3 ;￨3 public￨3 Parser￨3 (￨3 String￨4 content￨4 )￨3 {￨3 }￨3 public￨3 boolean￨3 hasNext￨3 (￨3 )￨3 {￨3 }￨3 public￨3 String￨3 nextToken￨3 (￨3 byte￨4 delimiter￨4 )￨3 {￨3 }￨3 }￨2 }￨1
public￨1 class￨1 ParseStuff￨1 {￨1 private￨2 static￨2 boolean￨2 useNodeParser￨2 ;￨2 public￨2 static￨2 void￨2 main￨2 (￨2 String￨2 [￨2 ]￨2 args￨2 )￨2 throws￨2 RecognitionException￨2 (￨2 )￨2 {￨2 }￨2 public￨2 static￨2 void￨2 parseWithNodeParser￨2 (￨2 String￨2 s￨2 )￨2 throws￨2 RecognitionException￨2 (￨2 )￨2 {￨2 ANTLRStringStream￨3 stream￨3 =￨3 new￨3 ANTLRStringStream￨3 (￨3 s￨3 )￨3 ;￨3 Xpand3NodeLexer￨3 lexer￨3 =￨3 new￨3 Xpand3NodeLexer￨3 (￨3 stream￨3 )￨3 ;￨3 CommonTokenStream￨3 tokenStream￨3 =￨3 new￨3 CommonTokenStream￨3 (￨3 lexer￨3 )￨3 ;￨3 Xpand3NodeParser￨3 xpand3NodeParser￨3 =￨3 new￨3 Xpand3NodeParser￨3 (￨3 tokenStream￨3 )￨3 ;￨3 <START_BUG>￨3 Node￨3 rootNode￨3 =￨3 xpand3NodeParser￨3 .￨3 file￨3 (￨3 )￨3 ;￨3 <END_BUG>￨3 Node2AstTransformer￨3 node2AstTransformer￨3 =￨3 new￨3 Node2AstTransformer￨3 (￨3 )￨3 ;￨3 node2AstTransformer￨3 .￨3 doSwitch￨3 (￨3 rootNode￨3 )￨3 ;￨3 }￨2 private￨2 static￨2 void￨2 checkFor￨2 (￨2 int￨2 extensions￨2 )￨2 throws￨2 RecognitionException￨2 (￨2 )￨2 {￨2 }￨2 }￨1
public￨1 class￨1 Jdk14RegexpRegexp￨1 extends￨1 Jdk14RegexpMatcher￨1 implements￨1 Regexp￨1 {￨1 public￨2 Jdk14RegexpRegexp￨2 (￨2 )￨2 {￨2 }￨2 protected￨2 int￨2 getSubsOptions￨2 (￨2 int￨3 options￨3 )￨2 {￨2 }￨2 public￨2 String￨2 substitute￨2 (￨2 String￨2 input￨2 ,￨2 String￨2 argument￨2 ,￨2 int￨2 options￨2 )￨2 throws￨2 BuildException￨2 (￨2 )￨2 {￨2 StringBuffer￨3 subst￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 for￨3 (￨3 int￨4 i￨4 =￨4 0￨4 ;￨4 i￨4 <￨4 (￨4 argument￨4 .￨4 length￨4 (￨4 )￨4 )￨4 ;￨4 i￨4 ++￨4 )￨3 {￨3 char￨4 c￨4 =￨4 argument￨4 .￨4 charAt￨4 (￨4 i￨4 )￨4 ;￨4 if￨4 (￨4 c￨5 ==￨5 '\\'￨5 )￨4 {￨4 if￨5 (￨5 (￨6 ++￨6 i￨6 )￨6 <￨6 (￨6 argument￨6 .￨6 length￨6 (￨6 )￨6 )￨6 )￨5 {￨5 c￨6 =￨6 argument￨6 .￨6 charAt￨6 (￨6 i￨6 )￨6 ;￨6 int￨6 value￨6 =￨6 Character￨6 .￨6 digit￨6 (￨6 c￨6 ,￨6 10￨6 )￨6 ;￨6 if￨6 (￨6 value￨7 >￨7 (￨7 -￨7 1￨7 )￨7 )￨6 {￨6 <START_BUG>￨7 subst￨7 .￨7 append￨7 (￨7 "$("￨7 )￨7 .￨7 append￨7 (￨7 value￨7 )￨7 .￨7 append￨7 (￨7 ")"￨7 )￨7 ;￨7 <END_BUG>￨7 }￨6 else￨6 {￨6 subst￨7 .￨7 append￨7 (￨7 c￨7 )￨7 ;￨7 }￨6 }￨5 else￨5 {￨5 subst￨6 .￨6 append￨6 (￨6 '\\'￨6 )￨6 ;￨6 }￨5 }￨4 else￨4 {￨4 subst￨5 .￨5 append￨5 (￨5 c￨5 )￨5 ;￨5 }￨4 }￨3 argument￨3 =￨3 subst￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 int￨3 sOptions￨3 =￨3 getSubsOptions￨3 (￨3 options￨3 )￨3 ;￨3 Pattern￨3 p￨3 =￨3 getCompiledPattern￨3 (￨3 options￨3 )￨3 ;￨3 StringBuffer￨3 sb￨3 =￨3 new￨3 StringBuffer￨3 (￨3 )￨3 ;￨3 Matcher￨3 m￨3 =￨3 p￨3 .￨3 matcher￨3 (￨3 input￨3 )￨3 ;￨3 if￨3 (￨3 RegexpUtil￨4 .￨4 hasFlag￨4 (￨4 sOptions￨4 ,￨4 REPLACE_ALL￨4 )￨4 )￨3 {￨3 sb￨4 .￨4 append￨4 (￨4 m￨4 .￨4 replaceAll￨4 (￨4 argument￨4 )￨4 )￨4 ;￨4 }￨3 else￨3 {￨3 boolean￨4 res￨4 =￨4 m￨4 .￨4 find￨4 (￨4 )￨4 ;￨4 if￨4 (￨4 res￨5 )￨4 {￨4 m￨5 .￨5 appendReplacement￨5 (￨5 sb￨5 ,￨5 argument￨5 )￨5 ;￨5 m￨5 .￨5 appendTail￨5 (￨5 sb￨5 )￨5 ;￨5 }￨4 else￨4 {￨4 sb￨5 .￨5 append￨5 (￨5 input￨5 )￨5 ;￨5 }￨4 }￨3 return￨3 sb￨3 .￨3 toString￨3 (￨3 )￨3 ;￨3 }￨2 }￨1
